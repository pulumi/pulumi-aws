// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package inspector2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type FilterFilterCriteria struct {
	// (Optional) The AWS account ID in which the finding was generated. Documented below.
	AwsAccountIds []FilterFilterCriteriaAwsAccountId `pulumi:"awsAccountIds"`
	// (Optional) The ID of the component. Documented below.
	CodeVulnerabilityDetectorNames []FilterFilterCriteriaCodeVulnerabilityDetectorName `pulumi:"codeVulnerabilityDetectorNames"`
	// (Optional) The ID of the component. Documented below.
	CodeVulnerabilityDetectorTags []FilterFilterCriteriaCodeVulnerabilityDetectorTag `pulumi:"codeVulnerabilityDetectorTags"`
	// (Optional) The ID of the component. Documented below.
	CodeVulnerabilityFilePaths []FilterFilterCriteriaCodeVulnerabilityFilePath `pulumi:"codeVulnerabilityFilePaths"`
	// (Optional) The ID of the component. Documented below.
	ComponentIds []FilterFilterCriteriaComponentId `pulumi:"componentIds"`
	// (Optional) The type of the component. Documented below.
	ComponentTypes []FilterFilterCriteriaComponentType `pulumi:"componentTypes"`
	// (Optional) The ID of the Amazon Machine Image (AMI). Documented below.
	Ec2InstanceImageIds []FilterFilterCriteriaEc2InstanceImageId `pulumi:"ec2InstanceImageIds"`
	// (Optional) The ID of the subnet. Documented below.
	Ec2InstanceSubnetIds []FilterFilterCriteriaEc2InstanceSubnetId `pulumi:"ec2InstanceSubnetIds"`
	// (Optional) The ID of the VPC. Documented below.
	Ec2InstanceVpcIds []FilterFilterCriteriaEc2InstanceVpcId `pulumi:"ec2InstanceVpcIds"`
	// (Optional) The architecture of the ECR image. Documented below.
	EcrImageArchitectures []FilterFilterCriteriaEcrImageArchitecture `pulumi:"ecrImageArchitectures"`
	// (Optional) The SHA256 hash of the ECR image. Documented below.
	EcrImageHashes []FilterFilterCriteriaEcrImageHash `pulumi:"ecrImageHashes"`
	// (Optional) The date range when the image was pushed. Documented below.
	EcrImagePushedAts []FilterFilterCriteriaEcrImagePushedAt `pulumi:"ecrImagePushedAts"`
	// (Optional) The registry of the ECR image. Documented below.
	EcrImageRegistries []FilterFilterCriteriaEcrImageRegistry `pulumi:"ecrImageRegistries"`
	// (Optional) The name of the ECR repository. Documented below.
	EcrImageRepositoryNames []FilterFilterCriteriaEcrImageRepositoryName `pulumi:"ecrImageRepositoryNames"`
	// (Optional) The tags associated with the ECR image. Documented below.
	EcrImageTags []FilterFilterCriteriaEcrImageTag `pulumi:"ecrImageTags"`
	// (Optional) EPSS (Exploit Prediction Scoring System) Score of the finding. Documented below.
	EpssScores []FilterFilterCriteriaEpssScore `pulumi:"epssScores"`
	// (Optional) Availability of exploits. Documented below.
	ExploitAvailables []FilterFilterCriteriaExploitAvailable `pulumi:"exploitAvailables"`
	// (Optional) The ARN of the finding. Documented below.
	FindingArns []FilterFilterCriteriaFindingArn `pulumi:"findingArns"`
	// (Optional) The status of the finding. Documented below.
	FindingStatuses []FilterFilterCriteriaFindingStatus `pulumi:"findingStatuses"`
	// (Optional) The type of the finding. Documented below.
	FindingTypes []FilterFilterCriteriaFindingType `pulumi:"findingTypes"`
	// (Optional) When the finding was first observed. Documented below.
	FirstObservedAts []FilterFilterCriteriaFirstObservedAt `pulumi:"firstObservedAts"`
	// (Optional) Availability of the fix. Documented below.
	FixAvailables []FilterFilterCriteriaFixAvailable `pulumi:"fixAvailables"`
	// (Optional) The Inspector score given to the finding. Documented below.
	InspectorScores []FilterFilterCriteriaInspectorScore `pulumi:"inspectorScores"`
	// (Optional) Lambda execution role ARN. Documented below.
	LambdaFunctionExecutionRoleArns []FilterFilterCriteriaLambdaFunctionExecutionRoleArn `pulumi:"lambdaFunctionExecutionRoleArns"`
	// (Optional) Last modified timestamp of the lambda function. Documented below.
	LambdaFunctionLastModifiedAts []FilterFilterCriteriaLambdaFunctionLastModifiedAt `pulumi:"lambdaFunctionLastModifiedAts"`
	// (Optional) Lambda function layers. Documented below.
	LambdaFunctionLayers []FilterFilterCriteriaLambdaFunctionLayer `pulumi:"lambdaFunctionLayers"`
	// (Optional) Lambda function name. Documented below.
	LambdaFunctionNames []FilterFilterCriteriaLambdaFunctionName `pulumi:"lambdaFunctionNames"`
	// (Optional) Lambda function runtime. Documented below.
	LambdaFunctionRuntimes []FilterFilterCriteriaLambdaFunctionRuntime `pulumi:"lambdaFunctionRuntimes"`
	// (Optional) When the finding was last observed. Documented below.
	LastObservedAts []FilterFilterCriteriaLastObservedAt `pulumi:"lastObservedAts"`
	// (Optional) The network protocol of the finding. Documented below.
	NetworkProtocols []FilterFilterCriteriaNetworkProtocol `pulumi:"networkProtocols"`
	// (Optional) The port range of the finding. Documented below.
	PortRanges []FilterFilterCriteriaPortRange `pulumi:"portRanges"`
	// (Optional) Related vulnerabilities. Documented below.
	RelatedVulnerabilities []FilterFilterCriteriaRelatedVulnerability `pulumi:"relatedVulnerabilities"`
	// (Optional) The ID of the resource. Documented below.
	ResourceIds []FilterFilterCriteriaResourceId `pulumi:"resourceIds"`
	// (Optional) The tags of the resource. Documented below.
	ResourceTags []FilterFilterCriteriaResourceTag `pulumi:"resourceTags"`
	// (Optional) The type of the resource. Documented below.
	ResourceTypes []FilterFilterCriteriaResourceType `pulumi:"resourceTypes"`
	// (Optional) The severity of the finding. Documented below.
	Severities []FilterFilterCriteriaSeverity `pulumi:"severities"`
	// (Optional) The title of the finding. Documented below.
	Titles []FilterFilterCriteriaTitle `pulumi:"titles"`
	// (Optional) When the finding was last updated. Documented below.
	UpdatedAts []FilterFilterCriteriaUpdatedAt `pulumi:"updatedAts"`
	// (Optional) The severity as reported by the vendor. Documented below.
	VendorSeverities []FilterFilterCriteriaVendorSeverity `pulumi:"vendorSeverities"`
	// (Optional) The ID of the vulnerability. Documented below.
	VulnerabilityIds []FilterFilterCriteriaVulnerabilityId `pulumi:"vulnerabilityIds"`
	// (Optional) The source of the vulnerability. Documented below.
	VulnerabilitySources []FilterFilterCriteriaVulnerabilitySource `pulumi:"vulnerabilitySources"`
	// (Optional) Details about vulnerable packages. Documented below.
	VulnerablePackages []FilterFilterCriteriaVulnerablePackage `pulumi:"vulnerablePackages"`
}

// FilterFilterCriteriaInput is an input type that accepts FilterFilterCriteriaArgs and FilterFilterCriteriaOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaInput` via:
//
//	FilterFilterCriteriaArgs{...}
type FilterFilterCriteriaInput interface {
	pulumi.Input

	ToFilterFilterCriteriaOutput() FilterFilterCriteriaOutput
	ToFilterFilterCriteriaOutputWithContext(context.Context) FilterFilterCriteriaOutput
}

type FilterFilterCriteriaArgs struct {
	// (Optional) The AWS account ID in which the finding was generated. Documented below.
	AwsAccountIds FilterFilterCriteriaAwsAccountIdArrayInput `pulumi:"awsAccountIds"`
	// (Optional) The ID of the component. Documented below.
	CodeVulnerabilityDetectorNames FilterFilterCriteriaCodeVulnerabilityDetectorNameArrayInput `pulumi:"codeVulnerabilityDetectorNames"`
	// (Optional) The ID of the component. Documented below.
	CodeVulnerabilityDetectorTags FilterFilterCriteriaCodeVulnerabilityDetectorTagArrayInput `pulumi:"codeVulnerabilityDetectorTags"`
	// (Optional) The ID of the component. Documented below.
	CodeVulnerabilityFilePaths FilterFilterCriteriaCodeVulnerabilityFilePathArrayInput `pulumi:"codeVulnerabilityFilePaths"`
	// (Optional) The ID of the component. Documented below.
	ComponentIds FilterFilterCriteriaComponentIdArrayInput `pulumi:"componentIds"`
	// (Optional) The type of the component. Documented below.
	ComponentTypes FilterFilterCriteriaComponentTypeArrayInput `pulumi:"componentTypes"`
	// (Optional) The ID of the Amazon Machine Image (AMI). Documented below.
	Ec2InstanceImageIds FilterFilterCriteriaEc2InstanceImageIdArrayInput `pulumi:"ec2InstanceImageIds"`
	// (Optional) The ID of the subnet. Documented below.
	Ec2InstanceSubnetIds FilterFilterCriteriaEc2InstanceSubnetIdArrayInput `pulumi:"ec2InstanceSubnetIds"`
	// (Optional) The ID of the VPC. Documented below.
	Ec2InstanceVpcIds FilterFilterCriteriaEc2InstanceVpcIdArrayInput `pulumi:"ec2InstanceVpcIds"`
	// (Optional) The architecture of the ECR image. Documented below.
	EcrImageArchitectures FilterFilterCriteriaEcrImageArchitectureArrayInput `pulumi:"ecrImageArchitectures"`
	// (Optional) The SHA256 hash of the ECR image. Documented below.
	EcrImageHashes FilterFilterCriteriaEcrImageHashArrayInput `pulumi:"ecrImageHashes"`
	// (Optional) The date range when the image was pushed. Documented below.
	EcrImagePushedAts FilterFilterCriteriaEcrImagePushedAtArrayInput `pulumi:"ecrImagePushedAts"`
	// (Optional) The registry of the ECR image. Documented below.
	EcrImageRegistries FilterFilterCriteriaEcrImageRegistryArrayInput `pulumi:"ecrImageRegistries"`
	// (Optional) The name of the ECR repository. Documented below.
	EcrImageRepositoryNames FilterFilterCriteriaEcrImageRepositoryNameArrayInput `pulumi:"ecrImageRepositoryNames"`
	// (Optional) The tags associated with the ECR image. Documented below.
	EcrImageTags FilterFilterCriteriaEcrImageTagArrayInput `pulumi:"ecrImageTags"`
	// (Optional) EPSS (Exploit Prediction Scoring System) Score of the finding. Documented below.
	EpssScores FilterFilterCriteriaEpssScoreArrayInput `pulumi:"epssScores"`
	// (Optional) Availability of exploits. Documented below.
	ExploitAvailables FilterFilterCriteriaExploitAvailableArrayInput `pulumi:"exploitAvailables"`
	// (Optional) The ARN of the finding. Documented below.
	FindingArns FilterFilterCriteriaFindingArnArrayInput `pulumi:"findingArns"`
	// (Optional) The status of the finding. Documented below.
	FindingStatuses FilterFilterCriteriaFindingStatusArrayInput `pulumi:"findingStatuses"`
	// (Optional) The type of the finding. Documented below.
	FindingTypes FilterFilterCriteriaFindingTypeArrayInput `pulumi:"findingTypes"`
	// (Optional) When the finding was first observed. Documented below.
	FirstObservedAts FilterFilterCriteriaFirstObservedAtArrayInput `pulumi:"firstObservedAts"`
	// (Optional) Availability of the fix. Documented below.
	FixAvailables FilterFilterCriteriaFixAvailableArrayInput `pulumi:"fixAvailables"`
	// (Optional) The Inspector score given to the finding. Documented below.
	InspectorScores FilterFilterCriteriaInspectorScoreArrayInput `pulumi:"inspectorScores"`
	// (Optional) Lambda execution role ARN. Documented below.
	LambdaFunctionExecutionRoleArns FilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayInput `pulumi:"lambdaFunctionExecutionRoleArns"`
	// (Optional) Last modified timestamp of the lambda function. Documented below.
	LambdaFunctionLastModifiedAts FilterFilterCriteriaLambdaFunctionLastModifiedAtArrayInput `pulumi:"lambdaFunctionLastModifiedAts"`
	// (Optional) Lambda function layers. Documented below.
	LambdaFunctionLayers FilterFilterCriteriaLambdaFunctionLayerArrayInput `pulumi:"lambdaFunctionLayers"`
	// (Optional) Lambda function name. Documented below.
	LambdaFunctionNames FilterFilterCriteriaLambdaFunctionNameArrayInput `pulumi:"lambdaFunctionNames"`
	// (Optional) Lambda function runtime. Documented below.
	LambdaFunctionRuntimes FilterFilterCriteriaLambdaFunctionRuntimeArrayInput `pulumi:"lambdaFunctionRuntimes"`
	// (Optional) When the finding was last observed. Documented below.
	LastObservedAts FilterFilterCriteriaLastObservedAtArrayInput `pulumi:"lastObservedAts"`
	// (Optional) The network protocol of the finding. Documented below.
	NetworkProtocols FilterFilterCriteriaNetworkProtocolArrayInput `pulumi:"networkProtocols"`
	// (Optional) The port range of the finding. Documented below.
	PortRanges FilterFilterCriteriaPortRangeArrayInput `pulumi:"portRanges"`
	// (Optional) Related vulnerabilities. Documented below.
	RelatedVulnerabilities FilterFilterCriteriaRelatedVulnerabilityArrayInput `pulumi:"relatedVulnerabilities"`
	// (Optional) The ID of the resource. Documented below.
	ResourceIds FilterFilterCriteriaResourceIdArrayInput `pulumi:"resourceIds"`
	// (Optional) The tags of the resource. Documented below.
	ResourceTags FilterFilterCriteriaResourceTagArrayInput `pulumi:"resourceTags"`
	// (Optional) The type of the resource. Documented below.
	ResourceTypes FilterFilterCriteriaResourceTypeArrayInput `pulumi:"resourceTypes"`
	// (Optional) The severity of the finding. Documented below.
	Severities FilterFilterCriteriaSeverityArrayInput `pulumi:"severities"`
	// (Optional) The title of the finding. Documented below.
	Titles FilterFilterCriteriaTitleArrayInput `pulumi:"titles"`
	// (Optional) When the finding was last updated. Documented below.
	UpdatedAts FilterFilterCriteriaUpdatedAtArrayInput `pulumi:"updatedAts"`
	// (Optional) The severity as reported by the vendor. Documented below.
	VendorSeverities FilterFilterCriteriaVendorSeverityArrayInput `pulumi:"vendorSeverities"`
	// (Optional) The ID of the vulnerability. Documented below.
	VulnerabilityIds FilterFilterCriteriaVulnerabilityIdArrayInput `pulumi:"vulnerabilityIds"`
	// (Optional) The source of the vulnerability. Documented below.
	VulnerabilitySources FilterFilterCriteriaVulnerabilitySourceArrayInput `pulumi:"vulnerabilitySources"`
	// (Optional) Details about vulnerable packages. Documented below.
	VulnerablePackages FilterFilterCriteriaVulnerablePackageArrayInput `pulumi:"vulnerablePackages"`
}

func (FilterFilterCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteria)(nil)).Elem()
}

func (i FilterFilterCriteriaArgs) ToFilterFilterCriteriaOutput() FilterFilterCriteriaOutput {
	return i.ToFilterFilterCriteriaOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaArgs) ToFilterFilterCriteriaOutputWithContext(ctx context.Context) FilterFilterCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaOutput)
}

// FilterFilterCriteriaArrayInput is an input type that accepts FilterFilterCriteriaArray and FilterFilterCriteriaArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaArrayInput` via:
//
//	FilterFilterCriteriaArray{ FilterFilterCriteriaArgs{...} }
type FilterFilterCriteriaArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaArrayOutput() FilterFilterCriteriaArrayOutput
	ToFilterFilterCriteriaArrayOutputWithContext(context.Context) FilterFilterCriteriaArrayOutput
}

type FilterFilterCriteriaArray []FilterFilterCriteriaInput

func (FilterFilterCriteriaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteria)(nil)).Elem()
}

func (i FilterFilterCriteriaArray) ToFilterFilterCriteriaArrayOutput() FilterFilterCriteriaArrayOutput {
	return i.ToFilterFilterCriteriaArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaArray) ToFilterFilterCriteriaArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaArrayOutput)
}

type FilterFilterCriteriaOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteria)(nil)).Elem()
}

func (o FilterFilterCriteriaOutput) ToFilterFilterCriteriaOutput() FilterFilterCriteriaOutput {
	return o
}

func (o FilterFilterCriteriaOutput) ToFilterFilterCriteriaOutputWithContext(ctx context.Context) FilterFilterCriteriaOutput {
	return o
}

// (Optional) The AWS account ID in which the finding was generated. Documented below.
func (o FilterFilterCriteriaOutput) AwsAccountIds() FilterFilterCriteriaAwsAccountIdArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaAwsAccountId { return v.AwsAccountIds }).(FilterFilterCriteriaAwsAccountIdArrayOutput)
}

// (Optional) The ID of the component. Documented below.
func (o FilterFilterCriteriaOutput) CodeVulnerabilityDetectorNames() FilterFilterCriteriaCodeVulnerabilityDetectorNameArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaCodeVulnerabilityDetectorName {
		return v.CodeVulnerabilityDetectorNames
	}).(FilterFilterCriteriaCodeVulnerabilityDetectorNameArrayOutput)
}

// (Optional) The ID of the component. Documented below.
func (o FilterFilterCriteriaOutput) CodeVulnerabilityDetectorTags() FilterFilterCriteriaCodeVulnerabilityDetectorTagArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaCodeVulnerabilityDetectorTag {
		return v.CodeVulnerabilityDetectorTags
	}).(FilterFilterCriteriaCodeVulnerabilityDetectorTagArrayOutput)
}

// (Optional) The ID of the component. Documented below.
func (o FilterFilterCriteriaOutput) CodeVulnerabilityFilePaths() FilterFilterCriteriaCodeVulnerabilityFilePathArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaCodeVulnerabilityFilePath {
		return v.CodeVulnerabilityFilePaths
	}).(FilterFilterCriteriaCodeVulnerabilityFilePathArrayOutput)
}

// (Optional) The ID of the component. Documented below.
func (o FilterFilterCriteriaOutput) ComponentIds() FilterFilterCriteriaComponentIdArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaComponentId { return v.ComponentIds }).(FilterFilterCriteriaComponentIdArrayOutput)
}

// (Optional) The type of the component. Documented below.
func (o FilterFilterCriteriaOutput) ComponentTypes() FilterFilterCriteriaComponentTypeArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaComponentType { return v.ComponentTypes }).(FilterFilterCriteriaComponentTypeArrayOutput)
}

// (Optional) The ID of the Amazon Machine Image (AMI). Documented below.
func (o FilterFilterCriteriaOutput) Ec2InstanceImageIds() FilterFilterCriteriaEc2InstanceImageIdArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaEc2InstanceImageId { return v.Ec2InstanceImageIds }).(FilterFilterCriteriaEc2InstanceImageIdArrayOutput)
}

// (Optional) The ID of the subnet. Documented below.
func (o FilterFilterCriteriaOutput) Ec2InstanceSubnetIds() FilterFilterCriteriaEc2InstanceSubnetIdArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaEc2InstanceSubnetId { return v.Ec2InstanceSubnetIds }).(FilterFilterCriteriaEc2InstanceSubnetIdArrayOutput)
}

// (Optional) The ID of the VPC. Documented below.
func (o FilterFilterCriteriaOutput) Ec2InstanceVpcIds() FilterFilterCriteriaEc2InstanceVpcIdArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaEc2InstanceVpcId { return v.Ec2InstanceVpcIds }).(FilterFilterCriteriaEc2InstanceVpcIdArrayOutput)
}

// (Optional) The architecture of the ECR image. Documented below.
func (o FilterFilterCriteriaOutput) EcrImageArchitectures() FilterFilterCriteriaEcrImageArchitectureArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaEcrImageArchitecture {
		return v.EcrImageArchitectures
	}).(FilterFilterCriteriaEcrImageArchitectureArrayOutput)
}

// (Optional) The SHA256 hash of the ECR image. Documented below.
func (o FilterFilterCriteriaOutput) EcrImageHashes() FilterFilterCriteriaEcrImageHashArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaEcrImageHash { return v.EcrImageHashes }).(FilterFilterCriteriaEcrImageHashArrayOutput)
}

// (Optional) The date range when the image was pushed. Documented below.
func (o FilterFilterCriteriaOutput) EcrImagePushedAts() FilterFilterCriteriaEcrImagePushedAtArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaEcrImagePushedAt { return v.EcrImagePushedAts }).(FilterFilterCriteriaEcrImagePushedAtArrayOutput)
}

// (Optional) The registry of the ECR image. Documented below.
func (o FilterFilterCriteriaOutput) EcrImageRegistries() FilterFilterCriteriaEcrImageRegistryArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaEcrImageRegistry { return v.EcrImageRegistries }).(FilterFilterCriteriaEcrImageRegistryArrayOutput)
}

// (Optional) The name of the ECR repository. Documented below.
func (o FilterFilterCriteriaOutput) EcrImageRepositoryNames() FilterFilterCriteriaEcrImageRepositoryNameArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaEcrImageRepositoryName {
		return v.EcrImageRepositoryNames
	}).(FilterFilterCriteriaEcrImageRepositoryNameArrayOutput)
}

// (Optional) The tags associated with the ECR image. Documented below.
func (o FilterFilterCriteriaOutput) EcrImageTags() FilterFilterCriteriaEcrImageTagArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaEcrImageTag { return v.EcrImageTags }).(FilterFilterCriteriaEcrImageTagArrayOutput)
}

// (Optional) EPSS (Exploit Prediction Scoring System) Score of the finding. Documented below.
func (o FilterFilterCriteriaOutput) EpssScores() FilterFilterCriteriaEpssScoreArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaEpssScore { return v.EpssScores }).(FilterFilterCriteriaEpssScoreArrayOutput)
}

// (Optional) Availability of exploits. Documented below.
func (o FilterFilterCriteriaOutput) ExploitAvailables() FilterFilterCriteriaExploitAvailableArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaExploitAvailable { return v.ExploitAvailables }).(FilterFilterCriteriaExploitAvailableArrayOutput)
}

// (Optional) The ARN of the finding. Documented below.
func (o FilterFilterCriteriaOutput) FindingArns() FilterFilterCriteriaFindingArnArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaFindingArn { return v.FindingArns }).(FilterFilterCriteriaFindingArnArrayOutput)
}

// (Optional) The status of the finding. Documented below.
func (o FilterFilterCriteriaOutput) FindingStatuses() FilterFilterCriteriaFindingStatusArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaFindingStatus { return v.FindingStatuses }).(FilterFilterCriteriaFindingStatusArrayOutput)
}

// (Optional) The type of the finding. Documented below.
func (o FilterFilterCriteriaOutput) FindingTypes() FilterFilterCriteriaFindingTypeArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaFindingType { return v.FindingTypes }).(FilterFilterCriteriaFindingTypeArrayOutput)
}

// (Optional) When the finding was first observed. Documented below.
func (o FilterFilterCriteriaOutput) FirstObservedAts() FilterFilterCriteriaFirstObservedAtArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaFirstObservedAt { return v.FirstObservedAts }).(FilterFilterCriteriaFirstObservedAtArrayOutput)
}

// (Optional) Availability of the fix. Documented below.
func (o FilterFilterCriteriaOutput) FixAvailables() FilterFilterCriteriaFixAvailableArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaFixAvailable { return v.FixAvailables }).(FilterFilterCriteriaFixAvailableArrayOutput)
}

// (Optional) The Inspector score given to the finding. Documented below.
func (o FilterFilterCriteriaOutput) InspectorScores() FilterFilterCriteriaInspectorScoreArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaInspectorScore { return v.InspectorScores }).(FilterFilterCriteriaInspectorScoreArrayOutput)
}

// (Optional) Lambda execution role ARN. Documented below.
func (o FilterFilterCriteriaOutput) LambdaFunctionExecutionRoleArns() FilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaLambdaFunctionExecutionRoleArn {
		return v.LambdaFunctionExecutionRoleArns
	}).(FilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayOutput)
}

// (Optional) Last modified timestamp of the lambda function. Documented below.
func (o FilterFilterCriteriaOutput) LambdaFunctionLastModifiedAts() FilterFilterCriteriaLambdaFunctionLastModifiedAtArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaLambdaFunctionLastModifiedAt {
		return v.LambdaFunctionLastModifiedAts
	}).(FilterFilterCriteriaLambdaFunctionLastModifiedAtArrayOutput)
}

// (Optional) Lambda function layers. Documented below.
func (o FilterFilterCriteriaOutput) LambdaFunctionLayers() FilterFilterCriteriaLambdaFunctionLayerArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaLambdaFunctionLayer { return v.LambdaFunctionLayers }).(FilterFilterCriteriaLambdaFunctionLayerArrayOutput)
}

// (Optional) Lambda function name. Documented below.
func (o FilterFilterCriteriaOutput) LambdaFunctionNames() FilterFilterCriteriaLambdaFunctionNameArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaLambdaFunctionName { return v.LambdaFunctionNames }).(FilterFilterCriteriaLambdaFunctionNameArrayOutput)
}

// (Optional) Lambda function runtime. Documented below.
func (o FilterFilterCriteriaOutput) LambdaFunctionRuntimes() FilterFilterCriteriaLambdaFunctionRuntimeArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaLambdaFunctionRuntime {
		return v.LambdaFunctionRuntimes
	}).(FilterFilterCriteriaLambdaFunctionRuntimeArrayOutput)
}

// (Optional) When the finding was last observed. Documented below.
func (o FilterFilterCriteriaOutput) LastObservedAts() FilterFilterCriteriaLastObservedAtArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaLastObservedAt { return v.LastObservedAts }).(FilterFilterCriteriaLastObservedAtArrayOutput)
}

// (Optional) The network protocol of the finding. Documented below.
func (o FilterFilterCriteriaOutput) NetworkProtocols() FilterFilterCriteriaNetworkProtocolArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaNetworkProtocol { return v.NetworkProtocols }).(FilterFilterCriteriaNetworkProtocolArrayOutput)
}

// (Optional) The port range of the finding. Documented below.
func (o FilterFilterCriteriaOutput) PortRanges() FilterFilterCriteriaPortRangeArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaPortRange { return v.PortRanges }).(FilterFilterCriteriaPortRangeArrayOutput)
}

// (Optional) Related vulnerabilities. Documented below.
func (o FilterFilterCriteriaOutput) RelatedVulnerabilities() FilterFilterCriteriaRelatedVulnerabilityArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaRelatedVulnerability {
		return v.RelatedVulnerabilities
	}).(FilterFilterCriteriaRelatedVulnerabilityArrayOutput)
}

// (Optional) The ID of the resource. Documented below.
func (o FilterFilterCriteriaOutput) ResourceIds() FilterFilterCriteriaResourceIdArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaResourceId { return v.ResourceIds }).(FilterFilterCriteriaResourceIdArrayOutput)
}

// (Optional) The tags of the resource. Documented below.
func (o FilterFilterCriteriaOutput) ResourceTags() FilterFilterCriteriaResourceTagArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaResourceTag { return v.ResourceTags }).(FilterFilterCriteriaResourceTagArrayOutput)
}

// (Optional) The type of the resource. Documented below.
func (o FilterFilterCriteriaOutput) ResourceTypes() FilterFilterCriteriaResourceTypeArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaResourceType { return v.ResourceTypes }).(FilterFilterCriteriaResourceTypeArrayOutput)
}

// (Optional) The severity of the finding. Documented below.
func (o FilterFilterCriteriaOutput) Severities() FilterFilterCriteriaSeverityArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaSeverity { return v.Severities }).(FilterFilterCriteriaSeverityArrayOutput)
}

// (Optional) The title of the finding. Documented below.
func (o FilterFilterCriteriaOutput) Titles() FilterFilterCriteriaTitleArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaTitle { return v.Titles }).(FilterFilterCriteriaTitleArrayOutput)
}

// (Optional) When the finding was last updated. Documented below.
func (o FilterFilterCriteriaOutput) UpdatedAts() FilterFilterCriteriaUpdatedAtArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaUpdatedAt { return v.UpdatedAts }).(FilterFilterCriteriaUpdatedAtArrayOutput)
}

// (Optional) The severity as reported by the vendor. Documented below.
func (o FilterFilterCriteriaOutput) VendorSeverities() FilterFilterCriteriaVendorSeverityArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaVendorSeverity { return v.VendorSeverities }).(FilterFilterCriteriaVendorSeverityArrayOutput)
}

// (Optional) The ID of the vulnerability. Documented below.
func (o FilterFilterCriteriaOutput) VulnerabilityIds() FilterFilterCriteriaVulnerabilityIdArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaVulnerabilityId { return v.VulnerabilityIds }).(FilterFilterCriteriaVulnerabilityIdArrayOutput)
}

// (Optional) The source of the vulnerability. Documented below.
func (o FilterFilterCriteriaOutput) VulnerabilitySources() FilterFilterCriteriaVulnerabilitySourceArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaVulnerabilitySource { return v.VulnerabilitySources }).(FilterFilterCriteriaVulnerabilitySourceArrayOutput)
}

// (Optional) Details about vulnerable packages. Documented below.
func (o FilterFilterCriteriaOutput) VulnerablePackages() FilterFilterCriteriaVulnerablePackageArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteria) []FilterFilterCriteriaVulnerablePackage { return v.VulnerablePackages }).(FilterFilterCriteriaVulnerablePackageArrayOutput)
}

type FilterFilterCriteriaArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteria)(nil)).Elem()
}

func (o FilterFilterCriteriaArrayOutput) ToFilterFilterCriteriaArrayOutput() FilterFilterCriteriaArrayOutput {
	return o
}

func (o FilterFilterCriteriaArrayOutput) ToFilterFilterCriteriaArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaArrayOutput {
	return o
}

func (o FilterFilterCriteriaArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteria {
		return vs[0].([]FilterFilterCriteria)[vs[1].(int)]
	}).(FilterFilterCriteriaOutput)
}

type FilterFilterCriteriaAwsAccountId struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaAwsAccountIdInput is an input type that accepts FilterFilterCriteriaAwsAccountIdArgs and FilterFilterCriteriaAwsAccountIdOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaAwsAccountIdInput` via:
//
//	FilterFilterCriteriaAwsAccountIdArgs{...}
type FilterFilterCriteriaAwsAccountIdInput interface {
	pulumi.Input

	ToFilterFilterCriteriaAwsAccountIdOutput() FilterFilterCriteriaAwsAccountIdOutput
	ToFilterFilterCriteriaAwsAccountIdOutputWithContext(context.Context) FilterFilterCriteriaAwsAccountIdOutput
}

type FilterFilterCriteriaAwsAccountIdArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaAwsAccountIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaAwsAccountId)(nil)).Elem()
}

func (i FilterFilterCriteriaAwsAccountIdArgs) ToFilterFilterCriteriaAwsAccountIdOutput() FilterFilterCriteriaAwsAccountIdOutput {
	return i.ToFilterFilterCriteriaAwsAccountIdOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaAwsAccountIdArgs) ToFilterFilterCriteriaAwsAccountIdOutputWithContext(ctx context.Context) FilterFilterCriteriaAwsAccountIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaAwsAccountIdOutput)
}

// FilterFilterCriteriaAwsAccountIdArrayInput is an input type that accepts FilterFilterCriteriaAwsAccountIdArray and FilterFilterCriteriaAwsAccountIdArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaAwsAccountIdArrayInput` via:
//
//	FilterFilterCriteriaAwsAccountIdArray{ FilterFilterCriteriaAwsAccountIdArgs{...} }
type FilterFilterCriteriaAwsAccountIdArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaAwsAccountIdArrayOutput() FilterFilterCriteriaAwsAccountIdArrayOutput
	ToFilterFilterCriteriaAwsAccountIdArrayOutputWithContext(context.Context) FilterFilterCriteriaAwsAccountIdArrayOutput
}

type FilterFilterCriteriaAwsAccountIdArray []FilterFilterCriteriaAwsAccountIdInput

func (FilterFilterCriteriaAwsAccountIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaAwsAccountId)(nil)).Elem()
}

func (i FilterFilterCriteriaAwsAccountIdArray) ToFilterFilterCriteriaAwsAccountIdArrayOutput() FilterFilterCriteriaAwsAccountIdArrayOutput {
	return i.ToFilterFilterCriteriaAwsAccountIdArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaAwsAccountIdArray) ToFilterFilterCriteriaAwsAccountIdArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaAwsAccountIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaAwsAccountIdArrayOutput)
}

type FilterFilterCriteriaAwsAccountIdOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaAwsAccountIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaAwsAccountId)(nil)).Elem()
}

func (o FilterFilterCriteriaAwsAccountIdOutput) ToFilterFilterCriteriaAwsAccountIdOutput() FilterFilterCriteriaAwsAccountIdOutput {
	return o
}

func (o FilterFilterCriteriaAwsAccountIdOutput) ToFilterFilterCriteriaAwsAccountIdOutputWithContext(ctx context.Context) FilterFilterCriteriaAwsAccountIdOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaAwsAccountIdOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaAwsAccountId) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaAwsAccountIdOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaAwsAccountId) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaAwsAccountIdArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaAwsAccountIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaAwsAccountId)(nil)).Elem()
}

func (o FilterFilterCriteriaAwsAccountIdArrayOutput) ToFilterFilterCriteriaAwsAccountIdArrayOutput() FilterFilterCriteriaAwsAccountIdArrayOutput {
	return o
}

func (o FilterFilterCriteriaAwsAccountIdArrayOutput) ToFilterFilterCriteriaAwsAccountIdArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaAwsAccountIdArrayOutput {
	return o
}

func (o FilterFilterCriteriaAwsAccountIdArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaAwsAccountIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaAwsAccountId {
		return vs[0].([]FilterFilterCriteriaAwsAccountId)[vs[1].(int)]
	}).(FilterFilterCriteriaAwsAccountIdOutput)
}

type FilterFilterCriteriaCodeVulnerabilityDetectorName struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaCodeVulnerabilityDetectorNameInput is an input type that accepts FilterFilterCriteriaCodeVulnerabilityDetectorNameArgs and FilterFilterCriteriaCodeVulnerabilityDetectorNameOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaCodeVulnerabilityDetectorNameInput` via:
//
//	FilterFilterCriteriaCodeVulnerabilityDetectorNameArgs{...}
type FilterFilterCriteriaCodeVulnerabilityDetectorNameInput interface {
	pulumi.Input

	ToFilterFilterCriteriaCodeVulnerabilityDetectorNameOutput() FilterFilterCriteriaCodeVulnerabilityDetectorNameOutput
	ToFilterFilterCriteriaCodeVulnerabilityDetectorNameOutputWithContext(context.Context) FilterFilterCriteriaCodeVulnerabilityDetectorNameOutput
}

type FilterFilterCriteriaCodeVulnerabilityDetectorNameArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaCodeVulnerabilityDetectorNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaCodeVulnerabilityDetectorName)(nil)).Elem()
}

func (i FilterFilterCriteriaCodeVulnerabilityDetectorNameArgs) ToFilterFilterCriteriaCodeVulnerabilityDetectorNameOutput() FilterFilterCriteriaCodeVulnerabilityDetectorNameOutput {
	return i.ToFilterFilterCriteriaCodeVulnerabilityDetectorNameOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaCodeVulnerabilityDetectorNameArgs) ToFilterFilterCriteriaCodeVulnerabilityDetectorNameOutputWithContext(ctx context.Context) FilterFilterCriteriaCodeVulnerabilityDetectorNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaCodeVulnerabilityDetectorNameOutput)
}

// FilterFilterCriteriaCodeVulnerabilityDetectorNameArrayInput is an input type that accepts FilterFilterCriteriaCodeVulnerabilityDetectorNameArray and FilterFilterCriteriaCodeVulnerabilityDetectorNameArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaCodeVulnerabilityDetectorNameArrayInput` via:
//
//	FilterFilterCriteriaCodeVulnerabilityDetectorNameArray{ FilterFilterCriteriaCodeVulnerabilityDetectorNameArgs{...} }
type FilterFilterCriteriaCodeVulnerabilityDetectorNameArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaCodeVulnerabilityDetectorNameArrayOutput() FilterFilterCriteriaCodeVulnerabilityDetectorNameArrayOutput
	ToFilterFilterCriteriaCodeVulnerabilityDetectorNameArrayOutputWithContext(context.Context) FilterFilterCriteriaCodeVulnerabilityDetectorNameArrayOutput
}

type FilterFilterCriteriaCodeVulnerabilityDetectorNameArray []FilterFilterCriteriaCodeVulnerabilityDetectorNameInput

func (FilterFilterCriteriaCodeVulnerabilityDetectorNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaCodeVulnerabilityDetectorName)(nil)).Elem()
}

func (i FilterFilterCriteriaCodeVulnerabilityDetectorNameArray) ToFilterFilterCriteriaCodeVulnerabilityDetectorNameArrayOutput() FilterFilterCriteriaCodeVulnerabilityDetectorNameArrayOutput {
	return i.ToFilterFilterCriteriaCodeVulnerabilityDetectorNameArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaCodeVulnerabilityDetectorNameArray) ToFilterFilterCriteriaCodeVulnerabilityDetectorNameArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaCodeVulnerabilityDetectorNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaCodeVulnerabilityDetectorNameArrayOutput)
}

type FilterFilterCriteriaCodeVulnerabilityDetectorNameOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaCodeVulnerabilityDetectorNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaCodeVulnerabilityDetectorName)(nil)).Elem()
}

func (o FilterFilterCriteriaCodeVulnerabilityDetectorNameOutput) ToFilterFilterCriteriaCodeVulnerabilityDetectorNameOutput() FilterFilterCriteriaCodeVulnerabilityDetectorNameOutput {
	return o
}

func (o FilterFilterCriteriaCodeVulnerabilityDetectorNameOutput) ToFilterFilterCriteriaCodeVulnerabilityDetectorNameOutputWithContext(ctx context.Context) FilterFilterCriteriaCodeVulnerabilityDetectorNameOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaCodeVulnerabilityDetectorNameOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaCodeVulnerabilityDetectorName) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaCodeVulnerabilityDetectorNameOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaCodeVulnerabilityDetectorName) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaCodeVulnerabilityDetectorNameArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaCodeVulnerabilityDetectorNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaCodeVulnerabilityDetectorName)(nil)).Elem()
}

func (o FilterFilterCriteriaCodeVulnerabilityDetectorNameArrayOutput) ToFilterFilterCriteriaCodeVulnerabilityDetectorNameArrayOutput() FilterFilterCriteriaCodeVulnerabilityDetectorNameArrayOutput {
	return o
}

func (o FilterFilterCriteriaCodeVulnerabilityDetectorNameArrayOutput) ToFilterFilterCriteriaCodeVulnerabilityDetectorNameArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaCodeVulnerabilityDetectorNameArrayOutput {
	return o
}

func (o FilterFilterCriteriaCodeVulnerabilityDetectorNameArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaCodeVulnerabilityDetectorNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaCodeVulnerabilityDetectorName {
		return vs[0].([]FilterFilterCriteriaCodeVulnerabilityDetectorName)[vs[1].(int)]
	}).(FilterFilterCriteriaCodeVulnerabilityDetectorNameOutput)
}

type FilterFilterCriteriaCodeVulnerabilityDetectorTag struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaCodeVulnerabilityDetectorTagInput is an input type that accepts FilterFilterCriteriaCodeVulnerabilityDetectorTagArgs and FilterFilterCriteriaCodeVulnerabilityDetectorTagOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaCodeVulnerabilityDetectorTagInput` via:
//
//	FilterFilterCriteriaCodeVulnerabilityDetectorTagArgs{...}
type FilterFilterCriteriaCodeVulnerabilityDetectorTagInput interface {
	pulumi.Input

	ToFilterFilterCriteriaCodeVulnerabilityDetectorTagOutput() FilterFilterCriteriaCodeVulnerabilityDetectorTagOutput
	ToFilterFilterCriteriaCodeVulnerabilityDetectorTagOutputWithContext(context.Context) FilterFilterCriteriaCodeVulnerabilityDetectorTagOutput
}

type FilterFilterCriteriaCodeVulnerabilityDetectorTagArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaCodeVulnerabilityDetectorTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaCodeVulnerabilityDetectorTag)(nil)).Elem()
}

func (i FilterFilterCriteriaCodeVulnerabilityDetectorTagArgs) ToFilterFilterCriteriaCodeVulnerabilityDetectorTagOutput() FilterFilterCriteriaCodeVulnerabilityDetectorTagOutput {
	return i.ToFilterFilterCriteriaCodeVulnerabilityDetectorTagOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaCodeVulnerabilityDetectorTagArgs) ToFilterFilterCriteriaCodeVulnerabilityDetectorTagOutputWithContext(ctx context.Context) FilterFilterCriteriaCodeVulnerabilityDetectorTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaCodeVulnerabilityDetectorTagOutput)
}

// FilterFilterCriteriaCodeVulnerabilityDetectorTagArrayInput is an input type that accepts FilterFilterCriteriaCodeVulnerabilityDetectorTagArray and FilterFilterCriteriaCodeVulnerabilityDetectorTagArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaCodeVulnerabilityDetectorTagArrayInput` via:
//
//	FilterFilterCriteriaCodeVulnerabilityDetectorTagArray{ FilterFilterCriteriaCodeVulnerabilityDetectorTagArgs{...} }
type FilterFilterCriteriaCodeVulnerabilityDetectorTagArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaCodeVulnerabilityDetectorTagArrayOutput() FilterFilterCriteriaCodeVulnerabilityDetectorTagArrayOutput
	ToFilterFilterCriteriaCodeVulnerabilityDetectorTagArrayOutputWithContext(context.Context) FilterFilterCriteriaCodeVulnerabilityDetectorTagArrayOutput
}

type FilterFilterCriteriaCodeVulnerabilityDetectorTagArray []FilterFilterCriteriaCodeVulnerabilityDetectorTagInput

func (FilterFilterCriteriaCodeVulnerabilityDetectorTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaCodeVulnerabilityDetectorTag)(nil)).Elem()
}

func (i FilterFilterCriteriaCodeVulnerabilityDetectorTagArray) ToFilterFilterCriteriaCodeVulnerabilityDetectorTagArrayOutput() FilterFilterCriteriaCodeVulnerabilityDetectorTagArrayOutput {
	return i.ToFilterFilterCriteriaCodeVulnerabilityDetectorTagArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaCodeVulnerabilityDetectorTagArray) ToFilterFilterCriteriaCodeVulnerabilityDetectorTagArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaCodeVulnerabilityDetectorTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaCodeVulnerabilityDetectorTagArrayOutput)
}

type FilterFilterCriteriaCodeVulnerabilityDetectorTagOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaCodeVulnerabilityDetectorTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaCodeVulnerabilityDetectorTag)(nil)).Elem()
}

func (o FilterFilterCriteriaCodeVulnerabilityDetectorTagOutput) ToFilterFilterCriteriaCodeVulnerabilityDetectorTagOutput() FilterFilterCriteriaCodeVulnerabilityDetectorTagOutput {
	return o
}

func (o FilterFilterCriteriaCodeVulnerabilityDetectorTagOutput) ToFilterFilterCriteriaCodeVulnerabilityDetectorTagOutputWithContext(ctx context.Context) FilterFilterCriteriaCodeVulnerabilityDetectorTagOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaCodeVulnerabilityDetectorTagOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaCodeVulnerabilityDetectorTag) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaCodeVulnerabilityDetectorTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaCodeVulnerabilityDetectorTag) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaCodeVulnerabilityDetectorTagArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaCodeVulnerabilityDetectorTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaCodeVulnerabilityDetectorTag)(nil)).Elem()
}

func (o FilterFilterCriteriaCodeVulnerabilityDetectorTagArrayOutput) ToFilterFilterCriteriaCodeVulnerabilityDetectorTagArrayOutput() FilterFilterCriteriaCodeVulnerabilityDetectorTagArrayOutput {
	return o
}

func (o FilterFilterCriteriaCodeVulnerabilityDetectorTagArrayOutput) ToFilterFilterCriteriaCodeVulnerabilityDetectorTagArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaCodeVulnerabilityDetectorTagArrayOutput {
	return o
}

func (o FilterFilterCriteriaCodeVulnerabilityDetectorTagArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaCodeVulnerabilityDetectorTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaCodeVulnerabilityDetectorTag {
		return vs[0].([]FilterFilterCriteriaCodeVulnerabilityDetectorTag)[vs[1].(int)]
	}).(FilterFilterCriteriaCodeVulnerabilityDetectorTagOutput)
}

type FilterFilterCriteriaCodeVulnerabilityFilePath struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaCodeVulnerabilityFilePathInput is an input type that accepts FilterFilterCriteriaCodeVulnerabilityFilePathArgs and FilterFilterCriteriaCodeVulnerabilityFilePathOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaCodeVulnerabilityFilePathInput` via:
//
//	FilterFilterCriteriaCodeVulnerabilityFilePathArgs{...}
type FilterFilterCriteriaCodeVulnerabilityFilePathInput interface {
	pulumi.Input

	ToFilterFilterCriteriaCodeVulnerabilityFilePathOutput() FilterFilterCriteriaCodeVulnerabilityFilePathOutput
	ToFilterFilterCriteriaCodeVulnerabilityFilePathOutputWithContext(context.Context) FilterFilterCriteriaCodeVulnerabilityFilePathOutput
}

type FilterFilterCriteriaCodeVulnerabilityFilePathArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaCodeVulnerabilityFilePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaCodeVulnerabilityFilePath)(nil)).Elem()
}

func (i FilterFilterCriteriaCodeVulnerabilityFilePathArgs) ToFilterFilterCriteriaCodeVulnerabilityFilePathOutput() FilterFilterCriteriaCodeVulnerabilityFilePathOutput {
	return i.ToFilterFilterCriteriaCodeVulnerabilityFilePathOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaCodeVulnerabilityFilePathArgs) ToFilterFilterCriteriaCodeVulnerabilityFilePathOutputWithContext(ctx context.Context) FilterFilterCriteriaCodeVulnerabilityFilePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaCodeVulnerabilityFilePathOutput)
}

// FilterFilterCriteriaCodeVulnerabilityFilePathArrayInput is an input type that accepts FilterFilterCriteriaCodeVulnerabilityFilePathArray and FilterFilterCriteriaCodeVulnerabilityFilePathArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaCodeVulnerabilityFilePathArrayInput` via:
//
//	FilterFilterCriteriaCodeVulnerabilityFilePathArray{ FilterFilterCriteriaCodeVulnerabilityFilePathArgs{...} }
type FilterFilterCriteriaCodeVulnerabilityFilePathArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaCodeVulnerabilityFilePathArrayOutput() FilterFilterCriteriaCodeVulnerabilityFilePathArrayOutput
	ToFilterFilterCriteriaCodeVulnerabilityFilePathArrayOutputWithContext(context.Context) FilterFilterCriteriaCodeVulnerabilityFilePathArrayOutput
}

type FilterFilterCriteriaCodeVulnerabilityFilePathArray []FilterFilterCriteriaCodeVulnerabilityFilePathInput

func (FilterFilterCriteriaCodeVulnerabilityFilePathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaCodeVulnerabilityFilePath)(nil)).Elem()
}

func (i FilterFilterCriteriaCodeVulnerabilityFilePathArray) ToFilterFilterCriteriaCodeVulnerabilityFilePathArrayOutput() FilterFilterCriteriaCodeVulnerabilityFilePathArrayOutput {
	return i.ToFilterFilterCriteriaCodeVulnerabilityFilePathArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaCodeVulnerabilityFilePathArray) ToFilterFilterCriteriaCodeVulnerabilityFilePathArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaCodeVulnerabilityFilePathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaCodeVulnerabilityFilePathArrayOutput)
}

type FilterFilterCriteriaCodeVulnerabilityFilePathOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaCodeVulnerabilityFilePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaCodeVulnerabilityFilePath)(nil)).Elem()
}

func (o FilterFilterCriteriaCodeVulnerabilityFilePathOutput) ToFilterFilterCriteriaCodeVulnerabilityFilePathOutput() FilterFilterCriteriaCodeVulnerabilityFilePathOutput {
	return o
}

func (o FilterFilterCriteriaCodeVulnerabilityFilePathOutput) ToFilterFilterCriteriaCodeVulnerabilityFilePathOutputWithContext(ctx context.Context) FilterFilterCriteriaCodeVulnerabilityFilePathOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaCodeVulnerabilityFilePathOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaCodeVulnerabilityFilePath) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaCodeVulnerabilityFilePathOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaCodeVulnerabilityFilePath) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaCodeVulnerabilityFilePathArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaCodeVulnerabilityFilePathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaCodeVulnerabilityFilePath)(nil)).Elem()
}

func (o FilterFilterCriteriaCodeVulnerabilityFilePathArrayOutput) ToFilterFilterCriteriaCodeVulnerabilityFilePathArrayOutput() FilterFilterCriteriaCodeVulnerabilityFilePathArrayOutput {
	return o
}

func (o FilterFilterCriteriaCodeVulnerabilityFilePathArrayOutput) ToFilterFilterCriteriaCodeVulnerabilityFilePathArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaCodeVulnerabilityFilePathArrayOutput {
	return o
}

func (o FilterFilterCriteriaCodeVulnerabilityFilePathArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaCodeVulnerabilityFilePathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaCodeVulnerabilityFilePath {
		return vs[0].([]FilterFilterCriteriaCodeVulnerabilityFilePath)[vs[1].(int)]
	}).(FilterFilterCriteriaCodeVulnerabilityFilePathOutput)
}

type FilterFilterCriteriaComponentId struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaComponentIdInput is an input type that accepts FilterFilterCriteriaComponentIdArgs and FilterFilterCriteriaComponentIdOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaComponentIdInput` via:
//
//	FilterFilterCriteriaComponentIdArgs{...}
type FilterFilterCriteriaComponentIdInput interface {
	pulumi.Input

	ToFilterFilterCriteriaComponentIdOutput() FilterFilterCriteriaComponentIdOutput
	ToFilterFilterCriteriaComponentIdOutputWithContext(context.Context) FilterFilterCriteriaComponentIdOutput
}

type FilterFilterCriteriaComponentIdArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaComponentIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaComponentId)(nil)).Elem()
}

func (i FilterFilterCriteriaComponentIdArgs) ToFilterFilterCriteriaComponentIdOutput() FilterFilterCriteriaComponentIdOutput {
	return i.ToFilterFilterCriteriaComponentIdOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaComponentIdArgs) ToFilterFilterCriteriaComponentIdOutputWithContext(ctx context.Context) FilterFilterCriteriaComponentIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaComponentIdOutput)
}

// FilterFilterCriteriaComponentIdArrayInput is an input type that accepts FilterFilterCriteriaComponentIdArray and FilterFilterCriteriaComponentIdArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaComponentIdArrayInput` via:
//
//	FilterFilterCriteriaComponentIdArray{ FilterFilterCriteriaComponentIdArgs{...} }
type FilterFilterCriteriaComponentIdArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaComponentIdArrayOutput() FilterFilterCriteriaComponentIdArrayOutput
	ToFilterFilterCriteriaComponentIdArrayOutputWithContext(context.Context) FilterFilterCriteriaComponentIdArrayOutput
}

type FilterFilterCriteriaComponentIdArray []FilterFilterCriteriaComponentIdInput

func (FilterFilterCriteriaComponentIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaComponentId)(nil)).Elem()
}

func (i FilterFilterCriteriaComponentIdArray) ToFilterFilterCriteriaComponentIdArrayOutput() FilterFilterCriteriaComponentIdArrayOutput {
	return i.ToFilterFilterCriteriaComponentIdArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaComponentIdArray) ToFilterFilterCriteriaComponentIdArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaComponentIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaComponentIdArrayOutput)
}

type FilterFilterCriteriaComponentIdOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaComponentIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaComponentId)(nil)).Elem()
}

func (o FilterFilterCriteriaComponentIdOutput) ToFilterFilterCriteriaComponentIdOutput() FilterFilterCriteriaComponentIdOutput {
	return o
}

func (o FilterFilterCriteriaComponentIdOutput) ToFilterFilterCriteriaComponentIdOutputWithContext(ctx context.Context) FilterFilterCriteriaComponentIdOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaComponentIdOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaComponentId) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaComponentIdOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaComponentId) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaComponentIdArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaComponentIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaComponentId)(nil)).Elem()
}

func (o FilterFilterCriteriaComponentIdArrayOutput) ToFilterFilterCriteriaComponentIdArrayOutput() FilterFilterCriteriaComponentIdArrayOutput {
	return o
}

func (o FilterFilterCriteriaComponentIdArrayOutput) ToFilterFilterCriteriaComponentIdArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaComponentIdArrayOutput {
	return o
}

func (o FilterFilterCriteriaComponentIdArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaComponentIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaComponentId {
		return vs[0].([]FilterFilterCriteriaComponentId)[vs[1].(int)]
	}).(FilterFilterCriteriaComponentIdOutput)
}

type FilterFilterCriteriaComponentType struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaComponentTypeInput is an input type that accepts FilterFilterCriteriaComponentTypeArgs and FilterFilterCriteriaComponentTypeOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaComponentTypeInput` via:
//
//	FilterFilterCriteriaComponentTypeArgs{...}
type FilterFilterCriteriaComponentTypeInput interface {
	pulumi.Input

	ToFilterFilterCriteriaComponentTypeOutput() FilterFilterCriteriaComponentTypeOutput
	ToFilterFilterCriteriaComponentTypeOutputWithContext(context.Context) FilterFilterCriteriaComponentTypeOutput
}

type FilterFilterCriteriaComponentTypeArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaComponentTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaComponentType)(nil)).Elem()
}

func (i FilterFilterCriteriaComponentTypeArgs) ToFilterFilterCriteriaComponentTypeOutput() FilterFilterCriteriaComponentTypeOutput {
	return i.ToFilterFilterCriteriaComponentTypeOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaComponentTypeArgs) ToFilterFilterCriteriaComponentTypeOutputWithContext(ctx context.Context) FilterFilterCriteriaComponentTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaComponentTypeOutput)
}

// FilterFilterCriteriaComponentTypeArrayInput is an input type that accepts FilterFilterCriteriaComponentTypeArray and FilterFilterCriteriaComponentTypeArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaComponentTypeArrayInput` via:
//
//	FilterFilterCriteriaComponentTypeArray{ FilterFilterCriteriaComponentTypeArgs{...} }
type FilterFilterCriteriaComponentTypeArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaComponentTypeArrayOutput() FilterFilterCriteriaComponentTypeArrayOutput
	ToFilterFilterCriteriaComponentTypeArrayOutputWithContext(context.Context) FilterFilterCriteriaComponentTypeArrayOutput
}

type FilterFilterCriteriaComponentTypeArray []FilterFilterCriteriaComponentTypeInput

func (FilterFilterCriteriaComponentTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaComponentType)(nil)).Elem()
}

func (i FilterFilterCriteriaComponentTypeArray) ToFilterFilterCriteriaComponentTypeArrayOutput() FilterFilterCriteriaComponentTypeArrayOutput {
	return i.ToFilterFilterCriteriaComponentTypeArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaComponentTypeArray) ToFilterFilterCriteriaComponentTypeArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaComponentTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaComponentTypeArrayOutput)
}

type FilterFilterCriteriaComponentTypeOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaComponentTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaComponentType)(nil)).Elem()
}

func (o FilterFilterCriteriaComponentTypeOutput) ToFilterFilterCriteriaComponentTypeOutput() FilterFilterCriteriaComponentTypeOutput {
	return o
}

func (o FilterFilterCriteriaComponentTypeOutput) ToFilterFilterCriteriaComponentTypeOutputWithContext(ctx context.Context) FilterFilterCriteriaComponentTypeOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaComponentTypeOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaComponentType) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaComponentTypeOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaComponentType) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaComponentTypeArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaComponentTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaComponentType)(nil)).Elem()
}

func (o FilterFilterCriteriaComponentTypeArrayOutput) ToFilterFilterCriteriaComponentTypeArrayOutput() FilterFilterCriteriaComponentTypeArrayOutput {
	return o
}

func (o FilterFilterCriteriaComponentTypeArrayOutput) ToFilterFilterCriteriaComponentTypeArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaComponentTypeArrayOutput {
	return o
}

func (o FilterFilterCriteriaComponentTypeArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaComponentTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaComponentType {
		return vs[0].([]FilterFilterCriteriaComponentType)[vs[1].(int)]
	}).(FilterFilterCriteriaComponentTypeOutput)
}

type FilterFilterCriteriaEc2InstanceImageId struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaEc2InstanceImageIdInput is an input type that accepts FilterFilterCriteriaEc2InstanceImageIdArgs and FilterFilterCriteriaEc2InstanceImageIdOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaEc2InstanceImageIdInput` via:
//
//	FilterFilterCriteriaEc2InstanceImageIdArgs{...}
type FilterFilterCriteriaEc2InstanceImageIdInput interface {
	pulumi.Input

	ToFilterFilterCriteriaEc2InstanceImageIdOutput() FilterFilterCriteriaEc2InstanceImageIdOutput
	ToFilterFilterCriteriaEc2InstanceImageIdOutputWithContext(context.Context) FilterFilterCriteriaEc2InstanceImageIdOutput
}

type FilterFilterCriteriaEc2InstanceImageIdArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaEc2InstanceImageIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaEc2InstanceImageId)(nil)).Elem()
}

func (i FilterFilterCriteriaEc2InstanceImageIdArgs) ToFilterFilterCriteriaEc2InstanceImageIdOutput() FilterFilterCriteriaEc2InstanceImageIdOutput {
	return i.ToFilterFilterCriteriaEc2InstanceImageIdOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaEc2InstanceImageIdArgs) ToFilterFilterCriteriaEc2InstanceImageIdOutputWithContext(ctx context.Context) FilterFilterCriteriaEc2InstanceImageIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaEc2InstanceImageIdOutput)
}

// FilterFilterCriteriaEc2InstanceImageIdArrayInput is an input type that accepts FilterFilterCriteriaEc2InstanceImageIdArray and FilterFilterCriteriaEc2InstanceImageIdArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaEc2InstanceImageIdArrayInput` via:
//
//	FilterFilterCriteriaEc2InstanceImageIdArray{ FilterFilterCriteriaEc2InstanceImageIdArgs{...} }
type FilterFilterCriteriaEc2InstanceImageIdArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaEc2InstanceImageIdArrayOutput() FilterFilterCriteriaEc2InstanceImageIdArrayOutput
	ToFilterFilterCriteriaEc2InstanceImageIdArrayOutputWithContext(context.Context) FilterFilterCriteriaEc2InstanceImageIdArrayOutput
}

type FilterFilterCriteriaEc2InstanceImageIdArray []FilterFilterCriteriaEc2InstanceImageIdInput

func (FilterFilterCriteriaEc2InstanceImageIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaEc2InstanceImageId)(nil)).Elem()
}

func (i FilterFilterCriteriaEc2InstanceImageIdArray) ToFilterFilterCriteriaEc2InstanceImageIdArrayOutput() FilterFilterCriteriaEc2InstanceImageIdArrayOutput {
	return i.ToFilterFilterCriteriaEc2InstanceImageIdArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaEc2InstanceImageIdArray) ToFilterFilterCriteriaEc2InstanceImageIdArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaEc2InstanceImageIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaEc2InstanceImageIdArrayOutput)
}

type FilterFilterCriteriaEc2InstanceImageIdOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaEc2InstanceImageIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaEc2InstanceImageId)(nil)).Elem()
}

func (o FilterFilterCriteriaEc2InstanceImageIdOutput) ToFilterFilterCriteriaEc2InstanceImageIdOutput() FilterFilterCriteriaEc2InstanceImageIdOutput {
	return o
}

func (o FilterFilterCriteriaEc2InstanceImageIdOutput) ToFilterFilterCriteriaEc2InstanceImageIdOutputWithContext(ctx context.Context) FilterFilterCriteriaEc2InstanceImageIdOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaEc2InstanceImageIdOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaEc2InstanceImageId) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaEc2InstanceImageIdOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaEc2InstanceImageId) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaEc2InstanceImageIdArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaEc2InstanceImageIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaEc2InstanceImageId)(nil)).Elem()
}

func (o FilterFilterCriteriaEc2InstanceImageIdArrayOutput) ToFilterFilterCriteriaEc2InstanceImageIdArrayOutput() FilterFilterCriteriaEc2InstanceImageIdArrayOutput {
	return o
}

func (o FilterFilterCriteriaEc2InstanceImageIdArrayOutput) ToFilterFilterCriteriaEc2InstanceImageIdArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaEc2InstanceImageIdArrayOutput {
	return o
}

func (o FilterFilterCriteriaEc2InstanceImageIdArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaEc2InstanceImageIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaEc2InstanceImageId {
		return vs[0].([]FilterFilterCriteriaEc2InstanceImageId)[vs[1].(int)]
	}).(FilterFilterCriteriaEc2InstanceImageIdOutput)
}

type FilterFilterCriteriaEc2InstanceSubnetId struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaEc2InstanceSubnetIdInput is an input type that accepts FilterFilterCriteriaEc2InstanceSubnetIdArgs and FilterFilterCriteriaEc2InstanceSubnetIdOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaEc2InstanceSubnetIdInput` via:
//
//	FilterFilterCriteriaEc2InstanceSubnetIdArgs{...}
type FilterFilterCriteriaEc2InstanceSubnetIdInput interface {
	pulumi.Input

	ToFilterFilterCriteriaEc2InstanceSubnetIdOutput() FilterFilterCriteriaEc2InstanceSubnetIdOutput
	ToFilterFilterCriteriaEc2InstanceSubnetIdOutputWithContext(context.Context) FilterFilterCriteriaEc2InstanceSubnetIdOutput
}

type FilterFilterCriteriaEc2InstanceSubnetIdArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaEc2InstanceSubnetIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaEc2InstanceSubnetId)(nil)).Elem()
}

func (i FilterFilterCriteriaEc2InstanceSubnetIdArgs) ToFilterFilterCriteriaEc2InstanceSubnetIdOutput() FilterFilterCriteriaEc2InstanceSubnetIdOutput {
	return i.ToFilterFilterCriteriaEc2InstanceSubnetIdOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaEc2InstanceSubnetIdArgs) ToFilterFilterCriteriaEc2InstanceSubnetIdOutputWithContext(ctx context.Context) FilterFilterCriteriaEc2InstanceSubnetIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaEc2InstanceSubnetIdOutput)
}

// FilterFilterCriteriaEc2InstanceSubnetIdArrayInput is an input type that accepts FilterFilterCriteriaEc2InstanceSubnetIdArray and FilterFilterCriteriaEc2InstanceSubnetIdArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaEc2InstanceSubnetIdArrayInput` via:
//
//	FilterFilterCriteriaEc2InstanceSubnetIdArray{ FilterFilterCriteriaEc2InstanceSubnetIdArgs{...} }
type FilterFilterCriteriaEc2InstanceSubnetIdArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaEc2InstanceSubnetIdArrayOutput() FilterFilterCriteriaEc2InstanceSubnetIdArrayOutput
	ToFilterFilterCriteriaEc2InstanceSubnetIdArrayOutputWithContext(context.Context) FilterFilterCriteriaEc2InstanceSubnetIdArrayOutput
}

type FilterFilterCriteriaEc2InstanceSubnetIdArray []FilterFilterCriteriaEc2InstanceSubnetIdInput

func (FilterFilterCriteriaEc2InstanceSubnetIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaEc2InstanceSubnetId)(nil)).Elem()
}

func (i FilterFilterCriteriaEc2InstanceSubnetIdArray) ToFilterFilterCriteriaEc2InstanceSubnetIdArrayOutput() FilterFilterCriteriaEc2InstanceSubnetIdArrayOutput {
	return i.ToFilterFilterCriteriaEc2InstanceSubnetIdArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaEc2InstanceSubnetIdArray) ToFilterFilterCriteriaEc2InstanceSubnetIdArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaEc2InstanceSubnetIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaEc2InstanceSubnetIdArrayOutput)
}

type FilterFilterCriteriaEc2InstanceSubnetIdOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaEc2InstanceSubnetIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaEc2InstanceSubnetId)(nil)).Elem()
}

func (o FilterFilterCriteriaEc2InstanceSubnetIdOutput) ToFilterFilterCriteriaEc2InstanceSubnetIdOutput() FilterFilterCriteriaEc2InstanceSubnetIdOutput {
	return o
}

func (o FilterFilterCriteriaEc2InstanceSubnetIdOutput) ToFilterFilterCriteriaEc2InstanceSubnetIdOutputWithContext(ctx context.Context) FilterFilterCriteriaEc2InstanceSubnetIdOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaEc2InstanceSubnetIdOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaEc2InstanceSubnetId) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaEc2InstanceSubnetIdOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaEc2InstanceSubnetId) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaEc2InstanceSubnetIdArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaEc2InstanceSubnetIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaEc2InstanceSubnetId)(nil)).Elem()
}

func (o FilterFilterCriteriaEc2InstanceSubnetIdArrayOutput) ToFilterFilterCriteriaEc2InstanceSubnetIdArrayOutput() FilterFilterCriteriaEc2InstanceSubnetIdArrayOutput {
	return o
}

func (o FilterFilterCriteriaEc2InstanceSubnetIdArrayOutput) ToFilterFilterCriteriaEc2InstanceSubnetIdArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaEc2InstanceSubnetIdArrayOutput {
	return o
}

func (o FilterFilterCriteriaEc2InstanceSubnetIdArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaEc2InstanceSubnetIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaEc2InstanceSubnetId {
		return vs[0].([]FilterFilterCriteriaEc2InstanceSubnetId)[vs[1].(int)]
	}).(FilterFilterCriteriaEc2InstanceSubnetIdOutput)
}

type FilterFilterCriteriaEc2InstanceVpcId struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaEc2InstanceVpcIdInput is an input type that accepts FilterFilterCriteriaEc2InstanceVpcIdArgs and FilterFilterCriteriaEc2InstanceVpcIdOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaEc2InstanceVpcIdInput` via:
//
//	FilterFilterCriteriaEc2InstanceVpcIdArgs{...}
type FilterFilterCriteriaEc2InstanceVpcIdInput interface {
	pulumi.Input

	ToFilterFilterCriteriaEc2InstanceVpcIdOutput() FilterFilterCriteriaEc2InstanceVpcIdOutput
	ToFilterFilterCriteriaEc2InstanceVpcIdOutputWithContext(context.Context) FilterFilterCriteriaEc2InstanceVpcIdOutput
}

type FilterFilterCriteriaEc2InstanceVpcIdArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaEc2InstanceVpcIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaEc2InstanceVpcId)(nil)).Elem()
}

func (i FilterFilterCriteriaEc2InstanceVpcIdArgs) ToFilterFilterCriteriaEc2InstanceVpcIdOutput() FilterFilterCriteriaEc2InstanceVpcIdOutput {
	return i.ToFilterFilterCriteriaEc2InstanceVpcIdOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaEc2InstanceVpcIdArgs) ToFilterFilterCriteriaEc2InstanceVpcIdOutputWithContext(ctx context.Context) FilterFilterCriteriaEc2InstanceVpcIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaEc2InstanceVpcIdOutput)
}

// FilterFilterCriteriaEc2InstanceVpcIdArrayInput is an input type that accepts FilterFilterCriteriaEc2InstanceVpcIdArray and FilterFilterCriteriaEc2InstanceVpcIdArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaEc2InstanceVpcIdArrayInput` via:
//
//	FilterFilterCriteriaEc2InstanceVpcIdArray{ FilterFilterCriteriaEc2InstanceVpcIdArgs{...} }
type FilterFilterCriteriaEc2InstanceVpcIdArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaEc2InstanceVpcIdArrayOutput() FilterFilterCriteriaEc2InstanceVpcIdArrayOutput
	ToFilterFilterCriteriaEc2InstanceVpcIdArrayOutputWithContext(context.Context) FilterFilterCriteriaEc2InstanceVpcIdArrayOutput
}

type FilterFilterCriteriaEc2InstanceVpcIdArray []FilterFilterCriteriaEc2InstanceVpcIdInput

func (FilterFilterCriteriaEc2InstanceVpcIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaEc2InstanceVpcId)(nil)).Elem()
}

func (i FilterFilterCriteriaEc2InstanceVpcIdArray) ToFilterFilterCriteriaEc2InstanceVpcIdArrayOutput() FilterFilterCriteriaEc2InstanceVpcIdArrayOutput {
	return i.ToFilterFilterCriteriaEc2InstanceVpcIdArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaEc2InstanceVpcIdArray) ToFilterFilterCriteriaEc2InstanceVpcIdArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaEc2InstanceVpcIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaEc2InstanceVpcIdArrayOutput)
}

type FilterFilterCriteriaEc2InstanceVpcIdOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaEc2InstanceVpcIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaEc2InstanceVpcId)(nil)).Elem()
}

func (o FilterFilterCriteriaEc2InstanceVpcIdOutput) ToFilterFilterCriteriaEc2InstanceVpcIdOutput() FilterFilterCriteriaEc2InstanceVpcIdOutput {
	return o
}

func (o FilterFilterCriteriaEc2InstanceVpcIdOutput) ToFilterFilterCriteriaEc2InstanceVpcIdOutputWithContext(ctx context.Context) FilterFilterCriteriaEc2InstanceVpcIdOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaEc2InstanceVpcIdOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaEc2InstanceVpcId) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaEc2InstanceVpcIdOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaEc2InstanceVpcId) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaEc2InstanceVpcIdArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaEc2InstanceVpcIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaEc2InstanceVpcId)(nil)).Elem()
}

func (o FilterFilterCriteriaEc2InstanceVpcIdArrayOutput) ToFilterFilterCriteriaEc2InstanceVpcIdArrayOutput() FilterFilterCriteriaEc2InstanceVpcIdArrayOutput {
	return o
}

func (o FilterFilterCriteriaEc2InstanceVpcIdArrayOutput) ToFilterFilterCriteriaEc2InstanceVpcIdArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaEc2InstanceVpcIdArrayOutput {
	return o
}

func (o FilterFilterCriteriaEc2InstanceVpcIdArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaEc2InstanceVpcIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaEc2InstanceVpcId {
		return vs[0].([]FilterFilterCriteriaEc2InstanceVpcId)[vs[1].(int)]
	}).(FilterFilterCriteriaEc2InstanceVpcIdOutput)
}

type FilterFilterCriteriaEcrImageArchitecture struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaEcrImageArchitectureInput is an input type that accepts FilterFilterCriteriaEcrImageArchitectureArgs and FilterFilterCriteriaEcrImageArchitectureOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaEcrImageArchitectureInput` via:
//
//	FilterFilterCriteriaEcrImageArchitectureArgs{...}
type FilterFilterCriteriaEcrImageArchitectureInput interface {
	pulumi.Input

	ToFilterFilterCriteriaEcrImageArchitectureOutput() FilterFilterCriteriaEcrImageArchitectureOutput
	ToFilterFilterCriteriaEcrImageArchitectureOutputWithContext(context.Context) FilterFilterCriteriaEcrImageArchitectureOutput
}

type FilterFilterCriteriaEcrImageArchitectureArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaEcrImageArchitectureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaEcrImageArchitecture)(nil)).Elem()
}

func (i FilterFilterCriteriaEcrImageArchitectureArgs) ToFilterFilterCriteriaEcrImageArchitectureOutput() FilterFilterCriteriaEcrImageArchitectureOutput {
	return i.ToFilterFilterCriteriaEcrImageArchitectureOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaEcrImageArchitectureArgs) ToFilterFilterCriteriaEcrImageArchitectureOutputWithContext(ctx context.Context) FilterFilterCriteriaEcrImageArchitectureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaEcrImageArchitectureOutput)
}

// FilterFilterCriteriaEcrImageArchitectureArrayInput is an input type that accepts FilterFilterCriteriaEcrImageArchitectureArray and FilterFilterCriteriaEcrImageArchitectureArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaEcrImageArchitectureArrayInput` via:
//
//	FilterFilterCriteriaEcrImageArchitectureArray{ FilterFilterCriteriaEcrImageArchitectureArgs{...} }
type FilterFilterCriteriaEcrImageArchitectureArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaEcrImageArchitectureArrayOutput() FilterFilterCriteriaEcrImageArchitectureArrayOutput
	ToFilterFilterCriteriaEcrImageArchitectureArrayOutputWithContext(context.Context) FilterFilterCriteriaEcrImageArchitectureArrayOutput
}

type FilterFilterCriteriaEcrImageArchitectureArray []FilterFilterCriteriaEcrImageArchitectureInput

func (FilterFilterCriteriaEcrImageArchitectureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaEcrImageArchitecture)(nil)).Elem()
}

func (i FilterFilterCriteriaEcrImageArchitectureArray) ToFilterFilterCriteriaEcrImageArchitectureArrayOutput() FilterFilterCriteriaEcrImageArchitectureArrayOutput {
	return i.ToFilterFilterCriteriaEcrImageArchitectureArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaEcrImageArchitectureArray) ToFilterFilterCriteriaEcrImageArchitectureArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaEcrImageArchitectureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaEcrImageArchitectureArrayOutput)
}

type FilterFilterCriteriaEcrImageArchitectureOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaEcrImageArchitectureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaEcrImageArchitecture)(nil)).Elem()
}

func (o FilterFilterCriteriaEcrImageArchitectureOutput) ToFilterFilterCriteriaEcrImageArchitectureOutput() FilterFilterCriteriaEcrImageArchitectureOutput {
	return o
}

func (o FilterFilterCriteriaEcrImageArchitectureOutput) ToFilterFilterCriteriaEcrImageArchitectureOutputWithContext(ctx context.Context) FilterFilterCriteriaEcrImageArchitectureOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaEcrImageArchitectureOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaEcrImageArchitecture) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaEcrImageArchitectureOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaEcrImageArchitecture) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaEcrImageArchitectureArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaEcrImageArchitectureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaEcrImageArchitecture)(nil)).Elem()
}

func (o FilterFilterCriteriaEcrImageArchitectureArrayOutput) ToFilterFilterCriteriaEcrImageArchitectureArrayOutput() FilterFilterCriteriaEcrImageArchitectureArrayOutput {
	return o
}

func (o FilterFilterCriteriaEcrImageArchitectureArrayOutput) ToFilterFilterCriteriaEcrImageArchitectureArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaEcrImageArchitectureArrayOutput {
	return o
}

func (o FilterFilterCriteriaEcrImageArchitectureArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaEcrImageArchitectureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaEcrImageArchitecture {
		return vs[0].([]FilterFilterCriteriaEcrImageArchitecture)[vs[1].(int)]
	}).(FilterFilterCriteriaEcrImageArchitectureOutput)
}

type FilterFilterCriteriaEcrImageHash struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaEcrImageHashInput is an input type that accepts FilterFilterCriteriaEcrImageHashArgs and FilterFilterCriteriaEcrImageHashOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaEcrImageHashInput` via:
//
//	FilterFilterCriteriaEcrImageHashArgs{...}
type FilterFilterCriteriaEcrImageHashInput interface {
	pulumi.Input

	ToFilterFilterCriteriaEcrImageHashOutput() FilterFilterCriteriaEcrImageHashOutput
	ToFilterFilterCriteriaEcrImageHashOutputWithContext(context.Context) FilterFilterCriteriaEcrImageHashOutput
}

type FilterFilterCriteriaEcrImageHashArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaEcrImageHashArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaEcrImageHash)(nil)).Elem()
}

func (i FilterFilterCriteriaEcrImageHashArgs) ToFilterFilterCriteriaEcrImageHashOutput() FilterFilterCriteriaEcrImageHashOutput {
	return i.ToFilterFilterCriteriaEcrImageHashOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaEcrImageHashArgs) ToFilterFilterCriteriaEcrImageHashOutputWithContext(ctx context.Context) FilterFilterCriteriaEcrImageHashOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaEcrImageHashOutput)
}

// FilterFilterCriteriaEcrImageHashArrayInput is an input type that accepts FilterFilterCriteriaEcrImageHashArray and FilterFilterCriteriaEcrImageHashArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaEcrImageHashArrayInput` via:
//
//	FilterFilterCriteriaEcrImageHashArray{ FilterFilterCriteriaEcrImageHashArgs{...} }
type FilterFilterCriteriaEcrImageHashArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaEcrImageHashArrayOutput() FilterFilterCriteriaEcrImageHashArrayOutput
	ToFilterFilterCriteriaEcrImageHashArrayOutputWithContext(context.Context) FilterFilterCriteriaEcrImageHashArrayOutput
}

type FilterFilterCriteriaEcrImageHashArray []FilterFilterCriteriaEcrImageHashInput

func (FilterFilterCriteriaEcrImageHashArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaEcrImageHash)(nil)).Elem()
}

func (i FilterFilterCriteriaEcrImageHashArray) ToFilterFilterCriteriaEcrImageHashArrayOutput() FilterFilterCriteriaEcrImageHashArrayOutput {
	return i.ToFilterFilterCriteriaEcrImageHashArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaEcrImageHashArray) ToFilterFilterCriteriaEcrImageHashArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaEcrImageHashArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaEcrImageHashArrayOutput)
}

type FilterFilterCriteriaEcrImageHashOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaEcrImageHashOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaEcrImageHash)(nil)).Elem()
}

func (o FilterFilterCriteriaEcrImageHashOutput) ToFilterFilterCriteriaEcrImageHashOutput() FilterFilterCriteriaEcrImageHashOutput {
	return o
}

func (o FilterFilterCriteriaEcrImageHashOutput) ToFilterFilterCriteriaEcrImageHashOutputWithContext(ctx context.Context) FilterFilterCriteriaEcrImageHashOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaEcrImageHashOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaEcrImageHash) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaEcrImageHashOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaEcrImageHash) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaEcrImageHashArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaEcrImageHashArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaEcrImageHash)(nil)).Elem()
}

func (o FilterFilterCriteriaEcrImageHashArrayOutput) ToFilterFilterCriteriaEcrImageHashArrayOutput() FilterFilterCriteriaEcrImageHashArrayOutput {
	return o
}

func (o FilterFilterCriteriaEcrImageHashArrayOutput) ToFilterFilterCriteriaEcrImageHashArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaEcrImageHashArrayOutput {
	return o
}

func (o FilterFilterCriteriaEcrImageHashArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaEcrImageHashOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaEcrImageHash {
		return vs[0].([]FilterFilterCriteriaEcrImageHash)[vs[1].(int)]
	}).(FilterFilterCriteriaEcrImageHashOutput)
}

type FilterFilterCriteriaEcrImagePushedAt struct {
	// (Required) The end of the port range, inclusive.
	EndInclusive *string `pulumi:"endInclusive"`
	// (Optional) Start of the date range in RFC 3339 format, inclusive. Set the timezone to UTC.
	StartInclusive *string `pulumi:"startInclusive"`
}

// FilterFilterCriteriaEcrImagePushedAtInput is an input type that accepts FilterFilterCriteriaEcrImagePushedAtArgs and FilterFilterCriteriaEcrImagePushedAtOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaEcrImagePushedAtInput` via:
//
//	FilterFilterCriteriaEcrImagePushedAtArgs{...}
type FilterFilterCriteriaEcrImagePushedAtInput interface {
	pulumi.Input

	ToFilterFilterCriteriaEcrImagePushedAtOutput() FilterFilterCriteriaEcrImagePushedAtOutput
	ToFilterFilterCriteriaEcrImagePushedAtOutputWithContext(context.Context) FilterFilterCriteriaEcrImagePushedAtOutput
}

type FilterFilterCriteriaEcrImagePushedAtArgs struct {
	// (Required) The end of the port range, inclusive.
	EndInclusive pulumi.StringPtrInput `pulumi:"endInclusive"`
	// (Optional) Start of the date range in RFC 3339 format, inclusive. Set the timezone to UTC.
	StartInclusive pulumi.StringPtrInput `pulumi:"startInclusive"`
}

func (FilterFilterCriteriaEcrImagePushedAtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaEcrImagePushedAt)(nil)).Elem()
}

func (i FilterFilterCriteriaEcrImagePushedAtArgs) ToFilterFilterCriteriaEcrImagePushedAtOutput() FilterFilterCriteriaEcrImagePushedAtOutput {
	return i.ToFilterFilterCriteriaEcrImagePushedAtOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaEcrImagePushedAtArgs) ToFilterFilterCriteriaEcrImagePushedAtOutputWithContext(ctx context.Context) FilterFilterCriteriaEcrImagePushedAtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaEcrImagePushedAtOutput)
}

// FilterFilterCriteriaEcrImagePushedAtArrayInput is an input type that accepts FilterFilterCriteriaEcrImagePushedAtArray and FilterFilterCriteriaEcrImagePushedAtArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaEcrImagePushedAtArrayInput` via:
//
//	FilterFilterCriteriaEcrImagePushedAtArray{ FilterFilterCriteriaEcrImagePushedAtArgs{...} }
type FilterFilterCriteriaEcrImagePushedAtArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaEcrImagePushedAtArrayOutput() FilterFilterCriteriaEcrImagePushedAtArrayOutput
	ToFilterFilterCriteriaEcrImagePushedAtArrayOutputWithContext(context.Context) FilterFilterCriteriaEcrImagePushedAtArrayOutput
}

type FilterFilterCriteriaEcrImagePushedAtArray []FilterFilterCriteriaEcrImagePushedAtInput

func (FilterFilterCriteriaEcrImagePushedAtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaEcrImagePushedAt)(nil)).Elem()
}

func (i FilterFilterCriteriaEcrImagePushedAtArray) ToFilterFilterCriteriaEcrImagePushedAtArrayOutput() FilterFilterCriteriaEcrImagePushedAtArrayOutput {
	return i.ToFilterFilterCriteriaEcrImagePushedAtArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaEcrImagePushedAtArray) ToFilterFilterCriteriaEcrImagePushedAtArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaEcrImagePushedAtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaEcrImagePushedAtArrayOutput)
}

type FilterFilterCriteriaEcrImagePushedAtOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaEcrImagePushedAtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaEcrImagePushedAt)(nil)).Elem()
}

func (o FilterFilterCriteriaEcrImagePushedAtOutput) ToFilterFilterCriteriaEcrImagePushedAtOutput() FilterFilterCriteriaEcrImagePushedAtOutput {
	return o
}

func (o FilterFilterCriteriaEcrImagePushedAtOutput) ToFilterFilterCriteriaEcrImagePushedAtOutputWithContext(ctx context.Context) FilterFilterCriteriaEcrImagePushedAtOutput {
	return o
}

// (Required) The end of the port range, inclusive.
func (o FilterFilterCriteriaEcrImagePushedAtOutput) EndInclusive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilterFilterCriteriaEcrImagePushedAt) *string { return v.EndInclusive }).(pulumi.StringPtrOutput)
}

// (Optional) Start of the date range in RFC 3339 format, inclusive. Set the timezone to UTC.
func (o FilterFilterCriteriaEcrImagePushedAtOutput) StartInclusive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilterFilterCriteriaEcrImagePushedAt) *string { return v.StartInclusive }).(pulumi.StringPtrOutput)
}

type FilterFilterCriteriaEcrImagePushedAtArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaEcrImagePushedAtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaEcrImagePushedAt)(nil)).Elem()
}

func (o FilterFilterCriteriaEcrImagePushedAtArrayOutput) ToFilterFilterCriteriaEcrImagePushedAtArrayOutput() FilterFilterCriteriaEcrImagePushedAtArrayOutput {
	return o
}

func (o FilterFilterCriteriaEcrImagePushedAtArrayOutput) ToFilterFilterCriteriaEcrImagePushedAtArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaEcrImagePushedAtArrayOutput {
	return o
}

func (o FilterFilterCriteriaEcrImagePushedAtArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaEcrImagePushedAtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaEcrImagePushedAt {
		return vs[0].([]FilterFilterCriteriaEcrImagePushedAt)[vs[1].(int)]
	}).(FilterFilterCriteriaEcrImagePushedAtOutput)
}

type FilterFilterCriteriaEcrImageRegistry struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaEcrImageRegistryInput is an input type that accepts FilterFilterCriteriaEcrImageRegistryArgs and FilterFilterCriteriaEcrImageRegistryOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaEcrImageRegistryInput` via:
//
//	FilterFilterCriteriaEcrImageRegistryArgs{...}
type FilterFilterCriteriaEcrImageRegistryInput interface {
	pulumi.Input

	ToFilterFilterCriteriaEcrImageRegistryOutput() FilterFilterCriteriaEcrImageRegistryOutput
	ToFilterFilterCriteriaEcrImageRegistryOutputWithContext(context.Context) FilterFilterCriteriaEcrImageRegistryOutput
}

type FilterFilterCriteriaEcrImageRegistryArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaEcrImageRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaEcrImageRegistry)(nil)).Elem()
}

func (i FilterFilterCriteriaEcrImageRegistryArgs) ToFilterFilterCriteriaEcrImageRegistryOutput() FilterFilterCriteriaEcrImageRegistryOutput {
	return i.ToFilterFilterCriteriaEcrImageRegistryOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaEcrImageRegistryArgs) ToFilterFilterCriteriaEcrImageRegistryOutputWithContext(ctx context.Context) FilterFilterCriteriaEcrImageRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaEcrImageRegistryOutput)
}

// FilterFilterCriteriaEcrImageRegistryArrayInput is an input type that accepts FilterFilterCriteriaEcrImageRegistryArray and FilterFilterCriteriaEcrImageRegistryArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaEcrImageRegistryArrayInput` via:
//
//	FilterFilterCriteriaEcrImageRegistryArray{ FilterFilterCriteriaEcrImageRegistryArgs{...} }
type FilterFilterCriteriaEcrImageRegistryArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaEcrImageRegistryArrayOutput() FilterFilterCriteriaEcrImageRegistryArrayOutput
	ToFilterFilterCriteriaEcrImageRegistryArrayOutputWithContext(context.Context) FilterFilterCriteriaEcrImageRegistryArrayOutput
}

type FilterFilterCriteriaEcrImageRegistryArray []FilterFilterCriteriaEcrImageRegistryInput

func (FilterFilterCriteriaEcrImageRegistryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaEcrImageRegistry)(nil)).Elem()
}

func (i FilterFilterCriteriaEcrImageRegistryArray) ToFilterFilterCriteriaEcrImageRegistryArrayOutput() FilterFilterCriteriaEcrImageRegistryArrayOutput {
	return i.ToFilterFilterCriteriaEcrImageRegistryArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaEcrImageRegistryArray) ToFilterFilterCriteriaEcrImageRegistryArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaEcrImageRegistryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaEcrImageRegistryArrayOutput)
}

type FilterFilterCriteriaEcrImageRegistryOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaEcrImageRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaEcrImageRegistry)(nil)).Elem()
}

func (o FilterFilterCriteriaEcrImageRegistryOutput) ToFilterFilterCriteriaEcrImageRegistryOutput() FilterFilterCriteriaEcrImageRegistryOutput {
	return o
}

func (o FilterFilterCriteriaEcrImageRegistryOutput) ToFilterFilterCriteriaEcrImageRegistryOutputWithContext(ctx context.Context) FilterFilterCriteriaEcrImageRegistryOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaEcrImageRegistryOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaEcrImageRegistry) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaEcrImageRegistryOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaEcrImageRegistry) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaEcrImageRegistryArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaEcrImageRegistryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaEcrImageRegistry)(nil)).Elem()
}

func (o FilterFilterCriteriaEcrImageRegistryArrayOutput) ToFilterFilterCriteriaEcrImageRegistryArrayOutput() FilterFilterCriteriaEcrImageRegistryArrayOutput {
	return o
}

func (o FilterFilterCriteriaEcrImageRegistryArrayOutput) ToFilterFilterCriteriaEcrImageRegistryArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaEcrImageRegistryArrayOutput {
	return o
}

func (o FilterFilterCriteriaEcrImageRegistryArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaEcrImageRegistryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaEcrImageRegistry {
		return vs[0].([]FilterFilterCriteriaEcrImageRegistry)[vs[1].(int)]
	}).(FilterFilterCriteriaEcrImageRegistryOutput)
}

type FilterFilterCriteriaEcrImageRepositoryName struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaEcrImageRepositoryNameInput is an input type that accepts FilterFilterCriteriaEcrImageRepositoryNameArgs and FilterFilterCriteriaEcrImageRepositoryNameOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaEcrImageRepositoryNameInput` via:
//
//	FilterFilterCriteriaEcrImageRepositoryNameArgs{...}
type FilterFilterCriteriaEcrImageRepositoryNameInput interface {
	pulumi.Input

	ToFilterFilterCriteriaEcrImageRepositoryNameOutput() FilterFilterCriteriaEcrImageRepositoryNameOutput
	ToFilterFilterCriteriaEcrImageRepositoryNameOutputWithContext(context.Context) FilterFilterCriteriaEcrImageRepositoryNameOutput
}

type FilterFilterCriteriaEcrImageRepositoryNameArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaEcrImageRepositoryNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaEcrImageRepositoryName)(nil)).Elem()
}

func (i FilterFilterCriteriaEcrImageRepositoryNameArgs) ToFilterFilterCriteriaEcrImageRepositoryNameOutput() FilterFilterCriteriaEcrImageRepositoryNameOutput {
	return i.ToFilterFilterCriteriaEcrImageRepositoryNameOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaEcrImageRepositoryNameArgs) ToFilterFilterCriteriaEcrImageRepositoryNameOutputWithContext(ctx context.Context) FilterFilterCriteriaEcrImageRepositoryNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaEcrImageRepositoryNameOutput)
}

// FilterFilterCriteriaEcrImageRepositoryNameArrayInput is an input type that accepts FilterFilterCriteriaEcrImageRepositoryNameArray and FilterFilterCriteriaEcrImageRepositoryNameArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaEcrImageRepositoryNameArrayInput` via:
//
//	FilterFilterCriteriaEcrImageRepositoryNameArray{ FilterFilterCriteriaEcrImageRepositoryNameArgs{...} }
type FilterFilterCriteriaEcrImageRepositoryNameArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaEcrImageRepositoryNameArrayOutput() FilterFilterCriteriaEcrImageRepositoryNameArrayOutput
	ToFilterFilterCriteriaEcrImageRepositoryNameArrayOutputWithContext(context.Context) FilterFilterCriteriaEcrImageRepositoryNameArrayOutput
}

type FilterFilterCriteriaEcrImageRepositoryNameArray []FilterFilterCriteriaEcrImageRepositoryNameInput

func (FilterFilterCriteriaEcrImageRepositoryNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaEcrImageRepositoryName)(nil)).Elem()
}

func (i FilterFilterCriteriaEcrImageRepositoryNameArray) ToFilterFilterCriteriaEcrImageRepositoryNameArrayOutput() FilterFilterCriteriaEcrImageRepositoryNameArrayOutput {
	return i.ToFilterFilterCriteriaEcrImageRepositoryNameArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaEcrImageRepositoryNameArray) ToFilterFilterCriteriaEcrImageRepositoryNameArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaEcrImageRepositoryNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaEcrImageRepositoryNameArrayOutput)
}

type FilterFilterCriteriaEcrImageRepositoryNameOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaEcrImageRepositoryNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaEcrImageRepositoryName)(nil)).Elem()
}

func (o FilterFilterCriteriaEcrImageRepositoryNameOutput) ToFilterFilterCriteriaEcrImageRepositoryNameOutput() FilterFilterCriteriaEcrImageRepositoryNameOutput {
	return o
}

func (o FilterFilterCriteriaEcrImageRepositoryNameOutput) ToFilterFilterCriteriaEcrImageRepositoryNameOutputWithContext(ctx context.Context) FilterFilterCriteriaEcrImageRepositoryNameOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaEcrImageRepositoryNameOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaEcrImageRepositoryName) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaEcrImageRepositoryNameOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaEcrImageRepositoryName) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaEcrImageRepositoryNameArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaEcrImageRepositoryNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaEcrImageRepositoryName)(nil)).Elem()
}

func (o FilterFilterCriteriaEcrImageRepositoryNameArrayOutput) ToFilterFilterCriteriaEcrImageRepositoryNameArrayOutput() FilterFilterCriteriaEcrImageRepositoryNameArrayOutput {
	return o
}

func (o FilterFilterCriteriaEcrImageRepositoryNameArrayOutput) ToFilterFilterCriteriaEcrImageRepositoryNameArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaEcrImageRepositoryNameArrayOutput {
	return o
}

func (o FilterFilterCriteriaEcrImageRepositoryNameArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaEcrImageRepositoryNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaEcrImageRepositoryName {
		return vs[0].([]FilterFilterCriteriaEcrImageRepositoryName)[vs[1].(int)]
	}).(FilterFilterCriteriaEcrImageRepositoryNameOutput)
}

type FilterFilterCriteriaEcrImageTag struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaEcrImageTagInput is an input type that accepts FilterFilterCriteriaEcrImageTagArgs and FilterFilterCriteriaEcrImageTagOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaEcrImageTagInput` via:
//
//	FilterFilterCriteriaEcrImageTagArgs{...}
type FilterFilterCriteriaEcrImageTagInput interface {
	pulumi.Input

	ToFilterFilterCriteriaEcrImageTagOutput() FilterFilterCriteriaEcrImageTagOutput
	ToFilterFilterCriteriaEcrImageTagOutputWithContext(context.Context) FilterFilterCriteriaEcrImageTagOutput
}

type FilterFilterCriteriaEcrImageTagArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaEcrImageTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaEcrImageTag)(nil)).Elem()
}

func (i FilterFilterCriteriaEcrImageTagArgs) ToFilterFilterCriteriaEcrImageTagOutput() FilterFilterCriteriaEcrImageTagOutput {
	return i.ToFilterFilterCriteriaEcrImageTagOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaEcrImageTagArgs) ToFilterFilterCriteriaEcrImageTagOutputWithContext(ctx context.Context) FilterFilterCriteriaEcrImageTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaEcrImageTagOutput)
}

// FilterFilterCriteriaEcrImageTagArrayInput is an input type that accepts FilterFilterCriteriaEcrImageTagArray and FilterFilterCriteriaEcrImageTagArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaEcrImageTagArrayInput` via:
//
//	FilterFilterCriteriaEcrImageTagArray{ FilterFilterCriteriaEcrImageTagArgs{...} }
type FilterFilterCriteriaEcrImageTagArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaEcrImageTagArrayOutput() FilterFilterCriteriaEcrImageTagArrayOutput
	ToFilterFilterCriteriaEcrImageTagArrayOutputWithContext(context.Context) FilterFilterCriteriaEcrImageTagArrayOutput
}

type FilterFilterCriteriaEcrImageTagArray []FilterFilterCriteriaEcrImageTagInput

func (FilterFilterCriteriaEcrImageTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaEcrImageTag)(nil)).Elem()
}

func (i FilterFilterCriteriaEcrImageTagArray) ToFilterFilterCriteriaEcrImageTagArrayOutput() FilterFilterCriteriaEcrImageTagArrayOutput {
	return i.ToFilterFilterCriteriaEcrImageTagArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaEcrImageTagArray) ToFilterFilterCriteriaEcrImageTagArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaEcrImageTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaEcrImageTagArrayOutput)
}

type FilterFilterCriteriaEcrImageTagOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaEcrImageTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaEcrImageTag)(nil)).Elem()
}

func (o FilterFilterCriteriaEcrImageTagOutput) ToFilterFilterCriteriaEcrImageTagOutput() FilterFilterCriteriaEcrImageTagOutput {
	return o
}

func (o FilterFilterCriteriaEcrImageTagOutput) ToFilterFilterCriteriaEcrImageTagOutputWithContext(ctx context.Context) FilterFilterCriteriaEcrImageTagOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaEcrImageTagOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaEcrImageTag) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaEcrImageTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaEcrImageTag) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaEcrImageTagArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaEcrImageTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaEcrImageTag)(nil)).Elem()
}

func (o FilterFilterCriteriaEcrImageTagArrayOutput) ToFilterFilterCriteriaEcrImageTagArrayOutput() FilterFilterCriteriaEcrImageTagArrayOutput {
	return o
}

func (o FilterFilterCriteriaEcrImageTagArrayOutput) ToFilterFilterCriteriaEcrImageTagArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaEcrImageTagArrayOutput {
	return o
}

func (o FilterFilterCriteriaEcrImageTagArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaEcrImageTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaEcrImageTag {
		return vs[0].([]FilterFilterCriteriaEcrImageTag)[vs[1].(int)]
	}).(FilterFilterCriteriaEcrImageTagOutput)
}

type FilterFilterCriteriaEpssScore struct {
	// (Optional) Lower bound of the range, inclusive.
	LowerInclusive float64 `pulumi:"lowerInclusive"`
	// (Optional) Upper bound of the range, inclusive.
	UpperInclusive float64 `pulumi:"upperInclusive"`
}

// FilterFilterCriteriaEpssScoreInput is an input type that accepts FilterFilterCriteriaEpssScoreArgs and FilterFilterCriteriaEpssScoreOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaEpssScoreInput` via:
//
//	FilterFilterCriteriaEpssScoreArgs{...}
type FilterFilterCriteriaEpssScoreInput interface {
	pulumi.Input

	ToFilterFilterCriteriaEpssScoreOutput() FilterFilterCriteriaEpssScoreOutput
	ToFilterFilterCriteriaEpssScoreOutputWithContext(context.Context) FilterFilterCriteriaEpssScoreOutput
}

type FilterFilterCriteriaEpssScoreArgs struct {
	// (Optional) Lower bound of the range, inclusive.
	LowerInclusive pulumi.Float64Input `pulumi:"lowerInclusive"`
	// (Optional) Upper bound of the range, inclusive.
	UpperInclusive pulumi.Float64Input `pulumi:"upperInclusive"`
}

func (FilterFilterCriteriaEpssScoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaEpssScore)(nil)).Elem()
}

func (i FilterFilterCriteriaEpssScoreArgs) ToFilterFilterCriteriaEpssScoreOutput() FilterFilterCriteriaEpssScoreOutput {
	return i.ToFilterFilterCriteriaEpssScoreOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaEpssScoreArgs) ToFilterFilterCriteriaEpssScoreOutputWithContext(ctx context.Context) FilterFilterCriteriaEpssScoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaEpssScoreOutput)
}

// FilterFilterCriteriaEpssScoreArrayInput is an input type that accepts FilterFilterCriteriaEpssScoreArray and FilterFilterCriteriaEpssScoreArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaEpssScoreArrayInput` via:
//
//	FilterFilterCriteriaEpssScoreArray{ FilterFilterCriteriaEpssScoreArgs{...} }
type FilterFilterCriteriaEpssScoreArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaEpssScoreArrayOutput() FilterFilterCriteriaEpssScoreArrayOutput
	ToFilterFilterCriteriaEpssScoreArrayOutputWithContext(context.Context) FilterFilterCriteriaEpssScoreArrayOutput
}

type FilterFilterCriteriaEpssScoreArray []FilterFilterCriteriaEpssScoreInput

func (FilterFilterCriteriaEpssScoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaEpssScore)(nil)).Elem()
}

func (i FilterFilterCriteriaEpssScoreArray) ToFilterFilterCriteriaEpssScoreArrayOutput() FilterFilterCriteriaEpssScoreArrayOutput {
	return i.ToFilterFilterCriteriaEpssScoreArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaEpssScoreArray) ToFilterFilterCriteriaEpssScoreArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaEpssScoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaEpssScoreArrayOutput)
}

type FilterFilterCriteriaEpssScoreOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaEpssScoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaEpssScore)(nil)).Elem()
}

func (o FilterFilterCriteriaEpssScoreOutput) ToFilterFilterCriteriaEpssScoreOutput() FilterFilterCriteriaEpssScoreOutput {
	return o
}

func (o FilterFilterCriteriaEpssScoreOutput) ToFilterFilterCriteriaEpssScoreOutputWithContext(ctx context.Context) FilterFilterCriteriaEpssScoreOutput {
	return o
}

// (Optional) Lower bound of the range, inclusive.
func (o FilterFilterCriteriaEpssScoreOutput) LowerInclusive() pulumi.Float64Output {
	return o.ApplyT(func(v FilterFilterCriteriaEpssScore) float64 { return v.LowerInclusive }).(pulumi.Float64Output)
}

// (Optional) Upper bound of the range, inclusive.
func (o FilterFilterCriteriaEpssScoreOutput) UpperInclusive() pulumi.Float64Output {
	return o.ApplyT(func(v FilterFilterCriteriaEpssScore) float64 { return v.UpperInclusive }).(pulumi.Float64Output)
}

type FilterFilterCriteriaEpssScoreArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaEpssScoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaEpssScore)(nil)).Elem()
}

func (o FilterFilterCriteriaEpssScoreArrayOutput) ToFilterFilterCriteriaEpssScoreArrayOutput() FilterFilterCriteriaEpssScoreArrayOutput {
	return o
}

func (o FilterFilterCriteriaEpssScoreArrayOutput) ToFilterFilterCriteriaEpssScoreArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaEpssScoreArrayOutput {
	return o
}

func (o FilterFilterCriteriaEpssScoreArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaEpssScoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaEpssScore {
		return vs[0].([]FilterFilterCriteriaEpssScore)[vs[1].(int)]
	}).(FilterFilterCriteriaEpssScoreOutput)
}

type FilterFilterCriteriaExploitAvailable struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaExploitAvailableInput is an input type that accepts FilterFilterCriteriaExploitAvailableArgs and FilterFilterCriteriaExploitAvailableOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaExploitAvailableInput` via:
//
//	FilterFilterCriteriaExploitAvailableArgs{...}
type FilterFilterCriteriaExploitAvailableInput interface {
	pulumi.Input

	ToFilterFilterCriteriaExploitAvailableOutput() FilterFilterCriteriaExploitAvailableOutput
	ToFilterFilterCriteriaExploitAvailableOutputWithContext(context.Context) FilterFilterCriteriaExploitAvailableOutput
}

type FilterFilterCriteriaExploitAvailableArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaExploitAvailableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaExploitAvailable)(nil)).Elem()
}

func (i FilterFilterCriteriaExploitAvailableArgs) ToFilterFilterCriteriaExploitAvailableOutput() FilterFilterCriteriaExploitAvailableOutput {
	return i.ToFilterFilterCriteriaExploitAvailableOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaExploitAvailableArgs) ToFilterFilterCriteriaExploitAvailableOutputWithContext(ctx context.Context) FilterFilterCriteriaExploitAvailableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaExploitAvailableOutput)
}

// FilterFilterCriteriaExploitAvailableArrayInput is an input type that accepts FilterFilterCriteriaExploitAvailableArray and FilterFilterCriteriaExploitAvailableArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaExploitAvailableArrayInput` via:
//
//	FilterFilterCriteriaExploitAvailableArray{ FilterFilterCriteriaExploitAvailableArgs{...} }
type FilterFilterCriteriaExploitAvailableArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaExploitAvailableArrayOutput() FilterFilterCriteriaExploitAvailableArrayOutput
	ToFilterFilterCriteriaExploitAvailableArrayOutputWithContext(context.Context) FilterFilterCriteriaExploitAvailableArrayOutput
}

type FilterFilterCriteriaExploitAvailableArray []FilterFilterCriteriaExploitAvailableInput

func (FilterFilterCriteriaExploitAvailableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaExploitAvailable)(nil)).Elem()
}

func (i FilterFilterCriteriaExploitAvailableArray) ToFilterFilterCriteriaExploitAvailableArrayOutput() FilterFilterCriteriaExploitAvailableArrayOutput {
	return i.ToFilterFilterCriteriaExploitAvailableArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaExploitAvailableArray) ToFilterFilterCriteriaExploitAvailableArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaExploitAvailableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaExploitAvailableArrayOutput)
}

type FilterFilterCriteriaExploitAvailableOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaExploitAvailableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaExploitAvailable)(nil)).Elem()
}

func (o FilterFilterCriteriaExploitAvailableOutput) ToFilterFilterCriteriaExploitAvailableOutput() FilterFilterCriteriaExploitAvailableOutput {
	return o
}

func (o FilterFilterCriteriaExploitAvailableOutput) ToFilterFilterCriteriaExploitAvailableOutputWithContext(ctx context.Context) FilterFilterCriteriaExploitAvailableOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaExploitAvailableOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaExploitAvailable) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaExploitAvailableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaExploitAvailable) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaExploitAvailableArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaExploitAvailableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaExploitAvailable)(nil)).Elem()
}

func (o FilterFilterCriteriaExploitAvailableArrayOutput) ToFilterFilterCriteriaExploitAvailableArrayOutput() FilterFilterCriteriaExploitAvailableArrayOutput {
	return o
}

func (o FilterFilterCriteriaExploitAvailableArrayOutput) ToFilterFilterCriteriaExploitAvailableArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaExploitAvailableArrayOutput {
	return o
}

func (o FilterFilterCriteriaExploitAvailableArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaExploitAvailableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaExploitAvailable {
		return vs[0].([]FilterFilterCriteriaExploitAvailable)[vs[1].(int)]
	}).(FilterFilterCriteriaExploitAvailableOutput)
}

type FilterFilterCriteriaFindingArn struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaFindingArnInput is an input type that accepts FilterFilterCriteriaFindingArnArgs and FilterFilterCriteriaFindingArnOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaFindingArnInput` via:
//
//	FilterFilterCriteriaFindingArnArgs{...}
type FilterFilterCriteriaFindingArnInput interface {
	pulumi.Input

	ToFilterFilterCriteriaFindingArnOutput() FilterFilterCriteriaFindingArnOutput
	ToFilterFilterCriteriaFindingArnOutputWithContext(context.Context) FilterFilterCriteriaFindingArnOutput
}

type FilterFilterCriteriaFindingArnArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaFindingArnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaFindingArn)(nil)).Elem()
}

func (i FilterFilterCriteriaFindingArnArgs) ToFilterFilterCriteriaFindingArnOutput() FilterFilterCriteriaFindingArnOutput {
	return i.ToFilterFilterCriteriaFindingArnOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaFindingArnArgs) ToFilterFilterCriteriaFindingArnOutputWithContext(ctx context.Context) FilterFilterCriteriaFindingArnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaFindingArnOutput)
}

// FilterFilterCriteriaFindingArnArrayInput is an input type that accepts FilterFilterCriteriaFindingArnArray and FilterFilterCriteriaFindingArnArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaFindingArnArrayInput` via:
//
//	FilterFilterCriteriaFindingArnArray{ FilterFilterCriteriaFindingArnArgs{...} }
type FilterFilterCriteriaFindingArnArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaFindingArnArrayOutput() FilterFilterCriteriaFindingArnArrayOutput
	ToFilterFilterCriteriaFindingArnArrayOutputWithContext(context.Context) FilterFilterCriteriaFindingArnArrayOutput
}

type FilterFilterCriteriaFindingArnArray []FilterFilterCriteriaFindingArnInput

func (FilterFilterCriteriaFindingArnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaFindingArn)(nil)).Elem()
}

func (i FilterFilterCriteriaFindingArnArray) ToFilterFilterCriteriaFindingArnArrayOutput() FilterFilterCriteriaFindingArnArrayOutput {
	return i.ToFilterFilterCriteriaFindingArnArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaFindingArnArray) ToFilterFilterCriteriaFindingArnArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaFindingArnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaFindingArnArrayOutput)
}

type FilterFilterCriteriaFindingArnOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaFindingArnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaFindingArn)(nil)).Elem()
}

func (o FilterFilterCriteriaFindingArnOutput) ToFilterFilterCriteriaFindingArnOutput() FilterFilterCriteriaFindingArnOutput {
	return o
}

func (o FilterFilterCriteriaFindingArnOutput) ToFilterFilterCriteriaFindingArnOutputWithContext(ctx context.Context) FilterFilterCriteriaFindingArnOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaFindingArnOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaFindingArn) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaFindingArnOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaFindingArn) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaFindingArnArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaFindingArnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaFindingArn)(nil)).Elem()
}

func (o FilterFilterCriteriaFindingArnArrayOutput) ToFilterFilterCriteriaFindingArnArrayOutput() FilterFilterCriteriaFindingArnArrayOutput {
	return o
}

func (o FilterFilterCriteriaFindingArnArrayOutput) ToFilterFilterCriteriaFindingArnArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaFindingArnArrayOutput {
	return o
}

func (o FilterFilterCriteriaFindingArnArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaFindingArnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaFindingArn {
		return vs[0].([]FilterFilterCriteriaFindingArn)[vs[1].(int)]
	}).(FilterFilterCriteriaFindingArnOutput)
}

type FilterFilterCriteriaFindingStatus struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaFindingStatusInput is an input type that accepts FilterFilterCriteriaFindingStatusArgs and FilterFilterCriteriaFindingStatusOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaFindingStatusInput` via:
//
//	FilterFilterCriteriaFindingStatusArgs{...}
type FilterFilterCriteriaFindingStatusInput interface {
	pulumi.Input

	ToFilterFilterCriteriaFindingStatusOutput() FilterFilterCriteriaFindingStatusOutput
	ToFilterFilterCriteriaFindingStatusOutputWithContext(context.Context) FilterFilterCriteriaFindingStatusOutput
}

type FilterFilterCriteriaFindingStatusArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaFindingStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaFindingStatus)(nil)).Elem()
}

func (i FilterFilterCriteriaFindingStatusArgs) ToFilterFilterCriteriaFindingStatusOutput() FilterFilterCriteriaFindingStatusOutput {
	return i.ToFilterFilterCriteriaFindingStatusOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaFindingStatusArgs) ToFilterFilterCriteriaFindingStatusOutputWithContext(ctx context.Context) FilterFilterCriteriaFindingStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaFindingStatusOutput)
}

// FilterFilterCriteriaFindingStatusArrayInput is an input type that accepts FilterFilterCriteriaFindingStatusArray and FilterFilterCriteriaFindingStatusArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaFindingStatusArrayInput` via:
//
//	FilterFilterCriteriaFindingStatusArray{ FilterFilterCriteriaFindingStatusArgs{...} }
type FilterFilterCriteriaFindingStatusArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaFindingStatusArrayOutput() FilterFilterCriteriaFindingStatusArrayOutput
	ToFilterFilterCriteriaFindingStatusArrayOutputWithContext(context.Context) FilterFilterCriteriaFindingStatusArrayOutput
}

type FilterFilterCriteriaFindingStatusArray []FilterFilterCriteriaFindingStatusInput

func (FilterFilterCriteriaFindingStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaFindingStatus)(nil)).Elem()
}

func (i FilterFilterCriteriaFindingStatusArray) ToFilterFilterCriteriaFindingStatusArrayOutput() FilterFilterCriteriaFindingStatusArrayOutput {
	return i.ToFilterFilterCriteriaFindingStatusArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaFindingStatusArray) ToFilterFilterCriteriaFindingStatusArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaFindingStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaFindingStatusArrayOutput)
}

type FilterFilterCriteriaFindingStatusOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaFindingStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaFindingStatus)(nil)).Elem()
}

func (o FilterFilterCriteriaFindingStatusOutput) ToFilterFilterCriteriaFindingStatusOutput() FilterFilterCriteriaFindingStatusOutput {
	return o
}

func (o FilterFilterCriteriaFindingStatusOutput) ToFilterFilterCriteriaFindingStatusOutputWithContext(ctx context.Context) FilterFilterCriteriaFindingStatusOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaFindingStatusOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaFindingStatus) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaFindingStatusOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaFindingStatus) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaFindingStatusArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaFindingStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaFindingStatus)(nil)).Elem()
}

func (o FilterFilterCriteriaFindingStatusArrayOutput) ToFilterFilterCriteriaFindingStatusArrayOutput() FilterFilterCriteriaFindingStatusArrayOutput {
	return o
}

func (o FilterFilterCriteriaFindingStatusArrayOutput) ToFilterFilterCriteriaFindingStatusArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaFindingStatusArrayOutput {
	return o
}

func (o FilterFilterCriteriaFindingStatusArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaFindingStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaFindingStatus {
		return vs[0].([]FilterFilterCriteriaFindingStatus)[vs[1].(int)]
	}).(FilterFilterCriteriaFindingStatusOutput)
}

type FilterFilterCriteriaFindingType struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaFindingTypeInput is an input type that accepts FilterFilterCriteriaFindingTypeArgs and FilterFilterCriteriaFindingTypeOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaFindingTypeInput` via:
//
//	FilterFilterCriteriaFindingTypeArgs{...}
type FilterFilterCriteriaFindingTypeInput interface {
	pulumi.Input

	ToFilterFilterCriteriaFindingTypeOutput() FilterFilterCriteriaFindingTypeOutput
	ToFilterFilterCriteriaFindingTypeOutputWithContext(context.Context) FilterFilterCriteriaFindingTypeOutput
}

type FilterFilterCriteriaFindingTypeArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaFindingTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaFindingType)(nil)).Elem()
}

func (i FilterFilterCriteriaFindingTypeArgs) ToFilterFilterCriteriaFindingTypeOutput() FilterFilterCriteriaFindingTypeOutput {
	return i.ToFilterFilterCriteriaFindingTypeOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaFindingTypeArgs) ToFilterFilterCriteriaFindingTypeOutputWithContext(ctx context.Context) FilterFilterCriteriaFindingTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaFindingTypeOutput)
}

// FilterFilterCriteriaFindingTypeArrayInput is an input type that accepts FilterFilterCriteriaFindingTypeArray and FilterFilterCriteriaFindingTypeArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaFindingTypeArrayInput` via:
//
//	FilterFilterCriteriaFindingTypeArray{ FilterFilterCriteriaFindingTypeArgs{...} }
type FilterFilterCriteriaFindingTypeArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaFindingTypeArrayOutput() FilterFilterCriteriaFindingTypeArrayOutput
	ToFilterFilterCriteriaFindingTypeArrayOutputWithContext(context.Context) FilterFilterCriteriaFindingTypeArrayOutput
}

type FilterFilterCriteriaFindingTypeArray []FilterFilterCriteriaFindingTypeInput

func (FilterFilterCriteriaFindingTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaFindingType)(nil)).Elem()
}

func (i FilterFilterCriteriaFindingTypeArray) ToFilterFilterCriteriaFindingTypeArrayOutput() FilterFilterCriteriaFindingTypeArrayOutput {
	return i.ToFilterFilterCriteriaFindingTypeArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaFindingTypeArray) ToFilterFilterCriteriaFindingTypeArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaFindingTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaFindingTypeArrayOutput)
}

type FilterFilterCriteriaFindingTypeOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaFindingTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaFindingType)(nil)).Elem()
}

func (o FilterFilterCriteriaFindingTypeOutput) ToFilterFilterCriteriaFindingTypeOutput() FilterFilterCriteriaFindingTypeOutput {
	return o
}

func (o FilterFilterCriteriaFindingTypeOutput) ToFilterFilterCriteriaFindingTypeOutputWithContext(ctx context.Context) FilterFilterCriteriaFindingTypeOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaFindingTypeOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaFindingType) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaFindingTypeOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaFindingType) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaFindingTypeArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaFindingTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaFindingType)(nil)).Elem()
}

func (o FilterFilterCriteriaFindingTypeArrayOutput) ToFilterFilterCriteriaFindingTypeArrayOutput() FilterFilterCriteriaFindingTypeArrayOutput {
	return o
}

func (o FilterFilterCriteriaFindingTypeArrayOutput) ToFilterFilterCriteriaFindingTypeArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaFindingTypeArrayOutput {
	return o
}

func (o FilterFilterCriteriaFindingTypeArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaFindingTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaFindingType {
		return vs[0].([]FilterFilterCriteriaFindingType)[vs[1].(int)]
	}).(FilterFilterCriteriaFindingTypeOutput)
}

type FilterFilterCriteriaFirstObservedAt struct {
	// (Required) The end of the port range, inclusive.
	EndInclusive *string `pulumi:"endInclusive"`
	// (Optional) Start of the date range in RFC 3339 format, inclusive. Set the timezone to UTC.
	StartInclusive *string `pulumi:"startInclusive"`
}

// FilterFilterCriteriaFirstObservedAtInput is an input type that accepts FilterFilterCriteriaFirstObservedAtArgs and FilterFilterCriteriaFirstObservedAtOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaFirstObservedAtInput` via:
//
//	FilterFilterCriteriaFirstObservedAtArgs{...}
type FilterFilterCriteriaFirstObservedAtInput interface {
	pulumi.Input

	ToFilterFilterCriteriaFirstObservedAtOutput() FilterFilterCriteriaFirstObservedAtOutput
	ToFilterFilterCriteriaFirstObservedAtOutputWithContext(context.Context) FilterFilterCriteriaFirstObservedAtOutput
}

type FilterFilterCriteriaFirstObservedAtArgs struct {
	// (Required) The end of the port range, inclusive.
	EndInclusive pulumi.StringPtrInput `pulumi:"endInclusive"`
	// (Optional) Start of the date range in RFC 3339 format, inclusive. Set the timezone to UTC.
	StartInclusive pulumi.StringPtrInput `pulumi:"startInclusive"`
}

func (FilterFilterCriteriaFirstObservedAtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaFirstObservedAt)(nil)).Elem()
}

func (i FilterFilterCriteriaFirstObservedAtArgs) ToFilterFilterCriteriaFirstObservedAtOutput() FilterFilterCriteriaFirstObservedAtOutput {
	return i.ToFilterFilterCriteriaFirstObservedAtOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaFirstObservedAtArgs) ToFilterFilterCriteriaFirstObservedAtOutputWithContext(ctx context.Context) FilterFilterCriteriaFirstObservedAtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaFirstObservedAtOutput)
}

// FilterFilterCriteriaFirstObservedAtArrayInput is an input type that accepts FilterFilterCriteriaFirstObservedAtArray and FilterFilterCriteriaFirstObservedAtArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaFirstObservedAtArrayInput` via:
//
//	FilterFilterCriteriaFirstObservedAtArray{ FilterFilterCriteriaFirstObservedAtArgs{...} }
type FilterFilterCriteriaFirstObservedAtArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaFirstObservedAtArrayOutput() FilterFilterCriteriaFirstObservedAtArrayOutput
	ToFilterFilterCriteriaFirstObservedAtArrayOutputWithContext(context.Context) FilterFilterCriteriaFirstObservedAtArrayOutput
}

type FilterFilterCriteriaFirstObservedAtArray []FilterFilterCriteriaFirstObservedAtInput

func (FilterFilterCriteriaFirstObservedAtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaFirstObservedAt)(nil)).Elem()
}

func (i FilterFilterCriteriaFirstObservedAtArray) ToFilterFilterCriteriaFirstObservedAtArrayOutput() FilterFilterCriteriaFirstObservedAtArrayOutput {
	return i.ToFilterFilterCriteriaFirstObservedAtArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaFirstObservedAtArray) ToFilterFilterCriteriaFirstObservedAtArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaFirstObservedAtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaFirstObservedAtArrayOutput)
}

type FilterFilterCriteriaFirstObservedAtOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaFirstObservedAtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaFirstObservedAt)(nil)).Elem()
}

func (o FilterFilterCriteriaFirstObservedAtOutput) ToFilterFilterCriteriaFirstObservedAtOutput() FilterFilterCriteriaFirstObservedAtOutput {
	return o
}

func (o FilterFilterCriteriaFirstObservedAtOutput) ToFilterFilterCriteriaFirstObservedAtOutputWithContext(ctx context.Context) FilterFilterCriteriaFirstObservedAtOutput {
	return o
}

// (Required) The end of the port range, inclusive.
func (o FilterFilterCriteriaFirstObservedAtOutput) EndInclusive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilterFilterCriteriaFirstObservedAt) *string { return v.EndInclusive }).(pulumi.StringPtrOutput)
}

// (Optional) Start of the date range in RFC 3339 format, inclusive. Set the timezone to UTC.
func (o FilterFilterCriteriaFirstObservedAtOutput) StartInclusive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilterFilterCriteriaFirstObservedAt) *string { return v.StartInclusive }).(pulumi.StringPtrOutput)
}

type FilterFilterCriteriaFirstObservedAtArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaFirstObservedAtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaFirstObservedAt)(nil)).Elem()
}

func (o FilterFilterCriteriaFirstObservedAtArrayOutput) ToFilterFilterCriteriaFirstObservedAtArrayOutput() FilterFilterCriteriaFirstObservedAtArrayOutput {
	return o
}

func (o FilterFilterCriteriaFirstObservedAtArrayOutput) ToFilterFilterCriteriaFirstObservedAtArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaFirstObservedAtArrayOutput {
	return o
}

func (o FilterFilterCriteriaFirstObservedAtArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaFirstObservedAtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaFirstObservedAt {
		return vs[0].([]FilterFilterCriteriaFirstObservedAt)[vs[1].(int)]
	}).(FilterFilterCriteriaFirstObservedAtOutput)
}

type FilterFilterCriteriaFixAvailable struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaFixAvailableInput is an input type that accepts FilterFilterCriteriaFixAvailableArgs and FilterFilterCriteriaFixAvailableOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaFixAvailableInput` via:
//
//	FilterFilterCriteriaFixAvailableArgs{...}
type FilterFilterCriteriaFixAvailableInput interface {
	pulumi.Input

	ToFilterFilterCriteriaFixAvailableOutput() FilterFilterCriteriaFixAvailableOutput
	ToFilterFilterCriteriaFixAvailableOutputWithContext(context.Context) FilterFilterCriteriaFixAvailableOutput
}

type FilterFilterCriteriaFixAvailableArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaFixAvailableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaFixAvailable)(nil)).Elem()
}

func (i FilterFilterCriteriaFixAvailableArgs) ToFilterFilterCriteriaFixAvailableOutput() FilterFilterCriteriaFixAvailableOutput {
	return i.ToFilterFilterCriteriaFixAvailableOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaFixAvailableArgs) ToFilterFilterCriteriaFixAvailableOutputWithContext(ctx context.Context) FilterFilterCriteriaFixAvailableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaFixAvailableOutput)
}

// FilterFilterCriteriaFixAvailableArrayInput is an input type that accepts FilterFilterCriteriaFixAvailableArray and FilterFilterCriteriaFixAvailableArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaFixAvailableArrayInput` via:
//
//	FilterFilterCriteriaFixAvailableArray{ FilterFilterCriteriaFixAvailableArgs{...} }
type FilterFilterCriteriaFixAvailableArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaFixAvailableArrayOutput() FilterFilterCriteriaFixAvailableArrayOutput
	ToFilterFilterCriteriaFixAvailableArrayOutputWithContext(context.Context) FilterFilterCriteriaFixAvailableArrayOutput
}

type FilterFilterCriteriaFixAvailableArray []FilterFilterCriteriaFixAvailableInput

func (FilterFilterCriteriaFixAvailableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaFixAvailable)(nil)).Elem()
}

func (i FilterFilterCriteriaFixAvailableArray) ToFilterFilterCriteriaFixAvailableArrayOutput() FilterFilterCriteriaFixAvailableArrayOutput {
	return i.ToFilterFilterCriteriaFixAvailableArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaFixAvailableArray) ToFilterFilterCriteriaFixAvailableArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaFixAvailableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaFixAvailableArrayOutput)
}

type FilterFilterCriteriaFixAvailableOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaFixAvailableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaFixAvailable)(nil)).Elem()
}

func (o FilterFilterCriteriaFixAvailableOutput) ToFilterFilterCriteriaFixAvailableOutput() FilterFilterCriteriaFixAvailableOutput {
	return o
}

func (o FilterFilterCriteriaFixAvailableOutput) ToFilterFilterCriteriaFixAvailableOutputWithContext(ctx context.Context) FilterFilterCriteriaFixAvailableOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaFixAvailableOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaFixAvailable) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaFixAvailableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaFixAvailable) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaFixAvailableArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaFixAvailableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaFixAvailable)(nil)).Elem()
}

func (o FilterFilterCriteriaFixAvailableArrayOutput) ToFilterFilterCriteriaFixAvailableArrayOutput() FilterFilterCriteriaFixAvailableArrayOutput {
	return o
}

func (o FilterFilterCriteriaFixAvailableArrayOutput) ToFilterFilterCriteriaFixAvailableArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaFixAvailableArrayOutput {
	return o
}

func (o FilterFilterCriteriaFixAvailableArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaFixAvailableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaFixAvailable {
		return vs[0].([]FilterFilterCriteriaFixAvailable)[vs[1].(int)]
	}).(FilterFilterCriteriaFixAvailableOutput)
}

type FilterFilterCriteriaInspectorScore struct {
	// (Optional) Lower bound of the range, inclusive.
	LowerInclusive float64 `pulumi:"lowerInclusive"`
	// (Optional) Upper bound of the range, inclusive.
	UpperInclusive float64 `pulumi:"upperInclusive"`
}

// FilterFilterCriteriaInspectorScoreInput is an input type that accepts FilterFilterCriteriaInspectorScoreArgs and FilterFilterCriteriaInspectorScoreOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaInspectorScoreInput` via:
//
//	FilterFilterCriteriaInspectorScoreArgs{...}
type FilterFilterCriteriaInspectorScoreInput interface {
	pulumi.Input

	ToFilterFilterCriteriaInspectorScoreOutput() FilterFilterCriteriaInspectorScoreOutput
	ToFilterFilterCriteriaInspectorScoreOutputWithContext(context.Context) FilterFilterCriteriaInspectorScoreOutput
}

type FilterFilterCriteriaInspectorScoreArgs struct {
	// (Optional) Lower bound of the range, inclusive.
	LowerInclusive pulumi.Float64Input `pulumi:"lowerInclusive"`
	// (Optional) Upper bound of the range, inclusive.
	UpperInclusive pulumi.Float64Input `pulumi:"upperInclusive"`
}

func (FilterFilterCriteriaInspectorScoreArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaInspectorScore)(nil)).Elem()
}

func (i FilterFilterCriteriaInspectorScoreArgs) ToFilterFilterCriteriaInspectorScoreOutput() FilterFilterCriteriaInspectorScoreOutput {
	return i.ToFilterFilterCriteriaInspectorScoreOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaInspectorScoreArgs) ToFilterFilterCriteriaInspectorScoreOutputWithContext(ctx context.Context) FilterFilterCriteriaInspectorScoreOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaInspectorScoreOutput)
}

// FilterFilterCriteriaInspectorScoreArrayInput is an input type that accepts FilterFilterCriteriaInspectorScoreArray and FilterFilterCriteriaInspectorScoreArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaInspectorScoreArrayInput` via:
//
//	FilterFilterCriteriaInspectorScoreArray{ FilterFilterCriteriaInspectorScoreArgs{...} }
type FilterFilterCriteriaInspectorScoreArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaInspectorScoreArrayOutput() FilterFilterCriteriaInspectorScoreArrayOutput
	ToFilterFilterCriteriaInspectorScoreArrayOutputWithContext(context.Context) FilterFilterCriteriaInspectorScoreArrayOutput
}

type FilterFilterCriteriaInspectorScoreArray []FilterFilterCriteriaInspectorScoreInput

func (FilterFilterCriteriaInspectorScoreArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaInspectorScore)(nil)).Elem()
}

func (i FilterFilterCriteriaInspectorScoreArray) ToFilterFilterCriteriaInspectorScoreArrayOutput() FilterFilterCriteriaInspectorScoreArrayOutput {
	return i.ToFilterFilterCriteriaInspectorScoreArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaInspectorScoreArray) ToFilterFilterCriteriaInspectorScoreArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaInspectorScoreArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaInspectorScoreArrayOutput)
}

type FilterFilterCriteriaInspectorScoreOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaInspectorScoreOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaInspectorScore)(nil)).Elem()
}

func (o FilterFilterCriteriaInspectorScoreOutput) ToFilterFilterCriteriaInspectorScoreOutput() FilterFilterCriteriaInspectorScoreOutput {
	return o
}

func (o FilterFilterCriteriaInspectorScoreOutput) ToFilterFilterCriteriaInspectorScoreOutputWithContext(ctx context.Context) FilterFilterCriteriaInspectorScoreOutput {
	return o
}

// (Optional) Lower bound of the range, inclusive.
func (o FilterFilterCriteriaInspectorScoreOutput) LowerInclusive() pulumi.Float64Output {
	return o.ApplyT(func(v FilterFilterCriteriaInspectorScore) float64 { return v.LowerInclusive }).(pulumi.Float64Output)
}

// (Optional) Upper bound of the range, inclusive.
func (o FilterFilterCriteriaInspectorScoreOutput) UpperInclusive() pulumi.Float64Output {
	return o.ApplyT(func(v FilterFilterCriteriaInspectorScore) float64 { return v.UpperInclusive }).(pulumi.Float64Output)
}

type FilterFilterCriteriaInspectorScoreArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaInspectorScoreArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaInspectorScore)(nil)).Elem()
}

func (o FilterFilterCriteriaInspectorScoreArrayOutput) ToFilterFilterCriteriaInspectorScoreArrayOutput() FilterFilterCriteriaInspectorScoreArrayOutput {
	return o
}

func (o FilterFilterCriteriaInspectorScoreArrayOutput) ToFilterFilterCriteriaInspectorScoreArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaInspectorScoreArrayOutput {
	return o
}

func (o FilterFilterCriteriaInspectorScoreArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaInspectorScoreOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaInspectorScore {
		return vs[0].([]FilterFilterCriteriaInspectorScore)[vs[1].(int)]
	}).(FilterFilterCriteriaInspectorScoreOutput)
}

type FilterFilterCriteriaLambdaFunctionExecutionRoleArn struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaLambdaFunctionExecutionRoleArnInput is an input type that accepts FilterFilterCriteriaLambdaFunctionExecutionRoleArnArgs and FilterFilterCriteriaLambdaFunctionExecutionRoleArnOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaLambdaFunctionExecutionRoleArnInput` via:
//
//	FilterFilterCriteriaLambdaFunctionExecutionRoleArnArgs{...}
type FilterFilterCriteriaLambdaFunctionExecutionRoleArnInput interface {
	pulumi.Input

	ToFilterFilterCriteriaLambdaFunctionExecutionRoleArnOutput() FilterFilterCriteriaLambdaFunctionExecutionRoleArnOutput
	ToFilterFilterCriteriaLambdaFunctionExecutionRoleArnOutputWithContext(context.Context) FilterFilterCriteriaLambdaFunctionExecutionRoleArnOutput
}

type FilterFilterCriteriaLambdaFunctionExecutionRoleArnArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaLambdaFunctionExecutionRoleArnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaLambdaFunctionExecutionRoleArn)(nil)).Elem()
}

func (i FilterFilterCriteriaLambdaFunctionExecutionRoleArnArgs) ToFilterFilterCriteriaLambdaFunctionExecutionRoleArnOutput() FilterFilterCriteriaLambdaFunctionExecutionRoleArnOutput {
	return i.ToFilterFilterCriteriaLambdaFunctionExecutionRoleArnOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaLambdaFunctionExecutionRoleArnArgs) ToFilterFilterCriteriaLambdaFunctionExecutionRoleArnOutputWithContext(ctx context.Context) FilterFilterCriteriaLambdaFunctionExecutionRoleArnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaLambdaFunctionExecutionRoleArnOutput)
}

// FilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayInput is an input type that accepts FilterFilterCriteriaLambdaFunctionExecutionRoleArnArray and FilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayInput` via:
//
//	FilterFilterCriteriaLambdaFunctionExecutionRoleArnArray{ FilterFilterCriteriaLambdaFunctionExecutionRoleArnArgs{...} }
type FilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayOutput() FilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayOutput
	ToFilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayOutputWithContext(context.Context) FilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayOutput
}

type FilterFilterCriteriaLambdaFunctionExecutionRoleArnArray []FilterFilterCriteriaLambdaFunctionExecutionRoleArnInput

func (FilterFilterCriteriaLambdaFunctionExecutionRoleArnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaLambdaFunctionExecutionRoleArn)(nil)).Elem()
}

func (i FilterFilterCriteriaLambdaFunctionExecutionRoleArnArray) ToFilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayOutput() FilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayOutput {
	return i.ToFilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaLambdaFunctionExecutionRoleArnArray) ToFilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayOutput)
}

type FilterFilterCriteriaLambdaFunctionExecutionRoleArnOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaLambdaFunctionExecutionRoleArnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaLambdaFunctionExecutionRoleArn)(nil)).Elem()
}

func (o FilterFilterCriteriaLambdaFunctionExecutionRoleArnOutput) ToFilterFilterCriteriaLambdaFunctionExecutionRoleArnOutput() FilterFilterCriteriaLambdaFunctionExecutionRoleArnOutput {
	return o
}

func (o FilterFilterCriteriaLambdaFunctionExecutionRoleArnOutput) ToFilterFilterCriteriaLambdaFunctionExecutionRoleArnOutputWithContext(ctx context.Context) FilterFilterCriteriaLambdaFunctionExecutionRoleArnOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaLambdaFunctionExecutionRoleArnOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaLambdaFunctionExecutionRoleArn) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaLambdaFunctionExecutionRoleArnOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaLambdaFunctionExecutionRoleArn) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaLambdaFunctionExecutionRoleArn)(nil)).Elem()
}

func (o FilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayOutput) ToFilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayOutput() FilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayOutput {
	return o
}

func (o FilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayOutput) ToFilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayOutput {
	return o
}

func (o FilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaLambdaFunctionExecutionRoleArnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaLambdaFunctionExecutionRoleArn {
		return vs[0].([]FilterFilterCriteriaLambdaFunctionExecutionRoleArn)[vs[1].(int)]
	}).(FilterFilterCriteriaLambdaFunctionExecutionRoleArnOutput)
}

type FilterFilterCriteriaLambdaFunctionLastModifiedAt struct {
	// (Required) The end of the port range, inclusive.
	EndInclusive *string `pulumi:"endInclusive"`
	// (Optional) Start of the date range in RFC 3339 format, inclusive. Set the timezone to UTC.
	StartInclusive *string `pulumi:"startInclusive"`
}

// FilterFilterCriteriaLambdaFunctionLastModifiedAtInput is an input type that accepts FilterFilterCriteriaLambdaFunctionLastModifiedAtArgs and FilterFilterCriteriaLambdaFunctionLastModifiedAtOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaLambdaFunctionLastModifiedAtInput` via:
//
//	FilterFilterCriteriaLambdaFunctionLastModifiedAtArgs{...}
type FilterFilterCriteriaLambdaFunctionLastModifiedAtInput interface {
	pulumi.Input

	ToFilterFilterCriteriaLambdaFunctionLastModifiedAtOutput() FilterFilterCriteriaLambdaFunctionLastModifiedAtOutput
	ToFilterFilterCriteriaLambdaFunctionLastModifiedAtOutputWithContext(context.Context) FilterFilterCriteriaLambdaFunctionLastModifiedAtOutput
}

type FilterFilterCriteriaLambdaFunctionLastModifiedAtArgs struct {
	// (Required) The end of the port range, inclusive.
	EndInclusive pulumi.StringPtrInput `pulumi:"endInclusive"`
	// (Optional) Start of the date range in RFC 3339 format, inclusive. Set the timezone to UTC.
	StartInclusive pulumi.StringPtrInput `pulumi:"startInclusive"`
}

func (FilterFilterCriteriaLambdaFunctionLastModifiedAtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaLambdaFunctionLastModifiedAt)(nil)).Elem()
}

func (i FilterFilterCriteriaLambdaFunctionLastModifiedAtArgs) ToFilterFilterCriteriaLambdaFunctionLastModifiedAtOutput() FilterFilterCriteriaLambdaFunctionLastModifiedAtOutput {
	return i.ToFilterFilterCriteriaLambdaFunctionLastModifiedAtOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaLambdaFunctionLastModifiedAtArgs) ToFilterFilterCriteriaLambdaFunctionLastModifiedAtOutputWithContext(ctx context.Context) FilterFilterCriteriaLambdaFunctionLastModifiedAtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaLambdaFunctionLastModifiedAtOutput)
}

// FilterFilterCriteriaLambdaFunctionLastModifiedAtArrayInput is an input type that accepts FilterFilterCriteriaLambdaFunctionLastModifiedAtArray and FilterFilterCriteriaLambdaFunctionLastModifiedAtArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaLambdaFunctionLastModifiedAtArrayInput` via:
//
//	FilterFilterCriteriaLambdaFunctionLastModifiedAtArray{ FilterFilterCriteriaLambdaFunctionLastModifiedAtArgs{...} }
type FilterFilterCriteriaLambdaFunctionLastModifiedAtArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaLambdaFunctionLastModifiedAtArrayOutput() FilterFilterCriteriaLambdaFunctionLastModifiedAtArrayOutput
	ToFilterFilterCriteriaLambdaFunctionLastModifiedAtArrayOutputWithContext(context.Context) FilterFilterCriteriaLambdaFunctionLastModifiedAtArrayOutput
}

type FilterFilterCriteriaLambdaFunctionLastModifiedAtArray []FilterFilterCriteriaLambdaFunctionLastModifiedAtInput

func (FilterFilterCriteriaLambdaFunctionLastModifiedAtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaLambdaFunctionLastModifiedAt)(nil)).Elem()
}

func (i FilterFilterCriteriaLambdaFunctionLastModifiedAtArray) ToFilterFilterCriteriaLambdaFunctionLastModifiedAtArrayOutput() FilterFilterCriteriaLambdaFunctionLastModifiedAtArrayOutput {
	return i.ToFilterFilterCriteriaLambdaFunctionLastModifiedAtArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaLambdaFunctionLastModifiedAtArray) ToFilterFilterCriteriaLambdaFunctionLastModifiedAtArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaLambdaFunctionLastModifiedAtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaLambdaFunctionLastModifiedAtArrayOutput)
}

type FilterFilterCriteriaLambdaFunctionLastModifiedAtOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaLambdaFunctionLastModifiedAtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaLambdaFunctionLastModifiedAt)(nil)).Elem()
}

func (o FilterFilterCriteriaLambdaFunctionLastModifiedAtOutput) ToFilterFilterCriteriaLambdaFunctionLastModifiedAtOutput() FilterFilterCriteriaLambdaFunctionLastModifiedAtOutput {
	return o
}

func (o FilterFilterCriteriaLambdaFunctionLastModifiedAtOutput) ToFilterFilterCriteriaLambdaFunctionLastModifiedAtOutputWithContext(ctx context.Context) FilterFilterCriteriaLambdaFunctionLastModifiedAtOutput {
	return o
}

// (Required) The end of the port range, inclusive.
func (o FilterFilterCriteriaLambdaFunctionLastModifiedAtOutput) EndInclusive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilterFilterCriteriaLambdaFunctionLastModifiedAt) *string { return v.EndInclusive }).(pulumi.StringPtrOutput)
}

// (Optional) Start of the date range in RFC 3339 format, inclusive. Set the timezone to UTC.
func (o FilterFilterCriteriaLambdaFunctionLastModifiedAtOutput) StartInclusive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilterFilterCriteriaLambdaFunctionLastModifiedAt) *string { return v.StartInclusive }).(pulumi.StringPtrOutput)
}

type FilterFilterCriteriaLambdaFunctionLastModifiedAtArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaLambdaFunctionLastModifiedAtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaLambdaFunctionLastModifiedAt)(nil)).Elem()
}

func (o FilterFilterCriteriaLambdaFunctionLastModifiedAtArrayOutput) ToFilterFilterCriteriaLambdaFunctionLastModifiedAtArrayOutput() FilterFilterCriteriaLambdaFunctionLastModifiedAtArrayOutput {
	return o
}

func (o FilterFilterCriteriaLambdaFunctionLastModifiedAtArrayOutput) ToFilterFilterCriteriaLambdaFunctionLastModifiedAtArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaLambdaFunctionLastModifiedAtArrayOutput {
	return o
}

func (o FilterFilterCriteriaLambdaFunctionLastModifiedAtArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaLambdaFunctionLastModifiedAtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaLambdaFunctionLastModifiedAt {
		return vs[0].([]FilterFilterCriteriaLambdaFunctionLastModifiedAt)[vs[1].(int)]
	}).(FilterFilterCriteriaLambdaFunctionLastModifiedAtOutput)
}

type FilterFilterCriteriaLambdaFunctionLayer struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaLambdaFunctionLayerInput is an input type that accepts FilterFilterCriteriaLambdaFunctionLayerArgs and FilterFilterCriteriaLambdaFunctionLayerOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaLambdaFunctionLayerInput` via:
//
//	FilterFilterCriteriaLambdaFunctionLayerArgs{...}
type FilterFilterCriteriaLambdaFunctionLayerInput interface {
	pulumi.Input

	ToFilterFilterCriteriaLambdaFunctionLayerOutput() FilterFilterCriteriaLambdaFunctionLayerOutput
	ToFilterFilterCriteriaLambdaFunctionLayerOutputWithContext(context.Context) FilterFilterCriteriaLambdaFunctionLayerOutput
}

type FilterFilterCriteriaLambdaFunctionLayerArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaLambdaFunctionLayerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaLambdaFunctionLayer)(nil)).Elem()
}

func (i FilterFilterCriteriaLambdaFunctionLayerArgs) ToFilterFilterCriteriaLambdaFunctionLayerOutput() FilterFilterCriteriaLambdaFunctionLayerOutput {
	return i.ToFilterFilterCriteriaLambdaFunctionLayerOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaLambdaFunctionLayerArgs) ToFilterFilterCriteriaLambdaFunctionLayerOutputWithContext(ctx context.Context) FilterFilterCriteriaLambdaFunctionLayerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaLambdaFunctionLayerOutput)
}

// FilterFilterCriteriaLambdaFunctionLayerArrayInput is an input type that accepts FilterFilterCriteriaLambdaFunctionLayerArray and FilterFilterCriteriaLambdaFunctionLayerArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaLambdaFunctionLayerArrayInput` via:
//
//	FilterFilterCriteriaLambdaFunctionLayerArray{ FilterFilterCriteriaLambdaFunctionLayerArgs{...} }
type FilterFilterCriteriaLambdaFunctionLayerArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaLambdaFunctionLayerArrayOutput() FilterFilterCriteriaLambdaFunctionLayerArrayOutput
	ToFilterFilterCriteriaLambdaFunctionLayerArrayOutputWithContext(context.Context) FilterFilterCriteriaLambdaFunctionLayerArrayOutput
}

type FilterFilterCriteriaLambdaFunctionLayerArray []FilterFilterCriteriaLambdaFunctionLayerInput

func (FilterFilterCriteriaLambdaFunctionLayerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaLambdaFunctionLayer)(nil)).Elem()
}

func (i FilterFilterCriteriaLambdaFunctionLayerArray) ToFilterFilterCriteriaLambdaFunctionLayerArrayOutput() FilterFilterCriteriaLambdaFunctionLayerArrayOutput {
	return i.ToFilterFilterCriteriaLambdaFunctionLayerArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaLambdaFunctionLayerArray) ToFilterFilterCriteriaLambdaFunctionLayerArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaLambdaFunctionLayerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaLambdaFunctionLayerArrayOutput)
}

type FilterFilterCriteriaLambdaFunctionLayerOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaLambdaFunctionLayerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaLambdaFunctionLayer)(nil)).Elem()
}

func (o FilterFilterCriteriaLambdaFunctionLayerOutput) ToFilterFilterCriteriaLambdaFunctionLayerOutput() FilterFilterCriteriaLambdaFunctionLayerOutput {
	return o
}

func (o FilterFilterCriteriaLambdaFunctionLayerOutput) ToFilterFilterCriteriaLambdaFunctionLayerOutputWithContext(ctx context.Context) FilterFilterCriteriaLambdaFunctionLayerOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaLambdaFunctionLayerOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaLambdaFunctionLayer) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaLambdaFunctionLayerOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaLambdaFunctionLayer) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaLambdaFunctionLayerArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaLambdaFunctionLayerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaLambdaFunctionLayer)(nil)).Elem()
}

func (o FilterFilterCriteriaLambdaFunctionLayerArrayOutput) ToFilterFilterCriteriaLambdaFunctionLayerArrayOutput() FilterFilterCriteriaLambdaFunctionLayerArrayOutput {
	return o
}

func (o FilterFilterCriteriaLambdaFunctionLayerArrayOutput) ToFilterFilterCriteriaLambdaFunctionLayerArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaLambdaFunctionLayerArrayOutput {
	return o
}

func (o FilterFilterCriteriaLambdaFunctionLayerArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaLambdaFunctionLayerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaLambdaFunctionLayer {
		return vs[0].([]FilterFilterCriteriaLambdaFunctionLayer)[vs[1].(int)]
	}).(FilterFilterCriteriaLambdaFunctionLayerOutput)
}

type FilterFilterCriteriaLambdaFunctionName struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaLambdaFunctionNameInput is an input type that accepts FilterFilterCriteriaLambdaFunctionNameArgs and FilterFilterCriteriaLambdaFunctionNameOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaLambdaFunctionNameInput` via:
//
//	FilterFilterCriteriaLambdaFunctionNameArgs{...}
type FilterFilterCriteriaLambdaFunctionNameInput interface {
	pulumi.Input

	ToFilterFilterCriteriaLambdaFunctionNameOutput() FilterFilterCriteriaLambdaFunctionNameOutput
	ToFilterFilterCriteriaLambdaFunctionNameOutputWithContext(context.Context) FilterFilterCriteriaLambdaFunctionNameOutput
}

type FilterFilterCriteriaLambdaFunctionNameArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaLambdaFunctionNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaLambdaFunctionName)(nil)).Elem()
}

func (i FilterFilterCriteriaLambdaFunctionNameArgs) ToFilterFilterCriteriaLambdaFunctionNameOutput() FilterFilterCriteriaLambdaFunctionNameOutput {
	return i.ToFilterFilterCriteriaLambdaFunctionNameOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaLambdaFunctionNameArgs) ToFilterFilterCriteriaLambdaFunctionNameOutputWithContext(ctx context.Context) FilterFilterCriteriaLambdaFunctionNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaLambdaFunctionNameOutput)
}

// FilterFilterCriteriaLambdaFunctionNameArrayInput is an input type that accepts FilterFilterCriteriaLambdaFunctionNameArray and FilterFilterCriteriaLambdaFunctionNameArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaLambdaFunctionNameArrayInput` via:
//
//	FilterFilterCriteriaLambdaFunctionNameArray{ FilterFilterCriteriaLambdaFunctionNameArgs{...} }
type FilterFilterCriteriaLambdaFunctionNameArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaLambdaFunctionNameArrayOutput() FilterFilterCriteriaLambdaFunctionNameArrayOutput
	ToFilterFilterCriteriaLambdaFunctionNameArrayOutputWithContext(context.Context) FilterFilterCriteriaLambdaFunctionNameArrayOutput
}

type FilterFilterCriteriaLambdaFunctionNameArray []FilterFilterCriteriaLambdaFunctionNameInput

func (FilterFilterCriteriaLambdaFunctionNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaLambdaFunctionName)(nil)).Elem()
}

func (i FilterFilterCriteriaLambdaFunctionNameArray) ToFilterFilterCriteriaLambdaFunctionNameArrayOutput() FilterFilterCriteriaLambdaFunctionNameArrayOutput {
	return i.ToFilterFilterCriteriaLambdaFunctionNameArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaLambdaFunctionNameArray) ToFilterFilterCriteriaLambdaFunctionNameArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaLambdaFunctionNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaLambdaFunctionNameArrayOutput)
}

type FilterFilterCriteriaLambdaFunctionNameOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaLambdaFunctionNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaLambdaFunctionName)(nil)).Elem()
}

func (o FilterFilterCriteriaLambdaFunctionNameOutput) ToFilterFilterCriteriaLambdaFunctionNameOutput() FilterFilterCriteriaLambdaFunctionNameOutput {
	return o
}

func (o FilterFilterCriteriaLambdaFunctionNameOutput) ToFilterFilterCriteriaLambdaFunctionNameOutputWithContext(ctx context.Context) FilterFilterCriteriaLambdaFunctionNameOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaLambdaFunctionNameOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaLambdaFunctionName) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaLambdaFunctionNameOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaLambdaFunctionName) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaLambdaFunctionNameArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaLambdaFunctionNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaLambdaFunctionName)(nil)).Elem()
}

func (o FilterFilterCriteriaLambdaFunctionNameArrayOutput) ToFilterFilterCriteriaLambdaFunctionNameArrayOutput() FilterFilterCriteriaLambdaFunctionNameArrayOutput {
	return o
}

func (o FilterFilterCriteriaLambdaFunctionNameArrayOutput) ToFilterFilterCriteriaLambdaFunctionNameArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaLambdaFunctionNameArrayOutput {
	return o
}

func (o FilterFilterCriteriaLambdaFunctionNameArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaLambdaFunctionNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaLambdaFunctionName {
		return vs[0].([]FilterFilterCriteriaLambdaFunctionName)[vs[1].(int)]
	}).(FilterFilterCriteriaLambdaFunctionNameOutput)
}

type FilterFilterCriteriaLambdaFunctionRuntime struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaLambdaFunctionRuntimeInput is an input type that accepts FilterFilterCriteriaLambdaFunctionRuntimeArgs and FilterFilterCriteriaLambdaFunctionRuntimeOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaLambdaFunctionRuntimeInput` via:
//
//	FilterFilterCriteriaLambdaFunctionRuntimeArgs{...}
type FilterFilterCriteriaLambdaFunctionRuntimeInput interface {
	pulumi.Input

	ToFilterFilterCriteriaLambdaFunctionRuntimeOutput() FilterFilterCriteriaLambdaFunctionRuntimeOutput
	ToFilterFilterCriteriaLambdaFunctionRuntimeOutputWithContext(context.Context) FilterFilterCriteriaLambdaFunctionRuntimeOutput
}

type FilterFilterCriteriaLambdaFunctionRuntimeArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaLambdaFunctionRuntimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaLambdaFunctionRuntime)(nil)).Elem()
}

func (i FilterFilterCriteriaLambdaFunctionRuntimeArgs) ToFilterFilterCriteriaLambdaFunctionRuntimeOutput() FilterFilterCriteriaLambdaFunctionRuntimeOutput {
	return i.ToFilterFilterCriteriaLambdaFunctionRuntimeOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaLambdaFunctionRuntimeArgs) ToFilterFilterCriteriaLambdaFunctionRuntimeOutputWithContext(ctx context.Context) FilterFilterCriteriaLambdaFunctionRuntimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaLambdaFunctionRuntimeOutput)
}

// FilterFilterCriteriaLambdaFunctionRuntimeArrayInput is an input type that accepts FilterFilterCriteriaLambdaFunctionRuntimeArray and FilterFilterCriteriaLambdaFunctionRuntimeArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaLambdaFunctionRuntimeArrayInput` via:
//
//	FilterFilterCriteriaLambdaFunctionRuntimeArray{ FilterFilterCriteriaLambdaFunctionRuntimeArgs{...} }
type FilterFilterCriteriaLambdaFunctionRuntimeArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaLambdaFunctionRuntimeArrayOutput() FilterFilterCriteriaLambdaFunctionRuntimeArrayOutput
	ToFilterFilterCriteriaLambdaFunctionRuntimeArrayOutputWithContext(context.Context) FilterFilterCriteriaLambdaFunctionRuntimeArrayOutput
}

type FilterFilterCriteriaLambdaFunctionRuntimeArray []FilterFilterCriteriaLambdaFunctionRuntimeInput

func (FilterFilterCriteriaLambdaFunctionRuntimeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaLambdaFunctionRuntime)(nil)).Elem()
}

func (i FilterFilterCriteriaLambdaFunctionRuntimeArray) ToFilterFilterCriteriaLambdaFunctionRuntimeArrayOutput() FilterFilterCriteriaLambdaFunctionRuntimeArrayOutput {
	return i.ToFilterFilterCriteriaLambdaFunctionRuntimeArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaLambdaFunctionRuntimeArray) ToFilterFilterCriteriaLambdaFunctionRuntimeArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaLambdaFunctionRuntimeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaLambdaFunctionRuntimeArrayOutput)
}

type FilterFilterCriteriaLambdaFunctionRuntimeOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaLambdaFunctionRuntimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaLambdaFunctionRuntime)(nil)).Elem()
}

func (o FilterFilterCriteriaLambdaFunctionRuntimeOutput) ToFilterFilterCriteriaLambdaFunctionRuntimeOutput() FilterFilterCriteriaLambdaFunctionRuntimeOutput {
	return o
}

func (o FilterFilterCriteriaLambdaFunctionRuntimeOutput) ToFilterFilterCriteriaLambdaFunctionRuntimeOutputWithContext(ctx context.Context) FilterFilterCriteriaLambdaFunctionRuntimeOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaLambdaFunctionRuntimeOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaLambdaFunctionRuntime) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaLambdaFunctionRuntimeOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaLambdaFunctionRuntime) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaLambdaFunctionRuntimeArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaLambdaFunctionRuntimeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaLambdaFunctionRuntime)(nil)).Elem()
}

func (o FilterFilterCriteriaLambdaFunctionRuntimeArrayOutput) ToFilterFilterCriteriaLambdaFunctionRuntimeArrayOutput() FilterFilterCriteriaLambdaFunctionRuntimeArrayOutput {
	return o
}

func (o FilterFilterCriteriaLambdaFunctionRuntimeArrayOutput) ToFilterFilterCriteriaLambdaFunctionRuntimeArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaLambdaFunctionRuntimeArrayOutput {
	return o
}

func (o FilterFilterCriteriaLambdaFunctionRuntimeArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaLambdaFunctionRuntimeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaLambdaFunctionRuntime {
		return vs[0].([]FilterFilterCriteriaLambdaFunctionRuntime)[vs[1].(int)]
	}).(FilterFilterCriteriaLambdaFunctionRuntimeOutput)
}

type FilterFilterCriteriaLastObservedAt struct {
	// (Required) The end of the port range, inclusive.
	EndInclusive *string `pulumi:"endInclusive"`
	// (Optional) Start of the date range in RFC 3339 format, inclusive. Set the timezone to UTC.
	StartInclusive *string `pulumi:"startInclusive"`
}

// FilterFilterCriteriaLastObservedAtInput is an input type that accepts FilterFilterCriteriaLastObservedAtArgs and FilterFilterCriteriaLastObservedAtOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaLastObservedAtInput` via:
//
//	FilterFilterCriteriaLastObservedAtArgs{...}
type FilterFilterCriteriaLastObservedAtInput interface {
	pulumi.Input

	ToFilterFilterCriteriaLastObservedAtOutput() FilterFilterCriteriaLastObservedAtOutput
	ToFilterFilterCriteriaLastObservedAtOutputWithContext(context.Context) FilterFilterCriteriaLastObservedAtOutput
}

type FilterFilterCriteriaLastObservedAtArgs struct {
	// (Required) The end of the port range, inclusive.
	EndInclusive pulumi.StringPtrInput `pulumi:"endInclusive"`
	// (Optional) Start of the date range in RFC 3339 format, inclusive. Set the timezone to UTC.
	StartInclusive pulumi.StringPtrInput `pulumi:"startInclusive"`
}

func (FilterFilterCriteriaLastObservedAtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaLastObservedAt)(nil)).Elem()
}

func (i FilterFilterCriteriaLastObservedAtArgs) ToFilterFilterCriteriaLastObservedAtOutput() FilterFilterCriteriaLastObservedAtOutput {
	return i.ToFilterFilterCriteriaLastObservedAtOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaLastObservedAtArgs) ToFilterFilterCriteriaLastObservedAtOutputWithContext(ctx context.Context) FilterFilterCriteriaLastObservedAtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaLastObservedAtOutput)
}

// FilterFilterCriteriaLastObservedAtArrayInput is an input type that accepts FilterFilterCriteriaLastObservedAtArray and FilterFilterCriteriaLastObservedAtArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaLastObservedAtArrayInput` via:
//
//	FilterFilterCriteriaLastObservedAtArray{ FilterFilterCriteriaLastObservedAtArgs{...} }
type FilterFilterCriteriaLastObservedAtArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaLastObservedAtArrayOutput() FilterFilterCriteriaLastObservedAtArrayOutput
	ToFilterFilterCriteriaLastObservedAtArrayOutputWithContext(context.Context) FilterFilterCriteriaLastObservedAtArrayOutput
}

type FilterFilterCriteriaLastObservedAtArray []FilterFilterCriteriaLastObservedAtInput

func (FilterFilterCriteriaLastObservedAtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaLastObservedAt)(nil)).Elem()
}

func (i FilterFilterCriteriaLastObservedAtArray) ToFilterFilterCriteriaLastObservedAtArrayOutput() FilterFilterCriteriaLastObservedAtArrayOutput {
	return i.ToFilterFilterCriteriaLastObservedAtArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaLastObservedAtArray) ToFilterFilterCriteriaLastObservedAtArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaLastObservedAtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaLastObservedAtArrayOutput)
}

type FilterFilterCriteriaLastObservedAtOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaLastObservedAtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaLastObservedAt)(nil)).Elem()
}

func (o FilterFilterCriteriaLastObservedAtOutput) ToFilterFilterCriteriaLastObservedAtOutput() FilterFilterCriteriaLastObservedAtOutput {
	return o
}

func (o FilterFilterCriteriaLastObservedAtOutput) ToFilterFilterCriteriaLastObservedAtOutputWithContext(ctx context.Context) FilterFilterCriteriaLastObservedAtOutput {
	return o
}

// (Required) The end of the port range, inclusive.
func (o FilterFilterCriteriaLastObservedAtOutput) EndInclusive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilterFilterCriteriaLastObservedAt) *string { return v.EndInclusive }).(pulumi.StringPtrOutput)
}

// (Optional) Start of the date range in RFC 3339 format, inclusive. Set the timezone to UTC.
func (o FilterFilterCriteriaLastObservedAtOutput) StartInclusive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilterFilterCriteriaLastObservedAt) *string { return v.StartInclusive }).(pulumi.StringPtrOutput)
}

type FilterFilterCriteriaLastObservedAtArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaLastObservedAtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaLastObservedAt)(nil)).Elem()
}

func (o FilterFilterCriteriaLastObservedAtArrayOutput) ToFilterFilterCriteriaLastObservedAtArrayOutput() FilterFilterCriteriaLastObservedAtArrayOutput {
	return o
}

func (o FilterFilterCriteriaLastObservedAtArrayOutput) ToFilterFilterCriteriaLastObservedAtArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaLastObservedAtArrayOutput {
	return o
}

func (o FilterFilterCriteriaLastObservedAtArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaLastObservedAtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaLastObservedAt {
		return vs[0].([]FilterFilterCriteriaLastObservedAt)[vs[1].(int)]
	}).(FilterFilterCriteriaLastObservedAtOutput)
}

type FilterFilterCriteriaNetworkProtocol struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaNetworkProtocolInput is an input type that accepts FilterFilterCriteriaNetworkProtocolArgs and FilterFilterCriteriaNetworkProtocolOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaNetworkProtocolInput` via:
//
//	FilterFilterCriteriaNetworkProtocolArgs{...}
type FilterFilterCriteriaNetworkProtocolInput interface {
	pulumi.Input

	ToFilterFilterCriteriaNetworkProtocolOutput() FilterFilterCriteriaNetworkProtocolOutput
	ToFilterFilterCriteriaNetworkProtocolOutputWithContext(context.Context) FilterFilterCriteriaNetworkProtocolOutput
}

type FilterFilterCriteriaNetworkProtocolArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaNetworkProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaNetworkProtocol)(nil)).Elem()
}

func (i FilterFilterCriteriaNetworkProtocolArgs) ToFilterFilterCriteriaNetworkProtocolOutput() FilterFilterCriteriaNetworkProtocolOutput {
	return i.ToFilterFilterCriteriaNetworkProtocolOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaNetworkProtocolArgs) ToFilterFilterCriteriaNetworkProtocolOutputWithContext(ctx context.Context) FilterFilterCriteriaNetworkProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaNetworkProtocolOutput)
}

// FilterFilterCriteriaNetworkProtocolArrayInput is an input type that accepts FilterFilterCriteriaNetworkProtocolArray and FilterFilterCriteriaNetworkProtocolArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaNetworkProtocolArrayInput` via:
//
//	FilterFilterCriteriaNetworkProtocolArray{ FilterFilterCriteriaNetworkProtocolArgs{...} }
type FilterFilterCriteriaNetworkProtocolArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaNetworkProtocolArrayOutput() FilterFilterCriteriaNetworkProtocolArrayOutput
	ToFilterFilterCriteriaNetworkProtocolArrayOutputWithContext(context.Context) FilterFilterCriteriaNetworkProtocolArrayOutput
}

type FilterFilterCriteriaNetworkProtocolArray []FilterFilterCriteriaNetworkProtocolInput

func (FilterFilterCriteriaNetworkProtocolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaNetworkProtocol)(nil)).Elem()
}

func (i FilterFilterCriteriaNetworkProtocolArray) ToFilterFilterCriteriaNetworkProtocolArrayOutput() FilterFilterCriteriaNetworkProtocolArrayOutput {
	return i.ToFilterFilterCriteriaNetworkProtocolArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaNetworkProtocolArray) ToFilterFilterCriteriaNetworkProtocolArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaNetworkProtocolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaNetworkProtocolArrayOutput)
}

type FilterFilterCriteriaNetworkProtocolOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaNetworkProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaNetworkProtocol)(nil)).Elem()
}

func (o FilterFilterCriteriaNetworkProtocolOutput) ToFilterFilterCriteriaNetworkProtocolOutput() FilterFilterCriteriaNetworkProtocolOutput {
	return o
}

func (o FilterFilterCriteriaNetworkProtocolOutput) ToFilterFilterCriteriaNetworkProtocolOutputWithContext(ctx context.Context) FilterFilterCriteriaNetworkProtocolOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaNetworkProtocolOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaNetworkProtocol) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaNetworkProtocolOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaNetworkProtocol) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaNetworkProtocolArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaNetworkProtocolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaNetworkProtocol)(nil)).Elem()
}

func (o FilterFilterCriteriaNetworkProtocolArrayOutput) ToFilterFilterCriteriaNetworkProtocolArrayOutput() FilterFilterCriteriaNetworkProtocolArrayOutput {
	return o
}

func (o FilterFilterCriteriaNetworkProtocolArrayOutput) ToFilterFilterCriteriaNetworkProtocolArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaNetworkProtocolArrayOutput {
	return o
}

func (o FilterFilterCriteriaNetworkProtocolArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaNetworkProtocolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaNetworkProtocol {
		return vs[0].([]FilterFilterCriteriaNetworkProtocol)[vs[1].(int)]
	}).(FilterFilterCriteriaNetworkProtocolOutput)
}

type FilterFilterCriteriaPortRange struct {
	// (Required) The beginning of the port range, inclusive.
	BeginInclusive int `pulumi:"beginInclusive"`
	// (Required) The end of the port range, inclusive.
	EndInclusive int `pulumi:"endInclusive"`
}

// FilterFilterCriteriaPortRangeInput is an input type that accepts FilterFilterCriteriaPortRangeArgs and FilterFilterCriteriaPortRangeOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaPortRangeInput` via:
//
//	FilterFilterCriteriaPortRangeArgs{...}
type FilterFilterCriteriaPortRangeInput interface {
	pulumi.Input

	ToFilterFilterCriteriaPortRangeOutput() FilterFilterCriteriaPortRangeOutput
	ToFilterFilterCriteriaPortRangeOutputWithContext(context.Context) FilterFilterCriteriaPortRangeOutput
}

type FilterFilterCriteriaPortRangeArgs struct {
	// (Required) The beginning of the port range, inclusive.
	BeginInclusive pulumi.IntInput `pulumi:"beginInclusive"`
	// (Required) The end of the port range, inclusive.
	EndInclusive pulumi.IntInput `pulumi:"endInclusive"`
}

func (FilterFilterCriteriaPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaPortRange)(nil)).Elem()
}

func (i FilterFilterCriteriaPortRangeArgs) ToFilterFilterCriteriaPortRangeOutput() FilterFilterCriteriaPortRangeOutput {
	return i.ToFilterFilterCriteriaPortRangeOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaPortRangeArgs) ToFilterFilterCriteriaPortRangeOutputWithContext(ctx context.Context) FilterFilterCriteriaPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaPortRangeOutput)
}

// FilterFilterCriteriaPortRangeArrayInput is an input type that accepts FilterFilterCriteriaPortRangeArray and FilterFilterCriteriaPortRangeArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaPortRangeArrayInput` via:
//
//	FilterFilterCriteriaPortRangeArray{ FilterFilterCriteriaPortRangeArgs{...} }
type FilterFilterCriteriaPortRangeArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaPortRangeArrayOutput() FilterFilterCriteriaPortRangeArrayOutput
	ToFilterFilterCriteriaPortRangeArrayOutputWithContext(context.Context) FilterFilterCriteriaPortRangeArrayOutput
}

type FilterFilterCriteriaPortRangeArray []FilterFilterCriteriaPortRangeInput

func (FilterFilterCriteriaPortRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaPortRange)(nil)).Elem()
}

func (i FilterFilterCriteriaPortRangeArray) ToFilterFilterCriteriaPortRangeArrayOutput() FilterFilterCriteriaPortRangeArrayOutput {
	return i.ToFilterFilterCriteriaPortRangeArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaPortRangeArray) ToFilterFilterCriteriaPortRangeArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaPortRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaPortRangeArrayOutput)
}

type FilterFilterCriteriaPortRangeOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaPortRange)(nil)).Elem()
}

func (o FilterFilterCriteriaPortRangeOutput) ToFilterFilterCriteriaPortRangeOutput() FilterFilterCriteriaPortRangeOutput {
	return o
}

func (o FilterFilterCriteriaPortRangeOutput) ToFilterFilterCriteriaPortRangeOutputWithContext(ctx context.Context) FilterFilterCriteriaPortRangeOutput {
	return o
}

// (Required) The beginning of the port range, inclusive.
func (o FilterFilterCriteriaPortRangeOutput) BeginInclusive() pulumi.IntOutput {
	return o.ApplyT(func(v FilterFilterCriteriaPortRange) int { return v.BeginInclusive }).(pulumi.IntOutput)
}

// (Required) The end of the port range, inclusive.
func (o FilterFilterCriteriaPortRangeOutput) EndInclusive() pulumi.IntOutput {
	return o.ApplyT(func(v FilterFilterCriteriaPortRange) int { return v.EndInclusive }).(pulumi.IntOutput)
}

type FilterFilterCriteriaPortRangeArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaPortRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaPortRange)(nil)).Elem()
}

func (o FilterFilterCriteriaPortRangeArrayOutput) ToFilterFilterCriteriaPortRangeArrayOutput() FilterFilterCriteriaPortRangeArrayOutput {
	return o
}

func (o FilterFilterCriteriaPortRangeArrayOutput) ToFilterFilterCriteriaPortRangeArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaPortRangeArrayOutput {
	return o
}

func (o FilterFilterCriteriaPortRangeArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaPortRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaPortRange {
		return vs[0].([]FilterFilterCriteriaPortRange)[vs[1].(int)]
	}).(FilterFilterCriteriaPortRangeOutput)
}

type FilterFilterCriteriaRelatedVulnerability struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaRelatedVulnerabilityInput is an input type that accepts FilterFilterCriteriaRelatedVulnerabilityArgs and FilterFilterCriteriaRelatedVulnerabilityOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaRelatedVulnerabilityInput` via:
//
//	FilterFilterCriteriaRelatedVulnerabilityArgs{...}
type FilterFilterCriteriaRelatedVulnerabilityInput interface {
	pulumi.Input

	ToFilterFilterCriteriaRelatedVulnerabilityOutput() FilterFilterCriteriaRelatedVulnerabilityOutput
	ToFilterFilterCriteriaRelatedVulnerabilityOutputWithContext(context.Context) FilterFilterCriteriaRelatedVulnerabilityOutput
}

type FilterFilterCriteriaRelatedVulnerabilityArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaRelatedVulnerabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaRelatedVulnerability)(nil)).Elem()
}

func (i FilterFilterCriteriaRelatedVulnerabilityArgs) ToFilterFilterCriteriaRelatedVulnerabilityOutput() FilterFilterCriteriaRelatedVulnerabilityOutput {
	return i.ToFilterFilterCriteriaRelatedVulnerabilityOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaRelatedVulnerabilityArgs) ToFilterFilterCriteriaRelatedVulnerabilityOutputWithContext(ctx context.Context) FilterFilterCriteriaRelatedVulnerabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaRelatedVulnerabilityOutput)
}

// FilterFilterCriteriaRelatedVulnerabilityArrayInput is an input type that accepts FilterFilterCriteriaRelatedVulnerabilityArray and FilterFilterCriteriaRelatedVulnerabilityArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaRelatedVulnerabilityArrayInput` via:
//
//	FilterFilterCriteriaRelatedVulnerabilityArray{ FilterFilterCriteriaRelatedVulnerabilityArgs{...} }
type FilterFilterCriteriaRelatedVulnerabilityArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaRelatedVulnerabilityArrayOutput() FilterFilterCriteriaRelatedVulnerabilityArrayOutput
	ToFilterFilterCriteriaRelatedVulnerabilityArrayOutputWithContext(context.Context) FilterFilterCriteriaRelatedVulnerabilityArrayOutput
}

type FilterFilterCriteriaRelatedVulnerabilityArray []FilterFilterCriteriaRelatedVulnerabilityInput

func (FilterFilterCriteriaRelatedVulnerabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaRelatedVulnerability)(nil)).Elem()
}

func (i FilterFilterCriteriaRelatedVulnerabilityArray) ToFilterFilterCriteriaRelatedVulnerabilityArrayOutput() FilterFilterCriteriaRelatedVulnerabilityArrayOutput {
	return i.ToFilterFilterCriteriaRelatedVulnerabilityArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaRelatedVulnerabilityArray) ToFilterFilterCriteriaRelatedVulnerabilityArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaRelatedVulnerabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaRelatedVulnerabilityArrayOutput)
}

type FilterFilterCriteriaRelatedVulnerabilityOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaRelatedVulnerabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaRelatedVulnerability)(nil)).Elem()
}

func (o FilterFilterCriteriaRelatedVulnerabilityOutput) ToFilterFilterCriteriaRelatedVulnerabilityOutput() FilterFilterCriteriaRelatedVulnerabilityOutput {
	return o
}

func (o FilterFilterCriteriaRelatedVulnerabilityOutput) ToFilterFilterCriteriaRelatedVulnerabilityOutputWithContext(ctx context.Context) FilterFilterCriteriaRelatedVulnerabilityOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaRelatedVulnerabilityOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaRelatedVulnerability) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaRelatedVulnerabilityOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaRelatedVulnerability) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaRelatedVulnerabilityArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaRelatedVulnerabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaRelatedVulnerability)(nil)).Elem()
}

func (o FilterFilterCriteriaRelatedVulnerabilityArrayOutput) ToFilterFilterCriteriaRelatedVulnerabilityArrayOutput() FilterFilterCriteriaRelatedVulnerabilityArrayOutput {
	return o
}

func (o FilterFilterCriteriaRelatedVulnerabilityArrayOutput) ToFilterFilterCriteriaRelatedVulnerabilityArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaRelatedVulnerabilityArrayOutput {
	return o
}

func (o FilterFilterCriteriaRelatedVulnerabilityArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaRelatedVulnerabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaRelatedVulnerability {
		return vs[0].([]FilterFilterCriteriaRelatedVulnerability)[vs[1].(int)]
	}).(FilterFilterCriteriaRelatedVulnerabilityOutput)
}

type FilterFilterCriteriaResourceId struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaResourceIdInput is an input type that accepts FilterFilterCriteriaResourceIdArgs and FilterFilterCriteriaResourceIdOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaResourceIdInput` via:
//
//	FilterFilterCriteriaResourceIdArgs{...}
type FilterFilterCriteriaResourceIdInput interface {
	pulumi.Input

	ToFilterFilterCriteriaResourceIdOutput() FilterFilterCriteriaResourceIdOutput
	ToFilterFilterCriteriaResourceIdOutputWithContext(context.Context) FilterFilterCriteriaResourceIdOutput
}

type FilterFilterCriteriaResourceIdArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaResourceIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaResourceId)(nil)).Elem()
}

func (i FilterFilterCriteriaResourceIdArgs) ToFilterFilterCriteriaResourceIdOutput() FilterFilterCriteriaResourceIdOutput {
	return i.ToFilterFilterCriteriaResourceIdOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaResourceIdArgs) ToFilterFilterCriteriaResourceIdOutputWithContext(ctx context.Context) FilterFilterCriteriaResourceIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaResourceIdOutput)
}

// FilterFilterCriteriaResourceIdArrayInput is an input type that accepts FilterFilterCriteriaResourceIdArray and FilterFilterCriteriaResourceIdArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaResourceIdArrayInput` via:
//
//	FilterFilterCriteriaResourceIdArray{ FilterFilterCriteriaResourceIdArgs{...} }
type FilterFilterCriteriaResourceIdArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaResourceIdArrayOutput() FilterFilterCriteriaResourceIdArrayOutput
	ToFilterFilterCriteriaResourceIdArrayOutputWithContext(context.Context) FilterFilterCriteriaResourceIdArrayOutput
}

type FilterFilterCriteriaResourceIdArray []FilterFilterCriteriaResourceIdInput

func (FilterFilterCriteriaResourceIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaResourceId)(nil)).Elem()
}

func (i FilterFilterCriteriaResourceIdArray) ToFilterFilterCriteriaResourceIdArrayOutput() FilterFilterCriteriaResourceIdArrayOutput {
	return i.ToFilterFilterCriteriaResourceIdArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaResourceIdArray) ToFilterFilterCriteriaResourceIdArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaResourceIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaResourceIdArrayOutput)
}

type FilterFilterCriteriaResourceIdOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaResourceIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaResourceId)(nil)).Elem()
}

func (o FilterFilterCriteriaResourceIdOutput) ToFilterFilterCriteriaResourceIdOutput() FilterFilterCriteriaResourceIdOutput {
	return o
}

func (o FilterFilterCriteriaResourceIdOutput) ToFilterFilterCriteriaResourceIdOutputWithContext(ctx context.Context) FilterFilterCriteriaResourceIdOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaResourceIdOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaResourceId) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaResourceIdOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaResourceId) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaResourceIdArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaResourceIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaResourceId)(nil)).Elem()
}

func (o FilterFilterCriteriaResourceIdArrayOutput) ToFilterFilterCriteriaResourceIdArrayOutput() FilterFilterCriteriaResourceIdArrayOutput {
	return o
}

func (o FilterFilterCriteriaResourceIdArrayOutput) ToFilterFilterCriteriaResourceIdArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaResourceIdArrayOutput {
	return o
}

func (o FilterFilterCriteriaResourceIdArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaResourceIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaResourceId {
		return vs[0].([]FilterFilterCriteriaResourceId)[vs[1].(int)]
	}).(FilterFilterCriteriaResourceIdOutput)
}

type FilterFilterCriteriaResourceTag struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The key to filter on.
	Key string `pulumi:"key"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaResourceTagInput is an input type that accepts FilterFilterCriteriaResourceTagArgs and FilterFilterCriteriaResourceTagOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaResourceTagInput` via:
//
//	FilterFilterCriteriaResourceTagArgs{...}
type FilterFilterCriteriaResourceTagInput interface {
	pulumi.Input

	ToFilterFilterCriteriaResourceTagOutput() FilterFilterCriteriaResourceTagOutput
	ToFilterFilterCriteriaResourceTagOutputWithContext(context.Context) FilterFilterCriteriaResourceTagOutput
}

type FilterFilterCriteriaResourceTagArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The key to filter on.
	Key pulumi.StringInput `pulumi:"key"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaResourceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaResourceTag)(nil)).Elem()
}

func (i FilterFilterCriteriaResourceTagArgs) ToFilterFilterCriteriaResourceTagOutput() FilterFilterCriteriaResourceTagOutput {
	return i.ToFilterFilterCriteriaResourceTagOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaResourceTagArgs) ToFilterFilterCriteriaResourceTagOutputWithContext(ctx context.Context) FilterFilterCriteriaResourceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaResourceTagOutput)
}

// FilterFilterCriteriaResourceTagArrayInput is an input type that accepts FilterFilterCriteriaResourceTagArray and FilterFilterCriteriaResourceTagArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaResourceTagArrayInput` via:
//
//	FilterFilterCriteriaResourceTagArray{ FilterFilterCriteriaResourceTagArgs{...} }
type FilterFilterCriteriaResourceTagArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaResourceTagArrayOutput() FilterFilterCriteriaResourceTagArrayOutput
	ToFilterFilterCriteriaResourceTagArrayOutputWithContext(context.Context) FilterFilterCriteriaResourceTagArrayOutput
}

type FilterFilterCriteriaResourceTagArray []FilterFilterCriteriaResourceTagInput

func (FilterFilterCriteriaResourceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaResourceTag)(nil)).Elem()
}

func (i FilterFilterCriteriaResourceTagArray) ToFilterFilterCriteriaResourceTagArrayOutput() FilterFilterCriteriaResourceTagArrayOutput {
	return i.ToFilterFilterCriteriaResourceTagArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaResourceTagArray) ToFilterFilterCriteriaResourceTagArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaResourceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaResourceTagArrayOutput)
}

type FilterFilterCriteriaResourceTagOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaResourceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaResourceTag)(nil)).Elem()
}

func (o FilterFilterCriteriaResourceTagOutput) ToFilterFilterCriteriaResourceTagOutput() FilterFilterCriteriaResourceTagOutput {
	return o
}

func (o FilterFilterCriteriaResourceTagOutput) ToFilterFilterCriteriaResourceTagOutputWithContext(ctx context.Context) FilterFilterCriteriaResourceTagOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaResourceTagOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaResourceTag) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The key to filter on.
func (o FilterFilterCriteriaResourceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaResourceTag) string { return v.Key }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaResourceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaResourceTag) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaResourceTagArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaResourceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaResourceTag)(nil)).Elem()
}

func (o FilterFilterCriteriaResourceTagArrayOutput) ToFilterFilterCriteriaResourceTagArrayOutput() FilterFilterCriteriaResourceTagArrayOutput {
	return o
}

func (o FilterFilterCriteriaResourceTagArrayOutput) ToFilterFilterCriteriaResourceTagArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaResourceTagArrayOutput {
	return o
}

func (o FilterFilterCriteriaResourceTagArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaResourceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaResourceTag {
		return vs[0].([]FilterFilterCriteriaResourceTag)[vs[1].(int)]
	}).(FilterFilterCriteriaResourceTagOutput)
}

type FilterFilterCriteriaResourceType struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaResourceTypeInput is an input type that accepts FilterFilterCriteriaResourceTypeArgs and FilterFilterCriteriaResourceTypeOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaResourceTypeInput` via:
//
//	FilterFilterCriteriaResourceTypeArgs{...}
type FilterFilterCriteriaResourceTypeInput interface {
	pulumi.Input

	ToFilterFilterCriteriaResourceTypeOutput() FilterFilterCriteriaResourceTypeOutput
	ToFilterFilterCriteriaResourceTypeOutputWithContext(context.Context) FilterFilterCriteriaResourceTypeOutput
}

type FilterFilterCriteriaResourceTypeArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaResourceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaResourceType)(nil)).Elem()
}

func (i FilterFilterCriteriaResourceTypeArgs) ToFilterFilterCriteriaResourceTypeOutput() FilterFilterCriteriaResourceTypeOutput {
	return i.ToFilterFilterCriteriaResourceTypeOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaResourceTypeArgs) ToFilterFilterCriteriaResourceTypeOutputWithContext(ctx context.Context) FilterFilterCriteriaResourceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaResourceTypeOutput)
}

// FilterFilterCriteriaResourceTypeArrayInput is an input type that accepts FilterFilterCriteriaResourceTypeArray and FilterFilterCriteriaResourceTypeArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaResourceTypeArrayInput` via:
//
//	FilterFilterCriteriaResourceTypeArray{ FilterFilterCriteriaResourceTypeArgs{...} }
type FilterFilterCriteriaResourceTypeArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaResourceTypeArrayOutput() FilterFilterCriteriaResourceTypeArrayOutput
	ToFilterFilterCriteriaResourceTypeArrayOutputWithContext(context.Context) FilterFilterCriteriaResourceTypeArrayOutput
}

type FilterFilterCriteriaResourceTypeArray []FilterFilterCriteriaResourceTypeInput

func (FilterFilterCriteriaResourceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaResourceType)(nil)).Elem()
}

func (i FilterFilterCriteriaResourceTypeArray) ToFilterFilterCriteriaResourceTypeArrayOutput() FilterFilterCriteriaResourceTypeArrayOutput {
	return i.ToFilterFilterCriteriaResourceTypeArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaResourceTypeArray) ToFilterFilterCriteriaResourceTypeArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaResourceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaResourceTypeArrayOutput)
}

type FilterFilterCriteriaResourceTypeOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaResourceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaResourceType)(nil)).Elem()
}

func (o FilterFilterCriteriaResourceTypeOutput) ToFilterFilterCriteriaResourceTypeOutput() FilterFilterCriteriaResourceTypeOutput {
	return o
}

func (o FilterFilterCriteriaResourceTypeOutput) ToFilterFilterCriteriaResourceTypeOutputWithContext(ctx context.Context) FilterFilterCriteriaResourceTypeOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaResourceTypeOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaResourceType) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaResourceTypeOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaResourceType) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaResourceTypeArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaResourceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaResourceType)(nil)).Elem()
}

func (o FilterFilterCriteriaResourceTypeArrayOutput) ToFilterFilterCriteriaResourceTypeArrayOutput() FilterFilterCriteriaResourceTypeArrayOutput {
	return o
}

func (o FilterFilterCriteriaResourceTypeArrayOutput) ToFilterFilterCriteriaResourceTypeArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaResourceTypeArrayOutput {
	return o
}

func (o FilterFilterCriteriaResourceTypeArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaResourceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaResourceType {
		return vs[0].([]FilterFilterCriteriaResourceType)[vs[1].(int)]
	}).(FilterFilterCriteriaResourceTypeOutput)
}

type FilterFilterCriteriaSeverity struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaSeverityInput is an input type that accepts FilterFilterCriteriaSeverityArgs and FilterFilterCriteriaSeverityOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaSeverityInput` via:
//
//	FilterFilterCriteriaSeverityArgs{...}
type FilterFilterCriteriaSeverityInput interface {
	pulumi.Input

	ToFilterFilterCriteriaSeverityOutput() FilterFilterCriteriaSeverityOutput
	ToFilterFilterCriteriaSeverityOutputWithContext(context.Context) FilterFilterCriteriaSeverityOutput
}

type FilterFilterCriteriaSeverityArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaSeverityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaSeverity)(nil)).Elem()
}

func (i FilterFilterCriteriaSeverityArgs) ToFilterFilterCriteriaSeverityOutput() FilterFilterCriteriaSeverityOutput {
	return i.ToFilterFilterCriteriaSeverityOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaSeverityArgs) ToFilterFilterCriteriaSeverityOutputWithContext(ctx context.Context) FilterFilterCriteriaSeverityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaSeverityOutput)
}

// FilterFilterCriteriaSeverityArrayInput is an input type that accepts FilterFilterCriteriaSeverityArray and FilterFilterCriteriaSeverityArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaSeverityArrayInput` via:
//
//	FilterFilterCriteriaSeverityArray{ FilterFilterCriteriaSeverityArgs{...} }
type FilterFilterCriteriaSeverityArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaSeverityArrayOutput() FilterFilterCriteriaSeverityArrayOutput
	ToFilterFilterCriteriaSeverityArrayOutputWithContext(context.Context) FilterFilterCriteriaSeverityArrayOutput
}

type FilterFilterCriteriaSeverityArray []FilterFilterCriteriaSeverityInput

func (FilterFilterCriteriaSeverityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaSeverity)(nil)).Elem()
}

func (i FilterFilterCriteriaSeverityArray) ToFilterFilterCriteriaSeverityArrayOutput() FilterFilterCriteriaSeverityArrayOutput {
	return i.ToFilterFilterCriteriaSeverityArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaSeverityArray) ToFilterFilterCriteriaSeverityArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaSeverityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaSeverityArrayOutput)
}

type FilterFilterCriteriaSeverityOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaSeverityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaSeverity)(nil)).Elem()
}

func (o FilterFilterCriteriaSeverityOutput) ToFilterFilterCriteriaSeverityOutput() FilterFilterCriteriaSeverityOutput {
	return o
}

func (o FilterFilterCriteriaSeverityOutput) ToFilterFilterCriteriaSeverityOutputWithContext(ctx context.Context) FilterFilterCriteriaSeverityOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaSeverityOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaSeverity) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaSeverityOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaSeverity) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaSeverityArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaSeverityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaSeverity)(nil)).Elem()
}

func (o FilterFilterCriteriaSeverityArrayOutput) ToFilterFilterCriteriaSeverityArrayOutput() FilterFilterCriteriaSeverityArrayOutput {
	return o
}

func (o FilterFilterCriteriaSeverityArrayOutput) ToFilterFilterCriteriaSeverityArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaSeverityArrayOutput {
	return o
}

func (o FilterFilterCriteriaSeverityArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaSeverityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaSeverity {
		return vs[0].([]FilterFilterCriteriaSeverity)[vs[1].(int)]
	}).(FilterFilterCriteriaSeverityOutput)
}

type FilterFilterCriteriaTitle struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaTitleInput is an input type that accepts FilterFilterCriteriaTitleArgs and FilterFilterCriteriaTitleOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaTitleInput` via:
//
//	FilterFilterCriteriaTitleArgs{...}
type FilterFilterCriteriaTitleInput interface {
	pulumi.Input

	ToFilterFilterCriteriaTitleOutput() FilterFilterCriteriaTitleOutput
	ToFilterFilterCriteriaTitleOutputWithContext(context.Context) FilterFilterCriteriaTitleOutput
}

type FilterFilterCriteriaTitleArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaTitleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaTitle)(nil)).Elem()
}

func (i FilterFilterCriteriaTitleArgs) ToFilterFilterCriteriaTitleOutput() FilterFilterCriteriaTitleOutput {
	return i.ToFilterFilterCriteriaTitleOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaTitleArgs) ToFilterFilterCriteriaTitleOutputWithContext(ctx context.Context) FilterFilterCriteriaTitleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaTitleOutput)
}

// FilterFilterCriteriaTitleArrayInput is an input type that accepts FilterFilterCriteriaTitleArray and FilterFilterCriteriaTitleArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaTitleArrayInput` via:
//
//	FilterFilterCriteriaTitleArray{ FilterFilterCriteriaTitleArgs{...} }
type FilterFilterCriteriaTitleArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaTitleArrayOutput() FilterFilterCriteriaTitleArrayOutput
	ToFilterFilterCriteriaTitleArrayOutputWithContext(context.Context) FilterFilterCriteriaTitleArrayOutput
}

type FilterFilterCriteriaTitleArray []FilterFilterCriteriaTitleInput

func (FilterFilterCriteriaTitleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaTitle)(nil)).Elem()
}

func (i FilterFilterCriteriaTitleArray) ToFilterFilterCriteriaTitleArrayOutput() FilterFilterCriteriaTitleArrayOutput {
	return i.ToFilterFilterCriteriaTitleArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaTitleArray) ToFilterFilterCriteriaTitleArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaTitleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaTitleArrayOutput)
}

type FilterFilterCriteriaTitleOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaTitleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaTitle)(nil)).Elem()
}

func (o FilterFilterCriteriaTitleOutput) ToFilterFilterCriteriaTitleOutput() FilterFilterCriteriaTitleOutput {
	return o
}

func (o FilterFilterCriteriaTitleOutput) ToFilterFilterCriteriaTitleOutputWithContext(ctx context.Context) FilterFilterCriteriaTitleOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaTitleOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaTitle) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaTitleOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaTitle) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaTitleArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaTitleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaTitle)(nil)).Elem()
}

func (o FilterFilterCriteriaTitleArrayOutput) ToFilterFilterCriteriaTitleArrayOutput() FilterFilterCriteriaTitleArrayOutput {
	return o
}

func (o FilterFilterCriteriaTitleArrayOutput) ToFilterFilterCriteriaTitleArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaTitleArrayOutput {
	return o
}

func (o FilterFilterCriteriaTitleArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaTitleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaTitle {
		return vs[0].([]FilterFilterCriteriaTitle)[vs[1].(int)]
	}).(FilterFilterCriteriaTitleOutput)
}

type FilterFilterCriteriaUpdatedAt struct {
	// (Required) The end of the port range, inclusive.
	EndInclusive *string `pulumi:"endInclusive"`
	// (Optional) Start of the date range in RFC 3339 format, inclusive. Set the timezone to UTC.
	StartInclusive *string `pulumi:"startInclusive"`
}

// FilterFilterCriteriaUpdatedAtInput is an input type that accepts FilterFilterCriteriaUpdatedAtArgs and FilterFilterCriteriaUpdatedAtOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaUpdatedAtInput` via:
//
//	FilterFilterCriteriaUpdatedAtArgs{...}
type FilterFilterCriteriaUpdatedAtInput interface {
	pulumi.Input

	ToFilterFilterCriteriaUpdatedAtOutput() FilterFilterCriteriaUpdatedAtOutput
	ToFilterFilterCriteriaUpdatedAtOutputWithContext(context.Context) FilterFilterCriteriaUpdatedAtOutput
}

type FilterFilterCriteriaUpdatedAtArgs struct {
	// (Required) The end of the port range, inclusive.
	EndInclusive pulumi.StringPtrInput `pulumi:"endInclusive"`
	// (Optional) Start of the date range in RFC 3339 format, inclusive. Set the timezone to UTC.
	StartInclusive pulumi.StringPtrInput `pulumi:"startInclusive"`
}

func (FilterFilterCriteriaUpdatedAtArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaUpdatedAt)(nil)).Elem()
}

func (i FilterFilterCriteriaUpdatedAtArgs) ToFilterFilterCriteriaUpdatedAtOutput() FilterFilterCriteriaUpdatedAtOutput {
	return i.ToFilterFilterCriteriaUpdatedAtOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaUpdatedAtArgs) ToFilterFilterCriteriaUpdatedAtOutputWithContext(ctx context.Context) FilterFilterCriteriaUpdatedAtOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaUpdatedAtOutput)
}

// FilterFilterCriteriaUpdatedAtArrayInput is an input type that accepts FilterFilterCriteriaUpdatedAtArray and FilterFilterCriteriaUpdatedAtArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaUpdatedAtArrayInput` via:
//
//	FilterFilterCriteriaUpdatedAtArray{ FilterFilterCriteriaUpdatedAtArgs{...} }
type FilterFilterCriteriaUpdatedAtArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaUpdatedAtArrayOutput() FilterFilterCriteriaUpdatedAtArrayOutput
	ToFilterFilterCriteriaUpdatedAtArrayOutputWithContext(context.Context) FilterFilterCriteriaUpdatedAtArrayOutput
}

type FilterFilterCriteriaUpdatedAtArray []FilterFilterCriteriaUpdatedAtInput

func (FilterFilterCriteriaUpdatedAtArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaUpdatedAt)(nil)).Elem()
}

func (i FilterFilterCriteriaUpdatedAtArray) ToFilterFilterCriteriaUpdatedAtArrayOutput() FilterFilterCriteriaUpdatedAtArrayOutput {
	return i.ToFilterFilterCriteriaUpdatedAtArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaUpdatedAtArray) ToFilterFilterCriteriaUpdatedAtArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaUpdatedAtArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaUpdatedAtArrayOutput)
}

type FilterFilterCriteriaUpdatedAtOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaUpdatedAtOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaUpdatedAt)(nil)).Elem()
}

func (o FilterFilterCriteriaUpdatedAtOutput) ToFilterFilterCriteriaUpdatedAtOutput() FilterFilterCriteriaUpdatedAtOutput {
	return o
}

func (o FilterFilterCriteriaUpdatedAtOutput) ToFilterFilterCriteriaUpdatedAtOutputWithContext(ctx context.Context) FilterFilterCriteriaUpdatedAtOutput {
	return o
}

// (Required) The end of the port range, inclusive.
func (o FilterFilterCriteriaUpdatedAtOutput) EndInclusive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilterFilterCriteriaUpdatedAt) *string { return v.EndInclusive }).(pulumi.StringPtrOutput)
}

// (Optional) Start of the date range in RFC 3339 format, inclusive. Set the timezone to UTC.
func (o FilterFilterCriteriaUpdatedAtOutput) StartInclusive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FilterFilterCriteriaUpdatedAt) *string { return v.StartInclusive }).(pulumi.StringPtrOutput)
}

type FilterFilterCriteriaUpdatedAtArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaUpdatedAtArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaUpdatedAt)(nil)).Elem()
}

func (o FilterFilterCriteriaUpdatedAtArrayOutput) ToFilterFilterCriteriaUpdatedAtArrayOutput() FilterFilterCriteriaUpdatedAtArrayOutput {
	return o
}

func (o FilterFilterCriteriaUpdatedAtArrayOutput) ToFilterFilterCriteriaUpdatedAtArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaUpdatedAtArrayOutput {
	return o
}

func (o FilterFilterCriteriaUpdatedAtArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaUpdatedAtOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaUpdatedAt {
		return vs[0].([]FilterFilterCriteriaUpdatedAt)[vs[1].(int)]
	}).(FilterFilterCriteriaUpdatedAtOutput)
}

type FilterFilterCriteriaVendorSeverity struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaVendorSeverityInput is an input type that accepts FilterFilterCriteriaVendorSeverityArgs and FilterFilterCriteriaVendorSeverityOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaVendorSeverityInput` via:
//
//	FilterFilterCriteriaVendorSeverityArgs{...}
type FilterFilterCriteriaVendorSeverityInput interface {
	pulumi.Input

	ToFilterFilterCriteriaVendorSeverityOutput() FilterFilterCriteriaVendorSeverityOutput
	ToFilterFilterCriteriaVendorSeverityOutputWithContext(context.Context) FilterFilterCriteriaVendorSeverityOutput
}

type FilterFilterCriteriaVendorSeverityArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaVendorSeverityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaVendorSeverity)(nil)).Elem()
}

func (i FilterFilterCriteriaVendorSeverityArgs) ToFilterFilterCriteriaVendorSeverityOutput() FilterFilterCriteriaVendorSeverityOutput {
	return i.ToFilterFilterCriteriaVendorSeverityOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaVendorSeverityArgs) ToFilterFilterCriteriaVendorSeverityOutputWithContext(ctx context.Context) FilterFilterCriteriaVendorSeverityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVendorSeverityOutput)
}

// FilterFilterCriteriaVendorSeverityArrayInput is an input type that accepts FilterFilterCriteriaVendorSeverityArray and FilterFilterCriteriaVendorSeverityArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaVendorSeverityArrayInput` via:
//
//	FilterFilterCriteriaVendorSeverityArray{ FilterFilterCriteriaVendorSeverityArgs{...} }
type FilterFilterCriteriaVendorSeverityArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaVendorSeverityArrayOutput() FilterFilterCriteriaVendorSeverityArrayOutput
	ToFilterFilterCriteriaVendorSeverityArrayOutputWithContext(context.Context) FilterFilterCriteriaVendorSeverityArrayOutput
}

type FilterFilterCriteriaVendorSeverityArray []FilterFilterCriteriaVendorSeverityInput

func (FilterFilterCriteriaVendorSeverityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaVendorSeverity)(nil)).Elem()
}

func (i FilterFilterCriteriaVendorSeverityArray) ToFilterFilterCriteriaVendorSeverityArrayOutput() FilterFilterCriteriaVendorSeverityArrayOutput {
	return i.ToFilterFilterCriteriaVendorSeverityArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaVendorSeverityArray) ToFilterFilterCriteriaVendorSeverityArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaVendorSeverityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVendorSeverityArrayOutput)
}

type FilterFilterCriteriaVendorSeverityOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaVendorSeverityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaVendorSeverity)(nil)).Elem()
}

func (o FilterFilterCriteriaVendorSeverityOutput) ToFilterFilterCriteriaVendorSeverityOutput() FilterFilterCriteriaVendorSeverityOutput {
	return o
}

func (o FilterFilterCriteriaVendorSeverityOutput) ToFilterFilterCriteriaVendorSeverityOutputWithContext(ctx context.Context) FilterFilterCriteriaVendorSeverityOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaVendorSeverityOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVendorSeverity) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaVendorSeverityOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVendorSeverity) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaVendorSeverityArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaVendorSeverityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaVendorSeverity)(nil)).Elem()
}

func (o FilterFilterCriteriaVendorSeverityArrayOutput) ToFilterFilterCriteriaVendorSeverityArrayOutput() FilterFilterCriteriaVendorSeverityArrayOutput {
	return o
}

func (o FilterFilterCriteriaVendorSeverityArrayOutput) ToFilterFilterCriteriaVendorSeverityArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaVendorSeverityArrayOutput {
	return o
}

func (o FilterFilterCriteriaVendorSeverityArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaVendorSeverityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaVendorSeverity {
		return vs[0].([]FilterFilterCriteriaVendorSeverity)[vs[1].(int)]
	}).(FilterFilterCriteriaVendorSeverityOutput)
}

type FilterFilterCriteriaVulnerabilityId struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaVulnerabilityIdInput is an input type that accepts FilterFilterCriteriaVulnerabilityIdArgs and FilterFilterCriteriaVulnerabilityIdOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaVulnerabilityIdInput` via:
//
//	FilterFilterCriteriaVulnerabilityIdArgs{...}
type FilterFilterCriteriaVulnerabilityIdInput interface {
	pulumi.Input

	ToFilterFilterCriteriaVulnerabilityIdOutput() FilterFilterCriteriaVulnerabilityIdOutput
	ToFilterFilterCriteriaVulnerabilityIdOutputWithContext(context.Context) FilterFilterCriteriaVulnerabilityIdOutput
}

type FilterFilterCriteriaVulnerabilityIdArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaVulnerabilityIdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaVulnerabilityId)(nil)).Elem()
}

func (i FilterFilterCriteriaVulnerabilityIdArgs) ToFilterFilterCriteriaVulnerabilityIdOutput() FilterFilterCriteriaVulnerabilityIdOutput {
	return i.ToFilterFilterCriteriaVulnerabilityIdOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaVulnerabilityIdArgs) ToFilterFilterCriteriaVulnerabilityIdOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerabilityIdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerabilityIdOutput)
}

// FilterFilterCriteriaVulnerabilityIdArrayInput is an input type that accepts FilterFilterCriteriaVulnerabilityIdArray and FilterFilterCriteriaVulnerabilityIdArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaVulnerabilityIdArrayInput` via:
//
//	FilterFilterCriteriaVulnerabilityIdArray{ FilterFilterCriteriaVulnerabilityIdArgs{...} }
type FilterFilterCriteriaVulnerabilityIdArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaVulnerabilityIdArrayOutput() FilterFilterCriteriaVulnerabilityIdArrayOutput
	ToFilterFilterCriteriaVulnerabilityIdArrayOutputWithContext(context.Context) FilterFilterCriteriaVulnerabilityIdArrayOutput
}

type FilterFilterCriteriaVulnerabilityIdArray []FilterFilterCriteriaVulnerabilityIdInput

func (FilterFilterCriteriaVulnerabilityIdArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaVulnerabilityId)(nil)).Elem()
}

func (i FilterFilterCriteriaVulnerabilityIdArray) ToFilterFilterCriteriaVulnerabilityIdArrayOutput() FilterFilterCriteriaVulnerabilityIdArrayOutput {
	return i.ToFilterFilterCriteriaVulnerabilityIdArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaVulnerabilityIdArray) ToFilterFilterCriteriaVulnerabilityIdArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerabilityIdArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerabilityIdArrayOutput)
}

type FilterFilterCriteriaVulnerabilityIdOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaVulnerabilityIdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaVulnerabilityId)(nil)).Elem()
}

func (o FilterFilterCriteriaVulnerabilityIdOutput) ToFilterFilterCriteriaVulnerabilityIdOutput() FilterFilterCriteriaVulnerabilityIdOutput {
	return o
}

func (o FilterFilterCriteriaVulnerabilityIdOutput) ToFilterFilterCriteriaVulnerabilityIdOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerabilityIdOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaVulnerabilityIdOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerabilityId) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaVulnerabilityIdOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerabilityId) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaVulnerabilityIdArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaVulnerabilityIdArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaVulnerabilityId)(nil)).Elem()
}

func (o FilterFilterCriteriaVulnerabilityIdArrayOutput) ToFilterFilterCriteriaVulnerabilityIdArrayOutput() FilterFilterCriteriaVulnerabilityIdArrayOutput {
	return o
}

func (o FilterFilterCriteriaVulnerabilityIdArrayOutput) ToFilterFilterCriteriaVulnerabilityIdArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerabilityIdArrayOutput {
	return o
}

func (o FilterFilterCriteriaVulnerabilityIdArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaVulnerabilityIdOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaVulnerabilityId {
		return vs[0].([]FilterFilterCriteriaVulnerabilityId)[vs[1].(int)]
	}).(FilterFilterCriteriaVulnerabilityIdOutput)
}

type FilterFilterCriteriaVulnerabilitySource struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaVulnerabilitySourceInput is an input type that accepts FilterFilterCriteriaVulnerabilitySourceArgs and FilterFilterCriteriaVulnerabilitySourceOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaVulnerabilitySourceInput` via:
//
//	FilterFilterCriteriaVulnerabilitySourceArgs{...}
type FilterFilterCriteriaVulnerabilitySourceInput interface {
	pulumi.Input

	ToFilterFilterCriteriaVulnerabilitySourceOutput() FilterFilterCriteriaVulnerabilitySourceOutput
	ToFilterFilterCriteriaVulnerabilitySourceOutputWithContext(context.Context) FilterFilterCriteriaVulnerabilitySourceOutput
}

type FilterFilterCriteriaVulnerabilitySourceArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaVulnerabilitySourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaVulnerabilitySource)(nil)).Elem()
}

func (i FilterFilterCriteriaVulnerabilitySourceArgs) ToFilterFilterCriteriaVulnerabilitySourceOutput() FilterFilterCriteriaVulnerabilitySourceOutput {
	return i.ToFilterFilterCriteriaVulnerabilitySourceOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaVulnerabilitySourceArgs) ToFilterFilterCriteriaVulnerabilitySourceOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerabilitySourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerabilitySourceOutput)
}

// FilterFilterCriteriaVulnerabilitySourceArrayInput is an input type that accepts FilterFilterCriteriaVulnerabilitySourceArray and FilterFilterCriteriaVulnerabilitySourceArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaVulnerabilitySourceArrayInput` via:
//
//	FilterFilterCriteriaVulnerabilitySourceArray{ FilterFilterCriteriaVulnerabilitySourceArgs{...} }
type FilterFilterCriteriaVulnerabilitySourceArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaVulnerabilitySourceArrayOutput() FilterFilterCriteriaVulnerabilitySourceArrayOutput
	ToFilterFilterCriteriaVulnerabilitySourceArrayOutputWithContext(context.Context) FilterFilterCriteriaVulnerabilitySourceArrayOutput
}

type FilterFilterCriteriaVulnerabilitySourceArray []FilterFilterCriteriaVulnerabilitySourceInput

func (FilterFilterCriteriaVulnerabilitySourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaVulnerabilitySource)(nil)).Elem()
}

func (i FilterFilterCriteriaVulnerabilitySourceArray) ToFilterFilterCriteriaVulnerabilitySourceArrayOutput() FilterFilterCriteriaVulnerabilitySourceArrayOutput {
	return i.ToFilterFilterCriteriaVulnerabilitySourceArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaVulnerabilitySourceArray) ToFilterFilterCriteriaVulnerabilitySourceArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerabilitySourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerabilitySourceArrayOutput)
}

type FilterFilterCriteriaVulnerabilitySourceOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaVulnerabilitySourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaVulnerabilitySource)(nil)).Elem()
}

func (o FilterFilterCriteriaVulnerabilitySourceOutput) ToFilterFilterCriteriaVulnerabilitySourceOutput() FilterFilterCriteriaVulnerabilitySourceOutput {
	return o
}

func (o FilterFilterCriteriaVulnerabilitySourceOutput) ToFilterFilterCriteriaVulnerabilitySourceOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerabilitySourceOutput {
	return o
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaVulnerabilitySourceOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerabilitySource) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaVulnerabilitySourceOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerabilitySource) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaVulnerabilitySourceArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaVulnerabilitySourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaVulnerabilitySource)(nil)).Elem()
}

func (o FilterFilterCriteriaVulnerabilitySourceArrayOutput) ToFilterFilterCriteriaVulnerabilitySourceArrayOutput() FilterFilterCriteriaVulnerabilitySourceArrayOutput {
	return o
}

func (o FilterFilterCriteriaVulnerabilitySourceArrayOutput) ToFilterFilterCriteriaVulnerabilitySourceArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerabilitySourceArrayOutput {
	return o
}

func (o FilterFilterCriteriaVulnerabilitySourceArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaVulnerabilitySourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaVulnerabilitySource {
		return vs[0].([]FilterFilterCriteriaVulnerabilitySource)[vs[1].(int)]
	}).(FilterFilterCriteriaVulnerabilitySourceOutput)
}

type FilterFilterCriteriaVulnerablePackage struct {
	// (Optional) The architecture of the package. Documented below.
	Architecture *FilterFilterCriteriaVulnerablePackageArchitecture `pulumi:"architecture"`
	// (Optional) The epoch of the package. Documented below.
	Epoches []FilterFilterCriteriaVulnerablePackageEpoch `pulumi:"epoches"`
	// (Optional) The name of the package. Documented below.
	FilePath *FilterFilterCriteriaVulnerablePackageFilePath `pulumi:"filePath"`
	// Name of the filter.
	Name *FilterFilterCriteriaVulnerablePackageName `pulumi:"name"`
	// (Optional) The release of the package. Documented below.
	Release *FilterFilterCriteriaVulnerablePackageRelease `pulumi:"release"`
	// (Optional) The ARN of the package's source lambda layer. Documented below.
	SourceLambdaLayerArn *FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArn `pulumi:"sourceLambdaLayerArn"`
	// (Optional) The source layer hash of the package. Documented below.
	SourceLayerHash *FilterFilterCriteriaVulnerablePackageSourceLayerHash `pulumi:"sourceLayerHash"`
	// (Optional) The version of the package. Documented below.
	Version *FilterFilterCriteriaVulnerablePackageVersion `pulumi:"version"`
}

// FilterFilterCriteriaVulnerablePackageInput is an input type that accepts FilterFilterCriteriaVulnerablePackageArgs and FilterFilterCriteriaVulnerablePackageOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaVulnerablePackageInput` via:
//
//	FilterFilterCriteriaVulnerablePackageArgs{...}
type FilterFilterCriteriaVulnerablePackageInput interface {
	pulumi.Input

	ToFilterFilterCriteriaVulnerablePackageOutput() FilterFilterCriteriaVulnerablePackageOutput
	ToFilterFilterCriteriaVulnerablePackageOutputWithContext(context.Context) FilterFilterCriteriaVulnerablePackageOutput
}

type FilterFilterCriteriaVulnerablePackageArgs struct {
	// (Optional) The architecture of the package. Documented below.
	Architecture FilterFilterCriteriaVulnerablePackageArchitecturePtrInput `pulumi:"architecture"`
	// (Optional) The epoch of the package. Documented below.
	Epoches FilterFilterCriteriaVulnerablePackageEpochArrayInput `pulumi:"epoches"`
	// (Optional) The name of the package. Documented below.
	FilePath FilterFilterCriteriaVulnerablePackageFilePathPtrInput `pulumi:"filePath"`
	// Name of the filter.
	Name FilterFilterCriteriaVulnerablePackageNamePtrInput `pulumi:"name"`
	// (Optional) The release of the package. Documented below.
	Release FilterFilterCriteriaVulnerablePackageReleasePtrInput `pulumi:"release"`
	// (Optional) The ARN of the package's source lambda layer. Documented below.
	SourceLambdaLayerArn FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrInput `pulumi:"sourceLambdaLayerArn"`
	// (Optional) The source layer hash of the package. Documented below.
	SourceLayerHash FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrInput `pulumi:"sourceLayerHash"`
	// (Optional) The version of the package. Documented below.
	Version FilterFilterCriteriaVulnerablePackageVersionPtrInput `pulumi:"version"`
}

func (FilterFilterCriteriaVulnerablePackageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaVulnerablePackage)(nil)).Elem()
}

func (i FilterFilterCriteriaVulnerablePackageArgs) ToFilterFilterCriteriaVulnerablePackageOutput() FilterFilterCriteriaVulnerablePackageOutput {
	return i.ToFilterFilterCriteriaVulnerablePackageOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaVulnerablePackageArgs) ToFilterFilterCriteriaVulnerablePackageOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerablePackageOutput)
}

// FilterFilterCriteriaVulnerablePackageArrayInput is an input type that accepts FilterFilterCriteriaVulnerablePackageArray and FilterFilterCriteriaVulnerablePackageArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaVulnerablePackageArrayInput` via:
//
//	FilterFilterCriteriaVulnerablePackageArray{ FilterFilterCriteriaVulnerablePackageArgs{...} }
type FilterFilterCriteriaVulnerablePackageArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaVulnerablePackageArrayOutput() FilterFilterCriteriaVulnerablePackageArrayOutput
	ToFilterFilterCriteriaVulnerablePackageArrayOutputWithContext(context.Context) FilterFilterCriteriaVulnerablePackageArrayOutput
}

type FilterFilterCriteriaVulnerablePackageArray []FilterFilterCriteriaVulnerablePackageInput

func (FilterFilterCriteriaVulnerablePackageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaVulnerablePackage)(nil)).Elem()
}

func (i FilterFilterCriteriaVulnerablePackageArray) ToFilterFilterCriteriaVulnerablePackageArrayOutput() FilterFilterCriteriaVulnerablePackageArrayOutput {
	return i.ToFilterFilterCriteriaVulnerablePackageArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaVulnerablePackageArray) ToFilterFilterCriteriaVulnerablePackageArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerablePackageArrayOutput)
}

type FilterFilterCriteriaVulnerablePackageOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaVulnerablePackageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaVulnerablePackage)(nil)).Elem()
}

func (o FilterFilterCriteriaVulnerablePackageOutput) ToFilterFilterCriteriaVulnerablePackageOutput() FilterFilterCriteriaVulnerablePackageOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageOutput) ToFilterFilterCriteriaVulnerablePackageOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageOutput {
	return o
}

// (Optional) The architecture of the package. Documented below.
func (o FilterFilterCriteriaVulnerablePackageOutput) Architecture() FilterFilterCriteriaVulnerablePackageArchitecturePtrOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerablePackage) *FilterFilterCriteriaVulnerablePackageArchitecture {
		return v.Architecture
	}).(FilterFilterCriteriaVulnerablePackageArchitecturePtrOutput)
}

// (Optional) The epoch of the package. Documented below.
func (o FilterFilterCriteriaVulnerablePackageOutput) Epoches() FilterFilterCriteriaVulnerablePackageEpochArrayOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerablePackage) []FilterFilterCriteriaVulnerablePackageEpoch {
		return v.Epoches
	}).(FilterFilterCriteriaVulnerablePackageEpochArrayOutput)
}

// (Optional) The name of the package. Documented below.
func (o FilterFilterCriteriaVulnerablePackageOutput) FilePath() FilterFilterCriteriaVulnerablePackageFilePathPtrOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerablePackage) *FilterFilterCriteriaVulnerablePackageFilePath {
		return v.FilePath
	}).(FilterFilterCriteriaVulnerablePackageFilePathPtrOutput)
}

// Name of the filter.
func (o FilterFilterCriteriaVulnerablePackageOutput) Name() FilterFilterCriteriaVulnerablePackageNamePtrOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerablePackage) *FilterFilterCriteriaVulnerablePackageName {
		return v.Name
	}).(FilterFilterCriteriaVulnerablePackageNamePtrOutput)
}

// (Optional) The release of the package. Documented below.
func (o FilterFilterCriteriaVulnerablePackageOutput) Release() FilterFilterCriteriaVulnerablePackageReleasePtrOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerablePackage) *FilterFilterCriteriaVulnerablePackageRelease {
		return v.Release
	}).(FilterFilterCriteriaVulnerablePackageReleasePtrOutput)
}

// (Optional) The ARN of the package's source lambda layer. Documented below.
func (o FilterFilterCriteriaVulnerablePackageOutput) SourceLambdaLayerArn() FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerablePackage) *FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArn {
		return v.SourceLambdaLayerArn
	}).(FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput)
}

// (Optional) The source layer hash of the package. Documented below.
func (o FilterFilterCriteriaVulnerablePackageOutput) SourceLayerHash() FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerablePackage) *FilterFilterCriteriaVulnerablePackageSourceLayerHash {
		return v.SourceLayerHash
	}).(FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput)
}

// (Optional) The version of the package. Documented below.
func (o FilterFilterCriteriaVulnerablePackageOutput) Version() FilterFilterCriteriaVulnerablePackageVersionPtrOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerablePackage) *FilterFilterCriteriaVulnerablePackageVersion {
		return v.Version
	}).(FilterFilterCriteriaVulnerablePackageVersionPtrOutput)
}

type FilterFilterCriteriaVulnerablePackageArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaVulnerablePackageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaVulnerablePackage)(nil)).Elem()
}

func (o FilterFilterCriteriaVulnerablePackageArrayOutput) ToFilterFilterCriteriaVulnerablePackageArrayOutput() FilterFilterCriteriaVulnerablePackageArrayOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageArrayOutput) ToFilterFilterCriteriaVulnerablePackageArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageArrayOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaVulnerablePackageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaVulnerablePackage {
		return vs[0].([]FilterFilterCriteriaVulnerablePackage)[vs[1].(int)]
	}).(FilterFilterCriteriaVulnerablePackageOutput)
}

type FilterFilterCriteriaVulnerablePackageArchitecture struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaVulnerablePackageArchitectureInput is an input type that accepts FilterFilterCriteriaVulnerablePackageArchitectureArgs and FilterFilterCriteriaVulnerablePackageArchitectureOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaVulnerablePackageArchitectureInput` via:
//
//	FilterFilterCriteriaVulnerablePackageArchitectureArgs{...}
type FilterFilterCriteriaVulnerablePackageArchitectureInput interface {
	pulumi.Input

	ToFilterFilterCriteriaVulnerablePackageArchitectureOutput() FilterFilterCriteriaVulnerablePackageArchitectureOutput
	ToFilterFilterCriteriaVulnerablePackageArchitectureOutputWithContext(context.Context) FilterFilterCriteriaVulnerablePackageArchitectureOutput
}

type FilterFilterCriteriaVulnerablePackageArchitectureArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaVulnerablePackageArchitectureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageArchitecture)(nil)).Elem()
}

func (i FilterFilterCriteriaVulnerablePackageArchitectureArgs) ToFilterFilterCriteriaVulnerablePackageArchitectureOutput() FilterFilterCriteriaVulnerablePackageArchitectureOutput {
	return i.ToFilterFilterCriteriaVulnerablePackageArchitectureOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaVulnerablePackageArchitectureArgs) ToFilterFilterCriteriaVulnerablePackageArchitectureOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageArchitectureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerablePackageArchitectureOutput)
}

func (i FilterFilterCriteriaVulnerablePackageArchitectureArgs) ToFilterFilterCriteriaVulnerablePackageArchitecturePtrOutput() FilterFilterCriteriaVulnerablePackageArchitecturePtrOutput {
	return i.ToFilterFilterCriteriaVulnerablePackageArchitecturePtrOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaVulnerablePackageArchitectureArgs) ToFilterFilterCriteriaVulnerablePackageArchitecturePtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageArchitecturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerablePackageArchitectureOutput).ToFilterFilterCriteriaVulnerablePackageArchitecturePtrOutputWithContext(ctx)
}

// FilterFilterCriteriaVulnerablePackageArchitecturePtrInput is an input type that accepts FilterFilterCriteriaVulnerablePackageArchitectureArgs, FilterFilterCriteriaVulnerablePackageArchitecturePtr and FilterFilterCriteriaVulnerablePackageArchitecturePtrOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaVulnerablePackageArchitecturePtrInput` via:
//
//	        FilterFilterCriteriaVulnerablePackageArchitectureArgs{...}
//
//	or:
//
//	        nil
type FilterFilterCriteriaVulnerablePackageArchitecturePtrInput interface {
	pulumi.Input

	ToFilterFilterCriteriaVulnerablePackageArchitecturePtrOutput() FilterFilterCriteriaVulnerablePackageArchitecturePtrOutput
	ToFilterFilterCriteriaVulnerablePackageArchitecturePtrOutputWithContext(context.Context) FilterFilterCriteriaVulnerablePackageArchitecturePtrOutput
}

type filterFilterCriteriaVulnerablePackageArchitecturePtrType FilterFilterCriteriaVulnerablePackageArchitectureArgs

func FilterFilterCriteriaVulnerablePackageArchitecturePtr(v *FilterFilterCriteriaVulnerablePackageArchitectureArgs) FilterFilterCriteriaVulnerablePackageArchitecturePtrInput {
	return (*filterFilterCriteriaVulnerablePackageArchitecturePtrType)(v)
}

func (*filterFilterCriteriaVulnerablePackageArchitecturePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterFilterCriteriaVulnerablePackageArchitecture)(nil)).Elem()
}

func (i *filterFilterCriteriaVulnerablePackageArchitecturePtrType) ToFilterFilterCriteriaVulnerablePackageArchitecturePtrOutput() FilterFilterCriteriaVulnerablePackageArchitecturePtrOutput {
	return i.ToFilterFilterCriteriaVulnerablePackageArchitecturePtrOutputWithContext(context.Background())
}

func (i *filterFilterCriteriaVulnerablePackageArchitecturePtrType) ToFilterFilterCriteriaVulnerablePackageArchitecturePtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageArchitecturePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerablePackageArchitecturePtrOutput)
}

type FilterFilterCriteriaVulnerablePackageArchitectureOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaVulnerablePackageArchitectureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageArchitecture)(nil)).Elem()
}

func (o FilterFilterCriteriaVulnerablePackageArchitectureOutput) ToFilterFilterCriteriaVulnerablePackageArchitectureOutput() FilterFilterCriteriaVulnerablePackageArchitectureOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageArchitectureOutput) ToFilterFilterCriteriaVulnerablePackageArchitectureOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageArchitectureOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageArchitectureOutput) ToFilterFilterCriteriaVulnerablePackageArchitecturePtrOutput() FilterFilterCriteriaVulnerablePackageArchitecturePtrOutput {
	return o.ToFilterFilterCriteriaVulnerablePackageArchitecturePtrOutputWithContext(context.Background())
}

func (o FilterFilterCriteriaVulnerablePackageArchitectureOutput) ToFilterFilterCriteriaVulnerablePackageArchitecturePtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageArchitecturePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FilterFilterCriteriaVulnerablePackageArchitecture) *FilterFilterCriteriaVulnerablePackageArchitecture {
		return &v
	}).(FilterFilterCriteriaVulnerablePackageArchitecturePtrOutput)
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaVulnerablePackageArchitectureOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerablePackageArchitecture) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaVulnerablePackageArchitectureOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerablePackageArchitecture) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaVulnerablePackageArchitecturePtrOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaVulnerablePackageArchitecturePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterFilterCriteriaVulnerablePackageArchitecture)(nil)).Elem()
}

func (o FilterFilterCriteriaVulnerablePackageArchitecturePtrOutput) ToFilterFilterCriteriaVulnerablePackageArchitecturePtrOutput() FilterFilterCriteriaVulnerablePackageArchitecturePtrOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageArchitecturePtrOutput) ToFilterFilterCriteriaVulnerablePackageArchitecturePtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageArchitecturePtrOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageArchitecturePtrOutput) Elem() FilterFilterCriteriaVulnerablePackageArchitectureOutput {
	return o.ApplyT(func(v *FilterFilterCriteriaVulnerablePackageArchitecture) FilterFilterCriteriaVulnerablePackageArchitecture {
		if v != nil {
			return *v
		}
		var ret FilterFilterCriteriaVulnerablePackageArchitecture
		return ret
	}).(FilterFilterCriteriaVulnerablePackageArchitectureOutput)
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaVulnerablePackageArchitecturePtrOutput) Comparison() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FilterFilterCriteriaVulnerablePackageArchitecture) *string {
		if v == nil {
			return nil
		}
		return &v.Comparison
	}).(pulumi.StringPtrOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaVulnerablePackageArchitecturePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FilterFilterCriteriaVulnerablePackageArchitecture) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type FilterFilterCriteriaVulnerablePackageEpoch struct {
	// (Optional) Lower bound of the range, inclusive.
	LowerInclusive float64 `pulumi:"lowerInclusive"`
	// (Optional) Upper bound of the range, inclusive.
	UpperInclusive float64 `pulumi:"upperInclusive"`
}

// FilterFilterCriteriaVulnerablePackageEpochInput is an input type that accepts FilterFilterCriteriaVulnerablePackageEpochArgs and FilterFilterCriteriaVulnerablePackageEpochOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaVulnerablePackageEpochInput` via:
//
//	FilterFilterCriteriaVulnerablePackageEpochArgs{...}
type FilterFilterCriteriaVulnerablePackageEpochInput interface {
	pulumi.Input

	ToFilterFilterCriteriaVulnerablePackageEpochOutput() FilterFilterCriteriaVulnerablePackageEpochOutput
	ToFilterFilterCriteriaVulnerablePackageEpochOutputWithContext(context.Context) FilterFilterCriteriaVulnerablePackageEpochOutput
}

type FilterFilterCriteriaVulnerablePackageEpochArgs struct {
	// (Optional) Lower bound of the range, inclusive.
	LowerInclusive pulumi.Float64Input `pulumi:"lowerInclusive"`
	// (Optional) Upper bound of the range, inclusive.
	UpperInclusive pulumi.Float64Input `pulumi:"upperInclusive"`
}

func (FilterFilterCriteriaVulnerablePackageEpochArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageEpoch)(nil)).Elem()
}

func (i FilterFilterCriteriaVulnerablePackageEpochArgs) ToFilterFilterCriteriaVulnerablePackageEpochOutput() FilterFilterCriteriaVulnerablePackageEpochOutput {
	return i.ToFilterFilterCriteriaVulnerablePackageEpochOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaVulnerablePackageEpochArgs) ToFilterFilterCriteriaVulnerablePackageEpochOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageEpochOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerablePackageEpochOutput)
}

// FilterFilterCriteriaVulnerablePackageEpochArrayInput is an input type that accepts FilterFilterCriteriaVulnerablePackageEpochArray and FilterFilterCriteriaVulnerablePackageEpochArrayOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaVulnerablePackageEpochArrayInput` via:
//
//	FilterFilterCriteriaVulnerablePackageEpochArray{ FilterFilterCriteriaVulnerablePackageEpochArgs{...} }
type FilterFilterCriteriaVulnerablePackageEpochArrayInput interface {
	pulumi.Input

	ToFilterFilterCriteriaVulnerablePackageEpochArrayOutput() FilterFilterCriteriaVulnerablePackageEpochArrayOutput
	ToFilterFilterCriteriaVulnerablePackageEpochArrayOutputWithContext(context.Context) FilterFilterCriteriaVulnerablePackageEpochArrayOutput
}

type FilterFilterCriteriaVulnerablePackageEpochArray []FilterFilterCriteriaVulnerablePackageEpochInput

func (FilterFilterCriteriaVulnerablePackageEpochArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaVulnerablePackageEpoch)(nil)).Elem()
}

func (i FilterFilterCriteriaVulnerablePackageEpochArray) ToFilterFilterCriteriaVulnerablePackageEpochArrayOutput() FilterFilterCriteriaVulnerablePackageEpochArrayOutput {
	return i.ToFilterFilterCriteriaVulnerablePackageEpochArrayOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaVulnerablePackageEpochArray) ToFilterFilterCriteriaVulnerablePackageEpochArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageEpochArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerablePackageEpochArrayOutput)
}

type FilterFilterCriteriaVulnerablePackageEpochOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaVulnerablePackageEpochOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageEpoch)(nil)).Elem()
}

func (o FilterFilterCriteriaVulnerablePackageEpochOutput) ToFilterFilterCriteriaVulnerablePackageEpochOutput() FilterFilterCriteriaVulnerablePackageEpochOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageEpochOutput) ToFilterFilterCriteriaVulnerablePackageEpochOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageEpochOutput {
	return o
}

// (Optional) Lower bound of the range, inclusive.
func (o FilterFilterCriteriaVulnerablePackageEpochOutput) LowerInclusive() pulumi.Float64Output {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerablePackageEpoch) float64 { return v.LowerInclusive }).(pulumi.Float64Output)
}

// (Optional) Upper bound of the range, inclusive.
func (o FilterFilterCriteriaVulnerablePackageEpochOutput) UpperInclusive() pulumi.Float64Output {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerablePackageEpoch) float64 { return v.UpperInclusive }).(pulumi.Float64Output)
}

type FilterFilterCriteriaVulnerablePackageEpochArrayOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaVulnerablePackageEpochArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FilterFilterCriteriaVulnerablePackageEpoch)(nil)).Elem()
}

func (o FilterFilterCriteriaVulnerablePackageEpochArrayOutput) ToFilterFilterCriteriaVulnerablePackageEpochArrayOutput() FilterFilterCriteriaVulnerablePackageEpochArrayOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageEpochArrayOutput) ToFilterFilterCriteriaVulnerablePackageEpochArrayOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageEpochArrayOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageEpochArrayOutput) Index(i pulumi.IntInput) FilterFilterCriteriaVulnerablePackageEpochOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FilterFilterCriteriaVulnerablePackageEpoch {
		return vs[0].([]FilterFilterCriteriaVulnerablePackageEpoch)[vs[1].(int)]
	}).(FilterFilterCriteriaVulnerablePackageEpochOutput)
}

type FilterFilterCriteriaVulnerablePackageFilePath struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaVulnerablePackageFilePathInput is an input type that accepts FilterFilterCriteriaVulnerablePackageFilePathArgs and FilterFilterCriteriaVulnerablePackageFilePathOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaVulnerablePackageFilePathInput` via:
//
//	FilterFilterCriteriaVulnerablePackageFilePathArgs{...}
type FilterFilterCriteriaVulnerablePackageFilePathInput interface {
	pulumi.Input

	ToFilterFilterCriteriaVulnerablePackageFilePathOutput() FilterFilterCriteriaVulnerablePackageFilePathOutput
	ToFilterFilterCriteriaVulnerablePackageFilePathOutputWithContext(context.Context) FilterFilterCriteriaVulnerablePackageFilePathOutput
}

type FilterFilterCriteriaVulnerablePackageFilePathArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaVulnerablePackageFilePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageFilePath)(nil)).Elem()
}

func (i FilterFilterCriteriaVulnerablePackageFilePathArgs) ToFilterFilterCriteriaVulnerablePackageFilePathOutput() FilterFilterCriteriaVulnerablePackageFilePathOutput {
	return i.ToFilterFilterCriteriaVulnerablePackageFilePathOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaVulnerablePackageFilePathArgs) ToFilterFilterCriteriaVulnerablePackageFilePathOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageFilePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerablePackageFilePathOutput)
}

func (i FilterFilterCriteriaVulnerablePackageFilePathArgs) ToFilterFilterCriteriaVulnerablePackageFilePathPtrOutput() FilterFilterCriteriaVulnerablePackageFilePathPtrOutput {
	return i.ToFilterFilterCriteriaVulnerablePackageFilePathPtrOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaVulnerablePackageFilePathArgs) ToFilterFilterCriteriaVulnerablePackageFilePathPtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageFilePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerablePackageFilePathOutput).ToFilterFilterCriteriaVulnerablePackageFilePathPtrOutputWithContext(ctx)
}

// FilterFilterCriteriaVulnerablePackageFilePathPtrInput is an input type that accepts FilterFilterCriteriaVulnerablePackageFilePathArgs, FilterFilterCriteriaVulnerablePackageFilePathPtr and FilterFilterCriteriaVulnerablePackageFilePathPtrOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaVulnerablePackageFilePathPtrInput` via:
//
//	        FilterFilterCriteriaVulnerablePackageFilePathArgs{...}
//
//	or:
//
//	        nil
type FilterFilterCriteriaVulnerablePackageFilePathPtrInput interface {
	pulumi.Input

	ToFilterFilterCriteriaVulnerablePackageFilePathPtrOutput() FilterFilterCriteriaVulnerablePackageFilePathPtrOutput
	ToFilterFilterCriteriaVulnerablePackageFilePathPtrOutputWithContext(context.Context) FilterFilterCriteriaVulnerablePackageFilePathPtrOutput
}

type filterFilterCriteriaVulnerablePackageFilePathPtrType FilterFilterCriteriaVulnerablePackageFilePathArgs

func FilterFilterCriteriaVulnerablePackageFilePathPtr(v *FilterFilterCriteriaVulnerablePackageFilePathArgs) FilterFilterCriteriaVulnerablePackageFilePathPtrInput {
	return (*filterFilterCriteriaVulnerablePackageFilePathPtrType)(v)
}

func (*filterFilterCriteriaVulnerablePackageFilePathPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterFilterCriteriaVulnerablePackageFilePath)(nil)).Elem()
}

func (i *filterFilterCriteriaVulnerablePackageFilePathPtrType) ToFilterFilterCriteriaVulnerablePackageFilePathPtrOutput() FilterFilterCriteriaVulnerablePackageFilePathPtrOutput {
	return i.ToFilterFilterCriteriaVulnerablePackageFilePathPtrOutputWithContext(context.Background())
}

func (i *filterFilterCriteriaVulnerablePackageFilePathPtrType) ToFilterFilterCriteriaVulnerablePackageFilePathPtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageFilePathPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerablePackageFilePathPtrOutput)
}

type FilterFilterCriteriaVulnerablePackageFilePathOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaVulnerablePackageFilePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageFilePath)(nil)).Elem()
}

func (o FilterFilterCriteriaVulnerablePackageFilePathOutput) ToFilterFilterCriteriaVulnerablePackageFilePathOutput() FilterFilterCriteriaVulnerablePackageFilePathOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageFilePathOutput) ToFilterFilterCriteriaVulnerablePackageFilePathOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageFilePathOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageFilePathOutput) ToFilterFilterCriteriaVulnerablePackageFilePathPtrOutput() FilterFilterCriteriaVulnerablePackageFilePathPtrOutput {
	return o.ToFilterFilterCriteriaVulnerablePackageFilePathPtrOutputWithContext(context.Background())
}

func (o FilterFilterCriteriaVulnerablePackageFilePathOutput) ToFilterFilterCriteriaVulnerablePackageFilePathPtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageFilePathPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FilterFilterCriteriaVulnerablePackageFilePath) *FilterFilterCriteriaVulnerablePackageFilePath {
		return &v
	}).(FilterFilterCriteriaVulnerablePackageFilePathPtrOutput)
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaVulnerablePackageFilePathOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerablePackageFilePath) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaVulnerablePackageFilePathOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerablePackageFilePath) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaVulnerablePackageFilePathPtrOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaVulnerablePackageFilePathPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterFilterCriteriaVulnerablePackageFilePath)(nil)).Elem()
}

func (o FilterFilterCriteriaVulnerablePackageFilePathPtrOutput) ToFilterFilterCriteriaVulnerablePackageFilePathPtrOutput() FilterFilterCriteriaVulnerablePackageFilePathPtrOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageFilePathPtrOutput) ToFilterFilterCriteriaVulnerablePackageFilePathPtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageFilePathPtrOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageFilePathPtrOutput) Elem() FilterFilterCriteriaVulnerablePackageFilePathOutput {
	return o.ApplyT(func(v *FilterFilterCriteriaVulnerablePackageFilePath) FilterFilterCriteriaVulnerablePackageFilePath {
		if v != nil {
			return *v
		}
		var ret FilterFilterCriteriaVulnerablePackageFilePath
		return ret
	}).(FilterFilterCriteriaVulnerablePackageFilePathOutput)
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaVulnerablePackageFilePathPtrOutput) Comparison() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FilterFilterCriteriaVulnerablePackageFilePath) *string {
		if v == nil {
			return nil
		}
		return &v.Comparison
	}).(pulumi.StringPtrOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaVulnerablePackageFilePathPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FilterFilterCriteriaVulnerablePackageFilePath) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type FilterFilterCriteriaVulnerablePackageName struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaVulnerablePackageNameInput is an input type that accepts FilterFilterCriteriaVulnerablePackageNameArgs and FilterFilterCriteriaVulnerablePackageNameOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaVulnerablePackageNameInput` via:
//
//	FilterFilterCriteriaVulnerablePackageNameArgs{...}
type FilterFilterCriteriaVulnerablePackageNameInput interface {
	pulumi.Input

	ToFilterFilterCriteriaVulnerablePackageNameOutput() FilterFilterCriteriaVulnerablePackageNameOutput
	ToFilterFilterCriteriaVulnerablePackageNameOutputWithContext(context.Context) FilterFilterCriteriaVulnerablePackageNameOutput
}

type FilterFilterCriteriaVulnerablePackageNameArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaVulnerablePackageNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageName)(nil)).Elem()
}

func (i FilterFilterCriteriaVulnerablePackageNameArgs) ToFilterFilterCriteriaVulnerablePackageNameOutput() FilterFilterCriteriaVulnerablePackageNameOutput {
	return i.ToFilterFilterCriteriaVulnerablePackageNameOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaVulnerablePackageNameArgs) ToFilterFilterCriteriaVulnerablePackageNameOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerablePackageNameOutput)
}

func (i FilterFilterCriteriaVulnerablePackageNameArgs) ToFilterFilterCriteriaVulnerablePackageNamePtrOutput() FilterFilterCriteriaVulnerablePackageNamePtrOutput {
	return i.ToFilterFilterCriteriaVulnerablePackageNamePtrOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaVulnerablePackageNameArgs) ToFilterFilterCriteriaVulnerablePackageNamePtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerablePackageNameOutput).ToFilterFilterCriteriaVulnerablePackageNamePtrOutputWithContext(ctx)
}

// FilterFilterCriteriaVulnerablePackageNamePtrInput is an input type that accepts FilterFilterCriteriaVulnerablePackageNameArgs, FilterFilterCriteriaVulnerablePackageNamePtr and FilterFilterCriteriaVulnerablePackageNamePtrOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaVulnerablePackageNamePtrInput` via:
//
//	        FilterFilterCriteriaVulnerablePackageNameArgs{...}
//
//	or:
//
//	        nil
type FilterFilterCriteriaVulnerablePackageNamePtrInput interface {
	pulumi.Input

	ToFilterFilterCriteriaVulnerablePackageNamePtrOutput() FilterFilterCriteriaVulnerablePackageNamePtrOutput
	ToFilterFilterCriteriaVulnerablePackageNamePtrOutputWithContext(context.Context) FilterFilterCriteriaVulnerablePackageNamePtrOutput
}

type filterFilterCriteriaVulnerablePackageNamePtrType FilterFilterCriteriaVulnerablePackageNameArgs

func FilterFilterCriteriaVulnerablePackageNamePtr(v *FilterFilterCriteriaVulnerablePackageNameArgs) FilterFilterCriteriaVulnerablePackageNamePtrInput {
	return (*filterFilterCriteriaVulnerablePackageNamePtrType)(v)
}

func (*filterFilterCriteriaVulnerablePackageNamePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterFilterCriteriaVulnerablePackageName)(nil)).Elem()
}

func (i *filterFilterCriteriaVulnerablePackageNamePtrType) ToFilterFilterCriteriaVulnerablePackageNamePtrOutput() FilterFilterCriteriaVulnerablePackageNamePtrOutput {
	return i.ToFilterFilterCriteriaVulnerablePackageNamePtrOutputWithContext(context.Background())
}

func (i *filterFilterCriteriaVulnerablePackageNamePtrType) ToFilterFilterCriteriaVulnerablePackageNamePtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageNamePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerablePackageNamePtrOutput)
}

type FilterFilterCriteriaVulnerablePackageNameOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaVulnerablePackageNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageName)(nil)).Elem()
}

func (o FilterFilterCriteriaVulnerablePackageNameOutput) ToFilterFilterCriteriaVulnerablePackageNameOutput() FilterFilterCriteriaVulnerablePackageNameOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageNameOutput) ToFilterFilterCriteriaVulnerablePackageNameOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageNameOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageNameOutput) ToFilterFilterCriteriaVulnerablePackageNamePtrOutput() FilterFilterCriteriaVulnerablePackageNamePtrOutput {
	return o.ToFilterFilterCriteriaVulnerablePackageNamePtrOutputWithContext(context.Background())
}

func (o FilterFilterCriteriaVulnerablePackageNameOutput) ToFilterFilterCriteriaVulnerablePackageNamePtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageNamePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FilterFilterCriteriaVulnerablePackageName) *FilterFilterCriteriaVulnerablePackageName {
		return &v
	}).(FilterFilterCriteriaVulnerablePackageNamePtrOutput)
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaVulnerablePackageNameOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerablePackageName) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaVulnerablePackageNameOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerablePackageName) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaVulnerablePackageNamePtrOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaVulnerablePackageNamePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterFilterCriteriaVulnerablePackageName)(nil)).Elem()
}

func (o FilterFilterCriteriaVulnerablePackageNamePtrOutput) ToFilterFilterCriteriaVulnerablePackageNamePtrOutput() FilterFilterCriteriaVulnerablePackageNamePtrOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageNamePtrOutput) ToFilterFilterCriteriaVulnerablePackageNamePtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageNamePtrOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageNamePtrOutput) Elem() FilterFilterCriteriaVulnerablePackageNameOutput {
	return o.ApplyT(func(v *FilterFilterCriteriaVulnerablePackageName) FilterFilterCriteriaVulnerablePackageName {
		if v != nil {
			return *v
		}
		var ret FilterFilterCriteriaVulnerablePackageName
		return ret
	}).(FilterFilterCriteriaVulnerablePackageNameOutput)
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaVulnerablePackageNamePtrOutput) Comparison() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FilterFilterCriteriaVulnerablePackageName) *string {
		if v == nil {
			return nil
		}
		return &v.Comparison
	}).(pulumi.StringPtrOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaVulnerablePackageNamePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FilterFilterCriteriaVulnerablePackageName) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type FilterFilterCriteriaVulnerablePackageRelease struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaVulnerablePackageReleaseInput is an input type that accepts FilterFilterCriteriaVulnerablePackageReleaseArgs and FilterFilterCriteriaVulnerablePackageReleaseOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaVulnerablePackageReleaseInput` via:
//
//	FilterFilterCriteriaVulnerablePackageReleaseArgs{...}
type FilterFilterCriteriaVulnerablePackageReleaseInput interface {
	pulumi.Input

	ToFilterFilterCriteriaVulnerablePackageReleaseOutput() FilterFilterCriteriaVulnerablePackageReleaseOutput
	ToFilterFilterCriteriaVulnerablePackageReleaseOutputWithContext(context.Context) FilterFilterCriteriaVulnerablePackageReleaseOutput
}

type FilterFilterCriteriaVulnerablePackageReleaseArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaVulnerablePackageReleaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageRelease)(nil)).Elem()
}

func (i FilterFilterCriteriaVulnerablePackageReleaseArgs) ToFilterFilterCriteriaVulnerablePackageReleaseOutput() FilterFilterCriteriaVulnerablePackageReleaseOutput {
	return i.ToFilterFilterCriteriaVulnerablePackageReleaseOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaVulnerablePackageReleaseArgs) ToFilterFilterCriteriaVulnerablePackageReleaseOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageReleaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerablePackageReleaseOutput)
}

func (i FilterFilterCriteriaVulnerablePackageReleaseArgs) ToFilterFilterCriteriaVulnerablePackageReleasePtrOutput() FilterFilterCriteriaVulnerablePackageReleasePtrOutput {
	return i.ToFilterFilterCriteriaVulnerablePackageReleasePtrOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaVulnerablePackageReleaseArgs) ToFilterFilterCriteriaVulnerablePackageReleasePtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageReleasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerablePackageReleaseOutput).ToFilterFilterCriteriaVulnerablePackageReleasePtrOutputWithContext(ctx)
}

// FilterFilterCriteriaVulnerablePackageReleasePtrInput is an input type that accepts FilterFilterCriteriaVulnerablePackageReleaseArgs, FilterFilterCriteriaVulnerablePackageReleasePtr and FilterFilterCriteriaVulnerablePackageReleasePtrOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaVulnerablePackageReleasePtrInput` via:
//
//	        FilterFilterCriteriaVulnerablePackageReleaseArgs{...}
//
//	or:
//
//	        nil
type FilterFilterCriteriaVulnerablePackageReleasePtrInput interface {
	pulumi.Input

	ToFilterFilterCriteriaVulnerablePackageReleasePtrOutput() FilterFilterCriteriaVulnerablePackageReleasePtrOutput
	ToFilterFilterCriteriaVulnerablePackageReleasePtrOutputWithContext(context.Context) FilterFilterCriteriaVulnerablePackageReleasePtrOutput
}

type filterFilterCriteriaVulnerablePackageReleasePtrType FilterFilterCriteriaVulnerablePackageReleaseArgs

func FilterFilterCriteriaVulnerablePackageReleasePtr(v *FilterFilterCriteriaVulnerablePackageReleaseArgs) FilterFilterCriteriaVulnerablePackageReleasePtrInput {
	return (*filterFilterCriteriaVulnerablePackageReleasePtrType)(v)
}

func (*filterFilterCriteriaVulnerablePackageReleasePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterFilterCriteriaVulnerablePackageRelease)(nil)).Elem()
}

func (i *filterFilterCriteriaVulnerablePackageReleasePtrType) ToFilterFilterCriteriaVulnerablePackageReleasePtrOutput() FilterFilterCriteriaVulnerablePackageReleasePtrOutput {
	return i.ToFilterFilterCriteriaVulnerablePackageReleasePtrOutputWithContext(context.Background())
}

func (i *filterFilterCriteriaVulnerablePackageReleasePtrType) ToFilterFilterCriteriaVulnerablePackageReleasePtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageReleasePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerablePackageReleasePtrOutput)
}

type FilterFilterCriteriaVulnerablePackageReleaseOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaVulnerablePackageReleaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageRelease)(nil)).Elem()
}

func (o FilterFilterCriteriaVulnerablePackageReleaseOutput) ToFilterFilterCriteriaVulnerablePackageReleaseOutput() FilterFilterCriteriaVulnerablePackageReleaseOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageReleaseOutput) ToFilterFilterCriteriaVulnerablePackageReleaseOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageReleaseOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageReleaseOutput) ToFilterFilterCriteriaVulnerablePackageReleasePtrOutput() FilterFilterCriteriaVulnerablePackageReleasePtrOutput {
	return o.ToFilterFilterCriteriaVulnerablePackageReleasePtrOutputWithContext(context.Background())
}

func (o FilterFilterCriteriaVulnerablePackageReleaseOutput) ToFilterFilterCriteriaVulnerablePackageReleasePtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageReleasePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FilterFilterCriteriaVulnerablePackageRelease) *FilterFilterCriteriaVulnerablePackageRelease {
		return &v
	}).(FilterFilterCriteriaVulnerablePackageReleasePtrOutput)
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaVulnerablePackageReleaseOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerablePackageRelease) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaVulnerablePackageReleaseOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerablePackageRelease) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaVulnerablePackageReleasePtrOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaVulnerablePackageReleasePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterFilterCriteriaVulnerablePackageRelease)(nil)).Elem()
}

func (o FilterFilterCriteriaVulnerablePackageReleasePtrOutput) ToFilterFilterCriteriaVulnerablePackageReleasePtrOutput() FilterFilterCriteriaVulnerablePackageReleasePtrOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageReleasePtrOutput) ToFilterFilterCriteriaVulnerablePackageReleasePtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageReleasePtrOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageReleasePtrOutput) Elem() FilterFilterCriteriaVulnerablePackageReleaseOutput {
	return o.ApplyT(func(v *FilterFilterCriteriaVulnerablePackageRelease) FilterFilterCriteriaVulnerablePackageRelease {
		if v != nil {
			return *v
		}
		var ret FilterFilterCriteriaVulnerablePackageRelease
		return ret
	}).(FilterFilterCriteriaVulnerablePackageReleaseOutput)
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaVulnerablePackageReleasePtrOutput) Comparison() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FilterFilterCriteriaVulnerablePackageRelease) *string {
		if v == nil {
			return nil
		}
		return &v.Comparison
	}).(pulumi.StringPtrOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaVulnerablePackageReleasePtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FilterFilterCriteriaVulnerablePackageRelease) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArn struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnInput is an input type that accepts FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnArgs and FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnInput` via:
//
//	FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnArgs{...}
type FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnInput interface {
	pulumi.Input

	ToFilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutput() FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutput
	ToFilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutputWithContext(context.Context) FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutput
}

type FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArn)(nil)).Elem()
}

func (i FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnArgs) ToFilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutput() FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutput {
	return i.ToFilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnArgs) ToFilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutput)
}

func (i FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnArgs) ToFilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput() FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput {
	return i.ToFilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnArgs) ToFilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutput).ToFilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutputWithContext(ctx)
}

// FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrInput is an input type that accepts FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnArgs, FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtr and FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrInput` via:
//
//	        FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnArgs{...}
//
//	or:
//
//	        nil
type FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrInput interface {
	pulumi.Input

	ToFilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput() FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput
	ToFilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutputWithContext(context.Context) FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput
}

type filterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrType FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnArgs

func FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtr(v *FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnArgs) FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrInput {
	return (*filterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrType)(v)
}

func (*filterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArn)(nil)).Elem()
}

func (i *filterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrType) ToFilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput() FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput {
	return i.ToFilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutputWithContext(context.Background())
}

func (i *filterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrType) ToFilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput)
}

type FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArn)(nil)).Elem()
}

func (o FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutput) ToFilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutput() FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutput) ToFilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutput) ToFilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput() FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput {
	return o.ToFilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutputWithContext(context.Background())
}

func (o FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutput) ToFilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArn) *FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArn {
		return &v
	}).(FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput)
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArn) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArn) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArn)(nil)).Elem()
}

func (o FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput) ToFilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput() FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput) ToFilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput) Elem() FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutput {
	return o.ApplyT(func(v *FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArn) FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArn {
		if v != nil {
			return *v
		}
		var ret FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArn
		return ret
	}).(FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutput)
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput) Comparison() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArn) *string {
		if v == nil {
			return nil
		}
		return &v.Comparison
	}).(pulumi.StringPtrOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArn) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type FilterFilterCriteriaVulnerablePackageSourceLayerHash struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaVulnerablePackageSourceLayerHashInput is an input type that accepts FilterFilterCriteriaVulnerablePackageSourceLayerHashArgs and FilterFilterCriteriaVulnerablePackageSourceLayerHashOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaVulnerablePackageSourceLayerHashInput` via:
//
//	FilterFilterCriteriaVulnerablePackageSourceLayerHashArgs{...}
type FilterFilterCriteriaVulnerablePackageSourceLayerHashInput interface {
	pulumi.Input

	ToFilterFilterCriteriaVulnerablePackageSourceLayerHashOutput() FilterFilterCriteriaVulnerablePackageSourceLayerHashOutput
	ToFilterFilterCriteriaVulnerablePackageSourceLayerHashOutputWithContext(context.Context) FilterFilterCriteriaVulnerablePackageSourceLayerHashOutput
}

type FilterFilterCriteriaVulnerablePackageSourceLayerHashArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaVulnerablePackageSourceLayerHashArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageSourceLayerHash)(nil)).Elem()
}

func (i FilterFilterCriteriaVulnerablePackageSourceLayerHashArgs) ToFilterFilterCriteriaVulnerablePackageSourceLayerHashOutput() FilterFilterCriteriaVulnerablePackageSourceLayerHashOutput {
	return i.ToFilterFilterCriteriaVulnerablePackageSourceLayerHashOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaVulnerablePackageSourceLayerHashArgs) ToFilterFilterCriteriaVulnerablePackageSourceLayerHashOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageSourceLayerHashOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerablePackageSourceLayerHashOutput)
}

func (i FilterFilterCriteriaVulnerablePackageSourceLayerHashArgs) ToFilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput() FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput {
	return i.ToFilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaVulnerablePackageSourceLayerHashArgs) ToFilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerablePackageSourceLayerHashOutput).ToFilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutputWithContext(ctx)
}

// FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrInput is an input type that accepts FilterFilterCriteriaVulnerablePackageSourceLayerHashArgs, FilterFilterCriteriaVulnerablePackageSourceLayerHashPtr and FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrInput` via:
//
//	        FilterFilterCriteriaVulnerablePackageSourceLayerHashArgs{...}
//
//	or:
//
//	        nil
type FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrInput interface {
	pulumi.Input

	ToFilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput() FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput
	ToFilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutputWithContext(context.Context) FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput
}

type filterFilterCriteriaVulnerablePackageSourceLayerHashPtrType FilterFilterCriteriaVulnerablePackageSourceLayerHashArgs

func FilterFilterCriteriaVulnerablePackageSourceLayerHashPtr(v *FilterFilterCriteriaVulnerablePackageSourceLayerHashArgs) FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrInput {
	return (*filterFilterCriteriaVulnerablePackageSourceLayerHashPtrType)(v)
}

func (*filterFilterCriteriaVulnerablePackageSourceLayerHashPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterFilterCriteriaVulnerablePackageSourceLayerHash)(nil)).Elem()
}

func (i *filterFilterCriteriaVulnerablePackageSourceLayerHashPtrType) ToFilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput() FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput {
	return i.ToFilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutputWithContext(context.Background())
}

func (i *filterFilterCriteriaVulnerablePackageSourceLayerHashPtrType) ToFilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput)
}

type FilterFilterCriteriaVulnerablePackageSourceLayerHashOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaVulnerablePackageSourceLayerHashOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageSourceLayerHash)(nil)).Elem()
}

func (o FilterFilterCriteriaVulnerablePackageSourceLayerHashOutput) ToFilterFilterCriteriaVulnerablePackageSourceLayerHashOutput() FilterFilterCriteriaVulnerablePackageSourceLayerHashOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageSourceLayerHashOutput) ToFilterFilterCriteriaVulnerablePackageSourceLayerHashOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageSourceLayerHashOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageSourceLayerHashOutput) ToFilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput() FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput {
	return o.ToFilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutputWithContext(context.Background())
}

func (o FilterFilterCriteriaVulnerablePackageSourceLayerHashOutput) ToFilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FilterFilterCriteriaVulnerablePackageSourceLayerHash) *FilterFilterCriteriaVulnerablePackageSourceLayerHash {
		return &v
	}).(FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput)
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaVulnerablePackageSourceLayerHashOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerablePackageSourceLayerHash) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaVulnerablePackageSourceLayerHashOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerablePackageSourceLayerHash) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterFilterCriteriaVulnerablePackageSourceLayerHash)(nil)).Elem()
}

func (o FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput) ToFilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput() FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput) ToFilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput) Elem() FilterFilterCriteriaVulnerablePackageSourceLayerHashOutput {
	return o.ApplyT(func(v *FilterFilterCriteriaVulnerablePackageSourceLayerHash) FilterFilterCriteriaVulnerablePackageSourceLayerHash {
		if v != nil {
			return *v
		}
		var ret FilterFilterCriteriaVulnerablePackageSourceLayerHash
		return ret
	}).(FilterFilterCriteriaVulnerablePackageSourceLayerHashOutput)
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput) Comparison() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FilterFilterCriteriaVulnerablePackageSourceLayerHash) *string {
		if v == nil {
			return nil
		}
		return &v.Comparison
	}).(pulumi.StringPtrOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FilterFilterCriteriaVulnerablePackageSourceLayerHash) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type FilterFilterCriteriaVulnerablePackageVersion struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison string `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value string `pulumi:"value"`
}

// FilterFilterCriteriaVulnerablePackageVersionInput is an input type that accepts FilterFilterCriteriaVulnerablePackageVersionArgs and FilterFilterCriteriaVulnerablePackageVersionOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaVulnerablePackageVersionInput` via:
//
//	FilterFilterCriteriaVulnerablePackageVersionArgs{...}
type FilterFilterCriteriaVulnerablePackageVersionInput interface {
	pulumi.Input

	ToFilterFilterCriteriaVulnerablePackageVersionOutput() FilterFilterCriteriaVulnerablePackageVersionOutput
	ToFilterFilterCriteriaVulnerablePackageVersionOutputWithContext(context.Context) FilterFilterCriteriaVulnerablePackageVersionOutput
}

type FilterFilterCriteriaVulnerablePackageVersionArgs struct {
	// (Required) The comparison operator. Valid values: `EQUALS`.
	Comparison pulumi.StringInput `pulumi:"comparison"`
	// (Required) The value to filter on.
	Value pulumi.StringInput `pulumi:"value"`
}

func (FilterFilterCriteriaVulnerablePackageVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageVersion)(nil)).Elem()
}

func (i FilterFilterCriteriaVulnerablePackageVersionArgs) ToFilterFilterCriteriaVulnerablePackageVersionOutput() FilterFilterCriteriaVulnerablePackageVersionOutput {
	return i.ToFilterFilterCriteriaVulnerablePackageVersionOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaVulnerablePackageVersionArgs) ToFilterFilterCriteriaVulnerablePackageVersionOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerablePackageVersionOutput)
}

func (i FilterFilterCriteriaVulnerablePackageVersionArgs) ToFilterFilterCriteriaVulnerablePackageVersionPtrOutput() FilterFilterCriteriaVulnerablePackageVersionPtrOutput {
	return i.ToFilterFilterCriteriaVulnerablePackageVersionPtrOutputWithContext(context.Background())
}

func (i FilterFilterCriteriaVulnerablePackageVersionArgs) ToFilterFilterCriteriaVulnerablePackageVersionPtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerablePackageVersionOutput).ToFilterFilterCriteriaVulnerablePackageVersionPtrOutputWithContext(ctx)
}

// FilterFilterCriteriaVulnerablePackageVersionPtrInput is an input type that accepts FilterFilterCriteriaVulnerablePackageVersionArgs, FilterFilterCriteriaVulnerablePackageVersionPtr and FilterFilterCriteriaVulnerablePackageVersionPtrOutput values.
// You can construct a concrete instance of `FilterFilterCriteriaVulnerablePackageVersionPtrInput` via:
//
//	        FilterFilterCriteriaVulnerablePackageVersionArgs{...}
//
//	or:
//
//	        nil
type FilterFilterCriteriaVulnerablePackageVersionPtrInput interface {
	pulumi.Input

	ToFilterFilterCriteriaVulnerablePackageVersionPtrOutput() FilterFilterCriteriaVulnerablePackageVersionPtrOutput
	ToFilterFilterCriteriaVulnerablePackageVersionPtrOutputWithContext(context.Context) FilterFilterCriteriaVulnerablePackageVersionPtrOutput
}

type filterFilterCriteriaVulnerablePackageVersionPtrType FilterFilterCriteriaVulnerablePackageVersionArgs

func FilterFilterCriteriaVulnerablePackageVersionPtr(v *FilterFilterCriteriaVulnerablePackageVersionArgs) FilterFilterCriteriaVulnerablePackageVersionPtrInput {
	return (*filterFilterCriteriaVulnerablePackageVersionPtrType)(v)
}

func (*filterFilterCriteriaVulnerablePackageVersionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterFilterCriteriaVulnerablePackageVersion)(nil)).Elem()
}

func (i *filterFilterCriteriaVulnerablePackageVersionPtrType) ToFilterFilterCriteriaVulnerablePackageVersionPtrOutput() FilterFilterCriteriaVulnerablePackageVersionPtrOutput {
	return i.ToFilterFilterCriteriaVulnerablePackageVersionPtrOutputWithContext(context.Background())
}

func (i *filterFilterCriteriaVulnerablePackageVersionPtrType) ToFilterFilterCriteriaVulnerablePackageVersionPtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FilterFilterCriteriaVulnerablePackageVersionPtrOutput)
}

type FilterFilterCriteriaVulnerablePackageVersionOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaVulnerablePackageVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageVersion)(nil)).Elem()
}

func (o FilterFilterCriteriaVulnerablePackageVersionOutput) ToFilterFilterCriteriaVulnerablePackageVersionOutput() FilterFilterCriteriaVulnerablePackageVersionOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageVersionOutput) ToFilterFilterCriteriaVulnerablePackageVersionOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageVersionOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageVersionOutput) ToFilterFilterCriteriaVulnerablePackageVersionPtrOutput() FilterFilterCriteriaVulnerablePackageVersionPtrOutput {
	return o.ToFilterFilterCriteriaVulnerablePackageVersionPtrOutputWithContext(context.Background())
}

func (o FilterFilterCriteriaVulnerablePackageVersionOutput) ToFilterFilterCriteriaVulnerablePackageVersionPtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FilterFilterCriteriaVulnerablePackageVersion) *FilterFilterCriteriaVulnerablePackageVersion {
		return &v
	}).(FilterFilterCriteriaVulnerablePackageVersionPtrOutput)
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaVulnerablePackageVersionOutput) Comparison() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerablePackageVersion) string { return v.Comparison }).(pulumi.StringOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaVulnerablePackageVersionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v FilterFilterCriteriaVulnerablePackageVersion) string { return v.Value }).(pulumi.StringOutput)
}

type FilterFilterCriteriaVulnerablePackageVersionPtrOutput struct{ *pulumi.OutputState }

func (FilterFilterCriteriaVulnerablePackageVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FilterFilterCriteriaVulnerablePackageVersion)(nil)).Elem()
}

func (o FilterFilterCriteriaVulnerablePackageVersionPtrOutput) ToFilterFilterCriteriaVulnerablePackageVersionPtrOutput() FilterFilterCriteriaVulnerablePackageVersionPtrOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageVersionPtrOutput) ToFilterFilterCriteriaVulnerablePackageVersionPtrOutputWithContext(ctx context.Context) FilterFilterCriteriaVulnerablePackageVersionPtrOutput {
	return o
}

func (o FilterFilterCriteriaVulnerablePackageVersionPtrOutput) Elem() FilterFilterCriteriaVulnerablePackageVersionOutput {
	return o.ApplyT(func(v *FilterFilterCriteriaVulnerablePackageVersion) FilterFilterCriteriaVulnerablePackageVersion {
		if v != nil {
			return *v
		}
		var ret FilterFilterCriteriaVulnerablePackageVersion
		return ret
	}).(FilterFilterCriteriaVulnerablePackageVersionOutput)
}

// (Required) The comparison operator. Valid values: `EQUALS`.
func (o FilterFilterCriteriaVulnerablePackageVersionPtrOutput) Comparison() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FilterFilterCriteriaVulnerablePackageVersion) *string {
		if v == nil {
			return nil
		}
		return &v.Comparison
	}).(pulumi.StringPtrOutput)
}

// (Required) The value to filter on.
func (o FilterFilterCriteriaVulnerablePackageVersionPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FilterFilterCriteriaVulnerablePackageVersion) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type OrganizationConfigurationAutoEnable struct {
	// Whether Amazon EC2 scans are automatically enabled for new members of your Amazon Inspector organization.
	Ec2 bool `pulumi:"ec2"`
	// Whether Amazon ECR scans are automatically enabled for new members of your Amazon Inspector organization.
	Ecr bool `pulumi:"ecr"`
	// Whether Lambda Function scans are automatically enabled for new members of your Amazon Inspector organization.
	Lambda *bool `pulumi:"lambda"`
	// Whether AWS Lambda code scans are automatically enabled for new members of your Amazon Inspector organization. **Note:** Lambda code scanning requires Lambda standard scanning to be activated. Consequently, if you are setting this argument to `true`, you must also set the `lambda` argument to `true`. See [Scanning AWS Lambda functions with Amazon Inspector](https://docs.aws.amazon.com/inspector/latest/user/scanning-lambda.html#lambda-code-scans) for more information.
	LambdaCode *bool `pulumi:"lambdaCode"`
}

// OrganizationConfigurationAutoEnableInput is an input type that accepts OrganizationConfigurationAutoEnableArgs and OrganizationConfigurationAutoEnableOutput values.
// You can construct a concrete instance of `OrganizationConfigurationAutoEnableInput` via:
//
//	OrganizationConfigurationAutoEnableArgs{...}
type OrganizationConfigurationAutoEnableInput interface {
	pulumi.Input

	ToOrganizationConfigurationAutoEnableOutput() OrganizationConfigurationAutoEnableOutput
	ToOrganizationConfigurationAutoEnableOutputWithContext(context.Context) OrganizationConfigurationAutoEnableOutput
}

type OrganizationConfigurationAutoEnableArgs struct {
	// Whether Amazon EC2 scans are automatically enabled for new members of your Amazon Inspector organization.
	Ec2 pulumi.BoolInput `pulumi:"ec2"`
	// Whether Amazon ECR scans are automatically enabled for new members of your Amazon Inspector organization.
	Ecr pulumi.BoolInput `pulumi:"ecr"`
	// Whether Lambda Function scans are automatically enabled for new members of your Amazon Inspector organization.
	Lambda pulumi.BoolPtrInput `pulumi:"lambda"`
	// Whether AWS Lambda code scans are automatically enabled for new members of your Amazon Inspector organization. **Note:** Lambda code scanning requires Lambda standard scanning to be activated. Consequently, if you are setting this argument to `true`, you must also set the `lambda` argument to `true`. See [Scanning AWS Lambda functions with Amazon Inspector](https://docs.aws.amazon.com/inspector/latest/user/scanning-lambda.html#lambda-code-scans) for more information.
	LambdaCode pulumi.BoolPtrInput `pulumi:"lambdaCode"`
}

func (OrganizationConfigurationAutoEnableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationConfigurationAutoEnable)(nil)).Elem()
}

func (i OrganizationConfigurationAutoEnableArgs) ToOrganizationConfigurationAutoEnableOutput() OrganizationConfigurationAutoEnableOutput {
	return i.ToOrganizationConfigurationAutoEnableOutputWithContext(context.Background())
}

func (i OrganizationConfigurationAutoEnableArgs) ToOrganizationConfigurationAutoEnableOutputWithContext(ctx context.Context) OrganizationConfigurationAutoEnableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationConfigurationAutoEnableOutput)
}

func (i OrganizationConfigurationAutoEnableArgs) ToOrganizationConfigurationAutoEnablePtrOutput() OrganizationConfigurationAutoEnablePtrOutput {
	return i.ToOrganizationConfigurationAutoEnablePtrOutputWithContext(context.Background())
}

func (i OrganizationConfigurationAutoEnableArgs) ToOrganizationConfigurationAutoEnablePtrOutputWithContext(ctx context.Context) OrganizationConfigurationAutoEnablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationConfigurationAutoEnableOutput).ToOrganizationConfigurationAutoEnablePtrOutputWithContext(ctx)
}

// OrganizationConfigurationAutoEnablePtrInput is an input type that accepts OrganizationConfigurationAutoEnableArgs, OrganizationConfigurationAutoEnablePtr and OrganizationConfigurationAutoEnablePtrOutput values.
// You can construct a concrete instance of `OrganizationConfigurationAutoEnablePtrInput` via:
//
//	        OrganizationConfigurationAutoEnableArgs{...}
//
//	or:
//
//	        nil
type OrganizationConfigurationAutoEnablePtrInput interface {
	pulumi.Input

	ToOrganizationConfigurationAutoEnablePtrOutput() OrganizationConfigurationAutoEnablePtrOutput
	ToOrganizationConfigurationAutoEnablePtrOutputWithContext(context.Context) OrganizationConfigurationAutoEnablePtrOutput
}

type organizationConfigurationAutoEnablePtrType OrganizationConfigurationAutoEnableArgs

func OrganizationConfigurationAutoEnablePtr(v *OrganizationConfigurationAutoEnableArgs) OrganizationConfigurationAutoEnablePtrInput {
	return (*organizationConfigurationAutoEnablePtrType)(v)
}

func (*organizationConfigurationAutoEnablePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationConfigurationAutoEnable)(nil)).Elem()
}

func (i *organizationConfigurationAutoEnablePtrType) ToOrganizationConfigurationAutoEnablePtrOutput() OrganizationConfigurationAutoEnablePtrOutput {
	return i.ToOrganizationConfigurationAutoEnablePtrOutputWithContext(context.Background())
}

func (i *organizationConfigurationAutoEnablePtrType) ToOrganizationConfigurationAutoEnablePtrOutputWithContext(ctx context.Context) OrganizationConfigurationAutoEnablePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationConfigurationAutoEnablePtrOutput)
}

type OrganizationConfigurationAutoEnableOutput struct{ *pulumi.OutputState }

func (OrganizationConfigurationAutoEnableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationConfigurationAutoEnable)(nil)).Elem()
}

func (o OrganizationConfigurationAutoEnableOutput) ToOrganizationConfigurationAutoEnableOutput() OrganizationConfigurationAutoEnableOutput {
	return o
}

func (o OrganizationConfigurationAutoEnableOutput) ToOrganizationConfigurationAutoEnableOutputWithContext(ctx context.Context) OrganizationConfigurationAutoEnableOutput {
	return o
}

func (o OrganizationConfigurationAutoEnableOutput) ToOrganizationConfigurationAutoEnablePtrOutput() OrganizationConfigurationAutoEnablePtrOutput {
	return o.ToOrganizationConfigurationAutoEnablePtrOutputWithContext(context.Background())
}

func (o OrganizationConfigurationAutoEnableOutput) ToOrganizationConfigurationAutoEnablePtrOutputWithContext(ctx context.Context) OrganizationConfigurationAutoEnablePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrganizationConfigurationAutoEnable) *OrganizationConfigurationAutoEnable {
		return &v
	}).(OrganizationConfigurationAutoEnablePtrOutput)
}

// Whether Amazon EC2 scans are automatically enabled for new members of your Amazon Inspector organization.
func (o OrganizationConfigurationAutoEnableOutput) Ec2() pulumi.BoolOutput {
	return o.ApplyT(func(v OrganizationConfigurationAutoEnable) bool { return v.Ec2 }).(pulumi.BoolOutput)
}

// Whether Amazon ECR scans are automatically enabled for new members of your Amazon Inspector organization.
func (o OrganizationConfigurationAutoEnableOutput) Ecr() pulumi.BoolOutput {
	return o.ApplyT(func(v OrganizationConfigurationAutoEnable) bool { return v.Ecr }).(pulumi.BoolOutput)
}

// Whether Lambda Function scans are automatically enabled for new members of your Amazon Inspector organization.
func (o OrganizationConfigurationAutoEnableOutput) Lambda() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationConfigurationAutoEnable) *bool { return v.Lambda }).(pulumi.BoolPtrOutput)
}

// Whether AWS Lambda code scans are automatically enabled for new members of your Amazon Inspector organization. **Note:** Lambda code scanning requires Lambda standard scanning to be activated. Consequently, if you are setting this argument to `true`, you must also set the `lambda` argument to `true`. See [Scanning AWS Lambda functions with Amazon Inspector](https://docs.aws.amazon.com/inspector/latest/user/scanning-lambda.html#lambda-code-scans) for more information.
func (o OrganizationConfigurationAutoEnableOutput) LambdaCode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OrganizationConfigurationAutoEnable) *bool { return v.LambdaCode }).(pulumi.BoolPtrOutput)
}

type OrganizationConfigurationAutoEnablePtrOutput struct{ *pulumi.OutputState }

func (OrganizationConfigurationAutoEnablePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationConfigurationAutoEnable)(nil)).Elem()
}

func (o OrganizationConfigurationAutoEnablePtrOutput) ToOrganizationConfigurationAutoEnablePtrOutput() OrganizationConfigurationAutoEnablePtrOutput {
	return o
}

func (o OrganizationConfigurationAutoEnablePtrOutput) ToOrganizationConfigurationAutoEnablePtrOutputWithContext(ctx context.Context) OrganizationConfigurationAutoEnablePtrOutput {
	return o
}

func (o OrganizationConfigurationAutoEnablePtrOutput) Elem() OrganizationConfigurationAutoEnableOutput {
	return o.ApplyT(func(v *OrganizationConfigurationAutoEnable) OrganizationConfigurationAutoEnable {
		if v != nil {
			return *v
		}
		var ret OrganizationConfigurationAutoEnable
		return ret
	}).(OrganizationConfigurationAutoEnableOutput)
}

// Whether Amazon EC2 scans are automatically enabled for new members of your Amazon Inspector organization.
func (o OrganizationConfigurationAutoEnablePtrOutput) Ec2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrganizationConfigurationAutoEnable) *bool {
		if v == nil {
			return nil
		}
		return &v.Ec2
	}).(pulumi.BoolPtrOutput)
}

// Whether Amazon ECR scans are automatically enabled for new members of your Amazon Inspector organization.
func (o OrganizationConfigurationAutoEnablePtrOutput) Ecr() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrganizationConfigurationAutoEnable) *bool {
		if v == nil {
			return nil
		}
		return &v.Ecr
	}).(pulumi.BoolPtrOutput)
}

// Whether Lambda Function scans are automatically enabled for new members of your Amazon Inspector organization.
func (o OrganizationConfigurationAutoEnablePtrOutput) Lambda() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrganizationConfigurationAutoEnable) *bool {
		if v == nil {
			return nil
		}
		return v.Lambda
	}).(pulumi.BoolPtrOutput)
}

// Whether AWS Lambda code scans are automatically enabled for new members of your Amazon Inspector organization. **Note:** Lambda code scanning requires Lambda standard scanning to be activated. Consequently, if you are setting this argument to `true`, you must also set the `lambda` argument to `true`. See [Scanning AWS Lambda functions with Amazon Inspector](https://docs.aws.amazon.com/inspector/latest/user/scanning-lambda.html#lambda-code-scans) for more information.
func (o OrganizationConfigurationAutoEnablePtrOutput) LambdaCode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OrganizationConfigurationAutoEnable) *bool {
		if v == nil {
			return nil
		}
		return v.LambdaCode
	}).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaInput)(nil)).Elem(), FilterFilterCriteriaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaArrayInput)(nil)).Elem(), FilterFilterCriteriaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaAwsAccountIdInput)(nil)).Elem(), FilterFilterCriteriaAwsAccountIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaAwsAccountIdArrayInput)(nil)).Elem(), FilterFilterCriteriaAwsAccountIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaCodeVulnerabilityDetectorNameInput)(nil)).Elem(), FilterFilterCriteriaCodeVulnerabilityDetectorNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaCodeVulnerabilityDetectorNameArrayInput)(nil)).Elem(), FilterFilterCriteriaCodeVulnerabilityDetectorNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaCodeVulnerabilityDetectorTagInput)(nil)).Elem(), FilterFilterCriteriaCodeVulnerabilityDetectorTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaCodeVulnerabilityDetectorTagArrayInput)(nil)).Elem(), FilterFilterCriteriaCodeVulnerabilityDetectorTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaCodeVulnerabilityFilePathInput)(nil)).Elem(), FilterFilterCriteriaCodeVulnerabilityFilePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaCodeVulnerabilityFilePathArrayInput)(nil)).Elem(), FilterFilterCriteriaCodeVulnerabilityFilePathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaComponentIdInput)(nil)).Elem(), FilterFilterCriteriaComponentIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaComponentIdArrayInput)(nil)).Elem(), FilterFilterCriteriaComponentIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaComponentTypeInput)(nil)).Elem(), FilterFilterCriteriaComponentTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaComponentTypeArrayInput)(nil)).Elem(), FilterFilterCriteriaComponentTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaEc2InstanceImageIdInput)(nil)).Elem(), FilterFilterCriteriaEc2InstanceImageIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaEc2InstanceImageIdArrayInput)(nil)).Elem(), FilterFilterCriteriaEc2InstanceImageIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaEc2InstanceSubnetIdInput)(nil)).Elem(), FilterFilterCriteriaEc2InstanceSubnetIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaEc2InstanceSubnetIdArrayInput)(nil)).Elem(), FilterFilterCriteriaEc2InstanceSubnetIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaEc2InstanceVpcIdInput)(nil)).Elem(), FilterFilterCriteriaEc2InstanceVpcIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaEc2InstanceVpcIdArrayInput)(nil)).Elem(), FilterFilterCriteriaEc2InstanceVpcIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaEcrImageArchitectureInput)(nil)).Elem(), FilterFilterCriteriaEcrImageArchitectureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaEcrImageArchitectureArrayInput)(nil)).Elem(), FilterFilterCriteriaEcrImageArchitectureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaEcrImageHashInput)(nil)).Elem(), FilterFilterCriteriaEcrImageHashArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaEcrImageHashArrayInput)(nil)).Elem(), FilterFilterCriteriaEcrImageHashArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaEcrImagePushedAtInput)(nil)).Elem(), FilterFilterCriteriaEcrImagePushedAtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaEcrImagePushedAtArrayInput)(nil)).Elem(), FilterFilterCriteriaEcrImagePushedAtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaEcrImageRegistryInput)(nil)).Elem(), FilterFilterCriteriaEcrImageRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaEcrImageRegistryArrayInput)(nil)).Elem(), FilterFilterCriteriaEcrImageRegistryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaEcrImageRepositoryNameInput)(nil)).Elem(), FilterFilterCriteriaEcrImageRepositoryNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaEcrImageRepositoryNameArrayInput)(nil)).Elem(), FilterFilterCriteriaEcrImageRepositoryNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaEcrImageTagInput)(nil)).Elem(), FilterFilterCriteriaEcrImageTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaEcrImageTagArrayInput)(nil)).Elem(), FilterFilterCriteriaEcrImageTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaEpssScoreInput)(nil)).Elem(), FilterFilterCriteriaEpssScoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaEpssScoreArrayInput)(nil)).Elem(), FilterFilterCriteriaEpssScoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaExploitAvailableInput)(nil)).Elem(), FilterFilterCriteriaExploitAvailableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaExploitAvailableArrayInput)(nil)).Elem(), FilterFilterCriteriaExploitAvailableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaFindingArnInput)(nil)).Elem(), FilterFilterCriteriaFindingArnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaFindingArnArrayInput)(nil)).Elem(), FilterFilterCriteriaFindingArnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaFindingStatusInput)(nil)).Elem(), FilterFilterCriteriaFindingStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaFindingStatusArrayInput)(nil)).Elem(), FilterFilterCriteriaFindingStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaFindingTypeInput)(nil)).Elem(), FilterFilterCriteriaFindingTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaFindingTypeArrayInput)(nil)).Elem(), FilterFilterCriteriaFindingTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaFirstObservedAtInput)(nil)).Elem(), FilterFilterCriteriaFirstObservedAtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaFirstObservedAtArrayInput)(nil)).Elem(), FilterFilterCriteriaFirstObservedAtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaFixAvailableInput)(nil)).Elem(), FilterFilterCriteriaFixAvailableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaFixAvailableArrayInput)(nil)).Elem(), FilterFilterCriteriaFixAvailableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaInspectorScoreInput)(nil)).Elem(), FilterFilterCriteriaInspectorScoreArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaInspectorScoreArrayInput)(nil)).Elem(), FilterFilterCriteriaInspectorScoreArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaLambdaFunctionExecutionRoleArnInput)(nil)).Elem(), FilterFilterCriteriaLambdaFunctionExecutionRoleArnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayInput)(nil)).Elem(), FilterFilterCriteriaLambdaFunctionExecutionRoleArnArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaLambdaFunctionLastModifiedAtInput)(nil)).Elem(), FilterFilterCriteriaLambdaFunctionLastModifiedAtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaLambdaFunctionLastModifiedAtArrayInput)(nil)).Elem(), FilterFilterCriteriaLambdaFunctionLastModifiedAtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaLambdaFunctionLayerInput)(nil)).Elem(), FilterFilterCriteriaLambdaFunctionLayerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaLambdaFunctionLayerArrayInput)(nil)).Elem(), FilterFilterCriteriaLambdaFunctionLayerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaLambdaFunctionNameInput)(nil)).Elem(), FilterFilterCriteriaLambdaFunctionNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaLambdaFunctionNameArrayInput)(nil)).Elem(), FilterFilterCriteriaLambdaFunctionNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaLambdaFunctionRuntimeInput)(nil)).Elem(), FilterFilterCriteriaLambdaFunctionRuntimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaLambdaFunctionRuntimeArrayInput)(nil)).Elem(), FilterFilterCriteriaLambdaFunctionRuntimeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaLastObservedAtInput)(nil)).Elem(), FilterFilterCriteriaLastObservedAtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaLastObservedAtArrayInput)(nil)).Elem(), FilterFilterCriteriaLastObservedAtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaNetworkProtocolInput)(nil)).Elem(), FilterFilterCriteriaNetworkProtocolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaNetworkProtocolArrayInput)(nil)).Elem(), FilterFilterCriteriaNetworkProtocolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaPortRangeInput)(nil)).Elem(), FilterFilterCriteriaPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaPortRangeArrayInput)(nil)).Elem(), FilterFilterCriteriaPortRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaRelatedVulnerabilityInput)(nil)).Elem(), FilterFilterCriteriaRelatedVulnerabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaRelatedVulnerabilityArrayInput)(nil)).Elem(), FilterFilterCriteriaRelatedVulnerabilityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaResourceIdInput)(nil)).Elem(), FilterFilterCriteriaResourceIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaResourceIdArrayInput)(nil)).Elem(), FilterFilterCriteriaResourceIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaResourceTagInput)(nil)).Elem(), FilterFilterCriteriaResourceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaResourceTagArrayInput)(nil)).Elem(), FilterFilterCriteriaResourceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaResourceTypeInput)(nil)).Elem(), FilterFilterCriteriaResourceTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaResourceTypeArrayInput)(nil)).Elem(), FilterFilterCriteriaResourceTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaSeverityInput)(nil)).Elem(), FilterFilterCriteriaSeverityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaSeverityArrayInput)(nil)).Elem(), FilterFilterCriteriaSeverityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaTitleInput)(nil)).Elem(), FilterFilterCriteriaTitleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaTitleArrayInput)(nil)).Elem(), FilterFilterCriteriaTitleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaUpdatedAtInput)(nil)).Elem(), FilterFilterCriteriaUpdatedAtArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaUpdatedAtArrayInput)(nil)).Elem(), FilterFilterCriteriaUpdatedAtArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaVendorSeverityInput)(nil)).Elem(), FilterFilterCriteriaVendorSeverityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaVendorSeverityArrayInput)(nil)).Elem(), FilterFilterCriteriaVendorSeverityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaVulnerabilityIdInput)(nil)).Elem(), FilterFilterCriteriaVulnerabilityIdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaVulnerabilityIdArrayInput)(nil)).Elem(), FilterFilterCriteriaVulnerabilityIdArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaVulnerabilitySourceInput)(nil)).Elem(), FilterFilterCriteriaVulnerabilitySourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaVulnerabilitySourceArrayInput)(nil)).Elem(), FilterFilterCriteriaVulnerabilitySourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageInput)(nil)).Elem(), FilterFilterCriteriaVulnerablePackageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageArrayInput)(nil)).Elem(), FilterFilterCriteriaVulnerablePackageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageArchitectureInput)(nil)).Elem(), FilterFilterCriteriaVulnerablePackageArchitectureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageArchitecturePtrInput)(nil)).Elem(), FilterFilterCriteriaVulnerablePackageArchitectureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageEpochInput)(nil)).Elem(), FilterFilterCriteriaVulnerablePackageEpochArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageEpochArrayInput)(nil)).Elem(), FilterFilterCriteriaVulnerablePackageEpochArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageFilePathInput)(nil)).Elem(), FilterFilterCriteriaVulnerablePackageFilePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageFilePathPtrInput)(nil)).Elem(), FilterFilterCriteriaVulnerablePackageFilePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageNameInput)(nil)).Elem(), FilterFilterCriteriaVulnerablePackageNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageNamePtrInput)(nil)).Elem(), FilterFilterCriteriaVulnerablePackageNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageReleaseInput)(nil)).Elem(), FilterFilterCriteriaVulnerablePackageReleaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageReleasePtrInput)(nil)).Elem(), FilterFilterCriteriaVulnerablePackageReleaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnInput)(nil)).Elem(), FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrInput)(nil)).Elem(), FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageSourceLayerHashInput)(nil)).Elem(), FilterFilterCriteriaVulnerablePackageSourceLayerHashArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrInput)(nil)).Elem(), FilterFilterCriteriaVulnerablePackageSourceLayerHashArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageVersionInput)(nil)).Elem(), FilterFilterCriteriaVulnerablePackageVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FilterFilterCriteriaVulnerablePackageVersionPtrInput)(nil)).Elem(), FilterFilterCriteriaVulnerablePackageVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationConfigurationAutoEnableInput)(nil)).Elem(), OrganizationConfigurationAutoEnableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationConfigurationAutoEnablePtrInput)(nil)).Elem(), OrganizationConfigurationAutoEnableArgs{})
	pulumi.RegisterOutputType(FilterFilterCriteriaOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaAwsAccountIdOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaAwsAccountIdArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaCodeVulnerabilityDetectorNameOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaCodeVulnerabilityDetectorNameArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaCodeVulnerabilityDetectorTagOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaCodeVulnerabilityDetectorTagArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaCodeVulnerabilityFilePathOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaCodeVulnerabilityFilePathArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaComponentIdOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaComponentIdArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaComponentTypeOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaComponentTypeArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaEc2InstanceImageIdOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaEc2InstanceImageIdArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaEc2InstanceSubnetIdOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaEc2InstanceSubnetIdArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaEc2InstanceVpcIdOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaEc2InstanceVpcIdArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaEcrImageArchitectureOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaEcrImageArchitectureArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaEcrImageHashOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaEcrImageHashArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaEcrImagePushedAtOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaEcrImagePushedAtArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaEcrImageRegistryOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaEcrImageRegistryArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaEcrImageRepositoryNameOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaEcrImageRepositoryNameArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaEcrImageTagOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaEcrImageTagArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaEpssScoreOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaEpssScoreArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaExploitAvailableOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaExploitAvailableArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaFindingArnOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaFindingArnArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaFindingStatusOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaFindingStatusArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaFindingTypeOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaFindingTypeArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaFirstObservedAtOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaFirstObservedAtArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaFixAvailableOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaFixAvailableArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaInspectorScoreOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaInspectorScoreArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaLambdaFunctionExecutionRoleArnOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaLambdaFunctionExecutionRoleArnArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaLambdaFunctionLastModifiedAtOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaLambdaFunctionLastModifiedAtArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaLambdaFunctionLayerOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaLambdaFunctionLayerArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaLambdaFunctionNameOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaLambdaFunctionNameArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaLambdaFunctionRuntimeOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaLambdaFunctionRuntimeArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaLastObservedAtOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaLastObservedAtArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaNetworkProtocolOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaNetworkProtocolArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaPortRangeOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaPortRangeArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaRelatedVulnerabilityOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaRelatedVulnerabilityArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaResourceIdOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaResourceIdArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaResourceTagOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaResourceTagArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaResourceTypeOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaResourceTypeArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaSeverityOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaSeverityArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaTitleOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaTitleArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaUpdatedAtOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaUpdatedAtArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaVendorSeverityOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaVendorSeverityArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaVulnerabilityIdOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaVulnerabilityIdArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaVulnerabilitySourceOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaVulnerabilitySourceArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaVulnerablePackageOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaVulnerablePackageArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaVulnerablePackageArchitectureOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaVulnerablePackageArchitecturePtrOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaVulnerablePackageEpochOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaVulnerablePackageEpochArrayOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaVulnerablePackageFilePathOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaVulnerablePackageFilePathPtrOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaVulnerablePackageNameOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaVulnerablePackageNamePtrOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaVulnerablePackageReleaseOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaVulnerablePackageReleasePtrOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaVulnerablePackageSourceLambdaLayerArnPtrOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaVulnerablePackageSourceLayerHashOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaVulnerablePackageSourceLayerHashPtrOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaVulnerablePackageVersionOutput{})
	pulumi.RegisterOutputType(FilterFilterCriteriaVulnerablePackageVersionPtrOutput{})
	pulumi.RegisterOutputType(OrganizationConfigurationAutoEnableOutput{})
	pulumi.RegisterOutputType(OrganizationConfigurationAutoEnablePtrOutput{})
}
