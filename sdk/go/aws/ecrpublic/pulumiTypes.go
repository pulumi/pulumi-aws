// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecrpublic

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RepositoryCatalogData struct {
	AboutText        *string  `pulumi:"aboutText"`
	Architectures    []string `pulumi:"architectures"`
	Description      *string  `pulumi:"description"`
	LogoImageBlob    *string  `pulumi:"logoImageBlob"`
	OperatingSystems []string `pulumi:"operatingSystems"`
	UsageText        *string  `pulumi:"usageText"`
}

// RepositoryCatalogDataInput is an input type that accepts RepositoryCatalogDataArgs and RepositoryCatalogDataOutput values.
// You can construct a concrete instance of `RepositoryCatalogDataInput` via:
//
//	RepositoryCatalogDataArgs{...}
type RepositoryCatalogDataInput interface {
	pulumi.Input

	ToRepositoryCatalogDataOutput() RepositoryCatalogDataOutput
	ToRepositoryCatalogDataOutputWithContext(context.Context) RepositoryCatalogDataOutput
}

type RepositoryCatalogDataArgs struct {
	AboutText        pulumi.StringPtrInput   `pulumi:"aboutText"`
	Architectures    pulumi.StringArrayInput `pulumi:"architectures"`
	Description      pulumi.StringPtrInput   `pulumi:"description"`
	LogoImageBlob    pulumi.StringPtrInput   `pulumi:"logoImageBlob"`
	OperatingSystems pulumi.StringArrayInput `pulumi:"operatingSystems"`
	UsageText        pulumi.StringPtrInput   `pulumi:"usageText"`
}

func (RepositoryCatalogDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryCatalogData)(nil)).Elem()
}

func (i RepositoryCatalogDataArgs) ToRepositoryCatalogDataOutput() RepositoryCatalogDataOutput {
	return i.ToRepositoryCatalogDataOutputWithContext(context.Background())
}

func (i RepositoryCatalogDataArgs) ToRepositoryCatalogDataOutputWithContext(ctx context.Context) RepositoryCatalogDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryCatalogDataOutput)
}

func (i RepositoryCatalogDataArgs) ToRepositoryCatalogDataPtrOutput() RepositoryCatalogDataPtrOutput {
	return i.ToRepositoryCatalogDataPtrOutputWithContext(context.Background())
}

func (i RepositoryCatalogDataArgs) ToRepositoryCatalogDataPtrOutputWithContext(ctx context.Context) RepositoryCatalogDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryCatalogDataOutput).ToRepositoryCatalogDataPtrOutputWithContext(ctx)
}

// RepositoryCatalogDataPtrInput is an input type that accepts RepositoryCatalogDataArgs, RepositoryCatalogDataPtr and RepositoryCatalogDataPtrOutput values.
// You can construct a concrete instance of `RepositoryCatalogDataPtrInput` via:
//
//	        RepositoryCatalogDataArgs{...}
//
//	or:
//
//	        nil
type RepositoryCatalogDataPtrInput interface {
	pulumi.Input

	ToRepositoryCatalogDataPtrOutput() RepositoryCatalogDataPtrOutput
	ToRepositoryCatalogDataPtrOutputWithContext(context.Context) RepositoryCatalogDataPtrOutput
}

type repositoryCatalogDataPtrType RepositoryCatalogDataArgs

func RepositoryCatalogDataPtr(v *RepositoryCatalogDataArgs) RepositoryCatalogDataPtrInput {
	return (*repositoryCatalogDataPtrType)(v)
}

func (*repositoryCatalogDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryCatalogData)(nil)).Elem()
}

func (i *repositoryCatalogDataPtrType) ToRepositoryCatalogDataPtrOutput() RepositoryCatalogDataPtrOutput {
	return i.ToRepositoryCatalogDataPtrOutputWithContext(context.Background())
}

func (i *repositoryCatalogDataPtrType) ToRepositoryCatalogDataPtrOutputWithContext(ctx context.Context) RepositoryCatalogDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryCatalogDataPtrOutput)
}

type RepositoryCatalogDataOutput struct{ *pulumi.OutputState }

func (RepositoryCatalogDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryCatalogData)(nil)).Elem()
}

func (o RepositoryCatalogDataOutput) ToRepositoryCatalogDataOutput() RepositoryCatalogDataOutput {
	return o
}

func (o RepositoryCatalogDataOutput) ToRepositoryCatalogDataOutputWithContext(ctx context.Context) RepositoryCatalogDataOutput {
	return o
}

func (o RepositoryCatalogDataOutput) ToRepositoryCatalogDataPtrOutput() RepositoryCatalogDataPtrOutput {
	return o.ToRepositoryCatalogDataPtrOutputWithContext(context.Background())
}

func (o RepositoryCatalogDataOutput) ToRepositoryCatalogDataPtrOutputWithContext(ctx context.Context) RepositoryCatalogDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RepositoryCatalogData) *RepositoryCatalogData {
		return &v
	}).(RepositoryCatalogDataPtrOutput)
}

func (o RepositoryCatalogDataOutput) AboutText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryCatalogData) *string { return v.AboutText }).(pulumi.StringPtrOutput)
}

func (o RepositoryCatalogDataOutput) Architectures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RepositoryCatalogData) []string { return v.Architectures }).(pulumi.StringArrayOutput)
}

func (o RepositoryCatalogDataOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryCatalogData) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o RepositoryCatalogDataOutput) LogoImageBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryCatalogData) *string { return v.LogoImageBlob }).(pulumi.StringPtrOutput)
}

func (o RepositoryCatalogDataOutput) OperatingSystems() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RepositoryCatalogData) []string { return v.OperatingSystems }).(pulumi.StringArrayOutput)
}

func (o RepositoryCatalogDataOutput) UsageText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryCatalogData) *string { return v.UsageText }).(pulumi.StringPtrOutput)
}

type RepositoryCatalogDataPtrOutput struct{ *pulumi.OutputState }

func (RepositoryCatalogDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryCatalogData)(nil)).Elem()
}

func (o RepositoryCatalogDataPtrOutput) ToRepositoryCatalogDataPtrOutput() RepositoryCatalogDataPtrOutput {
	return o
}

func (o RepositoryCatalogDataPtrOutput) ToRepositoryCatalogDataPtrOutputWithContext(ctx context.Context) RepositoryCatalogDataPtrOutput {
	return o
}

func (o RepositoryCatalogDataPtrOutput) Elem() RepositoryCatalogDataOutput {
	return o.ApplyT(func(v *RepositoryCatalogData) RepositoryCatalogData {
		if v != nil {
			return *v
		}
		var ret RepositoryCatalogData
		return ret
	}).(RepositoryCatalogDataOutput)
}

func (o RepositoryCatalogDataPtrOutput) AboutText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryCatalogData) *string {
		if v == nil {
			return nil
		}
		return v.AboutText
	}).(pulumi.StringPtrOutput)
}

func (o RepositoryCatalogDataPtrOutput) Architectures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RepositoryCatalogData) []string {
		if v == nil {
			return nil
		}
		return v.Architectures
	}).(pulumi.StringArrayOutput)
}

func (o RepositoryCatalogDataPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryCatalogData) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o RepositoryCatalogDataPtrOutput) LogoImageBlob() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryCatalogData) *string {
		if v == nil {
			return nil
		}
		return v.LogoImageBlob
	}).(pulumi.StringPtrOutput)
}

func (o RepositoryCatalogDataPtrOutput) OperatingSystems() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RepositoryCatalogData) []string {
		if v == nil {
			return nil
		}
		return v.OperatingSystems
	}).(pulumi.StringArrayOutput)
}

func (o RepositoryCatalogDataPtrOutput) UsageText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryCatalogData) *string {
		if v == nil {
			return nil
		}
		return v.UsageText
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryCatalogDataInput)(nil)).Elem(), RepositoryCatalogDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RepositoryCatalogDataPtrInput)(nil)).Elem(), RepositoryCatalogDataArgs{})
	pulumi.RegisterOutputType(RepositoryCatalogDataOutput{})
	pulumi.RegisterOutputType(RepositoryCatalogDataPtrOutput{})
}
