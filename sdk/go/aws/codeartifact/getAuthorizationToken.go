// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codeartifact

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetAuthorizationToken(ctx *pulumi.Context, args *GetAuthorizationTokenArgs, opts ...pulumi.InvokeOption) (*GetAuthorizationTokenResult, error) {
	var rv GetAuthorizationTokenResult
	err := ctx.Invoke("aws:codeartifact/getAuthorizationToken:getAuthorizationToken", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAuthorizationToken.
type GetAuthorizationTokenArgs struct {
	Domain          string  `pulumi:"domain"`
	DomainOwner     *string `pulumi:"domainOwner"`
	DurationSeconds *int    `pulumi:"durationSeconds"`
}

// A collection of values returned by getAuthorizationToken.
type GetAuthorizationTokenResult struct {
	AuthorizationToken string `pulumi:"authorizationToken"`
	Domain             string `pulumi:"domain"`
	DomainOwner        string `pulumi:"domainOwner"`
	DurationSeconds    *int   `pulumi:"durationSeconds"`
	Expiration         string `pulumi:"expiration"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetAuthorizationTokenOutput(ctx *pulumi.Context, args GetAuthorizationTokenOutputArgs, opts ...pulumi.InvokeOption) GetAuthorizationTokenResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAuthorizationTokenResult, error) {
			args := v.(GetAuthorizationTokenArgs)
			r, err := GetAuthorizationToken(ctx, &args, opts...)
			var s GetAuthorizationTokenResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAuthorizationTokenResultOutput)
}

// A collection of arguments for invoking getAuthorizationToken.
type GetAuthorizationTokenOutputArgs struct {
	Domain          pulumi.StringInput    `pulumi:"domain"`
	DomainOwner     pulumi.StringPtrInput `pulumi:"domainOwner"`
	DurationSeconds pulumi.IntPtrInput    `pulumi:"durationSeconds"`
}

func (GetAuthorizationTokenOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizationTokenArgs)(nil)).Elem()
}

// A collection of values returned by getAuthorizationToken.
type GetAuthorizationTokenResultOutput struct{ *pulumi.OutputState }

func (GetAuthorizationTokenResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizationTokenResult)(nil)).Elem()
}

func (o GetAuthorizationTokenResultOutput) ToGetAuthorizationTokenResultOutput() GetAuthorizationTokenResultOutput {
	return o
}

func (o GetAuthorizationTokenResultOutput) ToGetAuthorizationTokenResultOutputWithContext(ctx context.Context) GetAuthorizationTokenResultOutput {
	return o
}

func (o GetAuthorizationTokenResultOutput) AuthorizationToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationTokenResult) string { return v.AuthorizationToken }).(pulumi.StringOutput)
}

func (o GetAuthorizationTokenResultOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationTokenResult) string { return v.Domain }).(pulumi.StringOutput)
}

func (o GetAuthorizationTokenResultOutput) DomainOwner() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationTokenResult) string { return v.DomainOwner }).(pulumi.StringOutput)
}

func (o GetAuthorizationTokenResultOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAuthorizationTokenResult) *int { return v.DurationSeconds }).(pulumi.IntPtrOutput)
}

func (o GetAuthorizationTokenResultOutput) Expiration() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationTokenResult) string { return v.Expiration }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAuthorizationTokenResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationTokenResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAuthorizationTokenResultOutput{})
}
