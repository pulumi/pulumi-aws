// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticbeanstalk

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Environment struct {
	pulumi.CustomResourceState

	AllSettings          EnvironmentAllSettingArrayOutput `pulumi:"allSettings"`
	Application          pulumi.StringOutput              `pulumi:"application"`
	Arn                  pulumi.StringOutput              `pulumi:"arn"`
	AutoscalingGroups    pulumi.StringArrayOutput         `pulumi:"autoscalingGroups"`
	Cname                pulumi.StringOutput              `pulumi:"cname"`
	CnamePrefix          pulumi.StringOutput              `pulumi:"cnamePrefix"`
	Description          pulumi.StringPtrOutput           `pulumi:"description"`
	EndpointUrl          pulumi.StringOutput              `pulumi:"endpointUrl"`
	Instances            pulumi.StringArrayOutput         `pulumi:"instances"`
	LaunchConfigurations pulumi.StringArrayOutput         `pulumi:"launchConfigurations"`
	LoadBalancers        pulumi.StringArrayOutput         `pulumi:"loadBalancers"`
	Name                 pulumi.StringOutput              `pulumi:"name"`
	PlatformArn          pulumi.StringOutput              `pulumi:"platformArn"`
	PollInterval         pulumi.StringPtrOutput           `pulumi:"pollInterval"`
	Queues               pulumi.StringArrayOutput         `pulumi:"queues"`
	Settings             EnvironmentSettingArrayOutput    `pulumi:"settings"`
	SolutionStackName    pulumi.StringOutput              `pulumi:"solutionStackName"`
	Tags                 pulumi.StringMapOutput           `pulumi:"tags"`
	TagsAll              pulumi.StringMapOutput           `pulumi:"tagsAll"`
	TemplateName         pulumi.StringPtrOutput           `pulumi:"templateName"`
	Tier                 pulumi.StringPtrOutput           `pulumi:"tier"`
	Triggers             pulumi.StringArrayOutput         `pulumi:"triggers"`
	Version              pulumi.StringOutput              `pulumi:"version"`
	WaitForReadyTimeout  pulumi.StringPtrOutput           `pulumi:"waitForReadyTimeout"`
}

// NewEnvironment registers a new resource with the given unique name, arguments, and options.
func NewEnvironment(ctx *pulumi.Context,
	name string, args *EnvironmentArgs, opts ...pulumi.ResourceOption) (*Environment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Application == nil {
		return nil, errors.New("invalid value for required argument 'Application'")
	}
	var resource Environment
	err := ctx.RegisterResource("aws:elasticbeanstalk/environment:Environment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnvironment gets an existing Environment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnvironment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnvironmentState, opts ...pulumi.ResourceOption) (*Environment, error) {
	var resource Environment
	err := ctx.ReadResource("aws:elasticbeanstalk/environment:Environment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Environment resources.
type environmentState struct {
	AllSettings          []EnvironmentAllSetting `pulumi:"allSettings"`
	Application          interface{}             `pulumi:"application"`
	Arn                  *string                 `pulumi:"arn"`
	AutoscalingGroups    []string                `pulumi:"autoscalingGroups"`
	Cname                *string                 `pulumi:"cname"`
	CnamePrefix          *string                 `pulumi:"cnamePrefix"`
	Description          *string                 `pulumi:"description"`
	EndpointUrl          *string                 `pulumi:"endpointUrl"`
	Instances            []string                `pulumi:"instances"`
	LaunchConfigurations []string                `pulumi:"launchConfigurations"`
	LoadBalancers        []string                `pulumi:"loadBalancers"`
	Name                 *string                 `pulumi:"name"`
	PlatformArn          *string                 `pulumi:"platformArn"`
	PollInterval         *string                 `pulumi:"pollInterval"`
	Queues               []string                `pulumi:"queues"`
	Settings             []EnvironmentSetting    `pulumi:"settings"`
	SolutionStackName    *string                 `pulumi:"solutionStackName"`
	Tags                 map[string]string       `pulumi:"tags"`
	TagsAll              map[string]string       `pulumi:"tagsAll"`
	TemplateName         *string                 `pulumi:"templateName"`
	Tier                 *string                 `pulumi:"tier"`
	Triggers             []string                `pulumi:"triggers"`
	Version              *string                 `pulumi:"version"`
	WaitForReadyTimeout  *string                 `pulumi:"waitForReadyTimeout"`
}

type EnvironmentState struct {
	AllSettings          EnvironmentAllSettingArrayInput
	Application          pulumi.Input
	Arn                  pulumi.StringPtrInput
	AutoscalingGroups    pulumi.StringArrayInput
	Cname                pulumi.StringPtrInput
	CnamePrefix          pulumi.StringPtrInput
	Description          pulumi.StringPtrInput
	EndpointUrl          pulumi.StringPtrInput
	Instances            pulumi.StringArrayInput
	LaunchConfigurations pulumi.StringArrayInput
	LoadBalancers        pulumi.StringArrayInput
	Name                 pulumi.StringPtrInput
	PlatformArn          pulumi.StringPtrInput
	PollInterval         pulumi.StringPtrInput
	Queues               pulumi.StringArrayInput
	Settings             EnvironmentSettingArrayInput
	SolutionStackName    pulumi.StringPtrInput
	Tags                 pulumi.StringMapInput
	TagsAll              pulumi.StringMapInput
	TemplateName         pulumi.StringPtrInput
	Tier                 pulumi.StringPtrInput
	Triggers             pulumi.StringArrayInput
	Version              pulumi.StringPtrInput
	WaitForReadyTimeout  pulumi.StringPtrInput
}

func (EnvironmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentState)(nil)).Elem()
}

type environmentArgs struct {
	Application         interface{}          `pulumi:"application"`
	CnamePrefix         *string              `pulumi:"cnamePrefix"`
	Description         *string              `pulumi:"description"`
	Name                *string              `pulumi:"name"`
	PlatformArn         *string              `pulumi:"platformArn"`
	PollInterval        *string              `pulumi:"pollInterval"`
	Settings            []EnvironmentSetting `pulumi:"settings"`
	SolutionStackName   *string              `pulumi:"solutionStackName"`
	Tags                map[string]string    `pulumi:"tags"`
	TemplateName        *string              `pulumi:"templateName"`
	Tier                *string              `pulumi:"tier"`
	Version             *string              `pulumi:"version"`
	WaitForReadyTimeout *string              `pulumi:"waitForReadyTimeout"`
}

// The set of arguments for constructing a Environment resource.
type EnvironmentArgs struct {
	Application         pulumi.Input
	CnamePrefix         pulumi.StringPtrInput
	Description         pulumi.StringPtrInput
	Name                pulumi.StringPtrInput
	PlatformArn         pulumi.StringPtrInput
	PollInterval        pulumi.StringPtrInput
	Settings            EnvironmentSettingArrayInput
	SolutionStackName   pulumi.StringPtrInput
	Tags                pulumi.StringMapInput
	TemplateName        pulumi.StringPtrInput
	Tier                pulumi.StringPtrInput
	Version             pulumi.StringPtrInput
	WaitForReadyTimeout pulumi.StringPtrInput
}

func (EnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentArgs)(nil)).Elem()
}

type EnvironmentInput interface {
	pulumi.Input

	ToEnvironmentOutput() EnvironmentOutput
	ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput
}

func (*Environment) ElementType() reflect.Type {
	return reflect.TypeOf((**Environment)(nil)).Elem()
}

func (i *Environment) ToEnvironmentOutput() EnvironmentOutput {
	return i.ToEnvironmentOutputWithContext(context.Background())
}

func (i *Environment) ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentOutput)
}

// EnvironmentArrayInput is an input type that accepts EnvironmentArray and EnvironmentArrayOutput values.
// You can construct a concrete instance of `EnvironmentArrayInput` via:
//
//	EnvironmentArray{ EnvironmentArgs{...} }
type EnvironmentArrayInput interface {
	pulumi.Input

	ToEnvironmentArrayOutput() EnvironmentArrayOutput
	ToEnvironmentArrayOutputWithContext(context.Context) EnvironmentArrayOutput
}

type EnvironmentArray []EnvironmentInput

func (EnvironmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Environment)(nil)).Elem()
}

func (i EnvironmentArray) ToEnvironmentArrayOutput() EnvironmentArrayOutput {
	return i.ToEnvironmentArrayOutputWithContext(context.Background())
}

func (i EnvironmentArray) ToEnvironmentArrayOutputWithContext(ctx context.Context) EnvironmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentArrayOutput)
}

// EnvironmentMapInput is an input type that accepts EnvironmentMap and EnvironmentMapOutput values.
// You can construct a concrete instance of `EnvironmentMapInput` via:
//
//	EnvironmentMap{ "key": EnvironmentArgs{...} }
type EnvironmentMapInput interface {
	pulumi.Input

	ToEnvironmentMapOutput() EnvironmentMapOutput
	ToEnvironmentMapOutputWithContext(context.Context) EnvironmentMapOutput
}

type EnvironmentMap map[string]EnvironmentInput

func (EnvironmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Environment)(nil)).Elem()
}

func (i EnvironmentMap) ToEnvironmentMapOutput() EnvironmentMapOutput {
	return i.ToEnvironmentMapOutputWithContext(context.Background())
}

func (i EnvironmentMap) ToEnvironmentMapOutputWithContext(ctx context.Context) EnvironmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentMapOutput)
}

type EnvironmentOutput struct{ *pulumi.OutputState }

func (EnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Environment)(nil)).Elem()
}

func (o EnvironmentOutput) ToEnvironmentOutput() EnvironmentOutput {
	return o
}

func (o EnvironmentOutput) ToEnvironmentOutputWithContext(ctx context.Context) EnvironmentOutput {
	return o
}

func (o EnvironmentOutput) AllSettings() EnvironmentAllSettingArrayOutput {
	return o.ApplyT(func(v *Environment) EnvironmentAllSettingArrayOutput { return v.AllSettings }).(EnvironmentAllSettingArrayOutput)
}

func (o EnvironmentOutput) Application() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.Application }).(pulumi.StringOutput)
}

func (o EnvironmentOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o EnvironmentOutput) AutoscalingGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringArrayOutput { return v.AutoscalingGroups }).(pulumi.StringArrayOutput)
}

func (o EnvironmentOutput) Cname() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.Cname }).(pulumi.StringOutput)
}

func (o EnvironmentOutput) CnamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.CnamePrefix }).(pulumi.StringOutput)
}

func (o EnvironmentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o EnvironmentOutput) EndpointUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.EndpointUrl }).(pulumi.StringOutput)
}

func (o EnvironmentOutput) Instances() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringArrayOutput { return v.Instances }).(pulumi.StringArrayOutput)
}

func (o EnvironmentOutput) LaunchConfigurations() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringArrayOutput { return v.LaunchConfigurations }).(pulumi.StringArrayOutput)
}

func (o EnvironmentOutput) LoadBalancers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringArrayOutput { return v.LoadBalancers }).(pulumi.StringArrayOutput)
}

func (o EnvironmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o EnvironmentOutput) PlatformArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.PlatformArn }).(pulumi.StringOutput)
}

func (o EnvironmentOutput) PollInterval() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringPtrOutput { return v.PollInterval }).(pulumi.StringPtrOutput)
}

func (o EnvironmentOutput) Queues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringArrayOutput { return v.Queues }).(pulumi.StringArrayOutput)
}

func (o EnvironmentOutput) Settings() EnvironmentSettingArrayOutput {
	return o.ApplyT(func(v *Environment) EnvironmentSettingArrayOutput { return v.Settings }).(EnvironmentSettingArrayOutput)
}

func (o EnvironmentOutput) SolutionStackName() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.SolutionStackName }).(pulumi.StringOutput)
}

func (o EnvironmentOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o EnvironmentOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o EnvironmentOutput) TemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringPtrOutput { return v.TemplateName }).(pulumi.StringPtrOutput)
}

func (o EnvironmentOutput) Tier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringPtrOutput { return v.Tier }).(pulumi.StringPtrOutput)
}

func (o EnvironmentOutput) Triggers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringArrayOutput { return v.Triggers }).(pulumi.StringArrayOutput)
}

func (o EnvironmentOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

func (o EnvironmentOutput) WaitForReadyTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Environment) pulumi.StringPtrOutput { return v.WaitForReadyTimeout }).(pulumi.StringPtrOutput)
}

type EnvironmentArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Environment)(nil)).Elem()
}

func (o EnvironmentArrayOutput) ToEnvironmentArrayOutput() EnvironmentArrayOutput {
	return o
}

func (o EnvironmentArrayOutput) ToEnvironmentArrayOutputWithContext(ctx context.Context) EnvironmentArrayOutput {
	return o
}

func (o EnvironmentArrayOutput) Index(i pulumi.IntInput) EnvironmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Environment {
		return vs[0].([]*Environment)[vs[1].(int)]
	}).(EnvironmentOutput)
}

type EnvironmentMapOutput struct{ *pulumi.OutputState }

func (EnvironmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Environment)(nil)).Elem()
}

func (o EnvironmentMapOutput) ToEnvironmentMapOutput() EnvironmentMapOutput {
	return o
}

func (o EnvironmentMapOutput) ToEnvironmentMapOutputWithContext(ctx context.Context) EnvironmentMapOutput {
	return o
}

func (o EnvironmentMapOutput) MapIndex(k pulumi.StringInput) EnvironmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Environment {
		return vs[0].(map[string]*Environment)[vs[1].(string)]
	}).(EnvironmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentInput)(nil)).Elem(), &Environment{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentArrayInput)(nil)).Elem(), EnvironmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentMapInput)(nil)).Elem(), EnvironmentMap{})
	pulumi.RegisterOutputType(EnvironmentOutput{})
	pulumi.RegisterOutputType(EnvironmentArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentMapOutput{})
}
