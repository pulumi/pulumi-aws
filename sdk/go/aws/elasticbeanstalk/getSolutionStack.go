// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticbeanstalk

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the name of a elastic beanstalk solution stack.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/elasticbeanstalk"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := elasticbeanstalk.GetSolutionStack(ctx, &elasticbeanstalk.GetSolutionStackArgs{
//				MostRecent: pulumi.BoolRef(true),
//				NameRegex:  fmt.Sprintf("^64bit Amazon Linux (.*) Multi-container Docker (.*)$"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetSolutionStack(ctx *pulumi.Context, args *GetSolutionStackArgs, opts ...pulumi.InvokeOption) (*GetSolutionStackResult, error) {
	var rv GetSolutionStackResult
	err := ctx.Invoke("aws:elasticbeanstalk/getSolutionStack:getSolutionStack", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSolutionStack.
type GetSolutionStackArgs struct {
	// If more than one result is returned, use the most
	// recent solution stack.
	MostRecent *bool `pulumi:"mostRecent"`
	// Regex string to apply to the solution stack list returned
	// by AWS. See [Elastic Beanstalk Supported Platforms][beanstalk-platforms] from
	// AWS documentation for reference solution stack names.
	NameRegex string `pulumi:"nameRegex"`
}

// A collection of values returned by getSolutionStack.
type GetSolutionStackResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	MostRecent *bool  `pulumi:"mostRecent"`
	// Name of the solution stack.
	Name      string `pulumi:"name"`
	NameRegex string `pulumi:"nameRegex"`
}

func GetSolutionStackOutput(ctx *pulumi.Context, args GetSolutionStackOutputArgs, opts ...pulumi.InvokeOption) GetSolutionStackResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSolutionStackResult, error) {
			args := v.(GetSolutionStackArgs)
			r, err := GetSolutionStack(ctx, &args, opts...)
			var s GetSolutionStackResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSolutionStackResultOutput)
}

// A collection of arguments for invoking getSolutionStack.
type GetSolutionStackOutputArgs struct {
	// If more than one result is returned, use the most
	// recent solution stack.
	MostRecent pulumi.BoolPtrInput `pulumi:"mostRecent"`
	// Regex string to apply to the solution stack list returned
	// by AWS. See [Elastic Beanstalk Supported Platforms][beanstalk-platforms] from
	// AWS documentation for reference solution stack names.
	NameRegex pulumi.StringInput `pulumi:"nameRegex"`
}

func (GetSolutionStackOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSolutionStackArgs)(nil)).Elem()
}

// A collection of values returned by getSolutionStack.
type GetSolutionStackResultOutput struct{ *pulumi.OutputState }

func (GetSolutionStackResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSolutionStackResult)(nil)).Elem()
}

func (o GetSolutionStackResultOutput) ToGetSolutionStackResultOutput() GetSolutionStackResultOutput {
	return o
}

func (o GetSolutionStackResultOutput) ToGetSolutionStackResultOutputWithContext(ctx context.Context) GetSolutionStackResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetSolutionStackResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSolutionStackResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSolutionStackResultOutput) MostRecent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSolutionStackResult) *bool { return v.MostRecent }).(pulumi.BoolPtrOutput)
}

// Name of the solution stack.
func (o GetSolutionStackResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSolutionStackResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSolutionStackResultOutput) NameRegex() pulumi.StringOutput {
	return o.ApplyT(func(v GetSolutionStackResult) string { return v.NameRegex }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSolutionStackResultOutput{})
}
