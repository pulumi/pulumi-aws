// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the id of a Resource in API Gateway.
// To fetch the Resource, you must provide the REST API id as well as the full path.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/apigateway"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		myRestApi, err := apigateway.LookupRestApi(ctx, &apigateway.LookupRestApiArgs{
// 			Name: "my-rest-api",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = apigateway.LookupResource(ctx, &apigateway.LookupResourceArgs{
// 			RestApiId: myRestApi.Id,
// 			Path:      "/endpoint/path",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupResource(ctx *pulumi.Context, args *LookupResourceArgs, opts ...pulumi.InvokeOption) (*LookupResourceResult, error) {
	var rv LookupResourceResult
	err := ctx.Invoke("aws:apigateway/getResource:getResource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResource.
type LookupResourceArgs struct {
	// The full path of the resource.  If no path is found, an error will be returned.
	Path string `pulumi:"path"`
	// The REST API id that owns the resource. If no REST API is found, an error will be returned.
	RestApiId string `pulumi:"restApiId"`
}

// A collection of values returned by getResource.
type LookupResourceResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Set to the ID of the parent Resource.
	ParentId string `pulumi:"parentId"`
	Path     string `pulumi:"path"`
	// Set to the path relative to the parent Resource.
	PathPart  string `pulumi:"pathPart"`
	RestApiId string `pulumi:"restApiId"`
}

func LookupResourceOutput(ctx *pulumi.Context, args LookupResourceOutputArgs, opts ...pulumi.InvokeOption) LookupResourceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupResourceResult, error) {
			args := v.(LookupResourceArgs)
			r, err := LookupResource(ctx, &args, opts...)
			return *r, err
		}).(LookupResourceResultOutput)
}

// A collection of arguments for invoking getResource.
type LookupResourceOutputArgs struct {
	// The full path of the resource.  If no path is found, an error will be returned.
	Path pulumi.StringInput `pulumi:"path"`
	// The REST API id that owns the resource. If no REST API is found, an error will be returned.
	RestApiId pulumi.StringInput `pulumi:"restApiId"`
}

func (LookupResourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourceArgs)(nil)).Elem()
}

// A collection of values returned by getResource.
type LookupResourceResultOutput struct{ *pulumi.OutputState }

func (LookupResourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourceResult)(nil)).Elem()
}

func (o LookupResourceResultOutput) ToLookupResourceResultOutput() LookupResourceResultOutput {
	return o
}

func (o LookupResourceResultOutput) ToLookupResourceResultOutputWithContext(ctx context.Context) LookupResourceResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupResourceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceResult) string { return v.Id }).(pulumi.StringOutput)
}

// Set to the ID of the parent Resource.
func (o LookupResourceResultOutput) ParentId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceResult) string { return v.ParentId }).(pulumi.StringOutput)
}

func (o LookupResourceResultOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceResult) string { return v.Path }).(pulumi.StringOutput)
}

// Set to the path relative to the parent Resource.
func (o LookupResourceResultOutput) PathPart() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceResult) string { return v.PathPart }).(pulumi.StringOutput)
}

func (o LookupResourceResultOutput) RestApiId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceResult) string { return v.RestApiId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupResourceResultOutput{})
}
