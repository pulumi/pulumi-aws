// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ## Import
//
// `aws_api_gateway_rest_api_policy` can be imported by using the REST API ID, e.g.
//
// ```sh
//  $ pulumi import aws:apigateway/restApiPolicy:RestApiPolicy example 12345abcde
// ```
type RestApiPolicy struct {
	pulumi.CustomResourceState

	Policy pulumi.StringOutput `pulumi:"policy"`
	// The ID of the REST API.
	RestApiId pulumi.StringOutput `pulumi:"restApiId"`
}

// NewRestApiPolicy registers a new resource with the given unique name, arguments, and options.
func NewRestApiPolicy(ctx *pulumi.Context,
	name string, args *RestApiPolicyArgs, opts ...pulumi.ResourceOption) (*RestApiPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Policy == nil {
		return nil, errors.New("invalid value for required argument 'Policy'")
	}
	if args.RestApiId == nil {
		return nil, errors.New("invalid value for required argument 'RestApiId'")
	}
	var resource RestApiPolicy
	err := ctx.RegisterResource("aws:apigateway/restApiPolicy:RestApiPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRestApiPolicy gets an existing RestApiPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRestApiPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RestApiPolicyState, opts ...pulumi.ResourceOption) (*RestApiPolicy, error) {
	var resource RestApiPolicy
	err := ctx.ReadResource("aws:apigateway/restApiPolicy:RestApiPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RestApiPolicy resources.
type restApiPolicyState struct {
	Policy *string `pulumi:"policy"`
	// The ID of the REST API.
	RestApiId *string `pulumi:"restApiId"`
}

type RestApiPolicyState struct {
	Policy pulumi.StringPtrInput
	// The ID of the REST API.
	RestApiId pulumi.StringPtrInput
}

func (RestApiPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*restApiPolicyState)(nil)).Elem()
}

type restApiPolicyArgs struct {
	Policy string `pulumi:"policy"`
	// The ID of the REST API.
	RestApiId string `pulumi:"restApiId"`
}

// The set of arguments for constructing a RestApiPolicy resource.
type RestApiPolicyArgs struct {
	Policy pulumi.StringInput
	// The ID of the REST API.
	RestApiId pulumi.StringInput
}

func (RestApiPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*restApiPolicyArgs)(nil)).Elem()
}

type RestApiPolicyInput interface {
	pulumi.Input

	ToRestApiPolicyOutput() RestApiPolicyOutput
	ToRestApiPolicyOutputWithContext(ctx context.Context) RestApiPolicyOutput
}

func (RestApiPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*RestApiPolicy)(nil)).Elem()
}

func (i RestApiPolicy) ToRestApiPolicyOutput() RestApiPolicyOutput {
	return i.ToRestApiPolicyOutputWithContext(context.Background())
}

func (i RestApiPolicy) ToRestApiPolicyOutputWithContext(ctx context.Context) RestApiPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestApiPolicyOutput)
}

type RestApiPolicyOutput struct {
	*pulumi.OutputState
}

func (RestApiPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RestApiPolicyOutput)(nil)).Elem()
}

func (o RestApiPolicyOutput) ToRestApiPolicyOutput() RestApiPolicyOutput {
	return o
}

func (o RestApiPolicyOutput) ToRestApiPolicyOutputWithContext(ctx context.Context) RestApiPolicyOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(RestApiPolicyOutput{})
}
