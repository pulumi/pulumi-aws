// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Manages an API Gateway Request Validator.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v3/go/aws/apigateway"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := apigateway.NewRequestValidator(ctx, "example", &apigateway.RequestValidatorArgs{
// 			RestApi:                   pulumi.Any(aws_api_gateway_rest_api.Example.Id),
// 			ValidateRequestBody:       pulumi.Bool(true),
// 			ValidateRequestParameters: pulumi.Bool(true),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// `aws_api_gateway_request_validator` can be imported using `REST-API-ID/REQUEST-VALIDATOR-ID`, e.g.
//
// ```sh
//  $ pulumi import aws:apigateway/requestValidator:RequestValidator example 12345abcde/67890fghij
// ```
type RequestValidator struct {
	pulumi.CustomResourceState

	// The name of the request validator
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the associated Rest API
	RestApi pulumi.StringOutput `pulumi:"restApi"`
	// Boolean whether to validate request body. Defaults to `false`.
	ValidateRequestBody pulumi.BoolPtrOutput `pulumi:"validateRequestBody"`
	// Boolean whether to validate request parameters. Defaults to `false`.
	ValidateRequestParameters pulumi.BoolPtrOutput `pulumi:"validateRequestParameters"`
}

// NewRequestValidator registers a new resource with the given unique name, arguments, and options.
func NewRequestValidator(ctx *pulumi.Context,
	name string, args *RequestValidatorArgs, opts ...pulumi.ResourceOption) (*RequestValidator, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RestApi == nil {
		return nil, errors.New("invalid value for required argument 'RestApi'")
	}
	var resource RequestValidator
	err := ctx.RegisterResource("aws:apigateway/requestValidator:RequestValidator", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRequestValidator gets an existing RequestValidator resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRequestValidator(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RequestValidatorState, opts ...pulumi.ResourceOption) (*RequestValidator, error) {
	var resource RequestValidator
	err := ctx.ReadResource("aws:apigateway/requestValidator:RequestValidator", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RequestValidator resources.
type requestValidatorState struct {
	// The name of the request validator
	Name *string `pulumi:"name"`
	// The ID of the associated Rest API
	RestApi *string `pulumi:"restApi"`
	// Boolean whether to validate request body. Defaults to `false`.
	ValidateRequestBody *bool `pulumi:"validateRequestBody"`
	// Boolean whether to validate request parameters. Defaults to `false`.
	ValidateRequestParameters *bool `pulumi:"validateRequestParameters"`
}

type RequestValidatorState struct {
	// The name of the request validator
	Name pulumi.StringPtrInput
	// The ID of the associated Rest API
	RestApi pulumi.StringPtrInput
	// Boolean whether to validate request body. Defaults to `false`.
	ValidateRequestBody pulumi.BoolPtrInput
	// Boolean whether to validate request parameters. Defaults to `false`.
	ValidateRequestParameters pulumi.BoolPtrInput
}

func (RequestValidatorState) ElementType() reflect.Type {
	return reflect.TypeOf((*requestValidatorState)(nil)).Elem()
}

type requestValidatorArgs struct {
	// The name of the request validator
	Name *string `pulumi:"name"`
	// The ID of the associated Rest API
	RestApi interface{} `pulumi:"restApi"`
	// Boolean whether to validate request body. Defaults to `false`.
	ValidateRequestBody *bool `pulumi:"validateRequestBody"`
	// Boolean whether to validate request parameters. Defaults to `false`.
	ValidateRequestParameters *bool `pulumi:"validateRequestParameters"`
}

// The set of arguments for constructing a RequestValidator resource.
type RequestValidatorArgs struct {
	// The name of the request validator
	Name pulumi.StringPtrInput
	// The ID of the associated Rest API
	RestApi pulumi.Input
	// Boolean whether to validate request body. Defaults to `false`.
	ValidateRequestBody pulumi.BoolPtrInput
	// Boolean whether to validate request parameters. Defaults to `false`.
	ValidateRequestParameters pulumi.BoolPtrInput
}

func (RequestValidatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*requestValidatorArgs)(nil)).Elem()
}

type RequestValidatorInput interface {
	pulumi.Input

	ToRequestValidatorOutput() RequestValidatorOutput
	ToRequestValidatorOutputWithContext(ctx context.Context) RequestValidatorOutput
}

func (RequestValidator) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestValidator)(nil)).Elem()
}

func (i RequestValidator) ToRequestValidatorOutput() RequestValidatorOutput {
	return i.ToRequestValidatorOutputWithContext(context.Background())
}

func (i RequestValidator) ToRequestValidatorOutputWithContext(ctx context.Context) RequestValidatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RequestValidatorOutput)
}

type RequestValidatorOutput struct {
	*pulumi.OutputState
}

func (RequestValidatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RequestValidatorOutput)(nil)).Elem()
}

func (o RequestValidatorOutput) ToRequestValidatorOutput() RequestValidatorOutput {
	return o
}

func (o RequestValidatorOutput) ToRequestValidatorOutputWithContext(ctx context.Context) RequestValidatorOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(RequestValidatorOutput{})
}
