// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides a resource to manage an API Gateway Documentation Version.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v3/go/aws/apigateway"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		exampleRestApi, err := apigateway.NewRestApi(ctx, "exampleRestApi", nil)
// 		if err != nil {
// 			return err
// 		}
// 		exampleDocumentationPart, err := apigateway.NewDocumentationPart(ctx, "exampleDocumentationPart", &apigateway.DocumentationPartArgs{
// 			Location: &apigateway.DocumentationPartLocationArgs{
// 				Type: pulumi.String("API"),
// 			},
// 			Properties: pulumi.String("{\"description\":\"Example\"}"),
// 			RestApiId:  exampleRestApi.ID(),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = apigateway.NewDocumentationVersion(ctx, "exampleDocumentationVersion", &apigateway.DocumentationVersionArgs{
// 			Version:     pulumi.String("example_version"),
// 			RestApiId:   exampleRestApi.ID(),
// 			Description: pulumi.String("Example description"),
// 		}, pulumi.DependsOn([]pulumi.Resource{
// 			exampleDocumentationPart,
// 		}))
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// API Gateway documentation versions can be imported using `REST-API-ID/VERSION`, e.g.
//
// ```sh
//  $ pulumi import aws:apigateway/documentationVersion:DocumentationVersion example 5i4e1ko720/example-version
// ```
type DocumentationVersion struct {
	pulumi.CustomResourceState

	// The description of the API documentation version.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The ID of the associated Rest API
	RestApiId pulumi.StringOutput `pulumi:"restApiId"`
	// The version identifier of the API documentation snapshot.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewDocumentationVersion registers a new resource with the given unique name, arguments, and options.
func NewDocumentationVersion(ctx *pulumi.Context,
	name string, args *DocumentationVersionArgs, opts ...pulumi.ResourceOption) (*DocumentationVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RestApiId == nil {
		return nil, errors.New("invalid value for required argument 'RestApiId'")
	}
	if args.Version == nil {
		return nil, errors.New("invalid value for required argument 'Version'")
	}
	var resource DocumentationVersion
	err := ctx.RegisterResource("aws:apigateway/documentationVersion:DocumentationVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDocumentationVersion gets an existing DocumentationVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDocumentationVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DocumentationVersionState, opts ...pulumi.ResourceOption) (*DocumentationVersion, error) {
	var resource DocumentationVersion
	err := ctx.ReadResource("aws:apigateway/documentationVersion:DocumentationVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DocumentationVersion resources.
type documentationVersionState struct {
	// The description of the API documentation version.
	Description *string `pulumi:"description"`
	// The ID of the associated Rest API
	RestApiId *string `pulumi:"restApiId"`
	// The version identifier of the API documentation snapshot.
	Version *string `pulumi:"version"`
}

type DocumentationVersionState struct {
	// The description of the API documentation version.
	Description pulumi.StringPtrInput
	// The ID of the associated Rest API
	RestApiId pulumi.StringPtrInput
	// The version identifier of the API documentation snapshot.
	Version pulumi.StringPtrInput
}

func (DocumentationVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*documentationVersionState)(nil)).Elem()
}

type documentationVersionArgs struct {
	// The description of the API documentation version.
	Description *string `pulumi:"description"`
	// The ID of the associated Rest API
	RestApiId string `pulumi:"restApiId"`
	// The version identifier of the API documentation snapshot.
	Version string `pulumi:"version"`
}

// The set of arguments for constructing a DocumentationVersion resource.
type DocumentationVersionArgs struct {
	// The description of the API documentation version.
	Description pulumi.StringPtrInput
	// The ID of the associated Rest API
	RestApiId pulumi.StringInput
	// The version identifier of the API documentation snapshot.
	Version pulumi.StringInput
}

func (DocumentationVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*documentationVersionArgs)(nil)).Elem()
}

type DocumentationVersionInput interface {
	pulumi.Input

	ToDocumentationVersionOutput() DocumentationVersionOutput
	ToDocumentationVersionOutputWithContext(ctx context.Context) DocumentationVersionOutput
}

func (DocumentationVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentationVersion)(nil)).Elem()
}

func (i DocumentationVersion) ToDocumentationVersionOutput() DocumentationVersionOutput {
	return i.ToDocumentationVersionOutputWithContext(context.Background())
}

func (i DocumentationVersion) ToDocumentationVersionOutputWithContext(ctx context.Context) DocumentationVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DocumentationVersionOutput)
}

type DocumentationVersionOutput struct {
	*pulumi.OutputState
}

func (DocumentationVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DocumentationVersionOutput)(nil)).Elem()
}

func (o DocumentationVersionOutput) ToDocumentationVersionOutput() DocumentationVersionOutput {
	return o
}

func (o DocumentationVersionOutput) ToDocumentationVersionOutputWithContext(ctx context.Context) DocumentationVersionOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(DocumentationVersionOutput{})
}
