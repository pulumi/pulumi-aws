// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an API Gateway Gateway Response for a REST API Gateway.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/apigateway"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			main, err := apigateway.NewRestApi(ctx, "main", nil)
//			if err != nil {
//				return err
//			}
//			_, err = apigateway.NewResponse(ctx, "test", &apigateway.ResponseArgs{
//				RestApiId:    main.ID(),
//				StatusCode:   pulumi.String("401"),
//				ResponseType: pulumi.String("UNAUTHORIZED"),
//				ResponseTemplates: pulumi.StringMap{
//					"application/json": pulumi.String("{\"message\":$context.error.messageString}"),
//				},
//				ResponseParameters: pulumi.StringMap{
//					"gatewayresponse.header.Authorization": pulumi.String("'Basic'"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// `aws_api_gateway_gateway_response` can be imported using `REST-API-ID/RESPONSE-TYPE`, e.g.,
//
// ```sh
//
//	$ pulumi import aws:apigateway/response:Response example 12345abcde/UNAUTHORIZED
//
// ```
type Response struct {
	pulumi.CustomResourceState

	// Map of parameters (paths, query strings and headers) of the Gateway Response.
	ResponseParameters pulumi.StringMapOutput `pulumi:"responseParameters"`
	// Map of templates used to transform the response body.
	ResponseTemplates pulumi.StringMapOutput `pulumi:"responseTemplates"`
	// Response type of the associated GatewayResponse.
	ResponseType pulumi.StringOutput `pulumi:"responseType"`
	// String identifier of the associated REST API.
	RestApiId pulumi.StringOutput `pulumi:"restApiId"`
	// HTTP status code of the Gateway Response.
	StatusCode pulumi.StringPtrOutput `pulumi:"statusCode"`
}

// NewResponse registers a new resource with the given unique name, arguments, and options.
func NewResponse(ctx *pulumi.Context,
	name string, args *ResponseArgs, opts ...pulumi.ResourceOption) (*Response, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResponseType == nil {
		return nil, errors.New("invalid value for required argument 'ResponseType'")
	}
	if args.RestApiId == nil {
		return nil, errors.New("invalid value for required argument 'RestApiId'")
	}
	var resource Response
	err := ctx.RegisterResource("aws:apigateway/response:Response", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResponse gets an existing Response resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResponse(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResponseState, opts ...pulumi.ResourceOption) (*Response, error) {
	var resource Response
	err := ctx.ReadResource("aws:apigateway/response:Response", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Response resources.
type responseState struct {
	// Map of parameters (paths, query strings and headers) of the Gateway Response.
	ResponseParameters map[string]string `pulumi:"responseParameters"`
	// Map of templates used to transform the response body.
	ResponseTemplates map[string]string `pulumi:"responseTemplates"`
	// Response type of the associated GatewayResponse.
	ResponseType *string `pulumi:"responseType"`
	// String identifier of the associated REST API.
	RestApiId *string `pulumi:"restApiId"`
	// HTTP status code of the Gateway Response.
	StatusCode *string `pulumi:"statusCode"`
}

type ResponseState struct {
	// Map of parameters (paths, query strings and headers) of the Gateway Response.
	ResponseParameters pulumi.StringMapInput
	// Map of templates used to transform the response body.
	ResponseTemplates pulumi.StringMapInput
	// Response type of the associated GatewayResponse.
	ResponseType pulumi.StringPtrInput
	// String identifier of the associated REST API.
	RestApiId pulumi.StringPtrInput
	// HTTP status code of the Gateway Response.
	StatusCode pulumi.StringPtrInput
}

func (ResponseState) ElementType() reflect.Type {
	return reflect.TypeOf((*responseState)(nil)).Elem()
}

type responseArgs struct {
	// Map of parameters (paths, query strings and headers) of the Gateway Response.
	ResponseParameters map[string]string `pulumi:"responseParameters"`
	// Map of templates used to transform the response body.
	ResponseTemplates map[string]string `pulumi:"responseTemplates"`
	// Response type of the associated GatewayResponse.
	ResponseType string `pulumi:"responseType"`
	// String identifier of the associated REST API.
	RestApiId string `pulumi:"restApiId"`
	// HTTP status code of the Gateway Response.
	StatusCode *string `pulumi:"statusCode"`
}

// The set of arguments for constructing a Response resource.
type ResponseArgs struct {
	// Map of parameters (paths, query strings and headers) of the Gateway Response.
	ResponseParameters pulumi.StringMapInput
	// Map of templates used to transform the response body.
	ResponseTemplates pulumi.StringMapInput
	// Response type of the associated GatewayResponse.
	ResponseType pulumi.StringInput
	// String identifier of the associated REST API.
	RestApiId pulumi.StringInput
	// HTTP status code of the Gateway Response.
	StatusCode pulumi.StringPtrInput
}

func (ResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*responseArgs)(nil)).Elem()
}

type ResponseInput interface {
	pulumi.Input

	ToResponseOutput() ResponseOutput
	ToResponseOutputWithContext(ctx context.Context) ResponseOutput
}

func (*Response) ElementType() reflect.Type {
	return reflect.TypeOf((**Response)(nil)).Elem()
}

func (i *Response) ToResponseOutput() ResponseOutput {
	return i.ToResponseOutputWithContext(context.Background())
}

func (i *Response) ToResponseOutputWithContext(ctx context.Context) ResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseOutput)
}

// ResponseArrayInput is an input type that accepts ResponseArray and ResponseArrayOutput values.
// You can construct a concrete instance of `ResponseArrayInput` via:
//
//	ResponseArray{ ResponseArgs{...} }
type ResponseArrayInput interface {
	pulumi.Input

	ToResponseArrayOutput() ResponseArrayOutput
	ToResponseArrayOutputWithContext(context.Context) ResponseArrayOutput
}

type ResponseArray []ResponseInput

func (ResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Response)(nil)).Elem()
}

func (i ResponseArray) ToResponseArrayOutput() ResponseArrayOutput {
	return i.ToResponseArrayOutputWithContext(context.Background())
}

func (i ResponseArray) ToResponseArrayOutputWithContext(ctx context.Context) ResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseArrayOutput)
}

// ResponseMapInput is an input type that accepts ResponseMap and ResponseMapOutput values.
// You can construct a concrete instance of `ResponseMapInput` via:
//
//	ResponseMap{ "key": ResponseArgs{...} }
type ResponseMapInput interface {
	pulumi.Input

	ToResponseMapOutput() ResponseMapOutput
	ToResponseMapOutputWithContext(context.Context) ResponseMapOutput
}

type ResponseMap map[string]ResponseInput

func (ResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Response)(nil)).Elem()
}

func (i ResponseMap) ToResponseMapOutput() ResponseMapOutput {
	return i.ToResponseMapOutputWithContext(context.Background())
}

func (i ResponseMap) ToResponseMapOutputWithContext(ctx context.Context) ResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResponseMapOutput)
}

type ResponseOutput struct{ *pulumi.OutputState }

func (ResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Response)(nil)).Elem()
}

func (o ResponseOutput) ToResponseOutput() ResponseOutput {
	return o
}

func (o ResponseOutput) ToResponseOutputWithContext(ctx context.Context) ResponseOutput {
	return o
}

// Map of parameters (paths, query strings and headers) of the Gateway Response.
func (o ResponseOutput) ResponseParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Response) pulumi.StringMapOutput { return v.ResponseParameters }).(pulumi.StringMapOutput)
}

// Map of templates used to transform the response body.
func (o ResponseOutput) ResponseTemplates() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Response) pulumi.StringMapOutput { return v.ResponseTemplates }).(pulumi.StringMapOutput)
}

// Response type of the associated GatewayResponse.
func (o ResponseOutput) ResponseType() pulumi.StringOutput {
	return o.ApplyT(func(v *Response) pulumi.StringOutput { return v.ResponseType }).(pulumi.StringOutput)
}

// String identifier of the associated REST API.
func (o ResponseOutput) RestApiId() pulumi.StringOutput {
	return o.ApplyT(func(v *Response) pulumi.StringOutput { return v.RestApiId }).(pulumi.StringOutput)
}

// HTTP status code of the Gateway Response.
func (o ResponseOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Response) pulumi.StringPtrOutput { return v.StatusCode }).(pulumi.StringPtrOutput)
}

type ResponseArrayOutput struct{ *pulumi.OutputState }

func (ResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Response)(nil)).Elem()
}

func (o ResponseArrayOutput) ToResponseArrayOutput() ResponseArrayOutput {
	return o
}

func (o ResponseArrayOutput) ToResponseArrayOutputWithContext(ctx context.Context) ResponseArrayOutput {
	return o
}

func (o ResponseArrayOutput) Index(i pulumi.IntInput) ResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Response {
		return vs[0].([]*Response)[vs[1].(int)]
	}).(ResponseOutput)
}

type ResponseMapOutput struct{ *pulumi.OutputState }

func (ResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Response)(nil)).Elem()
}

func (o ResponseMapOutput) ToResponseMapOutput() ResponseMapOutput {
	return o
}

func (o ResponseMapOutput) ToResponseMapOutputWithContext(ctx context.Context) ResponseMapOutput {
	return o
}

func (o ResponseMapOutput) MapIndex(k pulumi.StringInput) ResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Response {
		return vs[0].(map[string]*Response)[vs[1].(string)]
	}).(ResponseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseInput)(nil)).Elem(), &Response{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseArrayInput)(nil)).Elem(), ResponseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResponseMapInput)(nil)).Elem(), ResponseMap{})
	pulumi.RegisterOutputType(ResponseOutput{})
	pulumi.RegisterOutputType(ResponseArrayOutput{})
	pulumi.RegisterOutputType(ResponseMapOutput{})
}
