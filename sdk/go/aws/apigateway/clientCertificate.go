// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an API Gateway Client Certificate.
type ClientCertificate struct {
	s *pulumi.ResourceState
}

// NewClientCertificate registers a new resource with the given unique name, arguments, and options.
func NewClientCertificate(ctx *pulumi.Context,
	name string, args *ClientCertificateArgs, opts ...pulumi.ResourceOpt) (*ClientCertificate, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["description"] = nil
	} else {
		inputs["description"] = args.Description
	}
	inputs["createdDate"] = nil
	inputs["expirationDate"] = nil
	inputs["pemEncodedCertificate"] = nil
	s, err := ctx.RegisterResource("aws:apigateway/clientCertificate:ClientCertificate", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ClientCertificate{s: s}, nil
}

// GetClientCertificate gets an existing ClientCertificate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClientCertificate(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ClientCertificateState, opts ...pulumi.ResourceOpt) (*ClientCertificate, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["createdDate"] = state.CreatedDate
		inputs["description"] = state.Description
		inputs["expirationDate"] = state.ExpirationDate
		inputs["pemEncodedCertificate"] = state.PemEncodedCertificate
	}
	s, err := ctx.ReadResource("aws:apigateway/clientCertificate:ClientCertificate", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ClientCertificate{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ClientCertificate) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ClientCertificate) ID() *pulumi.IDOutput {
	return r.s.ID
}

// The date when the client certificate was created.
func (r *ClientCertificate) CreatedDate() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["createdDate"])
}

// The description of the client certificate.
func (r *ClientCertificate) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

// The date when the client certificate will expire.
func (r *ClientCertificate) ExpirationDate() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["expirationDate"])
}

// The PEM-encoded public key of the client certificate.
func (r *ClientCertificate) PemEncodedCertificate() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["pemEncodedCertificate"])
}

// Input properties used for looking up and filtering ClientCertificate resources.
type ClientCertificateState struct {
	// The date when the client certificate was created.
	CreatedDate interface{}
	// The description of the client certificate.
	Description interface{}
	// The date when the client certificate will expire.
	ExpirationDate interface{}
	// The PEM-encoded public key of the client certificate.
	PemEncodedCertificate interface{}
}

// The set of arguments for constructing a ClientCertificate resource.
type ClientCertificateArgs struct {
	// The description of the client certificate.
	Description interface{}
}
