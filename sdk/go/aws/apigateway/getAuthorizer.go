// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides details about a specific API Gateway Authorizer.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigateway"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apigateway.LookupAuthorizer(ctx, &apigateway.LookupAuthorizerArgs{
//				RestApiId:    aws_api_gateway_rest_api.Example.Id,
//				AuthorizerId: data.Aws_api_gateway_authorizers.Example.Ids[0],
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAuthorizer(ctx *pulumi.Context, args *LookupAuthorizerArgs, opts ...pulumi.InvokeOption) (*LookupAuthorizerResult, error) {
	var rv LookupAuthorizerResult
	err := ctx.Invoke("aws:apigateway/getAuthorizer:getAuthorizer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAuthorizer.
type LookupAuthorizerArgs struct {
	// Authorizer identifier.
	AuthorizerId string `pulumi:"authorizerId"`
	// ID of the associated REST API.
	RestApiId string `pulumi:"restApiId"`
}

// A collection of values returned by getAuthorizer.
type LookupAuthorizerResult struct {
	// ARN of the API Gateway Authorizer.
	Arn string `pulumi:"arn"`
	// Credentials required for the authorizer.
	AuthorizerCredentials string `pulumi:"authorizerCredentials"`
	AuthorizerId          string `pulumi:"authorizerId"`
	// TTL of cached authorizer results in seconds.
	AuthorizerResultTtlInSeconds int `pulumi:"authorizerResultTtlInSeconds"`
	// Authorizer's Uniform Resource Identifier (URI).
	AuthorizerUri string `pulumi:"authorizerUri"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Source of the identity in an incoming request.
	IdentitySource string `pulumi:"identitySource"`
	// Validation expression for the incoming identity.
	IdentityValidationExpression string `pulumi:"identityValidationExpression"`
	// Name of the authorizer.
	Name string `pulumi:"name"`
	// List of the Amazon Cognito user pool ARNs.
	ProviderArns []string `pulumi:"providerArns"`
	RestApiId    string   `pulumi:"restApiId"`
	// Type of the authorizer.
	Type string `pulumi:"type"`
}

func LookupAuthorizerOutput(ctx *pulumi.Context, args LookupAuthorizerOutputArgs, opts ...pulumi.InvokeOption) LookupAuthorizerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAuthorizerResult, error) {
			args := v.(LookupAuthorizerArgs)
			r, err := LookupAuthorizer(ctx, &args, opts...)
			var s LookupAuthorizerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAuthorizerResultOutput)
}

// A collection of arguments for invoking getAuthorizer.
type LookupAuthorizerOutputArgs struct {
	// Authorizer identifier.
	AuthorizerId pulumi.StringInput `pulumi:"authorizerId"`
	// ID of the associated REST API.
	RestApiId pulumi.StringInput `pulumi:"restApiId"`
}

func (LookupAuthorizerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAuthorizerArgs)(nil)).Elem()
}

// A collection of values returned by getAuthorizer.
type LookupAuthorizerResultOutput struct{ *pulumi.OutputState }

func (LookupAuthorizerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAuthorizerResult)(nil)).Elem()
}

func (o LookupAuthorizerResultOutput) ToLookupAuthorizerResultOutput() LookupAuthorizerResultOutput {
	return o
}

func (o LookupAuthorizerResultOutput) ToLookupAuthorizerResultOutputWithContext(ctx context.Context) LookupAuthorizerResultOutput {
	return o
}

// ARN of the API Gateway Authorizer.
func (o LookupAuthorizerResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthorizerResult) string { return v.Arn }).(pulumi.StringOutput)
}

// Credentials required for the authorizer.
func (o LookupAuthorizerResultOutput) AuthorizerCredentials() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthorizerResult) string { return v.AuthorizerCredentials }).(pulumi.StringOutput)
}

func (o LookupAuthorizerResultOutput) AuthorizerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthorizerResult) string { return v.AuthorizerId }).(pulumi.StringOutput)
}

// TTL of cached authorizer results in seconds.
func (o LookupAuthorizerResultOutput) AuthorizerResultTtlInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v LookupAuthorizerResult) int { return v.AuthorizerResultTtlInSeconds }).(pulumi.IntOutput)
}

// Authorizer's Uniform Resource Identifier (URI).
func (o LookupAuthorizerResultOutput) AuthorizerUri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthorizerResult) string { return v.AuthorizerUri }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAuthorizerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthorizerResult) string { return v.Id }).(pulumi.StringOutput)
}

// Source of the identity in an incoming request.
func (o LookupAuthorizerResultOutput) IdentitySource() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthorizerResult) string { return v.IdentitySource }).(pulumi.StringOutput)
}

// Validation expression for the incoming identity.
func (o LookupAuthorizerResultOutput) IdentityValidationExpression() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthorizerResult) string { return v.IdentityValidationExpression }).(pulumi.StringOutput)
}

// Name of the authorizer.
func (o LookupAuthorizerResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthorizerResult) string { return v.Name }).(pulumi.StringOutput)
}

// List of the Amazon Cognito user pool ARNs.
func (o LookupAuthorizerResultOutput) ProviderArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupAuthorizerResult) []string { return v.ProviderArns }).(pulumi.StringArrayOutput)
}

func (o LookupAuthorizerResultOutput) RestApiId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthorizerResult) string { return v.RestApiId }).(pulumi.StringOutput)
}

// Type of the authorizer.
func (o LookupAuthorizerResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAuthorizerResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAuthorizerResultOutput{})
}
