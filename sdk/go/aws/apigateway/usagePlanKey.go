// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an API Gateway Usage Plan Key.
type UsagePlanKey struct {
	s *pulumi.ResourceState
}

// NewUsagePlanKey registers a new resource with the given unique name, arguments, and options.
func NewUsagePlanKey(ctx *pulumi.Context,
	name string, args *UsagePlanKeyArgs, opts ...pulumi.ResourceOpt) (*UsagePlanKey, error) {
	if args == nil || args.KeyId == nil {
		return nil, errors.New("missing required argument 'KeyId'")
	}
	if args == nil || args.KeyType == nil {
		return nil, errors.New("missing required argument 'KeyType'")
	}
	if args == nil || args.UsagePlanId == nil {
		return nil, errors.New("missing required argument 'UsagePlanId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["keyId"] = nil
		inputs["keyType"] = nil
		inputs["usagePlanId"] = nil
	} else {
		inputs["keyId"] = args.KeyId
		inputs["keyType"] = args.KeyType
		inputs["usagePlanId"] = args.UsagePlanId
	}
	inputs["name"] = nil
	inputs["value"] = nil
	s, err := ctx.RegisterResource("aws:apigateway/usagePlanKey:UsagePlanKey", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &UsagePlanKey{s: s}, nil
}

// GetUsagePlanKey gets an existing UsagePlanKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUsagePlanKey(ctx *pulumi.Context,
	name string, id pulumi.ID, state *UsagePlanKeyState, opts ...pulumi.ResourceOpt) (*UsagePlanKey, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["keyId"] = state.KeyId
		inputs["keyType"] = state.KeyType
		inputs["name"] = state.Name
		inputs["usagePlanId"] = state.UsagePlanId
		inputs["value"] = state.Value
	}
	s, err := ctx.ReadResource("aws:apigateway/usagePlanKey:UsagePlanKey", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &UsagePlanKey{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *UsagePlanKey) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *UsagePlanKey) ID() *pulumi.IDOutput {
	return r.s.ID
}

// The identifier of the API key resource.
func (r *UsagePlanKey) KeyId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["keyId"])
}

// The type of the API key resource. Currently, the valid key type is API_KEY.
func (r *UsagePlanKey) KeyType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["keyType"])
}

// The name of a usage plan key.
func (r *UsagePlanKey) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The Id of the usage plan resource representing to associate the key to.
func (r *UsagePlanKey) UsagePlanId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["usagePlanId"])
}

// The value of a usage plan key.
func (r *UsagePlanKey) Value() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["value"])
}

// Input properties used for looking up and filtering UsagePlanKey resources.
type UsagePlanKeyState struct {
	// The identifier of the API key resource.
	KeyId interface{}
	// The type of the API key resource. Currently, the valid key type is API_KEY.
	KeyType interface{}
	// The name of a usage plan key.
	Name interface{}
	// The Id of the usage plan resource representing to associate the key to.
	UsagePlanId interface{}
	// The value of a usage plan key.
	Value interface{}
}

// The set of arguments for constructing a UsagePlanKey resource.
type UsagePlanKeyArgs struct {
	// The identifier of the API key resource.
	KeyId interface{}
	// The type of the API key resource. Currently, the valid key type is API_KEY.
	KeyType interface{}
	// The Id of the usage plan resource representing to associate the key to.
	UsagePlanId interface{}
}
