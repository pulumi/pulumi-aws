// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DomainName struct {
	pulumi.CustomResourceState

	Arn                                 pulumi.StringOutput                        `pulumi:"arn"`
	CertificateArn                      pulumi.StringPtrOutput                     `pulumi:"certificateArn"`
	CertificateBody                     pulumi.StringPtrOutput                     `pulumi:"certificateBody"`
	CertificateChain                    pulumi.StringPtrOutput                     `pulumi:"certificateChain"`
	CertificateName                     pulumi.StringPtrOutput                     `pulumi:"certificateName"`
	CertificatePrivateKey               pulumi.StringPtrOutput                     `pulumi:"certificatePrivateKey"`
	CertificateUploadDate               pulumi.StringOutput                        `pulumi:"certificateUploadDate"`
	CloudfrontDomainName                pulumi.StringOutput                        `pulumi:"cloudfrontDomainName"`
	CloudfrontZoneId                    pulumi.StringOutput                        `pulumi:"cloudfrontZoneId"`
	DomainName                          pulumi.StringOutput                        `pulumi:"domainName"`
	EndpointConfiguration               DomainNameEndpointConfigurationOutput      `pulumi:"endpointConfiguration"`
	MutualTlsAuthentication             DomainNameMutualTlsAuthenticationPtrOutput `pulumi:"mutualTlsAuthentication"`
	OwnershipVerificationCertificateArn pulumi.StringOutput                        `pulumi:"ownershipVerificationCertificateArn"`
	RegionalCertificateArn              pulumi.StringPtrOutput                     `pulumi:"regionalCertificateArn"`
	RegionalCertificateName             pulumi.StringPtrOutput                     `pulumi:"regionalCertificateName"`
	RegionalDomainName                  pulumi.StringOutput                        `pulumi:"regionalDomainName"`
	RegionalZoneId                      pulumi.StringOutput                        `pulumi:"regionalZoneId"`
	SecurityPolicy                      pulumi.StringOutput                        `pulumi:"securityPolicy"`
	Tags                                pulumi.StringMapOutput                     `pulumi:"tags"`
	TagsAll                             pulumi.StringMapOutput                     `pulumi:"tagsAll"`
}

// NewDomainName registers a new resource with the given unique name, arguments, and options.
func NewDomainName(ctx *pulumi.Context,
	name string, args *DomainNameArgs, opts ...pulumi.ResourceOption) (*DomainName, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainName == nil {
		return nil, errors.New("invalid value for required argument 'DomainName'")
	}
	if args.CertificatePrivateKey != nil {
		args.CertificatePrivateKey = pulumi.ToSecret(args.CertificatePrivateKey).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"certificatePrivateKey",
	})
	opts = append(opts, secrets)
	var resource DomainName
	err := ctx.RegisterResource("aws:apigateway/domainName:DomainName", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainName gets an existing DomainName resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainName(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainNameState, opts ...pulumi.ResourceOption) (*DomainName, error) {
	var resource DomainName
	err := ctx.ReadResource("aws:apigateway/domainName:DomainName", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainName resources.
type domainNameState struct {
	Arn                                 *string                            `pulumi:"arn"`
	CertificateArn                      *string                            `pulumi:"certificateArn"`
	CertificateBody                     *string                            `pulumi:"certificateBody"`
	CertificateChain                    *string                            `pulumi:"certificateChain"`
	CertificateName                     *string                            `pulumi:"certificateName"`
	CertificatePrivateKey               *string                            `pulumi:"certificatePrivateKey"`
	CertificateUploadDate               *string                            `pulumi:"certificateUploadDate"`
	CloudfrontDomainName                *string                            `pulumi:"cloudfrontDomainName"`
	CloudfrontZoneId                    *string                            `pulumi:"cloudfrontZoneId"`
	DomainName                          *string                            `pulumi:"domainName"`
	EndpointConfiguration               *DomainNameEndpointConfiguration   `pulumi:"endpointConfiguration"`
	MutualTlsAuthentication             *DomainNameMutualTlsAuthentication `pulumi:"mutualTlsAuthentication"`
	OwnershipVerificationCertificateArn *string                            `pulumi:"ownershipVerificationCertificateArn"`
	RegionalCertificateArn              *string                            `pulumi:"regionalCertificateArn"`
	RegionalCertificateName             *string                            `pulumi:"regionalCertificateName"`
	RegionalDomainName                  *string                            `pulumi:"regionalDomainName"`
	RegionalZoneId                      *string                            `pulumi:"regionalZoneId"`
	SecurityPolicy                      *string                            `pulumi:"securityPolicy"`
	Tags                                map[string]string                  `pulumi:"tags"`
	TagsAll                             map[string]string                  `pulumi:"tagsAll"`
}

type DomainNameState struct {
	Arn                                 pulumi.StringPtrInput
	CertificateArn                      pulumi.StringPtrInput
	CertificateBody                     pulumi.StringPtrInput
	CertificateChain                    pulumi.StringPtrInput
	CertificateName                     pulumi.StringPtrInput
	CertificatePrivateKey               pulumi.StringPtrInput
	CertificateUploadDate               pulumi.StringPtrInput
	CloudfrontDomainName                pulumi.StringPtrInput
	CloudfrontZoneId                    pulumi.StringPtrInput
	DomainName                          pulumi.StringPtrInput
	EndpointConfiguration               DomainNameEndpointConfigurationPtrInput
	MutualTlsAuthentication             DomainNameMutualTlsAuthenticationPtrInput
	OwnershipVerificationCertificateArn pulumi.StringPtrInput
	RegionalCertificateArn              pulumi.StringPtrInput
	RegionalCertificateName             pulumi.StringPtrInput
	RegionalDomainName                  pulumi.StringPtrInput
	RegionalZoneId                      pulumi.StringPtrInput
	SecurityPolicy                      pulumi.StringPtrInput
	Tags                                pulumi.StringMapInput
	TagsAll                             pulumi.StringMapInput
}

func (DomainNameState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainNameState)(nil)).Elem()
}

type domainNameArgs struct {
	CertificateArn                      *string                            `pulumi:"certificateArn"`
	CertificateBody                     *string                            `pulumi:"certificateBody"`
	CertificateChain                    *string                            `pulumi:"certificateChain"`
	CertificateName                     *string                            `pulumi:"certificateName"`
	CertificatePrivateKey               *string                            `pulumi:"certificatePrivateKey"`
	DomainName                          string                             `pulumi:"domainName"`
	EndpointConfiguration               *DomainNameEndpointConfiguration   `pulumi:"endpointConfiguration"`
	MutualTlsAuthentication             *DomainNameMutualTlsAuthentication `pulumi:"mutualTlsAuthentication"`
	OwnershipVerificationCertificateArn *string                            `pulumi:"ownershipVerificationCertificateArn"`
	RegionalCertificateArn              *string                            `pulumi:"regionalCertificateArn"`
	RegionalCertificateName             *string                            `pulumi:"regionalCertificateName"`
	SecurityPolicy                      *string                            `pulumi:"securityPolicy"`
	Tags                                map[string]string                  `pulumi:"tags"`
}

// The set of arguments for constructing a DomainName resource.
type DomainNameArgs struct {
	CertificateArn                      pulumi.StringPtrInput
	CertificateBody                     pulumi.StringPtrInput
	CertificateChain                    pulumi.StringPtrInput
	CertificateName                     pulumi.StringPtrInput
	CertificatePrivateKey               pulumi.StringPtrInput
	DomainName                          pulumi.StringInput
	EndpointConfiguration               DomainNameEndpointConfigurationPtrInput
	MutualTlsAuthentication             DomainNameMutualTlsAuthenticationPtrInput
	OwnershipVerificationCertificateArn pulumi.StringPtrInput
	RegionalCertificateArn              pulumi.StringPtrInput
	RegionalCertificateName             pulumi.StringPtrInput
	SecurityPolicy                      pulumi.StringPtrInput
	Tags                                pulumi.StringMapInput
}

func (DomainNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainNameArgs)(nil)).Elem()
}

type DomainNameInput interface {
	pulumi.Input

	ToDomainNameOutput() DomainNameOutput
	ToDomainNameOutputWithContext(ctx context.Context) DomainNameOutput
}

func (*DomainName) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainName)(nil)).Elem()
}

func (i *DomainName) ToDomainNameOutput() DomainNameOutput {
	return i.ToDomainNameOutputWithContext(context.Background())
}

func (i *DomainName) ToDomainNameOutputWithContext(ctx context.Context) DomainNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNameOutput)
}

// DomainNameArrayInput is an input type that accepts DomainNameArray and DomainNameArrayOutput values.
// You can construct a concrete instance of `DomainNameArrayInput` via:
//
//	DomainNameArray{ DomainNameArgs{...} }
type DomainNameArrayInput interface {
	pulumi.Input

	ToDomainNameArrayOutput() DomainNameArrayOutput
	ToDomainNameArrayOutputWithContext(context.Context) DomainNameArrayOutput
}

type DomainNameArray []DomainNameInput

func (DomainNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainName)(nil)).Elem()
}

func (i DomainNameArray) ToDomainNameArrayOutput() DomainNameArrayOutput {
	return i.ToDomainNameArrayOutputWithContext(context.Background())
}

func (i DomainNameArray) ToDomainNameArrayOutputWithContext(ctx context.Context) DomainNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNameArrayOutput)
}

// DomainNameMapInput is an input type that accepts DomainNameMap and DomainNameMapOutput values.
// You can construct a concrete instance of `DomainNameMapInput` via:
//
//	DomainNameMap{ "key": DomainNameArgs{...} }
type DomainNameMapInput interface {
	pulumi.Input

	ToDomainNameMapOutput() DomainNameMapOutput
	ToDomainNameMapOutputWithContext(context.Context) DomainNameMapOutput
}

type DomainNameMap map[string]DomainNameInput

func (DomainNameMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainName)(nil)).Elem()
}

func (i DomainNameMap) ToDomainNameMapOutput() DomainNameMapOutput {
	return i.ToDomainNameMapOutputWithContext(context.Background())
}

func (i DomainNameMap) ToDomainNameMapOutputWithContext(ctx context.Context) DomainNameMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNameMapOutput)
}

type DomainNameOutput struct{ *pulumi.OutputState }

func (DomainNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainName)(nil)).Elem()
}

func (o DomainNameOutput) ToDomainNameOutput() DomainNameOutput {
	return o
}

func (o DomainNameOutput) ToDomainNameOutputWithContext(ctx context.Context) DomainNameOutput {
	return o
}

func (o DomainNameOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o DomainNameOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringPtrOutput { return v.CertificateArn }).(pulumi.StringPtrOutput)
}

func (o DomainNameOutput) CertificateBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringPtrOutput { return v.CertificateBody }).(pulumi.StringPtrOutput)
}

func (o DomainNameOutput) CertificateChain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringPtrOutput { return v.CertificateChain }).(pulumi.StringPtrOutput)
}

func (o DomainNameOutput) CertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringPtrOutput { return v.CertificateName }).(pulumi.StringPtrOutput)
}

func (o DomainNameOutput) CertificatePrivateKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringPtrOutput { return v.CertificatePrivateKey }).(pulumi.StringPtrOutput)
}

func (o DomainNameOutput) CertificateUploadDate() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringOutput { return v.CertificateUploadDate }).(pulumi.StringOutput)
}

func (o DomainNameOutput) CloudfrontDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringOutput { return v.CloudfrontDomainName }).(pulumi.StringOutput)
}

func (o DomainNameOutput) CloudfrontZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringOutput { return v.CloudfrontZoneId }).(pulumi.StringOutput)
}

func (o DomainNameOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringOutput { return v.DomainName }).(pulumi.StringOutput)
}

func (o DomainNameOutput) EndpointConfiguration() DomainNameEndpointConfigurationOutput {
	return o.ApplyT(func(v *DomainName) DomainNameEndpointConfigurationOutput { return v.EndpointConfiguration }).(DomainNameEndpointConfigurationOutput)
}

func (o DomainNameOutput) MutualTlsAuthentication() DomainNameMutualTlsAuthenticationPtrOutput {
	return o.ApplyT(func(v *DomainName) DomainNameMutualTlsAuthenticationPtrOutput { return v.MutualTlsAuthentication }).(DomainNameMutualTlsAuthenticationPtrOutput)
}

func (o DomainNameOutput) OwnershipVerificationCertificateArn() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringOutput { return v.OwnershipVerificationCertificateArn }).(pulumi.StringOutput)
}

func (o DomainNameOutput) RegionalCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringPtrOutput { return v.RegionalCertificateArn }).(pulumi.StringPtrOutput)
}

func (o DomainNameOutput) RegionalCertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringPtrOutput { return v.RegionalCertificateName }).(pulumi.StringPtrOutput)
}

func (o DomainNameOutput) RegionalDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringOutput { return v.RegionalDomainName }).(pulumi.StringOutput)
}

func (o DomainNameOutput) RegionalZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringOutput { return v.RegionalZoneId }).(pulumi.StringOutput)
}

func (o DomainNameOutput) SecurityPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringOutput { return v.SecurityPolicy }).(pulumi.StringOutput)
}

func (o DomainNameOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o DomainNameOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DomainName) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type DomainNameArrayOutput struct{ *pulumi.OutputState }

func (DomainNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainName)(nil)).Elem()
}

func (o DomainNameArrayOutput) ToDomainNameArrayOutput() DomainNameArrayOutput {
	return o
}

func (o DomainNameArrayOutput) ToDomainNameArrayOutputWithContext(ctx context.Context) DomainNameArrayOutput {
	return o
}

func (o DomainNameArrayOutput) Index(i pulumi.IntInput) DomainNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DomainName {
		return vs[0].([]*DomainName)[vs[1].(int)]
	}).(DomainNameOutput)
}

type DomainNameMapOutput struct{ *pulumi.OutputState }

func (DomainNameMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainName)(nil)).Elem()
}

func (o DomainNameMapOutput) ToDomainNameMapOutput() DomainNameMapOutput {
	return o
}

func (o DomainNameMapOutput) ToDomainNameMapOutputWithContext(ctx context.Context) DomainNameMapOutput {
	return o
}

func (o DomainNameMapOutput) MapIndex(k pulumi.StringInput) DomainNameOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DomainName {
		return vs[0].(map[string]*DomainName)[vs[1].(string)]
	}).(DomainNameOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainNameInput)(nil)).Elem(), &DomainName{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainNameArrayInput)(nil)).Elem(), DomainNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainNameMapInput)(nil)).Elem(), DomainNameMap{})
	pulumi.RegisterOutputType(DomainNameOutput{})
	pulumi.RegisterOutputType(DomainNameArrayOutput{})
	pulumi.RegisterOutputType(DomainNameMapOutput{})
}
