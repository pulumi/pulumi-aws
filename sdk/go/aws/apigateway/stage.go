// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Stage struct {
	pulumi.CustomResourceState

	AccessLogSettings    StageAccessLogSettingsPtrOutput `pulumi:"accessLogSettings"`
	Arn                  pulumi.StringOutput             `pulumi:"arn"`
	CacheClusterEnabled  pulumi.BoolPtrOutput            `pulumi:"cacheClusterEnabled"`
	CacheClusterSize     pulumi.StringPtrOutput          `pulumi:"cacheClusterSize"`
	CanarySettings       StageCanarySettingsPtrOutput    `pulumi:"canarySettings"`
	ClientCertificateId  pulumi.StringPtrOutput          `pulumi:"clientCertificateId"`
	Deployment           pulumi.StringOutput             `pulumi:"deployment"`
	Description          pulumi.StringPtrOutput          `pulumi:"description"`
	DocumentationVersion pulumi.StringPtrOutput          `pulumi:"documentationVersion"`
	ExecutionArn         pulumi.StringOutput             `pulumi:"executionArn"`
	InvokeUrl            pulumi.StringOutput             `pulumi:"invokeUrl"`
	RestApi              pulumi.StringOutput             `pulumi:"restApi"`
	StageName            pulumi.StringOutput             `pulumi:"stageName"`
	Tags                 pulumi.StringMapOutput          `pulumi:"tags"`
	TagsAll              pulumi.StringMapOutput          `pulumi:"tagsAll"`
	Variables            pulumi.StringMapOutput          `pulumi:"variables"`
	WebAclArn            pulumi.StringOutput             `pulumi:"webAclArn"`
	XrayTracingEnabled   pulumi.BoolPtrOutput            `pulumi:"xrayTracingEnabled"`
}

// NewStage registers a new resource with the given unique name, arguments, and options.
func NewStage(ctx *pulumi.Context,
	name string, args *StageArgs, opts ...pulumi.ResourceOption) (*Stage, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Deployment == nil {
		return nil, errors.New("invalid value for required argument 'Deployment'")
	}
	if args.RestApi == nil {
		return nil, errors.New("invalid value for required argument 'RestApi'")
	}
	if args.StageName == nil {
		return nil, errors.New("invalid value for required argument 'StageName'")
	}
	var resource Stage
	err := ctx.RegisterResource("aws:apigateway/stage:Stage", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStage gets an existing Stage resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStage(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StageState, opts ...pulumi.ResourceOption) (*Stage, error) {
	var resource Stage
	err := ctx.ReadResource("aws:apigateway/stage:Stage", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Stage resources.
type stageState struct {
	AccessLogSettings    *StageAccessLogSettings `pulumi:"accessLogSettings"`
	Arn                  *string                 `pulumi:"arn"`
	CacheClusterEnabled  *bool                   `pulumi:"cacheClusterEnabled"`
	CacheClusterSize     *string                 `pulumi:"cacheClusterSize"`
	CanarySettings       *StageCanarySettings    `pulumi:"canarySettings"`
	ClientCertificateId  *string                 `pulumi:"clientCertificateId"`
	Deployment           interface{}             `pulumi:"deployment"`
	Description          *string                 `pulumi:"description"`
	DocumentationVersion *string                 `pulumi:"documentationVersion"`
	ExecutionArn         *string                 `pulumi:"executionArn"`
	InvokeUrl            *string                 `pulumi:"invokeUrl"`
	RestApi              interface{}             `pulumi:"restApi"`
	StageName            *string                 `pulumi:"stageName"`
	Tags                 map[string]string       `pulumi:"tags"`
	TagsAll              map[string]string       `pulumi:"tagsAll"`
	Variables            map[string]string       `pulumi:"variables"`
	WebAclArn            *string                 `pulumi:"webAclArn"`
	XrayTracingEnabled   *bool                   `pulumi:"xrayTracingEnabled"`
}

type StageState struct {
	AccessLogSettings    StageAccessLogSettingsPtrInput
	Arn                  pulumi.StringPtrInput
	CacheClusterEnabled  pulumi.BoolPtrInput
	CacheClusterSize     pulumi.StringPtrInput
	CanarySettings       StageCanarySettingsPtrInput
	ClientCertificateId  pulumi.StringPtrInput
	Deployment           pulumi.Input
	Description          pulumi.StringPtrInput
	DocumentationVersion pulumi.StringPtrInput
	ExecutionArn         pulumi.StringPtrInput
	InvokeUrl            pulumi.StringPtrInput
	RestApi              pulumi.Input
	StageName            pulumi.StringPtrInput
	Tags                 pulumi.StringMapInput
	TagsAll              pulumi.StringMapInput
	Variables            pulumi.StringMapInput
	WebAclArn            pulumi.StringPtrInput
	XrayTracingEnabled   pulumi.BoolPtrInput
}

func (StageState) ElementType() reflect.Type {
	return reflect.TypeOf((*stageState)(nil)).Elem()
}

type stageArgs struct {
	AccessLogSettings    *StageAccessLogSettings `pulumi:"accessLogSettings"`
	CacheClusterEnabled  *bool                   `pulumi:"cacheClusterEnabled"`
	CacheClusterSize     *string                 `pulumi:"cacheClusterSize"`
	CanarySettings       *StageCanarySettings    `pulumi:"canarySettings"`
	ClientCertificateId  *string                 `pulumi:"clientCertificateId"`
	Deployment           interface{}             `pulumi:"deployment"`
	Description          *string                 `pulumi:"description"`
	DocumentationVersion *string                 `pulumi:"documentationVersion"`
	RestApi              interface{}             `pulumi:"restApi"`
	StageName            string                  `pulumi:"stageName"`
	Tags                 map[string]string       `pulumi:"tags"`
	Variables            map[string]string       `pulumi:"variables"`
	XrayTracingEnabled   *bool                   `pulumi:"xrayTracingEnabled"`
}

// The set of arguments for constructing a Stage resource.
type StageArgs struct {
	AccessLogSettings    StageAccessLogSettingsPtrInput
	CacheClusterEnabled  pulumi.BoolPtrInput
	CacheClusterSize     pulumi.StringPtrInput
	CanarySettings       StageCanarySettingsPtrInput
	ClientCertificateId  pulumi.StringPtrInput
	Deployment           pulumi.Input
	Description          pulumi.StringPtrInput
	DocumentationVersion pulumi.StringPtrInput
	RestApi              pulumi.Input
	StageName            pulumi.StringInput
	Tags                 pulumi.StringMapInput
	Variables            pulumi.StringMapInput
	XrayTracingEnabled   pulumi.BoolPtrInput
}

func (StageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*stageArgs)(nil)).Elem()
}

type StageInput interface {
	pulumi.Input

	ToStageOutput() StageOutput
	ToStageOutputWithContext(ctx context.Context) StageOutput
}

func (*Stage) ElementType() reflect.Type {
	return reflect.TypeOf((**Stage)(nil)).Elem()
}

func (i *Stage) ToStageOutput() StageOutput {
	return i.ToStageOutputWithContext(context.Background())
}

func (i *Stage) ToStageOutputWithContext(ctx context.Context) StageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageOutput)
}

// StageArrayInput is an input type that accepts StageArray and StageArrayOutput values.
// You can construct a concrete instance of `StageArrayInput` via:
//
//	StageArray{ StageArgs{...} }
type StageArrayInput interface {
	pulumi.Input

	ToStageArrayOutput() StageArrayOutput
	ToStageArrayOutputWithContext(context.Context) StageArrayOutput
}

type StageArray []StageInput

func (StageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Stage)(nil)).Elem()
}

func (i StageArray) ToStageArrayOutput() StageArrayOutput {
	return i.ToStageArrayOutputWithContext(context.Background())
}

func (i StageArray) ToStageArrayOutputWithContext(ctx context.Context) StageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageArrayOutput)
}

// StageMapInput is an input type that accepts StageMap and StageMapOutput values.
// You can construct a concrete instance of `StageMapInput` via:
//
//	StageMap{ "key": StageArgs{...} }
type StageMapInput interface {
	pulumi.Input

	ToStageMapOutput() StageMapOutput
	ToStageMapOutputWithContext(context.Context) StageMapOutput
}

type StageMap map[string]StageInput

func (StageMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Stage)(nil)).Elem()
}

func (i StageMap) ToStageMapOutput() StageMapOutput {
	return i.ToStageMapOutputWithContext(context.Background())
}

func (i StageMap) ToStageMapOutputWithContext(ctx context.Context) StageMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageMapOutput)
}

type StageOutput struct{ *pulumi.OutputState }

func (StageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Stage)(nil)).Elem()
}

func (o StageOutput) ToStageOutput() StageOutput {
	return o
}

func (o StageOutput) ToStageOutputWithContext(ctx context.Context) StageOutput {
	return o
}

func (o StageOutput) AccessLogSettings() StageAccessLogSettingsPtrOutput {
	return o.ApplyT(func(v *Stage) StageAccessLogSettingsPtrOutput { return v.AccessLogSettings }).(StageAccessLogSettingsPtrOutput)
}

func (o StageOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Stage) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o StageOutput) CacheClusterEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Stage) pulumi.BoolPtrOutput { return v.CacheClusterEnabled }).(pulumi.BoolPtrOutput)
}

func (o StageOutput) CacheClusterSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Stage) pulumi.StringPtrOutput { return v.CacheClusterSize }).(pulumi.StringPtrOutput)
}

func (o StageOutput) CanarySettings() StageCanarySettingsPtrOutput {
	return o.ApplyT(func(v *Stage) StageCanarySettingsPtrOutput { return v.CanarySettings }).(StageCanarySettingsPtrOutput)
}

func (o StageOutput) ClientCertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Stage) pulumi.StringPtrOutput { return v.ClientCertificateId }).(pulumi.StringPtrOutput)
}

func (o StageOutput) Deployment() pulumi.StringOutput {
	return o.ApplyT(func(v *Stage) pulumi.StringOutput { return v.Deployment }).(pulumi.StringOutput)
}

func (o StageOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Stage) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o StageOutput) DocumentationVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Stage) pulumi.StringPtrOutput { return v.DocumentationVersion }).(pulumi.StringPtrOutput)
}

func (o StageOutput) ExecutionArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Stage) pulumi.StringOutput { return v.ExecutionArn }).(pulumi.StringOutput)
}

func (o StageOutput) InvokeUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Stage) pulumi.StringOutput { return v.InvokeUrl }).(pulumi.StringOutput)
}

func (o StageOutput) RestApi() pulumi.StringOutput {
	return o.ApplyT(func(v *Stage) pulumi.StringOutput { return v.RestApi }).(pulumi.StringOutput)
}

func (o StageOutput) StageName() pulumi.StringOutput {
	return o.ApplyT(func(v *Stage) pulumi.StringOutput { return v.StageName }).(pulumi.StringOutput)
}

func (o StageOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Stage) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o StageOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Stage) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o StageOutput) Variables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Stage) pulumi.StringMapOutput { return v.Variables }).(pulumi.StringMapOutput)
}

func (o StageOutput) WebAclArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Stage) pulumi.StringOutput { return v.WebAclArn }).(pulumi.StringOutput)
}

func (o StageOutput) XrayTracingEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Stage) pulumi.BoolPtrOutput { return v.XrayTracingEnabled }).(pulumi.BoolPtrOutput)
}

type StageArrayOutput struct{ *pulumi.OutputState }

func (StageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Stage)(nil)).Elem()
}

func (o StageArrayOutput) ToStageArrayOutput() StageArrayOutput {
	return o
}

func (o StageArrayOutput) ToStageArrayOutputWithContext(ctx context.Context) StageArrayOutput {
	return o
}

func (o StageArrayOutput) Index(i pulumi.IntInput) StageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Stage {
		return vs[0].([]*Stage)[vs[1].(int)]
	}).(StageOutput)
}

type StageMapOutput struct{ *pulumi.OutputState }

func (StageMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Stage)(nil)).Elem()
}

func (o StageMapOutput) ToStageMapOutput() StageMapOutput {
	return o
}

func (o StageMapOutput) ToStageMapOutputWithContext(ctx context.Context) StageMapOutput {
	return o
}

func (o StageMapOutput) MapIndex(k pulumi.StringInput) StageOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Stage {
		return vs[0].(map[string]*Stage)[vs[1].(string)]
	}).(StageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StageInput)(nil)).Elem(), &Stage{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageArrayInput)(nil)).Elem(), StageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StageMapInput)(nil)).Elem(), StageMap{})
	pulumi.RegisterOutputType(StageOutput{})
	pulumi.RegisterOutputType(StageArrayOutput{})
	pulumi.RegisterOutputType(StageMapOutput{})
}
