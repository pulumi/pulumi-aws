// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupDomainName(ctx *pulumi.Context, args *LookupDomainNameArgs, opts ...pulumi.InvokeOption) (*LookupDomainNameResult, error) {
	var rv LookupDomainNameResult
	err := ctx.Invoke("aws:apigateway/getDomainName:getDomainName", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDomainName.
type LookupDomainNameArgs struct {
	DomainName string            `pulumi:"domainName"`
	Tags       map[string]string `pulumi:"tags"`
}

// A collection of values returned by getDomainName.
type LookupDomainNameResult struct {
	Arn                    string                               `pulumi:"arn"`
	CertificateArn         string                               `pulumi:"certificateArn"`
	CertificateName        string                               `pulumi:"certificateName"`
	CertificateUploadDate  string                               `pulumi:"certificateUploadDate"`
	CloudfrontDomainName   string                               `pulumi:"cloudfrontDomainName"`
	CloudfrontZoneId       string                               `pulumi:"cloudfrontZoneId"`
	DomainName             string                               `pulumi:"domainName"`
	EndpointConfigurations []GetDomainNameEndpointConfiguration `pulumi:"endpointConfigurations"`
	// The provider-assigned unique ID for this managed resource.
	Id                      string            `pulumi:"id"`
	RegionalCertificateArn  string            `pulumi:"regionalCertificateArn"`
	RegionalCertificateName string            `pulumi:"regionalCertificateName"`
	RegionalDomainName      string            `pulumi:"regionalDomainName"`
	RegionalZoneId          string            `pulumi:"regionalZoneId"`
	SecurityPolicy          string            `pulumi:"securityPolicy"`
	Tags                    map[string]string `pulumi:"tags"`
}

func LookupDomainNameOutput(ctx *pulumi.Context, args LookupDomainNameOutputArgs, opts ...pulumi.InvokeOption) LookupDomainNameResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDomainNameResult, error) {
			args := v.(LookupDomainNameArgs)
			r, err := LookupDomainName(ctx, &args, opts...)
			var s LookupDomainNameResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDomainNameResultOutput)
}

// A collection of arguments for invoking getDomainName.
type LookupDomainNameOutputArgs struct {
	DomainName pulumi.StringInput    `pulumi:"domainName"`
	Tags       pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupDomainNameOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainNameArgs)(nil)).Elem()
}

// A collection of values returned by getDomainName.
type LookupDomainNameResultOutput struct{ *pulumi.OutputState }

func (LookupDomainNameResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainNameResult)(nil)).Elem()
}

func (o LookupDomainNameResultOutput) ToLookupDomainNameResultOutput() LookupDomainNameResultOutput {
	return o
}

func (o LookupDomainNameResultOutput) ToLookupDomainNameResultOutputWithContext(ctx context.Context) LookupDomainNameResultOutput {
	return o
}

func (o LookupDomainNameResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainNameResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupDomainNameResultOutput) CertificateArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainNameResult) string { return v.CertificateArn }).(pulumi.StringOutput)
}

func (o LookupDomainNameResultOutput) CertificateName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainNameResult) string { return v.CertificateName }).(pulumi.StringOutput)
}

func (o LookupDomainNameResultOutput) CertificateUploadDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainNameResult) string { return v.CertificateUploadDate }).(pulumi.StringOutput)
}

func (o LookupDomainNameResultOutput) CloudfrontDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainNameResult) string { return v.CloudfrontDomainName }).(pulumi.StringOutput)
}

func (o LookupDomainNameResultOutput) CloudfrontZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainNameResult) string { return v.CloudfrontZoneId }).(pulumi.StringOutput)
}

func (o LookupDomainNameResultOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainNameResult) string { return v.DomainName }).(pulumi.StringOutput)
}

func (o LookupDomainNameResultOutput) EndpointConfigurations() GetDomainNameEndpointConfigurationArrayOutput {
	return o.ApplyT(func(v LookupDomainNameResult) []GetDomainNameEndpointConfiguration { return v.EndpointConfigurations }).(GetDomainNameEndpointConfigurationArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDomainNameResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainNameResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDomainNameResultOutput) RegionalCertificateArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainNameResult) string { return v.RegionalCertificateArn }).(pulumi.StringOutput)
}

func (o LookupDomainNameResultOutput) RegionalCertificateName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainNameResult) string { return v.RegionalCertificateName }).(pulumi.StringOutput)
}

func (o LookupDomainNameResultOutput) RegionalDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainNameResult) string { return v.RegionalDomainName }).(pulumi.StringOutput)
}

func (o LookupDomainNameResultOutput) RegionalZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainNameResult) string { return v.RegionalZoneId }).(pulumi.StringOutput)
}

func (o LookupDomainNameResultOutput) SecurityPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainNameResult) string { return v.SecurityPolicy }).(pulumi.StringOutput)
}

func (o LookupDomainNameResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupDomainNameResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDomainNameResultOutput{})
}
