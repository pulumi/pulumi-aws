// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the custom domain name for use with AWS API Gateway.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/apigateway"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := apigateway.LookupDomainName(ctx, &apigateway.LookupDomainNameArgs{
//				DomainName: "api.example.com",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupDomainName(ctx *pulumi.Context, args *LookupDomainNameArgs, opts ...pulumi.InvokeOption) (*LookupDomainNameResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDomainNameResult
	err := ctx.Invoke("aws:apigateway/getDomainName:getDomainName", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDomainName.
type LookupDomainNameArgs struct {
	// Fully-qualified domain name to look up. If no domain name is found, an error will be returned.
	DomainName string `pulumi:"domainName"`
	// Key-value map of tags for the resource.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getDomainName.
type LookupDomainNameResult struct {
	// ARN of the found custom domain name.
	Arn *string `pulumi:"arn"`
	// ARN for an AWS-managed certificate that is used by edge-optimized endpoint for this domain name.
	CertificateArn *string `pulumi:"certificateArn"`
	// Name of the certificate that is used by edge-optimized endpoint for this domain name.
	CertificateName *string `pulumi:"certificateName"`
	// Upload date associated with the domain certificate.
	CertificateUploadDate *string `pulumi:"certificateUploadDate"`
	// Hostname created by Cloudfront to represent the distribution that implements this domain name mapping.
	CloudfrontDomainName *string `pulumi:"cloudfrontDomainName"`
	// For convenience, the hosted zone ID (`Z2FDTNDATAQYW2`) that can be used to create a Route53 alias record for the distribution.
	CloudfrontZoneId *string `pulumi:"cloudfrontZoneId"`
	DomainName       string  `pulumi:"domainName"`
	// List of objects with the endpoint configuration of this domain name.
	EndpointConfigurations []GetDomainNameEndpointConfiguration `pulumi:"endpointConfigurations"`
	// The provider-assigned unique ID for this managed resource.
	Id *string `pulumi:"id"`
	// ARN for an AWS-managed certificate that is used for validating the regional domain name.
	RegionalCertificateArn *string `pulumi:"regionalCertificateArn"`
	// User-friendly name of the certificate that is used by regional endpoint for this domain name.
	RegionalCertificateName *string `pulumi:"regionalCertificateName"`
	// Hostname for the custom domain's regional endpoint.
	RegionalDomainName *string `pulumi:"regionalDomainName"`
	// Hosted zone ID that can be used to create a Route53 alias record for the regional endpoint.
	RegionalZoneId *string `pulumi:"regionalZoneId"`
	// Security policy for the domain name.
	SecurityPolicy *string `pulumi:"securityPolicy"`
	// Key-value map of tags for the resource.
	Tags map[string]string `pulumi:"tags"`
}

func LookupDomainNameOutput(ctx *pulumi.Context, args LookupDomainNameOutputArgs, opts ...pulumi.InvokeOption) LookupDomainNameResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDomainNameResult, error) {
			args := v.(LookupDomainNameArgs)
			r, err := LookupDomainName(ctx, &args, opts...)
			var s LookupDomainNameResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDomainNameResultOutput)
}

// A collection of arguments for invoking getDomainName.
type LookupDomainNameOutputArgs struct {
	// Fully-qualified domain name to look up. If no domain name is found, an error will be returned.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// Key-value map of tags for the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupDomainNameOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainNameArgs)(nil)).Elem()
}

// A collection of values returned by getDomainName.
type LookupDomainNameResultOutput struct{ *pulumi.OutputState }

func (LookupDomainNameResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainNameResult)(nil)).Elem()
}

func (o LookupDomainNameResultOutput) ToLookupDomainNameResultOutput() LookupDomainNameResultOutput {
	return o
}

func (o LookupDomainNameResultOutput) ToLookupDomainNameResultOutputWithContext(ctx context.Context) LookupDomainNameResultOutput {
	return o
}

// ARN of the found custom domain name.
func (o LookupDomainNameResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainNameResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// ARN for an AWS-managed certificate that is used by edge-optimized endpoint for this domain name.
func (o LookupDomainNameResultOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainNameResult) *string { return v.CertificateArn }).(pulumi.StringPtrOutput)
}

// Name of the certificate that is used by edge-optimized endpoint for this domain name.
func (o LookupDomainNameResultOutput) CertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainNameResult) *string { return v.CertificateName }).(pulumi.StringPtrOutput)
}

// Upload date associated with the domain certificate.
func (o LookupDomainNameResultOutput) CertificateUploadDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainNameResult) *string { return v.CertificateUploadDate }).(pulumi.StringPtrOutput)
}

// Hostname created by Cloudfront to represent the distribution that implements this domain name mapping.
func (o LookupDomainNameResultOutput) CloudfrontDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainNameResult) *string { return v.CloudfrontDomainName }).(pulumi.StringPtrOutput)
}

// For convenience, the hosted zone ID (`Z2FDTNDATAQYW2`) that can be used to create a Route53 alias record for the distribution.
func (o LookupDomainNameResultOutput) CloudfrontZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainNameResult) *string { return v.CloudfrontZoneId }).(pulumi.StringPtrOutput)
}

func (o LookupDomainNameResultOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainNameResult) string { return v.DomainName }).(pulumi.StringOutput)
}

// List of objects with the endpoint configuration of this domain name.
func (o LookupDomainNameResultOutput) EndpointConfigurations() GetDomainNameEndpointConfigurationArrayOutput {
	return o.ApplyT(func(v LookupDomainNameResult) []GetDomainNameEndpointConfiguration { return v.EndpointConfigurations }).(GetDomainNameEndpointConfigurationArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDomainNameResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainNameResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// ARN for an AWS-managed certificate that is used for validating the regional domain name.
func (o LookupDomainNameResultOutput) RegionalCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainNameResult) *string { return v.RegionalCertificateArn }).(pulumi.StringPtrOutput)
}

// User-friendly name of the certificate that is used by regional endpoint for this domain name.
func (o LookupDomainNameResultOutput) RegionalCertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainNameResult) *string { return v.RegionalCertificateName }).(pulumi.StringPtrOutput)
}

// Hostname for the custom domain's regional endpoint.
func (o LookupDomainNameResultOutput) RegionalDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainNameResult) *string { return v.RegionalDomainName }).(pulumi.StringPtrOutput)
}

// Hosted zone ID that can be used to create a Route53 alias record for the regional endpoint.
func (o LookupDomainNameResultOutput) RegionalZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainNameResult) *string { return v.RegionalZoneId }).(pulumi.StringPtrOutput)
}

// Security policy for the domain name.
func (o LookupDomainNameResultOutput) SecurityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDomainNameResult) *string { return v.SecurityPolicy }).(pulumi.StringPtrOutput)
}

// Key-value map of tags for the resource.
func (o LookupDomainNameResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupDomainNameResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDomainNameResultOutput{})
}
