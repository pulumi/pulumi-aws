// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an API Gateway Usage Plan.
type UsagePlan struct {
	s *pulumi.ResourceState
}

// NewUsagePlan registers a new resource with the given unique name, arguments, and options.
func NewUsagePlan(ctx *pulumi.Context,
	name string, args *UsagePlanArgs, opts ...pulumi.ResourceOpt) (*UsagePlan, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["apiStages"] = nil
		inputs["description"] = nil
		inputs["name"] = nil
		inputs["productCode"] = nil
		inputs["quotaSettings"] = nil
		inputs["throttleSettings"] = nil
	} else {
		inputs["apiStages"] = args.ApiStages
		inputs["description"] = args.Description
		inputs["name"] = args.Name
		inputs["productCode"] = args.ProductCode
		inputs["quotaSettings"] = args.QuotaSettings
		inputs["throttleSettings"] = args.ThrottleSettings
	}
	s, err := ctx.RegisterResource("aws:apigateway/usagePlan:UsagePlan", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &UsagePlan{s: s}, nil
}

// GetUsagePlan gets an existing UsagePlan resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUsagePlan(ctx *pulumi.Context,
	name string, id pulumi.ID, state *UsagePlanState, opts ...pulumi.ResourceOpt) (*UsagePlan, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["apiStages"] = state.ApiStages
		inputs["description"] = state.Description
		inputs["name"] = state.Name
		inputs["productCode"] = state.ProductCode
		inputs["quotaSettings"] = state.QuotaSettings
		inputs["throttleSettings"] = state.ThrottleSettings
	}
	s, err := ctx.ReadResource("aws:apigateway/usagePlan:UsagePlan", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &UsagePlan{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *UsagePlan) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *UsagePlan) ID() *pulumi.IDOutput {
	return r.s.ID
}

// The associated [API stages](#api-stages-arguments) of the usage plan.
func (r *UsagePlan) ApiStages() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["apiStages"])
}

// The description of a usage plan.
func (r *UsagePlan) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

// The name of the usage plan.
func (r *UsagePlan) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The AWS Markeplace product identifier to associate with the usage plan as a SaaS product on AWS Marketplace.
func (r *UsagePlan) ProductCode() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["productCode"])
}

// The [quota settings](#quota-settings-arguments) of the usage plan.
func (r *UsagePlan) QuotaSettings() *pulumi.Output {
	return r.s.State["quotaSettings"]
}

// The [throttling limits](#throttling-settings-arguments) of the usage plan.
func (r *UsagePlan) ThrottleSettings() *pulumi.Output {
	return r.s.State["throttleSettings"]
}

// Input properties used for looking up and filtering UsagePlan resources.
type UsagePlanState struct {
	// The associated [API stages](#api-stages-arguments) of the usage plan.
	ApiStages interface{}
	// The description of a usage plan.
	Description interface{}
	// The name of the usage plan.
	Name interface{}
	// The AWS Markeplace product identifier to associate with the usage plan as a SaaS product on AWS Marketplace.
	ProductCode interface{}
	// The [quota settings](#quota-settings-arguments) of the usage plan.
	QuotaSettings interface{}
	// The [throttling limits](#throttling-settings-arguments) of the usage plan.
	ThrottleSettings interface{}
}

// The set of arguments for constructing a UsagePlan resource.
type UsagePlanArgs struct {
	// The associated [API stages](#api-stages-arguments) of the usage plan.
	ApiStages interface{}
	// The description of a usage plan.
	Description interface{}
	// The name of the usage plan.
	Name interface{}
	// The AWS Markeplace product identifier to associate with the usage plan as a SaaS product on AWS Marketplace.
	ProductCode interface{}
	// The [quota settings](#quota-settings-arguments) of the usage plan.
	QuotaSettings interface{}
	// The [throttling limits](#throttling-settings-arguments) of the usage plan.
	ThrottleSettings interface{}
}
