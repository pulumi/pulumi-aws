// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an API Gateway REST Deployment. A deployment is a snapshot of the REST API configuration. The deployment can then be published to callable endpoints via the `apigateway.Stage` resource and optionally managed further with the `apigateway.BasePathMapping` resource, `apigateway.DomainName` resource, and `awsApiMethodSettings` resource. For more information, see the [API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/how-to-deploy-api.html).
//
// To properly capture all REST API configuration in a deployment, this resource must have dependencies on all prior resources that manage resources/paths, methods, integrations, etc.
//
// * For REST APIs that are configured via OpenAPI specification (`apigateway.RestApi` resource `body` argument), no special dependency setup is needed beyond referencing the  `id` attribute of that resource unless additional resources have further customized the REST API.
// * When the REST API configuration involves other resources (`apigateway.Integration` resource), the dependency setup can be done with implicit resource references in the `triggers` argument or explicit resource references using the [resource `dependsOn` custom option](https://www.pulumi.com/docs/intro/concepts/resources/#dependson). The `triggers` argument should be preferred over `dependsOn`, since `dependsOn` can only capture dependency ordering and will not cause the resource to recreate (redeploy the REST API) with upstream configuration changes.
//
// !> **WARNING:** It is recommended to use the `apigateway.Stage` resource instead of managing an API Gateway Stage via the `stageName` argument of this resource. When this resource is recreated (REST API redeployment) with the `stageName` configured, the stage is deleted and recreated. This will cause a temporary service interruption, increase provide plan differences, and can require a second apply to recreate any downstream stage configuration such as associated `awsApiMethodSettings` resources.
//
// ## Example Usage
//
// ## Import
//
// Using `pulumi import`, import `aws_api_gateway_deployment` using `REST-API-ID/DEPLOYMENT-ID`. For example:
//
// ```sh
// $ pulumi import aws:apigateway/deployment:Deployment example aabbccddee/1122334
// ```
// The `stage_name`, `stage_description`, and `variables` arguments cannot be imported. Use the `aws_api_gateway_stage` resource to import and manage stages.
//
// The `triggers` argument cannot be imported.
type Deployment struct {
	pulumi.CustomResourceState

	// Input configuration for the canary deployment when the deployment is a canary release deployment.
	// See `canarySettings below.
	// Has no effect when `stageName` is not set.
	//
	// Deprecated: The attribute "canarySettings" will be removed in a future major version. Use an explicit "apigateway.Stage" instead.
	CanarySettings DeploymentCanarySettingsPtrOutput `pulumi:"canarySettings"`
	// Creation date of the deployment
	CreatedDate pulumi.StringOutput `pulumi:"createdDate"`
	// Description of the deployment
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Execution ARN to be used in `lambdaPermission`'s `sourceArn`
	// when allowing API Gateway to invoke a Lambda function,
	// e.g., `arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j/prod`
	ExecutionArn pulumi.StringOutput `pulumi:"executionArn"`
	// URL to invoke the API pointing to the stage,
	// e.g., `https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/prod`
	InvokeUrl pulumi.StringOutput `pulumi:"invokeUrl"`
	// REST API identifier.
	RestApi pulumi.StringOutput `pulumi:"restApi"`
	// Description to set on the stage managed by the `stageName` argument.
	// Has no effect when `stageName` is not set.
	//
	// Deprecated: The attribute "stageDescription" will be removed in a future major version. Use an explicit "apigateway.Stage" instead.
	StageDescription pulumi.StringPtrOutput `pulumi:"stageDescription"`
	// Name of the stage to create with this deployment.
	// If the specified stage already exists, it will be updated to point to the new deployment.
	// We recommend using the `apigateway.Stage` resource instead to manage stages.
	//
	// Deprecated: The attribute "stageName" will be removed in a future major version. Use an explicit "apigateway.Stage" instead.
	StageName pulumi.StringPtrOutput `pulumi:"stageName"`
	// Map of arbitrary keys and values that, when changed, will trigger a redeployment.
	Triggers pulumi.StringMapOutput `pulumi:"triggers"`
	// Map to set on the stage managed by the `stageName` argument.
	Variables pulumi.StringMapOutput `pulumi:"variables"`
}

// NewDeployment registers a new resource with the given unique name, arguments, and options.
func NewDeployment(ctx *pulumi.Context,
	name string, args *DeploymentArgs, opts ...pulumi.ResourceOption) (*Deployment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RestApi == nil {
		return nil, errors.New("invalid value for required argument 'RestApi'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Deployment
	err := ctx.RegisterResource("aws:apigateway/deployment:Deployment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeployment gets an existing Deployment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeployment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeploymentState, opts ...pulumi.ResourceOption) (*Deployment, error) {
	var resource Deployment
	err := ctx.ReadResource("aws:apigateway/deployment:Deployment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Deployment resources.
type deploymentState struct {
	// Input configuration for the canary deployment when the deployment is a canary release deployment.
	// See `canarySettings below.
	// Has no effect when `stageName` is not set.
	//
	// Deprecated: The attribute "canarySettings" will be removed in a future major version. Use an explicit "apigateway.Stage" instead.
	CanarySettings *DeploymentCanarySettings `pulumi:"canarySettings"`
	// Creation date of the deployment
	CreatedDate *string `pulumi:"createdDate"`
	// Description of the deployment
	Description *string `pulumi:"description"`
	// Execution ARN to be used in `lambdaPermission`'s `sourceArn`
	// when allowing API Gateway to invoke a Lambda function,
	// e.g., `arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j/prod`
	ExecutionArn *string `pulumi:"executionArn"`
	// URL to invoke the API pointing to the stage,
	// e.g., `https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/prod`
	InvokeUrl *string `pulumi:"invokeUrl"`
	// REST API identifier.
	RestApi interface{} `pulumi:"restApi"`
	// Description to set on the stage managed by the `stageName` argument.
	// Has no effect when `stageName` is not set.
	//
	// Deprecated: The attribute "stageDescription" will be removed in a future major version. Use an explicit "apigateway.Stage" instead.
	StageDescription *string `pulumi:"stageDescription"`
	// Name of the stage to create with this deployment.
	// If the specified stage already exists, it will be updated to point to the new deployment.
	// We recommend using the `apigateway.Stage` resource instead to manage stages.
	//
	// Deprecated: The attribute "stageName" will be removed in a future major version. Use an explicit "apigateway.Stage" instead.
	StageName *string `pulumi:"stageName"`
	// Map of arbitrary keys and values that, when changed, will trigger a redeployment.
	Triggers map[string]string `pulumi:"triggers"`
	// Map to set on the stage managed by the `stageName` argument.
	Variables map[string]string `pulumi:"variables"`
}

type DeploymentState struct {
	// Input configuration for the canary deployment when the deployment is a canary release deployment.
	// See `canarySettings below.
	// Has no effect when `stageName` is not set.
	//
	// Deprecated: The attribute "canarySettings" will be removed in a future major version. Use an explicit "apigateway.Stage" instead.
	CanarySettings DeploymentCanarySettingsPtrInput
	// Creation date of the deployment
	CreatedDate pulumi.StringPtrInput
	// Description of the deployment
	Description pulumi.StringPtrInput
	// Execution ARN to be used in `lambdaPermission`'s `sourceArn`
	// when allowing API Gateway to invoke a Lambda function,
	// e.g., `arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j/prod`
	ExecutionArn pulumi.StringPtrInput
	// URL to invoke the API pointing to the stage,
	// e.g., `https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/prod`
	InvokeUrl pulumi.StringPtrInput
	// REST API identifier.
	RestApi pulumi.Input
	// Description to set on the stage managed by the `stageName` argument.
	// Has no effect when `stageName` is not set.
	//
	// Deprecated: The attribute "stageDescription" will be removed in a future major version. Use an explicit "apigateway.Stage" instead.
	StageDescription pulumi.StringPtrInput
	// Name of the stage to create with this deployment.
	// If the specified stage already exists, it will be updated to point to the new deployment.
	// We recommend using the `apigateway.Stage` resource instead to manage stages.
	//
	// Deprecated: The attribute "stageName" will be removed in a future major version. Use an explicit "apigateway.Stage" instead.
	StageName pulumi.StringPtrInput
	// Map of arbitrary keys and values that, when changed, will trigger a redeployment.
	Triggers pulumi.StringMapInput
	// Map to set on the stage managed by the `stageName` argument.
	Variables pulumi.StringMapInput
}

func (DeploymentState) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentState)(nil)).Elem()
}

type deploymentArgs struct {
	// Input configuration for the canary deployment when the deployment is a canary release deployment.
	// See `canarySettings below.
	// Has no effect when `stageName` is not set.
	//
	// Deprecated: The attribute "canarySettings" will be removed in a future major version. Use an explicit "apigateway.Stage" instead.
	CanarySettings *DeploymentCanarySettings `pulumi:"canarySettings"`
	// Description of the deployment
	Description *string `pulumi:"description"`
	// REST API identifier.
	RestApi interface{} `pulumi:"restApi"`
	// Description to set on the stage managed by the `stageName` argument.
	// Has no effect when `stageName` is not set.
	//
	// Deprecated: The attribute "stageDescription" will be removed in a future major version. Use an explicit "apigateway.Stage" instead.
	StageDescription *string `pulumi:"stageDescription"`
	// Name of the stage to create with this deployment.
	// If the specified stage already exists, it will be updated to point to the new deployment.
	// We recommend using the `apigateway.Stage` resource instead to manage stages.
	//
	// Deprecated: The attribute "stageName" will be removed in a future major version. Use an explicit "apigateway.Stage" instead.
	StageName *string `pulumi:"stageName"`
	// Map of arbitrary keys and values that, when changed, will trigger a redeployment.
	Triggers map[string]string `pulumi:"triggers"`
	// Map to set on the stage managed by the `stageName` argument.
	Variables map[string]string `pulumi:"variables"`
}

// The set of arguments for constructing a Deployment resource.
type DeploymentArgs struct {
	// Input configuration for the canary deployment when the deployment is a canary release deployment.
	// See `canarySettings below.
	// Has no effect when `stageName` is not set.
	//
	// Deprecated: The attribute "canarySettings" will be removed in a future major version. Use an explicit "apigateway.Stage" instead.
	CanarySettings DeploymentCanarySettingsPtrInput
	// Description of the deployment
	Description pulumi.StringPtrInput
	// REST API identifier.
	RestApi pulumi.Input
	// Description to set on the stage managed by the `stageName` argument.
	// Has no effect when `stageName` is not set.
	//
	// Deprecated: The attribute "stageDescription" will be removed in a future major version. Use an explicit "apigateway.Stage" instead.
	StageDescription pulumi.StringPtrInput
	// Name of the stage to create with this deployment.
	// If the specified stage already exists, it will be updated to point to the new deployment.
	// We recommend using the `apigateway.Stage` resource instead to manage stages.
	//
	// Deprecated: The attribute "stageName" will be removed in a future major version. Use an explicit "apigateway.Stage" instead.
	StageName pulumi.StringPtrInput
	// Map of arbitrary keys and values that, when changed, will trigger a redeployment.
	Triggers pulumi.StringMapInput
	// Map to set on the stage managed by the `stageName` argument.
	Variables pulumi.StringMapInput
}

func (DeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentArgs)(nil)).Elem()
}

type DeploymentInput interface {
	pulumi.Input

	ToDeploymentOutput() DeploymentOutput
	ToDeploymentOutputWithContext(ctx context.Context) DeploymentOutput
}

func (*Deployment) ElementType() reflect.Type {
	return reflect.TypeOf((**Deployment)(nil)).Elem()
}

func (i *Deployment) ToDeploymentOutput() DeploymentOutput {
	return i.ToDeploymentOutputWithContext(context.Background())
}

func (i *Deployment) ToDeploymentOutputWithContext(ctx context.Context) DeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentOutput)
}

// DeploymentArrayInput is an input type that accepts DeploymentArray and DeploymentArrayOutput values.
// You can construct a concrete instance of `DeploymentArrayInput` via:
//
//	DeploymentArray{ DeploymentArgs{...} }
type DeploymentArrayInput interface {
	pulumi.Input

	ToDeploymentArrayOutput() DeploymentArrayOutput
	ToDeploymentArrayOutputWithContext(context.Context) DeploymentArrayOutput
}

type DeploymentArray []DeploymentInput

func (DeploymentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Deployment)(nil)).Elem()
}

func (i DeploymentArray) ToDeploymentArrayOutput() DeploymentArrayOutput {
	return i.ToDeploymentArrayOutputWithContext(context.Background())
}

func (i DeploymentArray) ToDeploymentArrayOutputWithContext(ctx context.Context) DeploymentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentArrayOutput)
}

// DeploymentMapInput is an input type that accepts DeploymentMap and DeploymentMapOutput values.
// You can construct a concrete instance of `DeploymentMapInput` via:
//
//	DeploymentMap{ "key": DeploymentArgs{...} }
type DeploymentMapInput interface {
	pulumi.Input

	ToDeploymentMapOutput() DeploymentMapOutput
	ToDeploymentMapOutputWithContext(context.Context) DeploymentMapOutput
}

type DeploymentMap map[string]DeploymentInput

func (DeploymentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Deployment)(nil)).Elem()
}

func (i DeploymentMap) ToDeploymentMapOutput() DeploymentMapOutput {
	return i.ToDeploymentMapOutputWithContext(context.Background())
}

func (i DeploymentMap) ToDeploymentMapOutputWithContext(ctx context.Context) DeploymentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentMapOutput)
}

type DeploymentOutput struct{ *pulumi.OutputState }

func (DeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Deployment)(nil)).Elem()
}

func (o DeploymentOutput) ToDeploymentOutput() DeploymentOutput {
	return o
}

func (o DeploymentOutput) ToDeploymentOutputWithContext(ctx context.Context) DeploymentOutput {
	return o
}

// Input configuration for the canary deployment when the deployment is a canary release deployment.
// See `canarySettings below.
// Has no effect when `stageName` is not set.
//
// Deprecated: The attribute "canarySettings" will be removed in a future major version. Use an explicit "apigateway.Stage" instead.
func (o DeploymentOutput) CanarySettings() DeploymentCanarySettingsPtrOutput {
	return o.ApplyT(func(v *Deployment) DeploymentCanarySettingsPtrOutput { return v.CanarySettings }).(DeploymentCanarySettingsPtrOutput)
}

// Creation date of the deployment
func (o DeploymentOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.CreatedDate }).(pulumi.StringOutput)
}

// Description of the deployment
func (o DeploymentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Execution ARN to be used in `lambdaPermission`'s `sourceArn`
// when allowing API Gateway to invoke a Lambda function,
// e.g., `arn:aws:execute-api:eu-west-2:123456789012:z4675bid1j/prod`
func (o DeploymentOutput) ExecutionArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.ExecutionArn }).(pulumi.StringOutput)
}

// URL to invoke the API pointing to the stage,
// e.g., `https://z4675bid1j.execute-api.eu-west-2.amazonaws.com/prod`
func (o DeploymentOutput) InvokeUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.InvokeUrl }).(pulumi.StringOutput)
}

// REST API identifier.
func (o DeploymentOutput) RestApi() pulumi.StringOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringOutput { return v.RestApi }).(pulumi.StringOutput)
}

// Description to set on the stage managed by the `stageName` argument.
// Has no effect when `stageName` is not set.
//
// Deprecated: The attribute "stageDescription" will be removed in a future major version. Use an explicit "apigateway.Stage" instead.
func (o DeploymentOutput) StageDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringPtrOutput { return v.StageDescription }).(pulumi.StringPtrOutput)
}

// Name of the stage to create with this deployment.
// If the specified stage already exists, it will be updated to point to the new deployment.
// We recommend using the `apigateway.Stage` resource instead to manage stages.
//
// Deprecated: The attribute "stageName" will be removed in a future major version. Use an explicit "apigateway.Stage" instead.
func (o DeploymentOutput) StageName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringPtrOutput { return v.StageName }).(pulumi.StringPtrOutput)
}

// Map of arbitrary keys and values that, when changed, will trigger a redeployment.
func (o DeploymentOutput) Triggers() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringMapOutput { return v.Triggers }).(pulumi.StringMapOutput)
}

// Map to set on the stage managed by the `stageName` argument.
func (o DeploymentOutput) Variables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Deployment) pulumi.StringMapOutput { return v.Variables }).(pulumi.StringMapOutput)
}

type DeploymentArrayOutput struct{ *pulumi.OutputState }

func (DeploymentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Deployment)(nil)).Elem()
}

func (o DeploymentArrayOutput) ToDeploymentArrayOutput() DeploymentArrayOutput {
	return o
}

func (o DeploymentArrayOutput) ToDeploymentArrayOutputWithContext(ctx context.Context) DeploymentArrayOutput {
	return o
}

func (o DeploymentArrayOutput) Index(i pulumi.IntInput) DeploymentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Deployment {
		return vs[0].([]*Deployment)[vs[1].(int)]
	}).(DeploymentOutput)
}

type DeploymentMapOutput struct{ *pulumi.OutputState }

func (DeploymentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Deployment)(nil)).Elem()
}

func (o DeploymentMapOutput) ToDeploymentMapOutput() DeploymentMapOutput {
	return o
}

func (o DeploymentMapOutput) ToDeploymentMapOutputWithContext(ctx context.Context) DeploymentMapOutput {
	return o
}

func (o DeploymentMapOutput) MapIndex(k pulumi.StringInput) DeploymentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Deployment {
		return vs[0].(map[string]*Deployment)[vs[1].(string)]
	}).(DeploymentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentInput)(nil)).Elem(), &Deployment{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentArrayInput)(nil)).Elem(), DeploymentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentMapInput)(nil)).Elem(), DeploymentMap{})
	pulumi.RegisterOutputType(DeploymentOutput{})
	pulumi.RegisterOutputType(DeploymentArrayOutput{})
	pulumi.RegisterOutputType(DeploymentMapOutput{})
}
