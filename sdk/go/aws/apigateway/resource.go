// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an API Gateway Resource.
type Resource struct {
	s *pulumi.ResourceState
}

// NewResource registers a new resource with the given unique name, arguments, and options.
func NewResource(ctx *pulumi.Context,
	name string, args *ResourceArgs, opts ...pulumi.ResourceOpt) (*Resource, error) {
	if args == nil || args.ParentId == nil {
		return nil, errors.New("missing required argument 'ParentId'")
	}
	if args == nil || args.PathPart == nil {
		return nil, errors.New("missing required argument 'PathPart'")
	}
	if args == nil || args.RestApi == nil {
		return nil, errors.New("missing required argument 'RestApi'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["parentId"] = nil
		inputs["pathPart"] = nil
		inputs["restApi"] = nil
	} else {
		inputs["parentId"] = args.ParentId
		inputs["pathPart"] = args.PathPart
		inputs["restApi"] = args.RestApi
	}
	inputs["path"] = nil
	s, err := ctx.RegisterResource("aws:apigateway/resource:Resource", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Resource{s: s}, nil
}

// GetResource gets an existing Resource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResource(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ResourceState, opts ...pulumi.ResourceOpt) (*Resource, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["parentId"] = state.ParentId
		inputs["path"] = state.Path
		inputs["pathPart"] = state.PathPart
		inputs["restApi"] = state.RestApi
	}
	s, err := ctx.ReadResource("aws:apigateway/resource:Resource", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Resource{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Resource) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Resource) ID() *pulumi.IDOutput {
	return r.s.ID
}

// The ID of the parent API resource
func (r *Resource) ParentId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["parentId"])
}

// The complete path for this API resource, including all parent paths.
func (r *Resource) Path() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["path"])
}

// The last path segment of this API resource.
func (r *Resource) PathPart() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["pathPart"])
}

// The ID of the associated REST API
func (r *Resource) RestApi() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["restApi"])
}

// Input properties used for looking up and filtering Resource resources.
type ResourceState struct {
	// The ID of the parent API resource
	ParentId interface{}
	// The complete path for this API resource, including all parent paths.
	Path interface{}
	// The last path segment of this API resource.
	PathPart interface{}
	// The ID of the associated REST API
	RestApi interface{}
}

// The set of arguments for constructing a Resource resource.
type ResourceArgs struct {
	// The ID of the parent API resource
	ParentId interface{}
	// The last path segment of this API resource.
	PathPart interface{}
	// The ID of the associated REST API
	RestApi interface{}
}
