// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an S3 bucket website configuration resource. For more information, see [Hosting Websites on S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html).
//
// > This resource cannot be used with S3 directory buckets.
//
// ## Example Usage
//
// ### With `routingRule` configured
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/s3"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := s3.NewBucketWebsiteConfiguration(ctx, "example", &s3.BucketWebsiteConfigurationArgs{
//				Bucket: pulumi.Any(exampleAwsS3Bucket.Id),
//				IndexDocument: &s3.BucketWebsiteConfigurationIndexDocumentArgs{
//					Suffix: pulumi.String("index.html"),
//				},
//				ErrorDocument: &s3.BucketWebsiteConfigurationErrorDocumentArgs{
//					Key: pulumi.String("error.html"),
//				},
//				RoutingRules: s3.BucketWebsiteConfigurationRoutingRuleArray{
//					&s3.BucketWebsiteConfigurationRoutingRuleArgs{
//						Condition: &s3.BucketWebsiteConfigurationRoutingRuleConditionArgs{
//							KeyPrefixEquals: pulumi.String("docs/"),
//						},
//						Redirect: &s3.BucketWebsiteConfigurationRoutingRuleRedirectArgs{
//							ReplaceKeyPrefixWith: pulumi.String("documents/"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### With `routingRules` configured
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/s3"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := s3.NewBucketWebsiteConfiguration(ctx, "example", &s3.BucketWebsiteConfigurationArgs{
//				Bucket: pulumi.Any(exampleAwsS3Bucket.Id),
//				IndexDocument: &s3.BucketWebsiteConfigurationIndexDocumentArgs{
//					Suffix: pulumi.String("index.html"),
//				},
//				ErrorDocument: &s3.BucketWebsiteConfigurationErrorDocumentArgs{
//					Key: pulumi.String("error.html"),
//				},
//				RoutingRuleDetails: pulumi.String(`[{
//	    "Condition": {
//	        "KeyPrefixEquals": "docs/"
//	    },
//	    "Redirect": {
//	        "ReplaceKeyPrefixWith": ""
//	    }
//	}]
//
// `),
//
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// If the owner (account ID) of the source bucket differs from the account used to configure the AWS Provider, import using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):
//
// __Using `pulumi import` to import__ S3 bucket website configuration using the `bucket` or using the `bucket` and `expected_bucket_owner` separated by a comma (`,`). For example:
//
// If the owner (account ID) of the source bucket is the same account used to configure the AWS Provider, import using the `bucket`:
//
// ```sh
// $ pulumi import aws:s3/bucketWebsiteConfiguration:BucketWebsiteConfiguration example bucket-name
// ```
// If the owner (account ID) of the source bucket differs from the account used to configure the AWS Provider, import using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):
//
// ```sh
// $ pulumi import aws:s3/bucketWebsiteConfiguration:BucketWebsiteConfiguration example bucket-name,123456789012
// ```
type BucketWebsiteConfiguration struct {
	pulumi.CustomResourceState

	// Name of the bucket.
	Bucket pulumi.StringOutput `pulumi:"bucket"`
	// Name of the error document for the website. See below.
	ErrorDocument BucketWebsiteConfigurationErrorDocumentPtrOutput `pulumi:"errorDocument"`
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner pulumi.StringPtrOutput `pulumi:"expectedBucketOwner"`
	// Name of the index document for the website. See below.
	IndexDocument BucketWebsiteConfigurationIndexDocumentPtrOutput `pulumi:"indexDocument"`
	// Redirect behavior for every request to this bucket's website endpoint. See below. Conflicts with `errorDocument`, `indexDocument`, and `routingRule`.
	RedirectAllRequestsTo BucketWebsiteConfigurationRedirectAllRequestsToPtrOutput `pulumi:"redirectAllRequestsTo"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringOutput `pulumi:"region"`
	// JSON array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
	// describing redirect behavior and when redirects are applied. Use this parameter when your routing rules contain empty String values (`""`) as seen in the example above.
	RoutingRuleDetails pulumi.StringOutput `pulumi:"routingRuleDetails"`
	// List of rules that define when a redirect is applied and the redirect behavior. See below.
	RoutingRules BucketWebsiteConfigurationRoutingRuleArrayOutput `pulumi:"routingRules"`
	// Domain of the website endpoint. This is used to create Route 53 alias records.
	WebsiteDomain pulumi.StringOutput `pulumi:"websiteDomain"`
	// Website endpoint.
	WebsiteEndpoint pulumi.StringOutput `pulumi:"websiteEndpoint"`
}

// NewBucketWebsiteConfiguration registers a new resource with the given unique name, arguments, and options.
func NewBucketWebsiteConfiguration(ctx *pulumi.Context,
	name string, args *BucketWebsiteConfigurationArgs, opts ...pulumi.ResourceOption) (*BucketWebsiteConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("aws:s3/bucketWebsiteConfigurationV2:BucketWebsiteConfigurationV2"),
		},
		{
			Type: pulumi.String("aws:s3/bucketWebsiteConfigurationV2:BucketWebsiteConfigurationV2"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BucketWebsiteConfiguration
	err := ctx.RegisterResource("aws:s3/bucketWebsiteConfiguration:BucketWebsiteConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucketWebsiteConfiguration gets an existing BucketWebsiteConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucketWebsiteConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketWebsiteConfigurationState, opts ...pulumi.ResourceOption) (*BucketWebsiteConfiguration, error) {
	var resource BucketWebsiteConfiguration
	err := ctx.ReadResource("aws:s3/bucketWebsiteConfiguration:BucketWebsiteConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BucketWebsiteConfiguration resources.
type bucketWebsiteConfigurationState struct {
	// Name of the bucket.
	Bucket *string `pulumi:"bucket"`
	// Name of the error document for the website. See below.
	ErrorDocument *BucketWebsiteConfigurationErrorDocument `pulumi:"errorDocument"`
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner *string `pulumi:"expectedBucketOwner"`
	// Name of the index document for the website. See below.
	IndexDocument *BucketWebsiteConfigurationIndexDocument `pulumi:"indexDocument"`
	// Redirect behavior for every request to this bucket's website endpoint. See below. Conflicts with `errorDocument`, `indexDocument`, and `routingRule`.
	RedirectAllRequestsTo *BucketWebsiteConfigurationRedirectAllRequestsTo `pulumi:"redirectAllRequestsTo"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// JSON array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
	// describing redirect behavior and when redirects are applied. Use this parameter when your routing rules contain empty String values (`""`) as seen in the example above.
	RoutingRuleDetails *string `pulumi:"routingRuleDetails"`
	// List of rules that define when a redirect is applied and the redirect behavior. See below.
	RoutingRules []BucketWebsiteConfigurationRoutingRule `pulumi:"routingRules"`
	// Domain of the website endpoint. This is used to create Route 53 alias records.
	WebsiteDomain *string `pulumi:"websiteDomain"`
	// Website endpoint.
	WebsiteEndpoint *string `pulumi:"websiteEndpoint"`
}

type BucketWebsiteConfigurationState struct {
	// Name of the bucket.
	Bucket pulumi.StringPtrInput
	// Name of the error document for the website. See below.
	ErrorDocument BucketWebsiteConfigurationErrorDocumentPtrInput
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner pulumi.StringPtrInput
	// Name of the index document for the website. See below.
	IndexDocument BucketWebsiteConfigurationIndexDocumentPtrInput
	// Redirect behavior for every request to this bucket's website endpoint. See below. Conflicts with `errorDocument`, `indexDocument`, and `routingRule`.
	RedirectAllRequestsTo BucketWebsiteConfigurationRedirectAllRequestsToPtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// JSON array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
	// describing redirect behavior and when redirects are applied. Use this parameter when your routing rules contain empty String values (`""`) as seen in the example above.
	RoutingRuleDetails pulumi.StringPtrInput
	// List of rules that define when a redirect is applied and the redirect behavior. See below.
	RoutingRules BucketWebsiteConfigurationRoutingRuleArrayInput
	// Domain of the website endpoint. This is used to create Route 53 alias records.
	WebsiteDomain pulumi.StringPtrInput
	// Website endpoint.
	WebsiteEndpoint pulumi.StringPtrInput
}

func (BucketWebsiteConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketWebsiteConfigurationState)(nil)).Elem()
}

type bucketWebsiteConfigurationArgs struct {
	// Name of the bucket.
	Bucket string `pulumi:"bucket"`
	// Name of the error document for the website. See below.
	ErrorDocument *BucketWebsiteConfigurationErrorDocument `pulumi:"errorDocument"`
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner *string `pulumi:"expectedBucketOwner"`
	// Name of the index document for the website. See below.
	IndexDocument *BucketWebsiteConfigurationIndexDocument `pulumi:"indexDocument"`
	// Redirect behavior for every request to this bucket's website endpoint. See below. Conflicts with `errorDocument`, `indexDocument`, and `routingRule`.
	RedirectAllRequestsTo *BucketWebsiteConfigurationRedirectAllRequestsTo `pulumi:"redirectAllRequestsTo"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// JSON array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
	// describing redirect behavior and when redirects are applied. Use this parameter when your routing rules contain empty String values (`""`) as seen in the example above.
	RoutingRuleDetails *string `pulumi:"routingRuleDetails"`
	// List of rules that define when a redirect is applied and the redirect behavior. See below.
	RoutingRules []BucketWebsiteConfigurationRoutingRule `pulumi:"routingRules"`
}

// The set of arguments for constructing a BucketWebsiteConfiguration resource.
type BucketWebsiteConfigurationArgs struct {
	// Name of the bucket.
	Bucket pulumi.StringInput
	// Name of the error document for the website. See below.
	ErrorDocument BucketWebsiteConfigurationErrorDocumentPtrInput
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner pulumi.StringPtrInput
	// Name of the index document for the website. See below.
	IndexDocument BucketWebsiteConfigurationIndexDocumentPtrInput
	// Redirect behavior for every request to this bucket's website endpoint. See below. Conflicts with `errorDocument`, `indexDocument`, and `routingRule`.
	RedirectAllRequestsTo BucketWebsiteConfigurationRedirectAllRequestsToPtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// JSON array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
	// describing redirect behavior and when redirects are applied. Use this parameter when your routing rules contain empty String values (`""`) as seen in the example above.
	RoutingRuleDetails pulumi.StringPtrInput
	// List of rules that define when a redirect is applied and the redirect behavior. See below.
	RoutingRules BucketWebsiteConfigurationRoutingRuleArrayInput
}

func (BucketWebsiteConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketWebsiteConfigurationArgs)(nil)).Elem()
}

type BucketWebsiteConfigurationInput interface {
	pulumi.Input

	ToBucketWebsiteConfigurationOutput() BucketWebsiteConfigurationOutput
	ToBucketWebsiteConfigurationOutputWithContext(ctx context.Context) BucketWebsiteConfigurationOutput
}

func (*BucketWebsiteConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketWebsiteConfiguration)(nil)).Elem()
}

func (i *BucketWebsiteConfiguration) ToBucketWebsiteConfigurationOutput() BucketWebsiteConfigurationOutput {
	return i.ToBucketWebsiteConfigurationOutputWithContext(context.Background())
}

func (i *BucketWebsiteConfiguration) ToBucketWebsiteConfigurationOutputWithContext(ctx context.Context) BucketWebsiteConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsiteConfigurationOutput)
}

// BucketWebsiteConfigurationArrayInput is an input type that accepts BucketWebsiteConfigurationArray and BucketWebsiteConfigurationArrayOutput values.
// You can construct a concrete instance of `BucketWebsiteConfigurationArrayInput` via:
//
//	BucketWebsiteConfigurationArray{ BucketWebsiteConfigurationArgs{...} }
type BucketWebsiteConfigurationArrayInput interface {
	pulumi.Input

	ToBucketWebsiteConfigurationArrayOutput() BucketWebsiteConfigurationArrayOutput
	ToBucketWebsiteConfigurationArrayOutputWithContext(context.Context) BucketWebsiteConfigurationArrayOutput
}

type BucketWebsiteConfigurationArray []BucketWebsiteConfigurationInput

func (BucketWebsiteConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BucketWebsiteConfiguration)(nil)).Elem()
}

func (i BucketWebsiteConfigurationArray) ToBucketWebsiteConfigurationArrayOutput() BucketWebsiteConfigurationArrayOutput {
	return i.ToBucketWebsiteConfigurationArrayOutputWithContext(context.Background())
}

func (i BucketWebsiteConfigurationArray) ToBucketWebsiteConfigurationArrayOutputWithContext(ctx context.Context) BucketWebsiteConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsiteConfigurationArrayOutput)
}

// BucketWebsiteConfigurationMapInput is an input type that accepts BucketWebsiteConfigurationMap and BucketWebsiteConfigurationMapOutput values.
// You can construct a concrete instance of `BucketWebsiteConfigurationMapInput` via:
//
//	BucketWebsiteConfigurationMap{ "key": BucketWebsiteConfigurationArgs{...} }
type BucketWebsiteConfigurationMapInput interface {
	pulumi.Input

	ToBucketWebsiteConfigurationMapOutput() BucketWebsiteConfigurationMapOutput
	ToBucketWebsiteConfigurationMapOutputWithContext(context.Context) BucketWebsiteConfigurationMapOutput
}

type BucketWebsiteConfigurationMap map[string]BucketWebsiteConfigurationInput

func (BucketWebsiteConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BucketWebsiteConfiguration)(nil)).Elem()
}

func (i BucketWebsiteConfigurationMap) ToBucketWebsiteConfigurationMapOutput() BucketWebsiteConfigurationMapOutput {
	return i.ToBucketWebsiteConfigurationMapOutputWithContext(context.Background())
}

func (i BucketWebsiteConfigurationMap) ToBucketWebsiteConfigurationMapOutputWithContext(ctx context.Context) BucketWebsiteConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsiteConfigurationMapOutput)
}

type BucketWebsiteConfigurationOutput struct{ *pulumi.OutputState }

func (BucketWebsiteConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketWebsiteConfiguration)(nil)).Elem()
}

func (o BucketWebsiteConfigurationOutput) ToBucketWebsiteConfigurationOutput() BucketWebsiteConfigurationOutput {
	return o
}

func (o BucketWebsiteConfigurationOutput) ToBucketWebsiteConfigurationOutputWithContext(ctx context.Context) BucketWebsiteConfigurationOutput {
	return o
}

// Name of the bucket.
func (o BucketWebsiteConfigurationOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v *BucketWebsiteConfiguration) pulumi.StringOutput { return v.Bucket }).(pulumi.StringOutput)
}

// Name of the error document for the website. See below.
func (o BucketWebsiteConfigurationOutput) ErrorDocument() BucketWebsiteConfigurationErrorDocumentPtrOutput {
	return o.ApplyT(func(v *BucketWebsiteConfiguration) BucketWebsiteConfigurationErrorDocumentPtrOutput {
		return v.ErrorDocument
	}).(BucketWebsiteConfigurationErrorDocumentPtrOutput)
}

// Account ID of the expected bucket owner.
func (o BucketWebsiteConfigurationOutput) ExpectedBucketOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketWebsiteConfiguration) pulumi.StringPtrOutput { return v.ExpectedBucketOwner }).(pulumi.StringPtrOutput)
}

// Name of the index document for the website. See below.
func (o BucketWebsiteConfigurationOutput) IndexDocument() BucketWebsiteConfigurationIndexDocumentPtrOutput {
	return o.ApplyT(func(v *BucketWebsiteConfiguration) BucketWebsiteConfigurationIndexDocumentPtrOutput {
		return v.IndexDocument
	}).(BucketWebsiteConfigurationIndexDocumentPtrOutput)
}

// Redirect behavior for every request to this bucket's website endpoint. See below. Conflicts with `errorDocument`, `indexDocument`, and `routingRule`.
func (o BucketWebsiteConfigurationOutput) RedirectAllRequestsTo() BucketWebsiteConfigurationRedirectAllRequestsToPtrOutput {
	return o.ApplyT(func(v *BucketWebsiteConfiguration) BucketWebsiteConfigurationRedirectAllRequestsToPtrOutput {
		return v.RedirectAllRequestsTo
	}).(BucketWebsiteConfigurationRedirectAllRequestsToPtrOutput)
}

// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
func (o BucketWebsiteConfigurationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *BucketWebsiteConfiguration) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// JSON array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
// describing redirect behavior and when redirects are applied. Use this parameter when your routing rules contain empty String values (`""`) as seen in the example above.
func (o BucketWebsiteConfigurationOutput) RoutingRuleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *BucketWebsiteConfiguration) pulumi.StringOutput { return v.RoutingRuleDetails }).(pulumi.StringOutput)
}

// List of rules that define when a redirect is applied and the redirect behavior. See below.
func (o BucketWebsiteConfigurationOutput) RoutingRules() BucketWebsiteConfigurationRoutingRuleArrayOutput {
	return o.ApplyT(func(v *BucketWebsiteConfiguration) BucketWebsiteConfigurationRoutingRuleArrayOutput {
		return v.RoutingRules
	}).(BucketWebsiteConfigurationRoutingRuleArrayOutput)
}

// Domain of the website endpoint. This is used to create Route 53 alias records.
func (o BucketWebsiteConfigurationOutput) WebsiteDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *BucketWebsiteConfiguration) pulumi.StringOutput { return v.WebsiteDomain }).(pulumi.StringOutput)
}

// Website endpoint.
func (o BucketWebsiteConfigurationOutput) WebsiteEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *BucketWebsiteConfiguration) pulumi.StringOutput { return v.WebsiteEndpoint }).(pulumi.StringOutput)
}

type BucketWebsiteConfigurationArrayOutput struct{ *pulumi.OutputState }

func (BucketWebsiteConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BucketWebsiteConfiguration)(nil)).Elem()
}

func (o BucketWebsiteConfigurationArrayOutput) ToBucketWebsiteConfigurationArrayOutput() BucketWebsiteConfigurationArrayOutput {
	return o
}

func (o BucketWebsiteConfigurationArrayOutput) ToBucketWebsiteConfigurationArrayOutputWithContext(ctx context.Context) BucketWebsiteConfigurationArrayOutput {
	return o
}

func (o BucketWebsiteConfigurationArrayOutput) Index(i pulumi.IntInput) BucketWebsiteConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BucketWebsiteConfiguration {
		return vs[0].([]*BucketWebsiteConfiguration)[vs[1].(int)]
	}).(BucketWebsiteConfigurationOutput)
}

type BucketWebsiteConfigurationMapOutput struct{ *pulumi.OutputState }

func (BucketWebsiteConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BucketWebsiteConfiguration)(nil)).Elem()
}

func (o BucketWebsiteConfigurationMapOutput) ToBucketWebsiteConfigurationMapOutput() BucketWebsiteConfigurationMapOutput {
	return o
}

func (o BucketWebsiteConfigurationMapOutput) ToBucketWebsiteConfigurationMapOutputWithContext(ctx context.Context) BucketWebsiteConfigurationMapOutput {
	return o
}

func (o BucketWebsiteConfigurationMapOutput) MapIndex(k pulumi.StringInput) BucketWebsiteConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BucketWebsiteConfiguration {
		return vs[0].(map[string]*BucketWebsiteConfiguration)[vs[1].(string)]
	}).(BucketWebsiteConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BucketWebsiteConfigurationInput)(nil)).Elem(), &BucketWebsiteConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketWebsiteConfigurationArrayInput)(nil)).Elem(), BucketWebsiteConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketWebsiteConfigurationMapInput)(nil)).Elem(), BucketWebsiteConfigurationMap{})
	pulumi.RegisterOutputType(BucketWebsiteConfigurationOutput{})
	pulumi.RegisterOutputType(BucketWebsiteConfigurationArrayOutput{})
	pulumi.RegisterOutputType(BucketWebsiteConfigurationMapOutput{})
}
