// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package s3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type BucketCorsRule struct {
	// Specifies which headers are allowed.
	AllowedHeaders []string `pulumi:"allowedHeaders"`
	// Specifies which methods are allowed. Can be `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.
	AllowedMethods []string `pulumi:"allowedMethods"`
	// Specifies which origins are allowed.
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// Specifies expose header in the response.
	ExposeHeaders []string `pulumi:"exposeHeaders"`
	// Specifies time in seconds that browser can cache the response for a preflight request.
	MaxAgeSeconds *int `pulumi:"maxAgeSeconds"`
}

type BucketCorsRuleInput interface {
	pulumi.Input

	ToBucketCorsRuleOutput() BucketCorsRuleOutput
	ToBucketCorsRuleOutputWithContext(context.Context) BucketCorsRuleOutput
}

type BucketCorsRuleArgs struct {
	// Specifies which headers are allowed.
	AllowedHeaders pulumi.StringArrayInput `pulumi:"allowedHeaders"`
	// Specifies which methods are allowed. Can be `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.
	AllowedMethods pulumi.StringArrayInput `pulumi:"allowedMethods"`
	// Specifies which origins are allowed.
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// Specifies expose header in the response.
	ExposeHeaders pulumi.StringArrayInput `pulumi:"exposeHeaders"`
	// Specifies time in seconds that browser can cache the response for a preflight request.
	MaxAgeSeconds pulumi.IntPtrInput `pulumi:"maxAgeSeconds"`
}

func (BucketCorsRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketCorsRule)(nil)).Elem()
}

func (i BucketCorsRuleArgs) ToBucketCorsRuleOutput() BucketCorsRuleOutput {
	return i.ToBucketCorsRuleOutputWithContext(context.Background())
}

func (i BucketCorsRuleArgs) ToBucketCorsRuleOutputWithContext(ctx context.Context) BucketCorsRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketCorsRuleOutput)
}

type BucketCorsRuleArrayInput interface {
	pulumi.Input

	ToBucketCorsRuleArrayOutput() BucketCorsRuleArrayOutput
	ToBucketCorsRuleArrayOutputWithContext(context.Context) BucketCorsRuleArrayOutput
}

type BucketCorsRuleArray []BucketCorsRuleInput

func (BucketCorsRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketCorsRule)(nil)).Elem()
}

func (i BucketCorsRuleArray) ToBucketCorsRuleArrayOutput() BucketCorsRuleArrayOutput {
	return i.ToBucketCorsRuleArrayOutputWithContext(context.Background())
}

func (i BucketCorsRuleArray) ToBucketCorsRuleArrayOutputWithContext(ctx context.Context) BucketCorsRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketCorsRuleArrayOutput)
}

type BucketCorsRuleOutput struct { *pulumi.OutputState }

func (BucketCorsRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketCorsRule)(nil)).Elem()
}

func (o BucketCorsRuleOutput) ToBucketCorsRuleOutput() BucketCorsRuleOutput {
	return o
}

func (o BucketCorsRuleOutput) ToBucketCorsRuleOutputWithContext(ctx context.Context) BucketCorsRuleOutput {
	return o
}

// Specifies which headers are allowed.
func (o BucketCorsRuleOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func (v BucketCorsRule) []string { return v.AllowedHeaders }).(pulumi.StringArrayOutput)
}

// Specifies which methods are allowed. Can be `GET`, `PUT`, `POST`, `DELETE` or `HEAD`.
func (o BucketCorsRuleOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func (v BucketCorsRule) []string { return v.AllowedMethods }).(pulumi.StringArrayOutput)
}

// Specifies which origins are allowed.
func (o BucketCorsRuleOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func (v BucketCorsRule) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// Specifies expose header in the response.
func (o BucketCorsRuleOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func (v BucketCorsRule) []string { return v.ExposeHeaders }).(pulumi.StringArrayOutput)
}

// Specifies time in seconds that browser can cache the response for a preflight request.
func (o BucketCorsRuleOutput) MaxAgeSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func (v BucketCorsRule) *int { return v.MaxAgeSeconds }).(pulumi.IntPtrOutput)
}

type BucketCorsRuleArrayOutput struct { *pulumi.OutputState}

func (BucketCorsRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketCorsRule)(nil)).Elem()
}

func (o BucketCorsRuleArrayOutput) ToBucketCorsRuleArrayOutput() BucketCorsRuleArrayOutput {
	return o
}

func (o BucketCorsRuleArrayOutput) ToBucketCorsRuleArrayOutputWithContext(ctx context.Context) BucketCorsRuleArrayOutput {
	return o
}

func (o BucketCorsRuleArrayOutput) Index(i pulumi.IntInput) BucketCorsRuleOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) BucketCorsRule {
		return vs[0].([]BucketCorsRule)[vs[1].(int)]
	}).(BucketCorsRuleOutput)
}

type BucketLifecycleRule struct {
	// Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
	AbortIncompleteMultipartUploadDays *int `pulumi:"abortIncompleteMultipartUploadDays"`
	// Boolean which indicates if this criteria is enabled.
	Enabled bool `pulumi:"enabled"`
	// Specifies a period in the object's expire (documented below).
	Expiration *BucketLifecycleRuleExpiration `pulumi:"expiration"`
	// Unique identifier for the rule.
	Id *string `pulumi:"id"`
	// Specifies when noncurrent object versions expire (documented below).
	NoncurrentVersionExpiration *BucketLifecycleRuleNoncurrentVersionExpiration `pulumi:"noncurrentVersionExpiration"`
	// Specifies when noncurrent object versions transitions (documented below).
	NoncurrentVersionTransitions []BucketLifecycleRuleNoncurrentVersionTransition `pulumi:"noncurrentVersionTransitions"`
	// Object keyname prefix that identifies subset of objects to which the rule applies.
	Prefix *string `pulumi:"prefix"`
	// A mapping of tags that identifies subset of objects to which the rule applies.
	// The rule applies only to objects having all the tags in its tagset.
	Tags map[string]interface{} `pulumi:"tags"`
	// Specifies a period in the object's transitions (documented below).
	Transitions []BucketLifecycleRuleTransition `pulumi:"transitions"`
}

type BucketLifecycleRuleInput interface {
	pulumi.Input

	ToBucketLifecycleRuleOutput() BucketLifecycleRuleOutput
	ToBucketLifecycleRuleOutputWithContext(context.Context) BucketLifecycleRuleOutput
}

type BucketLifecycleRuleArgs struct {
	// Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
	AbortIncompleteMultipartUploadDays pulumi.IntPtrInput `pulumi:"abortIncompleteMultipartUploadDays"`
	// Boolean which indicates if this criteria is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Specifies a period in the object's expire (documented below).
	Expiration BucketLifecycleRuleExpirationPtrInput `pulumi:"expiration"`
	// Unique identifier for the rule.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies when noncurrent object versions expire (documented below).
	NoncurrentVersionExpiration BucketLifecycleRuleNoncurrentVersionExpirationPtrInput `pulumi:"noncurrentVersionExpiration"`
	// Specifies when noncurrent object versions transitions (documented below).
	NoncurrentVersionTransitions BucketLifecycleRuleNoncurrentVersionTransitionArrayInput `pulumi:"noncurrentVersionTransitions"`
	// Object keyname prefix that identifies subset of objects to which the rule applies.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// A mapping of tags that identifies subset of objects to which the rule applies.
	// The rule applies only to objects having all the tags in its tagset.
	Tags pulumi.MapInput `pulumi:"tags"`
	// Specifies a period in the object's transitions (documented below).
	Transitions BucketLifecycleRuleTransitionArrayInput `pulumi:"transitions"`
}

func (BucketLifecycleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRule)(nil)).Elem()
}

func (i BucketLifecycleRuleArgs) ToBucketLifecycleRuleOutput() BucketLifecycleRuleOutput {
	return i.ToBucketLifecycleRuleOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleArgs) ToBucketLifecycleRuleOutputWithContext(ctx context.Context) BucketLifecycleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleOutput)
}

type BucketLifecycleRuleArrayInput interface {
	pulumi.Input

	ToBucketLifecycleRuleArrayOutput() BucketLifecycleRuleArrayOutput
	ToBucketLifecycleRuleArrayOutputWithContext(context.Context) BucketLifecycleRuleArrayOutput
}

type BucketLifecycleRuleArray []BucketLifecycleRuleInput

func (BucketLifecycleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRule)(nil)).Elem()
}

func (i BucketLifecycleRuleArray) ToBucketLifecycleRuleArrayOutput() BucketLifecycleRuleArrayOutput {
	return i.ToBucketLifecycleRuleArrayOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleArray) ToBucketLifecycleRuleArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleArrayOutput)
}

type BucketLifecycleRuleOutput struct { *pulumi.OutputState }

func (BucketLifecycleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRule)(nil)).Elem()
}

func (o BucketLifecycleRuleOutput) ToBucketLifecycleRuleOutput() BucketLifecycleRuleOutput {
	return o
}

func (o BucketLifecycleRuleOutput) ToBucketLifecycleRuleOutputWithContext(ctx context.Context) BucketLifecycleRuleOutput {
	return o
}

// Specifies the number of days after initiating a multipart upload when the multipart upload must be completed.
func (o BucketLifecycleRuleOutput) AbortIncompleteMultipartUploadDays() pulumi.IntPtrOutput {
	return o.ApplyT(func (v BucketLifecycleRule) *int { return v.AbortIncompleteMultipartUploadDays }).(pulumi.IntPtrOutput)
}

// Boolean which indicates if this criteria is enabled.
func (o BucketLifecycleRuleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func (v BucketLifecycleRule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Specifies a period in the object's expire (documented below).
func (o BucketLifecycleRuleOutput) Expiration() BucketLifecycleRuleExpirationPtrOutput {
	return o.ApplyT(func (v BucketLifecycleRule) *BucketLifecycleRuleExpiration { return v.Expiration }).(BucketLifecycleRuleExpirationPtrOutput)
}

// Unique identifier for the rule.
func (o BucketLifecycleRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketLifecycleRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies when noncurrent object versions expire (documented below).
func (o BucketLifecycleRuleOutput) NoncurrentVersionExpiration() BucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return o.ApplyT(func (v BucketLifecycleRule) *BucketLifecycleRuleNoncurrentVersionExpiration { return v.NoncurrentVersionExpiration }).(BucketLifecycleRuleNoncurrentVersionExpirationPtrOutput)
}

// Specifies when noncurrent object versions transitions (documented below).
func (o BucketLifecycleRuleOutput) NoncurrentVersionTransitions() BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput {
	return o.ApplyT(func (v BucketLifecycleRule) []BucketLifecycleRuleNoncurrentVersionTransition { return v.NoncurrentVersionTransitions }).(BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput)
}

// Object keyname prefix that identifies subset of objects to which the rule applies.
func (o BucketLifecycleRuleOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketLifecycleRule) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// A mapping of tags that identifies subset of objects to which the rule applies.
// The rule applies only to objects having all the tags in its tagset.
func (o BucketLifecycleRuleOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func (v BucketLifecycleRule) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

// Specifies a period in the object's transitions (documented below).
func (o BucketLifecycleRuleOutput) Transitions() BucketLifecycleRuleTransitionArrayOutput {
	return o.ApplyT(func (v BucketLifecycleRule) []BucketLifecycleRuleTransition { return v.Transitions }).(BucketLifecycleRuleTransitionArrayOutput)
}

type BucketLifecycleRuleArrayOutput struct { *pulumi.OutputState}

func (BucketLifecycleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRule)(nil)).Elem()
}

func (o BucketLifecycleRuleArrayOutput) ToBucketLifecycleRuleArrayOutput() BucketLifecycleRuleArrayOutput {
	return o
}

func (o BucketLifecycleRuleArrayOutput) ToBucketLifecycleRuleArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleArrayOutput {
	return o
}

func (o BucketLifecycleRuleArrayOutput) Index(i pulumi.IntInput) BucketLifecycleRuleOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) BucketLifecycleRule {
		return vs[0].([]BucketLifecycleRule)[vs[1].(int)]
	}).(BucketLifecycleRuleOutput)
}

type BucketLifecycleRuleExpiration struct {
	// Specifies the date after which you want the corresponding action to take effect.
	Date *string `pulumi:"date"`
	// The number of days that you want to specify for the default retention period.
	Days *int `pulumi:"days"`
	// On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Amazon S3 to delete expired object delete markers.
	ExpiredObjectDeleteMarker *bool `pulumi:"expiredObjectDeleteMarker"`
}

type BucketLifecycleRuleExpirationInput interface {
	pulumi.Input

	ToBucketLifecycleRuleExpirationOutput() BucketLifecycleRuleExpirationOutput
	ToBucketLifecycleRuleExpirationOutputWithContext(context.Context) BucketLifecycleRuleExpirationOutput
}

type BucketLifecycleRuleExpirationArgs struct {
	// Specifies the date after which you want the corresponding action to take effect.
	Date pulumi.StringPtrInput `pulumi:"date"`
	// The number of days that you want to specify for the default retention period.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Amazon S3 to delete expired object delete markers.
	ExpiredObjectDeleteMarker pulumi.BoolPtrInput `pulumi:"expiredObjectDeleteMarker"`
}

func (BucketLifecycleRuleExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleExpiration)(nil)).Elem()
}

func (i BucketLifecycleRuleExpirationArgs) ToBucketLifecycleRuleExpirationOutput() BucketLifecycleRuleExpirationOutput {
	return i.ToBucketLifecycleRuleExpirationOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleExpirationArgs) ToBucketLifecycleRuleExpirationOutputWithContext(ctx context.Context) BucketLifecycleRuleExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleExpirationOutput)
}

func (i BucketLifecycleRuleExpirationArgs) ToBucketLifecycleRuleExpirationPtrOutput() BucketLifecycleRuleExpirationPtrOutput {
	return i.ToBucketLifecycleRuleExpirationPtrOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleExpirationArgs) ToBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) BucketLifecycleRuleExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleExpirationOutput).ToBucketLifecycleRuleExpirationPtrOutputWithContext(ctx)
}

type BucketLifecycleRuleExpirationPtrInput interface {
	pulumi.Input

	ToBucketLifecycleRuleExpirationPtrOutput() BucketLifecycleRuleExpirationPtrOutput
	ToBucketLifecycleRuleExpirationPtrOutputWithContext(context.Context) BucketLifecycleRuleExpirationPtrOutput
}

type bucketLifecycleRuleExpirationPtrType BucketLifecycleRuleExpirationArgs

func BucketLifecycleRuleExpirationPtr(v *BucketLifecycleRuleExpirationArgs) BucketLifecycleRuleExpirationPtrInput {	return (*bucketLifecycleRuleExpirationPtrType)(v)
}

func (*bucketLifecycleRuleExpirationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleRuleExpiration)(nil)).Elem()
}

func (i *bucketLifecycleRuleExpirationPtrType) ToBucketLifecycleRuleExpirationPtrOutput() BucketLifecycleRuleExpirationPtrOutput {
	return i.ToBucketLifecycleRuleExpirationPtrOutputWithContext(context.Background())
}

func (i *bucketLifecycleRuleExpirationPtrType) ToBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) BucketLifecycleRuleExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleExpirationPtrOutput)
}

type BucketLifecycleRuleExpirationOutput struct { *pulumi.OutputState }

func (BucketLifecycleRuleExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleExpiration)(nil)).Elem()
}

func (o BucketLifecycleRuleExpirationOutput) ToBucketLifecycleRuleExpirationOutput() BucketLifecycleRuleExpirationOutput {
	return o
}

func (o BucketLifecycleRuleExpirationOutput) ToBucketLifecycleRuleExpirationOutputWithContext(ctx context.Context) BucketLifecycleRuleExpirationOutput {
	return o
}

func (o BucketLifecycleRuleExpirationOutput) ToBucketLifecycleRuleExpirationPtrOutput() BucketLifecycleRuleExpirationPtrOutput {
	return o.ToBucketLifecycleRuleExpirationPtrOutputWithContext(context.Background())
}

func (o BucketLifecycleRuleExpirationOutput) ToBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) BucketLifecycleRuleExpirationPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleExpiration) *BucketLifecycleRuleExpiration {
		return &v
	}).(BucketLifecycleRuleExpirationPtrOutput)
}
// Specifies the date after which you want the corresponding action to take effect.
func (o BucketLifecycleRuleExpirationOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketLifecycleRuleExpiration) *string { return v.Date }).(pulumi.StringPtrOutput)
}

// The number of days that you want to specify for the default retention period.
func (o BucketLifecycleRuleExpirationOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func (v BucketLifecycleRuleExpiration) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Amazon S3 to delete expired object delete markers.
func (o BucketLifecycleRuleExpirationOutput) ExpiredObjectDeleteMarker() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v BucketLifecycleRuleExpiration) *bool { return v.ExpiredObjectDeleteMarker }).(pulumi.BoolPtrOutput)
}

type BucketLifecycleRuleExpirationPtrOutput struct { *pulumi.OutputState}

func (BucketLifecycleRuleExpirationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleRuleExpiration)(nil)).Elem()
}

func (o BucketLifecycleRuleExpirationPtrOutput) ToBucketLifecycleRuleExpirationPtrOutput() BucketLifecycleRuleExpirationPtrOutput {
	return o
}

func (o BucketLifecycleRuleExpirationPtrOutput) ToBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) BucketLifecycleRuleExpirationPtrOutput {
	return o
}

func (o BucketLifecycleRuleExpirationPtrOutput) Elem() BucketLifecycleRuleExpirationOutput {
	return o.ApplyT(func (v *BucketLifecycleRuleExpiration) BucketLifecycleRuleExpiration { return *v }).(BucketLifecycleRuleExpirationOutput)
}

// Specifies the date after which you want the corresponding action to take effect.
func (o BucketLifecycleRuleExpirationPtrOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketLifecycleRuleExpiration) *string { return v.Date }).(pulumi.StringPtrOutput)
}

// The number of days that you want to specify for the default retention period.
func (o BucketLifecycleRuleExpirationPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func (v BucketLifecycleRuleExpiration) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// On a versioned bucket (versioning-enabled or versioning-suspended bucket), you can add this element in the lifecycle configuration to direct Amazon S3 to delete expired object delete markers.
func (o BucketLifecycleRuleExpirationPtrOutput) ExpiredObjectDeleteMarker() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v BucketLifecycleRuleExpiration) *bool { return v.ExpiredObjectDeleteMarker }).(pulumi.BoolPtrOutput)
}

type BucketLifecycleRuleNoncurrentVersionExpiration struct {
	// The number of days that you want to specify for the default retention period.
	Days *int `pulumi:"days"`
}

type BucketLifecycleRuleNoncurrentVersionExpirationInput interface {
	pulumi.Input

	ToBucketLifecycleRuleNoncurrentVersionExpirationOutput() BucketLifecycleRuleNoncurrentVersionExpirationOutput
	ToBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(context.Context) BucketLifecycleRuleNoncurrentVersionExpirationOutput
}

type BucketLifecycleRuleNoncurrentVersionExpirationArgs struct {
	// The number of days that you want to specify for the default retention period.
	Days pulumi.IntPtrInput `pulumi:"days"`
}

func (BucketLifecycleRuleNoncurrentVersionExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (i BucketLifecycleRuleNoncurrentVersionExpirationArgs) ToBucketLifecycleRuleNoncurrentVersionExpirationOutput() BucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return i.ToBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleNoncurrentVersionExpirationArgs) ToBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(ctx context.Context) BucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleNoncurrentVersionExpirationOutput)
}

func (i BucketLifecycleRuleNoncurrentVersionExpirationArgs) ToBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput() BucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return i.ToBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleNoncurrentVersionExpirationArgs) ToBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) BucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleNoncurrentVersionExpirationOutput).ToBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(ctx)
}

type BucketLifecycleRuleNoncurrentVersionExpirationPtrInput interface {
	pulumi.Input

	ToBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput() BucketLifecycleRuleNoncurrentVersionExpirationPtrOutput
	ToBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(context.Context) BucketLifecycleRuleNoncurrentVersionExpirationPtrOutput
}

type bucketLifecycleRuleNoncurrentVersionExpirationPtrType BucketLifecycleRuleNoncurrentVersionExpirationArgs

func BucketLifecycleRuleNoncurrentVersionExpirationPtr(v *BucketLifecycleRuleNoncurrentVersionExpirationArgs) BucketLifecycleRuleNoncurrentVersionExpirationPtrInput {	return (*bucketLifecycleRuleNoncurrentVersionExpirationPtrType)(v)
}

func (*bucketLifecycleRuleNoncurrentVersionExpirationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (i *bucketLifecycleRuleNoncurrentVersionExpirationPtrType) ToBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput() BucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return i.ToBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(context.Background())
}

func (i *bucketLifecycleRuleNoncurrentVersionExpirationPtrType) ToBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) BucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleNoncurrentVersionExpirationPtrOutput)
}

type BucketLifecycleRuleNoncurrentVersionExpirationOutput struct { *pulumi.OutputState }

func (BucketLifecycleRuleNoncurrentVersionExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (o BucketLifecycleRuleNoncurrentVersionExpirationOutput) ToBucketLifecycleRuleNoncurrentVersionExpirationOutput() BucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return o
}

func (o BucketLifecycleRuleNoncurrentVersionExpirationOutput) ToBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(ctx context.Context) BucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return o
}

func (o BucketLifecycleRuleNoncurrentVersionExpirationOutput) ToBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput() BucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return o.ToBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(context.Background())
}

func (o BucketLifecycleRuleNoncurrentVersionExpirationOutput) ToBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) BucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return o.ApplyT(func(v BucketLifecycleRuleNoncurrentVersionExpiration) *BucketLifecycleRuleNoncurrentVersionExpiration {
		return &v
	}).(BucketLifecycleRuleNoncurrentVersionExpirationPtrOutput)
}
// The number of days that you want to specify for the default retention period.
func (o BucketLifecycleRuleNoncurrentVersionExpirationOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func (v BucketLifecycleRuleNoncurrentVersionExpiration) *int { return v.Days }).(pulumi.IntPtrOutput)
}

type BucketLifecycleRuleNoncurrentVersionExpirationPtrOutput struct { *pulumi.OutputState}

func (BucketLifecycleRuleNoncurrentVersionExpirationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (o BucketLifecycleRuleNoncurrentVersionExpirationPtrOutput) ToBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput() BucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return o
}

func (o BucketLifecycleRuleNoncurrentVersionExpirationPtrOutput) ToBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) BucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return o
}

func (o BucketLifecycleRuleNoncurrentVersionExpirationPtrOutput) Elem() BucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return o.ApplyT(func (v *BucketLifecycleRuleNoncurrentVersionExpiration) BucketLifecycleRuleNoncurrentVersionExpiration { return *v }).(BucketLifecycleRuleNoncurrentVersionExpirationOutput)
}

// The number of days that you want to specify for the default retention period.
func (o BucketLifecycleRuleNoncurrentVersionExpirationPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func (v BucketLifecycleRuleNoncurrentVersionExpiration) *int { return v.Days }).(pulumi.IntPtrOutput)
}

type BucketLifecycleRuleNoncurrentVersionTransition struct {
	// The number of days that you want to specify for the default retention period.
	Days *int `pulumi:"days"`
	// The class of storage used to store the object. Can be `STANDARD`, `REDUCED_REDUNDANCY`, `STANDARD_IA`, `ONEZONE_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
	StorageClass string `pulumi:"storageClass"`
}

type BucketLifecycleRuleNoncurrentVersionTransitionInput interface {
	pulumi.Input

	ToBucketLifecycleRuleNoncurrentVersionTransitionOutput() BucketLifecycleRuleNoncurrentVersionTransitionOutput
	ToBucketLifecycleRuleNoncurrentVersionTransitionOutputWithContext(context.Context) BucketLifecycleRuleNoncurrentVersionTransitionOutput
}

type BucketLifecycleRuleNoncurrentVersionTransitionArgs struct {
	// The number of days that you want to specify for the default retention period.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// The class of storage used to store the object. Can be `STANDARD`, `REDUCED_REDUNDANCY`, `STANDARD_IA`, `ONEZONE_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
	StorageClass pulumi.StringInput `pulumi:"storageClass"`
}

func (BucketLifecycleRuleNoncurrentVersionTransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleNoncurrentVersionTransition)(nil)).Elem()
}

func (i BucketLifecycleRuleNoncurrentVersionTransitionArgs) ToBucketLifecycleRuleNoncurrentVersionTransitionOutput() BucketLifecycleRuleNoncurrentVersionTransitionOutput {
	return i.ToBucketLifecycleRuleNoncurrentVersionTransitionOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleNoncurrentVersionTransitionArgs) ToBucketLifecycleRuleNoncurrentVersionTransitionOutputWithContext(ctx context.Context) BucketLifecycleRuleNoncurrentVersionTransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleNoncurrentVersionTransitionOutput)
}

type BucketLifecycleRuleNoncurrentVersionTransitionArrayInput interface {
	pulumi.Input

	ToBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput() BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput
	ToBucketLifecycleRuleNoncurrentVersionTransitionArrayOutputWithContext(context.Context) BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput
}

type BucketLifecycleRuleNoncurrentVersionTransitionArray []BucketLifecycleRuleNoncurrentVersionTransitionInput

func (BucketLifecycleRuleNoncurrentVersionTransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRuleNoncurrentVersionTransition)(nil)).Elem()
}

func (i BucketLifecycleRuleNoncurrentVersionTransitionArray) ToBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput() BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput {
	return i.ToBucketLifecycleRuleNoncurrentVersionTransitionArrayOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleNoncurrentVersionTransitionArray) ToBucketLifecycleRuleNoncurrentVersionTransitionArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput)
}

type BucketLifecycleRuleNoncurrentVersionTransitionOutput struct { *pulumi.OutputState }

func (BucketLifecycleRuleNoncurrentVersionTransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleNoncurrentVersionTransition)(nil)).Elem()
}

func (o BucketLifecycleRuleNoncurrentVersionTransitionOutput) ToBucketLifecycleRuleNoncurrentVersionTransitionOutput() BucketLifecycleRuleNoncurrentVersionTransitionOutput {
	return o
}

func (o BucketLifecycleRuleNoncurrentVersionTransitionOutput) ToBucketLifecycleRuleNoncurrentVersionTransitionOutputWithContext(ctx context.Context) BucketLifecycleRuleNoncurrentVersionTransitionOutput {
	return o
}

// The number of days that you want to specify for the default retention period.
func (o BucketLifecycleRuleNoncurrentVersionTransitionOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func (v BucketLifecycleRuleNoncurrentVersionTransition) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// The class of storage used to store the object. Can be `STANDARD`, `REDUCED_REDUNDANCY`, `STANDARD_IA`, `ONEZONE_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
func (o BucketLifecycleRuleNoncurrentVersionTransitionOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func (v BucketLifecycleRuleNoncurrentVersionTransition) string { return v.StorageClass }).(pulumi.StringOutput)
}

type BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput struct { *pulumi.OutputState}

func (BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRuleNoncurrentVersionTransition)(nil)).Elem()
}

func (o BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput) ToBucketLifecycleRuleNoncurrentVersionTransitionArrayOutput() BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput {
	return o
}

func (o BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput) ToBucketLifecycleRuleNoncurrentVersionTransitionArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput {
	return o
}

func (o BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput) Index(i pulumi.IntInput) BucketLifecycleRuleNoncurrentVersionTransitionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) BucketLifecycleRuleNoncurrentVersionTransition {
		return vs[0].([]BucketLifecycleRuleNoncurrentVersionTransition)[vs[1].(int)]
	}).(BucketLifecycleRuleNoncurrentVersionTransitionOutput)
}

type BucketLifecycleRuleTransition struct {
	// Specifies the date after which you want the corresponding action to take effect.
	Date *string `pulumi:"date"`
	// The number of days that you want to specify for the default retention period.
	Days *int `pulumi:"days"`
	// The class of storage used to store the object. Can be `STANDARD`, `REDUCED_REDUNDANCY`, `STANDARD_IA`, `ONEZONE_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
	StorageClass string `pulumi:"storageClass"`
}

type BucketLifecycleRuleTransitionInput interface {
	pulumi.Input

	ToBucketLifecycleRuleTransitionOutput() BucketLifecycleRuleTransitionOutput
	ToBucketLifecycleRuleTransitionOutputWithContext(context.Context) BucketLifecycleRuleTransitionOutput
}

type BucketLifecycleRuleTransitionArgs struct {
	// Specifies the date after which you want the corresponding action to take effect.
	Date pulumi.StringPtrInput `pulumi:"date"`
	// The number of days that you want to specify for the default retention period.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// The class of storage used to store the object. Can be `STANDARD`, `REDUCED_REDUNDANCY`, `STANDARD_IA`, `ONEZONE_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
	StorageClass pulumi.StringInput `pulumi:"storageClass"`
}

func (BucketLifecycleRuleTransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleTransition)(nil)).Elem()
}

func (i BucketLifecycleRuleTransitionArgs) ToBucketLifecycleRuleTransitionOutput() BucketLifecycleRuleTransitionOutput {
	return i.ToBucketLifecycleRuleTransitionOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleTransitionArgs) ToBucketLifecycleRuleTransitionOutputWithContext(ctx context.Context) BucketLifecycleRuleTransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleTransitionOutput)
}

type BucketLifecycleRuleTransitionArrayInput interface {
	pulumi.Input

	ToBucketLifecycleRuleTransitionArrayOutput() BucketLifecycleRuleTransitionArrayOutput
	ToBucketLifecycleRuleTransitionArrayOutputWithContext(context.Context) BucketLifecycleRuleTransitionArrayOutput
}

type BucketLifecycleRuleTransitionArray []BucketLifecycleRuleTransitionInput

func (BucketLifecycleRuleTransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRuleTransition)(nil)).Elem()
}

func (i BucketLifecycleRuleTransitionArray) ToBucketLifecycleRuleTransitionArrayOutput() BucketLifecycleRuleTransitionArrayOutput {
	return i.ToBucketLifecycleRuleTransitionArrayOutputWithContext(context.Background())
}

func (i BucketLifecycleRuleTransitionArray) ToBucketLifecycleRuleTransitionArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleTransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleRuleTransitionArrayOutput)
}

type BucketLifecycleRuleTransitionOutput struct { *pulumi.OutputState }

func (BucketLifecycleRuleTransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLifecycleRuleTransition)(nil)).Elem()
}

func (o BucketLifecycleRuleTransitionOutput) ToBucketLifecycleRuleTransitionOutput() BucketLifecycleRuleTransitionOutput {
	return o
}

func (o BucketLifecycleRuleTransitionOutput) ToBucketLifecycleRuleTransitionOutputWithContext(ctx context.Context) BucketLifecycleRuleTransitionOutput {
	return o
}

// Specifies the date after which you want the corresponding action to take effect.
func (o BucketLifecycleRuleTransitionOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketLifecycleRuleTransition) *string { return v.Date }).(pulumi.StringPtrOutput)
}

// The number of days that you want to specify for the default retention period.
func (o BucketLifecycleRuleTransitionOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func (v BucketLifecycleRuleTransition) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// The class of storage used to store the object. Can be `STANDARD`, `REDUCED_REDUNDANCY`, `STANDARD_IA`, `ONEZONE_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
func (o BucketLifecycleRuleTransitionOutput) StorageClass() pulumi.StringOutput {
	return o.ApplyT(func (v BucketLifecycleRuleTransition) string { return v.StorageClass }).(pulumi.StringOutput)
}

type BucketLifecycleRuleTransitionArrayOutput struct { *pulumi.OutputState}

func (BucketLifecycleRuleTransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLifecycleRuleTransition)(nil)).Elem()
}

func (o BucketLifecycleRuleTransitionArrayOutput) ToBucketLifecycleRuleTransitionArrayOutput() BucketLifecycleRuleTransitionArrayOutput {
	return o
}

func (o BucketLifecycleRuleTransitionArrayOutput) ToBucketLifecycleRuleTransitionArrayOutputWithContext(ctx context.Context) BucketLifecycleRuleTransitionArrayOutput {
	return o
}

func (o BucketLifecycleRuleTransitionArrayOutput) Index(i pulumi.IntInput) BucketLifecycleRuleTransitionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) BucketLifecycleRuleTransition {
		return vs[0].([]BucketLifecycleRuleTransition)[vs[1].(int)]
	}).(BucketLifecycleRuleTransitionOutput)
}

type BucketLogging struct {
	// The name of the bucket that will receive the log objects.
	TargetBucket string `pulumi:"targetBucket"`
	// To specify a key prefix for log objects.
	TargetPrefix *string `pulumi:"targetPrefix"`
}

type BucketLoggingInput interface {
	pulumi.Input

	ToBucketLoggingOutput() BucketLoggingOutput
	ToBucketLoggingOutputWithContext(context.Context) BucketLoggingOutput
}

type BucketLoggingArgs struct {
	// The name of the bucket that will receive the log objects.
	TargetBucket pulumi.StringInput `pulumi:"targetBucket"`
	// To specify a key prefix for log objects.
	TargetPrefix pulumi.StringPtrInput `pulumi:"targetPrefix"`
}

func (BucketLoggingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLogging)(nil)).Elem()
}

func (i BucketLoggingArgs) ToBucketLoggingOutput() BucketLoggingOutput {
	return i.ToBucketLoggingOutputWithContext(context.Background())
}

func (i BucketLoggingArgs) ToBucketLoggingOutputWithContext(ctx context.Context) BucketLoggingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLoggingOutput)
}

type BucketLoggingArrayInput interface {
	pulumi.Input

	ToBucketLoggingArrayOutput() BucketLoggingArrayOutput
	ToBucketLoggingArrayOutputWithContext(context.Context) BucketLoggingArrayOutput
}

type BucketLoggingArray []BucketLoggingInput

func (BucketLoggingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLogging)(nil)).Elem()
}

func (i BucketLoggingArray) ToBucketLoggingArrayOutput() BucketLoggingArrayOutput {
	return i.ToBucketLoggingArrayOutputWithContext(context.Background())
}

func (i BucketLoggingArray) ToBucketLoggingArrayOutputWithContext(ctx context.Context) BucketLoggingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLoggingArrayOutput)
}

type BucketLoggingOutput struct { *pulumi.OutputState }

func (BucketLoggingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketLogging)(nil)).Elem()
}

func (o BucketLoggingOutput) ToBucketLoggingOutput() BucketLoggingOutput {
	return o
}

func (o BucketLoggingOutput) ToBucketLoggingOutputWithContext(ctx context.Context) BucketLoggingOutput {
	return o
}

// The name of the bucket that will receive the log objects.
func (o BucketLoggingOutput) TargetBucket() pulumi.StringOutput {
	return o.ApplyT(func (v BucketLogging) string { return v.TargetBucket }).(pulumi.StringOutput)
}

// To specify a key prefix for log objects.
func (o BucketLoggingOutput) TargetPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketLogging) *string { return v.TargetPrefix }).(pulumi.StringPtrOutput)
}

type BucketLoggingArrayOutput struct { *pulumi.OutputState}

func (BucketLoggingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketLogging)(nil)).Elem()
}

func (o BucketLoggingArrayOutput) ToBucketLoggingArrayOutput() BucketLoggingArrayOutput {
	return o
}

func (o BucketLoggingArrayOutput) ToBucketLoggingArrayOutputWithContext(ctx context.Context) BucketLoggingArrayOutput {
	return o
}

func (o BucketLoggingArrayOutput) Index(i pulumi.IntInput) BucketLoggingOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) BucketLogging {
		return vs[0].([]BucketLogging)[vs[1].(int)]
	}).(BucketLoggingOutput)
}

type BucketMetricFilter struct {
	// Object prefix for filtering (singular).
	Prefix *string `pulumi:"prefix"`
	// Object tags for filtering (up to 10).
	Tags map[string]interface{} `pulumi:"tags"`
}

type BucketMetricFilterInput interface {
	pulumi.Input

	ToBucketMetricFilterOutput() BucketMetricFilterOutput
	ToBucketMetricFilterOutputWithContext(context.Context) BucketMetricFilterOutput
}

type BucketMetricFilterArgs struct {
	// Object prefix for filtering (singular).
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// Object tags for filtering (up to 10).
	Tags pulumi.MapInput `pulumi:"tags"`
}

func (BucketMetricFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketMetricFilter)(nil)).Elem()
}

func (i BucketMetricFilterArgs) ToBucketMetricFilterOutput() BucketMetricFilterOutput {
	return i.ToBucketMetricFilterOutputWithContext(context.Background())
}

func (i BucketMetricFilterArgs) ToBucketMetricFilterOutputWithContext(ctx context.Context) BucketMetricFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketMetricFilterOutput)
}

func (i BucketMetricFilterArgs) ToBucketMetricFilterPtrOutput() BucketMetricFilterPtrOutput {
	return i.ToBucketMetricFilterPtrOutputWithContext(context.Background())
}

func (i BucketMetricFilterArgs) ToBucketMetricFilterPtrOutputWithContext(ctx context.Context) BucketMetricFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketMetricFilterOutput).ToBucketMetricFilterPtrOutputWithContext(ctx)
}

type BucketMetricFilterPtrInput interface {
	pulumi.Input

	ToBucketMetricFilterPtrOutput() BucketMetricFilterPtrOutput
	ToBucketMetricFilterPtrOutputWithContext(context.Context) BucketMetricFilterPtrOutput
}

type bucketMetricFilterPtrType BucketMetricFilterArgs

func BucketMetricFilterPtr(v *BucketMetricFilterArgs) BucketMetricFilterPtrInput {	return (*bucketMetricFilterPtrType)(v)
}

func (*bucketMetricFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketMetricFilter)(nil)).Elem()
}

func (i *bucketMetricFilterPtrType) ToBucketMetricFilterPtrOutput() BucketMetricFilterPtrOutput {
	return i.ToBucketMetricFilterPtrOutputWithContext(context.Background())
}

func (i *bucketMetricFilterPtrType) ToBucketMetricFilterPtrOutputWithContext(ctx context.Context) BucketMetricFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketMetricFilterPtrOutput)
}

type BucketMetricFilterOutput struct { *pulumi.OutputState }

func (BucketMetricFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketMetricFilter)(nil)).Elem()
}

func (o BucketMetricFilterOutput) ToBucketMetricFilterOutput() BucketMetricFilterOutput {
	return o
}

func (o BucketMetricFilterOutput) ToBucketMetricFilterOutputWithContext(ctx context.Context) BucketMetricFilterOutput {
	return o
}

func (o BucketMetricFilterOutput) ToBucketMetricFilterPtrOutput() BucketMetricFilterPtrOutput {
	return o.ToBucketMetricFilterPtrOutputWithContext(context.Background())
}

func (o BucketMetricFilterOutput) ToBucketMetricFilterPtrOutputWithContext(ctx context.Context) BucketMetricFilterPtrOutput {
	return o.ApplyT(func(v BucketMetricFilter) *BucketMetricFilter {
		return &v
	}).(BucketMetricFilterPtrOutput)
}
// Object prefix for filtering (singular).
func (o BucketMetricFilterOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketMetricFilter) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Object tags for filtering (up to 10).
func (o BucketMetricFilterOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func (v BucketMetricFilter) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

type BucketMetricFilterPtrOutput struct { *pulumi.OutputState}

func (BucketMetricFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketMetricFilter)(nil)).Elem()
}

func (o BucketMetricFilterPtrOutput) ToBucketMetricFilterPtrOutput() BucketMetricFilterPtrOutput {
	return o
}

func (o BucketMetricFilterPtrOutput) ToBucketMetricFilterPtrOutputWithContext(ctx context.Context) BucketMetricFilterPtrOutput {
	return o
}

func (o BucketMetricFilterPtrOutput) Elem() BucketMetricFilterOutput {
	return o.ApplyT(func (v *BucketMetricFilter) BucketMetricFilter { return *v }).(BucketMetricFilterOutput)
}

// Object prefix for filtering (singular).
func (o BucketMetricFilterPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketMetricFilter) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// Object tags for filtering (up to 10).
func (o BucketMetricFilterPtrOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func (v BucketMetricFilter) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

type BucketNotificationLambdaFunction struct {
	// Specifies [event](http://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html#notification-how-to-event-types-and-destinations) for which to send notifications.
	Events []string `pulumi:"events"`
	// Specifies object key name prefix.
	FilterPrefix *string `pulumi:"filterPrefix"`
	// Specifies object key name suffix.
	FilterSuffix *string `pulumi:"filterSuffix"`
	// Specifies unique identifier for each of the notification configurations.
	Id *string `pulumi:"id"`
	// Specifies Amazon Lambda function ARN.
	LambdaFunctionArn *string `pulumi:"lambdaFunctionArn"`
}

type BucketNotificationLambdaFunctionInput interface {
	pulumi.Input

	ToBucketNotificationLambdaFunctionOutput() BucketNotificationLambdaFunctionOutput
	ToBucketNotificationLambdaFunctionOutputWithContext(context.Context) BucketNotificationLambdaFunctionOutput
}

type BucketNotificationLambdaFunctionArgs struct {
	// Specifies [event](http://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html#notification-how-to-event-types-and-destinations) for which to send notifications.
	Events pulumi.StringArrayInput `pulumi:"events"`
	// Specifies object key name prefix.
	FilterPrefix pulumi.StringPtrInput `pulumi:"filterPrefix"`
	// Specifies object key name suffix.
	FilterSuffix pulumi.StringPtrInput `pulumi:"filterSuffix"`
	// Specifies unique identifier for each of the notification configurations.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies Amazon Lambda function ARN.
	LambdaFunctionArn pulumi.StringPtrInput `pulumi:"lambdaFunctionArn"`
}

func (BucketNotificationLambdaFunctionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketNotificationLambdaFunction)(nil)).Elem()
}

func (i BucketNotificationLambdaFunctionArgs) ToBucketNotificationLambdaFunctionOutput() BucketNotificationLambdaFunctionOutput {
	return i.ToBucketNotificationLambdaFunctionOutputWithContext(context.Background())
}

func (i BucketNotificationLambdaFunctionArgs) ToBucketNotificationLambdaFunctionOutputWithContext(ctx context.Context) BucketNotificationLambdaFunctionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketNotificationLambdaFunctionOutput)
}

type BucketNotificationLambdaFunctionArrayInput interface {
	pulumi.Input

	ToBucketNotificationLambdaFunctionArrayOutput() BucketNotificationLambdaFunctionArrayOutput
	ToBucketNotificationLambdaFunctionArrayOutputWithContext(context.Context) BucketNotificationLambdaFunctionArrayOutput
}

type BucketNotificationLambdaFunctionArray []BucketNotificationLambdaFunctionInput

func (BucketNotificationLambdaFunctionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketNotificationLambdaFunction)(nil)).Elem()
}

func (i BucketNotificationLambdaFunctionArray) ToBucketNotificationLambdaFunctionArrayOutput() BucketNotificationLambdaFunctionArrayOutput {
	return i.ToBucketNotificationLambdaFunctionArrayOutputWithContext(context.Background())
}

func (i BucketNotificationLambdaFunctionArray) ToBucketNotificationLambdaFunctionArrayOutputWithContext(ctx context.Context) BucketNotificationLambdaFunctionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketNotificationLambdaFunctionArrayOutput)
}

type BucketNotificationLambdaFunctionOutput struct { *pulumi.OutputState }

func (BucketNotificationLambdaFunctionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketNotificationLambdaFunction)(nil)).Elem()
}

func (o BucketNotificationLambdaFunctionOutput) ToBucketNotificationLambdaFunctionOutput() BucketNotificationLambdaFunctionOutput {
	return o
}

func (o BucketNotificationLambdaFunctionOutput) ToBucketNotificationLambdaFunctionOutputWithContext(ctx context.Context) BucketNotificationLambdaFunctionOutput {
	return o
}

// Specifies [event](http://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html#notification-how-to-event-types-and-destinations) for which to send notifications.
func (o BucketNotificationLambdaFunctionOutput) Events() pulumi.StringArrayOutput {
	return o.ApplyT(func (v BucketNotificationLambdaFunction) []string { return v.Events }).(pulumi.StringArrayOutput)
}

// Specifies object key name prefix.
func (o BucketNotificationLambdaFunctionOutput) FilterPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketNotificationLambdaFunction) *string { return v.FilterPrefix }).(pulumi.StringPtrOutput)
}

// Specifies object key name suffix.
func (o BucketNotificationLambdaFunctionOutput) FilterSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketNotificationLambdaFunction) *string { return v.FilterSuffix }).(pulumi.StringPtrOutput)
}

// Specifies unique identifier for each of the notification configurations.
func (o BucketNotificationLambdaFunctionOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketNotificationLambdaFunction) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies Amazon Lambda function ARN.
func (o BucketNotificationLambdaFunctionOutput) LambdaFunctionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketNotificationLambdaFunction) *string { return v.LambdaFunctionArn }).(pulumi.StringPtrOutput)
}

type BucketNotificationLambdaFunctionArrayOutput struct { *pulumi.OutputState}

func (BucketNotificationLambdaFunctionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketNotificationLambdaFunction)(nil)).Elem()
}

func (o BucketNotificationLambdaFunctionArrayOutput) ToBucketNotificationLambdaFunctionArrayOutput() BucketNotificationLambdaFunctionArrayOutput {
	return o
}

func (o BucketNotificationLambdaFunctionArrayOutput) ToBucketNotificationLambdaFunctionArrayOutputWithContext(ctx context.Context) BucketNotificationLambdaFunctionArrayOutput {
	return o
}

func (o BucketNotificationLambdaFunctionArrayOutput) Index(i pulumi.IntInput) BucketNotificationLambdaFunctionOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) BucketNotificationLambdaFunction {
		return vs[0].([]BucketNotificationLambdaFunction)[vs[1].(int)]
	}).(BucketNotificationLambdaFunctionOutput)
}

type BucketNotificationQueue struct {
	// Specifies [event](http://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html#notification-how-to-event-types-and-destinations) for which to send notifications.
	Events []string `pulumi:"events"`
	// Specifies object key name prefix.
	FilterPrefix *string `pulumi:"filterPrefix"`
	// Specifies object key name suffix.
	FilterSuffix *string `pulumi:"filterSuffix"`
	// Specifies unique identifier for each of the notification configurations.
	Id *string `pulumi:"id"`
	// Specifies Amazon SQS queue ARN.
	QueueArn string `pulumi:"queueArn"`
}

type BucketNotificationQueueInput interface {
	pulumi.Input

	ToBucketNotificationQueueOutput() BucketNotificationQueueOutput
	ToBucketNotificationQueueOutputWithContext(context.Context) BucketNotificationQueueOutput
}

type BucketNotificationQueueArgs struct {
	// Specifies [event](http://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html#notification-how-to-event-types-and-destinations) for which to send notifications.
	Events pulumi.StringArrayInput `pulumi:"events"`
	// Specifies object key name prefix.
	FilterPrefix pulumi.StringPtrInput `pulumi:"filterPrefix"`
	// Specifies object key name suffix.
	FilterSuffix pulumi.StringPtrInput `pulumi:"filterSuffix"`
	// Specifies unique identifier for each of the notification configurations.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies Amazon SQS queue ARN.
	QueueArn pulumi.StringInput `pulumi:"queueArn"`
}

func (BucketNotificationQueueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketNotificationQueue)(nil)).Elem()
}

func (i BucketNotificationQueueArgs) ToBucketNotificationQueueOutput() BucketNotificationQueueOutput {
	return i.ToBucketNotificationQueueOutputWithContext(context.Background())
}

func (i BucketNotificationQueueArgs) ToBucketNotificationQueueOutputWithContext(ctx context.Context) BucketNotificationQueueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketNotificationQueueOutput)
}

type BucketNotificationQueueArrayInput interface {
	pulumi.Input

	ToBucketNotificationQueueArrayOutput() BucketNotificationQueueArrayOutput
	ToBucketNotificationQueueArrayOutputWithContext(context.Context) BucketNotificationQueueArrayOutput
}

type BucketNotificationQueueArray []BucketNotificationQueueInput

func (BucketNotificationQueueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketNotificationQueue)(nil)).Elem()
}

func (i BucketNotificationQueueArray) ToBucketNotificationQueueArrayOutput() BucketNotificationQueueArrayOutput {
	return i.ToBucketNotificationQueueArrayOutputWithContext(context.Background())
}

func (i BucketNotificationQueueArray) ToBucketNotificationQueueArrayOutputWithContext(ctx context.Context) BucketNotificationQueueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketNotificationQueueArrayOutput)
}

type BucketNotificationQueueOutput struct { *pulumi.OutputState }

func (BucketNotificationQueueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketNotificationQueue)(nil)).Elem()
}

func (o BucketNotificationQueueOutput) ToBucketNotificationQueueOutput() BucketNotificationQueueOutput {
	return o
}

func (o BucketNotificationQueueOutput) ToBucketNotificationQueueOutputWithContext(ctx context.Context) BucketNotificationQueueOutput {
	return o
}

// Specifies [event](http://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html#notification-how-to-event-types-and-destinations) for which to send notifications.
func (o BucketNotificationQueueOutput) Events() pulumi.StringArrayOutput {
	return o.ApplyT(func (v BucketNotificationQueue) []string { return v.Events }).(pulumi.StringArrayOutput)
}

// Specifies object key name prefix.
func (o BucketNotificationQueueOutput) FilterPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketNotificationQueue) *string { return v.FilterPrefix }).(pulumi.StringPtrOutput)
}

// Specifies object key name suffix.
func (o BucketNotificationQueueOutput) FilterSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketNotificationQueue) *string { return v.FilterSuffix }).(pulumi.StringPtrOutput)
}

// Specifies unique identifier for each of the notification configurations.
func (o BucketNotificationQueueOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketNotificationQueue) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies Amazon SQS queue ARN.
func (o BucketNotificationQueueOutput) QueueArn() pulumi.StringOutput {
	return o.ApplyT(func (v BucketNotificationQueue) string { return v.QueueArn }).(pulumi.StringOutput)
}

type BucketNotificationQueueArrayOutput struct { *pulumi.OutputState}

func (BucketNotificationQueueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketNotificationQueue)(nil)).Elem()
}

func (o BucketNotificationQueueArrayOutput) ToBucketNotificationQueueArrayOutput() BucketNotificationQueueArrayOutput {
	return o
}

func (o BucketNotificationQueueArrayOutput) ToBucketNotificationQueueArrayOutputWithContext(ctx context.Context) BucketNotificationQueueArrayOutput {
	return o
}

func (o BucketNotificationQueueArrayOutput) Index(i pulumi.IntInput) BucketNotificationQueueOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) BucketNotificationQueue {
		return vs[0].([]BucketNotificationQueue)[vs[1].(int)]
	}).(BucketNotificationQueueOutput)
}

type BucketNotificationTopic struct {
	// Specifies [event](http://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html#notification-how-to-event-types-and-destinations) for which to send notifications.
	Events []string `pulumi:"events"`
	// Specifies object key name prefix.
	FilterPrefix *string `pulumi:"filterPrefix"`
	// Specifies object key name suffix.
	FilterSuffix *string `pulumi:"filterSuffix"`
	// Specifies unique identifier for each of the notification configurations.
	Id *string `pulumi:"id"`
	// Specifies Amazon SNS topic ARN.
	TopicArn string `pulumi:"topicArn"`
}

type BucketNotificationTopicInput interface {
	pulumi.Input

	ToBucketNotificationTopicOutput() BucketNotificationTopicOutput
	ToBucketNotificationTopicOutputWithContext(context.Context) BucketNotificationTopicOutput
}

type BucketNotificationTopicArgs struct {
	// Specifies [event](http://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html#notification-how-to-event-types-and-destinations) for which to send notifications.
	Events pulumi.StringArrayInput `pulumi:"events"`
	// Specifies object key name prefix.
	FilterPrefix pulumi.StringPtrInput `pulumi:"filterPrefix"`
	// Specifies object key name suffix.
	FilterSuffix pulumi.StringPtrInput `pulumi:"filterSuffix"`
	// Specifies unique identifier for each of the notification configurations.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies Amazon SNS topic ARN.
	TopicArn pulumi.StringInput `pulumi:"topicArn"`
}

func (BucketNotificationTopicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketNotificationTopic)(nil)).Elem()
}

func (i BucketNotificationTopicArgs) ToBucketNotificationTopicOutput() BucketNotificationTopicOutput {
	return i.ToBucketNotificationTopicOutputWithContext(context.Background())
}

func (i BucketNotificationTopicArgs) ToBucketNotificationTopicOutputWithContext(ctx context.Context) BucketNotificationTopicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketNotificationTopicOutput)
}

type BucketNotificationTopicArrayInput interface {
	pulumi.Input

	ToBucketNotificationTopicArrayOutput() BucketNotificationTopicArrayOutput
	ToBucketNotificationTopicArrayOutputWithContext(context.Context) BucketNotificationTopicArrayOutput
}

type BucketNotificationTopicArray []BucketNotificationTopicInput

func (BucketNotificationTopicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketNotificationTopic)(nil)).Elem()
}

func (i BucketNotificationTopicArray) ToBucketNotificationTopicArrayOutput() BucketNotificationTopicArrayOutput {
	return i.ToBucketNotificationTopicArrayOutputWithContext(context.Background())
}

func (i BucketNotificationTopicArray) ToBucketNotificationTopicArrayOutputWithContext(ctx context.Context) BucketNotificationTopicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketNotificationTopicArrayOutput)
}

type BucketNotificationTopicOutput struct { *pulumi.OutputState }

func (BucketNotificationTopicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketNotificationTopic)(nil)).Elem()
}

func (o BucketNotificationTopicOutput) ToBucketNotificationTopicOutput() BucketNotificationTopicOutput {
	return o
}

func (o BucketNotificationTopicOutput) ToBucketNotificationTopicOutputWithContext(ctx context.Context) BucketNotificationTopicOutput {
	return o
}

// Specifies [event](http://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html#notification-how-to-event-types-and-destinations) for which to send notifications.
func (o BucketNotificationTopicOutput) Events() pulumi.StringArrayOutput {
	return o.ApplyT(func (v BucketNotificationTopic) []string { return v.Events }).(pulumi.StringArrayOutput)
}

// Specifies object key name prefix.
func (o BucketNotificationTopicOutput) FilterPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketNotificationTopic) *string { return v.FilterPrefix }).(pulumi.StringPtrOutput)
}

// Specifies object key name suffix.
func (o BucketNotificationTopicOutput) FilterSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketNotificationTopic) *string { return v.FilterSuffix }).(pulumi.StringPtrOutput)
}

// Specifies unique identifier for each of the notification configurations.
func (o BucketNotificationTopicOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketNotificationTopic) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies Amazon SNS topic ARN.
func (o BucketNotificationTopicOutput) TopicArn() pulumi.StringOutput {
	return o.ApplyT(func (v BucketNotificationTopic) string { return v.TopicArn }).(pulumi.StringOutput)
}

type BucketNotificationTopicArrayOutput struct { *pulumi.OutputState}

func (BucketNotificationTopicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketNotificationTopic)(nil)).Elem()
}

func (o BucketNotificationTopicArrayOutput) ToBucketNotificationTopicArrayOutput() BucketNotificationTopicArrayOutput {
	return o
}

func (o BucketNotificationTopicArrayOutput) ToBucketNotificationTopicArrayOutputWithContext(ctx context.Context) BucketNotificationTopicArrayOutput {
	return o
}

func (o BucketNotificationTopicArrayOutput) Index(i pulumi.IntInput) BucketNotificationTopicOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) BucketNotificationTopic {
		return vs[0].([]BucketNotificationTopic)[vs[1].(int)]
	}).(BucketNotificationTopicOutput)
}

type BucketObjectLockConfiguration struct {
	// Indicates whether this bucket has an Object Lock configuration enabled. Valid value is `Enabled`.
	ObjectLockEnabled string `pulumi:"objectLockEnabled"`
	// The Object Lock rule in place for this bucket.
	Rule *BucketObjectLockConfigurationRule `pulumi:"rule"`
}

type BucketObjectLockConfigurationInput interface {
	pulumi.Input

	ToBucketObjectLockConfigurationOutput() BucketObjectLockConfigurationOutput
	ToBucketObjectLockConfigurationOutputWithContext(context.Context) BucketObjectLockConfigurationOutput
}

type BucketObjectLockConfigurationArgs struct {
	// Indicates whether this bucket has an Object Lock configuration enabled. Valid value is `Enabled`.
	ObjectLockEnabled pulumi.StringInput `pulumi:"objectLockEnabled"`
	// The Object Lock rule in place for this bucket.
	Rule BucketObjectLockConfigurationRulePtrInput `pulumi:"rule"`
}

func (BucketObjectLockConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketObjectLockConfiguration)(nil)).Elem()
}

func (i BucketObjectLockConfigurationArgs) ToBucketObjectLockConfigurationOutput() BucketObjectLockConfigurationOutput {
	return i.ToBucketObjectLockConfigurationOutputWithContext(context.Background())
}

func (i BucketObjectLockConfigurationArgs) ToBucketObjectLockConfigurationOutputWithContext(ctx context.Context) BucketObjectLockConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectLockConfigurationOutput)
}

func (i BucketObjectLockConfigurationArgs) ToBucketObjectLockConfigurationPtrOutput() BucketObjectLockConfigurationPtrOutput {
	return i.ToBucketObjectLockConfigurationPtrOutputWithContext(context.Background())
}

func (i BucketObjectLockConfigurationArgs) ToBucketObjectLockConfigurationPtrOutputWithContext(ctx context.Context) BucketObjectLockConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectLockConfigurationOutput).ToBucketObjectLockConfigurationPtrOutputWithContext(ctx)
}

type BucketObjectLockConfigurationPtrInput interface {
	pulumi.Input

	ToBucketObjectLockConfigurationPtrOutput() BucketObjectLockConfigurationPtrOutput
	ToBucketObjectLockConfigurationPtrOutputWithContext(context.Context) BucketObjectLockConfigurationPtrOutput
}

type bucketObjectLockConfigurationPtrType BucketObjectLockConfigurationArgs

func BucketObjectLockConfigurationPtr(v *BucketObjectLockConfigurationArgs) BucketObjectLockConfigurationPtrInput {	return (*bucketObjectLockConfigurationPtrType)(v)
}

func (*bucketObjectLockConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketObjectLockConfiguration)(nil)).Elem()
}

func (i *bucketObjectLockConfigurationPtrType) ToBucketObjectLockConfigurationPtrOutput() BucketObjectLockConfigurationPtrOutput {
	return i.ToBucketObjectLockConfigurationPtrOutputWithContext(context.Background())
}

func (i *bucketObjectLockConfigurationPtrType) ToBucketObjectLockConfigurationPtrOutputWithContext(ctx context.Context) BucketObjectLockConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectLockConfigurationPtrOutput)
}

type BucketObjectLockConfigurationOutput struct { *pulumi.OutputState }

func (BucketObjectLockConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketObjectLockConfiguration)(nil)).Elem()
}

func (o BucketObjectLockConfigurationOutput) ToBucketObjectLockConfigurationOutput() BucketObjectLockConfigurationOutput {
	return o
}

func (o BucketObjectLockConfigurationOutput) ToBucketObjectLockConfigurationOutputWithContext(ctx context.Context) BucketObjectLockConfigurationOutput {
	return o
}

func (o BucketObjectLockConfigurationOutput) ToBucketObjectLockConfigurationPtrOutput() BucketObjectLockConfigurationPtrOutput {
	return o.ToBucketObjectLockConfigurationPtrOutputWithContext(context.Background())
}

func (o BucketObjectLockConfigurationOutput) ToBucketObjectLockConfigurationPtrOutputWithContext(ctx context.Context) BucketObjectLockConfigurationPtrOutput {
	return o.ApplyT(func(v BucketObjectLockConfiguration) *BucketObjectLockConfiguration {
		return &v
	}).(BucketObjectLockConfigurationPtrOutput)
}
// Indicates whether this bucket has an Object Lock configuration enabled. Valid value is `Enabled`.
func (o BucketObjectLockConfigurationOutput) ObjectLockEnabled() pulumi.StringOutput {
	return o.ApplyT(func (v BucketObjectLockConfiguration) string { return v.ObjectLockEnabled }).(pulumi.StringOutput)
}

// The Object Lock rule in place for this bucket.
func (o BucketObjectLockConfigurationOutput) Rule() BucketObjectLockConfigurationRulePtrOutput {
	return o.ApplyT(func (v BucketObjectLockConfiguration) *BucketObjectLockConfigurationRule { return v.Rule }).(BucketObjectLockConfigurationRulePtrOutput)
}

type BucketObjectLockConfigurationPtrOutput struct { *pulumi.OutputState}

func (BucketObjectLockConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketObjectLockConfiguration)(nil)).Elem()
}

func (o BucketObjectLockConfigurationPtrOutput) ToBucketObjectLockConfigurationPtrOutput() BucketObjectLockConfigurationPtrOutput {
	return o
}

func (o BucketObjectLockConfigurationPtrOutput) ToBucketObjectLockConfigurationPtrOutputWithContext(ctx context.Context) BucketObjectLockConfigurationPtrOutput {
	return o
}

func (o BucketObjectLockConfigurationPtrOutput) Elem() BucketObjectLockConfigurationOutput {
	return o.ApplyT(func (v *BucketObjectLockConfiguration) BucketObjectLockConfiguration { return *v }).(BucketObjectLockConfigurationOutput)
}

// Indicates whether this bucket has an Object Lock configuration enabled. Valid value is `Enabled`.
func (o BucketObjectLockConfigurationPtrOutput) ObjectLockEnabled() pulumi.StringOutput {
	return o.ApplyT(func (v BucketObjectLockConfiguration) string { return v.ObjectLockEnabled }).(pulumi.StringOutput)
}

// The Object Lock rule in place for this bucket.
func (o BucketObjectLockConfigurationPtrOutput) Rule() BucketObjectLockConfigurationRulePtrOutput {
	return o.ApplyT(func (v BucketObjectLockConfiguration) *BucketObjectLockConfigurationRule { return v.Rule }).(BucketObjectLockConfigurationRulePtrOutput)
}

type BucketObjectLockConfigurationRule struct {
	// The default retention period that you want to apply to new objects placed in this bucket.
	DefaultRetention BucketObjectLockConfigurationRuleDefaultRetention `pulumi:"defaultRetention"`
}

type BucketObjectLockConfigurationRuleInput interface {
	pulumi.Input

	ToBucketObjectLockConfigurationRuleOutput() BucketObjectLockConfigurationRuleOutput
	ToBucketObjectLockConfigurationRuleOutputWithContext(context.Context) BucketObjectLockConfigurationRuleOutput
}

type BucketObjectLockConfigurationRuleArgs struct {
	// The default retention period that you want to apply to new objects placed in this bucket.
	DefaultRetention BucketObjectLockConfigurationRuleDefaultRetentionInput `pulumi:"defaultRetention"`
}

func (BucketObjectLockConfigurationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketObjectLockConfigurationRule)(nil)).Elem()
}

func (i BucketObjectLockConfigurationRuleArgs) ToBucketObjectLockConfigurationRuleOutput() BucketObjectLockConfigurationRuleOutput {
	return i.ToBucketObjectLockConfigurationRuleOutputWithContext(context.Background())
}

func (i BucketObjectLockConfigurationRuleArgs) ToBucketObjectLockConfigurationRuleOutputWithContext(ctx context.Context) BucketObjectLockConfigurationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectLockConfigurationRuleOutput)
}

func (i BucketObjectLockConfigurationRuleArgs) ToBucketObjectLockConfigurationRulePtrOutput() BucketObjectLockConfigurationRulePtrOutput {
	return i.ToBucketObjectLockConfigurationRulePtrOutputWithContext(context.Background())
}

func (i BucketObjectLockConfigurationRuleArgs) ToBucketObjectLockConfigurationRulePtrOutputWithContext(ctx context.Context) BucketObjectLockConfigurationRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectLockConfigurationRuleOutput).ToBucketObjectLockConfigurationRulePtrOutputWithContext(ctx)
}

type BucketObjectLockConfigurationRulePtrInput interface {
	pulumi.Input

	ToBucketObjectLockConfigurationRulePtrOutput() BucketObjectLockConfigurationRulePtrOutput
	ToBucketObjectLockConfigurationRulePtrOutputWithContext(context.Context) BucketObjectLockConfigurationRulePtrOutput
}

type bucketObjectLockConfigurationRulePtrType BucketObjectLockConfigurationRuleArgs

func BucketObjectLockConfigurationRulePtr(v *BucketObjectLockConfigurationRuleArgs) BucketObjectLockConfigurationRulePtrInput {	return (*bucketObjectLockConfigurationRulePtrType)(v)
}

func (*bucketObjectLockConfigurationRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketObjectLockConfigurationRule)(nil)).Elem()
}

func (i *bucketObjectLockConfigurationRulePtrType) ToBucketObjectLockConfigurationRulePtrOutput() BucketObjectLockConfigurationRulePtrOutput {
	return i.ToBucketObjectLockConfigurationRulePtrOutputWithContext(context.Background())
}

func (i *bucketObjectLockConfigurationRulePtrType) ToBucketObjectLockConfigurationRulePtrOutputWithContext(ctx context.Context) BucketObjectLockConfigurationRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectLockConfigurationRulePtrOutput)
}

type BucketObjectLockConfigurationRuleOutput struct { *pulumi.OutputState }

func (BucketObjectLockConfigurationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketObjectLockConfigurationRule)(nil)).Elem()
}

func (o BucketObjectLockConfigurationRuleOutput) ToBucketObjectLockConfigurationRuleOutput() BucketObjectLockConfigurationRuleOutput {
	return o
}

func (o BucketObjectLockConfigurationRuleOutput) ToBucketObjectLockConfigurationRuleOutputWithContext(ctx context.Context) BucketObjectLockConfigurationRuleOutput {
	return o
}

func (o BucketObjectLockConfigurationRuleOutput) ToBucketObjectLockConfigurationRulePtrOutput() BucketObjectLockConfigurationRulePtrOutput {
	return o.ToBucketObjectLockConfigurationRulePtrOutputWithContext(context.Background())
}

func (o BucketObjectLockConfigurationRuleOutput) ToBucketObjectLockConfigurationRulePtrOutputWithContext(ctx context.Context) BucketObjectLockConfigurationRulePtrOutput {
	return o.ApplyT(func(v BucketObjectLockConfigurationRule) *BucketObjectLockConfigurationRule {
		return &v
	}).(BucketObjectLockConfigurationRulePtrOutput)
}
// The default retention period that you want to apply to new objects placed in this bucket.
func (o BucketObjectLockConfigurationRuleOutput) DefaultRetention() BucketObjectLockConfigurationRuleDefaultRetentionOutput {
	return o.ApplyT(func (v BucketObjectLockConfigurationRule) BucketObjectLockConfigurationRuleDefaultRetention { return v.DefaultRetention }).(BucketObjectLockConfigurationRuleDefaultRetentionOutput)
}

type BucketObjectLockConfigurationRulePtrOutput struct { *pulumi.OutputState}

func (BucketObjectLockConfigurationRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketObjectLockConfigurationRule)(nil)).Elem()
}

func (o BucketObjectLockConfigurationRulePtrOutput) ToBucketObjectLockConfigurationRulePtrOutput() BucketObjectLockConfigurationRulePtrOutput {
	return o
}

func (o BucketObjectLockConfigurationRulePtrOutput) ToBucketObjectLockConfigurationRulePtrOutputWithContext(ctx context.Context) BucketObjectLockConfigurationRulePtrOutput {
	return o
}

func (o BucketObjectLockConfigurationRulePtrOutput) Elem() BucketObjectLockConfigurationRuleOutput {
	return o.ApplyT(func (v *BucketObjectLockConfigurationRule) BucketObjectLockConfigurationRule { return *v }).(BucketObjectLockConfigurationRuleOutput)
}

// The default retention period that you want to apply to new objects placed in this bucket.
func (o BucketObjectLockConfigurationRulePtrOutput) DefaultRetention() BucketObjectLockConfigurationRuleDefaultRetentionOutput {
	return o.ApplyT(func (v BucketObjectLockConfigurationRule) BucketObjectLockConfigurationRuleDefaultRetention { return v.DefaultRetention }).(BucketObjectLockConfigurationRuleDefaultRetentionOutput)
}

type BucketObjectLockConfigurationRuleDefaultRetention struct {
	// The number of days that you want to specify for the default retention period.
	Days *int `pulumi:"days"`
	// The default Object Lock retention mode you want to apply to new objects placed in this bucket. Valid values are `GOVERNANCE` and `COMPLIANCE`.
	Mode string `pulumi:"mode"`
	// The number of years that you want to specify for the default retention period.
	Years *int `pulumi:"years"`
}

type BucketObjectLockConfigurationRuleDefaultRetentionInput interface {
	pulumi.Input

	ToBucketObjectLockConfigurationRuleDefaultRetentionOutput() BucketObjectLockConfigurationRuleDefaultRetentionOutput
	ToBucketObjectLockConfigurationRuleDefaultRetentionOutputWithContext(context.Context) BucketObjectLockConfigurationRuleDefaultRetentionOutput
}

type BucketObjectLockConfigurationRuleDefaultRetentionArgs struct {
	// The number of days that you want to specify for the default retention period.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// The default Object Lock retention mode you want to apply to new objects placed in this bucket. Valid values are `GOVERNANCE` and `COMPLIANCE`.
	Mode pulumi.StringInput `pulumi:"mode"`
	// The number of years that you want to specify for the default retention period.
	Years pulumi.IntPtrInput `pulumi:"years"`
}

func (BucketObjectLockConfigurationRuleDefaultRetentionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketObjectLockConfigurationRuleDefaultRetention)(nil)).Elem()
}

func (i BucketObjectLockConfigurationRuleDefaultRetentionArgs) ToBucketObjectLockConfigurationRuleDefaultRetentionOutput() BucketObjectLockConfigurationRuleDefaultRetentionOutput {
	return i.ToBucketObjectLockConfigurationRuleDefaultRetentionOutputWithContext(context.Background())
}

func (i BucketObjectLockConfigurationRuleDefaultRetentionArgs) ToBucketObjectLockConfigurationRuleDefaultRetentionOutputWithContext(ctx context.Context) BucketObjectLockConfigurationRuleDefaultRetentionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketObjectLockConfigurationRuleDefaultRetentionOutput)
}

type BucketObjectLockConfigurationRuleDefaultRetentionOutput struct { *pulumi.OutputState }

func (BucketObjectLockConfigurationRuleDefaultRetentionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketObjectLockConfigurationRuleDefaultRetention)(nil)).Elem()
}

func (o BucketObjectLockConfigurationRuleDefaultRetentionOutput) ToBucketObjectLockConfigurationRuleDefaultRetentionOutput() BucketObjectLockConfigurationRuleDefaultRetentionOutput {
	return o
}

func (o BucketObjectLockConfigurationRuleDefaultRetentionOutput) ToBucketObjectLockConfigurationRuleDefaultRetentionOutputWithContext(ctx context.Context) BucketObjectLockConfigurationRuleDefaultRetentionOutput {
	return o
}

// The number of days that you want to specify for the default retention period.
func (o BucketObjectLockConfigurationRuleDefaultRetentionOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func (v BucketObjectLockConfigurationRuleDefaultRetention) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// The default Object Lock retention mode you want to apply to new objects placed in this bucket. Valid values are `GOVERNANCE` and `COMPLIANCE`.
func (o BucketObjectLockConfigurationRuleDefaultRetentionOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func (v BucketObjectLockConfigurationRuleDefaultRetention) string { return v.Mode }).(pulumi.StringOutput)
}

// The number of years that you want to specify for the default retention period.
func (o BucketObjectLockConfigurationRuleDefaultRetentionOutput) Years() pulumi.IntPtrOutput {
	return o.ApplyT(func (v BucketObjectLockConfigurationRuleDefaultRetention) *int { return v.Years }).(pulumi.IntPtrOutput)
}

type BucketReplicationConfiguration struct {
	// The ARN of the IAM role for Amazon S3 to assume when replicating the objects.
	Role string `pulumi:"role"`
	// Specifies the rules managing the replication (documented below).
	Rules []BucketReplicationConfigurationRule `pulumi:"rules"`
}

type BucketReplicationConfigurationInput interface {
	pulumi.Input

	ToBucketReplicationConfigurationOutput() BucketReplicationConfigurationOutput
	ToBucketReplicationConfigurationOutputWithContext(context.Context) BucketReplicationConfigurationOutput
}

type BucketReplicationConfigurationArgs struct {
	// The ARN of the IAM role for Amazon S3 to assume when replicating the objects.
	Role pulumi.StringInput `pulumi:"role"`
	// Specifies the rules managing the replication (documented below).
	Rules BucketReplicationConfigurationRuleArrayInput `pulumi:"rules"`
}

func (BucketReplicationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationConfiguration)(nil)).Elem()
}

func (i BucketReplicationConfigurationArgs) ToBucketReplicationConfigurationOutput() BucketReplicationConfigurationOutput {
	return i.ToBucketReplicationConfigurationOutputWithContext(context.Background())
}

func (i BucketReplicationConfigurationArgs) ToBucketReplicationConfigurationOutputWithContext(ctx context.Context) BucketReplicationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigurationOutput)
}

func (i BucketReplicationConfigurationArgs) ToBucketReplicationConfigurationPtrOutput() BucketReplicationConfigurationPtrOutput {
	return i.ToBucketReplicationConfigurationPtrOutputWithContext(context.Background())
}

func (i BucketReplicationConfigurationArgs) ToBucketReplicationConfigurationPtrOutputWithContext(ctx context.Context) BucketReplicationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigurationOutput).ToBucketReplicationConfigurationPtrOutputWithContext(ctx)
}

type BucketReplicationConfigurationPtrInput interface {
	pulumi.Input

	ToBucketReplicationConfigurationPtrOutput() BucketReplicationConfigurationPtrOutput
	ToBucketReplicationConfigurationPtrOutputWithContext(context.Context) BucketReplicationConfigurationPtrOutput
}

type bucketReplicationConfigurationPtrType BucketReplicationConfigurationArgs

func BucketReplicationConfigurationPtr(v *BucketReplicationConfigurationArgs) BucketReplicationConfigurationPtrInput {	return (*bucketReplicationConfigurationPtrType)(v)
}

func (*bucketReplicationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketReplicationConfiguration)(nil)).Elem()
}

func (i *bucketReplicationConfigurationPtrType) ToBucketReplicationConfigurationPtrOutput() BucketReplicationConfigurationPtrOutput {
	return i.ToBucketReplicationConfigurationPtrOutputWithContext(context.Background())
}

func (i *bucketReplicationConfigurationPtrType) ToBucketReplicationConfigurationPtrOutputWithContext(ctx context.Context) BucketReplicationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigurationPtrOutput)
}

type BucketReplicationConfigurationOutput struct { *pulumi.OutputState }

func (BucketReplicationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationConfiguration)(nil)).Elem()
}

func (o BucketReplicationConfigurationOutput) ToBucketReplicationConfigurationOutput() BucketReplicationConfigurationOutput {
	return o
}

func (o BucketReplicationConfigurationOutput) ToBucketReplicationConfigurationOutputWithContext(ctx context.Context) BucketReplicationConfigurationOutput {
	return o
}

func (o BucketReplicationConfigurationOutput) ToBucketReplicationConfigurationPtrOutput() BucketReplicationConfigurationPtrOutput {
	return o.ToBucketReplicationConfigurationPtrOutputWithContext(context.Background())
}

func (o BucketReplicationConfigurationOutput) ToBucketReplicationConfigurationPtrOutputWithContext(ctx context.Context) BucketReplicationConfigurationPtrOutput {
	return o.ApplyT(func(v BucketReplicationConfiguration) *BucketReplicationConfiguration {
		return &v
	}).(BucketReplicationConfigurationPtrOutput)
}
// The ARN of the IAM role for Amazon S3 to assume when replicating the objects.
func (o BucketReplicationConfigurationOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func (v BucketReplicationConfiguration) string { return v.Role }).(pulumi.StringOutput)
}

// Specifies the rules managing the replication (documented below).
func (o BucketReplicationConfigurationOutput) Rules() BucketReplicationConfigurationRuleArrayOutput {
	return o.ApplyT(func (v BucketReplicationConfiguration) []BucketReplicationConfigurationRule { return v.Rules }).(BucketReplicationConfigurationRuleArrayOutput)
}

type BucketReplicationConfigurationPtrOutput struct { *pulumi.OutputState}

func (BucketReplicationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketReplicationConfiguration)(nil)).Elem()
}

func (o BucketReplicationConfigurationPtrOutput) ToBucketReplicationConfigurationPtrOutput() BucketReplicationConfigurationPtrOutput {
	return o
}

func (o BucketReplicationConfigurationPtrOutput) ToBucketReplicationConfigurationPtrOutputWithContext(ctx context.Context) BucketReplicationConfigurationPtrOutput {
	return o
}

func (o BucketReplicationConfigurationPtrOutput) Elem() BucketReplicationConfigurationOutput {
	return o.ApplyT(func (v *BucketReplicationConfiguration) BucketReplicationConfiguration { return *v }).(BucketReplicationConfigurationOutput)
}

// The ARN of the IAM role for Amazon S3 to assume when replicating the objects.
func (o BucketReplicationConfigurationPtrOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func (v BucketReplicationConfiguration) string { return v.Role }).(pulumi.StringOutput)
}

// Specifies the rules managing the replication (documented below).
func (o BucketReplicationConfigurationPtrOutput) Rules() BucketReplicationConfigurationRuleArrayOutput {
	return o.ApplyT(func (v BucketReplicationConfiguration) []BucketReplicationConfigurationRule { return v.Rules }).(BucketReplicationConfigurationRuleArrayOutput)
}

type BucketReplicationConfigurationRule struct {
	// Specifies the destination for the rule (documented below).
	Destination BucketReplicationConfigurationRuleDestination `pulumi:"destination"`
	// Filter that identifies subset of objects to which the replication rule applies (documented below).
	Filter *BucketReplicationConfigurationRuleFilter `pulumi:"filter"`
	// Unique identifier for the rule.
	Id *string `pulumi:"id"`
	// Object keyname prefix that identifies subset of objects to which the rule applies.
	Prefix *string `pulumi:"prefix"`
	// The priority associated with the rule.
	Priority *int `pulumi:"priority"`
	// Specifies special object selection criteria (documented below).
	SourceSelectionCriteria *BucketReplicationConfigurationRuleSourceSelectionCriteria `pulumi:"sourceSelectionCriteria"`
	// The status of the rule. Either `Enabled` or `Disabled`. The rule is ignored if status is not Enabled.
	Status string `pulumi:"status"`
}

type BucketReplicationConfigurationRuleInput interface {
	pulumi.Input

	ToBucketReplicationConfigurationRuleOutput() BucketReplicationConfigurationRuleOutput
	ToBucketReplicationConfigurationRuleOutputWithContext(context.Context) BucketReplicationConfigurationRuleOutput
}

type BucketReplicationConfigurationRuleArgs struct {
	// Specifies the destination for the rule (documented below).
	Destination BucketReplicationConfigurationRuleDestinationInput `pulumi:"destination"`
	// Filter that identifies subset of objects to which the replication rule applies (documented below).
	Filter BucketReplicationConfigurationRuleFilterPtrInput `pulumi:"filter"`
	// Unique identifier for the rule.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Object keyname prefix that identifies subset of objects to which the rule applies.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The priority associated with the rule.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// Specifies special object selection criteria (documented below).
	SourceSelectionCriteria BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrInput `pulumi:"sourceSelectionCriteria"`
	// The status of the rule. Either `Enabled` or `Disabled`. The rule is ignored if status is not Enabled.
	Status pulumi.StringInput `pulumi:"status"`
}

func (BucketReplicationConfigurationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationConfigurationRule)(nil)).Elem()
}

func (i BucketReplicationConfigurationRuleArgs) ToBucketReplicationConfigurationRuleOutput() BucketReplicationConfigurationRuleOutput {
	return i.ToBucketReplicationConfigurationRuleOutputWithContext(context.Background())
}

func (i BucketReplicationConfigurationRuleArgs) ToBucketReplicationConfigurationRuleOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigurationRuleOutput)
}

type BucketReplicationConfigurationRuleArrayInput interface {
	pulumi.Input

	ToBucketReplicationConfigurationRuleArrayOutput() BucketReplicationConfigurationRuleArrayOutput
	ToBucketReplicationConfigurationRuleArrayOutputWithContext(context.Context) BucketReplicationConfigurationRuleArrayOutput
}

type BucketReplicationConfigurationRuleArray []BucketReplicationConfigurationRuleInput

func (BucketReplicationConfigurationRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketReplicationConfigurationRule)(nil)).Elem()
}

func (i BucketReplicationConfigurationRuleArray) ToBucketReplicationConfigurationRuleArrayOutput() BucketReplicationConfigurationRuleArrayOutput {
	return i.ToBucketReplicationConfigurationRuleArrayOutputWithContext(context.Background())
}

func (i BucketReplicationConfigurationRuleArray) ToBucketReplicationConfigurationRuleArrayOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigurationRuleArrayOutput)
}

type BucketReplicationConfigurationRuleOutput struct { *pulumi.OutputState }

func (BucketReplicationConfigurationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationConfigurationRule)(nil)).Elem()
}

func (o BucketReplicationConfigurationRuleOutput) ToBucketReplicationConfigurationRuleOutput() BucketReplicationConfigurationRuleOutput {
	return o
}

func (o BucketReplicationConfigurationRuleOutput) ToBucketReplicationConfigurationRuleOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleOutput {
	return o
}

// Specifies the destination for the rule (documented below).
func (o BucketReplicationConfigurationRuleOutput) Destination() BucketReplicationConfigurationRuleDestinationOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRule) BucketReplicationConfigurationRuleDestination { return v.Destination }).(BucketReplicationConfigurationRuleDestinationOutput)
}

// Filter that identifies subset of objects to which the replication rule applies (documented below).
func (o BucketReplicationConfigurationRuleOutput) Filter() BucketReplicationConfigurationRuleFilterPtrOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRule) *BucketReplicationConfigurationRuleFilter { return v.Filter }).(BucketReplicationConfigurationRuleFilterPtrOutput)
}

// Unique identifier for the rule.
func (o BucketReplicationConfigurationRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Object keyname prefix that identifies subset of objects to which the rule applies.
func (o BucketReplicationConfigurationRuleOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRule) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The priority associated with the rule.
func (o BucketReplicationConfigurationRuleOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRule) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// Specifies special object selection criteria (documented below).
func (o BucketReplicationConfigurationRuleOutput) SourceSelectionCriteria() BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRule) *BucketReplicationConfigurationRuleSourceSelectionCriteria { return v.SourceSelectionCriteria }).(BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput)
}

// The status of the rule. Either `Enabled` or `Disabled`. The rule is ignored if status is not Enabled.
func (o BucketReplicationConfigurationRuleOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRule) string { return v.Status }).(pulumi.StringOutput)
}

type BucketReplicationConfigurationRuleArrayOutput struct { *pulumi.OutputState}

func (BucketReplicationConfigurationRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketReplicationConfigurationRule)(nil)).Elem()
}

func (o BucketReplicationConfigurationRuleArrayOutput) ToBucketReplicationConfigurationRuleArrayOutput() BucketReplicationConfigurationRuleArrayOutput {
	return o
}

func (o BucketReplicationConfigurationRuleArrayOutput) ToBucketReplicationConfigurationRuleArrayOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleArrayOutput {
	return o
}

func (o BucketReplicationConfigurationRuleArrayOutput) Index(i pulumi.IntInput) BucketReplicationConfigurationRuleOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) BucketReplicationConfigurationRule {
		return vs[0].([]BucketReplicationConfigurationRule)[vs[1].(int)]
	}).(BucketReplicationConfigurationRuleOutput)
}

type BucketReplicationConfigurationRuleDestination struct {
	// Specifies the overrides to use for object owners on replication. Must be used in conjunction with `accountId` owner override configuration.
	AccessControlTranslation *BucketReplicationConfigurationRuleDestinationAccessControlTranslation `pulumi:"accessControlTranslation"`
	// The Account ID to use for overriding the object owner on replication. Must be used in conjunction with `accessControlTranslation` override configuration.
	AccountId *string `pulumi:"accountId"`
	// The ARN of the S3 bucket where you want Amazon S3 to store replicas of the object identified by the rule.
	Bucket string `pulumi:"bucket"`
	// Destination KMS encryption key ARN for SSE-KMS replication. Must be used in conjunction with
	// `sseKmsEncryptedObjects` source selection criteria.
	ReplicaKmsKeyId *string `pulumi:"replicaKmsKeyId"`
	// The class of storage used to store the object. Can be `STANDARD`, `REDUCED_REDUNDANCY`, `STANDARD_IA`, `ONEZONE_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
	StorageClass *string `pulumi:"storageClass"`
}

type BucketReplicationConfigurationRuleDestinationInput interface {
	pulumi.Input

	ToBucketReplicationConfigurationRuleDestinationOutput() BucketReplicationConfigurationRuleDestinationOutput
	ToBucketReplicationConfigurationRuleDestinationOutputWithContext(context.Context) BucketReplicationConfigurationRuleDestinationOutput
}

type BucketReplicationConfigurationRuleDestinationArgs struct {
	// Specifies the overrides to use for object owners on replication. Must be used in conjunction with `accountId` owner override configuration.
	AccessControlTranslation BucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrInput `pulumi:"accessControlTranslation"`
	// The Account ID to use for overriding the object owner on replication. Must be used in conjunction with `accessControlTranslation` override configuration.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// The ARN of the S3 bucket where you want Amazon S3 to store replicas of the object identified by the rule.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Destination KMS encryption key ARN for SSE-KMS replication. Must be used in conjunction with
	// `sseKmsEncryptedObjects` source selection criteria.
	ReplicaKmsKeyId pulumi.StringPtrInput `pulumi:"replicaKmsKeyId"`
	// The class of storage used to store the object. Can be `STANDARD`, `REDUCED_REDUNDANCY`, `STANDARD_IA`, `ONEZONE_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
	StorageClass pulumi.StringPtrInput `pulumi:"storageClass"`
}

func (BucketReplicationConfigurationRuleDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationConfigurationRuleDestination)(nil)).Elem()
}

func (i BucketReplicationConfigurationRuleDestinationArgs) ToBucketReplicationConfigurationRuleDestinationOutput() BucketReplicationConfigurationRuleDestinationOutput {
	return i.ToBucketReplicationConfigurationRuleDestinationOutputWithContext(context.Background())
}

func (i BucketReplicationConfigurationRuleDestinationArgs) ToBucketReplicationConfigurationRuleDestinationOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigurationRuleDestinationOutput)
}

type BucketReplicationConfigurationRuleDestinationOutput struct { *pulumi.OutputState }

func (BucketReplicationConfigurationRuleDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationConfigurationRuleDestination)(nil)).Elem()
}

func (o BucketReplicationConfigurationRuleDestinationOutput) ToBucketReplicationConfigurationRuleDestinationOutput() BucketReplicationConfigurationRuleDestinationOutput {
	return o
}

func (o BucketReplicationConfigurationRuleDestinationOutput) ToBucketReplicationConfigurationRuleDestinationOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleDestinationOutput {
	return o
}

// Specifies the overrides to use for object owners on replication. Must be used in conjunction with `accountId` owner override configuration.
func (o BucketReplicationConfigurationRuleDestinationOutput) AccessControlTranslation() BucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRuleDestination) *BucketReplicationConfigurationRuleDestinationAccessControlTranslation { return v.AccessControlTranslation }).(BucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutput)
}

// The Account ID to use for overriding the object owner on replication. Must be used in conjunction with `accessControlTranslation` override configuration.
func (o BucketReplicationConfigurationRuleDestinationOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRuleDestination) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The ARN of the S3 bucket where you want Amazon S3 to store replicas of the object identified by the rule.
func (o BucketReplicationConfigurationRuleDestinationOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRuleDestination) string { return v.Bucket }).(pulumi.StringOutput)
}

// Destination KMS encryption key ARN for SSE-KMS replication. Must be used in conjunction with
// `sseKmsEncryptedObjects` source selection criteria.
func (o BucketReplicationConfigurationRuleDestinationOutput) ReplicaKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRuleDestination) *string { return v.ReplicaKmsKeyId }).(pulumi.StringPtrOutput)
}

// The class of storage used to store the object. Can be `STANDARD`, `REDUCED_REDUNDANCY`, `STANDARD_IA`, `ONEZONE_IA`, `INTELLIGENT_TIERING`, `GLACIER`, or `DEEP_ARCHIVE`.
func (o BucketReplicationConfigurationRuleDestinationOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRuleDestination) *string { return v.StorageClass }).(pulumi.StringPtrOutput)
}

type BucketReplicationConfigurationRuleDestinationAccessControlTranslation struct {
	// The override value for the owner on replicated objects. Currently only `Destination` is supported.
	Owner string `pulumi:"owner"`
}

type BucketReplicationConfigurationRuleDestinationAccessControlTranslationInput interface {
	pulumi.Input

	ToBucketReplicationConfigurationRuleDestinationAccessControlTranslationOutput() BucketReplicationConfigurationRuleDestinationAccessControlTranslationOutput
	ToBucketReplicationConfigurationRuleDestinationAccessControlTranslationOutputWithContext(context.Context) BucketReplicationConfigurationRuleDestinationAccessControlTranslationOutput
}

type BucketReplicationConfigurationRuleDestinationAccessControlTranslationArgs struct {
	// The override value for the owner on replicated objects. Currently only `Destination` is supported.
	Owner pulumi.StringInput `pulumi:"owner"`
}

func (BucketReplicationConfigurationRuleDestinationAccessControlTranslationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationConfigurationRuleDestinationAccessControlTranslation)(nil)).Elem()
}

func (i BucketReplicationConfigurationRuleDestinationAccessControlTranslationArgs) ToBucketReplicationConfigurationRuleDestinationAccessControlTranslationOutput() BucketReplicationConfigurationRuleDestinationAccessControlTranslationOutput {
	return i.ToBucketReplicationConfigurationRuleDestinationAccessControlTranslationOutputWithContext(context.Background())
}

func (i BucketReplicationConfigurationRuleDestinationAccessControlTranslationArgs) ToBucketReplicationConfigurationRuleDestinationAccessControlTranslationOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleDestinationAccessControlTranslationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigurationRuleDestinationAccessControlTranslationOutput)
}

func (i BucketReplicationConfigurationRuleDestinationAccessControlTranslationArgs) ToBucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutput() BucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutput {
	return i.ToBucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutputWithContext(context.Background())
}

func (i BucketReplicationConfigurationRuleDestinationAccessControlTranslationArgs) ToBucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigurationRuleDestinationAccessControlTranslationOutput).ToBucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutputWithContext(ctx)
}

type BucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrInput interface {
	pulumi.Input

	ToBucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutput() BucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutput
	ToBucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutputWithContext(context.Context) BucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutput
}

type bucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrType BucketReplicationConfigurationRuleDestinationAccessControlTranslationArgs

func BucketReplicationConfigurationRuleDestinationAccessControlTranslationPtr(v *BucketReplicationConfigurationRuleDestinationAccessControlTranslationArgs) BucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrInput {	return (*bucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrType)(v)
}

func (*bucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketReplicationConfigurationRuleDestinationAccessControlTranslation)(nil)).Elem()
}

func (i *bucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrType) ToBucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutput() BucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutput {
	return i.ToBucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutputWithContext(context.Background())
}

func (i *bucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrType) ToBucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutput)
}

type BucketReplicationConfigurationRuleDestinationAccessControlTranslationOutput struct { *pulumi.OutputState }

func (BucketReplicationConfigurationRuleDestinationAccessControlTranslationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationConfigurationRuleDestinationAccessControlTranslation)(nil)).Elem()
}

func (o BucketReplicationConfigurationRuleDestinationAccessControlTranslationOutput) ToBucketReplicationConfigurationRuleDestinationAccessControlTranslationOutput() BucketReplicationConfigurationRuleDestinationAccessControlTranslationOutput {
	return o
}

func (o BucketReplicationConfigurationRuleDestinationAccessControlTranslationOutput) ToBucketReplicationConfigurationRuleDestinationAccessControlTranslationOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleDestinationAccessControlTranslationOutput {
	return o
}

func (o BucketReplicationConfigurationRuleDestinationAccessControlTranslationOutput) ToBucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutput() BucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutput {
	return o.ToBucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutputWithContext(context.Background())
}

func (o BucketReplicationConfigurationRuleDestinationAccessControlTranslationOutput) ToBucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutput {
	return o.ApplyT(func(v BucketReplicationConfigurationRuleDestinationAccessControlTranslation) *BucketReplicationConfigurationRuleDestinationAccessControlTranslation {
		return &v
	}).(BucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutput)
}
// The override value for the owner on replicated objects. Currently only `Destination` is supported.
func (o BucketReplicationConfigurationRuleDestinationAccessControlTranslationOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRuleDestinationAccessControlTranslation) string { return v.Owner }).(pulumi.StringOutput)
}

type BucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutput struct { *pulumi.OutputState}

func (BucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketReplicationConfigurationRuleDestinationAccessControlTranslation)(nil)).Elem()
}

func (o BucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutput) ToBucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutput() BucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutput {
	return o
}

func (o BucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutput) ToBucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutput {
	return o
}

func (o BucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutput) Elem() BucketReplicationConfigurationRuleDestinationAccessControlTranslationOutput {
	return o.ApplyT(func (v *BucketReplicationConfigurationRuleDestinationAccessControlTranslation) BucketReplicationConfigurationRuleDestinationAccessControlTranslation { return *v }).(BucketReplicationConfigurationRuleDestinationAccessControlTranslationOutput)
}

// The override value for the owner on replicated objects. Currently only `Destination` is supported.
func (o BucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRuleDestinationAccessControlTranslation) string { return v.Owner }).(pulumi.StringOutput)
}

type BucketReplicationConfigurationRuleFilter struct {
	// Object keyname prefix that identifies subset of objects to which the rule applies.
	Prefix *string `pulumi:"prefix"`
	// A mapping of tags that identifies subset of objects to which the rule applies.
	// The rule applies only to objects having all the tags in its tagset.
	Tags map[string]interface{} `pulumi:"tags"`
}

type BucketReplicationConfigurationRuleFilterInput interface {
	pulumi.Input

	ToBucketReplicationConfigurationRuleFilterOutput() BucketReplicationConfigurationRuleFilterOutput
	ToBucketReplicationConfigurationRuleFilterOutputWithContext(context.Context) BucketReplicationConfigurationRuleFilterOutput
}

type BucketReplicationConfigurationRuleFilterArgs struct {
	// Object keyname prefix that identifies subset of objects to which the rule applies.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// A mapping of tags that identifies subset of objects to which the rule applies.
	// The rule applies only to objects having all the tags in its tagset.
	Tags pulumi.MapInput `pulumi:"tags"`
}

func (BucketReplicationConfigurationRuleFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationConfigurationRuleFilter)(nil)).Elem()
}

func (i BucketReplicationConfigurationRuleFilterArgs) ToBucketReplicationConfigurationRuleFilterOutput() BucketReplicationConfigurationRuleFilterOutput {
	return i.ToBucketReplicationConfigurationRuleFilterOutputWithContext(context.Background())
}

func (i BucketReplicationConfigurationRuleFilterArgs) ToBucketReplicationConfigurationRuleFilterOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigurationRuleFilterOutput)
}

func (i BucketReplicationConfigurationRuleFilterArgs) ToBucketReplicationConfigurationRuleFilterPtrOutput() BucketReplicationConfigurationRuleFilterPtrOutput {
	return i.ToBucketReplicationConfigurationRuleFilterPtrOutputWithContext(context.Background())
}

func (i BucketReplicationConfigurationRuleFilterArgs) ToBucketReplicationConfigurationRuleFilterPtrOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigurationRuleFilterOutput).ToBucketReplicationConfigurationRuleFilterPtrOutputWithContext(ctx)
}

type BucketReplicationConfigurationRuleFilterPtrInput interface {
	pulumi.Input

	ToBucketReplicationConfigurationRuleFilterPtrOutput() BucketReplicationConfigurationRuleFilterPtrOutput
	ToBucketReplicationConfigurationRuleFilterPtrOutputWithContext(context.Context) BucketReplicationConfigurationRuleFilterPtrOutput
}

type bucketReplicationConfigurationRuleFilterPtrType BucketReplicationConfigurationRuleFilterArgs

func BucketReplicationConfigurationRuleFilterPtr(v *BucketReplicationConfigurationRuleFilterArgs) BucketReplicationConfigurationRuleFilterPtrInput {	return (*bucketReplicationConfigurationRuleFilterPtrType)(v)
}

func (*bucketReplicationConfigurationRuleFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketReplicationConfigurationRuleFilter)(nil)).Elem()
}

func (i *bucketReplicationConfigurationRuleFilterPtrType) ToBucketReplicationConfigurationRuleFilterPtrOutput() BucketReplicationConfigurationRuleFilterPtrOutput {
	return i.ToBucketReplicationConfigurationRuleFilterPtrOutputWithContext(context.Background())
}

func (i *bucketReplicationConfigurationRuleFilterPtrType) ToBucketReplicationConfigurationRuleFilterPtrOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigurationRuleFilterPtrOutput)
}

type BucketReplicationConfigurationRuleFilterOutput struct { *pulumi.OutputState }

func (BucketReplicationConfigurationRuleFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationConfigurationRuleFilter)(nil)).Elem()
}

func (o BucketReplicationConfigurationRuleFilterOutput) ToBucketReplicationConfigurationRuleFilterOutput() BucketReplicationConfigurationRuleFilterOutput {
	return o
}

func (o BucketReplicationConfigurationRuleFilterOutput) ToBucketReplicationConfigurationRuleFilterOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleFilterOutput {
	return o
}

func (o BucketReplicationConfigurationRuleFilterOutput) ToBucketReplicationConfigurationRuleFilterPtrOutput() BucketReplicationConfigurationRuleFilterPtrOutput {
	return o.ToBucketReplicationConfigurationRuleFilterPtrOutputWithContext(context.Background())
}

func (o BucketReplicationConfigurationRuleFilterOutput) ToBucketReplicationConfigurationRuleFilterPtrOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleFilterPtrOutput {
	return o.ApplyT(func(v BucketReplicationConfigurationRuleFilter) *BucketReplicationConfigurationRuleFilter {
		return &v
	}).(BucketReplicationConfigurationRuleFilterPtrOutput)
}
// Object keyname prefix that identifies subset of objects to which the rule applies.
func (o BucketReplicationConfigurationRuleFilterOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRuleFilter) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// A mapping of tags that identifies subset of objects to which the rule applies.
// The rule applies only to objects having all the tags in its tagset.
func (o BucketReplicationConfigurationRuleFilterOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRuleFilter) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

type BucketReplicationConfigurationRuleFilterPtrOutput struct { *pulumi.OutputState}

func (BucketReplicationConfigurationRuleFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketReplicationConfigurationRuleFilter)(nil)).Elem()
}

func (o BucketReplicationConfigurationRuleFilterPtrOutput) ToBucketReplicationConfigurationRuleFilterPtrOutput() BucketReplicationConfigurationRuleFilterPtrOutput {
	return o
}

func (o BucketReplicationConfigurationRuleFilterPtrOutput) ToBucketReplicationConfigurationRuleFilterPtrOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleFilterPtrOutput {
	return o
}

func (o BucketReplicationConfigurationRuleFilterPtrOutput) Elem() BucketReplicationConfigurationRuleFilterOutput {
	return o.ApplyT(func (v *BucketReplicationConfigurationRuleFilter) BucketReplicationConfigurationRuleFilter { return *v }).(BucketReplicationConfigurationRuleFilterOutput)
}

// Object keyname prefix that identifies subset of objects to which the rule applies.
func (o BucketReplicationConfigurationRuleFilterPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRuleFilter) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// A mapping of tags that identifies subset of objects to which the rule applies.
// The rule applies only to objects having all the tags in its tagset.
func (o BucketReplicationConfigurationRuleFilterPtrOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRuleFilter) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

type BucketReplicationConfigurationRuleSourceSelectionCriteria struct {
	// Match SSE-KMS encrypted objects (documented below). If specified, `replicaKmsKeyId`
	// in `destination` must be specified as well.
	SseKmsEncryptedObjects *BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjects `pulumi:"sseKmsEncryptedObjects"`
}

type BucketReplicationConfigurationRuleSourceSelectionCriteriaInput interface {
	pulumi.Input

	ToBucketReplicationConfigurationRuleSourceSelectionCriteriaOutput() BucketReplicationConfigurationRuleSourceSelectionCriteriaOutput
	ToBucketReplicationConfigurationRuleSourceSelectionCriteriaOutputWithContext(context.Context) BucketReplicationConfigurationRuleSourceSelectionCriteriaOutput
}

type BucketReplicationConfigurationRuleSourceSelectionCriteriaArgs struct {
	// Match SSE-KMS encrypted objects (documented below). If specified, `replicaKmsKeyId`
	// in `destination` must be specified as well.
	SseKmsEncryptedObjects BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrInput `pulumi:"sseKmsEncryptedObjects"`
}

func (BucketReplicationConfigurationRuleSourceSelectionCriteriaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationConfigurationRuleSourceSelectionCriteria)(nil)).Elem()
}

func (i BucketReplicationConfigurationRuleSourceSelectionCriteriaArgs) ToBucketReplicationConfigurationRuleSourceSelectionCriteriaOutput() BucketReplicationConfigurationRuleSourceSelectionCriteriaOutput {
	return i.ToBucketReplicationConfigurationRuleSourceSelectionCriteriaOutputWithContext(context.Background())
}

func (i BucketReplicationConfigurationRuleSourceSelectionCriteriaArgs) ToBucketReplicationConfigurationRuleSourceSelectionCriteriaOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleSourceSelectionCriteriaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigurationRuleSourceSelectionCriteriaOutput)
}

func (i BucketReplicationConfigurationRuleSourceSelectionCriteriaArgs) ToBucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput() BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput {
	return i.ToBucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutputWithContext(context.Background())
}

func (i BucketReplicationConfigurationRuleSourceSelectionCriteriaArgs) ToBucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigurationRuleSourceSelectionCriteriaOutput).ToBucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutputWithContext(ctx)
}

type BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrInput interface {
	pulumi.Input

	ToBucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput() BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput
	ToBucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutputWithContext(context.Context) BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput
}

type bucketReplicationConfigurationRuleSourceSelectionCriteriaPtrType BucketReplicationConfigurationRuleSourceSelectionCriteriaArgs

func BucketReplicationConfigurationRuleSourceSelectionCriteriaPtr(v *BucketReplicationConfigurationRuleSourceSelectionCriteriaArgs) BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrInput {	return (*bucketReplicationConfigurationRuleSourceSelectionCriteriaPtrType)(v)
}

func (*bucketReplicationConfigurationRuleSourceSelectionCriteriaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketReplicationConfigurationRuleSourceSelectionCriteria)(nil)).Elem()
}

func (i *bucketReplicationConfigurationRuleSourceSelectionCriteriaPtrType) ToBucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput() BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput {
	return i.ToBucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutputWithContext(context.Background())
}

func (i *bucketReplicationConfigurationRuleSourceSelectionCriteriaPtrType) ToBucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput)
}

type BucketReplicationConfigurationRuleSourceSelectionCriteriaOutput struct { *pulumi.OutputState }

func (BucketReplicationConfigurationRuleSourceSelectionCriteriaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationConfigurationRuleSourceSelectionCriteria)(nil)).Elem()
}

func (o BucketReplicationConfigurationRuleSourceSelectionCriteriaOutput) ToBucketReplicationConfigurationRuleSourceSelectionCriteriaOutput() BucketReplicationConfigurationRuleSourceSelectionCriteriaOutput {
	return o
}

func (o BucketReplicationConfigurationRuleSourceSelectionCriteriaOutput) ToBucketReplicationConfigurationRuleSourceSelectionCriteriaOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleSourceSelectionCriteriaOutput {
	return o
}

func (o BucketReplicationConfigurationRuleSourceSelectionCriteriaOutput) ToBucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput() BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput {
	return o.ToBucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutputWithContext(context.Background())
}

func (o BucketReplicationConfigurationRuleSourceSelectionCriteriaOutput) ToBucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput {
	return o.ApplyT(func(v BucketReplicationConfigurationRuleSourceSelectionCriteria) *BucketReplicationConfigurationRuleSourceSelectionCriteria {
		return &v
	}).(BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput)
}
// Match SSE-KMS encrypted objects (documented below). If specified, `replicaKmsKeyId`
// in `destination` must be specified as well.
func (o BucketReplicationConfigurationRuleSourceSelectionCriteriaOutput) SseKmsEncryptedObjects() BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRuleSourceSelectionCriteria) *BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjects { return v.SseKmsEncryptedObjects }).(BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput)
}

type BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput struct { *pulumi.OutputState}

func (BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketReplicationConfigurationRuleSourceSelectionCriteria)(nil)).Elem()
}

func (o BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput) ToBucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput() BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput {
	return o
}

func (o BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput) ToBucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput {
	return o
}

func (o BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput) Elem() BucketReplicationConfigurationRuleSourceSelectionCriteriaOutput {
	return o.ApplyT(func (v *BucketReplicationConfigurationRuleSourceSelectionCriteria) BucketReplicationConfigurationRuleSourceSelectionCriteria { return *v }).(BucketReplicationConfigurationRuleSourceSelectionCriteriaOutput)
}

// Match SSE-KMS encrypted objects (documented below). If specified, `replicaKmsKeyId`
// in `destination` must be specified as well.
func (o BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput) SseKmsEncryptedObjects() BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRuleSourceSelectionCriteria) *BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjects { return v.SseKmsEncryptedObjects }).(BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput)
}

type BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjects struct {
	// Boolean which indicates if this criteria is enabled.
	Enabled bool `pulumi:"enabled"`
}

type BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsInput interface {
	pulumi.Input

	ToBucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsOutput() BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsOutput
	ToBucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsOutputWithContext(context.Context) BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsOutput
}

type BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsArgs struct {
	// Boolean which indicates if this criteria is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjects)(nil)).Elem()
}

func (i BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsArgs) ToBucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsOutput() BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsOutput {
	return i.ToBucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsOutputWithContext(context.Background())
}

func (i BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsArgs) ToBucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsOutput)
}

func (i BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsArgs) ToBucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput() BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput {
	return i.ToBucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutputWithContext(context.Background())
}

func (i BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsArgs) ToBucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsOutput).ToBucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutputWithContext(ctx)
}

type BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrInput interface {
	pulumi.Input

	ToBucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput() BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput
	ToBucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutputWithContext(context.Context) BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput
}

type bucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrType BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsArgs

func BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtr(v *BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsArgs) BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrInput {	return (*bucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrType)(v)
}

func (*bucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjects)(nil)).Elem()
}

func (i *bucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrType) ToBucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput() BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput {
	return i.ToBucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutputWithContext(context.Background())
}

func (i *bucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrType) ToBucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput)
}

type BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsOutput struct { *pulumi.OutputState }

func (BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjects)(nil)).Elem()
}

func (o BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsOutput) ToBucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsOutput() BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsOutput {
	return o
}

func (o BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsOutput) ToBucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsOutput {
	return o
}

func (o BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsOutput) ToBucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput() BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput {
	return o.ToBucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutputWithContext(context.Background())
}

func (o BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsOutput) ToBucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput {
	return o.ApplyT(func(v BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjects) *BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjects {
		return &v
	}).(BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput)
}
// Boolean which indicates if this criteria is enabled.
func (o BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjects) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput struct { *pulumi.OutputState}

func (BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjects)(nil)).Elem()
}

func (o BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput) ToBucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput() BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput {
	return o
}

func (o BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput) ToBucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutputWithContext(ctx context.Context) BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput {
	return o
}

func (o BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput) Elem() BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsOutput {
	return o.ApplyT(func (v *BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjects) BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjects { return *v }).(BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsOutput)
}

// Boolean which indicates if this criteria is enabled.
func (o BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func (v BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjects) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type BucketServerSideEncryptionConfiguration struct {
	// The Object Lock rule in place for this bucket.
	Rule BucketServerSideEncryptionConfigurationRule `pulumi:"rule"`
}

type BucketServerSideEncryptionConfigurationInput interface {
	pulumi.Input

	ToBucketServerSideEncryptionConfigurationOutput() BucketServerSideEncryptionConfigurationOutput
	ToBucketServerSideEncryptionConfigurationOutputWithContext(context.Context) BucketServerSideEncryptionConfigurationOutput
}

type BucketServerSideEncryptionConfigurationArgs struct {
	// The Object Lock rule in place for this bucket.
	Rule BucketServerSideEncryptionConfigurationRuleInput `pulumi:"rule"`
}

func (BucketServerSideEncryptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketServerSideEncryptionConfiguration)(nil)).Elem()
}

func (i BucketServerSideEncryptionConfigurationArgs) ToBucketServerSideEncryptionConfigurationOutput() BucketServerSideEncryptionConfigurationOutput {
	return i.ToBucketServerSideEncryptionConfigurationOutputWithContext(context.Background())
}

func (i BucketServerSideEncryptionConfigurationArgs) ToBucketServerSideEncryptionConfigurationOutputWithContext(ctx context.Context) BucketServerSideEncryptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketServerSideEncryptionConfigurationOutput)
}

func (i BucketServerSideEncryptionConfigurationArgs) ToBucketServerSideEncryptionConfigurationPtrOutput() BucketServerSideEncryptionConfigurationPtrOutput {
	return i.ToBucketServerSideEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i BucketServerSideEncryptionConfigurationArgs) ToBucketServerSideEncryptionConfigurationPtrOutputWithContext(ctx context.Context) BucketServerSideEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketServerSideEncryptionConfigurationOutput).ToBucketServerSideEncryptionConfigurationPtrOutputWithContext(ctx)
}

type BucketServerSideEncryptionConfigurationPtrInput interface {
	pulumi.Input

	ToBucketServerSideEncryptionConfigurationPtrOutput() BucketServerSideEncryptionConfigurationPtrOutput
	ToBucketServerSideEncryptionConfigurationPtrOutputWithContext(context.Context) BucketServerSideEncryptionConfigurationPtrOutput
}

type bucketServerSideEncryptionConfigurationPtrType BucketServerSideEncryptionConfigurationArgs

func BucketServerSideEncryptionConfigurationPtr(v *BucketServerSideEncryptionConfigurationArgs) BucketServerSideEncryptionConfigurationPtrInput {	return (*bucketServerSideEncryptionConfigurationPtrType)(v)
}

func (*bucketServerSideEncryptionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketServerSideEncryptionConfiguration)(nil)).Elem()
}

func (i *bucketServerSideEncryptionConfigurationPtrType) ToBucketServerSideEncryptionConfigurationPtrOutput() BucketServerSideEncryptionConfigurationPtrOutput {
	return i.ToBucketServerSideEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i *bucketServerSideEncryptionConfigurationPtrType) ToBucketServerSideEncryptionConfigurationPtrOutputWithContext(ctx context.Context) BucketServerSideEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketServerSideEncryptionConfigurationPtrOutput)
}

type BucketServerSideEncryptionConfigurationOutput struct { *pulumi.OutputState }

func (BucketServerSideEncryptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketServerSideEncryptionConfiguration)(nil)).Elem()
}

func (o BucketServerSideEncryptionConfigurationOutput) ToBucketServerSideEncryptionConfigurationOutput() BucketServerSideEncryptionConfigurationOutput {
	return o
}

func (o BucketServerSideEncryptionConfigurationOutput) ToBucketServerSideEncryptionConfigurationOutputWithContext(ctx context.Context) BucketServerSideEncryptionConfigurationOutput {
	return o
}

func (o BucketServerSideEncryptionConfigurationOutput) ToBucketServerSideEncryptionConfigurationPtrOutput() BucketServerSideEncryptionConfigurationPtrOutput {
	return o.ToBucketServerSideEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (o BucketServerSideEncryptionConfigurationOutput) ToBucketServerSideEncryptionConfigurationPtrOutputWithContext(ctx context.Context) BucketServerSideEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v BucketServerSideEncryptionConfiguration) *BucketServerSideEncryptionConfiguration {
		return &v
	}).(BucketServerSideEncryptionConfigurationPtrOutput)
}
// The Object Lock rule in place for this bucket.
func (o BucketServerSideEncryptionConfigurationOutput) Rule() BucketServerSideEncryptionConfigurationRuleOutput {
	return o.ApplyT(func (v BucketServerSideEncryptionConfiguration) BucketServerSideEncryptionConfigurationRule { return v.Rule }).(BucketServerSideEncryptionConfigurationRuleOutput)
}

type BucketServerSideEncryptionConfigurationPtrOutput struct { *pulumi.OutputState}

func (BucketServerSideEncryptionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketServerSideEncryptionConfiguration)(nil)).Elem()
}

func (o BucketServerSideEncryptionConfigurationPtrOutput) ToBucketServerSideEncryptionConfigurationPtrOutput() BucketServerSideEncryptionConfigurationPtrOutput {
	return o
}

func (o BucketServerSideEncryptionConfigurationPtrOutput) ToBucketServerSideEncryptionConfigurationPtrOutputWithContext(ctx context.Context) BucketServerSideEncryptionConfigurationPtrOutput {
	return o
}

func (o BucketServerSideEncryptionConfigurationPtrOutput) Elem() BucketServerSideEncryptionConfigurationOutput {
	return o.ApplyT(func (v *BucketServerSideEncryptionConfiguration) BucketServerSideEncryptionConfiguration { return *v }).(BucketServerSideEncryptionConfigurationOutput)
}

// The Object Lock rule in place for this bucket.
func (o BucketServerSideEncryptionConfigurationPtrOutput) Rule() BucketServerSideEncryptionConfigurationRuleOutput {
	return o.ApplyT(func (v BucketServerSideEncryptionConfiguration) BucketServerSideEncryptionConfigurationRule { return v.Rule }).(BucketServerSideEncryptionConfigurationRuleOutput)
}

type BucketServerSideEncryptionConfigurationRule struct {
	// A single object for setting server-side encryption by default. (documented below)
	ApplyServerSideEncryptionByDefault BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault `pulumi:"applyServerSideEncryptionByDefault"`
}

type BucketServerSideEncryptionConfigurationRuleInput interface {
	pulumi.Input

	ToBucketServerSideEncryptionConfigurationRuleOutput() BucketServerSideEncryptionConfigurationRuleOutput
	ToBucketServerSideEncryptionConfigurationRuleOutputWithContext(context.Context) BucketServerSideEncryptionConfigurationRuleOutput
}

type BucketServerSideEncryptionConfigurationRuleArgs struct {
	// A single object for setting server-side encryption by default. (documented below)
	ApplyServerSideEncryptionByDefault BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultInput `pulumi:"applyServerSideEncryptionByDefault"`
}

func (BucketServerSideEncryptionConfigurationRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketServerSideEncryptionConfigurationRule)(nil)).Elem()
}

func (i BucketServerSideEncryptionConfigurationRuleArgs) ToBucketServerSideEncryptionConfigurationRuleOutput() BucketServerSideEncryptionConfigurationRuleOutput {
	return i.ToBucketServerSideEncryptionConfigurationRuleOutputWithContext(context.Background())
}

func (i BucketServerSideEncryptionConfigurationRuleArgs) ToBucketServerSideEncryptionConfigurationRuleOutputWithContext(ctx context.Context) BucketServerSideEncryptionConfigurationRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketServerSideEncryptionConfigurationRuleOutput)
}

type BucketServerSideEncryptionConfigurationRuleOutput struct { *pulumi.OutputState }

func (BucketServerSideEncryptionConfigurationRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketServerSideEncryptionConfigurationRule)(nil)).Elem()
}

func (o BucketServerSideEncryptionConfigurationRuleOutput) ToBucketServerSideEncryptionConfigurationRuleOutput() BucketServerSideEncryptionConfigurationRuleOutput {
	return o
}

func (o BucketServerSideEncryptionConfigurationRuleOutput) ToBucketServerSideEncryptionConfigurationRuleOutputWithContext(ctx context.Context) BucketServerSideEncryptionConfigurationRuleOutput {
	return o
}

// A single object for setting server-side encryption by default. (documented below)
func (o BucketServerSideEncryptionConfigurationRuleOutput) ApplyServerSideEncryptionByDefault() BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput {
	return o.ApplyT(func (v BucketServerSideEncryptionConfigurationRule) BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault { return v.ApplyServerSideEncryptionByDefault }).(BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput)
}

type BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault struct {
	// The AWS KMS master key ID used for the SSE-KMS encryption. This can only be used when you set the value of `sseAlgorithm` as `aws:kms`. The default `aws/s3` AWS KMS master key is used if this element is absent while the `sseAlgorithm` is `aws:kms`.
	KmsMasterKeyId *string `pulumi:"kmsMasterKeyId"`
	// The server-side encryption algorithm to use. Valid values are `AES256` and `aws:kms`
	SseAlgorithm string `pulumi:"sseAlgorithm"`
}

type BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultInput interface {
	pulumi.Input

	ToBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput() BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput
	ToBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutputWithContext(context.Context) BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput
}

type BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs struct {
	// The AWS KMS master key ID used for the SSE-KMS encryption. This can only be used when you set the value of `sseAlgorithm` as `aws:kms`. The default `aws/s3` AWS KMS master key is used if this element is absent while the `sseAlgorithm` is `aws:kms`.
	KmsMasterKeyId pulumi.StringPtrInput `pulumi:"kmsMasterKeyId"`
	// The server-side encryption algorithm to use. Valid values are `AES256` and `aws:kms`
	SseAlgorithm pulumi.StringInput `pulumi:"sseAlgorithm"`
}

func (BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault)(nil)).Elem()
}

func (i BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs) ToBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput() BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput {
	return i.ToBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutputWithContext(context.Background())
}

func (i BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultArgs) ToBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutputWithContext(ctx context.Context) BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput)
}

type BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput struct { *pulumi.OutputState }

func (BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault)(nil)).Elem()
}

func (o BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput) ToBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput() BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput {
	return o
}

func (o BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput) ToBucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutputWithContext(ctx context.Context) BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput {
	return o
}

// The AWS KMS master key ID used for the SSE-KMS encryption. This can only be used when you set the value of `sseAlgorithm` as `aws:kms`. The default `aws/s3` AWS KMS master key is used if this element is absent while the `sseAlgorithm` is `aws:kms`.
func (o BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput) KmsMasterKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault) *string { return v.KmsMasterKeyId }).(pulumi.StringPtrOutput)
}

// The server-side encryption algorithm to use. Valid values are `AES256` and `aws:kms`
func (o BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput) SseAlgorithm() pulumi.StringOutput {
	return o.ApplyT(func (v BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefault) string { return v.SseAlgorithm }).(pulumi.StringOutput)
}

type BucketVersioning struct {
	// Boolean which indicates if this criteria is enabled.
	Enabled *bool `pulumi:"enabled"`
	// Enable MFA delete for either `Change the versioning state of your bucket` or `Permanently delete an object version`. Default is `false`.
	MfaDelete *bool `pulumi:"mfaDelete"`
}

type BucketVersioningInput interface {
	pulumi.Input

	ToBucketVersioningOutput() BucketVersioningOutput
	ToBucketVersioningOutputWithContext(context.Context) BucketVersioningOutput
}

type BucketVersioningArgs struct {
	// Boolean which indicates if this criteria is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Enable MFA delete for either `Change the versioning state of your bucket` or `Permanently delete an object version`. Default is `false`.
	MfaDelete pulumi.BoolPtrInput `pulumi:"mfaDelete"`
}

func (BucketVersioningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketVersioning)(nil)).Elem()
}

func (i BucketVersioningArgs) ToBucketVersioningOutput() BucketVersioningOutput {
	return i.ToBucketVersioningOutputWithContext(context.Background())
}

func (i BucketVersioningArgs) ToBucketVersioningOutputWithContext(ctx context.Context) BucketVersioningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketVersioningOutput)
}

func (i BucketVersioningArgs) ToBucketVersioningPtrOutput() BucketVersioningPtrOutput {
	return i.ToBucketVersioningPtrOutputWithContext(context.Background())
}

func (i BucketVersioningArgs) ToBucketVersioningPtrOutputWithContext(ctx context.Context) BucketVersioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketVersioningOutput).ToBucketVersioningPtrOutputWithContext(ctx)
}

type BucketVersioningPtrInput interface {
	pulumi.Input

	ToBucketVersioningPtrOutput() BucketVersioningPtrOutput
	ToBucketVersioningPtrOutputWithContext(context.Context) BucketVersioningPtrOutput
}

type bucketVersioningPtrType BucketVersioningArgs

func BucketVersioningPtr(v *BucketVersioningArgs) BucketVersioningPtrInput {	return (*bucketVersioningPtrType)(v)
}

func (*bucketVersioningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketVersioning)(nil)).Elem()
}

func (i *bucketVersioningPtrType) ToBucketVersioningPtrOutput() BucketVersioningPtrOutput {
	return i.ToBucketVersioningPtrOutputWithContext(context.Background())
}

func (i *bucketVersioningPtrType) ToBucketVersioningPtrOutputWithContext(ctx context.Context) BucketVersioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketVersioningPtrOutput)
}

type BucketVersioningOutput struct { *pulumi.OutputState }

func (BucketVersioningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketVersioning)(nil)).Elem()
}

func (o BucketVersioningOutput) ToBucketVersioningOutput() BucketVersioningOutput {
	return o
}

func (o BucketVersioningOutput) ToBucketVersioningOutputWithContext(ctx context.Context) BucketVersioningOutput {
	return o
}

func (o BucketVersioningOutput) ToBucketVersioningPtrOutput() BucketVersioningPtrOutput {
	return o.ToBucketVersioningPtrOutputWithContext(context.Background())
}

func (o BucketVersioningOutput) ToBucketVersioningPtrOutputWithContext(ctx context.Context) BucketVersioningPtrOutput {
	return o.ApplyT(func(v BucketVersioning) *BucketVersioning {
		return &v
	}).(BucketVersioningPtrOutput)
}
// Boolean which indicates if this criteria is enabled.
func (o BucketVersioningOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v BucketVersioning) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Enable MFA delete for either `Change the versioning state of your bucket` or `Permanently delete an object version`. Default is `false`.
func (o BucketVersioningOutput) MfaDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v BucketVersioning) *bool { return v.MfaDelete }).(pulumi.BoolPtrOutput)
}

type BucketVersioningPtrOutput struct { *pulumi.OutputState}

func (BucketVersioningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketVersioning)(nil)).Elem()
}

func (o BucketVersioningPtrOutput) ToBucketVersioningPtrOutput() BucketVersioningPtrOutput {
	return o
}

func (o BucketVersioningPtrOutput) ToBucketVersioningPtrOutputWithContext(ctx context.Context) BucketVersioningPtrOutput {
	return o
}

func (o BucketVersioningPtrOutput) Elem() BucketVersioningOutput {
	return o.ApplyT(func (v *BucketVersioning) BucketVersioning { return *v }).(BucketVersioningOutput)
}

// Boolean which indicates if this criteria is enabled.
func (o BucketVersioningPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v BucketVersioning) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Enable MFA delete for either `Change the versioning state of your bucket` or `Permanently delete an object version`. Default is `false`.
func (o BucketVersioningPtrOutput) MfaDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func (v BucketVersioning) *bool { return v.MfaDelete }).(pulumi.BoolPtrOutput)
}

type BucketWebsite struct {
	// An absolute path to the document to return in case of a 4XX error.
	ErrorDocument *string `pulumi:"errorDocument"`
	// Amazon S3 returns this index document when requests are made to the root domain or any of the subfolders.
	IndexDocument *string `pulumi:"indexDocument"`
	// A hostname to redirect all website requests for this bucket to. Hostname can optionally be prefixed with a protocol (`http://` or `https://`) to use when redirecting requests. The default is the protocol that is used in the original request.
	RedirectAllRequestsTo *string `pulumi:"redirectAllRequestsTo"`
	// A json array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
	// describing redirect behavior and when redirects are applied.
	RoutingRules interface{} `pulumi:"routingRules"`
}

type BucketWebsiteInput interface {
	pulumi.Input

	ToBucketWebsiteOutput() BucketWebsiteOutput
	ToBucketWebsiteOutputWithContext(context.Context) BucketWebsiteOutput
}

type BucketWebsiteArgs struct {
	// An absolute path to the document to return in case of a 4XX error.
	ErrorDocument pulumi.StringPtrInput `pulumi:"errorDocument"`
	// Amazon S3 returns this index document when requests are made to the root domain or any of the subfolders.
	IndexDocument pulumi.StringPtrInput `pulumi:"indexDocument"`
	// A hostname to redirect all website requests for this bucket to. Hostname can optionally be prefixed with a protocol (`http://` or `https://`) to use when redirecting requests. The default is the protocol that is used in the original request.
	RedirectAllRequestsTo pulumi.StringPtrInput `pulumi:"redirectAllRequestsTo"`
	// A json array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
	// describing redirect behavior and when redirects are applied.
	RoutingRules pulumi.Input `pulumi:"routingRules"`
}

func (BucketWebsiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketWebsite)(nil)).Elem()
}

func (i BucketWebsiteArgs) ToBucketWebsiteOutput() BucketWebsiteOutput {
	return i.ToBucketWebsiteOutputWithContext(context.Background())
}

func (i BucketWebsiteArgs) ToBucketWebsiteOutputWithContext(ctx context.Context) BucketWebsiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsiteOutput)
}

func (i BucketWebsiteArgs) ToBucketWebsitePtrOutput() BucketWebsitePtrOutput {
	return i.ToBucketWebsitePtrOutputWithContext(context.Background())
}

func (i BucketWebsiteArgs) ToBucketWebsitePtrOutputWithContext(ctx context.Context) BucketWebsitePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsiteOutput).ToBucketWebsitePtrOutputWithContext(ctx)
}

type BucketWebsitePtrInput interface {
	pulumi.Input

	ToBucketWebsitePtrOutput() BucketWebsitePtrOutput
	ToBucketWebsitePtrOutputWithContext(context.Context) BucketWebsitePtrOutput
}

type bucketWebsitePtrType BucketWebsiteArgs

func BucketWebsitePtr(v *BucketWebsiteArgs) BucketWebsitePtrInput {	return (*bucketWebsitePtrType)(v)
}

func (*bucketWebsitePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketWebsite)(nil)).Elem()
}

func (i *bucketWebsitePtrType) ToBucketWebsitePtrOutput() BucketWebsitePtrOutput {
	return i.ToBucketWebsitePtrOutputWithContext(context.Background())
}

func (i *bucketWebsitePtrType) ToBucketWebsitePtrOutputWithContext(ctx context.Context) BucketWebsitePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsitePtrOutput)
}

type BucketWebsiteOutput struct { *pulumi.OutputState }

func (BucketWebsiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketWebsite)(nil)).Elem()
}

func (o BucketWebsiteOutput) ToBucketWebsiteOutput() BucketWebsiteOutput {
	return o
}

func (o BucketWebsiteOutput) ToBucketWebsiteOutputWithContext(ctx context.Context) BucketWebsiteOutput {
	return o
}

func (o BucketWebsiteOutput) ToBucketWebsitePtrOutput() BucketWebsitePtrOutput {
	return o.ToBucketWebsitePtrOutputWithContext(context.Background())
}

func (o BucketWebsiteOutput) ToBucketWebsitePtrOutputWithContext(ctx context.Context) BucketWebsitePtrOutput {
	return o.ApplyT(func(v BucketWebsite) *BucketWebsite {
		return &v
	}).(BucketWebsitePtrOutput)
}
// An absolute path to the document to return in case of a 4XX error.
func (o BucketWebsiteOutput) ErrorDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketWebsite) *string { return v.ErrorDocument }).(pulumi.StringPtrOutput)
}

// Amazon S3 returns this index document when requests are made to the root domain or any of the subfolders.
func (o BucketWebsiteOutput) IndexDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketWebsite) *string { return v.IndexDocument }).(pulumi.StringPtrOutput)
}

// A hostname to redirect all website requests for this bucket to. Hostname can optionally be prefixed with a protocol (`http://` or `https://`) to use when redirecting requests. The default is the protocol that is used in the original request.
func (o BucketWebsiteOutput) RedirectAllRequestsTo() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketWebsite) *string { return v.RedirectAllRequestsTo }).(pulumi.StringPtrOutput)
}

// A json array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
// describing redirect behavior and when redirects are applied.
func (o BucketWebsiteOutput) RoutingRules() pulumi.AnyOutput {
	return o.ApplyT(func (v BucketWebsite) interface{} { return v.RoutingRules }).(pulumi.AnyOutput)
}

type BucketWebsitePtrOutput struct { *pulumi.OutputState}

func (BucketWebsitePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketWebsite)(nil)).Elem()
}

func (o BucketWebsitePtrOutput) ToBucketWebsitePtrOutput() BucketWebsitePtrOutput {
	return o
}

func (o BucketWebsitePtrOutput) ToBucketWebsitePtrOutputWithContext(ctx context.Context) BucketWebsitePtrOutput {
	return o
}

func (o BucketWebsitePtrOutput) Elem() BucketWebsiteOutput {
	return o.ApplyT(func (v *BucketWebsite) BucketWebsite { return *v }).(BucketWebsiteOutput)
}

// An absolute path to the document to return in case of a 4XX error.
func (o BucketWebsitePtrOutput) ErrorDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketWebsite) *string { return v.ErrorDocument }).(pulumi.StringPtrOutput)
}

// Amazon S3 returns this index document when requests are made to the root domain or any of the subfolders.
func (o BucketWebsitePtrOutput) IndexDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketWebsite) *string { return v.IndexDocument }).(pulumi.StringPtrOutput)
}

// A hostname to redirect all website requests for this bucket to. Hostname can optionally be prefixed with a protocol (`http://` or `https://`) to use when redirecting requests. The default is the protocol that is used in the original request.
func (o BucketWebsitePtrOutput) RedirectAllRequestsTo() pulumi.StringPtrOutput {
	return o.ApplyT(func (v BucketWebsite) *string { return v.RedirectAllRequestsTo }).(pulumi.StringPtrOutput)
}

// A json array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
// describing redirect behavior and when redirects are applied.
func (o BucketWebsitePtrOutput) RoutingRules() pulumi.AnyOutput {
	return o.ApplyT(func (v BucketWebsite) interface{} { return v.RoutingRules }).(pulumi.AnyOutput)
}

type InventoryDestination struct {
	// The S3 bucket configuration where inventory results are published (documented below).
	Bucket InventoryDestinationBucket `pulumi:"bucket"`
}

type InventoryDestinationInput interface {
	pulumi.Input

	ToInventoryDestinationOutput() InventoryDestinationOutput
	ToInventoryDestinationOutputWithContext(context.Context) InventoryDestinationOutput
}

type InventoryDestinationArgs struct {
	// The S3 bucket configuration where inventory results are published (documented below).
	Bucket InventoryDestinationBucketInput `pulumi:"bucket"`
}

func (InventoryDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryDestination)(nil)).Elem()
}

func (i InventoryDestinationArgs) ToInventoryDestinationOutput() InventoryDestinationOutput {
	return i.ToInventoryDestinationOutputWithContext(context.Background())
}

func (i InventoryDestinationArgs) ToInventoryDestinationOutputWithContext(ctx context.Context) InventoryDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryDestinationOutput)
}

func (i InventoryDestinationArgs) ToInventoryDestinationPtrOutput() InventoryDestinationPtrOutput {
	return i.ToInventoryDestinationPtrOutputWithContext(context.Background())
}

func (i InventoryDestinationArgs) ToInventoryDestinationPtrOutputWithContext(ctx context.Context) InventoryDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryDestinationOutput).ToInventoryDestinationPtrOutputWithContext(ctx)
}

type InventoryDestinationPtrInput interface {
	pulumi.Input

	ToInventoryDestinationPtrOutput() InventoryDestinationPtrOutput
	ToInventoryDestinationPtrOutputWithContext(context.Context) InventoryDestinationPtrOutput
}

type inventoryDestinationPtrType InventoryDestinationArgs

func InventoryDestinationPtr(v *InventoryDestinationArgs) InventoryDestinationPtrInput {	return (*inventoryDestinationPtrType)(v)
}

func (*inventoryDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryDestination)(nil)).Elem()
}

func (i *inventoryDestinationPtrType) ToInventoryDestinationPtrOutput() InventoryDestinationPtrOutput {
	return i.ToInventoryDestinationPtrOutputWithContext(context.Background())
}

func (i *inventoryDestinationPtrType) ToInventoryDestinationPtrOutputWithContext(ctx context.Context) InventoryDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryDestinationPtrOutput)
}

type InventoryDestinationOutput struct { *pulumi.OutputState }

func (InventoryDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryDestination)(nil)).Elem()
}

func (o InventoryDestinationOutput) ToInventoryDestinationOutput() InventoryDestinationOutput {
	return o
}

func (o InventoryDestinationOutput) ToInventoryDestinationOutputWithContext(ctx context.Context) InventoryDestinationOutput {
	return o
}

func (o InventoryDestinationOutput) ToInventoryDestinationPtrOutput() InventoryDestinationPtrOutput {
	return o.ToInventoryDestinationPtrOutputWithContext(context.Background())
}

func (o InventoryDestinationOutput) ToInventoryDestinationPtrOutputWithContext(ctx context.Context) InventoryDestinationPtrOutput {
	return o.ApplyT(func(v InventoryDestination) *InventoryDestination {
		return &v
	}).(InventoryDestinationPtrOutput)
}
// The S3 bucket configuration where inventory results are published (documented below).
func (o InventoryDestinationOutput) Bucket() InventoryDestinationBucketOutput {
	return o.ApplyT(func (v InventoryDestination) InventoryDestinationBucket { return v.Bucket }).(InventoryDestinationBucketOutput)
}

type InventoryDestinationPtrOutput struct { *pulumi.OutputState}

func (InventoryDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryDestination)(nil)).Elem()
}

func (o InventoryDestinationPtrOutput) ToInventoryDestinationPtrOutput() InventoryDestinationPtrOutput {
	return o
}

func (o InventoryDestinationPtrOutput) ToInventoryDestinationPtrOutputWithContext(ctx context.Context) InventoryDestinationPtrOutput {
	return o
}

func (o InventoryDestinationPtrOutput) Elem() InventoryDestinationOutput {
	return o.ApplyT(func (v *InventoryDestination) InventoryDestination { return *v }).(InventoryDestinationOutput)
}

// The S3 bucket configuration where inventory results are published (documented below).
func (o InventoryDestinationPtrOutput) Bucket() InventoryDestinationBucketOutput {
	return o.ApplyT(func (v InventoryDestination) InventoryDestinationBucket { return v.Bucket }).(InventoryDestinationBucketOutput)
}

type InventoryDestinationBucket struct {
	// The ID of the account that owns the destination bucket. Recommended to be set to prevent problems if the destination bucket ownership changes.
	AccountId *string `pulumi:"accountId"`
	// The Amazon S3 bucket ARN of the destination.
	BucketArn string `pulumi:"bucketArn"`
	// Contains the type of server-side encryption to use to encrypt the inventory (documented below).
	Encryption *InventoryDestinationBucketEncryption `pulumi:"encryption"`
	// Specifies the output format of the inventory results. Can be `CSV`, [`ORC`](https://orc.apache.org/) or [`Parquet`](https://parquet.apache.org/).
	Format string `pulumi:"format"`
	// The prefix that is prepended to all inventory results.
	Prefix *string `pulumi:"prefix"`
}

type InventoryDestinationBucketInput interface {
	pulumi.Input

	ToInventoryDestinationBucketOutput() InventoryDestinationBucketOutput
	ToInventoryDestinationBucketOutputWithContext(context.Context) InventoryDestinationBucketOutput
}

type InventoryDestinationBucketArgs struct {
	// The ID of the account that owns the destination bucket. Recommended to be set to prevent problems if the destination bucket ownership changes.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// The Amazon S3 bucket ARN of the destination.
	BucketArn pulumi.StringInput `pulumi:"bucketArn"`
	// Contains the type of server-side encryption to use to encrypt the inventory (documented below).
	Encryption InventoryDestinationBucketEncryptionPtrInput `pulumi:"encryption"`
	// Specifies the output format of the inventory results. Can be `CSV`, [`ORC`](https://orc.apache.org/) or [`Parquet`](https://parquet.apache.org/).
	Format pulumi.StringInput `pulumi:"format"`
	// The prefix that is prepended to all inventory results.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (InventoryDestinationBucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryDestinationBucket)(nil)).Elem()
}

func (i InventoryDestinationBucketArgs) ToInventoryDestinationBucketOutput() InventoryDestinationBucketOutput {
	return i.ToInventoryDestinationBucketOutputWithContext(context.Background())
}

func (i InventoryDestinationBucketArgs) ToInventoryDestinationBucketOutputWithContext(ctx context.Context) InventoryDestinationBucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryDestinationBucketOutput)
}

type InventoryDestinationBucketOutput struct { *pulumi.OutputState }

func (InventoryDestinationBucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryDestinationBucket)(nil)).Elem()
}

func (o InventoryDestinationBucketOutput) ToInventoryDestinationBucketOutput() InventoryDestinationBucketOutput {
	return o
}

func (o InventoryDestinationBucketOutput) ToInventoryDestinationBucketOutputWithContext(ctx context.Context) InventoryDestinationBucketOutput {
	return o
}

// The ID of the account that owns the destination bucket. Recommended to be set to prevent problems if the destination bucket ownership changes.
func (o InventoryDestinationBucketOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InventoryDestinationBucket) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The Amazon S3 bucket ARN of the destination.
func (o InventoryDestinationBucketOutput) BucketArn() pulumi.StringOutput {
	return o.ApplyT(func (v InventoryDestinationBucket) string { return v.BucketArn }).(pulumi.StringOutput)
}

// Contains the type of server-side encryption to use to encrypt the inventory (documented below).
func (o InventoryDestinationBucketOutput) Encryption() InventoryDestinationBucketEncryptionPtrOutput {
	return o.ApplyT(func (v InventoryDestinationBucket) *InventoryDestinationBucketEncryption { return v.Encryption }).(InventoryDestinationBucketEncryptionPtrOutput)
}

// Specifies the output format of the inventory results. Can be `CSV`, [`ORC`](https://orc.apache.org/) or [`Parquet`](https://parquet.apache.org/).
func (o InventoryDestinationBucketOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func (v InventoryDestinationBucket) string { return v.Format }).(pulumi.StringOutput)
}

// The prefix that is prepended to all inventory results.
func (o InventoryDestinationBucketOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InventoryDestinationBucket) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type InventoryDestinationBucketEncryption struct {
	// Specifies to use server-side encryption with AWS KMS-managed keys to encrypt the inventory file (documented below).
	SseKms *InventoryDestinationBucketEncryptionSseKms `pulumi:"sseKms"`
	// Specifies to use server-side encryption with Amazon S3-managed keys (SSE-S3) to encrypt the inventory file.
	SseS3 *InventoryDestinationBucketEncryptionSseS3 `pulumi:"sseS3"`
}

type InventoryDestinationBucketEncryptionInput interface {
	pulumi.Input

	ToInventoryDestinationBucketEncryptionOutput() InventoryDestinationBucketEncryptionOutput
	ToInventoryDestinationBucketEncryptionOutputWithContext(context.Context) InventoryDestinationBucketEncryptionOutput
}

type InventoryDestinationBucketEncryptionArgs struct {
	// Specifies to use server-side encryption with AWS KMS-managed keys to encrypt the inventory file (documented below).
	SseKms InventoryDestinationBucketEncryptionSseKmsPtrInput `pulumi:"sseKms"`
	// Specifies to use server-side encryption with Amazon S3-managed keys (SSE-S3) to encrypt the inventory file.
	SseS3 InventoryDestinationBucketEncryptionSseS3PtrInput `pulumi:"sseS3"`
}

func (InventoryDestinationBucketEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryDestinationBucketEncryption)(nil)).Elem()
}

func (i InventoryDestinationBucketEncryptionArgs) ToInventoryDestinationBucketEncryptionOutput() InventoryDestinationBucketEncryptionOutput {
	return i.ToInventoryDestinationBucketEncryptionOutputWithContext(context.Background())
}

func (i InventoryDestinationBucketEncryptionArgs) ToInventoryDestinationBucketEncryptionOutputWithContext(ctx context.Context) InventoryDestinationBucketEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryDestinationBucketEncryptionOutput)
}

func (i InventoryDestinationBucketEncryptionArgs) ToInventoryDestinationBucketEncryptionPtrOutput() InventoryDestinationBucketEncryptionPtrOutput {
	return i.ToInventoryDestinationBucketEncryptionPtrOutputWithContext(context.Background())
}

func (i InventoryDestinationBucketEncryptionArgs) ToInventoryDestinationBucketEncryptionPtrOutputWithContext(ctx context.Context) InventoryDestinationBucketEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryDestinationBucketEncryptionOutput).ToInventoryDestinationBucketEncryptionPtrOutputWithContext(ctx)
}

type InventoryDestinationBucketEncryptionPtrInput interface {
	pulumi.Input

	ToInventoryDestinationBucketEncryptionPtrOutput() InventoryDestinationBucketEncryptionPtrOutput
	ToInventoryDestinationBucketEncryptionPtrOutputWithContext(context.Context) InventoryDestinationBucketEncryptionPtrOutput
}

type inventoryDestinationBucketEncryptionPtrType InventoryDestinationBucketEncryptionArgs

func InventoryDestinationBucketEncryptionPtr(v *InventoryDestinationBucketEncryptionArgs) InventoryDestinationBucketEncryptionPtrInput {	return (*inventoryDestinationBucketEncryptionPtrType)(v)
}

func (*inventoryDestinationBucketEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryDestinationBucketEncryption)(nil)).Elem()
}

func (i *inventoryDestinationBucketEncryptionPtrType) ToInventoryDestinationBucketEncryptionPtrOutput() InventoryDestinationBucketEncryptionPtrOutput {
	return i.ToInventoryDestinationBucketEncryptionPtrOutputWithContext(context.Background())
}

func (i *inventoryDestinationBucketEncryptionPtrType) ToInventoryDestinationBucketEncryptionPtrOutputWithContext(ctx context.Context) InventoryDestinationBucketEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryDestinationBucketEncryptionPtrOutput)
}

type InventoryDestinationBucketEncryptionOutput struct { *pulumi.OutputState }

func (InventoryDestinationBucketEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryDestinationBucketEncryption)(nil)).Elem()
}

func (o InventoryDestinationBucketEncryptionOutput) ToInventoryDestinationBucketEncryptionOutput() InventoryDestinationBucketEncryptionOutput {
	return o
}

func (o InventoryDestinationBucketEncryptionOutput) ToInventoryDestinationBucketEncryptionOutputWithContext(ctx context.Context) InventoryDestinationBucketEncryptionOutput {
	return o
}

func (o InventoryDestinationBucketEncryptionOutput) ToInventoryDestinationBucketEncryptionPtrOutput() InventoryDestinationBucketEncryptionPtrOutput {
	return o.ToInventoryDestinationBucketEncryptionPtrOutputWithContext(context.Background())
}

func (o InventoryDestinationBucketEncryptionOutput) ToInventoryDestinationBucketEncryptionPtrOutputWithContext(ctx context.Context) InventoryDestinationBucketEncryptionPtrOutput {
	return o.ApplyT(func(v InventoryDestinationBucketEncryption) *InventoryDestinationBucketEncryption {
		return &v
	}).(InventoryDestinationBucketEncryptionPtrOutput)
}
// Specifies to use server-side encryption with AWS KMS-managed keys to encrypt the inventory file (documented below).
func (o InventoryDestinationBucketEncryptionOutput) SseKms() InventoryDestinationBucketEncryptionSseKmsPtrOutput {
	return o.ApplyT(func (v InventoryDestinationBucketEncryption) *InventoryDestinationBucketEncryptionSseKms { return v.SseKms }).(InventoryDestinationBucketEncryptionSseKmsPtrOutput)
}

// Specifies to use server-side encryption with Amazon S3-managed keys (SSE-S3) to encrypt the inventory file.
func (o InventoryDestinationBucketEncryptionOutput) SseS3() InventoryDestinationBucketEncryptionSseS3PtrOutput {
	return o.ApplyT(func (v InventoryDestinationBucketEncryption) *InventoryDestinationBucketEncryptionSseS3 { return v.SseS3 }).(InventoryDestinationBucketEncryptionSseS3PtrOutput)
}

type InventoryDestinationBucketEncryptionPtrOutput struct { *pulumi.OutputState}

func (InventoryDestinationBucketEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryDestinationBucketEncryption)(nil)).Elem()
}

func (o InventoryDestinationBucketEncryptionPtrOutput) ToInventoryDestinationBucketEncryptionPtrOutput() InventoryDestinationBucketEncryptionPtrOutput {
	return o
}

func (o InventoryDestinationBucketEncryptionPtrOutput) ToInventoryDestinationBucketEncryptionPtrOutputWithContext(ctx context.Context) InventoryDestinationBucketEncryptionPtrOutput {
	return o
}

func (o InventoryDestinationBucketEncryptionPtrOutput) Elem() InventoryDestinationBucketEncryptionOutput {
	return o.ApplyT(func (v *InventoryDestinationBucketEncryption) InventoryDestinationBucketEncryption { return *v }).(InventoryDestinationBucketEncryptionOutput)
}

// Specifies to use server-side encryption with AWS KMS-managed keys to encrypt the inventory file (documented below).
func (o InventoryDestinationBucketEncryptionPtrOutput) SseKms() InventoryDestinationBucketEncryptionSseKmsPtrOutput {
	return o.ApplyT(func (v InventoryDestinationBucketEncryption) *InventoryDestinationBucketEncryptionSseKms { return v.SseKms }).(InventoryDestinationBucketEncryptionSseKmsPtrOutput)
}

// Specifies to use server-side encryption with Amazon S3-managed keys (SSE-S3) to encrypt the inventory file.
func (o InventoryDestinationBucketEncryptionPtrOutput) SseS3() InventoryDestinationBucketEncryptionSseS3PtrOutput {
	return o.ApplyT(func (v InventoryDestinationBucketEncryption) *InventoryDestinationBucketEncryptionSseS3 { return v.SseS3 }).(InventoryDestinationBucketEncryptionSseS3PtrOutput)
}

type InventoryDestinationBucketEncryptionSseKms struct {
	// The ARN of the KMS customer master key (CMK) used to encrypt the inventory file.
	KeyId string `pulumi:"keyId"`
}

type InventoryDestinationBucketEncryptionSseKmsInput interface {
	pulumi.Input

	ToInventoryDestinationBucketEncryptionSseKmsOutput() InventoryDestinationBucketEncryptionSseKmsOutput
	ToInventoryDestinationBucketEncryptionSseKmsOutputWithContext(context.Context) InventoryDestinationBucketEncryptionSseKmsOutput
}

type InventoryDestinationBucketEncryptionSseKmsArgs struct {
	// The ARN of the KMS customer master key (CMK) used to encrypt the inventory file.
	KeyId pulumi.StringInput `pulumi:"keyId"`
}

func (InventoryDestinationBucketEncryptionSseKmsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryDestinationBucketEncryptionSseKms)(nil)).Elem()
}

func (i InventoryDestinationBucketEncryptionSseKmsArgs) ToInventoryDestinationBucketEncryptionSseKmsOutput() InventoryDestinationBucketEncryptionSseKmsOutput {
	return i.ToInventoryDestinationBucketEncryptionSseKmsOutputWithContext(context.Background())
}

func (i InventoryDestinationBucketEncryptionSseKmsArgs) ToInventoryDestinationBucketEncryptionSseKmsOutputWithContext(ctx context.Context) InventoryDestinationBucketEncryptionSseKmsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryDestinationBucketEncryptionSseKmsOutput)
}

func (i InventoryDestinationBucketEncryptionSseKmsArgs) ToInventoryDestinationBucketEncryptionSseKmsPtrOutput() InventoryDestinationBucketEncryptionSseKmsPtrOutput {
	return i.ToInventoryDestinationBucketEncryptionSseKmsPtrOutputWithContext(context.Background())
}

func (i InventoryDestinationBucketEncryptionSseKmsArgs) ToInventoryDestinationBucketEncryptionSseKmsPtrOutputWithContext(ctx context.Context) InventoryDestinationBucketEncryptionSseKmsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryDestinationBucketEncryptionSseKmsOutput).ToInventoryDestinationBucketEncryptionSseKmsPtrOutputWithContext(ctx)
}

type InventoryDestinationBucketEncryptionSseKmsPtrInput interface {
	pulumi.Input

	ToInventoryDestinationBucketEncryptionSseKmsPtrOutput() InventoryDestinationBucketEncryptionSseKmsPtrOutput
	ToInventoryDestinationBucketEncryptionSseKmsPtrOutputWithContext(context.Context) InventoryDestinationBucketEncryptionSseKmsPtrOutput
}

type inventoryDestinationBucketEncryptionSseKmsPtrType InventoryDestinationBucketEncryptionSseKmsArgs

func InventoryDestinationBucketEncryptionSseKmsPtr(v *InventoryDestinationBucketEncryptionSseKmsArgs) InventoryDestinationBucketEncryptionSseKmsPtrInput {	return (*inventoryDestinationBucketEncryptionSseKmsPtrType)(v)
}

func (*inventoryDestinationBucketEncryptionSseKmsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryDestinationBucketEncryptionSseKms)(nil)).Elem()
}

func (i *inventoryDestinationBucketEncryptionSseKmsPtrType) ToInventoryDestinationBucketEncryptionSseKmsPtrOutput() InventoryDestinationBucketEncryptionSseKmsPtrOutput {
	return i.ToInventoryDestinationBucketEncryptionSseKmsPtrOutputWithContext(context.Background())
}

func (i *inventoryDestinationBucketEncryptionSseKmsPtrType) ToInventoryDestinationBucketEncryptionSseKmsPtrOutputWithContext(ctx context.Context) InventoryDestinationBucketEncryptionSseKmsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryDestinationBucketEncryptionSseKmsPtrOutput)
}

type InventoryDestinationBucketEncryptionSseKmsOutput struct { *pulumi.OutputState }

func (InventoryDestinationBucketEncryptionSseKmsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryDestinationBucketEncryptionSseKms)(nil)).Elem()
}

func (o InventoryDestinationBucketEncryptionSseKmsOutput) ToInventoryDestinationBucketEncryptionSseKmsOutput() InventoryDestinationBucketEncryptionSseKmsOutput {
	return o
}

func (o InventoryDestinationBucketEncryptionSseKmsOutput) ToInventoryDestinationBucketEncryptionSseKmsOutputWithContext(ctx context.Context) InventoryDestinationBucketEncryptionSseKmsOutput {
	return o
}

func (o InventoryDestinationBucketEncryptionSseKmsOutput) ToInventoryDestinationBucketEncryptionSseKmsPtrOutput() InventoryDestinationBucketEncryptionSseKmsPtrOutput {
	return o.ToInventoryDestinationBucketEncryptionSseKmsPtrOutputWithContext(context.Background())
}

func (o InventoryDestinationBucketEncryptionSseKmsOutput) ToInventoryDestinationBucketEncryptionSseKmsPtrOutputWithContext(ctx context.Context) InventoryDestinationBucketEncryptionSseKmsPtrOutput {
	return o.ApplyT(func(v InventoryDestinationBucketEncryptionSseKms) *InventoryDestinationBucketEncryptionSseKms {
		return &v
	}).(InventoryDestinationBucketEncryptionSseKmsPtrOutput)
}
// The ARN of the KMS customer master key (CMK) used to encrypt the inventory file.
func (o InventoryDestinationBucketEncryptionSseKmsOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func (v InventoryDestinationBucketEncryptionSseKms) string { return v.KeyId }).(pulumi.StringOutput)
}

type InventoryDestinationBucketEncryptionSseKmsPtrOutput struct { *pulumi.OutputState}

func (InventoryDestinationBucketEncryptionSseKmsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryDestinationBucketEncryptionSseKms)(nil)).Elem()
}

func (o InventoryDestinationBucketEncryptionSseKmsPtrOutput) ToInventoryDestinationBucketEncryptionSseKmsPtrOutput() InventoryDestinationBucketEncryptionSseKmsPtrOutput {
	return o
}

func (o InventoryDestinationBucketEncryptionSseKmsPtrOutput) ToInventoryDestinationBucketEncryptionSseKmsPtrOutputWithContext(ctx context.Context) InventoryDestinationBucketEncryptionSseKmsPtrOutput {
	return o
}

func (o InventoryDestinationBucketEncryptionSseKmsPtrOutput) Elem() InventoryDestinationBucketEncryptionSseKmsOutput {
	return o.ApplyT(func (v *InventoryDestinationBucketEncryptionSseKms) InventoryDestinationBucketEncryptionSseKms { return *v }).(InventoryDestinationBucketEncryptionSseKmsOutput)
}

// The ARN of the KMS customer master key (CMK) used to encrypt the inventory file.
func (o InventoryDestinationBucketEncryptionSseKmsPtrOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func (v InventoryDestinationBucketEncryptionSseKms) string { return v.KeyId }).(pulumi.StringOutput)
}

type InventoryDestinationBucketEncryptionSseS3 struct {
}

type InventoryDestinationBucketEncryptionSseS3Input interface {
	pulumi.Input

	ToInventoryDestinationBucketEncryptionSseS3Output() InventoryDestinationBucketEncryptionSseS3Output
	ToInventoryDestinationBucketEncryptionSseS3OutputWithContext(context.Context) InventoryDestinationBucketEncryptionSseS3Output
}

type InventoryDestinationBucketEncryptionSseS3Args struct {
}

func (InventoryDestinationBucketEncryptionSseS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryDestinationBucketEncryptionSseS3)(nil)).Elem()
}

func (i InventoryDestinationBucketEncryptionSseS3Args) ToInventoryDestinationBucketEncryptionSseS3Output() InventoryDestinationBucketEncryptionSseS3Output {
	return i.ToInventoryDestinationBucketEncryptionSseS3OutputWithContext(context.Background())
}

func (i InventoryDestinationBucketEncryptionSseS3Args) ToInventoryDestinationBucketEncryptionSseS3OutputWithContext(ctx context.Context) InventoryDestinationBucketEncryptionSseS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryDestinationBucketEncryptionSseS3Output)
}

func (i InventoryDestinationBucketEncryptionSseS3Args) ToInventoryDestinationBucketEncryptionSseS3PtrOutput() InventoryDestinationBucketEncryptionSseS3PtrOutput {
	return i.ToInventoryDestinationBucketEncryptionSseS3PtrOutputWithContext(context.Background())
}

func (i InventoryDestinationBucketEncryptionSseS3Args) ToInventoryDestinationBucketEncryptionSseS3PtrOutputWithContext(ctx context.Context) InventoryDestinationBucketEncryptionSseS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryDestinationBucketEncryptionSseS3Output).ToInventoryDestinationBucketEncryptionSseS3PtrOutputWithContext(ctx)
}

type InventoryDestinationBucketEncryptionSseS3PtrInput interface {
	pulumi.Input

	ToInventoryDestinationBucketEncryptionSseS3PtrOutput() InventoryDestinationBucketEncryptionSseS3PtrOutput
	ToInventoryDestinationBucketEncryptionSseS3PtrOutputWithContext(context.Context) InventoryDestinationBucketEncryptionSseS3PtrOutput
}

type inventoryDestinationBucketEncryptionSseS3PtrType InventoryDestinationBucketEncryptionSseS3Args

func InventoryDestinationBucketEncryptionSseS3Ptr(v *InventoryDestinationBucketEncryptionSseS3Args) InventoryDestinationBucketEncryptionSseS3PtrInput {	return (*inventoryDestinationBucketEncryptionSseS3PtrType)(v)
}

func (*inventoryDestinationBucketEncryptionSseS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryDestinationBucketEncryptionSseS3)(nil)).Elem()
}

func (i *inventoryDestinationBucketEncryptionSseS3PtrType) ToInventoryDestinationBucketEncryptionSseS3PtrOutput() InventoryDestinationBucketEncryptionSseS3PtrOutput {
	return i.ToInventoryDestinationBucketEncryptionSseS3PtrOutputWithContext(context.Background())
}

func (i *inventoryDestinationBucketEncryptionSseS3PtrType) ToInventoryDestinationBucketEncryptionSseS3PtrOutputWithContext(ctx context.Context) InventoryDestinationBucketEncryptionSseS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryDestinationBucketEncryptionSseS3PtrOutput)
}

type InventoryDestinationBucketEncryptionSseS3Output struct { *pulumi.OutputState }

func (InventoryDestinationBucketEncryptionSseS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryDestinationBucketEncryptionSseS3)(nil)).Elem()
}

func (o InventoryDestinationBucketEncryptionSseS3Output) ToInventoryDestinationBucketEncryptionSseS3Output() InventoryDestinationBucketEncryptionSseS3Output {
	return o
}

func (o InventoryDestinationBucketEncryptionSseS3Output) ToInventoryDestinationBucketEncryptionSseS3OutputWithContext(ctx context.Context) InventoryDestinationBucketEncryptionSseS3Output {
	return o
}

func (o InventoryDestinationBucketEncryptionSseS3Output) ToInventoryDestinationBucketEncryptionSseS3PtrOutput() InventoryDestinationBucketEncryptionSseS3PtrOutput {
	return o.ToInventoryDestinationBucketEncryptionSseS3PtrOutputWithContext(context.Background())
}

func (o InventoryDestinationBucketEncryptionSseS3Output) ToInventoryDestinationBucketEncryptionSseS3PtrOutputWithContext(ctx context.Context) InventoryDestinationBucketEncryptionSseS3PtrOutput {
	return o.ApplyT(func(v InventoryDestinationBucketEncryptionSseS3) *InventoryDestinationBucketEncryptionSseS3 {
		return &v
	}).(InventoryDestinationBucketEncryptionSseS3PtrOutput)
}
type InventoryDestinationBucketEncryptionSseS3PtrOutput struct { *pulumi.OutputState}

func (InventoryDestinationBucketEncryptionSseS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryDestinationBucketEncryptionSseS3)(nil)).Elem()
}

func (o InventoryDestinationBucketEncryptionSseS3PtrOutput) ToInventoryDestinationBucketEncryptionSseS3PtrOutput() InventoryDestinationBucketEncryptionSseS3PtrOutput {
	return o
}

func (o InventoryDestinationBucketEncryptionSseS3PtrOutput) ToInventoryDestinationBucketEncryptionSseS3PtrOutputWithContext(ctx context.Context) InventoryDestinationBucketEncryptionSseS3PtrOutput {
	return o
}

func (o InventoryDestinationBucketEncryptionSseS3PtrOutput) Elem() InventoryDestinationBucketEncryptionSseS3Output {
	return o.ApplyT(func (v *InventoryDestinationBucketEncryptionSseS3) InventoryDestinationBucketEncryptionSseS3 { return *v }).(InventoryDestinationBucketEncryptionSseS3Output)
}

type InventoryFilter struct {
	// The prefix that is prepended to all inventory results.
	Prefix *string `pulumi:"prefix"`
}

type InventoryFilterInput interface {
	pulumi.Input

	ToInventoryFilterOutput() InventoryFilterOutput
	ToInventoryFilterOutputWithContext(context.Context) InventoryFilterOutput
}

type InventoryFilterArgs struct {
	// The prefix that is prepended to all inventory results.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (InventoryFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryFilter)(nil)).Elem()
}

func (i InventoryFilterArgs) ToInventoryFilterOutput() InventoryFilterOutput {
	return i.ToInventoryFilterOutputWithContext(context.Background())
}

func (i InventoryFilterArgs) ToInventoryFilterOutputWithContext(ctx context.Context) InventoryFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryFilterOutput)
}

func (i InventoryFilterArgs) ToInventoryFilterPtrOutput() InventoryFilterPtrOutput {
	return i.ToInventoryFilterPtrOutputWithContext(context.Background())
}

func (i InventoryFilterArgs) ToInventoryFilterPtrOutputWithContext(ctx context.Context) InventoryFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryFilterOutput).ToInventoryFilterPtrOutputWithContext(ctx)
}

type InventoryFilterPtrInput interface {
	pulumi.Input

	ToInventoryFilterPtrOutput() InventoryFilterPtrOutput
	ToInventoryFilterPtrOutputWithContext(context.Context) InventoryFilterPtrOutput
}

type inventoryFilterPtrType InventoryFilterArgs

func InventoryFilterPtr(v *InventoryFilterArgs) InventoryFilterPtrInput {	return (*inventoryFilterPtrType)(v)
}

func (*inventoryFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryFilter)(nil)).Elem()
}

func (i *inventoryFilterPtrType) ToInventoryFilterPtrOutput() InventoryFilterPtrOutput {
	return i.ToInventoryFilterPtrOutputWithContext(context.Background())
}

func (i *inventoryFilterPtrType) ToInventoryFilterPtrOutputWithContext(ctx context.Context) InventoryFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryFilterPtrOutput)
}

type InventoryFilterOutput struct { *pulumi.OutputState }

func (InventoryFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventoryFilter)(nil)).Elem()
}

func (o InventoryFilterOutput) ToInventoryFilterOutput() InventoryFilterOutput {
	return o
}

func (o InventoryFilterOutput) ToInventoryFilterOutputWithContext(ctx context.Context) InventoryFilterOutput {
	return o
}

func (o InventoryFilterOutput) ToInventoryFilterPtrOutput() InventoryFilterPtrOutput {
	return o.ToInventoryFilterPtrOutputWithContext(context.Background())
}

func (o InventoryFilterOutput) ToInventoryFilterPtrOutputWithContext(ctx context.Context) InventoryFilterPtrOutput {
	return o.ApplyT(func(v InventoryFilter) *InventoryFilter {
		return &v
	}).(InventoryFilterPtrOutput)
}
// The prefix that is prepended to all inventory results.
func (o InventoryFilterOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InventoryFilter) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type InventoryFilterPtrOutput struct { *pulumi.OutputState}

func (InventoryFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventoryFilter)(nil)).Elem()
}

func (o InventoryFilterPtrOutput) ToInventoryFilterPtrOutput() InventoryFilterPtrOutput {
	return o
}

func (o InventoryFilterPtrOutput) ToInventoryFilterPtrOutputWithContext(ctx context.Context) InventoryFilterPtrOutput {
	return o
}

func (o InventoryFilterPtrOutput) Elem() InventoryFilterOutput {
	return o.ApplyT(func (v *InventoryFilter) InventoryFilter { return *v }).(InventoryFilterOutput)
}

// The prefix that is prepended to all inventory results.
func (o InventoryFilterPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func (v InventoryFilter) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type InventorySchedule struct {
	// Specifies how frequently inventory results are produced. Valid values: `Daily`, `Weekly`.
	Frequency string `pulumi:"frequency"`
}

type InventoryScheduleInput interface {
	pulumi.Input

	ToInventoryScheduleOutput() InventoryScheduleOutput
	ToInventoryScheduleOutputWithContext(context.Context) InventoryScheduleOutput
}

type InventoryScheduleArgs struct {
	// Specifies how frequently inventory results are produced. Valid values: `Daily`, `Weekly`.
	Frequency pulumi.StringInput `pulumi:"frequency"`
}

func (InventoryScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InventorySchedule)(nil)).Elem()
}

func (i InventoryScheduleArgs) ToInventoryScheduleOutput() InventoryScheduleOutput {
	return i.ToInventoryScheduleOutputWithContext(context.Background())
}

func (i InventoryScheduleArgs) ToInventoryScheduleOutputWithContext(ctx context.Context) InventoryScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryScheduleOutput)
}

func (i InventoryScheduleArgs) ToInventorySchedulePtrOutput() InventorySchedulePtrOutput {
	return i.ToInventorySchedulePtrOutputWithContext(context.Background())
}

func (i InventoryScheduleArgs) ToInventorySchedulePtrOutputWithContext(ctx context.Context) InventorySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventoryScheduleOutput).ToInventorySchedulePtrOutputWithContext(ctx)
}

type InventorySchedulePtrInput interface {
	pulumi.Input

	ToInventorySchedulePtrOutput() InventorySchedulePtrOutput
	ToInventorySchedulePtrOutputWithContext(context.Context) InventorySchedulePtrOutput
}

type inventorySchedulePtrType InventoryScheduleArgs

func InventorySchedulePtr(v *InventoryScheduleArgs) InventorySchedulePtrInput {	return (*inventorySchedulePtrType)(v)
}

func (*inventorySchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InventorySchedule)(nil)).Elem()
}

func (i *inventorySchedulePtrType) ToInventorySchedulePtrOutput() InventorySchedulePtrOutput {
	return i.ToInventorySchedulePtrOutputWithContext(context.Background())
}

func (i *inventorySchedulePtrType) ToInventorySchedulePtrOutputWithContext(ctx context.Context) InventorySchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InventorySchedulePtrOutput)
}

type InventoryScheduleOutput struct { *pulumi.OutputState }

func (InventoryScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InventorySchedule)(nil)).Elem()
}

func (o InventoryScheduleOutput) ToInventoryScheduleOutput() InventoryScheduleOutput {
	return o
}

func (o InventoryScheduleOutput) ToInventoryScheduleOutputWithContext(ctx context.Context) InventoryScheduleOutput {
	return o
}

func (o InventoryScheduleOutput) ToInventorySchedulePtrOutput() InventorySchedulePtrOutput {
	return o.ToInventorySchedulePtrOutputWithContext(context.Background())
}

func (o InventoryScheduleOutput) ToInventorySchedulePtrOutputWithContext(ctx context.Context) InventorySchedulePtrOutput {
	return o.ApplyT(func(v InventorySchedule) *InventorySchedule {
		return &v
	}).(InventorySchedulePtrOutput)
}
// Specifies how frequently inventory results are produced. Valid values: `Daily`, `Weekly`.
func (o InventoryScheduleOutput) Frequency() pulumi.StringOutput {
	return o.ApplyT(func (v InventorySchedule) string { return v.Frequency }).(pulumi.StringOutput)
}

type InventorySchedulePtrOutput struct { *pulumi.OutputState}

func (InventorySchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InventorySchedule)(nil)).Elem()
}

func (o InventorySchedulePtrOutput) ToInventorySchedulePtrOutput() InventorySchedulePtrOutput {
	return o
}

func (o InventorySchedulePtrOutput) ToInventorySchedulePtrOutputWithContext(ctx context.Context) InventorySchedulePtrOutput {
	return o
}

func (o InventorySchedulePtrOutput) Elem() InventoryScheduleOutput {
	return o.ApplyT(func (v *InventorySchedule) InventorySchedule { return *v }).(InventoryScheduleOutput)
}

// Specifies how frequently inventory results are produced. Valid values: `Daily`, `Weekly`.
func (o InventorySchedulePtrOutput) Frequency() pulumi.StringOutput {
	return o.ApplyT(func (v InventorySchedule) string { return v.Frequency }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(BucketCorsRuleOutput{})
	pulumi.RegisterOutputType(BucketCorsRuleArrayOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleArrayOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleExpirationOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleExpirationPtrOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleNoncurrentVersionExpirationOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleNoncurrentVersionExpirationPtrOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleNoncurrentVersionTransitionOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleNoncurrentVersionTransitionArrayOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleTransitionOutput{})
	pulumi.RegisterOutputType(BucketLifecycleRuleTransitionArrayOutput{})
	pulumi.RegisterOutputType(BucketLoggingOutput{})
	pulumi.RegisterOutputType(BucketLoggingArrayOutput{})
	pulumi.RegisterOutputType(BucketMetricFilterOutput{})
	pulumi.RegisterOutputType(BucketMetricFilterPtrOutput{})
	pulumi.RegisterOutputType(BucketNotificationLambdaFunctionOutput{})
	pulumi.RegisterOutputType(BucketNotificationLambdaFunctionArrayOutput{})
	pulumi.RegisterOutputType(BucketNotificationQueueOutput{})
	pulumi.RegisterOutputType(BucketNotificationQueueArrayOutput{})
	pulumi.RegisterOutputType(BucketNotificationTopicOutput{})
	pulumi.RegisterOutputType(BucketNotificationTopicArrayOutput{})
	pulumi.RegisterOutputType(BucketObjectLockConfigurationOutput{})
	pulumi.RegisterOutputType(BucketObjectLockConfigurationPtrOutput{})
	pulumi.RegisterOutputType(BucketObjectLockConfigurationRuleOutput{})
	pulumi.RegisterOutputType(BucketObjectLockConfigurationRulePtrOutput{})
	pulumi.RegisterOutputType(BucketObjectLockConfigurationRuleDefaultRetentionOutput{})
	pulumi.RegisterOutputType(BucketReplicationConfigurationOutput{})
	pulumi.RegisterOutputType(BucketReplicationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(BucketReplicationConfigurationRuleOutput{})
	pulumi.RegisterOutputType(BucketReplicationConfigurationRuleArrayOutput{})
	pulumi.RegisterOutputType(BucketReplicationConfigurationRuleDestinationOutput{})
	pulumi.RegisterOutputType(BucketReplicationConfigurationRuleDestinationAccessControlTranslationOutput{})
	pulumi.RegisterOutputType(BucketReplicationConfigurationRuleDestinationAccessControlTranslationPtrOutput{})
	pulumi.RegisterOutputType(BucketReplicationConfigurationRuleFilterOutput{})
	pulumi.RegisterOutputType(BucketReplicationConfigurationRuleFilterPtrOutput{})
	pulumi.RegisterOutputType(BucketReplicationConfigurationRuleSourceSelectionCriteriaOutput{})
	pulumi.RegisterOutputType(BucketReplicationConfigurationRuleSourceSelectionCriteriaPtrOutput{})
	pulumi.RegisterOutputType(BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsOutput{})
	pulumi.RegisterOutputType(BucketReplicationConfigurationRuleSourceSelectionCriteriaSseKmsEncryptedObjectsPtrOutput{})
	pulumi.RegisterOutputType(BucketServerSideEncryptionConfigurationOutput{})
	pulumi.RegisterOutputType(BucketServerSideEncryptionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(BucketServerSideEncryptionConfigurationRuleOutput{})
	pulumi.RegisterOutputType(BucketServerSideEncryptionConfigurationRuleApplyServerSideEncryptionByDefaultOutput{})
	pulumi.RegisterOutputType(BucketVersioningOutput{})
	pulumi.RegisterOutputType(BucketVersioningPtrOutput{})
	pulumi.RegisterOutputType(BucketWebsiteOutput{})
	pulumi.RegisterOutputType(BucketWebsitePtrOutput{})
	pulumi.RegisterOutputType(InventoryDestinationOutput{})
	pulumi.RegisterOutputType(InventoryDestinationPtrOutput{})
	pulumi.RegisterOutputType(InventoryDestinationBucketOutput{})
	pulumi.RegisterOutputType(InventoryDestinationBucketEncryptionOutput{})
	pulumi.RegisterOutputType(InventoryDestinationBucketEncryptionPtrOutput{})
	pulumi.RegisterOutputType(InventoryDestinationBucketEncryptionSseKmsOutput{})
	pulumi.RegisterOutputType(InventoryDestinationBucketEncryptionSseKmsPtrOutput{})
	pulumi.RegisterOutputType(InventoryDestinationBucketEncryptionSseS3Output{})
	pulumi.RegisterOutputType(InventoryDestinationBucketEncryptionSseS3PtrOutput{})
	pulumi.RegisterOutputType(InventoryFilterOutput{})
	pulumi.RegisterOutputType(InventoryFilterPtrOutput{})
	pulumi.RegisterOutputType(InventoryScheduleOutput{})
	pulumi.RegisterOutputType(InventorySchedulePtrOutput{})
}
