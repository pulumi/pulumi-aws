// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an Amazon S3 Tables Table Bucket.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/s3"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := s3.NewTablesTableBucket(ctx, "example", &s3.TablesTableBucketArgs{
//				Name: pulumi.String("example-bucket"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import S3 Tables Table Bucket using the `arn`. For example:
//
// ```sh
// $ pulumi import aws:s3/tablesTableBucket:TablesTableBucket example arn:aws:s3tables:us-west-2:123456789012:bucket/example-bucket
// ```
type TablesTableBucket struct {
	pulumi.CustomResourceState

	// ARN of the table bucket.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Date and time when the bucket was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// A single table bucket maintenance configuration block.
	// See `maintenanceConfiguration` below
	MaintenanceConfiguration TablesTableBucketMaintenanceConfigurationOutput `pulumi:"maintenanceConfiguration"`
	// Name of the table bucket.
	// Must be between 3 and 63 characters in length.
	// Can consist of lowercase letters, numbers, and hyphens, and must begin and end with a lowercase letter or number.
	// A full list of bucket naming rules may be found in S3 Tables documentation.
	//
	// The following argument is optional:
	Name pulumi.StringOutput `pulumi:"name"`
	// Account ID of the account that owns the table bucket.
	OwnerAccountId pulumi.StringOutput `pulumi:"ownerAccountId"`
}

// NewTablesTableBucket registers a new resource with the given unique name, arguments, and options.
func NewTablesTableBucket(ctx *pulumi.Context,
	name string, args *TablesTableBucketArgs, opts ...pulumi.ResourceOption) (*TablesTableBucket, error) {
	if args == nil {
		args = &TablesTableBucketArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TablesTableBucket
	err := ctx.RegisterResource("aws:s3/tablesTableBucket:TablesTableBucket", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTablesTableBucket gets an existing TablesTableBucket resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTablesTableBucket(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TablesTableBucketState, opts ...pulumi.ResourceOption) (*TablesTableBucket, error) {
	var resource TablesTableBucket
	err := ctx.ReadResource("aws:s3/tablesTableBucket:TablesTableBucket", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TablesTableBucket resources.
type tablesTableBucketState struct {
	// ARN of the table bucket.
	Arn *string `pulumi:"arn"`
	// Date and time when the bucket was created.
	CreatedAt *string `pulumi:"createdAt"`
	// A single table bucket maintenance configuration block.
	// See `maintenanceConfiguration` below
	MaintenanceConfiguration *TablesTableBucketMaintenanceConfiguration `pulumi:"maintenanceConfiguration"`
	// Name of the table bucket.
	// Must be between 3 and 63 characters in length.
	// Can consist of lowercase letters, numbers, and hyphens, and must begin and end with a lowercase letter or number.
	// A full list of bucket naming rules may be found in S3 Tables documentation.
	//
	// The following argument is optional:
	Name *string `pulumi:"name"`
	// Account ID of the account that owns the table bucket.
	OwnerAccountId *string `pulumi:"ownerAccountId"`
}

type TablesTableBucketState struct {
	// ARN of the table bucket.
	Arn pulumi.StringPtrInput
	// Date and time when the bucket was created.
	CreatedAt pulumi.StringPtrInput
	// A single table bucket maintenance configuration block.
	// See `maintenanceConfiguration` below
	MaintenanceConfiguration TablesTableBucketMaintenanceConfigurationPtrInput
	// Name of the table bucket.
	// Must be between 3 and 63 characters in length.
	// Can consist of lowercase letters, numbers, and hyphens, and must begin and end with a lowercase letter or number.
	// A full list of bucket naming rules may be found in S3 Tables documentation.
	//
	// The following argument is optional:
	Name pulumi.StringPtrInput
	// Account ID of the account that owns the table bucket.
	OwnerAccountId pulumi.StringPtrInput
}

func (TablesTableBucketState) ElementType() reflect.Type {
	return reflect.TypeOf((*tablesTableBucketState)(nil)).Elem()
}

type tablesTableBucketArgs struct {
	// A single table bucket maintenance configuration block.
	// See `maintenanceConfiguration` below
	MaintenanceConfiguration *TablesTableBucketMaintenanceConfiguration `pulumi:"maintenanceConfiguration"`
	// Name of the table bucket.
	// Must be between 3 and 63 characters in length.
	// Can consist of lowercase letters, numbers, and hyphens, and must begin and end with a lowercase letter or number.
	// A full list of bucket naming rules may be found in S3 Tables documentation.
	//
	// The following argument is optional:
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a TablesTableBucket resource.
type TablesTableBucketArgs struct {
	// A single table bucket maintenance configuration block.
	// See `maintenanceConfiguration` below
	MaintenanceConfiguration TablesTableBucketMaintenanceConfigurationPtrInput
	// Name of the table bucket.
	// Must be between 3 and 63 characters in length.
	// Can consist of lowercase letters, numbers, and hyphens, and must begin and end with a lowercase letter or number.
	// A full list of bucket naming rules may be found in S3 Tables documentation.
	//
	// The following argument is optional:
	Name pulumi.StringPtrInput
}

func (TablesTableBucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tablesTableBucketArgs)(nil)).Elem()
}

type TablesTableBucketInput interface {
	pulumi.Input

	ToTablesTableBucketOutput() TablesTableBucketOutput
	ToTablesTableBucketOutputWithContext(ctx context.Context) TablesTableBucketOutput
}

func (*TablesTableBucket) ElementType() reflect.Type {
	return reflect.TypeOf((**TablesTableBucket)(nil)).Elem()
}

func (i *TablesTableBucket) ToTablesTableBucketOutput() TablesTableBucketOutput {
	return i.ToTablesTableBucketOutputWithContext(context.Background())
}

func (i *TablesTableBucket) ToTablesTableBucketOutputWithContext(ctx context.Context) TablesTableBucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TablesTableBucketOutput)
}

// TablesTableBucketArrayInput is an input type that accepts TablesTableBucketArray and TablesTableBucketArrayOutput values.
// You can construct a concrete instance of `TablesTableBucketArrayInput` via:
//
//	TablesTableBucketArray{ TablesTableBucketArgs{...} }
type TablesTableBucketArrayInput interface {
	pulumi.Input

	ToTablesTableBucketArrayOutput() TablesTableBucketArrayOutput
	ToTablesTableBucketArrayOutputWithContext(context.Context) TablesTableBucketArrayOutput
}

type TablesTableBucketArray []TablesTableBucketInput

func (TablesTableBucketArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TablesTableBucket)(nil)).Elem()
}

func (i TablesTableBucketArray) ToTablesTableBucketArrayOutput() TablesTableBucketArrayOutput {
	return i.ToTablesTableBucketArrayOutputWithContext(context.Background())
}

func (i TablesTableBucketArray) ToTablesTableBucketArrayOutputWithContext(ctx context.Context) TablesTableBucketArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TablesTableBucketArrayOutput)
}

// TablesTableBucketMapInput is an input type that accepts TablesTableBucketMap and TablesTableBucketMapOutput values.
// You can construct a concrete instance of `TablesTableBucketMapInput` via:
//
//	TablesTableBucketMap{ "key": TablesTableBucketArgs{...} }
type TablesTableBucketMapInput interface {
	pulumi.Input

	ToTablesTableBucketMapOutput() TablesTableBucketMapOutput
	ToTablesTableBucketMapOutputWithContext(context.Context) TablesTableBucketMapOutput
}

type TablesTableBucketMap map[string]TablesTableBucketInput

func (TablesTableBucketMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TablesTableBucket)(nil)).Elem()
}

func (i TablesTableBucketMap) ToTablesTableBucketMapOutput() TablesTableBucketMapOutput {
	return i.ToTablesTableBucketMapOutputWithContext(context.Background())
}

func (i TablesTableBucketMap) ToTablesTableBucketMapOutputWithContext(ctx context.Context) TablesTableBucketMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TablesTableBucketMapOutput)
}

type TablesTableBucketOutput struct{ *pulumi.OutputState }

func (TablesTableBucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TablesTableBucket)(nil)).Elem()
}

func (o TablesTableBucketOutput) ToTablesTableBucketOutput() TablesTableBucketOutput {
	return o
}

func (o TablesTableBucketOutput) ToTablesTableBucketOutputWithContext(ctx context.Context) TablesTableBucketOutput {
	return o
}

// ARN of the table bucket.
func (o TablesTableBucketOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *TablesTableBucket) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Date and time when the bucket was created.
func (o TablesTableBucketOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *TablesTableBucket) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// A single table bucket maintenance configuration block.
// See `maintenanceConfiguration` below
func (o TablesTableBucketOutput) MaintenanceConfiguration() TablesTableBucketMaintenanceConfigurationOutput {
	return o.ApplyT(func(v *TablesTableBucket) TablesTableBucketMaintenanceConfigurationOutput {
		return v.MaintenanceConfiguration
	}).(TablesTableBucketMaintenanceConfigurationOutput)
}

// Name of the table bucket.
// Must be between 3 and 63 characters in length.
// Can consist of lowercase letters, numbers, and hyphens, and must begin and end with a lowercase letter or number.
// A full list of bucket naming rules may be found in S3 Tables documentation.
//
// The following argument is optional:
func (o TablesTableBucketOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TablesTableBucket) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Account ID of the account that owns the table bucket.
func (o TablesTableBucketOutput) OwnerAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *TablesTableBucket) pulumi.StringOutput { return v.OwnerAccountId }).(pulumi.StringOutput)
}

type TablesTableBucketArrayOutput struct{ *pulumi.OutputState }

func (TablesTableBucketArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TablesTableBucket)(nil)).Elem()
}

func (o TablesTableBucketArrayOutput) ToTablesTableBucketArrayOutput() TablesTableBucketArrayOutput {
	return o
}

func (o TablesTableBucketArrayOutput) ToTablesTableBucketArrayOutputWithContext(ctx context.Context) TablesTableBucketArrayOutput {
	return o
}

func (o TablesTableBucketArrayOutput) Index(i pulumi.IntInput) TablesTableBucketOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TablesTableBucket {
		return vs[0].([]*TablesTableBucket)[vs[1].(int)]
	}).(TablesTableBucketOutput)
}

type TablesTableBucketMapOutput struct{ *pulumi.OutputState }

func (TablesTableBucketMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TablesTableBucket)(nil)).Elem()
}

func (o TablesTableBucketMapOutput) ToTablesTableBucketMapOutput() TablesTableBucketMapOutput {
	return o
}

func (o TablesTableBucketMapOutput) ToTablesTableBucketMapOutputWithContext(ctx context.Context) TablesTableBucketMapOutput {
	return o
}

func (o TablesTableBucketMapOutput) MapIndex(k pulumi.StringInput) TablesTableBucketOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TablesTableBucket {
		return vs[0].(map[string]*TablesTableBucket)[vs[1].(string)]
	}).(TablesTableBucketOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TablesTableBucketInput)(nil)).Elem(), &TablesTableBucket{})
	pulumi.RegisterInputType(reflect.TypeOf((*TablesTableBucketArrayInput)(nil)).Elem(), TablesTableBucketArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TablesTableBucketMapInput)(nil)).Elem(), TablesTableBucketMap{})
	pulumi.RegisterOutputType(TablesTableBucketOutput{})
	pulumi.RegisterOutputType(TablesTableBucketArrayOutput{})
	pulumi.RegisterOutputType(TablesTableBucketMapOutput{})
}
