// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Bucket struct {
	pulumi.CustomResourceState

	AccelerationStatus                pulumi.StringOutput                              `pulumi:"accelerationStatus"`
	Acl                               pulumi.StringPtrOutput                           `pulumi:"acl"`
	Arn                               pulumi.StringOutput                              `pulumi:"arn"`
	Bucket                            pulumi.StringOutput                              `pulumi:"bucket"`
	BucketDomainName                  pulumi.StringOutput                              `pulumi:"bucketDomainName"`
	BucketPrefix                      pulumi.StringPtrOutput                           `pulumi:"bucketPrefix"`
	BucketRegionalDomainName          pulumi.StringOutput                              `pulumi:"bucketRegionalDomainName"`
	CorsRules                         BucketCorsRuleArrayOutput                        `pulumi:"corsRules"`
	ForceDestroy                      pulumi.BoolPtrOutput                             `pulumi:"forceDestroy"`
	Grants                            BucketGrantArrayOutput                           `pulumi:"grants"`
	HostedZoneId                      pulumi.StringOutput                              `pulumi:"hostedZoneId"`
	LifecycleRules                    BucketLifecycleRuleArrayOutput                   `pulumi:"lifecycleRules"`
	Loggings                          BucketLoggingArrayOutput                         `pulumi:"loggings"`
	ObjectLockConfiguration           BucketObjectLockConfigurationPtrOutput           `pulumi:"objectLockConfiguration"`
	Policy                            pulumi.StringPtrOutput                           `pulumi:"policy"`
	Region                            pulumi.StringOutput                              `pulumi:"region"`
	ReplicationConfiguration          BucketReplicationConfigurationPtrOutput          `pulumi:"replicationConfiguration"`
	RequestPayer                      pulumi.StringOutput                              `pulumi:"requestPayer"`
	ServerSideEncryptionConfiguration BucketServerSideEncryptionConfigurationPtrOutput `pulumi:"serverSideEncryptionConfiguration"`
	Tags                              pulumi.StringMapOutput                           `pulumi:"tags"`
	TagsAll                           pulumi.StringMapOutput                           `pulumi:"tagsAll"`
	Versioning                        BucketVersioningOutput                           `pulumi:"versioning"`
	Website                           BucketWebsitePtrOutput                           `pulumi:"website"`
	WebsiteDomain                     pulumi.StringOutput                              `pulumi:"websiteDomain"`
	WebsiteEndpoint                   pulumi.StringOutput                              `pulumi:"websiteEndpoint"`
}

// NewBucket registers a new resource with the given unique name, arguments, and options.
func NewBucket(ctx *pulumi.Context,
	name string, args *BucketArgs, opts ...pulumi.ResourceOption) (*Bucket, error) {
	if args == nil {
		args = &BucketArgs{}
	}

	var resource Bucket
	err := ctx.RegisterResource("aws:s3/bucket:Bucket", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucket gets an existing Bucket resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucket(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketState, opts ...pulumi.ResourceOption) (*Bucket, error) {
	var resource Bucket
	err := ctx.ReadResource("aws:s3/bucket:Bucket", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Bucket resources.
type bucketState struct {
	AccelerationStatus                *string                                  `pulumi:"accelerationStatus"`
	Acl                               *string                                  `pulumi:"acl"`
	Arn                               *string                                  `pulumi:"arn"`
	Bucket                            *string                                  `pulumi:"bucket"`
	BucketDomainName                  *string                                  `pulumi:"bucketDomainName"`
	BucketPrefix                      *string                                  `pulumi:"bucketPrefix"`
	BucketRegionalDomainName          *string                                  `pulumi:"bucketRegionalDomainName"`
	CorsRules                         []BucketCorsRule                         `pulumi:"corsRules"`
	ForceDestroy                      *bool                                    `pulumi:"forceDestroy"`
	Grants                            []BucketGrant                            `pulumi:"grants"`
	HostedZoneId                      *string                                  `pulumi:"hostedZoneId"`
	LifecycleRules                    []BucketLifecycleRule                    `pulumi:"lifecycleRules"`
	Loggings                          []BucketLogging                          `pulumi:"loggings"`
	ObjectLockConfiguration           *BucketObjectLockConfiguration           `pulumi:"objectLockConfiguration"`
	Policy                            interface{}                              `pulumi:"policy"`
	Region                            *string                                  `pulumi:"region"`
	ReplicationConfiguration          *BucketReplicationConfiguration          `pulumi:"replicationConfiguration"`
	RequestPayer                      *string                                  `pulumi:"requestPayer"`
	ServerSideEncryptionConfiguration *BucketServerSideEncryptionConfiguration `pulumi:"serverSideEncryptionConfiguration"`
	Tags                              map[string]string                        `pulumi:"tags"`
	TagsAll                           map[string]string                        `pulumi:"tagsAll"`
	Versioning                        *BucketVersioning                        `pulumi:"versioning"`
	Website                           *BucketWebsite                           `pulumi:"website"`
	WebsiteDomain                     *string                                  `pulumi:"websiteDomain"`
	WebsiteEndpoint                   *string                                  `pulumi:"websiteEndpoint"`
}

type BucketState struct {
	AccelerationStatus                pulumi.StringPtrInput
	Acl                               pulumi.StringPtrInput
	Arn                               pulumi.StringPtrInput
	Bucket                            pulumi.StringPtrInput
	BucketDomainName                  pulumi.StringPtrInput
	BucketPrefix                      pulumi.StringPtrInput
	BucketRegionalDomainName          pulumi.StringPtrInput
	CorsRules                         BucketCorsRuleArrayInput
	ForceDestroy                      pulumi.BoolPtrInput
	Grants                            BucketGrantArrayInput
	HostedZoneId                      pulumi.StringPtrInput
	LifecycleRules                    BucketLifecycleRuleArrayInput
	Loggings                          BucketLoggingArrayInput
	ObjectLockConfiguration           BucketObjectLockConfigurationPtrInput
	Policy                            pulumi.Input
	Region                            pulumi.StringPtrInput
	ReplicationConfiguration          BucketReplicationConfigurationPtrInput
	RequestPayer                      pulumi.StringPtrInput
	ServerSideEncryptionConfiguration BucketServerSideEncryptionConfigurationPtrInput
	Tags                              pulumi.StringMapInput
	TagsAll                           pulumi.StringMapInput
	Versioning                        BucketVersioningPtrInput
	Website                           BucketWebsitePtrInput
	WebsiteDomain                     pulumi.StringPtrInput
	WebsiteEndpoint                   pulumi.StringPtrInput
}

func (BucketState) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketState)(nil)).Elem()
}

type bucketArgs struct {
	AccelerationStatus                *string                                  `pulumi:"accelerationStatus"`
	Acl                               *string                                  `pulumi:"acl"`
	Arn                               *string                                  `pulumi:"arn"`
	Bucket                            *string                                  `pulumi:"bucket"`
	BucketPrefix                      *string                                  `pulumi:"bucketPrefix"`
	CorsRules                         []BucketCorsRule                         `pulumi:"corsRules"`
	ForceDestroy                      *bool                                    `pulumi:"forceDestroy"`
	Grants                            []BucketGrant                            `pulumi:"grants"`
	HostedZoneId                      *string                                  `pulumi:"hostedZoneId"`
	LifecycleRules                    []BucketLifecycleRule                    `pulumi:"lifecycleRules"`
	Loggings                          []BucketLogging                          `pulumi:"loggings"`
	ObjectLockConfiguration           *BucketObjectLockConfiguration           `pulumi:"objectLockConfiguration"`
	Policy                            interface{}                              `pulumi:"policy"`
	ReplicationConfiguration          *BucketReplicationConfiguration          `pulumi:"replicationConfiguration"`
	RequestPayer                      *string                                  `pulumi:"requestPayer"`
	ServerSideEncryptionConfiguration *BucketServerSideEncryptionConfiguration `pulumi:"serverSideEncryptionConfiguration"`
	Tags                              map[string]string                        `pulumi:"tags"`
	Versioning                        *BucketVersioning                        `pulumi:"versioning"`
	Website                           *BucketWebsite                           `pulumi:"website"`
	WebsiteDomain                     *string                                  `pulumi:"websiteDomain"`
	WebsiteEndpoint                   *string                                  `pulumi:"websiteEndpoint"`
}

// The set of arguments for constructing a Bucket resource.
type BucketArgs struct {
	AccelerationStatus                pulumi.StringPtrInput
	Acl                               pulumi.StringPtrInput
	Arn                               pulumi.StringPtrInput
	Bucket                            pulumi.StringPtrInput
	BucketPrefix                      pulumi.StringPtrInput
	CorsRules                         BucketCorsRuleArrayInput
	ForceDestroy                      pulumi.BoolPtrInput
	Grants                            BucketGrantArrayInput
	HostedZoneId                      pulumi.StringPtrInput
	LifecycleRules                    BucketLifecycleRuleArrayInput
	Loggings                          BucketLoggingArrayInput
	ObjectLockConfiguration           BucketObjectLockConfigurationPtrInput
	Policy                            pulumi.Input
	ReplicationConfiguration          BucketReplicationConfigurationPtrInput
	RequestPayer                      pulumi.StringPtrInput
	ServerSideEncryptionConfiguration BucketServerSideEncryptionConfigurationPtrInput
	Tags                              pulumi.StringMapInput
	Versioning                        BucketVersioningPtrInput
	Website                           BucketWebsitePtrInput
	WebsiteDomain                     pulumi.StringPtrInput
	WebsiteEndpoint                   pulumi.StringPtrInput
}

func (BucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketArgs)(nil)).Elem()
}

type BucketInput interface {
	pulumi.Input

	ToBucketOutput() BucketOutput
	ToBucketOutputWithContext(ctx context.Context) BucketOutput
}

func (*Bucket) ElementType() reflect.Type {
	return reflect.TypeOf((**Bucket)(nil)).Elem()
}

func (i *Bucket) ToBucketOutput() BucketOutput {
	return i.ToBucketOutputWithContext(context.Background())
}

func (i *Bucket) ToBucketOutputWithContext(ctx context.Context) BucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketOutput)
}

// BucketArrayInput is an input type that accepts BucketArray and BucketArrayOutput values.
// You can construct a concrete instance of `BucketArrayInput` via:
//
//	BucketArray{ BucketArgs{...} }
type BucketArrayInput interface {
	pulumi.Input

	ToBucketArrayOutput() BucketArrayOutput
	ToBucketArrayOutputWithContext(context.Context) BucketArrayOutput
}

type BucketArray []BucketInput

func (BucketArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Bucket)(nil)).Elem()
}

func (i BucketArray) ToBucketArrayOutput() BucketArrayOutput {
	return i.ToBucketArrayOutputWithContext(context.Background())
}

func (i BucketArray) ToBucketArrayOutputWithContext(ctx context.Context) BucketArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketArrayOutput)
}

// BucketMapInput is an input type that accepts BucketMap and BucketMapOutput values.
// You can construct a concrete instance of `BucketMapInput` via:
//
//	BucketMap{ "key": BucketArgs{...} }
type BucketMapInput interface {
	pulumi.Input

	ToBucketMapOutput() BucketMapOutput
	ToBucketMapOutputWithContext(context.Context) BucketMapOutput
}

type BucketMap map[string]BucketInput

func (BucketMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Bucket)(nil)).Elem()
}

func (i BucketMap) ToBucketMapOutput() BucketMapOutput {
	return i.ToBucketMapOutputWithContext(context.Background())
}

func (i BucketMap) ToBucketMapOutputWithContext(ctx context.Context) BucketMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketMapOutput)
}

type BucketOutput struct{ *pulumi.OutputState }

func (BucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Bucket)(nil)).Elem()
}

func (o BucketOutput) ToBucketOutput() BucketOutput {
	return o
}

func (o BucketOutput) ToBucketOutputWithContext(ctx context.Context) BucketOutput {
	return o
}

func (o BucketOutput) AccelerationStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.AccelerationStatus }).(pulumi.StringOutput)
}

func (o BucketOutput) Acl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringPtrOutput { return v.Acl }).(pulumi.StringPtrOutput)
}

func (o BucketOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o BucketOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.Bucket }).(pulumi.StringOutput)
}

func (o BucketOutput) BucketDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.BucketDomainName }).(pulumi.StringOutput)
}

func (o BucketOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringPtrOutput { return v.BucketPrefix }).(pulumi.StringPtrOutput)
}

func (o BucketOutput) BucketRegionalDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.BucketRegionalDomainName }).(pulumi.StringOutput)
}

func (o BucketOutput) CorsRules() BucketCorsRuleArrayOutput {
	return o.ApplyT(func(v *Bucket) BucketCorsRuleArrayOutput { return v.CorsRules }).(BucketCorsRuleArrayOutput)
}

func (o BucketOutput) ForceDestroy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Bucket) pulumi.BoolPtrOutput { return v.ForceDestroy }).(pulumi.BoolPtrOutput)
}

func (o BucketOutput) Grants() BucketGrantArrayOutput {
	return o.ApplyT(func(v *Bucket) BucketGrantArrayOutput { return v.Grants }).(BucketGrantArrayOutput)
}

func (o BucketOutput) HostedZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.HostedZoneId }).(pulumi.StringOutput)
}

func (o BucketOutput) LifecycleRules() BucketLifecycleRuleArrayOutput {
	return o.ApplyT(func(v *Bucket) BucketLifecycleRuleArrayOutput { return v.LifecycleRules }).(BucketLifecycleRuleArrayOutput)
}

func (o BucketOutput) Loggings() BucketLoggingArrayOutput {
	return o.ApplyT(func(v *Bucket) BucketLoggingArrayOutput { return v.Loggings }).(BucketLoggingArrayOutput)
}

func (o BucketOutput) ObjectLockConfiguration() BucketObjectLockConfigurationPtrOutput {
	return o.ApplyT(func(v *Bucket) BucketObjectLockConfigurationPtrOutput { return v.ObjectLockConfiguration }).(BucketObjectLockConfigurationPtrOutput)
}

func (o BucketOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringPtrOutput { return v.Policy }).(pulumi.StringPtrOutput)
}

func (o BucketOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o BucketOutput) ReplicationConfiguration() BucketReplicationConfigurationPtrOutput {
	return o.ApplyT(func(v *Bucket) BucketReplicationConfigurationPtrOutput { return v.ReplicationConfiguration }).(BucketReplicationConfigurationPtrOutput)
}

func (o BucketOutput) RequestPayer() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.RequestPayer }).(pulumi.StringOutput)
}

func (o BucketOutput) ServerSideEncryptionConfiguration() BucketServerSideEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v *Bucket) BucketServerSideEncryptionConfigurationPtrOutput {
		return v.ServerSideEncryptionConfiguration
	}).(BucketServerSideEncryptionConfigurationPtrOutput)
}

func (o BucketOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o BucketOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o BucketOutput) Versioning() BucketVersioningOutput {
	return o.ApplyT(func(v *Bucket) BucketVersioningOutput { return v.Versioning }).(BucketVersioningOutput)
}

func (o BucketOutput) Website() BucketWebsitePtrOutput {
	return o.ApplyT(func(v *Bucket) BucketWebsitePtrOutput { return v.Website }).(BucketWebsitePtrOutput)
}

func (o BucketOutput) WebsiteDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.WebsiteDomain }).(pulumi.StringOutput)
}

func (o BucketOutput) WebsiteEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Bucket) pulumi.StringOutput { return v.WebsiteEndpoint }).(pulumi.StringOutput)
}

type BucketArrayOutput struct{ *pulumi.OutputState }

func (BucketArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Bucket)(nil)).Elem()
}

func (o BucketArrayOutput) ToBucketArrayOutput() BucketArrayOutput {
	return o
}

func (o BucketArrayOutput) ToBucketArrayOutputWithContext(ctx context.Context) BucketArrayOutput {
	return o
}

func (o BucketArrayOutput) Index(i pulumi.IntInput) BucketOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Bucket {
		return vs[0].([]*Bucket)[vs[1].(int)]
	}).(BucketOutput)
}

type BucketMapOutput struct{ *pulumi.OutputState }

func (BucketMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Bucket)(nil)).Elem()
}

func (o BucketMapOutput) ToBucketMapOutput() BucketMapOutput {
	return o
}

func (o BucketMapOutput) ToBucketMapOutputWithContext(ctx context.Context) BucketMapOutput {
	return o
}

func (o BucketMapOutput) MapIndex(k pulumi.StringInput) BucketOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Bucket {
		return vs[0].(map[string]*Bucket)[vs[1].(string)]
	}).(BucketOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BucketInput)(nil)).Elem(), &Bucket{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketArrayInput)(nil)).Elem(), BucketArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketMapInput)(nil)).Elem(), BucketMap{})
	pulumi.RegisterOutputType(BucketOutput{})
	pulumi.RegisterOutputType(BucketArrayOutput{})
	pulumi.RegisterOutputType(BucketMapOutput{})
}
