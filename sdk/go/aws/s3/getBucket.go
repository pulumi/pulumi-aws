// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupBucket(ctx *pulumi.Context, args *LookupBucketArgs, opts ...pulumi.InvokeOption) (*LookupBucketResult, error) {
	var rv LookupBucketResult
	err := ctx.Invoke("aws:s3/getBucket:getBucket", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBucket.
type LookupBucketArgs struct {
	Bucket string `pulumi:"bucket"`
}

// A collection of values returned by getBucket.
type LookupBucketResult struct {
	Arn                      string `pulumi:"arn"`
	Bucket                   string `pulumi:"bucket"`
	BucketDomainName         string `pulumi:"bucketDomainName"`
	BucketRegionalDomainName string `pulumi:"bucketRegionalDomainName"`
	HostedZoneId             string `pulumi:"hostedZoneId"`
	// The provider-assigned unique ID for this managed resource.
	Id              string `pulumi:"id"`
	Region          string `pulumi:"region"`
	WebsiteDomain   string `pulumi:"websiteDomain"`
	WebsiteEndpoint string `pulumi:"websiteEndpoint"`
}

func LookupBucketOutput(ctx *pulumi.Context, args LookupBucketOutputArgs, opts ...pulumi.InvokeOption) LookupBucketResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBucketResult, error) {
			args := v.(LookupBucketArgs)
			r, err := LookupBucket(ctx, &args, opts...)
			var s LookupBucketResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBucketResultOutput)
}

// A collection of arguments for invoking getBucket.
type LookupBucketOutputArgs struct {
	Bucket pulumi.StringInput `pulumi:"bucket"`
}

func (LookupBucketOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBucketArgs)(nil)).Elem()
}

// A collection of values returned by getBucket.
type LookupBucketResultOutput struct{ *pulumi.OutputState }

func (LookupBucketResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBucketResult)(nil)).Elem()
}

func (o LookupBucketResultOutput) ToLookupBucketResultOutput() LookupBucketResultOutput {
	return o
}

func (o LookupBucketResultOutput) ToLookupBucketResultOutputWithContext(ctx context.Context) LookupBucketResultOutput {
	return o
}

func (o LookupBucketResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupBucketResultOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketResult) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o LookupBucketResultOutput) BucketDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketResult) string { return v.BucketDomainName }).(pulumi.StringOutput)
}

func (o LookupBucketResultOutput) BucketRegionalDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketResult) string { return v.BucketRegionalDomainName }).(pulumi.StringOutput)
}

func (o LookupBucketResultOutput) HostedZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketResult) string { return v.HostedZoneId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupBucketResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBucketResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupBucketResultOutput) WebsiteDomain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketResult) string { return v.WebsiteDomain }).(pulumi.StringOutput)
}

func (o LookupBucketResultOutput) WebsiteEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBucketResult) string { return v.WebsiteEndpoint }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBucketResultOutput{})
}
