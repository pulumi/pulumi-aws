// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides details about a specific S3 bucket.
//
// This resource may prove useful when setting up a Route53 record, or an origin for a CloudFront
// Distribution.
//
// ## Example Usage
//
// ### Route53 Record
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v2/go/aws/route53"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		selected, err := s3.LookupBucket(ctx, &s3.LookupBucketArgs{
// 			Bucket: "bucket.test.com",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		testZone, err := route53.LookupZone(ctx, &route53.LookupZoneArgs{
// 			Name: "test.com.",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		example, err := route53.NewRecord(ctx, "example", &route53.RecordArgs{
// 			Aliases: route53.RecordAliasArray{
// 				&route53.RecordAliasArgs{
// 					Name:   pulumi.String(selected.WebsiteDomain),
// 					ZoneId: pulumi.String(selected.HostedZoneId),
// 				},
// 			},
// 			Name:   pulumi.String("bucket"),
// 			Type:   pulumi.String("A"),
// 			ZoneId: pulumi.String(testZone.Id),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ### CloudFront Origin
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v2/go/aws/cloudfront"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		selected, err := s3.LookupBucket(ctx, &s3.LookupBucketArgs{
// 			Bucket: "a-test-bucket",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		test, err := cloudfront.NewDistribution(ctx, "test", &cloudfront.DistributionArgs{
// 			Origins: cloudfront.DistributionOriginArray{
// 				&cloudfront.DistributionOriginArgs{
// 					DomainName: pulumi.String(selected.BucketDomainName),
// 					OriginId:   pulumi.String("s3-selected-bucket"),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupBucket(ctx *pulumi.Context, args *LookupBucketArgs, opts ...pulumi.InvokeOption) (*LookupBucketResult, error) {
	var rv LookupBucketResult
	err := ctx.Invoke("aws:s3/getBucket:getBucket", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBucket.
type LookupBucketArgs struct {
	// The name of the bucket
	Bucket string `pulumi:"bucket"`
}

// A collection of values returned by getBucket.
type LookupBucketResult struct {
	// The ARN of the bucket. Will be of format `arn:aws:s3:::bucketname`.
	Arn    string `pulumi:"arn"`
	Bucket string `pulumi:"bucket"`
	// The bucket domain name. Will be of format `bucketname.s3.amazonaws.com`.
	BucketDomainName string `pulumi:"bucketDomainName"`
	// The bucket region-specific domain name. The bucket domain name including the region name, please refer [here](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region) for format. Note: The AWS CloudFront allows specifying S3 region-specific endpoint when creating S3 origin, it will prevent [redirect issues](https://forums.aws.amazon.com/thread.jspa?threadID=216814) from CloudFront to S3 Origin URL.
	BucketRegionalDomainName string `pulumi:"bucketRegionalDomainName"`
	// The [Route 53 Hosted Zone ID](https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_website_region_endpoints) for this bucket's region.
	HostedZoneId string `pulumi:"hostedZoneId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The AWS region this bucket resides in.
	Region string `pulumi:"region"`
	// The domain of the website endpoint, if the bucket is configured with a website. If not, this will be an empty string. This is used to create Route 53 alias records.
	WebsiteDomain string `pulumi:"websiteDomain"`
	// The website endpoint, if the bucket is configured with a website. If not, this will be an empty string.
	WebsiteEndpoint string `pulumi:"websiteEndpoint"`
}
