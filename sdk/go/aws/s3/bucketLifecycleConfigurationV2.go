// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an independent configuration resource for S3 bucket [lifecycle configuration](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/s3"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		bucket, err := s3.NewBucketV2(ctx, "bucket", nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = s3.NewBucketAclV2(ctx, "bucketAcl", &s3.BucketAclV2Args{
// 			Bucket: bucket.ID(),
// 			Acl:    pulumi.String("private"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = s3.NewBucketLifecycleConfigurationV2(ctx, "bucket-config", &s3.BucketLifecycleConfigurationV2Args{
// 			Bucket: bucket.Bucket,
// 			Rules: s3.BucketLifecycleConfigurationV2RuleArray{
// 				&s3.BucketLifecycleConfigurationV2RuleArgs{
// 					Id: pulumi.String("log"),
// 					Expiration: &s3.BucketLifecycleConfigurationV2RuleExpirationArgs{
// 						Days: pulumi.Int(90),
// 					},
// 					Filter: &s3.BucketLifecycleConfigurationV2RuleFilterArgs{
// 						And: &s3.BucketLifecycleConfigurationV2RuleFilterAndArgs{
// 							Prefix: pulumi.String("log/"),
// 							Tags: pulumi.StringMap{
// 								"rule":      pulumi.String("log"),
// 								"autoclean": pulumi.String("true"),
// 							},
// 						},
// 					},
// 					Status: pulumi.String("Enabled"),
// 					Transitions: s3.BucketLifecycleConfigurationV2RuleTransitionArray{
// 						&s3.BucketLifecycleConfigurationV2RuleTransitionArgs{
// 							Days:         pulumi.Int(30),
// 							StorageClass: pulumi.String("STANDARD_IA"),
// 						},
// 						&s3.BucketLifecycleConfigurationV2RuleTransitionArgs{
// 							Days:         pulumi.Int(60),
// 							StorageClass: pulumi.String("GLACIER"),
// 						},
// 					},
// 				},
// 				&s3.BucketLifecycleConfigurationV2RuleArgs{
// 					Id: pulumi.String("tmp"),
// 					Filter: &s3.BucketLifecycleConfigurationV2RuleFilterArgs{
// 						Prefix: pulumi.String("tmp/"),
// 					},
// 					Expiration: &s3.BucketLifecycleConfigurationV2RuleExpirationArgs{
// 						Date: pulumi.String("2023-01-13T00:00:00Z"),
// 					},
// 					Status: pulumi.String("Enabled"),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		versioningBucket, err := s3.NewBucketV2(ctx, "versioningBucket", nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = s3.NewBucketAclV2(ctx, "versioningBucketAcl", &s3.BucketAclV2Args{
// 			Bucket: versioningBucket.ID(),
// 			Acl:    pulumi.String("private"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		versioning, err := s3.NewBucketVersioningV2(ctx, "versioning", &s3.BucketVersioningV2Args{
// 			Bucket: versioningBucket.ID(),
// 			VersioningConfiguration: &s3.BucketVersioningV2VersioningConfigurationArgs{
// 				Status: pulumi.String("Enabled"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = s3.NewBucketLifecycleConfigurationV2(ctx, "versioning-bucket-config", &s3.BucketLifecycleConfigurationV2Args{
// 			Bucket: versioningBucket.Bucket,
// 			Rules: s3.BucketLifecycleConfigurationV2RuleArray{
// 				&s3.BucketLifecycleConfigurationV2RuleArgs{
// 					Id: pulumi.String("config"),
// 					Filter: &s3.BucketLifecycleConfigurationV2RuleFilterArgs{
// 						Prefix: pulumi.String("config/"),
// 					},
// 					NoncurrentVersionExpiration: &s3.BucketLifecycleConfigurationV2RuleNoncurrentVersionExpirationArgs{
// 						NoncurrentDays: pulumi.Int(90),
// 					},
// 					NoncurrentVersionTransitions: s3.BucketLifecycleConfigurationV2RuleNoncurrentVersionTransitionArray{
// 						&s3.BucketLifecycleConfigurationV2RuleNoncurrentVersionTransitionArgs{
// 							NoncurrentDays: pulumi.Int(30),
// 							StorageClass:   pulumi.String("STANDARD_IA"),
// 						},
// 						&s3.BucketLifecycleConfigurationV2RuleNoncurrentVersionTransitionArgs{
// 							NoncurrentDays: pulumi.Int(60),
// 							StorageClass:   pulumi.String("GLACIER"),
// 						},
// 					},
// 					Status: pulumi.String("Enabled"),
// 				},
// 			},
// 		}, pulumi.DependsOn([]pulumi.Resource{
// 			versioning,
// 		}))
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ## Usage Notes
//
// > **NOTE:** To avoid conflicts always add the following lifecycle object to the `s3.BucketV2` resource of the source bucket.
//
// This resource implements the same features that are provided by the `lifecycleRule` object of the `s3.BucketV2` resource. To avoid conflicts or unexpected apply results, a lifecycle configuration is needed on the `s3.BucketV2` to ignore changes to the internal `lifecycleRule` object.  Failure to add the `lifecycle` configuration to the `s3.BucketV2` will result in conflicting state results.
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		return nil
// 	})
// }
// ```
//
// The `s3.BucketLifecycleConfigurationV2` resource provides the following features that are not available in the `s3.BucketV2` resource:
//
// * `filter` - Added to the `rule` configuration block documented below.
//
// ## Import
//
// S3 bucket lifecycle configuration can be imported using the `bucket`, e.g.
//
// ```sh
//  $ pulumi import aws:s3/bucketLifecycleConfigurationV2:BucketLifecycleConfigurationV2 example bucket-name
// ```
//
//  In addition, S3 bucket lifecycle configuration can be imported using the `bucket` and `expected_bucket_owner` separated by a comma (`,`) e.g.,
//
// ```sh
//  $ pulumi import aws:s3/bucketLifecycleConfigurationV2:BucketLifecycleConfigurationV2 example bucket-name,123456789012
// ```
type BucketLifecycleConfigurationV2 struct {
	pulumi.CustomResourceState

	// The name of the source S3 bucket you want Amazon S3 to monitor.
	Bucket pulumi.StringOutput `pulumi:"bucket"`
	// The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
	ExpectedBucketOwner pulumi.StringPtrOutput `pulumi:"expectedBucketOwner"`
	// List of configuration blocks describing the rules managing the replication documented below.
	Rules BucketLifecycleConfigurationV2RuleArrayOutput `pulumi:"rules"`
}

// NewBucketLifecycleConfigurationV2 registers a new resource with the given unique name, arguments, and options.
func NewBucketLifecycleConfigurationV2(ctx *pulumi.Context,
	name string, args *BucketLifecycleConfigurationV2Args, opts ...pulumi.ResourceOption) (*BucketLifecycleConfigurationV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	if args.Rules == nil {
		return nil, errors.New("invalid value for required argument 'Rules'")
	}
	var resource BucketLifecycleConfigurationV2
	err := ctx.RegisterResource("aws:s3/bucketLifecycleConfigurationV2:BucketLifecycleConfigurationV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucketLifecycleConfigurationV2 gets an existing BucketLifecycleConfigurationV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucketLifecycleConfigurationV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketLifecycleConfigurationV2State, opts ...pulumi.ResourceOption) (*BucketLifecycleConfigurationV2, error) {
	var resource BucketLifecycleConfigurationV2
	err := ctx.ReadResource("aws:s3/bucketLifecycleConfigurationV2:BucketLifecycleConfigurationV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BucketLifecycleConfigurationV2 resources.
type bucketLifecycleConfigurationV2State struct {
	// The name of the source S3 bucket you want Amazon S3 to monitor.
	Bucket *string `pulumi:"bucket"`
	// The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
	ExpectedBucketOwner *string `pulumi:"expectedBucketOwner"`
	// List of configuration blocks describing the rules managing the replication documented below.
	Rules []BucketLifecycleConfigurationV2Rule `pulumi:"rules"`
}

type BucketLifecycleConfigurationV2State struct {
	// The name of the source S3 bucket you want Amazon S3 to monitor.
	Bucket pulumi.StringPtrInput
	// The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
	ExpectedBucketOwner pulumi.StringPtrInput
	// List of configuration blocks describing the rules managing the replication documented below.
	Rules BucketLifecycleConfigurationV2RuleArrayInput
}

func (BucketLifecycleConfigurationV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketLifecycleConfigurationV2State)(nil)).Elem()
}

type bucketLifecycleConfigurationV2Args struct {
	// The name of the source S3 bucket you want Amazon S3 to monitor.
	Bucket string `pulumi:"bucket"`
	// The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
	ExpectedBucketOwner *string `pulumi:"expectedBucketOwner"`
	// List of configuration blocks describing the rules managing the replication documented below.
	Rules []BucketLifecycleConfigurationV2Rule `pulumi:"rules"`
}

// The set of arguments for constructing a BucketLifecycleConfigurationV2 resource.
type BucketLifecycleConfigurationV2Args struct {
	// The name of the source S3 bucket you want Amazon S3 to monitor.
	Bucket pulumi.StringInput
	// The account ID of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP 403 (Access Denied) error.
	ExpectedBucketOwner pulumi.StringPtrInput
	// List of configuration blocks describing the rules managing the replication documented below.
	Rules BucketLifecycleConfigurationV2RuleArrayInput
}

func (BucketLifecycleConfigurationV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketLifecycleConfigurationV2Args)(nil)).Elem()
}

type BucketLifecycleConfigurationV2Input interface {
	pulumi.Input

	ToBucketLifecycleConfigurationV2Output() BucketLifecycleConfigurationV2Output
	ToBucketLifecycleConfigurationV2OutputWithContext(ctx context.Context) BucketLifecycleConfigurationV2Output
}

func (*BucketLifecycleConfigurationV2) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleConfigurationV2)(nil)).Elem()
}

func (i *BucketLifecycleConfigurationV2) ToBucketLifecycleConfigurationV2Output() BucketLifecycleConfigurationV2Output {
	return i.ToBucketLifecycleConfigurationV2OutputWithContext(context.Background())
}

func (i *BucketLifecycleConfigurationV2) ToBucketLifecycleConfigurationV2OutputWithContext(ctx context.Context) BucketLifecycleConfigurationV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigurationV2Output)
}

// BucketLifecycleConfigurationV2ArrayInput is an input type that accepts BucketLifecycleConfigurationV2Array and BucketLifecycleConfigurationV2ArrayOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigurationV2ArrayInput` via:
//
//          BucketLifecycleConfigurationV2Array{ BucketLifecycleConfigurationV2Args{...} }
type BucketLifecycleConfigurationV2ArrayInput interface {
	pulumi.Input

	ToBucketLifecycleConfigurationV2ArrayOutput() BucketLifecycleConfigurationV2ArrayOutput
	ToBucketLifecycleConfigurationV2ArrayOutputWithContext(context.Context) BucketLifecycleConfigurationV2ArrayOutput
}

type BucketLifecycleConfigurationV2Array []BucketLifecycleConfigurationV2Input

func (BucketLifecycleConfigurationV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BucketLifecycleConfigurationV2)(nil)).Elem()
}

func (i BucketLifecycleConfigurationV2Array) ToBucketLifecycleConfigurationV2ArrayOutput() BucketLifecycleConfigurationV2ArrayOutput {
	return i.ToBucketLifecycleConfigurationV2ArrayOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigurationV2Array) ToBucketLifecycleConfigurationV2ArrayOutputWithContext(ctx context.Context) BucketLifecycleConfigurationV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigurationV2ArrayOutput)
}

// BucketLifecycleConfigurationV2MapInput is an input type that accepts BucketLifecycleConfigurationV2Map and BucketLifecycleConfigurationV2MapOutput values.
// You can construct a concrete instance of `BucketLifecycleConfigurationV2MapInput` via:
//
//          BucketLifecycleConfigurationV2Map{ "key": BucketLifecycleConfigurationV2Args{...} }
type BucketLifecycleConfigurationV2MapInput interface {
	pulumi.Input

	ToBucketLifecycleConfigurationV2MapOutput() BucketLifecycleConfigurationV2MapOutput
	ToBucketLifecycleConfigurationV2MapOutputWithContext(context.Context) BucketLifecycleConfigurationV2MapOutput
}

type BucketLifecycleConfigurationV2Map map[string]BucketLifecycleConfigurationV2Input

func (BucketLifecycleConfigurationV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BucketLifecycleConfigurationV2)(nil)).Elem()
}

func (i BucketLifecycleConfigurationV2Map) ToBucketLifecycleConfigurationV2MapOutput() BucketLifecycleConfigurationV2MapOutput {
	return i.ToBucketLifecycleConfigurationV2MapOutputWithContext(context.Background())
}

func (i BucketLifecycleConfigurationV2Map) ToBucketLifecycleConfigurationV2MapOutputWithContext(ctx context.Context) BucketLifecycleConfigurationV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketLifecycleConfigurationV2MapOutput)
}

type BucketLifecycleConfigurationV2Output struct{ *pulumi.OutputState }

func (BucketLifecycleConfigurationV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketLifecycleConfigurationV2)(nil)).Elem()
}

func (o BucketLifecycleConfigurationV2Output) ToBucketLifecycleConfigurationV2Output() BucketLifecycleConfigurationV2Output {
	return o
}

func (o BucketLifecycleConfigurationV2Output) ToBucketLifecycleConfigurationV2OutputWithContext(ctx context.Context) BucketLifecycleConfigurationV2Output {
	return o
}

type BucketLifecycleConfigurationV2ArrayOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigurationV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BucketLifecycleConfigurationV2)(nil)).Elem()
}

func (o BucketLifecycleConfigurationV2ArrayOutput) ToBucketLifecycleConfigurationV2ArrayOutput() BucketLifecycleConfigurationV2ArrayOutput {
	return o
}

func (o BucketLifecycleConfigurationV2ArrayOutput) ToBucketLifecycleConfigurationV2ArrayOutputWithContext(ctx context.Context) BucketLifecycleConfigurationV2ArrayOutput {
	return o
}

func (o BucketLifecycleConfigurationV2ArrayOutput) Index(i pulumi.IntInput) BucketLifecycleConfigurationV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BucketLifecycleConfigurationV2 {
		return vs[0].([]*BucketLifecycleConfigurationV2)[vs[1].(int)]
	}).(BucketLifecycleConfigurationV2Output)
}

type BucketLifecycleConfigurationV2MapOutput struct{ *pulumi.OutputState }

func (BucketLifecycleConfigurationV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BucketLifecycleConfigurationV2)(nil)).Elem()
}

func (o BucketLifecycleConfigurationV2MapOutput) ToBucketLifecycleConfigurationV2MapOutput() BucketLifecycleConfigurationV2MapOutput {
	return o
}

func (o BucketLifecycleConfigurationV2MapOutput) ToBucketLifecycleConfigurationV2MapOutputWithContext(ctx context.Context) BucketLifecycleConfigurationV2MapOutput {
	return o
}

func (o BucketLifecycleConfigurationV2MapOutput) MapIndex(k pulumi.StringInput) BucketLifecycleConfigurationV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BucketLifecycleConfigurationV2 {
		return vs[0].(map[string]*BucketLifecycleConfigurationV2)[vs[1].(string)]
	}).(BucketLifecycleConfigurationV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleConfigurationV2Input)(nil)).Elem(), &BucketLifecycleConfigurationV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleConfigurationV2ArrayInput)(nil)).Elem(), BucketLifecycleConfigurationV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketLifecycleConfigurationV2MapInput)(nil)).Elem(), BucketLifecycleConfigurationV2Map{})
	pulumi.RegisterOutputType(BucketLifecycleConfigurationV2Output{})
	pulumi.RegisterOutputType(BucketLifecycleConfigurationV2ArrayOutput{})
	pulumi.RegisterOutputType(BucketLifecycleConfigurationV2MapOutput{})
}
