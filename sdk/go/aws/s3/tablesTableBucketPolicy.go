// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an Amazon S3 Tables Table Bucket Policy.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/iam"
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/s3"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := iam.GetPolicyDocument(ctx, &iam.GetPolicyDocumentArgs{
//				Statements: []iam.GetPolicyDocumentStatement{
//					{},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = s3.NewTablesTableBucketPolicy(ctx, "example", &s3.TablesTableBucketPolicyArgs{
//				ResourcePolicy: pulumi.String(example.Json),
//				TableBucketArn: pulumi.Any(exampleAwsS3tablesTableBucket.Arn),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = s3.NewTablesTableBucket(ctx, "test", &s3.TablesTableBucketArgs{
//				Name: pulumi.String("example-bucket"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import S3 Tables Table Bucket Policy using the `table_bucket_arn`. For example:
//
// ```sh
// $ pulumi import aws:s3/tablesTableBucketPolicy:TablesTableBucketPolicy example 'arn:aws:s3tables:us-west-2:123456789012:bucket/example-bucket;example-namespace'
// ```
type TablesTableBucketPolicy struct {
	pulumi.CustomResourceState

	// Amazon Web Services resource-based policy document in JSON format.
	ResourcePolicy pulumi.StringOutput `pulumi:"resourcePolicy"`
	// ARN referencing the Table Bucket that owns this policy.
	TableBucketArn pulumi.StringOutput `pulumi:"tableBucketArn"`
}

// NewTablesTableBucketPolicy registers a new resource with the given unique name, arguments, and options.
func NewTablesTableBucketPolicy(ctx *pulumi.Context,
	name string, args *TablesTableBucketPolicyArgs, opts ...pulumi.ResourceOption) (*TablesTableBucketPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourcePolicy == nil {
		return nil, errors.New("invalid value for required argument 'ResourcePolicy'")
	}
	if args.TableBucketArn == nil {
		return nil, errors.New("invalid value for required argument 'TableBucketArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TablesTableBucketPolicy
	err := ctx.RegisterResource("aws:s3/tablesTableBucketPolicy:TablesTableBucketPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTablesTableBucketPolicy gets an existing TablesTableBucketPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTablesTableBucketPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TablesTableBucketPolicyState, opts ...pulumi.ResourceOption) (*TablesTableBucketPolicy, error) {
	var resource TablesTableBucketPolicy
	err := ctx.ReadResource("aws:s3/tablesTableBucketPolicy:TablesTableBucketPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TablesTableBucketPolicy resources.
type tablesTableBucketPolicyState struct {
	// Amazon Web Services resource-based policy document in JSON format.
	ResourcePolicy *string `pulumi:"resourcePolicy"`
	// ARN referencing the Table Bucket that owns this policy.
	TableBucketArn *string `pulumi:"tableBucketArn"`
}

type TablesTableBucketPolicyState struct {
	// Amazon Web Services resource-based policy document in JSON format.
	ResourcePolicy pulumi.StringPtrInput
	// ARN referencing the Table Bucket that owns this policy.
	TableBucketArn pulumi.StringPtrInput
}

func (TablesTableBucketPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*tablesTableBucketPolicyState)(nil)).Elem()
}

type tablesTableBucketPolicyArgs struct {
	// Amazon Web Services resource-based policy document in JSON format.
	ResourcePolicy string `pulumi:"resourcePolicy"`
	// ARN referencing the Table Bucket that owns this policy.
	TableBucketArn string `pulumi:"tableBucketArn"`
}

// The set of arguments for constructing a TablesTableBucketPolicy resource.
type TablesTableBucketPolicyArgs struct {
	// Amazon Web Services resource-based policy document in JSON format.
	ResourcePolicy pulumi.StringInput
	// ARN referencing the Table Bucket that owns this policy.
	TableBucketArn pulumi.StringInput
}

func (TablesTableBucketPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tablesTableBucketPolicyArgs)(nil)).Elem()
}

type TablesTableBucketPolicyInput interface {
	pulumi.Input

	ToTablesTableBucketPolicyOutput() TablesTableBucketPolicyOutput
	ToTablesTableBucketPolicyOutputWithContext(ctx context.Context) TablesTableBucketPolicyOutput
}

func (*TablesTableBucketPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**TablesTableBucketPolicy)(nil)).Elem()
}

func (i *TablesTableBucketPolicy) ToTablesTableBucketPolicyOutput() TablesTableBucketPolicyOutput {
	return i.ToTablesTableBucketPolicyOutputWithContext(context.Background())
}

func (i *TablesTableBucketPolicy) ToTablesTableBucketPolicyOutputWithContext(ctx context.Context) TablesTableBucketPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TablesTableBucketPolicyOutput)
}

// TablesTableBucketPolicyArrayInput is an input type that accepts TablesTableBucketPolicyArray and TablesTableBucketPolicyArrayOutput values.
// You can construct a concrete instance of `TablesTableBucketPolicyArrayInput` via:
//
//	TablesTableBucketPolicyArray{ TablesTableBucketPolicyArgs{...} }
type TablesTableBucketPolicyArrayInput interface {
	pulumi.Input

	ToTablesTableBucketPolicyArrayOutput() TablesTableBucketPolicyArrayOutput
	ToTablesTableBucketPolicyArrayOutputWithContext(context.Context) TablesTableBucketPolicyArrayOutput
}

type TablesTableBucketPolicyArray []TablesTableBucketPolicyInput

func (TablesTableBucketPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TablesTableBucketPolicy)(nil)).Elem()
}

func (i TablesTableBucketPolicyArray) ToTablesTableBucketPolicyArrayOutput() TablesTableBucketPolicyArrayOutput {
	return i.ToTablesTableBucketPolicyArrayOutputWithContext(context.Background())
}

func (i TablesTableBucketPolicyArray) ToTablesTableBucketPolicyArrayOutputWithContext(ctx context.Context) TablesTableBucketPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TablesTableBucketPolicyArrayOutput)
}

// TablesTableBucketPolicyMapInput is an input type that accepts TablesTableBucketPolicyMap and TablesTableBucketPolicyMapOutput values.
// You can construct a concrete instance of `TablesTableBucketPolicyMapInput` via:
//
//	TablesTableBucketPolicyMap{ "key": TablesTableBucketPolicyArgs{...} }
type TablesTableBucketPolicyMapInput interface {
	pulumi.Input

	ToTablesTableBucketPolicyMapOutput() TablesTableBucketPolicyMapOutput
	ToTablesTableBucketPolicyMapOutputWithContext(context.Context) TablesTableBucketPolicyMapOutput
}

type TablesTableBucketPolicyMap map[string]TablesTableBucketPolicyInput

func (TablesTableBucketPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TablesTableBucketPolicy)(nil)).Elem()
}

func (i TablesTableBucketPolicyMap) ToTablesTableBucketPolicyMapOutput() TablesTableBucketPolicyMapOutput {
	return i.ToTablesTableBucketPolicyMapOutputWithContext(context.Background())
}

func (i TablesTableBucketPolicyMap) ToTablesTableBucketPolicyMapOutputWithContext(ctx context.Context) TablesTableBucketPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TablesTableBucketPolicyMapOutput)
}

type TablesTableBucketPolicyOutput struct{ *pulumi.OutputState }

func (TablesTableBucketPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TablesTableBucketPolicy)(nil)).Elem()
}

func (o TablesTableBucketPolicyOutput) ToTablesTableBucketPolicyOutput() TablesTableBucketPolicyOutput {
	return o
}

func (o TablesTableBucketPolicyOutput) ToTablesTableBucketPolicyOutputWithContext(ctx context.Context) TablesTableBucketPolicyOutput {
	return o
}

// Amazon Web Services resource-based policy document in JSON format.
func (o TablesTableBucketPolicyOutput) ResourcePolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *TablesTableBucketPolicy) pulumi.StringOutput { return v.ResourcePolicy }).(pulumi.StringOutput)
}

// ARN referencing the Table Bucket that owns this policy.
func (o TablesTableBucketPolicyOutput) TableBucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v *TablesTableBucketPolicy) pulumi.StringOutput { return v.TableBucketArn }).(pulumi.StringOutput)
}

type TablesTableBucketPolicyArrayOutput struct{ *pulumi.OutputState }

func (TablesTableBucketPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TablesTableBucketPolicy)(nil)).Elem()
}

func (o TablesTableBucketPolicyArrayOutput) ToTablesTableBucketPolicyArrayOutput() TablesTableBucketPolicyArrayOutput {
	return o
}

func (o TablesTableBucketPolicyArrayOutput) ToTablesTableBucketPolicyArrayOutputWithContext(ctx context.Context) TablesTableBucketPolicyArrayOutput {
	return o
}

func (o TablesTableBucketPolicyArrayOutput) Index(i pulumi.IntInput) TablesTableBucketPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TablesTableBucketPolicy {
		return vs[0].([]*TablesTableBucketPolicy)[vs[1].(int)]
	}).(TablesTableBucketPolicyOutput)
}

type TablesTableBucketPolicyMapOutput struct{ *pulumi.OutputState }

func (TablesTableBucketPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TablesTableBucketPolicy)(nil)).Elem()
}

func (o TablesTableBucketPolicyMapOutput) ToTablesTableBucketPolicyMapOutput() TablesTableBucketPolicyMapOutput {
	return o
}

func (o TablesTableBucketPolicyMapOutput) ToTablesTableBucketPolicyMapOutputWithContext(ctx context.Context) TablesTableBucketPolicyMapOutput {
	return o
}

func (o TablesTableBucketPolicyMapOutput) MapIndex(k pulumi.StringInput) TablesTableBucketPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TablesTableBucketPolicy {
		return vs[0].(map[string]*TablesTableBucketPolicy)[vs[1].(string)]
	}).(TablesTableBucketPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TablesTableBucketPolicyInput)(nil)).Elem(), &TablesTableBucketPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*TablesTableBucketPolicyArrayInput)(nil)).Elem(), TablesTableBucketPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TablesTableBucketPolicyMapInput)(nil)).Elem(), TablesTableBucketPolicyMap{})
	pulumi.RegisterOutputType(TablesTableBucketPolicyOutput{})
	pulumi.RegisterOutputType(TablesTableBucketPolicyArrayOutput{})
	pulumi.RegisterOutputType(TablesTableBucketPolicyMapOutput{})
}
