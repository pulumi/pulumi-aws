// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an S3 bucket request payment configuration resource. For more information, see [Requester Pays Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/RequesterPaysBuckets.html).
//
// > **NOTE:** Destroying an `s3.BucketRequestPaymentConfiguration` resource resets the bucket's `payer` to the S3 default: the bucket owner.
//
// > This resource cannot be used with S3 directory buckets.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/s3"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := s3.NewBucketRequestPaymentConfiguration(ctx, "example", &s3.BucketRequestPaymentConfigurationArgs{
//				Bucket: pulumi.Any(exampleAwsS3Bucket.Id),
//				Payer:  pulumi.String("Requester"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// If the owner (account ID) of the source bucket differs from the account used to configure the AWS Provider, import using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):
//
// __Using `pulumi import` to import__ S3 bucket request payment configuration using the `bucket` or using the `bucket` and `expected_bucket_owner` separated by a comma (`,`). For example:
//
// If the owner (account ID) of the source bucket is the same account used to configure the AWS Provider, import using the `bucket`:
//
// ```sh
// $ pulumi import aws:s3/bucketRequestPaymentConfiguration:BucketRequestPaymentConfiguration example bucket-name
// ```
// If the owner (account ID) of the source bucket differs from the account used to configure the AWS Provider, import using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):
//
// ```sh
// $ pulumi import aws:s3/bucketRequestPaymentConfiguration:BucketRequestPaymentConfiguration example bucket-name,123456789012
// ```
type BucketRequestPaymentConfiguration struct {
	pulumi.CustomResourceState

	// Name of the bucket.
	Bucket pulumi.StringOutput `pulumi:"bucket"`
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner pulumi.StringPtrOutput `pulumi:"expectedBucketOwner"`
	// Specifies who pays for the download and request fees. Valid values: `BucketOwner`, `Requester`.
	Payer pulumi.StringOutput `pulumi:"payer"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringOutput `pulumi:"region"`
}

// NewBucketRequestPaymentConfiguration registers a new resource with the given unique name, arguments, and options.
func NewBucketRequestPaymentConfiguration(ctx *pulumi.Context,
	name string, args *BucketRequestPaymentConfigurationArgs, opts ...pulumi.ResourceOption) (*BucketRequestPaymentConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	if args.Payer == nil {
		return nil, errors.New("invalid value for required argument 'Payer'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("aws:s3/bucketRequestPaymentConfigurationV2:BucketRequestPaymentConfigurationV2"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BucketRequestPaymentConfiguration
	err := ctx.RegisterResource("aws:s3/bucketRequestPaymentConfiguration:BucketRequestPaymentConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucketRequestPaymentConfiguration gets an existing BucketRequestPaymentConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucketRequestPaymentConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketRequestPaymentConfigurationState, opts ...pulumi.ResourceOption) (*BucketRequestPaymentConfiguration, error) {
	var resource BucketRequestPaymentConfiguration
	err := ctx.ReadResource("aws:s3/bucketRequestPaymentConfiguration:BucketRequestPaymentConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BucketRequestPaymentConfiguration resources.
type bucketRequestPaymentConfigurationState struct {
	// Name of the bucket.
	Bucket *string `pulumi:"bucket"`
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner *string `pulumi:"expectedBucketOwner"`
	// Specifies who pays for the download and request fees. Valid values: `BucketOwner`, `Requester`.
	Payer *string `pulumi:"payer"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
}

type BucketRequestPaymentConfigurationState struct {
	// Name of the bucket.
	Bucket pulumi.StringPtrInput
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner pulumi.StringPtrInput
	// Specifies who pays for the download and request fees. Valid values: `BucketOwner`, `Requester`.
	Payer pulumi.StringPtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
}

func (BucketRequestPaymentConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketRequestPaymentConfigurationState)(nil)).Elem()
}

type bucketRequestPaymentConfigurationArgs struct {
	// Name of the bucket.
	Bucket string `pulumi:"bucket"`
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner *string `pulumi:"expectedBucketOwner"`
	// Specifies who pays for the download and request fees. Valid values: `BucketOwner`, `Requester`.
	Payer string `pulumi:"payer"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a BucketRequestPaymentConfiguration resource.
type BucketRequestPaymentConfigurationArgs struct {
	// Name of the bucket.
	Bucket pulumi.StringInput
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner pulumi.StringPtrInput
	// Specifies who pays for the download and request fees. Valid values: `BucketOwner`, `Requester`.
	Payer pulumi.StringInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
}

func (BucketRequestPaymentConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketRequestPaymentConfigurationArgs)(nil)).Elem()
}

type BucketRequestPaymentConfigurationInput interface {
	pulumi.Input

	ToBucketRequestPaymentConfigurationOutput() BucketRequestPaymentConfigurationOutput
	ToBucketRequestPaymentConfigurationOutputWithContext(ctx context.Context) BucketRequestPaymentConfigurationOutput
}

func (*BucketRequestPaymentConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketRequestPaymentConfiguration)(nil)).Elem()
}

func (i *BucketRequestPaymentConfiguration) ToBucketRequestPaymentConfigurationOutput() BucketRequestPaymentConfigurationOutput {
	return i.ToBucketRequestPaymentConfigurationOutputWithContext(context.Background())
}

func (i *BucketRequestPaymentConfiguration) ToBucketRequestPaymentConfigurationOutputWithContext(ctx context.Context) BucketRequestPaymentConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRequestPaymentConfigurationOutput)
}

// BucketRequestPaymentConfigurationArrayInput is an input type that accepts BucketRequestPaymentConfigurationArray and BucketRequestPaymentConfigurationArrayOutput values.
// You can construct a concrete instance of `BucketRequestPaymentConfigurationArrayInput` via:
//
//	BucketRequestPaymentConfigurationArray{ BucketRequestPaymentConfigurationArgs{...} }
type BucketRequestPaymentConfigurationArrayInput interface {
	pulumi.Input

	ToBucketRequestPaymentConfigurationArrayOutput() BucketRequestPaymentConfigurationArrayOutput
	ToBucketRequestPaymentConfigurationArrayOutputWithContext(context.Context) BucketRequestPaymentConfigurationArrayOutput
}

type BucketRequestPaymentConfigurationArray []BucketRequestPaymentConfigurationInput

func (BucketRequestPaymentConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BucketRequestPaymentConfiguration)(nil)).Elem()
}

func (i BucketRequestPaymentConfigurationArray) ToBucketRequestPaymentConfigurationArrayOutput() BucketRequestPaymentConfigurationArrayOutput {
	return i.ToBucketRequestPaymentConfigurationArrayOutputWithContext(context.Background())
}

func (i BucketRequestPaymentConfigurationArray) ToBucketRequestPaymentConfigurationArrayOutputWithContext(ctx context.Context) BucketRequestPaymentConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRequestPaymentConfigurationArrayOutput)
}

// BucketRequestPaymentConfigurationMapInput is an input type that accepts BucketRequestPaymentConfigurationMap and BucketRequestPaymentConfigurationMapOutput values.
// You can construct a concrete instance of `BucketRequestPaymentConfigurationMapInput` via:
//
//	BucketRequestPaymentConfigurationMap{ "key": BucketRequestPaymentConfigurationArgs{...} }
type BucketRequestPaymentConfigurationMapInput interface {
	pulumi.Input

	ToBucketRequestPaymentConfigurationMapOutput() BucketRequestPaymentConfigurationMapOutput
	ToBucketRequestPaymentConfigurationMapOutputWithContext(context.Context) BucketRequestPaymentConfigurationMapOutput
}

type BucketRequestPaymentConfigurationMap map[string]BucketRequestPaymentConfigurationInput

func (BucketRequestPaymentConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BucketRequestPaymentConfiguration)(nil)).Elem()
}

func (i BucketRequestPaymentConfigurationMap) ToBucketRequestPaymentConfigurationMapOutput() BucketRequestPaymentConfigurationMapOutput {
	return i.ToBucketRequestPaymentConfigurationMapOutputWithContext(context.Background())
}

func (i BucketRequestPaymentConfigurationMap) ToBucketRequestPaymentConfigurationMapOutputWithContext(ctx context.Context) BucketRequestPaymentConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketRequestPaymentConfigurationMapOutput)
}

type BucketRequestPaymentConfigurationOutput struct{ *pulumi.OutputState }

func (BucketRequestPaymentConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketRequestPaymentConfiguration)(nil)).Elem()
}

func (o BucketRequestPaymentConfigurationOutput) ToBucketRequestPaymentConfigurationOutput() BucketRequestPaymentConfigurationOutput {
	return o
}

func (o BucketRequestPaymentConfigurationOutput) ToBucketRequestPaymentConfigurationOutputWithContext(ctx context.Context) BucketRequestPaymentConfigurationOutput {
	return o
}

// Name of the bucket.
func (o BucketRequestPaymentConfigurationOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v *BucketRequestPaymentConfiguration) pulumi.StringOutput { return v.Bucket }).(pulumi.StringOutput)
}

// Account ID of the expected bucket owner.
func (o BucketRequestPaymentConfigurationOutput) ExpectedBucketOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketRequestPaymentConfiguration) pulumi.StringPtrOutput { return v.ExpectedBucketOwner }).(pulumi.StringPtrOutput)
}

// Specifies who pays for the download and request fees. Valid values: `BucketOwner`, `Requester`.
func (o BucketRequestPaymentConfigurationOutput) Payer() pulumi.StringOutput {
	return o.ApplyT(func(v *BucketRequestPaymentConfiguration) pulumi.StringOutput { return v.Payer }).(pulumi.StringOutput)
}

// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
func (o BucketRequestPaymentConfigurationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *BucketRequestPaymentConfiguration) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

type BucketRequestPaymentConfigurationArrayOutput struct{ *pulumi.OutputState }

func (BucketRequestPaymentConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BucketRequestPaymentConfiguration)(nil)).Elem()
}

func (o BucketRequestPaymentConfigurationArrayOutput) ToBucketRequestPaymentConfigurationArrayOutput() BucketRequestPaymentConfigurationArrayOutput {
	return o
}

func (o BucketRequestPaymentConfigurationArrayOutput) ToBucketRequestPaymentConfigurationArrayOutputWithContext(ctx context.Context) BucketRequestPaymentConfigurationArrayOutput {
	return o
}

func (o BucketRequestPaymentConfigurationArrayOutput) Index(i pulumi.IntInput) BucketRequestPaymentConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BucketRequestPaymentConfiguration {
		return vs[0].([]*BucketRequestPaymentConfiguration)[vs[1].(int)]
	}).(BucketRequestPaymentConfigurationOutput)
}

type BucketRequestPaymentConfigurationMapOutput struct{ *pulumi.OutputState }

func (BucketRequestPaymentConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BucketRequestPaymentConfiguration)(nil)).Elem()
}

func (o BucketRequestPaymentConfigurationMapOutput) ToBucketRequestPaymentConfigurationMapOutput() BucketRequestPaymentConfigurationMapOutput {
	return o
}

func (o BucketRequestPaymentConfigurationMapOutput) ToBucketRequestPaymentConfigurationMapOutputWithContext(ctx context.Context) BucketRequestPaymentConfigurationMapOutput {
	return o
}

func (o BucketRequestPaymentConfigurationMapOutput) MapIndex(k pulumi.StringInput) BucketRequestPaymentConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BucketRequestPaymentConfiguration {
		return vs[0].(map[string]*BucketRequestPaymentConfiguration)[vs[1].(string)]
	}).(BucketRequestPaymentConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BucketRequestPaymentConfigurationInput)(nil)).Elem(), &BucketRequestPaymentConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketRequestPaymentConfigurationArrayInput)(nil)).Elem(), BucketRequestPaymentConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketRequestPaymentConfigurationMapInput)(nil)).Elem(), BucketRequestPaymentConfigurationMap{})
	pulumi.RegisterOutputType(BucketRequestPaymentConfigurationOutput{})
	pulumi.RegisterOutputType(BucketRequestPaymentConfigurationArrayOutput{})
	pulumi.RegisterOutputType(BucketRequestPaymentConfigurationMapOutput{})
}
