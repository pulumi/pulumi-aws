// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an S3 bucket ACL resource.
//
// > **Note:** destroy does not delete the S3 Bucket ACL but does remove the resource from state.
//
// > This resource cannot be used with S3 directory buckets.
//
// ## Example Usage
//
// ### With `private` ACL
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/s3"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := s3.NewBucket(ctx, "example", &s3.BucketArgs{
//				Bucket: pulumi.String("my-tf-example-bucket"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleBucketOwnershipControls, err := s3.NewBucketOwnershipControls(ctx, "example", &s3.BucketOwnershipControlsArgs{
//				Bucket: example.ID(),
//				Rule: &s3.BucketOwnershipControlsRuleArgs{
//					ObjectOwnership: pulumi.String("BucketOwnerPreferred"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = s3.NewBucketAcl(ctx, "example", &s3.BucketAclArgs{
//				Bucket: example.ID(),
//				Acl:    pulumi.String("private"),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				exampleBucketOwnershipControls,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### With `public-read` ACL
//
// > This example explicitly disables the default S3 bucket security settings. This
// should be done with caution, as all bucket objects become publicly exposed.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/s3"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := s3.NewBucket(ctx, "example", &s3.BucketArgs{
//				Bucket: pulumi.String("my-tf-example-bucket"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleBucketOwnershipControls, err := s3.NewBucketOwnershipControls(ctx, "example", &s3.BucketOwnershipControlsArgs{
//				Bucket: example.ID(),
//				Rule: &s3.BucketOwnershipControlsRuleArgs{
//					ObjectOwnership: pulumi.String("BucketOwnerPreferred"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			exampleBucketPublicAccessBlock, err := s3.NewBucketPublicAccessBlock(ctx, "example", &s3.BucketPublicAccessBlockArgs{
//				Bucket:                example.ID(),
//				BlockPublicAcls:       pulumi.Bool(false),
//				BlockPublicPolicy:     pulumi.Bool(false),
//				IgnorePublicAcls:      pulumi.Bool(false),
//				RestrictPublicBuckets: pulumi.Bool(false),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = s3.NewBucketAcl(ctx, "example", &s3.BucketAclArgs{
//				Bucket: example.ID(),
//				Acl:    pulumi.String("public-read"),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				exampleBucketOwnershipControls,
//				exampleBucketPublicAccessBlock,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### With Grants
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/s3"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			current, err := s3.GetCanonicalUserId(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			example, err := s3.NewBucket(ctx, "example", &s3.BucketArgs{
//				Bucket: pulumi.String("my-tf-example-bucket"),
//			})
//			if err != nil {
//				return err
//			}
//			exampleBucketOwnershipControls, err := s3.NewBucketOwnershipControls(ctx, "example", &s3.BucketOwnershipControlsArgs{
//				Bucket: example.ID(),
//				Rule: &s3.BucketOwnershipControlsRuleArgs{
//					ObjectOwnership: pulumi.String("BucketOwnerPreferred"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = s3.NewBucketAcl(ctx, "example", &s3.BucketAclArgs{
//				Bucket: example.ID(),
//				AccessControlPolicy: &s3.BucketAclAccessControlPolicyArgs{
//					Grants: s3.BucketAclAccessControlPolicyGrantArray{
//						&s3.BucketAclAccessControlPolicyGrantArgs{
//							Grantee: &s3.BucketAclAccessControlPolicyGrantGranteeArgs{
//								Id:   pulumi.String(current.Id),
//								Type: pulumi.String("CanonicalUser"),
//							},
//							Permission: pulumi.String("READ"),
//						},
//						&s3.BucketAclAccessControlPolicyGrantArgs{
//							Grantee: &s3.BucketAclAccessControlPolicyGrantGranteeArgs{
//								Type: pulumi.String("Group"),
//								Uri:  pulumi.String("http://acs.amazonaws.com/groups/s3/LogDelivery"),
//							},
//							Permission: pulumi.String("READ_ACP"),
//						},
//					},
//					Owner: &s3.BucketAclAccessControlPolicyOwnerArgs{
//						Id: pulumi.String(current.Id),
//					},
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				exampleBucketOwnershipControls,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// If the owner (account ID) of the source bucket is the _same_ account used to configure the AWS Provider, and the source bucket is __configured__ with a
// [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl) (i.e. predefined grant), import using the `bucket` and `acl` separated by a comma (`,`):
//
// If the owner (account ID) of the source bucket _differs_ from the account used to configure the AWS Provider, and the source bucket is __not configured__ with a [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl) (i.e. predefined grant), imported using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):
//
// If the owner (account ID) of the source bucket _differs_ from the account used to configure the AWS Provider, and the source bucket is __configured__ with a
// [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl) (i.e. predefined grant), imported using the `bucket`, `expected_bucket_owner`, and `acl` separated by commas (`,`):
//
// __Using `pulumi import` to import__ using `bucket`, `expected_bucket_owner`, and/or `acl`, depending on your situation. For example:
//
// If the owner (account ID) of the source bucket is the _same_ account used to configure the AWS Provider, and the source bucket is __not configured__ with a
// [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl) (i.e. predefined grant), import using the `bucket`:
//
// ```sh
// $ pulumi import aws:s3/bucketAcl:BucketAcl example bucket-name
// ```
// If the owner (account ID) of the source bucket is the _same_ account used to configure the AWS Provider, and the source bucket is __configured__ with a [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl) (i.e. predefined grant), import using the `bucket` and `acl` separated by a comma (`,`):
//
// ```sh
// $ pulumi import aws:s3/bucketAcl:BucketAcl example bucket-name,private
// ```
// If the owner (account ID) of the source bucket _differs_ from the account used to configure the AWS Provider, and the source bucket is __not configured__ with a [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl) (i.e. predefined grant), imported using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):
//
// ```sh
// $ pulumi import aws:s3/bucketAcl:BucketAcl example bucket-name,123456789012
// ```
// If the owner (account ID) of the source bucket _differs_ from the account used to configure the AWS Provider, and the source bucket is __configured__ with a [canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl) (i.e. predefined grant), imported using the `bucket`, `expected_bucket_owner`, and `acl` separated by commas (`,`):
//
// ```sh
// $ pulumi import aws:s3/bucketAcl:BucketAcl example bucket-name,123456789012,private
// ```
type BucketAcl struct {
	pulumi.CustomResourceState

	// Configuration block that sets the ACL permissions for an object per grantee. See below.
	AccessControlPolicy BucketAclAccessControlPolicyOutput `pulumi:"accessControlPolicy"`
	// Specifies the Canned ACL to apply to the bucket. Valid values: `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, `bucket-owner-read`, `bucket-owner-full-control`, `log-delivery-write`. Full details are available on the [AWS documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl).
	Acl pulumi.StringPtrOutput `pulumi:"acl"`
	// Bucket to which to apply the ACL.
	Bucket pulumi.StringOutput `pulumi:"bucket"`
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner pulumi.StringPtrOutput `pulumi:"expectedBucketOwner"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringOutput `pulumi:"region"`
}

// NewBucketAcl registers a new resource with the given unique name, arguments, and options.
func NewBucketAcl(ctx *pulumi.Context,
	name string, args *BucketAclArgs, opts ...pulumi.ResourceOption) (*BucketAcl, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("aws:s3/bucketAclV2:BucketAclV2"),
		},
		{
			Type: pulumi.String("aws:s3/bucketAclV2:BucketAclV2"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BucketAcl
	err := ctx.RegisterResource("aws:s3/bucketAcl:BucketAcl", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucketAcl gets an existing BucketAcl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucketAcl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketAclState, opts ...pulumi.ResourceOption) (*BucketAcl, error) {
	var resource BucketAcl
	err := ctx.ReadResource("aws:s3/bucketAcl:BucketAcl", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BucketAcl resources.
type bucketAclState struct {
	// Configuration block that sets the ACL permissions for an object per grantee. See below.
	AccessControlPolicy *BucketAclAccessControlPolicy `pulumi:"accessControlPolicy"`
	// Specifies the Canned ACL to apply to the bucket. Valid values: `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, `bucket-owner-read`, `bucket-owner-full-control`, `log-delivery-write`. Full details are available on the [AWS documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl).
	Acl *string `pulumi:"acl"`
	// Bucket to which to apply the ACL.
	Bucket *string `pulumi:"bucket"`
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner *string `pulumi:"expectedBucketOwner"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
}

type BucketAclState struct {
	// Configuration block that sets the ACL permissions for an object per grantee. See below.
	AccessControlPolicy BucketAclAccessControlPolicyPtrInput
	// Specifies the Canned ACL to apply to the bucket. Valid values: `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, `bucket-owner-read`, `bucket-owner-full-control`, `log-delivery-write`. Full details are available on the [AWS documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl).
	Acl pulumi.StringPtrInput
	// Bucket to which to apply the ACL.
	Bucket pulumi.StringPtrInput
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner pulumi.StringPtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
}

func (BucketAclState) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketAclState)(nil)).Elem()
}

type bucketAclArgs struct {
	// Configuration block that sets the ACL permissions for an object per grantee. See below.
	AccessControlPolicy *BucketAclAccessControlPolicy `pulumi:"accessControlPolicy"`
	// Specifies the Canned ACL to apply to the bucket. Valid values: `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, `bucket-owner-read`, `bucket-owner-full-control`, `log-delivery-write`. Full details are available on the [AWS documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl).
	Acl *string `pulumi:"acl"`
	// Bucket to which to apply the ACL.
	Bucket string `pulumi:"bucket"`
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner *string `pulumi:"expectedBucketOwner"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a BucketAcl resource.
type BucketAclArgs struct {
	// Configuration block that sets the ACL permissions for an object per grantee. See below.
	AccessControlPolicy BucketAclAccessControlPolicyPtrInput
	// Specifies the Canned ACL to apply to the bucket. Valid values: `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, `bucket-owner-read`, `bucket-owner-full-control`, `log-delivery-write`. Full details are available on the [AWS documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl).
	Acl pulumi.StringPtrInput
	// Bucket to which to apply the ACL.
	Bucket pulumi.StringInput
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner pulumi.StringPtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
}

func (BucketAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketAclArgs)(nil)).Elem()
}

type BucketAclInput interface {
	pulumi.Input

	ToBucketAclOutput() BucketAclOutput
	ToBucketAclOutputWithContext(ctx context.Context) BucketAclOutput
}

func (*BucketAcl) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketAcl)(nil)).Elem()
}

func (i *BucketAcl) ToBucketAclOutput() BucketAclOutput {
	return i.ToBucketAclOutputWithContext(context.Background())
}

func (i *BucketAcl) ToBucketAclOutputWithContext(ctx context.Context) BucketAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAclOutput)
}

// BucketAclArrayInput is an input type that accepts BucketAclArray and BucketAclArrayOutput values.
// You can construct a concrete instance of `BucketAclArrayInput` via:
//
//	BucketAclArray{ BucketAclArgs{...} }
type BucketAclArrayInput interface {
	pulumi.Input

	ToBucketAclArrayOutput() BucketAclArrayOutput
	ToBucketAclArrayOutputWithContext(context.Context) BucketAclArrayOutput
}

type BucketAclArray []BucketAclInput

func (BucketAclArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BucketAcl)(nil)).Elem()
}

func (i BucketAclArray) ToBucketAclArrayOutput() BucketAclArrayOutput {
	return i.ToBucketAclArrayOutputWithContext(context.Background())
}

func (i BucketAclArray) ToBucketAclArrayOutputWithContext(ctx context.Context) BucketAclArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAclArrayOutput)
}

// BucketAclMapInput is an input type that accepts BucketAclMap and BucketAclMapOutput values.
// You can construct a concrete instance of `BucketAclMapInput` via:
//
//	BucketAclMap{ "key": BucketAclArgs{...} }
type BucketAclMapInput interface {
	pulumi.Input

	ToBucketAclMapOutput() BucketAclMapOutput
	ToBucketAclMapOutputWithContext(context.Context) BucketAclMapOutput
}

type BucketAclMap map[string]BucketAclInput

func (BucketAclMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BucketAcl)(nil)).Elem()
}

func (i BucketAclMap) ToBucketAclMapOutput() BucketAclMapOutput {
	return i.ToBucketAclMapOutputWithContext(context.Background())
}

func (i BucketAclMap) ToBucketAclMapOutputWithContext(ctx context.Context) BucketAclMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketAclMapOutput)
}

type BucketAclOutput struct{ *pulumi.OutputState }

func (BucketAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketAcl)(nil)).Elem()
}

func (o BucketAclOutput) ToBucketAclOutput() BucketAclOutput {
	return o
}

func (o BucketAclOutput) ToBucketAclOutputWithContext(ctx context.Context) BucketAclOutput {
	return o
}

// Configuration block that sets the ACL permissions for an object per grantee. See below.
func (o BucketAclOutput) AccessControlPolicy() BucketAclAccessControlPolicyOutput {
	return o.ApplyT(func(v *BucketAcl) BucketAclAccessControlPolicyOutput { return v.AccessControlPolicy }).(BucketAclAccessControlPolicyOutput)
}

// Specifies the Canned ACL to apply to the bucket. Valid values: `private`, `public-read`, `public-read-write`, `aws-exec-read`, `authenticated-read`, `bucket-owner-read`, `bucket-owner-full-control`, `log-delivery-write`. Full details are available on the [AWS documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl).
func (o BucketAclOutput) Acl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketAcl) pulumi.StringPtrOutput { return v.Acl }).(pulumi.StringPtrOutput)
}

// Bucket to which to apply the ACL.
func (o BucketAclOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v *BucketAcl) pulumi.StringOutput { return v.Bucket }).(pulumi.StringOutput)
}

// Account ID of the expected bucket owner.
func (o BucketAclOutput) ExpectedBucketOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketAcl) pulumi.StringPtrOutput { return v.ExpectedBucketOwner }).(pulumi.StringPtrOutput)
}

// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
func (o BucketAclOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *BucketAcl) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

type BucketAclArrayOutput struct{ *pulumi.OutputState }

func (BucketAclArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BucketAcl)(nil)).Elem()
}

func (o BucketAclArrayOutput) ToBucketAclArrayOutput() BucketAclArrayOutput {
	return o
}

func (o BucketAclArrayOutput) ToBucketAclArrayOutputWithContext(ctx context.Context) BucketAclArrayOutput {
	return o
}

func (o BucketAclArrayOutput) Index(i pulumi.IntInput) BucketAclOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BucketAcl {
		return vs[0].([]*BucketAcl)[vs[1].(int)]
	}).(BucketAclOutput)
}

type BucketAclMapOutput struct{ *pulumi.OutputState }

func (BucketAclMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BucketAcl)(nil)).Elem()
}

func (o BucketAclMapOutput) ToBucketAclMapOutput() BucketAclMapOutput {
	return o
}

func (o BucketAclMapOutput) ToBucketAclMapOutputWithContext(ctx context.Context) BucketAclMapOutput {
	return o
}

func (o BucketAclMapOutput) MapIndex(k pulumi.StringInput) BucketAclOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BucketAcl {
		return vs[0].(map[string]*BucketAcl)[vs[1].(string)]
	}).(BucketAclOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BucketAclInput)(nil)).Elem(), &BucketAcl{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketAclArrayInput)(nil)).Elem(), BucketAclArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketAclMapInput)(nil)).Elem(), BucketAclMap{})
	pulumi.RegisterOutputType(BucketAclOutput{})
	pulumi.RegisterOutputType(BucketAclArrayOutput{})
	pulumi.RegisterOutputType(BucketAclMapOutput{})
}
