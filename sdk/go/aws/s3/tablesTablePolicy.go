// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an Amazon S3 Tables Table Policy.
//
// ## Example Usage
//
// ## Import
//
// Using `pulumi import`, import S3 Tables Table Policy using the `table_bucket_arn`, the value of `namespace`, and the value of `name`, separated by a semicolon (`;`). For example:
//
// ```sh
// $ pulumi import aws:s3/tablesTablePolicy:TablesTablePolicy example 'arn:aws:s3tables:us-west-2:123456789012:bucket/example-bucket;example-namespace;example-table'
// ```
type TablesTablePolicy struct {
	pulumi.CustomResourceState

	// Name of the table.
	// Must be between 1 and 255 characters in length.
	// Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
	Name pulumi.StringOutput `pulumi:"name"`
	// Name of the namespace for this table.
	// Must be between 1 and 255 characters in length.
	// Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
	Namespace pulumi.StringOutput `pulumi:"namespace"`
	// Amazon Web Services resource-based policy document in JSON format.
	ResourcePolicy pulumi.StringOutput `pulumi:"resourcePolicy"`
	// ARN referencing the Table Bucket that contains this Namespace.
	TableBucketArn pulumi.StringOutput `pulumi:"tableBucketArn"`
}

// NewTablesTablePolicy registers a new resource with the given unique name, arguments, and options.
func NewTablesTablePolicy(ctx *pulumi.Context,
	name string, args *TablesTablePolicyArgs, opts ...pulumi.ResourceOption) (*TablesTablePolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Namespace == nil {
		return nil, errors.New("invalid value for required argument 'Namespace'")
	}
	if args.ResourcePolicy == nil {
		return nil, errors.New("invalid value for required argument 'ResourcePolicy'")
	}
	if args.TableBucketArn == nil {
		return nil, errors.New("invalid value for required argument 'TableBucketArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TablesTablePolicy
	err := ctx.RegisterResource("aws:s3/tablesTablePolicy:TablesTablePolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTablesTablePolicy gets an existing TablesTablePolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTablesTablePolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TablesTablePolicyState, opts ...pulumi.ResourceOption) (*TablesTablePolicy, error) {
	var resource TablesTablePolicy
	err := ctx.ReadResource("aws:s3/tablesTablePolicy:TablesTablePolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TablesTablePolicy resources.
type tablesTablePolicyState struct {
	// Name of the table.
	// Must be between 1 and 255 characters in length.
	// Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
	Name *string `pulumi:"name"`
	// Name of the namespace for this table.
	// Must be between 1 and 255 characters in length.
	// Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
	Namespace *string `pulumi:"namespace"`
	// Amazon Web Services resource-based policy document in JSON format.
	ResourcePolicy *string `pulumi:"resourcePolicy"`
	// ARN referencing the Table Bucket that contains this Namespace.
	TableBucketArn *string `pulumi:"tableBucketArn"`
}

type TablesTablePolicyState struct {
	// Name of the table.
	// Must be between 1 and 255 characters in length.
	// Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
	Name pulumi.StringPtrInput
	// Name of the namespace for this table.
	// Must be between 1 and 255 characters in length.
	// Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
	Namespace pulumi.StringPtrInput
	// Amazon Web Services resource-based policy document in JSON format.
	ResourcePolicy pulumi.StringPtrInput
	// ARN referencing the Table Bucket that contains this Namespace.
	TableBucketArn pulumi.StringPtrInput
}

func (TablesTablePolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*tablesTablePolicyState)(nil)).Elem()
}

type tablesTablePolicyArgs struct {
	// Name of the table.
	// Must be between 1 and 255 characters in length.
	// Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
	Name *string `pulumi:"name"`
	// Name of the namespace for this table.
	// Must be between 1 and 255 characters in length.
	// Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
	Namespace string `pulumi:"namespace"`
	// Amazon Web Services resource-based policy document in JSON format.
	ResourcePolicy string `pulumi:"resourcePolicy"`
	// ARN referencing the Table Bucket that contains this Namespace.
	TableBucketArn string `pulumi:"tableBucketArn"`
}

// The set of arguments for constructing a TablesTablePolicy resource.
type TablesTablePolicyArgs struct {
	// Name of the table.
	// Must be between 1 and 255 characters in length.
	// Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
	Name pulumi.StringPtrInput
	// Name of the namespace for this table.
	// Must be between 1 and 255 characters in length.
	// Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
	Namespace pulumi.StringInput
	// Amazon Web Services resource-based policy document in JSON format.
	ResourcePolicy pulumi.StringInput
	// ARN referencing the Table Bucket that contains this Namespace.
	TableBucketArn pulumi.StringInput
}

func (TablesTablePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tablesTablePolicyArgs)(nil)).Elem()
}

type TablesTablePolicyInput interface {
	pulumi.Input

	ToTablesTablePolicyOutput() TablesTablePolicyOutput
	ToTablesTablePolicyOutputWithContext(ctx context.Context) TablesTablePolicyOutput
}

func (*TablesTablePolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**TablesTablePolicy)(nil)).Elem()
}

func (i *TablesTablePolicy) ToTablesTablePolicyOutput() TablesTablePolicyOutput {
	return i.ToTablesTablePolicyOutputWithContext(context.Background())
}

func (i *TablesTablePolicy) ToTablesTablePolicyOutputWithContext(ctx context.Context) TablesTablePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TablesTablePolicyOutput)
}

// TablesTablePolicyArrayInput is an input type that accepts TablesTablePolicyArray and TablesTablePolicyArrayOutput values.
// You can construct a concrete instance of `TablesTablePolicyArrayInput` via:
//
//	TablesTablePolicyArray{ TablesTablePolicyArgs{...} }
type TablesTablePolicyArrayInput interface {
	pulumi.Input

	ToTablesTablePolicyArrayOutput() TablesTablePolicyArrayOutput
	ToTablesTablePolicyArrayOutputWithContext(context.Context) TablesTablePolicyArrayOutput
}

type TablesTablePolicyArray []TablesTablePolicyInput

func (TablesTablePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TablesTablePolicy)(nil)).Elem()
}

func (i TablesTablePolicyArray) ToTablesTablePolicyArrayOutput() TablesTablePolicyArrayOutput {
	return i.ToTablesTablePolicyArrayOutputWithContext(context.Background())
}

func (i TablesTablePolicyArray) ToTablesTablePolicyArrayOutputWithContext(ctx context.Context) TablesTablePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TablesTablePolicyArrayOutput)
}

// TablesTablePolicyMapInput is an input type that accepts TablesTablePolicyMap and TablesTablePolicyMapOutput values.
// You can construct a concrete instance of `TablesTablePolicyMapInput` via:
//
//	TablesTablePolicyMap{ "key": TablesTablePolicyArgs{...} }
type TablesTablePolicyMapInput interface {
	pulumi.Input

	ToTablesTablePolicyMapOutput() TablesTablePolicyMapOutput
	ToTablesTablePolicyMapOutputWithContext(context.Context) TablesTablePolicyMapOutput
}

type TablesTablePolicyMap map[string]TablesTablePolicyInput

func (TablesTablePolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TablesTablePolicy)(nil)).Elem()
}

func (i TablesTablePolicyMap) ToTablesTablePolicyMapOutput() TablesTablePolicyMapOutput {
	return i.ToTablesTablePolicyMapOutputWithContext(context.Background())
}

func (i TablesTablePolicyMap) ToTablesTablePolicyMapOutputWithContext(ctx context.Context) TablesTablePolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TablesTablePolicyMapOutput)
}

type TablesTablePolicyOutput struct{ *pulumi.OutputState }

func (TablesTablePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TablesTablePolicy)(nil)).Elem()
}

func (o TablesTablePolicyOutput) ToTablesTablePolicyOutput() TablesTablePolicyOutput {
	return o
}

func (o TablesTablePolicyOutput) ToTablesTablePolicyOutputWithContext(ctx context.Context) TablesTablePolicyOutput {
	return o
}

// Name of the table.
// Must be between 1 and 255 characters in length.
// Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
func (o TablesTablePolicyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TablesTablePolicy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Name of the namespace for this table.
// Must be between 1 and 255 characters in length.
// Can consist of lowercase letters, numbers, and underscores, and must begin and end with a lowercase letter or number.
func (o TablesTablePolicyOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v *TablesTablePolicy) pulumi.StringOutput { return v.Namespace }).(pulumi.StringOutput)
}

// Amazon Web Services resource-based policy document in JSON format.
func (o TablesTablePolicyOutput) ResourcePolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *TablesTablePolicy) pulumi.StringOutput { return v.ResourcePolicy }).(pulumi.StringOutput)
}

// ARN referencing the Table Bucket that contains this Namespace.
func (o TablesTablePolicyOutput) TableBucketArn() pulumi.StringOutput {
	return o.ApplyT(func(v *TablesTablePolicy) pulumi.StringOutput { return v.TableBucketArn }).(pulumi.StringOutput)
}

type TablesTablePolicyArrayOutput struct{ *pulumi.OutputState }

func (TablesTablePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TablesTablePolicy)(nil)).Elem()
}

func (o TablesTablePolicyArrayOutput) ToTablesTablePolicyArrayOutput() TablesTablePolicyArrayOutput {
	return o
}

func (o TablesTablePolicyArrayOutput) ToTablesTablePolicyArrayOutputWithContext(ctx context.Context) TablesTablePolicyArrayOutput {
	return o
}

func (o TablesTablePolicyArrayOutput) Index(i pulumi.IntInput) TablesTablePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TablesTablePolicy {
		return vs[0].([]*TablesTablePolicy)[vs[1].(int)]
	}).(TablesTablePolicyOutput)
}

type TablesTablePolicyMapOutput struct{ *pulumi.OutputState }

func (TablesTablePolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TablesTablePolicy)(nil)).Elem()
}

func (o TablesTablePolicyMapOutput) ToTablesTablePolicyMapOutput() TablesTablePolicyMapOutput {
	return o
}

func (o TablesTablePolicyMapOutput) ToTablesTablePolicyMapOutputWithContext(ctx context.Context) TablesTablePolicyMapOutput {
	return o
}

func (o TablesTablePolicyMapOutput) MapIndex(k pulumi.StringInput) TablesTablePolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TablesTablePolicy {
		return vs[0].(map[string]*TablesTablePolicy)[vs[1].(string)]
	}).(TablesTablePolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TablesTablePolicyInput)(nil)).Elem(), &TablesTablePolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*TablesTablePolicyArrayInput)(nil)).Elem(), TablesTablePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TablesTablePolicyMapInput)(nil)).Elem(), TablesTablePolicyMap{})
	pulumi.RegisterOutputType(TablesTablePolicyOutput{})
	pulumi.RegisterOutputType(TablesTablePolicyArrayOutput{})
	pulumi.RegisterOutputType(TablesTablePolicyMapOutput{})
}
