// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an independent configuration resource for S3 bucket [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html).
//
// ## Example Usage
// ### Using replication configuration
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws"
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/iam"
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/providers"
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/s3"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := providers.Newaws(ctx, "central", &providers.awsArgs{
// 			Region: "eu-central-1",
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		replicationRole, err := iam.NewRole(ctx, "replicationRole", &iam.RoleArgs{
// 			AssumeRolePolicy: pulumi.Any(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v%v", "{\n", "  \"Version\": \"2012-10-17\",\n", "  \"Statement\": [\n", "    {\n", "      \"Action\": \"sts:AssumeRole\",\n", "      \"Principal\": {\n", "        \"Service\": \"s3.amazonaws.com\"\n", "      },\n", "      \"Effect\": \"Allow\",\n", "      \"Sid\": \"\"\n", "    }\n", "  ]\n", "}\n")),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		destination, err := s3.NewBucket(ctx, "destination", &s3.BucketArgs{
// 			Versioning: &s3.BucketVersioningArgs{
// 				Enabled: pulumi.Bool(true),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		source, err := s3.NewBucket(ctx, "source", &s3.BucketArgs{
// 			Acl: pulumi.String("private"),
// 			Versioning: &s3.BucketVersioningArgs{
// 				Enabled: pulumi.Bool(true),
// 			},
// 		}, pulumi.Provider(aws.Central))
// 		if err != nil {
// 			return err
// 		}
// 		replicationPolicy, err := iam.NewPolicy(ctx, "replicationPolicy", &iam.PolicyArgs{
// 			Policy: pulumi.All(source.Arn, source.Arn, destination.Arn).ApplyT(func(_args []interface{}) (string, error) {
// 				sourceArn := _args[0].(string)
// 				sourceArn1 := _args[1].(string)
// 				destinationArn := _args[2].(string)
// 				return fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v", "{\n", "  \"Version\": \"2012-10-17\",\n", "  \"Statement\": [\n", "    {\n", "      \"Action\": [\n", "        \"s3:GetReplicationConfiguration\",\n", "        \"s3:ListBucket\"\n", "      ],\n", "      \"Effect\": \"Allow\",\n", "      \"Resource\": [\n", "        \"", sourceArn, "\"\n", "      ]\n", "    },\n", "    {\n", "      \"Action\": [\n", "        \"s3:GetObjectVersionForReplication\",\n", "        \"s3:GetObjectVersionAcl\",\n", "         \"s3:GetObjectVersionTagging\"\n", "      ],\n", "      \"Effect\": \"Allow\",\n", "      \"Resource\": [\n", "        \"", sourceArn1, "/*\"\n", "      ]\n", "    },\n", "    {\n", "      \"Action\": [\n", "        \"s3:ReplicateObject\",\n", "        \"s3:ReplicateDelete\",\n", "        \"s3:ReplicateTags\"\n", "      ],\n", "      \"Effect\": \"Allow\",\n", "      \"Resource\": \"", destinationArn, "/*\"\n", "    }\n", "  ]\n", "}\n"), nil
// 			}).(pulumi.StringOutput),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = iam.NewRolePolicyAttachment(ctx, "replicationRolePolicyAttachment", &iam.RolePolicyAttachmentArgs{
// 			Role:      replicationRole.Name,
// 			PolicyArn: replicationPolicy.Arn,
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = s3.NewBucketReplicationConfig(ctx, "replicationBucketReplicationConfig", &s3.BucketReplicationConfigArgs{
// 			Role:   replicationRole.Arn,
// 			Bucket: source.ID(),
// 			Rules: s3.BucketReplicationConfigRuleArray{
// 				&s3.BucketReplicationConfigRuleArgs{
// 					Id:     pulumi.String("foobar"),
// 					Prefix: pulumi.String("foo"),
// 					Status: pulumi.String("Enabled"),
// 					Destination: &s3.BucketReplicationConfigRuleDestinationArgs{
// 						Bucket:       destination.Arn,
// 						StorageClass: pulumi.String("STANDARD"),
// 					},
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ## Usage Notes
//
// > **NOTE:** To avoid conflicts always add the following lifecycle object to the `s3.Bucket` resource of the source bucket.
//
// This resource implements the same features that are provided by the `replicationConfiguration` object of the `s3.Bucket` resource. To avoid conflicts or unexpected apply results, a lifecycle configuration is needed on the `s3.Bucket` to ignore changes to the internal `replicationConfiguration` object.  Failure to add the `lifecycle` configuration to the `s3.Bucket` will result in conflicting state results.
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		return nil
// 	})
// }
// ```
//
// The `s3.BucketReplicationConfig` resource provides the following features that are not available in the `s3.Bucket` resource:
//
// * `replicaModifications` - Added to the `sourceSelectionCriteria` configuration object documented below
// * `metrics` - Added to the `destination` configuration object documented below
// * `replicationTime` - Added to the `destination` configuration object documented below
// * `existingObjectReplication` - Added to the replication rule object documented below
//
// Replication for existing objects requires activation by AWS Support.  See [userguide/replication-what-is-isnot-replicated](https://docs.aws.amazon.com/AmazonS3/latest/userguide/replication-what-is-isnot-replicated.html#existing-object-replication).
//
// ## Import
//
// S3 bucket replication configuration can be imported using the `bucket`, e.g.
//
// ```sh
//  $ pulumi import aws:s3/bucketReplicationConfig:BucketReplicationConfig replication bucket-name
// ```
type BucketReplicationConfig struct {
	pulumi.CustomResourceState

	// The name of the source S3 bucket you want Amazon S3 to monitor.
	Bucket pulumi.StringOutput `pulumi:"bucket"`
	// The ARN of the IAM role for Amazon S3 to assume when replicating the objects.
	Role pulumi.StringOutput `pulumi:"role"`
	// Set of configuration blocks describing the rules managing the replication documented below.
	Rules BucketReplicationConfigRuleArrayOutput `pulumi:"rules"`
}

// NewBucketReplicationConfig registers a new resource with the given unique name, arguments, and options.
func NewBucketReplicationConfig(ctx *pulumi.Context,
	name string, args *BucketReplicationConfigArgs, opts ...pulumi.ResourceOption) (*BucketReplicationConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.Rules == nil {
		return nil, errors.New("invalid value for required argument 'Rules'")
	}
	var resource BucketReplicationConfig
	err := ctx.RegisterResource("aws:s3/bucketReplicationConfig:BucketReplicationConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucketReplicationConfig gets an existing BucketReplicationConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucketReplicationConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketReplicationConfigState, opts ...pulumi.ResourceOption) (*BucketReplicationConfig, error) {
	var resource BucketReplicationConfig
	err := ctx.ReadResource("aws:s3/bucketReplicationConfig:BucketReplicationConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BucketReplicationConfig resources.
type bucketReplicationConfigState struct {
	// The name of the source S3 bucket you want Amazon S3 to monitor.
	Bucket *string `pulumi:"bucket"`
	// The ARN of the IAM role for Amazon S3 to assume when replicating the objects.
	Role *string `pulumi:"role"`
	// Set of configuration blocks describing the rules managing the replication documented below.
	Rules []BucketReplicationConfigRule `pulumi:"rules"`
}

type BucketReplicationConfigState struct {
	// The name of the source S3 bucket you want Amazon S3 to monitor.
	Bucket pulumi.StringPtrInput
	// The ARN of the IAM role for Amazon S3 to assume when replicating the objects.
	Role pulumi.StringPtrInput
	// Set of configuration blocks describing the rules managing the replication documented below.
	Rules BucketReplicationConfigRuleArrayInput
}

func (BucketReplicationConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketReplicationConfigState)(nil)).Elem()
}

type bucketReplicationConfigArgs struct {
	// The name of the source S3 bucket you want Amazon S3 to monitor.
	Bucket string `pulumi:"bucket"`
	// The ARN of the IAM role for Amazon S3 to assume when replicating the objects.
	Role string `pulumi:"role"`
	// Set of configuration blocks describing the rules managing the replication documented below.
	Rules []BucketReplicationConfigRule `pulumi:"rules"`
}

// The set of arguments for constructing a BucketReplicationConfig resource.
type BucketReplicationConfigArgs struct {
	// The name of the source S3 bucket you want Amazon S3 to monitor.
	Bucket pulumi.StringInput
	// The ARN of the IAM role for Amazon S3 to assume when replicating the objects.
	Role pulumi.StringInput
	// Set of configuration blocks describing the rules managing the replication documented below.
	Rules BucketReplicationConfigRuleArrayInput
}

func (BucketReplicationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketReplicationConfigArgs)(nil)).Elem()
}

type BucketReplicationConfigInput interface {
	pulumi.Input

	ToBucketReplicationConfigOutput() BucketReplicationConfigOutput
	ToBucketReplicationConfigOutputWithContext(ctx context.Context) BucketReplicationConfigOutput
}

func (*BucketReplicationConfig) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationConfig)(nil))
}

func (i *BucketReplicationConfig) ToBucketReplicationConfigOutput() BucketReplicationConfigOutput {
	return i.ToBucketReplicationConfigOutputWithContext(context.Background())
}

func (i *BucketReplicationConfig) ToBucketReplicationConfigOutputWithContext(ctx context.Context) BucketReplicationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigOutput)
}

func (i *BucketReplicationConfig) ToBucketReplicationConfigPtrOutput() BucketReplicationConfigPtrOutput {
	return i.ToBucketReplicationConfigPtrOutputWithContext(context.Background())
}

func (i *BucketReplicationConfig) ToBucketReplicationConfigPtrOutputWithContext(ctx context.Context) BucketReplicationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigPtrOutput)
}

type BucketReplicationConfigPtrInput interface {
	pulumi.Input

	ToBucketReplicationConfigPtrOutput() BucketReplicationConfigPtrOutput
	ToBucketReplicationConfigPtrOutputWithContext(ctx context.Context) BucketReplicationConfigPtrOutput
}

type bucketReplicationConfigPtrType BucketReplicationConfigArgs

func (*bucketReplicationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketReplicationConfig)(nil))
}

func (i *bucketReplicationConfigPtrType) ToBucketReplicationConfigPtrOutput() BucketReplicationConfigPtrOutput {
	return i.ToBucketReplicationConfigPtrOutputWithContext(context.Background())
}

func (i *bucketReplicationConfigPtrType) ToBucketReplicationConfigPtrOutputWithContext(ctx context.Context) BucketReplicationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigPtrOutput)
}

// BucketReplicationConfigArrayInput is an input type that accepts BucketReplicationConfigArray and BucketReplicationConfigArrayOutput values.
// You can construct a concrete instance of `BucketReplicationConfigArrayInput` via:
//
//          BucketReplicationConfigArray{ BucketReplicationConfigArgs{...} }
type BucketReplicationConfigArrayInput interface {
	pulumi.Input

	ToBucketReplicationConfigArrayOutput() BucketReplicationConfigArrayOutput
	ToBucketReplicationConfigArrayOutputWithContext(context.Context) BucketReplicationConfigArrayOutput
}

type BucketReplicationConfigArray []BucketReplicationConfigInput

func (BucketReplicationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BucketReplicationConfig)(nil)).Elem()
}

func (i BucketReplicationConfigArray) ToBucketReplicationConfigArrayOutput() BucketReplicationConfigArrayOutput {
	return i.ToBucketReplicationConfigArrayOutputWithContext(context.Background())
}

func (i BucketReplicationConfigArray) ToBucketReplicationConfigArrayOutputWithContext(ctx context.Context) BucketReplicationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigArrayOutput)
}

// BucketReplicationConfigMapInput is an input type that accepts BucketReplicationConfigMap and BucketReplicationConfigMapOutput values.
// You can construct a concrete instance of `BucketReplicationConfigMapInput` via:
//
//          BucketReplicationConfigMap{ "key": BucketReplicationConfigArgs{...} }
type BucketReplicationConfigMapInput interface {
	pulumi.Input

	ToBucketReplicationConfigMapOutput() BucketReplicationConfigMapOutput
	ToBucketReplicationConfigMapOutputWithContext(context.Context) BucketReplicationConfigMapOutput
}

type BucketReplicationConfigMap map[string]BucketReplicationConfigInput

func (BucketReplicationConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BucketReplicationConfig)(nil)).Elem()
}

func (i BucketReplicationConfigMap) ToBucketReplicationConfigMapOutput() BucketReplicationConfigMapOutput {
	return i.ToBucketReplicationConfigMapOutputWithContext(context.Background())
}

func (i BucketReplicationConfigMap) ToBucketReplicationConfigMapOutputWithContext(ctx context.Context) BucketReplicationConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigMapOutput)
}

type BucketReplicationConfigOutput struct{ *pulumi.OutputState }

func (BucketReplicationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BucketReplicationConfig)(nil))
}

func (o BucketReplicationConfigOutput) ToBucketReplicationConfigOutput() BucketReplicationConfigOutput {
	return o
}

func (o BucketReplicationConfigOutput) ToBucketReplicationConfigOutputWithContext(ctx context.Context) BucketReplicationConfigOutput {
	return o
}

func (o BucketReplicationConfigOutput) ToBucketReplicationConfigPtrOutput() BucketReplicationConfigPtrOutput {
	return o.ToBucketReplicationConfigPtrOutputWithContext(context.Background())
}

func (o BucketReplicationConfigOutput) ToBucketReplicationConfigPtrOutputWithContext(ctx context.Context) BucketReplicationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BucketReplicationConfig) *BucketReplicationConfig {
		return &v
	}).(BucketReplicationConfigPtrOutput)
}

type BucketReplicationConfigPtrOutput struct{ *pulumi.OutputState }

func (BucketReplicationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketReplicationConfig)(nil))
}

func (o BucketReplicationConfigPtrOutput) ToBucketReplicationConfigPtrOutput() BucketReplicationConfigPtrOutput {
	return o
}

func (o BucketReplicationConfigPtrOutput) ToBucketReplicationConfigPtrOutputWithContext(ctx context.Context) BucketReplicationConfigPtrOutput {
	return o
}

func (o BucketReplicationConfigPtrOutput) Elem() BucketReplicationConfigOutput {
	return o.ApplyT(func(v *BucketReplicationConfig) BucketReplicationConfig {
		if v != nil {
			return *v
		}
		var ret BucketReplicationConfig
		return ret
	}).(BucketReplicationConfigOutput)
}

type BucketReplicationConfigArrayOutput struct{ *pulumi.OutputState }

func (BucketReplicationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BucketReplicationConfig)(nil))
}

func (o BucketReplicationConfigArrayOutput) ToBucketReplicationConfigArrayOutput() BucketReplicationConfigArrayOutput {
	return o
}

func (o BucketReplicationConfigArrayOutput) ToBucketReplicationConfigArrayOutputWithContext(ctx context.Context) BucketReplicationConfigArrayOutput {
	return o
}

func (o BucketReplicationConfigArrayOutput) Index(i pulumi.IntInput) BucketReplicationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BucketReplicationConfig {
		return vs[0].([]BucketReplicationConfig)[vs[1].(int)]
	}).(BucketReplicationConfigOutput)
}

type BucketReplicationConfigMapOutput struct{ *pulumi.OutputState }

func (BucketReplicationConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]BucketReplicationConfig)(nil))
}

func (o BucketReplicationConfigMapOutput) ToBucketReplicationConfigMapOutput() BucketReplicationConfigMapOutput {
	return o
}

func (o BucketReplicationConfigMapOutput) ToBucketReplicationConfigMapOutputWithContext(ctx context.Context) BucketReplicationConfigMapOutput {
	return o
}

func (o BucketReplicationConfigMapOutput) MapIndex(k pulumi.StringInput) BucketReplicationConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) BucketReplicationConfig {
		return vs[0].(map[string]BucketReplicationConfig)[vs[1].(string)]
	}).(BucketReplicationConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BucketReplicationConfigInput)(nil)).Elem(), &BucketReplicationConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketReplicationConfigPtrInput)(nil)).Elem(), &BucketReplicationConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketReplicationConfigArrayInput)(nil)).Elem(), BucketReplicationConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketReplicationConfigMapInput)(nil)).Elem(), BucketReplicationConfigMap{})
	pulumi.RegisterOutputType(BucketReplicationConfigOutput{})
	pulumi.RegisterOutputType(BucketReplicationConfigPtrOutput{})
	pulumi.RegisterOutputType(BucketReplicationConfigArrayOutput{})
	pulumi.RegisterOutputType(BucketReplicationConfigMapOutput{})
}
