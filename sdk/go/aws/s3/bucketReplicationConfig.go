// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an independent configuration resource for S3 bucket [replication configuration](http://docs.aws.amazon.com/AmazonS3/latest/dev/crr.html).
//
// > **NOTE:** S3 Buckets only support a single replication configuration. Declaring multiple `s3.BucketReplicationConfig` resources to the same S3 Bucket will cause a perpetual difference in configuration.
//
// ## Example Usage
// ### Using replication configuration
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws"
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/iam"
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/s3"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := aws.NewProvider(ctx, "central", &aws.ProviderArgs{
//				Region: pulumi.String("eu-central-1"),
//			})
//			if err != nil {
//				return err
//			}
//			replicationRole, err := iam.NewRole(ctx, "replicationRole", &iam.RoleArgs{
//				AssumeRolePolicy: pulumi.Any(fmt.Sprintf(`{
//	  "Version": "2012-10-17",
//	  "Statement": [
//	    {
//	      "Action": "sts:AssumeRole",
//	      "Principal": {
//	        "Service": "s3.amazonaws.com"
//	      },
//	      "Effect": "Allow",
//	      "Sid": ""
//	    }
//	  ]
//	}
//
// `)),
//
//			})
//			if err != nil {
//				return err
//			}
//			destinationBucketV2, err := s3.NewBucketV2(ctx, "destinationBucketV2", nil)
//			if err != nil {
//				return err
//			}
//			sourceBucketV2, err := s3.NewBucketV2(ctx, "sourceBucketV2", nil, pulumi.Provider(aws.Central))
//			if err != nil {
//				return err
//			}
//			replicationPolicy, err := iam.NewPolicy(ctx, "replicationPolicy", &iam.PolicyArgs{
//				Policy: pulumi.All(sourceBucketV2.Arn, sourceBucketV2.Arn, destinationBucketV2.Arn).ApplyT(func(_args []interface{}) (string, error) {
//					sourceBucketV2Arn := _args[0].(string)
//					sourceBucketV2Arn1 := _args[1].(string)
//					destinationBucketV2Arn := _args[2].(string)
//					return fmt.Sprintf(`{
//	  "Version": "2012-10-17",
//	  "Statement": [
//	    {
//	      "Action": [
//	        "s3:GetReplicationConfiguration",
//	        "s3:ListBucket"
//	      ],
//	      "Effect": "Allow",
//	      "Resource": [
//	        "%v"
//	      ]
//	    },
//	    {
//	      "Action": [
//	        "s3:GetObjectVersionForReplication",
//	        "s3:GetObjectVersionAcl",
//	         "s3:GetObjectVersionTagging"
//	      ],
//	      "Effect": "Allow",
//	      "Resource": [
//	        "%v/*"
//	      ]
//	    },
//	    {
//	      "Action": [
//	        "s3:ReplicateObject",
//	        "s3:ReplicateDelete",
//	        "s3:ReplicateTags"
//	      ],
//	      "Effect": "Allow",
//	      "Resource": "%v/*"
//	    }
//	  ]
//	}
//
// `, sourceBucketV2Arn, sourceBucketV2Arn1, destinationBucketV2Arn), nil
//
//				}).(pulumi.StringOutput),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = iam.NewRolePolicyAttachment(ctx, "replicationRolePolicyAttachment", &iam.RolePolicyAttachmentArgs{
//				Role:      replicationRole.Name,
//				PolicyArn: replicationPolicy.Arn,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = s3.NewBucketVersioningV2(ctx, "destinationBucketVersioningV2", &s3.BucketVersioningV2Args{
//				Bucket: destinationBucketV2.ID(),
//				VersioningConfiguration: &s3.BucketVersioningV2VersioningConfigurationArgs{
//					Status: pulumi.String("Enabled"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = s3.NewBucketAclV2(ctx, "sourceBucketAcl", &s3.BucketAclV2Args{
//				Bucket: sourceBucketV2.ID(),
//				Acl:    pulumi.String("private"),
//			}, pulumi.Provider(aws.Central))
//			if err != nil {
//				return err
//			}
//			sourceBucketVersioningV2, err := s3.NewBucketVersioningV2(ctx, "sourceBucketVersioningV2", &s3.BucketVersioningV2Args{
//				Bucket: sourceBucketV2.ID(),
//				VersioningConfiguration: &s3.BucketVersioningV2VersioningConfigurationArgs{
//					Status: pulumi.String("Enabled"),
//				},
//			}, pulumi.Provider(aws.Central))
//			if err != nil {
//				return err
//			}
//			_, err = s3.NewBucketReplicationConfig(ctx, "replicationBucketReplicationConfig", &s3.BucketReplicationConfigArgs{
//				Role:   replicationRole.Arn,
//				Bucket: sourceBucketV2.ID(),
//				Rules: s3.BucketReplicationConfigRuleArray{
//					&s3.BucketReplicationConfigRuleArgs{
//						Id: pulumi.String("foobar"),
//						Filter: &s3.BucketReplicationConfigRuleFilterArgs{
//							Prefix: pulumi.String("foo"),
//						},
//						Status: pulumi.String("Enabled"),
//						Destination: &s3.BucketReplicationConfigRuleDestinationArgs{
//							Bucket:       destinationBucketV2.Arn,
//							StorageClass: pulumi.String("STANDARD"),
//						},
//					},
//				},
//			}, pulumi.Provider(aws.Central), pulumi.DependsOn([]pulumi.Resource{
//				sourceBucketVersioningV2,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Bi-Directional Replication
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/s3"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			eastBucketV2, err := s3.NewBucketV2(ctx, "eastBucketV2", nil)
//			if err != nil {
//				return err
//			}
//			eastBucketVersioningV2, err := s3.NewBucketVersioningV2(ctx, "eastBucketVersioningV2", &s3.BucketVersioningV2Args{
//				Bucket: eastBucketV2.ID(),
//				VersioningConfiguration: &s3.BucketVersioningV2VersioningConfigurationArgs{
//					Status: pulumi.String("Enabled"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			westBucketV2, err := s3.NewBucketV2(ctx, "westBucketV2", nil, pulumi.Provider(aws.West))
//			if err != nil {
//				return err
//			}
//			westBucketVersioningV2, err := s3.NewBucketVersioningV2(ctx, "westBucketVersioningV2", &s3.BucketVersioningV2Args{
//				Bucket: westBucketV2.ID(),
//				VersioningConfiguration: &s3.BucketVersioningV2VersioningConfigurationArgs{
//					Status: pulumi.String("Enabled"),
//				},
//			}, pulumi.Provider(aws.West))
//			if err != nil {
//				return err
//			}
//			_, err = s3.NewBucketReplicationConfig(ctx, "eastToWest", &s3.BucketReplicationConfigArgs{
//				Role:   pulumi.Any(aws_iam_role.East_replication.Arn),
//				Bucket: eastBucketV2.ID(),
//				Rules: s3.BucketReplicationConfigRuleArray{
//					&s3.BucketReplicationConfigRuleArgs{
//						Id: pulumi.String("foobar"),
//						Filter: &s3.BucketReplicationConfigRuleFilterArgs{
//							Prefix: pulumi.String("foo"),
//						},
//						Status: pulumi.String("Enabled"),
//						Destination: &s3.BucketReplicationConfigRuleDestinationArgs{
//							Bucket:       westBucketV2.Arn,
//							StorageClass: pulumi.String("STANDARD"),
//						},
//					},
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				eastBucketVersioningV2,
//			}))
//			if err != nil {
//				return err
//			}
//			_, err = s3.NewBucketReplicationConfig(ctx, "westToEast", &s3.BucketReplicationConfigArgs{
//				Role:   pulumi.Any(aws_iam_role.West_replication.Arn),
//				Bucket: westBucketV2.ID(),
//				Rules: s3.BucketReplicationConfigRuleArray{
//					&s3.BucketReplicationConfigRuleArgs{
//						Id: pulumi.String("foobar"),
//						Filter: &s3.BucketReplicationConfigRuleFilterArgs{
//							Prefix: pulumi.String("foo"),
//						},
//						Status: pulumi.String("Enabled"),
//						Destination: &s3.BucketReplicationConfigRuleDestinationArgs{
//							Bucket:       eastBucketV2.Arn,
//							StorageClass: pulumi.String("STANDARD"),
//						},
//					},
//				},
//			}, pulumi.Provider(aws.West), pulumi.DependsOn([]pulumi.Resource{
//				westBucketVersioningV2,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// S3 bucket replication configuration can be imported using the `bucket`, e.g.
//
// ```sh
//
//	$ pulumi import aws:s3/bucketReplicationConfig:BucketReplicationConfig replication bucket-name
//
// ```
type BucketReplicationConfig struct {
	pulumi.CustomResourceState

	// The name of the source S3 bucket you want Amazon S3 to monitor.
	Bucket pulumi.StringOutput `pulumi:"bucket"`
	// The ARN of the IAM role for Amazon S3 to assume when replicating the objects.
	Role pulumi.StringOutput `pulumi:"role"`
	// List of configuration blocks describing the rules managing the replication documented below.
	Rules BucketReplicationConfigRuleArrayOutput `pulumi:"rules"`
	// A token to allow replication to be enabled on an Object Lock-enabled bucket. You must contact AWS support for the bucket's "Object Lock token".
	// For more details, see [Using S3 Object Lock with replication](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-managing-replication).
	Token pulumi.StringPtrOutput `pulumi:"token"`
}

// NewBucketReplicationConfig registers a new resource with the given unique name, arguments, and options.
func NewBucketReplicationConfig(ctx *pulumi.Context,
	name string, args *BucketReplicationConfigArgs, opts ...pulumi.ResourceOption) (*BucketReplicationConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	if args.Rules == nil {
		return nil, errors.New("invalid value for required argument 'Rules'")
	}
	if args.Token != nil {
		args.Token = pulumi.ToSecret(args.Token).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"token",
	})
	opts = append(opts, secrets)
	var resource BucketReplicationConfig
	err := ctx.RegisterResource("aws:s3/bucketReplicationConfig:BucketReplicationConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucketReplicationConfig gets an existing BucketReplicationConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucketReplicationConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketReplicationConfigState, opts ...pulumi.ResourceOption) (*BucketReplicationConfig, error) {
	var resource BucketReplicationConfig
	err := ctx.ReadResource("aws:s3/bucketReplicationConfig:BucketReplicationConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BucketReplicationConfig resources.
type bucketReplicationConfigState struct {
	// The name of the source S3 bucket you want Amazon S3 to monitor.
	Bucket *string `pulumi:"bucket"`
	// The ARN of the IAM role for Amazon S3 to assume when replicating the objects.
	Role *string `pulumi:"role"`
	// List of configuration blocks describing the rules managing the replication documented below.
	Rules []BucketReplicationConfigRule `pulumi:"rules"`
	// A token to allow replication to be enabled on an Object Lock-enabled bucket. You must contact AWS support for the bucket's "Object Lock token".
	// For more details, see [Using S3 Object Lock with replication](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-managing-replication).
	Token *string `pulumi:"token"`
}

type BucketReplicationConfigState struct {
	// The name of the source S3 bucket you want Amazon S3 to monitor.
	Bucket pulumi.StringPtrInput
	// The ARN of the IAM role for Amazon S3 to assume when replicating the objects.
	Role pulumi.StringPtrInput
	// List of configuration blocks describing the rules managing the replication documented below.
	Rules BucketReplicationConfigRuleArrayInput
	// A token to allow replication to be enabled on an Object Lock-enabled bucket. You must contact AWS support for the bucket's "Object Lock token".
	// For more details, see [Using S3 Object Lock with replication](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-managing-replication).
	Token pulumi.StringPtrInput
}

func (BucketReplicationConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketReplicationConfigState)(nil)).Elem()
}

type bucketReplicationConfigArgs struct {
	// The name of the source S3 bucket you want Amazon S3 to monitor.
	Bucket string `pulumi:"bucket"`
	// The ARN of the IAM role for Amazon S3 to assume when replicating the objects.
	Role string `pulumi:"role"`
	// List of configuration blocks describing the rules managing the replication documented below.
	Rules []BucketReplicationConfigRule `pulumi:"rules"`
	// A token to allow replication to be enabled on an Object Lock-enabled bucket. You must contact AWS support for the bucket's "Object Lock token".
	// For more details, see [Using S3 Object Lock with replication](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-managing-replication).
	Token *string `pulumi:"token"`
}

// The set of arguments for constructing a BucketReplicationConfig resource.
type BucketReplicationConfigArgs struct {
	// The name of the source S3 bucket you want Amazon S3 to monitor.
	Bucket pulumi.StringInput
	// The ARN of the IAM role for Amazon S3 to assume when replicating the objects.
	Role pulumi.StringInput
	// List of configuration blocks describing the rules managing the replication documented below.
	Rules BucketReplicationConfigRuleArrayInput
	// A token to allow replication to be enabled on an Object Lock-enabled bucket. You must contact AWS support for the bucket's "Object Lock token".
	// For more details, see [Using S3 Object Lock with replication](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-managing-replication).
	Token pulumi.StringPtrInput
}

func (BucketReplicationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketReplicationConfigArgs)(nil)).Elem()
}

type BucketReplicationConfigInput interface {
	pulumi.Input

	ToBucketReplicationConfigOutput() BucketReplicationConfigOutput
	ToBucketReplicationConfigOutputWithContext(ctx context.Context) BucketReplicationConfigOutput
}

func (*BucketReplicationConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketReplicationConfig)(nil)).Elem()
}

func (i *BucketReplicationConfig) ToBucketReplicationConfigOutput() BucketReplicationConfigOutput {
	return i.ToBucketReplicationConfigOutputWithContext(context.Background())
}

func (i *BucketReplicationConfig) ToBucketReplicationConfigOutputWithContext(ctx context.Context) BucketReplicationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigOutput)
}

// BucketReplicationConfigArrayInput is an input type that accepts BucketReplicationConfigArray and BucketReplicationConfigArrayOutput values.
// You can construct a concrete instance of `BucketReplicationConfigArrayInput` via:
//
//	BucketReplicationConfigArray{ BucketReplicationConfigArgs{...} }
type BucketReplicationConfigArrayInput interface {
	pulumi.Input

	ToBucketReplicationConfigArrayOutput() BucketReplicationConfigArrayOutput
	ToBucketReplicationConfigArrayOutputWithContext(context.Context) BucketReplicationConfigArrayOutput
}

type BucketReplicationConfigArray []BucketReplicationConfigInput

func (BucketReplicationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BucketReplicationConfig)(nil)).Elem()
}

func (i BucketReplicationConfigArray) ToBucketReplicationConfigArrayOutput() BucketReplicationConfigArrayOutput {
	return i.ToBucketReplicationConfigArrayOutputWithContext(context.Background())
}

func (i BucketReplicationConfigArray) ToBucketReplicationConfigArrayOutputWithContext(ctx context.Context) BucketReplicationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigArrayOutput)
}

// BucketReplicationConfigMapInput is an input type that accepts BucketReplicationConfigMap and BucketReplicationConfigMapOutput values.
// You can construct a concrete instance of `BucketReplicationConfigMapInput` via:
//
//	BucketReplicationConfigMap{ "key": BucketReplicationConfigArgs{...} }
type BucketReplicationConfigMapInput interface {
	pulumi.Input

	ToBucketReplicationConfigMapOutput() BucketReplicationConfigMapOutput
	ToBucketReplicationConfigMapOutputWithContext(context.Context) BucketReplicationConfigMapOutput
}

type BucketReplicationConfigMap map[string]BucketReplicationConfigInput

func (BucketReplicationConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BucketReplicationConfig)(nil)).Elem()
}

func (i BucketReplicationConfigMap) ToBucketReplicationConfigMapOutput() BucketReplicationConfigMapOutput {
	return i.ToBucketReplicationConfigMapOutputWithContext(context.Background())
}

func (i BucketReplicationConfigMap) ToBucketReplicationConfigMapOutputWithContext(ctx context.Context) BucketReplicationConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketReplicationConfigMapOutput)
}

type BucketReplicationConfigOutput struct{ *pulumi.OutputState }

func (BucketReplicationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketReplicationConfig)(nil)).Elem()
}

func (o BucketReplicationConfigOutput) ToBucketReplicationConfigOutput() BucketReplicationConfigOutput {
	return o
}

func (o BucketReplicationConfigOutput) ToBucketReplicationConfigOutputWithContext(ctx context.Context) BucketReplicationConfigOutput {
	return o
}

// The name of the source S3 bucket you want Amazon S3 to monitor.
func (o BucketReplicationConfigOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v *BucketReplicationConfig) pulumi.StringOutput { return v.Bucket }).(pulumi.StringOutput)
}

// The ARN of the IAM role for Amazon S3 to assume when replicating the objects.
func (o BucketReplicationConfigOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *BucketReplicationConfig) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

// List of configuration blocks describing the rules managing the replication documented below.
func (o BucketReplicationConfigOutput) Rules() BucketReplicationConfigRuleArrayOutput {
	return o.ApplyT(func(v *BucketReplicationConfig) BucketReplicationConfigRuleArrayOutput { return v.Rules }).(BucketReplicationConfigRuleArrayOutput)
}

// A token to allow replication to be enabled on an Object Lock-enabled bucket. You must contact AWS support for the bucket's "Object Lock token".
// For more details, see [Using S3 Object Lock with replication](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-managing.html#object-lock-managing-replication).
func (o BucketReplicationConfigOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketReplicationConfig) pulumi.StringPtrOutput { return v.Token }).(pulumi.StringPtrOutput)
}

type BucketReplicationConfigArrayOutput struct{ *pulumi.OutputState }

func (BucketReplicationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BucketReplicationConfig)(nil)).Elem()
}

func (o BucketReplicationConfigArrayOutput) ToBucketReplicationConfigArrayOutput() BucketReplicationConfigArrayOutput {
	return o
}

func (o BucketReplicationConfigArrayOutput) ToBucketReplicationConfigArrayOutputWithContext(ctx context.Context) BucketReplicationConfigArrayOutput {
	return o
}

func (o BucketReplicationConfigArrayOutput) Index(i pulumi.IntInput) BucketReplicationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BucketReplicationConfig {
		return vs[0].([]*BucketReplicationConfig)[vs[1].(int)]
	}).(BucketReplicationConfigOutput)
}

type BucketReplicationConfigMapOutput struct{ *pulumi.OutputState }

func (BucketReplicationConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BucketReplicationConfig)(nil)).Elem()
}

func (o BucketReplicationConfigMapOutput) ToBucketReplicationConfigMapOutput() BucketReplicationConfigMapOutput {
	return o
}

func (o BucketReplicationConfigMapOutput) ToBucketReplicationConfigMapOutputWithContext(ctx context.Context) BucketReplicationConfigMapOutput {
	return o
}

func (o BucketReplicationConfigMapOutput) MapIndex(k pulumi.StringInput) BucketReplicationConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BucketReplicationConfig {
		return vs[0].(map[string]*BucketReplicationConfig)[vs[1].(string)]
	}).(BucketReplicationConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BucketReplicationConfigInput)(nil)).Elem(), &BucketReplicationConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketReplicationConfigArrayInput)(nil)).Elem(), BucketReplicationConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketReplicationConfigMapInput)(nil)).Elem(), BucketReplicationConfigMap{})
	pulumi.RegisterOutputType(BucketReplicationConfigOutput{})
	pulumi.RegisterOutputType(BucketReplicationConfigArrayOutput{})
	pulumi.RegisterOutputType(BucketReplicationConfigMapOutput{})
}
