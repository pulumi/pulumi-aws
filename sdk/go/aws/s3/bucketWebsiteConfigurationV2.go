// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an S3 bucket website configuration resource. For more information, see [Hosting Websites on S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html).
//
// > This resource cannot be used with S3 directory buckets.
//
// ## Example Usage
// ### With `routingRule` configured
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/s3"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := s3.NewBucketWebsiteConfigurationV2(ctx, "example", &s3.BucketWebsiteConfigurationV2Args{
//				Bucket: pulumi.Any(aws_s3_bucket.Example.Id),
//				IndexDocument: &s3.BucketWebsiteConfigurationV2IndexDocumentArgs{
//					Suffix: pulumi.String("index.html"),
//				},
//				ErrorDocument: &s3.BucketWebsiteConfigurationV2ErrorDocumentArgs{
//					Key: pulumi.String("error.html"),
//				},
//				RoutingRules: s3.BucketWebsiteConfigurationV2RoutingRuleArray{
//					&s3.BucketWebsiteConfigurationV2RoutingRuleArgs{
//						Condition: &s3.BucketWebsiteConfigurationV2RoutingRuleConditionArgs{
//							KeyPrefixEquals: pulumi.String("docs/"),
//						},
//						Redirect: &s3.BucketWebsiteConfigurationV2RoutingRuleRedirectArgs{
//							ReplaceKeyPrefixWith: pulumi.String("documents/"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### With `routingRules` configured
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/s3"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := s3.NewBucketWebsiteConfigurationV2(ctx, "example", &s3.BucketWebsiteConfigurationV2Args{
//				Bucket: pulumi.Any(aws_s3_bucket.Example.Id),
//				IndexDocument: &s3.BucketWebsiteConfigurationV2IndexDocumentArgs{
//					Suffix: pulumi.String("index.html"),
//				},
//				ErrorDocument: &s3.BucketWebsiteConfigurationV2ErrorDocumentArgs{
//					Key: pulumi.String("error.html"),
//				},
//				RoutingRuleDetails: pulumi.String(`[{
//	    "Condition": {
//	        "KeyPrefixEquals": "docs/"
//	    },
//	    "Redirect": {
//	        "ReplaceKeyPrefixWith": ""
//	    }
//	}]
//
// `),
//
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// If the owner (account ID) of the source bucket differs from the account used to configure the AWS Provider, import using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):
//
// __Using `pulumi import` to import__ S3 bucket website configuration using the `bucket` or using the `bucket` and `expected_bucket_owner` separated by a comma (`,`). For example:
//
// If the owner (account ID) of the source bucket is the same account used to configure the AWS Provider, import using the `bucket`:
//
// ```sh
//
//	$ pulumi import aws:s3/bucketWebsiteConfigurationV2:BucketWebsiteConfigurationV2 example bucket-name
//
// ```
//
//	If the owner (account ID) of the source bucket differs from the account used to configure the AWS Provider, import using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):
//
// ```sh
//
//	$ pulumi import aws:s3/bucketWebsiteConfigurationV2:BucketWebsiteConfigurationV2 example bucket-name,123456789012
//
// ```
type BucketWebsiteConfigurationV2 struct {
	pulumi.CustomResourceState

	// Name of the bucket.
	Bucket pulumi.StringOutput `pulumi:"bucket"`
	// Name of the error document for the website. See below.
	ErrorDocument BucketWebsiteConfigurationV2ErrorDocumentPtrOutput `pulumi:"errorDocument"`
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner pulumi.StringPtrOutput `pulumi:"expectedBucketOwner"`
	// Name of the index document for the website. See below.
	IndexDocument BucketWebsiteConfigurationV2IndexDocumentPtrOutput `pulumi:"indexDocument"`
	// Redirect behavior for every request to this bucket's website endpoint. See below. Conflicts with `errorDocument`, `indexDocument`, and `routingRule`.
	RedirectAllRequestsTo BucketWebsiteConfigurationV2RedirectAllRequestsToPtrOutput `pulumi:"redirectAllRequestsTo"`
	// JSON array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
	// describing redirect behavior and when redirects are applied. Use this parameter when your routing rules contain empty String values (`""`) as seen in the example above.
	RoutingRuleDetails pulumi.StringOutput `pulumi:"routingRuleDetails"`
	// List of rules that define when a redirect is applied and the redirect behavior. See below.
	RoutingRules BucketWebsiteConfigurationV2RoutingRuleArrayOutput `pulumi:"routingRules"`
	// Domain of the website endpoint. This is used to create Route 53 alias records.
	WebsiteDomain pulumi.StringOutput `pulumi:"websiteDomain"`
	// Website endpoint.
	WebsiteEndpoint pulumi.StringOutput `pulumi:"websiteEndpoint"`
}

// NewBucketWebsiteConfigurationV2 registers a new resource with the given unique name, arguments, and options.
func NewBucketWebsiteConfigurationV2(ctx *pulumi.Context,
	name string, args *BucketWebsiteConfigurationV2Args, opts ...pulumi.ResourceOption) (*BucketWebsiteConfigurationV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BucketWebsiteConfigurationV2
	err := ctx.RegisterResource("aws:s3/bucketWebsiteConfigurationV2:BucketWebsiteConfigurationV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucketWebsiteConfigurationV2 gets an existing BucketWebsiteConfigurationV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucketWebsiteConfigurationV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketWebsiteConfigurationV2State, opts ...pulumi.ResourceOption) (*BucketWebsiteConfigurationV2, error) {
	var resource BucketWebsiteConfigurationV2
	err := ctx.ReadResource("aws:s3/bucketWebsiteConfigurationV2:BucketWebsiteConfigurationV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BucketWebsiteConfigurationV2 resources.
type bucketWebsiteConfigurationV2State struct {
	// Name of the bucket.
	Bucket *string `pulumi:"bucket"`
	// Name of the error document for the website. See below.
	ErrorDocument *BucketWebsiteConfigurationV2ErrorDocument `pulumi:"errorDocument"`
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner *string `pulumi:"expectedBucketOwner"`
	// Name of the index document for the website. See below.
	IndexDocument *BucketWebsiteConfigurationV2IndexDocument `pulumi:"indexDocument"`
	// Redirect behavior for every request to this bucket's website endpoint. See below. Conflicts with `errorDocument`, `indexDocument`, and `routingRule`.
	RedirectAllRequestsTo *BucketWebsiteConfigurationV2RedirectAllRequestsTo `pulumi:"redirectAllRequestsTo"`
	// JSON array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
	// describing redirect behavior and when redirects are applied. Use this parameter when your routing rules contain empty String values (`""`) as seen in the example above.
	RoutingRuleDetails *string `pulumi:"routingRuleDetails"`
	// List of rules that define when a redirect is applied and the redirect behavior. See below.
	RoutingRules []BucketWebsiteConfigurationV2RoutingRule `pulumi:"routingRules"`
	// Domain of the website endpoint. This is used to create Route 53 alias records.
	WebsiteDomain *string `pulumi:"websiteDomain"`
	// Website endpoint.
	WebsiteEndpoint *string `pulumi:"websiteEndpoint"`
}

type BucketWebsiteConfigurationV2State struct {
	// Name of the bucket.
	Bucket pulumi.StringPtrInput
	// Name of the error document for the website. See below.
	ErrorDocument BucketWebsiteConfigurationV2ErrorDocumentPtrInput
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner pulumi.StringPtrInput
	// Name of the index document for the website. See below.
	IndexDocument BucketWebsiteConfigurationV2IndexDocumentPtrInput
	// Redirect behavior for every request to this bucket's website endpoint. See below. Conflicts with `errorDocument`, `indexDocument`, and `routingRule`.
	RedirectAllRequestsTo BucketWebsiteConfigurationV2RedirectAllRequestsToPtrInput
	// JSON array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
	// describing redirect behavior and when redirects are applied. Use this parameter when your routing rules contain empty String values (`""`) as seen in the example above.
	RoutingRuleDetails pulumi.StringPtrInput
	// List of rules that define when a redirect is applied and the redirect behavior. See below.
	RoutingRules BucketWebsiteConfigurationV2RoutingRuleArrayInput
	// Domain of the website endpoint. This is used to create Route 53 alias records.
	WebsiteDomain pulumi.StringPtrInput
	// Website endpoint.
	WebsiteEndpoint pulumi.StringPtrInput
}

func (BucketWebsiteConfigurationV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketWebsiteConfigurationV2State)(nil)).Elem()
}

type bucketWebsiteConfigurationV2Args struct {
	// Name of the bucket.
	Bucket string `pulumi:"bucket"`
	// Name of the error document for the website. See below.
	ErrorDocument *BucketWebsiteConfigurationV2ErrorDocument `pulumi:"errorDocument"`
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner *string `pulumi:"expectedBucketOwner"`
	// Name of the index document for the website. See below.
	IndexDocument *BucketWebsiteConfigurationV2IndexDocument `pulumi:"indexDocument"`
	// Redirect behavior for every request to this bucket's website endpoint. See below. Conflicts with `errorDocument`, `indexDocument`, and `routingRule`.
	RedirectAllRequestsTo *BucketWebsiteConfigurationV2RedirectAllRequestsTo `pulumi:"redirectAllRequestsTo"`
	// JSON array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
	// describing redirect behavior and when redirects are applied. Use this parameter when your routing rules contain empty String values (`""`) as seen in the example above.
	RoutingRuleDetails *string `pulumi:"routingRuleDetails"`
	// List of rules that define when a redirect is applied and the redirect behavior. See below.
	RoutingRules []BucketWebsiteConfigurationV2RoutingRule `pulumi:"routingRules"`
}

// The set of arguments for constructing a BucketWebsiteConfigurationV2 resource.
type BucketWebsiteConfigurationV2Args struct {
	// Name of the bucket.
	Bucket pulumi.StringInput
	// Name of the error document for the website. See below.
	ErrorDocument BucketWebsiteConfigurationV2ErrorDocumentPtrInput
	// Account ID of the expected bucket owner.
	ExpectedBucketOwner pulumi.StringPtrInput
	// Name of the index document for the website. See below.
	IndexDocument BucketWebsiteConfigurationV2IndexDocumentPtrInput
	// Redirect behavior for every request to this bucket's website endpoint. See below. Conflicts with `errorDocument`, `indexDocument`, and `routingRule`.
	RedirectAllRequestsTo BucketWebsiteConfigurationV2RedirectAllRequestsToPtrInput
	// JSON array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
	// describing redirect behavior and when redirects are applied. Use this parameter when your routing rules contain empty String values (`""`) as seen in the example above.
	RoutingRuleDetails pulumi.StringPtrInput
	// List of rules that define when a redirect is applied and the redirect behavior. See below.
	RoutingRules BucketWebsiteConfigurationV2RoutingRuleArrayInput
}

func (BucketWebsiteConfigurationV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketWebsiteConfigurationV2Args)(nil)).Elem()
}

type BucketWebsiteConfigurationV2Input interface {
	pulumi.Input

	ToBucketWebsiteConfigurationV2Output() BucketWebsiteConfigurationV2Output
	ToBucketWebsiteConfigurationV2OutputWithContext(ctx context.Context) BucketWebsiteConfigurationV2Output
}

func (*BucketWebsiteConfigurationV2) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketWebsiteConfigurationV2)(nil)).Elem()
}

func (i *BucketWebsiteConfigurationV2) ToBucketWebsiteConfigurationV2Output() BucketWebsiteConfigurationV2Output {
	return i.ToBucketWebsiteConfigurationV2OutputWithContext(context.Background())
}

func (i *BucketWebsiteConfigurationV2) ToBucketWebsiteConfigurationV2OutputWithContext(ctx context.Context) BucketWebsiteConfigurationV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsiteConfigurationV2Output)
}

// BucketWebsiteConfigurationV2ArrayInput is an input type that accepts BucketWebsiteConfigurationV2Array and BucketWebsiteConfigurationV2ArrayOutput values.
// You can construct a concrete instance of `BucketWebsiteConfigurationV2ArrayInput` via:
//
//	BucketWebsiteConfigurationV2Array{ BucketWebsiteConfigurationV2Args{...} }
type BucketWebsiteConfigurationV2ArrayInput interface {
	pulumi.Input

	ToBucketWebsiteConfigurationV2ArrayOutput() BucketWebsiteConfigurationV2ArrayOutput
	ToBucketWebsiteConfigurationV2ArrayOutputWithContext(context.Context) BucketWebsiteConfigurationV2ArrayOutput
}

type BucketWebsiteConfigurationV2Array []BucketWebsiteConfigurationV2Input

func (BucketWebsiteConfigurationV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BucketWebsiteConfigurationV2)(nil)).Elem()
}

func (i BucketWebsiteConfigurationV2Array) ToBucketWebsiteConfigurationV2ArrayOutput() BucketWebsiteConfigurationV2ArrayOutput {
	return i.ToBucketWebsiteConfigurationV2ArrayOutputWithContext(context.Background())
}

func (i BucketWebsiteConfigurationV2Array) ToBucketWebsiteConfigurationV2ArrayOutputWithContext(ctx context.Context) BucketWebsiteConfigurationV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsiteConfigurationV2ArrayOutput)
}

// BucketWebsiteConfigurationV2MapInput is an input type that accepts BucketWebsiteConfigurationV2Map and BucketWebsiteConfigurationV2MapOutput values.
// You can construct a concrete instance of `BucketWebsiteConfigurationV2MapInput` via:
//
//	BucketWebsiteConfigurationV2Map{ "key": BucketWebsiteConfigurationV2Args{...} }
type BucketWebsiteConfigurationV2MapInput interface {
	pulumi.Input

	ToBucketWebsiteConfigurationV2MapOutput() BucketWebsiteConfigurationV2MapOutput
	ToBucketWebsiteConfigurationV2MapOutputWithContext(context.Context) BucketWebsiteConfigurationV2MapOutput
}

type BucketWebsiteConfigurationV2Map map[string]BucketWebsiteConfigurationV2Input

func (BucketWebsiteConfigurationV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BucketWebsiteConfigurationV2)(nil)).Elem()
}

func (i BucketWebsiteConfigurationV2Map) ToBucketWebsiteConfigurationV2MapOutput() BucketWebsiteConfigurationV2MapOutput {
	return i.ToBucketWebsiteConfigurationV2MapOutputWithContext(context.Background())
}

func (i BucketWebsiteConfigurationV2Map) ToBucketWebsiteConfigurationV2MapOutputWithContext(ctx context.Context) BucketWebsiteConfigurationV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketWebsiteConfigurationV2MapOutput)
}

type BucketWebsiteConfigurationV2Output struct{ *pulumi.OutputState }

func (BucketWebsiteConfigurationV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketWebsiteConfigurationV2)(nil)).Elem()
}

func (o BucketWebsiteConfigurationV2Output) ToBucketWebsiteConfigurationV2Output() BucketWebsiteConfigurationV2Output {
	return o
}

func (o BucketWebsiteConfigurationV2Output) ToBucketWebsiteConfigurationV2OutputWithContext(ctx context.Context) BucketWebsiteConfigurationV2Output {
	return o
}

// Name of the bucket.
func (o BucketWebsiteConfigurationV2Output) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v *BucketWebsiteConfigurationV2) pulumi.StringOutput { return v.Bucket }).(pulumi.StringOutput)
}

// Name of the error document for the website. See below.
func (o BucketWebsiteConfigurationV2Output) ErrorDocument() BucketWebsiteConfigurationV2ErrorDocumentPtrOutput {
	return o.ApplyT(func(v *BucketWebsiteConfigurationV2) BucketWebsiteConfigurationV2ErrorDocumentPtrOutput {
		return v.ErrorDocument
	}).(BucketWebsiteConfigurationV2ErrorDocumentPtrOutput)
}

// Account ID of the expected bucket owner.
func (o BucketWebsiteConfigurationV2Output) ExpectedBucketOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketWebsiteConfigurationV2) pulumi.StringPtrOutput { return v.ExpectedBucketOwner }).(pulumi.StringPtrOutput)
}

// Name of the index document for the website. See below.
func (o BucketWebsiteConfigurationV2Output) IndexDocument() BucketWebsiteConfigurationV2IndexDocumentPtrOutput {
	return o.ApplyT(func(v *BucketWebsiteConfigurationV2) BucketWebsiteConfigurationV2IndexDocumentPtrOutput {
		return v.IndexDocument
	}).(BucketWebsiteConfigurationV2IndexDocumentPtrOutput)
}

// Redirect behavior for every request to this bucket's website endpoint. See below. Conflicts with `errorDocument`, `indexDocument`, and `routingRule`.
func (o BucketWebsiteConfigurationV2Output) RedirectAllRequestsTo() BucketWebsiteConfigurationV2RedirectAllRequestsToPtrOutput {
	return o.ApplyT(func(v *BucketWebsiteConfigurationV2) BucketWebsiteConfigurationV2RedirectAllRequestsToPtrOutput {
		return v.RedirectAllRequestsTo
	}).(BucketWebsiteConfigurationV2RedirectAllRequestsToPtrOutput)
}

// JSON array containing [routing rules](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-websiteconfiguration-routingrules.html)
// describing redirect behavior and when redirects are applied. Use this parameter when your routing rules contain empty String values (`""`) as seen in the example above.
func (o BucketWebsiteConfigurationV2Output) RoutingRuleDetails() pulumi.StringOutput {
	return o.ApplyT(func(v *BucketWebsiteConfigurationV2) pulumi.StringOutput { return v.RoutingRuleDetails }).(pulumi.StringOutput)
}

// List of rules that define when a redirect is applied and the redirect behavior. See below.
func (o BucketWebsiteConfigurationV2Output) RoutingRules() BucketWebsiteConfigurationV2RoutingRuleArrayOutput {
	return o.ApplyT(func(v *BucketWebsiteConfigurationV2) BucketWebsiteConfigurationV2RoutingRuleArrayOutput {
		return v.RoutingRules
	}).(BucketWebsiteConfigurationV2RoutingRuleArrayOutput)
}

// Domain of the website endpoint. This is used to create Route 53 alias records.
func (o BucketWebsiteConfigurationV2Output) WebsiteDomain() pulumi.StringOutput {
	return o.ApplyT(func(v *BucketWebsiteConfigurationV2) pulumi.StringOutput { return v.WebsiteDomain }).(pulumi.StringOutput)
}

// Website endpoint.
func (o BucketWebsiteConfigurationV2Output) WebsiteEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *BucketWebsiteConfigurationV2) pulumi.StringOutput { return v.WebsiteEndpoint }).(pulumi.StringOutput)
}

type BucketWebsiteConfigurationV2ArrayOutput struct{ *pulumi.OutputState }

func (BucketWebsiteConfigurationV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BucketWebsiteConfigurationV2)(nil)).Elem()
}

func (o BucketWebsiteConfigurationV2ArrayOutput) ToBucketWebsiteConfigurationV2ArrayOutput() BucketWebsiteConfigurationV2ArrayOutput {
	return o
}

func (o BucketWebsiteConfigurationV2ArrayOutput) ToBucketWebsiteConfigurationV2ArrayOutputWithContext(ctx context.Context) BucketWebsiteConfigurationV2ArrayOutput {
	return o
}

func (o BucketWebsiteConfigurationV2ArrayOutput) Index(i pulumi.IntInput) BucketWebsiteConfigurationV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BucketWebsiteConfigurationV2 {
		return vs[0].([]*BucketWebsiteConfigurationV2)[vs[1].(int)]
	}).(BucketWebsiteConfigurationV2Output)
}

type BucketWebsiteConfigurationV2MapOutput struct{ *pulumi.OutputState }

func (BucketWebsiteConfigurationV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BucketWebsiteConfigurationV2)(nil)).Elem()
}

func (o BucketWebsiteConfigurationV2MapOutput) ToBucketWebsiteConfigurationV2MapOutput() BucketWebsiteConfigurationV2MapOutput {
	return o
}

func (o BucketWebsiteConfigurationV2MapOutput) ToBucketWebsiteConfigurationV2MapOutputWithContext(ctx context.Context) BucketWebsiteConfigurationV2MapOutput {
	return o
}

func (o BucketWebsiteConfigurationV2MapOutput) MapIndex(k pulumi.StringInput) BucketWebsiteConfigurationV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BucketWebsiteConfigurationV2 {
		return vs[0].(map[string]*BucketWebsiteConfigurationV2)[vs[1].(string)]
	}).(BucketWebsiteConfigurationV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BucketWebsiteConfigurationV2Input)(nil)).Elem(), &BucketWebsiteConfigurationV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketWebsiteConfigurationV2ArrayInput)(nil)).Elem(), BucketWebsiteConfigurationV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketWebsiteConfigurationV2MapInput)(nil)).Elem(), BucketWebsiteConfigurationV2Map{})
	pulumi.RegisterOutputType(BucketWebsiteConfigurationV2Output{})
	pulumi.RegisterOutputType(BucketWebsiteConfigurationV2ArrayOutput{})
	pulumi.RegisterOutputType(BucketWebsiteConfigurationV2MapOutput{})
}
