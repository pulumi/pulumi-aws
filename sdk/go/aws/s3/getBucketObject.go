// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// The S3 object data source allows access to the metadata and
// _optionally_ (see below) content of an object stored inside S3 bucket.
// 
// ~> **Note:** The content of an object (`body` field) is available only for objects which have a human-readable `Content-Type` (`text/*` and `application/json`). This is to prevent printing unsafe characters and potentially downloading large amount of data which would be thrown away in favour of metadata.
func LookupucketObject(ctx *pulumi.Context, args *GetBucketObjectArgs) (*GetBucketObjectResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["bucket"] = args.Bucket
		inputs["key"] = args.Key
		inputs["range"] = args.Range
		inputs["tags"] = args.Tags
		inputs["versionId"] = args.VersionId
	}
	outputs, err := ctx.Invoke("aws:s3/getBucketObject:getBucketObject", inputs)
	if err != nil {
		return nil, err
	}
	ret := GetBucketObjectResult{}
	if v, ok := outputs["body"]; ok {
		ret.Body = v
	}
	if v, ok := outputs["cacheControl"]; ok {
		ret.CacheControl = v
	}
	if v, ok := outputs["contentDisposition"]; ok {
		ret.ContentDisposition = v
	}
	if v, ok := outputs["contentEncoding"]; ok {
		ret.ContentEncoding = v
	}
	if v, ok := outputs["contentLanguage"]; ok {
		ret.ContentLanguage = v
	}
	if v, ok := outputs["contentLength"]; ok {
		ret.ContentLength = v
	}
	if v, ok := outputs["contentType"]; ok {
		ret.ContentType = v
	}
	if v, ok := outputs["etag"]; ok {
		ret.Etag = v
	}
	if v, ok := outputs["expiration"]; ok {
		ret.Expiration = v
	}
	if v, ok := outputs["expires"]; ok {
		ret.Expires = v
	}
	if v, ok := outputs["lastModified"]; ok {
		ret.LastModified = v
	}
	if v, ok := outputs["metadata"]; ok {
		ret.Metadata = v
	}
	if v, ok := outputs["serverSideEncryption"]; ok {
		ret.ServerSideEncryption = v
	}
	if v, ok := outputs["sseKmsKeyId"]; ok {
		ret.SseKmsKeyId = v
	}
	if v, ok := outputs["storageClass"]; ok {
		ret.StorageClass = v
	}
	if v, ok := outputs["tags"]; ok {
		ret.Tags = v
	}
	if v, ok := outputs["versionId"]; ok {
		ret.VersionId = v
	}
	if v, ok := outputs["websiteRedirectLocation"]; ok {
		ret.WebsiteRedirectLocation = v
	}
	return &ret, nil
}

// A collection of arguments for invoking getBucketObject.
type GetBucketObjectArgs struct {
	// The name of the bucket to read the object from
	Bucket interface{}
	// The full path to the object inside the bucket
	Key interface{}
	Range interface{}
	Tags interface{}
	// Specific version ID of the object returned (defaults to latest version)
	VersionId interface{}
}

// A collection of values returned by getBucketObject.
type GetBucketObjectResult struct {
	// Object data (see **limitations above** to understand cases in which this field is actually available)
	Body interface{}
	// Specifies caching behavior along the request/reply chain.
	CacheControl interface{}
	// Specifies presentational information for the object.
	ContentDisposition interface{}
	// Specifies what content encodings have been applied to the object and thus what decoding mechanisms must be applied to obtain the media-type referenced by the Content-Type header field.
	ContentEncoding interface{}
	// The language the content is in.
	ContentLanguage interface{}
	// Size of the body in bytes.
	ContentLength interface{}
	// A standard MIME type describing the format of the object data.
	ContentType interface{}
	// [ETag](https://en.wikipedia.org/wiki/HTTP_ETag) generated for the object (an MD5 sum of the object content in case it's not encrypted)
	Etag interface{}
	// If the object expiration is configured (see [object lifecycle management](http://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html)), the field includes this header. It includes the expiry-date and rule-id key value pairs providing object expiration information. The value of the rule-id is URL encoded.
	Expiration interface{}
	// The date and time at which the object is no longer cacheable.
	Expires interface{}
	// Last modified date of the object in RFC1123 format (e.g. `Mon, 02 Jan 2006 15:04:05 MST`)
	LastModified interface{}
	// A map of metadata stored with the object in S3
	Metadata interface{}
	// If the object is stored using server-side encryption (KMS or Amazon S3-managed encryption key), this field includes the chosen encryption and algorithm used.
	ServerSideEncryption interface{}
	// If present, specifies the ID of the Key Management Service (KMS) master encryption key that was used for the object.
	SseKmsKeyId interface{}
	// [Storage class](http://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html) information of the object. Available for all objects except for `Standard` storage class objects.
	StorageClass interface{}
	// A mapping of tags assigned to the object.
	Tags interface{}
	// The latest version ID of the object returned.
	VersionId interface{}
	// If the bucket is configured as a website, redirects requests for this object to another object in the same bucket or to an external URL. Amazon S3 stores the value of this header in the object metadata.
	WebsiteRedirectLocation interface{}
}
