// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The S3 account public access block data source returns account-level public access block configuration.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/s3"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := s3.LookupAccountPublicAccessBlock(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupAccountPublicAccessBlock(ctx *pulumi.Context, args *LookupAccountPublicAccessBlockArgs, opts ...pulumi.InvokeOption) (*LookupAccountPublicAccessBlockResult, error) {
	var rv LookupAccountPublicAccessBlockResult
	err := ctx.Invoke("aws:s3/getAccountPublicAccessBlock:getAccountPublicAccessBlock", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAccountPublicAccessBlock.
type LookupAccountPublicAccessBlockArgs struct {
	// AWS account ID to configure. Defaults to automatically determined account ID of the AWS provider.
	AccountId *string `pulumi:"accountId"`
}

// A collection of values returned by getAccountPublicAccessBlock.
type LookupAccountPublicAccessBlockResult struct {
	AccountId *string `pulumi:"accountId"`
	// Whether or not Amazon S3 should block public ACLs for buckets in this account is enabled. Returns as `true` or `false`.
	BlockPublicAcls bool `pulumi:"blockPublicAcls"`
	// Whether or not Amazon S3 should block public bucket policies for buckets in this account is enabled. Returns as `true` or `false`.
	BlockPublicPolicy bool `pulumi:"blockPublicPolicy"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Whether or not Amazon S3 should ignore public ACLs for buckets in this account is enabled. Returns as `true` or `false`.
	IgnorePublicAcls bool `pulumi:"ignorePublicAcls"`
	// Whether or not Amazon S3 should restrict public bucket policies for buckets in this account is enabled. Returns as `true` or `false`.
	RestrictPublicBuckets bool `pulumi:"restrictPublicBuckets"`
}

func LookupAccountPublicAccessBlockOutput(ctx *pulumi.Context, args LookupAccountPublicAccessBlockOutputArgs, opts ...pulumi.InvokeOption) LookupAccountPublicAccessBlockResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAccountPublicAccessBlockResult, error) {
			args := v.(LookupAccountPublicAccessBlockArgs)
			r, err := LookupAccountPublicAccessBlock(ctx, &args, opts...)
			var s LookupAccountPublicAccessBlockResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAccountPublicAccessBlockResultOutput)
}

// A collection of arguments for invoking getAccountPublicAccessBlock.
type LookupAccountPublicAccessBlockOutputArgs struct {
	// AWS account ID to configure. Defaults to automatically determined account ID of the AWS provider.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
}

func (LookupAccountPublicAccessBlockOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountPublicAccessBlockArgs)(nil)).Elem()
}

// A collection of values returned by getAccountPublicAccessBlock.
type LookupAccountPublicAccessBlockResultOutput struct{ *pulumi.OutputState }

func (LookupAccountPublicAccessBlockResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccountPublicAccessBlockResult)(nil)).Elem()
}

func (o LookupAccountPublicAccessBlockResultOutput) ToLookupAccountPublicAccessBlockResultOutput() LookupAccountPublicAccessBlockResultOutput {
	return o
}

func (o LookupAccountPublicAccessBlockResultOutput) ToLookupAccountPublicAccessBlockResultOutputWithContext(ctx context.Context) LookupAccountPublicAccessBlockResultOutput {
	return o
}

func (o LookupAccountPublicAccessBlockResultOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupAccountPublicAccessBlockResult) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// Whether or not Amazon S3 should block public ACLs for buckets in this account is enabled. Returns as `true` or `false`.
func (o LookupAccountPublicAccessBlockResultOutput) BlockPublicAcls() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAccountPublicAccessBlockResult) bool { return v.BlockPublicAcls }).(pulumi.BoolOutput)
}

// Whether or not Amazon S3 should block public bucket policies for buckets in this account is enabled. Returns as `true` or `false`.
func (o LookupAccountPublicAccessBlockResultOutput) BlockPublicPolicy() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAccountPublicAccessBlockResult) bool { return v.BlockPublicPolicy }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAccountPublicAccessBlockResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccountPublicAccessBlockResult) string { return v.Id }).(pulumi.StringOutput)
}

// Whether or not Amazon S3 should ignore public ACLs for buckets in this account is enabled. Returns as `true` or `false`.
func (o LookupAccountPublicAccessBlockResultOutput) IgnorePublicAcls() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAccountPublicAccessBlockResult) bool { return v.IgnorePublicAcls }).(pulumi.BoolOutput)
}

// Whether or not Amazon S3 should restrict public bucket policies for buckets in this account is enabled. Returns as `true` or `false`.
func (o LookupAccountPublicAccessBlockResultOutput) RestrictPublicBuckets() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupAccountPublicAccessBlockResult) bool { return v.RestrictPublicBuckets }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAccountPublicAccessBlockResultOutput{})
}
