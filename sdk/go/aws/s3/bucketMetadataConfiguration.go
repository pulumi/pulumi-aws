// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages Amazon S3 Metadata for a bucket.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/s3"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := s3.NewBucketMetadataConfiguration(ctx, "example", &s3.BucketMetadataConfigurationArgs{
//				Bucket: pulumi.Any(exampleAwsS3Bucket.Bucket),
//				MetadataConfiguration: &s3.BucketMetadataConfigurationMetadataConfigurationArgs{
//					InventoryTableConfiguration: &s3.BucketMetadataConfigurationMetadataConfigurationInventoryTableConfigurationArgs{
//						ConfigurationState: pulumi.String("ENABLED"),
//					},
//					JournalTableConfiguration: &s3.BucketMetadataConfigurationMetadataConfigurationJournalTableConfigurationArgs{
//						RecordExpiration: &s3.BucketMetadataConfigurationMetadataConfigurationJournalTableConfigurationRecordExpirationArgs{
//							Days:       pulumi.Int(7),
//							Expiration: pulumi.String("ENABLED"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider, import using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):
//
// __Using `pulumi import` to import__ S3 bucket metadata configuration using the `bucket` or using the `bucket` and `expected_bucket_owner` separated by a comma (`,`). For example:
//
// If the owner (account ID) of the source bucket is the same account used to configure the Terraform AWS Provider, import using the `bucket`:
//
// ```sh
// $ pulumi import aws:s3/bucketMetadataConfiguration:BucketMetadataConfiguration example bucket-name
// ```
// If the owner (account ID) of the source bucket differs from the account used to configure the Terraform AWS Provider, import using the `bucket` and `expected_bucket_owner` separated by a comma (`,`):
//
// ```sh
// $ pulumi import aws:s3/bucketMetadataConfiguration:BucketMetadataConfiguration example bucket-name,123456789012
// ```
type BucketMetadataConfiguration struct {
	pulumi.CustomResourceState

	// General purpose bucket that you want to create the metadata configuration for.
	Bucket              pulumi.StringOutput    `pulumi:"bucket"`
	ExpectedBucketOwner pulumi.StringPtrOutput `pulumi:"expectedBucketOwner"`
	// Metadata configuration. See `metadataConfiguration` Block for details.
	//
	// The following arguments are optional:
	MetadataConfiguration BucketMetadataConfigurationMetadataConfigurationPtrOutput `pulumi:"metadataConfiguration"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region   pulumi.StringOutput                          `pulumi:"region"`
	Timeouts BucketMetadataConfigurationTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewBucketMetadataConfiguration registers a new resource with the given unique name, arguments, and options.
func NewBucketMetadataConfiguration(ctx *pulumi.Context,
	name string, args *BucketMetadataConfigurationArgs, opts ...pulumi.ResourceOption) (*BucketMetadataConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Bucket == nil {
		return nil, errors.New("invalid value for required argument 'Bucket'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BucketMetadataConfiguration
	err := ctx.RegisterResource("aws:s3/bucketMetadataConfiguration:BucketMetadataConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBucketMetadataConfiguration gets an existing BucketMetadataConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBucketMetadataConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BucketMetadataConfigurationState, opts ...pulumi.ResourceOption) (*BucketMetadataConfiguration, error) {
	var resource BucketMetadataConfiguration
	err := ctx.ReadResource("aws:s3/bucketMetadataConfiguration:BucketMetadataConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BucketMetadataConfiguration resources.
type bucketMetadataConfigurationState struct {
	// General purpose bucket that you want to create the metadata configuration for.
	Bucket              *string `pulumi:"bucket"`
	ExpectedBucketOwner *string `pulumi:"expectedBucketOwner"`
	// Metadata configuration. See `metadataConfiguration` Block for details.
	//
	// The following arguments are optional:
	MetadataConfiguration *BucketMetadataConfigurationMetadataConfiguration `pulumi:"metadataConfiguration"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region   *string                              `pulumi:"region"`
	Timeouts *BucketMetadataConfigurationTimeouts `pulumi:"timeouts"`
}

type BucketMetadataConfigurationState struct {
	// General purpose bucket that you want to create the metadata configuration for.
	Bucket              pulumi.StringPtrInput
	ExpectedBucketOwner pulumi.StringPtrInput
	// Metadata configuration. See `metadataConfiguration` Block for details.
	//
	// The following arguments are optional:
	MetadataConfiguration BucketMetadataConfigurationMetadataConfigurationPtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region   pulumi.StringPtrInput
	Timeouts BucketMetadataConfigurationTimeoutsPtrInput
}

func (BucketMetadataConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketMetadataConfigurationState)(nil)).Elem()
}

type bucketMetadataConfigurationArgs struct {
	// General purpose bucket that you want to create the metadata configuration for.
	Bucket              string  `pulumi:"bucket"`
	ExpectedBucketOwner *string `pulumi:"expectedBucketOwner"`
	// Metadata configuration. See `metadataConfiguration` Block for details.
	//
	// The following arguments are optional:
	MetadataConfiguration *BucketMetadataConfigurationMetadataConfiguration `pulumi:"metadataConfiguration"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region   *string                              `pulumi:"region"`
	Timeouts *BucketMetadataConfigurationTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a BucketMetadataConfiguration resource.
type BucketMetadataConfigurationArgs struct {
	// General purpose bucket that you want to create the metadata configuration for.
	Bucket              pulumi.StringInput
	ExpectedBucketOwner pulumi.StringPtrInput
	// Metadata configuration. See `metadataConfiguration` Block for details.
	//
	// The following arguments are optional:
	MetadataConfiguration BucketMetadataConfigurationMetadataConfigurationPtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region   pulumi.StringPtrInput
	Timeouts BucketMetadataConfigurationTimeoutsPtrInput
}

func (BucketMetadataConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*bucketMetadataConfigurationArgs)(nil)).Elem()
}

type BucketMetadataConfigurationInput interface {
	pulumi.Input

	ToBucketMetadataConfigurationOutput() BucketMetadataConfigurationOutput
	ToBucketMetadataConfigurationOutputWithContext(ctx context.Context) BucketMetadataConfigurationOutput
}

func (*BucketMetadataConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketMetadataConfiguration)(nil)).Elem()
}

func (i *BucketMetadataConfiguration) ToBucketMetadataConfigurationOutput() BucketMetadataConfigurationOutput {
	return i.ToBucketMetadataConfigurationOutputWithContext(context.Background())
}

func (i *BucketMetadataConfiguration) ToBucketMetadataConfigurationOutputWithContext(ctx context.Context) BucketMetadataConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketMetadataConfigurationOutput)
}

// BucketMetadataConfigurationArrayInput is an input type that accepts BucketMetadataConfigurationArray and BucketMetadataConfigurationArrayOutput values.
// You can construct a concrete instance of `BucketMetadataConfigurationArrayInput` via:
//
//	BucketMetadataConfigurationArray{ BucketMetadataConfigurationArgs{...} }
type BucketMetadataConfigurationArrayInput interface {
	pulumi.Input

	ToBucketMetadataConfigurationArrayOutput() BucketMetadataConfigurationArrayOutput
	ToBucketMetadataConfigurationArrayOutputWithContext(context.Context) BucketMetadataConfigurationArrayOutput
}

type BucketMetadataConfigurationArray []BucketMetadataConfigurationInput

func (BucketMetadataConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BucketMetadataConfiguration)(nil)).Elem()
}

func (i BucketMetadataConfigurationArray) ToBucketMetadataConfigurationArrayOutput() BucketMetadataConfigurationArrayOutput {
	return i.ToBucketMetadataConfigurationArrayOutputWithContext(context.Background())
}

func (i BucketMetadataConfigurationArray) ToBucketMetadataConfigurationArrayOutputWithContext(ctx context.Context) BucketMetadataConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketMetadataConfigurationArrayOutput)
}

// BucketMetadataConfigurationMapInput is an input type that accepts BucketMetadataConfigurationMap and BucketMetadataConfigurationMapOutput values.
// You can construct a concrete instance of `BucketMetadataConfigurationMapInput` via:
//
//	BucketMetadataConfigurationMap{ "key": BucketMetadataConfigurationArgs{...} }
type BucketMetadataConfigurationMapInput interface {
	pulumi.Input

	ToBucketMetadataConfigurationMapOutput() BucketMetadataConfigurationMapOutput
	ToBucketMetadataConfigurationMapOutputWithContext(context.Context) BucketMetadataConfigurationMapOutput
}

type BucketMetadataConfigurationMap map[string]BucketMetadataConfigurationInput

func (BucketMetadataConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BucketMetadataConfiguration)(nil)).Elem()
}

func (i BucketMetadataConfigurationMap) ToBucketMetadataConfigurationMapOutput() BucketMetadataConfigurationMapOutput {
	return i.ToBucketMetadataConfigurationMapOutputWithContext(context.Background())
}

func (i BucketMetadataConfigurationMap) ToBucketMetadataConfigurationMapOutputWithContext(ctx context.Context) BucketMetadataConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BucketMetadataConfigurationMapOutput)
}

type BucketMetadataConfigurationOutput struct{ *pulumi.OutputState }

func (BucketMetadataConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BucketMetadataConfiguration)(nil)).Elem()
}

func (o BucketMetadataConfigurationOutput) ToBucketMetadataConfigurationOutput() BucketMetadataConfigurationOutput {
	return o
}

func (o BucketMetadataConfigurationOutput) ToBucketMetadataConfigurationOutputWithContext(ctx context.Context) BucketMetadataConfigurationOutput {
	return o
}

// General purpose bucket that you want to create the metadata configuration for.
func (o BucketMetadataConfigurationOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v *BucketMetadataConfiguration) pulumi.StringOutput { return v.Bucket }).(pulumi.StringOutput)
}

func (o BucketMetadataConfigurationOutput) ExpectedBucketOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BucketMetadataConfiguration) pulumi.StringPtrOutput { return v.ExpectedBucketOwner }).(pulumi.StringPtrOutput)
}

// Metadata configuration. See `metadataConfiguration` Block for details.
//
// The following arguments are optional:
func (o BucketMetadataConfigurationOutput) MetadataConfiguration() BucketMetadataConfigurationMetadataConfigurationPtrOutput {
	return o.ApplyT(func(v *BucketMetadataConfiguration) BucketMetadataConfigurationMetadataConfigurationPtrOutput {
		return v.MetadataConfiguration
	}).(BucketMetadataConfigurationMetadataConfigurationPtrOutput)
}

// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
func (o BucketMetadataConfigurationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *BucketMetadataConfiguration) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o BucketMetadataConfigurationOutput) Timeouts() BucketMetadataConfigurationTimeoutsPtrOutput {
	return o.ApplyT(func(v *BucketMetadataConfiguration) BucketMetadataConfigurationTimeoutsPtrOutput { return v.Timeouts }).(BucketMetadataConfigurationTimeoutsPtrOutput)
}

type BucketMetadataConfigurationArrayOutput struct{ *pulumi.OutputState }

func (BucketMetadataConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BucketMetadataConfiguration)(nil)).Elem()
}

func (o BucketMetadataConfigurationArrayOutput) ToBucketMetadataConfigurationArrayOutput() BucketMetadataConfigurationArrayOutput {
	return o
}

func (o BucketMetadataConfigurationArrayOutput) ToBucketMetadataConfigurationArrayOutputWithContext(ctx context.Context) BucketMetadataConfigurationArrayOutput {
	return o
}

func (o BucketMetadataConfigurationArrayOutput) Index(i pulumi.IntInput) BucketMetadataConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BucketMetadataConfiguration {
		return vs[0].([]*BucketMetadataConfiguration)[vs[1].(int)]
	}).(BucketMetadataConfigurationOutput)
}

type BucketMetadataConfigurationMapOutput struct{ *pulumi.OutputState }

func (BucketMetadataConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BucketMetadataConfiguration)(nil)).Elem()
}

func (o BucketMetadataConfigurationMapOutput) ToBucketMetadataConfigurationMapOutput() BucketMetadataConfigurationMapOutput {
	return o
}

func (o BucketMetadataConfigurationMapOutput) ToBucketMetadataConfigurationMapOutputWithContext(ctx context.Context) BucketMetadataConfigurationMapOutput {
	return o
}

func (o BucketMetadataConfigurationMapOutput) MapIndex(k pulumi.StringInput) BucketMetadataConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BucketMetadataConfiguration {
		return vs[0].(map[string]*BucketMetadataConfiguration)[vs[1].(string)]
	}).(BucketMetadataConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BucketMetadataConfigurationInput)(nil)).Elem(), &BucketMetadataConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketMetadataConfigurationArrayInput)(nil)).Elem(), BucketMetadataConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BucketMetadataConfigurationMapInput)(nil)).Elem(), BucketMetadataConfigurationMap{})
	pulumi.RegisterOutputType(BucketMetadataConfigurationOutput{})
	pulumi.RegisterOutputType(BucketMetadataConfigurationArrayOutput{})
	pulumi.RegisterOutputType(BucketMetadataConfigurationMapOutput{})
}
