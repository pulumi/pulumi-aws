// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package amplify

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Branch struct {
	pulumi.CustomResourceState

	AppId                      pulumi.StringOutput      `pulumi:"appId"`
	Arn                        pulumi.StringOutput      `pulumi:"arn"`
	AssociatedResources        pulumi.StringArrayOutput `pulumi:"associatedResources"`
	BackendEnvironmentArn      pulumi.StringPtrOutput   `pulumi:"backendEnvironmentArn"`
	BasicAuthCredentials       pulumi.StringPtrOutput   `pulumi:"basicAuthCredentials"`
	BranchName                 pulumi.StringOutput      `pulumi:"branchName"`
	CustomDomains              pulumi.StringArrayOutput `pulumi:"customDomains"`
	Description                pulumi.StringPtrOutput   `pulumi:"description"`
	DestinationBranch          pulumi.StringOutput      `pulumi:"destinationBranch"`
	DisplayName                pulumi.StringOutput      `pulumi:"displayName"`
	EnableAutoBuild            pulumi.BoolPtrOutput     `pulumi:"enableAutoBuild"`
	EnableBasicAuth            pulumi.BoolPtrOutput     `pulumi:"enableBasicAuth"`
	EnableNotification         pulumi.BoolPtrOutput     `pulumi:"enableNotification"`
	EnablePerformanceMode      pulumi.BoolPtrOutput     `pulumi:"enablePerformanceMode"`
	EnablePullRequestPreview   pulumi.BoolPtrOutput     `pulumi:"enablePullRequestPreview"`
	EnvironmentVariables       pulumi.StringMapOutput   `pulumi:"environmentVariables"`
	Framework                  pulumi.StringPtrOutput   `pulumi:"framework"`
	PullRequestEnvironmentName pulumi.StringPtrOutput   `pulumi:"pullRequestEnvironmentName"`
	SourceBranch               pulumi.StringOutput      `pulumi:"sourceBranch"`
	Stage                      pulumi.StringPtrOutput   `pulumi:"stage"`
	Tags                       pulumi.StringMapOutput   `pulumi:"tags"`
	TagsAll                    pulumi.StringMapOutput   `pulumi:"tagsAll"`
	Ttl                        pulumi.StringPtrOutput   `pulumi:"ttl"`
}

// NewBranch registers a new resource with the given unique name, arguments, and options.
func NewBranch(ctx *pulumi.Context,
	name string, args *BranchArgs, opts ...pulumi.ResourceOption) (*Branch, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppId == nil {
		return nil, errors.New("invalid value for required argument 'AppId'")
	}
	if args.BranchName == nil {
		return nil, errors.New("invalid value for required argument 'BranchName'")
	}
	if args.BasicAuthCredentials != nil {
		args.BasicAuthCredentials = pulumi.ToSecret(args.BasicAuthCredentials).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"basicAuthCredentials",
	})
	opts = append(opts, secrets)
	var resource Branch
	err := ctx.RegisterResource("aws:amplify/branch:Branch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBranch gets an existing Branch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBranch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BranchState, opts ...pulumi.ResourceOption) (*Branch, error) {
	var resource Branch
	err := ctx.ReadResource("aws:amplify/branch:Branch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Branch resources.
type branchState struct {
	AppId                      *string           `pulumi:"appId"`
	Arn                        *string           `pulumi:"arn"`
	AssociatedResources        []string          `pulumi:"associatedResources"`
	BackendEnvironmentArn      *string           `pulumi:"backendEnvironmentArn"`
	BasicAuthCredentials       *string           `pulumi:"basicAuthCredentials"`
	BranchName                 *string           `pulumi:"branchName"`
	CustomDomains              []string          `pulumi:"customDomains"`
	Description                *string           `pulumi:"description"`
	DestinationBranch          *string           `pulumi:"destinationBranch"`
	DisplayName                *string           `pulumi:"displayName"`
	EnableAutoBuild            *bool             `pulumi:"enableAutoBuild"`
	EnableBasicAuth            *bool             `pulumi:"enableBasicAuth"`
	EnableNotification         *bool             `pulumi:"enableNotification"`
	EnablePerformanceMode      *bool             `pulumi:"enablePerformanceMode"`
	EnablePullRequestPreview   *bool             `pulumi:"enablePullRequestPreview"`
	EnvironmentVariables       map[string]string `pulumi:"environmentVariables"`
	Framework                  *string           `pulumi:"framework"`
	PullRequestEnvironmentName *string           `pulumi:"pullRequestEnvironmentName"`
	SourceBranch               *string           `pulumi:"sourceBranch"`
	Stage                      *string           `pulumi:"stage"`
	Tags                       map[string]string `pulumi:"tags"`
	TagsAll                    map[string]string `pulumi:"tagsAll"`
	Ttl                        *string           `pulumi:"ttl"`
}

type BranchState struct {
	AppId                      pulumi.StringPtrInput
	Arn                        pulumi.StringPtrInput
	AssociatedResources        pulumi.StringArrayInput
	BackendEnvironmentArn      pulumi.StringPtrInput
	BasicAuthCredentials       pulumi.StringPtrInput
	BranchName                 pulumi.StringPtrInput
	CustomDomains              pulumi.StringArrayInput
	Description                pulumi.StringPtrInput
	DestinationBranch          pulumi.StringPtrInput
	DisplayName                pulumi.StringPtrInput
	EnableAutoBuild            pulumi.BoolPtrInput
	EnableBasicAuth            pulumi.BoolPtrInput
	EnableNotification         pulumi.BoolPtrInput
	EnablePerformanceMode      pulumi.BoolPtrInput
	EnablePullRequestPreview   pulumi.BoolPtrInput
	EnvironmentVariables       pulumi.StringMapInput
	Framework                  pulumi.StringPtrInput
	PullRequestEnvironmentName pulumi.StringPtrInput
	SourceBranch               pulumi.StringPtrInput
	Stage                      pulumi.StringPtrInput
	Tags                       pulumi.StringMapInput
	TagsAll                    pulumi.StringMapInput
	Ttl                        pulumi.StringPtrInput
}

func (BranchState) ElementType() reflect.Type {
	return reflect.TypeOf((*branchState)(nil)).Elem()
}

type branchArgs struct {
	AppId                      string            `pulumi:"appId"`
	BackendEnvironmentArn      *string           `pulumi:"backendEnvironmentArn"`
	BasicAuthCredentials       *string           `pulumi:"basicAuthCredentials"`
	BranchName                 string            `pulumi:"branchName"`
	Description                *string           `pulumi:"description"`
	DisplayName                *string           `pulumi:"displayName"`
	EnableAutoBuild            *bool             `pulumi:"enableAutoBuild"`
	EnableBasicAuth            *bool             `pulumi:"enableBasicAuth"`
	EnableNotification         *bool             `pulumi:"enableNotification"`
	EnablePerformanceMode      *bool             `pulumi:"enablePerformanceMode"`
	EnablePullRequestPreview   *bool             `pulumi:"enablePullRequestPreview"`
	EnvironmentVariables       map[string]string `pulumi:"environmentVariables"`
	Framework                  *string           `pulumi:"framework"`
	PullRequestEnvironmentName *string           `pulumi:"pullRequestEnvironmentName"`
	Stage                      *string           `pulumi:"stage"`
	Tags                       map[string]string `pulumi:"tags"`
	Ttl                        *string           `pulumi:"ttl"`
}

// The set of arguments for constructing a Branch resource.
type BranchArgs struct {
	AppId                      pulumi.StringInput
	BackendEnvironmentArn      pulumi.StringPtrInput
	BasicAuthCredentials       pulumi.StringPtrInput
	BranchName                 pulumi.StringInput
	Description                pulumi.StringPtrInput
	DisplayName                pulumi.StringPtrInput
	EnableAutoBuild            pulumi.BoolPtrInput
	EnableBasicAuth            pulumi.BoolPtrInput
	EnableNotification         pulumi.BoolPtrInput
	EnablePerformanceMode      pulumi.BoolPtrInput
	EnablePullRequestPreview   pulumi.BoolPtrInput
	EnvironmentVariables       pulumi.StringMapInput
	Framework                  pulumi.StringPtrInput
	PullRequestEnvironmentName pulumi.StringPtrInput
	Stage                      pulumi.StringPtrInput
	Tags                       pulumi.StringMapInput
	Ttl                        pulumi.StringPtrInput
}

func (BranchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*branchArgs)(nil)).Elem()
}

type BranchInput interface {
	pulumi.Input

	ToBranchOutput() BranchOutput
	ToBranchOutputWithContext(ctx context.Context) BranchOutput
}

func (*Branch) ElementType() reflect.Type {
	return reflect.TypeOf((**Branch)(nil)).Elem()
}

func (i *Branch) ToBranchOutput() BranchOutput {
	return i.ToBranchOutputWithContext(context.Background())
}

func (i *Branch) ToBranchOutputWithContext(ctx context.Context) BranchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchOutput)
}

// BranchArrayInput is an input type that accepts BranchArray and BranchArrayOutput values.
// You can construct a concrete instance of `BranchArrayInput` via:
//
//	BranchArray{ BranchArgs{...} }
type BranchArrayInput interface {
	pulumi.Input

	ToBranchArrayOutput() BranchArrayOutput
	ToBranchArrayOutputWithContext(context.Context) BranchArrayOutput
}

type BranchArray []BranchInput

func (BranchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Branch)(nil)).Elem()
}

func (i BranchArray) ToBranchArrayOutput() BranchArrayOutput {
	return i.ToBranchArrayOutputWithContext(context.Background())
}

func (i BranchArray) ToBranchArrayOutputWithContext(ctx context.Context) BranchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchArrayOutput)
}

// BranchMapInput is an input type that accepts BranchMap and BranchMapOutput values.
// You can construct a concrete instance of `BranchMapInput` via:
//
//	BranchMap{ "key": BranchArgs{...} }
type BranchMapInput interface {
	pulumi.Input

	ToBranchMapOutput() BranchMapOutput
	ToBranchMapOutputWithContext(context.Context) BranchMapOutput
}

type BranchMap map[string]BranchInput

func (BranchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Branch)(nil)).Elem()
}

func (i BranchMap) ToBranchMapOutput() BranchMapOutput {
	return i.ToBranchMapOutputWithContext(context.Background())
}

func (i BranchMap) ToBranchMapOutputWithContext(ctx context.Context) BranchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BranchMapOutput)
}

type BranchOutput struct{ *pulumi.OutputState }

func (BranchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Branch)(nil)).Elem()
}

func (o BranchOutput) ToBranchOutput() BranchOutput {
	return o
}

func (o BranchOutput) ToBranchOutputWithContext(ctx context.Context) BranchOutput {
	return o
}

func (o BranchOutput) AppId() pulumi.StringOutput {
	return o.ApplyT(func(v *Branch) pulumi.StringOutput { return v.AppId }).(pulumi.StringOutput)
}

func (o BranchOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Branch) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o BranchOutput) AssociatedResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Branch) pulumi.StringArrayOutput { return v.AssociatedResources }).(pulumi.StringArrayOutput)
}

func (o BranchOutput) BackendEnvironmentArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Branch) pulumi.StringPtrOutput { return v.BackendEnvironmentArn }).(pulumi.StringPtrOutput)
}

func (o BranchOutput) BasicAuthCredentials() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Branch) pulumi.StringPtrOutput { return v.BasicAuthCredentials }).(pulumi.StringPtrOutput)
}

func (o BranchOutput) BranchName() pulumi.StringOutput {
	return o.ApplyT(func(v *Branch) pulumi.StringOutput { return v.BranchName }).(pulumi.StringOutput)
}

func (o BranchOutput) CustomDomains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Branch) pulumi.StringArrayOutput { return v.CustomDomains }).(pulumi.StringArrayOutput)
}

func (o BranchOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Branch) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o BranchOutput) DestinationBranch() pulumi.StringOutput {
	return o.ApplyT(func(v *Branch) pulumi.StringOutput { return v.DestinationBranch }).(pulumi.StringOutput)
}

func (o BranchOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Branch) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

func (o BranchOutput) EnableAutoBuild() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Branch) pulumi.BoolPtrOutput { return v.EnableAutoBuild }).(pulumi.BoolPtrOutput)
}

func (o BranchOutput) EnableBasicAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Branch) pulumi.BoolPtrOutput { return v.EnableBasicAuth }).(pulumi.BoolPtrOutput)
}

func (o BranchOutput) EnableNotification() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Branch) pulumi.BoolPtrOutput { return v.EnableNotification }).(pulumi.BoolPtrOutput)
}

func (o BranchOutput) EnablePerformanceMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Branch) pulumi.BoolPtrOutput { return v.EnablePerformanceMode }).(pulumi.BoolPtrOutput)
}

func (o BranchOutput) EnablePullRequestPreview() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Branch) pulumi.BoolPtrOutput { return v.EnablePullRequestPreview }).(pulumi.BoolPtrOutput)
}

func (o BranchOutput) EnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Branch) pulumi.StringMapOutput { return v.EnvironmentVariables }).(pulumi.StringMapOutput)
}

func (o BranchOutput) Framework() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Branch) pulumi.StringPtrOutput { return v.Framework }).(pulumi.StringPtrOutput)
}

func (o BranchOutput) PullRequestEnvironmentName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Branch) pulumi.StringPtrOutput { return v.PullRequestEnvironmentName }).(pulumi.StringPtrOutput)
}

func (o BranchOutput) SourceBranch() pulumi.StringOutput {
	return o.ApplyT(func(v *Branch) pulumi.StringOutput { return v.SourceBranch }).(pulumi.StringOutput)
}

func (o BranchOutput) Stage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Branch) pulumi.StringPtrOutput { return v.Stage }).(pulumi.StringPtrOutput)
}

func (o BranchOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Branch) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o BranchOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Branch) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o BranchOutput) Ttl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Branch) pulumi.StringPtrOutput { return v.Ttl }).(pulumi.StringPtrOutput)
}

type BranchArrayOutput struct{ *pulumi.OutputState }

func (BranchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Branch)(nil)).Elem()
}

func (o BranchArrayOutput) ToBranchArrayOutput() BranchArrayOutput {
	return o
}

func (o BranchArrayOutput) ToBranchArrayOutputWithContext(ctx context.Context) BranchArrayOutput {
	return o
}

func (o BranchArrayOutput) Index(i pulumi.IntInput) BranchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Branch {
		return vs[0].([]*Branch)[vs[1].(int)]
	}).(BranchOutput)
}

type BranchMapOutput struct{ *pulumi.OutputState }

func (BranchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Branch)(nil)).Elem()
}

func (o BranchMapOutput) ToBranchMapOutput() BranchMapOutput {
	return o
}

func (o BranchMapOutput) ToBranchMapOutputWithContext(ctx context.Context) BranchMapOutput {
	return o
}

func (o BranchMapOutput) MapIndex(k pulumi.StringInput) BranchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Branch {
		return vs[0].(map[string]*Branch)[vs[1].(string)]
	}).(BranchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BranchInput)(nil)).Elem(), &Branch{})
	pulumi.RegisterInputType(reflect.TypeOf((*BranchArrayInput)(nil)).Elem(), BranchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BranchMapInput)(nil)).Elem(), BranchMap{})
	pulumi.RegisterOutputType(BranchOutput{})
	pulumi.RegisterOutputType(BranchArrayOutput{})
	pulumi.RegisterOutputType(BranchMapOutput{})
}
