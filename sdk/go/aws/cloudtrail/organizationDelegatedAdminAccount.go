// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudtrail

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to manage an AWS CloudTrail Delegated Administrator.
//
// ## Example Usage
//
// Basic usage:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws"
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/cloudtrail"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			delegated, err := aws.GetCallerIdentity(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			_, err = cloudtrail.NewOrganizationDelegatedAdminAccount(ctx, "example", &cloudtrail.OrganizationDelegatedAdminAccountArgs{
//				AccountId: pulumi.String(delegated.AccountId),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import delegated administrators using the delegate account `id`. For example:
//
// ```sh
// $ pulumi import aws:cloudtrail/organizationDelegatedAdminAccount:OrganizationDelegatedAdminAccount example 12345678901
// ```
type OrganizationDelegatedAdminAccount struct {
	pulumi.CustomResourceState

	// An organization member account ID that you want to designate as a delegated administrator.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// The Amazon Resource Name (ARN) of the delegated administrator's account.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The email address that is associated with the delegated administrator's AWS account.
	Email pulumi.StringOutput `pulumi:"email"`
	// The friendly name of the delegated administrator's account.
	Name pulumi.StringOutput `pulumi:"name"`
	// The AWS CloudTrail service principal name.
	ServicePrincipal pulumi.StringOutput `pulumi:"servicePrincipal"`
}

// NewOrganizationDelegatedAdminAccount registers a new resource with the given unique name, arguments, and options.
func NewOrganizationDelegatedAdminAccount(ctx *pulumi.Context,
	name string, args *OrganizationDelegatedAdminAccountArgs, opts ...pulumi.ResourceOption) (*OrganizationDelegatedAdminAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrganizationDelegatedAdminAccount
	err := ctx.RegisterResource("aws:cloudtrail/organizationDelegatedAdminAccount:OrganizationDelegatedAdminAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationDelegatedAdminAccount gets an existing OrganizationDelegatedAdminAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationDelegatedAdminAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationDelegatedAdminAccountState, opts ...pulumi.ResourceOption) (*OrganizationDelegatedAdminAccount, error) {
	var resource OrganizationDelegatedAdminAccount
	err := ctx.ReadResource("aws:cloudtrail/organizationDelegatedAdminAccount:OrganizationDelegatedAdminAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationDelegatedAdminAccount resources.
type organizationDelegatedAdminAccountState struct {
	// An organization member account ID that you want to designate as a delegated administrator.
	AccountId *string `pulumi:"accountId"`
	// The Amazon Resource Name (ARN) of the delegated administrator's account.
	Arn *string `pulumi:"arn"`
	// The email address that is associated with the delegated administrator's AWS account.
	Email *string `pulumi:"email"`
	// The friendly name of the delegated administrator's account.
	Name *string `pulumi:"name"`
	// The AWS CloudTrail service principal name.
	ServicePrincipal *string `pulumi:"servicePrincipal"`
}

type OrganizationDelegatedAdminAccountState struct {
	// An organization member account ID that you want to designate as a delegated administrator.
	AccountId pulumi.StringPtrInput
	// The Amazon Resource Name (ARN) of the delegated administrator's account.
	Arn pulumi.StringPtrInput
	// The email address that is associated with the delegated administrator's AWS account.
	Email pulumi.StringPtrInput
	// The friendly name of the delegated administrator's account.
	Name pulumi.StringPtrInput
	// The AWS CloudTrail service principal name.
	ServicePrincipal pulumi.StringPtrInput
}

func (OrganizationDelegatedAdminAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationDelegatedAdminAccountState)(nil)).Elem()
}

type organizationDelegatedAdminAccountArgs struct {
	// An organization member account ID that you want to designate as a delegated administrator.
	AccountId string `pulumi:"accountId"`
}

// The set of arguments for constructing a OrganizationDelegatedAdminAccount resource.
type OrganizationDelegatedAdminAccountArgs struct {
	// An organization member account ID that you want to designate as a delegated administrator.
	AccountId pulumi.StringInput
}

func (OrganizationDelegatedAdminAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationDelegatedAdminAccountArgs)(nil)).Elem()
}

type OrganizationDelegatedAdminAccountInput interface {
	pulumi.Input

	ToOrganizationDelegatedAdminAccountOutput() OrganizationDelegatedAdminAccountOutput
	ToOrganizationDelegatedAdminAccountOutputWithContext(ctx context.Context) OrganizationDelegatedAdminAccountOutput
}

func (*OrganizationDelegatedAdminAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationDelegatedAdminAccount)(nil)).Elem()
}

func (i *OrganizationDelegatedAdminAccount) ToOrganizationDelegatedAdminAccountOutput() OrganizationDelegatedAdminAccountOutput {
	return i.ToOrganizationDelegatedAdminAccountOutputWithContext(context.Background())
}

func (i *OrganizationDelegatedAdminAccount) ToOrganizationDelegatedAdminAccountOutputWithContext(ctx context.Context) OrganizationDelegatedAdminAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationDelegatedAdminAccountOutput)
}

// OrganizationDelegatedAdminAccountArrayInput is an input type that accepts OrganizationDelegatedAdminAccountArray and OrganizationDelegatedAdminAccountArrayOutput values.
// You can construct a concrete instance of `OrganizationDelegatedAdminAccountArrayInput` via:
//
//	OrganizationDelegatedAdminAccountArray{ OrganizationDelegatedAdminAccountArgs{...} }
type OrganizationDelegatedAdminAccountArrayInput interface {
	pulumi.Input

	ToOrganizationDelegatedAdminAccountArrayOutput() OrganizationDelegatedAdminAccountArrayOutput
	ToOrganizationDelegatedAdminAccountArrayOutputWithContext(context.Context) OrganizationDelegatedAdminAccountArrayOutput
}

type OrganizationDelegatedAdminAccountArray []OrganizationDelegatedAdminAccountInput

func (OrganizationDelegatedAdminAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationDelegatedAdminAccount)(nil)).Elem()
}

func (i OrganizationDelegatedAdminAccountArray) ToOrganizationDelegatedAdminAccountArrayOutput() OrganizationDelegatedAdminAccountArrayOutput {
	return i.ToOrganizationDelegatedAdminAccountArrayOutputWithContext(context.Background())
}

func (i OrganizationDelegatedAdminAccountArray) ToOrganizationDelegatedAdminAccountArrayOutputWithContext(ctx context.Context) OrganizationDelegatedAdminAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationDelegatedAdminAccountArrayOutput)
}

// OrganizationDelegatedAdminAccountMapInput is an input type that accepts OrganizationDelegatedAdminAccountMap and OrganizationDelegatedAdminAccountMapOutput values.
// You can construct a concrete instance of `OrganizationDelegatedAdminAccountMapInput` via:
//
//	OrganizationDelegatedAdminAccountMap{ "key": OrganizationDelegatedAdminAccountArgs{...} }
type OrganizationDelegatedAdminAccountMapInput interface {
	pulumi.Input

	ToOrganizationDelegatedAdminAccountMapOutput() OrganizationDelegatedAdminAccountMapOutput
	ToOrganizationDelegatedAdminAccountMapOutputWithContext(context.Context) OrganizationDelegatedAdminAccountMapOutput
}

type OrganizationDelegatedAdminAccountMap map[string]OrganizationDelegatedAdminAccountInput

func (OrganizationDelegatedAdminAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationDelegatedAdminAccount)(nil)).Elem()
}

func (i OrganizationDelegatedAdminAccountMap) ToOrganizationDelegatedAdminAccountMapOutput() OrganizationDelegatedAdminAccountMapOutput {
	return i.ToOrganizationDelegatedAdminAccountMapOutputWithContext(context.Background())
}

func (i OrganizationDelegatedAdminAccountMap) ToOrganizationDelegatedAdminAccountMapOutputWithContext(ctx context.Context) OrganizationDelegatedAdminAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationDelegatedAdminAccountMapOutput)
}

type OrganizationDelegatedAdminAccountOutput struct{ *pulumi.OutputState }

func (OrganizationDelegatedAdminAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationDelegatedAdminAccount)(nil)).Elem()
}

func (o OrganizationDelegatedAdminAccountOutput) ToOrganizationDelegatedAdminAccountOutput() OrganizationDelegatedAdminAccountOutput {
	return o
}

func (o OrganizationDelegatedAdminAccountOutput) ToOrganizationDelegatedAdminAccountOutputWithContext(ctx context.Context) OrganizationDelegatedAdminAccountOutput {
	return o
}

// An organization member account ID that you want to designate as a delegated administrator.
func (o OrganizationDelegatedAdminAccountOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationDelegatedAdminAccount) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the delegated administrator's account.
func (o OrganizationDelegatedAdminAccountOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationDelegatedAdminAccount) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The email address that is associated with the delegated administrator's AWS account.
func (o OrganizationDelegatedAdminAccountOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationDelegatedAdminAccount) pulumi.StringOutput { return v.Email }).(pulumi.StringOutput)
}

// The friendly name of the delegated administrator's account.
func (o OrganizationDelegatedAdminAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationDelegatedAdminAccount) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The AWS CloudTrail service principal name.
func (o OrganizationDelegatedAdminAccountOutput) ServicePrincipal() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationDelegatedAdminAccount) pulumi.StringOutput { return v.ServicePrincipal }).(pulumi.StringOutput)
}

type OrganizationDelegatedAdminAccountArrayOutput struct{ *pulumi.OutputState }

func (OrganizationDelegatedAdminAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationDelegatedAdminAccount)(nil)).Elem()
}

func (o OrganizationDelegatedAdminAccountArrayOutput) ToOrganizationDelegatedAdminAccountArrayOutput() OrganizationDelegatedAdminAccountArrayOutput {
	return o
}

func (o OrganizationDelegatedAdminAccountArrayOutput) ToOrganizationDelegatedAdminAccountArrayOutputWithContext(ctx context.Context) OrganizationDelegatedAdminAccountArrayOutput {
	return o
}

func (o OrganizationDelegatedAdminAccountArrayOutput) Index(i pulumi.IntInput) OrganizationDelegatedAdminAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OrganizationDelegatedAdminAccount {
		return vs[0].([]*OrganizationDelegatedAdminAccount)[vs[1].(int)]
	}).(OrganizationDelegatedAdminAccountOutput)
}

type OrganizationDelegatedAdminAccountMapOutput struct{ *pulumi.OutputState }

func (OrganizationDelegatedAdminAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationDelegatedAdminAccount)(nil)).Elem()
}

func (o OrganizationDelegatedAdminAccountMapOutput) ToOrganizationDelegatedAdminAccountMapOutput() OrganizationDelegatedAdminAccountMapOutput {
	return o
}

func (o OrganizationDelegatedAdminAccountMapOutput) ToOrganizationDelegatedAdminAccountMapOutputWithContext(ctx context.Context) OrganizationDelegatedAdminAccountMapOutput {
	return o
}

func (o OrganizationDelegatedAdminAccountMapOutput) MapIndex(k pulumi.StringInput) OrganizationDelegatedAdminAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OrganizationDelegatedAdminAccount {
		return vs[0].(map[string]*OrganizationDelegatedAdminAccount)[vs[1].(string)]
	}).(OrganizationDelegatedAdminAccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationDelegatedAdminAccountInput)(nil)).Elem(), &OrganizationDelegatedAdminAccount{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationDelegatedAdminAccountArrayInput)(nil)).Elem(), OrganizationDelegatedAdminAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationDelegatedAdminAccountMapInput)(nil)).Elem(), OrganizationDelegatedAdminAccountMap{})
	pulumi.RegisterOutputType(OrganizationDelegatedAdminAccountOutput{})
	pulumi.RegisterOutputType(OrganizationDelegatedAdminAccountArrayOutput{})
	pulumi.RegisterOutputType(OrganizationDelegatedAdminAccountMapOutput{})
}
