// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bcmdata

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ExportExport struct {
	// Data query for this specific data export. See the `dataQuery` argument reference below.
	DataQueries []ExportExportDataQuery `pulumi:"dataQueries"`
	// Description for this specific data export.
	Description *string `pulumi:"description"`
	// Destination configuration for this specific data export. See the `destinationConfigurations` argument reference below.
	DestinationConfigurations []ExportExportDestinationConfiguration `pulumi:"destinationConfigurations"`
	// Amazon Resource Name (ARN) for this export.
	ExportArn *string `pulumi:"exportArn"`
	// Name of this specific data export.
	Name string `pulumi:"name"`
	// Cadence for Amazon Web Services to update the export in your S3 bucket. See the `refreshCadence` argument reference below.
	RefreshCadences []ExportExportRefreshCadence `pulumi:"refreshCadences"`
}

// ExportExportInput is an input type that accepts ExportExportArgs and ExportExportOutput values.
// You can construct a concrete instance of `ExportExportInput` via:
//
//	ExportExportArgs{...}
type ExportExportInput interface {
	pulumi.Input

	ToExportExportOutput() ExportExportOutput
	ToExportExportOutputWithContext(context.Context) ExportExportOutput
}

type ExportExportArgs struct {
	// Data query for this specific data export. See the `dataQuery` argument reference below.
	DataQueries ExportExportDataQueryArrayInput `pulumi:"dataQueries"`
	// Description for this specific data export.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Destination configuration for this specific data export. See the `destinationConfigurations` argument reference below.
	DestinationConfigurations ExportExportDestinationConfigurationArrayInput `pulumi:"destinationConfigurations"`
	// Amazon Resource Name (ARN) for this export.
	ExportArn pulumi.StringPtrInput `pulumi:"exportArn"`
	// Name of this specific data export.
	Name pulumi.StringInput `pulumi:"name"`
	// Cadence for Amazon Web Services to update the export in your S3 bucket. See the `refreshCadence` argument reference below.
	RefreshCadences ExportExportRefreshCadenceArrayInput `pulumi:"refreshCadences"`
}

func (ExportExportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportExport)(nil)).Elem()
}

func (i ExportExportArgs) ToExportExportOutput() ExportExportOutput {
	return i.ToExportExportOutputWithContext(context.Background())
}

func (i ExportExportArgs) ToExportExportOutputWithContext(ctx context.Context) ExportExportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportExportOutput)
}

func (i ExportExportArgs) ToExportExportPtrOutput() ExportExportPtrOutput {
	return i.ToExportExportPtrOutputWithContext(context.Background())
}

func (i ExportExportArgs) ToExportExportPtrOutputWithContext(ctx context.Context) ExportExportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportExportOutput).ToExportExportPtrOutputWithContext(ctx)
}

// ExportExportPtrInput is an input type that accepts ExportExportArgs, ExportExportPtr and ExportExportPtrOutput values.
// You can construct a concrete instance of `ExportExportPtrInput` via:
//
//	        ExportExportArgs{...}
//
//	or:
//
//	        nil
type ExportExportPtrInput interface {
	pulumi.Input

	ToExportExportPtrOutput() ExportExportPtrOutput
	ToExportExportPtrOutputWithContext(context.Context) ExportExportPtrOutput
}

type exportExportPtrType ExportExportArgs

func ExportExportPtr(v *ExportExportArgs) ExportExportPtrInput {
	return (*exportExportPtrType)(v)
}

func (*exportExportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExportExport)(nil)).Elem()
}

func (i *exportExportPtrType) ToExportExportPtrOutput() ExportExportPtrOutput {
	return i.ToExportExportPtrOutputWithContext(context.Background())
}

func (i *exportExportPtrType) ToExportExportPtrOutputWithContext(ctx context.Context) ExportExportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportExportPtrOutput)
}

type ExportExportOutput struct{ *pulumi.OutputState }

func (ExportExportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportExport)(nil)).Elem()
}

func (o ExportExportOutput) ToExportExportOutput() ExportExportOutput {
	return o
}

func (o ExportExportOutput) ToExportExportOutputWithContext(ctx context.Context) ExportExportOutput {
	return o
}

func (o ExportExportOutput) ToExportExportPtrOutput() ExportExportPtrOutput {
	return o.ToExportExportPtrOutputWithContext(context.Background())
}

func (o ExportExportOutput) ToExportExportPtrOutputWithContext(ctx context.Context) ExportExportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExportExport) *ExportExport {
		return &v
	}).(ExportExportPtrOutput)
}

// Data query for this specific data export. See the `dataQuery` argument reference below.
func (o ExportExportOutput) DataQueries() ExportExportDataQueryArrayOutput {
	return o.ApplyT(func(v ExportExport) []ExportExportDataQuery { return v.DataQueries }).(ExportExportDataQueryArrayOutput)
}

// Description for this specific data export.
func (o ExportExportOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExportExport) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Destination configuration for this specific data export. See the `destinationConfigurations` argument reference below.
func (o ExportExportOutput) DestinationConfigurations() ExportExportDestinationConfigurationArrayOutput {
	return o.ApplyT(func(v ExportExport) []ExportExportDestinationConfiguration { return v.DestinationConfigurations }).(ExportExportDestinationConfigurationArrayOutput)
}

// Amazon Resource Name (ARN) for this export.
func (o ExportExportOutput) ExportArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExportExport) *string { return v.ExportArn }).(pulumi.StringPtrOutput)
}

// Name of this specific data export.
func (o ExportExportOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExportExport) string { return v.Name }).(pulumi.StringOutput)
}

// Cadence for Amazon Web Services to update the export in your S3 bucket. See the `refreshCadence` argument reference below.
func (o ExportExportOutput) RefreshCadences() ExportExportRefreshCadenceArrayOutput {
	return o.ApplyT(func(v ExportExport) []ExportExportRefreshCadence { return v.RefreshCadences }).(ExportExportRefreshCadenceArrayOutput)
}

type ExportExportPtrOutput struct{ *pulumi.OutputState }

func (ExportExportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExportExport)(nil)).Elem()
}

func (o ExportExportPtrOutput) ToExportExportPtrOutput() ExportExportPtrOutput {
	return o
}

func (o ExportExportPtrOutput) ToExportExportPtrOutputWithContext(ctx context.Context) ExportExportPtrOutput {
	return o
}

func (o ExportExportPtrOutput) Elem() ExportExportOutput {
	return o.ApplyT(func(v *ExportExport) ExportExport {
		if v != nil {
			return *v
		}
		var ret ExportExport
		return ret
	}).(ExportExportOutput)
}

// Data query for this specific data export. See the `dataQuery` argument reference below.
func (o ExportExportPtrOutput) DataQueries() ExportExportDataQueryArrayOutput {
	return o.ApplyT(func(v *ExportExport) []ExportExportDataQuery {
		if v == nil {
			return nil
		}
		return v.DataQueries
	}).(ExportExportDataQueryArrayOutput)
}

// Description for this specific data export.
func (o ExportExportPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExportExport) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

// Destination configuration for this specific data export. See the `destinationConfigurations` argument reference below.
func (o ExportExportPtrOutput) DestinationConfigurations() ExportExportDestinationConfigurationArrayOutput {
	return o.ApplyT(func(v *ExportExport) []ExportExportDestinationConfiguration {
		if v == nil {
			return nil
		}
		return v.DestinationConfigurations
	}).(ExportExportDestinationConfigurationArrayOutput)
}

// Amazon Resource Name (ARN) for this export.
func (o ExportExportPtrOutput) ExportArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExportExport) *string {
		if v == nil {
			return nil
		}
		return v.ExportArn
	}).(pulumi.StringPtrOutput)
}

// Name of this specific data export.
func (o ExportExportPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExportExport) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Cadence for Amazon Web Services to update the export in your S3 bucket. See the `refreshCadence` argument reference below.
func (o ExportExportPtrOutput) RefreshCadences() ExportExportRefreshCadenceArrayOutput {
	return o.ApplyT(func(v *ExportExport) []ExportExportRefreshCadence {
		if v == nil {
			return nil
		}
		return v.RefreshCadences
	}).(ExportExportRefreshCadenceArrayOutput)
}

type ExportExportDataQuery struct {
	// Query statement.
	QueryStatement string `pulumi:"queryStatement"`
	// Table configuration.
	TableConfigurations map[string]map[string]interface{} `pulumi:"tableConfigurations"`
}

// ExportExportDataQueryInput is an input type that accepts ExportExportDataQueryArgs and ExportExportDataQueryOutput values.
// You can construct a concrete instance of `ExportExportDataQueryInput` via:
//
//	ExportExportDataQueryArgs{...}
type ExportExportDataQueryInput interface {
	pulumi.Input

	ToExportExportDataQueryOutput() ExportExportDataQueryOutput
	ToExportExportDataQueryOutputWithContext(context.Context) ExportExportDataQueryOutput
}

type ExportExportDataQueryArgs struct {
	// Query statement.
	QueryStatement pulumi.StringInput `pulumi:"queryStatement"`
	// Table configuration.
	TableConfigurations pulumi.MapMapInput `pulumi:"tableConfigurations"`
}

func (ExportExportDataQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportExportDataQuery)(nil)).Elem()
}

func (i ExportExportDataQueryArgs) ToExportExportDataQueryOutput() ExportExportDataQueryOutput {
	return i.ToExportExportDataQueryOutputWithContext(context.Background())
}

func (i ExportExportDataQueryArgs) ToExportExportDataQueryOutputWithContext(ctx context.Context) ExportExportDataQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportExportDataQueryOutput)
}

// ExportExportDataQueryArrayInput is an input type that accepts ExportExportDataQueryArray and ExportExportDataQueryArrayOutput values.
// You can construct a concrete instance of `ExportExportDataQueryArrayInput` via:
//
//	ExportExportDataQueryArray{ ExportExportDataQueryArgs{...} }
type ExportExportDataQueryArrayInput interface {
	pulumi.Input

	ToExportExportDataQueryArrayOutput() ExportExportDataQueryArrayOutput
	ToExportExportDataQueryArrayOutputWithContext(context.Context) ExportExportDataQueryArrayOutput
}

type ExportExportDataQueryArray []ExportExportDataQueryInput

func (ExportExportDataQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExportExportDataQuery)(nil)).Elem()
}

func (i ExportExportDataQueryArray) ToExportExportDataQueryArrayOutput() ExportExportDataQueryArrayOutput {
	return i.ToExportExportDataQueryArrayOutputWithContext(context.Background())
}

func (i ExportExportDataQueryArray) ToExportExportDataQueryArrayOutputWithContext(ctx context.Context) ExportExportDataQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportExportDataQueryArrayOutput)
}

type ExportExportDataQueryOutput struct{ *pulumi.OutputState }

func (ExportExportDataQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportExportDataQuery)(nil)).Elem()
}

func (o ExportExportDataQueryOutput) ToExportExportDataQueryOutput() ExportExportDataQueryOutput {
	return o
}

func (o ExportExportDataQueryOutput) ToExportExportDataQueryOutputWithContext(ctx context.Context) ExportExportDataQueryOutput {
	return o
}

// Query statement.
func (o ExportExportDataQueryOutput) QueryStatement() pulumi.StringOutput {
	return o.ApplyT(func(v ExportExportDataQuery) string { return v.QueryStatement }).(pulumi.StringOutput)
}

// Table configuration.
func (o ExportExportDataQueryOutput) TableConfigurations() pulumi.MapMapOutput {
	return o.ApplyT(func(v ExportExportDataQuery) map[string]map[string]interface{} { return v.TableConfigurations }).(pulumi.MapMapOutput)
}

type ExportExportDataQueryArrayOutput struct{ *pulumi.OutputState }

func (ExportExportDataQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExportExportDataQuery)(nil)).Elem()
}

func (o ExportExportDataQueryArrayOutput) ToExportExportDataQueryArrayOutput() ExportExportDataQueryArrayOutput {
	return o
}

func (o ExportExportDataQueryArrayOutput) ToExportExportDataQueryArrayOutputWithContext(ctx context.Context) ExportExportDataQueryArrayOutput {
	return o
}

func (o ExportExportDataQueryArrayOutput) Index(i pulumi.IntInput) ExportExportDataQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExportExportDataQuery {
		return vs[0].([]ExportExportDataQuery)[vs[1].(int)]
	}).(ExportExportDataQueryOutput)
}

type ExportExportDestinationConfiguration struct {
	// Object that describes the destination of the data exports file. See the `s3Destination` argument reference below.
	S3Destinations []ExportExportDestinationConfigurationS3Destination `pulumi:"s3Destinations"`
}

// ExportExportDestinationConfigurationInput is an input type that accepts ExportExportDestinationConfigurationArgs and ExportExportDestinationConfigurationOutput values.
// You can construct a concrete instance of `ExportExportDestinationConfigurationInput` via:
//
//	ExportExportDestinationConfigurationArgs{...}
type ExportExportDestinationConfigurationInput interface {
	pulumi.Input

	ToExportExportDestinationConfigurationOutput() ExportExportDestinationConfigurationOutput
	ToExportExportDestinationConfigurationOutputWithContext(context.Context) ExportExportDestinationConfigurationOutput
}

type ExportExportDestinationConfigurationArgs struct {
	// Object that describes the destination of the data exports file. See the `s3Destination` argument reference below.
	S3Destinations ExportExportDestinationConfigurationS3DestinationArrayInput `pulumi:"s3Destinations"`
}

func (ExportExportDestinationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportExportDestinationConfiguration)(nil)).Elem()
}

func (i ExportExportDestinationConfigurationArgs) ToExportExportDestinationConfigurationOutput() ExportExportDestinationConfigurationOutput {
	return i.ToExportExportDestinationConfigurationOutputWithContext(context.Background())
}

func (i ExportExportDestinationConfigurationArgs) ToExportExportDestinationConfigurationOutputWithContext(ctx context.Context) ExportExportDestinationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportExportDestinationConfigurationOutput)
}

// ExportExportDestinationConfigurationArrayInput is an input type that accepts ExportExportDestinationConfigurationArray and ExportExportDestinationConfigurationArrayOutput values.
// You can construct a concrete instance of `ExportExportDestinationConfigurationArrayInput` via:
//
//	ExportExportDestinationConfigurationArray{ ExportExportDestinationConfigurationArgs{...} }
type ExportExportDestinationConfigurationArrayInput interface {
	pulumi.Input

	ToExportExportDestinationConfigurationArrayOutput() ExportExportDestinationConfigurationArrayOutput
	ToExportExportDestinationConfigurationArrayOutputWithContext(context.Context) ExportExportDestinationConfigurationArrayOutput
}

type ExportExportDestinationConfigurationArray []ExportExportDestinationConfigurationInput

func (ExportExportDestinationConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExportExportDestinationConfiguration)(nil)).Elem()
}

func (i ExportExportDestinationConfigurationArray) ToExportExportDestinationConfigurationArrayOutput() ExportExportDestinationConfigurationArrayOutput {
	return i.ToExportExportDestinationConfigurationArrayOutputWithContext(context.Background())
}

func (i ExportExportDestinationConfigurationArray) ToExportExportDestinationConfigurationArrayOutputWithContext(ctx context.Context) ExportExportDestinationConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportExportDestinationConfigurationArrayOutput)
}

type ExportExportDestinationConfigurationOutput struct{ *pulumi.OutputState }

func (ExportExportDestinationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportExportDestinationConfiguration)(nil)).Elem()
}

func (o ExportExportDestinationConfigurationOutput) ToExportExportDestinationConfigurationOutput() ExportExportDestinationConfigurationOutput {
	return o
}

func (o ExportExportDestinationConfigurationOutput) ToExportExportDestinationConfigurationOutputWithContext(ctx context.Context) ExportExportDestinationConfigurationOutput {
	return o
}

// Object that describes the destination of the data exports file. See the `s3Destination` argument reference below.
func (o ExportExportDestinationConfigurationOutput) S3Destinations() ExportExportDestinationConfigurationS3DestinationArrayOutput {
	return o.ApplyT(func(v ExportExportDestinationConfiguration) []ExportExportDestinationConfigurationS3Destination {
		return v.S3Destinations
	}).(ExportExportDestinationConfigurationS3DestinationArrayOutput)
}

type ExportExportDestinationConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ExportExportDestinationConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExportExportDestinationConfiguration)(nil)).Elem()
}

func (o ExportExportDestinationConfigurationArrayOutput) ToExportExportDestinationConfigurationArrayOutput() ExportExportDestinationConfigurationArrayOutput {
	return o
}

func (o ExportExportDestinationConfigurationArrayOutput) ToExportExportDestinationConfigurationArrayOutputWithContext(ctx context.Context) ExportExportDestinationConfigurationArrayOutput {
	return o
}

func (o ExportExportDestinationConfigurationArrayOutput) Index(i pulumi.IntInput) ExportExportDestinationConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExportExportDestinationConfiguration {
		return vs[0].([]ExportExportDestinationConfiguration)[vs[1].(int)]
	}).(ExportExportDestinationConfigurationOutput)
}

type ExportExportDestinationConfigurationS3Destination struct {
	// Name of the Amazon S3 bucket used as the destination of a data export file.
	S3Bucket string `pulumi:"s3Bucket"`
	// Output configuration for the data export. See the `s3OutputConfigurations` argument reference below.
	S3OutputConfigurations []ExportExportDestinationConfigurationS3DestinationS3OutputConfiguration `pulumi:"s3OutputConfigurations"`
	// S3 path prefix you want prepended to the name of your data export.
	S3Prefix string `pulumi:"s3Prefix"`
	// S3 bucket region.
	S3Region string `pulumi:"s3Region"`
}

// ExportExportDestinationConfigurationS3DestinationInput is an input type that accepts ExportExportDestinationConfigurationS3DestinationArgs and ExportExportDestinationConfigurationS3DestinationOutput values.
// You can construct a concrete instance of `ExportExportDestinationConfigurationS3DestinationInput` via:
//
//	ExportExportDestinationConfigurationS3DestinationArgs{...}
type ExportExportDestinationConfigurationS3DestinationInput interface {
	pulumi.Input

	ToExportExportDestinationConfigurationS3DestinationOutput() ExportExportDestinationConfigurationS3DestinationOutput
	ToExportExportDestinationConfigurationS3DestinationOutputWithContext(context.Context) ExportExportDestinationConfigurationS3DestinationOutput
}

type ExportExportDestinationConfigurationS3DestinationArgs struct {
	// Name of the Amazon S3 bucket used as the destination of a data export file.
	S3Bucket pulumi.StringInput `pulumi:"s3Bucket"`
	// Output configuration for the data export. See the `s3OutputConfigurations` argument reference below.
	S3OutputConfigurations ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayInput `pulumi:"s3OutputConfigurations"`
	// S3 path prefix you want prepended to the name of your data export.
	S3Prefix pulumi.StringInput `pulumi:"s3Prefix"`
	// S3 bucket region.
	S3Region pulumi.StringInput `pulumi:"s3Region"`
}

func (ExportExportDestinationConfigurationS3DestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportExportDestinationConfigurationS3Destination)(nil)).Elem()
}

func (i ExportExportDestinationConfigurationS3DestinationArgs) ToExportExportDestinationConfigurationS3DestinationOutput() ExportExportDestinationConfigurationS3DestinationOutput {
	return i.ToExportExportDestinationConfigurationS3DestinationOutputWithContext(context.Background())
}

func (i ExportExportDestinationConfigurationS3DestinationArgs) ToExportExportDestinationConfigurationS3DestinationOutputWithContext(ctx context.Context) ExportExportDestinationConfigurationS3DestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportExportDestinationConfigurationS3DestinationOutput)
}

// ExportExportDestinationConfigurationS3DestinationArrayInput is an input type that accepts ExportExportDestinationConfigurationS3DestinationArray and ExportExportDestinationConfigurationS3DestinationArrayOutput values.
// You can construct a concrete instance of `ExportExportDestinationConfigurationS3DestinationArrayInput` via:
//
//	ExportExportDestinationConfigurationS3DestinationArray{ ExportExportDestinationConfigurationS3DestinationArgs{...} }
type ExportExportDestinationConfigurationS3DestinationArrayInput interface {
	pulumi.Input

	ToExportExportDestinationConfigurationS3DestinationArrayOutput() ExportExportDestinationConfigurationS3DestinationArrayOutput
	ToExportExportDestinationConfigurationS3DestinationArrayOutputWithContext(context.Context) ExportExportDestinationConfigurationS3DestinationArrayOutput
}

type ExportExportDestinationConfigurationS3DestinationArray []ExportExportDestinationConfigurationS3DestinationInput

func (ExportExportDestinationConfigurationS3DestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExportExportDestinationConfigurationS3Destination)(nil)).Elem()
}

func (i ExportExportDestinationConfigurationS3DestinationArray) ToExportExportDestinationConfigurationS3DestinationArrayOutput() ExportExportDestinationConfigurationS3DestinationArrayOutput {
	return i.ToExportExportDestinationConfigurationS3DestinationArrayOutputWithContext(context.Background())
}

func (i ExportExportDestinationConfigurationS3DestinationArray) ToExportExportDestinationConfigurationS3DestinationArrayOutputWithContext(ctx context.Context) ExportExportDestinationConfigurationS3DestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportExportDestinationConfigurationS3DestinationArrayOutput)
}

type ExportExportDestinationConfigurationS3DestinationOutput struct{ *pulumi.OutputState }

func (ExportExportDestinationConfigurationS3DestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportExportDestinationConfigurationS3Destination)(nil)).Elem()
}

func (o ExportExportDestinationConfigurationS3DestinationOutput) ToExportExportDestinationConfigurationS3DestinationOutput() ExportExportDestinationConfigurationS3DestinationOutput {
	return o
}

func (o ExportExportDestinationConfigurationS3DestinationOutput) ToExportExportDestinationConfigurationS3DestinationOutputWithContext(ctx context.Context) ExportExportDestinationConfigurationS3DestinationOutput {
	return o
}

// Name of the Amazon S3 bucket used as the destination of a data export file.
func (o ExportExportDestinationConfigurationS3DestinationOutput) S3Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v ExportExportDestinationConfigurationS3Destination) string { return v.S3Bucket }).(pulumi.StringOutput)
}

// Output configuration for the data export. See the `s3OutputConfigurations` argument reference below.
func (o ExportExportDestinationConfigurationS3DestinationOutput) S3OutputConfigurations() ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayOutput {
	return o.ApplyT(func(v ExportExportDestinationConfigurationS3Destination) []ExportExportDestinationConfigurationS3DestinationS3OutputConfiguration {
		return v.S3OutputConfigurations
	}).(ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayOutput)
}

// S3 path prefix you want prepended to the name of your data export.
func (o ExportExportDestinationConfigurationS3DestinationOutput) S3Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v ExportExportDestinationConfigurationS3Destination) string { return v.S3Prefix }).(pulumi.StringOutput)
}

// S3 bucket region.
func (o ExportExportDestinationConfigurationS3DestinationOutput) S3Region() pulumi.StringOutput {
	return o.ApplyT(func(v ExportExportDestinationConfigurationS3Destination) string { return v.S3Region }).(pulumi.StringOutput)
}

type ExportExportDestinationConfigurationS3DestinationArrayOutput struct{ *pulumi.OutputState }

func (ExportExportDestinationConfigurationS3DestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExportExportDestinationConfigurationS3Destination)(nil)).Elem()
}

func (o ExportExportDestinationConfigurationS3DestinationArrayOutput) ToExportExportDestinationConfigurationS3DestinationArrayOutput() ExportExportDestinationConfigurationS3DestinationArrayOutput {
	return o
}

func (o ExportExportDestinationConfigurationS3DestinationArrayOutput) ToExportExportDestinationConfigurationS3DestinationArrayOutputWithContext(ctx context.Context) ExportExportDestinationConfigurationS3DestinationArrayOutput {
	return o
}

func (o ExportExportDestinationConfigurationS3DestinationArrayOutput) Index(i pulumi.IntInput) ExportExportDestinationConfigurationS3DestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExportExportDestinationConfigurationS3Destination {
		return vs[0].([]ExportExportDestinationConfigurationS3Destination)[vs[1].(int)]
	}).(ExportExportDestinationConfigurationS3DestinationOutput)
}

type ExportExportDestinationConfigurationS3DestinationS3OutputConfiguration struct {
	// Compression type for the data export. Valid values `GZIP`, `PARQUET`.
	Compression string `pulumi:"compression"`
	// File format for the data export. Valid values `TEXT_OR_CSV` or `PARQUET`.
	Format string `pulumi:"format"`
	// Output type for the data export. Valid value `CUSTOM`.
	OutputType string `pulumi:"outputType"`
	// The rule to follow when generating a version of the data export file. You have the choice to overwrite the previous version or to be delivered in addition to the previous versions. Overwriting exports can save on Amazon S3 storage costs. Creating new export versions allows you to track the changes in cost and usage data over time. Valid values `CREATE_NEW_REPORT` or `OVERWRITE_REPORT`.
	Overwrite string `pulumi:"overwrite"`
}

// ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationInput is an input type that accepts ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs and ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationOutput values.
// You can construct a concrete instance of `ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationInput` via:
//
//	ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs{...}
type ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationInput interface {
	pulumi.Input

	ToExportExportDestinationConfigurationS3DestinationS3OutputConfigurationOutput() ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationOutput
	ToExportExportDestinationConfigurationS3DestinationS3OutputConfigurationOutputWithContext(context.Context) ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationOutput
}

type ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs struct {
	// Compression type for the data export. Valid values `GZIP`, `PARQUET`.
	Compression pulumi.StringInput `pulumi:"compression"`
	// File format for the data export. Valid values `TEXT_OR_CSV` or `PARQUET`.
	Format pulumi.StringInput `pulumi:"format"`
	// Output type for the data export. Valid value `CUSTOM`.
	OutputType pulumi.StringInput `pulumi:"outputType"`
	// The rule to follow when generating a version of the data export file. You have the choice to overwrite the previous version or to be delivered in addition to the previous versions. Overwriting exports can save on Amazon S3 storage costs. Creating new export versions allows you to track the changes in cost and usage data over time. Valid values `CREATE_NEW_REPORT` or `OVERWRITE_REPORT`.
	Overwrite pulumi.StringInput `pulumi:"overwrite"`
}

func (ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportExportDestinationConfigurationS3DestinationS3OutputConfiguration)(nil)).Elem()
}

func (i ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs) ToExportExportDestinationConfigurationS3DestinationS3OutputConfigurationOutput() ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationOutput {
	return i.ToExportExportDestinationConfigurationS3DestinationS3OutputConfigurationOutputWithContext(context.Background())
}

func (i ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs) ToExportExportDestinationConfigurationS3DestinationS3OutputConfigurationOutputWithContext(ctx context.Context) ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationOutput)
}

// ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayInput is an input type that accepts ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArray and ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayOutput values.
// You can construct a concrete instance of `ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayInput` via:
//
//	ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArray{ ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs{...} }
type ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayInput interface {
	pulumi.Input

	ToExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayOutput() ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayOutput
	ToExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayOutputWithContext(context.Context) ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayOutput
}

type ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArray []ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationInput

func (ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExportExportDestinationConfigurationS3DestinationS3OutputConfiguration)(nil)).Elem()
}

func (i ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArray) ToExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayOutput() ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayOutput {
	return i.ToExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayOutputWithContext(context.Background())
}

func (i ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArray) ToExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayOutputWithContext(ctx context.Context) ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayOutput)
}

type ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationOutput struct{ *pulumi.OutputState }

func (ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportExportDestinationConfigurationS3DestinationS3OutputConfiguration)(nil)).Elem()
}

func (o ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationOutput) ToExportExportDestinationConfigurationS3DestinationS3OutputConfigurationOutput() ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationOutput {
	return o
}

func (o ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationOutput) ToExportExportDestinationConfigurationS3DestinationS3OutputConfigurationOutputWithContext(ctx context.Context) ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationOutput {
	return o
}

// Compression type for the data export. Valid values `GZIP`, `PARQUET`.
func (o ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationOutput) Compression() pulumi.StringOutput {
	return o.ApplyT(func(v ExportExportDestinationConfigurationS3DestinationS3OutputConfiguration) string {
		return v.Compression
	}).(pulumi.StringOutput)
}

// File format for the data export. Valid values `TEXT_OR_CSV` or `PARQUET`.
func (o ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v ExportExportDestinationConfigurationS3DestinationS3OutputConfiguration) string { return v.Format }).(pulumi.StringOutput)
}

// Output type for the data export. Valid value `CUSTOM`.
func (o ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationOutput) OutputType() pulumi.StringOutput {
	return o.ApplyT(func(v ExportExportDestinationConfigurationS3DestinationS3OutputConfiguration) string {
		return v.OutputType
	}).(pulumi.StringOutput)
}

// The rule to follow when generating a version of the data export file. You have the choice to overwrite the previous version or to be delivered in addition to the previous versions. Overwriting exports can save on Amazon S3 storage costs. Creating new export versions allows you to track the changes in cost and usage data over time. Valid values `CREATE_NEW_REPORT` or `OVERWRITE_REPORT`.
func (o ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationOutput) Overwrite() pulumi.StringOutput {
	return o.ApplyT(func(v ExportExportDestinationConfigurationS3DestinationS3OutputConfiguration) string {
		return v.Overwrite
	}).(pulumi.StringOutput)
}

type ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExportExportDestinationConfigurationS3DestinationS3OutputConfiguration)(nil)).Elem()
}

func (o ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayOutput) ToExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayOutput() ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayOutput {
	return o
}

func (o ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayOutput) ToExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayOutputWithContext(ctx context.Context) ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayOutput {
	return o
}

func (o ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayOutput) Index(i pulumi.IntInput) ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExportExportDestinationConfigurationS3DestinationS3OutputConfiguration {
		return vs[0].([]ExportExportDestinationConfigurationS3DestinationS3OutputConfiguration)[vs[1].(int)]
	}).(ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationOutput)
}

type ExportExportRefreshCadence struct {
	// Frequency that data exports are updated. The export refreshes each time the source data updates, up to three times daily. Valid values `SYNCHRONOUS`.
	Frequency string `pulumi:"frequency"`
}

// ExportExportRefreshCadenceInput is an input type that accepts ExportExportRefreshCadenceArgs and ExportExportRefreshCadenceOutput values.
// You can construct a concrete instance of `ExportExportRefreshCadenceInput` via:
//
//	ExportExportRefreshCadenceArgs{...}
type ExportExportRefreshCadenceInput interface {
	pulumi.Input

	ToExportExportRefreshCadenceOutput() ExportExportRefreshCadenceOutput
	ToExportExportRefreshCadenceOutputWithContext(context.Context) ExportExportRefreshCadenceOutput
}

type ExportExportRefreshCadenceArgs struct {
	// Frequency that data exports are updated. The export refreshes each time the source data updates, up to three times daily. Valid values `SYNCHRONOUS`.
	Frequency pulumi.StringInput `pulumi:"frequency"`
}

func (ExportExportRefreshCadenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportExportRefreshCadence)(nil)).Elem()
}

func (i ExportExportRefreshCadenceArgs) ToExportExportRefreshCadenceOutput() ExportExportRefreshCadenceOutput {
	return i.ToExportExportRefreshCadenceOutputWithContext(context.Background())
}

func (i ExportExportRefreshCadenceArgs) ToExportExportRefreshCadenceOutputWithContext(ctx context.Context) ExportExportRefreshCadenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportExportRefreshCadenceOutput)
}

// ExportExportRefreshCadenceArrayInput is an input type that accepts ExportExportRefreshCadenceArray and ExportExportRefreshCadenceArrayOutput values.
// You can construct a concrete instance of `ExportExportRefreshCadenceArrayInput` via:
//
//	ExportExportRefreshCadenceArray{ ExportExportRefreshCadenceArgs{...} }
type ExportExportRefreshCadenceArrayInput interface {
	pulumi.Input

	ToExportExportRefreshCadenceArrayOutput() ExportExportRefreshCadenceArrayOutput
	ToExportExportRefreshCadenceArrayOutputWithContext(context.Context) ExportExportRefreshCadenceArrayOutput
}

type ExportExportRefreshCadenceArray []ExportExportRefreshCadenceInput

func (ExportExportRefreshCadenceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExportExportRefreshCadence)(nil)).Elem()
}

func (i ExportExportRefreshCadenceArray) ToExportExportRefreshCadenceArrayOutput() ExportExportRefreshCadenceArrayOutput {
	return i.ToExportExportRefreshCadenceArrayOutputWithContext(context.Background())
}

func (i ExportExportRefreshCadenceArray) ToExportExportRefreshCadenceArrayOutputWithContext(ctx context.Context) ExportExportRefreshCadenceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportExportRefreshCadenceArrayOutput)
}

type ExportExportRefreshCadenceOutput struct{ *pulumi.OutputState }

func (ExportExportRefreshCadenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportExportRefreshCadence)(nil)).Elem()
}

func (o ExportExportRefreshCadenceOutput) ToExportExportRefreshCadenceOutput() ExportExportRefreshCadenceOutput {
	return o
}

func (o ExportExportRefreshCadenceOutput) ToExportExportRefreshCadenceOutputWithContext(ctx context.Context) ExportExportRefreshCadenceOutput {
	return o
}

// Frequency that data exports are updated. The export refreshes each time the source data updates, up to three times daily. Valid values `SYNCHRONOUS`.
func (o ExportExportRefreshCadenceOutput) Frequency() pulumi.StringOutput {
	return o.ApplyT(func(v ExportExportRefreshCadence) string { return v.Frequency }).(pulumi.StringOutput)
}

type ExportExportRefreshCadenceArrayOutput struct{ *pulumi.OutputState }

func (ExportExportRefreshCadenceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExportExportRefreshCadence)(nil)).Elem()
}

func (o ExportExportRefreshCadenceArrayOutput) ToExportExportRefreshCadenceArrayOutput() ExportExportRefreshCadenceArrayOutput {
	return o
}

func (o ExportExportRefreshCadenceArrayOutput) ToExportExportRefreshCadenceArrayOutputWithContext(ctx context.Context) ExportExportRefreshCadenceArrayOutput {
	return o
}

func (o ExportExportRefreshCadenceArrayOutput) Index(i pulumi.IntInput) ExportExportRefreshCadenceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExportExportRefreshCadence {
		return vs[0].([]ExportExportRefreshCadence)[vs[1].(int)]
	}).(ExportExportRefreshCadenceOutput)
}

type ExportTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// ExportTimeoutsInput is an input type that accepts ExportTimeoutsArgs and ExportTimeoutsOutput values.
// You can construct a concrete instance of `ExportTimeoutsInput` via:
//
//	ExportTimeoutsArgs{...}
type ExportTimeoutsInput interface {
	pulumi.Input

	ToExportTimeoutsOutput() ExportTimeoutsOutput
	ToExportTimeoutsOutputWithContext(context.Context) ExportTimeoutsOutput
}

type ExportTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (ExportTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportTimeouts)(nil)).Elem()
}

func (i ExportTimeoutsArgs) ToExportTimeoutsOutput() ExportTimeoutsOutput {
	return i.ToExportTimeoutsOutputWithContext(context.Background())
}

func (i ExportTimeoutsArgs) ToExportTimeoutsOutputWithContext(ctx context.Context) ExportTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportTimeoutsOutput)
}

func (i ExportTimeoutsArgs) ToExportTimeoutsPtrOutput() ExportTimeoutsPtrOutput {
	return i.ToExportTimeoutsPtrOutputWithContext(context.Background())
}

func (i ExportTimeoutsArgs) ToExportTimeoutsPtrOutputWithContext(ctx context.Context) ExportTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportTimeoutsOutput).ToExportTimeoutsPtrOutputWithContext(ctx)
}

// ExportTimeoutsPtrInput is an input type that accepts ExportTimeoutsArgs, ExportTimeoutsPtr and ExportTimeoutsPtrOutput values.
// You can construct a concrete instance of `ExportTimeoutsPtrInput` via:
//
//	        ExportTimeoutsArgs{...}
//
//	or:
//
//	        nil
type ExportTimeoutsPtrInput interface {
	pulumi.Input

	ToExportTimeoutsPtrOutput() ExportTimeoutsPtrOutput
	ToExportTimeoutsPtrOutputWithContext(context.Context) ExportTimeoutsPtrOutput
}

type exportTimeoutsPtrType ExportTimeoutsArgs

func ExportTimeoutsPtr(v *ExportTimeoutsArgs) ExportTimeoutsPtrInput {
	return (*exportTimeoutsPtrType)(v)
}

func (*exportTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExportTimeouts)(nil)).Elem()
}

func (i *exportTimeoutsPtrType) ToExportTimeoutsPtrOutput() ExportTimeoutsPtrOutput {
	return i.ToExportTimeoutsPtrOutputWithContext(context.Background())
}

func (i *exportTimeoutsPtrType) ToExportTimeoutsPtrOutputWithContext(ctx context.Context) ExportTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportTimeoutsPtrOutput)
}

type ExportTimeoutsOutput struct{ *pulumi.OutputState }

func (ExportTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportTimeouts)(nil)).Elem()
}

func (o ExportTimeoutsOutput) ToExportTimeoutsOutput() ExportTimeoutsOutput {
	return o
}

func (o ExportTimeoutsOutput) ToExportTimeoutsOutputWithContext(ctx context.Context) ExportTimeoutsOutput {
	return o
}

func (o ExportTimeoutsOutput) ToExportTimeoutsPtrOutput() ExportTimeoutsPtrOutput {
	return o.ToExportTimeoutsPtrOutputWithContext(context.Background())
}

func (o ExportTimeoutsOutput) ToExportTimeoutsPtrOutputWithContext(ctx context.Context) ExportTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExportTimeouts) *ExportTimeouts {
		return &v
	}).(ExportTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ExportTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExportTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ExportTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExportTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type ExportTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (ExportTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExportTimeouts)(nil)).Elem()
}

func (o ExportTimeoutsPtrOutput) ToExportTimeoutsPtrOutput() ExportTimeoutsPtrOutput {
	return o
}

func (o ExportTimeoutsPtrOutput) ToExportTimeoutsPtrOutputWithContext(ctx context.Context) ExportTimeoutsPtrOutput {
	return o
}

func (o ExportTimeoutsPtrOutput) Elem() ExportTimeoutsOutput {
	return o.ApplyT(func(v *ExportTimeouts) ExportTimeouts {
		if v != nil {
			return *v
		}
		var ret ExportTimeouts
		return ret
	}).(ExportTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ExportTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExportTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ExportTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExportTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExportExportInput)(nil)).Elem(), ExportExportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExportExportPtrInput)(nil)).Elem(), ExportExportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExportExportDataQueryInput)(nil)).Elem(), ExportExportDataQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExportExportDataQueryArrayInput)(nil)).Elem(), ExportExportDataQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExportExportDestinationConfigurationInput)(nil)).Elem(), ExportExportDestinationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExportExportDestinationConfigurationArrayInput)(nil)).Elem(), ExportExportDestinationConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExportExportDestinationConfigurationS3DestinationInput)(nil)).Elem(), ExportExportDestinationConfigurationS3DestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExportExportDestinationConfigurationS3DestinationArrayInput)(nil)).Elem(), ExportExportDestinationConfigurationS3DestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationInput)(nil)).Elem(), ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayInput)(nil)).Elem(), ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExportExportRefreshCadenceInput)(nil)).Elem(), ExportExportRefreshCadenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExportExportRefreshCadenceArrayInput)(nil)).Elem(), ExportExportRefreshCadenceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExportTimeoutsInput)(nil)).Elem(), ExportTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExportTimeoutsPtrInput)(nil)).Elem(), ExportTimeoutsArgs{})
	pulumi.RegisterOutputType(ExportExportOutput{})
	pulumi.RegisterOutputType(ExportExportPtrOutput{})
	pulumi.RegisterOutputType(ExportExportDataQueryOutput{})
	pulumi.RegisterOutputType(ExportExportDataQueryArrayOutput{})
	pulumi.RegisterOutputType(ExportExportDestinationConfigurationOutput{})
	pulumi.RegisterOutputType(ExportExportDestinationConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ExportExportDestinationConfigurationS3DestinationOutput{})
	pulumi.RegisterOutputType(ExportExportDestinationConfigurationS3DestinationArrayOutput{})
	pulumi.RegisterOutputType(ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationOutput{})
	pulumi.RegisterOutputType(ExportExportDestinationConfigurationS3DestinationS3OutputConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ExportExportRefreshCadenceOutput{})
	pulumi.RegisterOutputType(ExportExportRefreshCadenceArrayOutput{})
	pulumi.RegisterOutputType(ExportTimeoutsOutput{})
	pulumi.RegisterOutputType(ExportTimeoutsPtrOutput{})
}
