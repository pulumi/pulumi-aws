// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53recoveryreadiness

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ResourceSetResource struct {
	ComponentId *string `pulumi:"componentId"`
	// Component for DNS/Routing Control Readiness Checks.
	DnsTargetResource *ResourceSetResourceDnsTargetResource `pulumi:"dnsTargetResource"`
	// Recovery group ARN or cell ARN that contains this resource set.
	ReadinessScopes []string `pulumi:"readinessScopes"`
	// ARN of the resource.
	ResourceArn *string `pulumi:"resourceArn"`
}

// ResourceSetResourceInput is an input type that accepts ResourceSetResourceArgs and ResourceSetResourceOutput values.
// You can construct a concrete instance of `ResourceSetResourceInput` via:
//
//          ResourceSetResourceArgs{...}
type ResourceSetResourceInput interface {
	pulumi.Input

	ToResourceSetResourceOutput() ResourceSetResourceOutput
	ToResourceSetResourceOutputWithContext(context.Context) ResourceSetResourceOutput
}

type ResourceSetResourceArgs struct {
	ComponentId pulumi.StringPtrInput `pulumi:"componentId"`
	// Component for DNS/Routing Control Readiness Checks.
	DnsTargetResource ResourceSetResourceDnsTargetResourcePtrInput `pulumi:"dnsTargetResource"`
	// Recovery group ARN or cell ARN that contains this resource set.
	ReadinessScopes pulumi.StringArrayInput `pulumi:"readinessScopes"`
	// ARN of the resource.
	ResourceArn pulumi.StringPtrInput `pulumi:"resourceArn"`
}

func (ResourceSetResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSetResource)(nil)).Elem()
}

func (i ResourceSetResourceArgs) ToResourceSetResourceOutput() ResourceSetResourceOutput {
	return i.ToResourceSetResourceOutputWithContext(context.Background())
}

func (i ResourceSetResourceArgs) ToResourceSetResourceOutputWithContext(ctx context.Context) ResourceSetResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetResourceOutput)
}

// ResourceSetResourceArrayInput is an input type that accepts ResourceSetResourceArray and ResourceSetResourceArrayOutput values.
// You can construct a concrete instance of `ResourceSetResourceArrayInput` via:
//
//          ResourceSetResourceArray{ ResourceSetResourceArgs{...} }
type ResourceSetResourceArrayInput interface {
	pulumi.Input

	ToResourceSetResourceArrayOutput() ResourceSetResourceArrayOutput
	ToResourceSetResourceArrayOutputWithContext(context.Context) ResourceSetResourceArrayOutput
}

type ResourceSetResourceArray []ResourceSetResourceInput

func (ResourceSetResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceSetResource)(nil)).Elem()
}

func (i ResourceSetResourceArray) ToResourceSetResourceArrayOutput() ResourceSetResourceArrayOutput {
	return i.ToResourceSetResourceArrayOutputWithContext(context.Background())
}

func (i ResourceSetResourceArray) ToResourceSetResourceArrayOutputWithContext(ctx context.Context) ResourceSetResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetResourceArrayOutput)
}

type ResourceSetResourceOutput struct{ *pulumi.OutputState }

func (ResourceSetResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSetResource)(nil)).Elem()
}

func (o ResourceSetResourceOutput) ToResourceSetResourceOutput() ResourceSetResourceOutput {
	return o
}

func (o ResourceSetResourceOutput) ToResourceSetResourceOutputWithContext(ctx context.Context) ResourceSetResourceOutput {
	return o
}

func (o ResourceSetResourceOutput) ComponentId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSetResource) *string { return v.ComponentId }).(pulumi.StringPtrOutput)
}

// Component for DNS/Routing Control Readiness Checks.
func (o ResourceSetResourceOutput) DnsTargetResource() ResourceSetResourceDnsTargetResourcePtrOutput {
	return o.ApplyT(func(v ResourceSetResource) *ResourceSetResourceDnsTargetResource { return v.DnsTargetResource }).(ResourceSetResourceDnsTargetResourcePtrOutput)
}

// Recovery group ARN or cell ARN that contains this resource set.
func (o ResourceSetResourceOutput) ReadinessScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceSetResource) []string { return v.ReadinessScopes }).(pulumi.StringArrayOutput)
}

// ARN of the resource.
func (o ResourceSetResourceOutput) ResourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSetResource) *string { return v.ResourceArn }).(pulumi.StringPtrOutput)
}

type ResourceSetResourceArrayOutput struct{ *pulumi.OutputState }

func (ResourceSetResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceSetResource)(nil)).Elem()
}

func (o ResourceSetResourceArrayOutput) ToResourceSetResourceArrayOutput() ResourceSetResourceArrayOutput {
	return o
}

func (o ResourceSetResourceArrayOutput) ToResourceSetResourceArrayOutputWithContext(ctx context.Context) ResourceSetResourceArrayOutput {
	return o
}

func (o ResourceSetResourceArrayOutput) Index(i pulumi.IntInput) ResourceSetResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceSetResource {
		return vs[0].([]ResourceSetResource)[vs[1].(int)]
	}).(ResourceSetResourceOutput)
}

type ResourceSetResourceDnsTargetResource struct {
	// Domain name that is targeted.
	DomainName string `pulumi:"domainName"`
	// Hosted Zone ARN that contains the DNS record with the provided name of target resource.
	HostedZoneArn *string `pulumi:"hostedZoneArn"`
	// Resource record set ID that is targeted.
	RecordSetId *string `pulumi:"recordSetId"`
	// Type of DNS Record of target resource.
	RecordType *string `pulumi:"recordType"`
	// Target resource the R53 record specified with the above params points to.
	TargetResource *ResourceSetResourceDnsTargetResourceTargetResource `pulumi:"targetResource"`
}

// ResourceSetResourceDnsTargetResourceInput is an input type that accepts ResourceSetResourceDnsTargetResourceArgs and ResourceSetResourceDnsTargetResourceOutput values.
// You can construct a concrete instance of `ResourceSetResourceDnsTargetResourceInput` via:
//
//          ResourceSetResourceDnsTargetResourceArgs{...}
type ResourceSetResourceDnsTargetResourceInput interface {
	pulumi.Input

	ToResourceSetResourceDnsTargetResourceOutput() ResourceSetResourceDnsTargetResourceOutput
	ToResourceSetResourceDnsTargetResourceOutputWithContext(context.Context) ResourceSetResourceDnsTargetResourceOutput
}

type ResourceSetResourceDnsTargetResourceArgs struct {
	// Domain name that is targeted.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// Hosted Zone ARN that contains the DNS record with the provided name of target resource.
	HostedZoneArn pulumi.StringPtrInput `pulumi:"hostedZoneArn"`
	// Resource record set ID that is targeted.
	RecordSetId pulumi.StringPtrInput `pulumi:"recordSetId"`
	// Type of DNS Record of target resource.
	RecordType pulumi.StringPtrInput `pulumi:"recordType"`
	// Target resource the R53 record specified with the above params points to.
	TargetResource ResourceSetResourceDnsTargetResourceTargetResourcePtrInput `pulumi:"targetResource"`
}

func (ResourceSetResourceDnsTargetResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSetResourceDnsTargetResource)(nil)).Elem()
}

func (i ResourceSetResourceDnsTargetResourceArgs) ToResourceSetResourceDnsTargetResourceOutput() ResourceSetResourceDnsTargetResourceOutput {
	return i.ToResourceSetResourceDnsTargetResourceOutputWithContext(context.Background())
}

func (i ResourceSetResourceDnsTargetResourceArgs) ToResourceSetResourceDnsTargetResourceOutputWithContext(ctx context.Context) ResourceSetResourceDnsTargetResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetResourceDnsTargetResourceOutput)
}

func (i ResourceSetResourceDnsTargetResourceArgs) ToResourceSetResourceDnsTargetResourcePtrOutput() ResourceSetResourceDnsTargetResourcePtrOutput {
	return i.ToResourceSetResourceDnsTargetResourcePtrOutputWithContext(context.Background())
}

func (i ResourceSetResourceDnsTargetResourceArgs) ToResourceSetResourceDnsTargetResourcePtrOutputWithContext(ctx context.Context) ResourceSetResourceDnsTargetResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetResourceDnsTargetResourceOutput).ToResourceSetResourceDnsTargetResourcePtrOutputWithContext(ctx)
}

// ResourceSetResourceDnsTargetResourcePtrInput is an input type that accepts ResourceSetResourceDnsTargetResourceArgs, ResourceSetResourceDnsTargetResourcePtr and ResourceSetResourceDnsTargetResourcePtrOutput values.
// You can construct a concrete instance of `ResourceSetResourceDnsTargetResourcePtrInput` via:
//
//          ResourceSetResourceDnsTargetResourceArgs{...}
//
//  or:
//
//          nil
type ResourceSetResourceDnsTargetResourcePtrInput interface {
	pulumi.Input

	ToResourceSetResourceDnsTargetResourcePtrOutput() ResourceSetResourceDnsTargetResourcePtrOutput
	ToResourceSetResourceDnsTargetResourcePtrOutputWithContext(context.Context) ResourceSetResourceDnsTargetResourcePtrOutput
}

type resourceSetResourceDnsTargetResourcePtrType ResourceSetResourceDnsTargetResourceArgs

func ResourceSetResourceDnsTargetResourcePtr(v *ResourceSetResourceDnsTargetResourceArgs) ResourceSetResourceDnsTargetResourcePtrInput {
	return (*resourceSetResourceDnsTargetResourcePtrType)(v)
}

func (*resourceSetResourceDnsTargetResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSetResourceDnsTargetResource)(nil)).Elem()
}

func (i *resourceSetResourceDnsTargetResourcePtrType) ToResourceSetResourceDnsTargetResourcePtrOutput() ResourceSetResourceDnsTargetResourcePtrOutput {
	return i.ToResourceSetResourceDnsTargetResourcePtrOutputWithContext(context.Background())
}

func (i *resourceSetResourceDnsTargetResourcePtrType) ToResourceSetResourceDnsTargetResourcePtrOutputWithContext(ctx context.Context) ResourceSetResourceDnsTargetResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetResourceDnsTargetResourcePtrOutput)
}

type ResourceSetResourceDnsTargetResourceOutput struct{ *pulumi.OutputState }

func (ResourceSetResourceDnsTargetResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSetResourceDnsTargetResource)(nil)).Elem()
}

func (o ResourceSetResourceDnsTargetResourceOutput) ToResourceSetResourceDnsTargetResourceOutput() ResourceSetResourceDnsTargetResourceOutput {
	return o
}

func (o ResourceSetResourceDnsTargetResourceOutput) ToResourceSetResourceDnsTargetResourceOutputWithContext(ctx context.Context) ResourceSetResourceDnsTargetResourceOutput {
	return o
}

func (o ResourceSetResourceDnsTargetResourceOutput) ToResourceSetResourceDnsTargetResourcePtrOutput() ResourceSetResourceDnsTargetResourcePtrOutput {
	return o.ToResourceSetResourceDnsTargetResourcePtrOutputWithContext(context.Background())
}

func (o ResourceSetResourceDnsTargetResourceOutput) ToResourceSetResourceDnsTargetResourcePtrOutputWithContext(ctx context.Context) ResourceSetResourceDnsTargetResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceSetResourceDnsTargetResource) *ResourceSetResourceDnsTargetResource {
		return &v
	}).(ResourceSetResourceDnsTargetResourcePtrOutput)
}

// Domain name that is targeted.
func (o ResourceSetResourceDnsTargetResourceOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceSetResourceDnsTargetResource) string { return v.DomainName }).(pulumi.StringOutput)
}

// Hosted Zone ARN that contains the DNS record with the provided name of target resource.
func (o ResourceSetResourceDnsTargetResourceOutput) HostedZoneArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSetResourceDnsTargetResource) *string { return v.HostedZoneArn }).(pulumi.StringPtrOutput)
}

// Resource record set ID that is targeted.
func (o ResourceSetResourceDnsTargetResourceOutput) RecordSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSetResourceDnsTargetResource) *string { return v.RecordSetId }).(pulumi.StringPtrOutput)
}

// Type of DNS Record of target resource.
func (o ResourceSetResourceDnsTargetResourceOutput) RecordType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSetResourceDnsTargetResource) *string { return v.RecordType }).(pulumi.StringPtrOutput)
}

// Target resource the R53 record specified with the above params points to.
func (o ResourceSetResourceDnsTargetResourceOutput) TargetResource() ResourceSetResourceDnsTargetResourceTargetResourcePtrOutput {
	return o.ApplyT(func(v ResourceSetResourceDnsTargetResource) *ResourceSetResourceDnsTargetResourceTargetResource {
		return v.TargetResource
	}).(ResourceSetResourceDnsTargetResourceTargetResourcePtrOutput)
}

type ResourceSetResourceDnsTargetResourcePtrOutput struct{ *pulumi.OutputState }

func (ResourceSetResourceDnsTargetResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSetResourceDnsTargetResource)(nil)).Elem()
}

func (o ResourceSetResourceDnsTargetResourcePtrOutput) ToResourceSetResourceDnsTargetResourcePtrOutput() ResourceSetResourceDnsTargetResourcePtrOutput {
	return o
}

func (o ResourceSetResourceDnsTargetResourcePtrOutput) ToResourceSetResourceDnsTargetResourcePtrOutputWithContext(ctx context.Context) ResourceSetResourceDnsTargetResourcePtrOutput {
	return o
}

func (o ResourceSetResourceDnsTargetResourcePtrOutput) Elem() ResourceSetResourceDnsTargetResourceOutput {
	return o.ApplyT(func(v *ResourceSetResourceDnsTargetResource) ResourceSetResourceDnsTargetResource {
		if v != nil {
			return *v
		}
		var ret ResourceSetResourceDnsTargetResource
		return ret
	}).(ResourceSetResourceDnsTargetResourceOutput)
}

// Domain name that is targeted.
func (o ResourceSetResourceDnsTargetResourcePtrOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSetResourceDnsTargetResource) *string {
		if v == nil {
			return nil
		}
		return &v.DomainName
	}).(pulumi.StringPtrOutput)
}

// Hosted Zone ARN that contains the DNS record with the provided name of target resource.
func (o ResourceSetResourceDnsTargetResourcePtrOutput) HostedZoneArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSetResourceDnsTargetResource) *string {
		if v == nil {
			return nil
		}
		return v.HostedZoneArn
	}).(pulumi.StringPtrOutput)
}

// Resource record set ID that is targeted.
func (o ResourceSetResourceDnsTargetResourcePtrOutput) RecordSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSetResourceDnsTargetResource) *string {
		if v == nil {
			return nil
		}
		return v.RecordSetId
	}).(pulumi.StringPtrOutput)
}

// Type of DNS Record of target resource.
func (o ResourceSetResourceDnsTargetResourcePtrOutput) RecordType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSetResourceDnsTargetResource) *string {
		if v == nil {
			return nil
		}
		return v.RecordType
	}).(pulumi.StringPtrOutput)
}

// Target resource the R53 record specified with the above params points to.
func (o ResourceSetResourceDnsTargetResourcePtrOutput) TargetResource() ResourceSetResourceDnsTargetResourceTargetResourcePtrOutput {
	return o.ApplyT(func(v *ResourceSetResourceDnsTargetResource) *ResourceSetResourceDnsTargetResourceTargetResource {
		if v == nil {
			return nil
		}
		return v.TargetResource
	}).(ResourceSetResourceDnsTargetResourceTargetResourcePtrOutput)
}

type ResourceSetResourceDnsTargetResourceTargetResource struct {
	// NLB resource a DNS Target Resource points to. Required if `r53Resource` is not set.
	NlbResource *ResourceSetResourceDnsTargetResourceTargetResourceNlbResource `pulumi:"nlbResource"`
	// Route53 resource a DNS Target Resource record points to.
	R53Resource *ResourceSetResourceDnsTargetResourceTargetResourceR53Resource `pulumi:"r53Resource"`
}

// ResourceSetResourceDnsTargetResourceTargetResourceInput is an input type that accepts ResourceSetResourceDnsTargetResourceTargetResourceArgs and ResourceSetResourceDnsTargetResourceTargetResourceOutput values.
// You can construct a concrete instance of `ResourceSetResourceDnsTargetResourceTargetResourceInput` via:
//
//          ResourceSetResourceDnsTargetResourceTargetResourceArgs{...}
type ResourceSetResourceDnsTargetResourceTargetResourceInput interface {
	pulumi.Input

	ToResourceSetResourceDnsTargetResourceTargetResourceOutput() ResourceSetResourceDnsTargetResourceTargetResourceOutput
	ToResourceSetResourceDnsTargetResourceTargetResourceOutputWithContext(context.Context) ResourceSetResourceDnsTargetResourceTargetResourceOutput
}

type ResourceSetResourceDnsTargetResourceTargetResourceArgs struct {
	// NLB resource a DNS Target Resource points to. Required if `r53Resource` is not set.
	NlbResource ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrInput `pulumi:"nlbResource"`
	// Route53 resource a DNS Target Resource record points to.
	R53Resource ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrInput `pulumi:"r53Resource"`
}

func (ResourceSetResourceDnsTargetResourceTargetResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSetResourceDnsTargetResourceTargetResource)(nil)).Elem()
}

func (i ResourceSetResourceDnsTargetResourceTargetResourceArgs) ToResourceSetResourceDnsTargetResourceTargetResourceOutput() ResourceSetResourceDnsTargetResourceTargetResourceOutput {
	return i.ToResourceSetResourceDnsTargetResourceTargetResourceOutputWithContext(context.Background())
}

func (i ResourceSetResourceDnsTargetResourceTargetResourceArgs) ToResourceSetResourceDnsTargetResourceTargetResourceOutputWithContext(ctx context.Context) ResourceSetResourceDnsTargetResourceTargetResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetResourceDnsTargetResourceTargetResourceOutput)
}

func (i ResourceSetResourceDnsTargetResourceTargetResourceArgs) ToResourceSetResourceDnsTargetResourceTargetResourcePtrOutput() ResourceSetResourceDnsTargetResourceTargetResourcePtrOutput {
	return i.ToResourceSetResourceDnsTargetResourceTargetResourcePtrOutputWithContext(context.Background())
}

func (i ResourceSetResourceDnsTargetResourceTargetResourceArgs) ToResourceSetResourceDnsTargetResourceTargetResourcePtrOutputWithContext(ctx context.Context) ResourceSetResourceDnsTargetResourceTargetResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetResourceDnsTargetResourceTargetResourceOutput).ToResourceSetResourceDnsTargetResourceTargetResourcePtrOutputWithContext(ctx)
}

// ResourceSetResourceDnsTargetResourceTargetResourcePtrInput is an input type that accepts ResourceSetResourceDnsTargetResourceTargetResourceArgs, ResourceSetResourceDnsTargetResourceTargetResourcePtr and ResourceSetResourceDnsTargetResourceTargetResourcePtrOutput values.
// You can construct a concrete instance of `ResourceSetResourceDnsTargetResourceTargetResourcePtrInput` via:
//
//          ResourceSetResourceDnsTargetResourceTargetResourceArgs{...}
//
//  or:
//
//          nil
type ResourceSetResourceDnsTargetResourceTargetResourcePtrInput interface {
	pulumi.Input

	ToResourceSetResourceDnsTargetResourceTargetResourcePtrOutput() ResourceSetResourceDnsTargetResourceTargetResourcePtrOutput
	ToResourceSetResourceDnsTargetResourceTargetResourcePtrOutputWithContext(context.Context) ResourceSetResourceDnsTargetResourceTargetResourcePtrOutput
}

type resourceSetResourceDnsTargetResourceTargetResourcePtrType ResourceSetResourceDnsTargetResourceTargetResourceArgs

func ResourceSetResourceDnsTargetResourceTargetResourcePtr(v *ResourceSetResourceDnsTargetResourceTargetResourceArgs) ResourceSetResourceDnsTargetResourceTargetResourcePtrInput {
	return (*resourceSetResourceDnsTargetResourceTargetResourcePtrType)(v)
}

func (*resourceSetResourceDnsTargetResourceTargetResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSetResourceDnsTargetResourceTargetResource)(nil)).Elem()
}

func (i *resourceSetResourceDnsTargetResourceTargetResourcePtrType) ToResourceSetResourceDnsTargetResourceTargetResourcePtrOutput() ResourceSetResourceDnsTargetResourceTargetResourcePtrOutput {
	return i.ToResourceSetResourceDnsTargetResourceTargetResourcePtrOutputWithContext(context.Background())
}

func (i *resourceSetResourceDnsTargetResourceTargetResourcePtrType) ToResourceSetResourceDnsTargetResourceTargetResourcePtrOutputWithContext(ctx context.Context) ResourceSetResourceDnsTargetResourceTargetResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetResourceDnsTargetResourceTargetResourcePtrOutput)
}

type ResourceSetResourceDnsTargetResourceTargetResourceOutput struct{ *pulumi.OutputState }

func (ResourceSetResourceDnsTargetResourceTargetResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSetResourceDnsTargetResourceTargetResource)(nil)).Elem()
}

func (o ResourceSetResourceDnsTargetResourceTargetResourceOutput) ToResourceSetResourceDnsTargetResourceTargetResourceOutput() ResourceSetResourceDnsTargetResourceTargetResourceOutput {
	return o
}

func (o ResourceSetResourceDnsTargetResourceTargetResourceOutput) ToResourceSetResourceDnsTargetResourceTargetResourceOutputWithContext(ctx context.Context) ResourceSetResourceDnsTargetResourceTargetResourceOutput {
	return o
}

func (o ResourceSetResourceDnsTargetResourceTargetResourceOutput) ToResourceSetResourceDnsTargetResourceTargetResourcePtrOutput() ResourceSetResourceDnsTargetResourceTargetResourcePtrOutput {
	return o.ToResourceSetResourceDnsTargetResourceTargetResourcePtrOutputWithContext(context.Background())
}

func (o ResourceSetResourceDnsTargetResourceTargetResourceOutput) ToResourceSetResourceDnsTargetResourceTargetResourcePtrOutputWithContext(ctx context.Context) ResourceSetResourceDnsTargetResourceTargetResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceSetResourceDnsTargetResourceTargetResource) *ResourceSetResourceDnsTargetResourceTargetResource {
		return &v
	}).(ResourceSetResourceDnsTargetResourceTargetResourcePtrOutput)
}

// NLB resource a DNS Target Resource points to. Required if `r53Resource` is not set.
func (o ResourceSetResourceDnsTargetResourceTargetResourceOutput) NlbResource() ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput {
	return o.ApplyT(func(v ResourceSetResourceDnsTargetResourceTargetResource) *ResourceSetResourceDnsTargetResourceTargetResourceNlbResource {
		return v.NlbResource
	}).(ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput)
}

// Route53 resource a DNS Target Resource record points to.
func (o ResourceSetResourceDnsTargetResourceTargetResourceOutput) R53Resource() ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput {
	return o.ApplyT(func(v ResourceSetResourceDnsTargetResourceTargetResource) *ResourceSetResourceDnsTargetResourceTargetResourceR53Resource {
		return v.R53Resource
	}).(ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput)
}

type ResourceSetResourceDnsTargetResourceTargetResourcePtrOutput struct{ *pulumi.OutputState }

func (ResourceSetResourceDnsTargetResourceTargetResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSetResourceDnsTargetResourceTargetResource)(nil)).Elem()
}

func (o ResourceSetResourceDnsTargetResourceTargetResourcePtrOutput) ToResourceSetResourceDnsTargetResourceTargetResourcePtrOutput() ResourceSetResourceDnsTargetResourceTargetResourcePtrOutput {
	return o
}

func (o ResourceSetResourceDnsTargetResourceTargetResourcePtrOutput) ToResourceSetResourceDnsTargetResourceTargetResourcePtrOutputWithContext(ctx context.Context) ResourceSetResourceDnsTargetResourceTargetResourcePtrOutput {
	return o
}

func (o ResourceSetResourceDnsTargetResourceTargetResourcePtrOutput) Elem() ResourceSetResourceDnsTargetResourceTargetResourceOutput {
	return o.ApplyT(func(v *ResourceSetResourceDnsTargetResourceTargetResource) ResourceSetResourceDnsTargetResourceTargetResource {
		if v != nil {
			return *v
		}
		var ret ResourceSetResourceDnsTargetResourceTargetResource
		return ret
	}).(ResourceSetResourceDnsTargetResourceTargetResourceOutput)
}

// NLB resource a DNS Target Resource points to. Required if `r53Resource` is not set.
func (o ResourceSetResourceDnsTargetResourceTargetResourcePtrOutput) NlbResource() ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput {
	return o.ApplyT(func(v *ResourceSetResourceDnsTargetResourceTargetResource) *ResourceSetResourceDnsTargetResourceTargetResourceNlbResource {
		if v == nil {
			return nil
		}
		return v.NlbResource
	}).(ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput)
}

// Route53 resource a DNS Target Resource record points to.
func (o ResourceSetResourceDnsTargetResourceTargetResourcePtrOutput) R53Resource() ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput {
	return o.ApplyT(func(v *ResourceSetResourceDnsTargetResourceTargetResource) *ResourceSetResourceDnsTargetResourceTargetResourceR53Resource {
		if v == nil {
			return nil
		}
		return v.R53Resource
	}).(ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput)
}

type ResourceSetResourceDnsTargetResourceTargetResourceNlbResource struct {
	// NLB resource ARN.
	Arn *string `pulumi:"arn"`
}

// ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceInput is an input type that accepts ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceArgs and ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceOutput values.
// You can construct a concrete instance of `ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceInput` via:
//
//          ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceArgs{...}
type ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceInput interface {
	pulumi.Input

	ToResourceSetResourceDnsTargetResourceTargetResourceNlbResourceOutput() ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceOutput
	ToResourceSetResourceDnsTargetResourceTargetResourceNlbResourceOutputWithContext(context.Context) ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceOutput
}

type ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceArgs struct {
	// NLB resource ARN.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
}

func (ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSetResourceDnsTargetResourceTargetResourceNlbResource)(nil)).Elem()
}

func (i ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceArgs) ToResourceSetResourceDnsTargetResourceTargetResourceNlbResourceOutput() ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceOutput {
	return i.ToResourceSetResourceDnsTargetResourceTargetResourceNlbResourceOutputWithContext(context.Background())
}

func (i ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceArgs) ToResourceSetResourceDnsTargetResourceTargetResourceNlbResourceOutputWithContext(ctx context.Context) ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceOutput)
}

func (i ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceArgs) ToResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput() ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput {
	return i.ToResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutputWithContext(context.Background())
}

func (i ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceArgs) ToResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutputWithContext(ctx context.Context) ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceOutput).ToResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutputWithContext(ctx)
}

// ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrInput is an input type that accepts ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceArgs, ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtr and ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput values.
// You can construct a concrete instance of `ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrInput` via:
//
//          ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceArgs{...}
//
//  or:
//
//          nil
type ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrInput interface {
	pulumi.Input

	ToResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput() ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput
	ToResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutputWithContext(context.Context) ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput
}

type resourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrType ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceArgs

func ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtr(v *ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceArgs) ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrInput {
	return (*resourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrType)(v)
}

func (*resourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSetResourceDnsTargetResourceTargetResourceNlbResource)(nil)).Elem()
}

func (i *resourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrType) ToResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput() ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput {
	return i.ToResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutputWithContext(context.Background())
}

func (i *resourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrType) ToResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutputWithContext(ctx context.Context) ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput)
}

type ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceOutput struct{ *pulumi.OutputState }

func (ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSetResourceDnsTargetResourceTargetResourceNlbResource)(nil)).Elem()
}

func (o ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceOutput) ToResourceSetResourceDnsTargetResourceTargetResourceNlbResourceOutput() ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceOutput {
	return o
}

func (o ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceOutput) ToResourceSetResourceDnsTargetResourceTargetResourceNlbResourceOutputWithContext(ctx context.Context) ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceOutput {
	return o
}

func (o ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceOutput) ToResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput() ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput {
	return o.ToResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutputWithContext(context.Background())
}

func (o ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceOutput) ToResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutputWithContext(ctx context.Context) ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceSetResourceDnsTargetResourceTargetResourceNlbResource) *ResourceSetResourceDnsTargetResourceTargetResourceNlbResource {
		return &v
	}).(ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput)
}

// NLB resource ARN.
func (o ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSetResourceDnsTargetResourceTargetResourceNlbResource) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

type ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput struct{ *pulumi.OutputState }

func (ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSetResourceDnsTargetResourceTargetResourceNlbResource)(nil)).Elem()
}

func (o ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput) ToResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput() ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput {
	return o
}

func (o ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput) ToResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutputWithContext(ctx context.Context) ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput {
	return o
}

func (o ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput) Elem() ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceOutput {
	return o.ApplyT(func(v *ResourceSetResourceDnsTargetResourceTargetResourceNlbResource) ResourceSetResourceDnsTargetResourceTargetResourceNlbResource {
		if v != nil {
			return *v
		}
		var ret ResourceSetResourceDnsTargetResourceTargetResourceNlbResource
		return ret
	}).(ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceOutput)
}

// NLB resource ARN.
func (o ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSetResourceDnsTargetResourceTargetResourceNlbResource) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

type ResourceSetResourceDnsTargetResourceTargetResourceR53Resource struct {
	// Domain name that is targeted.
	DomainName *string `pulumi:"domainName"`
	// Resource record set ID that is targeted.
	RecordSetId *string `pulumi:"recordSetId"`
}

// ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceInput is an input type that accepts ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceArgs and ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutput values.
// You can construct a concrete instance of `ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceInput` via:
//
//          ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceArgs{...}
type ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceInput interface {
	pulumi.Input

	ToResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutput() ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutput
	ToResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutputWithContext(context.Context) ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutput
}

type ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceArgs struct {
	// Domain name that is targeted.
	DomainName pulumi.StringPtrInput `pulumi:"domainName"`
	// Resource record set ID that is targeted.
	RecordSetId pulumi.StringPtrInput `pulumi:"recordSetId"`
}

func (ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSetResourceDnsTargetResourceTargetResourceR53Resource)(nil)).Elem()
}

func (i ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceArgs) ToResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutput() ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutput {
	return i.ToResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutputWithContext(context.Background())
}

func (i ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceArgs) ToResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutputWithContext(ctx context.Context) ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutput)
}

func (i ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceArgs) ToResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput() ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput {
	return i.ToResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutputWithContext(context.Background())
}

func (i ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceArgs) ToResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutputWithContext(ctx context.Context) ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutput).ToResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutputWithContext(ctx)
}

// ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrInput is an input type that accepts ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceArgs, ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtr and ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput values.
// You can construct a concrete instance of `ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrInput` via:
//
//          ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceArgs{...}
//
//  or:
//
//          nil
type ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrInput interface {
	pulumi.Input

	ToResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput() ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput
	ToResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutputWithContext(context.Context) ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput
}

type resourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrType ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceArgs

func ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtr(v *ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceArgs) ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrInput {
	return (*resourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrType)(v)
}

func (*resourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSetResourceDnsTargetResourceTargetResourceR53Resource)(nil)).Elem()
}

func (i *resourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrType) ToResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput() ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput {
	return i.ToResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutputWithContext(context.Background())
}

func (i *resourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrType) ToResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutputWithContext(ctx context.Context) ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput)
}

type ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutput struct{ *pulumi.OutputState }

func (ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSetResourceDnsTargetResourceTargetResourceR53Resource)(nil)).Elem()
}

func (o ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutput) ToResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutput() ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutput {
	return o
}

func (o ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutput) ToResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutputWithContext(ctx context.Context) ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutput {
	return o
}

func (o ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutput) ToResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput() ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput {
	return o.ToResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutputWithContext(context.Background())
}

func (o ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutput) ToResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutputWithContext(ctx context.Context) ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceSetResourceDnsTargetResourceTargetResourceR53Resource) *ResourceSetResourceDnsTargetResourceTargetResourceR53Resource {
		return &v
	}).(ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput)
}

// Domain name that is targeted.
func (o ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSetResourceDnsTargetResourceTargetResourceR53Resource) *string { return v.DomainName }).(pulumi.StringPtrOutput)
}

// Resource record set ID that is targeted.
func (o ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutput) RecordSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSetResourceDnsTargetResourceTargetResourceR53Resource) *string { return v.RecordSetId }).(pulumi.StringPtrOutput)
}

type ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput struct{ *pulumi.OutputState }

func (ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSetResourceDnsTargetResourceTargetResourceR53Resource)(nil)).Elem()
}

func (o ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput) ToResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput() ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput {
	return o
}

func (o ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput) ToResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutputWithContext(ctx context.Context) ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput {
	return o
}

func (o ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput) Elem() ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutput {
	return o.ApplyT(func(v *ResourceSetResourceDnsTargetResourceTargetResourceR53Resource) ResourceSetResourceDnsTargetResourceTargetResourceR53Resource {
		if v != nil {
			return *v
		}
		var ret ResourceSetResourceDnsTargetResourceTargetResourceR53Resource
		return ret
	}).(ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutput)
}

// Domain name that is targeted.
func (o ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSetResourceDnsTargetResourceTargetResourceR53Resource) *string {
		if v == nil {
			return nil
		}
		return v.DomainName
	}).(pulumi.StringPtrOutput)
}

// Resource record set ID that is targeted.
func (o ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput) RecordSetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSetResourceDnsTargetResourceTargetResourceR53Resource) *string {
		if v == nil {
			return nil
		}
		return v.RecordSetId
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceSetResourceInput)(nil)).Elem(), ResourceSetResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceSetResourceArrayInput)(nil)).Elem(), ResourceSetResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceSetResourceDnsTargetResourceInput)(nil)).Elem(), ResourceSetResourceDnsTargetResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceSetResourceDnsTargetResourcePtrInput)(nil)).Elem(), ResourceSetResourceDnsTargetResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceSetResourceDnsTargetResourceTargetResourceInput)(nil)).Elem(), ResourceSetResourceDnsTargetResourceTargetResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceSetResourceDnsTargetResourceTargetResourcePtrInput)(nil)).Elem(), ResourceSetResourceDnsTargetResourceTargetResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceInput)(nil)).Elem(), ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrInput)(nil)).Elem(), ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceInput)(nil)).Elem(), ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrInput)(nil)).Elem(), ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceArgs{})
	pulumi.RegisterOutputType(ResourceSetResourceOutput{})
	pulumi.RegisterOutputType(ResourceSetResourceArrayOutput{})
	pulumi.RegisterOutputType(ResourceSetResourceDnsTargetResourceOutput{})
	pulumi.RegisterOutputType(ResourceSetResourceDnsTargetResourcePtrOutput{})
	pulumi.RegisterOutputType(ResourceSetResourceDnsTargetResourceTargetResourceOutput{})
	pulumi.RegisterOutputType(ResourceSetResourceDnsTargetResourceTargetResourcePtrOutput{})
	pulumi.RegisterOutputType(ResourceSetResourceDnsTargetResourceTargetResourceNlbResourceOutput{})
	pulumi.RegisterOutputType(ResourceSetResourceDnsTargetResourceTargetResourceNlbResourcePtrOutput{})
	pulumi.RegisterOutputType(ResourceSetResourceDnsTargetResourceTargetResourceR53ResourceOutput{})
	pulumi.RegisterOutputType(ResourceSetResourceDnsTargetResourceTargetResourceR53ResourcePtrOutput{})
}
