// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package emr

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an Elastic MapReduce Cluster, a web service that makes it easy to process large amounts of data efficiently. See [Amazon Elastic MapReduce Documentation](https://aws.amazon.com/documentation/elastic-mapreduce/) for more information.
//
// To configure [Instance Groups](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for [task nodes](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-task), see the `emr.InstanceGroup` resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/emr"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := emr.NewCluster(ctx, "cluster", &emr.ClusterArgs{
//				ReleaseLabel: pulumi.String("emr-4.6.0"),
//				Applications: pulumi.StringArray{
//					pulumi.String("Spark"),
//				},
//				AdditionalInfo: pulumi.String(fmt.Sprintf(`{
//	  "instanceAwsClientConfiguration": {
//	    "proxyPort": 8099,
//	    "proxyHost": "myproxy.example.com"
//	  }
//	}
//
// `)),
//
//	TerminationProtection:       pulumi.Bool(false),
//	KeepJobFlowAliveWhenNoSteps: pulumi.Bool(true),
//	Ec2Attributes: &emr.ClusterEc2AttributesArgs{
//		SubnetId:                      pulumi.Any(aws_subnet.Main.Id),
//		EmrManagedMasterSecurityGroup: pulumi.Any(aws_security_group.Sg.Id),
//		EmrManagedSlaveSecurityGroup:  pulumi.Any(aws_security_group.Sg.Id),
//		InstanceProfile:               pulumi.Any(aws_iam_instance_profile.Emr_profile.Arn),
//	},
//	MasterInstanceGroup: &emr.ClusterMasterInstanceGroupArgs{
//		InstanceType: pulumi.String("m4.large"),
//	},
//	CoreInstanceGroup: &emr.ClusterCoreInstanceGroupArgs{
//		InstanceType:  pulumi.String("c4.large"),
//		InstanceCount: pulumi.Int(1),
//		EbsConfigs: emr.ClusterCoreInstanceGroupEbsConfigArray{
//			&emr.ClusterCoreInstanceGroupEbsConfigArgs{
//				Size:               pulumi.Int(40),
//				Type:               pulumi.String("gp2"),
//				VolumesPerInstance: pulumi.Int(1),
//			},
//		},
//		BidPrice: pulumi.String("0.30"),
//		AutoscalingPolicy: pulumi.String(fmt.Sprintf(`{
//
//	"Constraints": {
//	  "MinCapacity": 1,
//	  "MaxCapacity": 2
//	},
//
// "Rules": [
//
//	{
//	  "Name": "ScaleOutMemoryPercentage",
//	  "Description": "Scale out if YARNMemoryAvailablePercentage is less than 15",
//	  "Action": {
//	    "SimpleScalingPolicyConfiguration": {
//	      "AdjustmentType": "CHANGE_IN_CAPACITY",
//	      "ScalingAdjustment": 1,
//	      "CoolDown": 300
//	    }
//	  },
//	  "Trigger": {
//	    "CloudWatchAlarmDefinition": {
//	      "ComparisonOperator": "LESS_THAN",
//	      "EvaluationPeriods": 1,
//	      "MetricName": "YARNMemoryAvailablePercentage",
//	      "Namespace": "AWS/ElasticMapReduce",
//	      "Period": 300,
//	      "Statistic": "AVERAGE",
//	      "Threshold": 15.0,
//	      "Unit": "PERCENT"
//	    }
//	  }
//	}
//
// ]
// }
// `)),
//
//				},
//				EbsRootVolumeSize: pulumi.Int(100),
//				Tags: pulumi.StringMap{
//					"role": pulumi.String("rolename"),
//					"env":  pulumi.String("env"),
//				},
//				BootstrapActions: emr.ClusterBootstrapActionArray{
//					&emr.ClusterBootstrapActionArgs{
//						Path: pulumi.String("s3://elasticmapreduce/bootstrap-actions/run-if"),
//						Name: pulumi.String("runif"),
//						Args: pulumi.StringArray{
//							pulumi.String("instance.isMaster=true"),
//							pulumi.String("echo running on master node"),
//						},
//					},
//				},
//				ConfigurationsJson: pulumi.String(fmt.Sprintf(`  [
//	    {
//	      "Classification": "hadoop-env",
//	      "Configurations": [
//	        {
//	          "Classification": "export",
//	          "Properties": {
//	            "JAVA_HOME": "/usr/lib/jvm/java-1.8.0"
//	          }
//	        }
//	      ],
//	      "Properties": {}
//	    },
//	    {
//	      "Classification": "spark-env",
//	      "Configurations": [
//	        {
//	          "Classification": "export",
//	          "Properties": {
//	            "JAVA_HOME": "/usr/lib/jvm/java-1.8.0"
//	          }
//	        }
//	      ],
//	      "Properties": {}
//	    }
//	  ]
//
// `)),
//
//				ServiceRole: pulumi.Any(aws_iam_role.Iam_emr_service_role.Arn),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// The `emr.Cluster` resource typically requires two IAM roles, one for the EMR Cluster to use as a service, and another to place on your Cluster Instances to interact with AWS from those instances. The suggested role policy template for the EMR service is `AmazonElasticMapReduceRole`, and `AmazonElasticMapReduceforEC2Role` for the EC2 profile. See the [Getting Started](https://docs.aws.amazon.com/ElasticMapReduce/latest/ManagementGuide/emr-gs-launch-sample-cluster.html) guide for more information on these IAM roles.
// ### Instance Fleet
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/emr"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := emr.NewCluster(ctx, "example", &emr.ClusterArgs{
//				MasterInstanceFleet: &emr.ClusterMasterInstanceFleetArgs{
//					InstanceTypeConfigs: emr.ClusterMasterInstanceFleetInstanceTypeConfigArray{
//						&emr.ClusterMasterInstanceFleetInstanceTypeConfigArgs{
//							InstanceType: pulumi.String("m4.xlarge"),
//						},
//					},
//					TargetOnDemandCapacity: pulumi.Int(1),
//				},
//				CoreInstanceFleet: &emr.ClusterCoreInstanceFleetArgs{
//					InstanceTypeConfigs: emr.ClusterCoreInstanceFleetInstanceTypeConfigArray{
//						&emr.ClusterCoreInstanceFleetInstanceTypeConfigArgs{
//							BidPriceAsPercentageOfOnDemandPrice: pulumi.Float64(80),
//							EbsConfigs: emr.ClusterCoreInstanceFleetInstanceTypeConfigEbsConfigArray{
//								&emr.ClusterCoreInstanceFleetInstanceTypeConfigEbsConfigArgs{
//									Size:               pulumi.Int(100),
//									Type:               pulumi.String("gp2"),
//									VolumesPerInstance: pulumi.Int(1),
//								},
//							},
//							InstanceType:     pulumi.String("m3.xlarge"),
//							WeightedCapacity: pulumi.Int(1),
//						},
//						&emr.ClusterCoreInstanceFleetInstanceTypeConfigArgs{
//							BidPriceAsPercentageOfOnDemandPrice: pulumi.Float64(100),
//							EbsConfigs: emr.ClusterCoreInstanceFleetInstanceTypeConfigEbsConfigArray{
//								&emr.ClusterCoreInstanceFleetInstanceTypeConfigEbsConfigArgs{
//									Size:               pulumi.Int(100),
//									Type:               pulumi.String("gp2"),
//									VolumesPerInstance: pulumi.Int(1),
//								},
//							},
//							InstanceType:     pulumi.String("m4.xlarge"),
//							WeightedCapacity: pulumi.Int(1),
//						},
//						&emr.ClusterCoreInstanceFleetInstanceTypeConfigArgs{
//							BidPriceAsPercentageOfOnDemandPrice: pulumi.Float64(100),
//							EbsConfigs: emr.ClusterCoreInstanceFleetInstanceTypeConfigEbsConfigArray{
//								&emr.ClusterCoreInstanceFleetInstanceTypeConfigEbsConfigArgs{
//									Size:               pulumi.Int(100),
//									Type:               pulumi.String("gp2"),
//									VolumesPerInstance: pulumi.Int(1),
//								},
//							},
//							InstanceType:     pulumi.String("m4.2xlarge"),
//							WeightedCapacity: pulumi.Int(2),
//						},
//					},
//					LaunchSpecifications: &emr.ClusterCoreInstanceFleetLaunchSpecificationsArgs{
//						SpotSpecifications: emr.ClusterCoreInstanceFleetLaunchSpecificationsSpotSpecificationArray{
//							&emr.ClusterCoreInstanceFleetLaunchSpecificationsSpotSpecificationArgs{
//								AllocationStrategy:     pulumi.String("capacity-optimized"),
//								BlockDurationMinutes:   pulumi.Int(0),
//								TimeoutAction:          pulumi.String("SWITCH_TO_ON_DEMAND"),
//								TimeoutDurationMinutes: pulumi.Int(10),
//							},
//						},
//					},
//					Name:                   pulumi.String("core fleet"),
//					TargetOnDemandCapacity: pulumi.Int(2),
//					TargetSpotCapacity:     pulumi.Int(2),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = emr.NewInstanceFleet(ctx, "task", &emr.InstanceFleetArgs{
//				ClusterId: example.ID(),
//				InstanceTypeConfigs: emr.InstanceFleetInstanceTypeConfigArray{
//					&emr.InstanceFleetInstanceTypeConfigArgs{
//						BidPriceAsPercentageOfOnDemandPrice: pulumi.Float64(100),
//						EbsConfigs: emr.InstanceFleetInstanceTypeConfigEbsConfigArray{
//							&emr.InstanceFleetInstanceTypeConfigEbsConfigArgs{
//								Size:               pulumi.Int(100),
//								Type:               pulumi.String("gp2"),
//								VolumesPerInstance: pulumi.Int(1),
//							},
//						},
//						InstanceType:     pulumi.String("m4.xlarge"),
//						WeightedCapacity: pulumi.Int(1),
//					},
//					&emr.InstanceFleetInstanceTypeConfigArgs{
//						BidPriceAsPercentageOfOnDemandPrice: pulumi.Float64(100),
//						EbsConfigs: emr.InstanceFleetInstanceTypeConfigEbsConfigArray{
//							&emr.InstanceFleetInstanceTypeConfigEbsConfigArgs{
//								Size:               pulumi.Int(100),
//								Type:               pulumi.String("gp2"),
//								VolumesPerInstance: pulumi.Int(1),
//							},
//						},
//						InstanceType:     pulumi.String("m4.2xlarge"),
//						WeightedCapacity: pulumi.Int(2),
//					},
//				},
//				LaunchSpecifications: &emr.InstanceFleetLaunchSpecificationsArgs{
//					SpotSpecifications: emr.InstanceFleetLaunchSpecificationsSpotSpecificationArray{
//						&emr.InstanceFleetLaunchSpecificationsSpotSpecificationArgs{
//							AllocationStrategy:     pulumi.String("capacity-optimized"),
//							BlockDurationMinutes:   pulumi.Int(0),
//							TimeoutAction:          pulumi.String("TERMINATE_CLUSTER"),
//							TimeoutDurationMinutes: pulumi.Int(10),
//						},
//					},
//				},
//				TargetOnDemandCapacity: pulumi.Int(1),
//				TargetSpotCapacity:     pulumi.Int(1),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Enable Debug Logging
//
// [Debug logging in EMR](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-debugging.html) is implemented as a step. It is highly recommended that you utilize the resource options configuration with `ignoreChanges` if other steps are being managed outside of this provider.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/emr"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := emr.NewCluster(ctx, "example", &emr.ClusterArgs{
//				Steps: emr.ClusterStepArray{
//					&emr.ClusterStepArgs{
//						ActionOnFailure: pulumi.String("TERMINATE_CLUSTER"),
//						Name:            pulumi.String("Setup Hadoop Debugging"),
//						HadoopJarStep: &emr.ClusterStepHadoopJarStepArgs{
//							Jar: pulumi.String("command-runner.jar"),
//							Args: pulumi.StringArray{
//								pulumi.String("state-pusher-script"),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Multiple Node Master Instance Group
//
// Available in EMR version 5.23.0 and later, an EMR Cluster can be launched with three master nodes for high availability. Additional information about this functionality and its requirements can be found in the [EMR Management Guide](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-plan-ha.html).
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2"
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/emr"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleSubnet, err := ec2.NewSubnet(ctx, "exampleSubnet", &ec2.SubnetArgs{
//				MapPublicIpOnLaunch: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = emr.NewCluster(ctx, "exampleCluster", &emr.ClusterArgs{
//				ReleaseLabel:          pulumi.String("emr-5.24.1"),
//				TerminationProtection: pulumi.Bool(true),
//				Ec2Attributes: &emr.ClusterEc2AttributesArgs{
//					SubnetId: exampleSubnet.ID(),
//				},
//				MasterInstanceGroup: &emr.ClusterMasterInstanceGroupArgs{
//					InstanceCount: pulumi.Int(3),
//				},
//				CoreInstanceGroup: nil,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Bootable Cluster
//
// **NOTE:** This configuration demonstrates a minimal configuration needed to boot an example EMR Cluster. It is not meant to display best practices. As with all examples, use at your own risk.
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/ec2"
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/emr"
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/iam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			mainVpc, err := ec2.NewVpc(ctx, "mainVpc", &ec2.VpcArgs{
//				CidrBlock:          pulumi.String("168.31.0.0/16"),
//				EnableDnsHostnames: pulumi.Bool(true),
//				Tags: pulumi.StringMap{
//					"name": pulumi.String("emr_test"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			mainSubnet, err := ec2.NewSubnet(ctx, "mainSubnet", &ec2.SubnetArgs{
//				VpcId:     mainVpc.ID(),
//				CidrBlock: pulumi.String("168.31.0.0/20"),
//				Tags: pulumi.StringMap{
//					"name": pulumi.String("emr_test"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			allowAccess, err := ec2.NewSecurityGroup(ctx, "allowAccess", &ec2.SecurityGroupArgs{
//				Description: pulumi.String("Allow inbound traffic"),
//				VpcId:       mainVpc.ID(),
//				Ingress: ec2.SecurityGroupIngressArray{
//					&ec2.SecurityGroupIngressArgs{
//						FromPort: pulumi.Int(0),
//						ToPort:   pulumi.Int(0),
//						Protocol: pulumi.String("-1"),
//						CidrBlocks: pulumi.StringArray{
//							mainVpc.CidrBlock,
//						},
//					},
//				},
//				Egress: ec2.SecurityGroupEgressArray{
//					&ec2.SecurityGroupEgressArgs{
//						FromPort: pulumi.Int(0),
//						ToPort:   pulumi.Int(0),
//						Protocol: pulumi.String("-1"),
//						CidrBlocks: pulumi.StringArray{
//							pulumi.String("0.0.0.0/0"),
//						},
//					},
//				},
//				Tags: pulumi.StringMap{
//					"name": pulumi.String("emr_test"),
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				mainSubnet,
//			}))
//			if err != nil {
//				return err
//			}
//			iamEmrServiceRole, err := iam.NewRole(ctx, "iamEmrServiceRole", &iam.RoleArgs{
//				AssumeRolePolicy: pulumi.Any(fmt.Sprintf(`{
//	  "Version": "2008-10-17",
//	  "Statement": [
//	    {
//	      "Sid": "",
//	      "Effect": "Allow",
//	      "Principal": {
//	        "Service": "elasticmapreduce.amazonaws.com"
//	      },
//	      "Action": "sts:AssumeRole"
//	    }
//	  ]
//	}
//
// `)),
//
//			})
//			if err != nil {
//				return err
//			}
//			iamEmrProfileRole, err := iam.NewRole(ctx, "iamEmrProfileRole", &iam.RoleArgs{
//				AssumeRolePolicy: pulumi.Any(fmt.Sprintf(`{
//	  "Version": "2008-10-17",
//	  "Statement": [
//	    {
//	      "Sid": "",
//	      "Effect": "Allow",
//	      "Principal": {
//	        "Service": "ec2.amazonaws.com"
//	      },
//	      "Action": "sts:AssumeRole"
//	    }
//	  ]
//	}
//
// `)),
//
//			})
//			if err != nil {
//				return err
//			}
//			emrProfile, err := iam.NewInstanceProfile(ctx, "emrProfile", &iam.InstanceProfileArgs{
//				Role: iamEmrProfileRole.Name,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = emr.NewCluster(ctx, "cluster", &emr.ClusterArgs{
//				ReleaseLabel: pulumi.String("emr-4.6.0"),
//				Applications: pulumi.StringArray{
//					pulumi.String("Spark"),
//				},
//				Ec2Attributes: &emr.ClusterEc2AttributesArgs{
//					SubnetId:                      mainSubnet.ID(),
//					EmrManagedMasterSecurityGroup: allowAccess.ID(),
//					EmrManagedSlaveSecurityGroup:  allowAccess.ID(),
//					InstanceProfile:               emrProfile.Arn,
//				},
//				MasterInstanceGroup: &emr.ClusterMasterInstanceGroupArgs{
//					InstanceType: pulumi.String("m5.xlarge"),
//				},
//				CoreInstanceGroup: &emr.ClusterCoreInstanceGroupArgs{
//					InstanceCount: pulumi.Int(1),
//					InstanceType:  pulumi.String("m5.xlarge"),
//				},
//				Tags: pulumi.StringMap{
//					"role":     pulumi.String("rolename"),
//					"dns_zone": pulumi.String("env_zone"),
//					"env":      pulumi.String("env"),
//					"name":     pulumi.String("name-env"),
//				},
//				BootstrapActions: emr.ClusterBootstrapActionArray{
//					&emr.ClusterBootstrapActionArgs{
//						Path: pulumi.String("s3://elasticmapreduce/bootstrap-actions/run-if"),
//						Name: pulumi.String("runif"),
//						Args: pulumi.StringArray{
//							pulumi.String("instance.isMaster=true"),
//							pulumi.String("echo running on master node"),
//						},
//					},
//				},
//				ConfigurationsJson: pulumi.String(fmt.Sprintf(`  [
//	    {
//	      "Classification": "hadoop-env",
//	      "Configurations": [
//	        {
//	          "Classification": "export",
//	          "Properties": {
//	            "JAVA_HOME": "/usr/lib/jvm/java-1.8.0"
//	          }
//	        }
//	      ],
//	      "Properties": {}
//	    },
//	    {
//	      "Classification": "spark-env",
//	      "Configurations": [
//	        {
//	          "Classification": "export",
//	          "Properties": {
//	            "JAVA_HOME": "/usr/lib/jvm/java-1.8.0"
//	          }
//	        }
//	      ],
//	      "Properties": {}
//	    }
//	  ]
//
// `)),
//
//				ServiceRole: iamEmrServiceRole.Arn,
//			})
//			if err != nil {
//				return err
//			}
//			gw, err := ec2.NewInternetGateway(ctx, "gw", &ec2.InternetGatewayArgs{
//				VpcId: mainVpc.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			routeTable, err := ec2.NewRouteTable(ctx, "routeTable", &ec2.RouteTableArgs{
//				VpcId: mainVpc.ID(),
//				Routes: ec2.RouteTableRouteArray{
//					&ec2.RouteTableRouteArgs{
//						CidrBlock: pulumi.String("0.0.0.0/0"),
//						GatewayId: gw.ID(),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ec2.NewMainRouteTableAssociation(ctx, "mainRouteTableAssociation", &ec2.MainRouteTableAssociationArgs{
//				VpcId:        mainVpc.ID(),
//				RouteTableId: routeTable.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = iam.NewRolePolicy(ctx, "iamEmrServicePolicy", &iam.RolePolicyArgs{
//				Role: iamEmrServiceRole.ID(),
//				Policy: pulumi.Any(fmt.Sprintf(`{
//	    "Version": "2012-10-17",
//	    "Statement": [{
//	        "Effect": "Allow",
//	        "Resource": "*",
//	        "Action": [
//	            "ec2:AuthorizeSecurityGroupEgress",
//	            "ec2:AuthorizeSecurityGroupIngress",
//	            "ec2:CancelSpotInstanceRequests",
//	            "ec2:CreateNetworkInterface",
//	            "ec2:CreateSecurityGroup",
//	            "ec2:CreateTags",
//	            "ec2:DeleteNetworkInterface",
//	            "ec2:DeleteSecurityGroup",
//	            "ec2:DeleteTags",
//	            "ec2:DescribeAvailabilityZones",
//	            "ec2:DescribeAccountAttributes",
//	            "ec2:DescribeDhcpOptions",
//	            "ec2:DescribeInstanceStatus",
//	            "ec2:DescribeInstances",
//	            "ec2:DescribeKeyPairs",
//	            "ec2:DescribeNetworkAcls",
//	            "ec2:DescribeNetworkInterfaces",
//	            "ec2:DescribePrefixLists",
//	            "ec2:DescribeRouteTables",
//	            "ec2:DescribeSecurityGroups",
//	            "ec2:DescribeSpotInstanceRequests",
//	            "ec2:DescribeSpotPriceHistory",
//	            "ec2:DescribeSubnets",
//	            "ec2:DescribeVpcAttribute",
//	            "ec2:DescribeVpcEndpoints",
//	            "ec2:DescribeVpcEndpointServices",
//	            "ec2:DescribeVpcs",
//	            "ec2:DetachNetworkInterface",
//	            "ec2:ModifyImageAttribute",
//	            "ec2:ModifyInstanceAttribute",
//	            "ec2:RequestSpotInstances",
//	            "ec2:RevokeSecurityGroupEgress",
//	            "ec2:RunInstances",
//	            "ec2:TerminateInstances",
//	            "ec2:DeleteVolume",
//	            "ec2:DescribeVolumeStatus",
//	            "ec2:DescribeVolumes",
//	            "ec2:DetachVolume",
//	            "iam:GetRole",
//	            "iam:GetRolePolicy",
//	            "iam:ListInstanceProfiles",
//	            "iam:ListRolePolicies",
//	            "iam:PassRole",
//	            "s3:CreateBucket",
//	            "s3:Get*",
//	            "s3:List*",
//	            "sdb:BatchPutAttributes",
//	            "sdb:Select",
//	            "sqs:CreateQueue",
//	            "sqs:Delete*",
//	            "sqs:GetQueue*",
//	            "sqs:PurgeQueue",
//	            "sqs:ReceiveMessage"
//	        ]
//	    }]
//	}
//
// `)),
//
//			})
//			if err != nil {
//				return err
//			}
//			_, err = iam.NewRolePolicy(ctx, "iamEmrProfilePolicy", &iam.RolePolicyArgs{
//				Role: iamEmrProfileRole.ID(),
//				Policy: pulumi.Any(fmt.Sprintf(`{
//	    "Version": "2012-10-17",
//	    "Statement": [{
//	        "Effect": "Allow",
//	        "Resource": "*",
//	        "Action": [
//	            "cloudwatch:*",
//	            "dynamodb:*",
//	            "ec2:Describe*",
//	            "elasticmapreduce:Describe*",
//	            "elasticmapreduce:ListBootstrapActions",
//	            "elasticmapreduce:ListClusters",
//	            "elasticmapreduce:ListInstanceGroups",
//	            "elasticmapreduce:ListInstances",
//	            "elasticmapreduce:ListSteps",
//	            "kinesis:CreateStream",
//	            "kinesis:DeleteStream",
//	            "kinesis:DescribeStream",
//	            "kinesis:GetRecords",
//	            "kinesis:GetShardIterator",
//	            "kinesis:MergeShards",
//	            "kinesis:PutRecord",
//	            "kinesis:SplitShard",
//	            "rds:Describe*",
//	            "s3:*",
//	            "sdb:*",
//	            "sns:*",
//	            "sqs:*"
//	        ]
//	    }]
//	}
//
// `)),
//
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// EMR clusters can be imported using the `id`, e.g.,
//
// ```sh
//
//	$ pulumi import aws:emr/cluster:Cluster cluster j-123456ABCDEF
//
// ```
//
//	Since the API does not return the actual values for Kerberos configurations, environments with those configurations will need to use the
//
// `ignore_changes` option available to all resources to prevent perpetual differences, e.g., terraform resource "aws_emr_cluster" "example" {
//
// # ... other configuration ...
//
//	lifecycle {
//
//	ignore_changes = [kerberos_attributes]
//
//	} }
type Cluster struct {
	pulumi.CustomResourceState

	// JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore the provider cannot detect drift from the actual EMR cluster if its value is changed outside the provider.
	AdditionalInfo pulumi.StringPtrOutput `pulumi:"additionalInfo"`
	// A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster. For a list of applications available for each Amazon EMR release version, see the [Amazon EMR Release Guide](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-release-components.html).
	Applications pulumi.StringArrayOutput `pulumi:"applications"`
	// ARN of the cluster.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. See Auto Termination Policy Below.
	AutoTerminationPolicy ClusterAutoTerminationPolicyPtrOutput `pulumi:"autoTerminationPolicy"`
	// IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.
	AutoscalingRole pulumi.StringPtrOutput `pulumi:"autoscalingRole"`
	// Ordered list of bootstrap actions that will be run before Hadoop is started on the cluster nodes. See below.
	BootstrapActions ClusterBootstrapActionArrayOutput `pulumi:"bootstrapActions"`
	ClusterState     pulumi.StringOutput               `pulumi:"clusterState"`
	// List of configurations supplied for the EMR cluster you are creating. Supply a configuration object for applications to override their default configuration. See [AWS Documentation](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html) for more information.
	Configurations pulumi.StringPtrOutput `pulumi:"configurations"`
	// JSON string for supplying list of configurations for the EMR cluster.
	ConfigurationsJson pulumi.StringPtrOutput `pulumi:"configurationsJson"`
	// Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the core node type. Cannot be specified if any `coreInstanceGroup` configuration blocks are set. Detailed below.
	CoreInstanceFleet ClusterCoreInstanceFleetOutput `pulumi:"coreInstanceFleet"`
	// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [core node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-core).
	CoreInstanceGroup ClusterCoreInstanceGroupOutput `pulumi:"coreInstanceGroup"`
	// Custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.
	CustomAmiId pulumi.StringPtrOutput `pulumi:"customAmiId"`
	// Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.
	EbsRootVolumeSize pulumi.IntPtrOutput `pulumi:"ebsRootVolumeSize"`
	// Attributes for the EC2 instances running the job flow. See below.
	Ec2Attributes ClusterEc2AttributesPtrOutput `pulumi:"ec2Attributes"`
	// Switch on/off run cluster with no steps or when all steps are complete (default is on)
	KeepJobFlowAliveWhenNoSteps pulumi.BoolOutput `pulumi:"keepJobFlowAliveWhenNoSteps"`
	// Kerberos configuration for the cluster. See below.
	KerberosAttributes ClusterKerberosAttributesPtrOutput `pulumi:"kerberosAttributes"`
	// List of [step states](https://docs.aws.amazon.com/emr/latest/APIReference/API_StepStatus.html) used to filter returned steps
	ListStepsStates pulumi.StringArrayOutput `pulumi:"listStepsStates"`
	// AWS KMS customer master key (CMK) key ID or arn used for encrypting log files. This attribute is only available with EMR version 5.30.0 and later, excluding EMR 6.0.0.
	LogEncryptionKmsKeyId pulumi.StringPtrOutput `pulumi:"logEncryptionKmsKeyId"`
	// S3 bucket to write the log files of the job flow. If a value is not provided, logs are not created.
	LogUri pulumi.StringPtrOutput `pulumi:"logUri"`
	// Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the master node type. Cannot be specified if any `masterInstanceGroup` configuration blocks are set. Detailed below.
	MasterInstanceFleet ClusterMasterInstanceFleetOutput `pulumi:"masterInstanceFleet"`
	// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [master node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-master).
	MasterInstanceGroup ClusterMasterInstanceGroupOutput `pulumi:"masterInstanceGroup"`
	// The DNS name of the master node. If the cluster is on a private subnet, this is the private DNS name. On a public subnet, this is the public DNS name.
	MasterPublicDns pulumi.StringOutput `pulumi:"masterPublicDns"`
	// Name of the job flow.
	Name pulumi.StringOutput `pulumi:"name"`
	// Release label for the Amazon EMR release.
	ReleaseLabel pulumi.StringOutput `pulumi:"releaseLabel"`
	// Way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an `instance group` is resized.
	ScaleDownBehavior pulumi.StringOutput `pulumi:"scaleDownBehavior"`
	// Security configuration name to attach to the EMR cluster. Only valid for EMR clusters with `releaseLabel` 4.8.0 or greater.
	SecurityConfiguration pulumi.StringPtrOutput `pulumi:"securityConfiguration"`
	// IAM role that will be assumed by the Amazon EMR service to access AWS resources.
	ServiceRole pulumi.StringOutput `pulumi:"serviceRole"`
	// Number of steps that can be executed concurrently. You can specify a maximum of 256 steps. Only valid for EMR clusters with `releaseLabel` 5.28.0 or greater (default is 1).
	StepConcurrencyLevel pulumi.IntPtrOutput `pulumi:"stepConcurrencyLevel"`
	// List of steps to run when creating the cluster. See below. It is highly recommended to utilize the lifecycle resource options block with `ignoreChanges` if other steps are being managed outside of this provider.
	Steps ClusterStepArrayOutput `pulumi:"steps"`
	// list of tags to apply to the EMR Cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
	// Switch on/off termination protection (default is `false`, except when using multiple master nodes). Before attempting to destroy the resource when termination protection is enabled, this configuration must be applied with its value set to `false`.
	TerminationProtection pulumi.BoolOutput `pulumi:"terminationProtection"`
	// Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default value is `true`.
	VisibleToAllUsers pulumi.BoolPtrOutput `pulumi:"visibleToAllUsers"`
}

// NewCluster registers a new resource with the given unique name, arguments, and options.
func NewCluster(ctx *pulumi.Context,
	name string, args *ClusterArgs, opts ...pulumi.ResourceOption) (*Cluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ReleaseLabel == nil {
		return nil, errors.New("invalid value for required argument 'ReleaseLabel'")
	}
	if args.ServiceRole == nil {
		return nil, errors.New("invalid value for required argument 'ServiceRole'")
	}
	var resource Cluster
	err := ctx.RegisterResource("aws:emr/cluster:Cluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCluster gets an existing Cluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterState, opts ...pulumi.ResourceOption) (*Cluster, error) {
	var resource Cluster
	err := ctx.ReadResource("aws:emr/cluster:Cluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Cluster resources.
type clusterState struct {
	// JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore the provider cannot detect drift from the actual EMR cluster if its value is changed outside the provider.
	AdditionalInfo *string `pulumi:"additionalInfo"`
	// A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster. For a list of applications available for each Amazon EMR release version, see the [Amazon EMR Release Guide](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-release-components.html).
	Applications []string `pulumi:"applications"`
	// ARN of the cluster.
	Arn *string `pulumi:"arn"`
	// An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. See Auto Termination Policy Below.
	AutoTerminationPolicy *ClusterAutoTerminationPolicy `pulumi:"autoTerminationPolicy"`
	// IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.
	AutoscalingRole *string `pulumi:"autoscalingRole"`
	// Ordered list of bootstrap actions that will be run before Hadoop is started on the cluster nodes. See below.
	BootstrapActions []ClusterBootstrapAction `pulumi:"bootstrapActions"`
	ClusterState     *string                  `pulumi:"clusterState"`
	// List of configurations supplied for the EMR cluster you are creating. Supply a configuration object for applications to override their default configuration. See [AWS Documentation](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html) for more information.
	Configurations *string `pulumi:"configurations"`
	// JSON string for supplying list of configurations for the EMR cluster.
	ConfigurationsJson *string `pulumi:"configurationsJson"`
	// Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the core node type. Cannot be specified if any `coreInstanceGroup` configuration blocks are set. Detailed below.
	CoreInstanceFleet *ClusterCoreInstanceFleet `pulumi:"coreInstanceFleet"`
	// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [core node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-core).
	CoreInstanceGroup *ClusterCoreInstanceGroup `pulumi:"coreInstanceGroup"`
	// Custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.
	CustomAmiId *string `pulumi:"customAmiId"`
	// Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.
	EbsRootVolumeSize *int `pulumi:"ebsRootVolumeSize"`
	// Attributes for the EC2 instances running the job flow. See below.
	Ec2Attributes *ClusterEc2Attributes `pulumi:"ec2Attributes"`
	// Switch on/off run cluster with no steps or when all steps are complete (default is on)
	KeepJobFlowAliveWhenNoSteps *bool `pulumi:"keepJobFlowAliveWhenNoSteps"`
	// Kerberos configuration for the cluster. See below.
	KerberosAttributes *ClusterKerberosAttributes `pulumi:"kerberosAttributes"`
	// List of [step states](https://docs.aws.amazon.com/emr/latest/APIReference/API_StepStatus.html) used to filter returned steps
	ListStepsStates []string `pulumi:"listStepsStates"`
	// AWS KMS customer master key (CMK) key ID or arn used for encrypting log files. This attribute is only available with EMR version 5.30.0 and later, excluding EMR 6.0.0.
	LogEncryptionKmsKeyId *string `pulumi:"logEncryptionKmsKeyId"`
	// S3 bucket to write the log files of the job flow. If a value is not provided, logs are not created.
	LogUri *string `pulumi:"logUri"`
	// Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the master node type. Cannot be specified if any `masterInstanceGroup` configuration blocks are set. Detailed below.
	MasterInstanceFleet *ClusterMasterInstanceFleet `pulumi:"masterInstanceFleet"`
	// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [master node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-master).
	MasterInstanceGroup *ClusterMasterInstanceGroup `pulumi:"masterInstanceGroup"`
	// The DNS name of the master node. If the cluster is on a private subnet, this is the private DNS name. On a public subnet, this is the public DNS name.
	MasterPublicDns *string `pulumi:"masterPublicDns"`
	// Name of the job flow.
	Name *string `pulumi:"name"`
	// Release label for the Amazon EMR release.
	ReleaseLabel *string `pulumi:"releaseLabel"`
	// Way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an `instance group` is resized.
	ScaleDownBehavior *string `pulumi:"scaleDownBehavior"`
	// Security configuration name to attach to the EMR cluster. Only valid for EMR clusters with `releaseLabel` 4.8.0 or greater.
	SecurityConfiguration *string `pulumi:"securityConfiguration"`
	// IAM role that will be assumed by the Amazon EMR service to access AWS resources.
	ServiceRole *string `pulumi:"serviceRole"`
	// Number of steps that can be executed concurrently. You can specify a maximum of 256 steps. Only valid for EMR clusters with `releaseLabel` 5.28.0 or greater (default is 1).
	StepConcurrencyLevel *int `pulumi:"stepConcurrencyLevel"`
	// List of steps to run when creating the cluster. See below. It is highly recommended to utilize the lifecycle resource options block with `ignoreChanges` if other steps are being managed outside of this provider.
	Steps []ClusterStep `pulumi:"steps"`
	// list of tags to apply to the EMR Cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Switch on/off termination protection (default is `false`, except when using multiple master nodes). Before attempting to destroy the resource when termination protection is enabled, this configuration must be applied with its value set to `false`.
	TerminationProtection *bool `pulumi:"terminationProtection"`
	// Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default value is `true`.
	VisibleToAllUsers *bool `pulumi:"visibleToAllUsers"`
}

type ClusterState struct {
	// JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore the provider cannot detect drift from the actual EMR cluster if its value is changed outside the provider.
	AdditionalInfo pulumi.StringPtrInput
	// A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster. For a list of applications available for each Amazon EMR release version, see the [Amazon EMR Release Guide](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-release-components.html).
	Applications pulumi.StringArrayInput
	// ARN of the cluster.
	Arn pulumi.StringPtrInput
	// An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. See Auto Termination Policy Below.
	AutoTerminationPolicy ClusterAutoTerminationPolicyPtrInput
	// IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.
	AutoscalingRole pulumi.StringPtrInput
	// Ordered list of bootstrap actions that will be run before Hadoop is started on the cluster nodes. See below.
	BootstrapActions ClusterBootstrapActionArrayInput
	ClusterState     pulumi.StringPtrInput
	// List of configurations supplied for the EMR cluster you are creating. Supply a configuration object for applications to override their default configuration. See [AWS Documentation](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html) for more information.
	Configurations pulumi.StringPtrInput
	// JSON string for supplying list of configurations for the EMR cluster.
	ConfigurationsJson pulumi.StringPtrInput
	// Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the core node type. Cannot be specified if any `coreInstanceGroup` configuration blocks are set. Detailed below.
	CoreInstanceFleet ClusterCoreInstanceFleetPtrInput
	// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [core node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-core).
	CoreInstanceGroup ClusterCoreInstanceGroupPtrInput
	// Custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.
	CustomAmiId pulumi.StringPtrInput
	// Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.
	EbsRootVolumeSize pulumi.IntPtrInput
	// Attributes for the EC2 instances running the job flow. See below.
	Ec2Attributes ClusterEc2AttributesPtrInput
	// Switch on/off run cluster with no steps or when all steps are complete (default is on)
	KeepJobFlowAliveWhenNoSteps pulumi.BoolPtrInput
	// Kerberos configuration for the cluster. See below.
	KerberosAttributes ClusterKerberosAttributesPtrInput
	// List of [step states](https://docs.aws.amazon.com/emr/latest/APIReference/API_StepStatus.html) used to filter returned steps
	ListStepsStates pulumi.StringArrayInput
	// AWS KMS customer master key (CMK) key ID or arn used for encrypting log files. This attribute is only available with EMR version 5.30.0 and later, excluding EMR 6.0.0.
	LogEncryptionKmsKeyId pulumi.StringPtrInput
	// S3 bucket to write the log files of the job flow. If a value is not provided, logs are not created.
	LogUri pulumi.StringPtrInput
	// Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the master node type. Cannot be specified if any `masterInstanceGroup` configuration blocks are set. Detailed below.
	MasterInstanceFleet ClusterMasterInstanceFleetPtrInput
	// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [master node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-master).
	MasterInstanceGroup ClusterMasterInstanceGroupPtrInput
	// The DNS name of the master node. If the cluster is on a private subnet, this is the private DNS name. On a public subnet, this is the public DNS name.
	MasterPublicDns pulumi.StringPtrInput
	// Name of the job flow.
	Name pulumi.StringPtrInput
	// Release label for the Amazon EMR release.
	ReleaseLabel pulumi.StringPtrInput
	// Way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an `instance group` is resized.
	ScaleDownBehavior pulumi.StringPtrInput
	// Security configuration name to attach to the EMR cluster. Only valid for EMR clusters with `releaseLabel` 4.8.0 or greater.
	SecurityConfiguration pulumi.StringPtrInput
	// IAM role that will be assumed by the Amazon EMR service to access AWS resources.
	ServiceRole pulumi.StringPtrInput
	// Number of steps that can be executed concurrently. You can specify a maximum of 256 steps. Only valid for EMR clusters with `releaseLabel` 5.28.0 or greater (default is 1).
	StepConcurrencyLevel pulumi.IntPtrInput
	// List of steps to run when creating the cluster. See below. It is highly recommended to utilize the lifecycle resource options block with `ignoreChanges` if other steps are being managed outside of this provider.
	Steps ClusterStepArrayInput
	// list of tags to apply to the EMR Cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumi.StringMapInput
	// Switch on/off termination protection (default is `false`, except when using multiple master nodes). Before attempting to destroy the resource when termination protection is enabled, this configuration must be applied with its value set to `false`.
	TerminationProtection pulumi.BoolPtrInput
	// Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default value is `true`.
	VisibleToAllUsers pulumi.BoolPtrInput
}

func (ClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterState)(nil)).Elem()
}

type clusterArgs struct {
	// JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore the provider cannot detect drift from the actual EMR cluster if its value is changed outside the provider.
	AdditionalInfo *string `pulumi:"additionalInfo"`
	// A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster. For a list of applications available for each Amazon EMR release version, see the [Amazon EMR Release Guide](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-release-components.html).
	Applications []string `pulumi:"applications"`
	// An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. See Auto Termination Policy Below.
	AutoTerminationPolicy *ClusterAutoTerminationPolicy `pulumi:"autoTerminationPolicy"`
	// IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.
	AutoscalingRole *string `pulumi:"autoscalingRole"`
	// Ordered list of bootstrap actions that will be run before Hadoop is started on the cluster nodes. See below.
	BootstrapActions []ClusterBootstrapAction `pulumi:"bootstrapActions"`
	// List of configurations supplied for the EMR cluster you are creating. Supply a configuration object for applications to override their default configuration. See [AWS Documentation](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html) for more information.
	Configurations *string `pulumi:"configurations"`
	// JSON string for supplying list of configurations for the EMR cluster.
	ConfigurationsJson *string `pulumi:"configurationsJson"`
	// Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the core node type. Cannot be specified if any `coreInstanceGroup` configuration blocks are set. Detailed below.
	CoreInstanceFleet *ClusterCoreInstanceFleet `pulumi:"coreInstanceFleet"`
	// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [core node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-core).
	CoreInstanceGroup *ClusterCoreInstanceGroup `pulumi:"coreInstanceGroup"`
	// Custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.
	CustomAmiId *string `pulumi:"customAmiId"`
	// Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.
	EbsRootVolumeSize *int `pulumi:"ebsRootVolumeSize"`
	// Attributes for the EC2 instances running the job flow. See below.
	Ec2Attributes *ClusterEc2Attributes `pulumi:"ec2Attributes"`
	// Switch on/off run cluster with no steps or when all steps are complete (default is on)
	KeepJobFlowAliveWhenNoSteps *bool `pulumi:"keepJobFlowAliveWhenNoSteps"`
	// Kerberos configuration for the cluster. See below.
	KerberosAttributes *ClusterKerberosAttributes `pulumi:"kerberosAttributes"`
	// List of [step states](https://docs.aws.amazon.com/emr/latest/APIReference/API_StepStatus.html) used to filter returned steps
	ListStepsStates []string `pulumi:"listStepsStates"`
	// AWS KMS customer master key (CMK) key ID or arn used for encrypting log files. This attribute is only available with EMR version 5.30.0 and later, excluding EMR 6.0.0.
	LogEncryptionKmsKeyId *string `pulumi:"logEncryptionKmsKeyId"`
	// S3 bucket to write the log files of the job flow. If a value is not provided, logs are not created.
	LogUri *string `pulumi:"logUri"`
	// Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the master node type. Cannot be specified if any `masterInstanceGroup` configuration blocks are set. Detailed below.
	MasterInstanceFleet *ClusterMasterInstanceFleet `pulumi:"masterInstanceFleet"`
	// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [master node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-master).
	MasterInstanceGroup *ClusterMasterInstanceGroup `pulumi:"masterInstanceGroup"`
	// Name of the job flow.
	Name *string `pulumi:"name"`
	// Release label for the Amazon EMR release.
	ReleaseLabel string `pulumi:"releaseLabel"`
	// Way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an `instance group` is resized.
	ScaleDownBehavior *string `pulumi:"scaleDownBehavior"`
	// Security configuration name to attach to the EMR cluster. Only valid for EMR clusters with `releaseLabel` 4.8.0 or greater.
	SecurityConfiguration *string `pulumi:"securityConfiguration"`
	// IAM role that will be assumed by the Amazon EMR service to access AWS resources.
	ServiceRole string `pulumi:"serviceRole"`
	// Number of steps that can be executed concurrently. You can specify a maximum of 256 steps. Only valid for EMR clusters with `releaseLabel` 5.28.0 or greater (default is 1).
	StepConcurrencyLevel *int `pulumi:"stepConcurrencyLevel"`
	// List of steps to run when creating the cluster. See below. It is highly recommended to utilize the lifecycle resource options block with `ignoreChanges` if other steps are being managed outside of this provider.
	Steps []ClusterStep `pulumi:"steps"`
	// list of tags to apply to the EMR Cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Switch on/off termination protection (default is `false`, except when using multiple master nodes). Before attempting to destroy the resource when termination protection is enabled, this configuration must be applied with its value set to `false`.
	TerminationProtection *bool `pulumi:"terminationProtection"`
	// Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default value is `true`.
	VisibleToAllUsers *bool `pulumi:"visibleToAllUsers"`
}

// The set of arguments for constructing a Cluster resource.
type ClusterArgs struct {
	// JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore the provider cannot detect drift from the actual EMR cluster if its value is changed outside the provider.
	AdditionalInfo pulumi.StringPtrInput
	// A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster. For a list of applications available for each Amazon EMR release version, see the [Amazon EMR Release Guide](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-release-components.html).
	Applications pulumi.StringArrayInput
	// An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. See Auto Termination Policy Below.
	AutoTerminationPolicy ClusterAutoTerminationPolicyPtrInput
	// IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.
	AutoscalingRole pulumi.StringPtrInput
	// Ordered list of bootstrap actions that will be run before Hadoop is started on the cluster nodes. See below.
	BootstrapActions ClusterBootstrapActionArrayInput
	// List of configurations supplied for the EMR cluster you are creating. Supply a configuration object for applications to override their default configuration. See [AWS Documentation](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html) for more information.
	Configurations pulumi.StringPtrInput
	// JSON string for supplying list of configurations for the EMR cluster.
	ConfigurationsJson pulumi.StringPtrInput
	// Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the core node type. Cannot be specified if any `coreInstanceGroup` configuration blocks are set. Detailed below.
	CoreInstanceFleet ClusterCoreInstanceFleetPtrInput
	// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [core node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-core).
	CoreInstanceGroup ClusterCoreInstanceGroupPtrInput
	// Custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.
	CustomAmiId pulumi.StringPtrInput
	// Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.
	EbsRootVolumeSize pulumi.IntPtrInput
	// Attributes for the EC2 instances running the job flow. See below.
	Ec2Attributes ClusterEc2AttributesPtrInput
	// Switch on/off run cluster with no steps or when all steps are complete (default is on)
	KeepJobFlowAliveWhenNoSteps pulumi.BoolPtrInput
	// Kerberos configuration for the cluster. See below.
	KerberosAttributes ClusterKerberosAttributesPtrInput
	// List of [step states](https://docs.aws.amazon.com/emr/latest/APIReference/API_StepStatus.html) used to filter returned steps
	ListStepsStates pulumi.StringArrayInput
	// AWS KMS customer master key (CMK) key ID or arn used for encrypting log files. This attribute is only available with EMR version 5.30.0 and later, excluding EMR 6.0.0.
	LogEncryptionKmsKeyId pulumi.StringPtrInput
	// S3 bucket to write the log files of the job flow. If a value is not provided, logs are not created.
	LogUri pulumi.StringPtrInput
	// Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the master node type. Cannot be specified if any `masterInstanceGroup` configuration blocks are set. Detailed below.
	MasterInstanceFleet ClusterMasterInstanceFleetPtrInput
	// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [master node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-master).
	MasterInstanceGroup ClusterMasterInstanceGroupPtrInput
	// Name of the job flow.
	Name pulumi.StringPtrInput
	// Release label for the Amazon EMR release.
	ReleaseLabel pulumi.StringInput
	// Way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an `instance group` is resized.
	ScaleDownBehavior pulumi.StringPtrInput
	// Security configuration name to attach to the EMR cluster. Only valid for EMR clusters with `releaseLabel` 4.8.0 or greater.
	SecurityConfiguration pulumi.StringPtrInput
	// IAM role that will be assumed by the Amazon EMR service to access AWS resources.
	ServiceRole pulumi.StringInput
	// Number of steps that can be executed concurrently. You can specify a maximum of 256 steps. Only valid for EMR clusters with `releaseLabel` 5.28.0 or greater (default is 1).
	StepConcurrencyLevel pulumi.IntPtrInput
	// List of steps to run when creating the cluster. See below. It is highly recommended to utilize the lifecycle resource options block with `ignoreChanges` if other steps are being managed outside of this provider.
	Steps ClusterStepArrayInput
	// list of tags to apply to the EMR Cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// Switch on/off termination protection (default is `false`, except when using multiple master nodes). Before attempting to destroy the resource when termination protection is enabled, this configuration must be applied with its value set to `false`.
	TerminationProtection pulumi.BoolPtrInput
	// Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default value is `true`.
	VisibleToAllUsers pulumi.BoolPtrInput
}

func (ClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterArgs)(nil)).Elem()
}

type ClusterInput interface {
	pulumi.Input

	ToClusterOutput() ClusterOutput
	ToClusterOutputWithContext(ctx context.Context) ClusterOutput
}

func (*Cluster) ElementType() reflect.Type {
	return reflect.TypeOf((**Cluster)(nil)).Elem()
}

func (i *Cluster) ToClusterOutput() ClusterOutput {
	return i.ToClusterOutputWithContext(context.Background())
}

func (i *Cluster) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOutput)
}

// ClusterArrayInput is an input type that accepts ClusterArray and ClusterArrayOutput values.
// You can construct a concrete instance of `ClusterArrayInput` via:
//
//	ClusterArray{ ClusterArgs{...} }
type ClusterArrayInput interface {
	pulumi.Input

	ToClusterArrayOutput() ClusterArrayOutput
	ToClusterArrayOutputWithContext(context.Context) ClusterArrayOutput
}

type ClusterArray []ClusterInput

func (ClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Cluster)(nil)).Elem()
}

func (i ClusterArray) ToClusterArrayOutput() ClusterArrayOutput {
	return i.ToClusterArrayOutputWithContext(context.Background())
}

func (i ClusterArray) ToClusterArrayOutputWithContext(ctx context.Context) ClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterArrayOutput)
}

// ClusterMapInput is an input type that accepts ClusterMap and ClusterMapOutput values.
// You can construct a concrete instance of `ClusterMapInput` via:
//
//	ClusterMap{ "key": ClusterArgs{...} }
type ClusterMapInput interface {
	pulumi.Input

	ToClusterMapOutput() ClusterMapOutput
	ToClusterMapOutputWithContext(context.Context) ClusterMapOutput
}

type ClusterMap map[string]ClusterInput

func (ClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Cluster)(nil)).Elem()
}

func (i ClusterMap) ToClusterMapOutput() ClusterMapOutput {
	return i.ToClusterMapOutputWithContext(context.Background())
}

func (i ClusterMap) ToClusterMapOutputWithContext(ctx context.Context) ClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMapOutput)
}

type ClusterOutput struct{ *pulumi.OutputState }

func (ClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Cluster)(nil)).Elem()
}

func (o ClusterOutput) ToClusterOutput() ClusterOutput {
	return o
}

func (o ClusterOutput) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return o
}

// JSON string for selecting additional features such as adding proxy information. Note: Currently there is no API to retrieve the value of this argument after EMR cluster creation from provider, therefore the provider cannot detect drift from the actual EMR cluster if its value is changed outside the provider.
func (o ClusterOutput) AdditionalInfo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.AdditionalInfo }).(pulumi.StringPtrOutput)
}

// A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster. For a list of applications available for each Amazon EMR release version, see the [Amazon EMR Release Guide](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-release-components.html).
func (o ClusterOutput) Applications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringArrayOutput { return v.Applications }).(pulumi.StringArrayOutput)
}

// ARN of the cluster.
func (o ClusterOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// An auto-termination policy for an Amazon EMR cluster. An auto-termination policy defines the amount of idle time in seconds after which a cluster automatically terminates. See Auto Termination Policy Below.
func (o ClusterOutput) AutoTerminationPolicy() ClusterAutoTerminationPolicyPtrOutput {
	return o.ApplyT(func(v *Cluster) ClusterAutoTerminationPolicyPtrOutput { return v.AutoTerminationPolicy }).(ClusterAutoTerminationPolicyPtrOutput)
}

// IAM role for automatic scaling policies. The IAM role provides permissions that the automatic scaling feature requires to launch and terminate EC2 instances in an instance group.
func (o ClusterOutput) AutoscalingRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.AutoscalingRole }).(pulumi.StringPtrOutput)
}

// Ordered list of bootstrap actions that will be run before Hadoop is started on the cluster nodes. See below.
func (o ClusterOutput) BootstrapActions() ClusterBootstrapActionArrayOutput {
	return o.ApplyT(func(v *Cluster) ClusterBootstrapActionArrayOutput { return v.BootstrapActions }).(ClusterBootstrapActionArrayOutput)
}

func (o ClusterOutput) ClusterState() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ClusterState }).(pulumi.StringOutput)
}

// List of configurations supplied for the EMR cluster you are creating. Supply a configuration object for applications to override their default configuration. See [AWS Documentation](https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html) for more information.
func (o ClusterOutput) Configurations() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.Configurations }).(pulumi.StringPtrOutput)
}

// JSON string for supplying list of configurations for the EMR cluster.
func (o ClusterOutput) ConfigurationsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.ConfigurationsJson }).(pulumi.StringPtrOutput)
}

// Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the core node type. Cannot be specified if any `coreInstanceGroup` configuration blocks are set. Detailed below.
func (o ClusterOutput) CoreInstanceFleet() ClusterCoreInstanceFleetOutput {
	return o.ApplyT(func(v *Cluster) ClusterCoreInstanceFleetOutput { return v.CoreInstanceFleet }).(ClusterCoreInstanceFleetOutput)
}

// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [core node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-core).
func (o ClusterOutput) CoreInstanceGroup() ClusterCoreInstanceGroupOutput {
	return o.ApplyT(func(v *Cluster) ClusterCoreInstanceGroupOutput { return v.CoreInstanceGroup }).(ClusterCoreInstanceGroupOutput)
}

// Custom Amazon Linux AMI for the cluster (instead of an EMR-owned AMI). Available in Amazon EMR version 5.7.0 and later.
func (o ClusterOutput) CustomAmiId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.CustomAmiId }).(pulumi.StringPtrOutput)
}

// Size in GiB of the EBS root device volume of the Linux AMI that is used for each EC2 instance. Available in Amazon EMR version 4.x and later.
func (o ClusterOutput) EbsRootVolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.IntPtrOutput { return v.EbsRootVolumeSize }).(pulumi.IntPtrOutput)
}

// Attributes for the EC2 instances running the job flow. See below.
func (o ClusterOutput) Ec2Attributes() ClusterEc2AttributesPtrOutput {
	return o.ApplyT(func(v *Cluster) ClusterEc2AttributesPtrOutput { return v.Ec2Attributes }).(ClusterEc2AttributesPtrOutput)
}

// Switch on/off run cluster with no steps or when all steps are complete (default is on)
func (o ClusterOutput) KeepJobFlowAliveWhenNoSteps() pulumi.BoolOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolOutput { return v.KeepJobFlowAliveWhenNoSteps }).(pulumi.BoolOutput)
}

// Kerberos configuration for the cluster. See below.
func (o ClusterOutput) KerberosAttributes() ClusterKerberosAttributesPtrOutput {
	return o.ApplyT(func(v *Cluster) ClusterKerberosAttributesPtrOutput { return v.KerberosAttributes }).(ClusterKerberosAttributesPtrOutput)
}

// List of [step states](https://docs.aws.amazon.com/emr/latest/APIReference/API_StepStatus.html) used to filter returned steps
func (o ClusterOutput) ListStepsStates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringArrayOutput { return v.ListStepsStates }).(pulumi.StringArrayOutput)
}

// AWS KMS customer master key (CMK) key ID or arn used for encrypting log files. This attribute is only available with EMR version 5.30.0 and later, excluding EMR 6.0.0.
func (o ClusterOutput) LogEncryptionKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.LogEncryptionKmsKeyId }).(pulumi.StringPtrOutput)
}

// S3 bucket to write the log files of the job flow. If a value is not provided, logs are not created.
func (o ClusterOutput) LogUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.LogUri }).(pulumi.StringPtrOutput)
}

// Configuration block to use an [Instance Fleet](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-fleet.html) for the master node type. Cannot be specified if any `masterInstanceGroup` configuration blocks are set. Detailed below.
func (o ClusterOutput) MasterInstanceFleet() ClusterMasterInstanceFleetOutput {
	return o.ApplyT(func(v *Cluster) ClusterMasterInstanceFleetOutput { return v.MasterInstanceFleet }).(ClusterMasterInstanceFleetOutput)
}

// Configuration block to use an [Instance Group](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-instance-group-configuration.html#emr-plan-instance-groups) for the [master node type](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-master-core-task-nodes.html#emr-plan-master).
func (o ClusterOutput) MasterInstanceGroup() ClusterMasterInstanceGroupOutput {
	return o.ApplyT(func(v *Cluster) ClusterMasterInstanceGroupOutput { return v.MasterInstanceGroup }).(ClusterMasterInstanceGroupOutput)
}

// The DNS name of the master node. If the cluster is on a private subnet, this is the private DNS name. On a public subnet, this is the public DNS name.
func (o ClusterOutput) MasterPublicDns() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.MasterPublicDns }).(pulumi.StringOutput)
}

// Name of the job flow.
func (o ClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Release label for the Amazon EMR release.
func (o ClusterOutput) ReleaseLabel() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ReleaseLabel }).(pulumi.StringOutput)
}

// Way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an `instance group` is resized.
func (o ClusterOutput) ScaleDownBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ScaleDownBehavior }).(pulumi.StringOutput)
}

// Security configuration name to attach to the EMR cluster. Only valid for EMR clusters with `releaseLabel` 4.8.0 or greater.
func (o ClusterOutput) SecurityConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.SecurityConfiguration }).(pulumi.StringPtrOutput)
}

// IAM role that will be assumed by the Amazon EMR service to access AWS resources.
func (o ClusterOutput) ServiceRole() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ServiceRole }).(pulumi.StringOutput)
}

// Number of steps that can be executed concurrently. You can specify a maximum of 256 steps. Only valid for EMR clusters with `releaseLabel` 5.28.0 or greater (default is 1).
func (o ClusterOutput) StepConcurrencyLevel() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.IntPtrOutput { return v.StepConcurrencyLevel }).(pulumi.IntPtrOutput)
}

// List of steps to run when creating the cluster. See below. It is highly recommended to utilize the lifecycle resource options block with `ignoreChanges` if other steps are being managed outside of this provider.
func (o ClusterOutput) Steps() ClusterStepArrayOutput {
	return o.ApplyT(func(v *Cluster) ClusterStepArrayOutput { return v.Steps }).(ClusterStepArrayOutput)
}

// list of tags to apply to the EMR Cluster. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ClusterOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o ClusterOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

// Switch on/off termination protection (default is `false`, except when using multiple master nodes). Before attempting to destroy the resource when termination protection is enabled, this configuration must be applied with its value set to `false`.
func (o ClusterOutput) TerminationProtection() pulumi.BoolOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolOutput { return v.TerminationProtection }).(pulumi.BoolOutput)
}

// Whether the job flow is visible to all IAM users of the AWS account associated with the job flow. Default value is `true`.
func (o ClusterOutput) VisibleToAllUsers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolPtrOutput { return v.VisibleToAllUsers }).(pulumi.BoolPtrOutput)
}

type ClusterArrayOutput struct{ *pulumi.OutputState }

func (ClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Cluster)(nil)).Elem()
}

func (o ClusterArrayOutput) ToClusterArrayOutput() ClusterArrayOutput {
	return o
}

func (o ClusterArrayOutput) ToClusterArrayOutputWithContext(ctx context.Context) ClusterArrayOutput {
	return o
}

func (o ClusterArrayOutput) Index(i pulumi.IntInput) ClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Cluster {
		return vs[0].([]*Cluster)[vs[1].(int)]
	}).(ClusterOutput)
}

type ClusterMapOutput struct{ *pulumi.OutputState }

func (ClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Cluster)(nil)).Elem()
}

func (o ClusterMapOutput) ToClusterMapOutput() ClusterMapOutput {
	return o
}

func (o ClusterMapOutput) ToClusterMapOutputWithContext(ctx context.Context) ClusterMapOutput {
	return o
}

func (o ClusterMapOutput) MapIndex(k pulumi.StringInput) ClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Cluster {
		return vs[0].(map[string]*Cluster)[vs[1].(string)]
	}).(ClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterInput)(nil)).Elem(), &Cluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterArrayInput)(nil)).Elem(), ClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMapInput)(nil)).Elem(), ClusterMap{})
	pulumi.RegisterOutputType(ClusterOutput{})
	pulumi.RegisterOutputType(ClusterArrayOutput{})
	pulumi.RegisterOutputType(ClusterMapOutput{})
}
