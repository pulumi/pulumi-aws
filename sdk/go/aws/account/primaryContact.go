// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package account

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages the specified primary contact information associated with an AWS Account.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/account"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := account.NewPrimaryContact(ctx, "test", &account.PrimaryContactArgs{
//				AddressLine1:     pulumi.String("123 Any Street"),
//				City:             pulumi.String("Seattle"),
//				CompanyName:      pulumi.String("Example Corp, Inc."),
//				CountryCode:      pulumi.String("US"),
//				DistrictOrCounty: pulumi.String("King"),
//				FullName:         pulumi.String("My Name"),
//				PhoneNumber:      pulumi.String("+64211111111"),
//				PostalCode:       pulumi.String("98101"),
//				StateOrRegion:    pulumi.String("WA"),
//				WebsiteUrl:       pulumi.String("https://www.examplecorp.com"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type PrimaryContact struct {
	pulumi.CustomResourceState

	// The ID of the target account when managing member accounts. Will manage current user's account by default if omitted.
	AccountId pulumi.StringPtrOutput `pulumi:"accountId"`
	// The first line of the primary contact address.
	AddressLine1 pulumi.StringOutput `pulumi:"addressLine1"`
	// The second line of the primary contact address, if any.
	AddressLine2 pulumi.StringPtrOutput `pulumi:"addressLine2"`
	// The third line of the primary contact address, if any.
	AddressLine3 pulumi.StringPtrOutput `pulumi:"addressLine3"`
	// The city of the primary contact address.
	City pulumi.StringOutput `pulumi:"city"`
	// The name of the company associated with the primary contact information, if any.
	CompanyName pulumi.StringPtrOutput `pulumi:"companyName"`
	// The ISO-3166 two-letter country code for the primary contact address.
	CountryCode pulumi.StringOutput `pulumi:"countryCode"`
	// The district or county of the primary contact address, if any.
	DistrictOrCounty pulumi.StringPtrOutput `pulumi:"districtOrCounty"`
	// The full name of the primary contact address.
	FullName pulumi.StringOutput `pulumi:"fullName"`
	// The phone number of the primary contact information. The number will be validated and, in some countries, checked for activation.
	PhoneNumber pulumi.StringOutput `pulumi:"phoneNumber"`
	// The postal code of the primary contact address.
	PostalCode pulumi.StringOutput `pulumi:"postalCode"`
	// The state or region of the primary contact address. This field is required in selected countries.
	StateOrRegion pulumi.StringPtrOutput `pulumi:"stateOrRegion"`
	// The URL of the website associated with the primary contact information, if any.
	WebsiteUrl pulumi.StringPtrOutput `pulumi:"websiteUrl"`
}

// NewPrimaryContact registers a new resource with the given unique name, arguments, and options.
func NewPrimaryContact(ctx *pulumi.Context,
	name string, args *PrimaryContactArgs, opts ...pulumi.ResourceOption) (*PrimaryContact, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AddressLine1 == nil {
		return nil, errors.New("invalid value for required argument 'AddressLine1'")
	}
	if args.City == nil {
		return nil, errors.New("invalid value for required argument 'City'")
	}
	if args.CountryCode == nil {
		return nil, errors.New("invalid value for required argument 'CountryCode'")
	}
	if args.FullName == nil {
		return nil, errors.New("invalid value for required argument 'FullName'")
	}
	if args.PhoneNumber == nil {
		return nil, errors.New("invalid value for required argument 'PhoneNumber'")
	}
	if args.PostalCode == nil {
		return nil, errors.New("invalid value for required argument 'PostalCode'")
	}
	var resource PrimaryContact
	err := ctx.RegisterResource("aws:account/primaryContact:PrimaryContact", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrimaryContact gets an existing PrimaryContact resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrimaryContact(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrimaryContactState, opts ...pulumi.ResourceOption) (*PrimaryContact, error) {
	var resource PrimaryContact
	err := ctx.ReadResource("aws:account/primaryContact:PrimaryContact", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrimaryContact resources.
type primaryContactState struct {
	// The ID of the target account when managing member accounts. Will manage current user's account by default if omitted.
	AccountId *string `pulumi:"accountId"`
	// The first line of the primary contact address.
	AddressLine1 *string `pulumi:"addressLine1"`
	// The second line of the primary contact address, if any.
	AddressLine2 *string `pulumi:"addressLine2"`
	// The third line of the primary contact address, if any.
	AddressLine3 *string `pulumi:"addressLine3"`
	// The city of the primary contact address.
	City *string `pulumi:"city"`
	// The name of the company associated with the primary contact information, if any.
	CompanyName *string `pulumi:"companyName"`
	// The ISO-3166 two-letter country code for the primary contact address.
	CountryCode *string `pulumi:"countryCode"`
	// The district or county of the primary contact address, if any.
	DistrictOrCounty *string `pulumi:"districtOrCounty"`
	// The full name of the primary contact address.
	FullName *string `pulumi:"fullName"`
	// The phone number of the primary contact information. The number will be validated and, in some countries, checked for activation.
	PhoneNumber *string `pulumi:"phoneNumber"`
	// The postal code of the primary contact address.
	PostalCode *string `pulumi:"postalCode"`
	// The state or region of the primary contact address. This field is required in selected countries.
	StateOrRegion *string `pulumi:"stateOrRegion"`
	// The URL of the website associated with the primary contact information, if any.
	WebsiteUrl *string `pulumi:"websiteUrl"`
}

type PrimaryContactState struct {
	// The ID of the target account when managing member accounts. Will manage current user's account by default if omitted.
	AccountId pulumi.StringPtrInput
	// The first line of the primary contact address.
	AddressLine1 pulumi.StringPtrInput
	// The second line of the primary contact address, if any.
	AddressLine2 pulumi.StringPtrInput
	// The third line of the primary contact address, if any.
	AddressLine3 pulumi.StringPtrInput
	// The city of the primary contact address.
	City pulumi.StringPtrInput
	// The name of the company associated with the primary contact information, if any.
	CompanyName pulumi.StringPtrInput
	// The ISO-3166 two-letter country code for the primary contact address.
	CountryCode pulumi.StringPtrInput
	// The district or county of the primary contact address, if any.
	DistrictOrCounty pulumi.StringPtrInput
	// The full name of the primary contact address.
	FullName pulumi.StringPtrInput
	// The phone number of the primary contact information. The number will be validated and, in some countries, checked for activation.
	PhoneNumber pulumi.StringPtrInput
	// The postal code of the primary contact address.
	PostalCode pulumi.StringPtrInput
	// The state or region of the primary contact address. This field is required in selected countries.
	StateOrRegion pulumi.StringPtrInput
	// The URL of the website associated with the primary contact information, if any.
	WebsiteUrl pulumi.StringPtrInput
}

func (PrimaryContactState) ElementType() reflect.Type {
	return reflect.TypeOf((*primaryContactState)(nil)).Elem()
}

type primaryContactArgs struct {
	// The ID of the target account when managing member accounts. Will manage current user's account by default if omitted.
	AccountId *string `pulumi:"accountId"`
	// The first line of the primary contact address.
	AddressLine1 string `pulumi:"addressLine1"`
	// The second line of the primary contact address, if any.
	AddressLine2 *string `pulumi:"addressLine2"`
	// The third line of the primary contact address, if any.
	AddressLine3 *string `pulumi:"addressLine3"`
	// The city of the primary contact address.
	City string `pulumi:"city"`
	// The name of the company associated with the primary contact information, if any.
	CompanyName *string `pulumi:"companyName"`
	// The ISO-3166 two-letter country code for the primary contact address.
	CountryCode string `pulumi:"countryCode"`
	// The district or county of the primary contact address, if any.
	DistrictOrCounty *string `pulumi:"districtOrCounty"`
	// The full name of the primary contact address.
	FullName string `pulumi:"fullName"`
	// The phone number of the primary contact information. The number will be validated and, in some countries, checked for activation.
	PhoneNumber string `pulumi:"phoneNumber"`
	// The postal code of the primary contact address.
	PostalCode string `pulumi:"postalCode"`
	// The state or region of the primary contact address. This field is required in selected countries.
	StateOrRegion *string `pulumi:"stateOrRegion"`
	// The URL of the website associated with the primary contact information, if any.
	WebsiteUrl *string `pulumi:"websiteUrl"`
}

// The set of arguments for constructing a PrimaryContact resource.
type PrimaryContactArgs struct {
	// The ID of the target account when managing member accounts. Will manage current user's account by default if omitted.
	AccountId pulumi.StringPtrInput
	// The first line of the primary contact address.
	AddressLine1 pulumi.StringInput
	// The second line of the primary contact address, if any.
	AddressLine2 pulumi.StringPtrInput
	// The third line of the primary contact address, if any.
	AddressLine3 pulumi.StringPtrInput
	// The city of the primary contact address.
	City pulumi.StringInput
	// The name of the company associated with the primary contact information, if any.
	CompanyName pulumi.StringPtrInput
	// The ISO-3166 two-letter country code for the primary contact address.
	CountryCode pulumi.StringInput
	// The district or county of the primary contact address, if any.
	DistrictOrCounty pulumi.StringPtrInput
	// The full name of the primary contact address.
	FullName pulumi.StringInput
	// The phone number of the primary contact information. The number will be validated and, in some countries, checked for activation.
	PhoneNumber pulumi.StringInput
	// The postal code of the primary contact address.
	PostalCode pulumi.StringInput
	// The state or region of the primary contact address. This field is required in selected countries.
	StateOrRegion pulumi.StringPtrInput
	// The URL of the website associated with the primary contact information, if any.
	WebsiteUrl pulumi.StringPtrInput
}

func (PrimaryContactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*primaryContactArgs)(nil)).Elem()
}

type PrimaryContactInput interface {
	pulumi.Input

	ToPrimaryContactOutput() PrimaryContactOutput
	ToPrimaryContactOutputWithContext(ctx context.Context) PrimaryContactOutput
}

func (*PrimaryContact) ElementType() reflect.Type {
	return reflect.TypeOf((**PrimaryContact)(nil)).Elem()
}

func (i *PrimaryContact) ToPrimaryContactOutput() PrimaryContactOutput {
	return i.ToPrimaryContactOutputWithContext(context.Background())
}

func (i *PrimaryContact) ToPrimaryContactOutputWithContext(ctx context.Context) PrimaryContactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrimaryContactOutput)
}

// PrimaryContactArrayInput is an input type that accepts PrimaryContactArray and PrimaryContactArrayOutput values.
// You can construct a concrete instance of `PrimaryContactArrayInput` via:
//
//	PrimaryContactArray{ PrimaryContactArgs{...} }
type PrimaryContactArrayInput interface {
	pulumi.Input

	ToPrimaryContactArrayOutput() PrimaryContactArrayOutput
	ToPrimaryContactArrayOutputWithContext(context.Context) PrimaryContactArrayOutput
}

type PrimaryContactArray []PrimaryContactInput

func (PrimaryContactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrimaryContact)(nil)).Elem()
}

func (i PrimaryContactArray) ToPrimaryContactArrayOutput() PrimaryContactArrayOutput {
	return i.ToPrimaryContactArrayOutputWithContext(context.Background())
}

func (i PrimaryContactArray) ToPrimaryContactArrayOutputWithContext(ctx context.Context) PrimaryContactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrimaryContactArrayOutput)
}

// PrimaryContactMapInput is an input type that accepts PrimaryContactMap and PrimaryContactMapOutput values.
// You can construct a concrete instance of `PrimaryContactMapInput` via:
//
//	PrimaryContactMap{ "key": PrimaryContactArgs{...} }
type PrimaryContactMapInput interface {
	pulumi.Input

	ToPrimaryContactMapOutput() PrimaryContactMapOutput
	ToPrimaryContactMapOutputWithContext(context.Context) PrimaryContactMapOutput
}

type PrimaryContactMap map[string]PrimaryContactInput

func (PrimaryContactMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrimaryContact)(nil)).Elem()
}

func (i PrimaryContactMap) ToPrimaryContactMapOutput() PrimaryContactMapOutput {
	return i.ToPrimaryContactMapOutputWithContext(context.Background())
}

func (i PrimaryContactMap) ToPrimaryContactMapOutputWithContext(ctx context.Context) PrimaryContactMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrimaryContactMapOutput)
}

type PrimaryContactOutput struct{ *pulumi.OutputState }

func (PrimaryContactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrimaryContact)(nil)).Elem()
}

func (o PrimaryContactOutput) ToPrimaryContactOutput() PrimaryContactOutput {
	return o
}

func (o PrimaryContactOutput) ToPrimaryContactOutputWithContext(ctx context.Context) PrimaryContactOutput {
	return o
}

// The ID of the target account when managing member accounts. Will manage current user's account by default if omitted.
func (o PrimaryContactOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrimaryContact) pulumi.StringPtrOutput { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The first line of the primary contact address.
func (o PrimaryContactOutput) AddressLine1() pulumi.StringOutput {
	return o.ApplyT(func(v *PrimaryContact) pulumi.StringOutput { return v.AddressLine1 }).(pulumi.StringOutput)
}

// The second line of the primary contact address, if any.
func (o PrimaryContactOutput) AddressLine2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrimaryContact) pulumi.StringPtrOutput { return v.AddressLine2 }).(pulumi.StringPtrOutput)
}

// The third line of the primary contact address, if any.
func (o PrimaryContactOutput) AddressLine3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrimaryContact) pulumi.StringPtrOutput { return v.AddressLine3 }).(pulumi.StringPtrOutput)
}

// The city of the primary contact address.
func (o PrimaryContactOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v *PrimaryContact) pulumi.StringOutput { return v.City }).(pulumi.StringOutput)
}

// The name of the company associated with the primary contact information, if any.
func (o PrimaryContactOutput) CompanyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrimaryContact) pulumi.StringPtrOutput { return v.CompanyName }).(pulumi.StringPtrOutput)
}

// The ISO-3166 two-letter country code for the primary contact address.
func (o PrimaryContactOutput) CountryCode() pulumi.StringOutput {
	return o.ApplyT(func(v *PrimaryContact) pulumi.StringOutput { return v.CountryCode }).(pulumi.StringOutput)
}

// The district or county of the primary contact address, if any.
func (o PrimaryContactOutput) DistrictOrCounty() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrimaryContact) pulumi.StringPtrOutput { return v.DistrictOrCounty }).(pulumi.StringPtrOutput)
}

// The full name of the primary contact address.
func (o PrimaryContactOutput) FullName() pulumi.StringOutput {
	return o.ApplyT(func(v *PrimaryContact) pulumi.StringOutput { return v.FullName }).(pulumi.StringOutput)
}

// The phone number of the primary contact information. The number will be validated and, in some countries, checked for activation.
func (o PrimaryContactOutput) PhoneNumber() pulumi.StringOutput {
	return o.ApplyT(func(v *PrimaryContact) pulumi.StringOutput { return v.PhoneNumber }).(pulumi.StringOutput)
}

// The postal code of the primary contact address.
func (o PrimaryContactOutput) PostalCode() pulumi.StringOutput {
	return o.ApplyT(func(v *PrimaryContact) pulumi.StringOutput { return v.PostalCode }).(pulumi.StringOutput)
}

// The state or region of the primary contact address. This field is required in selected countries.
func (o PrimaryContactOutput) StateOrRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrimaryContact) pulumi.StringPtrOutput { return v.StateOrRegion }).(pulumi.StringPtrOutput)
}

// The URL of the website associated with the primary contact information, if any.
func (o PrimaryContactOutput) WebsiteUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrimaryContact) pulumi.StringPtrOutput { return v.WebsiteUrl }).(pulumi.StringPtrOutput)
}

type PrimaryContactArrayOutput struct{ *pulumi.OutputState }

func (PrimaryContactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrimaryContact)(nil)).Elem()
}

func (o PrimaryContactArrayOutput) ToPrimaryContactArrayOutput() PrimaryContactArrayOutput {
	return o
}

func (o PrimaryContactArrayOutput) ToPrimaryContactArrayOutputWithContext(ctx context.Context) PrimaryContactArrayOutput {
	return o
}

func (o PrimaryContactArrayOutput) Index(i pulumi.IntInput) PrimaryContactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PrimaryContact {
		return vs[0].([]*PrimaryContact)[vs[1].(int)]
	}).(PrimaryContactOutput)
}

type PrimaryContactMapOutput struct{ *pulumi.OutputState }

func (PrimaryContactMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrimaryContact)(nil)).Elem()
}

func (o PrimaryContactMapOutput) ToPrimaryContactMapOutput() PrimaryContactMapOutput {
	return o
}

func (o PrimaryContactMapOutput) ToPrimaryContactMapOutputWithContext(ctx context.Context) PrimaryContactMapOutput {
	return o
}

func (o PrimaryContactMapOutput) MapIndex(k pulumi.StringInput) PrimaryContactOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PrimaryContact {
		return vs[0].(map[string]*PrimaryContact)[vs[1].(string)]
	}).(PrimaryContactOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PrimaryContactInput)(nil)).Elem(), &PrimaryContact{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrimaryContactArrayInput)(nil)).Elem(), PrimaryContactArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrimaryContactMapInput)(nil)).Elem(), PrimaryContactMap{})
	pulumi.RegisterOutputType(PrimaryContactOutput{})
	pulumi.RegisterOutputType(PrimaryContactArrayOutput{})
	pulumi.RegisterOutputType(PrimaryContactMapOutput{})
}
