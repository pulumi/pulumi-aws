// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package drs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ReplicationConfigurationTemplatePitPolicy struct {
	// Whether this rule is enabled or not.
	Enabled *bool `pulumi:"enabled"`
	// How often, in the chosen units, a snapshot should be taken.
	Interval int `pulumi:"interval"`
	// Duration to retain a snapshot for, in the chosen `units`.
	RetentionDuration int `pulumi:"retentionDuration"`
	// ID of the rule. Valid values are integers.
	RuleId *int `pulumi:"ruleId"`
	// Units used to measure the `interval` and `retentionDuration`. Valid values are `MINUTE`, `HOUR`, and `DAY`.
	Units string `pulumi:"units"`
}

// ReplicationConfigurationTemplatePitPolicyInput is an input type that accepts ReplicationConfigurationTemplatePitPolicyArgs and ReplicationConfigurationTemplatePitPolicyOutput values.
// You can construct a concrete instance of `ReplicationConfigurationTemplatePitPolicyInput` via:
//
//	ReplicationConfigurationTemplatePitPolicyArgs{...}
type ReplicationConfigurationTemplatePitPolicyInput interface {
	pulumi.Input

	ToReplicationConfigurationTemplatePitPolicyOutput() ReplicationConfigurationTemplatePitPolicyOutput
	ToReplicationConfigurationTemplatePitPolicyOutputWithContext(context.Context) ReplicationConfigurationTemplatePitPolicyOutput
}

type ReplicationConfigurationTemplatePitPolicyArgs struct {
	// Whether this rule is enabled or not.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// How often, in the chosen units, a snapshot should be taken.
	Interval pulumi.IntInput `pulumi:"interval"`
	// Duration to retain a snapshot for, in the chosen `units`.
	RetentionDuration pulumi.IntInput `pulumi:"retentionDuration"`
	// ID of the rule. Valid values are integers.
	RuleId pulumi.IntPtrInput `pulumi:"ruleId"`
	// Units used to measure the `interval` and `retentionDuration`. Valid values are `MINUTE`, `HOUR`, and `DAY`.
	Units pulumi.StringInput `pulumi:"units"`
}

func (ReplicationConfigurationTemplatePitPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationConfigurationTemplatePitPolicy)(nil)).Elem()
}

func (i ReplicationConfigurationTemplatePitPolicyArgs) ToReplicationConfigurationTemplatePitPolicyOutput() ReplicationConfigurationTemplatePitPolicyOutput {
	return i.ToReplicationConfigurationTemplatePitPolicyOutputWithContext(context.Background())
}

func (i ReplicationConfigurationTemplatePitPolicyArgs) ToReplicationConfigurationTemplatePitPolicyOutputWithContext(ctx context.Context) ReplicationConfigurationTemplatePitPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationConfigurationTemplatePitPolicyOutput)
}

// ReplicationConfigurationTemplatePitPolicyArrayInput is an input type that accepts ReplicationConfigurationTemplatePitPolicyArray and ReplicationConfigurationTemplatePitPolicyArrayOutput values.
// You can construct a concrete instance of `ReplicationConfigurationTemplatePitPolicyArrayInput` via:
//
//	ReplicationConfigurationTemplatePitPolicyArray{ ReplicationConfigurationTemplatePitPolicyArgs{...} }
type ReplicationConfigurationTemplatePitPolicyArrayInput interface {
	pulumi.Input

	ToReplicationConfigurationTemplatePitPolicyArrayOutput() ReplicationConfigurationTemplatePitPolicyArrayOutput
	ToReplicationConfigurationTemplatePitPolicyArrayOutputWithContext(context.Context) ReplicationConfigurationTemplatePitPolicyArrayOutput
}

type ReplicationConfigurationTemplatePitPolicyArray []ReplicationConfigurationTemplatePitPolicyInput

func (ReplicationConfigurationTemplatePitPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationConfigurationTemplatePitPolicy)(nil)).Elem()
}

func (i ReplicationConfigurationTemplatePitPolicyArray) ToReplicationConfigurationTemplatePitPolicyArrayOutput() ReplicationConfigurationTemplatePitPolicyArrayOutput {
	return i.ToReplicationConfigurationTemplatePitPolicyArrayOutputWithContext(context.Background())
}

func (i ReplicationConfigurationTemplatePitPolicyArray) ToReplicationConfigurationTemplatePitPolicyArrayOutputWithContext(ctx context.Context) ReplicationConfigurationTemplatePitPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationConfigurationTemplatePitPolicyArrayOutput)
}

type ReplicationConfigurationTemplatePitPolicyOutput struct{ *pulumi.OutputState }

func (ReplicationConfigurationTemplatePitPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationConfigurationTemplatePitPolicy)(nil)).Elem()
}

func (o ReplicationConfigurationTemplatePitPolicyOutput) ToReplicationConfigurationTemplatePitPolicyOutput() ReplicationConfigurationTemplatePitPolicyOutput {
	return o
}

func (o ReplicationConfigurationTemplatePitPolicyOutput) ToReplicationConfigurationTemplatePitPolicyOutputWithContext(ctx context.Context) ReplicationConfigurationTemplatePitPolicyOutput {
	return o
}

// Whether this rule is enabled or not.
func (o ReplicationConfigurationTemplatePitPolicyOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ReplicationConfigurationTemplatePitPolicy) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// How often, in the chosen units, a snapshot should be taken.
func (o ReplicationConfigurationTemplatePitPolicyOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v ReplicationConfigurationTemplatePitPolicy) int { return v.Interval }).(pulumi.IntOutput)
}

// Duration to retain a snapshot for, in the chosen `units`.
func (o ReplicationConfigurationTemplatePitPolicyOutput) RetentionDuration() pulumi.IntOutput {
	return o.ApplyT(func(v ReplicationConfigurationTemplatePitPolicy) int { return v.RetentionDuration }).(pulumi.IntOutput)
}

// ID of the rule. Valid values are integers.
func (o ReplicationConfigurationTemplatePitPolicyOutput) RuleId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReplicationConfigurationTemplatePitPolicy) *int { return v.RuleId }).(pulumi.IntPtrOutput)
}

// Units used to measure the `interval` and `retentionDuration`. Valid values are `MINUTE`, `HOUR`, and `DAY`.
func (o ReplicationConfigurationTemplatePitPolicyOutput) Units() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicationConfigurationTemplatePitPolicy) string { return v.Units }).(pulumi.StringOutput)
}

type ReplicationConfigurationTemplatePitPolicyArrayOutput struct{ *pulumi.OutputState }

func (ReplicationConfigurationTemplatePitPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicationConfigurationTemplatePitPolicy)(nil)).Elem()
}

func (o ReplicationConfigurationTemplatePitPolicyArrayOutput) ToReplicationConfigurationTemplatePitPolicyArrayOutput() ReplicationConfigurationTemplatePitPolicyArrayOutput {
	return o
}

func (o ReplicationConfigurationTemplatePitPolicyArrayOutput) ToReplicationConfigurationTemplatePitPolicyArrayOutputWithContext(ctx context.Context) ReplicationConfigurationTemplatePitPolicyArrayOutput {
	return o
}

func (o ReplicationConfigurationTemplatePitPolicyArrayOutput) Index(i pulumi.IntInput) ReplicationConfigurationTemplatePitPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicationConfigurationTemplatePitPolicy {
		return vs[0].([]ReplicationConfigurationTemplatePitPolicy)[vs[1].(int)]
	}).(ReplicationConfigurationTemplatePitPolicyOutput)
}

type ReplicationConfigurationTemplateTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// ReplicationConfigurationTemplateTimeoutsInput is an input type that accepts ReplicationConfigurationTemplateTimeoutsArgs and ReplicationConfigurationTemplateTimeoutsOutput values.
// You can construct a concrete instance of `ReplicationConfigurationTemplateTimeoutsInput` via:
//
//	ReplicationConfigurationTemplateTimeoutsArgs{...}
type ReplicationConfigurationTemplateTimeoutsInput interface {
	pulumi.Input

	ToReplicationConfigurationTemplateTimeoutsOutput() ReplicationConfigurationTemplateTimeoutsOutput
	ToReplicationConfigurationTemplateTimeoutsOutputWithContext(context.Context) ReplicationConfigurationTemplateTimeoutsOutput
}

type ReplicationConfigurationTemplateTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (ReplicationConfigurationTemplateTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationConfigurationTemplateTimeouts)(nil)).Elem()
}

func (i ReplicationConfigurationTemplateTimeoutsArgs) ToReplicationConfigurationTemplateTimeoutsOutput() ReplicationConfigurationTemplateTimeoutsOutput {
	return i.ToReplicationConfigurationTemplateTimeoutsOutputWithContext(context.Background())
}

func (i ReplicationConfigurationTemplateTimeoutsArgs) ToReplicationConfigurationTemplateTimeoutsOutputWithContext(ctx context.Context) ReplicationConfigurationTemplateTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationConfigurationTemplateTimeoutsOutput)
}

func (i ReplicationConfigurationTemplateTimeoutsArgs) ToReplicationConfigurationTemplateTimeoutsPtrOutput() ReplicationConfigurationTemplateTimeoutsPtrOutput {
	return i.ToReplicationConfigurationTemplateTimeoutsPtrOutputWithContext(context.Background())
}

func (i ReplicationConfigurationTemplateTimeoutsArgs) ToReplicationConfigurationTemplateTimeoutsPtrOutputWithContext(ctx context.Context) ReplicationConfigurationTemplateTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationConfigurationTemplateTimeoutsOutput).ToReplicationConfigurationTemplateTimeoutsPtrOutputWithContext(ctx)
}

// ReplicationConfigurationTemplateTimeoutsPtrInput is an input type that accepts ReplicationConfigurationTemplateTimeoutsArgs, ReplicationConfigurationTemplateTimeoutsPtr and ReplicationConfigurationTemplateTimeoutsPtrOutput values.
// You can construct a concrete instance of `ReplicationConfigurationTemplateTimeoutsPtrInput` via:
//
//	        ReplicationConfigurationTemplateTimeoutsArgs{...}
//
//	or:
//
//	        nil
type ReplicationConfigurationTemplateTimeoutsPtrInput interface {
	pulumi.Input

	ToReplicationConfigurationTemplateTimeoutsPtrOutput() ReplicationConfigurationTemplateTimeoutsPtrOutput
	ToReplicationConfigurationTemplateTimeoutsPtrOutputWithContext(context.Context) ReplicationConfigurationTemplateTimeoutsPtrOutput
}

type replicationConfigurationTemplateTimeoutsPtrType ReplicationConfigurationTemplateTimeoutsArgs

func ReplicationConfigurationTemplateTimeoutsPtr(v *ReplicationConfigurationTemplateTimeoutsArgs) ReplicationConfigurationTemplateTimeoutsPtrInput {
	return (*replicationConfigurationTemplateTimeoutsPtrType)(v)
}

func (*replicationConfigurationTemplateTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationConfigurationTemplateTimeouts)(nil)).Elem()
}

func (i *replicationConfigurationTemplateTimeoutsPtrType) ToReplicationConfigurationTemplateTimeoutsPtrOutput() ReplicationConfigurationTemplateTimeoutsPtrOutput {
	return i.ToReplicationConfigurationTemplateTimeoutsPtrOutputWithContext(context.Background())
}

func (i *replicationConfigurationTemplateTimeoutsPtrType) ToReplicationConfigurationTemplateTimeoutsPtrOutputWithContext(ctx context.Context) ReplicationConfigurationTemplateTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationConfigurationTemplateTimeoutsPtrOutput)
}

type ReplicationConfigurationTemplateTimeoutsOutput struct{ *pulumi.OutputState }

func (ReplicationConfigurationTemplateTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationConfigurationTemplateTimeouts)(nil)).Elem()
}

func (o ReplicationConfigurationTemplateTimeoutsOutput) ToReplicationConfigurationTemplateTimeoutsOutput() ReplicationConfigurationTemplateTimeoutsOutput {
	return o
}

func (o ReplicationConfigurationTemplateTimeoutsOutput) ToReplicationConfigurationTemplateTimeoutsOutputWithContext(ctx context.Context) ReplicationConfigurationTemplateTimeoutsOutput {
	return o
}

func (o ReplicationConfigurationTemplateTimeoutsOutput) ToReplicationConfigurationTemplateTimeoutsPtrOutput() ReplicationConfigurationTemplateTimeoutsPtrOutput {
	return o.ToReplicationConfigurationTemplateTimeoutsPtrOutputWithContext(context.Background())
}

func (o ReplicationConfigurationTemplateTimeoutsOutput) ToReplicationConfigurationTemplateTimeoutsPtrOutputWithContext(ctx context.Context) ReplicationConfigurationTemplateTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicationConfigurationTemplateTimeouts) *ReplicationConfigurationTemplateTimeouts {
		return &v
	}).(ReplicationConfigurationTemplateTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ReplicationConfigurationTemplateTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationConfigurationTemplateTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o ReplicationConfigurationTemplateTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationConfigurationTemplateTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ReplicationConfigurationTemplateTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationConfigurationTemplateTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type ReplicationConfigurationTemplateTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (ReplicationConfigurationTemplateTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationConfigurationTemplateTimeouts)(nil)).Elem()
}

func (o ReplicationConfigurationTemplateTimeoutsPtrOutput) ToReplicationConfigurationTemplateTimeoutsPtrOutput() ReplicationConfigurationTemplateTimeoutsPtrOutput {
	return o
}

func (o ReplicationConfigurationTemplateTimeoutsPtrOutput) ToReplicationConfigurationTemplateTimeoutsPtrOutputWithContext(ctx context.Context) ReplicationConfigurationTemplateTimeoutsPtrOutput {
	return o
}

func (o ReplicationConfigurationTemplateTimeoutsPtrOutput) Elem() ReplicationConfigurationTemplateTimeoutsOutput {
	return o.ApplyT(func(v *ReplicationConfigurationTemplateTimeouts) ReplicationConfigurationTemplateTimeouts {
		if v != nil {
			return *v
		}
		var ret ReplicationConfigurationTemplateTimeouts
		return ret
	}).(ReplicationConfigurationTemplateTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ReplicationConfigurationTemplateTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationConfigurationTemplateTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o ReplicationConfigurationTemplateTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationConfigurationTemplateTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ReplicationConfigurationTemplateTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationConfigurationTemplateTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationConfigurationTemplatePitPolicyInput)(nil)).Elem(), ReplicationConfigurationTemplatePitPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationConfigurationTemplatePitPolicyArrayInput)(nil)).Elem(), ReplicationConfigurationTemplatePitPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationConfigurationTemplateTimeoutsInput)(nil)).Elem(), ReplicationConfigurationTemplateTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationConfigurationTemplateTimeoutsPtrInput)(nil)).Elem(), ReplicationConfigurationTemplateTimeoutsArgs{})
	pulumi.RegisterOutputType(ReplicationConfigurationTemplatePitPolicyOutput{})
	pulumi.RegisterOutputType(ReplicationConfigurationTemplatePitPolicyArrayOutput{})
	pulumi.RegisterOutputType(ReplicationConfigurationTemplateTimeoutsOutput{})
	pulumi.RegisterOutputType(ReplicationConfigurationTemplateTimeoutsPtrOutput{})
}
