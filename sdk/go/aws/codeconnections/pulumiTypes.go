// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codeconnections

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ConnectionTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// ConnectionTimeoutsInput is an input type that accepts ConnectionTimeoutsArgs and ConnectionTimeoutsOutput values.
// You can construct a concrete instance of `ConnectionTimeoutsInput` via:
//
//	ConnectionTimeoutsArgs{...}
type ConnectionTimeoutsInput interface {
	pulumi.Input

	ToConnectionTimeoutsOutput() ConnectionTimeoutsOutput
	ToConnectionTimeoutsOutputWithContext(context.Context) ConnectionTimeoutsOutput
}

type ConnectionTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (ConnectionTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionTimeouts)(nil)).Elem()
}

func (i ConnectionTimeoutsArgs) ToConnectionTimeoutsOutput() ConnectionTimeoutsOutput {
	return i.ToConnectionTimeoutsOutputWithContext(context.Background())
}

func (i ConnectionTimeoutsArgs) ToConnectionTimeoutsOutputWithContext(ctx context.Context) ConnectionTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionTimeoutsOutput)
}

func (i ConnectionTimeoutsArgs) ToConnectionTimeoutsPtrOutput() ConnectionTimeoutsPtrOutput {
	return i.ToConnectionTimeoutsPtrOutputWithContext(context.Background())
}

func (i ConnectionTimeoutsArgs) ToConnectionTimeoutsPtrOutputWithContext(ctx context.Context) ConnectionTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionTimeoutsOutput).ToConnectionTimeoutsPtrOutputWithContext(ctx)
}

// ConnectionTimeoutsPtrInput is an input type that accepts ConnectionTimeoutsArgs, ConnectionTimeoutsPtr and ConnectionTimeoutsPtrOutput values.
// You can construct a concrete instance of `ConnectionTimeoutsPtrInput` via:
//
//	        ConnectionTimeoutsArgs{...}
//
//	or:
//
//	        nil
type ConnectionTimeoutsPtrInput interface {
	pulumi.Input

	ToConnectionTimeoutsPtrOutput() ConnectionTimeoutsPtrOutput
	ToConnectionTimeoutsPtrOutputWithContext(context.Context) ConnectionTimeoutsPtrOutput
}

type connectionTimeoutsPtrType ConnectionTimeoutsArgs

func ConnectionTimeoutsPtr(v *ConnectionTimeoutsArgs) ConnectionTimeoutsPtrInput {
	return (*connectionTimeoutsPtrType)(v)
}

func (*connectionTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionTimeouts)(nil)).Elem()
}

func (i *connectionTimeoutsPtrType) ToConnectionTimeoutsPtrOutput() ConnectionTimeoutsPtrOutput {
	return i.ToConnectionTimeoutsPtrOutputWithContext(context.Background())
}

func (i *connectionTimeoutsPtrType) ToConnectionTimeoutsPtrOutputWithContext(ctx context.Context) ConnectionTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionTimeoutsPtrOutput)
}

type ConnectionTimeoutsOutput struct{ *pulumi.OutputState }

func (ConnectionTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionTimeouts)(nil)).Elem()
}

func (o ConnectionTimeoutsOutput) ToConnectionTimeoutsOutput() ConnectionTimeoutsOutput {
	return o
}

func (o ConnectionTimeoutsOutput) ToConnectionTimeoutsOutputWithContext(ctx context.Context) ConnectionTimeoutsOutput {
	return o
}

func (o ConnectionTimeoutsOutput) ToConnectionTimeoutsPtrOutput() ConnectionTimeoutsPtrOutput {
	return o.ToConnectionTimeoutsPtrOutputWithContext(context.Background())
}

func (o ConnectionTimeoutsOutput) ToConnectionTimeoutsPtrOutputWithContext(ctx context.Context) ConnectionTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConnectionTimeouts) *ConnectionTimeouts {
		return &v
	}).(ConnectionTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ConnectionTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o ConnectionTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ConnectionTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type ConnectionTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (ConnectionTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConnectionTimeouts)(nil)).Elem()
}

func (o ConnectionTimeoutsPtrOutput) ToConnectionTimeoutsPtrOutput() ConnectionTimeoutsPtrOutput {
	return o
}

func (o ConnectionTimeoutsPtrOutput) ToConnectionTimeoutsPtrOutputWithContext(ctx context.Context) ConnectionTimeoutsPtrOutput {
	return o
}

func (o ConnectionTimeoutsPtrOutput) Elem() ConnectionTimeoutsOutput {
	return o.ApplyT(func(v *ConnectionTimeouts) ConnectionTimeouts {
		if v != nil {
			return *v
		}
		var ret ConnectionTimeouts
		return ret
	}).(ConnectionTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ConnectionTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o ConnectionTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ConnectionTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConnectionTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type HostTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// HostTimeoutsInput is an input type that accepts HostTimeoutsArgs and HostTimeoutsOutput values.
// You can construct a concrete instance of `HostTimeoutsInput` via:
//
//	HostTimeoutsArgs{...}
type HostTimeoutsInput interface {
	pulumi.Input

	ToHostTimeoutsOutput() HostTimeoutsOutput
	ToHostTimeoutsOutputWithContext(context.Context) HostTimeoutsOutput
}

type HostTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (HostTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostTimeouts)(nil)).Elem()
}

func (i HostTimeoutsArgs) ToHostTimeoutsOutput() HostTimeoutsOutput {
	return i.ToHostTimeoutsOutputWithContext(context.Background())
}

func (i HostTimeoutsArgs) ToHostTimeoutsOutputWithContext(ctx context.Context) HostTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostTimeoutsOutput)
}

func (i HostTimeoutsArgs) ToHostTimeoutsPtrOutput() HostTimeoutsPtrOutput {
	return i.ToHostTimeoutsPtrOutputWithContext(context.Background())
}

func (i HostTimeoutsArgs) ToHostTimeoutsPtrOutputWithContext(ctx context.Context) HostTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostTimeoutsOutput).ToHostTimeoutsPtrOutputWithContext(ctx)
}

// HostTimeoutsPtrInput is an input type that accepts HostTimeoutsArgs, HostTimeoutsPtr and HostTimeoutsPtrOutput values.
// You can construct a concrete instance of `HostTimeoutsPtrInput` via:
//
//	        HostTimeoutsArgs{...}
//
//	or:
//
//	        nil
type HostTimeoutsPtrInput interface {
	pulumi.Input

	ToHostTimeoutsPtrOutput() HostTimeoutsPtrOutput
	ToHostTimeoutsPtrOutputWithContext(context.Context) HostTimeoutsPtrOutput
}

type hostTimeoutsPtrType HostTimeoutsArgs

func HostTimeoutsPtr(v *HostTimeoutsArgs) HostTimeoutsPtrInput {
	return (*hostTimeoutsPtrType)(v)
}

func (*hostTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostTimeouts)(nil)).Elem()
}

func (i *hostTimeoutsPtrType) ToHostTimeoutsPtrOutput() HostTimeoutsPtrOutput {
	return i.ToHostTimeoutsPtrOutputWithContext(context.Background())
}

func (i *hostTimeoutsPtrType) ToHostTimeoutsPtrOutputWithContext(ctx context.Context) HostTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostTimeoutsPtrOutput)
}

type HostTimeoutsOutput struct{ *pulumi.OutputState }

func (HostTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostTimeouts)(nil)).Elem()
}

func (o HostTimeoutsOutput) ToHostTimeoutsOutput() HostTimeoutsOutput {
	return o
}

func (o HostTimeoutsOutput) ToHostTimeoutsOutputWithContext(ctx context.Context) HostTimeoutsOutput {
	return o
}

func (o HostTimeoutsOutput) ToHostTimeoutsPtrOutput() HostTimeoutsPtrOutput {
	return o.ToHostTimeoutsPtrOutputWithContext(context.Background())
}

func (o HostTimeoutsOutput) ToHostTimeoutsPtrOutputWithContext(ctx context.Context) HostTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HostTimeouts) *HostTimeouts {
		return &v
	}).(HostTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o HostTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o HostTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o HostTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v HostTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type HostTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (HostTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostTimeouts)(nil)).Elem()
}

func (o HostTimeoutsPtrOutput) ToHostTimeoutsPtrOutput() HostTimeoutsPtrOutput {
	return o
}

func (o HostTimeoutsPtrOutput) ToHostTimeoutsPtrOutputWithContext(ctx context.Context) HostTimeoutsPtrOutput {
	return o
}

func (o HostTimeoutsPtrOutput) Elem() HostTimeoutsOutput {
	return o.ApplyT(func(v *HostTimeouts) HostTimeouts {
		if v != nil {
			return *v
		}
		var ret HostTimeouts
		return ret
	}).(HostTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o HostTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o HostTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o HostTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type HostVpcConfiguration struct {
	// ID of the security group or security groups associated with the Amazon VPC connected to the infrastructure where your provider type is installed.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The ID of the subnet or subnets associated with the Amazon VPC connected to the infrastructure where your provider type is installed.
	SubnetIds []string `pulumi:"subnetIds"`
	// The value of the Transport Layer Security (TLS) certificate associated with the infrastructure where your provider type is installed.
	TlsCertificate string `pulumi:"tlsCertificate"`
	// The ID of the Amazon VPC connected to the infrastructure where your provider type is installed.
	VpcId string `pulumi:"vpcId"`
}

// HostVpcConfigurationInput is an input type that accepts HostVpcConfigurationArgs and HostVpcConfigurationOutput values.
// You can construct a concrete instance of `HostVpcConfigurationInput` via:
//
//	HostVpcConfigurationArgs{...}
type HostVpcConfigurationInput interface {
	pulumi.Input

	ToHostVpcConfigurationOutput() HostVpcConfigurationOutput
	ToHostVpcConfigurationOutputWithContext(context.Context) HostVpcConfigurationOutput
}

type HostVpcConfigurationArgs struct {
	// ID of the security group or security groups associated with the Amazon VPC connected to the infrastructure where your provider type is installed.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The ID of the subnet or subnets associated with the Amazon VPC connected to the infrastructure where your provider type is installed.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// The value of the Transport Layer Security (TLS) certificate associated with the infrastructure where your provider type is installed.
	TlsCertificate pulumi.StringInput `pulumi:"tlsCertificate"`
	// The ID of the Amazon VPC connected to the infrastructure where your provider type is installed.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (HostVpcConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*HostVpcConfiguration)(nil)).Elem()
}

func (i HostVpcConfigurationArgs) ToHostVpcConfigurationOutput() HostVpcConfigurationOutput {
	return i.ToHostVpcConfigurationOutputWithContext(context.Background())
}

func (i HostVpcConfigurationArgs) ToHostVpcConfigurationOutputWithContext(ctx context.Context) HostVpcConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostVpcConfigurationOutput)
}

func (i HostVpcConfigurationArgs) ToHostVpcConfigurationPtrOutput() HostVpcConfigurationPtrOutput {
	return i.ToHostVpcConfigurationPtrOutputWithContext(context.Background())
}

func (i HostVpcConfigurationArgs) ToHostVpcConfigurationPtrOutputWithContext(ctx context.Context) HostVpcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostVpcConfigurationOutput).ToHostVpcConfigurationPtrOutputWithContext(ctx)
}

// HostVpcConfigurationPtrInput is an input type that accepts HostVpcConfigurationArgs, HostVpcConfigurationPtr and HostVpcConfigurationPtrOutput values.
// You can construct a concrete instance of `HostVpcConfigurationPtrInput` via:
//
//	        HostVpcConfigurationArgs{...}
//
//	or:
//
//	        nil
type HostVpcConfigurationPtrInput interface {
	pulumi.Input

	ToHostVpcConfigurationPtrOutput() HostVpcConfigurationPtrOutput
	ToHostVpcConfigurationPtrOutputWithContext(context.Context) HostVpcConfigurationPtrOutput
}

type hostVpcConfigurationPtrType HostVpcConfigurationArgs

func HostVpcConfigurationPtr(v *HostVpcConfigurationArgs) HostVpcConfigurationPtrInput {
	return (*hostVpcConfigurationPtrType)(v)
}

func (*hostVpcConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**HostVpcConfiguration)(nil)).Elem()
}

func (i *hostVpcConfigurationPtrType) ToHostVpcConfigurationPtrOutput() HostVpcConfigurationPtrOutput {
	return i.ToHostVpcConfigurationPtrOutputWithContext(context.Background())
}

func (i *hostVpcConfigurationPtrType) ToHostVpcConfigurationPtrOutputWithContext(ctx context.Context) HostVpcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostVpcConfigurationPtrOutput)
}

type HostVpcConfigurationOutput struct{ *pulumi.OutputState }

func (HostVpcConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*HostVpcConfiguration)(nil)).Elem()
}

func (o HostVpcConfigurationOutput) ToHostVpcConfigurationOutput() HostVpcConfigurationOutput {
	return o
}

func (o HostVpcConfigurationOutput) ToHostVpcConfigurationOutputWithContext(ctx context.Context) HostVpcConfigurationOutput {
	return o
}

func (o HostVpcConfigurationOutput) ToHostVpcConfigurationPtrOutput() HostVpcConfigurationPtrOutput {
	return o.ToHostVpcConfigurationPtrOutputWithContext(context.Background())
}

func (o HostVpcConfigurationOutput) ToHostVpcConfigurationPtrOutputWithContext(ctx context.Context) HostVpcConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v HostVpcConfiguration) *HostVpcConfiguration {
		return &v
	}).(HostVpcConfigurationPtrOutput)
}

// ID of the security group or security groups associated with the Amazon VPC connected to the infrastructure where your provider type is installed.
func (o HostVpcConfigurationOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HostVpcConfiguration) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The ID of the subnet or subnets associated with the Amazon VPC connected to the infrastructure where your provider type is installed.
func (o HostVpcConfigurationOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v HostVpcConfiguration) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// The value of the Transport Layer Security (TLS) certificate associated with the infrastructure where your provider type is installed.
func (o HostVpcConfigurationOutput) TlsCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v HostVpcConfiguration) string { return v.TlsCertificate }).(pulumi.StringOutput)
}

// The ID of the Amazon VPC connected to the infrastructure where your provider type is installed.
func (o HostVpcConfigurationOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v HostVpcConfiguration) string { return v.VpcId }).(pulumi.StringOutput)
}

type HostVpcConfigurationPtrOutput struct{ *pulumi.OutputState }

func (HostVpcConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostVpcConfiguration)(nil)).Elem()
}

func (o HostVpcConfigurationPtrOutput) ToHostVpcConfigurationPtrOutput() HostVpcConfigurationPtrOutput {
	return o
}

func (o HostVpcConfigurationPtrOutput) ToHostVpcConfigurationPtrOutputWithContext(ctx context.Context) HostVpcConfigurationPtrOutput {
	return o
}

func (o HostVpcConfigurationPtrOutput) Elem() HostVpcConfigurationOutput {
	return o.ApplyT(func(v *HostVpcConfiguration) HostVpcConfiguration {
		if v != nil {
			return *v
		}
		var ret HostVpcConfiguration
		return ret
	}).(HostVpcConfigurationOutput)
}

// ID of the security group or security groups associated with the Amazon VPC connected to the infrastructure where your provider type is installed.
func (o HostVpcConfigurationPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HostVpcConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// The ID of the subnet or subnets associated with the Amazon VPC connected to the infrastructure where your provider type is installed.
func (o HostVpcConfigurationPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HostVpcConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

// The value of the Transport Layer Security (TLS) certificate associated with the infrastructure where your provider type is installed.
func (o HostVpcConfigurationPtrOutput) TlsCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostVpcConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.TlsCertificate
	}).(pulumi.StringPtrOutput)
}

// The ID of the Amazon VPC connected to the infrastructure where your provider type is installed.
func (o HostVpcConfigurationPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostVpcConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.VpcId
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionTimeoutsInput)(nil)).Elem(), ConnectionTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionTimeoutsPtrInput)(nil)).Elem(), ConnectionTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostTimeoutsInput)(nil)).Elem(), HostTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostTimeoutsPtrInput)(nil)).Elem(), HostTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostVpcConfigurationInput)(nil)).Elem(), HostVpcConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostVpcConfigurationPtrInput)(nil)).Elem(), HostVpcConfigurationArgs{})
	pulumi.RegisterOutputType(ConnectionTimeoutsOutput{})
	pulumi.RegisterOutputType(ConnectionTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(HostTimeoutsOutput{})
	pulumi.RegisterOutputType(HostTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(HostVpcConfigurationOutput{})
	pulumi.RegisterOutputType(HostVpcConfigurationPtrOutput{})
}
