// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package alb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// > **Note:** `alb.LoadBalancer` is known as `lb.LoadBalancer`. The functionality is identical.
//
// Provides information about a Load Balancer.
//
// This data source can prove useful when a module accepts an LB as an input
// variable and needs to, for example, determine the security groups associated
// with it, etc.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/lb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			lbArn := ""
//			if param := cfg.Get("lbArn"); param != "" {
//				lbArn = param
//			}
//			lbName := ""
//			if param := cfg.Get("lbName"); param != "" {
//				lbName = param
//			}
//			_, err := lb.LookupLoadBalancer(ctx, &lb.LookupLoadBalancerArgs{
//				Arn:  pulumi.StringRef(lbArn),
//				Name: pulumi.StringRef(lbName),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupLoadBalancer(ctx *pulumi.Context, args *LookupLoadBalancerArgs, opts ...pulumi.InvokeOption) (*LookupLoadBalancerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupLoadBalancerResult
	err := ctx.Invoke("aws:alb/getLoadBalancer:getLoadBalancer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLoadBalancer.
type LookupLoadBalancerArgs struct {
	// Full ARN of the load balancer.
	Arn *string `pulumi:"arn"`
	// Unique name of the load balancer.
	Name *string `pulumi:"name"`
	// Mapping of tags, each pair of which must exactly match a pair on the desired load balancer.
	//
	// > **NOTE:** When both `arn` and `name` are specified, `arn` takes precedence. `tags` has lowest precedence.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getLoadBalancer.
type LookupLoadBalancerResult struct {
	AccessLogs                            *GetLoadBalancerAccessLogs `pulumi:"accessLogs"`
	Arn                                   *string                    `pulumi:"arn"`
	ArnSuffix                             *string                    `pulumi:"arnSuffix"`
	CustomerOwnedIpv4Pool                 *string                    `pulumi:"customerOwnedIpv4Pool"`
	DesyncMitigationMode                  *string                    `pulumi:"desyncMitigationMode"`
	DnsName                               *string                    `pulumi:"dnsName"`
	DropInvalidHeaderFields               *bool                      `pulumi:"dropInvalidHeaderFields"`
	EnableCrossZoneLoadBalancing          *bool                      `pulumi:"enableCrossZoneLoadBalancing"`
	EnableDeletionProtection              *bool                      `pulumi:"enableDeletionProtection"`
	EnableHttp2                           *bool                      `pulumi:"enableHttp2"`
	EnableTlsVersionAndCipherSuiteHeaders *bool                      `pulumi:"enableTlsVersionAndCipherSuiteHeaders"`
	EnableWafFailOpen                     *bool                      `pulumi:"enableWafFailOpen"`
	EnableXffClientPort                   *bool                      `pulumi:"enableXffClientPort"`
	// The provider-assigned unique ID for this managed resource.
	Id                      *string                        `pulumi:"id"`
	IdleTimeout             *int                           `pulumi:"idleTimeout"`
	Internal                *bool                          `pulumi:"internal"`
	IpAddressType           *string                        `pulumi:"ipAddressType"`
	LoadBalancerType        *string                        `pulumi:"loadBalancerType"`
	Name                    *string                        `pulumi:"name"`
	PreserveHostHeader      *bool                          `pulumi:"preserveHostHeader"`
	SecurityGroups          []string                       `pulumi:"securityGroups"`
	SubnetMappings          []GetLoadBalancerSubnetMapping `pulumi:"subnetMappings"`
	Subnets                 []string                       `pulumi:"subnets"`
	Tags                    map[string]string              `pulumi:"tags"`
	VpcId                   *string                        `pulumi:"vpcId"`
	XffHeaderProcessingMode *string                        `pulumi:"xffHeaderProcessingMode"`
	ZoneId                  *string                        `pulumi:"zoneId"`
}

func LookupLoadBalancerOutput(ctx *pulumi.Context, args LookupLoadBalancerOutputArgs, opts ...pulumi.InvokeOption) LookupLoadBalancerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLoadBalancerResult, error) {
			args := v.(LookupLoadBalancerArgs)
			r, err := LookupLoadBalancer(ctx, &args, opts...)
			var s LookupLoadBalancerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupLoadBalancerResultOutput)
}

// A collection of arguments for invoking getLoadBalancer.
type LookupLoadBalancerOutputArgs struct {
	// Full ARN of the load balancer.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// Unique name of the load balancer.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Mapping of tags, each pair of which must exactly match a pair on the desired load balancer.
	//
	// > **NOTE:** When both `arn` and `name` are specified, `arn` takes precedence. `tags` has lowest precedence.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupLoadBalancerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLoadBalancerArgs)(nil)).Elem()
}

// A collection of values returned by getLoadBalancer.
type LookupLoadBalancerResultOutput struct{ *pulumi.OutputState }

func (LookupLoadBalancerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLoadBalancerResult)(nil)).Elem()
}

func (o LookupLoadBalancerResultOutput) ToLookupLoadBalancerResultOutput() LookupLoadBalancerResultOutput {
	return o
}

func (o LookupLoadBalancerResultOutput) ToLookupLoadBalancerResultOutputWithContext(ctx context.Context) LookupLoadBalancerResultOutput {
	return o
}

func (o LookupLoadBalancerResultOutput) AccessLogs() GetLoadBalancerAccessLogsPtrOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) *GetLoadBalancerAccessLogs { return v.AccessLogs }).(GetLoadBalancerAccessLogsPtrOutput)
}

func (o LookupLoadBalancerResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

func (o LookupLoadBalancerResultOutput) ArnSuffix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) *string { return v.ArnSuffix }).(pulumi.StringPtrOutput)
}

func (o LookupLoadBalancerResultOutput) CustomerOwnedIpv4Pool() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) *string { return v.CustomerOwnedIpv4Pool }).(pulumi.StringPtrOutput)
}

func (o LookupLoadBalancerResultOutput) DesyncMitigationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) *string { return v.DesyncMitigationMode }).(pulumi.StringPtrOutput)
}

func (o LookupLoadBalancerResultOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) *string { return v.DnsName }).(pulumi.StringPtrOutput)
}

func (o LookupLoadBalancerResultOutput) DropInvalidHeaderFields() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) *bool { return v.DropInvalidHeaderFields }).(pulumi.BoolPtrOutput)
}

func (o LookupLoadBalancerResultOutput) EnableCrossZoneLoadBalancing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) *bool { return v.EnableCrossZoneLoadBalancing }).(pulumi.BoolPtrOutput)
}

func (o LookupLoadBalancerResultOutput) EnableDeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) *bool { return v.EnableDeletionProtection }).(pulumi.BoolPtrOutput)
}

func (o LookupLoadBalancerResultOutput) EnableHttp2() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) *bool { return v.EnableHttp2 }).(pulumi.BoolPtrOutput)
}

func (o LookupLoadBalancerResultOutput) EnableTlsVersionAndCipherSuiteHeaders() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) *bool { return v.EnableTlsVersionAndCipherSuiteHeaders }).(pulumi.BoolPtrOutput)
}

func (o LookupLoadBalancerResultOutput) EnableWafFailOpen() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) *bool { return v.EnableWafFailOpen }).(pulumi.BoolPtrOutput)
}

func (o LookupLoadBalancerResultOutput) EnableXffClientPort() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) *bool { return v.EnableXffClientPort }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupLoadBalancerResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupLoadBalancerResultOutput) IdleTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) *int { return v.IdleTimeout }).(pulumi.IntPtrOutput)
}

func (o LookupLoadBalancerResultOutput) Internal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) *bool { return v.Internal }).(pulumi.BoolPtrOutput)
}

func (o LookupLoadBalancerResultOutput) IpAddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) *string { return v.IpAddressType }).(pulumi.StringPtrOutput)
}

func (o LookupLoadBalancerResultOutput) LoadBalancerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) *string { return v.LoadBalancerType }).(pulumi.StringPtrOutput)
}

func (o LookupLoadBalancerResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupLoadBalancerResultOutput) PreserveHostHeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) *bool { return v.PreserveHostHeader }).(pulumi.BoolPtrOutput)
}

func (o LookupLoadBalancerResultOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o LookupLoadBalancerResultOutput) SubnetMappings() GetLoadBalancerSubnetMappingArrayOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) []GetLoadBalancerSubnetMapping { return v.SubnetMappings }).(GetLoadBalancerSubnetMappingArrayOutput)
}

func (o LookupLoadBalancerResultOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

func (o LookupLoadBalancerResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupLoadBalancerResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func (o LookupLoadBalancerResultOutput) XffHeaderProcessingMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) *string { return v.XffHeaderProcessingMode }).(pulumi.StringPtrOutput)
}

func (o LookupLoadBalancerResultOutput) ZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) *string { return v.ZoneId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLoadBalancerResultOutput{})
}
