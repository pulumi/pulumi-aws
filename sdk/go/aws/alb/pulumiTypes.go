// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package alb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ListenerDefaultAction struct {
	AuthenticateCognito *ListenerDefaultActionAuthenticateCognito `pulumi:"authenticateCognito"`
	AuthenticateOidc    *ListenerDefaultActionAuthenticateOidc    `pulumi:"authenticateOidc"`
	// Information for creating an action that returns a custom HTTP response. Required if `type` is `fixed-response`.
	FixedResponse *ListenerDefaultActionFixedResponse `pulumi:"fixedResponse"`
	Order         *int                                `pulumi:"order"`
	// Information for creating a redirect action. Required if `type` is `redirect`.
	Redirect *ListenerDefaultActionRedirect `pulumi:"redirect"`
	// The ARN of the Target Group to which to route traffic. Required if `type` is `forward`.
	TargetGroupArn *string `pulumi:"targetGroupArn"`
	// The type of routing action. Valid values are `forward`, `redirect`, `fixed-response`, `authenticate-cognito` and `authenticate-oidc`.
	Type string `pulumi:"type"`
}

// ListenerDefaultActionInput is an input type that accepts ListenerDefaultActionArgs and ListenerDefaultActionOutput values.
// You can construct a concrete instance of `ListenerDefaultActionInput` via:
//
// 		 ListenerDefaultActionArgs{...}
//
type ListenerDefaultActionInput interface {
	pulumi.Input

	ToListenerDefaultActionOutput() ListenerDefaultActionOutput
	ToListenerDefaultActionOutputWithContext(context.Context) ListenerDefaultActionOutput
}

type ListenerDefaultActionArgs struct {
	AuthenticateCognito ListenerDefaultActionAuthenticateCognitoPtrInput `pulumi:"authenticateCognito"`
	AuthenticateOidc    ListenerDefaultActionAuthenticateOidcPtrInput    `pulumi:"authenticateOidc"`
	// Information for creating an action that returns a custom HTTP response. Required if `type` is `fixed-response`.
	FixedResponse ListenerDefaultActionFixedResponsePtrInput `pulumi:"fixedResponse"`
	Order         pulumi.IntPtrInput                         `pulumi:"order"`
	// Information for creating a redirect action. Required if `type` is `redirect`.
	Redirect ListenerDefaultActionRedirectPtrInput `pulumi:"redirect"`
	// The ARN of the Target Group to which to route traffic. Required if `type` is `forward`.
	TargetGroupArn pulumi.StringPtrInput `pulumi:"targetGroupArn"`
	// The type of routing action. Valid values are `forward`, `redirect`, `fixed-response`, `authenticate-cognito` and `authenticate-oidc`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ListenerDefaultActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDefaultAction)(nil)).Elem()
}

func (i ListenerDefaultActionArgs) ToListenerDefaultActionOutput() ListenerDefaultActionOutput {
	return i.ToListenerDefaultActionOutputWithContext(context.Background())
}

func (i ListenerDefaultActionArgs) ToListenerDefaultActionOutputWithContext(ctx context.Context) ListenerDefaultActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionOutput)
}

// ListenerDefaultActionArrayInput is an input type that accepts ListenerDefaultActionArray and ListenerDefaultActionArrayOutput values.
// You can construct a concrete instance of `ListenerDefaultActionArrayInput` via:
//
// 		 ListenerDefaultActionArray{ ListenerDefaultActionArgs{...} }
//
type ListenerDefaultActionArrayInput interface {
	pulumi.Input

	ToListenerDefaultActionArrayOutput() ListenerDefaultActionArrayOutput
	ToListenerDefaultActionArrayOutputWithContext(context.Context) ListenerDefaultActionArrayOutput
}

type ListenerDefaultActionArray []ListenerDefaultActionInput

func (ListenerDefaultActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerDefaultAction)(nil)).Elem()
}

func (i ListenerDefaultActionArray) ToListenerDefaultActionArrayOutput() ListenerDefaultActionArrayOutput {
	return i.ToListenerDefaultActionArrayOutputWithContext(context.Background())
}

func (i ListenerDefaultActionArray) ToListenerDefaultActionArrayOutputWithContext(ctx context.Context) ListenerDefaultActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionArrayOutput)
}

type ListenerDefaultActionOutput struct{ *pulumi.OutputState }

func (ListenerDefaultActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDefaultAction)(nil)).Elem()
}

func (o ListenerDefaultActionOutput) ToListenerDefaultActionOutput() ListenerDefaultActionOutput {
	return o
}

func (o ListenerDefaultActionOutput) ToListenerDefaultActionOutputWithContext(ctx context.Context) ListenerDefaultActionOutput {
	return o
}

func (o ListenerDefaultActionOutput) AuthenticateCognito() ListenerDefaultActionAuthenticateCognitoPtrOutput {
	return o.ApplyT(func(v ListenerDefaultAction) *ListenerDefaultActionAuthenticateCognito { return v.AuthenticateCognito }).(ListenerDefaultActionAuthenticateCognitoPtrOutput)
}

func (o ListenerDefaultActionOutput) AuthenticateOidc() ListenerDefaultActionAuthenticateOidcPtrOutput {
	return o.ApplyT(func(v ListenerDefaultAction) *ListenerDefaultActionAuthenticateOidc { return v.AuthenticateOidc }).(ListenerDefaultActionAuthenticateOidcPtrOutput)
}

// Information for creating an action that returns a custom HTTP response. Required if `type` is `fixed-response`.
func (o ListenerDefaultActionOutput) FixedResponse() ListenerDefaultActionFixedResponsePtrOutput {
	return o.ApplyT(func(v ListenerDefaultAction) *ListenerDefaultActionFixedResponse { return v.FixedResponse }).(ListenerDefaultActionFixedResponsePtrOutput)
}

func (o ListenerDefaultActionOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerDefaultAction) *int { return v.Order }).(pulumi.IntPtrOutput)
}

// Information for creating a redirect action. Required if `type` is `redirect`.
func (o ListenerDefaultActionOutput) Redirect() ListenerDefaultActionRedirectPtrOutput {
	return o.ApplyT(func(v ListenerDefaultAction) *ListenerDefaultActionRedirect { return v.Redirect }).(ListenerDefaultActionRedirectPtrOutput)
}

// The ARN of the Target Group to which to route traffic. Required if `type` is `forward`.
func (o ListenerDefaultActionOutput) TargetGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultAction) *string { return v.TargetGroupArn }).(pulumi.StringPtrOutput)
}

// The type of routing action. Valid values are `forward`, `redirect`, `fixed-response`, `authenticate-cognito` and `authenticate-oidc`.
func (o ListenerDefaultActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultAction) string { return v.Type }).(pulumi.StringOutput)
}

type ListenerDefaultActionArrayOutput struct{ *pulumi.OutputState }

func (ListenerDefaultActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerDefaultAction)(nil)).Elem()
}

func (o ListenerDefaultActionArrayOutput) ToListenerDefaultActionArrayOutput() ListenerDefaultActionArrayOutput {
	return o
}

func (o ListenerDefaultActionArrayOutput) ToListenerDefaultActionArrayOutputWithContext(ctx context.Context) ListenerDefaultActionArrayOutput {
	return o
}

func (o ListenerDefaultActionArrayOutput) Index(i pulumi.IntInput) ListenerDefaultActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerDefaultAction {
		return vs[0].([]ListenerDefaultAction)[vs[1].(int)]
	}).(ListenerDefaultActionOutput)
}

type ListenerDefaultActionAuthenticateCognito struct {
	// The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
	AuthenticationRequestExtraParams map[string]interface{} `pulumi:"authenticationRequestExtraParams"`
	// The behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
	OnUnauthenticatedRequest *string `pulumi:"onUnauthenticatedRequest"`
	// The set of user claims to be requested from the IdP.
	Scope *string `pulumi:"scope"`
	// The name of the cookie used to maintain session information.
	SessionCookieName *string `pulumi:"sessionCookieName"`
	// The maximum duration of the authentication session, in seconds.
	SessionTimeout *int `pulumi:"sessionTimeout"`
	// The ARN of the Cognito user pool.
	UserPoolArn string `pulumi:"userPoolArn"`
	// The ID of the Cognito user pool client.
	UserPoolClientId string `pulumi:"userPoolClientId"`
	// The domain prefix or fully-qualified domain name of the Cognito user pool.
	UserPoolDomain string `pulumi:"userPoolDomain"`
}

// ListenerDefaultActionAuthenticateCognitoInput is an input type that accepts ListenerDefaultActionAuthenticateCognitoArgs and ListenerDefaultActionAuthenticateCognitoOutput values.
// You can construct a concrete instance of `ListenerDefaultActionAuthenticateCognitoInput` via:
//
// 		 ListenerDefaultActionAuthenticateCognitoArgs{...}
//
type ListenerDefaultActionAuthenticateCognitoInput interface {
	pulumi.Input

	ToListenerDefaultActionAuthenticateCognitoOutput() ListenerDefaultActionAuthenticateCognitoOutput
	ToListenerDefaultActionAuthenticateCognitoOutputWithContext(context.Context) ListenerDefaultActionAuthenticateCognitoOutput
}

type ListenerDefaultActionAuthenticateCognitoArgs struct {
	// The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
	AuthenticationRequestExtraParams pulumi.MapInput `pulumi:"authenticationRequestExtraParams"`
	// The behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
	OnUnauthenticatedRequest pulumi.StringPtrInput `pulumi:"onUnauthenticatedRequest"`
	// The set of user claims to be requested from the IdP.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The name of the cookie used to maintain session information.
	SessionCookieName pulumi.StringPtrInput `pulumi:"sessionCookieName"`
	// The maximum duration of the authentication session, in seconds.
	SessionTimeout pulumi.IntPtrInput `pulumi:"sessionTimeout"`
	// The ARN of the Cognito user pool.
	UserPoolArn pulumi.StringInput `pulumi:"userPoolArn"`
	// The ID of the Cognito user pool client.
	UserPoolClientId pulumi.StringInput `pulumi:"userPoolClientId"`
	// The domain prefix or fully-qualified domain name of the Cognito user pool.
	UserPoolDomain pulumi.StringInput `pulumi:"userPoolDomain"`
}

func (ListenerDefaultActionAuthenticateCognitoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDefaultActionAuthenticateCognito)(nil)).Elem()
}

func (i ListenerDefaultActionAuthenticateCognitoArgs) ToListenerDefaultActionAuthenticateCognitoOutput() ListenerDefaultActionAuthenticateCognitoOutput {
	return i.ToListenerDefaultActionAuthenticateCognitoOutputWithContext(context.Background())
}

func (i ListenerDefaultActionAuthenticateCognitoArgs) ToListenerDefaultActionAuthenticateCognitoOutputWithContext(ctx context.Context) ListenerDefaultActionAuthenticateCognitoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionAuthenticateCognitoOutput)
}

func (i ListenerDefaultActionAuthenticateCognitoArgs) ToListenerDefaultActionAuthenticateCognitoPtrOutput() ListenerDefaultActionAuthenticateCognitoPtrOutput {
	return i.ToListenerDefaultActionAuthenticateCognitoPtrOutputWithContext(context.Background())
}

func (i ListenerDefaultActionAuthenticateCognitoArgs) ToListenerDefaultActionAuthenticateCognitoPtrOutputWithContext(ctx context.Context) ListenerDefaultActionAuthenticateCognitoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionAuthenticateCognitoOutput).ToListenerDefaultActionAuthenticateCognitoPtrOutputWithContext(ctx)
}

// ListenerDefaultActionAuthenticateCognitoPtrInput is an input type that accepts ListenerDefaultActionAuthenticateCognitoArgs, ListenerDefaultActionAuthenticateCognitoPtr and ListenerDefaultActionAuthenticateCognitoPtrOutput values.
// You can construct a concrete instance of `ListenerDefaultActionAuthenticateCognitoPtrInput` via:
//
// 		 ListenerDefaultActionAuthenticateCognitoArgs{...}
//
//  or:
//
// 		 nil
//
type ListenerDefaultActionAuthenticateCognitoPtrInput interface {
	pulumi.Input

	ToListenerDefaultActionAuthenticateCognitoPtrOutput() ListenerDefaultActionAuthenticateCognitoPtrOutput
	ToListenerDefaultActionAuthenticateCognitoPtrOutputWithContext(context.Context) ListenerDefaultActionAuthenticateCognitoPtrOutput
}

type listenerDefaultActionAuthenticateCognitoPtrType ListenerDefaultActionAuthenticateCognitoArgs

func ListenerDefaultActionAuthenticateCognitoPtr(v *ListenerDefaultActionAuthenticateCognitoArgs) ListenerDefaultActionAuthenticateCognitoPtrInput {
	return (*listenerDefaultActionAuthenticateCognitoPtrType)(v)
}

func (*listenerDefaultActionAuthenticateCognitoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerDefaultActionAuthenticateCognito)(nil)).Elem()
}

func (i *listenerDefaultActionAuthenticateCognitoPtrType) ToListenerDefaultActionAuthenticateCognitoPtrOutput() ListenerDefaultActionAuthenticateCognitoPtrOutput {
	return i.ToListenerDefaultActionAuthenticateCognitoPtrOutputWithContext(context.Background())
}

func (i *listenerDefaultActionAuthenticateCognitoPtrType) ToListenerDefaultActionAuthenticateCognitoPtrOutputWithContext(ctx context.Context) ListenerDefaultActionAuthenticateCognitoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionAuthenticateCognitoPtrOutput)
}

type ListenerDefaultActionAuthenticateCognitoOutput struct{ *pulumi.OutputState }

func (ListenerDefaultActionAuthenticateCognitoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDefaultActionAuthenticateCognito)(nil)).Elem()
}

func (o ListenerDefaultActionAuthenticateCognitoOutput) ToListenerDefaultActionAuthenticateCognitoOutput() ListenerDefaultActionAuthenticateCognitoOutput {
	return o
}

func (o ListenerDefaultActionAuthenticateCognitoOutput) ToListenerDefaultActionAuthenticateCognitoOutputWithContext(ctx context.Context) ListenerDefaultActionAuthenticateCognitoOutput {
	return o
}

func (o ListenerDefaultActionAuthenticateCognitoOutput) ToListenerDefaultActionAuthenticateCognitoPtrOutput() ListenerDefaultActionAuthenticateCognitoPtrOutput {
	return o.ToListenerDefaultActionAuthenticateCognitoPtrOutputWithContext(context.Background())
}

func (o ListenerDefaultActionAuthenticateCognitoOutput) ToListenerDefaultActionAuthenticateCognitoPtrOutputWithContext(ctx context.Context) ListenerDefaultActionAuthenticateCognitoPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateCognito) *ListenerDefaultActionAuthenticateCognito {
		return &v
	}).(ListenerDefaultActionAuthenticateCognitoPtrOutput)
}

// The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
func (o ListenerDefaultActionAuthenticateCognitoOutput) AuthenticationRequestExtraParams() pulumi.MapOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateCognito) map[string]interface{} {
		return v.AuthenticationRequestExtraParams
	}).(pulumi.MapOutput)
}

// The behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
func (o ListenerDefaultActionAuthenticateCognitoOutput) OnUnauthenticatedRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateCognito) *string { return v.OnUnauthenticatedRequest }).(pulumi.StringPtrOutput)
}

// The set of user claims to be requested from the IdP.
func (o ListenerDefaultActionAuthenticateCognitoOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateCognito) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The name of the cookie used to maintain session information.
func (o ListenerDefaultActionAuthenticateCognitoOutput) SessionCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateCognito) *string { return v.SessionCookieName }).(pulumi.StringPtrOutput)
}

// The maximum duration of the authentication session, in seconds.
func (o ListenerDefaultActionAuthenticateCognitoOutput) SessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateCognito) *int { return v.SessionTimeout }).(pulumi.IntPtrOutput)
}

// The ARN of the Cognito user pool.
func (o ListenerDefaultActionAuthenticateCognitoOutput) UserPoolArn() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateCognito) string { return v.UserPoolArn }).(pulumi.StringOutput)
}

// The ID of the Cognito user pool client.
func (o ListenerDefaultActionAuthenticateCognitoOutput) UserPoolClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateCognito) string { return v.UserPoolClientId }).(pulumi.StringOutput)
}

// The domain prefix or fully-qualified domain name of the Cognito user pool.
func (o ListenerDefaultActionAuthenticateCognitoOutput) UserPoolDomain() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateCognito) string { return v.UserPoolDomain }).(pulumi.StringOutput)
}

type ListenerDefaultActionAuthenticateCognitoPtrOutput struct{ *pulumi.OutputState }

func (ListenerDefaultActionAuthenticateCognitoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerDefaultActionAuthenticateCognito)(nil)).Elem()
}

func (o ListenerDefaultActionAuthenticateCognitoPtrOutput) ToListenerDefaultActionAuthenticateCognitoPtrOutput() ListenerDefaultActionAuthenticateCognitoPtrOutput {
	return o
}

func (o ListenerDefaultActionAuthenticateCognitoPtrOutput) ToListenerDefaultActionAuthenticateCognitoPtrOutputWithContext(ctx context.Context) ListenerDefaultActionAuthenticateCognitoPtrOutput {
	return o
}

func (o ListenerDefaultActionAuthenticateCognitoPtrOutput) Elem() ListenerDefaultActionAuthenticateCognitoOutput {
	return o.ApplyT(func(v *ListenerDefaultActionAuthenticateCognito) ListenerDefaultActionAuthenticateCognito { return *v }).(ListenerDefaultActionAuthenticateCognitoOutput)
}

// The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
func (o ListenerDefaultActionAuthenticateCognitoPtrOutput) AuthenticationRequestExtraParams() pulumi.MapOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateCognito) map[string]interface{} {
		return v.AuthenticationRequestExtraParams
	}).(pulumi.MapOutput)
}

// The behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
func (o ListenerDefaultActionAuthenticateCognitoPtrOutput) OnUnauthenticatedRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateCognito) *string { return v.OnUnauthenticatedRequest }).(pulumi.StringPtrOutput)
}

// The set of user claims to be requested from the IdP.
func (o ListenerDefaultActionAuthenticateCognitoPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateCognito) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The name of the cookie used to maintain session information.
func (o ListenerDefaultActionAuthenticateCognitoPtrOutput) SessionCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateCognito) *string { return v.SessionCookieName }).(pulumi.StringPtrOutput)
}

// The maximum duration of the authentication session, in seconds.
func (o ListenerDefaultActionAuthenticateCognitoPtrOutput) SessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateCognito) *int { return v.SessionTimeout }).(pulumi.IntPtrOutput)
}

// The ARN of the Cognito user pool.
func (o ListenerDefaultActionAuthenticateCognitoPtrOutput) UserPoolArn() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateCognito) string { return v.UserPoolArn }).(pulumi.StringOutput)
}

// The ID of the Cognito user pool client.
func (o ListenerDefaultActionAuthenticateCognitoPtrOutput) UserPoolClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateCognito) string { return v.UserPoolClientId }).(pulumi.StringOutput)
}

// The domain prefix or fully-qualified domain name of the Cognito user pool.
func (o ListenerDefaultActionAuthenticateCognitoPtrOutput) UserPoolDomain() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateCognito) string { return v.UserPoolDomain }).(pulumi.StringOutput)
}

type ListenerDefaultActionAuthenticateOidc struct {
	// The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
	AuthenticationRequestExtraParams map[string]interface{} `pulumi:"authenticationRequestExtraParams"`
	// The authorization endpoint of the IdP.
	AuthorizationEndpoint string `pulumi:"authorizationEndpoint"`
	// The OAuth 2.0 client identifier.
	ClientId string `pulumi:"clientId"`
	// The OAuth 2.0 client secret.
	ClientSecret string `pulumi:"clientSecret"`
	// The OIDC issuer identifier of the IdP.
	Issuer string `pulumi:"issuer"`
	// The behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
	OnUnauthenticatedRequest *string `pulumi:"onUnauthenticatedRequest"`
	// The set of user claims to be requested from the IdP.
	Scope *string `pulumi:"scope"`
	// The name of the cookie used to maintain session information.
	SessionCookieName *string `pulumi:"sessionCookieName"`
	// The maximum duration of the authentication session, in seconds.
	SessionTimeout *int `pulumi:"sessionTimeout"`
	// The token endpoint of the IdP.
	TokenEndpoint string `pulumi:"tokenEndpoint"`
	// The user info endpoint of the IdP.
	UserInfoEndpoint string `pulumi:"userInfoEndpoint"`
}

// ListenerDefaultActionAuthenticateOidcInput is an input type that accepts ListenerDefaultActionAuthenticateOidcArgs and ListenerDefaultActionAuthenticateOidcOutput values.
// You can construct a concrete instance of `ListenerDefaultActionAuthenticateOidcInput` via:
//
// 		 ListenerDefaultActionAuthenticateOidcArgs{...}
//
type ListenerDefaultActionAuthenticateOidcInput interface {
	pulumi.Input

	ToListenerDefaultActionAuthenticateOidcOutput() ListenerDefaultActionAuthenticateOidcOutput
	ToListenerDefaultActionAuthenticateOidcOutputWithContext(context.Context) ListenerDefaultActionAuthenticateOidcOutput
}

type ListenerDefaultActionAuthenticateOidcArgs struct {
	// The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
	AuthenticationRequestExtraParams pulumi.MapInput `pulumi:"authenticationRequestExtraParams"`
	// The authorization endpoint of the IdP.
	AuthorizationEndpoint pulumi.StringInput `pulumi:"authorizationEndpoint"`
	// The OAuth 2.0 client identifier.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The OAuth 2.0 client secret.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// The OIDC issuer identifier of the IdP.
	Issuer pulumi.StringInput `pulumi:"issuer"`
	// The behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
	OnUnauthenticatedRequest pulumi.StringPtrInput `pulumi:"onUnauthenticatedRequest"`
	// The set of user claims to be requested from the IdP.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The name of the cookie used to maintain session information.
	SessionCookieName pulumi.StringPtrInput `pulumi:"sessionCookieName"`
	// The maximum duration of the authentication session, in seconds.
	SessionTimeout pulumi.IntPtrInput `pulumi:"sessionTimeout"`
	// The token endpoint of the IdP.
	TokenEndpoint pulumi.StringInput `pulumi:"tokenEndpoint"`
	// The user info endpoint of the IdP.
	UserInfoEndpoint pulumi.StringInput `pulumi:"userInfoEndpoint"`
}

func (ListenerDefaultActionAuthenticateOidcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDefaultActionAuthenticateOidc)(nil)).Elem()
}

func (i ListenerDefaultActionAuthenticateOidcArgs) ToListenerDefaultActionAuthenticateOidcOutput() ListenerDefaultActionAuthenticateOidcOutput {
	return i.ToListenerDefaultActionAuthenticateOidcOutputWithContext(context.Background())
}

func (i ListenerDefaultActionAuthenticateOidcArgs) ToListenerDefaultActionAuthenticateOidcOutputWithContext(ctx context.Context) ListenerDefaultActionAuthenticateOidcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionAuthenticateOidcOutput)
}

func (i ListenerDefaultActionAuthenticateOidcArgs) ToListenerDefaultActionAuthenticateOidcPtrOutput() ListenerDefaultActionAuthenticateOidcPtrOutput {
	return i.ToListenerDefaultActionAuthenticateOidcPtrOutputWithContext(context.Background())
}

func (i ListenerDefaultActionAuthenticateOidcArgs) ToListenerDefaultActionAuthenticateOidcPtrOutputWithContext(ctx context.Context) ListenerDefaultActionAuthenticateOidcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionAuthenticateOidcOutput).ToListenerDefaultActionAuthenticateOidcPtrOutputWithContext(ctx)
}

// ListenerDefaultActionAuthenticateOidcPtrInput is an input type that accepts ListenerDefaultActionAuthenticateOidcArgs, ListenerDefaultActionAuthenticateOidcPtr and ListenerDefaultActionAuthenticateOidcPtrOutput values.
// You can construct a concrete instance of `ListenerDefaultActionAuthenticateOidcPtrInput` via:
//
// 		 ListenerDefaultActionAuthenticateOidcArgs{...}
//
//  or:
//
// 		 nil
//
type ListenerDefaultActionAuthenticateOidcPtrInput interface {
	pulumi.Input

	ToListenerDefaultActionAuthenticateOidcPtrOutput() ListenerDefaultActionAuthenticateOidcPtrOutput
	ToListenerDefaultActionAuthenticateOidcPtrOutputWithContext(context.Context) ListenerDefaultActionAuthenticateOidcPtrOutput
}

type listenerDefaultActionAuthenticateOidcPtrType ListenerDefaultActionAuthenticateOidcArgs

func ListenerDefaultActionAuthenticateOidcPtr(v *ListenerDefaultActionAuthenticateOidcArgs) ListenerDefaultActionAuthenticateOidcPtrInput {
	return (*listenerDefaultActionAuthenticateOidcPtrType)(v)
}

func (*listenerDefaultActionAuthenticateOidcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerDefaultActionAuthenticateOidc)(nil)).Elem()
}

func (i *listenerDefaultActionAuthenticateOidcPtrType) ToListenerDefaultActionAuthenticateOidcPtrOutput() ListenerDefaultActionAuthenticateOidcPtrOutput {
	return i.ToListenerDefaultActionAuthenticateOidcPtrOutputWithContext(context.Background())
}

func (i *listenerDefaultActionAuthenticateOidcPtrType) ToListenerDefaultActionAuthenticateOidcPtrOutputWithContext(ctx context.Context) ListenerDefaultActionAuthenticateOidcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionAuthenticateOidcPtrOutput)
}

type ListenerDefaultActionAuthenticateOidcOutput struct{ *pulumi.OutputState }

func (ListenerDefaultActionAuthenticateOidcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDefaultActionAuthenticateOidc)(nil)).Elem()
}

func (o ListenerDefaultActionAuthenticateOidcOutput) ToListenerDefaultActionAuthenticateOidcOutput() ListenerDefaultActionAuthenticateOidcOutput {
	return o
}

func (o ListenerDefaultActionAuthenticateOidcOutput) ToListenerDefaultActionAuthenticateOidcOutputWithContext(ctx context.Context) ListenerDefaultActionAuthenticateOidcOutput {
	return o
}

func (o ListenerDefaultActionAuthenticateOidcOutput) ToListenerDefaultActionAuthenticateOidcPtrOutput() ListenerDefaultActionAuthenticateOidcPtrOutput {
	return o.ToListenerDefaultActionAuthenticateOidcPtrOutputWithContext(context.Background())
}

func (o ListenerDefaultActionAuthenticateOidcOutput) ToListenerDefaultActionAuthenticateOidcPtrOutputWithContext(ctx context.Context) ListenerDefaultActionAuthenticateOidcPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) *ListenerDefaultActionAuthenticateOidc {
		return &v
	}).(ListenerDefaultActionAuthenticateOidcPtrOutput)
}

// The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
func (o ListenerDefaultActionAuthenticateOidcOutput) AuthenticationRequestExtraParams() pulumi.MapOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) map[string]interface{} {
		return v.AuthenticationRequestExtraParams
	}).(pulumi.MapOutput)
}

// The authorization endpoint of the IdP.
func (o ListenerDefaultActionAuthenticateOidcOutput) AuthorizationEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) string { return v.AuthorizationEndpoint }).(pulumi.StringOutput)
}

// The OAuth 2.0 client identifier.
func (o ListenerDefaultActionAuthenticateOidcOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) string { return v.ClientId }).(pulumi.StringOutput)
}

// The OAuth 2.0 client secret.
func (o ListenerDefaultActionAuthenticateOidcOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The OIDC issuer identifier of the IdP.
func (o ListenerDefaultActionAuthenticateOidcOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) string { return v.Issuer }).(pulumi.StringOutput)
}

// The behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
func (o ListenerDefaultActionAuthenticateOidcOutput) OnUnauthenticatedRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) *string { return v.OnUnauthenticatedRequest }).(pulumi.StringPtrOutput)
}

// The set of user claims to be requested from the IdP.
func (o ListenerDefaultActionAuthenticateOidcOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The name of the cookie used to maintain session information.
func (o ListenerDefaultActionAuthenticateOidcOutput) SessionCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) *string { return v.SessionCookieName }).(pulumi.StringPtrOutput)
}

// The maximum duration of the authentication session, in seconds.
func (o ListenerDefaultActionAuthenticateOidcOutput) SessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) *int { return v.SessionTimeout }).(pulumi.IntPtrOutput)
}

// The token endpoint of the IdP.
func (o ListenerDefaultActionAuthenticateOidcOutput) TokenEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) string { return v.TokenEndpoint }).(pulumi.StringOutput)
}

// The user info endpoint of the IdP.
func (o ListenerDefaultActionAuthenticateOidcOutput) UserInfoEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) string { return v.UserInfoEndpoint }).(pulumi.StringOutput)
}

type ListenerDefaultActionAuthenticateOidcPtrOutput struct{ *pulumi.OutputState }

func (ListenerDefaultActionAuthenticateOidcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerDefaultActionAuthenticateOidc)(nil)).Elem()
}

func (o ListenerDefaultActionAuthenticateOidcPtrOutput) ToListenerDefaultActionAuthenticateOidcPtrOutput() ListenerDefaultActionAuthenticateOidcPtrOutput {
	return o
}

func (o ListenerDefaultActionAuthenticateOidcPtrOutput) ToListenerDefaultActionAuthenticateOidcPtrOutputWithContext(ctx context.Context) ListenerDefaultActionAuthenticateOidcPtrOutput {
	return o
}

func (o ListenerDefaultActionAuthenticateOidcPtrOutput) Elem() ListenerDefaultActionAuthenticateOidcOutput {
	return o.ApplyT(func(v *ListenerDefaultActionAuthenticateOidc) ListenerDefaultActionAuthenticateOidc { return *v }).(ListenerDefaultActionAuthenticateOidcOutput)
}

// The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
func (o ListenerDefaultActionAuthenticateOidcPtrOutput) AuthenticationRequestExtraParams() pulumi.MapOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) map[string]interface{} {
		return v.AuthenticationRequestExtraParams
	}).(pulumi.MapOutput)
}

// The authorization endpoint of the IdP.
func (o ListenerDefaultActionAuthenticateOidcPtrOutput) AuthorizationEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) string { return v.AuthorizationEndpoint }).(pulumi.StringOutput)
}

// The OAuth 2.0 client identifier.
func (o ListenerDefaultActionAuthenticateOidcPtrOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) string { return v.ClientId }).(pulumi.StringOutput)
}

// The OAuth 2.0 client secret.
func (o ListenerDefaultActionAuthenticateOidcPtrOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The OIDC issuer identifier of the IdP.
func (o ListenerDefaultActionAuthenticateOidcPtrOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) string { return v.Issuer }).(pulumi.StringOutput)
}

// The behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
func (o ListenerDefaultActionAuthenticateOidcPtrOutput) OnUnauthenticatedRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) *string { return v.OnUnauthenticatedRequest }).(pulumi.StringPtrOutput)
}

// The set of user claims to be requested from the IdP.
func (o ListenerDefaultActionAuthenticateOidcPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The name of the cookie used to maintain session information.
func (o ListenerDefaultActionAuthenticateOidcPtrOutput) SessionCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) *string { return v.SessionCookieName }).(pulumi.StringPtrOutput)
}

// The maximum duration of the authentication session, in seconds.
func (o ListenerDefaultActionAuthenticateOidcPtrOutput) SessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) *int { return v.SessionTimeout }).(pulumi.IntPtrOutput)
}

// The token endpoint of the IdP.
func (o ListenerDefaultActionAuthenticateOidcPtrOutput) TokenEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) string { return v.TokenEndpoint }).(pulumi.StringOutput)
}

// The user info endpoint of the IdP.
func (o ListenerDefaultActionAuthenticateOidcPtrOutput) UserInfoEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionAuthenticateOidc) string { return v.UserInfoEndpoint }).(pulumi.StringOutput)
}

type ListenerDefaultActionFixedResponse struct {
	// The content type. Valid values are `text/plain`, `text/css`, `text/html`, `application/javascript` and `application/json`.
	ContentType string `pulumi:"contentType"`
	// The message body.
	MessageBody *string `pulumi:"messageBody"`
	// The HTTP response code. Valid values are `2XX`, `4XX`, or `5XX`.
	StatusCode *string `pulumi:"statusCode"`
}

// ListenerDefaultActionFixedResponseInput is an input type that accepts ListenerDefaultActionFixedResponseArgs and ListenerDefaultActionFixedResponseOutput values.
// You can construct a concrete instance of `ListenerDefaultActionFixedResponseInput` via:
//
// 		 ListenerDefaultActionFixedResponseArgs{...}
//
type ListenerDefaultActionFixedResponseInput interface {
	pulumi.Input

	ToListenerDefaultActionFixedResponseOutput() ListenerDefaultActionFixedResponseOutput
	ToListenerDefaultActionFixedResponseOutputWithContext(context.Context) ListenerDefaultActionFixedResponseOutput
}

type ListenerDefaultActionFixedResponseArgs struct {
	// The content type. Valid values are `text/plain`, `text/css`, `text/html`, `application/javascript` and `application/json`.
	ContentType pulumi.StringInput `pulumi:"contentType"`
	// The message body.
	MessageBody pulumi.StringPtrInput `pulumi:"messageBody"`
	// The HTTP response code. Valid values are `2XX`, `4XX`, or `5XX`.
	StatusCode pulumi.StringPtrInput `pulumi:"statusCode"`
}

func (ListenerDefaultActionFixedResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDefaultActionFixedResponse)(nil)).Elem()
}

func (i ListenerDefaultActionFixedResponseArgs) ToListenerDefaultActionFixedResponseOutput() ListenerDefaultActionFixedResponseOutput {
	return i.ToListenerDefaultActionFixedResponseOutputWithContext(context.Background())
}

func (i ListenerDefaultActionFixedResponseArgs) ToListenerDefaultActionFixedResponseOutputWithContext(ctx context.Context) ListenerDefaultActionFixedResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionFixedResponseOutput)
}

func (i ListenerDefaultActionFixedResponseArgs) ToListenerDefaultActionFixedResponsePtrOutput() ListenerDefaultActionFixedResponsePtrOutput {
	return i.ToListenerDefaultActionFixedResponsePtrOutputWithContext(context.Background())
}

func (i ListenerDefaultActionFixedResponseArgs) ToListenerDefaultActionFixedResponsePtrOutputWithContext(ctx context.Context) ListenerDefaultActionFixedResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionFixedResponseOutput).ToListenerDefaultActionFixedResponsePtrOutputWithContext(ctx)
}

// ListenerDefaultActionFixedResponsePtrInput is an input type that accepts ListenerDefaultActionFixedResponseArgs, ListenerDefaultActionFixedResponsePtr and ListenerDefaultActionFixedResponsePtrOutput values.
// You can construct a concrete instance of `ListenerDefaultActionFixedResponsePtrInput` via:
//
// 		 ListenerDefaultActionFixedResponseArgs{...}
//
//  or:
//
// 		 nil
//
type ListenerDefaultActionFixedResponsePtrInput interface {
	pulumi.Input

	ToListenerDefaultActionFixedResponsePtrOutput() ListenerDefaultActionFixedResponsePtrOutput
	ToListenerDefaultActionFixedResponsePtrOutputWithContext(context.Context) ListenerDefaultActionFixedResponsePtrOutput
}

type listenerDefaultActionFixedResponsePtrType ListenerDefaultActionFixedResponseArgs

func ListenerDefaultActionFixedResponsePtr(v *ListenerDefaultActionFixedResponseArgs) ListenerDefaultActionFixedResponsePtrInput {
	return (*listenerDefaultActionFixedResponsePtrType)(v)
}

func (*listenerDefaultActionFixedResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerDefaultActionFixedResponse)(nil)).Elem()
}

func (i *listenerDefaultActionFixedResponsePtrType) ToListenerDefaultActionFixedResponsePtrOutput() ListenerDefaultActionFixedResponsePtrOutput {
	return i.ToListenerDefaultActionFixedResponsePtrOutputWithContext(context.Background())
}

func (i *listenerDefaultActionFixedResponsePtrType) ToListenerDefaultActionFixedResponsePtrOutputWithContext(ctx context.Context) ListenerDefaultActionFixedResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionFixedResponsePtrOutput)
}

type ListenerDefaultActionFixedResponseOutput struct{ *pulumi.OutputState }

func (ListenerDefaultActionFixedResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDefaultActionFixedResponse)(nil)).Elem()
}

func (o ListenerDefaultActionFixedResponseOutput) ToListenerDefaultActionFixedResponseOutput() ListenerDefaultActionFixedResponseOutput {
	return o
}

func (o ListenerDefaultActionFixedResponseOutput) ToListenerDefaultActionFixedResponseOutputWithContext(ctx context.Context) ListenerDefaultActionFixedResponseOutput {
	return o
}

func (o ListenerDefaultActionFixedResponseOutput) ToListenerDefaultActionFixedResponsePtrOutput() ListenerDefaultActionFixedResponsePtrOutput {
	return o.ToListenerDefaultActionFixedResponsePtrOutputWithContext(context.Background())
}

func (o ListenerDefaultActionFixedResponseOutput) ToListenerDefaultActionFixedResponsePtrOutputWithContext(ctx context.Context) ListenerDefaultActionFixedResponsePtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionFixedResponse) *ListenerDefaultActionFixedResponse {
		return &v
	}).(ListenerDefaultActionFixedResponsePtrOutput)
}

// The content type. Valid values are `text/plain`, `text/css`, `text/html`, `application/javascript` and `application/json`.
func (o ListenerDefaultActionFixedResponseOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionFixedResponse) string { return v.ContentType }).(pulumi.StringOutput)
}

// The message body.
func (o ListenerDefaultActionFixedResponseOutput) MessageBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionFixedResponse) *string { return v.MessageBody }).(pulumi.StringPtrOutput)
}

// The HTTP response code. Valid values are `2XX`, `4XX`, or `5XX`.
func (o ListenerDefaultActionFixedResponseOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionFixedResponse) *string { return v.StatusCode }).(pulumi.StringPtrOutput)
}

type ListenerDefaultActionFixedResponsePtrOutput struct{ *pulumi.OutputState }

func (ListenerDefaultActionFixedResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerDefaultActionFixedResponse)(nil)).Elem()
}

func (o ListenerDefaultActionFixedResponsePtrOutput) ToListenerDefaultActionFixedResponsePtrOutput() ListenerDefaultActionFixedResponsePtrOutput {
	return o
}

func (o ListenerDefaultActionFixedResponsePtrOutput) ToListenerDefaultActionFixedResponsePtrOutputWithContext(ctx context.Context) ListenerDefaultActionFixedResponsePtrOutput {
	return o
}

func (o ListenerDefaultActionFixedResponsePtrOutput) Elem() ListenerDefaultActionFixedResponseOutput {
	return o.ApplyT(func(v *ListenerDefaultActionFixedResponse) ListenerDefaultActionFixedResponse { return *v }).(ListenerDefaultActionFixedResponseOutput)
}

// The content type. Valid values are `text/plain`, `text/css`, `text/html`, `application/javascript` and `application/json`.
func (o ListenerDefaultActionFixedResponsePtrOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionFixedResponse) string { return v.ContentType }).(pulumi.StringOutput)
}

// The message body.
func (o ListenerDefaultActionFixedResponsePtrOutput) MessageBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionFixedResponse) *string { return v.MessageBody }).(pulumi.StringPtrOutput)
}

// The HTTP response code. Valid values are `2XX`, `4XX`, or `5XX`.
func (o ListenerDefaultActionFixedResponsePtrOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionFixedResponse) *string { return v.StatusCode }).(pulumi.StringPtrOutput)
}

type ListenerDefaultActionRedirect struct {
	// The hostname. This component is not percent-encoded. The hostname can contain `#{host}`. Defaults to `#{host}`.
	Host *string `pulumi:"host"`
	// The absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to `/#{path}`.
	Path *string `pulumi:"path"`
	// The port. Specify a value from `1` to `65535` or `#{port}`. Defaults to `#{port}`.
	Port *string `pulumi:"port"`
	// The protocol. Valid values are `HTTP`, `HTTPS`, or `#{protocol}`. Defaults to `#{protocol}`.
	Protocol *string `pulumi:"protocol"`
	// The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?". Defaults to `#{query}`.
	Query *string `pulumi:"query"`
	// The HTTP redirect code. The redirect is either permanent (`HTTP_301`) or temporary (`HTTP_302`).
	StatusCode string `pulumi:"statusCode"`
}

// ListenerDefaultActionRedirectInput is an input type that accepts ListenerDefaultActionRedirectArgs and ListenerDefaultActionRedirectOutput values.
// You can construct a concrete instance of `ListenerDefaultActionRedirectInput` via:
//
// 		 ListenerDefaultActionRedirectArgs{...}
//
type ListenerDefaultActionRedirectInput interface {
	pulumi.Input

	ToListenerDefaultActionRedirectOutput() ListenerDefaultActionRedirectOutput
	ToListenerDefaultActionRedirectOutputWithContext(context.Context) ListenerDefaultActionRedirectOutput
}

type ListenerDefaultActionRedirectArgs struct {
	// The hostname. This component is not percent-encoded. The hostname can contain `#{host}`. Defaults to `#{host}`.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to `/#{path}`.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port. Specify a value from `1` to `65535` or `#{port}`. Defaults to `#{port}`.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// The protocol. Valid values are `HTTP`, `HTTPS`, or `#{protocol}`. Defaults to `#{protocol}`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?". Defaults to `#{query}`.
	Query pulumi.StringPtrInput `pulumi:"query"`
	// The HTTP redirect code. The redirect is either permanent (`HTTP_301`) or temporary (`HTTP_302`).
	StatusCode pulumi.StringInput `pulumi:"statusCode"`
}

func (ListenerDefaultActionRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDefaultActionRedirect)(nil)).Elem()
}

func (i ListenerDefaultActionRedirectArgs) ToListenerDefaultActionRedirectOutput() ListenerDefaultActionRedirectOutput {
	return i.ToListenerDefaultActionRedirectOutputWithContext(context.Background())
}

func (i ListenerDefaultActionRedirectArgs) ToListenerDefaultActionRedirectOutputWithContext(ctx context.Context) ListenerDefaultActionRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionRedirectOutput)
}

func (i ListenerDefaultActionRedirectArgs) ToListenerDefaultActionRedirectPtrOutput() ListenerDefaultActionRedirectPtrOutput {
	return i.ToListenerDefaultActionRedirectPtrOutputWithContext(context.Background())
}

func (i ListenerDefaultActionRedirectArgs) ToListenerDefaultActionRedirectPtrOutputWithContext(ctx context.Context) ListenerDefaultActionRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionRedirectOutput).ToListenerDefaultActionRedirectPtrOutputWithContext(ctx)
}

// ListenerDefaultActionRedirectPtrInput is an input type that accepts ListenerDefaultActionRedirectArgs, ListenerDefaultActionRedirectPtr and ListenerDefaultActionRedirectPtrOutput values.
// You can construct a concrete instance of `ListenerDefaultActionRedirectPtrInput` via:
//
// 		 ListenerDefaultActionRedirectArgs{...}
//
//  or:
//
// 		 nil
//
type ListenerDefaultActionRedirectPtrInput interface {
	pulumi.Input

	ToListenerDefaultActionRedirectPtrOutput() ListenerDefaultActionRedirectPtrOutput
	ToListenerDefaultActionRedirectPtrOutputWithContext(context.Context) ListenerDefaultActionRedirectPtrOutput
}

type listenerDefaultActionRedirectPtrType ListenerDefaultActionRedirectArgs

func ListenerDefaultActionRedirectPtr(v *ListenerDefaultActionRedirectArgs) ListenerDefaultActionRedirectPtrInput {
	return (*listenerDefaultActionRedirectPtrType)(v)
}

func (*listenerDefaultActionRedirectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerDefaultActionRedirect)(nil)).Elem()
}

func (i *listenerDefaultActionRedirectPtrType) ToListenerDefaultActionRedirectPtrOutput() ListenerDefaultActionRedirectPtrOutput {
	return i.ToListenerDefaultActionRedirectPtrOutputWithContext(context.Background())
}

func (i *listenerDefaultActionRedirectPtrType) ToListenerDefaultActionRedirectPtrOutputWithContext(ctx context.Context) ListenerDefaultActionRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerDefaultActionRedirectPtrOutput)
}

type ListenerDefaultActionRedirectOutput struct{ *pulumi.OutputState }

func (ListenerDefaultActionRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerDefaultActionRedirect)(nil)).Elem()
}

func (o ListenerDefaultActionRedirectOutput) ToListenerDefaultActionRedirectOutput() ListenerDefaultActionRedirectOutput {
	return o
}

func (o ListenerDefaultActionRedirectOutput) ToListenerDefaultActionRedirectOutputWithContext(ctx context.Context) ListenerDefaultActionRedirectOutput {
	return o
}

func (o ListenerDefaultActionRedirectOutput) ToListenerDefaultActionRedirectPtrOutput() ListenerDefaultActionRedirectPtrOutput {
	return o.ToListenerDefaultActionRedirectPtrOutputWithContext(context.Background())
}

func (o ListenerDefaultActionRedirectOutput) ToListenerDefaultActionRedirectPtrOutputWithContext(ctx context.Context) ListenerDefaultActionRedirectPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionRedirect) *ListenerDefaultActionRedirect {
		return &v
	}).(ListenerDefaultActionRedirectPtrOutput)
}

// The hostname. This component is not percent-encoded. The hostname can contain `#{host}`. Defaults to `#{host}`.
func (o ListenerDefaultActionRedirectOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionRedirect) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to `/#{path}`.
func (o ListenerDefaultActionRedirectOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionRedirect) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port. Specify a value from `1` to `65535` or `#{port}`. Defaults to `#{port}`.
func (o ListenerDefaultActionRedirectOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionRedirect) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The protocol. Valid values are `HTTP`, `HTTPS`, or `#{protocol}`. Defaults to `#{protocol}`.
func (o ListenerDefaultActionRedirectOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionRedirect) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?". Defaults to `#{query}`.
func (o ListenerDefaultActionRedirectOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionRedirect) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// The HTTP redirect code. The redirect is either permanent (`HTTP_301`) or temporary (`HTTP_302`).
func (o ListenerDefaultActionRedirectOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionRedirect) string { return v.StatusCode }).(pulumi.StringOutput)
}

type ListenerDefaultActionRedirectPtrOutput struct{ *pulumi.OutputState }

func (ListenerDefaultActionRedirectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerDefaultActionRedirect)(nil)).Elem()
}

func (o ListenerDefaultActionRedirectPtrOutput) ToListenerDefaultActionRedirectPtrOutput() ListenerDefaultActionRedirectPtrOutput {
	return o
}

func (o ListenerDefaultActionRedirectPtrOutput) ToListenerDefaultActionRedirectPtrOutputWithContext(ctx context.Context) ListenerDefaultActionRedirectPtrOutput {
	return o
}

func (o ListenerDefaultActionRedirectPtrOutput) Elem() ListenerDefaultActionRedirectOutput {
	return o.ApplyT(func(v *ListenerDefaultActionRedirect) ListenerDefaultActionRedirect { return *v }).(ListenerDefaultActionRedirectOutput)
}

// The hostname. This component is not percent-encoded. The hostname can contain `#{host}`. Defaults to `#{host}`.
func (o ListenerDefaultActionRedirectPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionRedirect) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to `/#{path}`.
func (o ListenerDefaultActionRedirectPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionRedirect) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port. Specify a value from `1` to `65535` or `#{port}`. Defaults to `#{port}`.
func (o ListenerDefaultActionRedirectPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionRedirect) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The protocol. Valid values are `HTTP`, `HTTPS`, or `#{protocol}`. Defaults to `#{protocol}`.
func (o ListenerDefaultActionRedirectPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionRedirect) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?". Defaults to `#{query}`.
func (o ListenerDefaultActionRedirectPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerDefaultActionRedirect) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// The HTTP redirect code. The redirect is either permanent (`HTTP_301`) or temporary (`HTTP_302`).
func (o ListenerDefaultActionRedirectPtrOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerDefaultActionRedirect) string { return v.StatusCode }).(pulumi.StringOutput)
}

type ListenerRuleAction struct {
	// Information for creating an authenticate action using Cognito. Required if `type` is `authenticate-cognito`.
	AuthenticateCognito *ListenerRuleActionAuthenticateCognito `pulumi:"authenticateCognito"`
	// Information for creating an authenticate action using OIDC. Required if `type` is `authenticate-oidc`.
	AuthenticateOidc *ListenerRuleActionAuthenticateOidc `pulumi:"authenticateOidc"`
	// Information for creating an action that returns a custom HTTP response. Required if `type` is `fixed-response`.
	FixedResponse *ListenerRuleActionFixedResponse `pulumi:"fixedResponse"`
	Order         *int                             `pulumi:"order"`
	// Information for creating a redirect action. Required if `type` is `redirect`.
	Redirect *ListenerRuleActionRedirect `pulumi:"redirect"`
	// The ARN of the Target Group to which to route traffic. Required if `type` is `forward`.
	TargetGroupArn *string `pulumi:"targetGroupArn"`
	// The type of routing action. Valid values are `forward`, `redirect`, `fixed-response`, `authenticate-cognito` and `authenticate-oidc`.
	Type string `pulumi:"type"`
}

// ListenerRuleActionInput is an input type that accepts ListenerRuleActionArgs and ListenerRuleActionOutput values.
// You can construct a concrete instance of `ListenerRuleActionInput` via:
//
// 		 ListenerRuleActionArgs{...}
//
type ListenerRuleActionInput interface {
	pulumi.Input

	ToListenerRuleActionOutput() ListenerRuleActionOutput
	ToListenerRuleActionOutputWithContext(context.Context) ListenerRuleActionOutput
}

type ListenerRuleActionArgs struct {
	// Information for creating an authenticate action using Cognito. Required if `type` is `authenticate-cognito`.
	AuthenticateCognito ListenerRuleActionAuthenticateCognitoPtrInput `pulumi:"authenticateCognito"`
	// Information for creating an authenticate action using OIDC. Required if `type` is `authenticate-oidc`.
	AuthenticateOidc ListenerRuleActionAuthenticateOidcPtrInput `pulumi:"authenticateOidc"`
	// Information for creating an action that returns a custom HTTP response. Required if `type` is `fixed-response`.
	FixedResponse ListenerRuleActionFixedResponsePtrInput `pulumi:"fixedResponse"`
	Order         pulumi.IntPtrInput                      `pulumi:"order"`
	// Information for creating a redirect action. Required if `type` is `redirect`.
	Redirect ListenerRuleActionRedirectPtrInput `pulumi:"redirect"`
	// The ARN of the Target Group to which to route traffic. Required if `type` is `forward`.
	TargetGroupArn pulumi.StringPtrInput `pulumi:"targetGroupArn"`
	// The type of routing action. Valid values are `forward`, `redirect`, `fixed-response`, `authenticate-cognito` and `authenticate-oidc`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ListenerRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleAction)(nil)).Elem()
}

func (i ListenerRuleActionArgs) ToListenerRuleActionOutput() ListenerRuleActionOutput {
	return i.ToListenerRuleActionOutputWithContext(context.Background())
}

func (i ListenerRuleActionArgs) ToListenerRuleActionOutputWithContext(ctx context.Context) ListenerRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionOutput)
}

// ListenerRuleActionArrayInput is an input type that accepts ListenerRuleActionArray and ListenerRuleActionArrayOutput values.
// You can construct a concrete instance of `ListenerRuleActionArrayInput` via:
//
// 		 ListenerRuleActionArray{ ListenerRuleActionArgs{...} }
//
type ListenerRuleActionArrayInput interface {
	pulumi.Input

	ToListenerRuleActionArrayOutput() ListenerRuleActionArrayOutput
	ToListenerRuleActionArrayOutputWithContext(context.Context) ListenerRuleActionArrayOutput
}

type ListenerRuleActionArray []ListenerRuleActionInput

func (ListenerRuleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerRuleAction)(nil)).Elem()
}

func (i ListenerRuleActionArray) ToListenerRuleActionArrayOutput() ListenerRuleActionArrayOutput {
	return i.ToListenerRuleActionArrayOutputWithContext(context.Background())
}

func (i ListenerRuleActionArray) ToListenerRuleActionArrayOutputWithContext(ctx context.Context) ListenerRuleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionArrayOutput)
}

type ListenerRuleActionOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleAction)(nil)).Elem()
}

func (o ListenerRuleActionOutput) ToListenerRuleActionOutput() ListenerRuleActionOutput {
	return o
}

func (o ListenerRuleActionOutput) ToListenerRuleActionOutputWithContext(ctx context.Context) ListenerRuleActionOutput {
	return o
}

// Information for creating an authenticate action using Cognito. Required if `type` is `authenticate-cognito`.
func (o ListenerRuleActionOutput) AuthenticateCognito() ListenerRuleActionAuthenticateCognitoPtrOutput {
	return o.ApplyT(func(v ListenerRuleAction) *ListenerRuleActionAuthenticateCognito { return v.AuthenticateCognito }).(ListenerRuleActionAuthenticateCognitoPtrOutput)
}

// Information for creating an authenticate action using OIDC. Required if `type` is `authenticate-oidc`.
func (o ListenerRuleActionOutput) AuthenticateOidc() ListenerRuleActionAuthenticateOidcPtrOutput {
	return o.ApplyT(func(v ListenerRuleAction) *ListenerRuleActionAuthenticateOidc { return v.AuthenticateOidc }).(ListenerRuleActionAuthenticateOidcPtrOutput)
}

// Information for creating an action that returns a custom HTTP response. Required if `type` is `fixed-response`.
func (o ListenerRuleActionOutput) FixedResponse() ListenerRuleActionFixedResponsePtrOutput {
	return o.ApplyT(func(v ListenerRuleAction) *ListenerRuleActionFixedResponse { return v.FixedResponse }).(ListenerRuleActionFixedResponsePtrOutput)
}

func (o ListenerRuleActionOutput) Order() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerRuleAction) *int { return v.Order }).(pulumi.IntPtrOutput)
}

// Information for creating a redirect action. Required if `type` is `redirect`.
func (o ListenerRuleActionOutput) Redirect() ListenerRuleActionRedirectPtrOutput {
	return o.ApplyT(func(v ListenerRuleAction) *ListenerRuleActionRedirect { return v.Redirect }).(ListenerRuleActionRedirectPtrOutput)
}

// The ARN of the Target Group to which to route traffic. Required if `type` is `forward`.
func (o ListenerRuleActionOutput) TargetGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleAction) *string { return v.TargetGroupArn }).(pulumi.StringPtrOutput)
}

// The type of routing action. Valid values are `forward`, `redirect`, `fixed-response`, `authenticate-cognito` and `authenticate-oidc`.
func (o ListenerRuleActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleAction) string { return v.Type }).(pulumi.StringOutput)
}

type ListenerRuleActionArrayOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerRuleAction)(nil)).Elem()
}

func (o ListenerRuleActionArrayOutput) ToListenerRuleActionArrayOutput() ListenerRuleActionArrayOutput {
	return o
}

func (o ListenerRuleActionArrayOutput) ToListenerRuleActionArrayOutputWithContext(ctx context.Context) ListenerRuleActionArrayOutput {
	return o
}

func (o ListenerRuleActionArrayOutput) Index(i pulumi.IntInput) ListenerRuleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerRuleAction {
		return vs[0].([]ListenerRuleAction)[vs[1].(int)]
	}).(ListenerRuleActionOutput)
}

type ListenerRuleActionAuthenticateCognito struct {
	// The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
	AuthenticationRequestExtraParams map[string]interface{} `pulumi:"authenticationRequestExtraParams"`
	// The behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
	OnUnauthenticatedRequest *string `pulumi:"onUnauthenticatedRequest"`
	// The set of user claims to be requested from the IdP.
	Scope *string `pulumi:"scope"`
	// The name of the cookie used to maintain session information.
	SessionCookieName *string `pulumi:"sessionCookieName"`
	// The maximum duration of the authentication session, in seconds.
	SessionTimeout *int `pulumi:"sessionTimeout"`
	// The ARN of the Cognito user pool.
	UserPoolArn string `pulumi:"userPoolArn"`
	// The ID of the Cognito user pool client.
	UserPoolClientId string `pulumi:"userPoolClientId"`
	// The domain prefix or fully-qualified domain name of the Cognito user pool.
	UserPoolDomain string `pulumi:"userPoolDomain"`
}

// ListenerRuleActionAuthenticateCognitoInput is an input type that accepts ListenerRuleActionAuthenticateCognitoArgs and ListenerRuleActionAuthenticateCognitoOutput values.
// You can construct a concrete instance of `ListenerRuleActionAuthenticateCognitoInput` via:
//
// 		 ListenerRuleActionAuthenticateCognitoArgs{...}
//
type ListenerRuleActionAuthenticateCognitoInput interface {
	pulumi.Input

	ToListenerRuleActionAuthenticateCognitoOutput() ListenerRuleActionAuthenticateCognitoOutput
	ToListenerRuleActionAuthenticateCognitoOutputWithContext(context.Context) ListenerRuleActionAuthenticateCognitoOutput
}

type ListenerRuleActionAuthenticateCognitoArgs struct {
	// The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
	AuthenticationRequestExtraParams pulumi.MapInput `pulumi:"authenticationRequestExtraParams"`
	// The behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
	OnUnauthenticatedRequest pulumi.StringPtrInput `pulumi:"onUnauthenticatedRequest"`
	// The set of user claims to be requested from the IdP.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The name of the cookie used to maintain session information.
	SessionCookieName pulumi.StringPtrInput `pulumi:"sessionCookieName"`
	// The maximum duration of the authentication session, in seconds.
	SessionTimeout pulumi.IntPtrInput `pulumi:"sessionTimeout"`
	// The ARN of the Cognito user pool.
	UserPoolArn pulumi.StringInput `pulumi:"userPoolArn"`
	// The ID of the Cognito user pool client.
	UserPoolClientId pulumi.StringInput `pulumi:"userPoolClientId"`
	// The domain prefix or fully-qualified domain name of the Cognito user pool.
	UserPoolDomain pulumi.StringInput `pulumi:"userPoolDomain"`
}

func (ListenerRuleActionAuthenticateCognitoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleActionAuthenticateCognito)(nil)).Elem()
}

func (i ListenerRuleActionAuthenticateCognitoArgs) ToListenerRuleActionAuthenticateCognitoOutput() ListenerRuleActionAuthenticateCognitoOutput {
	return i.ToListenerRuleActionAuthenticateCognitoOutputWithContext(context.Background())
}

func (i ListenerRuleActionAuthenticateCognitoArgs) ToListenerRuleActionAuthenticateCognitoOutputWithContext(ctx context.Context) ListenerRuleActionAuthenticateCognitoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionAuthenticateCognitoOutput)
}

func (i ListenerRuleActionAuthenticateCognitoArgs) ToListenerRuleActionAuthenticateCognitoPtrOutput() ListenerRuleActionAuthenticateCognitoPtrOutput {
	return i.ToListenerRuleActionAuthenticateCognitoPtrOutputWithContext(context.Background())
}

func (i ListenerRuleActionAuthenticateCognitoArgs) ToListenerRuleActionAuthenticateCognitoPtrOutputWithContext(ctx context.Context) ListenerRuleActionAuthenticateCognitoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionAuthenticateCognitoOutput).ToListenerRuleActionAuthenticateCognitoPtrOutputWithContext(ctx)
}

// ListenerRuleActionAuthenticateCognitoPtrInput is an input type that accepts ListenerRuleActionAuthenticateCognitoArgs, ListenerRuleActionAuthenticateCognitoPtr and ListenerRuleActionAuthenticateCognitoPtrOutput values.
// You can construct a concrete instance of `ListenerRuleActionAuthenticateCognitoPtrInput` via:
//
// 		 ListenerRuleActionAuthenticateCognitoArgs{...}
//
//  or:
//
// 		 nil
//
type ListenerRuleActionAuthenticateCognitoPtrInput interface {
	pulumi.Input

	ToListenerRuleActionAuthenticateCognitoPtrOutput() ListenerRuleActionAuthenticateCognitoPtrOutput
	ToListenerRuleActionAuthenticateCognitoPtrOutputWithContext(context.Context) ListenerRuleActionAuthenticateCognitoPtrOutput
}

type listenerRuleActionAuthenticateCognitoPtrType ListenerRuleActionAuthenticateCognitoArgs

func ListenerRuleActionAuthenticateCognitoPtr(v *ListenerRuleActionAuthenticateCognitoArgs) ListenerRuleActionAuthenticateCognitoPtrInput {
	return (*listenerRuleActionAuthenticateCognitoPtrType)(v)
}

func (*listenerRuleActionAuthenticateCognitoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleActionAuthenticateCognito)(nil)).Elem()
}

func (i *listenerRuleActionAuthenticateCognitoPtrType) ToListenerRuleActionAuthenticateCognitoPtrOutput() ListenerRuleActionAuthenticateCognitoPtrOutput {
	return i.ToListenerRuleActionAuthenticateCognitoPtrOutputWithContext(context.Background())
}

func (i *listenerRuleActionAuthenticateCognitoPtrType) ToListenerRuleActionAuthenticateCognitoPtrOutputWithContext(ctx context.Context) ListenerRuleActionAuthenticateCognitoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionAuthenticateCognitoPtrOutput)
}

type ListenerRuleActionAuthenticateCognitoOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionAuthenticateCognitoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleActionAuthenticateCognito)(nil)).Elem()
}

func (o ListenerRuleActionAuthenticateCognitoOutput) ToListenerRuleActionAuthenticateCognitoOutput() ListenerRuleActionAuthenticateCognitoOutput {
	return o
}

func (o ListenerRuleActionAuthenticateCognitoOutput) ToListenerRuleActionAuthenticateCognitoOutputWithContext(ctx context.Context) ListenerRuleActionAuthenticateCognitoOutput {
	return o
}

func (o ListenerRuleActionAuthenticateCognitoOutput) ToListenerRuleActionAuthenticateCognitoPtrOutput() ListenerRuleActionAuthenticateCognitoPtrOutput {
	return o.ToListenerRuleActionAuthenticateCognitoPtrOutputWithContext(context.Background())
}

func (o ListenerRuleActionAuthenticateCognitoOutput) ToListenerRuleActionAuthenticateCognitoPtrOutputWithContext(ctx context.Context) ListenerRuleActionAuthenticateCognitoPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateCognito) *ListenerRuleActionAuthenticateCognito {
		return &v
	}).(ListenerRuleActionAuthenticateCognitoPtrOutput)
}

// The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
func (o ListenerRuleActionAuthenticateCognitoOutput) AuthenticationRequestExtraParams() pulumi.MapOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateCognito) map[string]interface{} {
		return v.AuthenticationRequestExtraParams
	}).(pulumi.MapOutput)
}

// The behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
func (o ListenerRuleActionAuthenticateCognitoOutput) OnUnauthenticatedRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateCognito) *string { return v.OnUnauthenticatedRequest }).(pulumi.StringPtrOutput)
}

// The set of user claims to be requested from the IdP.
func (o ListenerRuleActionAuthenticateCognitoOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateCognito) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The name of the cookie used to maintain session information.
func (o ListenerRuleActionAuthenticateCognitoOutput) SessionCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateCognito) *string { return v.SessionCookieName }).(pulumi.StringPtrOutput)
}

// The maximum duration of the authentication session, in seconds.
func (o ListenerRuleActionAuthenticateCognitoOutput) SessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateCognito) *int { return v.SessionTimeout }).(pulumi.IntPtrOutput)
}

// The ARN of the Cognito user pool.
func (o ListenerRuleActionAuthenticateCognitoOutput) UserPoolArn() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateCognito) string { return v.UserPoolArn }).(pulumi.StringOutput)
}

// The ID of the Cognito user pool client.
func (o ListenerRuleActionAuthenticateCognitoOutput) UserPoolClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateCognito) string { return v.UserPoolClientId }).(pulumi.StringOutput)
}

// The domain prefix or fully-qualified domain name of the Cognito user pool.
func (o ListenerRuleActionAuthenticateCognitoOutput) UserPoolDomain() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateCognito) string { return v.UserPoolDomain }).(pulumi.StringOutput)
}

type ListenerRuleActionAuthenticateCognitoPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionAuthenticateCognitoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleActionAuthenticateCognito)(nil)).Elem()
}

func (o ListenerRuleActionAuthenticateCognitoPtrOutput) ToListenerRuleActionAuthenticateCognitoPtrOutput() ListenerRuleActionAuthenticateCognitoPtrOutput {
	return o
}

func (o ListenerRuleActionAuthenticateCognitoPtrOutput) ToListenerRuleActionAuthenticateCognitoPtrOutputWithContext(ctx context.Context) ListenerRuleActionAuthenticateCognitoPtrOutput {
	return o
}

func (o ListenerRuleActionAuthenticateCognitoPtrOutput) Elem() ListenerRuleActionAuthenticateCognitoOutput {
	return o.ApplyT(func(v *ListenerRuleActionAuthenticateCognito) ListenerRuleActionAuthenticateCognito { return *v }).(ListenerRuleActionAuthenticateCognitoOutput)
}

// The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
func (o ListenerRuleActionAuthenticateCognitoPtrOutput) AuthenticationRequestExtraParams() pulumi.MapOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateCognito) map[string]interface{} {
		return v.AuthenticationRequestExtraParams
	}).(pulumi.MapOutput)
}

// The behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
func (o ListenerRuleActionAuthenticateCognitoPtrOutput) OnUnauthenticatedRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateCognito) *string { return v.OnUnauthenticatedRequest }).(pulumi.StringPtrOutput)
}

// The set of user claims to be requested from the IdP.
func (o ListenerRuleActionAuthenticateCognitoPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateCognito) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The name of the cookie used to maintain session information.
func (o ListenerRuleActionAuthenticateCognitoPtrOutput) SessionCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateCognito) *string { return v.SessionCookieName }).(pulumi.StringPtrOutput)
}

// The maximum duration of the authentication session, in seconds.
func (o ListenerRuleActionAuthenticateCognitoPtrOutput) SessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateCognito) *int { return v.SessionTimeout }).(pulumi.IntPtrOutput)
}

// The ARN of the Cognito user pool.
func (o ListenerRuleActionAuthenticateCognitoPtrOutput) UserPoolArn() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateCognito) string { return v.UserPoolArn }).(pulumi.StringOutput)
}

// The ID of the Cognito user pool client.
func (o ListenerRuleActionAuthenticateCognitoPtrOutput) UserPoolClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateCognito) string { return v.UserPoolClientId }).(pulumi.StringOutput)
}

// The domain prefix or fully-qualified domain name of the Cognito user pool.
func (o ListenerRuleActionAuthenticateCognitoPtrOutput) UserPoolDomain() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateCognito) string { return v.UserPoolDomain }).(pulumi.StringOutput)
}

type ListenerRuleActionAuthenticateOidc struct {
	// The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
	AuthenticationRequestExtraParams map[string]interface{} `pulumi:"authenticationRequestExtraParams"`
	// The authorization endpoint of the IdP.
	AuthorizationEndpoint string `pulumi:"authorizationEndpoint"`
	// The OAuth 2.0 client identifier.
	ClientId string `pulumi:"clientId"`
	// The OAuth 2.0 client secret.
	ClientSecret string `pulumi:"clientSecret"`
	// The OIDC issuer identifier of the IdP.
	Issuer string `pulumi:"issuer"`
	// The behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
	OnUnauthenticatedRequest *string `pulumi:"onUnauthenticatedRequest"`
	// The set of user claims to be requested from the IdP.
	Scope *string `pulumi:"scope"`
	// The name of the cookie used to maintain session information.
	SessionCookieName *string `pulumi:"sessionCookieName"`
	// The maximum duration of the authentication session, in seconds.
	SessionTimeout *int `pulumi:"sessionTimeout"`
	// The token endpoint of the IdP.
	TokenEndpoint string `pulumi:"tokenEndpoint"`
	// The user info endpoint of the IdP.
	UserInfoEndpoint string `pulumi:"userInfoEndpoint"`
}

// ListenerRuleActionAuthenticateOidcInput is an input type that accepts ListenerRuleActionAuthenticateOidcArgs and ListenerRuleActionAuthenticateOidcOutput values.
// You can construct a concrete instance of `ListenerRuleActionAuthenticateOidcInput` via:
//
// 		 ListenerRuleActionAuthenticateOidcArgs{...}
//
type ListenerRuleActionAuthenticateOidcInput interface {
	pulumi.Input

	ToListenerRuleActionAuthenticateOidcOutput() ListenerRuleActionAuthenticateOidcOutput
	ToListenerRuleActionAuthenticateOidcOutputWithContext(context.Context) ListenerRuleActionAuthenticateOidcOutput
}

type ListenerRuleActionAuthenticateOidcArgs struct {
	// The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
	AuthenticationRequestExtraParams pulumi.MapInput `pulumi:"authenticationRequestExtraParams"`
	// The authorization endpoint of the IdP.
	AuthorizationEndpoint pulumi.StringInput `pulumi:"authorizationEndpoint"`
	// The OAuth 2.0 client identifier.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The OAuth 2.0 client secret.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
	// The OIDC issuer identifier of the IdP.
	Issuer pulumi.StringInput `pulumi:"issuer"`
	// The behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
	OnUnauthenticatedRequest pulumi.StringPtrInput `pulumi:"onUnauthenticatedRequest"`
	// The set of user claims to be requested from the IdP.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The name of the cookie used to maintain session information.
	SessionCookieName pulumi.StringPtrInput `pulumi:"sessionCookieName"`
	// The maximum duration of the authentication session, in seconds.
	SessionTimeout pulumi.IntPtrInput `pulumi:"sessionTimeout"`
	// The token endpoint of the IdP.
	TokenEndpoint pulumi.StringInput `pulumi:"tokenEndpoint"`
	// The user info endpoint of the IdP.
	UserInfoEndpoint pulumi.StringInput `pulumi:"userInfoEndpoint"`
}

func (ListenerRuleActionAuthenticateOidcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleActionAuthenticateOidc)(nil)).Elem()
}

func (i ListenerRuleActionAuthenticateOidcArgs) ToListenerRuleActionAuthenticateOidcOutput() ListenerRuleActionAuthenticateOidcOutput {
	return i.ToListenerRuleActionAuthenticateOidcOutputWithContext(context.Background())
}

func (i ListenerRuleActionAuthenticateOidcArgs) ToListenerRuleActionAuthenticateOidcOutputWithContext(ctx context.Context) ListenerRuleActionAuthenticateOidcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionAuthenticateOidcOutput)
}

func (i ListenerRuleActionAuthenticateOidcArgs) ToListenerRuleActionAuthenticateOidcPtrOutput() ListenerRuleActionAuthenticateOidcPtrOutput {
	return i.ToListenerRuleActionAuthenticateOidcPtrOutputWithContext(context.Background())
}

func (i ListenerRuleActionAuthenticateOidcArgs) ToListenerRuleActionAuthenticateOidcPtrOutputWithContext(ctx context.Context) ListenerRuleActionAuthenticateOidcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionAuthenticateOidcOutput).ToListenerRuleActionAuthenticateOidcPtrOutputWithContext(ctx)
}

// ListenerRuleActionAuthenticateOidcPtrInput is an input type that accepts ListenerRuleActionAuthenticateOidcArgs, ListenerRuleActionAuthenticateOidcPtr and ListenerRuleActionAuthenticateOidcPtrOutput values.
// You can construct a concrete instance of `ListenerRuleActionAuthenticateOidcPtrInput` via:
//
// 		 ListenerRuleActionAuthenticateOidcArgs{...}
//
//  or:
//
// 		 nil
//
type ListenerRuleActionAuthenticateOidcPtrInput interface {
	pulumi.Input

	ToListenerRuleActionAuthenticateOidcPtrOutput() ListenerRuleActionAuthenticateOidcPtrOutput
	ToListenerRuleActionAuthenticateOidcPtrOutputWithContext(context.Context) ListenerRuleActionAuthenticateOidcPtrOutput
}

type listenerRuleActionAuthenticateOidcPtrType ListenerRuleActionAuthenticateOidcArgs

func ListenerRuleActionAuthenticateOidcPtr(v *ListenerRuleActionAuthenticateOidcArgs) ListenerRuleActionAuthenticateOidcPtrInput {
	return (*listenerRuleActionAuthenticateOidcPtrType)(v)
}

func (*listenerRuleActionAuthenticateOidcPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleActionAuthenticateOidc)(nil)).Elem()
}

func (i *listenerRuleActionAuthenticateOidcPtrType) ToListenerRuleActionAuthenticateOidcPtrOutput() ListenerRuleActionAuthenticateOidcPtrOutput {
	return i.ToListenerRuleActionAuthenticateOidcPtrOutputWithContext(context.Background())
}

func (i *listenerRuleActionAuthenticateOidcPtrType) ToListenerRuleActionAuthenticateOidcPtrOutputWithContext(ctx context.Context) ListenerRuleActionAuthenticateOidcPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionAuthenticateOidcPtrOutput)
}

type ListenerRuleActionAuthenticateOidcOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionAuthenticateOidcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleActionAuthenticateOidc)(nil)).Elem()
}

func (o ListenerRuleActionAuthenticateOidcOutput) ToListenerRuleActionAuthenticateOidcOutput() ListenerRuleActionAuthenticateOidcOutput {
	return o
}

func (o ListenerRuleActionAuthenticateOidcOutput) ToListenerRuleActionAuthenticateOidcOutputWithContext(ctx context.Context) ListenerRuleActionAuthenticateOidcOutput {
	return o
}

func (o ListenerRuleActionAuthenticateOidcOutput) ToListenerRuleActionAuthenticateOidcPtrOutput() ListenerRuleActionAuthenticateOidcPtrOutput {
	return o.ToListenerRuleActionAuthenticateOidcPtrOutputWithContext(context.Background())
}

func (o ListenerRuleActionAuthenticateOidcOutput) ToListenerRuleActionAuthenticateOidcPtrOutputWithContext(ctx context.Context) ListenerRuleActionAuthenticateOidcPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) *ListenerRuleActionAuthenticateOidc {
		return &v
	}).(ListenerRuleActionAuthenticateOidcPtrOutput)
}

// The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
func (o ListenerRuleActionAuthenticateOidcOutput) AuthenticationRequestExtraParams() pulumi.MapOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) map[string]interface{} {
		return v.AuthenticationRequestExtraParams
	}).(pulumi.MapOutput)
}

// The authorization endpoint of the IdP.
func (o ListenerRuleActionAuthenticateOidcOutput) AuthorizationEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) string { return v.AuthorizationEndpoint }).(pulumi.StringOutput)
}

// The OAuth 2.0 client identifier.
func (o ListenerRuleActionAuthenticateOidcOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) string { return v.ClientId }).(pulumi.StringOutput)
}

// The OAuth 2.0 client secret.
func (o ListenerRuleActionAuthenticateOidcOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The OIDC issuer identifier of the IdP.
func (o ListenerRuleActionAuthenticateOidcOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) string { return v.Issuer }).(pulumi.StringOutput)
}

// The behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
func (o ListenerRuleActionAuthenticateOidcOutput) OnUnauthenticatedRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) *string { return v.OnUnauthenticatedRequest }).(pulumi.StringPtrOutput)
}

// The set of user claims to be requested from the IdP.
func (o ListenerRuleActionAuthenticateOidcOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The name of the cookie used to maintain session information.
func (o ListenerRuleActionAuthenticateOidcOutput) SessionCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) *string { return v.SessionCookieName }).(pulumi.StringPtrOutput)
}

// The maximum duration of the authentication session, in seconds.
func (o ListenerRuleActionAuthenticateOidcOutput) SessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) *int { return v.SessionTimeout }).(pulumi.IntPtrOutput)
}

// The token endpoint of the IdP.
func (o ListenerRuleActionAuthenticateOidcOutput) TokenEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) string { return v.TokenEndpoint }).(pulumi.StringOutput)
}

// The user info endpoint of the IdP.
func (o ListenerRuleActionAuthenticateOidcOutput) UserInfoEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) string { return v.UserInfoEndpoint }).(pulumi.StringOutput)
}

type ListenerRuleActionAuthenticateOidcPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionAuthenticateOidcPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleActionAuthenticateOidc)(nil)).Elem()
}

func (o ListenerRuleActionAuthenticateOidcPtrOutput) ToListenerRuleActionAuthenticateOidcPtrOutput() ListenerRuleActionAuthenticateOidcPtrOutput {
	return o
}

func (o ListenerRuleActionAuthenticateOidcPtrOutput) ToListenerRuleActionAuthenticateOidcPtrOutputWithContext(ctx context.Context) ListenerRuleActionAuthenticateOidcPtrOutput {
	return o
}

func (o ListenerRuleActionAuthenticateOidcPtrOutput) Elem() ListenerRuleActionAuthenticateOidcOutput {
	return o.ApplyT(func(v *ListenerRuleActionAuthenticateOidc) ListenerRuleActionAuthenticateOidc { return *v }).(ListenerRuleActionAuthenticateOidcOutput)
}

// The query parameters to include in the redirect request to the authorization endpoint. Max: 10.
func (o ListenerRuleActionAuthenticateOidcPtrOutput) AuthenticationRequestExtraParams() pulumi.MapOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) map[string]interface{} {
		return v.AuthenticationRequestExtraParams
	}).(pulumi.MapOutput)
}

// The authorization endpoint of the IdP.
func (o ListenerRuleActionAuthenticateOidcPtrOutput) AuthorizationEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) string { return v.AuthorizationEndpoint }).(pulumi.StringOutput)
}

// The OAuth 2.0 client identifier.
func (o ListenerRuleActionAuthenticateOidcPtrOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) string { return v.ClientId }).(pulumi.StringOutput)
}

// The OAuth 2.0 client secret.
func (o ListenerRuleActionAuthenticateOidcPtrOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) string { return v.ClientSecret }).(pulumi.StringOutput)
}

// The OIDC issuer identifier of the IdP.
func (o ListenerRuleActionAuthenticateOidcPtrOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) string { return v.Issuer }).(pulumi.StringOutput)
}

// The behavior if the user is not authenticated. Valid values: `deny`, `allow` and `authenticate`
func (o ListenerRuleActionAuthenticateOidcPtrOutput) OnUnauthenticatedRequest() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) *string { return v.OnUnauthenticatedRequest }).(pulumi.StringPtrOutput)
}

// The set of user claims to be requested from the IdP.
func (o ListenerRuleActionAuthenticateOidcPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The name of the cookie used to maintain session information.
func (o ListenerRuleActionAuthenticateOidcPtrOutput) SessionCookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) *string { return v.SessionCookieName }).(pulumi.StringPtrOutput)
}

// The maximum duration of the authentication session, in seconds.
func (o ListenerRuleActionAuthenticateOidcPtrOutput) SessionTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) *int { return v.SessionTimeout }).(pulumi.IntPtrOutput)
}

// The token endpoint of the IdP.
func (o ListenerRuleActionAuthenticateOidcPtrOutput) TokenEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) string { return v.TokenEndpoint }).(pulumi.StringOutput)
}

// The user info endpoint of the IdP.
func (o ListenerRuleActionAuthenticateOidcPtrOutput) UserInfoEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionAuthenticateOidc) string { return v.UserInfoEndpoint }).(pulumi.StringOutput)
}

type ListenerRuleActionFixedResponse struct {
	// The content type. Valid values are `text/plain`, `text/css`, `text/html`, `application/javascript` and `application/json`.
	ContentType string `pulumi:"contentType"`
	// The message body.
	MessageBody *string `pulumi:"messageBody"`
	// The HTTP response code. Valid values are `2XX`, `4XX`, or `5XX`.
	StatusCode *string `pulumi:"statusCode"`
}

// ListenerRuleActionFixedResponseInput is an input type that accepts ListenerRuleActionFixedResponseArgs and ListenerRuleActionFixedResponseOutput values.
// You can construct a concrete instance of `ListenerRuleActionFixedResponseInput` via:
//
// 		 ListenerRuleActionFixedResponseArgs{...}
//
type ListenerRuleActionFixedResponseInput interface {
	pulumi.Input

	ToListenerRuleActionFixedResponseOutput() ListenerRuleActionFixedResponseOutput
	ToListenerRuleActionFixedResponseOutputWithContext(context.Context) ListenerRuleActionFixedResponseOutput
}

type ListenerRuleActionFixedResponseArgs struct {
	// The content type. Valid values are `text/plain`, `text/css`, `text/html`, `application/javascript` and `application/json`.
	ContentType pulumi.StringInput `pulumi:"contentType"`
	// The message body.
	MessageBody pulumi.StringPtrInput `pulumi:"messageBody"`
	// The HTTP response code. Valid values are `2XX`, `4XX`, or `5XX`.
	StatusCode pulumi.StringPtrInput `pulumi:"statusCode"`
}

func (ListenerRuleActionFixedResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleActionFixedResponse)(nil)).Elem()
}

func (i ListenerRuleActionFixedResponseArgs) ToListenerRuleActionFixedResponseOutput() ListenerRuleActionFixedResponseOutput {
	return i.ToListenerRuleActionFixedResponseOutputWithContext(context.Background())
}

func (i ListenerRuleActionFixedResponseArgs) ToListenerRuleActionFixedResponseOutputWithContext(ctx context.Context) ListenerRuleActionFixedResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionFixedResponseOutput)
}

func (i ListenerRuleActionFixedResponseArgs) ToListenerRuleActionFixedResponsePtrOutput() ListenerRuleActionFixedResponsePtrOutput {
	return i.ToListenerRuleActionFixedResponsePtrOutputWithContext(context.Background())
}

func (i ListenerRuleActionFixedResponseArgs) ToListenerRuleActionFixedResponsePtrOutputWithContext(ctx context.Context) ListenerRuleActionFixedResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionFixedResponseOutput).ToListenerRuleActionFixedResponsePtrOutputWithContext(ctx)
}

// ListenerRuleActionFixedResponsePtrInput is an input type that accepts ListenerRuleActionFixedResponseArgs, ListenerRuleActionFixedResponsePtr and ListenerRuleActionFixedResponsePtrOutput values.
// You can construct a concrete instance of `ListenerRuleActionFixedResponsePtrInput` via:
//
// 		 ListenerRuleActionFixedResponseArgs{...}
//
//  or:
//
// 		 nil
//
type ListenerRuleActionFixedResponsePtrInput interface {
	pulumi.Input

	ToListenerRuleActionFixedResponsePtrOutput() ListenerRuleActionFixedResponsePtrOutput
	ToListenerRuleActionFixedResponsePtrOutputWithContext(context.Context) ListenerRuleActionFixedResponsePtrOutput
}

type listenerRuleActionFixedResponsePtrType ListenerRuleActionFixedResponseArgs

func ListenerRuleActionFixedResponsePtr(v *ListenerRuleActionFixedResponseArgs) ListenerRuleActionFixedResponsePtrInput {
	return (*listenerRuleActionFixedResponsePtrType)(v)
}

func (*listenerRuleActionFixedResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleActionFixedResponse)(nil)).Elem()
}

func (i *listenerRuleActionFixedResponsePtrType) ToListenerRuleActionFixedResponsePtrOutput() ListenerRuleActionFixedResponsePtrOutput {
	return i.ToListenerRuleActionFixedResponsePtrOutputWithContext(context.Background())
}

func (i *listenerRuleActionFixedResponsePtrType) ToListenerRuleActionFixedResponsePtrOutputWithContext(ctx context.Context) ListenerRuleActionFixedResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionFixedResponsePtrOutput)
}

type ListenerRuleActionFixedResponseOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionFixedResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleActionFixedResponse)(nil)).Elem()
}

func (o ListenerRuleActionFixedResponseOutput) ToListenerRuleActionFixedResponseOutput() ListenerRuleActionFixedResponseOutput {
	return o
}

func (o ListenerRuleActionFixedResponseOutput) ToListenerRuleActionFixedResponseOutputWithContext(ctx context.Context) ListenerRuleActionFixedResponseOutput {
	return o
}

func (o ListenerRuleActionFixedResponseOutput) ToListenerRuleActionFixedResponsePtrOutput() ListenerRuleActionFixedResponsePtrOutput {
	return o.ToListenerRuleActionFixedResponsePtrOutputWithContext(context.Background())
}

func (o ListenerRuleActionFixedResponseOutput) ToListenerRuleActionFixedResponsePtrOutputWithContext(ctx context.Context) ListenerRuleActionFixedResponsePtrOutput {
	return o.ApplyT(func(v ListenerRuleActionFixedResponse) *ListenerRuleActionFixedResponse {
		return &v
	}).(ListenerRuleActionFixedResponsePtrOutput)
}

// The content type. Valid values are `text/plain`, `text/css`, `text/html`, `application/javascript` and `application/json`.
func (o ListenerRuleActionFixedResponseOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionFixedResponse) string { return v.ContentType }).(pulumi.StringOutput)
}

// The message body.
func (o ListenerRuleActionFixedResponseOutput) MessageBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionFixedResponse) *string { return v.MessageBody }).(pulumi.StringPtrOutput)
}

// The HTTP response code. Valid values are `2XX`, `4XX`, or `5XX`.
func (o ListenerRuleActionFixedResponseOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionFixedResponse) *string { return v.StatusCode }).(pulumi.StringPtrOutput)
}

type ListenerRuleActionFixedResponsePtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionFixedResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleActionFixedResponse)(nil)).Elem()
}

func (o ListenerRuleActionFixedResponsePtrOutput) ToListenerRuleActionFixedResponsePtrOutput() ListenerRuleActionFixedResponsePtrOutput {
	return o
}

func (o ListenerRuleActionFixedResponsePtrOutput) ToListenerRuleActionFixedResponsePtrOutputWithContext(ctx context.Context) ListenerRuleActionFixedResponsePtrOutput {
	return o
}

func (o ListenerRuleActionFixedResponsePtrOutput) Elem() ListenerRuleActionFixedResponseOutput {
	return o.ApplyT(func(v *ListenerRuleActionFixedResponse) ListenerRuleActionFixedResponse { return *v }).(ListenerRuleActionFixedResponseOutput)
}

// The content type. Valid values are `text/plain`, `text/css`, `text/html`, `application/javascript` and `application/json`.
func (o ListenerRuleActionFixedResponsePtrOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionFixedResponse) string { return v.ContentType }).(pulumi.StringOutput)
}

// The message body.
func (o ListenerRuleActionFixedResponsePtrOutput) MessageBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionFixedResponse) *string { return v.MessageBody }).(pulumi.StringPtrOutput)
}

// The HTTP response code. Valid values are `2XX`, `4XX`, or `5XX`.
func (o ListenerRuleActionFixedResponsePtrOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionFixedResponse) *string { return v.StatusCode }).(pulumi.StringPtrOutput)
}

type ListenerRuleActionRedirect struct {
	// The hostname. This component is not percent-encoded. The hostname can contain `#{host}`. Defaults to `#{host}`.
	Host *string `pulumi:"host"`
	// The absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to `/#{path}`.
	Path *string `pulumi:"path"`
	// The port. Specify a value from `1` to `65535` or `#{port}`. Defaults to `#{port}`.
	Port *string `pulumi:"port"`
	// The protocol. Valid values are `HTTP`, `HTTPS`, or `#{protocol}`. Defaults to `#{protocol}`.
	Protocol *string `pulumi:"protocol"`
	// The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?". Defaults to `#{query}`.
	Query *string `pulumi:"query"`
	// The HTTP redirect code. The redirect is either permanent (`HTTP_301`) or temporary (`HTTP_302`).
	StatusCode string `pulumi:"statusCode"`
}

// ListenerRuleActionRedirectInput is an input type that accepts ListenerRuleActionRedirectArgs and ListenerRuleActionRedirectOutput values.
// You can construct a concrete instance of `ListenerRuleActionRedirectInput` via:
//
// 		 ListenerRuleActionRedirectArgs{...}
//
type ListenerRuleActionRedirectInput interface {
	pulumi.Input

	ToListenerRuleActionRedirectOutput() ListenerRuleActionRedirectOutput
	ToListenerRuleActionRedirectOutputWithContext(context.Context) ListenerRuleActionRedirectOutput
}

type ListenerRuleActionRedirectArgs struct {
	// The hostname. This component is not percent-encoded. The hostname can contain `#{host}`. Defaults to `#{host}`.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to `/#{path}`.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port. Specify a value from `1` to `65535` or `#{port}`. Defaults to `#{port}`.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// The protocol. Valid values are `HTTP`, `HTTPS`, or `#{protocol}`. Defaults to `#{protocol}`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?". Defaults to `#{query}`.
	Query pulumi.StringPtrInput `pulumi:"query"`
	// The HTTP redirect code. The redirect is either permanent (`HTTP_301`) or temporary (`HTTP_302`).
	StatusCode pulumi.StringInput `pulumi:"statusCode"`
}

func (ListenerRuleActionRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleActionRedirect)(nil)).Elem()
}

func (i ListenerRuleActionRedirectArgs) ToListenerRuleActionRedirectOutput() ListenerRuleActionRedirectOutput {
	return i.ToListenerRuleActionRedirectOutputWithContext(context.Background())
}

func (i ListenerRuleActionRedirectArgs) ToListenerRuleActionRedirectOutputWithContext(ctx context.Context) ListenerRuleActionRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionRedirectOutput)
}

func (i ListenerRuleActionRedirectArgs) ToListenerRuleActionRedirectPtrOutput() ListenerRuleActionRedirectPtrOutput {
	return i.ToListenerRuleActionRedirectPtrOutputWithContext(context.Background())
}

func (i ListenerRuleActionRedirectArgs) ToListenerRuleActionRedirectPtrOutputWithContext(ctx context.Context) ListenerRuleActionRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionRedirectOutput).ToListenerRuleActionRedirectPtrOutputWithContext(ctx)
}

// ListenerRuleActionRedirectPtrInput is an input type that accepts ListenerRuleActionRedirectArgs, ListenerRuleActionRedirectPtr and ListenerRuleActionRedirectPtrOutput values.
// You can construct a concrete instance of `ListenerRuleActionRedirectPtrInput` via:
//
// 		 ListenerRuleActionRedirectArgs{...}
//
//  or:
//
// 		 nil
//
type ListenerRuleActionRedirectPtrInput interface {
	pulumi.Input

	ToListenerRuleActionRedirectPtrOutput() ListenerRuleActionRedirectPtrOutput
	ToListenerRuleActionRedirectPtrOutputWithContext(context.Context) ListenerRuleActionRedirectPtrOutput
}

type listenerRuleActionRedirectPtrType ListenerRuleActionRedirectArgs

func ListenerRuleActionRedirectPtr(v *ListenerRuleActionRedirectArgs) ListenerRuleActionRedirectPtrInput {
	return (*listenerRuleActionRedirectPtrType)(v)
}

func (*listenerRuleActionRedirectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleActionRedirect)(nil)).Elem()
}

func (i *listenerRuleActionRedirectPtrType) ToListenerRuleActionRedirectPtrOutput() ListenerRuleActionRedirectPtrOutput {
	return i.ToListenerRuleActionRedirectPtrOutputWithContext(context.Background())
}

func (i *listenerRuleActionRedirectPtrType) ToListenerRuleActionRedirectPtrOutputWithContext(ctx context.Context) ListenerRuleActionRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleActionRedirectPtrOutput)
}

type ListenerRuleActionRedirectOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleActionRedirect)(nil)).Elem()
}

func (o ListenerRuleActionRedirectOutput) ToListenerRuleActionRedirectOutput() ListenerRuleActionRedirectOutput {
	return o
}

func (o ListenerRuleActionRedirectOutput) ToListenerRuleActionRedirectOutputWithContext(ctx context.Context) ListenerRuleActionRedirectOutput {
	return o
}

func (o ListenerRuleActionRedirectOutput) ToListenerRuleActionRedirectPtrOutput() ListenerRuleActionRedirectPtrOutput {
	return o.ToListenerRuleActionRedirectPtrOutputWithContext(context.Background())
}

func (o ListenerRuleActionRedirectOutput) ToListenerRuleActionRedirectPtrOutputWithContext(ctx context.Context) ListenerRuleActionRedirectPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionRedirect) *ListenerRuleActionRedirect {
		return &v
	}).(ListenerRuleActionRedirectPtrOutput)
}

// The hostname. This component is not percent-encoded. The hostname can contain `#{host}`. Defaults to `#{host}`.
func (o ListenerRuleActionRedirectOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionRedirect) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to `/#{path}`.
func (o ListenerRuleActionRedirectOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionRedirect) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port. Specify a value from `1` to `65535` or `#{port}`. Defaults to `#{port}`.
func (o ListenerRuleActionRedirectOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionRedirect) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The protocol. Valid values are `HTTP`, `HTTPS`, or `#{protocol}`. Defaults to `#{protocol}`.
func (o ListenerRuleActionRedirectOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionRedirect) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?". Defaults to `#{query}`.
func (o ListenerRuleActionRedirectOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionRedirect) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// The HTTP redirect code. The redirect is either permanent (`HTTP_301`) or temporary (`HTTP_302`).
func (o ListenerRuleActionRedirectOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionRedirect) string { return v.StatusCode }).(pulumi.StringOutput)
}

type ListenerRuleActionRedirectPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleActionRedirectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleActionRedirect)(nil)).Elem()
}

func (o ListenerRuleActionRedirectPtrOutput) ToListenerRuleActionRedirectPtrOutput() ListenerRuleActionRedirectPtrOutput {
	return o
}

func (o ListenerRuleActionRedirectPtrOutput) ToListenerRuleActionRedirectPtrOutputWithContext(ctx context.Context) ListenerRuleActionRedirectPtrOutput {
	return o
}

func (o ListenerRuleActionRedirectPtrOutput) Elem() ListenerRuleActionRedirectOutput {
	return o.ApplyT(func(v *ListenerRuleActionRedirect) ListenerRuleActionRedirect { return *v }).(ListenerRuleActionRedirectOutput)
}

// The hostname. This component is not percent-encoded. The hostname can contain `#{host}`. Defaults to `#{host}`.
func (o ListenerRuleActionRedirectPtrOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionRedirect) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The absolute path, starting with the leading "/". This component is not percent-encoded. The path can contain #{host}, #{path}, and #{port}. Defaults to `/#{path}`.
func (o ListenerRuleActionRedirectPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionRedirect) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port. Specify a value from `1` to `65535` or `#{port}`. Defaults to `#{port}`.
func (o ListenerRuleActionRedirectPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionRedirect) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The protocol. Valid values are `HTTP`, `HTTPS`, or `#{protocol}`. Defaults to `#{protocol}`.
func (o ListenerRuleActionRedirectPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionRedirect) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The query parameters, URL-encoded when necessary, but not percent-encoded. Do not include the leading "?". Defaults to `#{query}`.
func (o ListenerRuleActionRedirectPtrOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleActionRedirect) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// The HTTP redirect code. The redirect is either permanent (`HTTP_301`) or temporary (`HTTP_302`).
func (o ListenerRuleActionRedirectPtrOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleActionRedirect) string { return v.StatusCode }).(pulumi.StringOutput)
}

type ListenerRuleCondition struct {
	// The type of condition. Valid values are `host-header` or `path-pattern`. Must also set `values`.
	Field *string `pulumi:"field"`
	// Contains a single `values` item which is a list of host header patterns to match. The maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). Only one pattern needs to match for the condition to be satisfied.
	HostHeader *ListenerRuleConditionHostHeader `pulumi:"hostHeader"`
	// HTTP headers to match. HTTP Header block fields documented below.
	HttpHeader *ListenerRuleConditionHttpHeader `pulumi:"httpHeader"`
	// Contains a single `values` item which is a list of HTTP request methods or verbs to match. Maximum size is 40 characters. Only allowed characters are A-Z, hyphen (-) and underscore (\_). Comparison is case sensitive. Wildcards are not supported. Only one needs to match for the condition to be satisfied. AWS recommends that GET and HEAD requests are routed in the same way because the response to a HEAD request may be cached.
	HttpRequestMethod *ListenerRuleConditionHttpRequestMethod `pulumi:"httpRequestMethod"`
	// Contains a single `values` item which is a list of path patterns to match against the request URL. Maximum size of each pattern is 128 characters. Comparison is case sensitive. Wildcard charaters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). Only one pattern needs to match for the condition to be satisfied. Path pattern is compared only to the path of the URL, not to its query string. To compare against the query string, use a `query-string` condition.
	PathPattern *ListenerRuleConditionPathPattern `pulumi:"pathPattern"`
	// Query strings to match. Query String block fields documented below.
	QueryStrings []ListenerRuleConditionQueryString `pulumi:"queryStrings"`
	// Contains a single `values` item which is a list of source IP CIDR notations to match. You can use both IPv4 and IPv6 addresses. Wildcards are not supported. Condition is satisfied if the source IP address of the request matches one of the CIDR blocks. Condition is not satisfied by the addresses in the `X-Forwarded-For` header, use `http-header` condition instead.
	SourceIp *ListenerRuleConditionSourceIp `pulumi:"sourceIp"`
	// List of exactly one pattern to match. Required when `field` is set.
	Values *string `pulumi:"values"`
}

// ListenerRuleConditionInput is an input type that accepts ListenerRuleConditionArgs and ListenerRuleConditionOutput values.
// You can construct a concrete instance of `ListenerRuleConditionInput` via:
//
// 		 ListenerRuleConditionArgs{...}
//
type ListenerRuleConditionInput interface {
	pulumi.Input

	ToListenerRuleConditionOutput() ListenerRuleConditionOutput
	ToListenerRuleConditionOutputWithContext(context.Context) ListenerRuleConditionOutput
}

type ListenerRuleConditionArgs struct {
	// The type of condition. Valid values are `host-header` or `path-pattern`. Must also set `values`.
	Field pulumi.StringPtrInput `pulumi:"field"`
	// Contains a single `values` item which is a list of host header patterns to match. The maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). Only one pattern needs to match for the condition to be satisfied.
	HostHeader ListenerRuleConditionHostHeaderPtrInput `pulumi:"hostHeader"`
	// HTTP headers to match. HTTP Header block fields documented below.
	HttpHeader ListenerRuleConditionHttpHeaderPtrInput `pulumi:"httpHeader"`
	// Contains a single `values` item which is a list of HTTP request methods or verbs to match. Maximum size is 40 characters. Only allowed characters are A-Z, hyphen (-) and underscore (\_). Comparison is case sensitive. Wildcards are not supported. Only one needs to match for the condition to be satisfied. AWS recommends that GET and HEAD requests are routed in the same way because the response to a HEAD request may be cached.
	HttpRequestMethod ListenerRuleConditionHttpRequestMethodPtrInput `pulumi:"httpRequestMethod"`
	// Contains a single `values` item which is a list of path patterns to match against the request URL. Maximum size of each pattern is 128 characters. Comparison is case sensitive. Wildcard charaters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). Only one pattern needs to match for the condition to be satisfied. Path pattern is compared only to the path of the URL, not to its query string. To compare against the query string, use a `query-string` condition.
	PathPattern ListenerRuleConditionPathPatternPtrInput `pulumi:"pathPattern"`
	// Query strings to match. Query String block fields documented below.
	QueryStrings ListenerRuleConditionQueryStringArrayInput `pulumi:"queryStrings"`
	// Contains a single `values` item which is a list of source IP CIDR notations to match. You can use both IPv4 and IPv6 addresses. Wildcards are not supported. Condition is satisfied if the source IP address of the request matches one of the CIDR blocks. Condition is not satisfied by the addresses in the `X-Forwarded-For` header, use `http-header` condition instead.
	SourceIp ListenerRuleConditionSourceIpPtrInput `pulumi:"sourceIp"`
	// List of exactly one pattern to match. Required when `field` is set.
	Values pulumi.StringPtrInput `pulumi:"values"`
}

func (ListenerRuleConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleCondition)(nil)).Elem()
}

func (i ListenerRuleConditionArgs) ToListenerRuleConditionOutput() ListenerRuleConditionOutput {
	return i.ToListenerRuleConditionOutputWithContext(context.Background())
}

func (i ListenerRuleConditionArgs) ToListenerRuleConditionOutputWithContext(ctx context.Context) ListenerRuleConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionOutput)
}

// ListenerRuleConditionArrayInput is an input type that accepts ListenerRuleConditionArray and ListenerRuleConditionArrayOutput values.
// You can construct a concrete instance of `ListenerRuleConditionArrayInput` via:
//
// 		 ListenerRuleConditionArray{ ListenerRuleConditionArgs{...} }
//
type ListenerRuleConditionArrayInput interface {
	pulumi.Input

	ToListenerRuleConditionArrayOutput() ListenerRuleConditionArrayOutput
	ToListenerRuleConditionArrayOutputWithContext(context.Context) ListenerRuleConditionArrayOutput
}

type ListenerRuleConditionArray []ListenerRuleConditionInput

func (ListenerRuleConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerRuleCondition)(nil)).Elem()
}

func (i ListenerRuleConditionArray) ToListenerRuleConditionArrayOutput() ListenerRuleConditionArrayOutput {
	return i.ToListenerRuleConditionArrayOutputWithContext(context.Background())
}

func (i ListenerRuleConditionArray) ToListenerRuleConditionArrayOutputWithContext(ctx context.Context) ListenerRuleConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionArrayOutput)
}

type ListenerRuleConditionOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleCondition)(nil)).Elem()
}

func (o ListenerRuleConditionOutput) ToListenerRuleConditionOutput() ListenerRuleConditionOutput {
	return o
}

func (o ListenerRuleConditionOutput) ToListenerRuleConditionOutputWithContext(ctx context.Context) ListenerRuleConditionOutput {
	return o
}

// The type of condition. Valid values are `host-header` or `path-pattern`. Must also set `values`.
func (o ListenerRuleConditionOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleCondition) *string { return v.Field }).(pulumi.StringPtrOutput)
}

// Contains a single `values` item which is a list of host header patterns to match. The maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). Only one pattern needs to match for the condition to be satisfied.
func (o ListenerRuleConditionOutput) HostHeader() ListenerRuleConditionHostHeaderPtrOutput {
	return o.ApplyT(func(v ListenerRuleCondition) *ListenerRuleConditionHostHeader { return v.HostHeader }).(ListenerRuleConditionHostHeaderPtrOutput)
}

// HTTP headers to match. HTTP Header block fields documented below.
func (o ListenerRuleConditionOutput) HttpHeader() ListenerRuleConditionHttpHeaderPtrOutput {
	return o.ApplyT(func(v ListenerRuleCondition) *ListenerRuleConditionHttpHeader { return v.HttpHeader }).(ListenerRuleConditionHttpHeaderPtrOutput)
}

// Contains a single `values` item which is a list of HTTP request methods or verbs to match. Maximum size is 40 characters. Only allowed characters are A-Z, hyphen (-) and underscore (\_). Comparison is case sensitive. Wildcards are not supported. Only one needs to match for the condition to be satisfied. AWS recommends that GET and HEAD requests are routed in the same way because the response to a HEAD request may be cached.
func (o ListenerRuleConditionOutput) HttpRequestMethod() ListenerRuleConditionHttpRequestMethodPtrOutput {
	return o.ApplyT(func(v ListenerRuleCondition) *ListenerRuleConditionHttpRequestMethod { return v.HttpRequestMethod }).(ListenerRuleConditionHttpRequestMethodPtrOutput)
}

// Contains a single `values` item which is a list of path patterns to match against the request URL. Maximum size of each pattern is 128 characters. Comparison is case sensitive. Wildcard charaters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). Only one pattern needs to match for the condition to be satisfied. Path pattern is compared only to the path of the URL, not to its query string. To compare against the query string, use a `query-string` condition.
func (o ListenerRuleConditionOutput) PathPattern() ListenerRuleConditionPathPatternPtrOutput {
	return o.ApplyT(func(v ListenerRuleCondition) *ListenerRuleConditionPathPattern { return v.PathPattern }).(ListenerRuleConditionPathPatternPtrOutput)
}

// Query strings to match. Query String block fields documented below.
func (o ListenerRuleConditionOutput) QueryStrings() ListenerRuleConditionQueryStringArrayOutput {
	return o.ApplyT(func(v ListenerRuleCondition) []ListenerRuleConditionQueryString { return v.QueryStrings }).(ListenerRuleConditionQueryStringArrayOutput)
}

// Contains a single `values` item which is a list of source IP CIDR notations to match. You can use both IPv4 and IPv6 addresses. Wildcards are not supported. Condition is satisfied if the source IP address of the request matches one of the CIDR blocks. Condition is not satisfied by the addresses in the `X-Forwarded-For` header, use `http-header` condition instead.
func (o ListenerRuleConditionOutput) SourceIp() ListenerRuleConditionSourceIpPtrOutput {
	return o.ApplyT(func(v ListenerRuleCondition) *ListenerRuleConditionSourceIp { return v.SourceIp }).(ListenerRuleConditionSourceIpPtrOutput)
}

// List of exactly one pattern to match. Required when `field` is set.
func (o ListenerRuleConditionOutput) Values() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleCondition) *string { return v.Values }).(pulumi.StringPtrOutput)
}

type ListenerRuleConditionArrayOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerRuleCondition)(nil)).Elem()
}

func (o ListenerRuleConditionArrayOutput) ToListenerRuleConditionArrayOutput() ListenerRuleConditionArrayOutput {
	return o
}

func (o ListenerRuleConditionArrayOutput) ToListenerRuleConditionArrayOutputWithContext(ctx context.Context) ListenerRuleConditionArrayOutput {
	return o
}

func (o ListenerRuleConditionArrayOutput) Index(i pulumi.IntInput) ListenerRuleConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerRuleCondition {
		return vs[0].([]ListenerRuleCondition)[vs[1].(int)]
	}).(ListenerRuleConditionOutput)
}

type ListenerRuleConditionHostHeader struct {
	// List of exactly one pattern to match. Required when `field` is set.
	Values []string `pulumi:"values"`
}

// ListenerRuleConditionHostHeaderInput is an input type that accepts ListenerRuleConditionHostHeaderArgs and ListenerRuleConditionHostHeaderOutput values.
// You can construct a concrete instance of `ListenerRuleConditionHostHeaderInput` via:
//
// 		 ListenerRuleConditionHostHeaderArgs{...}
//
type ListenerRuleConditionHostHeaderInput interface {
	pulumi.Input

	ToListenerRuleConditionHostHeaderOutput() ListenerRuleConditionHostHeaderOutput
	ToListenerRuleConditionHostHeaderOutputWithContext(context.Context) ListenerRuleConditionHostHeaderOutput
}

type ListenerRuleConditionHostHeaderArgs struct {
	// List of exactly one pattern to match. Required when `field` is set.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ListenerRuleConditionHostHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionHostHeader)(nil)).Elem()
}

func (i ListenerRuleConditionHostHeaderArgs) ToListenerRuleConditionHostHeaderOutput() ListenerRuleConditionHostHeaderOutput {
	return i.ToListenerRuleConditionHostHeaderOutputWithContext(context.Background())
}

func (i ListenerRuleConditionHostHeaderArgs) ToListenerRuleConditionHostHeaderOutputWithContext(ctx context.Context) ListenerRuleConditionHostHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionHostHeaderOutput)
}

func (i ListenerRuleConditionHostHeaderArgs) ToListenerRuleConditionHostHeaderPtrOutput() ListenerRuleConditionHostHeaderPtrOutput {
	return i.ToListenerRuleConditionHostHeaderPtrOutputWithContext(context.Background())
}

func (i ListenerRuleConditionHostHeaderArgs) ToListenerRuleConditionHostHeaderPtrOutputWithContext(ctx context.Context) ListenerRuleConditionHostHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionHostHeaderOutput).ToListenerRuleConditionHostHeaderPtrOutputWithContext(ctx)
}

// ListenerRuleConditionHostHeaderPtrInput is an input type that accepts ListenerRuleConditionHostHeaderArgs, ListenerRuleConditionHostHeaderPtr and ListenerRuleConditionHostHeaderPtrOutput values.
// You can construct a concrete instance of `ListenerRuleConditionHostHeaderPtrInput` via:
//
// 		 ListenerRuleConditionHostHeaderArgs{...}
//
//  or:
//
// 		 nil
//
type ListenerRuleConditionHostHeaderPtrInput interface {
	pulumi.Input

	ToListenerRuleConditionHostHeaderPtrOutput() ListenerRuleConditionHostHeaderPtrOutput
	ToListenerRuleConditionHostHeaderPtrOutputWithContext(context.Context) ListenerRuleConditionHostHeaderPtrOutput
}

type listenerRuleConditionHostHeaderPtrType ListenerRuleConditionHostHeaderArgs

func ListenerRuleConditionHostHeaderPtr(v *ListenerRuleConditionHostHeaderArgs) ListenerRuleConditionHostHeaderPtrInput {
	return (*listenerRuleConditionHostHeaderPtrType)(v)
}

func (*listenerRuleConditionHostHeaderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleConditionHostHeader)(nil)).Elem()
}

func (i *listenerRuleConditionHostHeaderPtrType) ToListenerRuleConditionHostHeaderPtrOutput() ListenerRuleConditionHostHeaderPtrOutput {
	return i.ToListenerRuleConditionHostHeaderPtrOutputWithContext(context.Background())
}

func (i *listenerRuleConditionHostHeaderPtrType) ToListenerRuleConditionHostHeaderPtrOutputWithContext(ctx context.Context) ListenerRuleConditionHostHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionHostHeaderPtrOutput)
}

type ListenerRuleConditionHostHeaderOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionHostHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionHostHeader)(nil)).Elem()
}

func (o ListenerRuleConditionHostHeaderOutput) ToListenerRuleConditionHostHeaderOutput() ListenerRuleConditionHostHeaderOutput {
	return o
}

func (o ListenerRuleConditionHostHeaderOutput) ToListenerRuleConditionHostHeaderOutputWithContext(ctx context.Context) ListenerRuleConditionHostHeaderOutput {
	return o
}

func (o ListenerRuleConditionHostHeaderOutput) ToListenerRuleConditionHostHeaderPtrOutput() ListenerRuleConditionHostHeaderPtrOutput {
	return o.ToListenerRuleConditionHostHeaderPtrOutputWithContext(context.Background())
}

func (o ListenerRuleConditionHostHeaderOutput) ToListenerRuleConditionHostHeaderPtrOutputWithContext(ctx context.Context) ListenerRuleConditionHostHeaderPtrOutput {
	return o.ApplyT(func(v ListenerRuleConditionHostHeader) *ListenerRuleConditionHostHeader {
		return &v
	}).(ListenerRuleConditionHostHeaderPtrOutput)
}

// List of exactly one pattern to match. Required when `field` is set.
func (o ListenerRuleConditionHostHeaderOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListenerRuleConditionHostHeader) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ListenerRuleConditionHostHeaderPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionHostHeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleConditionHostHeader)(nil)).Elem()
}

func (o ListenerRuleConditionHostHeaderPtrOutput) ToListenerRuleConditionHostHeaderPtrOutput() ListenerRuleConditionHostHeaderPtrOutput {
	return o
}

func (o ListenerRuleConditionHostHeaderPtrOutput) ToListenerRuleConditionHostHeaderPtrOutputWithContext(ctx context.Context) ListenerRuleConditionHostHeaderPtrOutput {
	return o
}

func (o ListenerRuleConditionHostHeaderPtrOutput) Elem() ListenerRuleConditionHostHeaderOutput {
	return o.ApplyT(func(v *ListenerRuleConditionHostHeader) ListenerRuleConditionHostHeader { return *v }).(ListenerRuleConditionHostHeaderOutput)
}

// List of exactly one pattern to match. Required when `field` is set.
func (o ListenerRuleConditionHostHeaderPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListenerRuleConditionHostHeader) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ListenerRuleConditionHttpHeader struct {
	// Name of HTTP header to search. The maximum size is 40 characters. Comparison is case insensitive. Only RFC7240 characters are supported. Wildcards are not supported. You cannot use HTTP header condition to specify the host header, use a `host-header` condition instead.
	HttpHeaderName string `pulumi:"httpHeaderName"`
	// List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
	Values []string `pulumi:"values"`
}

// ListenerRuleConditionHttpHeaderInput is an input type that accepts ListenerRuleConditionHttpHeaderArgs and ListenerRuleConditionHttpHeaderOutput values.
// You can construct a concrete instance of `ListenerRuleConditionHttpHeaderInput` via:
//
// 		 ListenerRuleConditionHttpHeaderArgs{...}
//
type ListenerRuleConditionHttpHeaderInput interface {
	pulumi.Input

	ToListenerRuleConditionHttpHeaderOutput() ListenerRuleConditionHttpHeaderOutput
	ToListenerRuleConditionHttpHeaderOutputWithContext(context.Context) ListenerRuleConditionHttpHeaderOutput
}

type ListenerRuleConditionHttpHeaderArgs struct {
	// Name of HTTP header to search. The maximum size is 40 characters. Comparison is case insensitive. Only RFC7240 characters are supported. Wildcards are not supported. You cannot use HTTP header condition to specify the host header, use a `host-header` condition instead.
	HttpHeaderName pulumi.StringInput `pulumi:"httpHeaderName"`
	// List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ListenerRuleConditionHttpHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionHttpHeader)(nil)).Elem()
}

func (i ListenerRuleConditionHttpHeaderArgs) ToListenerRuleConditionHttpHeaderOutput() ListenerRuleConditionHttpHeaderOutput {
	return i.ToListenerRuleConditionHttpHeaderOutputWithContext(context.Background())
}

func (i ListenerRuleConditionHttpHeaderArgs) ToListenerRuleConditionHttpHeaderOutputWithContext(ctx context.Context) ListenerRuleConditionHttpHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionHttpHeaderOutput)
}

func (i ListenerRuleConditionHttpHeaderArgs) ToListenerRuleConditionHttpHeaderPtrOutput() ListenerRuleConditionHttpHeaderPtrOutput {
	return i.ToListenerRuleConditionHttpHeaderPtrOutputWithContext(context.Background())
}

func (i ListenerRuleConditionHttpHeaderArgs) ToListenerRuleConditionHttpHeaderPtrOutputWithContext(ctx context.Context) ListenerRuleConditionHttpHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionHttpHeaderOutput).ToListenerRuleConditionHttpHeaderPtrOutputWithContext(ctx)
}

// ListenerRuleConditionHttpHeaderPtrInput is an input type that accepts ListenerRuleConditionHttpHeaderArgs, ListenerRuleConditionHttpHeaderPtr and ListenerRuleConditionHttpHeaderPtrOutput values.
// You can construct a concrete instance of `ListenerRuleConditionHttpHeaderPtrInput` via:
//
// 		 ListenerRuleConditionHttpHeaderArgs{...}
//
//  or:
//
// 		 nil
//
type ListenerRuleConditionHttpHeaderPtrInput interface {
	pulumi.Input

	ToListenerRuleConditionHttpHeaderPtrOutput() ListenerRuleConditionHttpHeaderPtrOutput
	ToListenerRuleConditionHttpHeaderPtrOutputWithContext(context.Context) ListenerRuleConditionHttpHeaderPtrOutput
}

type listenerRuleConditionHttpHeaderPtrType ListenerRuleConditionHttpHeaderArgs

func ListenerRuleConditionHttpHeaderPtr(v *ListenerRuleConditionHttpHeaderArgs) ListenerRuleConditionHttpHeaderPtrInput {
	return (*listenerRuleConditionHttpHeaderPtrType)(v)
}

func (*listenerRuleConditionHttpHeaderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleConditionHttpHeader)(nil)).Elem()
}

func (i *listenerRuleConditionHttpHeaderPtrType) ToListenerRuleConditionHttpHeaderPtrOutput() ListenerRuleConditionHttpHeaderPtrOutput {
	return i.ToListenerRuleConditionHttpHeaderPtrOutputWithContext(context.Background())
}

func (i *listenerRuleConditionHttpHeaderPtrType) ToListenerRuleConditionHttpHeaderPtrOutputWithContext(ctx context.Context) ListenerRuleConditionHttpHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionHttpHeaderPtrOutput)
}

type ListenerRuleConditionHttpHeaderOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionHttpHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionHttpHeader)(nil)).Elem()
}

func (o ListenerRuleConditionHttpHeaderOutput) ToListenerRuleConditionHttpHeaderOutput() ListenerRuleConditionHttpHeaderOutput {
	return o
}

func (o ListenerRuleConditionHttpHeaderOutput) ToListenerRuleConditionHttpHeaderOutputWithContext(ctx context.Context) ListenerRuleConditionHttpHeaderOutput {
	return o
}

func (o ListenerRuleConditionHttpHeaderOutput) ToListenerRuleConditionHttpHeaderPtrOutput() ListenerRuleConditionHttpHeaderPtrOutput {
	return o.ToListenerRuleConditionHttpHeaderPtrOutputWithContext(context.Background())
}

func (o ListenerRuleConditionHttpHeaderOutput) ToListenerRuleConditionHttpHeaderPtrOutputWithContext(ctx context.Context) ListenerRuleConditionHttpHeaderPtrOutput {
	return o.ApplyT(func(v ListenerRuleConditionHttpHeader) *ListenerRuleConditionHttpHeader {
		return &v
	}).(ListenerRuleConditionHttpHeaderPtrOutput)
}

// Name of HTTP header to search. The maximum size is 40 characters. Comparison is case insensitive. Only RFC7240 characters are supported. Wildcards are not supported. You cannot use HTTP header condition to specify the host header, use a `host-header` condition instead.
func (o ListenerRuleConditionHttpHeaderOutput) HttpHeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleConditionHttpHeader) string { return v.HttpHeaderName }).(pulumi.StringOutput)
}

// List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
func (o ListenerRuleConditionHttpHeaderOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListenerRuleConditionHttpHeader) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ListenerRuleConditionHttpHeaderPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionHttpHeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleConditionHttpHeader)(nil)).Elem()
}

func (o ListenerRuleConditionHttpHeaderPtrOutput) ToListenerRuleConditionHttpHeaderPtrOutput() ListenerRuleConditionHttpHeaderPtrOutput {
	return o
}

func (o ListenerRuleConditionHttpHeaderPtrOutput) ToListenerRuleConditionHttpHeaderPtrOutputWithContext(ctx context.Context) ListenerRuleConditionHttpHeaderPtrOutput {
	return o
}

func (o ListenerRuleConditionHttpHeaderPtrOutput) Elem() ListenerRuleConditionHttpHeaderOutput {
	return o.ApplyT(func(v *ListenerRuleConditionHttpHeader) ListenerRuleConditionHttpHeader { return *v }).(ListenerRuleConditionHttpHeaderOutput)
}

// Name of HTTP header to search. The maximum size is 40 characters. Comparison is case insensitive. Only RFC7240 characters are supported. Wildcards are not supported. You cannot use HTTP header condition to specify the host header, use a `host-header` condition instead.
func (o ListenerRuleConditionHttpHeaderPtrOutput) HttpHeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleConditionHttpHeader) string { return v.HttpHeaderName }).(pulumi.StringOutput)
}

// List of header value patterns to match. Maximum size of each pattern is 128 characters. Comparison is case insensitive. Wildcard characters supported: * (matches 0 or more characters) and ? (matches exactly 1 character). If the same header appears multiple times in the request they will be searched in order until a match is found. Only one pattern needs to match for the condition to be satisfied. To require that all of the strings are a match, create one condition block per string.
func (o ListenerRuleConditionHttpHeaderPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListenerRuleConditionHttpHeader) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ListenerRuleConditionHttpRequestMethod struct {
	// List of exactly one pattern to match. Required when `field` is set.
	Values []string `pulumi:"values"`
}

// ListenerRuleConditionHttpRequestMethodInput is an input type that accepts ListenerRuleConditionHttpRequestMethodArgs and ListenerRuleConditionHttpRequestMethodOutput values.
// You can construct a concrete instance of `ListenerRuleConditionHttpRequestMethodInput` via:
//
// 		 ListenerRuleConditionHttpRequestMethodArgs{...}
//
type ListenerRuleConditionHttpRequestMethodInput interface {
	pulumi.Input

	ToListenerRuleConditionHttpRequestMethodOutput() ListenerRuleConditionHttpRequestMethodOutput
	ToListenerRuleConditionHttpRequestMethodOutputWithContext(context.Context) ListenerRuleConditionHttpRequestMethodOutput
}

type ListenerRuleConditionHttpRequestMethodArgs struct {
	// List of exactly one pattern to match. Required when `field` is set.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ListenerRuleConditionHttpRequestMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionHttpRequestMethod)(nil)).Elem()
}

func (i ListenerRuleConditionHttpRequestMethodArgs) ToListenerRuleConditionHttpRequestMethodOutput() ListenerRuleConditionHttpRequestMethodOutput {
	return i.ToListenerRuleConditionHttpRequestMethodOutputWithContext(context.Background())
}

func (i ListenerRuleConditionHttpRequestMethodArgs) ToListenerRuleConditionHttpRequestMethodOutputWithContext(ctx context.Context) ListenerRuleConditionHttpRequestMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionHttpRequestMethodOutput)
}

func (i ListenerRuleConditionHttpRequestMethodArgs) ToListenerRuleConditionHttpRequestMethodPtrOutput() ListenerRuleConditionHttpRequestMethodPtrOutput {
	return i.ToListenerRuleConditionHttpRequestMethodPtrOutputWithContext(context.Background())
}

func (i ListenerRuleConditionHttpRequestMethodArgs) ToListenerRuleConditionHttpRequestMethodPtrOutputWithContext(ctx context.Context) ListenerRuleConditionHttpRequestMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionHttpRequestMethodOutput).ToListenerRuleConditionHttpRequestMethodPtrOutputWithContext(ctx)
}

// ListenerRuleConditionHttpRequestMethodPtrInput is an input type that accepts ListenerRuleConditionHttpRequestMethodArgs, ListenerRuleConditionHttpRequestMethodPtr and ListenerRuleConditionHttpRequestMethodPtrOutput values.
// You can construct a concrete instance of `ListenerRuleConditionHttpRequestMethodPtrInput` via:
//
// 		 ListenerRuleConditionHttpRequestMethodArgs{...}
//
//  or:
//
// 		 nil
//
type ListenerRuleConditionHttpRequestMethodPtrInput interface {
	pulumi.Input

	ToListenerRuleConditionHttpRequestMethodPtrOutput() ListenerRuleConditionHttpRequestMethodPtrOutput
	ToListenerRuleConditionHttpRequestMethodPtrOutputWithContext(context.Context) ListenerRuleConditionHttpRequestMethodPtrOutput
}

type listenerRuleConditionHttpRequestMethodPtrType ListenerRuleConditionHttpRequestMethodArgs

func ListenerRuleConditionHttpRequestMethodPtr(v *ListenerRuleConditionHttpRequestMethodArgs) ListenerRuleConditionHttpRequestMethodPtrInput {
	return (*listenerRuleConditionHttpRequestMethodPtrType)(v)
}

func (*listenerRuleConditionHttpRequestMethodPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleConditionHttpRequestMethod)(nil)).Elem()
}

func (i *listenerRuleConditionHttpRequestMethodPtrType) ToListenerRuleConditionHttpRequestMethodPtrOutput() ListenerRuleConditionHttpRequestMethodPtrOutput {
	return i.ToListenerRuleConditionHttpRequestMethodPtrOutputWithContext(context.Background())
}

func (i *listenerRuleConditionHttpRequestMethodPtrType) ToListenerRuleConditionHttpRequestMethodPtrOutputWithContext(ctx context.Context) ListenerRuleConditionHttpRequestMethodPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionHttpRequestMethodPtrOutput)
}

type ListenerRuleConditionHttpRequestMethodOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionHttpRequestMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionHttpRequestMethod)(nil)).Elem()
}

func (o ListenerRuleConditionHttpRequestMethodOutput) ToListenerRuleConditionHttpRequestMethodOutput() ListenerRuleConditionHttpRequestMethodOutput {
	return o
}

func (o ListenerRuleConditionHttpRequestMethodOutput) ToListenerRuleConditionHttpRequestMethodOutputWithContext(ctx context.Context) ListenerRuleConditionHttpRequestMethodOutput {
	return o
}

func (o ListenerRuleConditionHttpRequestMethodOutput) ToListenerRuleConditionHttpRequestMethodPtrOutput() ListenerRuleConditionHttpRequestMethodPtrOutput {
	return o.ToListenerRuleConditionHttpRequestMethodPtrOutputWithContext(context.Background())
}

func (o ListenerRuleConditionHttpRequestMethodOutput) ToListenerRuleConditionHttpRequestMethodPtrOutputWithContext(ctx context.Context) ListenerRuleConditionHttpRequestMethodPtrOutput {
	return o.ApplyT(func(v ListenerRuleConditionHttpRequestMethod) *ListenerRuleConditionHttpRequestMethod {
		return &v
	}).(ListenerRuleConditionHttpRequestMethodPtrOutput)
}

// List of exactly one pattern to match. Required when `field` is set.
func (o ListenerRuleConditionHttpRequestMethodOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListenerRuleConditionHttpRequestMethod) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ListenerRuleConditionHttpRequestMethodPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionHttpRequestMethodPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleConditionHttpRequestMethod)(nil)).Elem()
}

func (o ListenerRuleConditionHttpRequestMethodPtrOutput) ToListenerRuleConditionHttpRequestMethodPtrOutput() ListenerRuleConditionHttpRequestMethodPtrOutput {
	return o
}

func (o ListenerRuleConditionHttpRequestMethodPtrOutput) ToListenerRuleConditionHttpRequestMethodPtrOutputWithContext(ctx context.Context) ListenerRuleConditionHttpRequestMethodPtrOutput {
	return o
}

func (o ListenerRuleConditionHttpRequestMethodPtrOutput) Elem() ListenerRuleConditionHttpRequestMethodOutput {
	return o.ApplyT(func(v *ListenerRuleConditionHttpRequestMethod) ListenerRuleConditionHttpRequestMethod { return *v }).(ListenerRuleConditionHttpRequestMethodOutput)
}

// List of exactly one pattern to match. Required when `field` is set.
func (o ListenerRuleConditionHttpRequestMethodPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListenerRuleConditionHttpRequestMethod) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ListenerRuleConditionPathPattern struct {
	// List of exactly one pattern to match. Required when `field` is set.
	Values []string `pulumi:"values"`
}

// ListenerRuleConditionPathPatternInput is an input type that accepts ListenerRuleConditionPathPatternArgs and ListenerRuleConditionPathPatternOutput values.
// You can construct a concrete instance of `ListenerRuleConditionPathPatternInput` via:
//
// 		 ListenerRuleConditionPathPatternArgs{...}
//
type ListenerRuleConditionPathPatternInput interface {
	pulumi.Input

	ToListenerRuleConditionPathPatternOutput() ListenerRuleConditionPathPatternOutput
	ToListenerRuleConditionPathPatternOutputWithContext(context.Context) ListenerRuleConditionPathPatternOutput
}

type ListenerRuleConditionPathPatternArgs struct {
	// List of exactly one pattern to match. Required when `field` is set.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ListenerRuleConditionPathPatternArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionPathPattern)(nil)).Elem()
}

func (i ListenerRuleConditionPathPatternArgs) ToListenerRuleConditionPathPatternOutput() ListenerRuleConditionPathPatternOutput {
	return i.ToListenerRuleConditionPathPatternOutputWithContext(context.Background())
}

func (i ListenerRuleConditionPathPatternArgs) ToListenerRuleConditionPathPatternOutputWithContext(ctx context.Context) ListenerRuleConditionPathPatternOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionPathPatternOutput)
}

func (i ListenerRuleConditionPathPatternArgs) ToListenerRuleConditionPathPatternPtrOutput() ListenerRuleConditionPathPatternPtrOutput {
	return i.ToListenerRuleConditionPathPatternPtrOutputWithContext(context.Background())
}

func (i ListenerRuleConditionPathPatternArgs) ToListenerRuleConditionPathPatternPtrOutputWithContext(ctx context.Context) ListenerRuleConditionPathPatternPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionPathPatternOutput).ToListenerRuleConditionPathPatternPtrOutputWithContext(ctx)
}

// ListenerRuleConditionPathPatternPtrInput is an input type that accepts ListenerRuleConditionPathPatternArgs, ListenerRuleConditionPathPatternPtr and ListenerRuleConditionPathPatternPtrOutput values.
// You can construct a concrete instance of `ListenerRuleConditionPathPatternPtrInput` via:
//
// 		 ListenerRuleConditionPathPatternArgs{...}
//
//  or:
//
// 		 nil
//
type ListenerRuleConditionPathPatternPtrInput interface {
	pulumi.Input

	ToListenerRuleConditionPathPatternPtrOutput() ListenerRuleConditionPathPatternPtrOutput
	ToListenerRuleConditionPathPatternPtrOutputWithContext(context.Context) ListenerRuleConditionPathPatternPtrOutput
}

type listenerRuleConditionPathPatternPtrType ListenerRuleConditionPathPatternArgs

func ListenerRuleConditionPathPatternPtr(v *ListenerRuleConditionPathPatternArgs) ListenerRuleConditionPathPatternPtrInput {
	return (*listenerRuleConditionPathPatternPtrType)(v)
}

func (*listenerRuleConditionPathPatternPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleConditionPathPattern)(nil)).Elem()
}

func (i *listenerRuleConditionPathPatternPtrType) ToListenerRuleConditionPathPatternPtrOutput() ListenerRuleConditionPathPatternPtrOutput {
	return i.ToListenerRuleConditionPathPatternPtrOutputWithContext(context.Background())
}

func (i *listenerRuleConditionPathPatternPtrType) ToListenerRuleConditionPathPatternPtrOutputWithContext(ctx context.Context) ListenerRuleConditionPathPatternPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionPathPatternPtrOutput)
}

type ListenerRuleConditionPathPatternOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionPathPatternOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionPathPattern)(nil)).Elem()
}

func (o ListenerRuleConditionPathPatternOutput) ToListenerRuleConditionPathPatternOutput() ListenerRuleConditionPathPatternOutput {
	return o
}

func (o ListenerRuleConditionPathPatternOutput) ToListenerRuleConditionPathPatternOutputWithContext(ctx context.Context) ListenerRuleConditionPathPatternOutput {
	return o
}

func (o ListenerRuleConditionPathPatternOutput) ToListenerRuleConditionPathPatternPtrOutput() ListenerRuleConditionPathPatternPtrOutput {
	return o.ToListenerRuleConditionPathPatternPtrOutputWithContext(context.Background())
}

func (o ListenerRuleConditionPathPatternOutput) ToListenerRuleConditionPathPatternPtrOutputWithContext(ctx context.Context) ListenerRuleConditionPathPatternPtrOutput {
	return o.ApplyT(func(v ListenerRuleConditionPathPattern) *ListenerRuleConditionPathPattern {
		return &v
	}).(ListenerRuleConditionPathPatternPtrOutput)
}

// List of exactly one pattern to match. Required when `field` is set.
func (o ListenerRuleConditionPathPatternOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListenerRuleConditionPathPattern) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ListenerRuleConditionPathPatternPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionPathPatternPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleConditionPathPattern)(nil)).Elem()
}

func (o ListenerRuleConditionPathPatternPtrOutput) ToListenerRuleConditionPathPatternPtrOutput() ListenerRuleConditionPathPatternPtrOutput {
	return o
}

func (o ListenerRuleConditionPathPatternPtrOutput) ToListenerRuleConditionPathPatternPtrOutputWithContext(ctx context.Context) ListenerRuleConditionPathPatternPtrOutput {
	return o
}

func (o ListenerRuleConditionPathPatternPtrOutput) Elem() ListenerRuleConditionPathPatternOutput {
	return o.ApplyT(func(v *ListenerRuleConditionPathPattern) ListenerRuleConditionPathPattern { return *v }).(ListenerRuleConditionPathPatternOutput)
}

// List of exactly one pattern to match. Required when `field` is set.
func (o ListenerRuleConditionPathPatternPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListenerRuleConditionPathPattern) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ListenerRuleConditionQueryString struct {
	// Query string key pattern to match.
	Key *string `pulumi:"key"`
	// Query string value pattern to match.
	Value string `pulumi:"value"`
}

// ListenerRuleConditionQueryStringInput is an input type that accepts ListenerRuleConditionQueryStringArgs and ListenerRuleConditionQueryStringOutput values.
// You can construct a concrete instance of `ListenerRuleConditionQueryStringInput` via:
//
// 		 ListenerRuleConditionQueryStringArgs{...}
//
type ListenerRuleConditionQueryStringInput interface {
	pulumi.Input

	ToListenerRuleConditionQueryStringOutput() ListenerRuleConditionQueryStringOutput
	ToListenerRuleConditionQueryStringOutputWithContext(context.Context) ListenerRuleConditionQueryStringOutput
}

type ListenerRuleConditionQueryStringArgs struct {
	// Query string key pattern to match.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Query string value pattern to match.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ListenerRuleConditionQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionQueryString)(nil)).Elem()
}

func (i ListenerRuleConditionQueryStringArgs) ToListenerRuleConditionQueryStringOutput() ListenerRuleConditionQueryStringOutput {
	return i.ToListenerRuleConditionQueryStringOutputWithContext(context.Background())
}

func (i ListenerRuleConditionQueryStringArgs) ToListenerRuleConditionQueryStringOutputWithContext(ctx context.Context) ListenerRuleConditionQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionQueryStringOutput)
}

// ListenerRuleConditionQueryStringArrayInput is an input type that accepts ListenerRuleConditionQueryStringArray and ListenerRuleConditionQueryStringArrayOutput values.
// You can construct a concrete instance of `ListenerRuleConditionQueryStringArrayInput` via:
//
// 		 ListenerRuleConditionQueryStringArray{ ListenerRuleConditionQueryStringArgs{...} }
//
type ListenerRuleConditionQueryStringArrayInput interface {
	pulumi.Input

	ToListenerRuleConditionQueryStringArrayOutput() ListenerRuleConditionQueryStringArrayOutput
	ToListenerRuleConditionQueryStringArrayOutputWithContext(context.Context) ListenerRuleConditionQueryStringArrayOutput
}

type ListenerRuleConditionQueryStringArray []ListenerRuleConditionQueryStringInput

func (ListenerRuleConditionQueryStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerRuleConditionQueryString)(nil)).Elem()
}

func (i ListenerRuleConditionQueryStringArray) ToListenerRuleConditionQueryStringArrayOutput() ListenerRuleConditionQueryStringArrayOutput {
	return i.ToListenerRuleConditionQueryStringArrayOutputWithContext(context.Background())
}

func (i ListenerRuleConditionQueryStringArray) ToListenerRuleConditionQueryStringArrayOutputWithContext(ctx context.Context) ListenerRuleConditionQueryStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionQueryStringArrayOutput)
}

type ListenerRuleConditionQueryStringOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionQueryString)(nil)).Elem()
}

func (o ListenerRuleConditionQueryStringOutput) ToListenerRuleConditionQueryStringOutput() ListenerRuleConditionQueryStringOutput {
	return o
}

func (o ListenerRuleConditionQueryStringOutput) ToListenerRuleConditionQueryStringOutputWithContext(ctx context.Context) ListenerRuleConditionQueryStringOutput {
	return o
}

// Query string key pattern to match.
func (o ListenerRuleConditionQueryStringOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ListenerRuleConditionQueryString) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Query string value pattern to match.
func (o ListenerRuleConditionQueryStringOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ListenerRuleConditionQueryString) string { return v.Value }).(pulumi.StringOutput)
}

type ListenerRuleConditionQueryStringArrayOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionQueryStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ListenerRuleConditionQueryString)(nil)).Elem()
}

func (o ListenerRuleConditionQueryStringArrayOutput) ToListenerRuleConditionQueryStringArrayOutput() ListenerRuleConditionQueryStringArrayOutput {
	return o
}

func (o ListenerRuleConditionQueryStringArrayOutput) ToListenerRuleConditionQueryStringArrayOutputWithContext(ctx context.Context) ListenerRuleConditionQueryStringArrayOutput {
	return o
}

func (o ListenerRuleConditionQueryStringArrayOutput) Index(i pulumi.IntInput) ListenerRuleConditionQueryStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ListenerRuleConditionQueryString {
		return vs[0].([]ListenerRuleConditionQueryString)[vs[1].(int)]
	}).(ListenerRuleConditionQueryStringOutput)
}

type ListenerRuleConditionSourceIp struct {
	// List of exactly one pattern to match. Required when `field` is set.
	Values []string `pulumi:"values"`
}

// ListenerRuleConditionSourceIpInput is an input type that accepts ListenerRuleConditionSourceIpArgs and ListenerRuleConditionSourceIpOutput values.
// You can construct a concrete instance of `ListenerRuleConditionSourceIpInput` via:
//
// 		 ListenerRuleConditionSourceIpArgs{...}
//
type ListenerRuleConditionSourceIpInput interface {
	pulumi.Input

	ToListenerRuleConditionSourceIpOutput() ListenerRuleConditionSourceIpOutput
	ToListenerRuleConditionSourceIpOutputWithContext(context.Context) ListenerRuleConditionSourceIpOutput
}

type ListenerRuleConditionSourceIpArgs struct {
	// List of exactly one pattern to match. Required when `field` is set.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ListenerRuleConditionSourceIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionSourceIp)(nil)).Elem()
}

func (i ListenerRuleConditionSourceIpArgs) ToListenerRuleConditionSourceIpOutput() ListenerRuleConditionSourceIpOutput {
	return i.ToListenerRuleConditionSourceIpOutputWithContext(context.Background())
}

func (i ListenerRuleConditionSourceIpArgs) ToListenerRuleConditionSourceIpOutputWithContext(ctx context.Context) ListenerRuleConditionSourceIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionSourceIpOutput)
}

func (i ListenerRuleConditionSourceIpArgs) ToListenerRuleConditionSourceIpPtrOutput() ListenerRuleConditionSourceIpPtrOutput {
	return i.ToListenerRuleConditionSourceIpPtrOutputWithContext(context.Background())
}

func (i ListenerRuleConditionSourceIpArgs) ToListenerRuleConditionSourceIpPtrOutputWithContext(ctx context.Context) ListenerRuleConditionSourceIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionSourceIpOutput).ToListenerRuleConditionSourceIpPtrOutputWithContext(ctx)
}

// ListenerRuleConditionSourceIpPtrInput is an input type that accepts ListenerRuleConditionSourceIpArgs, ListenerRuleConditionSourceIpPtr and ListenerRuleConditionSourceIpPtrOutput values.
// You can construct a concrete instance of `ListenerRuleConditionSourceIpPtrInput` via:
//
// 		 ListenerRuleConditionSourceIpArgs{...}
//
//  or:
//
// 		 nil
//
type ListenerRuleConditionSourceIpPtrInput interface {
	pulumi.Input

	ToListenerRuleConditionSourceIpPtrOutput() ListenerRuleConditionSourceIpPtrOutput
	ToListenerRuleConditionSourceIpPtrOutputWithContext(context.Context) ListenerRuleConditionSourceIpPtrOutput
}

type listenerRuleConditionSourceIpPtrType ListenerRuleConditionSourceIpArgs

func ListenerRuleConditionSourceIpPtr(v *ListenerRuleConditionSourceIpArgs) ListenerRuleConditionSourceIpPtrInput {
	return (*listenerRuleConditionSourceIpPtrType)(v)
}

func (*listenerRuleConditionSourceIpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleConditionSourceIp)(nil)).Elem()
}

func (i *listenerRuleConditionSourceIpPtrType) ToListenerRuleConditionSourceIpPtrOutput() ListenerRuleConditionSourceIpPtrOutput {
	return i.ToListenerRuleConditionSourceIpPtrOutputWithContext(context.Background())
}

func (i *listenerRuleConditionSourceIpPtrType) ToListenerRuleConditionSourceIpPtrOutputWithContext(ctx context.Context) ListenerRuleConditionSourceIpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ListenerRuleConditionSourceIpPtrOutput)
}

type ListenerRuleConditionSourceIpOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionSourceIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ListenerRuleConditionSourceIp)(nil)).Elem()
}

func (o ListenerRuleConditionSourceIpOutput) ToListenerRuleConditionSourceIpOutput() ListenerRuleConditionSourceIpOutput {
	return o
}

func (o ListenerRuleConditionSourceIpOutput) ToListenerRuleConditionSourceIpOutputWithContext(ctx context.Context) ListenerRuleConditionSourceIpOutput {
	return o
}

func (o ListenerRuleConditionSourceIpOutput) ToListenerRuleConditionSourceIpPtrOutput() ListenerRuleConditionSourceIpPtrOutput {
	return o.ToListenerRuleConditionSourceIpPtrOutputWithContext(context.Background())
}

func (o ListenerRuleConditionSourceIpOutput) ToListenerRuleConditionSourceIpPtrOutputWithContext(ctx context.Context) ListenerRuleConditionSourceIpPtrOutput {
	return o.ApplyT(func(v ListenerRuleConditionSourceIp) *ListenerRuleConditionSourceIp {
		return &v
	}).(ListenerRuleConditionSourceIpPtrOutput)
}

// List of exactly one pattern to match. Required when `field` is set.
func (o ListenerRuleConditionSourceIpOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListenerRuleConditionSourceIp) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ListenerRuleConditionSourceIpPtrOutput struct{ *pulumi.OutputState }

func (ListenerRuleConditionSourceIpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ListenerRuleConditionSourceIp)(nil)).Elem()
}

func (o ListenerRuleConditionSourceIpPtrOutput) ToListenerRuleConditionSourceIpPtrOutput() ListenerRuleConditionSourceIpPtrOutput {
	return o
}

func (o ListenerRuleConditionSourceIpPtrOutput) ToListenerRuleConditionSourceIpPtrOutputWithContext(ctx context.Context) ListenerRuleConditionSourceIpPtrOutput {
	return o
}

func (o ListenerRuleConditionSourceIpPtrOutput) Elem() ListenerRuleConditionSourceIpOutput {
	return o.ApplyT(func(v *ListenerRuleConditionSourceIp) ListenerRuleConditionSourceIp { return *v }).(ListenerRuleConditionSourceIpOutput)
}

// List of exactly one pattern to match. Required when `field` is set.
func (o ListenerRuleConditionSourceIpPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ListenerRuleConditionSourceIp) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type LoadBalancerAccessLogs struct {
	// The S3 bucket name to store the logs in.
	Bucket string `pulumi:"bucket"`
	// Boolean to enable / disable `accessLogs`. Defaults to `false`, even when `bucket` is specified.
	Enabled *bool `pulumi:"enabled"`
	// The S3 bucket prefix. Logs are stored in the root if not configured.
	Prefix *string `pulumi:"prefix"`
}

// LoadBalancerAccessLogsInput is an input type that accepts LoadBalancerAccessLogsArgs and LoadBalancerAccessLogsOutput values.
// You can construct a concrete instance of `LoadBalancerAccessLogsInput` via:
//
// 		 LoadBalancerAccessLogsArgs{...}
//
type LoadBalancerAccessLogsInput interface {
	pulumi.Input

	ToLoadBalancerAccessLogsOutput() LoadBalancerAccessLogsOutput
	ToLoadBalancerAccessLogsOutputWithContext(context.Context) LoadBalancerAccessLogsOutput
}

type LoadBalancerAccessLogsArgs struct {
	// The S3 bucket name to store the logs in.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Boolean to enable / disable `accessLogs`. Defaults to `false`, even when `bucket` is specified.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The S3 bucket prefix. Logs are stored in the root if not configured.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (LoadBalancerAccessLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerAccessLogs)(nil)).Elem()
}

func (i LoadBalancerAccessLogsArgs) ToLoadBalancerAccessLogsOutput() LoadBalancerAccessLogsOutput {
	return i.ToLoadBalancerAccessLogsOutputWithContext(context.Background())
}

func (i LoadBalancerAccessLogsArgs) ToLoadBalancerAccessLogsOutputWithContext(ctx context.Context) LoadBalancerAccessLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAccessLogsOutput)
}

func (i LoadBalancerAccessLogsArgs) ToLoadBalancerAccessLogsPtrOutput() LoadBalancerAccessLogsPtrOutput {
	return i.ToLoadBalancerAccessLogsPtrOutputWithContext(context.Background())
}

func (i LoadBalancerAccessLogsArgs) ToLoadBalancerAccessLogsPtrOutputWithContext(ctx context.Context) LoadBalancerAccessLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAccessLogsOutput).ToLoadBalancerAccessLogsPtrOutputWithContext(ctx)
}

// LoadBalancerAccessLogsPtrInput is an input type that accepts LoadBalancerAccessLogsArgs, LoadBalancerAccessLogsPtr and LoadBalancerAccessLogsPtrOutput values.
// You can construct a concrete instance of `LoadBalancerAccessLogsPtrInput` via:
//
// 		 LoadBalancerAccessLogsArgs{...}
//
//  or:
//
// 		 nil
//
type LoadBalancerAccessLogsPtrInput interface {
	pulumi.Input

	ToLoadBalancerAccessLogsPtrOutput() LoadBalancerAccessLogsPtrOutput
	ToLoadBalancerAccessLogsPtrOutputWithContext(context.Context) LoadBalancerAccessLogsPtrOutput
}

type loadBalancerAccessLogsPtrType LoadBalancerAccessLogsArgs

func LoadBalancerAccessLogsPtr(v *LoadBalancerAccessLogsArgs) LoadBalancerAccessLogsPtrInput {
	return (*loadBalancerAccessLogsPtrType)(v)
}

func (*loadBalancerAccessLogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerAccessLogs)(nil)).Elem()
}

func (i *loadBalancerAccessLogsPtrType) ToLoadBalancerAccessLogsPtrOutput() LoadBalancerAccessLogsPtrOutput {
	return i.ToLoadBalancerAccessLogsPtrOutputWithContext(context.Background())
}

func (i *loadBalancerAccessLogsPtrType) ToLoadBalancerAccessLogsPtrOutputWithContext(ctx context.Context) LoadBalancerAccessLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerAccessLogsPtrOutput)
}

type LoadBalancerAccessLogsOutput struct{ *pulumi.OutputState }

func (LoadBalancerAccessLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerAccessLogs)(nil)).Elem()
}

func (o LoadBalancerAccessLogsOutput) ToLoadBalancerAccessLogsOutput() LoadBalancerAccessLogsOutput {
	return o
}

func (o LoadBalancerAccessLogsOutput) ToLoadBalancerAccessLogsOutputWithContext(ctx context.Context) LoadBalancerAccessLogsOutput {
	return o
}

func (o LoadBalancerAccessLogsOutput) ToLoadBalancerAccessLogsPtrOutput() LoadBalancerAccessLogsPtrOutput {
	return o.ToLoadBalancerAccessLogsPtrOutputWithContext(context.Background())
}

func (o LoadBalancerAccessLogsOutput) ToLoadBalancerAccessLogsPtrOutputWithContext(ctx context.Context) LoadBalancerAccessLogsPtrOutput {
	return o.ApplyT(func(v LoadBalancerAccessLogs) *LoadBalancerAccessLogs {
		return &v
	}).(LoadBalancerAccessLogsPtrOutput)
}

// The S3 bucket name to store the logs in.
func (o LoadBalancerAccessLogsOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerAccessLogs) string { return v.Bucket }).(pulumi.StringOutput)
}

// Boolean to enable / disable `accessLogs`. Defaults to `false`, even when `bucket` is specified.
func (o LoadBalancerAccessLogsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancerAccessLogs) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The S3 bucket prefix. Logs are stored in the root if not configured.
func (o LoadBalancerAccessLogsOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerAccessLogs) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type LoadBalancerAccessLogsPtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerAccessLogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerAccessLogs)(nil)).Elem()
}

func (o LoadBalancerAccessLogsPtrOutput) ToLoadBalancerAccessLogsPtrOutput() LoadBalancerAccessLogsPtrOutput {
	return o
}

func (o LoadBalancerAccessLogsPtrOutput) ToLoadBalancerAccessLogsPtrOutputWithContext(ctx context.Context) LoadBalancerAccessLogsPtrOutput {
	return o
}

func (o LoadBalancerAccessLogsPtrOutput) Elem() LoadBalancerAccessLogsOutput {
	return o.ApplyT(func(v *LoadBalancerAccessLogs) LoadBalancerAccessLogs { return *v }).(LoadBalancerAccessLogsOutput)
}

// The S3 bucket name to store the logs in.
func (o LoadBalancerAccessLogsPtrOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerAccessLogs) string { return v.Bucket }).(pulumi.StringOutput)
}

// Boolean to enable / disable `accessLogs`. Defaults to `false`, even when `bucket` is specified.
func (o LoadBalancerAccessLogsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancerAccessLogs) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The S3 bucket prefix. Logs are stored in the root if not configured.
func (o LoadBalancerAccessLogsPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerAccessLogs) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type LoadBalancerSubnetMapping struct {
	// The allocation ID of the Elastic IP address.
	AllocationId *string `pulumi:"allocationId"`
	// The id of the subnet of which to attach to the load balancer. You can specify only one subnet per Availability Zone.
	SubnetId string `pulumi:"subnetId"`
}

// LoadBalancerSubnetMappingInput is an input type that accepts LoadBalancerSubnetMappingArgs and LoadBalancerSubnetMappingOutput values.
// You can construct a concrete instance of `LoadBalancerSubnetMappingInput` via:
//
// 		 LoadBalancerSubnetMappingArgs{...}
//
type LoadBalancerSubnetMappingInput interface {
	pulumi.Input

	ToLoadBalancerSubnetMappingOutput() LoadBalancerSubnetMappingOutput
	ToLoadBalancerSubnetMappingOutputWithContext(context.Context) LoadBalancerSubnetMappingOutput
}

type LoadBalancerSubnetMappingArgs struct {
	// The allocation ID of the Elastic IP address.
	AllocationId pulumi.StringPtrInput `pulumi:"allocationId"`
	// The id of the subnet of which to attach to the load balancer. You can specify only one subnet per Availability Zone.
	SubnetId pulumi.StringInput `pulumi:"subnetId"`
}

func (LoadBalancerSubnetMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerSubnetMapping)(nil)).Elem()
}

func (i LoadBalancerSubnetMappingArgs) ToLoadBalancerSubnetMappingOutput() LoadBalancerSubnetMappingOutput {
	return i.ToLoadBalancerSubnetMappingOutputWithContext(context.Background())
}

func (i LoadBalancerSubnetMappingArgs) ToLoadBalancerSubnetMappingOutputWithContext(ctx context.Context) LoadBalancerSubnetMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSubnetMappingOutput)
}

// LoadBalancerSubnetMappingArrayInput is an input type that accepts LoadBalancerSubnetMappingArray and LoadBalancerSubnetMappingArrayOutput values.
// You can construct a concrete instance of `LoadBalancerSubnetMappingArrayInput` via:
//
// 		 LoadBalancerSubnetMappingArray{ LoadBalancerSubnetMappingArgs{...} }
//
type LoadBalancerSubnetMappingArrayInput interface {
	pulumi.Input

	ToLoadBalancerSubnetMappingArrayOutput() LoadBalancerSubnetMappingArrayOutput
	ToLoadBalancerSubnetMappingArrayOutputWithContext(context.Context) LoadBalancerSubnetMappingArrayOutput
}

type LoadBalancerSubnetMappingArray []LoadBalancerSubnetMappingInput

func (LoadBalancerSubnetMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerSubnetMapping)(nil)).Elem()
}

func (i LoadBalancerSubnetMappingArray) ToLoadBalancerSubnetMappingArrayOutput() LoadBalancerSubnetMappingArrayOutput {
	return i.ToLoadBalancerSubnetMappingArrayOutputWithContext(context.Background())
}

func (i LoadBalancerSubnetMappingArray) ToLoadBalancerSubnetMappingArrayOutputWithContext(ctx context.Context) LoadBalancerSubnetMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerSubnetMappingArrayOutput)
}

type LoadBalancerSubnetMappingOutput struct{ *pulumi.OutputState }

func (LoadBalancerSubnetMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerSubnetMapping)(nil)).Elem()
}

func (o LoadBalancerSubnetMappingOutput) ToLoadBalancerSubnetMappingOutput() LoadBalancerSubnetMappingOutput {
	return o
}

func (o LoadBalancerSubnetMappingOutput) ToLoadBalancerSubnetMappingOutputWithContext(ctx context.Context) LoadBalancerSubnetMappingOutput {
	return o
}

// The allocation ID of the Elastic IP address.
func (o LoadBalancerSubnetMappingOutput) AllocationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerSubnetMapping) *string { return v.AllocationId }).(pulumi.StringPtrOutput)
}

// The id of the subnet of which to attach to the load balancer. You can specify only one subnet per Availability Zone.
func (o LoadBalancerSubnetMappingOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerSubnetMapping) string { return v.SubnetId }).(pulumi.StringOutput)
}

type LoadBalancerSubnetMappingArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerSubnetMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerSubnetMapping)(nil)).Elem()
}

func (o LoadBalancerSubnetMappingArrayOutput) ToLoadBalancerSubnetMappingArrayOutput() LoadBalancerSubnetMappingArrayOutput {
	return o
}

func (o LoadBalancerSubnetMappingArrayOutput) ToLoadBalancerSubnetMappingArrayOutputWithContext(ctx context.Context) LoadBalancerSubnetMappingArrayOutput {
	return o
}

func (o LoadBalancerSubnetMappingArrayOutput) Index(i pulumi.IntInput) LoadBalancerSubnetMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerSubnetMapping {
		return vs[0].([]LoadBalancerSubnetMapping)[vs[1].(int)]
	}).(LoadBalancerSubnetMappingOutput)
}

type TargetGroupHealthCheck struct {
	// Boolean to enable / disable `stickiness`. Default is `true`
	Enabled *bool `pulumi:"enabled"`
	// The number of consecutive health checks successes required before considering an unhealthy target healthy. Defaults to 3.
	HealthyThreshold *int `pulumi:"healthyThreshold"`
	// The approximate amount of time, in seconds, between health checks of an individual target. Minimum value 5 seconds, Maximum value 300 seconds. For `lambda` target groups, it needs to be greater as the `timeout` of the underlying `lambda`. Default 30 seconds.
	Interval *int    `pulumi:"interval"`
	Matcher  *string `pulumi:"matcher"`
	// The destination for the health check request. Applies to Application Load Balancers only (HTTP/HTTPS), not Network Load Balancers (TCP).
	Path *string `pulumi:"path"`
	// The port on which targets receive traffic, unless overridden when registering a specific target. Required when `targetType` is `instance` or `ip`. Does not apply when `targetType` is `lambda`.
	Port *string `pulumi:"port"`
	// The protocol to use for routing traffic to the targets. Should be one of "TCP", "TLS", "UDP", "TCP_UDP", "HTTP" or "HTTPS". Required when `targetType` is `instance` or `ip`. Does not apply when `targetType` is `lambda`.
	Protocol *string `pulumi:"protocol"`
	// The amount of time, in seconds, during which no response means a failed health check. For Application Load Balancers, the range is 2 to 120 seconds, and the default is 5 seconds for the `instance` target type and 30 seconds for the `lambda` target type. For Network Load Balancers, you cannot set a custom value, and the default is 10 seconds for TCP and HTTPS health checks and 6 seconds for HTTP health checks.
	Timeout *int `pulumi:"timeout"`
	// The number of consecutive health check failures required before considering the target unhealthy . For Network Load Balancers, this value must be the same as the `healthyThreshold`. Defaults to 3.
	// * `matcher` (Required for HTTP/HTTPS ALB) The HTTP codes to use when checking for a successful response from a target. You can specify multiple values (for example, "200,202") or a range of values (for example, "200-299"). Applies to Application Load Balancers only (HTTP/HTTPS), not Network Load Balancers (TCP).
	UnhealthyThreshold *int `pulumi:"unhealthyThreshold"`
}

// TargetGroupHealthCheckInput is an input type that accepts TargetGroupHealthCheckArgs and TargetGroupHealthCheckOutput values.
// You can construct a concrete instance of `TargetGroupHealthCheckInput` via:
//
// 		 TargetGroupHealthCheckArgs{...}
//
type TargetGroupHealthCheckInput interface {
	pulumi.Input

	ToTargetGroupHealthCheckOutput() TargetGroupHealthCheckOutput
	ToTargetGroupHealthCheckOutputWithContext(context.Context) TargetGroupHealthCheckOutput
}

type TargetGroupHealthCheckArgs struct {
	// Boolean to enable / disable `stickiness`. Default is `true`
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The number of consecutive health checks successes required before considering an unhealthy target healthy. Defaults to 3.
	HealthyThreshold pulumi.IntPtrInput `pulumi:"healthyThreshold"`
	// The approximate amount of time, in seconds, between health checks of an individual target. Minimum value 5 seconds, Maximum value 300 seconds. For `lambda` target groups, it needs to be greater as the `timeout` of the underlying `lambda`. Default 30 seconds.
	Interval pulumi.IntPtrInput    `pulumi:"interval"`
	Matcher  pulumi.StringPtrInput `pulumi:"matcher"`
	// The destination for the health check request. Applies to Application Load Balancers only (HTTP/HTTPS), not Network Load Balancers (TCP).
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The port on which targets receive traffic, unless overridden when registering a specific target. Required when `targetType` is `instance` or `ip`. Does not apply when `targetType` is `lambda`.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// The protocol to use for routing traffic to the targets. Should be one of "TCP", "TLS", "UDP", "TCP_UDP", "HTTP" or "HTTPS". Required when `targetType` is `instance` or `ip`. Does not apply when `targetType` is `lambda`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// The amount of time, in seconds, during which no response means a failed health check. For Application Load Balancers, the range is 2 to 120 seconds, and the default is 5 seconds for the `instance` target type and 30 seconds for the `lambda` target type. For Network Load Balancers, you cannot set a custom value, and the default is 10 seconds for TCP and HTTPS health checks and 6 seconds for HTTP health checks.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// The number of consecutive health check failures required before considering the target unhealthy . For Network Load Balancers, this value must be the same as the `healthyThreshold`. Defaults to 3.
	// * `matcher` (Required for HTTP/HTTPS ALB) The HTTP codes to use when checking for a successful response from a target. You can specify multiple values (for example, "200,202") or a range of values (for example, "200-299"). Applies to Application Load Balancers only (HTTP/HTTPS), not Network Load Balancers (TCP).
	UnhealthyThreshold pulumi.IntPtrInput `pulumi:"unhealthyThreshold"`
}

func (TargetGroupHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupHealthCheck)(nil)).Elem()
}

func (i TargetGroupHealthCheckArgs) ToTargetGroupHealthCheckOutput() TargetGroupHealthCheckOutput {
	return i.ToTargetGroupHealthCheckOutputWithContext(context.Background())
}

func (i TargetGroupHealthCheckArgs) ToTargetGroupHealthCheckOutputWithContext(ctx context.Context) TargetGroupHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupHealthCheckOutput)
}

func (i TargetGroupHealthCheckArgs) ToTargetGroupHealthCheckPtrOutput() TargetGroupHealthCheckPtrOutput {
	return i.ToTargetGroupHealthCheckPtrOutputWithContext(context.Background())
}

func (i TargetGroupHealthCheckArgs) ToTargetGroupHealthCheckPtrOutputWithContext(ctx context.Context) TargetGroupHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupHealthCheckOutput).ToTargetGroupHealthCheckPtrOutputWithContext(ctx)
}

// TargetGroupHealthCheckPtrInput is an input type that accepts TargetGroupHealthCheckArgs, TargetGroupHealthCheckPtr and TargetGroupHealthCheckPtrOutput values.
// You can construct a concrete instance of `TargetGroupHealthCheckPtrInput` via:
//
// 		 TargetGroupHealthCheckArgs{...}
//
//  or:
//
// 		 nil
//
type TargetGroupHealthCheckPtrInput interface {
	pulumi.Input

	ToTargetGroupHealthCheckPtrOutput() TargetGroupHealthCheckPtrOutput
	ToTargetGroupHealthCheckPtrOutputWithContext(context.Context) TargetGroupHealthCheckPtrOutput
}

type targetGroupHealthCheckPtrType TargetGroupHealthCheckArgs

func TargetGroupHealthCheckPtr(v *TargetGroupHealthCheckArgs) TargetGroupHealthCheckPtrInput {
	return (*targetGroupHealthCheckPtrType)(v)
}

func (*targetGroupHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetGroupHealthCheck)(nil)).Elem()
}

func (i *targetGroupHealthCheckPtrType) ToTargetGroupHealthCheckPtrOutput() TargetGroupHealthCheckPtrOutput {
	return i.ToTargetGroupHealthCheckPtrOutputWithContext(context.Background())
}

func (i *targetGroupHealthCheckPtrType) ToTargetGroupHealthCheckPtrOutputWithContext(ctx context.Context) TargetGroupHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupHealthCheckPtrOutput)
}

type TargetGroupHealthCheckOutput struct{ *pulumi.OutputState }

func (TargetGroupHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupHealthCheck)(nil)).Elem()
}

func (o TargetGroupHealthCheckOutput) ToTargetGroupHealthCheckOutput() TargetGroupHealthCheckOutput {
	return o
}

func (o TargetGroupHealthCheckOutput) ToTargetGroupHealthCheckOutputWithContext(ctx context.Context) TargetGroupHealthCheckOutput {
	return o
}

func (o TargetGroupHealthCheckOutput) ToTargetGroupHealthCheckPtrOutput() TargetGroupHealthCheckPtrOutput {
	return o.ToTargetGroupHealthCheckPtrOutputWithContext(context.Background())
}

func (o TargetGroupHealthCheckOutput) ToTargetGroupHealthCheckPtrOutputWithContext(ctx context.Context) TargetGroupHealthCheckPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *TargetGroupHealthCheck {
		return &v
	}).(TargetGroupHealthCheckPtrOutput)
}

// Boolean to enable / disable `stickiness`. Default is `true`
func (o TargetGroupHealthCheckOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The number of consecutive health checks successes required before considering an unhealthy target healthy. Defaults to 3.
func (o TargetGroupHealthCheckOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *int { return v.HealthyThreshold }).(pulumi.IntPtrOutput)
}

// The approximate amount of time, in seconds, between health checks of an individual target. Minimum value 5 seconds, Maximum value 300 seconds. For `lambda` target groups, it needs to be greater as the `timeout` of the underlying `lambda`. Default 30 seconds.
func (o TargetGroupHealthCheckOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

func (o TargetGroupHealthCheckOutput) Matcher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *string { return v.Matcher }).(pulumi.StringPtrOutput)
}

// The destination for the health check request. Applies to Application Load Balancers only (HTTP/HTTPS), not Network Load Balancers (TCP).
func (o TargetGroupHealthCheckOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port on which targets receive traffic, unless overridden when registering a specific target. Required when `targetType` is `instance` or `ip`. Does not apply when `targetType` is `lambda`.
func (o TargetGroupHealthCheckOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The protocol to use for routing traffic to the targets. Should be one of "TCP", "TLS", "UDP", "TCP_UDP", "HTTP" or "HTTPS". Required when `targetType` is `instance` or `ip`. Does not apply when `targetType` is `lambda`.
func (o TargetGroupHealthCheckOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The amount of time, in seconds, during which no response means a failed health check. For Application Load Balancers, the range is 2 to 120 seconds, and the default is 5 seconds for the `instance` target type and 30 seconds for the `lambda` target type. For Network Load Balancers, you cannot set a custom value, and the default is 10 seconds for TCP and HTTPS health checks and 6 seconds for HTTP health checks.
func (o TargetGroupHealthCheckOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The number of consecutive health check failures required before considering the target unhealthy . For Network Load Balancers, this value must be the same as the `healthyThreshold`. Defaults to 3.
// * `matcher` (Required for HTTP/HTTPS ALB) The HTTP codes to use when checking for a successful response from a target. You can specify multiple values (for example, "200,202") or a range of values (for example, "200-299"). Applies to Application Load Balancers only (HTTP/HTTPS), not Network Load Balancers (TCP).
func (o TargetGroupHealthCheckOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

type TargetGroupHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (TargetGroupHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetGroupHealthCheck)(nil)).Elem()
}

func (o TargetGroupHealthCheckPtrOutput) ToTargetGroupHealthCheckPtrOutput() TargetGroupHealthCheckPtrOutput {
	return o
}

func (o TargetGroupHealthCheckPtrOutput) ToTargetGroupHealthCheckPtrOutputWithContext(ctx context.Context) TargetGroupHealthCheckPtrOutput {
	return o
}

func (o TargetGroupHealthCheckPtrOutput) Elem() TargetGroupHealthCheckOutput {
	return o.ApplyT(func(v *TargetGroupHealthCheck) TargetGroupHealthCheck { return *v }).(TargetGroupHealthCheckOutput)
}

// Boolean to enable / disable `stickiness`. Default is `true`
func (o TargetGroupHealthCheckPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The number of consecutive health checks successes required before considering an unhealthy target healthy. Defaults to 3.
func (o TargetGroupHealthCheckPtrOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *int { return v.HealthyThreshold }).(pulumi.IntPtrOutput)
}

// The approximate amount of time, in seconds, between health checks of an individual target. Minimum value 5 seconds, Maximum value 300 seconds. For `lambda` target groups, it needs to be greater as the `timeout` of the underlying `lambda`. Default 30 seconds.
func (o TargetGroupHealthCheckPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

func (o TargetGroupHealthCheckPtrOutput) Matcher() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *string { return v.Matcher }).(pulumi.StringPtrOutput)
}

// The destination for the health check request. Applies to Application Load Balancers only (HTTP/HTTPS), not Network Load Balancers (TCP).
func (o TargetGroupHealthCheckPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The port on which targets receive traffic, unless overridden when registering a specific target. Required when `targetType` is `instance` or `ip`. Does not apply when `targetType` is `lambda`.
func (o TargetGroupHealthCheckPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// The protocol to use for routing traffic to the targets. Should be one of "TCP", "TLS", "UDP", "TCP_UDP", "HTTP" or "HTTPS". Required when `targetType` is `instance` or `ip`. Does not apply when `targetType` is `lambda`.
func (o TargetGroupHealthCheckPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// The amount of time, in seconds, during which no response means a failed health check. For Application Load Balancers, the range is 2 to 120 seconds, and the default is 5 seconds for the `instance` target type and 30 seconds for the `lambda` target type. For Network Load Balancers, you cannot set a custom value, and the default is 10 seconds for TCP and HTTPS health checks and 6 seconds for HTTP health checks.
func (o TargetGroupHealthCheckPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// The number of consecutive health check failures required before considering the target unhealthy . For Network Load Balancers, this value must be the same as the `healthyThreshold`. Defaults to 3.
// * `matcher` (Required for HTTP/HTTPS ALB) The HTTP codes to use when checking for a successful response from a target. You can specify multiple values (for example, "200,202") or a range of values (for example, "200-299"). Applies to Application Load Balancers only (HTTP/HTTPS), not Network Load Balancers (TCP).
func (o TargetGroupHealthCheckPtrOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetGroupHealthCheck) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

type TargetGroupStickiness struct {
	// The time period, in seconds, during which requests from a client should be routed to the same target. After this time period expires, the load balancer-generated cookie is considered stale. The range is 1 second to 1 week (604800 seconds). The default value is 1 day (86400 seconds).
	CookieDuration *int `pulumi:"cookieDuration"`
	// Indicates whether  health checks are enabled. Defaults to true.
	Enabled *bool `pulumi:"enabled"`
	// The type of sticky sessions. The only current possible value is `lbCookie`.
	Type string `pulumi:"type"`
}

// TargetGroupStickinessInput is an input type that accepts TargetGroupStickinessArgs and TargetGroupStickinessOutput values.
// You can construct a concrete instance of `TargetGroupStickinessInput` via:
//
// 		 TargetGroupStickinessArgs{...}
//
type TargetGroupStickinessInput interface {
	pulumi.Input

	ToTargetGroupStickinessOutput() TargetGroupStickinessOutput
	ToTargetGroupStickinessOutputWithContext(context.Context) TargetGroupStickinessOutput
}

type TargetGroupStickinessArgs struct {
	// The time period, in seconds, during which requests from a client should be routed to the same target. After this time period expires, the load balancer-generated cookie is considered stale. The range is 1 second to 1 week (604800 seconds). The default value is 1 day (86400 seconds).
	CookieDuration pulumi.IntPtrInput `pulumi:"cookieDuration"`
	// Indicates whether  health checks are enabled. Defaults to true.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The type of sticky sessions. The only current possible value is `lbCookie`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TargetGroupStickinessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupStickiness)(nil)).Elem()
}

func (i TargetGroupStickinessArgs) ToTargetGroupStickinessOutput() TargetGroupStickinessOutput {
	return i.ToTargetGroupStickinessOutputWithContext(context.Background())
}

func (i TargetGroupStickinessArgs) ToTargetGroupStickinessOutputWithContext(ctx context.Context) TargetGroupStickinessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupStickinessOutput)
}

func (i TargetGroupStickinessArgs) ToTargetGroupStickinessPtrOutput() TargetGroupStickinessPtrOutput {
	return i.ToTargetGroupStickinessPtrOutputWithContext(context.Background())
}

func (i TargetGroupStickinessArgs) ToTargetGroupStickinessPtrOutputWithContext(ctx context.Context) TargetGroupStickinessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupStickinessOutput).ToTargetGroupStickinessPtrOutputWithContext(ctx)
}

// TargetGroupStickinessPtrInput is an input type that accepts TargetGroupStickinessArgs, TargetGroupStickinessPtr and TargetGroupStickinessPtrOutput values.
// You can construct a concrete instance of `TargetGroupStickinessPtrInput` via:
//
// 		 TargetGroupStickinessArgs{...}
//
//  or:
//
// 		 nil
//
type TargetGroupStickinessPtrInput interface {
	pulumi.Input

	ToTargetGroupStickinessPtrOutput() TargetGroupStickinessPtrOutput
	ToTargetGroupStickinessPtrOutputWithContext(context.Context) TargetGroupStickinessPtrOutput
}

type targetGroupStickinessPtrType TargetGroupStickinessArgs

func TargetGroupStickinessPtr(v *TargetGroupStickinessArgs) TargetGroupStickinessPtrInput {
	return (*targetGroupStickinessPtrType)(v)
}

func (*targetGroupStickinessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetGroupStickiness)(nil)).Elem()
}

func (i *targetGroupStickinessPtrType) ToTargetGroupStickinessPtrOutput() TargetGroupStickinessPtrOutput {
	return i.ToTargetGroupStickinessPtrOutputWithContext(context.Background())
}

func (i *targetGroupStickinessPtrType) ToTargetGroupStickinessPtrOutputWithContext(ctx context.Context) TargetGroupStickinessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TargetGroupStickinessPtrOutput)
}

type TargetGroupStickinessOutput struct{ *pulumi.OutputState }

func (TargetGroupStickinessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TargetGroupStickiness)(nil)).Elem()
}

func (o TargetGroupStickinessOutput) ToTargetGroupStickinessOutput() TargetGroupStickinessOutput {
	return o
}

func (o TargetGroupStickinessOutput) ToTargetGroupStickinessOutputWithContext(ctx context.Context) TargetGroupStickinessOutput {
	return o
}

func (o TargetGroupStickinessOutput) ToTargetGroupStickinessPtrOutput() TargetGroupStickinessPtrOutput {
	return o.ToTargetGroupStickinessPtrOutputWithContext(context.Background())
}

func (o TargetGroupStickinessOutput) ToTargetGroupStickinessPtrOutputWithContext(ctx context.Context) TargetGroupStickinessPtrOutput {
	return o.ApplyT(func(v TargetGroupStickiness) *TargetGroupStickiness {
		return &v
	}).(TargetGroupStickinessPtrOutput)
}

// The time period, in seconds, during which requests from a client should be routed to the same target. After this time period expires, the load balancer-generated cookie is considered stale. The range is 1 second to 1 week (604800 seconds). The default value is 1 day (86400 seconds).
func (o TargetGroupStickinessOutput) CookieDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetGroupStickiness) *int { return v.CookieDuration }).(pulumi.IntPtrOutput)
}

// Indicates whether  health checks are enabled. Defaults to true.
func (o TargetGroupStickinessOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetGroupStickiness) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The type of sticky sessions. The only current possible value is `lbCookie`.
func (o TargetGroupStickinessOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupStickiness) string { return v.Type }).(pulumi.StringOutput)
}

type TargetGroupStickinessPtrOutput struct{ *pulumi.OutputState }

func (TargetGroupStickinessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TargetGroupStickiness)(nil)).Elem()
}

func (o TargetGroupStickinessPtrOutput) ToTargetGroupStickinessPtrOutput() TargetGroupStickinessPtrOutput {
	return o
}

func (o TargetGroupStickinessPtrOutput) ToTargetGroupStickinessPtrOutputWithContext(ctx context.Context) TargetGroupStickinessPtrOutput {
	return o
}

func (o TargetGroupStickinessPtrOutput) Elem() TargetGroupStickinessOutput {
	return o.ApplyT(func(v *TargetGroupStickiness) TargetGroupStickiness { return *v }).(TargetGroupStickinessOutput)
}

// The time period, in seconds, during which requests from a client should be routed to the same target. After this time period expires, the load balancer-generated cookie is considered stale. The range is 1 second to 1 week (604800 seconds). The default value is 1 day (86400 seconds).
func (o TargetGroupStickinessPtrOutput) CookieDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v TargetGroupStickiness) *int { return v.CookieDuration }).(pulumi.IntPtrOutput)
}

// Indicates whether  health checks are enabled. Defaults to true.
func (o TargetGroupStickinessPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TargetGroupStickiness) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The type of sticky sessions. The only current possible value is `lbCookie`.
func (o TargetGroupStickinessPtrOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TargetGroupStickiness) string { return v.Type }).(pulumi.StringOutput)
}

type GetListenerDefaultAction struct {
	AuthenticateCognitos []GetListenerDefaultActionAuthenticateCognito `pulumi:"authenticateCognitos"`
	AuthenticateOidcs    []GetListenerDefaultActionAuthenticateOidc    `pulumi:"authenticateOidcs"`
	FixedResponses       []GetListenerDefaultActionFixedResponse       `pulumi:"fixedResponses"`
	Order                int                                           `pulumi:"order"`
	Redirects            []GetListenerDefaultActionRedirect            `pulumi:"redirects"`
	TargetGroupArn       string                                        `pulumi:"targetGroupArn"`
	Type                 string                                        `pulumi:"type"`
}

// GetListenerDefaultActionInput is an input type that accepts GetListenerDefaultActionArgs and GetListenerDefaultActionOutput values.
// You can construct a concrete instance of `GetListenerDefaultActionInput` via:
//
// 		 GetListenerDefaultActionArgs{...}
//
type GetListenerDefaultActionInput interface {
	pulumi.Input

	ToGetListenerDefaultActionOutput() GetListenerDefaultActionOutput
	ToGetListenerDefaultActionOutputWithContext(context.Context) GetListenerDefaultActionOutput
}

type GetListenerDefaultActionArgs struct {
	AuthenticateCognitos GetListenerDefaultActionAuthenticateCognitoArrayInput `pulumi:"authenticateCognitos"`
	AuthenticateOidcs    GetListenerDefaultActionAuthenticateOidcArrayInput    `pulumi:"authenticateOidcs"`
	FixedResponses       GetListenerDefaultActionFixedResponseArrayInput       `pulumi:"fixedResponses"`
	Order                pulumi.IntInput                                       `pulumi:"order"`
	Redirects            GetListenerDefaultActionRedirectArrayInput            `pulumi:"redirects"`
	TargetGroupArn       pulumi.StringInput                                    `pulumi:"targetGroupArn"`
	Type                 pulumi.StringInput                                    `pulumi:"type"`
}

func (GetListenerDefaultActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerDefaultAction)(nil)).Elem()
}

func (i GetListenerDefaultActionArgs) ToGetListenerDefaultActionOutput() GetListenerDefaultActionOutput {
	return i.ToGetListenerDefaultActionOutputWithContext(context.Background())
}

func (i GetListenerDefaultActionArgs) ToGetListenerDefaultActionOutputWithContext(ctx context.Context) GetListenerDefaultActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerDefaultActionOutput)
}

// GetListenerDefaultActionArrayInput is an input type that accepts GetListenerDefaultActionArray and GetListenerDefaultActionArrayOutput values.
// You can construct a concrete instance of `GetListenerDefaultActionArrayInput` via:
//
// 		 GetListenerDefaultActionArray{ GetListenerDefaultActionArgs{...} }
//
type GetListenerDefaultActionArrayInput interface {
	pulumi.Input

	ToGetListenerDefaultActionArrayOutput() GetListenerDefaultActionArrayOutput
	ToGetListenerDefaultActionArrayOutputWithContext(context.Context) GetListenerDefaultActionArrayOutput
}

type GetListenerDefaultActionArray []GetListenerDefaultActionInput

func (GetListenerDefaultActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerDefaultAction)(nil)).Elem()
}

func (i GetListenerDefaultActionArray) ToGetListenerDefaultActionArrayOutput() GetListenerDefaultActionArrayOutput {
	return i.ToGetListenerDefaultActionArrayOutputWithContext(context.Background())
}

func (i GetListenerDefaultActionArray) ToGetListenerDefaultActionArrayOutputWithContext(ctx context.Context) GetListenerDefaultActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerDefaultActionArrayOutput)
}

type GetListenerDefaultActionOutput struct{ *pulumi.OutputState }

func (GetListenerDefaultActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerDefaultAction)(nil)).Elem()
}

func (o GetListenerDefaultActionOutput) ToGetListenerDefaultActionOutput() GetListenerDefaultActionOutput {
	return o
}

func (o GetListenerDefaultActionOutput) ToGetListenerDefaultActionOutputWithContext(ctx context.Context) GetListenerDefaultActionOutput {
	return o
}

func (o GetListenerDefaultActionOutput) AuthenticateCognitos() GetListenerDefaultActionAuthenticateCognitoArrayOutput {
	return o.ApplyT(func(v GetListenerDefaultAction) []GetListenerDefaultActionAuthenticateCognito {
		return v.AuthenticateCognitos
	}).(GetListenerDefaultActionAuthenticateCognitoArrayOutput)
}

func (o GetListenerDefaultActionOutput) AuthenticateOidcs() GetListenerDefaultActionAuthenticateOidcArrayOutput {
	return o.ApplyT(func(v GetListenerDefaultAction) []GetListenerDefaultActionAuthenticateOidc {
		return v.AuthenticateOidcs
	}).(GetListenerDefaultActionAuthenticateOidcArrayOutput)
}

func (o GetListenerDefaultActionOutput) FixedResponses() GetListenerDefaultActionFixedResponseArrayOutput {
	return o.ApplyT(func(v GetListenerDefaultAction) []GetListenerDefaultActionFixedResponse { return v.FixedResponses }).(GetListenerDefaultActionFixedResponseArrayOutput)
}

func (o GetListenerDefaultActionOutput) Order() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenerDefaultAction) int { return v.Order }).(pulumi.IntOutput)
}

func (o GetListenerDefaultActionOutput) Redirects() GetListenerDefaultActionRedirectArrayOutput {
	return o.ApplyT(func(v GetListenerDefaultAction) []GetListenerDefaultActionRedirect { return v.Redirects }).(GetListenerDefaultActionRedirectArrayOutput)
}

func (o GetListenerDefaultActionOutput) TargetGroupArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultAction) string { return v.TargetGroupArn }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultAction) string { return v.Type }).(pulumi.StringOutput)
}

type GetListenerDefaultActionArrayOutput struct{ *pulumi.OutputState }

func (GetListenerDefaultActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerDefaultAction)(nil)).Elem()
}

func (o GetListenerDefaultActionArrayOutput) ToGetListenerDefaultActionArrayOutput() GetListenerDefaultActionArrayOutput {
	return o
}

func (o GetListenerDefaultActionArrayOutput) ToGetListenerDefaultActionArrayOutputWithContext(ctx context.Context) GetListenerDefaultActionArrayOutput {
	return o
}

func (o GetListenerDefaultActionArrayOutput) Index(i pulumi.IntInput) GetListenerDefaultActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenerDefaultAction {
		return vs[0].([]GetListenerDefaultAction)[vs[1].(int)]
	}).(GetListenerDefaultActionOutput)
}

type GetListenerDefaultActionAuthenticateCognito struct {
	AuthenticationRequestExtraParams map[string]interface{} `pulumi:"authenticationRequestExtraParams"`
	OnUnauthenticatedRequest         string                 `pulumi:"onUnauthenticatedRequest"`
	Scope                            string                 `pulumi:"scope"`
	SessionCookieName                string                 `pulumi:"sessionCookieName"`
	SessionTimeout                   int                    `pulumi:"sessionTimeout"`
	UserPoolArn                      string                 `pulumi:"userPoolArn"`
	UserPoolClientId                 string                 `pulumi:"userPoolClientId"`
	UserPoolDomain                   string                 `pulumi:"userPoolDomain"`
}

// GetListenerDefaultActionAuthenticateCognitoInput is an input type that accepts GetListenerDefaultActionAuthenticateCognitoArgs and GetListenerDefaultActionAuthenticateCognitoOutput values.
// You can construct a concrete instance of `GetListenerDefaultActionAuthenticateCognitoInput` via:
//
// 		 GetListenerDefaultActionAuthenticateCognitoArgs{...}
//
type GetListenerDefaultActionAuthenticateCognitoInput interface {
	pulumi.Input

	ToGetListenerDefaultActionAuthenticateCognitoOutput() GetListenerDefaultActionAuthenticateCognitoOutput
	ToGetListenerDefaultActionAuthenticateCognitoOutputWithContext(context.Context) GetListenerDefaultActionAuthenticateCognitoOutput
}

type GetListenerDefaultActionAuthenticateCognitoArgs struct {
	AuthenticationRequestExtraParams pulumi.MapInput    `pulumi:"authenticationRequestExtraParams"`
	OnUnauthenticatedRequest         pulumi.StringInput `pulumi:"onUnauthenticatedRequest"`
	Scope                            pulumi.StringInput `pulumi:"scope"`
	SessionCookieName                pulumi.StringInput `pulumi:"sessionCookieName"`
	SessionTimeout                   pulumi.IntInput    `pulumi:"sessionTimeout"`
	UserPoolArn                      pulumi.StringInput `pulumi:"userPoolArn"`
	UserPoolClientId                 pulumi.StringInput `pulumi:"userPoolClientId"`
	UserPoolDomain                   pulumi.StringInput `pulumi:"userPoolDomain"`
}

func (GetListenerDefaultActionAuthenticateCognitoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerDefaultActionAuthenticateCognito)(nil)).Elem()
}

func (i GetListenerDefaultActionAuthenticateCognitoArgs) ToGetListenerDefaultActionAuthenticateCognitoOutput() GetListenerDefaultActionAuthenticateCognitoOutput {
	return i.ToGetListenerDefaultActionAuthenticateCognitoOutputWithContext(context.Background())
}

func (i GetListenerDefaultActionAuthenticateCognitoArgs) ToGetListenerDefaultActionAuthenticateCognitoOutputWithContext(ctx context.Context) GetListenerDefaultActionAuthenticateCognitoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerDefaultActionAuthenticateCognitoOutput)
}

// GetListenerDefaultActionAuthenticateCognitoArrayInput is an input type that accepts GetListenerDefaultActionAuthenticateCognitoArray and GetListenerDefaultActionAuthenticateCognitoArrayOutput values.
// You can construct a concrete instance of `GetListenerDefaultActionAuthenticateCognitoArrayInput` via:
//
// 		 GetListenerDefaultActionAuthenticateCognitoArray{ GetListenerDefaultActionAuthenticateCognitoArgs{...} }
//
type GetListenerDefaultActionAuthenticateCognitoArrayInput interface {
	pulumi.Input

	ToGetListenerDefaultActionAuthenticateCognitoArrayOutput() GetListenerDefaultActionAuthenticateCognitoArrayOutput
	ToGetListenerDefaultActionAuthenticateCognitoArrayOutputWithContext(context.Context) GetListenerDefaultActionAuthenticateCognitoArrayOutput
}

type GetListenerDefaultActionAuthenticateCognitoArray []GetListenerDefaultActionAuthenticateCognitoInput

func (GetListenerDefaultActionAuthenticateCognitoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerDefaultActionAuthenticateCognito)(nil)).Elem()
}

func (i GetListenerDefaultActionAuthenticateCognitoArray) ToGetListenerDefaultActionAuthenticateCognitoArrayOutput() GetListenerDefaultActionAuthenticateCognitoArrayOutput {
	return i.ToGetListenerDefaultActionAuthenticateCognitoArrayOutputWithContext(context.Background())
}

func (i GetListenerDefaultActionAuthenticateCognitoArray) ToGetListenerDefaultActionAuthenticateCognitoArrayOutputWithContext(ctx context.Context) GetListenerDefaultActionAuthenticateCognitoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerDefaultActionAuthenticateCognitoArrayOutput)
}

type GetListenerDefaultActionAuthenticateCognitoOutput struct{ *pulumi.OutputState }

func (GetListenerDefaultActionAuthenticateCognitoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerDefaultActionAuthenticateCognito)(nil)).Elem()
}

func (o GetListenerDefaultActionAuthenticateCognitoOutput) ToGetListenerDefaultActionAuthenticateCognitoOutput() GetListenerDefaultActionAuthenticateCognitoOutput {
	return o
}

func (o GetListenerDefaultActionAuthenticateCognitoOutput) ToGetListenerDefaultActionAuthenticateCognitoOutputWithContext(ctx context.Context) GetListenerDefaultActionAuthenticateCognitoOutput {
	return o
}

func (o GetListenerDefaultActionAuthenticateCognitoOutput) AuthenticationRequestExtraParams() pulumi.MapOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateCognito) map[string]interface{} {
		return v.AuthenticationRequestExtraParams
	}).(pulumi.MapOutput)
}

func (o GetListenerDefaultActionAuthenticateCognitoOutput) OnUnauthenticatedRequest() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateCognito) string { return v.OnUnauthenticatedRequest }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionAuthenticateCognitoOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateCognito) string { return v.Scope }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionAuthenticateCognitoOutput) SessionCookieName() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateCognito) string { return v.SessionCookieName }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionAuthenticateCognitoOutput) SessionTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateCognito) int { return v.SessionTimeout }).(pulumi.IntOutput)
}

func (o GetListenerDefaultActionAuthenticateCognitoOutput) UserPoolArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateCognito) string { return v.UserPoolArn }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionAuthenticateCognitoOutput) UserPoolClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateCognito) string { return v.UserPoolClientId }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionAuthenticateCognitoOutput) UserPoolDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateCognito) string { return v.UserPoolDomain }).(pulumi.StringOutput)
}

type GetListenerDefaultActionAuthenticateCognitoArrayOutput struct{ *pulumi.OutputState }

func (GetListenerDefaultActionAuthenticateCognitoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerDefaultActionAuthenticateCognito)(nil)).Elem()
}

func (o GetListenerDefaultActionAuthenticateCognitoArrayOutput) ToGetListenerDefaultActionAuthenticateCognitoArrayOutput() GetListenerDefaultActionAuthenticateCognitoArrayOutput {
	return o
}

func (o GetListenerDefaultActionAuthenticateCognitoArrayOutput) ToGetListenerDefaultActionAuthenticateCognitoArrayOutputWithContext(ctx context.Context) GetListenerDefaultActionAuthenticateCognitoArrayOutput {
	return o
}

func (o GetListenerDefaultActionAuthenticateCognitoArrayOutput) Index(i pulumi.IntInput) GetListenerDefaultActionAuthenticateCognitoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenerDefaultActionAuthenticateCognito {
		return vs[0].([]GetListenerDefaultActionAuthenticateCognito)[vs[1].(int)]
	}).(GetListenerDefaultActionAuthenticateCognitoOutput)
}

type GetListenerDefaultActionAuthenticateOidc struct {
	AuthenticationRequestExtraParams map[string]interface{} `pulumi:"authenticationRequestExtraParams"`
	AuthorizationEndpoint            string                 `pulumi:"authorizationEndpoint"`
	ClientId                         string                 `pulumi:"clientId"`
	ClientSecret                     string                 `pulumi:"clientSecret"`
	Issuer                           string                 `pulumi:"issuer"`
	OnUnauthenticatedRequest         string                 `pulumi:"onUnauthenticatedRequest"`
	Scope                            string                 `pulumi:"scope"`
	SessionCookieName                string                 `pulumi:"sessionCookieName"`
	SessionTimeout                   int                    `pulumi:"sessionTimeout"`
	TokenEndpoint                    string                 `pulumi:"tokenEndpoint"`
	UserInfoEndpoint                 string                 `pulumi:"userInfoEndpoint"`
}

// GetListenerDefaultActionAuthenticateOidcInput is an input type that accepts GetListenerDefaultActionAuthenticateOidcArgs and GetListenerDefaultActionAuthenticateOidcOutput values.
// You can construct a concrete instance of `GetListenerDefaultActionAuthenticateOidcInput` via:
//
// 		 GetListenerDefaultActionAuthenticateOidcArgs{...}
//
type GetListenerDefaultActionAuthenticateOidcInput interface {
	pulumi.Input

	ToGetListenerDefaultActionAuthenticateOidcOutput() GetListenerDefaultActionAuthenticateOidcOutput
	ToGetListenerDefaultActionAuthenticateOidcOutputWithContext(context.Context) GetListenerDefaultActionAuthenticateOidcOutput
}

type GetListenerDefaultActionAuthenticateOidcArgs struct {
	AuthenticationRequestExtraParams pulumi.MapInput    `pulumi:"authenticationRequestExtraParams"`
	AuthorizationEndpoint            pulumi.StringInput `pulumi:"authorizationEndpoint"`
	ClientId                         pulumi.StringInput `pulumi:"clientId"`
	ClientSecret                     pulumi.StringInput `pulumi:"clientSecret"`
	Issuer                           pulumi.StringInput `pulumi:"issuer"`
	OnUnauthenticatedRequest         pulumi.StringInput `pulumi:"onUnauthenticatedRequest"`
	Scope                            pulumi.StringInput `pulumi:"scope"`
	SessionCookieName                pulumi.StringInput `pulumi:"sessionCookieName"`
	SessionTimeout                   pulumi.IntInput    `pulumi:"sessionTimeout"`
	TokenEndpoint                    pulumi.StringInput `pulumi:"tokenEndpoint"`
	UserInfoEndpoint                 pulumi.StringInput `pulumi:"userInfoEndpoint"`
}

func (GetListenerDefaultActionAuthenticateOidcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerDefaultActionAuthenticateOidc)(nil)).Elem()
}

func (i GetListenerDefaultActionAuthenticateOidcArgs) ToGetListenerDefaultActionAuthenticateOidcOutput() GetListenerDefaultActionAuthenticateOidcOutput {
	return i.ToGetListenerDefaultActionAuthenticateOidcOutputWithContext(context.Background())
}

func (i GetListenerDefaultActionAuthenticateOidcArgs) ToGetListenerDefaultActionAuthenticateOidcOutputWithContext(ctx context.Context) GetListenerDefaultActionAuthenticateOidcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerDefaultActionAuthenticateOidcOutput)
}

// GetListenerDefaultActionAuthenticateOidcArrayInput is an input type that accepts GetListenerDefaultActionAuthenticateOidcArray and GetListenerDefaultActionAuthenticateOidcArrayOutput values.
// You can construct a concrete instance of `GetListenerDefaultActionAuthenticateOidcArrayInput` via:
//
// 		 GetListenerDefaultActionAuthenticateOidcArray{ GetListenerDefaultActionAuthenticateOidcArgs{...} }
//
type GetListenerDefaultActionAuthenticateOidcArrayInput interface {
	pulumi.Input

	ToGetListenerDefaultActionAuthenticateOidcArrayOutput() GetListenerDefaultActionAuthenticateOidcArrayOutput
	ToGetListenerDefaultActionAuthenticateOidcArrayOutputWithContext(context.Context) GetListenerDefaultActionAuthenticateOidcArrayOutput
}

type GetListenerDefaultActionAuthenticateOidcArray []GetListenerDefaultActionAuthenticateOidcInput

func (GetListenerDefaultActionAuthenticateOidcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerDefaultActionAuthenticateOidc)(nil)).Elem()
}

func (i GetListenerDefaultActionAuthenticateOidcArray) ToGetListenerDefaultActionAuthenticateOidcArrayOutput() GetListenerDefaultActionAuthenticateOidcArrayOutput {
	return i.ToGetListenerDefaultActionAuthenticateOidcArrayOutputWithContext(context.Background())
}

func (i GetListenerDefaultActionAuthenticateOidcArray) ToGetListenerDefaultActionAuthenticateOidcArrayOutputWithContext(ctx context.Context) GetListenerDefaultActionAuthenticateOidcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerDefaultActionAuthenticateOidcArrayOutput)
}

type GetListenerDefaultActionAuthenticateOidcOutput struct{ *pulumi.OutputState }

func (GetListenerDefaultActionAuthenticateOidcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerDefaultActionAuthenticateOidc)(nil)).Elem()
}

func (o GetListenerDefaultActionAuthenticateOidcOutput) ToGetListenerDefaultActionAuthenticateOidcOutput() GetListenerDefaultActionAuthenticateOidcOutput {
	return o
}

func (o GetListenerDefaultActionAuthenticateOidcOutput) ToGetListenerDefaultActionAuthenticateOidcOutputWithContext(ctx context.Context) GetListenerDefaultActionAuthenticateOidcOutput {
	return o
}

func (o GetListenerDefaultActionAuthenticateOidcOutput) AuthenticationRequestExtraParams() pulumi.MapOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateOidc) map[string]interface{} {
		return v.AuthenticationRequestExtraParams
	}).(pulumi.MapOutput)
}

func (o GetListenerDefaultActionAuthenticateOidcOutput) AuthorizationEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateOidc) string { return v.AuthorizationEndpoint }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionAuthenticateOidcOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateOidc) string { return v.ClientId }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionAuthenticateOidcOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateOidc) string { return v.ClientSecret }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionAuthenticateOidcOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateOidc) string { return v.Issuer }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionAuthenticateOidcOutput) OnUnauthenticatedRequest() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateOidc) string { return v.OnUnauthenticatedRequest }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionAuthenticateOidcOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateOidc) string { return v.Scope }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionAuthenticateOidcOutput) SessionCookieName() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateOidc) string { return v.SessionCookieName }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionAuthenticateOidcOutput) SessionTimeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateOidc) int { return v.SessionTimeout }).(pulumi.IntOutput)
}

func (o GetListenerDefaultActionAuthenticateOidcOutput) TokenEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateOidc) string { return v.TokenEndpoint }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionAuthenticateOidcOutput) UserInfoEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionAuthenticateOidc) string { return v.UserInfoEndpoint }).(pulumi.StringOutput)
}

type GetListenerDefaultActionAuthenticateOidcArrayOutput struct{ *pulumi.OutputState }

func (GetListenerDefaultActionAuthenticateOidcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerDefaultActionAuthenticateOidc)(nil)).Elem()
}

func (o GetListenerDefaultActionAuthenticateOidcArrayOutput) ToGetListenerDefaultActionAuthenticateOidcArrayOutput() GetListenerDefaultActionAuthenticateOidcArrayOutput {
	return o
}

func (o GetListenerDefaultActionAuthenticateOidcArrayOutput) ToGetListenerDefaultActionAuthenticateOidcArrayOutputWithContext(ctx context.Context) GetListenerDefaultActionAuthenticateOidcArrayOutput {
	return o
}

func (o GetListenerDefaultActionAuthenticateOidcArrayOutput) Index(i pulumi.IntInput) GetListenerDefaultActionAuthenticateOidcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenerDefaultActionAuthenticateOidc {
		return vs[0].([]GetListenerDefaultActionAuthenticateOidc)[vs[1].(int)]
	}).(GetListenerDefaultActionAuthenticateOidcOutput)
}

type GetListenerDefaultActionFixedResponse struct {
	ContentType string `pulumi:"contentType"`
	MessageBody string `pulumi:"messageBody"`
	StatusCode  string `pulumi:"statusCode"`
}

// GetListenerDefaultActionFixedResponseInput is an input type that accepts GetListenerDefaultActionFixedResponseArgs and GetListenerDefaultActionFixedResponseOutput values.
// You can construct a concrete instance of `GetListenerDefaultActionFixedResponseInput` via:
//
// 		 GetListenerDefaultActionFixedResponseArgs{...}
//
type GetListenerDefaultActionFixedResponseInput interface {
	pulumi.Input

	ToGetListenerDefaultActionFixedResponseOutput() GetListenerDefaultActionFixedResponseOutput
	ToGetListenerDefaultActionFixedResponseOutputWithContext(context.Context) GetListenerDefaultActionFixedResponseOutput
}

type GetListenerDefaultActionFixedResponseArgs struct {
	ContentType pulumi.StringInput `pulumi:"contentType"`
	MessageBody pulumi.StringInput `pulumi:"messageBody"`
	StatusCode  pulumi.StringInput `pulumi:"statusCode"`
}

func (GetListenerDefaultActionFixedResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerDefaultActionFixedResponse)(nil)).Elem()
}

func (i GetListenerDefaultActionFixedResponseArgs) ToGetListenerDefaultActionFixedResponseOutput() GetListenerDefaultActionFixedResponseOutput {
	return i.ToGetListenerDefaultActionFixedResponseOutputWithContext(context.Background())
}

func (i GetListenerDefaultActionFixedResponseArgs) ToGetListenerDefaultActionFixedResponseOutputWithContext(ctx context.Context) GetListenerDefaultActionFixedResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerDefaultActionFixedResponseOutput)
}

// GetListenerDefaultActionFixedResponseArrayInput is an input type that accepts GetListenerDefaultActionFixedResponseArray and GetListenerDefaultActionFixedResponseArrayOutput values.
// You can construct a concrete instance of `GetListenerDefaultActionFixedResponseArrayInput` via:
//
// 		 GetListenerDefaultActionFixedResponseArray{ GetListenerDefaultActionFixedResponseArgs{...} }
//
type GetListenerDefaultActionFixedResponseArrayInput interface {
	pulumi.Input

	ToGetListenerDefaultActionFixedResponseArrayOutput() GetListenerDefaultActionFixedResponseArrayOutput
	ToGetListenerDefaultActionFixedResponseArrayOutputWithContext(context.Context) GetListenerDefaultActionFixedResponseArrayOutput
}

type GetListenerDefaultActionFixedResponseArray []GetListenerDefaultActionFixedResponseInput

func (GetListenerDefaultActionFixedResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerDefaultActionFixedResponse)(nil)).Elem()
}

func (i GetListenerDefaultActionFixedResponseArray) ToGetListenerDefaultActionFixedResponseArrayOutput() GetListenerDefaultActionFixedResponseArrayOutput {
	return i.ToGetListenerDefaultActionFixedResponseArrayOutputWithContext(context.Background())
}

func (i GetListenerDefaultActionFixedResponseArray) ToGetListenerDefaultActionFixedResponseArrayOutputWithContext(ctx context.Context) GetListenerDefaultActionFixedResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerDefaultActionFixedResponseArrayOutput)
}

type GetListenerDefaultActionFixedResponseOutput struct{ *pulumi.OutputState }

func (GetListenerDefaultActionFixedResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerDefaultActionFixedResponse)(nil)).Elem()
}

func (o GetListenerDefaultActionFixedResponseOutput) ToGetListenerDefaultActionFixedResponseOutput() GetListenerDefaultActionFixedResponseOutput {
	return o
}

func (o GetListenerDefaultActionFixedResponseOutput) ToGetListenerDefaultActionFixedResponseOutputWithContext(ctx context.Context) GetListenerDefaultActionFixedResponseOutput {
	return o
}

func (o GetListenerDefaultActionFixedResponseOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionFixedResponse) string { return v.ContentType }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionFixedResponseOutput) MessageBody() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionFixedResponse) string { return v.MessageBody }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionFixedResponseOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionFixedResponse) string { return v.StatusCode }).(pulumi.StringOutput)
}

type GetListenerDefaultActionFixedResponseArrayOutput struct{ *pulumi.OutputState }

func (GetListenerDefaultActionFixedResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerDefaultActionFixedResponse)(nil)).Elem()
}

func (o GetListenerDefaultActionFixedResponseArrayOutput) ToGetListenerDefaultActionFixedResponseArrayOutput() GetListenerDefaultActionFixedResponseArrayOutput {
	return o
}

func (o GetListenerDefaultActionFixedResponseArrayOutput) ToGetListenerDefaultActionFixedResponseArrayOutputWithContext(ctx context.Context) GetListenerDefaultActionFixedResponseArrayOutput {
	return o
}

func (o GetListenerDefaultActionFixedResponseArrayOutput) Index(i pulumi.IntInput) GetListenerDefaultActionFixedResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenerDefaultActionFixedResponse {
		return vs[0].([]GetListenerDefaultActionFixedResponse)[vs[1].(int)]
	}).(GetListenerDefaultActionFixedResponseOutput)
}

type GetListenerDefaultActionRedirect struct {
	Host string `pulumi:"host"`
	Path string `pulumi:"path"`
	// The port of the listener. Required if `arn` is not set.
	Port       string `pulumi:"port"`
	Protocol   string `pulumi:"protocol"`
	Query      string `pulumi:"query"`
	StatusCode string `pulumi:"statusCode"`
}

// GetListenerDefaultActionRedirectInput is an input type that accepts GetListenerDefaultActionRedirectArgs and GetListenerDefaultActionRedirectOutput values.
// You can construct a concrete instance of `GetListenerDefaultActionRedirectInput` via:
//
// 		 GetListenerDefaultActionRedirectArgs{...}
//
type GetListenerDefaultActionRedirectInput interface {
	pulumi.Input

	ToGetListenerDefaultActionRedirectOutput() GetListenerDefaultActionRedirectOutput
	ToGetListenerDefaultActionRedirectOutputWithContext(context.Context) GetListenerDefaultActionRedirectOutput
}

type GetListenerDefaultActionRedirectArgs struct {
	Host pulumi.StringInput `pulumi:"host"`
	Path pulumi.StringInput `pulumi:"path"`
	// The port of the listener. Required if `arn` is not set.
	Port       pulumi.StringInput `pulumi:"port"`
	Protocol   pulumi.StringInput `pulumi:"protocol"`
	Query      pulumi.StringInput `pulumi:"query"`
	StatusCode pulumi.StringInput `pulumi:"statusCode"`
}

func (GetListenerDefaultActionRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerDefaultActionRedirect)(nil)).Elem()
}

func (i GetListenerDefaultActionRedirectArgs) ToGetListenerDefaultActionRedirectOutput() GetListenerDefaultActionRedirectOutput {
	return i.ToGetListenerDefaultActionRedirectOutputWithContext(context.Background())
}

func (i GetListenerDefaultActionRedirectArgs) ToGetListenerDefaultActionRedirectOutputWithContext(ctx context.Context) GetListenerDefaultActionRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerDefaultActionRedirectOutput)
}

// GetListenerDefaultActionRedirectArrayInput is an input type that accepts GetListenerDefaultActionRedirectArray and GetListenerDefaultActionRedirectArrayOutput values.
// You can construct a concrete instance of `GetListenerDefaultActionRedirectArrayInput` via:
//
// 		 GetListenerDefaultActionRedirectArray{ GetListenerDefaultActionRedirectArgs{...} }
//
type GetListenerDefaultActionRedirectArrayInput interface {
	pulumi.Input

	ToGetListenerDefaultActionRedirectArrayOutput() GetListenerDefaultActionRedirectArrayOutput
	ToGetListenerDefaultActionRedirectArrayOutputWithContext(context.Context) GetListenerDefaultActionRedirectArrayOutput
}

type GetListenerDefaultActionRedirectArray []GetListenerDefaultActionRedirectInput

func (GetListenerDefaultActionRedirectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerDefaultActionRedirect)(nil)).Elem()
}

func (i GetListenerDefaultActionRedirectArray) ToGetListenerDefaultActionRedirectArrayOutput() GetListenerDefaultActionRedirectArrayOutput {
	return i.ToGetListenerDefaultActionRedirectArrayOutputWithContext(context.Background())
}

func (i GetListenerDefaultActionRedirectArray) ToGetListenerDefaultActionRedirectArrayOutputWithContext(ctx context.Context) GetListenerDefaultActionRedirectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetListenerDefaultActionRedirectArrayOutput)
}

type GetListenerDefaultActionRedirectOutput struct{ *pulumi.OutputState }

func (GetListenerDefaultActionRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetListenerDefaultActionRedirect)(nil)).Elem()
}

func (o GetListenerDefaultActionRedirectOutput) ToGetListenerDefaultActionRedirectOutput() GetListenerDefaultActionRedirectOutput {
	return o
}

func (o GetListenerDefaultActionRedirectOutput) ToGetListenerDefaultActionRedirectOutputWithContext(ctx context.Context) GetListenerDefaultActionRedirectOutput {
	return o
}

func (o GetListenerDefaultActionRedirectOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionRedirect) string { return v.Host }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionRedirectOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionRedirect) string { return v.Path }).(pulumi.StringOutput)
}

// The port of the listener. Required if `arn` is not set.
func (o GetListenerDefaultActionRedirectOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionRedirect) string { return v.Port }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionRedirectOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionRedirect) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionRedirectOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionRedirect) string { return v.Query }).(pulumi.StringOutput)
}

func (o GetListenerDefaultActionRedirectOutput) StatusCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetListenerDefaultActionRedirect) string { return v.StatusCode }).(pulumi.StringOutput)
}

type GetListenerDefaultActionRedirectArrayOutput struct{ *pulumi.OutputState }

func (GetListenerDefaultActionRedirectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetListenerDefaultActionRedirect)(nil)).Elem()
}

func (o GetListenerDefaultActionRedirectArrayOutput) ToGetListenerDefaultActionRedirectArrayOutput() GetListenerDefaultActionRedirectArrayOutput {
	return o
}

func (o GetListenerDefaultActionRedirectArrayOutput) ToGetListenerDefaultActionRedirectArrayOutputWithContext(ctx context.Context) GetListenerDefaultActionRedirectArrayOutput {
	return o
}

func (o GetListenerDefaultActionRedirectArrayOutput) Index(i pulumi.IntInput) GetListenerDefaultActionRedirectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetListenerDefaultActionRedirect {
		return vs[0].([]GetListenerDefaultActionRedirect)[vs[1].(int)]
	}).(GetListenerDefaultActionRedirectOutput)
}

type GetLoadBalancerAccessLogs struct {
	Bucket  string `pulumi:"bucket"`
	Enabled bool   `pulumi:"enabled"`
	Prefix  string `pulumi:"prefix"`
}

// GetLoadBalancerAccessLogsInput is an input type that accepts GetLoadBalancerAccessLogsArgs and GetLoadBalancerAccessLogsOutput values.
// You can construct a concrete instance of `GetLoadBalancerAccessLogsInput` via:
//
// 		 GetLoadBalancerAccessLogsArgs{...}
//
type GetLoadBalancerAccessLogsInput interface {
	pulumi.Input

	ToGetLoadBalancerAccessLogsOutput() GetLoadBalancerAccessLogsOutput
	ToGetLoadBalancerAccessLogsOutputWithContext(context.Context) GetLoadBalancerAccessLogsOutput
}

type GetLoadBalancerAccessLogsArgs struct {
	Bucket  pulumi.StringInput `pulumi:"bucket"`
	Enabled pulumi.BoolInput   `pulumi:"enabled"`
	Prefix  pulumi.StringInput `pulumi:"prefix"`
}

func (GetLoadBalancerAccessLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerAccessLogs)(nil)).Elem()
}

func (i GetLoadBalancerAccessLogsArgs) ToGetLoadBalancerAccessLogsOutput() GetLoadBalancerAccessLogsOutput {
	return i.ToGetLoadBalancerAccessLogsOutputWithContext(context.Background())
}

func (i GetLoadBalancerAccessLogsArgs) ToGetLoadBalancerAccessLogsOutputWithContext(ctx context.Context) GetLoadBalancerAccessLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerAccessLogsOutput)
}

type GetLoadBalancerAccessLogsOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerAccessLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerAccessLogs)(nil)).Elem()
}

func (o GetLoadBalancerAccessLogsOutput) ToGetLoadBalancerAccessLogsOutput() GetLoadBalancerAccessLogsOutput {
	return o
}

func (o GetLoadBalancerAccessLogsOutput) ToGetLoadBalancerAccessLogsOutputWithContext(ctx context.Context) GetLoadBalancerAccessLogsOutput {
	return o
}

func (o GetLoadBalancerAccessLogsOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerAccessLogs) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o GetLoadBalancerAccessLogsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLoadBalancerAccessLogs) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetLoadBalancerAccessLogsOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerAccessLogs) string { return v.Prefix }).(pulumi.StringOutput)
}

type GetLoadBalancerSubnetMapping struct {
	AllocationId *string `pulumi:"allocationId"`
	SubnetId     string  `pulumi:"subnetId"`
}

// GetLoadBalancerSubnetMappingInput is an input type that accepts GetLoadBalancerSubnetMappingArgs and GetLoadBalancerSubnetMappingOutput values.
// You can construct a concrete instance of `GetLoadBalancerSubnetMappingInput` via:
//
// 		 GetLoadBalancerSubnetMappingArgs{...}
//
type GetLoadBalancerSubnetMappingInput interface {
	pulumi.Input

	ToGetLoadBalancerSubnetMappingOutput() GetLoadBalancerSubnetMappingOutput
	ToGetLoadBalancerSubnetMappingOutputWithContext(context.Context) GetLoadBalancerSubnetMappingOutput
}

type GetLoadBalancerSubnetMappingArgs struct {
	AllocationId pulumi.StringPtrInput `pulumi:"allocationId"`
	SubnetId     pulumi.StringInput    `pulumi:"subnetId"`
}

func (GetLoadBalancerSubnetMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerSubnetMapping)(nil)).Elem()
}

func (i GetLoadBalancerSubnetMappingArgs) ToGetLoadBalancerSubnetMappingOutput() GetLoadBalancerSubnetMappingOutput {
	return i.ToGetLoadBalancerSubnetMappingOutputWithContext(context.Background())
}

func (i GetLoadBalancerSubnetMappingArgs) ToGetLoadBalancerSubnetMappingOutputWithContext(ctx context.Context) GetLoadBalancerSubnetMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerSubnetMappingOutput)
}

// GetLoadBalancerSubnetMappingArrayInput is an input type that accepts GetLoadBalancerSubnetMappingArray and GetLoadBalancerSubnetMappingArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancerSubnetMappingArrayInput` via:
//
// 		 GetLoadBalancerSubnetMappingArray{ GetLoadBalancerSubnetMappingArgs{...} }
//
type GetLoadBalancerSubnetMappingArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerSubnetMappingArrayOutput() GetLoadBalancerSubnetMappingArrayOutput
	ToGetLoadBalancerSubnetMappingArrayOutputWithContext(context.Context) GetLoadBalancerSubnetMappingArrayOutput
}

type GetLoadBalancerSubnetMappingArray []GetLoadBalancerSubnetMappingInput

func (GetLoadBalancerSubnetMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerSubnetMapping)(nil)).Elem()
}

func (i GetLoadBalancerSubnetMappingArray) ToGetLoadBalancerSubnetMappingArrayOutput() GetLoadBalancerSubnetMappingArrayOutput {
	return i.ToGetLoadBalancerSubnetMappingArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerSubnetMappingArray) ToGetLoadBalancerSubnetMappingArrayOutputWithContext(ctx context.Context) GetLoadBalancerSubnetMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerSubnetMappingArrayOutput)
}

type GetLoadBalancerSubnetMappingOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerSubnetMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerSubnetMapping)(nil)).Elem()
}

func (o GetLoadBalancerSubnetMappingOutput) ToGetLoadBalancerSubnetMappingOutput() GetLoadBalancerSubnetMappingOutput {
	return o
}

func (o GetLoadBalancerSubnetMappingOutput) ToGetLoadBalancerSubnetMappingOutputWithContext(ctx context.Context) GetLoadBalancerSubnetMappingOutput {
	return o
}

func (o GetLoadBalancerSubnetMappingOutput) AllocationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLoadBalancerSubnetMapping) *string { return v.AllocationId }).(pulumi.StringPtrOutput)
}

func (o GetLoadBalancerSubnetMappingOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerSubnetMapping) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetLoadBalancerSubnetMappingArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerSubnetMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerSubnetMapping)(nil)).Elem()
}

func (o GetLoadBalancerSubnetMappingArrayOutput) ToGetLoadBalancerSubnetMappingArrayOutput() GetLoadBalancerSubnetMappingArrayOutput {
	return o
}

func (o GetLoadBalancerSubnetMappingArrayOutput) ToGetLoadBalancerSubnetMappingArrayOutputWithContext(ctx context.Context) GetLoadBalancerSubnetMappingArrayOutput {
	return o
}

func (o GetLoadBalancerSubnetMappingArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerSubnetMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancerSubnetMapping {
		return vs[0].([]GetLoadBalancerSubnetMapping)[vs[1].(int)]
	}).(GetLoadBalancerSubnetMappingOutput)
}

type GetTargetGroupHealthCheck struct {
	Enabled            bool   `pulumi:"enabled"`
	HealthyThreshold   int    `pulumi:"healthyThreshold"`
	Interval           int    `pulumi:"interval"`
	Matcher            string `pulumi:"matcher"`
	Path               string `pulumi:"path"`
	Port               string `pulumi:"port"`
	Protocol           string `pulumi:"protocol"`
	Timeout            int    `pulumi:"timeout"`
	UnhealthyThreshold int    `pulumi:"unhealthyThreshold"`
}

// GetTargetGroupHealthCheckInput is an input type that accepts GetTargetGroupHealthCheckArgs and GetTargetGroupHealthCheckOutput values.
// You can construct a concrete instance of `GetTargetGroupHealthCheckInput` via:
//
// 		 GetTargetGroupHealthCheckArgs{...}
//
type GetTargetGroupHealthCheckInput interface {
	pulumi.Input

	ToGetTargetGroupHealthCheckOutput() GetTargetGroupHealthCheckOutput
	ToGetTargetGroupHealthCheckOutputWithContext(context.Context) GetTargetGroupHealthCheckOutput
}

type GetTargetGroupHealthCheckArgs struct {
	Enabled            pulumi.BoolInput   `pulumi:"enabled"`
	HealthyThreshold   pulumi.IntInput    `pulumi:"healthyThreshold"`
	Interval           pulumi.IntInput    `pulumi:"interval"`
	Matcher            pulumi.StringInput `pulumi:"matcher"`
	Path               pulumi.StringInput `pulumi:"path"`
	Port               pulumi.StringInput `pulumi:"port"`
	Protocol           pulumi.StringInput `pulumi:"protocol"`
	Timeout            pulumi.IntInput    `pulumi:"timeout"`
	UnhealthyThreshold pulumi.IntInput    `pulumi:"unhealthyThreshold"`
}

func (GetTargetGroupHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetGroupHealthCheck)(nil)).Elem()
}

func (i GetTargetGroupHealthCheckArgs) ToGetTargetGroupHealthCheckOutput() GetTargetGroupHealthCheckOutput {
	return i.ToGetTargetGroupHealthCheckOutputWithContext(context.Background())
}

func (i GetTargetGroupHealthCheckArgs) ToGetTargetGroupHealthCheckOutputWithContext(ctx context.Context) GetTargetGroupHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetGroupHealthCheckOutput)
}

type GetTargetGroupHealthCheckOutput struct{ *pulumi.OutputState }

func (GetTargetGroupHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetGroupHealthCheck)(nil)).Elem()
}

func (o GetTargetGroupHealthCheckOutput) ToGetTargetGroupHealthCheckOutput() GetTargetGroupHealthCheckOutput {
	return o
}

func (o GetTargetGroupHealthCheckOutput) ToGetTargetGroupHealthCheckOutputWithContext(ctx context.Context) GetTargetGroupHealthCheckOutput {
	return o
}

func (o GetTargetGroupHealthCheckOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTargetGroupHealthCheck) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetTargetGroupHealthCheckOutput) HealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetTargetGroupHealthCheck) int { return v.HealthyThreshold }).(pulumi.IntOutput)
}

func (o GetTargetGroupHealthCheckOutput) Interval() pulumi.IntOutput {
	return o.ApplyT(func(v GetTargetGroupHealthCheck) int { return v.Interval }).(pulumi.IntOutput)
}

func (o GetTargetGroupHealthCheckOutput) Matcher() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetGroupHealthCheck) string { return v.Matcher }).(pulumi.StringOutput)
}

func (o GetTargetGroupHealthCheckOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetGroupHealthCheck) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetTargetGroupHealthCheckOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetGroupHealthCheck) string { return v.Port }).(pulumi.StringOutput)
}

func (o GetTargetGroupHealthCheckOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetGroupHealthCheck) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetTargetGroupHealthCheckOutput) Timeout() pulumi.IntOutput {
	return o.ApplyT(func(v GetTargetGroupHealthCheck) int { return v.Timeout }).(pulumi.IntOutput)
}

func (o GetTargetGroupHealthCheckOutput) UnhealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetTargetGroupHealthCheck) int { return v.UnhealthyThreshold }).(pulumi.IntOutput)
}

type GetTargetGroupStickiness struct {
	CookieDuration int    `pulumi:"cookieDuration"`
	Enabled        bool   `pulumi:"enabled"`
	Type           string `pulumi:"type"`
}

// GetTargetGroupStickinessInput is an input type that accepts GetTargetGroupStickinessArgs and GetTargetGroupStickinessOutput values.
// You can construct a concrete instance of `GetTargetGroupStickinessInput` via:
//
// 		 GetTargetGroupStickinessArgs{...}
//
type GetTargetGroupStickinessInput interface {
	pulumi.Input

	ToGetTargetGroupStickinessOutput() GetTargetGroupStickinessOutput
	ToGetTargetGroupStickinessOutputWithContext(context.Context) GetTargetGroupStickinessOutput
}

type GetTargetGroupStickinessArgs struct {
	CookieDuration pulumi.IntInput    `pulumi:"cookieDuration"`
	Enabled        pulumi.BoolInput   `pulumi:"enabled"`
	Type           pulumi.StringInput `pulumi:"type"`
}

func (GetTargetGroupStickinessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetGroupStickiness)(nil)).Elem()
}

func (i GetTargetGroupStickinessArgs) ToGetTargetGroupStickinessOutput() GetTargetGroupStickinessOutput {
	return i.ToGetTargetGroupStickinessOutputWithContext(context.Background())
}

func (i GetTargetGroupStickinessArgs) ToGetTargetGroupStickinessOutputWithContext(ctx context.Context) GetTargetGroupStickinessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTargetGroupStickinessOutput)
}

type GetTargetGroupStickinessOutput struct{ *pulumi.OutputState }

func (GetTargetGroupStickinessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTargetGroupStickiness)(nil)).Elem()
}

func (o GetTargetGroupStickinessOutput) ToGetTargetGroupStickinessOutput() GetTargetGroupStickinessOutput {
	return o
}

func (o GetTargetGroupStickinessOutput) ToGetTargetGroupStickinessOutputWithContext(ctx context.Context) GetTargetGroupStickinessOutput {
	return o
}

func (o GetTargetGroupStickinessOutput) CookieDuration() pulumi.IntOutput {
	return o.ApplyT(func(v GetTargetGroupStickiness) int { return v.CookieDuration }).(pulumi.IntOutput)
}

func (o GetTargetGroupStickinessOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetTargetGroupStickiness) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o GetTargetGroupStickinessOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetTargetGroupStickiness) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(ListenerDefaultActionOutput{})
	pulumi.RegisterOutputType(ListenerDefaultActionArrayOutput{})
	pulumi.RegisterOutputType(ListenerDefaultActionAuthenticateCognitoOutput{})
	pulumi.RegisterOutputType(ListenerDefaultActionAuthenticateCognitoPtrOutput{})
	pulumi.RegisterOutputType(ListenerDefaultActionAuthenticateOidcOutput{})
	pulumi.RegisterOutputType(ListenerDefaultActionAuthenticateOidcPtrOutput{})
	pulumi.RegisterOutputType(ListenerDefaultActionFixedResponseOutput{})
	pulumi.RegisterOutputType(ListenerDefaultActionFixedResponsePtrOutput{})
	pulumi.RegisterOutputType(ListenerDefaultActionRedirectOutput{})
	pulumi.RegisterOutputType(ListenerDefaultActionRedirectPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionArrayOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionAuthenticateCognitoOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionAuthenticateCognitoPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionAuthenticateOidcOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionAuthenticateOidcPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionFixedResponseOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionFixedResponsePtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionRedirectOutput{})
	pulumi.RegisterOutputType(ListenerRuleActionRedirectPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionArrayOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionHostHeaderOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionHostHeaderPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionHttpHeaderOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionHttpHeaderPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionHttpRequestMethodOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionHttpRequestMethodPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionPathPatternOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionPathPatternPtrOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionQueryStringOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionQueryStringArrayOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionSourceIpOutput{})
	pulumi.RegisterOutputType(ListenerRuleConditionSourceIpPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerAccessLogsOutput{})
	pulumi.RegisterOutputType(LoadBalancerAccessLogsPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerSubnetMappingOutput{})
	pulumi.RegisterOutputType(LoadBalancerSubnetMappingArrayOutput{})
	pulumi.RegisterOutputType(TargetGroupHealthCheckOutput{})
	pulumi.RegisterOutputType(TargetGroupHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(TargetGroupStickinessOutput{})
	pulumi.RegisterOutputType(TargetGroupStickinessPtrOutput{})
	pulumi.RegisterOutputType(GetListenerDefaultActionOutput{})
	pulumi.RegisterOutputType(GetListenerDefaultActionArrayOutput{})
	pulumi.RegisterOutputType(GetListenerDefaultActionAuthenticateCognitoOutput{})
	pulumi.RegisterOutputType(GetListenerDefaultActionAuthenticateCognitoArrayOutput{})
	pulumi.RegisterOutputType(GetListenerDefaultActionAuthenticateOidcOutput{})
	pulumi.RegisterOutputType(GetListenerDefaultActionAuthenticateOidcArrayOutput{})
	pulumi.RegisterOutputType(GetListenerDefaultActionFixedResponseOutput{})
	pulumi.RegisterOutputType(GetListenerDefaultActionFixedResponseArrayOutput{})
	pulumi.RegisterOutputType(GetListenerDefaultActionRedirectOutput{})
	pulumi.RegisterOutputType(GetListenerDefaultActionRedirectArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerAccessLogsOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerSubnetMappingOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerSubnetMappingArrayOutput{})
	pulumi.RegisterOutputType(GetTargetGroupHealthCheckOutput{})
	pulumi.RegisterOutputType(GetTargetGroupStickinessOutput{})
}
