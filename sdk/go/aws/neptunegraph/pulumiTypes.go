// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package neptunegraph

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GraphTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// GraphTimeoutsInput is an input type that accepts GraphTimeoutsArgs and GraphTimeoutsOutput values.
// You can construct a concrete instance of `GraphTimeoutsInput` via:
//
//	GraphTimeoutsArgs{...}
type GraphTimeoutsInput interface {
	pulumi.Input

	ToGraphTimeoutsOutput() GraphTimeoutsOutput
	ToGraphTimeoutsOutputWithContext(context.Context) GraphTimeoutsOutput
}

type GraphTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (GraphTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphTimeouts)(nil)).Elem()
}

func (i GraphTimeoutsArgs) ToGraphTimeoutsOutput() GraphTimeoutsOutput {
	return i.ToGraphTimeoutsOutputWithContext(context.Background())
}

func (i GraphTimeoutsArgs) ToGraphTimeoutsOutputWithContext(ctx context.Context) GraphTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphTimeoutsOutput)
}

func (i GraphTimeoutsArgs) ToGraphTimeoutsPtrOutput() GraphTimeoutsPtrOutput {
	return i.ToGraphTimeoutsPtrOutputWithContext(context.Background())
}

func (i GraphTimeoutsArgs) ToGraphTimeoutsPtrOutputWithContext(ctx context.Context) GraphTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphTimeoutsOutput).ToGraphTimeoutsPtrOutputWithContext(ctx)
}

// GraphTimeoutsPtrInput is an input type that accepts GraphTimeoutsArgs, GraphTimeoutsPtr and GraphTimeoutsPtrOutput values.
// You can construct a concrete instance of `GraphTimeoutsPtrInput` via:
//
//	        GraphTimeoutsArgs{...}
//
//	or:
//
//	        nil
type GraphTimeoutsPtrInput interface {
	pulumi.Input

	ToGraphTimeoutsPtrOutput() GraphTimeoutsPtrOutput
	ToGraphTimeoutsPtrOutputWithContext(context.Context) GraphTimeoutsPtrOutput
}

type graphTimeoutsPtrType GraphTimeoutsArgs

func GraphTimeoutsPtr(v *GraphTimeoutsArgs) GraphTimeoutsPtrInput {
	return (*graphTimeoutsPtrType)(v)
}

func (*graphTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphTimeouts)(nil)).Elem()
}

func (i *graphTimeoutsPtrType) ToGraphTimeoutsPtrOutput() GraphTimeoutsPtrOutput {
	return i.ToGraphTimeoutsPtrOutputWithContext(context.Background())
}

func (i *graphTimeoutsPtrType) ToGraphTimeoutsPtrOutputWithContext(ctx context.Context) GraphTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphTimeoutsPtrOutput)
}

type GraphTimeoutsOutput struct{ *pulumi.OutputState }

func (GraphTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphTimeouts)(nil)).Elem()
}

func (o GraphTimeoutsOutput) ToGraphTimeoutsOutput() GraphTimeoutsOutput {
	return o
}

func (o GraphTimeoutsOutput) ToGraphTimeoutsOutputWithContext(ctx context.Context) GraphTimeoutsOutput {
	return o
}

func (o GraphTimeoutsOutput) ToGraphTimeoutsPtrOutput() GraphTimeoutsPtrOutput {
	return o.ToGraphTimeoutsPtrOutputWithContext(context.Background())
}

func (o GraphTimeoutsOutput) ToGraphTimeoutsPtrOutputWithContext(ctx context.Context) GraphTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GraphTimeouts) *GraphTimeouts {
		return &v
	}).(GraphTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o GraphTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o GraphTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o GraphTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type GraphTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (GraphTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphTimeouts)(nil)).Elem()
}

func (o GraphTimeoutsPtrOutput) ToGraphTimeoutsPtrOutput() GraphTimeoutsPtrOutput {
	return o
}

func (o GraphTimeoutsPtrOutput) ToGraphTimeoutsPtrOutputWithContext(ctx context.Context) GraphTimeoutsPtrOutput {
	return o
}

func (o GraphTimeoutsPtrOutput) Elem() GraphTimeoutsOutput {
	return o.ApplyT(func(v *GraphTimeouts) GraphTimeouts {
		if v != nil {
			return *v
		}
		var ret GraphTimeouts
		return ret
	}).(GraphTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o GraphTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o GraphTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o GraphTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type GraphVectorSearchConfiguration struct {
	// Specifies the number of dimensions for vector embeddings.  Value must be between 1 and 65,535.
	VectorSearchDimension *int `pulumi:"vectorSearchDimension"`
}

// GraphVectorSearchConfigurationInput is an input type that accepts GraphVectorSearchConfigurationArgs and GraphVectorSearchConfigurationOutput values.
// You can construct a concrete instance of `GraphVectorSearchConfigurationInput` via:
//
//	GraphVectorSearchConfigurationArgs{...}
type GraphVectorSearchConfigurationInput interface {
	pulumi.Input

	ToGraphVectorSearchConfigurationOutput() GraphVectorSearchConfigurationOutput
	ToGraphVectorSearchConfigurationOutputWithContext(context.Context) GraphVectorSearchConfigurationOutput
}

type GraphVectorSearchConfigurationArgs struct {
	// Specifies the number of dimensions for vector embeddings.  Value must be between 1 and 65,535.
	VectorSearchDimension pulumi.IntPtrInput `pulumi:"vectorSearchDimension"`
}

func (GraphVectorSearchConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphVectorSearchConfiguration)(nil)).Elem()
}

func (i GraphVectorSearchConfigurationArgs) ToGraphVectorSearchConfigurationOutput() GraphVectorSearchConfigurationOutput {
	return i.ToGraphVectorSearchConfigurationOutputWithContext(context.Background())
}

func (i GraphVectorSearchConfigurationArgs) ToGraphVectorSearchConfigurationOutputWithContext(ctx context.Context) GraphVectorSearchConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphVectorSearchConfigurationOutput)
}

func (i GraphVectorSearchConfigurationArgs) ToGraphVectorSearchConfigurationPtrOutput() GraphVectorSearchConfigurationPtrOutput {
	return i.ToGraphVectorSearchConfigurationPtrOutputWithContext(context.Background())
}

func (i GraphVectorSearchConfigurationArgs) ToGraphVectorSearchConfigurationPtrOutputWithContext(ctx context.Context) GraphVectorSearchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphVectorSearchConfigurationOutput).ToGraphVectorSearchConfigurationPtrOutputWithContext(ctx)
}

// GraphVectorSearchConfigurationPtrInput is an input type that accepts GraphVectorSearchConfigurationArgs, GraphVectorSearchConfigurationPtr and GraphVectorSearchConfigurationPtrOutput values.
// You can construct a concrete instance of `GraphVectorSearchConfigurationPtrInput` via:
//
//	        GraphVectorSearchConfigurationArgs{...}
//
//	or:
//
//	        nil
type GraphVectorSearchConfigurationPtrInput interface {
	pulumi.Input

	ToGraphVectorSearchConfigurationPtrOutput() GraphVectorSearchConfigurationPtrOutput
	ToGraphVectorSearchConfigurationPtrOutputWithContext(context.Context) GraphVectorSearchConfigurationPtrOutput
}

type graphVectorSearchConfigurationPtrType GraphVectorSearchConfigurationArgs

func GraphVectorSearchConfigurationPtr(v *GraphVectorSearchConfigurationArgs) GraphVectorSearchConfigurationPtrInput {
	return (*graphVectorSearchConfigurationPtrType)(v)
}

func (*graphVectorSearchConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphVectorSearchConfiguration)(nil)).Elem()
}

func (i *graphVectorSearchConfigurationPtrType) ToGraphVectorSearchConfigurationPtrOutput() GraphVectorSearchConfigurationPtrOutput {
	return i.ToGraphVectorSearchConfigurationPtrOutputWithContext(context.Background())
}

func (i *graphVectorSearchConfigurationPtrType) ToGraphVectorSearchConfigurationPtrOutputWithContext(ctx context.Context) GraphVectorSearchConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphVectorSearchConfigurationPtrOutput)
}

type GraphVectorSearchConfigurationOutput struct{ *pulumi.OutputState }

func (GraphVectorSearchConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphVectorSearchConfiguration)(nil)).Elem()
}

func (o GraphVectorSearchConfigurationOutput) ToGraphVectorSearchConfigurationOutput() GraphVectorSearchConfigurationOutput {
	return o
}

func (o GraphVectorSearchConfigurationOutput) ToGraphVectorSearchConfigurationOutputWithContext(ctx context.Context) GraphVectorSearchConfigurationOutput {
	return o
}

func (o GraphVectorSearchConfigurationOutput) ToGraphVectorSearchConfigurationPtrOutput() GraphVectorSearchConfigurationPtrOutput {
	return o.ToGraphVectorSearchConfigurationPtrOutputWithContext(context.Background())
}

func (o GraphVectorSearchConfigurationOutput) ToGraphVectorSearchConfigurationPtrOutputWithContext(ctx context.Context) GraphVectorSearchConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GraphVectorSearchConfiguration) *GraphVectorSearchConfiguration {
		return &v
	}).(GraphVectorSearchConfigurationPtrOutput)
}

// Specifies the number of dimensions for vector embeddings.  Value must be between 1 and 65,535.
func (o GraphVectorSearchConfigurationOutput) VectorSearchDimension() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GraphVectorSearchConfiguration) *int { return v.VectorSearchDimension }).(pulumi.IntPtrOutput)
}

type GraphVectorSearchConfigurationPtrOutput struct{ *pulumi.OutputState }

func (GraphVectorSearchConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphVectorSearchConfiguration)(nil)).Elem()
}

func (o GraphVectorSearchConfigurationPtrOutput) ToGraphVectorSearchConfigurationPtrOutput() GraphVectorSearchConfigurationPtrOutput {
	return o
}

func (o GraphVectorSearchConfigurationPtrOutput) ToGraphVectorSearchConfigurationPtrOutputWithContext(ctx context.Context) GraphVectorSearchConfigurationPtrOutput {
	return o
}

func (o GraphVectorSearchConfigurationPtrOutput) Elem() GraphVectorSearchConfigurationOutput {
	return o.ApplyT(func(v *GraphVectorSearchConfiguration) GraphVectorSearchConfiguration {
		if v != nil {
			return *v
		}
		var ret GraphVectorSearchConfiguration
		return ret
	}).(GraphVectorSearchConfigurationOutput)
}

// Specifies the number of dimensions for vector embeddings.  Value must be between 1 and 65,535.
func (o GraphVectorSearchConfigurationPtrOutput) VectorSearchDimension() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GraphVectorSearchConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.VectorSearchDimension
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GraphTimeoutsInput)(nil)).Elem(), GraphTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphTimeoutsPtrInput)(nil)).Elem(), GraphTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphVectorSearchConfigurationInput)(nil)).Elem(), GraphVectorSearchConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphVectorSearchConfigurationPtrInput)(nil)).Elem(), GraphVectorSearchConfigurationArgs{})
	pulumi.RegisterOutputType(GraphTimeoutsOutput{})
	pulumi.RegisterOutputType(GraphTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(GraphVectorSearchConfigurationOutput{})
	pulumi.RegisterOutputType(GraphVectorSearchConfigurationPtrOutput{})
}
