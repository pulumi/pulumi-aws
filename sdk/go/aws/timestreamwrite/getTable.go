// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package timestreamwrite

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for managing an AWS Timestream Write Table.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/timestreamwrite"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := timestreamwrite.LookupTable(ctx, &timestreamwrite.LookupTableArgs{
//				DatabaseName: testAwsTimestreamwriteDatabase.DatabaseName,
//				Name:         testAwsTimestreamwriteTable.TableName,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupTable(ctx *pulumi.Context, args *LookupTableArgs, opts ...pulumi.InvokeOption) (*LookupTableResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupTableResult
	err := ctx.Invoke("aws:timestreamwrite/getTable:getTable", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTable.
type LookupTableArgs struct {
	// Name of the Timestream database.
	DatabaseName string `pulumi:"databaseName"`
	// Name of the Timestream table.
	Name string `pulumi:"name"`
}

// A collection of values returned by getTable.
type LookupTableResult struct {
	// ARN that uniquely identifies the table.
	Arn string `pulumi:"arn"`
	// Time that table was created.
	CreationTime string `pulumi:"creationTime"`
	// Name of database.
	DatabaseName string `pulumi:"databaseName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Last time table was updated.
	LastUpdatedTime string `pulumi:"lastUpdatedTime"`
	// Object containing the following attributes to desribe magnetic store writes.
	MagneticStoreWriteProperties []GetTableMagneticStoreWriteProperty `pulumi:"magneticStoreWriteProperties"`
	// Name of the table.
	Name string `pulumi:"name"`
	// Object containing the following attributes to describe the retention duration for the memory and magnetic stores.
	RetentionProperties []GetTableRetentionProperty `pulumi:"retentionProperties"`
	// Object containing the following attributes to describe the schema of the table.
	Schemas []GetTableSchema `pulumi:"schemas"`
	// Current state of table.
	TableStatus string `pulumi:"tableStatus"`
}

func LookupTableOutput(ctx *pulumi.Context, args LookupTableOutputArgs, opts ...pulumi.InvokeOption) LookupTableResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupTableResultOutput, error) {
			args := v.(LookupTableArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws:timestreamwrite/getTable:getTable", args, LookupTableResultOutput{}, options).(LookupTableResultOutput), nil
		}).(LookupTableResultOutput)
}

// A collection of arguments for invoking getTable.
type LookupTableOutputArgs struct {
	// Name of the Timestream database.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Name of the Timestream table.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupTableOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTableArgs)(nil)).Elem()
}

// A collection of values returned by getTable.
type LookupTableResultOutput struct{ *pulumi.OutputState }

func (LookupTableResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupTableResult)(nil)).Elem()
}

func (o LookupTableResultOutput) ToLookupTableResultOutput() LookupTableResultOutput {
	return o
}

func (o LookupTableResultOutput) ToLookupTableResultOutputWithContext(ctx context.Context) LookupTableResultOutput {
	return o
}

// ARN that uniquely identifies the table.
func (o LookupTableResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTableResult) string { return v.Arn }).(pulumi.StringOutput)
}

// Time that table was created.
func (o LookupTableResultOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTableResult) string { return v.CreationTime }).(pulumi.StringOutput)
}

// Name of database.
func (o LookupTableResultOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTableResult) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupTableResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTableResult) string { return v.Id }).(pulumi.StringOutput)
}

// Last time table was updated.
func (o LookupTableResultOutput) LastUpdatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTableResult) string { return v.LastUpdatedTime }).(pulumi.StringOutput)
}

// Object containing the following attributes to desribe magnetic store writes.
func (o LookupTableResultOutput) MagneticStoreWriteProperties() GetTableMagneticStoreWritePropertyArrayOutput {
	return o.ApplyT(func(v LookupTableResult) []GetTableMagneticStoreWriteProperty { return v.MagneticStoreWriteProperties }).(GetTableMagneticStoreWritePropertyArrayOutput)
}

// Name of the table.
func (o LookupTableResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTableResult) string { return v.Name }).(pulumi.StringOutput)
}

// Object containing the following attributes to describe the retention duration for the memory and magnetic stores.
func (o LookupTableResultOutput) RetentionProperties() GetTableRetentionPropertyArrayOutput {
	return o.ApplyT(func(v LookupTableResult) []GetTableRetentionProperty { return v.RetentionProperties }).(GetTableRetentionPropertyArrayOutput)
}

// Object containing the following attributes to describe the schema of the table.
func (o LookupTableResultOutput) Schemas() GetTableSchemaArrayOutput {
	return o.ApplyT(func(v LookupTableResult) []GetTableSchema { return v.Schemas }).(GetTableSchemaArrayOutput)
}

// Current state of table.
func (o LookupTableResultOutput) TableStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupTableResult) string { return v.TableStatus }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupTableResultOutput{})
}
