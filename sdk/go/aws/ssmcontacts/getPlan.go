// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssmcontacts

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for managing a Plan of an AWS SSM Contact.
//
// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ssmcontacts"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ssmcontacts.LookupPlan(ctx, &ssmcontacts.LookupPlanArgs{
//				ContactId: "arn:aws:ssm-contacts:us-west-2:123456789012:contact/contactalias",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupPlan(ctx *pulumi.Context, args *LookupPlanArgs, opts ...pulumi.InvokeOption) (*LookupPlanResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPlanResult
	err := ctx.Invoke("aws:ssmcontacts/getPlan:getPlan", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPlan.
type LookupPlanArgs struct {
	// The Amazon Resource Name (ARN) of the contact or escalation plan.
	ContactId string `pulumi:"contactId"`
}

// A collection of values returned by getPlan.
type LookupPlanResult struct {
	ContactId string `pulumi:"contactId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of stages. A contact has an engagement plan with stages that contact specified contact channels. An escalation plan uses stages that contact specified contacts.
	Stages []GetPlanStage `pulumi:"stages"`
}

func LookupPlanOutput(ctx *pulumi.Context, args LookupPlanOutputArgs, opts ...pulumi.InvokeOption) LookupPlanResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPlanResult, error) {
			args := v.(LookupPlanArgs)
			r, err := LookupPlan(ctx, &args, opts...)
			var s LookupPlanResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPlanResultOutput)
}

// A collection of arguments for invoking getPlan.
type LookupPlanOutputArgs struct {
	// The Amazon Resource Name (ARN) of the contact or escalation plan.
	ContactId pulumi.StringInput `pulumi:"contactId"`
}

func (LookupPlanOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPlanArgs)(nil)).Elem()
}

// A collection of values returned by getPlan.
type LookupPlanResultOutput struct{ *pulumi.OutputState }

func (LookupPlanResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPlanResult)(nil)).Elem()
}

func (o LookupPlanResultOutput) ToLookupPlanResultOutput() LookupPlanResultOutput {
	return o
}

func (o LookupPlanResultOutput) ToLookupPlanResultOutputWithContext(ctx context.Context) LookupPlanResultOutput {
	return o
}

func (o LookupPlanResultOutput) ContactId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlanResult) string { return v.ContactId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPlanResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlanResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of stages. A contact has an engagement plan with stages that contact specified contact channels. An escalation plan uses stages that contact specified contacts.
func (o LookupPlanResultOutput) Stages() GetPlanStageArrayOutput {
	return o.ApplyT(func(v LookupPlanResult) []GetPlanStage { return v.Stages }).(GetPlanStageArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPlanResultOutput{})
}
