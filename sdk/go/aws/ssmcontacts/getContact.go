// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssmcontacts

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Data source for managing an AWS SSM Contact.
//
// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ssmcontacts"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ssmcontacts.LookupContact(ctx, &ssmcontacts.LookupContactArgs{
//				Arn: "arn:aws:ssm-contacts:us-west-2:123456789012:contact/contactalias",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupContact(ctx *pulumi.Context, args *LookupContactArgs, opts ...pulumi.InvokeOption) (*LookupContactResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupContactResult
	err := ctx.Invoke("aws:ssmcontacts/getContact:getContact", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getContact.
type LookupContactArgs struct {
	// The Amazon Resource Name (ARN) of the contact or escalation plan.
	Arn string `pulumi:"arn"`
	// Map of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getContact.
type LookupContactResult struct {
	// A unique and identifiable alias of the contact or escalation plan.
	Alias string `pulumi:"alias"`
	Arn   string `pulumi:"arn"`
	// Full friendly name of the contact or escalation plan.
	DisplayName string `pulumi:"displayName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Map of tags to assign to the resource.
	Tags map[string]string `pulumi:"tags"`
	// The type of contact engaged. A single contact is type `PERSONAL` and an escalation plan is type `ESCALATION`.
	Type string `pulumi:"type"`
}

func LookupContactOutput(ctx *pulumi.Context, args LookupContactOutputArgs, opts ...pulumi.InvokeOption) LookupContactResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupContactResult, error) {
			args := v.(LookupContactArgs)
			r, err := LookupContact(ctx, &args, opts...)
			var s LookupContactResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupContactResultOutput)
}

// A collection of arguments for invoking getContact.
type LookupContactOutputArgs struct {
	// The Amazon Resource Name (ARN) of the contact or escalation plan.
	Arn pulumi.StringInput `pulumi:"arn"`
	// Map of tags to assign to the resource.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupContactOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContactArgs)(nil)).Elem()
}

// A collection of values returned by getContact.
type LookupContactResultOutput struct{ *pulumi.OutputState }

func (LookupContactResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupContactResult)(nil)).Elem()
}

func (o LookupContactResultOutput) ToLookupContactResultOutput() LookupContactResultOutput {
	return o
}

func (o LookupContactResultOutput) ToLookupContactResultOutputWithContext(ctx context.Context) LookupContactResultOutput {
	return o
}

func (o LookupContactResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupContactResult] {
	return pulumix.Output[LookupContactResult]{
		OutputState: o.OutputState,
	}
}

// A unique and identifiable alias of the contact or escalation plan.
func (o LookupContactResultOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContactResult) string { return v.Alias }).(pulumi.StringOutput)
}

func (o LookupContactResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContactResult) string { return v.Arn }).(pulumi.StringOutput)
}

// Full friendly name of the contact or escalation plan.
func (o LookupContactResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContactResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupContactResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContactResult) string { return v.Id }).(pulumi.StringOutput)
}

// Map of tags to assign to the resource.
func (o LookupContactResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupContactResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of contact engaged. A single contact is type `PERSONAL` and an escalation plan is type `ESCALATION`.
func (o LookupContactResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupContactResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupContactResultOutput{})
}
