// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apprunner

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VpcIngressConnection struct {
	pulumi.CustomResourceState

	Arn                     pulumi.StringOutput                               `pulumi:"arn"`
	DomainName              pulumi.StringOutput                               `pulumi:"domainName"`
	IngressVpcConfiguration VpcIngressConnectionIngressVpcConfigurationOutput `pulumi:"ingressVpcConfiguration"`
	Name                    pulumi.StringOutput                               `pulumi:"name"`
	ServiceArn              pulumi.StringOutput                               `pulumi:"serviceArn"`
	Status                  pulumi.StringOutput                               `pulumi:"status"`
	Tags                    pulumi.StringMapOutput                            `pulumi:"tags"`
	TagsAll                 pulumi.StringMapOutput                            `pulumi:"tagsAll"`
}

// NewVpcIngressConnection registers a new resource with the given unique name, arguments, and options.
func NewVpcIngressConnection(ctx *pulumi.Context,
	name string, args *VpcIngressConnectionArgs, opts ...pulumi.ResourceOption) (*VpcIngressConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IngressVpcConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'IngressVpcConfiguration'")
	}
	if args.ServiceArn == nil {
		return nil, errors.New("invalid value for required argument 'ServiceArn'")
	}
	var resource VpcIngressConnection
	err := ctx.RegisterResource("aws:apprunner/vpcIngressConnection:VpcIngressConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcIngressConnection gets an existing VpcIngressConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcIngressConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcIngressConnectionState, opts ...pulumi.ResourceOption) (*VpcIngressConnection, error) {
	var resource VpcIngressConnection
	err := ctx.ReadResource("aws:apprunner/vpcIngressConnection:VpcIngressConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcIngressConnection resources.
type vpcIngressConnectionState struct {
	Arn                     *string                                      `pulumi:"arn"`
	DomainName              *string                                      `pulumi:"domainName"`
	IngressVpcConfiguration *VpcIngressConnectionIngressVpcConfiguration `pulumi:"ingressVpcConfiguration"`
	Name                    *string                                      `pulumi:"name"`
	ServiceArn              *string                                      `pulumi:"serviceArn"`
	Status                  *string                                      `pulumi:"status"`
	Tags                    map[string]string                            `pulumi:"tags"`
	TagsAll                 map[string]string                            `pulumi:"tagsAll"`
}

type VpcIngressConnectionState struct {
	Arn                     pulumi.StringPtrInput
	DomainName              pulumi.StringPtrInput
	IngressVpcConfiguration VpcIngressConnectionIngressVpcConfigurationPtrInput
	Name                    pulumi.StringPtrInput
	ServiceArn              pulumi.StringPtrInput
	Status                  pulumi.StringPtrInput
	Tags                    pulumi.StringMapInput
	TagsAll                 pulumi.StringMapInput
}

func (VpcIngressConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcIngressConnectionState)(nil)).Elem()
}

type vpcIngressConnectionArgs struct {
	IngressVpcConfiguration VpcIngressConnectionIngressVpcConfiguration `pulumi:"ingressVpcConfiguration"`
	Name                    *string                                     `pulumi:"name"`
	ServiceArn              string                                      `pulumi:"serviceArn"`
	Tags                    map[string]string                           `pulumi:"tags"`
}

// The set of arguments for constructing a VpcIngressConnection resource.
type VpcIngressConnectionArgs struct {
	IngressVpcConfiguration VpcIngressConnectionIngressVpcConfigurationInput
	Name                    pulumi.StringPtrInput
	ServiceArn              pulumi.StringInput
	Tags                    pulumi.StringMapInput
}

func (VpcIngressConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcIngressConnectionArgs)(nil)).Elem()
}

type VpcIngressConnectionInput interface {
	pulumi.Input

	ToVpcIngressConnectionOutput() VpcIngressConnectionOutput
	ToVpcIngressConnectionOutputWithContext(ctx context.Context) VpcIngressConnectionOutput
}

func (*VpcIngressConnection) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcIngressConnection)(nil)).Elem()
}

func (i *VpcIngressConnection) ToVpcIngressConnectionOutput() VpcIngressConnectionOutput {
	return i.ToVpcIngressConnectionOutputWithContext(context.Background())
}

func (i *VpcIngressConnection) ToVpcIngressConnectionOutputWithContext(ctx context.Context) VpcIngressConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcIngressConnectionOutput)
}

// VpcIngressConnectionArrayInput is an input type that accepts VpcIngressConnectionArray and VpcIngressConnectionArrayOutput values.
// You can construct a concrete instance of `VpcIngressConnectionArrayInput` via:
//
//	VpcIngressConnectionArray{ VpcIngressConnectionArgs{...} }
type VpcIngressConnectionArrayInput interface {
	pulumi.Input

	ToVpcIngressConnectionArrayOutput() VpcIngressConnectionArrayOutput
	ToVpcIngressConnectionArrayOutputWithContext(context.Context) VpcIngressConnectionArrayOutput
}

type VpcIngressConnectionArray []VpcIngressConnectionInput

func (VpcIngressConnectionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcIngressConnection)(nil)).Elem()
}

func (i VpcIngressConnectionArray) ToVpcIngressConnectionArrayOutput() VpcIngressConnectionArrayOutput {
	return i.ToVpcIngressConnectionArrayOutputWithContext(context.Background())
}

func (i VpcIngressConnectionArray) ToVpcIngressConnectionArrayOutputWithContext(ctx context.Context) VpcIngressConnectionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcIngressConnectionArrayOutput)
}

// VpcIngressConnectionMapInput is an input type that accepts VpcIngressConnectionMap and VpcIngressConnectionMapOutput values.
// You can construct a concrete instance of `VpcIngressConnectionMapInput` via:
//
//	VpcIngressConnectionMap{ "key": VpcIngressConnectionArgs{...} }
type VpcIngressConnectionMapInput interface {
	pulumi.Input

	ToVpcIngressConnectionMapOutput() VpcIngressConnectionMapOutput
	ToVpcIngressConnectionMapOutputWithContext(context.Context) VpcIngressConnectionMapOutput
}

type VpcIngressConnectionMap map[string]VpcIngressConnectionInput

func (VpcIngressConnectionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcIngressConnection)(nil)).Elem()
}

func (i VpcIngressConnectionMap) ToVpcIngressConnectionMapOutput() VpcIngressConnectionMapOutput {
	return i.ToVpcIngressConnectionMapOutputWithContext(context.Background())
}

func (i VpcIngressConnectionMap) ToVpcIngressConnectionMapOutputWithContext(ctx context.Context) VpcIngressConnectionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcIngressConnectionMapOutput)
}

type VpcIngressConnectionOutput struct{ *pulumi.OutputState }

func (VpcIngressConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcIngressConnection)(nil)).Elem()
}

func (o VpcIngressConnectionOutput) ToVpcIngressConnectionOutput() VpcIngressConnectionOutput {
	return o
}

func (o VpcIngressConnectionOutput) ToVpcIngressConnectionOutputWithContext(ctx context.Context) VpcIngressConnectionOutput {
	return o
}

func (o VpcIngressConnectionOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcIngressConnection) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o VpcIngressConnectionOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcIngressConnection) pulumi.StringOutput { return v.DomainName }).(pulumi.StringOutput)
}

func (o VpcIngressConnectionOutput) IngressVpcConfiguration() VpcIngressConnectionIngressVpcConfigurationOutput {
	return o.ApplyT(func(v *VpcIngressConnection) VpcIngressConnectionIngressVpcConfigurationOutput {
		return v.IngressVpcConfiguration
	}).(VpcIngressConnectionIngressVpcConfigurationOutput)
}

func (o VpcIngressConnectionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcIngressConnection) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o VpcIngressConnectionOutput) ServiceArn() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcIngressConnection) pulumi.StringOutput { return v.ServiceArn }).(pulumi.StringOutput)
}

func (o VpcIngressConnectionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcIngressConnection) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o VpcIngressConnectionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VpcIngressConnection) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o VpcIngressConnectionOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VpcIngressConnection) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type VpcIngressConnectionArrayOutput struct{ *pulumi.OutputState }

func (VpcIngressConnectionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcIngressConnection)(nil)).Elem()
}

func (o VpcIngressConnectionArrayOutput) ToVpcIngressConnectionArrayOutput() VpcIngressConnectionArrayOutput {
	return o
}

func (o VpcIngressConnectionArrayOutput) ToVpcIngressConnectionArrayOutputWithContext(ctx context.Context) VpcIngressConnectionArrayOutput {
	return o
}

func (o VpcIngressConnectionArrayOutput) Index(i pulumi.IntInput) VpcIngressConnectionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpcIngressConnection {
		return vs[0].([]*VpcIngressConnection)[vs[1].(int)]
	}).(VpcIngressConnectionOutput)
}

type VpcIngressConnectionMapOutput struct{ *pulumi.OutputState }

func (VpcIngressConnectionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcIngressConnection)(nil)).Elem()
}

func (o VpcIngressConnectionMapOutput) ToVpcIngressConnectionMapOutput() VpcIngressConnectionMapOutput {
	return o
}

func (o VpcIngressConnectionMapOutput) ToVpcIngressConnectionMapOutputWithContext(ctx context.Context) VpcIngressConnectionMapOutput {
	return o
}

func (o VpcIngressConnectionMapOutput) MapIndex(k pulumi.StringInput) VpcIngressConnectionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpcIngressConnection {
		return vs[0].(map[string]*VpcIngressConnection)[vs[1].(string)]
	}).(VpcIngressConnectionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcIngressConnectionInput)(nil)).Elem(), &VpcIngressConnection{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcIngressConnectionArrayInput)(nil)).Elem(), VpcIngressConnectionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcIngressConnectionMapInput)(nil)).Elem(), VpcIngressConnectionMap{})
	pulumi.RegisterOutputType(VpcIngressConnectionOutput{})
	pulumi.RegisterOutputType(VpcIngressConnectionArrayOutput{})
	pulumi.RegisterOutputType(VpcIngressConnectionMapOutput{})
}
