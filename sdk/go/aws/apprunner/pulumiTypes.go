// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apprunner

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CustomDomainAssociationCertificateValidationRecord struct {
	// Certificate CNAME record name.
	Name *string `pulumi:"name"`
	// Current state of the certificate CNAME record validation. It should change to `SUCCESS` after App Runner completes validation with your DNS.
	Status *string `pulumi:"status"`
	// Record type, always `CNAME`.
	Type *string `pulumi:"type"`
	// Certificate CNAME record value.
	Value *string `pulumi:"value"`
}

// CustomDomainAssociationCertificateValidationRecordInput is an input type that accepts CustomDomainAssociationCertificateValidationRecordArgs and CustomDomainAssociationCertificateValidationRecordOutput values.
// You can construct a concrete instance of `CustomDomainAssociationCertificateValidationRecordInput` via:
//
//	CustomDomainAssociationCertificateValidationRecordArgs{...}
type CustomDomainAssociationCertificateValidationRecordInput interface {
	pulumi.Input

	ToCustomDomainAssociationCertificateValidationRecordOutput() CustomDomainAssociationCertificateValidationRecordOutput
	ToCustomDomainAssociationCertificateValidationRecordOutputWithContext(context.Context) CustomDomainAssociationCertificateValidationRecordOutput
}

type CustomDomainAssociationCertificateValidationRecordArgs struct {
	// Certificate CNAME record name.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Current state of the certificate CNAME record validation. It should change to `SUCCESS` after App Runner completes validation with your DNS.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// Record type, always `CNAME`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// Certificate CNAME record value.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (CustomDomainAssociationCertificateValidationRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainAssociationCertificateValidationRecord)(nil)).Elem()
}

func (i CustomDomainAssociationCertificateValidationRecordArgs) ToCustomDomainAssociationCertificateValidationRecordOutput() CustomDomainAssociationCertificateValidationRecordOutput {
	return i.ToCustomDomainAssociationCertificateValidationRecordOutputWithContext(context.Background())
}

func (i CustomDomainAssociationCertificateValidationRecordArgs) ToCustomDomainAssociationCertificateValidationRecordOutputWithContext(ctx context.Context) CustomDomainAssociationCertificateValidationRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainAssociationCertificateValidationRecordOutput)
}

// CustomDomainAssociationCertificateValidationRecordArrayInput is an input type that accepts CustomDomainAssociationCertificateValidationRecordArray and CustomDomainAssociationCertificateValidationRecordArrayOutput values.
// You can construct a concrete instance of `CustomDomainAssociationCertificateValidationRecordArrayInput` via:
//
//	CustomDomainAssociationCertificateValidationRecordArray{ CustomDomainAssociationCertificateValidationRecordArgs{...} }
type CustomDomainAssociationCertificateValidationRecordArrayInput interface {
	pulumi.Input

	ToCustomDomainAssociationCertificateValidationRecordArrayOutput() CustomDomainAssociationCertificateValidationRecordArrayOutput
	ToCustomDomainAssociationCertificateValidationRecordArrayOutputWithContext(context.Context) CustomDomainAssociationCertificateValidationRecordArrayOutput
}

type CustomDomainAssociationCertificateValidationRecordArray []CustomDomainAssociationCertificateValidationRecordInput

func (CustomDomainAssociationCertificateValidationRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDomainAssociationCertificateValidationRecord)(nil)).Elem()
}

func (i CustomDomainAssociationCertificateValidationRecordArray) ToCustomDomainAssociationCertificateValidationRecordArrayOutput() CustomDomainAssociationCertificateValidationRecordArrayOutput {
	return i.ToCustomDomainAssociationCertificateValidationRecordArrayOutputWithContext(context.Background())
}

func (i CustomDomainAssociationCertificateValidationRecordArray) ToCustomDomainAssociationCertificateValidationRecordArrayOutputWithContext(ctx context.Context) CustomDomainAssociationCertificateValidationRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainAssociationCertificateValidationRecordArrayOutput)
}

type CustomDomainAssociationCertificateValidationRecordOutput struct{ *pulumi.OutputState }

func (CustomDomainAssociationCertificateValidationRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomDomainAssociationCertificateValidationRecord)(nil)).Elem()
}

func (o CustomDomainAssociationCertificateValidationRecordOutput) ToCustomDomainAssociationCertificateValidationRecordOutput() CustomDomainAssociationCertificateValidationRecordOutput {
	return o
}

func (o CustomDomainAssociationCertificateValidationRecordOutput) ToCustomDomainAssociationCertificateValidationRecordOutputWithContext(ctx context.Context) CustomDomainAssociationCertificateValidationRecordOutput {
	return o
}

// Certificate CNAME record name.
func (o CustomDomainAssociationCertificateValidationRecordOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainAssociationCertificateValidationRecord) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Current state of the certificate CNAME record validation. It should change to `SUCCESS` after App Runner completes validation with your DNS.
func (o CustomDomainAssociationCertificateValidationRecordOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainAssociationCertificateValidationRecord) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// Record type, always `CNAME`.
func (o CustomDomainAssociationCertificateValidationRecordOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainAssociationCertificateValidationRecord) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// Certificate CNAME record value.
func (o CustomDomainAssociationCertificateValidationRecordOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomDomainAssociationCertificateValidationRecord) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CustomDomainAssociationCertificateValidationRecordArrayOutput struct{ *pulumi.OutputState }

func (CustomDomainAssociationCertificateValidationRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomDomainAssociationCertificateValidationRecord)(nil)).Elem()
}

func (o CustomDomainAssociationCertificateValidationRecordArrayOutput) ToCustomDomainAssociationCertificateValidationRecordArrayOutput() CustomDomainAssociationCertificateValidationRecordArrayOutput {
	return o
}

func (o CustomDomainAssociationCertificateValidationRecordArrayOutput) ToCustomDomainAssociationCertificateValidationRecordArrayOutputWithContext(ctx context.Context) CustomDomainAssociationCertificateValidationRecordArrayOutput {
	return o
}

func (o CustomDomainAssociationCertificateValidationRecordArrayOutput) Index(i pulumi.IntInput) CustomDomainAssociationCertificateValidationRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomDomainAssociationCertificateValidationRecord {
		return vs[0].([]CustomDomainAssociationCertificateValidationRecord)[vs[1].(int)]
	}).(CustomDomainAssociationCertificateValidationRecordOutput)
}

type ObservabilityConfigurationTraceConfiguration struct {
	// Implementation provider chosen for tracing App Runner services. Valid values: `AWSXRAY`.
	Vendor *string `pulumi:"vendor"`
}

// ObservabilityConfigurationTraceConfigurationInput is an input type that accepts ObservabilityConfigurationTraceConfigurationArgs and ObservabilityConfigurationTraceConfigurationOutput values.
// You can construct a concrete instance of `ObservabilityConfigurationTraceConfigurationInput` via:
//
//	ObservabilityConfigurationTraceConfigurationArgs{...}
type ObservabilityConfigurationTraceConfigurationInput interface {
	pulumi.Input

	ToObservabilityConfigurationTraceConfigurationOutput() ObservabilityConfigurationTraceConfigurationOutput
	ToObservabilityConfigurationTraceConfigurationOutputWithContext(context.Context) ObservabilityConfigurationTraceConfigurationOutput
}

type ObservabilityConfigurationTraceConfigurationArgs struct {
	// Implementation provider chosen for tracing App Runner services. Valid values: `AWSXRAY`.
	Vendor pulumi.StringPtrInput `pulumi:"vendor"`
}

func (ObservabilityConfigurationTraceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ObservabilityConfigurationTraceConfiguration)(nil)).Elem()
}

func (i ObservabilityConfigurationTraceConfigurationArgs) ToObservabilityConfigurationTraceConfigurationOutput() ObservabilityConfigurationTraceConfigurationOutput {
	return i.ToObservabilityConfigurationTraceConfigurationOutputWithContext(context.Background())
}

func (i ObservabilityConfigurationTraceConfigurationArgs) ToObservabilityConfigurationTraceConfigurationOutputWithContext(ctx context.Context) ObservabilityConfigurationTraceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObservabilityConfigurationTraceConfigurationOutput)
}

func (i ObservabilityConfigurationTraceConfigurationArgs) ToObservabilityConfigurationTraceConfigurationPtrOutput() ObservabilityConfigurationTraceConfigurationPtrOutput {
	return i.ToObservabilityConfigurationTraceConfigurationPtrOutputWithContext(context.Background())
}

func (i ObservabilityConfigurationTraceConfigurationArgs) ToObservabilityConfigurationTraceConfigurationPtrOutputWithContext(ctx context.Context) ObservabilityConfigurationTraceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObservabilityConfigurationTraceConfigurationOutput).ToObservabilityConfigurationTraceConfigurationPtrOutputWithContext(ctx)
}

// ObservabilityConfigurationTraceConfigurationPtrInput is an input type that accepts ObservabilityConfigurationTraceConfigurationArgs, ObservabilityConfigurationTraceConfigurationPtr and ObservabilityConfigurationTraceConfigurationPtrOutput values.
// You can construct a concrete instance of `ObservabilityConfigurationTraceConfigurationPtrInput` via:
//
//	        ObservabilityConfigurationTraceConfigurationArgs{...}
//
//	or:
//
//	        nil
type ObservabilityConfigurationTraceConfigurationPtrInput interface {
	pulumi.Input

	ToObservabilityConfigurationTraceConfigurationPtrOutput() ObservabilityConfigurationTraceConfigurationPtrOutput
	ToObservabilityConfigurationTraceConfigurationPtrOutputWithContext(context.Context) ObservabilityConfigurationTraceConfigurationPtrOutput
}

type observabilityConfigurationTraceConfigurationPtrType ObservabilityConfigurationTraceConfigurationArgs

func ObservabilityConfigurationTraceConfigurationPtr(v *ObservabilityConfigurationTraceConfigurationArgs) ObservabilityConfigurationTraceConfigurationPtrInput {
	return (*observabilityConfigurationTraceConfigurationPtrType)(v)
}

func (*observabilityConfigurationTraceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ObservabilityConfigurationTraceConfiguration)(nil)).Elem()
}

func (i *observabilityConfigurationTraceConfigurationPtrType) ToObservabilityConfigurationTraceConfigurationPtrOutput() ObservabilityConfigurationTraceConfigurationPtrOutput {
	return i.ToObservabilityConfigurationTraceConfigurationPtrOutputWithContext(context.Background())
}

func (i *observabilityConfigurationTraceConfigurationPtrType) ToObservabilityConfigurationTraceConfigurationPtrOutputWithContext(ctx context.Context) ObservabilityConfigurationTraceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ObservabilityConfigurationTraceConfigurationPtrOutput)
}

type ObservabilityConfigurationTraceConfigurationOutput struct{ *pulumi.OutputState }

func (ObservabilityConfigurationTraceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ObservabilityConfigurationTraceConfiguration)(nil)).Elem()
}

func (o ObservabilityConfigurationTraceConfigurationOutput) ToObservabilityConfigurationTraceConfigurationOutput() ObservabilityConfigurationTraceConfigurationOutput {
	return o
}

func (o ObservabilityConfigurationTraceConfigurationOutput) ToObservabilityConfigurationTraceConfigurationOutputWithContext(ctx context.Context) ObservabilityConfigurationTraceConfigurationOutput {
	return o
}

func (o ObservabilityConfigurationTraceConfigurationOutput) ToObservabilityConfigurationTraceConfigurationPtrOutput() ObservabilityConfigurationTraceConfigurationPtrOutput {
	return o.ToObservabilityConfigurationTraceConfigurationPtrOutputWithContext(context.Background())
}

func (o ObservabilityConfigurationTraceConfigurationOutput) ToObservabilityConfigurationTraceConfigurationPtrOutputWithContext(ctx context.Context) ObservabilityConfigurationTraceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ObservabilityConfigurationTraceConfiguration) *ObservabilityConfigurationTraceConfiguration {
		return &v
	}).(ObservabilityConfigurationTraceConfigurationPtrOutput)
}

// Implementation provider chosen for tracing App Runner services. Valid values: `AWSXRAY`.
func (o ObservabilityConfigurationTraceConfigurationOutput) Vendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ObservabilityConfigurationTraceConfiguration) *string { return v.Vendor }).(pulumi.StringPtrOutput)
}

type ObservabilityConfigurationTraceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ObservabilityConfigurationTraceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ObservabilityConfigurationTraceConfiguration)(nil)).Elem()
}

func (o ObservabilityConfigurationTraceConfigurationPtrOutput) ToObservabilityConfigurationTraceConfigurationPtrOutput() ObservabilityConfigurationTraceConfigurationPtrOutput {
	return o
}

func (o ObservabilityConfigurationTraceConfigurationPtrOutput) ToObservabilityConfigurationTraceConfigurationPtrOutputWithContext(ctx context.Context) ObservabilityConfigurationTraceConfigurationPtrOutput {
	return o
}

func (o ObservabilityConfigurationTraceConfigurationPtrOutput) Elem() ObservabilityConfigurationTraceConfigurationOutput {
	return o.ApplyT(func(v *ObservabilityConfigurationTraceConfiguration) ObservabilityConfigurationTraceConfiguration {
		if v != nil {
			return *v
		}
		var ret ObservabilityConfigurationTraceConfiguration
		return ret
	}).(ObservabilityConfigurationTraceConfigurationOutput)
}

// Implementation provider chosen for tracing App Runner services. Valid values: `AWSXRAY`.
func (o ObservabilityConfigurationTraceConfigurationPtrOutput) Vendor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ObservabilityConfigurationTraceConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Vendor
	}).(pulumi.StringPtrOutput)
}

type ServiceEncryptionConfiguration struct {
	// ARN of the KMS key used for encryption.
	KmsKey string `pulumi:"kmsKey"`
}

// ServiceEncryptionConfigurationInput is an input type that accepts ServiceEncryptionConfigurationArgs and ServiceEncryptionConfigurationOutput values.
// You can construct a concrete instance of `ServiceEncryptionConfigurationInput` via:
//
//	ServiceEncryptionConfigurationArgs{...}
type ServiceEncryptionConfigurationInput interface {
	pulumi.Input

	ToServiceEncryptionConfigurationOutput() ServiceEncryptionConfigurationOutput
	ToServiceEncryptionConfigurationOutputWithContext(context.Context) ServiceEncryptionConfigurationOutput
}

type ServiceEncryptionConfigurationArgs struct {
	// ARN of the KMS key used for encryption.
	KmsKey pulumi.StringInput `pulumi:"kmsKey"`
}

func (ServiceEncryptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEncryptionConfiguration)(nil)).Elem()
}

func (i ServiceEncryptionConfigurationArgs) ToServiceEncryptionConfigurationOutput() ServiceEncryptionConfigurationOutput {
	return i.ToServiceEncryptionConfigurationOutputWithContext(context.Background())
}

func (i ServiceEncryptionConfigurationArgs) ToServiceEncryptionConfigurationOutputWithContext(ctx context.Context) ServiceEncryptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEncryptionConfigurationOutput)
}

func (i ServiceEncryptionConfigurationArgs) ToServiceEncryptionConfigurationPtrOutput() ServiceEncryptionConfigurationPtrOutput {
	return i.ToServiceEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i ServiceEncryptionConfigurationArgs) ToServiceEncryptionConfigurationPtrOutputWithContext(ctx context.Context) ServiceEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEncryptionConfigurationOutput).ToServiceEncryptionConfigurationPtrOutputWithContext(ctx)
}

// ServiceEncryptionConfigurationPtrInput is an input type that accepts ServiceEncryptionConfigurationArgs, ServiceEncryptionConfigurationPtr and ServiceEncryptionConfigurationPtrOutput values.
// You can construct a concrete instance of `ServiceEncryptionConfigurationPtrInput` via:
//
//	        ServiceEncryptionConfigurationArgs{...}
//
//	or:
//
//	        nil
type ServiceEncryptionConfigurationPtrInput interface {
	pulumi.Input

	ToServiceEncryptionConfigurationPtrOutput() ServiceEncryptionConfigurationPtrOutput
	ToServiceEncryptionConfigurationPtrOutputWithContext(context.Context) ServiceEncryptionConfigurationPtrOutput
}

type serviceEncryptionConfigurationPtrType ServiceEncryptionConfigurationArgs

func ServiceEncryptionConfigurationPtr(v *ServiceEncryptionConfigurationArgs) ServiceEncryptionConfigurationPtrInput {
	return (*serviceEncryptionConfigurationPtrType)(v)
}

func (*serviceEncryptionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEncryptionConfiguration)(nil)).Elem()
}

func (i *serviceEncryptionConfigurationPtrType) ToServiceEncryptionConfigurationPtrOutput() ServiceEncryptionConfigurationPtrOutput {
	return i.ToServiceEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (i *serviceEncryptionConfigurationPtrType) ToServiceEncryptionConfigurationPtrOutputWithContext(ctx context.Context) ServiceEncryptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEncryptionConfigurationPtrOutput)
}

type ServiceEncryptionConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceEncryptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceEncryptionConfiguration)(nil)).Elem()
}

func (o ServiceEncryptionConfigurationOutput) ToServiceEncryptionConfigurationOutput() ServiceEncryptionConfigurationOutput {
	return o
}

func (o ServiceEncryptionConfigurationOutput) ToServiceEncryptionConfigurationOutputWithContext(ctx context.Context) ServiceEncryptionConfigurationOutput {
	return o
}

func (o ServiceEncryptionConfigurationOutput) ToServiceEncryptionConfigurationPtrOutput() ServiceEncryptionConfigurationPtrOutput {
	return o.ToServiceEncryptionConfigurationPtrOutputWithContext(context.Background())
}

func (o ServiceEncryptionConfigurationOutput) ToServiceEncryptionConfigurationPtrOutputWithContext(ctx context.Context) ServiceEncryptionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceEncryptionConfiguration) *ServiceEncryptionConfiguration {
		return &v
	}).(ServiceEncryptionConfigurationPtrOutput)
}

// ARN of the KMS key used for encryption.
func (o ServiceEncryptionConfigurationOutput) KmsKey() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceEncryptionConfiguration) string { return v.KmsKey }).(pulumi.StringOutput)
}

type ServiceEncryptionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServiceEncryptionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEncryptionConfiguration)(nil)).Elem()
}

func (o ServiceEncryptionConfigurationPtrOutput) ToServiceEncryptionConfigurationPtrOutput() ServiceEncryptionConfigurationPtrOutput {
	return o
}

func (o ServiceEncryptionConfigurationPtrOutput) ToServiceEncryptionConfigurationPtrOutputWithContext(ctx context.Context) ServiceEncryptionConfigurationPtrOutput {
	return o
}

func (o ServiceEncryptionConfigurationPtrOutput) Elem() ServiceEncryptionConfigurationOutput {
	return o.ApplyT(func(v *ServiceEncryptionConfiguration) ServiceEncryptionConfiguration {
		if v != nil {
			return *v
		}
		var ret ServiceEncryptionConfiguration
		return ret
	}).(ServiceEncryptionConfigurationOutput)
}

// ARN of the KMS key used for encryption.
func (o ServiceEncryptionConfigurationPtrOutput) KmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceEncryptionConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.KmsKey
	}).(pulumi.StringPtrOutput)
}

type ServiceHealthCheckConfiguration struct {
	// Number of consecutive checks that must succeed before App Runner decides that the service is healthy. Defaults to 1. Minimum value of 1. Maximum value of 20.
	HealthyThreshold *int `pulumi:"healthyThreshold"`
	// Time interval, in seconds, between health checks. Defaults to 5. Minimum value of 1. Maximum value of 20.
	Interval *int `pulumi:"interval"`
	// URL to send requests to for health checks. Defaults to `/`. Minimum length of 0. Maximum length of 51200.
	Path *string `pulumi:"path"`
	// IP protocol that App Runner uses to perform health checks for your service. Valid values: `TCP`, `HTTP`. Defaults to `TCP`. If you set protocol to `HTTP`, App Runner sends health check requests to the HTTP path specified by `path`.
	Protocol *string `pulumi:"protocol"`
	// Time, in seconds, to wait for a health check response before deciding it failed. Defaults to 2. Minimum value of  1. Maximum value of 20.
	Timeout *int `pulumi:"timeout"`
	// Number of consecutive checks that must fail before App Runner decides that the service is unhealthy. Defaults to 5. Minimum value of  1. Maximum value of 20.
	UnhealthyThreshold *int `pulumi:"unhealthyThreshold"`
}

// ServiceHealthCheckConfigurationInput is an input type that accepts ServiceHealthCheckConfigurationArgs and ServiceHealthCheckConfigurationOutput values.
// You can construct a concrete instance of `ServiceHealthCheckConfigurationInput` via:
//
//	ServiceHealthCheckConfigurationArgs{...}
type ServiceHealthCheckConfigurationInput interface {
	pulumi.Input

	ToServiceHealthCheckConfigurationOutput() ServiceHealthCheckConfigurationOutput
	ToServiceHealthCheckConfigurationOutputWithContext(context.Context) ServiceHealthCheckConfigurationOutput
}

type ServiceHealthCheckConfigurationArgs struct {
	// Number of consecutive checks that must succeed before App Runner decides that the service is healthy. Defaults to 1. Minimum value of 1. Maximum value of 20.
	HealthyThreshold pulumi.IntPtrInput `pulumi:"healthyThreshold"`
	// Time interval, in seconds, between health checks. Defaults to 5. Minimum value of 1. Maximum value of 20.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// URL to send requests to for health checks. Defaults to `/`. Minimum length of 0. Maximum length of 51200.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// IP protocol that App Runner uses to perform health checks for your service. Valid values: `TCP`, `HTTP`. Defaults to `TCP`. If you set protocol to `HTTP`, App Runner sends health check requests to the HTTP path specified by `path`.
	Protocol pulumi.StringPtrInput `pulumi:"protocol"`
	// Time, in seconds, to wait for a health check response before deciding it failed. Defaults to 2. Minimum value of  1. Maximum value of 20.
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
	// Number of consecutive checks that must fail before App Runner decides that the service is unhealthy. Defaults to 5. Minimum value of  1. Maximum value of 20.
	UnhealthyThreshold pulumi.IntPtrInput `pulumi:"unhealthyThreshold"`
}

func (ServiceHealthCheckConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHealthCheckConfiguration)(nil)).Elem()
}

func (i ServiceHealthCheckConfigurationArgs) ToServiceHealthCheckConfigurationOutput() ServiceHealthCheckConfigurationOutput {
	return i.ToServiceHealthCheckConfigurationOutputWithContext(context.Background())
}

func (i ServiceHealthCheckConfigurationArgs) ToServiceHealthCheckConfigurationOutputWithContext(ctx context.Context) ServiceHealthCheckConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHealthCheckConfigurationOutput)
}

func (i ServiceHealthCheckConfigurationArgs) ToServiceHealthCheckConfigurationPtrOutput() ServiceHealthCheckConfigurationPtrOutput {
	return i.ToServiceHealthCheckConfigurationPtrOutputWithContext(context.Background())
}

func (i ServiceHealthCheckConfigurationArgs) ToServiceHealthCheckConfigurationPtrOutputWithContext(ctx context.Context) ServiceHealthCheckConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHealthCheckConfigurationOutput).ToServiceHealthCheckConfigurationPtrOutputWithContext(ctx)
}

// ServiceHealthCheckConfigurationPtrInput is an input type that accepts ServiceHealthCheckConfigurationArgs, ServiceHealthCheckConfigurationPtr and ServiceHealthCheckConfigurationPtrOutput values.
// You can construct a concrete instance of `ServiceHealthCheckConfigurationPtrInput` via:
//
//	        ServiceHealthCheckConfigurationArgs{...}
//
//	or:
//
//	        nil
type ServiceHealthCheckConfigurationPtrInput interface {
	pulumi.Input

	ToServiceHealthCheckConfigurationPtrOutput() ServiceHealthCheckConfigurationPtrOutput
	ToServiceHealthCheckConfigurationPtrOutputWithContext(context.Context) ServiceHealthCheckConfigurationPtrOutput
}

type serviceHealthCheckConfigurationPtrType ServiceHealthCheckConfigurationArgs

func ServiceHealthCheckConfigurationPtr(v *ServiceHealthCheckConfigurationArgs) ServiceHealthCheckConfigurationPtrInput {
	return (*serviceHealthCheckConfigurationPtrType)(v)
}

func (*serviceHealthCheckConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceHealthCheckConfiguration)(nil)).Elem()
}

func (i *serviceHealthCheckConfigurationPtrType) ToServiceHealthCheckConfigurationPtrOutput() ServiceHealthCheckConfigurationPtrOutput {
	return i.ToServiceHealthCheckConfigurationPtrOutputWithContext(context.Background())
}

func (i *serviceHealthCheckConfigurationPtrType) ToServiceHealthCheckConfigurationPtrOutputWithContext(ctx context.Context) ServiceHealthCheckConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHealthCheckConfigurationPtrOutput)
}

type ServiceHealthCheckConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceHealthCheckConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHealthCheckConfiguration)(nil)).Elem()
}

func (o ServiceHealthCheckConfigurationOutput) ToServiceHealthCheckConfigurationOutput() ServiceHealthCheckConfigurationOutput {
	return o
}

func (o ServiceHealthCheckConfigurationOutput) ToServiceHealthCheckConfigurationOutputWithContext(ctx context.Context) ServiceHealthCheckConfigurationOutput {
	return o
}

func (o ServiceHealthCheckConfigurationOutput) ToServiceHealthCheckConfigurationPtrOutput() ServiceHealthCheckConfigurationPtrOutput {
	return o.ToServiceHealthCheckConfigurationPtrOutputWithContext(context.Background())
}

func (o ServiceHealthCheckConfigurationOutput) ToServiceHealthCheckConfigurationPtrOutputWithContext(ctx context.Context) ServiceHealthCheckConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceHealthCheckConfiguration) *ServiceHealthCheckConfiguration {
		return &v
	}).(ServiceHealthCheckConfigurationPtrOutput)
}

// Number of consecutive checks that must succeed before App Runner decides that the service is healthy. Defaults to 1. Minimum value of 1. Maximum value of 20.
func (o ServiceHealthCheckConfigurationOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceHealthCheckConfiguration) *int { return v.HealthyThreshold }).(pulumi.IntPtrOutput)
}

// Time interval, in seconds, between health checks. Defaults to 5. Minimum value of 1. Maximum value of 20.
func (o ServiceHealthCheckConfigurationOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceHealthCheckConfiguration) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// URL to send requests to for health checks. Defaults to `/`. Minimum length of 0. Maximum length of 51200.
func (o ServiceHealthCheckConfigurationOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHealthCheckConfiguration) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// IP protocol that App Runner uses to perform health checks for your service. Valid values: `TCP`, `HTTP`. Defaults to `TCP`. If you set protocol to `HTTP`, App Runner sends health check requests to the HTTP path specified by `path`.
func (o ServiceHealthCheckConfigurationOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHealthCheckConfiguration) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

// Time, in seconds, to wait for a health check response before deciding it failed. Defaults to 2. Minimum value of  1. Maximum value of 20.
func (o ServiceHealthCheckConfigurationOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceHealthCheckConfiguration) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

// Number of consecutive checks that must fail before App Runner decides that the service is unhealthy. Defaults to 5. Minimum value of  1. Maximum value of 20.
func (o ServiceHealthCheckConfigurationOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceHealthCheckConfiguration) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

type ServiceHealthCheckConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServiceHealthCheckConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceHealthCheckConfiguration)(nil)).Elem()
}

func (o ServiceHealthCheckConfigurationPtrOutput) ToServiceHealthCheckConfigurationPtrOutput() ServiceHealthCheckConfigurationPtrOutput {
	return o
}

func (o ServiceHealthCheckConfigurationPtrOutput) ToServiceHealthCheckConfigurationPtrOutputWithContext(ctx context.Context) ServiceHealthCheckConfigurationPtrOutput {
	return o
}

func (o ServiceHealthCheckConfigurationPtrOutput) Elem() ServiceHealthCheckConfigurationOutput {
	return o.ApplyT(func(v *ServiceHealthCheckConfiguration) ServiceHealthCheckConfiguration {
		if v != nil {
			return *v
		}
		var ret ServiceHealthCheckConfiguration
		return ret
	}).(ServiceHealthCheckConfigurationOutput)
}

// Number of consecutive checks that must succeed before App Runner decides that the service is healthy. Defaults to 1. Minimum value of 1. Maximum value of 20.
func (o ServiceHealthCheckConfigurationPtrOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceHealthCheckConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.HealthyThreshold
	}).(pulumi.IntPtrOutput)
}

// Time interval, in seconds, between health checks. Defaults to 5. Minimum value of 1. Maximum value of 20.
func (o ServiceHealthCheckConfigurationPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceHealthCheckConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// URL to send requests to for health checks. Defaults to `/`. Minimum length of 0. Maximum length of 51200.
func (o ServiceHealthCheckConfigurationPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceHealthCheckConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// IP protocol that App Runner uses to perform health checks for your service. Valid values: `TCP`, `HTTP`. Defaults to `TCP`. If you set protocol to `HTTP`, App Runner sends health check requests to the HTTP path specified by `path`.
func (o ServiceHealthCheckConfigurationPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceHealthCheckConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

// Time, in seconds, to wait for a health check response before deciding it failed. Defaults to 2. Minimum value of  1. Maximum value of 20.
func (o ServiceHealthCheckConfigurationPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceHealthCheckConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

// Number of consecutive checks that must fail before App Runner decides that the service is unhealthy. Defaults to 5. Minimum value of  1. Maximum value of 20.
func (o ServiceHealthCheckConfigurationPtrOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceHealthCheckConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.UnhealthyThreshold
	}).(pulumi.IntPtrOutput)
}

type ServiceInstanceConfiguration struct {
	// Number of CPU units reserved for each instance of your App Runner service represented as a String. Defaults to `1024`. Valid values: `1024|2048|(1|2) vCPU`.
	Cpu *string `pulumi:"cpu"`
	// ARN of an IAM role that provides permissions to your App Runner service. These are permissions that your code needs when it calls any AWS APIs.
	InstanceRoleArn *string `pulumi:"instanceRoleArn"`
	// Amount of memory, in MB or GB, reserved for each instance of your App Runner service. Defaults to `2048`. Valid values: `2048|3072|4096|(2|3|4) GB`.
	Memory *string `pulumi:"memory"`
}

// ServiceInstanceConfigurationInput is an input type that accepts ServiceInstanceConfigurationArgs and ServiceInstanceConfigurationOutput values.
// You can construct a concrete instance of `ServiceInstanceConfigurationInput` via:
//
//	ServiceInstanceConfigurationArgs{...}
type ServiceInstanceConfigurationInput interface {
	pulumi.Input

	ToServiceInstanceConfigurationOutput() ServiceInstanceConfigurationOutput
	ToServiceInstanceConfigurationOutputWithContext(context.Context) ServiceInstanceConfigurationOutput
}

type ServiceInstanceConfigurationArgs struct {
	// Number of CPU units reserved for each instance of your App Runner service represented as a String. Defaults to `1024`. Valid values: `1024|2048|(1|2) vCPU`.
	Cpu pulumi.StringPtrInput `pulumi:"cpu"`
	// ARN of an IAM role that provides permissions to your App Runner service. These are permissions that your code needs when it calls any AWS APIs.
	InstanceRoleArn pulumi.StringPtrInput `pulumi:"instanceRoleArn"`
	// Amount of memory, in MB or GB, reserved for each instance of your App Runner service. Defaults to `2048`. Valid values: `2048|3072|4096|(2|3|4) GB`.
	Memory pulumi.StringPtrInput `pulumi:"memory"`
}

func (ServiceInstanceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceInstanceConfiguration)(nil)).Elem()
}

func (i ServiceInstanceConfigurationArgs) ToServiceInstanceConfigurationOutput() ServiceInstanceConfigurationOutput {
	return i.ToServiceInstanceConfigurationOutputWithContext(context.Background())
}

func (i ServiceInstanceConfigurationArgs) ToServiceInstanceConfigurationOutputWithContext(ctx context.Context) ServiceInstanceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInstanceConfigurationOutput)
}

func (i ServiceInstanceConfigurationArgs) ToServiceInstanceConfigurationPtrOutput() ServiceInstanceConfigurationPtrOutput {
	return i.ToServiceInstanceConfigurationPtrOutputWithContext(context.Background())
}

func (i ServiceInstanceConfigurationArgs) ToServiceInstanceConfigurationPtrOutputWithContext(ctx context.Context) ServiceInstanceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInstanceConfigurationOutput).ToServiceInstanceConfigurationPtrOutputWithContext(ctx)
}

// ServiceInstanceConfigurationPtrInput is an input type that accepts ServiceInstanceConfigurationArgs, ServiceInstanceConfigurationPtr and ServiceInstanceConfigurationPtrOutput values.
// You can construct a concrete instance of `ServiceInstanceConfigurationPtrInput` via:
//
//	        ServiceInstanceConfigurationArgs{...}
//
//	or:
//
//	        nil
type ServiceInstanceConfigurationPtrInput interface {
	pulumi.Input

	ToServiceInstanceConfigurationPtrOutput() ServiceInstanceConfigurationPtrOutput
	ToServiceInstanceConfigurationPtrOutputWithContext(context.Context) ServiceInstanceConfigurationPtrOutput
}

type serviceInstanceConfigurationPtrType ServiceInstanceConfigurationArgs

func ServiceInstanceConfigurationPtr(v *ServiceInstanceConfigurationArgs) ServiceInstanceConfigurationPtrInput {
	return (*serviceInstanceConfigurationPtrType)(v)
}

func (*serviceInstanceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceInstanceConfiguration)(nil)).Elem()
}

func (i *serviceInstanceConfigurationPtrType) ToServiceInstanceConfigurationPtrOutput() ServiceInstanceConfigurationPtrOutput {
	return i.ToServiceInstanceConfigurationPtrOutputWithContext(context.Background())
}

func (i *serviceInstanceConfigurationPtrType) ToServiceInstanceConfigurationPtrOutputWithContext(ctx context.Context) ServiceInstanceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceInstanceConfigurationPtrOutput)
}

type ServiceInstanceConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceInstanceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceInstanceConfiguration)(nil)).Elem()
}

func (o ServiceInstanceConfigurationOutput) ToServiceInstanceConfigurationOutput() ServiceInstanceConfigurationOutput {
	return o
}

func (o ServiceInstanceConfigurationOutput) ToServiceInstanceConfigurationOutputWithContext(ctx context.Context) ServiceInstanceConfigurationOutput {
	return o
}

func (o ServiceInstanceConfigurationOutput) ToServiceInstanceConfigurationPtrOutput() ServiceInstanceConfigurationPtrOutput {
	return o.ToServiceInstanceConfigurationPtrOutputWithContext(context.Background())
}

func (o ServiceInstanceConfigurationOutput) ToServiceInstanceConfigurationPtrOutputWithContext(ctx context.Context) ServiceInstanceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceInstanceConfiguration) *ServiceInstanceConfiguration {
		return &v
	}).(ServiceInstanceConfigurationPtrOutput)
}

// Number of CPU units reserved for each instance of your App Runner service represented as a String. Defaults to `1024`. Valid values: `1024|2048|(1|2) vCPU`.
func (o ServiceInstanceConfigurationOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInstanceConfiguration) *string { return v.Cpu }).(pulumi.StringPtrOutput)
}

// ARN of an IAM role that provides permissions to your App Runner service. These are permissions that your code needs when it calls any AWS APIs.
func (o ServiceInstanceConfigurationOutput) InstanceRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInstanceConfiguration) *string { return v.InstanceRoleArn }).(pulumi.StringPtrOutput)
}

// Amount of memory, in MB or GB, reserved for each instance of your App Runner service. Defaults to `2048`. Valid values: `2048|3072|4096|(2|3|4) GB`.
func (o ServiceInstanceConfigurationOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceInstanceConfiguration) *string { return v.Memory }).(pulumi.StringPtrOutput)
}

type ServiceInstanceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServiceInstanceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceInstanceConfiguration)(nil)).Elem()
}

func (o ServiceInstanceConfigurationPtrOutput) ToServiceInstanceConfigurationPtrOutput() ServiceInstanceConfigurationPtrOutput {
	return o
}

func (o ServiceInstanceConfigurationPtrOutput) ToServiceInstanceConfigurationPtrOutputWithContext(ctx context.Context) ServiceInstanceConfigurationPtrOutput {
	return o
}

func (o ServiceInstanceConfigurationPtrOutput) Elem() ServiceInstanceConfigurationOutput {
	return o.ApplyT(func(v *ServiceInstanceConfiguration) ServiceInstanceConfiguration {
		if v != nil {
			return *v
		}
		var ret ServiceInstanceConfiguration
		return ret
	}).(ServiceInstanceConfigurationOutput)
}

// Number of CPU units reserved for each instance of your App Runner service represented as a String. Defaults to `1024`. Valid values: `1024|2048|(1|2) vCPU`.
func (o ServiceInstanceConfigurationPtrOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInstanceConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.StringPtrOutput)
}

// ARN of an IAM role that provides permissions to your App Runner service. These are permissions that your code needs when it calls any AWS APIs.
func (o ServiceInstanceConfigurationPtrOutput) InstanceRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInstanceConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.InstanceRoleArn
	}).(pulumi.StringPtrOutput)
}

// Amount of memory, in MB or GB, reserved for each instance of your App Runner service. Defaults to `2048`. Valid values: `2048|3072|4096|(2|3|4) GB`.
func (o ServiceInstanceConfigurationPtrOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceInstanceConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Memory
	}).(pulumi.StringPtrOutput)
}

type ServiceNetworkConfiguration struct {
	// Network configuration settings for outbound message traffic. See Egress Configuration below for more details.
	EgressConfiguration *ServiceNetworkConfigurationEgressConfiguration `pulumi:"egressConfiguration"`
	// Network configuration settings for inbound network traffic. See Ingress Configuration below for more details.
	IngressConfiguration *ServiceNetworkConfigurationIngressConfiguration `pulumi:"ingressConfiguration"`
}

// ServiceNetworkConfigurationInput is an input type that accepts ServiceNetworkConfigurationArgs and ServiceNetworkConfigurationOutput values.
// You can construct a concrete instance of `ServiceNetworkConfigurationInput` via:
//
//	ServiceNetworkConfigurationArgs{...}
type ServiceNetworkConfigurationInput interface {
	pulumi.Input

	ToServiceNetworkConfigurationOutput() ServiceNetworkConfigurationOutput
	ToServiceNetworkConfigurationOutputWithContext(context.Context) ServiceNetworkConfigurationOutput
}

type ServiceNetworkConfigurationArgs struct {
	// Network configuration settings for outbound message traffic. See Egress Configuration below for more details.
	EgressConfiguration ServiceNetworkConfigurationEgressConfigurationPtrInput `pulumi:"egressConfiguration"`
	// Network configuration settings for inbound network traffic. See Ingress Configuration below for more details.
	IngressConfiguration ServiceNetworkConfigurationIngressConfigurationPtrInput `pulumi:"ingressConfiguration"`
}

func (ServiceNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNetworkConfiguration)(nil)).Elem()
}

func (i ServiceNetworkConfigurationArgs) ToServiceNetworkConfigurationOutput() ServiceNetworkConfigurationOutput {
	return i.ToServiceNetworkConfigurationOutputWithContext(context.Background())
}

func (i ServiceNetworkConfigurationArgs) ToServiceNetworkConfigurationOutputWithContext(ctx context.Context) ServiceNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkConfigurationOutput)
}

func (i ServiceNetworkConfigurationArgs) ToServiceNetworkConfigurationPtrOutput() ServiceNetworkConfigurationPtrOutput {
	return i.ToServiceNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i ServiceNetworkConfigurationArgs) ToServiceNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServiceNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkConfigurationOutput).ToServiceNetworkConfigurationPtrOutputWithContext(ctx)
}

// ServiceNetworkConfigurationPtrInput is an input type that accepts ServiceNetworkConfigurationArgs, ServiceNetworkConfigurationPtr and ServiceNetworkConfigurationPtrOutput values.
// You can construct a concrete instance of `ServiceNetworkConfigurationPtrInput` via:
//
//	        ServiceNetworkConfigurationArgs{...}
//
//	or:
//
//	        nil
type ServiceNetworkConfigurationPtrInput interface {
	pulumi.Input

	ToServiceNetworkConfigurationPtrOutput() ServiceNetworkConfigurationPtrOutput
	ToServiceNetworkConfigurationPtrOutputWithContext(context.Context) ServiceNetworkConfigurationPtrOutput
}

type serviceNetworkConfigurationPtrType ServiceNetworkConfigurationArgs

func ServiceNetworkConfigurationPtr(v *ServiceNetworkConfigurationArgs) ServiceNetworkConfigurationPtrInput {
	return (*serviceNetworkConfigurationPtrType)(v)
}

func (*serviceNetworkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNetworkConfiguration)(nil)).Elem()
}

func (i *serviceNetworkConfigurationPtrType) ToServiceNetworkConfigurationPtrOutput() ServiceNetworkConfigurationPtrOutput {
	return i.ToServiceNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i *serviceNetworkConfigurationPtrType) ToServiceNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServiceNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkConfigurationPtrOutput)
}

type ServiceNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNetworkConfiguration)(nil)).Elem()
}

func (o ServiceNetworkConfigurationOutput) ToServiceNetworkConfigurationOutput() ServiceNetworkConfigurationOutput {
	return o
}

func (o ServiceNetworkConfigurationOutput) ToServiceNetworkConfigurationOutputWithContext(ctx context.Context) ServiceNetworkConfigurationOutput {
	return o
}

func (o ServiceNetworkConfigurationOutput) ToServiceNetworkConfigurationPtrOutput() ServiceNetworkConfigurationPtrOutput {
	return o.ToServiceNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (o ServiceNetworkConfigurationOutput) ToServiceNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServiceNetworkConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNetworkConfiguration) *ServiceNetworkConfiguration {
		return &v
	}).(ServiceNetworkConfigurationPtrOutput)
}

// Network configuration settings for outbound message traffic. See Egress Configuration below for more details.
func (o ServiceNetworkConfigurationOutput) EgressConfiguration() ServiceNetworkConfigurationEgressConfigurationPtrOutput {
	return o.ApplyT(func(v ServiceNetworkConfiguration) *ServiceNetworkConfigurationEgressConfiguration {
		return v.EgressConfiguration
	}).(ServiceNetworkConfigurationEgressConfigurationPtrOutput)
}

// Network configuration settings for inbound network traffic. See Ingress Configuration below for more details.
func (o ServiceNetworkConfigurationOutput) IngressConfiguration() ServiceNetworkConfigurationIngressConfigurationPtrOutput {
	return o.ApplyT(func(v ServiceNetworkConfiguration) *ServiceNetworkConfigurationIngressConfiguration {
		return v.IngressConfiguration
	}).(ServiceNetworkConfigurationIngressConfigurationPtrOutput)
}

type ServiceNetworkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServiceNetworkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNetworkConfiguration)(nil)).Elem()
}

func (o ServiceNetworkConfigurationPtrOutput) ToServiceNetworkConfigurationPtrOutput() ServiceNetworkConfigurationPtrOutput {
	return o
}

func (o ServiceNetworkConfigurationPtrOutput) ToServiceNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServiceNetworkConfigurationPtrOutput {
	return o
}

func (o ServiceNetworkConfigurationPtrOutput) Elem() ServiceNetworkConfigurationOutput {
	return o.ApplyT(func(v *ServiceNetworkConfiguration) ServiceNetworkConfiguration {
		if v != nil {
			return *v
		}
		var ret ServiceNetworkConfiguration
		return ret
	}).(ServiceNetworkConfigurationOutput)
}

// Network configuration settings for outbound message traffic. See Egress Configuration below for more details.
func (o ServiceNetworkConfigurationPtrOutput) EgressConfiguration() ServiceNetworkConfigurationEgressConfigurationPtrOutput {
	return o.ApplyT(func(v *ServiceNetworkConfiguration) *ServiceNetworkConfigurationEgressConfiguration {
		if v == nil {
			return nil
		}
		return v.EgressConfiguration
	}).(ServiceNetworkConfigurationEgressConfigurationPtrOutput)
}

// Network configuration settings for inbound network traffic. See Ingress Configuration below for more details.
func (o ServiceNetworkConfigurationPtrOutput) IngressConfiguration() ServiceNetworkConfigurationIngressConfigurationPtrOutput {
	return o.ApplyT(func(v *ServiceNetworkConfiguration) *ServiceNetworkConfigurationIngressConfiguration {
		if v == nil {
			return nil
		}
		return v.IngressConfiguration
	}).(ServiceNetworkConfigurationIngressConfigurationPtrOutput)
}

type ServiceNetworkConfigurationEgressConfiguration struct {
	// The type of egress configuration. Valid values are: `DEFAULT` and `VPC`.
	EgressType *string `pulumi:"egressType"`
	// The Amazon Resource Name (ARN) of the App Runner VPC connector that you want to associate with your App Runner service. Only valid when `EgressType = VPC`.
	VpcConnectorArn *string `pulumi:"vpcConnectorArn"`
}

// ServiceNetworkConfigurationEgressConfigurationInput is an input type that accepts ServiceNetworkConfigurationEgressConfigurationArgs and ServiceNetworkConfigurationEgressConfigurationOutput values.
// You can construct a concrete instance of `ServiceNetworkConfigurationEgressConfigurationInput` via:
//
//	ServiceNetworkConfigurationEgressConfigurationArgs{...}
type ServiceNetworkConfigurationEgressConfigurationInput interface {
	pulumi.Input

	ToServiceNetworkConfigurationEgressConfigurationOutput() ServiceNetworkConfigurationEgressConfigurationOutput
	ToServiceNetworkConfigurationEgressConfigurationOutputWithContext(context.Context) ServiceNetworkConfigurationEgressConfigurationOutput
}

type ServiceNetworkConfigurationEgressConfigurationArgs struct {
	// The type of egress configuration. Valid values are: `DEFAULT` and `VPC`.
	EgressType pulumi.StringPtrInput `pulumi:"egressType"`
	// The Amazon Resource Name (ARN) of the App Runner VPC connector that you want to associate with your App Runner service. Only valid when `EgressType = VPC`.
	VpcConnectorArn pulumi.StringPtrInput `pulumi:"vpcConnectorArn"`
}

func (ServiceNetworkConfigurationEgressConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNetworkConfigurationEgressConfiguration)(nil)).Elem()
}

func (i ServiceNetworkConfigurationEgressConfigurationArgs) ToServiceNetworkConfigurationEgressConfigurationOutput() ServiceNetworkConfigurationEgressConfigurationOutput {
	return i.ToServiceNetworkConfigurationEgressConfigurationOutputWithContext(context.Background())
}

func (i ServiceNetworkConfigurationEgressConfigurationArgs) ToServiceNetworkConfigurationEgressConfigurationOutputWithContext(ctx context.Context) ServiceNetworkConfigurationEgressConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkConfigurationEgressConfigurationOutput)
}

func (i ServiceNetworkConfigurationEgressConfigurationArgs) ToServiceNetworkConfigurationEgressConfigurationPtrOutput() ServiceNetworkConfigurationEgressConfigurationPtrOutput {
	return i.ToServiceNetworkConfigurationEgressConfigurationPtrOutputWithContext(context.Background())
}

func (i ServiceNetworkConfigurationEgressConfigurationArgs) ToServiceNetworkConfigurationEgressConfigurationPtrOutputWithContext(ctx context.Context) ServiceNetworkConfigurationEgressConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkConfigurationEgressConfigurationOutput).ToServiceNetworkConfigurationEgressConfigurationPtrOutputWithContext(ctx)
}

// ServiceNetworkConfigurationEgressConfigurationPtrInput is an input type that accepts ServiceNetworkConfigurationEgressConfigurationArgs, ServiceNetworkConfigurationEgressConfigurationPtr and ServiceNetworkConfigurationEgressConfigurationPtrOutput values.
// You can construct a concrete instance of `ServiceNetworkConfigurationEgressConfigurationPtrInput` via:
//
//	        ServiceNetworkConfigurationEgressConfigurationArgs{...}
//
//	or:
//
//	        nil
type ServiceNetworkConfigurationEgressConfigurationPtrInput interface {
	pulumi.Input

	ToServiceNetworkConfigurationEgressConfigurationPtrOutput() ServiceNetworkConfigurationEgressConfigurationPtrOutput
	ToServiceNetworkConfigurationEgressConfigurationPtrOutputWithContext(context.Context) ServiceNetworkConfigurationEgressConfigurationPtrOutput
}

type serviceNetworkConfigurationEgressConfigurationPtrType ServiceNetworkConfigurationEgressConfigurationArgs

func ServiceNetworkConfigurationEgressConfigurationPtr(v *ServiceNetworkConfigurationEgressConfigurationArgs) ServiceNetworkConfigurationEgressConfigurationPtrInput {
	return (*serviceNetworkConfigurationEgressConfigurationPtrType)(v)
}

func (*serviceNetworkConfigurationEgressConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNetworkConfigurationEgressConfiguration)(nil)).Elem()
}

func (i *serviceNetworkConfigurationEgressConfigurationPtrType) ToServiceNetworkConfigurationEgressConfigurationPtrOutput() ServiceNetworkConfigurationEgressConfigurationPtrOutput {
	return i.ToServiceNetworkConfigurationEgressConfigurationPtrOutputWithContext(context.Background())
}

func (i *serviceNetworkConfigurationEgressConfigurationPtrType) ToServiceNetworkConfigurationEgressConfigurationPtrOutputWithContext(ctx context.Context) ServiceNetworkConfigurationEgressConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkConfigurationEgressConfigurationPtrOutput)
}

type ServiceNetworkConfigurationEgressConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceNetworkConfigurationEgressConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNetworkConfigurationEgressConfiguration)(nil)).Elem()
}

func (o ServiceNetworkConfigurationEgressConfigurationOutput) ToServiceNetworkConfigurationEgressConfigurationOutput() ServiceNetworkConfigurationEgressConfigurationOutput {
	return o
}

func (o ServiceNetworkConfigurationEgressConfigurationOutput) ToServiceNetworkConfigurationEgressConfigurationOutputWithContext(ctx context.Context) ServiceNetworkConfigurationEgressConfigurationOutput {
	return o
}

func (o ServiceNetworkConfigurationEgressConfigurationOutput) ToServiceNetworkConfigurationEgressConfigurationPtrOutput() ServiceNetworkConfigurationEgressConfigurationPtrOutput {
	return o.ToServiceNetworkConfigurationEgressConfigurationPtrOutputWithContext(context.Background())
}

func (o ServiceNetworkConfigurationEgressConfigurationOutput) ToServiceNetworkConfigurationEgressConfigurationPtrOutputWithContext(ctx context.Context) ServiceNetworkConfigurationEgressConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNetworkConfigurationEgressConfiguration) *ServiceNetworkConfigurationEgressConfiguration {
		return &v
	}).(ServiceNetworkConfigurationEgressConfigurationPtrOutput)
}

// The type of egress configuration. Valid values are: `DEFAULT` and `VPC`.
func (o ServiceNetworkConfigurationEgressConfigurationOutput) EgressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNetworkConfigurationEgressConfiguration) *string { return v.EgressType }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the App Runner VPC connector that you want to associate with your App Runner service. Only valid when `EgressType = VPC`.
func (o ServiceNetworkConfigurationEgressConfigurationOutput) VpcConnectorArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceNetworkConfigurationEgressConfiguration) *string { return v.VpcConnectorArn }).(pulumi.StringPtrOutput)
}

type ServiceNetworkConfigurationEgressConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServiceNetworkConfigurationEgressConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNetworkConfigurationEgressConfiguration)(nil)).Elem()
}

func (o ServiceNetworkConfigurationEgressConfigurationPtrOutput) ToServiceNetworkConfigurationEgressConfigurationPtrOutput() ServiceNetworkConfigurationEgressConfigurationPtrOutput {
	return o
}

func (o ServiceNetworkConfigurationEgressConfigurationPtrOutput) ToServiceNetworkConfigurationEgressConfigurationPtrOutputWithContext(ctx context.Context) ServiceNetworkConfigurationEgressConfigurationPtrOutput {
	return o
}

func (o ServiceNetworkConfigurationEgressConfigurationPtrOutput) Elem() ServiceNetworkConfigurationEgressConfigurationOutput {
	return o.ApplyT(func(v *ServiceNetworkConfigurationEgressConfiguration) ServiceNetworkConfigurationEgressConfiguration {
		if v != nil {
			return *v
		}
		var ret ServiceNetworkConfigurationEgressConfiguration
		return ret
	}).(ServiceNetworkConfigurationEgressConfigurationOutput)
}

// The type of egress configuration. Valid values are: `DEFAULT` and `VPC`.
func (o ServiceNetworkConfigurationEgressConfigurationPtrOutput) EgressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNetworkConfigurationEgressConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.EgressType
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the App Runner VPC connector that you want to associate with your App Runner service. Only valid when `EgressType = VPC`.
func (o ServiceNetworkConfigurationEgressConfigurationPtrOutput) VpcConnectorArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceNetworkConfigurationEgressConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.VpcConnectorArn
	}).(pulumi.StringPtrOutput)
}

type ServiceNetworkConfigurationIngressConfiguration struct {
	// Specifies whether your App Runner service is publicly accessible. To make the service publicly accessible set it to True. To make the service privately accessible, from only within an Amazon VPC set it to False.
	IsPubliclyAccessible *bool `pulumi:"isPubliclyAccessible"`
}

// ServiceNetworkConfigurationIngressConfigurationInput is an input type that accepts ServiceNetworkConfigurationIngressConfigurationArgs and ServiceNetworkConfigurationIngressConfigurationOutput values.
// You can construct a concrete instance of `ServiceNetworkConfigurationIngressConfigurationInput` via:
//
//	ServiceNetworkConfigurationIngressConfigurationArgs{...}
type ServiceNetworkConfigurationIngressConfigurationInput interface {
	pulumi.Input

	ToServiceNetworkConfigurationIngressConfigurationOutput() ServiceNetworkConfigurationIngressConfigurationOutput
	ToServiceNetworkConfigurationIngressConfigurationOutputWithContext(context.Context) ServiceNetworkConfigurationIngressConfigurationOutput
}

type ServiceNetworkConfigurationIngressConfigurationArgs struct {
	// Specifies whether your App Runner service is publicly accessible. To make the service publicly accessible set it to True. To make the service privately accessible, from only within an Amazon VPC set it to False.
	IsPubliclyAccessible pulumi.BoolPtrInput `pulumi:"isPubliclyAccessible"`
}

func (ServiceNetworkConfigurationIngressConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNetworkConfigurationIngressConfiguration)(nil)).Elem()
}

func (i ServiceNetworkConfigurationIngressConfigurationArgs) ToServiceNetworkConfigurationIngressConfigurationOutput() ServiceNetworkConfigurationIngressConfigurationOutput {
	return i.ToServiceNetworkConfigurationIngressConfigurationOutputWithContext(context.Background())
}

func (i ServiceNetworkConfigurationIngressConfigurationArgs) ToServiceNetworkConfigurationIngressConfigurationOutputWithContext(ctx context.Context) ServiceNetworkConfigurationIngressConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkConfigurationIngressConfigurationOutput)
}

func (i ServiceNetworkConfigurationIngressConfigurationArgs) ToServiceNetworkConfigurationIngressConfigurationPtrOutput() ServiceNetworkConfigurationIngressConfigurationPtrOutput {
	return i.ToServiceNetworkConfigurationIngressConfigurationPtrOutputWithContext(context.Background())
}

func (i ServiceNetworkConfigurationIngressConfigurationArgs) ToServiceNetworkConfigurationIngressConfigurationPtrOutputWithContext(ctx context.Context) ServiceNetworkConfigurationIngressConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkConfigurationIngressConfigurationOutput).ToServiceNetworkConfigurationIngressConfigurationPtrOutputWithContext(ctx)
}

// ServiceNetworkConfigurationIngressConfigurationPtrInput is an input type that accepts ServiceNetworkConfigurationIngressConfigurationArgs, ServiceNetworkConfigurationIngressConfigurationPtr and ServiceNetworkConfigurationIngressConfigurationPtrOutput values.
// You can construct a concrete instance of `ServiceNetworkConfigurationIngressConfigurationPtrInput` via:
//
//	        ServiceNetworkConfigurationIngressConfigurationArgs{...}
//
//	or:
//
//	        nil
type ServiceNetworkConfigurationIngressConfigurationPtrInput interface {
	pulumi.Input

	ToServiceNetworkConfigurationIngressConfigurationPtrOutput() ServiceNetworkConfigurationIngressConfigurationPtrOutput
	ToServiceNetworkConfigurationIngressConfigurationPtrOutputWithContext(context.Context) ServiceNetworkConfigurationIngressConfigurationPtrOutput
}

type serviceNetworkConfigurationIngressConfigurationPtrType ServiceNetworkConfigurationIngressConfigurationArgs

func ServiceNetworkConfigurationIngressConfigurationPtr(v *ServiceNetworkConfigurationIngressConfigurationArgs) ServiceNetworkConfigurationIngressConfigurationPtrInput {
	return (*serviceNetworkConfigurationIngressConfigurationPtrType)(v)
}

func (*serviceNetworkConfigurationIngressConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNetworkConfigurationIngressConfiguration)(nil)).Elem()
}

func (i *serviceNetworkConfigurationIngressConfigurationPtrType) ToServiceNetworkConfigurationIngressConfigurationPtrOutput() ServiceNetworkConfigurationIngressConfigurationPtrOutput {
	return i.ToServiceNetworkConfigurationIngressConfigurationPtrOutputWithContext(context.Background())
}

func (i *serviceNetworkConfigurationIngressConfigurationPtrType) ToServiceNetworkConfigurationIngressConfigurationPtrOutputWithContext(ctx context.Context) ServiceNetworkConfigurationIngressConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkConfigurationIngressConfigurationPtrOutput)
}

type ServiceNetworkConfigurationIngressConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceNetworkConfigurationIngressConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNetworkConfigurationIngressConfiguration)(nil)).Elem()
}

func (o ServiceNetworkConfigurationIngressConfigurationOutput) ToServiceNetworkConfigurationIngressConfigurationOutput() ServiceNetworkConfigurationIngressConfigurationOutput {
	return o
}

func (o ServiceNetworkConfigurationIngressConfigurationOutput) ToServiceNetworkConfigurationIngressConfigurationOutputWithContext(ctx context.Context) ServiceNetworkConfigurationIngressConfigurationOutput {
	return o
}

func (o ServiceNetworkConfigurationIngressConfigurationOutput) ToServiceNetworkConfigurationIngressConfigurationPtrOutput() ServiceNetworkConfigurationIngressConfigurationPtrOutput {
	return o.ToServiceNetworkConfigurationIngressConfigurationPtrOutputWithContext(context.Background())
}

func (o ServiceNetworkConfigurationIngressConfigurationOutput) ToServiceNetworkConfigurationIngressConfigurationPtrOutputWithContext(ctx context.Context) ServiceNetworkConfigurationIngressConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceNetworkConfigurationIngressConfiguration) *ServiceNetworkConfigurationIngressConfiguration {
		return &v
	}).(ServiceNetworkConfigurationIngressConfigurationPtrOutput)
}

// Specifies whether your App Runner service is publicly accessible. To make the service publicly accessible set it to True. To make the service privately accessible, from only within an Amazon VPC set it to False.
func (o ServiceNetworkConfigurationIngressConfigurationOutput) IsPubliclyAccessible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNetworkConfigurationIngressConfiguration) *bool { return v.IsPubliclyAccessible }).(pulumi.BoolPtrOutput)
}

type ServiceNetworkConfigurationIngressConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServiceNetworkConfigurationIngressConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNetworkConfigurationIngressConfiguration)(nil)).Elem()
}

func (o ServiceNetworkConfigurationIngressConfigurationPtrOutput) ToServiceNetworkConfigurationIngressConfigurationPtrOutput() ServiceNetworkConfigurationIngressConfigurationPtrOutput {
	return o
}

func (o ServiceNetworkConfigurationIngressConfigurationPtrOutput) ToServiceNetworkConfigurationIngressConfigurationPtrOutputWithContext(ctx context.Context) ServiceNetworkConfigurationIngressConfigurationPtrOutput {
	return o
}

func (o ServiceNetworkConfigurationIngressConfigurationPtrOutput) Elem() ServiceNetworkConfigurationIngressConfigurationOutput {
	return o.ApplyT(func(v *ServiceNetworkConfigurationIngressConfiguration) ServiceNetworkConfigurationIngressConfiguration {
		if v != nil {
			return *v
		}
		var ret ServiceNetworkConfigurationIngressConfiguration
		return ret
	}).(ServiceNetworkConfigurationIngressConfigurationOutput)
}

// Specifies whether your App Runner service is publicly accessible. To make the service publicly accessible set it to True. To make the service privately accessible, from only within an Amazon VPC set it to False.
func (o ServiceNetworkConfigurationIngressConfigurationPtrOutput) IsPubliclyAccessible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceNetworkConfigurationIngressConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.IsPubliclyAccessible
	}).(pulumi.BoolPtrOutput)
}

type ServiceObservabilityConfiguration struct {
	// ARN of the observability configuration that is associated with the service. Specified only when `observabilityEnabled` is `true`.
	ObservabilityConfigurationArn *string `pulumi:"observabilityConfigurationArn"`
	// When `true`, an observability configuration resource is associated with the service.
	ObservabilityEnabled bool `pulumi:"observabilityEnabled"`
}

// ServiceObservabilityConfigurationInput is an input type that accepts ServiceObservabilityConfigurationArgs and ServiceObservabilityConfigurationOutput values.
// You can construct a concrete instance of `ServiceObservabilityConfigurationInput` via:
//
//	ServiceObservabilityConfigurationArgs{...}
type ServiceObservabilityConfigurationInput interface {
	pulumi.Input

	ToServiceObservabilityConfigurationOutput() ServiceObservabilityConfigurationOutput
	ToServiceObservabilityConfigurationOutputWithContext(context.Context) ServiceObservabilityConfigurationOutput
}

type ServiceObservabilityConfigurationArgs struct {
	// ARN of the observability configuration that is associated with the service. Specified only when `observabilityEnabled` is `true`.
	ObservabilityConfigurationArn pulumi.StringPtrInput `pulumi:"observabilityConfigurationArn"`
	// When `true`, an observability configuration resource is associated with the service.
	ObservabilityEnabled pulumi.BoolInput `pulumi:"observabilityEnabled"`
}

func (ServiceObservabilityConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceObservabilityConfiguration)(nil)).Elem()
}

func (i ServiceObservabilityConfigurationArgs) ToServiceObservabilityConfigurationOutput() ServiceObservabilityConfigurationOutput {
	return i.ToServiceObservabilityConfigurationOutputWithContext(context.Background())
}

func (i ServiceObservabilityConfigurationArgs) ToServiceObservabilityConfigurationOutputWithContext(ctx context.Context) ServiceObservabilityConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceObservabilityConfigurationOutput)
}

func (i ServiceObservabilityConfigurationArgs) ToServiceObservabilityConfigurationPtrOutput() ServiceObservabilityConfigurationPtrOutput {
	return i.ToServiceObservabilityConfigurationPtrOutputWithContext(context.Background())
}

func (i ServiceObservabilityConfigurationArgs) ToServiceObservabilityConfigurationPtrOutputWithContext(ctx context.Context) ServiceObservabilityConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceObservabilityConfigurationOutput).ToServiceObservabilityConfigurationPtrOutputWithContext(ctx)
}

// ServiceObservabilityConfigurationPtrInput is an input type that accepts ServiceObservabilityConfigurationArgs, ServiceObservabilityConfigurationPtr and ServiceObservabilityConfigurationPtrOutput values.
// You can construct a concrete instance of `ServiceObservabilityConfigurationPtrInput` via:
//
//	        ServiceObservabilityConfigurationArgs{...}
//
//	or:
//
//	        nil
type ServiceObservabilityConfigurationPtrInput interface {
	pulumi.Input

	ToServiceObservabilityConfigurationPtrOutput() ServiceObservabilityConfigurationPtrOutput
	ToServiceObservabilityConfigurationPtrOutputWithContext(context.Context) ServiceObservabilityConfigurationPtrOutput
}

type serviceObservabilityConfigurationPtrType ServiceObservabilityConfigurationArgs

func ServiceObservabilityConfigurationPtr(v *ServiceObservabilityConfigurationArgs) ServiceObservabilityConfigurationPtrInput {
	return (*serviceObservabilityConfigurationPtrType)(v)
}

func (*serviceObservabilityConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceObservabilityConfiguration)(nil)).Elem()
}

func (i *serviceObservabilityConfigurationPtrType) ToServiceObservabilityConfigurationPtrOutput() ServiceObservabilityConfigurationPtrOutput {
	return i.ToServiceObservabilityConfigurationPtrOutputWithContext(context.Background())
}

func (i *serviceObservabilityConfigurationPtrType) ToServiceObservabilityConfigurationPtrOutputWithContext(ctx context.Context) ServiceObservabilityConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceObservabilityConfigurationPtrOutput)
}

type ServiceObservabilityConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceObservabilityConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceObservabilityConfiguration)(nil)).Elem()
}

func (o ServiceObservabilityConfigurationOutput) ToServiceObservabilityConfigurationOutput() ServiceObservabilityConfigurationOutput {
	return o
}

func (o ServiceObservabilityConfigurationOutput) ToServiceObservabilityConfigurationOutputWithContext(ctx context.Context) ServiceObservabilityConfigurationOutput {
	return o
}

func (o ServiceObservabilityConfigurationOutput) ToServiceObservabilityConfigurationPtrOutput() ServiceObservabilityConfigurationPtrOutput {
	return o.ToServiceObservabilityConfigurationPtrOutputWithContext(context.Background())
}

func (o ServiceObservabilityConfigurationOutput) ToServiceObservabilityConfigurationPtrOutputWithContext(ctx context.Context) ServiceObservabilityConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceObservabilityConfiguration) *ServiceObservabilityConfiguration {
		return &v
	}).(ServiceObservabilityConfigurationPtrOutput)
}

// ARN of the observability configuration that is associated with the service. Specified only when `observabilityEnabled` is `true`.
func (o ServiceObservabilityConfigurationOutput) ObservabilityConfigurationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceObservabilityConfiguration) *string { return v.ObservabilityConfigurationArn }).(pulumi.StringPtrOutput)
}

// When `true`, an observability configuration resource is associated with the service.
func (o ServiceObservabilityConfigurationOutput) ObservabilityEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ServiceObservabilityConfiguration) bool { return v.ObservabilityEnabled }).(pulumi.BoolOutput)
}

type ServiceObservabilityConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServiceObservabilityConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceObservabilityConfiguration)(nil)).Elem()
}

func (o ServiceObservabilityConfigurationPtrOutput) ToServiceObservabilityConfigurationPtrOutput() ServiceObservabilityConfigurationPtrOutput {
	return o
}

func (o ServiceObservabilityConfigurationPtrOutput) ToServiceObservabilityConfigurationPtrOutputWithContext(ctx context.Context) ServiceObservabilityConfigurationPtrOutput {
	return o
}

func (o ServiceObservabilityConfigurationPtrOutput) Elem() ServiceObservabilityConfigurationOutput {
	return o.ApplyT(func(v *ServiceObservabilityConfiguration) ServiceObservabilityConfiguration {
		if v != nil {
			return *v
		}
		var ret ServiceObservabilityConfiguration
		return ret
	}).(ServiceObservabilityConfigurationOutput)
}

// ARN of the observability configuration that is associated with the service. Specified only when `observabilityEnabled` is `true`.
func (o ServiceObservabilityConfigurationPtrOutput) ObservabilityConfigurationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceObservabilityConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ObservabilityConfigurationArn
	}).(pulumi.StringPtrOutput)
}

// When `true`, an observability configuration resource is associated with the service.
func (o ServiceObservabilityConfigurationPtrOutput) ObservabilityEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceObservabilityConfiguration) *bool {
		if v == nil {
			return nil
		}
		return &v.ObservabilityEnabled
	}).(pulumi.BoolPtrOutput)
}

type ServiceSourceConfiguration struct {
	// Describes resources needed to authenticate access to some source repositories. See Authentication Configuration below for more details.
	AuthenticationConfiguration *ServiceSourceConfigurationAuthenticationConfiguration `pulumi:"authenticationConfiguration"`
	// Whether continuous integration from the source repository is enabled for the App Runner service. If set to `true`, each repository change (source code commit or new image version) starts a deployment. Defaults to `true`.
	AutoDeploymentsEnabled *bool `pulumi:"autoDeploymentsEnabled"`
	// Description of a source code repository. See Code Repository below for more details.
	CodeRepository *ServiceSourceConfigurationCodeRepository `pulumi:"codeRepository"`
	// Description of a source image repository. See Image Repository below for more details.
	ImageRepository *ServiceSourceConfigurationImageRepository `pulumi:"imageRepository"`
}

// ServiceSourceConfigurationInput is an input type that accepts ServiceSourceConfigurationArgs and ServiceSourceConfigurationOutput values.
// You can construct a concrete instance of `ServiceSourceConfigurationInput` via:
//
//	ServiceSourceConfigurationArgs{...}
type ServiceSourceConfigurationInput interface {
	pulumi.Input

	ToServiceSourceConfigurationOutput() ServiceSourceConfigurationOutput
	ToServiceSourceConfigurationOutputWithContext(context.Context) ServiceSourceConfigurationOutput
}

type ServiceSourceConfigurationArgs struct {
	// Describes resources needed to authenticate access to some source repositories. See Authentication Configuration below for more details.
	AuthenticationConfiguration ServiceSourceConfigurationAuthenticationConfigurationPtrInput `pulumi:"authenticationConfiguration"`
	// Whether continuous integration from the source repository is enabled for the App Runner service. If set to `true`, each repository change (source code commit or new image version) starts a deployment. Defaults to `true`.
	AutoDeploymentsEnabled pulumi.BoolPtrInput `pulumi:"autoDeploymentsEnabled"`
	// Description of a source code repository. See Code Repository below for more details.
	CodeRepository ServiceSourceConfigurationCodeRepositoryPtrInput `pulumi:"codeRepository"`
	// Description of a source image repository. See Image Repository below for more details.
	ImageRepository ServiceSourceConfigurationImageRepositoryPtrInput `pulumi:"imageRepository"`
}

func (ServiceSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSourceConfiguration)(nil)).Elem()
}

func (i ServiceSourceConfigurationArgs) ToServiceSourceConfigurationOutput() ServiceSourceConfigurationOutput {
	return i.ToServiceSourceConfigurationOutputWithContext(context.Background())
}

func (i ServiceSourceConfigurationArgs) ToServiceSourceConfigurationOutputWithContext(ctx context.Context) ServiceSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSourceConfigurationOutput)
}

func (i ServiceSourceConfigurationArgs) ToServiceSourceConfigurationPtrOutput() ServiceSourceConfigurationPtrOutput {
	return i.ToServiceSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i ServiceSourceConfigurationArgs) ToServiceSourceConfigurationPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSourceConfigurationOutput).ToServiceSourceConfigurationPtrOutputWithContext(ctx)
}

// ServiceSourceConfigurationPtrInput is an input type that accepts ServiceSourceConfigurationArgs, ServiceSourceConfigurationPtr and ServiceSourceConfigurationPtrOutput values.
// You can construct a concrete instance of `ServiceSourceConfigurationPtrInput` via:
//
//	        ServiceSourceConfigurationArgs{...}
//
//	or:
//
//	        nil
type ServiceSourceConfigurationPtrInput interface {
	pulumi.Input

	ToServiceSourceConfigurationPtrOutput() ServiceSourceConfigurationPtrOutput
	ToServiceSourceConfigurationPtrOutputWithContext(context.Context) ServiceSourceConfigurationPtrOutput
}

type serviceSourceConfigurationPtrType ServiceSourceConfigurationArgs

func ServiceSourceConfigurationPtr(v *ServiceSourceConfigurationArgs) ServiceSourceConfigurationPtrInput {
	return (*serviceSourceConfigurationPtrType)(v)
}

func (*serviceSourceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSourceConfiguration)(nil)).Elem()
}

func (i *serviceSourceConfigurationPtrType) ToServiceSourceConfigurationPtrOutput() ServiceSourceConfigurationPtrOutput {
	return i.ToServiceSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i *serviceSourceConfigurationPtrType) ToServiceSourceConfigurationPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSourceConfigurationPtrOutput)
}

type ServiceSourceConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSourceConfiguration)(nil)).Elem()
}

func (o ServiceSourceConfigurationOutput) ToServiceSourceConfigurationOutput() ServiceSourceConfigurationOutput {
	return o
}

func (o ServiceSourceConfigurationOutput) ToServiceSourceConfigurationOutputWithContext(ctx context.Context) ServiceSourceConfigurationOutput {
	return o
}

func (o ServiceSourceConfigurationOutput) ToServiceSourceConfigurationPtrOutput() ServiceSourceConfigurationPtrOutput {
	return o.ToServiceSourceConfigurationPtrOutputWithContext(context.Background())
}

func (o ServiceSourceConfigurationOutput) ToServiceSourceConfigurationPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceSourceConfiguration) *ServiceSourceConfiguration {
		return &v
	}).(ServiceSourceConfigurationPtrOutput)
}

// Describes resources needed to authenticate access to some source repositories. See Authentication Configuration below for more details.
func (o ServiceSourceConfigurationOutput) AuthenticationConfiguration() ServiceSourceConfigurationAuthenticationConfigurationPtrOutput {
	return o.ApplyT(func(v ServiceSourceConfiguration) *ServiceSourceConfigurationAuthenticationConfiguration {
		return v.AuthenticationConfiguration
	}).(ServiceSourceConfigurationAuthenticationConfigurationPtrOutput)
}

// Whether continuous integration from the source repository is enabled for the App Runner service. If set to `true`, each repository change (source code commit or new image version) starts a deployment. Defaults to `true`.
func (o ServiceSourceConfigurationOutput) AutoDeploymentsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceSourceConfiguration) *bool { return v.AutoDeploymentsEnabled }).(pulumi.BoolPtrOutput)
}

// Description of a source code repository. See Code Repository below for more details.
func (o ServiceSourceConfigurationOutput) CodeRepository() ServiceSourceConfigurationCodeRepositoryPtrOutput {
	return o.ApplyT(func(v ServiceSourceConfiguration) *ServiceSourceConfigurationCodeRepository { return v.CodeRepository }).(ServiceSourceConfigurationCodeRepositoryPtrOutput)
}

// Description of a source image repository. See Image Repository below for more details.
func (o ServiceSourceConfigurationOutput) ImageRepository() ServiceSourceConfigurationImageRepositoryPtrOutput {
	return o.ApplyT(func(v ServiceSourceConfiguration) *ServiceSourceConfigurationImageRepository {
		return v.ImageRepository
	}).(ServiceSourceConfigurationImageRepositoryPtrOutput)
}

type ServiceSourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServiceSourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSourceConfiguration)(nil)).Elem()
}

func (o ServiceSourceConfigurationPtrOutput) ToServiceSourceConfigurationPtrOutput() ServiceSourceConfigurationPtrOutput {
	return o
}

func (o ServiceSourceConfigurationPtrOutput) ToServiceSourceConfigurationPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationPtrOutput {
	return o
}

func (o ServiceSourceConfigurationPtrOutput) Elem() ServiceSourceConfigurationOutput {
	return o.ApplyT(func(v *ServiceSourceConfiguration) ServiceSourceConfiguration {
		if v != nil {
			return *v
		}
		var ret ServiceSourceConfiguration
		return ret
	}).(ServiceSourceConfigurationOutput)
}

// Describes resources needed to authenticate access to some source repositories. See Authentication Configuration below for more details.
func (o ServiceSourceConfigurationPtrOutput) AuthenticationConfiguration() ServiceSourceConfigurationAuthenticationConfigurationPtrOutput {
	return o.ApplyT(func(v *ServiceSourceConfiguration) *ServiceSourceConfigurationAuthenticationConfiguration {
		if v == nil {
			return nil
		}
		return v.AuthenticationConfiguration
	}).(ServiceSourceConfigurationAuthenticationConfigurationPtrOutput)
}

// Whether continuous integration from the source repository is enabled for the App Runner service. If set to `true`, each repository change (source code commit or new image version) starts a deployment. Defaults to `true`.
func (o ServiceSourceConfigurationPtrOutput) AutoDeploymentsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceSourceConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.AutoDeploymentsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Description of a source code repository. See Code Repository below for more details.
func (o ServiceSourceConfigurationPtrOutput) CodeRepository() ServiceSourceConfigurationCodeRepositoryPtrOutput {
	return o.ApplyT(func(v *ServiceSourceConfiguration) *ServiceSourceConfigurationCodeRepository {
		if v == nil {
			return nil
		}
		return v.CodeRepository
	}).(ServiceSourceConfigurationCodeRepositoryPtrOutput)
}

// Description of a source image repository. See Image Repository below for more details.
func (o ServiceSourceConfigurationPtrOutput) ImageRepository() ServiceSourceConfigurationImageRepositoryPtrOutput {
	return o.ApplyT(func(v *ServiceSourceConfiguration) *ServiceSourceConfigurationImageRepository {
		if v == nil {
			return nil
		}
		return v.ImageRepository
	}).(ServiceSourceConfigurationImageRepositoryPtrOutput)
}

type ServiceSourceConfigurationAuthenticationConfiguration struct {
	// ARN of the IAM role that grants the App Runner service access to a source repository. Required for ECR image repositories (but not for ECR Public)
	AccessRoleArn *string `pulumi:"accessRoleArn"`
	// ARN of the App Runner connection that enables the App Runner service to connect to a source repository. Required for GitHub code repositories.
	ConnectionArn *string `pulumi:"connectionArn"`
}

// ServiceSourceConfigurationAuthenticationConfigurationInput is an input type that accepts ServiceSourceConfigurationAuthenticationConfigurationArgs and ServiceSourceConfigurationAuthenticationConfigurationOutput values.
// You can construct a concrete instance of `ServiceSourceConfigurationAuthenticationConfigurationInput` via:
//
//	ServiceSourceConfigurationAuthenticationConfigurationArgs{...}
type ServiceSourceConfigurationAuthenticationConfigurationInput interface {
	pulumi.Input

	ToServiceSourceConfigurationAuthenticationConfigurationOutput() ServiceSourceConfigurationAuthenticationConfigurationOutput
	ToServiceSourceConfigurationAuthenticationConfigurationOutputWithContext(context.Context) ServiceSourceConfigurationAuthenticationConfigurationOutput
}

type ServiceSourceConfigurationAuthenticationConfigurationArgs struct {
	// ARN of the IAM role that grants the App Runner service access to a source repository. Required for ECR image repositories (but not for ECR Public)
	AccessRoleArn pulumi.StringPtrInput `pulumi:"accessRoleArn"`
	// ARN of the App Runner connection that enables the App Runner service to connect to a source repository. Required for GitHub code repositories.
	ConnectionArn pulumi.StringPtrInput `pulumi:"connectionArn"`
}

func (ServiceSourceConfigurationAuthenticationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSourceConfigurationAuthenticationConfiguration)(nil)).Elem()
}

func (i ServiceSourceConfigurationAuthenticationConfigurationArgs) ToServiceSourceConfigurationAuthenticationConfigurationOutput() ServiceSourceConfigurationAuthenticationConfigurationOutput {
	return i.ToServiceSourceConfigurationAuthenticationConfigurationOutputWithContext(context.Background())
}

func (i ServiceSourceConfigurationAuthenticationConfigurationArgs) ToServiceSourceConfigurationAuthenticationConfigurationOutputWithContext(ctx context.Context) ServiceSourceConfigurationAuthenticationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSourceConfigurationAuthenticationConfigurationOutput)
}

func (i ServiceSourceConfigurationAuthenticationConfigurationArgs) ToServiceSourceConfigurationAuthenticationConfigurationPtrOutput() ServiceSourceConfigurationAuthenticationConfigurationPtrOutput {
	return i.ToServiceSourceConfigurationAuthenticationConfigurationPtrOutputWithContext(context.Background())
}

func (i ServiceSourceConfigurationAuthenticationConfigurationArgs) ToServiceSourceConfigurationAuthenticationConfigurationPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationAuthenticationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSourceConfigurationAuthenticationConfigurationOutput).ToServiceSourceConfigurationAuthenticationConfigurationPtrOutputWithContext(ctx)
}

// ServiceSourceConfigurationAuthenticationConfigurationPtrInput is an input type that accepts ServiceSourceConfigurationAuthenticationConfigurationArgs, ServiceSourceConfigurationAuthenticationConfigurationPtr and ServiceSourceConfigurationAuthenticationConfigurationPtrOutput values.
// You can construct a concrete instance of `ServiceSourceConfigurationAuthenticationConfigurationPtrInput` via:
//
//	        ServiceSourceConfigurationAuthenticationConfigurationArgs{...}
//
//	or:
//
//	        nil
type ServiceSourceConfigurationAuthenticationConfigurationPtrInput interface {
	pulumi.Input

	ToServiceSourceConfigurationAuthenticationConfigurationPtrOutput() ServiceSourceConfigurationAuthenticationConfigurationPtrOutput
	ToServiceSourceConfigurationAuthenticationConfigurationPtrOutputWithContext(context.Context) ServiceSourceConfigurationAuthenticationConfigurationPtrOutput
}

type serviceSourceConfigurationAuthenticationConfigurationPtrType ServiceSourceConfigurationAuthenticationConfigurationArgs

func ServiceSourceConfigurationAuthenticationConfigurationPtr(v *ServiceSourceConfigurationAuthenticationConfigurationArgs) ServiceSourceConfigurationAuthenticationConfigurationPtrInput {
	return (*serviceSourceConfigurationAuthenticationConfigurationPtrType)(v)
}

func (*serviceSourceConfigurationAuthenticationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSourceConfigurationAuthenticationConfiguration)(nil)).Elem()
}

func (i *serviceSourceConfigurationAuthenticationConfigurationPtrType) ToServiceSourceConfigurationAuthenticationConfigurationPtrOutput() ServiceSourceConfigurationAuthenticationConfigurationPtrOutput {
	return i.ToServiceSourceConfigurationAuthenticationConfigurationPtrOutputWithContext(context.Background())
}

func (i *serviceSourceConfigurationAuthenticationConfigurationPtrType) ToServiceSourceConfigurationAuthenticationConfigurationPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationAuthenticationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSourceConfigurationAuthenticationConfigurationPtrOutput)
}

type ServiceSourceConfigurationAuthenticationConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceSourceConfigurationAuthenticationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSourceConfigurationAuthenticationConfiguration)(nil)).Elem()
}

func (o ServiceSourceConfigurationAuthenticationConfigurationOutput) ToServiceSourceConfigurationAuthenticationConfigurationOutput() ServiceSourceConfigurationAuthenticationConfigurationOutput {
	return o
}

func (o ServiceSourceConfigurationAuthenticationConfigurationOutput) ToServiceSourceConfigurationAuthenticationConfigurationOutputWithContext(ctx context.Context) ServiceSourceConfigurationAuthenticationConfigurationOutput {
	return o
}

func (o ServiceSourceConfigurationAuthenticationConfigurationOutput) ToServiceSourceConfigurationAuthenticationConfigurationPtrOutput() ServiceSourceConfigurationAuthenticationConfigurationPtrOutput {
	return o.ToServiceSourceConfigurationAuthenticationConfigurationPtrOutputWithContext(context.Background())
}

func (o ServiceSourceConfigurationAuthenticationConfigurationOutput) ToServiceSourceConfigurationAuthenticationConfigurationPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationAuthenticationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceSourceConfigurationAuthenticationConfiguration) *ServiceSourceConfigurationAuthenticationConfiguration {
		return &v
	}).(ServiceSourceConfigurationAuthenticationConfigurationPtrOutput)
}

// ARN of the IAM role that grants the App Runner service access to a source repository. Required for ECR image repositories (but not for ECR Public)
func (o ServiceSourceConfigurationAuthenticationConfigurationOutput) AccessRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSourceConfigurationAuthenticationConfiguration) *string { return v.AccessRoleArn }).(pulumi.StringPtrOutput)
}

// ARN of the App Runner connection that enables the App Runner service to connect to a source repository. Required for GitHub code repositories.
func (o ServiceSourceConfigurationAuthenticationConfigurationOutput) ConnectionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSourceConfigurationAuthenticationConfiguration) *string { return v.ConnectionArn }).(pulumi.StringPtrOutput)
}

type ServiceSourceConfigurationAuthenticationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServiceSourceConfigurationAuthenticationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSourceConfigurationAuthenticationConfiguration)(nil)).Elem()
}

func (o ServiceSourceConfigurationAuthenticationConfigurationPtrOutput) ToServiceSourceConfigurationAuthenticationConfigurationPtrOutput() ServiceSourceConfigurationAuthenticationConfigurationPtrOutput {
	return o
}

func (o ServiceSourceConfigurationAuthenticationConfigurationPtrOutput) ToServiceSourceConfigurationAuthenticationConfigurationPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationAuthenticationConfigurationPtrOutput {
	return o
}

func (o ServiceSourceConfigurationAuthenticationConfigurationPtrOutput) Elem() ServiceSourceConfigurationAuthenticationConfigurationOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationAuthenticationConfiguration) ServiceSourceConfigurationAuthenticationConfiguration {
		if v != nil {
			return *v
		}
		var ret ServiceSourceConfigurationAuthenticationConfiguration
		return ret
	}).(ServiceSourceConfigurationAuthenticationConfigurationOutput)
}

// ARN of the IAM role that grants the App Runner service access to a source repository. Required for ECR image repositories (but not for ECR Public)
func (o ServiceSourceConfigurationAuthenticationConfigurationPtrOutput) AccessRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationAuthenticationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AccessRoleArn
	}).(pulumi.StringPtrOutput)
}

// ARN of the App Runner connection that enables the App Runner service to connect to a source repository. Required for GitHub code repositories.
func (o ServiceSourceConfigurationAuthenticationConfigurationPtrOutput) ConnectionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationAuthenticationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionArn
	}).(pulumi.StringPtrOutput)
}

type ServiceSourceConfigurationCodeRepository struct {
	// Configuration for building and running the service from a source code repository. See Code Configuration below for more details.
	CodeConfiguration *ServiceSourceConfigurationCodeRepositoryCodeConfiguration `pulumi:"codeConfiguration"`
	// Location of the repository that contains the source code.
	RepositoryUrl string `pulumi:"repositoryUrl"`
	// Version that should be used within the source code repository. See Source Code Version below for more details.
	SourceCodeVersion ServiceSourceConfigurationCodeRepositorySourceCodeVersion `pulumi:"sourceCodeVersion"`
}

// ServiceSourceConfigurationCodeRepositoryInput is an input type that accepts ServiceSourceConfigurationCodeRepositoryArgs and ServiceSourceConfigurationCodeRepositoryOutput values.
// You can construct a concrete instance of `ServiceSourceConfigurationCodeRepositoryInput` via:
//
//	ServiceSourceConfigurationCodeRepositoryArgs{...}
type ServiceSourceConfigurationCodeRepositoryInput interface {
	pulumi.Input

	ToServiceSourceConfigurationCodeRepositoryOutput() ServiceSourceConfigurationCodeRepositoryOutput
	ToServiceSourceConfigurationCodeRepositoryOutputWithContext(context.Context) ServiceSourceConfigurationCodeRepositoryOutput
}

type ServiceSourceConfigurationCodeRepositoryArgs struct {
	// Configuration for building and running the service from a source code repository. See Code Configuration below for more details.
	CodeConfiguration ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrInput `pulumi:"codeConfiguration"`
	// Location of the repository that contains the source code.
	RepositoryUrl pulumi.StringInput `pulumi:"repositoryUrl"`
	// Version that should be used within the source code repository. See Source Code Version below for more details.
	SourceCodeVersion ServiceSourceConfigurationCodeRepositorySourceCodeVersionInput `pulumi:"sourceCodeVersion"`
}

func (ServiceSourceConfigurationCodeRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSourceConfigurationCodeRepository)(nil)).Elem()
}

func (i ServiceSourceConfigurationCodeRepositoryArgs) ToServiceSourceConfigurationCodeRepositoryOutput() ServiceSourceConfigurationCodeRepositoryOutput {
	return i.ToServiceSourceConfigurationCodeRepositoryOutputWithContext(context.Background())
}

func (i ServiceSourceConfigurationCodeRepositoryArgs) ToServiceSourceConfigurationCodeRepositoryOutputWithContext(ctx context.Context) ServiceSourceConfigurationCodeRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSourceConfigurationCodeRepositoryOutput)
}

func (i ServiceSourceConfigurationCodeRepositoryArgs) ToServiceSourceConfigurationCodeRepositoryPtrOutput() ServiceSourceConfigurationCodeRepositoryPtrOutput {
	return i.ToServiceSourceConfigurationCodeRepositoryPtrOutputWithContext(context.Background())
}

func (i ServiceSourceConfigurationCodeRepositoryArgs) ToServiceSourceConfigurationCodeRepositoryPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationCodeRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSourceConfigurationCodeRepositoryOutput).ToServiceSourceConfigurationCodeRepositoryPtrOutputWithContext(ctx)
}

// ServiceSourceConfigurationCodeRepositoryPtrInput is an input type that accepts ServiceSourceConfigurationCodeRepositoryArgs, ServiceSourceConfigurationCodeRepositoryPtr and ServiceSourceConfigurationCodeRepositoryPtrOutput values.
// You can construct a concrete instance of `ServiceSourceConfigurationCodeRepositoryPtrInput` via:
//
//	        ServiceSourceConfigurationCodeRepositoryArgs{...}
//
//	or:
//
//	        nil
type ServiceSourceConfigurationCodeRepositoryPtrInput interface {
	pulumi.Input

	ToServiceSourceConfigurationCodeRepositoryPtrOutput() ServiceSourceConfigurationCodeRepositoryPtrOutput
	ToServiceSourceConfigurationCodeRepositoryPtrOutputWithContext(context.Context) ServiceSourceConfigurationCodeRepositoryPtrOutput
}

type serviceSourceConfigurationCodeRepositoryPtrType ServiceSourceConfigurationCodeRepositoryArgs

func ServiceSourceConfigurationCodeRepositoryPtr(v *ServiceSourceConfigurationCodeRepositoryArgs) ServiceSourceConfigurationCodeRepositoryPtrInput {
	return (*serviceSourceConfigurationCodeRepositoryPtrType)(v)
}

func (*serviceSourceConfigurationCodeRepositoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSourceConfigurationCodeRepository)(nil)).Elem()
}

func (i *serviceSourceConfigurationCodeRepositoryPtrType) ToServiceSourceConfigurationCodeRepositoryPtrOutput() ServiceSourceConfigurationCodeRepositoryPtrOutput {
	return i.ToServiceSourceConfigurationCodeRepositoryPtrOutputWithContext(context.Background())
}

func (i *serviceSourceConfigurationCodeRepositoryPtrType) ToServiceSourceConfigurationCodeRepositoryPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationCodeRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSourceConfigurationCodeRepositoryPtrOutput)
}

type ServiceSourceConfigurationCodeRepositoryOutput struct{ *pulumi.OutputState }

func (ServiceSourceConfigurationCodeRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSourceConfigurationCodeRepository)(nil)).Elem()
}

func (o ServiceSourceConfigurationCodeRepositoryOutput) ToServiceSourceConfigurationCodeRepositoryOutput() ServiceSourceConfigurationCodeRepositoryOutput {
	return o
}

func (o ServiceSourceConfigurationCodeRepositoryOutput) ToServiceSourceConfigurationCodeRepositoryOutputWithContext(ctx context.Context) ServiceSourceConfigurationCodeRepositoryOutput {
	return o
}

func (o ServiceSourceConfigurationCodeRepositoryOutput) ToServiceSourceConfigurationCodeRepositoryPtrOutput() ServiceSourceConfigurationCodeRepositoryPtrOutput {
	return o.ToServiceSourceConfigurationCodeRepositoryPtrOutputWithContext(context.Background())
}

func (o ServiceSourceConfigurationCodeRepositoryOutput) ToServiceSourceConfigurationCodeRepositoryPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationCodeRepositoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceSourceConfigurationCodeRepository) *ServiceSourceConfigurationCodeRepository {
		return &v
	}).(ServiceSourceConfigurationCodeRepositoryPtrOutput)
}

// Configuration for building and running the service from a source code repository. See Code Configuration below for more details.
func (o ServiceSourceConfigurationCodeRepositoryOutput) CodeConfiguration() ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput {
	return o.ApplyT(func(v ServiceSourceConfigurationCodeRepository) *ServiceSourceConfigurationCodeRepositoryCodeConfiguration {
		return v.CodeConfiguration
	}).(ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput)
}

// Location of the repository that contains the source code.
func (o ServiceSourceConfigurationCodeRepositoryOutput) RepositoryUrl() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceSourceConfigurationCodeRepository) string { return v.RepositoryUrl }).(pulumi.StringOutput)
}

// Version that should be used within the source code repository. See Source Code Version below for more details.
func (o ServiceSourceConfigurationCodeRepositoryOutput) SourceCodeVersion() ServiceSourceConfigurationCodeRepositorySourceCodeVersionOutput {
	return o.ApplyT(func(v ServiceSourceConfigurationCodeRepository) ServiceSourceConfigurationCodeRepositorySourceCodeVersion {
		return v.SourceCodeVersion
	}).(ServiceSourceConfigurationCodeRepositorySourceCodeVersionOutput)
}

type ServiceSourceConfigurationCodeRepositoryPtrOutput struct{ *pulumi.OutputState }

func (ServiceSourceConfigurationCodeRepositoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSourceConfigurationCodeRepository)(nil)).Elem()
}

func (o ServiceSourceConfigurationCodeRepositoryPtrOutput) ToServiceSourceConfigurationCodeRepositoryPtrOutput() ServiceSourceConfigurationCodeRepositoryPtrOutput {
	return o
}

func (o ServiceSourceConfigurationCodeRepositoryPtrOutput) ToServiceSourceConfigurationCodeRepositoryPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationCodeRepositoryPtrOutput {
	return o
}

func (o ServiceSourceConfigurationCodeRepositoryPtrOutput) Elem() ServiceSourceConfigurationCodeRepositoryOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationCodeRepository) ServiceSourceConfigurationCodeRepository {
		if v != nil {
			return *v
		}
		var ret ServiceSourceConfigurationCodeRepository
		return ret
	}).(ServiceSourceConfigurationCodeRepositoryOutput)
}

// Configuration for building and running the service from a source code repository. See Code Configuration below for more details.
func (o ServiceSourceConfigurationCodeRepositoryPtrOutput) CodeConfiguration() ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationCodeRepository) *ServiceSourceConfigurationCodeRepositoryCodeConfiguration {
		if v == nil {
			return nil
		}
		return v.CodeConfiguration
	}).(ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput)
}

// Location of the repository that contains the source code.
func (o ServiceSourceConfigurationCodeRepositoryPtrOutput) RepositoryUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationCodeRepository) *string {
		if v == nil {
			return nil
		}
		return &v.RepositoryUrl
	}).(pulumi.StringPtrOutput)
}

// Version that should be used within the source code repository. See Source Code Version below for more details.
func (o ServiceSourceConfigurationCodeRepositoryPtrOutput) SourceCodeVersion() ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationCodeRepository) *ServiceSourceConfigurationCodeRepositorySourceCodeVersion {
		if v == nil {
			return nil
		}
		return &v.SourceCodeVersion
	}).(ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput)
}

type ServiceSourceConfigurationCodeRepositoryCodeConfiguration struct {
	// Basic configuration for building and running the App Runner service. Use this parameter to quickly launch an App Runner service without providing an apprunner.yaml file in the source code repository (or ignoring the file if it exists). See Code Configuration Values below for more details.
	CodeConfigurationValues *ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues `pulumi:"codeConfigurationValues"`
	// Source of the App Runner configuration. Valid values: `REPOSITORY`, `API`. Values are interpreted as follows:
	ConfigurationSource string `pulumi:"configurationSource"`
}

// ServiceSourceConfigurationCodeRepositoryCodeConfigurationInput is an input type that accepts ServiceSourceConfigurationCodeRepositoryCodeConfigurationArgs and ServiceSourceConfigurationCodeRepositoryCodeConfigurationOutput values.
// You can construct a concrete instance of `ServiceSourceConfigurationCodeRepositoryCodeConfigurationInput` via:
//
//	ServiceSourceConfigurationCodeRepositoryCodeConfigurationArgs{...}
type ServiceSourceConfigurationCodeRepositoryCodeConfigurationInput interface {
	pulumi.Input

	ToServiceSourceConfigurationCodeRepositoryCodeConfigurationOutput() ServiceSourceConfigurationCodeRepositoryCodeConfigurationOutput
	ToServiceSourceConfigurationCodeRepositoryCodeConfigurationOutputWithContext(context.Context) ServiceSourceConfigurationCodeRepositoryCodeConfigurationOutput
}

type ServiceSourceConfigurationCodeRepositoryCodeConfigurationArgs struct {
	// Basic configuration for building and running the App Runner service. Use this parameter to quickly launch an App Runner service without providing an apprunner.yaml file in the source code repository (or ignoring the file if it exists). See Code Configuration Values below for more details.
	CodeConfigurationValues ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrInput `pulumi:"codeConfigurationValues"`
	// Source of the App Runner configuration. Valid values: `REPOSITORY`, `API`. Values are interpreted as follows:
	ConfigurationSource pulumi.StringInput `pulumi:"configurationSource"`
}

func (ServiceSourceConfigurationCodeRepositoryCodeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSourceConfigurationCodeRepositoryCodeConfiguration)(nil)).Elem()
}

func (i ServiceSourceConfigurationCodeRepositoryCodeConfigurationArgs) ToServiceSourceConfigurationCodeRepositoryCodeConfigurationOutput() ServiceSourceConfigurationCodeRepositoryCodeConfigurationOutput {
	return i.ToServiceSourceConfigurationCodeRepositoryCodeConfigurationOutputWithContext(context.Background())
}

func (i ServiceSourceConfigurationCodeRepositoryCodeConfigurationArgs) ToServiceSourceConfigurationCodeRepositoryCodeConfigurationOutputWithContext(ctx context.Context) ServiceSourceConfigurationCodeRepositoryCodeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSourceConfigurationCodeRepositoryCodeConfigurationOutput)
}

func (i ServiceSourceConfigurationCodeRepositoryCodeConfigurationArgs) ToServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput() ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput {
	return i.ToServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutputWithContext(context.Background())
}

func (i ServiceSourceConfigurationCodeRepositoryCodeConfigurationArgs) ToServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSourceConfigurationCodeRepositoryCodeConfigurationOutput).ToServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutputWithContext(ctx)
}

// ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrInput is an input type that accepts ServiceSourceConfigurationCodeRepositoryCodeConfigurationArgs, ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtr and ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput values.
// You can construct a concrete instance of `ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrInput` via:
//
//	        ServiceSourceConfigurationCodeRepositoryCodeConfigurationArgs{...}
//
//	or:
//
//	        nil
type ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrInput interface {
	pulumi.Input

	ToServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput() ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput
	ToServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutputWithContext(context.Context) ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput
}

type serviceSourceConfigurationCodeRepositoryCodeConfigurationPtrType ServiceSourceConfigurationCodeRepositoryCodeConfigurationArgs

func ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtr(v *ServiceSourceConfigurationCodeRepositoryCodeConfigurationArgs) ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrInput {
	return (*serviceSourceConfigurationCodeRepositoryCodeConfigurationPtrType)(v)
}

func (*serviceSourceConfigurationCodeRepositoryCodeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSourceConfigurationCodeRepositoryCodeConfiguration)(nil)).Elem()
}

func (i *serviceSourceConfigurationCodeRepositoryCodeConfigurationPtrType) ToServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput() ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput {
	return i.ToServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutputWithContext(context.Background())
}

func (i *serviceSourceConfigurationCodeRepositoryCodeConfigurationPtrType) ToServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput)
}

type ServiceSourceConfigurationCodeRepositoryCodeConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceSourceConfigurationCodeRepositoryCodeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSourceConfigurationCodeRepositoryCodeConfiguration)(nil)).Elem()
}

func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationOutput) ToServiceSourceConfigurationCodeRepositoryCodeConfigurationOutput() ServiceSourceConfigurationCodeRepositoryCodeConfigurationOutput {
	return o
}

func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationOutput) ToServiceSourceConfigurationCodeRepositoryCodeConfigurationOutputWithContext(ctx context.Context) ServiceSourceConfigurationCodeRepositoryCodeConfigurationOutput {
	return o
}

func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationOutput) ToServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput() ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput {
	return o.ToServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutputWithContext(context.Background())
}

func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationOutput) ToServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceSourceConfigurationCodeRepositoryCodeConfiguration) *ServiceSourceConfigurationCodeRepositoryCodeConfiguration {
		return &v
	}).(ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput)
}

// Basic configuration for building and running the App Runner service. Use this parameter to quickly launch an App Runner service without providing an apprunner.yaml file in the source code repository (or ignoring the file if it exists). See Code Configuration Values below for more details.
func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationOutput) CodeConfigurationValues() ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput {
	return o.ApplyT(func(v ServiceSourceConfigurationCodeRepositoryCodeConfiguration) *ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues {
		return v.CodeConfigurationValues
	}).(ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput)
}

// Source of the App Runner configuration. Valid values: `REPOSITORY`, `API`. Values are interpreted as follows:
func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationOutput) ConfigurationSource() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceSourceConfigurationCodeRepositoryCodeConfiguration) string { return v.ConfigurationSource }).(pulumi.StringOutput)
}

type ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSourceConfigurationCodeRepositoryCodeConfiguration)(nil)).Elem()
}

func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput) ToServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput() ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput {
	return o
}

func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput) ToServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput {
	return o
}

func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput) Elem() ServiceSourceConfigurationCodeRepositoryCodeConfigurationOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationCodeRepositoryCodeConfiguration) ServiceSourceConfigurationCodeRepositoryCodeConfiguration {
		if v != nil {
			return *v
		}
		var ret ServiceSourceConfigurationCodeRepositoryCodeConfiguration
		return ret
	}).(ServiceSourceConfigurationCodeRepositoryCodeConfigurationOutput)
}

// Basic configuration for building and running the App Runner service. Use this parameter to quickly launch an App Runner service without providing an apprunner.yaml file in the source code repository (or ignoring the file if it exists). See Code Configuration Values below for more details.
func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput) CodeConfigurationValues() ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationCodeRepositoryCodeConfiguration) *ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues {
		if v == nil {
			return nil
		}
		return v.CodeConfigurationValues
	}).(ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput)
}

// Source of the App Runner configuration. Valid values: `REPOSITORY`, `API`. Values are interpreted as follows:
func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput) ConfigurationSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationCodeRepositoryCodeConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ConfigurationSource
	}).(pulumi.StringPtrOutput)
}

type ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues struct {
	// Command App Runner runs to build your application.
	BuildCommand *string `pulumi:"buildCommand"`
	// Port that your application listens to in the container. Defaults to `"8080"`.
	Port *string `pulumi:"port"`
	// Runtime environment type for building and running an App Runner service. Represents a programming language runtime. Valid values: `PYTHON_3`, `NODEJS_12`, `NODEJS_14`, `NODEJS_16`, `CORRETTO_8`, `CORRETTO_11`, `GO_1`, `DOTNET_6`, `PHP_81`, `RUBY_31`.
	Runtime string `pulumi:"runtime"`
	// Environment variables available to your running App Runner service. A map of key/value pairs. Keys with a prefix of `AWSAPPRUNNER` are reserved for system use and aren't valid.
	RuntimeEnvironmentVariables map[string]string `pulumi:"runtimeEnvironmentVariables"`
	// Command App Runner runs to start your application.
	StartCommand *string `pulumi:"startCommand"`
}

// ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesInput is an input type that accepts ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs and ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutput values.
// You can construct a concrete instance of `ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesInput` via:
//
//	ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs{...}
type ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesInput interface {
	pulumi.Input

	ToServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutput() ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutput
	ToServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutputWithContext(context.Context) ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutput
}

type ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs struct {
	// Command App Runner runs to build your application.
	BuildCommand pulumi.StringPtrInput `pulumi:"buildCommand"`
	// Port that your application listens to in the container. Defaults to `"8080"`.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// Runtime environment type for building and running an App Runner service. Represents a programming language runtime. Valid values: `PYTHON_3`, `NODEJS_12`, `NODEJS_14`, `NODEJS_16`, `CORRETTO_8`, `CORRETTO_11`, `GO_1`, `DOTNET_6`, `PHP_81`, `RUBY_31`.
	Runtime pulumi.StringInput `pulumi:"runtime"`
	// Environment variables available to your running App Runner service. A map of key/value pairs. Keys with a prefix of `AWSAPPRUNNER` are reserved for system use and aren't valid.
	RuntimeEnvironmentVariables pulumi.StringMapInput `pulumi:"runtimeEnvironmentVariables"`
	// Command App Runner runs to start your application.
	StartCommand pulumi.StringPtrInput `pulumi:"startCommand"`
}

func (ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues)(nil)).Elem()
}

func (i ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs) ToServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutput() ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutput {
	return i.ToServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutputWithContext(context.Background())
}

func (i ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs) ToServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutputWithContext(ctx context.Context) ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutput)
}

func (i ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs) ToServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput() ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput {
	return i.ToServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutputWithContext(context.Background())
}

func (i ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs) ToServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutput).ToServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutputWithContext(ctx)
}

// ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrInput is an input type that accepts ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs, ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtr and ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput values.
// You can construct a concrete instance of `ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrInput` via:
//
//	        ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs{...}
//
//	or:
//
//	        nil
type ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrInput interface {
	pulumi.Input

	ToServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput() ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput
	ToServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutputWithContext(context.Context) ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput
}

type serviceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrType ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs

func ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtr(v *ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs) ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrInput {
	return (*serviceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrType)(v)
}

func (*serviceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues)(nil)).Elem()
}

func (i *serviceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrType) ToServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput() ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput {
	return i.ToServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutputWithContext(context.Background())
}

func (i *serviceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrType) ToServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput)
}

type ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutput struct{ *pulumi.OutputState }

func (ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues)(nil)).Elem()
}

func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutput) ToServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutput() ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutput {
	return o
}

func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutput) ToServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutputWithContext(ctx context.Context) ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutput {
	return o
}

func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutput) ToServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput() ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput {
	return o.ToServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutputWithContext(context.Background())
}

func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutput) ToServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues) *ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues {
		return &v
	}).(ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput)
}

// Command App Runner runs to build your application.
func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutput) BuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues) *string {
		return v.BuildCommand
	}).(pulumi.StringPtrOutput)
}

// Port that your application listens to in the container. Defaults to `"8080"`.
func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues) *string {
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// Runtime environment type for building and running an App Runner service. Represents a programming language runtime. Valid values: `PYTHON_3`, `NODEJS_12`, `NODEJS_14`, `NODEJS_16`, `CORRETTO_8`, `CORRETTO_11`, `GO_1`, `DOTNET_6`, `PHP_81`, `RUBY_31`.
func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutput) Runtime() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues) string {
		return v.Runtime
	}).(pulumi.StringOutput)
}

// Environment variables available to your running App Runner service. A map of key/value pairs. Keys with a prefix of `AWSAPPRUNNER` are reserved for system use and aren't valid.
func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutput) RuntimeEnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues) map[string]string {
		return v.RuntimeEnvironmentVariables
	}).(pulumi.StringMapOutput)
}

// Command App Runner runs to start your application.
func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutput) StartCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues) *string {
		return v.StartCommand
	}).(pulumi.StringPtrOutput)
}

type ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput struct{ *pulumi.OutputState }

func (ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues)(nil)).Elem()
}

func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput) ToServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput() ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput {
	return o
}

func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput) ToServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput {
	return o
}

func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput) Elem() ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues) ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues {
		if v != nil {
			return *v
		}
		var ret ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues
		return ret
	}).(ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutput)
}

// Command App Runner runs to build your application.
func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput) BuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues) *string {
		if v == nil {
			return nil
		}
		return v.BuildCommand
	}).(pulumi.StringPtrOutput)
}

// Port that your application listens to in the container. Defaults to `"8080"`.
func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// Runtime environment type for building and running an App Runner service. Represents a programming language runtime. Valid values: `PYTHON_3`, `NODEJS_12`, `NODEJS_14`, `NODEJS_16`, `CORRETTO_8`, `CORRETTO_11`, `GO_1`, `DOTNET_6`, `PHP_81`, `RUBY_31`.
func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput) Runtime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues) *string {
		if v == nil {
			return nil
		}
		return &v.Runtime
	}).(pulumi.StringPtrOutput)
}

// Environment variables available to your running App Runner service. A map of key/value pairs. Keys with a prefix of `AWSAPPRUNNER` are reserved for system use and aren't valid.
func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput) RuntimeEnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues) map[string]string {
		if v == nil {
			return nil
		}
		return v.RuntimeEnvironmentVariables
	}).(pulumi.StringMapOutput)
}

// Command App Runner runs to start your application.
func (o ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput) StartCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValues) *string {
		if v == nil {
			return nil
		}
		return v.StartCommand
	}).(pulumi.StringPtrOutput)
}

type ServiceSourceConfigurationCodeRepositorySourceCodeVersion struct {
	// Type of version identifier. For a git-based repository, branches represent versions. Valid values: `BRANCH`.
	Type string `pulumi:"type"`
	// Source code version. For a git-based repository, a branch name maps to a specific version. App Runner uses the most recent commit to the branch.
	Value string `pulumi:"value"`
}

// ServiceSourceConfigurationCodeRepositorySourceCodeVersionInput is an input type that accepts ServiceSourceConfigurationCodeRepositorySourceCodeVersionArgs and ServiceSourceConfigurationCodeRepositorySourceCodeVersionOutput values.
// You can construct a concrete instance of `ServiceSourceConfigurationCodeRepositorySourceCodeVersionInput` via:
//
//	ServiceSourceConfigurationCodeRepositorySourceCodeVersionArgs{...}
type ServiceSourceConfigurationCodeRepositorySourceCodeVersionInput interface {
	pulumi.Input

	ToServiceSourceConfigurationCodeRepositorySourceCodeVersionOutput() ServiceSourceConfigurationCodeRepositorySourceCodeVersionOutput
	ToServiceSourceConfigurationCodeRepositorySourceCodeVersionOutputWithContext(context.Context) ServiceSourceConfigurationCodeRepositorySourceCodeVersionOutput
}

type ServiceSourceConfigurationCodeRepositorySourceCodeVersionArgs struct {
	// Type of version identifier. For a git-based repository, branches represent versions. Valid values: `BRANCH`.
	Type pulumi.StringInput `pulumi:"type"`
	// Source code version. For a git-based repository, a branch name maps to a specific version. App Runner uses the most recent commit to the branch.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ServiceSourceConfigurationCodeRepositorySourceCodeVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSourceConfigurationCodeRepositorySourceCodeVersion)(nil)).Elem()
}

func (i ServiceSourceConfigurationCodeRepositorySourceCodeVersionArgs) ToServiceSourceConfigurationCodeRepositorySourceCodeVersionOutput() ServiceSourceConfigurationCodeRepositorySourceCodeVersionOutput {
	return i.ToServiceSourceConfigurationCodeRepositorySourceCodeVersionOutputWithContext(context.Background())
}

func (i ServiceSourceConfigurationCodeRepositorySourceCodeVersionArgs) ToServiceSourceConfigurationCodeRepositorySourceCodeVersionOutputWithContext(ctx context.Context) ServiceSourceConfigurationCodeRepositorySourceCodeVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSourceConfigurationCodeRepositorySourceCodeVersionOutput)
}

func (i ServiceSourceConfigurationCodeRepositorySourceCodeVersionArgs) ToServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput() ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput {
	return i.ToServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutputWithContext(context.Background())
}

func (i ServiceSourceConfigurationCodeRepositorySourceCodeVersionArgs) ToServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSourceConfigurationCodeRepositorySourceCodeVersionOutput).ToServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutputWithContext(ctx)
}

// ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrInput is an input type that accepts ServiceSourceConfigurationCodeRepositorySourceCodeVersionArgs, ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtr and ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput values.
// You can construct a concrete instance of `ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrInput` via:
//
//	        ServiceSourceConfigurationCodeRepositorySourceCodeVersionArgs{...}
//
//	or:
//
//	        nil
type ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrInput interface {
	pulumi.Input

	ToServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput() ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput
	ToServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutputWithContext(context.Context) ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput
}

type serviceSourceConfigurationCodeRepositorySourceCodeVersionPtrType ServiceSourceConfigurationCodeRepositorySourceCodeVersionArgs

func ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtr(v *ServiceSourceConfigurationCodeRepositorySourceCodeVersionArgs) ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrInput {
	return (*serviceSourceConfigurationCodeRepositorySourceCodeVersionPtrType)(v)
}

func (*serviceSourceConfigurationCodeRepositorySourceCodeVersionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSourceConfigurationCodeRepositorySourceCodeVersion)(nil)).Elem()
}

func (i *serviceSourceConfigurationCodeRepositorySourceCodeVersionPtrType) ToServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput() ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput {
	return i.ToServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutputWithContext(context.Background())
}

func (i *serviceSourceConfigurationCodeRepositorySourceCodeVersionPtrType) ToServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput)
}

type ServiceSourceConfigurationCodeRepositorySourceCodeVersionOutput struct{ *pulumi.OutputState }

func (ServiceSourceConfigurationCodeRepositorySourceCodeVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSourceConfigurationCodeRepositorySourceCodeVersion)(nil)).Elem()
}

func (o ServiceSourceConfigurationCodeRepositorySourceCodeVersionOutput) ToServiceSourceConfigurationCodeRepositorySourceCodeVersionOutput() ServiceSourceConfigurationCodeRepositorySourceCodeVersionOutput {
	return o
}

func (o ServiceSourceConfigurationCodeRepositorySourceCodeVersionOutput) ToServiceSourceConfigurationCodeRepositorySourceCodeVersionOutputWithContext(ctx context.Context) ServiceSourceConfigurationCodeRepositorySourceCodeVersionOutput {
	return o
}

func (o ServiceSourceConfigurationCodeRepositorySourceCodeVersionOutput) ToServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput() ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput {
	return o.ToServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutputWithContext(context.Background())
}

func (o ServiceSourceConfigurationCodeRepositorySourceCodeVersionOutput) ToServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceSourceConfigurationCodeRepositorySourceCodeVersion) *ServiceSourceConfigurationCodeRepositorySourceCodeVersion {
		return &v
	}).(ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput)
}

// Type of version identifier. For a git-based repository, branches represent versions. Valid values: `BRANCH`.
func (o ServiceSourceConfigurationCodeRepositorySourceCodeVersionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceSourceConfigurationCodeRepositorySourceCodeVersion) string { return v.Type }).(pulumi.StringOutput)
}

// Source code version. For a git-based repository, a branch name maps to a specific version. App Runner uses the most recent commit to the branch.
func (o ServiceSourceConfigurationCodeRepositorySourceCodeVersionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceSourceConfigurationCodeRepositorySourceCodeVersion) string { return v.Value }).(pulumi.StringOutput)
}

type ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput struct{ *pulumi.OutputState }

func (ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSourceConfigurationCodeRepositorySourceCodeVersion)(nil)).Elem()
}

func (o ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput) ToServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput() ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput {
	return o
}

func (o ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput) ToServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput {
	return o
}

func (o ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput) Elem() ServiceSourceConfigurationCodeRepositorySourceCodeVersionOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationCodeRepositorySourceCodeVersion) ServiceSourceConfigurationCodeRepositorySourceCodeVersion {
		if v != nil {
			return *v
		}
		var ret ServiceSourceConfigurationCodeRepositorySourceCodeVersion
		return ret
	}).(ServiceSourceConfigurationCodeRepositorySourceCodeVersionOutput)
}

// Type of version identifier. For a git-based repository, branches represent versions. Valid values: `BRANCH`.
func (o ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationCodeRepositorySourceCodeVersion) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Source code version. For a git-based repository, a branch name maps to a specific version. App Runner uses the most recent commit to the branch.
func (o ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationCodeRepositorySourceCodeVersion) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type ServiceSourceConfigurationImageRepository struct {
	// Configuration for running the identified image. See Image Configuration below for more details.
	ImageConfiguration *ServiceSourceConfigurationImageRepositoryImageConfiguration `pulumi:"imageConfiguration"`
	// Identifier of an image. For an image in Amazon Elastic Container Registry (Amazon ECR), this is an image name. For the
	// image name format, see Pulling an image in the Amazon ECR User Guide.
	ImageIdentifier string `pulumi:"imageIdentifier"`
	// Type of the image repository. This reflects the repository provider and whether the repository is private or public. Valid values: `ECR` , `ECR_PUBLIC`.
	ImageRepositoryType string `pulumi:"imageRepositoryType"`
}

// ServiceSourceConfigurationImageRepositoryInput is an input type that accepts ServiceSourceConfigurationImageRepositoryArgs and ServiceSourceConfigurationImageRepositoryOutput values.
// You can construct a concrete instance of `ServiceSourceConfigurationImageRepositoryInput` via:
//
//	ServiceSourceConfigurationImageRepositoryArgs{...}
type ServiceSourceConfigurationImageRepositoryInput interface {
	pulumi.Input

	ToServiceSourceConfigurationImageRepositoryOutput() ServiceSourceConfigurationImageRepositoryOutput
	ToServiceSourceConfigurationImageRepositoryOutputWithContext(context.Context) ServiceSourceConfigurationImageRepositoryOutput
}

type ServiceSourceConfigurationImageRepositoryArgs struct {
	// Configuration for running the identified image. See Image Configuration below for more details.
	ImageConfiguration ServiceSourceConfigurationImageRepositoryImageConfigurationPtrInput `pulumi:"imageConfiguration"`
	// Identifier of an image. For an image in Amazon Elastic Container Registry (Amazon ECR), this is an image name. For the
	// image name format, see Pulling an image in the Amazon ECR User Guide.
	ImageIdentifier pulumi.StringInput `pulumi:"imageIdentifier"`
	// Type of the image repository. This reflects the repository provider and whether the repository is private or public. Valid values: `ECR` , `ECR_PUBLIC`.
	ImageRepositoryType pulumi.StringInput `pulumi:"imageRepositoryType"`
}

func (ServiceSourceConfigurationImageRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSourceConfigurationImageRepository)(nil)).Elem()
}

func (i ServiceSourceConfigurationImageRepositoryArgs) ToServiceSourceConfigurationImageRepositoryOutput() ServiceSourceConfigurationImageRepositoryOutput {
	return i.ToServiceSourceConfigurationImageRepositoryOutputWithContext(context.Background())
}

func (i ServiceSourceConfigurationImageRepositoryArgs) ToServiceSourceConfigurationImageRepositoryOutputWithContext(ctx context.Context) ServiceSourceConfigurationImageRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSourceConfigurationImageRepositoryOutput)
}

func (i ServiceSourceConfigurationImageRepositoryArgs) ToServiceSourceConfigurationImageRepositoryPtrOutput() ServiceSourceConfigurationImageRepositoryPtrOutput {
	return i.ToServiceSourceConfigurationImageRepositoryPtrOutputWithContext(context.Background())
}

func (i ServiceSourceConfigurationImageRepositoryArgs) ToServiceSourceConfigurationImageRepositoryPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationImageRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSourceConfigurationImageRepositoryOutput).ToServiceSourceConfigurationImageRepositoryPtrOutputWithContext(ctx)
}

// ServiceSourceConfigurationImageRepositoryPtrInput is an input type that accepts ServiceSourceConfigurationImageRepositoryArgs, ServiceSourceConfigurationImageRepositoryPtr and ServiceSourceConfigurationImageRepositoryPtrOutput values.
// You can construct a concrete instance of `ServiceSourceConfigurationImageRepositoryPtrInput` via:
//
//	        ServiceSourceConfigurationImageRepositoryArgs{...}
//
//	or:
//
//	        nil
type ServiceSourceConfigurationImageRepositoryPtrInput interface {
	pulumi.Input

	ToServiceSourceConfigurationImageRepositoryPtrOutput() ServiceSourceConfigurationImageRepositoryPtrOutput
	ToServiceSourceConfigurationImageRepositoryPtrOutputWithContext(context.Context) ServiceSourceConfigurationImageRepositoryPtrOutput
}

type serviceSourceConfigurationImageRepositoryPtrType ServiceSourceConfigurationImageRepositoryArgs

func ServiceSourceConfigurationImageRepositoryPtr(v *ServiceSourceConfigurationImageRepositoryArgs) ServiceSourceConfigurationImageRepositoryPtrInput {
	return (*serviceSourceConfigurationImageRepositoryPtrType)(v)
}

func (*serviceSourceConfigurationImageRepositoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSourceConfigurationImageRepository)(nil)).Elem()
}

func (i *serviceSourceConfigurationImageRepositoryPtrType) ToServiceSourceConfigurationImageRepositoryPtrOutput() ServiceSourceConfigurationImageRepositoryPtrOutput {
	return i.ToServiceSourceConfigurationImageRepositoryPtrOutputWithContext(context.Background())
}

func (i *serviceSourceConfigurationImageRepositoryPtrType) ToServiceSourceConfigurationImageRepositoryPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationImageRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSourceConfigurationImageRepositoryPtrOutput)
}

type ServiceSourceConfigurationImageRepositoryOutput struct{ *pulumi.OutputState }

func (ServiceSourceConfigurationImageRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSourceConfigurationImageRepository)(nil)).Elem()
}

func (o ServiceSourceConfigurationImageRepositoryOutput) ToServiceSourceConfigurationImageRepositoryOutput() ServiceSourceConfigurationImageRepositoryOutput {
	return o
}

func (o ServiceSourceConfigurationImageRepositoryOutput) ToServiceSourceConfigurationImageRepositoryOutputWithContext(ctx context.Context) ServiceSourceConfigurationImageRepositoryOutput {
	return o
}

func (o ServiceSourceConfigurationImageRepositoryOutput) ToServiceSourceConfigurationImageRepositoryPtrOutput() ServiceSourceConfigurationImageRepositoryPtrOutput {
	return o.ToServiceSourceConfigurationImageRepositoryPtrOutputWithContext(context.Background())
}

func (o ServiceSourceConfigurationImageRepositoryOutput) ToServiceSourceConfigurationImageRepositoryPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationImageRepositoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceSourceConfigurationImageRepository) *ServiceSourceConfigurationImageRepository {
		return &v
	}).(ServiceSourceConfigurationImageRepositoryPtrOutput)
}

// Configuration for running the identified image. See Image Configuration below for more details.
func (o ServiceSourceConfigurationImageRepositoryOutput) ImageConfiguration() ServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput {
	return o.ApplyT(func(v ServiceSourceConfigurationImageRepository) *ServiceSourceConfigurationImageRepositoryImageConfiguration {
		return v.ImageConfiguration
	}).(ServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput)
}

// Identifier of an image. For an image in Amazon Elastic Container Registry (Amazon ECR), this is an image name. For the
// image name format, see Pulling an image in the Amazon ECR User Guide.
func (o ServiceSourceConfigurationImageRepositoryOutput) ImageIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceSourceConfigurationImageRepository) string { return v.ImageIdentifier }).(pulumi.StringOutput)
}

// Type of the image repository. This reflects the repository provider and whether the repository is private or public. Valid values: `ECR` , `ECR_PUBLIC`.
func (o ServiceSourceConfigurationImageRepositoryOutput) ImageRepositoryType() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceSourceConfigurationImageRepository) string { return v.ImageRepositoryType }).(pulumi.StringOutput)
}

type ServiceSourceConfigurationImageRepositoryPtrOutput struct{ *pulumi.OutputState }

func (ServiceSourceConfigurationImageRepositoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSourceConfigurationImageRepository)(nil)).Elem()
}

func (o ServiceSourceConfigurationImageRepositoryPtrOutput) ToServiceSourceConfigurationImageRepositoryPtrOutput() ServiceSourceConfigurationImageRepositoryPtrOutput {
	return o
}

func (o ServiceSourceConfigurationImageRepositoryPtrOutput) ToServiceSourceConfigurationImageRepositoryPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationImageRepositoryPtrOutput {
	return o
}

func (o ServiceSourceConfigurationImageRepositoryPtrOutput) Elem() ServiceSourceConfigurationImageRepositoryOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationImageRepository) ServiceSourceConfigurationImageRepository {
		if v != nil {
			return *v
		}
		var ret ServiceSourceConfigurationImageRepository
		return ret
	}).(ServiceSourceConfigurationImageRepositoryOutput)
}

// Configuration for running the identified image. See Image Configuration below for more details.
func (o ServiceSourceConfigurationImageRepositoryPtrOutput) ImageConfiguration() ServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationImageRepository) *ServiceSourceConfigurationImageRepositoryImageConfiguration {
		if v == nil {
			return nil
		}
		return v.ImageConfiguration
	}).(ServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput)
}

// Identifier of an image. For an image in Amazon Elastic Container Registry (Amazon ECR), this is an image name. For the
// image name format, see Pulling an image in the Amazon ECR User Guide.
func (o ServiceSourceConfigurationImageRepositoryPtrOutput) ImageIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationImageRepository) *string {
		if v == nil {
			return nil
		}
		return &v.ImageIdentifier
	}).(pulumi.StringPtrOutput)
}

// Type of the image repository. This reflects the repository provider and whether the repository is private or public. Valid values: `ECR` , `ECR_PUBLIC`.
func (o ServiceSourceConfigurationImageRepositoryPtrOutput) ImageRepositoryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationImageRepository) *string {
		if v == nil {
			return nil
		}
		return &v.ImageRepositoryType
	}).(pulumi.StringPtrOutput)
}

type ServiceSourceConfigurationImageRepositoryImageConfiguration struct {
	// Port that your application listens to in the container. Defaults to `"8080"`.
	Port *string `pulumi:"port"`
	// Environment variables available to your running App Runner service. A map of key/value pairs. Keys with a prefix of `AWSAPPRUNNER` are reserved for system use and aren't valid.
	RuntimeEnvironmentVariables map[string]string `pulumi:"runtimeEnvironmentVariables"`
	// Command App Runner runs to start the application in the source image. If specified, this command overrides the Docker image’s default start command.
	StartCommand *string `pulumi:"startCommand"`
}

// ServiceSourceConfigurationImageRepositoryImageConfigurationInput is an input type that accepts ServiceSourceConfigurationImageRepositoryImageConfigurationArgs and ServiceSourceConfigurationImageRepositoryImageConfigurationOutput values.
// You can construct a concrete instance of `ServiceSourceConfigurationImageRepositoryImageConfigurationInput` via:
//
//	ServiceSourceConfigurationImageRepositoryImageConfigurationArgs{...}
type ServiceSourceConfigurationImageRepositoryImageConfigurationInput interface {
	pulumi.Input

	ToServiceSourceConfigurationImageRepositoryImageConfigurationOutput() ServiceSourceConfigurationImageRepositoryImageConfigurationOutput
	ToServiceSourceConfigurationImageRepositoryImageConfigurationOutputWithContext(context.Context) ServiceSourceConfigurationImageRepositoryImageConfigurationOutput
}

type ServiceSourceConfigurationImageRepositoryImageConfigurationArgs struct {
	// Port that your application listens to in the container. Defaults to `"8080"`.
	Port pulumi.StringPtrInput `pulumi:"port"`
	// Environment variables available to your running App Runner service. A map of key/value pairs. Keys with a prefix of `AWSAPPRUNNER` are reserved for system use and aren't valid.
	RuntimeEnvironmentVariables pulumi.StringMapInput `pulumi:"runtimeEnvironmentVariables"`
	// Command App Runner runs to start the application in the source image. If specified, this command overrides the Docker image’s default start command.
	StartCommand pulumi.StringPtrInput `pulumi:"startCommand"`
}

func (ServiceSourceConfigurationImageRepositoryImageConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSourceConfigurationImageRepositoryImageConfiguration)(nil)).Elem()
}

func (i ServiceSourceConfigurationImageRepositoryImageConfigurationArgs) ToServiceSourceConfigurationImageRepositoryImageConfigurationOutput() ServiceSourceConfigurationImageRepositoryImageConfigurationOutput {
	return i.ToServiceSourceConfigurationImageRepositoryImageConfigurationOutputWithContext(context.Background())
}

func (i ServiceSourceConfigurationImageRepositoryImageConfigurationArgs) ToServiceSourceConfigurationImageRepositoryImageConfigurationOutputWithContext(ctx context.Context) ServiceSourceConfigurationImageRepositoryImageConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSourceConfigurationImageRepositoryImageConfigurationOutput)
}

func (i ServiceSourceConfigurationImageRepositoryImageConfigurationArgs) ToServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput() ServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput {
	return i.ToServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutputWithContext(context.Background())
}

func (i ServiceSourceConfigurationImageRepositoryImageConfigurationArgs) ToServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSourceConfigurationImageRepositoryImageConfigurationOutput).ToServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutputWithContext(ctx)
}

// ServiceSourceConfigurationImageRepositoryImageConfigurationPtrInput is an input type that accepts ServiceSourceConfigurationImageRepositoryImageConfigurationArgs, ServiceSourceConfigurationImageRepositoryImageConfigurationPtr and ServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput values.
// You can construct a concrete instance of `ServiceSourceConfigurationImageRepositoryImageConfigurationPtrInput` via:
//
//	        ServiceSourceConfigurationImageRepositoryImageConfigurationArgs{...}
//
//	or:
//
//	        nil
type ServiceSourceConfigurationImageRepositoryImageConfigurationPtrInput interface {
	pulumi.Input

	ToServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput() ServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput
	ToServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutputWithContext(context.Context) ServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput
}

type serviceSourceConfigurationImageRepositoryImageConfigurationPtrType ServiceSourceConfigurationImageRepositoryImageConfigurationArgs

func ServiceSourceConfigurationImageRepositoryImageConfigurationPtr(v *ServiceSourceConfigurationImageRepositoryImageConfigurationArgs) ServiceSourceConfigurationImageRepositoryImageConfigurationPtrInput {
	return (*serviceSourceConfigurationImageRepositoryImageConfigurationPtrType)(v)
}

func (*serviceSourceConfigurationImageRepositoryImageConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSourceConfigurationImageRepositoryImageConfiguration)(nil)).Elem()
}

func (i *serviceSourceConfigurationImageRepositoryImageConfigurationPtrType) ToServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput() ServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput {
	return i.ToServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutputWithContext(context.Background())
}

func (i *serviceSourceConfigurationImageRepositoryImageConfigurationPtrType) ToServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput)
}

type ServiceSourceConfigurationImageRepositoryImageConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceSourceConfigurationImageRepositoryImageConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceSourceConfigurationImageRepositoryImageConfiguration)(nil)).Elem()
}

func (o ServiceSourceConfigurationImageRepositoryImageConfigurationOutput) ToServiceSourceConfigurationImageRepositoryImageConfigurationOutput() ServiceSourceConfigurationImageRepositoryImageConfigurationOutput {
	return o
}

func (o ServiceSourceConfigurationImageRepositoryImageConfigurationOutput) ToServiceSourceConfigurationImageRepositoryImageConfigurationOutputWithContext(ctx context.Context) ServiceSourceConfigurationImageRepositoryImageConfigurationOutput {
	return o
}

func (o ServiceSourceConfigurationImageRepositoryImageConfigurationOutput) ToServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput() ServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput {
	return o.ToServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutputWithContext(context.Background())
}

func (o ServiceSourceConfigurationImageRepositoryImageConfigurationOutput) ToServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceSourceConfigurationImageRepositoryImageConfiguration) *ServiceSourceConfigurationImageRepositoryImageConfiguration {
		return &v
	}).(ServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput)
}

// Port that your application listens to in the container. Defaults to `"8080"`.
func (o ServiceSourceConfigurationImageRepositoryImageConfigurationOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSourceConfigurationImageRepositoryImageConfiguration) *string { return v.Port }).(pulumi.StringPtrOutput)
}

// Environment variables available to your running App Runner service. A map of key/value pairs. Keys with a prefix of `AWSAPPRUNNER` are reserved for system use and aren't valid.
func (o ServiceSourceConfigurationImageRepositoryImageConfigurationOutput) RuntimeEnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v ServiceSourceConfigurationImageRepositoryImageConfiguration) map[string]string {
		return v.RuntimeEnvironmentVariables
	}).(pulumi.StringMapOutput)
}

// Command App Runner runs to start the application in the source image. If specified, this command overrides the Docker image’s default start command.
func (o ServiceSourceConfigurationImageRepositoryImageConfigurationOutput) StartCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceSourceConfigurationImageRepositoryImageConfiguration) *string { return v.StartCommand }).(pulumi.StringPtrOutput)
}

type ServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceSourceConfigurationImageRepositoryImageConfiguration)(nil)).Elem()
}

func (o ServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput) ToServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput() ServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput {
	return o
}

func (o ServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput) ToServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutputWithContext(ctx context.Context) ServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput {
	return o
}

func (o ServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput) Elem() ServiceSourceConfigurationImageRepositoryImageConfigurationOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationImageRepositoryImageConfiguration) ServiceSourceConfigurationImageRepositoryImageConfiguration {
		if v != nil {
			return *v
		}
		var ret ServiceSourceConfigurationImageRepositoryImageConfiguration
		return ret
	}).(ServiceSourceConfigurationImageRepositoryImageConfigurationOutput)
}

// Port that your application listens to in the container. Defaults to `"8080"`.
func (o ServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationImageRepositoryImageConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.StringPtrOutput)
}

// Environment variables available to your running App Runner service. A map of key/value pairs. Keys with a prefix of `AWSAPPRUNNER` are reserved for system use and aren't valid.
func (o ServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput) RuntimeEnvironmentVariables() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationImageRepositoryImageConfiguration) map[string]string {
		if v == nil {
			return nil
		}
		return v.RuntimeEnvironmentVariables
	}).(pulumi.StringMapOutput)
}

// Command App Runner runs to start the application in the source image. If specified, this command overrides the Docker image’s default start command.
func (o ServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput) StartCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceSourceConfigurationImageRepositoryImageConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.StartCommand
	}).(pulumi.StringPtrOutput)
}

type VpcIngressConnectionIngressVpcConfiguration struct {
	// The ID of the VPC endpoint that your App Runner service connects to.
	VpcEndpointId *string `pulumi:"vpcEndpointId"`
	// The ID of the VPC that is used for the VPC endpoint.
	VpcId *string `pulumi:"vpcId"`
}

// VpcIngressConnectionIngressVpcConfigurationInput is an input type that accepts VpcIngressConnectionIngressVpcConfigurationArgs and VpcIngressConnectionIngressVpcConfigurationOutput values.
// You can construct a concrete instance of `VpcIngressConnectionIngressVpcConfigurationInput` via:
//
//	VpcIngressConnectionIngressVpcConfigurationArgs{...}
type VpcIngressConnectionIngressVpcConfigurationInput interface {
	pulumi.Input

	ToVpcIngressConnectionIngressVpcConfigurationOutput() VpcIngressConnectionIngressVpcConfigurationOutput
	ToVpcIngressConnectionIngressVpcConfigurationOutputWithContext(context.Context) VpcIngressConnectionIngressVpcConfigurationOutput
}

type VpcIngressConnectionIngressVpcConfigurationArgs struct {
	// The ID of the VPC endpoint that your App Runner service connects to.
	VpcEndpointId pulumi.StringPtrInput `pulumi:"vpcEndpointId"`
	// The ID of the VPC that is used for the VPC endpoint.
	VpcId pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (VpcIngressConnectionIngressVpcConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcIngressConnectionIngressVpcConfiguration)(nil)).Elem()
}

func (i VpcIngressConnectionIngressVpcConfigurationArgs) ToVpcIngressConnectionIngressVpcConfigurationOutput() VpcIngressConnectionIngressVpcConfigurationOutput {
	return i.ToVpcIngressConnectionIngressVpcConfigurationOutputWithContext(context.Background())
}

func (i VpcIngressConnectionIngressVpcConfigurationArgs) ToVpcIngressConnectionIngressVpcConfigurationOutputWithContext(ctx context.Context) VpcIngressConnectionIngressVpcConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcIngressConnectionIngressVpcConfigurationOutput)
}

func (i VpcIngressConnectionIngressVpcConfigurationArgs) ToVpcIngressConnectionIngressVpcConfigurationPtrOutput() VpcIngressConnectionIngressVpcConfigurationPtrOutput {
	return i.ToVpcIngressConnectionIngressVpcConfigurationPtrOutputWithContext(context.Background())
}

func (i VpcIngressConnectionIngressVpcConfigurationArgs) ToVpcIngressConnectionIngressVpcConfigurationPtrOutputWithContext(ctx context.Context) VpcIngressConnectionIngressVpcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcIngressConnectionIngressVpcConfigurationOutput).ToVpcIngressConnectionIngressVpcConfigurationPtrOutputWithContext(ctx)
}

// VpcIngressConnectionIngressVpcConfigurationPtrInput is an input type that accepts VpcIngressConnectionIngressVpcConfigurationArgs, VpcIngressConnectionIngressVpcConfigurationPtr and VpcIngressConnectionIngressVpcConfigurationPtrOutput values.
// You can construct a concrete instance of `VpcIngressConnectionIngressVpcConfigurationPtrInput` via:
//
//	        VpcIngressConnectionIngressVpcConfigurationArgs{...}
//
//	or:
//
//	        nil
type VpcIngressConnectionIngressVpcConfigurationPtrInput interface {
	pulumi.Input

	ToVpcIngressConnectionIngressVpcConfigurationPtrOutput() VpcIngressConnectionIngressVpcConfigurationPtrOutput
	ToVpcIngressConnectionIngressVpcConfigurationPtrOutputWithContext(context.Context) VpcIngressConnectionIngressVpcConfigurationPtrOutput
}

type vpcIngressConnectionIngressVpcConfigurationPtrType VpcIngressConnectionIngressVpcConfigurationArgs

func VpcIngressConnectionIngressVpcConfigurationPtr(v *VpcIngressConnectionIngressVpcConfigurationArgs) VpcIngressConnectionIngressVpcConfigurationPtrInput {
	return (*vpcIngressConnectionIngressVpcConfigurationPtrType)(v)
}

func (*vpcIngressConnectionIngressVpcConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcIngressConnectionIngressVpcConfiguration)(nil)).Elem()
}

func (i *vpcIngressConnectionIngressVpcConfigurationPtrType) ToVpcIngressConnectionIngressVpcConfigurationPtrOutput() VpcIngressConnectionIngressVpcConfigurationPtrOutput {
	return i.ToVpcIngressConnectionIngressVpcConfigurationPtrOutputWithContext(context.Background())
}

func (i *vpcIngressConnectionIngressVpcConfigurationPtrType) ToVpcIngressConnectionIngressVpcConfigurationPtrOutputWithContext(ctx context.Context) VpcIngressConnectionIngressVpcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcIngressConnectionIngressVpcConfigurationPtrOutput)
}

type VpcIngressConnectionIngressVpcConfigurationOutput struct{ *pulumi.OutputState }

func (VpcIngressConnectionIngressVpcConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcIngressConnectionIngressVpcConfiguration)(nil)).Elem()
}

func (o VpcIngressConnectionIngressVpcConfigurationOutput) ToVpcIngressConnectionIngressVpcConfigurationOutput() VpcIngressConnectionIngressVpcConfigurationOutput {
	return o
}

func (o VpcIngressConnectionIngressVpcConfigurationOutput) ToVpcIngressConnectionIngressVpcConfigurationOutputWithContext(ctx context.Context) VpcIngressConnectionIngressVpcConfigurationOutput {
	return o
}

func (o VpcIngressConnectionIngressVpcConfigurationOutput) ToVpcIngressConnectionIngressVpcConfigurationPtrOutput() VpcIngressConnectionIngressVpcConfigurationPtrOutput {
	return o.ToVpcIngressConnectionIngressVpcConfigurationPtrOutputWithContext(context.Background())
}

func (o VpcIngressConnectionIngressVpcConfigurationOutput) ToVpcIngressConnectionIngressVpcConfigurationPtrOutputWithContext(ctx context.Context) VpcIngressConnectionIngressVpcConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpcIngressConnectionIngressVpcConfiguration) *VpcIngressConnectionIngressVpcConfiguration {
		return &v
	}).(VpcIngressConnectionIngressVpcConfigurationPtrOutput)
}

// The ID of the VPC endpoint that your App Runner service connects to.
func (o VpcIngressConnectionIngressVpcConfigurationOutput) VpcEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcIngressConnectionIngressVpcConfiguration) *string { return v.VpcEndpointId }).(pulumi.StringPtrOutput)
}

// The ID of the VPC that is used for the VPC endpoint.
func (o VpcIngressConnectionIngressVpcConfigurationOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcIngressConnectionIngressVpcConfiguration) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type VpcIngressConnectionIngressVpcConfigurationPtrOutput struct{ *pulumi.OutputState }

func (VpcIngressConnectionIngressVpcConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcIngressConnectionIngressVpcConfiguration)(nil)).Elem()
}

func (o VpcIngressConnectionIngressVpcConfigurationPtrOutput) ToVpcIngressConnectionIngressVpcConfigurationPtrOutput() VpcIngressConnectionIngressVpcConfigurationPtrOutput {
	return o
}

func (o VpcIngressConnectionIngressVpcConfigurationPtrOutput) ToVpcIngressConnectionIngressVpcConfigurationPtrOutputWithContext(ctx context.Context) VpcIngressConnectionIngressVpcConfigurationPtrOutput {
	return o
}

func (o VpcIngressConnectionIngressVpcConfigurationPtrOutput) Elem() VpcIngressConnectionIngressVpcConfigurationOutput {
	return o.ApplyT(func(v *VpcIngressConnectionIngressVpcConfiguration) VpcIngressConnectionIngressVpcConfiguration {
		if v != nil {
			return *v
		}
		var ret VpcIngressConnectionIngressVpcConfiguration
		return ret
	}).(VpcIngressConnectionIngressVpcConfigurationOutput)
}

// The ID of the VPC endpoint that your App Runner service connects to.
func (o VpcIngressConnectionIngressVpcConfigurationPtrOutput) VpcEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcIngressConnectionIngressVpcConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.VpcEndpointId
	}).(pulumi.StringPtrOutput)
}

// The ID of the VPC that is used for the VPC endpoint.
func (o VpcIngressConnectionIngressVpcConfigurationPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcIngressConnectionIngressVpcConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainAssociationCertificateValidationRecordInput)(nil)).Elem(), CustomDomainAssociationCertificateValidationRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainAssociationCertificateValidationRecordArrayInput)(nil)).Elem(), CustomDomainAssociationCertificateValidationRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObservabilityConfigurationTraceConfigurationInput)(nil)).Elem(), ObservabilityConfigurationTraceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ObservabilityConfigurationTraceConfigurationPtrInput)(nil)).Elem(), ObservabilityConfigurationTraceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEncryptionConfigurationInput)(nil)).Elem(), ServiceEncryptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEncryptionConfigurationPtrInput)(nil)).Elem(), ServiceEncryptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHealthCheckConfigurationInput)(nil)).Elem(), ServiceHealthCheckConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHealthCheckConfigurationPtrInput)(nil)).Elem(), ServiceHealthCheckConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceInstanceConfigurationInput)(nil)).Elem(), ServiceInstanceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceInstanceConfigurationPtrInput)(nil)).Elem(), ServiceInstanceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNetworkConfigurationInput)(nil)).Elem(), ServiceNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNetworkConfigurationPtrInput)(nil)).Elem(), ServiceNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNetworkConfigurationEgressConfigurationInput)(nil)).Elem(), ServiceNetworkConfigurationEgressConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNetworkConfigurationEgressConfigurationPtrInput)(nil)).Elem(), ServiceNetworkConfigurationEgressConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNetworkConfigurationIngressConfigurationInput)(nil)).Elem(), ServiceNetworkConfigurationIngressConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceNetworkConfigurationIngressConfigurationPtrInput)(nil)).Elem(), ServiceNetworkConfigurationIngressConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceObservabilityConfigurationInput)(nil)).Elem(), ServiceObservabilityConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceObservabilityConfigurationPtrInput)(nil)).Elem(), ServiceObservabilityConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSourceConfigurationInput)(nil)).Elem(), ServiceSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSourceConfigurationPtrInput)(nil)).Elem(), ServiceSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSourceConfigurationAuthenticationConfigurationInput)(nil)).Elem(), ServiceSourceConfigurationAuthenticationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSourceConfigurationAuthenticationConfigurationPtrInput)(nil)).Elem(), ServiceSourceConfigurationAuthenticationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSourceConfigurationCodeRepositoryInput)(nil)).Elem(), ServiceSourceConfigurationCodeRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSourceConfigurationCodeRepositoryPtrInput)(nil)).Elem(), ServiceSourceConfigurationCodeRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSourceConfigurationCodeRepositoryCodeConfigurationInput)(nil)).Elem(), ServiceSourceConfigurationCodeRepositoryCodeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrInput)(nil)).Elem(), ServiceSourceConfigurationCodeRepositoryCodeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesInput)(nil)).Elem(), ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrInput)(nil)).Elem(), ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSourceConfigurationCodeRepositorySourceCodeVersionInput)(nil)).Elem(), ServiceSourceConfigurationCodeRepositorySourceCodeVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrInput)(nil)).Elem(), ServiceSourceConfigurationCodeRepositorySourceCodeVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSourceConfigurationImageRepositoryInput)(nil)).Elem(), ServiceSourceConfigurationImageRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSourceConfigurationImageRepositoryPtrInput)(nil)).Elem(), ServiceSourceConfigurationImageRepositoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSourceConfigurationImageRepositoryImageConfigurationInput)(nil)).Elem(), ServiceSourceConfigurationImageRepositoryImageConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceSourceConfigurationImageRepositoryImageConfigurationPtrInput)(nil)).Elem(), ServiceSourceConfigurationImageRepositoryImageConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcIngressConnectionIngressVpcConfigurationInput)(nil)).Elem(), VpcIngressConnectionIngressVpcConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcIngressConnectionIngressVpcConfigurationPtrInput)(nil)).Elem(), VpcIngressConnectionIngressVpcConfigurationArgs{})
	pulumi.RegisterOutputType(CustomDomainAssociationCertificateValidationRecordOutput{})
	pulumi.RegisterOutputType(CustomDomainAssociationCertificateValidationRecordArrayOutput{})
	pulumi.RegisterOutputType(ObservabilityConfigurationTraceConfigurationOutput{})
	pulumi.RegisterOutputType(ObservabilityConfigurationTraceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServiceEncryptionConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceEncryptionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServiceHealthCheckConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceHealthCheckConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServiceInstanceConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceInstanceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServiceNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceNetworkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServiceNetworkConfigurationEgressConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceNetworkConfigurationEgressConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServiceNetworkConfigurationIngressConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceNetworkConfigurationIngressConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServiceObservabilityConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceObservabilityConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServiceSourceConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceSourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServiceSourceConfigurationAuthenticationConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceSourceConfigurationAuthenticationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServiceSourceConfigurationCodeRepositoryOutput{})
	pulumi.RegisterOutputType(ServiceSourceConfigurationCodeRepositoryPtrOutput{})
	pulumi.RegisterOutputType(ServiceSourceConfigurationCodeRepositoryCodeConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceSourceConfigurationCodeRepositoryCodeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesOutput{})
	pulumi.RegisterOutputType(ServiceSourceConfigurationCodeRepositoryCodeConfigurationCodeConfigurationValuesPtrOutput{})
	pulumi.RegisterOutputType(ServiceSourceConfigurationCodeRepositorySourceCodeVersionOutput{})
	pulumi.RegisterOutputType(ServiceSourceConfigurationCodeRepositorySourceCodeVersionPtrOutput{})
	pulumi.RegisterOutputType(ServiceSourceConfigurationImageRepositoryOutput{})
	pulumi.RegisterOutputType(ServiceSourceConfigurationImageRepositoryPtrOutput{})
	pulumi.RegisterOutputType(ServiceSourceConfigurationImageRepositoryImageConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceSourceConfigurationImageRepositoryImageConfigurationPtrOutput{})
	pulumi.RegisterOutputType(VpcIngressConnectionIngressVpcConfigurationOutput{})
	pulumi.RegisterOutputType(VpcIngressConnectionIngressVpcConfigurationPtrOutput{})
}
