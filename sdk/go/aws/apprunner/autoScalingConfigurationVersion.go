// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apprunner

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AutoScalingConfigurationVersion struct {
	pulumi.CustomResourceState

	Arn                              pulumi.StringOutput    `pulumi:"arn"`
	AutoScalingConfigurationName     pulumi.StringOutput    `pulumi:"autoScalingConfigurationName"`
	AutoScalingConfigurationRevision pulumi.IntOutput       `pulumi:"autoScalingConfigurationRevision"`
	Latest                           pulumi.BoolOutput      `pulumi:"latest"`
	MaxConcurrency                   pulumi.IntPtrOutput    `pulumi:"maxConcurrency"`
	MaxSize                          pulumi.IntPtrOutput    `pulumi:"maxSize"`
	MinSize                          pulumi.IntPtrOutput    `pulumi:"minSize"`
	Status                           pulumi.StringOutput    `pulumi:"status"`
	Tags                             pulumi.StringMapOutput `pulumi:"tags"`
	TagsAll                          pulumi.StringMapOutput `pulumi:"tagsAll"`
}

// NewAutoScalingConfigurationVersion registers a new resource with the given unique name, arguments, and options.
func NewAutoScalingConfigurationVersion(ctx *pulumi.Context,
	name string, args *AutoScalingConfigurationVersionArgs, opts ...pulumi.ResourceOption) (*AutoScalingConfigurationVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutoScalingConfigurationName == nil {
		return nil, errors.New("invalid value for required argument 'AutoScalingConfigurationName'")
	}
	var resource AutoScalingConfigurationVersion
	err := ctx.RegisterResource("aws:apprunner/autoScalingConfigurationVersion:AutoScalingConfigurationVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAutoScalingConfigurationVersion gets an existing AutoScalingConfigurationVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAutoScalingConfigurationVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AutoScalingConfigurationVersionState, opts ...pulumi.ResourceOption) (*AutoScalingConfigurationVersion, error) {
	var resource AutoScalingConfigurationVersion
	err := ctx.ReadResource("aws:apprunner/autoScalingConfigurationVersion:AutoScalingConfigurationVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AutoScalingConfigurationVersion resources.
type autoScalingConfigurationVersionState struct {
	Arn                              *string           `pulumi:"arn"`
	AutoScalingConfigurationName     *string           `pulumi:"autoScalingConfigurationName"`
	AutoScalingConfigurationRevision *int              `pulumi:"autoScalingConfigurationRevision"`
	Latest                           *bool             `pulumi:"latest"`
	MaxConcurrency                   *int              `pulumi:"maxConcurrency"`
	MaxSize                          *int              `pulumi:"maxSize"`
	MinSize                          *int              `pulumi:"minSize"`
	Status                           *string           `pulumi:"status"`
	Tags                             map[string]string `pulumi:"tags"`
	TagsAll                          map[string]string `pulumi:"tagsAll"`
}

type AutoScalingConfigurationVersionState struct {
	Arn                              pulumi.StringPtrInput
	AutoScalingConfigurationName     pulumi.StringPtrInput
	AutoScalingConfigurationRevision pulumi.IntPtrInput
	Latest                           pulumi.BoolPtrInput
	MaxConcurrency                   pulumi.IntPtrInput
	MaxSize                          pulumi.IntPtrInput
	MinSize                          pulumi.IntPtrInput
	Status                           pulumi.StringPtrInput
	Tags                             pulumi.StringMapInput
	TagsAll                          pulumi.StringMapInput
}

func (AutoScalingConfigurationVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*autoScalingConfigurationVersionState)(nil)).Elem()
}

type autoScalingConfigurationVersionArgs struct {
	AutoScalingConfigurationName string            `pulumi:"autoScalingConfigurationName"`
	MaxConcurrency               *int              `pulumi:"maxConcurrency"`
	MaxSize                      *int              `pulumi:"maxSize"`
	MinSize                      *int              `pulumi:"minSize"`
	Tags                         map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a AutoScalingConfigurationVersion resource.
type AutoScalingConfigurationVersionArgs struct {
	AutoScalingConfigurationName pulumi.StringInput
	MaxConcurrency               pulumi.IntPtrInput
	MaxSize                      pulumi.IntPtrInput
	MinSize                      pulumi.IntPtrInput
	Tags                         pulumi.StringMapInput
}

func (AutoScalingConfigurationVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*autoScalingConfigurationVersionArgs)(nil)).Elem()
}

type AutoScalingConfigurationVersionInput interface {
	pulumi.Input

	ToAutoScalingConfigurationVersionOutput() AutoScalingConfigurationVersionOutput
	ToAutoScalingConfigurationVersionOutputWithContext(ctx context.Context) AutoScalingConfigurationVersionOutput
}

func (*AutoScalingConfigurationVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoScalingConfigurationVersion)(nil)).Elem()
}

func (i *AutoScalingConfigurationVersion) ToAutoScalingConfigurationVersionOutput() AutoScalingConfigurationVersionOutput {
	return i.ToAutoScalingConfigurationVersionOutputWithContext(context.Background())
}

func (i *AutoScalingConfigurationVersion) ToAutoScalingConfigurationVersionOutputWithContext(ctx context.Context) AutoScalingConfigurationVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScalingConfigurationVersionOutput)
}

// AutoScalingConfigurationVersionArrayInput is an input type that accepts AutoScalingConfigurationVersionArray and AutoScalingConfigurationVersionArrayOutput values.
// You can construct a concrete instance of `AutoScalingConfigurationVersionArrayInput` via:
//
//	AutoScalingConfigurationVersionArray{ AutoScalingConfigurationVersionArgs{...} }
type AutoScalingConfigurationVersionArrayInput interface {
	pulumi.Input

	ToAutoScalingConfigurationVersionArrayOutput() AutoScalingConfigurationVersionArrayOutput
	ToAutoScalingConfigurationVersionArrayOutputWithContext(context.Context) AutoScalingConfigurationVersionArrayOutput
}

type AutoScalingConfigurationVersionArray []AutoScalingConfigurationVersionInput

func (AutoScalingConfigurationVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutoScalingConfigurationVersion)(nil)).Elem()
}

func (i AutoScalingConfigurationVersionArray) ToAutoScalingConfigurationVersionArrayOutput() AutoScalingConfigurationVersionArrayOutput {
	return i.ToAutoScalingConfigurationVersionArrayOutputWithContext(context.Background())
}

func (i AutoScalingConfigurationVersionArray) ToAutoScalingConfigurationVersionArrayOutputWithContext(ctx context.Context) AutoScalingConfigurationVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScalingConfigurationVersionArrayOutput)
}

// AutoScalingConfigurationVersionMapInput is an input type that accepts AutoScalingConfigurationVersionMap and AutoScalingConfigurationVersionMapOutput values.
// You can construct a concrete instance of `AutoScalingConfigurationVersionMapInput` via:
//
//	AutoScalingConfigurationVersionMap{ "key": AutoScalingConfigurationVersionArgs{...} }
type AutoScalingConfigurationVersionMapInput interface {
	pulumi.Input

	ToAutoScalingConfigurationVersionMapOutput() AutoScalingConfigurationVersionMapOutput
	ToAutoScalingConfigurationVersionMapOutputWithContext(context.Context) AutoScalingConfigurationVersionMapOutput
}

type AutoScalingConfigurationVersionMap map[string]AutoScalingConfigurationVersionInput

func (AutoScalingConfigurationVersionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutoScalingConfigurationVersion)(nil)).Elem()
}

func (i AutoScalingConfigurationVersionMap) ToAutoScalingConfigurationVersionMapOutput() AutoScalingConfigurationVersionMapOutput {
	return i.ToAutoScalingConfigurationVersionMapOutputWithContext(context.Background())
}

func (i AutoScalingConfigurationVersionMap) ToAutoScalingConfigurationVersionMapOutputWithContext(ctx context.Context) AutoScalingConfigurationVersionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoScalingConfigurationVersionMapOutput)
}

type AutoScalingConfigurationVersionOutput struct{ *pulumi.OutputState }

func (AutoScalingConfigurationVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoScalingConfigurationVersion)(nil)).Elem()
}

func (o AutoScalingConfigurationVersionOutput) ToAutoScalingConfigurationVersionOutput() AutoScalingConfigurationVersionOutput {
	return o
}

func (o AutoScalingConfigurationVersionOutput) ToAutoScalingConfigurationVersionOutputWithContext(ctx context.Context) AutoScalingConfigurationVersionOutput {
	return o
}

func (o AutoScalingConfigurationVersionOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoScalingConfigurationVersion) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o AutoScalingConfigurationVersionOutput) AutoScalingConfigurationName() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoScalingConfigurationVersion) pulumi.StringOutput { return v.AutoScalingConfigurationName }).(pulumi.StringOutput)
}

func (o AutoScalingConfigurationVersionOutput) AutoScalingConfigurationRevision() pulumi.IntOutput {
	return o.ApplyT(func(v *AutoScalingConfigurationVersion) pulumi.IntOutput { return v.AutoScalingConfigurationRevision }).(pulumi.IntOutput)
}

func (o AutoScalingConfigurationVersionOutput) Latest() pulumi.BoolOutput {
	return o.ApplyT(func(v *AutoScalingConfigurationVersion) pulumi.BoolOutput { return v.Latest }).(pulumi.BoolOutput)
}

func (o AutoScalingConfigurationVersionOutput) MaxConcurrency() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScalingConfigurationVersion) pulumi.IntPtrOutput { return v.MaxConcurrency }).(pulumi.IntPtrOutput)
}

func (o AutoScalingConfigurationVersionOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScalingConfigurationVersion) pulumi.IntPtrOutput { return v.MaxSize }).(pulumi.IntPtrOutput)
}

func (o AutoScalingConfigurationVersionOutput) MinSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoScalingConfigurationVersion) pulumi.IntPtrOutput { return v.MinSize }).(pulumi.IntPtrOutput)
}

func (o AutoScalingConfigurationVersionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *AutoScalingConfigurationVersion) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o AutoScalingConfigurationVersionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AutoScalingConfigurationVersion) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o AutoScalingConfigurationVersionOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AutoScalingConfigurationVersion) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type AutoScalingConfigurationVersionArrayOutput struct{ *pulumi.OutputState }

func (AutoScalingConfigurationVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AutoScalingConfigurationVersion)(nil)).Elem()
}

func (o AutoScalingConfigurationVersionArrayOutput) ToAutoScalingConfigurationVersionArrayOutput() AutoScalingConfigurationVersionArrayOutput {
	return o
}

func (o AutoScalingConfigurationVersionArrayOutput) ToAutoScalingConfigurationVersionArrayOutputWithContext(ctx context.Context) AutoScalingConfigurationVersionArrayOutput {
	return o
}

func (o AutoScalingConfigurationVersionArrayOutput) Index(i pulumi.IntInput) AutoScalingConfigurationVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AutoScalingConfigurationVersion {
		return vs[0].([]*AutoScalingConfigurationVersion)[vs[1].(int)]
	}).(AutoScalingConfigurationVersionOutput)
}

type AutoScalingConfigurationVersionMapOutput struct{ *pulumi.OutputState }

func (AutoScalingConfigurationVersionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AutoScalingConfigurationVersion)(nil)).Elem()
}

func (o AutoScalingConfigurationVersionMapOutput) ToAutoScalingConfigurationVersionMapOutput() AutoScalingConfigurationVersionMapOutput {
	return o
}

func (o AutoScalingConfigurationVersionMapOutput) ToAutoScalingConfigurationVersionMapOutputWithContext(ctx context.Context) AutoScalingConfigurationVersionMapOutput {
	return o
}

func (o AutoScalingConfigurationVersionMapOutput) MapIndex(k pulumi.StringInput) AutoScalingConfigurationVersionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AutoScalingConfigurationVersion {
		return vs[0].(map[string]*AutoScalingConfigurationVersion)[vs[1].(string)]
	}).(AutoScalingConfigurationVersionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AutoScalingConfigurationVersionInput)(nil)).Elem(), &AutoScalingConfigurationVersion{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoScalingConfigurationVersionArrayInput)(nil)).Elem(), AutoScalingConfigurationVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AutoScalingConfigurationVersionMapInput)(nil)).Elem(), AutoScalingConfigurationVersionMap{})
	pulumi.RegisterOutputType(AutoScalingConfigurationVersionOutput{})
	pulumi.RegisterOutputType(AutoScalingConfigurationVersionArrayOutput{})
	pulumi.RegisterOutputType(AutoScalingConfigurationVersionMapOutput{})
}
