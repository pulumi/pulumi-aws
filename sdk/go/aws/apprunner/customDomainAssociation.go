// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apprunner

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CustomDomainAssociation struct {
	pulumi.CustomResourceState

	CertificateValidationRecords CustomDomainAssociationCertificateValidationRecordArrayOutput `pulumi:"certificateValidationRecords"`
	DnsTarget                    pulumi.StringOutput                                           `pulumi:"dnsTarget"`
	DomainName                   pulumi.StringOutput                                           `pulumi:"domainName"`
	EnableWwwSubdomain           pulumi.BoolPtrOutput                                          `pulumi:"enableWwwSubdomain"`
	ServiceArn                   pulumi.StringOutput                                           `pulumi:"serviceArn"`
	Status                       pulumi.StringOutput                                           `pulumi:"status"`
}

// NewCustomDomainAssociation registers a new resource with the given unique name, arguments, and options.
func NewCustomDomainAssociation(ctx *pulumi.Context,
	name string, args *CustomDomainAssociationArgs, opts ...pulumi.ResourceOption) (*CustomDomainAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainName == nil {
		return nil, errors.New("invalid value for required argument 'DomainName'")
	}
	if args.ServiceArn == nil {
		return nil, errors.New("invalid value for required argument 'ServiceArn'")
	}
	var resource CustomDomainAssociation
	err := ctx.RegisterResource("aws:apprunner/customDomainAssociation:CustomDomainAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomDomainAssociation gets an existing CustomDomainAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomDomainAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomDomainAssociationState, opts ...pulumi.ResourceOption) (*CustomDomainAssociation, error) {
	var resource CustomDomainAssociation
	err := ctx.ReadResource("aws:apprunner/customDomainAssociation:CustomDomainAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomDomainAssociation resources.
type customDomainAssociationState struct {
	CertificateValidationRecords []CustomDomainAssociationCertificateValidationRecord `pulumi:"certificateValidationRecords"`
	DnsTarget                    *string                                              `pulumi:"dnsTarget"`
	DomainName                   *string                                              `pulumi:"domainName"`
	EnableWwwSubdomain           *bool                                                `pulumi:"enableWwwSubdomain"`
	ServiceArn                   *string                                              `pulumi:"serviceArn"`
	Status                       *string                                              `pulumi:"status"`
}

type CustomDomainAssociationState struct {
	CertificateValidationRecords CustomDomainAssociationCertificateValidationRecordArrayInput
	DnsTarget                    pulumi.StringPtrInput
	DomainName                   pulumi.StringPtrInput
	EnableWwwSubdomain           pulumi.BoolPtrInput
	ServiceArn                   pulumi.StringPtrInput
	Status                       pulumi.StringPtrInput
}

func (CustomDomainAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*customDomainAssociationState)(nil)).Elem()
}

type customDomainAssociationArgs struct {
	DomainName         string `pulumi:"domainName"`
	EnableWwwSubdomain *bool  `pulumi:"enableWwwSubdomain"`
	ServiceArn         string `pulumi:"serviceArn"`
}

// The set of arguments for constructing a CustomDomainAssociation resource.
type CustomDomainAssociationArgs struct {
	DomainName         pulumi.StringInput
	EnableWwwSubdomain pulumi.BoolPtrInput
	ServiceArn         pulumi.StringInput
}

func (CustomDomainAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customDomainAssociationArgs)(nil)).Elem()
}

type CustomDomainAssociationInput interface {
	pulumi.Input

	ToCustomDomainAssociationOutput() CustomDomainAssociationOutput
	ToCustomDomainAssociationOutputWithContext(ctx context.Context) CustomDomainAssociationOutput
}

func (*CustomDomainAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomainAssociation)(nil)).Elem()
}

func (i *CustomDomainAssociation) ToCustomDomainAssociationOutput() CustomDomainAssociationOutput {
	return i.ToCustomDomainAssociationOutputWithContext(context.Background())
}

func (i *CustomDomainAssociation) ToCustomDomainAssociationOutputWithContext(ctx context.Context) CustomDomainAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainAssociationOutput)
}

// CustomDomainAssociationArrayInput is an input type that accepts CustomDomainAssociationArray and CustomDomainAssociationArrayOutput values.
// You can construct a concrete instance of `CustomDomainAssociationArrayInput` via:
//
//	CustomDomainAssociationArray{ CustomDomainAssociationArgs{...} }
type CustomDomainAssociationArrayInput interface {
	pulumi.Input

	ToCustomDomainAssociationArrayOutput() CustomDomainAssociationArrayOutput
	ToCustomDomainAssociationArrayOutputWithContext(context.Context) CustomDomainAssociationArrayOutput
}

type CustomDomainAssociationArray []CustomDomainAssociationInput

func (CustomDomainAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomDomainAssociation)(nil)).Elem()
}

func (i CustomDomainAssociationArray) ToCustomDomainAssociationArrayOutput() CustomDomainAssociationArrayOutput {
	return i.ToCustomDomainAssociationArrayOutputWithContext(context.Background())
}

func (i CustomDomainAssociationArray) ToCustomDomainAssociationArrayOutputWithContext(ctx context.Context) CustomDomainAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainAssociationArrayOutput)
}

// CustomDomainAssociationMapInput is an input type that accepts CustomDomainAssociationMap and CustomDomainAssociationMapOutput values.
// You can construct a concrete instance of `CustomDomainAssociationMapInput` via:
//
//	CustomDomainAssociationMap{ "key": CustomDomainAssociationArgs{...} }
type CustomDomainAssociationMapInput interface {
	pulumi.Input

	ToCustomDomainAssociationMapOutput() CustomDomainAssociationMapOutput
	ToCustomDomainAssociationMapOutputWithContext(context.Context) CustomDomainAssociationMapOutput
}

type CustomDomainAssociationMap map[string]CustomDomainAssociationInput

func (CustomDomainAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomDomainAssociation)(nil)).Elem()
}

func (i CustomDomainAssociationMap) ToCustomDomainAssociationMapOutput() CustomDomainAssociationMapOutput {
	return i.ToCustomDomainAssociationMapOutputWithContext(context.Background())
}

func (i CustomDomainAssociationMap) ToCustomDomainAssociationMapOutputWithContext(ctx context.Context) CustomDomainAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomDomainAssociationMapOutput)
}

type CustomDomainAssociationOutput struct{ *pulumi.OutputState }

func (CustomDomainAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomDomainAssociation)(nil)).Elem()
}

func (o CustomDomainAssociationOutput) ToCustomDomainAssociationOutput() CustomDomainAssociationOutput {
	return o
}

func (o CustomDomainAssociationOutput) ToCustomDomainAssociationOutputWithContext(ctx context.Context) CustomDomainAssociationOutput {
	return o
}

func (o CustomDomainAssociationOutput) CertificateValidationRecords() CustomDomainAssociationCertificateValidationRecordArrayOutput {
	return o.ApplyT(func(v *CustomDomainAssociation) CustomDomainAssociationCertificateValidationRecordArrayOutput {
		return v.CertificateValidationRecords
	}).(CustomDomainAssociationCertificateValidationRecordArrayOutput)
}

func (o CustomDomainAssociationOutput) DnsTarget() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomDomainAssociation) pulumi.StringOutput { return v.DnsTarget }).(pulumi.StringOutput)
}

func (o CustomDomainAssociationOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomDomainAssociation) pulumi.StringOutput { return v.DomainName }).(pulumi.StringOutput)
}

func (o CustomDomainAssociationOutput) EnableWwwSubdomain() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CustomDomainAssociation) pulumi.BoolPtrOutput { return v.EnableWwwSubdomain }).(pulumi.BoolPtrOutput)
}

func (o CustomDomainAssociationOutput) ServiceArn() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomDomainAssociation) pulumi.StringOutput { return v.ServiceArn }).(pulumi.StringOutput)
}

func (o CustomDomainAssociationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomDomainAssociation) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type CustomDomainAssociationArrayOutput struct{ *pulumi.OutputState }

func (CustomDomainAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomDomainAssociation)(nil)).Elem()
}

func (o CustomDomainAssociationArrayOutput) ToCustomDomainAssociationArrayOutput() CustomDomainAssociationArrayOutput {
	return o
}

func (o CustomDomainAssociationArrayOutput) ToCustomDomainAssociationArrayOutputWithContext(ctx context.Context) CustomDomainAssociationArrayOutput {
	return o
}

func (o CustomDomainAssociationArrayOutput) Index(i pulumi.IntInput) CustomDomainAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CustomDomainAssociation {
		return vs[0].([]*CustomDomainAssociation)[vs[1].(int)]
	}).(CustomDomainAssociationOutput)
}

type CustomDomainAssociationMapOutput struct{ *pulumi.OutputState }

func (CustomDomainAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomDomainAssociation)(nil)).Elem()
}

func (o CustomDomainAssociationMapOutput) ToCustomDomainAssociationMapOutput() CustomDomainAssociationMapOutput {
	return o
}

func (o CustomDomainAssociationMapOutput) ToCustomDomainAssociationMapOutputWithContext(ctx context.Context) CustomDomainAssociationMapOutput {
	return o
}

func (o CustomDomainAssociationMapOutput) MapIndex(k pulumi.StringInput) CustomDomainAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CustomDomainAssociation {
		return vs[0].(map[string]*CustomDomainAssociation)[vs[1].(string)]
	}).(CustomDomainAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainAssociationInput)(nil)).Elem(), &CustomDomainAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainAssociationArrayInput)(nil)).Elem(), CustomDomainAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomDomainAssociationMapInput)(nil)).Elem(), CustomDomainAssociationMap{})
	pulumi.RegisterOutputType(CustomDomainAssociationOutput{})
	pulumi.RegisterOutputType(CustomDomainAssociationArrayOutput{})
	pulumi.RegisterOutputType(CustomDomainAssociationMapOutput{})
}
