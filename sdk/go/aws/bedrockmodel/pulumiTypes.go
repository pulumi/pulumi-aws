// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bedrockmodel

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type InvocationLoggingConfigurationLoggingConfig struct {
	// CloudWatch logging configuration. See `cloudwatchConfig`.
	CloudwatchConfig *InvocationLoggingConfigurationLoggingConfigCloudwatchConfig `pulumi:"cloudwatchConfig"`
	// Set to include embeddings data in the log delivery.
	EmbeddingDataDeliveryEnabled bool `pulumi:"embeddingDataDeliveryEnabled"`
	// Set to include image data in the log delivery.
	ImageDataDeliveryEnabled bool `pulumi:"imageDataDeliveryEnabled"`
	// S3 configuration for storing log data. See `s3Config`.
	S3Config *InvocationLoggingConfigurationLoggingConfigS3Config `pulumi:"s3Config"`
	// Set to include text data in the log delivery.
	TextDataDeliveryEnabled bool `pulumi:"textDataDeliveryEnabled"`
}

// InvocationLoggingConfigurationLoggingConfigInput is an input type that accepts InvocationLoggingConfigurationLoggingConfigArgs and InvocationLoggingConfigurationLoggingConfigOutput values.
// You can construct a concrete instance of `InvocationLoggingConfigurationLoggingConfigInput` via:
//
//	InvocationLoggingConfigurationLoggingConfigArgs{...}
type InvocationLoggingConfigurationLoggingConfigInput interface {
	pulumi.Input

	ToInvocationLoggingConfigurationLoggingConfigOutput() InvocationLoggingConfigurationLoggingConfigOutput
	ToInvocationLoggingConfigurationLoggingConfigOutputWithContext(context.Context) InvocationLoggingConfigurationLoggingConfigOutput
}

type InvocationLoggingConfigurationLoggingConfigArgs struct {
	// CloudWatch logging configuration. See `cloudwatchConfig`.
	CloudwatchConfig InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrInput `pulumi:"cloudwatchConfig"`
	// Set to include embeddings data in the log delivery.
	EmbeddingDataDeliveryEnabled pulumi.BoolInput `pulumi:"embeddingDataDeliveryEnabled"`
	// Set to include image data in the log delivery.
	ImageDataDeliveryEnabled pulumi.BoolInput `pulumi:"imageDataDeliveryEnabled"`
	// S3 configuration for storing log data. See `s3Config`.
	S3Config InvocationLoggingConfigurationLoggingConfigS3ConfigPtrInput `pulumi:"s3Config"`
	// Set to include text data in the log delivery.
	TextDataDeliveryEnabled pulumi.BoolInput `pulumi:"textDataDeliveryEnabled"`
}

func (InvocationLoggingConfigurationLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InvocationLoggingConfigurationLoggingConfig)(nil)).Elem()
}

func (i InvocationLoggingConfigurationLoggingConfigArgs) ToInvocationLoggingConfigurationLoggingConfigOutput() InvocationLoggingConfigurationLoggingConfigOutput {
	return i.ToInvocationLoggingConfigurationLoggingConfigOutputWithContext(context.Background())
}

func (i InvocationLoggingConfigurationLoggingConfigArgs) ToInvocationLoggingConfigurationLoggingConfigOutputWithContext(ctx context.Context) InvocationLoggingConfigurationLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvocationLoggingConfigurationLoggingConfigOutput)
}

func (i InvocationLoggingConfigurationLoggingConfigArgs) ToInvocationLoggingConfigurationLoggingConfigPtrOutput() InvocationLoggingConfigurationLoggingConfigPtrOutput {
	return i.ToInvocationLoggingConfigurationLoggingConfigPtrOutputWithContext(context.Background())
}

func (i InvocationLoggingConfigurationLoggingConfigArgs) ToInvocationLoggingConfigurationLoggingConfigPtrOutputWithContext(ctx context.Context) InvocationLoggingConfigurationLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvocationLoggingConfigurationLoggingConfigOutput).ToInvocationLoggingConfigurationLoggingConfigPtrOutputWithContext(ctx)
}

// InvocationLoggingConfigurationLoggingConfigPtrInput is an input type that accepts InvocationLoggingConfigurationLoggingConfigArgs, InvocationLoggingConfigurationLoggingConfigPtr and InvocationLoggingConfigurationLoggingConfigPtrOutput values.
// You can construct a concrete instance of `InvocationLoggingConfigurationLoggingConfigPtrInput` via:
//
//	        InvocationLoggingConfigurationLoggingConfigArgs{...}
//
//	or:
//
//	        nil
type InvocationLoggingConfigurationLoggingConfigPtrInput interface {
	pulumi.Input

	ToInvocationLoggingConfigurationLoggingConfigPtrOutput() InvocationLoggingConfigurationLoggingConfigPtrOutput
	ToInvocationLoggingConfigurationLoggingConfigPtrOutputWithContext(context.Context) InvocationLoggingConfigurationLoggingConfigPtrOutput
}

type invocationLoggingConfigurationLoggingConfigPtrType InvocationLoggingConfigurationLoggingConfigArgs

func InvocationLoggingConfigurationLoggingConfigPtr(v *InvocationLoggingConfigurationLoggingConfigArgs) InvocationLoggingConfigurationLoggingConfigPtrInput {
	return (*invocationLoggingConfigurationLoggingConfigPtrType)(v)
}

func (*invocationLoggingConfigurationLoggingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InvocationLoggingConfigurationLoggingConfig)(nil)).Elem()
}

func (i *invocationLoggingConfigurationLoggingConfigPtrType) ToInvocationLoggingConfigurationLoggingConfigPtrOutput() InvocationLoggingConfigurationLoggingConfigPtrOutput {
	return i.ToInvocationLoggingConfigurationLoggingConfigPtrOutputWithContext(context.Background())
}

func (i *invocationLoggingConfigurationLoggingConfigPtrType) ToInvocationLoggingConfigurationLoggingConfigPtrOutputWithContext(ctx context.Context) InvocationLoggingConfigurationLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvocationLoggingConfigurationLoggingConfigPtrOutput)
}

type InvocationLoggingConfigurationLoggingConfigOutput struct{ *pulumi.OutputState }

func (InvocationLoggingConfigurationLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InvocationLoggingConfigurationLoggingConfig)(nil)).Elem()
}

func (o InvocationLoggingConfigurationLoggingConfigOutput) ToInvocationLoggingConfigurationLoggingConfigOutput() InvocationLoggingConfigurationLoggingConfigOutput {
	return o
}

func (o InvocationLoggingConfigurationLoggingConfigOutput) ToInvocationLoggingConfigurationLoggingConfigOutputWithContext(ctx context.Context) InvocationLoggingConfigurationLoggingConfigOutput {
	return o
}

func (o InvocationLoggingConfigurationLoggingConfigOutput) ToInvocationLoggingConfigurationLoggingConfigPtrOutput() InvocationLoggingConfigurationLoggingConfigPtrOutput {
	return o.ToInvocationLoggingConfigurationLoggingConfigPtrOutputWithContext(context.Background())
}

func (o InvocationLoggingConfigurationLoggingConfigOutput) ToInvocationLoggingConfigurationLoggingConfigPtrOutputWithContext(ctx context.Context) InvocationLoggingConfigurationLoggingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InvocationLoggingConfigurationLoggingConfig) *InvocationLoggingConfigurationLoggingConfig {
		return &v
	}).(InvocationLoggingConfigurationLoggingConfigPtrOutput)
}

// CloudWatch logging configuration. See `cloudwatchConfig`.
func (o InvocationLoggingConfigurationLoggingConfigOutput) CloudwatchConfig() InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput {
	return o.ApplyT(func(v InvocationLoggingConfigurationLoggingConfig) *InvocationLoggingConfigurationLoggingConfigCloudwatchConfig {
		return v.CloudwatchConfig
	}).(InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput)
}

// Set to include embeddings data in the log delivery.
func (o InvocationLoggingConfigurationLoggingConfigOutput) EmbeddingDataDeliveryEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v InvocationLoggingConfigurationLoggingConfig) bool { return v.EmbeddingDataDeliveryEnabled }).(pulumi.BoolOutput)
}

// Set to include image data in the log delivery.
func (o InvocationLoggingConfigurationLoggingConfigOutput) ImageDataDeliveryEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v InvocationLoggingConfigurationLoggingConfig) bool { return v.ImageDataDeliveryEnabled }).(pulumi.BoolOutput)
}

// S3 configuration for storing log data. See `s3Config`.
func (o InvocationLoggingConfigurationLoggingConfigOutput) S3Config() InvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput {
	return o.ApplyT(func(v InvocationLoggingConfigurationLoggingConfig) *InvocationLoggingConfigurationLoggingConfigS3Config {
		return v.S3Config
	}).(InvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput)
}

// Set to include text data in the log delivery.
func (o InvocationLoggingConfigurationLoggingConfigOutput) TextDataDeliveryEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v InvocationLoggingConfigurationLoggingConfig) bool { return v.TextDataDeliveryEnabled }).(pulumi.BoolOutput)
}

type InvocationLoggingConfigurationLoggingConfigPtrOutput struct{ *pulumi.OutputState }

func (InvocationLoggingConfigurationLoggingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InvocationLoggingConfigurationLoggingConfig)(nil)).Elem()
}

func (o InvocationLoggingConfigurationLoggingConfigPtrOutput) ToInvocationLoggingConfigurationLoggingConfigPtrOutput() InvocationLoggingConfigurationLoggingConfigPtrOutput {
	return o
}

func (o InvocationLoggingConfigurationLoggingConfigPtrOutput) ToInvocationLoggingConfigurationLoggingConfigPtrOutputWithContext(ctx context.Context) InvocationLoggingConfigurationLoggingConfigPtrOutput {
	return o
}

func (o InvocationLoggingConfigurationLoggingConfigPtrOutput) Elem() InvocationLoggingConfigurationLoggingConfigOutput {
	return o.ApplyT(func(v *InvocationLoggingConfigurationLoggingConfig) InvocationLoggingConfigurationLoggingConfig {
		if v != nil {
			return *v
		}
		var ret InvocationLoggingConfigurationLoggingConfig
		return ret
	}).(InvocationLoggingConfigurationLoggingConfigOutput)
}

// CloudWatch logging configuration. See `cloudwatchConfig`.
func (o InvocationLoggingConfigurationLoggingConfigPtrOutput) CloudwatchConfig() InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput {
	return o.ApplyT(func(v *InvocationLoggingConfigurationLoggingConfig) *InvocationLoggingConfigurationLoggingConfigCloudwatchConfig {
		if v == nil {
			return nil
		}
		return v.CloudwatchConfig
	}).(InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput)
}

// Set to include embeddings data in the log delivery.
func (o InvocationLoggingConfigurationLoggingConfigPtrOutput) EmbeddingDataDeliveryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InvocationLoggingConfigurationLoggingConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.EmbeddingDataDeliveryEnabled
	}).(pulumi.BoolPtrOutput)
}

// Set to include image data in the log delivery.
func (o InvocationLoggingConfigurationLoggingConfigPtrOutput) ImageDataDeliveryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InvocationLoggingConfigurationLoggingConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.ImageDataDeliveryEnabled
	}).(pulumi.BoolPtrOutput)
}

// S3 configuration for storing log data. See `s3Config`.
func (o InvocationLoggingConfigurationLoggingConfigPtrOutput) S3Config() InvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput {
	return o.ApplyT(func(v *InvocationLoggingConfigurationLoggingConfig) *InvocationLoggingConfigurationLoggingConfigS3Config {
		if v == nil {
			return nil
		}
		return v.S3Config
	}).(InvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput)
}

// Set to include text data in the log delivery.
func (o InvocationLoggingConfigurationLoggingConfigPtrOutput) TextDataDeliveryEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InvocationLoggingConfigurationLoggingConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.TextDataDeliveryEnabled
	}).(pulumi.BoolPtrOutput)
}

type InvocationLoggingConfigurationLoggingConfigCloudwatchConfig struct {
	// S3 configuration for delivering a large amount of data. See `s3Config`.
	LargeDataDeliveryS3Config *InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3Config `pulumi:"largeDataDeliveryS3Config"`
	// Log group name.
	LogGroupName *string `pulumi:"logGroupName"`
	// IAM Role ARN.
	//
	// The following arguments are optional:
	RoleArn *string `pulumi:"roleArn"`
}

// InvocationLoggingConfigurationLoggingConfigCloudwatchConfigInput is an input type that accepts InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs and InvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutput values.
// You can construct a concrete instance of `InvocationLoggingConfigurationLoggingConfigCloudwatchConfigInput` via:
//
//	InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs{...}
type InvocationLoggingConfigurationLoggingConfigCloudwatchConfigInput interface {
	pulumi.Input

	ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutput() InvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutput
	ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutputWithContext(context.Context) InvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutput
}

type InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs struct {
	// S3 configuration for delivering a large amount of data. See `s3Config`.
	LargeDataDeliveryS3Config InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrInput `pulumi:"largeDataDeliveryS3Config"`
	// Log group name.
	LogGroupName pulumi.StringPtrInput `pulumi:"logGroupName"`
	// IAM Role ARN.
	//
	// The following arguments are optional:
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
}

func (InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InvocationLoggingConfigurationLoggingConfigCloudwatchConfig)(nil)).Elem()
}

func (i InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs) ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutput() InvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutput {
	return i.ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutputWithContext(context.Background())
}

func (i InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs) ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutputWithContext(ctx context.Context) InvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutput)
}

func (i InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs) ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput() InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput {
	return i.ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutputWithContext(context.Background())
}

func (i InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs) ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutputWithContext(ctx context.Context) InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutput).ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutputWithContext(ctx)
}

// InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrInput is an input type that accepts InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs, InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtr and InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput values.
// You can construct a concrete instance of `InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrInput` via:
//
//	        InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs{...}
//
//	or:
//
//	        nil
type InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrInput interface {
	pulumi.Input

	ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput() InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput
	ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutputWithContext(context.Context) InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput
}

type invocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrType InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs

func InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtr(v *InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs) InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrInput {
	return (*invocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrType)(v)
}

func (*invocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InvocationLoggingConfigurationLoggingConfigCloudwatchConfig)(nil)).Elem()
}

func (i *invocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrType) ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput() InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput {
	return i.ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutputWithContext(context.Background())
}

func (i *invocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrType) ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutputWithContext(ctx context.Context) InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput)
}

type InvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutput struct{ *pulumi.OutputState }

func (InvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InvocationLoggingConfigurationLoggingConfigCloudwatchConfig)(nil)).Elem()
}

func (o InvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutput) ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutput() InvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutput {
	return o
}

func (o InvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutput) ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutputWithContext(ctx context.Context) InvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutput {
	return o
}

func (o InvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutput) ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput() InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput {
	return o.ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutputWithContext(context.Background())
}

func (o InvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutput) ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutputWithContext(ctx context.Context) InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InvocationLoggingConfigurationLoggingConfigCloudwatchConfig) *InvocationLoggingConfigurationLoggingConfigCloudwatchConfig {
		return &v
	}).(InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput)
}

// S3 configuration for delivering a large amount of data. See `s3Config`.
func (o InvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutput) LargeDataDeliveryS3Config() InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput {
	return o.ApplyT(func(v InvocationLoggingConfigurationLoggingConfigCloudwatchConfig) *InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3Config {
		return v.LargeDataDeliveryS3Config
	}).(InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput)
}

// Log group name.
func (o InvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InvocationLoggingConfigurationLoggingConfigCloudwatchConfig) *string { return v.LogGroupName }).(pulumi.StringPtrOutput)
}

// IAM Role ARN.
//
// The following arguments are optional:
func (o InvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InvocationLoggingConfigurationLoggingConfigCloudwatchConfig) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

type InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput struct{ *pulumi.OutputState }

func (InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InvocationLoggingConfigurationLoggingConfigCloudwatchConfig)(nil)).Elem()
}

func (o InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput) ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput() InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput {
	return o
}

func (o InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput) ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutputWithContext(ctx context.Context) InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput {
	return o
}

func (o InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput) Elem() InvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutput {
	return o.ApplyT(func(v *InvocationLoggingConfigurationLoggingConfigCloudwatchConfig) InvocationLoggingConfigurationLoggingConfigCloudwatchConfig {
		if v != nil {
			return *v
		}
		var ret InvocationLoggingConfigurationLoggingConfigCloudwatchConfig
		return ret
	}).(InvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutput)
}

// S3 configuration for delivering a large amount of data. See `s3Config`.
func (o InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput) LargeDataDeliveryS3Config() InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput {
	return o.ApplyT(func(v *InvocationLoggingConfigurationLoggingConfigCloudwatchConfig) *InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3Config {
		if v == nil {
			return nil
		}
		return v.LargeDataDeliveryS3Config
	}).(InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput)
}

// Log group name.
func (o InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvocationLoggingConfigurationLoggingConfigCloudwatchConfig) *string {
		if v == nil {
			return nil
		}
		return v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// IAM Role ARN.
//
// The following arguments are optional:
func (o InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvocationLoggingConfigurationLoggingConfigCloudwatchConfig) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3Config struct {
	// S3 bucket name.
	//
	// The following arguments are optional:
	BucketName *string `pulumi:"bucketName"`
	// S3 object key prefix.
	KeyPrefix *string `pulumi:"keyPrefix"`
}

// InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigInput is an input type that accepts InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs and InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutput values.
// You can construct a concrete instance of `InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigInput` via:
//
//	InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs{...}
type InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigInput interface {
	pulumi.Input

	ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutput() InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutput
	ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutputWithContext(context.Context) InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutput
}

type InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs struct {
	// S3 bucket name.
	//
	// The following arguments are optional:
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// S3 object key prefix.
	KeyPrefix pulumi.StringPtrInput `pulumi:"keyPrefix"`
}

func (InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3Config)(nil)).Elem()
}

func (i InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs) ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutput() InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutput {
	return i.ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutputWithContext(context.Background())
}

func (i InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs) ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutputWithContext(ctx context.Context) InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutput)
}

func (i InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs) ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput() InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput {
	return i.ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutputWithContext(context.Background())
}

func (i InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs) ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutputWithContext(ctx context.Context) InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutput).ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutputWithContext(ctx)
}

// InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrInput is an input type that accepts InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs, InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtr and InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput values.
// You can construct a concrete instance of `InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrInput` via:
//
//	        InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs{...}
//
//	or:
//
//	        nil
type InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrInput interface {
	pulumi.Input

	ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput() InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput
	ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutputWithContext(context.Context) InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput
}

type invocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrType InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs

func InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtr(v *InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs) InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrInput {
	return (*invocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrType)(v)
}

func (*invocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3Config)(nil)).Elem()
}

func (i *invocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrType) ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput() InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput {
	return i.ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutputWithContext(context.Background())
}

func (i *invocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrType) ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutputWithContext(ctx context.Context) InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput)
}

type InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutput struct{ *pulumi.OutputState }

func (InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3Config)(nil)).Elem()
}

func (o InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutput) ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutput() InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutput {
	return o
}

func (o InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutput) ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutputWithContext(ctx context.Context) InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutput {
	return o
}

func (o InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutput) ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput() InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput {
	return o.ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutputWithContext(context.Background())
}

func (o InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutput) ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutputWithContext(ctx context.Context) InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3Config) *InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3Config {
		return &v
	}).(InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput)
}

// S3 bucket name.
//
// The following arguments are optional:
func (o InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3Config) *string {
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// S3 object key prefix.
func (o InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutput) KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3Config) *string {
		return v.KeyPrefix
	}).(pulumi.StringPtrOutput)
}

type InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput struct{ *pulumi.OutputState }

func (InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3Config)(nil)).Elem()
}

func (o InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput) ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput() InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput {
	return o
}

func (o InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput) ToInvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutputWithContext(ctx context.Context) InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput {
	return o
}

func (o InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput) Elem() InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutput {
	return o.ApplyT(func(v *InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3Config) InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3Config {
		if v != nil {
			return *v
		}
		var ret InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3Config
		return ret
	}).(InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutput)
}

// S3 bucket name.
//
// The following arguments are optional:
func (o InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3Config) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// S3 object key prefix.
func (o InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput) KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3Config) *string {
		if v == nil {
			return nil
		}
		return v.KeyPrefix
	}).(pulumi.StringPtrOutput)
}

type InvocationLoggingConfigurationLoggingConfigS3Config struct {
	// S3 bucket name.
	//
	// The following arguments are optional:
	BucketName *string `pulumi:"bucketName"`
	// S3 object key prefix.
	KeyPrefix *string `pulumi:"keyPrefix"`
}

// InvocationLoggingConfigurationLoggingConfigS3ConfigInput is an input type that accepts InvocationLoggingConfigurationLoggingConfigS3ConfigArgs and InvocationLoggingConfigurationLoggingConfigS3ConfigOutput values.
// You can construct a concrete instance of `InvocationLoggingConfigurationLoggingConfigS3ConfigInput` via:
//
//	InvocationLoggingConfigurationLoggingConfigS3ConfigArgs{...}
type InvocationLoggingConfigurationLoggingConfigS3ConfigInput interface {
	pulumi.Input

	ToInvocationLoggingConfigurationLoggingConfigS3ConfigOutput() InvocationLoggingConfigurationLoggingConfigS3ConfigOutput
	ToInvocationLoggingConfigurationLoggingConfigS3ConfigOutputWithContext(context.Context) InvocationLoggingConfigurationLoggingConfigS3ConfigOutput
}

type InvocationLoggingConfigurationLoggingConfigS3ConfigArgs struct {
	// S3 bucket name.
	//
	// The following arguments are optional:
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// S3 object key prefix.
	KeyPrefix pulumi.StringPtrInput `pulumi:"keyPrefix"`
}

func (InvocationLoggingConfigurationLoggingConfigS3ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InvocationLoggingConfigurationLoggingConfigS3Config)(nil)).Elem()
}

func (i InvocationLoggingConfigurationLoggingConfigS3ConfigArgs) ToInvocationLoggingConfigurationLoggingConfigS3ConfigOutput() InvocationLoggingConfigurationLoggingConfigS3ConfigOutput {
	return i.ToInvocationLoggingConfigurationLoggingConfigS3ConfigOutputWithContext(context.Background())
}

func (i InvocationLoggingConfigurationLoggingConfigS3ConfigArgs) ToInvocationLoggingConfigurationLoggingConfigS3ConfigOutputWithContext(ctx context.Context) InvocationLoggingConfigurationLoggingConfigS3ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvocationLoggingConfigurationLoggingConfigS3ConfigOutput)
}

func (i InvocationLoggingConfigurationLoggingConfigS3ConfigArgs) ToInvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput() InvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput {
	return i.ToInvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutputWithContext(context.Background())
}

func (i InvocationLoggingConfigurationLoggingConfigS3ConfigArgs) ToInvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutputWithContext(ctx context.Context) InvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvocationLoggingConfigurationLoggingConfigS3ConfigOutput).ToInvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutputWithContext(ctx)
}

// InvocationLoggingConfigurationLoggingConfigS3ConfigPtrInput is an input type that accepts InvocationLoggingConfigurationLoggingConfigS3ConfigArgs, InvocationLoggingConfigurationLoggingConfigS3ConfigPtr and InvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput values.
// You can construct a concrete instance of `InvocationLoggingConfigurationLoggingConfigS3ConfigPtrInput` via:
//
//	        InvocationLoggingConfigurationLoggingConfigS3ConfigArgs{...}
//
//	or:
//
//	        nil
type InvocationLoggingConfigurationLoggingConfigS3ConfigPtrInput interface {
	pulumi.Input

	ToInvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput() InvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput
	ToInvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutputWithContext(context.Context) InvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput
}

type invocationLoggingConfigurationLoggingConfigS3ConfigPtrType InvocationLoggingConfigurationLoggingConfigS3ConfigArgs

func InvocationLoggingConfigurationLoggingConfigS3ConfigPtr(v *InvocationLoggingConfigurationLoggingConfigS3ConfigArgs) InvocationLoggingConfigurationLoggingConfigS3ConfigPtrInput {
	return (*invocationLoggingConfigurationLoggingConfigS3ConfigPtrType)(v)
}

func (*invocationLoggingConfigurationLoggingConfigS3ConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InvocationLoggingConfigurationLoggingConfigS3Config)(nil)).Elem()
}

func (i *invocationLoggingConfigurationLoggingConfigS3ConfigPtrType) ToInvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput() InvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput {
	return i.ToInvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutputWithContext(context.Background())
}

func (i *invocationLoggingConfigurationLoggingConfigS3ConfigPtrType) ToInvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutputWithContext(ctx context.Context) InvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput)
}

type InvocationLoggingConfigurationLoggingConfigS3ConfigOutput struct{ *pulumi.OutputState }

func (InvocationLoggingConfigurationLoggingConfigS3ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InvocationLoggingConfigurationLoggingConfigS3Config)(nil)).Elem()
}

func (o InvocationLoggingConfigurationLoggingConfigS3ConfigOutput) ToInvocationLoggingConfigurationLoggingConfigS3ConfigOutput() InvocationLoggingConfigurationLoggingConfigS3ConfigOutput {
	return o
}

func (o InvocationLoggingConfigurationLoggingConfigS3ConfigOutput) ToInvocationLoggingConfigurationLoggingConfigS3ConfigOutputWithContext(ctx context.Context) InvocationLoggingConfigurationLoggingConfigS3ConfigOutput {
	return o
}

func (o InvocationLoggingConfigurationLoggingConfigS3ConfigOutput) ToInvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput() InvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput {
	return o.ToInvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutputWithContext(context.Background())
}

func (o InvocationLoggingConfigurationLoggingConfigS3ConfigOutput) ToInvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutputWithContext(ctx context.Context) InvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InvocationLoggingConfigurationLoggingConfigS3Config) *InvocationLoggingConfigurationLoggingConfigS3Config {
		return &v
	}).(InvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput)
}

// S3 bucket name.
//
// The following arguments are optional:
func (o InvocationLoggingConfigurationLoggingConfigS3ConfigOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InvocationLoggingConfigurationLoggingConfigS3Config) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

// S3 object key prefix.
func (o InvocationLoggingConfigurationLoggingConfigS3ConfigOutput) KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InvocationLoggingConfigurationLoggingConfigS3Config) *string { return v.KeyPrefix }).(pulumi.StringPtrOutput)
}

type InvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput struct{ *pulumi.OutputState }

func (InvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InvocationLoggingConfigurationLoggingConfigS3Config)(nil)).Elem()
}

func (o InvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput) ToInvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput() InvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput {
	return o
}

func (o InvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput) ToInvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutputWithContext(ctx context.Context) InvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput {
	return o
}

func (o InvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput) Elem() InvocationLoggingConfigurationLoggingConfigS3ConfigOutput {
	return o.ApplyT(func(v *InvocationLoggingConfigurationLoggingConfigS3Config) InvocationLoggingConfigurationLoggingConfigS3Config {
		if v != nil {
			return *v
		}
		var ret InvocationLoggingConfigurationLoggingConfigS3Config
		return ret
	}).(InvocationLoggingConfigurationLoggingConfigS3ConfigOutput)
}

// S3 bucket name.
//
// The following arguments are optional:
func (o InvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvocationLoggingConfigurationLoggingConfigS3Config) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// S3 object key prefix.
func (o InvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput) KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InvocationLoggingConfigurationLoggingConfigS3Config) *string {
		if v == nil {
			return nil
		}
		return v.KeyPrefix
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InvocationLoggingConfigurationLoggingConfigInput)(nil)).Elem(), InvocationLoggingConfigurationLoggingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InvocationLoggingConfigurationLoggingConfigPtrInput)(nil)).Elem(), InvocationLoggingConfigurationLoggingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InvocationLoggingConfigurationLoggingConfigCloudwatchConfigInput)(nil)).Elem(), InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrInput)(nil)).Elem(), InvocationLoggingConfigurationLoggingConfigCloudwatchConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigInput)(nil)).Elem(), InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrInput)(nil)).Elem(), InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InvocationLoggingConfigurationLoggingConfigS3ConfigInput)(nil)).Elem(), InvocationLoggingConfigurationLoggingConfigS3ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InvocationLoggingConfigurationLoggingConfigS3ConfigPtrInput)(nil)).Elem(), InvocationLoggingConfigurationLoggingConfigS3ConfigArgs{})
	pulumi.RegisterOutputType(InvocationLoggingConfigurationLoggingConfigOutput{})
	pulumi.RegisterOutputType(InvocationLoggingConfigurationLoggingConfigPtrOutput{})
	pulumi.RegisterOutputType(InvocationLoggingConfigurationLoggingConfigCloudwatchConfigOutput{})
	pulumi.RegisterOutputType(InvocationLoggingConfigurationLoggingConfigCloudwatchConfigPtrOutput{})
	pulumi.RegisterOutputType(InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigOutput{})
	pulumi.RegisterOutputType(InvocationLoggingConfigurationLoggingConfigCloudwatchConfigLargeDataDeliveryS3ConfigPtrOutput{})
	pulumi.RegisterOutputType(InvocationLoggingConfigurationLoggingConfigS3ConfigOutput{})
	pulumi.RegisterOutputType(InvocationLoggingConfigurationLoggingConfigS3ConfigPtrOutput{})
}
