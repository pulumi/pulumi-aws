// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53domains

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RegisteredDomain struct {
	pulumi.CustomResourceState

	AbuseContactEmail pulumi.StringOutput                     `pulumi:"abuseContactEmail"`
	AbuseContactPhone pulumi.StringOutput                     `pulumi:"abuseContactPhone"`
	AdminContact      RegisteredDomainAdminContactOutput      `pulumi:"adminContact"`
	AdminPrivacy      pulumi.BoolPtrOutput                    `pulumi:"adminPrivacy"`
	AutoRenew         pulumi.BoolPtrOutput                    `pulumi:"autoRenew"`
	CreationDate      pulumi.StringOutput                     `pulumi:"creationDate"`
	DomainName        pulumi.StringOutput                     `pulumi:"domainName"`
	ExpirationDate    pulumi.StringOutput                     `pulumi:"expirationDate"`
	NameServers       RegisteredDomainNameServerArrayOutput   `pulumi:"nameServers"`
	RegistrantContact RegisteredDomainRegistrantContactOutput `pulumi:"registrantContact"`
	RegistrantPrivacy pulumi.BoolPtrOutput                    `pulumi:"registrantPrivacy"`
	RegistrarName     pulumi.StringOutput                     `pulumi:"registrarName"`
	RegistrarUrl      pulumi.StringOutput                     `pulumi:"registrarUrl"`
	Reseller          pulumi.StringOutput                     `pulumi:"reseller"`
	StatusLists       pulumi.StringArrayOutput                `pulumi:"statusLists"`
	Tags              pulumi.StringMapOutput                  `pulumi:"tags"`
	TagsAll           pulumi.StringMapOutput                  `pulumi:"tagsAll"`
	TechContact       RegisteredDomainTechContactOutput       `pulumi:"techContact"`
	TechPrivacy       pulumi.BoolPtrOutput                    `pulumi:"techPrivacy"`
	TransferLock      pulumi.BoolPtrOutput                    `pulumi:"transferLock"`
	UpdatedDate       pulumi.StringOutput                     `pulumi:"updatedDate"`
	WhoisServer       pulumi.StringOutput                     `pulumi:"whoisServer"`
}

// NewRegisteredDomain registers a new resource with the given unique name, arguments, and options.
func NewRegisteredDomain(ctx *pulumi.Context,
	name string, args *RegisteredDomainArgs, opts ...pulumi.ResourceOption) (*RegisteredDomain, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainName == nil {
		return nil, errors.New("invalid value for required argument 'DomainName'")
	}
	var resource RegisteredDomain
	err := ctx.RegisterResource("aws:route53domains/registeredDomain:RegisteredDomain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRegisteredDomain gets an existing RegisteredDomain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRegisteredDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RegisteredDomainState, opts ...pulumi.ResourceOption) (*RegisteredDomain, error) {
	var resource RegisteredDomain
	err := ctx.ReadResource("aws:route53domains/registeredDomain:RegisteredDomain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RegisteredDomain resources.
type registeredDomainState struct {
	AbuseContactEmail *string                            `pulumi:"abuseContactEmail"`
	AbuseContactPhone *string                            `pulumi:"abuseContactPhone"`
	AdminContact      *RegisteredDomainAdminContact      `pulumi:"adminContact"`
	AdminPrivacy      *bool                              `pulumi:"adminPrivacy"`
	AutoRenew         *bool                              `pulumi:"autoRenew"`
	CreationDate      *string                            `pulumi:"creationDate"`
	DomainName        *string                            `pulumi:"domainName"`
	ExpirationDate    *string                            `pulumi:"expirationDate"`
	NameServers       []RegisteredDomainNameServer       `pulumi:"nameServers"`
	RegistrantContact *RegisteredDomainRegistrantContact `pulumi:"registrantContact"`
	RegistrantPrivacy *bool                              `pulumi:"registrantPrivacy"`
	RegistrarName     *string                            `pulumi:"registrarName"`
	RegistrarUrl      *string                            `pulumi:"registrarUrl"`
	Reseller          *string                            `pulumi:"reseller"`
	StatusLists       []string                           `pulumi:"statusLists"`
	Tags              map[string]string                  `pulumi:"tags"`
	TagsAll           map[string]string                  `pulumi:"tagsAll"`
	TechContact       *RegisteredDomainTechContact       `pulumi:"techContact"`
	TechPrivacy       *bool                              `pulumi:"techPrivacy"`
	TransferLock      *bool                              `pulumi:"transferLock"`
	UpdatedDate       *string                            `pulumi:"updatedDate"`
	WhoisServer       *string                            `pulumi:"whoisServer"`
}

type RegisteredDomainState struct {
	AbuseContactEmail pulumi.StringPtrInput
	AbuseContactPhone pulumi.StringPtrInput
	AdminContact      RegisteredDomainAdminContactPtrInput
	AdminPrivacy      pulumi.BoolPtrInput
	AutoRenew         pulumi.BoolPtrInput
	CreationDate      pulumi.StringPtrInput
	DomainName        pulumi.StringPtrInput
	ExpirationDate    pulumi.StringPtrInput
	NameServers       RegisteredDomainNameServerArrayInput
	RegistrantContact RegisteredDomainRegistrantContactPtrInput
	RegistrantPrivacy pulumi.BoolPtrInput
	RegistrarName     pulumi.StringPtrInput
	RegistrarUrl      pulumi.StringPtrInput
	Reseller          pulumi.StringPtrInput
	StatusLists       pulumi.StringArrayInput
	Tags              pulumi.StringMapInput
	TagsAll           pulumi.StringMapInput
	TechContact       RegisteredDomainTechContactPtrInput
	TechPrivacy       pulumi.BoolPtrInput
	TransferLock      pulumi.BoolPtrInput
	UpdatedDate       pulumi.StringPtrInput
	WhoisServer       pulumi.StringPtrInput
}

func (RegisteredDomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*registeredDomainState)(nil)).Elem()
}

type registeredDomainArgs struct {
	AdminContact      *RegisteredDomainAdminContact      `pulumi:"adminContact"`
	AdminPrivacy      *bool                              `pulumi:"adminPrivacy"`
	AutoRenew         *bool                              `pulumi:"autoRenew"`
	DomainName        string                             `pulumi:"domainName"`
	NameServers       []RegisteredDomainNameServer       `pulumi:"nameServers"`
	RegistrantContact *RegisteredDomainRegistrantContact `pulumi:"registrantContact"`
	RegistrantPrivacy *bool                              `pulumi:"registrantPrivacy"`
	Tags              map[string]string                  `pulumi:"tags"`
	TechContact       *RegisteredDomainTechContact       `pulumi:"techContact"`
	TechPrivacy       *bool                              `pulumi:"techPrivacy"`
	TransferLock      *bool                              `pulumi:"transferLock"`
}

// The set of arguments for constructing a RegisteredDomain resource.
type RegisteredDomainArgs struct {
	AdminContact      RegisteredDomainAdminContactPtrInput
	AdminPrivacy      pulumi.BoolPtrInput
	AutoRenew         pulumi.BoolPtrInput
	DomainName        pulumi.StringInput
	NameServers       RegisteredDomainNameServerArrayInput
	RegistrantContact RegisteredDomainRegistrantContactPtrInput
	RegistrantPrivacy pulumi.BoolPtrInput
	Tags              pulumi.StringMapInput
	TechContact       RegisteredDomainTechContactPtrInput
	TechPrivacy       pulumi.BoolPtrInput
	TransferLock      pulumi.BoolPtrInput
}

func (RegisteredDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*registeredDomainArgs)(nil)).Elem()
}

type RegisteredDomainInput interface {
	pulumi.Input

	ToRegisteredDomainOutput() RegisteredDomainOutput
	ToRegisteredDomainOutputWithContext(ctx context.Context) RegisteredDomainOutput
}

func (*RegisteredDomain) ElementType() reflect.Type {
	return reflect.TypeOf((**RegisteredDomain)(nil)).Elem()
}

func (i *RegisteredDomain) ToRegisteredDomainOutput() RegisteredDomainOutput {
	return i.ToRegisteredDomainOutputWithContext(context.Background())
}

func (i *RegisteredDomain) ToRegisteredDomainOutputWithContext(ctx context.Context) RegisteredDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegisteredDomainOutput)
}

// RegisteredDomainArrayInput is an input type that accepts RegisteredDomainArray and RegisteredDomainArrayOutput values.
// You can construct a concrete instance of `RegisteredDomainArrayInput` via:
//
//	RegisteredDomainArray{ RegisteredDomainArgs{...} }
type RegisteredDomainArrayInput interface {
	pulumi.Input

	ToRegisteredDomainArrayOutput() RegisteredDomainArrayOutput
	ToRegisteredDomainArrayOutputWithContext(context.Context) RegisteredDomainArrayOutput
}

type RegisteredDomainArray []RegisteredDomainInput

func (RegisteredDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RegisteredDomain)(nil)).Elem()
}

func (i RegisteredDomainArray) ToRegisteredDomainArrayOutput() RegisteredDomainArrayOutput {
	return i.ToRegisteredDomainArrayOutputWithContext(context.Background())
}

func (i RegisteredDomainArray) ToRegisteredDomainArrayOutputWithContext(ctx context.Context) RegisteredDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegisteredDomainArrayOutput)
}

// RegisteredDomainMapInput is an input type that accepts RegisteredDomainMap and RegisteredDomainMapOutput values.
// You can construct a concrete instance of `RegisteredDomainMapInput` via:
//
//	RegisteredDomainMap{ "key": RegisteredDomainArgs{...} }
type RegisteredDomainMapInput interface {
	pulumi.Input

	ToRegisteredDomainMapOutput() RegisteredDomainMapOutput
	ToRegisteredDomainMapOutputWithContext(context.Context) RegisteredDomainMapOutput
}

type RegisteredDomainMap map[string]RegisteredDomainInput

func (RegisteredDomainMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RegisteredDomain)(nil)).Elem()
}

func (i RegisteredDomainMap) ToRegisteredDomainMapOutput() RegisteredDomainMapOutput {
	return i.ToRegisteredDomainMapOutputWithContext(context.Background())
}

func (i RegisteredDomainMap) ToRegisteredDomainMapOutputWithContext(ctx context.Context) RegisteredDomainMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegisteredDomainMapOutput)
}

type RegisteredDomainOutput struct{ *pulumi.OutputState }

func (RegisteredDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegisteredDomain)(nil)).Elem()
}

func (o RegisteredDomainOutput) ToRegisteredDomainOutput() RegisteredDomainOutput {
	return o
}

func (o RegisteredDomainOutput) ToRegisteredDomainOutputWithContext(ctx context.Context) RegisteredDomainOutput {
	return o
}

func (o RegisteredDomainOutput) AbuseContactEmail() pulumi.StringOutput {
	return o.ApplyT(func(v *RegisteredDomain) pulumi.StringOutput { return v.AbuseContactEmail }).(pulumi.StringOutput)
}

func (o RegisteredDomainOutput) AbuseContactPhone() pulumi.StringOutput {
	return o.ApplyT(func(v *RegisteredDomain) pulumi.StringOutput { return v.AbuseContactPhone }).(pulumi.StringOutput)
}

func (o RegisteredDomainOutput) AdminContact() RegisteredDomainAdminContactOutput {
	return o.ApplyT(func(v *RegisteredDomain) RegisteredDomainAdminContactOutput { return v.AdminContact }).(RegisteredDomainAdminContactOutput)
}

func (o RegisteredDomainOutput) AdminPrivacy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RegisteredDomain) pulumi.BoolPtrOutput { return v.AdminPrivacy }).(pulumi.BoolPtrOutput)
}

func (o RegisteredDomainOutput) AutoRenew() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RegisteredDomain) pulumi.BoolPtrOutput { return v.AutoRenew }).(pulumi.BoolPtrOutput)
}

func (o RegisteredDomainOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v *RegisteredDomain) pulumi.StringOutput { return v.CreationDate }).(pulumi.StringOutput)
}

func (o RegisteredDomainOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *RegisteredDomain) pulumi.StringOutput { return v.DomainName }).(pulumi.StringOutput)
}

func (o RegisteredDomainOutput) ExpirationDate() pulumi.StringOutput {
	return o.ApplyT(func(v *RegisteredDomain) pulumi.StringOutput { return v.ExpirationDate }).(pulumi.StringOutput)
}

func (o RegisteredDomainOutput) NameServers() RegisteredDomainNameServerArrayOutput {
	return o.ApplyT(func(v *RegisteredDomain) RegisteredDomainNameServerArrayOutput { return v.NameServers }).(RegisteredDomainNameServerArrayOutput)
}

func (o RegisteredDomainOutput) RegistrantContact() RegisteredDomainRegistrantContactOutput {
	return o.ApplyT(func(v *RegisteredDomain) RegisteredDomainRegistrantContactOutput { return v.RegistrantContact }).(RegisteredDomainRegistrantContactOutput)
}

func (o RegisteredDomainOutput) RegistrantPrivacy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RegisteredDomain) pulumi.BoolPtrOutput { return v.RegistrantPrivacy }).(pulumi.BoolPtrOutput)
}

func (o RegisteredDomainOutput) RegistrarName() pulumi.StringOutput {
	return o.ApplyT(func(v *RegisteredDomain) pulumi.StringOutput { return v.RegistrarName }).(pulumi.StringOutput)
}

func (o RegisteredDomainOutput) RegistrarUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *RegisteredDomain) pulumi.StringOutput { return v.RegistrarUrl }).(pulumi.StringOutput)
}

func (o RegisteredDomainOutput) Reseller() pulumi.StringOutput {
	return o.ApplyT(func(v *RegisteredDomain) pulumi.StringOutput { return v.Reseller }).(pulumi.StringOutput)
}

func (o RegisteredDomainOutput) StatusLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RegisteredDomain) pulumi.StringArrayOutput { return v.StatusLists }).(pulumi.StringArrayOutput)
}

func (o RegisteredDomainOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RegisteredDomain) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o RegisteredDomainOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RegisteredDomain) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o RegisteredDomainOutput) TechContact() RegisteredDomainTechContactOutput {
	return o.ApplyT(func(v *RegisteredDomain) RegisteredDomainTechContactOutput { return v.TechContact }).(RegisteredDomainTechContactOutput)
}

func (o RegisteredDomainOutput) TechPrivacy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RegisteredDomain) pulumi.BoolPtrOutput { return v.TechPrivacy }).(pulumi.BoolPtrOutput)
}

func (o RegisteredDomainOutput) TransferLock() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RegisteredDomain) pulumi.BoolPtrOutput { return v.TransferLock }).(pulumi.BoolPtrOutput)
}

func (o RegisteredDomainOutput) UpdatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v *RegisteredDomain) pulumi.StringOutput { return v.UpdatedDate }).(pulumi.StringOutput)
}

func (o RegisteredDomainOutput) WhoisServer() pulumi.StringOutput {
	return o.ApplyT(func(v *RegisteredDomain) pulumi.StringOutput { return v.WhoisServer }).(pulumi.StringOutput)
}

type RegisteredDomainArrayOutput struct{ *pulumi.OutputState }

func (RegisteredDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RegisteredDomain)(nil)).Elem()
}

func (o RegisteredDomainArrayOutput) ToRegisteredDomainArrayOutput() RegisteredDomainArrayOutput {
	return o
}

func (o RegisteredDomainArrayOutput) ToRegisteredDomainArrayOutputWithContext(ctx context.Context) RegisteredDomainArrayOutput {
	return o
}

func (o RegisteredDomainArrayOutput) Index(i pulumi.IntInput) RegisteredDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RegisteredDomain {
		return vs[0].([]*RegisteredDomain)[vs[1].(int)]
	}).(RegisteredDomainOutput)
}

type RegisteredDomainMapOutput struct{ *pulumi.OutputState }

func (RegisteredDomainMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RegisteredDomain)(nil)).Elem()
}

func (o RegisteredDomainMapOutput) ToRegisteredDomainMapOutput() RegisteredDomainMapOutput {
	return o
}

func (o RegisteredDomainMapOutput) ToRegisteredDomainMapOutputWithContext(ctx context.Context) RegisteredDomainMapOutput {
	return o
}

func (o RegisteredDomainMapOutput) MapIndex(k pulumi.StringInput) RegisteredDomainOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RegisteredDomain {
		return vs[0].(map[string]*RegisteredDomain)[vs[1].(string)]
	}).(RegisteredDomainOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RegisteredDomainInput)(nil)).Elem(), &RegisteredDomain{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegisteredDomainArrayInput)(nil)).Elem(), RegisteredDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegisteredDomainMapInput)(nil)).Elem(), RegisteredDomainMap{})
	pulumi.RegisterOutputType(RegisteredDomainOutput{})
	pulumi.RegisterOutputType(RegisteredDomainArrayOutput{})
	pulumi.RegisterOutputType(RegisteredDomainMapOutput{})
}
