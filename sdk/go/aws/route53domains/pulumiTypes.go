// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package route53domains

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RegisteredDomainAdminContact struct {
	AddressLine1     *string           `pulumi:"addressLine1"`
	AddressLine2     *string           `pulumi:"addressLine2"`
	City             *string           `pulumi:"city"`
	ContactType      *string           `pulumi:"contactType"`
	CountryCode      *string           `pulumi:"countryCode"`
	Email            *string           `pulumi:"email"`
	ExtraParams      map[string]string `pulumi:"extraParams"`
	Fax              *string           `pulumi:"fax"`
	FirstName        *string           `pulumi:"firstName"`
	LastName         *string           `pulumi:"lastName"`
	OrganizationName *string           `pulumi:"organizationName"`
	PhoneNumber      *string           `pulumi:"phoneNumber"`
	State            *string           `pulumi:"state"`
	ZipCode          *string           `pulumi:"zipCode"`
}

// RegisteredDomainAdminContactInput is an input type that accepts RegisteredDomainAdminContactArgs and RegisteredDomainAdminContactOutput values.
// You can construct a concrete instance of `RegisteredDomainAdminContactInput` via:
//
//	RegisteredDomainAdminContactArgs{...}
type RegisteredDomainAdminContactInput interface {
	pulumi.Input

	ToRegisteredDomainAdminContactOutput() RegisteredDomainAdminContactOutput
	ToRegisteredDomainAdminContactOutputWithContext(context.Context) RegisteredDomainAdminContactOutput
}

type RegisteredDomainAdminContactArgs struct {
	AddressLine1     pulumi.StringPtrInput `pulumi:"addressLine1"`
	AddressLine2     pulumi.StringPtrInput `pulumi:"addressLine2"`
	City             pulumi.StringPtrInput `pulumi:"city"`
	ContactType      pulumi.StringPtrInput `pulumi:"contactType"`
	CountryCode      pulumi.StringPtrInput `pulumi:"countryCode"`
	Email            pulumi.StringPtrInput `pulumi:"email"`
	ExtraParams      pulumi.StringMapInput `pulumi:"extraParams"`
	Fax              pulumi.StringPtrInput `pulumi:"fax"`
	FirstName        pulumi.StringPtrInput `pulumi:"firstName"`
	LastName         pulumi.StringPtrInput `pulumi:"lastName"`
	OrganizationName pulumi.StringPtrInput `pulumi:"organizationName"`
	PhoneNumber      pulumi.StringPtrInput `pulumi:"phoneNumber"`
	State            pulumi.StringPtrInput `pulumi:"state"`
	ZipCode          pulumi.StringPtrInput `pulumi:"zipCode"`
}

func (RegisteredDomainAdminContactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegisteredDomainAdminContact)(nil)).Elem()
}

func (i RegisteredDomainAdminContactArgs) ToRegisteredDomainAdminContactOutput() RegisteredDomainAdminContactOutput {
	return i.ToRegisteredDomainAdminContactOutputWithContext(context.Background())
}

func (i RegisteredDomainAdminContactArgs) ToRegisteredDomainAdminContactOutputWithContext(ctx context.Context) RegisteredDomainAdminContactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegisteredDomainAdminContactOutput)
}

func (i RegisteredDomainAdminContactArgs) ToRegisteredDomainAdminContactPtrOutput() RegisteredDomainAdminContactPtrOutput {
	return i.ToRegisteredDomainAdminContactPtrOutputWithContext(context.Background())
}

func (i RegisteredDomainAdminContactArgs) ToRegisteredDomainAdminContactPtrOutputWithContext(ctx context.Context) RegisteredDomainAdminContactPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegisteredDomainAdminContactOutput).ToRegisteredDomainAdminContactPtrOutputWithContext(ctx)
}

// RegisteredDomainAdminContactPtrInput is an input type that accepts RegisteredDomainAdminContactArgs, RegisteredDomainAdminContactPtr and RegisteredDomainAdminContactPtrOutput values.
// You can construct a concrete instance of `RegisteredDomainAdminContactPtrInput` via:
//
//	        RegisteredDomainAdminContactArgs{...}
//
//	or:
//
//	        nil
type RegisteredDomainAdminContactPtrInput interface {
	pulumi.Input

	ToRegisteredDomainAdminContactPtrOutput() RegisteredDomainAdminContactPtrOutput
	ToRegisteredDomainAdminContactPtrOutputWithContext(context.Context) RegisteredDomainAdminContactPtrOutput
}

type registeredDomainAdminContactPtrType RegisteredDomainAdminContactArgs

func RegisteredDomainAdminContactPtr(v *RegisteredDomainAdminContactArgs) RegisteredDomainAdminContactPtrInput {
	return (*registeredDomainAdminContactPtrType)(v)
}

func (*registeredDomainAdminContactPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegisteredDomainAdminContact)(nil)).Elem()
}

func (i *registeredDomainAdminContactPtrType) ToRegisteredDomainAdminContactPtrOutput() RegisteredDomainAdminContactPtrOutput {
	return i.ToRegisteredDomainAdminContactPtrOutputWithContext(context.Background())
}

func (i *registeredDomainAdminContactPtrType) ToRegisteredDomainAdminContactPtrOutputWithContext(ctx context.Context) RegisteredDomainAdminContactPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegisteredDomainAdminContactPtrOutput)
}

type RegisteredDomainAdminContactOutput struct{ *pulumi.OutputState }

func (RegisteredDomainAdminContactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegisteredDomainAdminContact)(nil)).Elem()
}

func (o RegisteredDomainAdminContactOutput) ToRegisteredDomainAdminContactOutput() RegisteredDomainAdminContactOutput {
	return o
}

func (o RegisteredDomainAdminContactOutput) ToRegisteredDomainAdminContactOutputWithContext(ctx context.Context) RegisteredDomainAdminContactOutput {
	return o
}

func (o RegisteredDomainAdminContactOutput) ToRegisteredDomainAdminContactPtrOutput() RegisteredDomainAdminContactPtrOutput {
	return o.ToRegisteredDomainAdminContactPtrOutputWithContext(context.Background())
}

func (o RegisteredDomainAdminContactOutput) ToRegisteredDomainAdminContactPtrOutputWithContext(ctx context.Context) RegisteredDomainAdminContactPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegisteredDomainAdminContact) *RegisteredDomainAdminContact {
		return &v
	}).(RegisteredDomainAdminContactPtrOutput)
}

func (o RegisteredDomainAdminContactOutput) AddressLine1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainAdminContact) *string { return v.AddressLine1 }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainAdminContactOutput) AddressLine2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainAdminContact) *string { return v.AddressLine2 }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainAdminContactOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainAdminContact) *string { return v.City }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainAdminContactOutput) ContactType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainAdminContact) *string { return v.ContactType }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainAdminContactOutput) CountryCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainAdminContact) *string { return v.CountryCode }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainAdminContactOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainAdminContact) *string { return v.Email }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainAdminContactOutput) ExtraParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v RegisteredDomainAdminContact) map[string]string { return v.ExtraParams }).(pulumi.StringMapOutput)
}

func (o RegisteredDomainAdminContactOutput) Fax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainAdminContact) *string { return v.Fax }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainAdminContactOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainAdminContact) *string { return v.FirstName }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainAdminContactOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainAdminContact) *string { return v.LastName }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainAdminContactOutput) OrganizationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainAdminContact) *string { return v.OrganizationName }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainAdminContactOutput) PhoneNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainAdminContact) *string { return v.PhoneNumber }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainAdminContactOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainAdminContact) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainAdminContactOutput) ZipCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainAdminContact) *string { return v.ZipCode }).(pulumi.StringPtrOutput)
}

type RegisteredDomainAdminContactPtrOutput struct{ *pulumi.OutputState }

func (RegisteredDomainAdminContactPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegisteredDomainAdminContact)(nil)).Elem()
}

func (o RegisteredDomainAdminContactPtrOutput) ToRegisteredDomainAdminContactPtrOutput() RegisteredDomainAdminContactPtrOutput {
	return o
}

func (o RegisteredDomainAdminContactPtrOutput) ToRegisteredDomainAdminContactPtrOutputWithContext(ctx context.Context) RegisteredDomainAdminContactPtrOutput {
	return o
}

func (o RegisteredDomainAdminContactPtrOutput) Elem() RegisteredDomainAdminContactOutput {
	return o.ApplyT(func(v *RegisteredDomainAdminContact) RegisteredDomainAdminContact {
		if v != nil {
			return *v
		}
		var ret RegisteredDomainAdminContact
		return ret
	}).(RegisteredDomainAdminContactOutput)
}

func (o RegisteredDomainAdminContactPtrOutput) AddressLine1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainAdminContact) *string {
		if v == nil {
			return nil
		}
		return v.AddressLine1
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainAdminContactPtrOutput) AddressLine2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainAdminContact) *string {
		if v == nil {
			return nil
		}
		return v.AddressLine2
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainAdminContactPtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainAdminContact) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainAdminContactPtrOutput) ContactType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainAdminContact) *string {
		if v == nil {
			return nil
		}
		return v.ContactType
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainAdminContactPtrOutput) CountryCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainAdminContact) *string {
		if v == nil {
			return nil
		}
		return v.CountryCode
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainAdminContactPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainAdminContact) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainAdminContactPtrOutput) ExtraParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RegisteredDomainAdminContact) map[string]string {
		if v == nil {
			return nil
		}
		return v.ExtraParams
	}).(pulumi.StringMapOutput)
}

func (o RegisteredDomainAdminContactPtrOutput) Fax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainAdminContact) *string {
		if v == nil {
			return nil
		}
		return v.Fax
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainAdminContactPtrOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainAdminContact) *string {
		if v == nil {
			return nil
		}
		return v.FirstName
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainAdminContactPtrOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainAdminContact) *string {
		if v == nil {
			return nil
		}
		return v.LastName
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainAdminContactPtrOutput) OrganizationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainAdminContact) *string {
		if v == nil {
			return nil
		}
		return v.OrganizationName
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainAdminContactPtrOutput) PhoneNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainAdminContact) *string {
		if v == nil {
			return nil
		}
		return v.PhoneNumber
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainAdminContactPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainAdminContact) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainAdminContactPtrOutput) ZipCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainAdminContact) *string {
		if v == nil {
			return nil
		}
		return v.ZipCode
	}).(pulumi.StringPtrOutput)
}

type RegisteredDomainNameServer struct {
	GlueIps []string `pulumi:"glueIps"`
	Name    string   `pulumi:"name"`
}

// RegisteredDomainNameServerInput is an input type that accepts RegisteredDomainNameServerArgs and RegisteredDomainNameServerOutput values.
// You can construct a concrete instance of `RegisteredDomainNameServerInput` via:
//
//	RegisteredDomainNameServerArgs{...}
type RegisteredDomainNameServerInput interface {
	pulumi.Input

	ToRegisteredDomainNameServerOutput() RegisteredDomainNameServerOutput
	ToRegisteredDomainNameServerOutputWithContext(context.Context) RegisteredDomainNameServerOutput
}

type RegisteredDomainNameServerArgs struct {
	GlueIps pulumi.StringArrayInput `pulumi:"glueIps"`
	Name    pulumi.StringInput      `pulumi:"name"`
}

func (RegisteredDomainNameServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegisteredDomainNameServer)(nil)).Elem()
}

func (i RegisteredDomainNameServerArgs) ToRegisteredDomainNameServerOutput() RegisteredDomainNameServerOutput {
	return i.ToRegisteredDomainNameServerOutputWithContext(context.Background())
}

func (i RegisteredDomainNameServerArgs) ToRegisteredDomainNameServerOutputWithContext(ctx context.Context) RegisteredDomainNameServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegisteredDomainNameServerOutput)
}

// RegisteredDomainNameServerArrayInput is an input type that accepts RegisteredDomainNameServerArray and RegisteredDomainNameServerArrayOutput values.
// You can construct a concrete instance of `RegisteredDomainNameServerArrayInput` via:
//
//	RegisteredDomainNameServerArray{ RegisteredDomainNameServerArgs{...} }
type RegisteredDomainNameServerArrayInput interface {
	pulumi.Input

	ToRegisteredDomainNameServerArrayOutput() RegisteredDomainNameServerArrayOutput
	ToRegisteredDomainNameServerArrayOutputWithContext(context.Context) RegisteredDomainNameServerArrayOutput
}

type RegisteredDomainNameServerArray []RegisteredDomainNameServerInput

func (RegisteredDomainNameServerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegisteredDomainNameServer)(nil)).Elem()
}

func (i RegisteredDomainNameServerArray) ToRegisteredDomainNameServerArrayOutput() RegisteredDomainNameServerArrayOutput {
	return i.ToRegisteredDomainNameServerArrayOutputWithContext(context.Background())
}

func (i RegisteredDomainNameServerArray) ToRegisteredDomainNameServerArrayOutputWithContext(ctx context.Context) RegisteredDomainNameServerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegisteredDomainNameServerArrayOutput)
}

type RegisteredDomainNameServerOutput struct{ *pulumi.OutputState }

func (RegisteredDomainNameServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegisteredDomainNameServer)(nil)).Elem()
}

func (o RegisteredDomainNameServerOutput) ToRegisteredDomainNameServerOutput() RegisteredDomainNameServerOutput {
	return o
}

func (o RegisteredDomainNameServerOutput) ToRegisteredDomainNameServerOutputWithContext(ctx context.Context) RegisteredDomainNameServerOutput {
	return o
}

func (o RegisteredDomainNameServerOutput) GlueIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RegisteredDomainNameServer) []string { return v.GlueIps }).(pulumi.StringArrayOutput)
}

func (o RegisteredDomainNameServerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RegisteredDomainNameServer) string { return v.Name }).(pulumi.StringOutput)
}

type RegisteredDomainNameServerArrayOutput struct{ *pulumi.OutputState }

func (RegisteredDomainNameServerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RegisteredDomainNameServer)(nil)).Elem()
}

func (o RegisteredDomainNameServerArrayOutput) ToRegisteredDomainNameServerArrayOutput() RegisteredDomainNameServerArrayOutput {
	return o
}

func (o RegisteredDomainNameServerArrayOutput) ToRegisteredDomainNameServerArrayOutputWithContext(ctx context.Context) RegisteredDomainNameServerArrayOutput {
	return o
}

func (o RegisteredDomainNameServerArrayOutput) Index(i pulumi.IntInput) RegisteredDomainNameServerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RegisteredDomainNameServer {
		return vs[0].([]RegisteredDomainNameServer)[vs[1].(int)]
	}).(RegisteredDomainNameServerOutput)
}

type RegisteredDomainRegistrantContact struct {
	AddressLine1     *string           `pulumi:"addressLine1"`
	AddressLine2     *string           `pulumi:"addressLine2"`
	City             *string           `pulumi:"city"`
	ContactType      *string           `pulumi:"contactType"`
	CountryCode      *string           `pulumi:"countryCode"`
	Email            *string           `pulumi:"email"`
	ExtraParams      map[string]string `pulumi:"extraParams"`
	Fax              *string           `pulumi:"fax"`
	FirstName        *string           `pulumi:"firstName"`
	LastName         *string           `pulumi:"lastName"`
	OrganizationName *string           `pulumi:"organizationName"`
	PhoneNumber      *string           `pulumi:"phoneNumber"`
	State            *string           `pulumi:"state"`
	ZipCode          *string           `pulumi:"zipCode"`
}

// RegisteredDomainRegistrantContactInput is an input type that accepts RegisteredDomainRegistrantContactArgs and RegisteredDomainRegistrantContactOutput values.
// You can construct a concrete instance of `RegisteredDomainRegistrantContactInput` via:
//
//	RegisteredDomainRegistrantContactArgs{...}
type RegisteredDomainRegistrantContactInput interface {
	pulumi.Input

	ToRegisteredDomainRegistrantContactOutput() RegisteredDomainRegistrantContactOutput
	ToRegisteredDomainRegistrantContactOutputWithContext(context.Context) RegisteredDomainRegistrantContactOutput
}

type RegisteredDomainRegistrantContactArgs struct {
	AddressLine1     pulumi.StringPtrInput `pulumi:"addressLine1"`
	AddressLine2     pulumi.StringPtrInput `pulumi:"addressLine2"`
	City             pulumi.StringPtrInput `pulumi:"city"`
	ContactType      pulumi.StringPtrInput `pulumi:"contactType"`
	CountryCode      pulumi.StringPtrInput `pulumi:"countryCode"`
	Email            pulumi.StringPtrInput `pulumi:"email"`
	ExtraParams      pulumi.StringMapInput `pulumi:"extraParams"`
	Fax              pulumi.StringPtrInput `pulumi:"fax"`
	FirstName        pulumi.StringPtrInput `pulumi:"firstName"`
	LastName         pulumi.StringPtrInput `pulumi:"lastName"`
	OrganizationName pulumi.StringPtrInput `pulumi:"organizationName"`
	PhoneNumber      pulumi.StringPtrInput `pulumi:"phoneNumber"`
	State            pulumi.StringPtrInput `pulumi:"state"`
	ZipCode          pulumi.StringPtrInput `pulumi:"zipCode"`
}

func (RegisteredDomainRegistrantContactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegisteredDomainRegistrantContact)(nil)).Elem()
}

func (i RegisteredDomainRegistrantContactArgs) ToRegisteredDomainRegistrantContactOutput() RegisteredDomainRegistrantContactOutput {
	return i.ToRegisteredDomainRegistrantContactOutputWithContext(context.Background())
}

func (i RegisteredDomainRegistrantContactArgs) ToRegisteredDomainRegistrantContactOutputWithContext(ctx context.Context) RegisteredDomainRegistrantContactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegisteredDomainRegistrantContactOutput)
}

func (i RegisteredDomainRegistrantContactArgs) ToRegisteredDomainRegistrantContactPtrOutput() RegisteredDomainRegistrantContactPtrOutput {
	return i.ToRegisteredDomainRegistrantContactPtrOutputWithContext(context.Background())
}

func (i RegisteredDomainRegistrantContactArgs) ToRegisteredDomainRegistrantContactPtrOutputWithContext(ctx context.Context) RegisteredDomainRegistrantContactPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegisteredDomainRegistrantContactOutput).ToRegisteredDomainRegistrantContactPtrOutputWithContext(ctx)
}

// RegisteredDomainRegistrantContactPtrInput is an input type that accepts RegisteredDomainRegistrantContactArgs, RegisteredDomainRegistrantContactPtr and RegisteredDomainRegistrantContactPtrOutput values.
// You can construct a concrete instance of `RegisteredDomainRegistrantContactPtrInput` via:
//
//	        RegisteredDomainRegistrantContactArgs{...}
//
//	or:
//
//	        nil
type RegisteredDomainRegistrantContactPtrInput interface {
	pulumi.Input

	ToRegisteredDomainRegistrantContactPtrOutput() RegisteredDomainRegistrantContactPtrOutput
	ToRegisteredDomainRegistrantContactPtrOutputWithContext(context.Context) RegisteredDomainRegistrantContactPtrOutput
}

type registeredDomainRegistrantContactPtrType RegisteredDomainRegistrantContactArgs

func RegisteredDomainRegistrantContactPtr(v *RegisteredDomainRegistrantContactArgs) RegisteredDomainRegistrantContactPtrInput {
	return (*registeredDomainRegistrantContactPtrType)(v)
}

func (*registeredDomainRegistrantContactPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegisteredDomainRegistrantContact)(nil)).Elem()
}

func (i *registeredDomainRegistrantContactPtrType) ToRegisteredDomainRegistrantContactPtrOutput() RegisteredDomainRegistrantContactPtrOutput {
	return i.ToRegisteredDomainRegistrantContactPtrOutputWithContext(context.Background())
}

func (i *registeredDomainRegistrantContactPtrType) ToRegisteredDomainRegistrantContactPtrOutputWithContext(ctx context.Context) RegisteredDomainRegistrantContactPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegisteredDomainRegistrantContactPtrOutput)
}

type RegisteredDomainRegistrantContactOutput struct{ *pulumi.OutputState }

func (RegisteredDomainRegistrantContactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegisteredDomainRegistrantContact)(nil)).Elem()
}

func (o RegisteredDomainRegistrantContactOutput) ToRegisteredDomainRegistrantContactOutput() RegisteredDomainRegistrantContactOutput {
	return o
}

func (o RegisteredDomainRegistrantContactOutput) ToRegisteredDomainRegistrantContactOutputWithContext(ctx context.Context) RegisteredDomainRegistrantContactOutput {
	return o
}

func (o RegisteredDomainRegistrantContactOutput) ToRegisteredDomainRegistrantContactPtrOutput() RegisteredDomainRegistrantContactPtrOutput {
	return o.ToRegisteredDomainRegistrantContactPtrOutputWithContext(context.Background())
}

func (o RegisteredDomainRegistrantContactOutput) ToRegisteredDomainRegistrantContactPtrOutputWithContext(ctx context.Context) RegisteredDomainRegistrantContactPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegisteredDomainRegistrantContact) *RegisteredDomainRegistrantContact {
		return &v
	}).(RegisteredDomainRegistrantContactPtrOutput)
}

func (o RegisteredDomainRegistrantContactOutput) AddressLine1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainRegistrantContact) *string { return v.AddressLine1 }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainRegistrantContactOutput) AddressLine2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainRegistrantContact) *string { return v.AddressLine2 }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainRegistrantContactOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainRegistrantContact) *string { return v.City }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainRegistrantContactOutput) ContactType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainRegistrantContact) *string { return v.ContactType }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainRegistrantContactOutput) CountryCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainRegistrantContact) *string { return v.CountryCode }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainRegistrantContactOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainRegistrantContact) *string { return v.Email }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainRegistrantContactOutput) ExtraParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v RegisteredDomainRegistrantContact) map[string]string { return v.ExtraParams }).(pulumi.StringMapOutput)
}

func (o RegisteredDomainRegistrantContactOutput) Fax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainRegistrantContact) *string { return v.Fax }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainRegistrantContactOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainRegistrantContact) *string { return v.FirstName }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainRegistrantContactOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainRegistrantContact) *string { return v.LastName }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainRegistrantContactOutput) OrganizationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainRegistrantContact) *string { return v.OrganizationName }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainRegistrantContactOutput) PhoneNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainRegistrantContact) *string { return v.PhoneNumber }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainRegistrantContactOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainRegistrantContact) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainRegistrantContactOutput) ZipCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainRegistrantContact) *string { return v.ZipCode }).(pulumi.StringPtrOutput)
}

type RegisteredDomainRegistrantContactPtrOutput struct{ *pulumi.OutputState }

func (RegisteredDomainRegistrantContactPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegisteredDomainRegistrantContact)(nil)).Elem()
}

func (o RegisteredDomainRegistrantContactPtrOutput) ToRegisteredDomainRegistrantContactPtrOutput() RegisteredDomainRegistrantContactPtrOutput {
	return o
}

func (o RegisteredDomainRegistrantContactPtrOutput) ToRegisteredDomainRegistrantContactPtrOutputWithContext(ctx context.Context) RegisteredDomainRegistrantContactPtrOutput {
	return o
}

func (o RegisteredDomainRegistrantContactPtrOutput) Elem() RegisteredDomainRegistrantContactOutput {
	return o.ApplyT(func(v *RegisteredDomainRegistrantContact) RegisteredDomainRegistrantContact {
		if v != nil {
			return *v
		}
		var ret RegisteredDomainRegistrantContact
		return ret
	}).(RegisteredDomainRegistrantContactOutput)
}

func (o RegisteredDomainRegistrantContactPtrOutput) AddressLine1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainRegistrantContact) *string {
		if v == nil {
			return nil
		}
		return v.AddressLine1
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainRegistrantContactPtrOutput) AddressLine2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainRegistrantContact) *string {
		if v == nil {
			return nil
		}
		return v.AddressLine2
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainRegistrantContactPtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainRegistrantContact) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainRegistrantContactPtrOutput) ContactType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainRegistrantContact) *string {
		if v == nil {
			return nil
		}
		return v.ContactType
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainRegistrantContactPtrOutput) CountryCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainRegistrantContact) *string {
		if v == nil {
			return nil
		}
		return v.CountryCode
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainRegistrantContactPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainRegistrantContact) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainRegistrantContactPtrOutput) ExtraParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RegisteredDomainRegistrantContact) map[string]string {
		if v == nil {
			return nil
		}
		return v.ExtraParams
	}).(pulumi.StringMapOutput)
}

func (o RegisteredDomainRegistrantContactPtrOutput) Fax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainRegistrantContact) *string {
		if v == nil {
			return nil
		}
		return v.Fax
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainRegistrantContactPtrOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainRegistrantContact) *string {
		if v == nil {
			return nil
		}
		return v.FirstName
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainRegistrantContactPtrOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainRegistrantContact) *string {
		if v == nil {
			return nil
		}
		return v.LastName
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainRegistrantContactPtrOutput) OrganizationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainRegistrantContact) *string {
		if v == nil {
			return nil
		}
		return v.OrganizationName
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainRegistrantContactPtrOutput) PhoneNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainRegistrantContact) *string {
		if v == nil {
			return nil
		}
		return v.PhoneNumber
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainRegistrantContactPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainRegistrantContact) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainRegistrantContactPtrOutput) ZipCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainRegistrantContact) *string {
		if v == nil {
			return nil
		}
		return v.ZipCode
	}).(pulumi.StringPtrOutput)
}

type RegisteredDomainTechContact struct {
	AddressLine1     *string           `pulumi:"addressLine1"`
	AddressLine2     *string           `pulumi:"addressLine2"`
	City             *string           `pulumi:"city"`
	ContactType      *string           `pulumi:"contactType"`
	CountryCode      *string           `pulumi:"countryCode"`
	Email            *string           `pulumi:"email"`
	ExtraParams      map[string]string `pulumi:"extraParams"`
	Fax              *string           `pulumi:"fax"`
	FirstName        *string           `pulumi:"firstName"`
	LastName         *string           `pulumi:"lastName"`
	OrganizationName *string           `pulumi:"organizationName"`
	PhoneNumber      *string           `pulumi:"phoneNumber"`
	State            *string           `pulumi:"state"`
	ZipCode          *string           `pulumi:"zipCode"`
}

// RegisteredDomainTechContactInput is an input type that accepts RegisteredDomainTechContactArgs and RegisteredDomainTechContactOutput values.
// You can construct a concrete instance of `RegisteredDomainTechContactInput` via:
//
//	RegisteredDomainTechContactArgs{...}
type RegisteredDomainTechContactInput interface {
	pulumi.Input

	ToRegisteredDomainTechContactOutput() RegisteredDomainTechContactOutput
	ToRegisteredDomainTechContactOutputWithContext(context.Context) RegisteredDomainTechContactOutput
}

type RegisteredDomainTechContactArgs struct {
	AddressLine1     pulumi.StringPtrInput `pulumi:"addressLine1"`
	AddressLine2     pulumi.StringPtrInput `pulumi:"addressLine2"`
	City             pulumi.StringPtrInput `pulumi:"city"`
	ContactType      pulumi.StringPtrInput `pulumi:"contactType"`
	CountryCode      pulumi.StringPtrInput `pulumi:"countryCode"`
	Email            pulumi.StringPtrInput `pulumi:"email"`
	ExtraParams      pulumi.StringMapInput `pulumi:"extraParams"`
	Fax              pulumi.StringPtrInput `pulumi:"fax"`
	FirstName        pulumi.StringPtrInput `pulumi:"firstName"`
	LastName         pulumi.StringPtrInput `pulumi:"lastName"`
	OrganizationName pulumi.StringPtrInput `pulumi:"organizationName"`
	PhoneNumber      pulumi.StringPtrInput `pulumi:"phoneNumber"`
	State            pulumi.StringPtrInput `pulumi:"state"`
	ZipCode          pulumi.StringPtrInput `pulumi:"zipCode"`
}

func (RegisteredDomainTechContactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RegisteredDomainTechContact)(nil)).Elem()
}

func (i RegisteredDomainTechContactArgs) ToRegisteredDomainTechContactOutput() RegisteredDomainTechContactOutput {
	return i.ToRegisteredDomainTechContactOutputWithContext(context.Background())
}

func (i RegisteredDomainTechContactArgs) ToRegisteredDomainTechContactOutputWithContext(ctx context.Context) RegisteredDomainTechContactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegisteredDomainTechContactOutput)
}

func (i RegisteredDomainTechContactArgs) ToRegisteredDomainTechContactPtrOutput() RegisteredDomainTechContactPtrOutput {
	return i.ToRegisteredDomainTechContactPtrOutputWithContext(context.Background())
}

func (i RegisteredDomainTechContactArgs) ToRegisteredDomainTechContactPtrOutputWithContext(ctx context.Context) RegisteredDomainTechContactPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegisteredDomainTechContactOutput).ToRegisteredDomainTechContactPtrOutputWithContext(ctx)
}

// RegisteredDomainTechContactPtrInput is an input type that accepts RegisteredDomainTechContactArgs, RegisteredDomainTechContactPtr and RegisteredDomainTechContactPtrOutput values.
// You can construct a concrete instance of `RegisteredDomainTechContactPtrInput` via:
//
//	        RegisteredDomainTechContactArgs{...}
//
//	or:
//
//	        nil
type RegisteredDomainTechContactPtrInput interface {
	pulumi.Input

	ToRegisteredDomainTechContactPtrOutput() RegisteredDomainTechContactPtrOutput
	ToRegisteredDomainTechContactPtrOutputWithContext(context.Context) RegisteredDomainTechContactPtrOutput
}

type registeredDomainTechContactPtrType RegisteredDomainTechContactArgs

func RegisteredDomainTechContactPtr(v *RegisteredDomainTechContactArgs) RegisteredDomainTechContactPtrInput {
	return (*registeredDomainTechContactPtrType)(v)
}

func (*registeredDomainTechContactPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RegisteredDomainTechContact)(nil)).Elem()
}

func (i *registeredDomainTechContactPtrType) ToRegisteredDomainTechContactPtrOutput() RegisteredDomainTechContactPtrOutput {
	return i.ToRegisteredDomainTechContactPtrOutputWithContext(context.Background())
}

func (i *registeredDomainTechContactPtrType) ToRegisteredDomainTechContactPtrOutputWithContext(ctx context.Context) RegisteredDomainTechContactPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RegisteredDomainTechContactPtrOutput)
}

type RegisteredDomainTechContactOutput struct{ *pulumi.OutputState }

func (RegisteredDomainTechContactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RegisteredDomainTechContact)(nil)).Elem()
}

func (o RegisteredDomainTechContactOutput) ToRegisteredDomainTechContactOutput() RegisteredDomainTechContactOutput {
	return o
}

func (o RegisteredDomainTechContactOutput) ToRegisteredDomainTechContactOutputWithContext(ctx context.Context) RegisteredDomainTechContactOutput {
	return o
}

func (o RegisteredDomainTechContactOutput) ToRegisteredDomainTechContactPtrOutput() RegisteredDomainTechContactPtrOutput {
	return o.ToRegisteredDomainTechContactPtrOutputWithContext(context.Background())
}

func (o RegisteredDomainTechContactOutput) ToRegisteredDomainTechContactPtrOutputWithContext(ctx context.Context) RegisteredDomainTechContactPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RegisteredDomainTechContact) *RegisteredDomainTechContact {
		return &v
	}).(RegisteredDomainTechContactPtrOutput)
}

func (o RegisteredDomainTechContactOutput) AddressLine1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainTechContact) *string { return v.AddressLine1 }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainTechContactOutput) AddressLine2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainTechContact) *string { return v.AddressLine2 }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainTechContactOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainTechContact) *string { return v.City }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainTechContactOutput) ContactType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainTechContact) *string { return v.ContactType }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainTechContactOutput) CountryCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainTechContact) *string { return v.CountryCode }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainTechContactOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainTechContact) *string { return v.Email }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainTechContactOutput) ExtraParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v RegisteredDomainTechContact) map[string]string { return v.ExtraParams }).(pulumi.StringMapOutput)
}

func (o RegisteredDomainTechContactOutput) Fax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainTechContact) *string { return v.Fax }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainTechContactOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainTechContact) *string { return v.FirstName }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainTechContactOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainTechContact) *string { return v.LastName }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainTechContactOutput) OrganizationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainTechContact) *string { return v.OrganizationName }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainTechContactOutput) PhoneNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainTechContact) *string { return v.PhoneNumber }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainTechContactOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainTechContact) *string { return v.State }).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainTechContactOutput) ZipCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RegisteredDomainTechContact) *string { return v.ZipCode }).(pulumi.StringPtrOutput)
}

type RegisteredDomainTechContactPtrOutput struct{ *pulumi.OutputState }

func (RegisteredDomainTechContactPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RegisteredDomainTechContact)(nil)).Elem()
}

func (o RegisteredDomainTechContactPtrOutput) ToRegisteredDomainTechContactPtrOutput() RegisteredDomainTechContactPtrOutput {
	return o
}

func (o RegisteredDomainTechContactPtrOutput) ToRegisteredDomainTechContactPtrOutputWithContext(ctx context.Context) RegisteredDomainTechContactPtrOutput {
	return o
}

func (o RegisteredDomainTechContactPtrOutput) Elem() RegisteredDomainTechContactOutput {
	return o.ApplyT(func(v *RegisteredDomainTechContact) RegisteredDomainTechContact {
		if v != nil {
			return *v
		}
		var ret RegisteredDomainTechContact
		return ret
	}).(RegisteredDomainTechContactOutput)
}

func (o RegisteredDomainTechContactPtrOutput) AddressLine1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainTechContact) *string {
		if v == nil {
			return nil
		}
		return v.AddressLine1
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainTechContactPtrOutput) AddressLine2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainTechContact) *string {
		if v == nil {
			return nil
		}
		return v.AddressLine2
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainTechContactPtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainTechContact) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainTechContactPtrOutput) ContactType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainTechContact) *string {
		if v == nil {
			return nil
		}
		return v.ContactType
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainTechContactPtrOutput) CountryCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainTechContact) *string {
		if v == nil {
			return nil
		}
		return v.CountryCode
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainTechContactPtrOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainTechContact) *string {
		if v == nil {
			return nil
		}
		return v.Email
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainTechContactPtrOutput) ExtraParams() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RegisteredDomainTechContact) map[string]string {
		if v == nil {
			return nil
		}
		return v.ExtraParams
	}).(pulumi.StringMapOutput)
}

func (o RegisteredDomainTechContactPtrOutput) Fax() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainTechContact) *string {
		if v == nil {
			return nil
		}
		return v.Fax
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainTechContactPtrOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainTechContact) *string {
		if v == nil {
			return nil
		}
		return v.FirstName
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainTechContactPtrOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainTechContact) *string {
		if v == nil {
			return nil
		}
		return v.LastName
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainTechContactPtrOutput) OrganizationName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainTechContact) *string {
		if v == nil {
			return nil
		}
		return v.OrganizationName
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainTechContactPtrOutput) PhoneNumber() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainTechContact) *string {
		if v == nil {
			return nil
		}
		return v.PhoneNumber
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainTechContactPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainTechContact) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

func (o RegisteredDomainTechContactPtrOutput) ZipCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RegisteredDomainTechContact) *string {
		if v == nil {
			return nil
		}
		return v.ZipCode
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RegisteredDomainAdminContactInput)(nil)).Elem(), RegisteredDomainAdminContactArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegisteredDomainAdminContactPtrInput)(nil)).Elem(), RegisteredDomainAdminContactArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegisteredDomainNameServerInput)(nil)).Elem(), RegisteredDomainNameServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegisteredDomainNameServerArrayInput)(nil)).Elem(), RegisteredDomainNameServerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegisteredDomainRegistrantContactInput)(nil)).Elem(), RegisteredDomainRegistrantContactArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegisteredDomainRegistrantContactPtrInput)(nil)).Elem(), RegisteredDomainRegistrantContactArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegisteredDomainTechContactInput)(nil)).Elem(), RegisteredDomainTechContactArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RegisteredDomainTechContactPtrInput)(nil)).Elem(), RegisteredDomainTechContactArgs{})
	pulumi.RegisterOutputType(RegisteredDomainAdminContactOutput{})
	pulumi.RegisterOutputType(RegisteredDomainAdminContactPtrOutput{})
	pulumi.RegisterOutputType(RegisteredDomainNameServerOutput{})
	pulumi.RegisterOutputType(RegisteredDomainNameServerArrayOutput{})
	pulumi.RegisterOutputType(RegisteredDomainRegistrantContactOutput{})
	pulumi.RegisterOutputType(RegisteredDomainRegistrantContactPtrOutput{})
	pulumi.RegisterOutputType(RegisteredDomainTechContactOutput{})
	pulumi.RegisterOutputType(RegisteredDomainTechContactPtrOutput{})
}
