// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appconfig

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ConfigurationProfileValidator struct {
	// Either the JSON Schema content or the ARN of an AWS Lambda function.
	Content *string `pulumi:"content"`
	// Type of validator. Valid values: `JSON_SCHEMA` and `LAMBDA`.
	Type string `pulumi:"type"`
}

// ConfigurationProfileValidatorInput is an input type that accepts ConfigurationProfileValidatorArgs and ConfigurationProfileValidatorOutput values.
// You can construct a concrete instance of `ConfigurationProfileValidatorInput` via:
//
//	ConfigurationProfileValidatorArgs{...}
type ConfigurationProfileValidatorInput interface {
	pulumi.Input

	ToConfigurationProfileValidatorOutput() ConfigurationProfileValidatorOutput
	ToConfigurationProfileValidatorOutputWithContext(context.Context) ConfigurationProfileValidatorOutput
}

type ConfigurationProfileValidatorArgs struct {
	// Either the JSON Schema content or the ARN of an AWS Lambda function.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// Type of validator. Valid values: `JSON_SCHEMA` and `LAMBDA`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (ConfigurationProfileValidatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationProfileValidator)(nil)).Elem()
}

func (i ConfigurationProfileValidatorArgs) ToConfigurationProfileValidatorOutput() ConfigurationProfileValidatorOutput {
	return i.ToConfigurationProfileValidatorOutputWithContext(context.Background())
}

func (i ConfigurationProfileValidatorArgs) ToConfigurationProfileValidatorOutputWithContext(ctx context.Context) ConfigurationProfileValidatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationProfileValidatorOutput)
}

// ConfigurationProfileValidatorArrayInput is an input type that accepts ConfigurationProfileValidatorArray and ConfigurationProfileValidatorArrayOutput values.
// You can construct a concrete instance of `ConfigurationProfileValidatorArrayInput` via:
//
//	ConfigurationProfileValidatorArray{ ConfigurationProfileValidatorArgs{...} }
type ConfigurationProfileValidatorArrayInput interface {
	pulumi.Input

	ToConfigurationProfileValidatorArrayOutput() ConfigurationProfileValidatorArrayOutput
	ToConfigurationProfileValidatorArrayOutputWithContext(context.Context) ConfigurationProfileValidatorArrayOutput
}

type ConfigurationProfileValidatorArray []ConfigurationProfileValidatorInput

func (ConfigurationProfileValidatorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationProfileValidator)(nil)).Elem()
}

func (i ConfigurationProfileValidatorArray) ToConfigurationProfileValidatorArrayOutput() ConfigurationProfileValidatorArrayOutput {
	return i.ToConfigurationProfileValidatorArrayOutputWithContext(context.Background())
}

func (i ConfigurationProfileValidatorArray) ToConfigurationProfileValidatorArrayOutputWithContext(ctx context.Context) ConfigurationProfileValidatorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationProfileValidatorArrayOutput)
}

type ConfigurationProfileValidatorOutput struct{ *pulumi.OutputState }

func (ConfigurationProfileValidatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationProfileValidator)(nil)).Elem()
}

func (o ConfigurationProfileValidatorOutput) ToConfigurationProfileValidatorOutput() ConfigurationProfileValidatorOutput {
	return o
}

func (o ConfigurationProfileValidatorOutput) ToConfigurationProfileValidatorOutputWithContext(ctx context.Context) ConfigurationProfileValidatorOutput {
	return o
}

// Either the JSON Schema content or the ARN of an AWS Lambda function.
func (o ConfigurationProfileValidatorOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigurationProfileValidator) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// Type of validator. Valid values: `JSON_SCHEMA` and `LAMBDA`.
func (o ConfigurationProfileValidatorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationProfileValidator) string { return v.Type }).(pulumi.StringOutput)
}

type ConfigurationProfileValidatorArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationProfileValidatorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigurationProfileValidator)(nil)).Elem()
}

func (o ConfigurationProfileValidatorArrayOutput) ToConfigurationProfileValidatorArrayOutput() ConfigurationProfileValidatorArrayOutput {
	return o
}

func (o ConfigurationProfileValidatorArrayOutput) ToConfigurationProfileValidatorArrayOutputWithContext(ctx context.Context) ConfigurationProfileValidatorArrayOutput {
	return o
}

func (o ConfigurationProfileValidatorArrayOutput) Index(i pulumi.IntInput) ConfigurationProfileValidatorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigurationProfileValidator {
		return vs[0].([]ConfigurationProfileValidator)[vs[1].(int)]
	}).(ConfigurationProfileValidatorOutput)
}

type EnvironmentMonitor struct {
	// ARN of the Amazon CloudWatch alarm.
	AlarmArn string `pulumi:"alarmArn"`
	// ARN of an IAM role for AWS AppConfig to monitor `alarmArn`.
	AlarmRoleArn *string `pulumi:"alarmRoleArn"`
}

// EnvironmentMonitorInput is an input type that accepts EnvironmentMonitorArgs and EnvironmentMonitorOutput values.
// You can construct a concrete instance of `EnvironmentMonitorInput` via:
//
//	EnvironmentMonitorArgs{...}
type EnvironmentMonitorInput interface {
	pulumi.Input

	ToEnvironmentMonitorOutput() EnvironmentMonitorOutput
	ToEnvironmentMonitorOutputWithContext(context.Context) EnvironmentMonitorOutput
}

type EnvironmentMonitorArgs struct {
	// ARN of the Amazon CloudWatch alarm.
	AlarmArn pulumi.StringInput `pulumi:"alarmArn"`
	// ARN of an IAM role for AWS AppConfig to monitor `alarmArn`.
	AlarmRoleArn pulumi.StringPtrInput `pulumi:"alarmRoleArn"`
}

func (EnvironmentMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentMonitor)(nil)).Elem()
}

func (i EnvironmentMonitorArgs) ToEnvironmentMonitorOutput() EnvironmentMonitorOutput {
	return i.ToEnvironmentMonitorOutputWithContext(context.Background())
}

func (i EnvironmentMonitorArgs) ToEnvironmentMonitorOutputWithContext(ctx context.Context) EnvironmentMonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentMonitorOutput)
}

// EnvironmentMonitorArrayInput is an input type that accepts EnvironmentMonitorArray and EnvironmentMonitorArrayOutput values.
// You can construct a concrete instance of `EnvironmentMonitorArrayInput` via:
//
//	EnvironmentMonitorArray{ EnvironmentMonitorArgs{...} }
type EnvironmentMonitorArrayInput interface {
	pulumi.Input

	ToEnvironmentMonitorArrayOutput() EnvironmentMonitorArrayOutput
	ToEnvironmentMonitorArrayOutputWithContext(context.Context) EnvironmentMonitorArrayOutput
}

type EnvironmentMonitorArray []EnvironmentMonitorInput

func (EnvironmentMonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentMonitor)(nil)).Elem()
}

func (i EnvironmentMonitorArray) ToEnvironmentMonitorArrayOutput() EnvironmentMonitorArrayOutput {
	return i.ToEnvironmentMonitorArrayOutputWithContext(context.Background())
}

func (i EnvironmentMonitorArray) ToEnvironmentMonitorArrayOutputWithContext(ctx context.Context) EnvironmentMonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentMonitorArrayOutput)
}

type EnvironmentMonitorOutput struct{ *pulumi.OutputState }

func (EnvironmentMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentMonitor)(nil)).Elem()
}

func (o EnvironmentMonitorOutput) ToEnvironmentMonitorOutput() EnvironmentMonitorOutput {
	return o
}

func (o EnvironmentMonitorOutput) ToEnvironmentMonitorOutputWithContext(ctx context.Context) EnvironmentMonitorOutput {
	return o
}

// ARN of the Amazon CloudWatch alarm.
func (o EnvironmentMonitorOutput) AlarmArn() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentMonitor) string { return v.AlarmArn }).(pulumi.StringOutput)
}

// ARN of an IAM role for AWS AppConfig to monitor `alarmArn`.
func (o EnvironmentMonitorOutput) AlarmRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentMonitor) *string { return v.AlarmRoleArn }).(pulumi.StringPtrOutput)
}

type EnvironmentMonitorArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentMonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EnvironmentMonitor)(nil)).Elem()
}

func (o EnvironmentMonitorArrayOutput) ToEnvironmentMonitorArrayOutput() EnvironmentMonitorArrayOutput {
	return o
}

func (o EnvironmentMonitorArrayOutput) ToEnvironmentMonitorArrayOutputWithContext(ctx context.Context) EnvironmentMonitorArrayOutput {
	return o
}

func (o EnvironmentMonitorArrayOutput) Index(i pulumi.IntInput) EnvironmentMonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EnvironmentMonitor {
		return vs[0].([]EnvironmentMonitor)[vs[1].(int)]
	}).(EnvironmentMonitorOutput)
}

type EventIntegrationEventFilter struct {
	// Source of the events.
	Source string `pulumi:"source"`
}

// EventIntegrationEventFilterInput is an input type that accepts EventIntegrationEventFilterArgs and EventIntegrationEventFilterOutput values.
// You can construct a concrete instance of `EventIntegrationEventFilterInput` via:
//
//	EventIntegrationEventFilterArgs{...}
type EventIntegrationEventFilterInput interface {
	pulumi.Input

	ToEventIntegrationEventFilterOutput() EventIntegrationEventFilterOutput
	ToEventIntegrationEventFilterOutputWithContext(context.Context) EventIntegrationEventFilterOutput
}

type EventIntegrationEventFilterArgs struct {
	// Source of the events.
	Source pulumi.StringInput `pulumi:"source"`
}

func (EventIntegrationEventFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventIntegrationEventFilter)(nil)).Elem()
}

func (i EventIntegrationEventFilterArgs) ToEventIntegrationEventFilterOutput() EventIntegrationEventFilterOutput {
	return i.ToEventIntegrationEventFilterOutputWithContext(context.Background())
}

func (i EventIntegrationEventFilterArgs) ToEventIntegrationEventFilterOutputWithContext(ctx context.Context) EventIntegrationEventFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventIntegrationEventFilterOutput)
}

func (i EventIntegrationEventFilterArgs) ToEventIntegrationEventFilterPtrOutput() EventIntegrationEventFilterPtrOutput {
	return i.ToEventIntegrationEventFilterPtrOutputWithContext(context.Background())
}

func (i EventIntegrationEventFilterArgs) ToEventIntegrationEventFilterPtrOutputWithContext(ctx context.Context) EventIntegrationEventFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventIntegrationEventFilterOutput).ToEventIntegrationEventFilterPtrOutputWithContext(ctx)
}

// EventIntegrationEventFilterPtrInput is an input type that accepts EventIntegrationEventFilterArgs, EventIntegrationEventFilterPtr and EventIntegrationEventFilterPtrOutput values.
// You can construct a concrete instance of `EventIntegrationEventFilterPtrInput` via:
//
//	        EventIntegrationEventFilterArgs{...}
//
//	or:
//
//	        nil
type EventIntegrationEventFilterPtrInput interface {
	pulumi.Input

	ToEventIntegrationEventFilterPtrOutput() EventIntegrationEventFilterPtrOutput
	ToEventIntegrationEventFilterPtrOutputWithContext(context.Context) EventIntegrationEventFilterPtrOutput
}

type eventIntegrationEventFilterPtrType EventIntegrationEventFilterArgs

func EventIntegrationEventFilterPtr(v *EventIntegrationEventFilterArgs) EventIntegrationEventFilterPtrInput {
	return (*eventIntegrationEventFilterPtrType)(v)
}

func (*eventIntegrationEventFilterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventIntegrationEventFilter)(nil)).Elem()
}

func (i *eventIntegrationEventFilterPtrType) ToEventIntegrationEventFilterPtrOutput() EventIntegrationEventFilterPtrOutput {
	return i.ToEventIntegrationEventFilterPtrOutputWithContext(context.Background())
}

func (i *eventIntegrationEventFilterPtrType) ToEventIntegrationEventFilterPtrOutputWithContext(ctx context.Context) EventIntegrationEventFilterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventIntegrationEventFilterPtrOutput)
}

type EventIntegrationEventFilterOutput struct{ *pulumi.OutputState }

func (EventIntegrationEventFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventIntegrationEventFilter)(nil)).Elem()
}

func (o EventIntegrationEventFilterOutput) ToEventIntegrationEventFilterOutput() EventIntegrationEventFilterOutput {
	return o
}

func (o EventIntegrationEventFilterOutput) ToEventIntegrationEventFilterOutputWithContext(ctx context.Context) EventIntegrationEventFilterOutput {
	return o
}

func (o EventIntegrationEventFilterOutput) ToEventIntegrationEventFilterPtrOutput() EventIntegrationEventFilterPtrOutput {
	return o.ToEventIntegrationEventFilterPtrOutputWithContext(context.Background())
}

func (o EventIntegrationEventFilterOutput) ToEventIntegrationEventFilterPtrOutputWithContext(ctx context.Context) EventIntegrationEventFilterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventIntegrationEventFilter) *EventIntegrationEventFilter {
		return &v
	}).(EventIntegrationEventFilterPtrOutput)
}

// Source of the events.
func (o EventIntegrationEventFilterOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v EventIntegrationEventFilter) string { return v.Source }).(pulumi.StringOutput)
}

type EventIntegrationEventFilterPtrOutput struct{ *pulumi.OutputState }

func (EventIntegrationEventFilterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventIntegrationEventFilter)(nil)).Elem()
}

func (o EventIntegrationEventFilterPtrOutput) ToEventIntegrationEventFilterPtrOutput() EventIntegrationEventFilterPtrOutput {
	return o
}

func (o EventIntegrationEventFilterPtrOutput) ToEventIntegrationEventFilterPtrOutputWithContext(ctx context.Context) EventIntegrationEventFilterPtrOutput {
	return o
}

func (o EventIntegrationEventFilterPtrOutput) Elem() EventIntegrationEventFilterOutput {
	return o.ApplyT(func(v *EventIntegrationEventFilter) EventIntegrationEventFilter {
		if v != nil {
			return *v
		}
		var ret EventIntegrationEventFilter
		return ret
	}).(EventIntegrationEventFilterOutput)
}

// Source of the events.
func (o EventIntegrationEventFilterPtrOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventIntegrationEventFilter) *string {
		if v == nil {
			return nil
		}
		return &v.Source
	}).(pulumi.StringPtrOutput)
}

type ExtensionActionPoint struct {
	// An action defines the tasks the extension performs during the AppConfig workflow. Detailed below.
	Actions []ExtensionActionPointAction `pulumi:"actions"`
	// The point at which to perform the defined actions. Valid points are `PRE_CREATE_HOSTED_CONFIGURATION_VERSION`, `PRE_START_DEPLOYMENT`, `ON_DEPLOYMENT_START`, `ON_DEPLOYMENT_STEP`, `ON_DEPLOYMENT_BAKING`, `ON_DEPLOYMENT_COMPLETE`, `ON_DEPLOYMENT_ROLLED_BACK`.
	Point string `pulumi:"point"`
}

// ExtensionActionPointInput is an input type that accepts ExtensionActionPointArgs and ExtensionActionPointOutput values.
// You can construct a concrete instance of `ExtensionActionPointInput` via:
//
//	ExtensionActionPointArgs{...}
type ExtensionActionPointInput interface {
	pulumi.Input

	ToExtensionActionPointOutput() ExtensionActionPointOutput
	ToExtensionActionPointOutputWithContext(context.Context) ExtensionActionPointOutput
}

type ExtensionActionPointArgs struct {
	// An action defines the tasks the extension performs during the AppConfig workflow. Detailed below.
	Actions ExtensionActionPointActionArrayInput `pulumi:"actions"`
	// The point at which to perform the defined actions. Valid points are `PRE_CREATE_HOSTED_CONFIGURATION_VERSION`, `PRE_START_DEPLOYMENT`, `ON_DEPLOYMENT_START`, `ON_DEPLOYMENT_STEP`, `ON_DEPLOYMENT_BAKING`, `ON_DEPLOYMENT_COMPLETE`, `ON_DEPLOYMENT_ROLLED_BACK`.
	Point pulumi.StringInput `pulumi:"point"`
}

func (ExtensionActionPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionActionPoint)(nil)).Elem()
}

func (i ExtensionActionPointArgs) ToExtensionActionPointOutput() ExtensionActionPointOutput {
	return i.ToExtensionActionPointOutputWithContext(context.Background())
}

func (i ExtensionActionPointArgs) ToExtensionActionPointOutputWithContext(ctx context.Context) ExtensionActionPointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionActionPointOutput)
}

// ExtensionActionPointArrayInput is an input type that accepts ExtensionActionPointArray and ExtensionActionPointArrayOutput values.
// You can construct a concrete instance of `ExtensionActionPointArrayInput` via:
//
//	ExtensionActionPointArray{ ExtensionActionPointArgs{...} }
type ExtensionActionPointArrayInput interface {
	pulumi.Input

	ToExtensionActionPointArrayOutput() ExtensionActionPointArrayOutput
	ToExtensionActionPointArrayOutputWithContext(context.Context) ExtensionActionPointArrayOutput
}

type ExtensionActionPointArray []ExtensionActionPointInput

func (ExtensionActionPointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensionActionPoint)(nil)).Elem()
}

func (i ExtensionActionPointArray) ToExtensionActionPointArrayOutput() ExtensionActionPointArrayOutput {
	return i.ToExtensionActionPointArrayOutputWithContext(context.Background())
}

func (i ExtensionActionPointArray) ToExtensionActionPointArrayOutputWithContext(ctx context.Context) ExtensionActionPointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionActionPointArrayOutput)
}

type ExtensionActionPointOutput struct{ *pulumi.OutputState }

func (ExtensionActionPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionActionPoint)(nil)).Elem()
}

func (o ExtensionActionPointOutput) ToExtensionActionPointOutput() ExtensionActionPointOutput {
	return o
}

func (o ExtensionActionPointOutput) ToExtensionActionPointOutputWithContext(ctx context.Context) ExtensionActionPointOutput {
	return o
}

// An action defines the tasks the extension performs during the AppConfig workflow. Detailed below.
func (o ExtensionActionPointOutput) Actions() ExtensionActionPointActionArrayOutput {
	return o.ApplyT(func(v ExtensionActionPoint) []ExtensionActionPointAction { return v.Actions }).(ExtensionActionPointActionArrayOutput)
}

// The point at which to perform the defined actions. Valid points are `PRE_CREATE_HOSTED_CONFIGURATION_VERSION`, `PRE_START_DEPLOYMENT`, `ON_DEPLOYMENT_START`, `ON_DEPLOYMENT_STEP`, `ON_DEPLOYMENT_BAKING`, `ON_DEPLOYMENT_COMPLETE`, `ON_DEPLOYMENT_ROLLED_BACK`.
func (o ExtensionActionPointOutput) Point() pulumi.StringOutput {
	return o.ApplyT(func(v ExtensionActionPoint) string { return v.Point }).(pulumi.StringOutput)
}

type ExtensionActionPointArrayOutput struct{ *pulumi.OutputState }

func (ExtensionActionPointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensionActionPoint)(nil)).Elem()
}

func (o ExtensionActionPointArrayOutput) ToExtensionActionPointArrayOutput() ExtensionActionPointArrayOutput {
	return o
}

func (o ExtensionActionPointArrayOutput) ToExtensionActionPointArrayOutputWithContext(ctx context.Context) ExtensionActionPointArrayOutput {
	return o
}

func (o ExtensionActionPointArrayOutput) Index(i pulumi.IntInput) ExtensionActionPointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExtensionActionPoint {
		return vs[0].([]ExtensionActionPoint)[vs[1].(int)]
	}).(ExtensionActionPointOutput)
}

type ExtensionActionPointAction struct {
	// Information about the action.
	Description *string `pulumi:"description"`
	// The action name.
	Name string `pulumi:"name"`
	// An Amazon Resource Name (ARN) for an Identity and Access Management assume role.
	RoleArn string `pulumi:"roleArn"`
	// The extension URI associated to the action point in the extension definition. The URI can be an Amazon Resource Name (ARN) for one of the following: an Lambda function, an Amazon Simple Queue Service queue, an Amazon Simple Notification Service topic, or the Amazon EventBridge default event bus.
	Uri string `pulumi:"uri"`
}

// ExtensionActionPointActionInput is an input type that accepts ExtensionActionPointActionArgs and ExtensionActionPointActionOutput values.
// You can construct a concrete instance of `ExtensionActionPointActionInput` via:
//
//	ExtensionActionPointActionArgs{...}
type ExtensionActionPointActionInput interface {
	pulumi.Input

	ToExtensionActionPointActionOutput() ExtensionActionPointActionOutput
	ToExtensionActionPointActionOutputWithContext(context.Context) ExtensionActionPointActionOutput
}

type ExtensionActionPointActionArgs struct {
	// Information about the action.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The action name.
	Name pulumi.StringInput `pulumi:"name"`
	// An Amazon Resource Name (ARN) for an Identity and Access Management assume role.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The extension URI associated to the action point in the extension definition. The URI can be an Amazon Resource Name (ARN) for one of the following: an Lambda function, an Amazon Simple Queue Service queue, an Amazon Simple Notification Service topic, or the Amazon EventBridge default event bus.
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (ExtensionActionPointActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionActionPointAction)(nil)).Elem()
}

func (i ExtensionActionPointActionArgs) ToExtensionActionPointActionOutput() ExtensionActionPointActionOutput {
	return i.ToExtensionActionPointActionOutputWithContext(context.Background())
}

func (i ExtensionActionPointActionArgs) ToExtensionActionPointActionOutputWithContext(ctx context.Context) ExtensionActionPointActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionActionPointActionOutput)
}

// ExtensionActionPointActionArrayInput is an input type that accepts ExtensionActionPointActionArray and ExtensionActionPointActionArrayOutput values.
// You can construct a concrete instance of `ExtensionActionPointActionArrayInput` via:
//
//	ExtensionActionPointActionArray{ ExtensionActionPointActionArgs{...} }
type ExtensionActionPointActionArrayInput interface {
	pulumi.Input

	ToExtensionActionPointActionArrayOutput() ExtensionActionPointActionArrayOutput
	ToExtensionActionPointActionArrayOutputWithContext(context.Context) ExtensionActionPointActionArrayOutput
}

type ExtensionActionPointActionArray []ExtensionActionPointActionInput

func (ExtensionActionPointActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensionActionPointAction)(nil)).Elem()
}

func (i ExtensionActionPointActionArray) ToExtensionActionPointActionArrayOutput() ExtensionActionPointActionArrayOutput {
	return i.ToExtensionActionPointActionArrayOutputWithContext(context.Background())
}

func (i ExtensionActionPointActionArray) ToExtensionActionPointActionArrayOutputWithContext(ctx context.Context) ExtensionActionPointActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionActionPointActionArrayOutput)
}

type ExtensionActionPointActionOutput struct{ *pulumi.OutputState }

func (ExtensionActionPointActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionActionPointAction)(nil)).Elem()
}

func (o ExtensionActionPointActionOutput) ToExtensionActionPointActionOutput() ExtensionActionPointActionOutput {
	return o
}

func (o ExtensionActionPointActionOutput) ToExtensionActionPointActionOutputWithContext(ctx context.Context) ExtensionActionPointActionOutput {
	return o
}

// Information about the action.
func (o ExtensionActionPointActionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionActionPointAction) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The action name.
func (o ExtensionActionPointActionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExtensionActionPointAction) string { return v.Name }).(pulumi.StringOutput)
}

// An Amazon Resource Name (ARN) for an Identity and Access Management assume role.
func (o ExtensionActionPointActionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v ExtensionActionPointAction) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The extension URI associated to the action point in the extension definition. The URI can be an Amazon Resource Name (ARN) for one of the following: an Lambda function, an Amazon Simple Queue Service queue, an Amazon Simple Notification Service topic, or the Amazon EventBridge default event bus.
func (o ExtensionActionPointActionOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ExtensionActionPointAction) string { return v.Uri }).(pulumi.StringOutput)
}

type ExtensionActionPointActionArrayOutput struct{ *pulumi.OutputState }

func (ExtensionActionPointActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensionActionPointAction)(nil)).Elem()
}

func (o ExtensionActionPointActionArrayOutput) ToExtensionActionPointActionArrayOutput() ExtensionActionPointActionArrayOutput {
	return o
}

func (o ExtensionActionPointActionArrayOutput) ToExtensionActionPointActionArrayOutputWithContext(ctx context.Context) ExtensionActionPointActionArrayOutput {
	return o
}

func (o ExtensionActionPointActionArrayOutput) Index(i pulumi.IntInput) ExtensionActionPointActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExtensionActionPointAction {
		return vs[0].([]ExtensionActionPointAction)[vs[1].(int)]
	}).(ExtensionActionPointActionOutput)
}

type ExtensionParameter struct {
	// Information about the parameter.
	Description *string `pulumi:"description"`
	// The parameter name.
	Name string `pulumi:"name"`
	// Determines if a parameter value must be specified in the extension association.
	Required *bool `pulumi:"required"`
}

// ExtensionParameterInput is an input type that accepts ExtensionParameterArgs and ExtensionParameterOutput values.
// You can construct a concrete instance of `ExtensionParameterInput` via:
//
//	ExtensionParameterArgs{...}
type ExtensionParameterInput interface {
	pulumi.Input

	ToExtensionParameterOutput() ExtensionParameterOutput
	ToExtensionParameterOutputWithContext(context.Context) ExtensionParameterOutput
}

type ExtensionParameterArgs struct {
	// Information about the parameter.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The parameter name.
	Name pulumi.StringInput `pulumi:"name"`
	// Determines if a parameter value must be specified in the extension association.
	Required pulumi.BoolPtrInput `pulumi:"required"`
}

func (ExtensionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionParameter)(nil)).Elem()
}

func (i ExtensionParameterArgs) ToExtensionParameterOutput() ExtensionParameterOutput {
	return i.ToExtensionParameterOutputWithContext(context.Background())
}

func (i ExtensionParameterArgs) ToExtensionParameterOutputWithContext(ctx context.Context) ExtensionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionParameterOutput)
}

// ExtensionParameterArrayInput is an input type that accepts ExtensionParameterArray and ExtensionParameterArrayOutput values.
// You can construct a concrete instance of `ExtensionParameterArrayInput` via:
//
//	ExtensionParameterArray{ ExtensionParameterArgs{...} }
type ExtensionParameterArrayInput interface {
	pulumi.Input

	ToExtensionParameterArrayOutput() ExtensionParameterArrayOutput
	ToExtensionParameterArrayOutputWithContext(context.Context) ExtensionParameterArrayOutput
}

type ExtensionParameterArray []ExtensionParameterInput

func (ExtensionParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensionParameter)(nil)).Elem()
}

func (i ExtensionParameterArray) ToExtensionParameterArrayOutput() ExtensionParameterArrayOutput {
	return i.ToExtensionParameterArrayOutputWithContext(context.Background())
}

func (i ExtensionParameterArray) ToExtensionParameterArrayOutputWithContext(ctx context.Context) ExtensionParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExtensionParameterArrayOutput)
}

type ExtensionParameterOutput struct{ *pulumi.OutputState }

func (ExtensionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExtensionParameter)(nil)).Elem()
}

func (o ExtensionParameterOutput) ToExtensionParameterOutput() ExtensionParameterOutput {
	return o
}

func (o ExtensionParameterOutput) ToExtensionParameterOutputWithContext(ctx context.Context) ExtensionParameterOutput {
	return o
}

// Information about the parameter.
func (o ExtensionParameterOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExtensionParameter) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The parameter name.
func (o ExtensionParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ExtensionParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Determines if a parameter value must be specified in the extension association.
func (o ExtensionParameterOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ExtensionParameter) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

type ExtensionParameterArrayOutput struct{ *pulumi.OutputState }

func (ExtensionParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ExtensionParameter)(nil)).Elem()
}

func (o ExtensionParameterArrayOutput) ToExtensionParameterArrayOutput() ExtensionParameterArrayOutput {
	return o
}

func (o ExtensionParameterArrayOutput) ToExtensionParameterArrayOutputWithContext(ctx context.Context) ExtensionParameterArrayOutput {
	return o
}

func (o ExtensionParameterArrayOutput) Index(i pulumi.IntInput) ExtensionParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ExtensionParameter {
		return vs[0].([]ExtensionParameter)[vs[1].(int)]
	}).(ExtensionParameterOutput)
}

type GetConfigurationProfileValidator struct {
	// Either the JSON Schema content or the ARN of an AWS Lambda function.
	Content string `pulumi:"content"`
	// Type of validator. Valid values: JSON_SCHEMA and LAMBDA.
	Type string `pulumi:"type"`
}

// GetConfigurationProfileValidatorInput is an input type that accepts GetConfigurationProfileValidatorArgs and GetConfigurationProfileValidatorOutput values.
// You can construct a concrete instance of `GetConfigurationProfileValidatorInput` via:
//
//	GetConfigurationProfileValidatorArgs{...}
type GetConfigurationProfileValidatorInput interface {
	pulumi.Input

	ToGetConfigurationProfileValidatorOutput() GetConfigurationProfileValidatorOutput
	ToGetConfigurationProfileValidatorOutputWithContext(context.Context) GetConfigurationProfileValidatorOutput
}

type GetConfigurationProfileValidatorArgs struct {
	// Either the JSON Schema content or the ARN of an AWS Lambda function.
	Content pulumi.StringInput `pulumi:"content"`
	// Type of validator. Valid values: JSON_SCHEMA and LAMBDA.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetConfigurationProfileValidatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationProfileValidator)(nil)).Elem()
}

func (i GetConfigurationProfileValidatorArgs) ToGetConfigurationProfileValidatorOutput() GetConfigurationProfileValidatorOutput {
	return i.ToGetConfigurationProfileValidatorOutputWithContext(context.Background())
}

func (i GetConfigurationProfileValidatorArgs) ToGetConfigurationProfileValidatorOutputWithContext(ctx context.Context) GetConfigurationProfileValidatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationProfileValidatorOutput)
}

// GetConfigurationProfileValidatorArrayInput is an input type that accepts GetConfigurationProfileValidatorArray and GetConfigurationProfileValidatorArrayOutput values.
// You can construct a concrete instance of `GetConfigurationProfileValidatorArrayInput` via:
//
//	GetConfigurationProfileValidatorArray{ GetConfigurationProfileValidatorArgs{...} }
type GetConfigurationProfileValidatorArrayInput interface {
	pulumi.Input

	ToGetConfigurationProfileValidatorArrayOutput() GetConfigurationProfileValidatorArrayOutput
	ToGetConfigurationProfileValidatorArrayOutputWithContext(context.Context) GetConfigurationProfileValidatorArrayOutput
}

type GetConfigurationProfileValidatorArray []GetConfigurationProfileValidatorInput

func (GetConfigurationProfileValidatorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationProfileValidator)(nil)).Elem()
}

func (i GetConfigurationProfileValidatorArray) ToGetConfigurationProfileValidatorArrayOutput() GetConfigurationProfileValidatorArrayOutput {
	return i.ToGetConfigurationProfileValidatorArrayOutputWithContext(context.Background())
}

func (i GetConfigurationProfileValidatorArray) ToGetConfigurationProfileValidatorArrayOutputWithContext(ctx context.Context) GetConfigurationProfileValidatorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConfigurationProfileValidatorArrayOutput)
}

type GetConfigurationProfileValidatorOutput struct{ *pulumi.OutputState }

func (GetConfigurationProfileValidatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConfigurationProfileValidator)(nil)).Elem()
}

func (o GetConfigurationProfileValidatorOutput) ToGetConfigurationProfileValidatorOutput() GetConfigurationProfileValidatorOutput {
	return o
}

func (o GetConfigurationProfileValidatorOutput) ToGetConfigurationProfileValidatorOutputWithContext(ctx context.Context) GetConfigurationProfileValidatorOutput {
	return o
}

// Either the JSON Schema content or the ARN of an AWS Lambda function.
func (o GetConfigurationProfileValidatorOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationProfileValidator) string { return v.Content }).(pulumi.StringOutput)
}

// Type of validator. Valid values: JSON_SCHEMA and LAMBDA.
func (o GetConfigurationProfileValidatorOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetConfigurationProfileValidator) string { return v.Type }).(pulumi.StringOutput)
}

type GetConfigurationProfileValidatorArrayOutput struct{ *pulumi.OutputState }

func (GetConfigurationProfileValidatorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConfigurationProfileValidator)(nil)).Elem()
}

func (o GetConfigurationProfileValidatorArrayOutput) ToGetConfigurationProfileValidatorArrayOutput() GetConfigurationProfileValidatorArrayOutput {
	return o
}

func (o GetConfigurationProfileValidatorArrayOutput) ToGetConfigurationProfileValidatorArrayOutputWithContext(ctx context.Context) GetConfigurationProfileValidatorArrayOutput {
	return o
}

func (o GetConfigurationProfileValidatorArrayOutput) Index(i pulumi.IntInput) GetConfigurationProfileValidatorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConfigurationProfileValidator {
		return vs[0].([]GetConfigurationProfileValidator)[vs[1].(int)]
	}).(GetConfigurationProfileValidatorOutput)
}

type GetEnvironmentMonitor struct {
	// ARN of the Amazon CloudWatch alarm.
	AlarmArn string `pulumi:"alarmArn"`
	// ARN of an IAM role for AWS AppConfig to monitor.
	AlarmRoleArn string `pulumi:"alarmRoleArn"`
}

// GetEnvironmentMonitorInput is an input type that accepts GetEnvironmentMonitorArgs and GetEnvironmentMonitorOutput values.
// You can construct a concrete instance of `GetEnvironmentMonitorInput` via:
//
//	GetEnvironmentMonitorArgs{...}
type GetEnvironmentMonitorInput interface {
	pulumi.Input

	ToGetEnvironmentMonitorOutput() GetEnvironmentMonitorOutput
	ToGetEnvironmentMonitorOutputWithContext(context.Context) GetEnvironmentMonitorOutput
}

type GetEnvironmentMonitorArgs struct {
	// ARN of the Amazon CloudWatch alarm.
	AlarmArn pulumi.StringInput `pulumi:"alarmArn"`
	// ARN of an IAM role for AWS AppConfig to monitor.
	AlarmRoleArn pulumi.StringInput `pulumi:"alarmRoleArn"`
}

func (GetEnvironmentMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentMonitor)(nil)).Elem()
}

func (i GetEnvironmentMonitorArgs) ToGetEnvironmentMonitorOutput() GetEnvironmentMonitorOutput {
	return i.ToGetEnvironmentMonitorOutputWithContext(context.Background())
}

func (i GetEnvironmentMonitorArgs) ToGetEnvironmentMonitorOutputWithContext(ctx context.Context) GetEnvironmentMonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentMonitorOutput)
}

// GetEnvironmentMonitorArrayInput is an input type that accepts GetEnvironmentMonitorArray and GetEnvironmentMonitorArrayOutput values.
// You can construct a concrete instance of `GetEnvironmentMonitorArrayInput` via:
//
//	GetEnvironmentMonitorArray{ GetEnvironmentMonitorArgs{...} }
type GetEnvironmentMonitorArrayInput interface {
	pulumi.Input

	ToGetEnvironmentMonitorArrayOutput() GetEnvironmentMonitorArrayOutput
	ToGetEnvironmentMonitorArrayOutputWithContext(context.Context) GetEnvironmentMonitorArrayOutput
}

type GetEnvironmentMonitorArray []GetEnvironmentMonitorInput

func (GetEnvironmentMonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentMonitor)(nil)).Elem()
}

func (i GetEnvironmentMonitorArray) ToGetEnvironmentMonitorArrayOutput() GetEnvironmentMonitorArrayOutput {
	return i.ToGetEnvironmentMonitorArrayOutputWithContext(context.Background())
}

func (i GetEnvironmentMonitorArray) ToGetEnvironmentMonitorArrayOutputWithContext(ctx context.Context) GetEnvironmentMonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEnvironmentMonitorArrayOutput)
}

type GetEnvironmentMonitorOutput struct{ *pulumi.OutputState }

func (GetEnvironmentMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentMonitor)(nil)).Elem()
}

func (o GetEnvironmentMonitorOutput) ToGetEnvironmentMonitorOutput() GetEnvironmentMonitorOutput {
	return o
}

func (o GetEnvironmentMonitorOutput) ToGetEnvironmentMonitorOutputWithContext(ctx context.Context) GetEnvironmentMonitorOutput {
	return o
}

// ARN of the Amazon CloudWatch alarm.
func (o GetEnvironmentMonitorOutput) AlarmArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentMonitor) string { return v.AlarmArn }).(pulumi.StringOutput)
}

// ARN of an IAM role for AWS AppConfig to monitor.
func (o GetEnvironmentMonitorOutput) AlarmRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentMonitor) string { return v.AlarmRoleArn }).(pulumi.StringOutput)
}

type GetEnvironmentMonitorArrayOutput struct{ *pulumi.OutputState }

func (GetEnvironmentMonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEnvironmentMonitor)(nil)).Elem()
}

func (o GetEnvironmentMonitorArrayOutput) ToGetEnvironmentMonitorArrayOutput() GetEnvironmentMonitorArrayOutput {
	return o
}

func (o GetEnvironmentMonitorArrayOutput) ToGetEnvironmentMonitorArrayOutputWithContext(ctx context.Context) GetEnvironmentMonitorArrayOutput {
	return o
}

func (o GetEnvironmentMonitorArrayOutput) Index(i pulumi.IntInput) GetEnvironmentMonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEnvironmentMonitor {
		return vs[0].([]GetEnvironmentMonitor)[vs[1].(int)]
	}).(GetEnvironmentMonitorOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationProfileValidatorInput)(nil)).Elem(), ConfigurationProfileValidatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationProfileValidatorArrayInput)(nil)).Elem(), ConfigurationProfileValidatorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentMonitorInput)(nil)).Elem(), EnvironmentMonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentMonitorArrayInput)(nil)).Elem(), EnvironmentMonitorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventIntegrationEventFilterInput)(nil)).Elem(), EventIntegrationEventFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventIntegrationEventFilterPtrInput)(nil)).Elem(), EventIntegrationEventFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionActionPointInput)(nil)).Elem(), ExtensionActionPointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionActionPointArrayInput)(nil)).Elem(), ExtensionActionPointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionActionPointActionInput)(nil)).Elem(), ExtensionActionPointActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionActionPointActionArrayInput)(nil)).Elem(), ExtensionActionPointActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionParameterInput)(nil)).Elem(), ExtensionParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExtensionParameterArrayInput)(nil)).Elem(), ExtensionParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationProfileValidatorInput)(nil)).Elem(), GetConfigurationProfileValidatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConfigurationProfileValidatorArrayInput)(nil)).Elem(), GetConfigurationProfileValidatorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentMonitorInput)(nil)).Elem(), GetEnvironmentMonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEnvironmentMonitorArrayInput)(nil)).Elem(), GetEnvironmentMonitorArray{})
	pulumi.RegisterOutputType(ConfigurationProfileValidatorOutput{})
	pulumi.RegisterOutputType(ConfigurationProfileValidatorArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentMonitorOutput{})
	pulumi.RegisterOutputType(EnvironmentMonitorArrayOutput{})
	pulumi.RegisterOutputType(EventIntegrationEventFilterOutput{})
	pulumi.RegisterOutputType(EventIntegrationEventFilterPtrOutput{})
	pulumi.RegisterOutputType(ExtensionActionPointOutput{})
	pulumi.RegisterOutputType(ExtensionActionPointArrayOutput{})
	pulumi.RegisterOutputType(ExtensionActionPointActionOutput{})
	pulumi.RegisterOutputType(ExtensionActionPointActionArrayOutput{})
	pulumi.RegisterOutputType(ExtensionParameterOutput{})
	pulumi.RegisterOutputType(ExtensionParameterArrayOutput{})
	pulumi.RegisterOutputType(GetConfigurationProfileValidatorOutput{})
	pulumi.RegisterOutputType(GetConfigurationProfileValidatorArrayOutput{})
	pulumi.RegisterOutputType(GetEnvironmentMonitorOutput{})
	pulumi.RegisterOutputType(GetEnvironmentMonitorArrayOutput{})
}
