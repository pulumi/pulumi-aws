// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appconfig

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type HostedConfigurationVersion struct {
	pulumi.CustomResourceState

	ApplicationId          pulumi.StringOutput    `pulumi:"applicationId"`
	Arn                    pulumi.StringOutput    `pulumi:"arn"`
	ConfigurationProfileId pulumi.StringOutput    `pulumi:"configurationProfileId"`
	Content                pulumi.StringOutput    `pulumi:"content"`
	ContentType            pulumi.StringOutput    `pulumi:"contentType"`
	Description            pulumi.StringPtrOutput `pulumi:"description"`
	VersionNumber          pulumi.IntOutput       `pulumi:"versionNumber"`
}

// NewHostedConfigurationVersion registers a new resource with the given unique name, arguments, and options.
func NewHostedConfigurationVersion(ctx *pulumi.Context,
	name string, args *HostedConfigurationVersionArgs, opts ...pulumi.ResourceOption) (*HostedConfigurationVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.ConfigurationProfileId == nil {
		return nil, errors.New("invalid value for required argument 'ConfigurationProfileId'")
	}
	if args.Content == nil {
		return nil, errors.New("invalid value for required argument 'Content'")
	}
	if args.ContentType == nil {
		return nil, errors.New("invalid value for required argument 'ContentType'")
	}
	if args.Content != nil {
		args.Content = pulumi.ToSecret(args.Content).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"content",
	})
	opts = append(opts, secrets)
	var resource HostedConfigurationVersion
	err := ctx.RegisterResource("aws:appconfig/hostedConfigurationVersion:HostedConfigurationVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHostedConfigurationVersion gets an existing HostedConfigurationVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHostedConfigurationVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HostedConfigurationVersionState, opts ...pulumi.ResourceOption) (*HostedConfigurationVersion, error) {
	var resource HostedConfigurationVersion
	err := ctx.ReadResource("aws:appconfig/hostedConfigurationVersion:HostedConfigurationVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HostedConfigurationVersion resources.
type hostedConfigurationVersionState struct {
	ApplicationId          *string `pulumi:"applicationId"`
	Arn                    *string `pulumi:"arn"`
	ConfigurationProfileId *string `pulumi:"configurationProfileId"`
	Content                *string `pulumi:"content"`
	ContentType            *string `pulumi:"contentType"`
	Description            *string `pulumi:"description"`
	VersionNumber          *int    `pulumi:"versionNumber"`
}

type HostedConfigurationVersionState struct {
	ApplicationId          pulumi.StringPtrInput
	Arn                    pulumi.StringPtrInput
	ConfigurationProfileId pulumi.StringPtrInput
	Content                pulumi.StringPtrInput
	ContentType            pulumi.StringPtrInput
	Description            pulumi.StringPtrInput
	VersionNumber          pulumi.IntPtrInput
}

func (HostedConfigurationVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*hostedConfigurationVersionState)(nil)).Elem()
}

type hostedConfigurationVersionArgs struct {
	ApplicationId          string  `pulumi:"applicationId"`
	ConfigurationProfileId string  `pulumi:"configurationProfileId"`
	Content                string  `pulumi:"content"`
	ContentType            string  `pulumi:"contentType"`
	Description            *string `pulumi:"description"`
}

// The set of arguments for constructing a HostedConfigurationVersion resource.
type HostedConfigurationVersionArgs struct {
	ApplicationId          pulumi.StringInput
	ConfigurationProfileId pulumi.StringInput
	Content                pulumi.StringInput
	ContentType            pulumi.StringInput
	Description            pulumi.StringPtrInput
}

func (HostedConfigurationVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hostedConfigurationVersionArgs)(nil)).Elem()
}

type HostedConfigurationVersionInput interface {
	pulumi.Input

	ToHostedConfigurationVersionOutput() HostedConfigurationVersionOutput
	ToHostedConfigurationVersionOutputWithContext(ctx context.Context) HostedConfigurationVersionOutput
}

func (*HostedConfigurationVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**HostedConfigurationVersion)(nil)).Elem()
}

func (i *HostedConfigurationVersion) ToHostedConfigurationVersionOutput() HostedConfigurationVersionOutput {
	return i.ToHostedConfigurationVersionOutputWithContext(context.Background())
}

func (i *HostedConfigurationVersion) ToHostedConfigurationVersionOutputWithContext(ctx context.Context) HostedConfigurationVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedConfigurationVersionOutput)
}

// HostedConfigurationVersionArrayInput is an input type that accepts HostedConfigurationVersionArray and HostedConfigurationVersionArrayOutput values.
// You can construct a concrete instance of `HostedConfigurationVersionArrayInput` via:
//
//	HostedConfigurationVersionArray{ HostedConfigurationVersionArgs{...} }
type HostedConfigurationVersionArrayInput interface {
	pulumi.Input

	ToHostedConfigurationVersionArrayOutput() HostedConfigurationVersionArrayOutput
	ToHostedConfigurationVersionArrayOutputWithContext(context.Context) HostedConfigurationVersionArrayOutput
}

type HostedConfigurationVersionArray []HostedConfigurationVersionInput

func (HostedConfigurationVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HostedConfigurationVersion)(nil)).Elem()
}

func (i HostedConfigurationVersionArray) ToHostedConfigurationVersionArrayOutput() HostedConfigurationVersionArrayOutput {
	return i.ToHostedConfigurationVersionArrayOutputWithContext(context.Background())
}

func (i HostedConfigurationVersionArray) ToHostedConfigurationVersionArrayOutputWithContext(ctx context.Context) HostedConfigurationVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedConfigurationVersionArrayOutput)
}

// HostedConfigurationVersionMapInput is an input type that accepts HostedConfigurationVersionMap and HostedConfigurationVersionMapOutput values.
// You can construct a concrete instance of `HostedConfigurationVersionMapInput` via:
//
//	HostedConfigurationVersionMap{ "key": HostedConfigurationVersionArgs{...} }
type HostedConfigurationVersionMapInput interface {
	pulumi.Input

	ToHostedConfigurationVersionMapOutput() HostedConfigurationVersionMapOutput
	ToHostedConfigurationVersionMapOutputWithContext(context.Context) HostedConfigurationVersionMapOutput
}

type HostedConfigurationVersionMap map[string]HostedConfigurationVersionInput

func (HostedConfigurationVersionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HostedConfigurationVersion)(nil)).Elem()
}

func (i HostedConfigurationVersionMap) ToHostedConfigurationVersionMapOutput() HostedConfigurationVersionMapOutput {
	return i.ToHostedConfigurationVersionMapOutputWithContext(context.Background())
}

func (i HostedConfigurationVersionMap) ToHostedConfigurationVersionMapOutputWithContext(ctx context.Context) HostedConfigurationVersionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostedConfigurationVersionMapOutput)
}

type HostedConfigurationVersionOutput struct{ *pulumi.OutputState }

func (HostedConfigurationVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostedConfigurationVersion)(nil)).Elem()
}

func (o HostedConfigurationVersionOutput) ToHostedConfigurationVersionOutput() HostedConfigurationVersionOutput {
	return o
}

func (o HostedConfigurationVersionOutput) ToHostedConfigurationVersionOutputWithContext(ctx context.Context) HostedConfigurationVersionOutput {
	return o
}

func (o HostedConfigurationVersionOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *HostedConfigurationVersion) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

func (o HostedConfigurationVersionOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *HostedConfigurationVersion) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o HostedConfigurationVersionOutput) ConfigurationProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *HostedConfigurationVersion) pulumi.StringOutput { return v.ConfigurationProfileId }).(pulumi.StringOutput)
}

func (o HostedConfigurationVersionOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v *HostedConfigurationVersion) pulumi.StringOutput { return v.Content }).(pulumi.StringOutput)
}

func (o HostedConfigurationVersionOutput) ContentType() pulumi.StringOutput {
	return o.ApplyT(func(v *HostedConfigurationVersion) pulumi.StringOutput { return v.ContentType }).(pulumi.StringOutput)
}

func (o HostedConfigurationVersionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostedConfigurationVersion) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o HostedConfigurationVersionOutput) VersionNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *HostedConfigurationVersion) pulumi.IntOutput { return v.VersionNumber }).(pulumi.IntOutput)
}

type HostedConfigurationVersionArrayOutput struct{ *pulumi.OutputState }

func (HostedConfigurationVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HostedConfigurationVersion)(nil)).Elem()
}

func (o HostedConfigurationVersionArrayOutput) ToHostedConfigurationVersionArrayOutput() HostedConfigurationVersionArrayOutput {
	return o
}

func (o HostedConfigurationVersionArrayOutput) ToHostedConfigurationVersionArrayOutputWithContext(ctx context.Context) HostedConfigurationVersionArrayOutput {
	return o
}

func (o HostedConfigurationVersionArrayOutput) Index(i pulumi.IntInput) HostedConfigurationVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *HostedConfigurationVersion {
		return vs[0].([]*HostedConfigurationVersion)[vs[1].(int)]
	}).(HostedConfigurationVersionOutput)
}

type HostedConfigurationVersionMapOutput struct{ *pulumi.OutputState }

func (HostedConfigurationVersionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HostedConfigurationVersion)(nil)).Elem()
}

func (o HostedConfigurationVersionMapOutput) ToHostedConfigurationVersionMapOutput() HostedConfigurationVersionMapOutput {
	return o
}

func (o HostedConfigurationVersionMapOutput) ToHostedConfigurationVersionMapOutputWithContext(ctx context.Context) HostedConfigurationVersionMapOutput {
	return o
}

func (o HostedConfigurationVersionMapOutput) MapIndex(k pulumi.StringInput) HostedConfigurationVersionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *HostedConfigurationVersion {
		return vs[0].(map[string]*HostedConfigurationVersion)[vs[1].(string)]
	}).(HostedConfigurationVersionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HostedConfigurationVersionInput)(nil)).Elem(), &HostedConfigurationVersion{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostedConfigurationVersionArrayInput)(nil)).Elem(), HostedConfigurationVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostedConfigurationVersionMapInput)(nil)).Elem(), HostedConfigurationVersionMap{})
	pulumi.RegisterOutputType(HostedConfigurationVersionOutput{})
	pulumi.RegisterOutputType(HostedConfigurationVersionArrayOutput{})
	pulumi.RegisterOutputType(HostedConfigurationVersionMapOutput{})
}
