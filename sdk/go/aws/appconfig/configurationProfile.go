// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appconfig

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ConfigurationProfile struct {
	pulumi.CustomResourceState

	ApplicationId          pulumi.StringOutput                      `pulumi:"applicationId"`
	Arn                    pulumi.StringOutput                      `pulumi:"arn"`
	ConfigurationProfileId pulumi.StringOutput                      `pulumi:"configurationProfileId"`
	Description            pulumi.StringPtrOutput                   `pulumi:"description"`
	LocationUri            pulumi.StringOutput                      `pulumi:"locationUri"`
	Name                   pulumi.StringOutput                      `pulumi:"name"`
	RetrievalRoleArn       pulumi.StringPtrOutput                   `pulumi:"retrievalRoleArn"`
	Tags                   pulumi.StringMapOutput                   `pulumi:"tags"`
	TagsAll                pulumi.StringMapOutput                   `pulumi:"tagsAll"`
	Type                   pulumi.StringPtrOutput                   `pulumi:"type"`
	Validators             ConfigurationProfileValidatorArrayOutput `pulumi:"validators"`
}

// NewConfigurationProfile registers a new resource with the given unique name, arguments, and options.
func NewConfigurationProfile(ctx *pulumi.Context,
	name string, args *ConfigurationProfileArgs, opts ...pulumi.ResourceOption) (*ConfigurationProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	if args.LocationUri == nil {
		return nil, errors.New("invalid value for required argument 'LocationUri'")
	}
	var resource ConfigurationProfile
	err := ctx.RegisterResource("aws:appconfig/configurationProfile:ConfigurationProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfigurationProfile gets an existing ConfigurationProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfigurationProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigurationProfileState, opts ...pulumi.ResourceOption) (*ConfigurationProfile, error) {
	var resource ConfigurationProfile
	err := ctx.ReadResource("aws:appconfig/configurationProfile:ConfigurationProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConfigurationProfile resources.
type configurationProfileState struct {
	ApplicationId          *string                         `pulumi:"applicationId"`
	Arn                    *string                         `pulumi:"arn"`
	ConfigurationProfileId *string                         `pulumi:"configurationProfileId"`
	Description            *string                         `pulumi:"description"`
	LocationUri            *string                         `pulumi:"locationUri"`
	Name                   *string                         `pulumi:"name"`
	RetrievalRoleArn       *string                         `pulumi:"retrievalRoleArn"`
	Tags                   map[string]string               `pulumi:"tags"`
	TagsAll                map[string]string               `pulumi:"tagsAll"`
	Type                   *string                         `pulumi:"type"`
	Validators             []ConfigurationProfileValidator `pulumi:"validators"`
}

type ConfigurationProfileState struct {
	ApplicationId          pulumi.StringPtrInput
	Arn                    pulumi.StringPtrInput
	ConfigurationProfileId pulumi.StringPtrInput
	Description            pulumi.StringPtrInput
	LocationUri            pulumi.StringPtrInput
	Name                   pulumi.StringPtrInput
	RetrievalRoleArn       pulumi.StringPtrInput
	Tags                   pulumi.StringMapInput
	TagsAll                pulumi.StringMapInput
	Type                   pulumi.StringPtrInput
	Validators             ConfigurationProfileValidatorArrayInput
}

func (ConfigurationProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationProfileState)(nil)).Elem()
}

type configurationProfileArgs struct {
	ApplicationId    string                          `pulumi:"applicationId"`
	Description      *string                         `pulumi:"description"`
	LocationUri      string                          `pulumi:"locationUri"`
	Name             *string                         `pulumi:"name"`
	RetrievalRoleArn *string                         `pulumi:"retrievalRoleArn"`
	Tags             map[string]string               `pulumi:"tags"`
	Type             *string                         `pulumi:"type"`
	Validators       []ConfigurationProfileValidator `pulumi:"validators"`
}

// The set of arguments for constructing a ConfigurationProfile resource.
type ConfigurationProfileArgs struct {
	ApplicationId    pulumi.StringInput
	Description      pulumi.StringPtrInput
	LocationUri      pulumi.StringInput
	Name             pulumi.StringPtrInput
	RetrievalRoleArn pulumi.StringPtrInput
	Tags             pulumi.StringMapInput
	Type             pulumi.StringPtrInput
	Validators       ConfigurationProfileValidatorArrayInput
}

func (ConfigurationProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationProfileArgs)(nil)).Elem()
}

type ConfigurationProfileInput interface {
	pulumi.Input

	ToConfigurationProfileOutput() ConfigurationProfileOutput
	ToConfigurationProfileOutputWithContext(ctx context.Context) ConfigurationProfileOutput
}

func (*ConfigurationProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationProfile)(nil)).Elem()
}

func (i *ConfigurationProfile) ToConfigurationProfileOutput() ConfigurationProfileOutput {
	return i.ToConfigurationProfileOutputWithContext(context.Background())
}

func (i *ConfigurationProfile) ToConfigurationProfileOutputWithContext(ctx context.Context) ConfigurationProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationProfileOutput)
}

// ConfigurationProfileArrayInput is an input type that accepts ConfigurationProfileArray and ConfigurationProfileArrayOutput values.
// You can construct a concrete instance of `ConfigurationProfileArrayInput` via:
//
//	ConfigurationProfileArray{ ConfigurationProfileArgs{...} }
type ConfigurationProfileArrayInput interface {
	pulumi.Input

	ToConfigurationProfileArrayOutput() ConfigurationProfileArrayOutput
	ToConfigurationProfileArrayOutputWithContext(context.Context) ConfigurationProfileArrayOutput
}

type ConfigurationProfileArray []ConfigurationProfileInput

func (ConfigurationProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConfigurationProfile)(nil)).Elem()
}

func (i ConfigurationProfileArray) ToConfigurationProfileArrayOutput() ConfigurationProfileArrayOutput {
	return i.ToConfigurationProfileArrayOutputWithContext(context.Background())
}

func (i ConfigurationProfileArray) ToConfigurationProfileArrayOutputWithContext(ctx context.Context) ConfigurationProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationProfileArrayOutput)
}

// ConfigurationProfileMapInput is an input type that accepts ConfigurationProfileMap and ConfigurationProfileMapOutput values.
// You can construct a concrete instance of `ConfigurationProfileMapInput` via:
//
//	ConfigurationProfileMap{ "key": ConfigurationProfileArgs{...} }
type ConfigurationProfileMapInput interface {
	pulumi.Input

	ToConfigurationProfileMapOutput() ConfigurationProfileMapOutput
	ToConfigurationProfileMapOutputWithContext(context.Context) ConfigurationProfileMapOutput
}

type ConfigurationProfileMap map[string]ConfigurationProfileInput

func (ConfigurationProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConfigurationProfile)(nil)).Elem()
}

func (i ConfigurationProfileMap) ToConfigurationProfileMapOutput() ConfigurationProfileMapOutput {
	return i.ToConfigurationProfileMapOutputWithContext(context.Background())
}

func (i ConfigurationProfileMap) ToConfigurationProfileMapOutputWithContext(ctx context.Context) ConfigurationProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationProfileMapOutput)
}

type ConfigurationProfileOutput struct{ *pulumi.OutputState }

func (ConfigurationProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationProfile)(nil)).Elem()
}

func (o ConfigurationProfileOutput) ToConfigurationProfileOutput() ConfigurationProfileOutput {
	return o
}

func (o ConfigurationProfileOutput) ToConfigurationProfileOutputWithContext(ctx context.Context) ConfigurationProfileOutput {
	return o
}

func (o ConfigurationProfileOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigurationProfile) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

func (o ConfigurationProfileOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigurationProfile) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o ConfigurationProfileOutput) ConfigurationProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigurationProfile) pulumi.StringOutput { return v.ConfigurationProfileId }).(pulumi.StringOutput)
}

func (o ConfigurationProfileOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationProfile) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ConfigurationProfileOutput) LocationUri() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigurationProfile) pulumi.StringOutput { return v.LocationUri }).(pulumi.StringOutput)
}

func (o ConfigurationProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigurationProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ConfigurationProfileOutput) RetrievalRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationProfile) pulumi.StringPtrOutput { return v.RetrievalRoleArn }).(pulumi.StringPtrOutput)
}

func (o ConfigurationProfileOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConfigurationProfile) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o ConfigurationProfileOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ConfigurationProfile) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o ConfigurationProfileOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationProfile) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ConfigurationProfileOutput) Validators() ConfigurationProfileValidatorArrayOutput {
	return o.ApplyT(func(v *ConfigurationProfile) ConfigurationProfileValidatorArrayOutput { return v.Validators }).(ConfigurationProfileValidatorArrayOutput)
}

type ConfigurationProfileArrayOutput struct{ *pulumi.OutputState }

func (ConfigurationProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConfigurationProfile)(nil)).Elem()
}

func (o ConfigurationProfileArrayOutput) ToConfigurationProfileArrayOutput() ConfigurationProfileArrayOutput {
	return o
}

func (o ConfigurationProfileArrayOutput) ToConfigurationProfileArrayOutputWithContext(ctx context.Context) ConfigurationProfileArrayOutput {
	return o
}

func (o ConfigurationProfileArrayOutput) Index(i pulumi.IntInput) ConfigurationProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ConfigurationProfile {
		return vs[0].([]*ConfigurationProfile)[vs[1].(int)]
	}).(ConfigurationProfileOutput)
}

type ConfigurationProfileMapOutput struct{ *pulumi.OutputState }

func (ConfigurationProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConfigurationProfile)(nil)).Elem()
}

func (o ConfigurationProfileMapOutput) ToConfigurationProfileMapOutput() ConfigurationProfileMapOutput {
	return o
}

func (o ConfigurationProfileMapOutput) ToConfigurationProfileMapOutputWithContext(ctx context.Context) ConfigurationProfileMapOutput {
	return o
}

func (o ConfigurationProfileMapOutput) MapIndex(k pulumi.StringInput) ConfigurationProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ConfigurationProfile {
		return vs[0].(map[string]*ConfigurationProfile)[vs[1].(string)]
	}).(ConfigurationProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationProfileInput)(nil)).Elem(), &ConfigurationProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationProfileArrayInput)(nil)).Elem(), ConfigurationProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationProfileMapInput)(nil)).Elem(), ConfigurationProfileMap{})
	pulumi.RegisterOutputType(ConfigurationProfileOutput{})
	pulumi.RegisterOutputType(ConfigurationProfileArrayOutput{})
	pulumi.RegisterOutputType(ConfigurationProfileMapOutput{})
}
