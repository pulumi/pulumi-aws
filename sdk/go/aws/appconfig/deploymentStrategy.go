// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appconfig

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DeploymentStrategy struct {
	pulumi.CustomResourceState

	Arn                         pulumi.StringOutput    `pulumi:"arn"`
	DeploymentDurationInMinutes pulumi.IntOutput       `pulumi:"deploymentDurationInMinutes"`
	Description                 pulumi.StringPtrOutput `pulumi:"description"`
	FinalBakeTimeInMinutes      pulumi.IntPtrOutput    `pulumi:"finalBakeTimeInMinutes"`
	GrowthFactor                pulumi.Float64Output   `pulumi:"growthFactor"`
	GrowthType                  pulumi.StringPtrOutput `pulumi:"growthType"`
	Name                        pulumi.StringOutput    `pulumi:"name"`
	ReplicateTo                 pulumi.StringOutput    `pulumi:"replicateTo"`
	Tags                        pulumi.StringMapOutput `pulumi:"tags"`
	TagsAll                     pulumi.StringMapOutput `pulumi:"tagsAll"`
}

// NewDeploymentStrategy registers a new resource with the given unique name, arguments, and options.
func NewDeploymentStrategy(ctx *pulumi.Context,
	name string, args *DeploymentStrategyArgs, opts ...pulumi.ResourceOption) (*DeploymentStrategy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DeploymentDurationInMinutes == nil {
		return nil, errors.New("invalid value for required argument 'DeploymentDurationInMinutes'")
	}
	if args.GrowthFactor == nil {
		return nil, errors.New("invalid value for required argument 'GrowthFactor'")
	}
	if args.ReplicateTo == nil {
		return nil, errors.New("invalid value for required argument 'ReplicateTo'")
	}
	var resource DeploymentStrategy
	err := ctx.RegisterResource("aws:appconfig/deploymentStrategy:DeploymentStrategy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeploymentStrategy gets an existing DeploymentStrategy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeploymentStrategy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeploymentStrategyState, opts ...pulumi.ResourceOption) (*DeploymentStrategy, error) {
	var resource DeploymentStrategy
	err := ctx.ReadResource("aws:appconfig/deploymentStrategy:DeploymentStrategy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeploymentStrategy resources.
type deploymentStrategyState struct {
	Arn                         *string           `pulumi:"arn"`
	DeploymentDurationInMinutes *int              `pulumi:"deploymentDurationInMinutes"`
	Description                 *string           `pulumi:"description"`
	FinalBakeTimeInMinutes      *int              `pulumi:"finalBakeTimeInMinutes"`
	GrowthFactor                *float64          `pulumi:"growthFactor"`
	GrowthType                  *string           `pulumi:"growthType"`
	Name                        *string           `pulumi:"name"`
	ReplicateTo                 *string           `pulumi:"replicateTo"`
	Tags                        map[string]string `pulumi:"tags"`
	TagsAll                     map[string]string `pulumi:"tagsAll"`
}

type DeploymentStrategyState struct {
	Arn                         pulumi.StringPtrInput
	DeploymentDurationInMinutes pulumi.IntPtrInput
	Description                 pulumi.StringPtrInput
	FinalBakeTimeInMinutes      pulumi.IntPtrInput
	GrowthFactor                pulumi.Float64PtrInput
	GrowthType                  pulumi.StringPtrInput
	Name                        pulumi.StringPtrInput
	ReplicateTo                 pulumi.StringPtrInput
	Tags                        pulumi.StringMapInput
	TagsAll                     pulumi.StringMapInput
}

func (DeploymentStrategyState) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentStrategyState)(nil)).Elem()
}

type deploymentStrategyArgs struct {
	DeploymentDurationInMinutes int               `pulumi:"deploymentDurationInMinutes"`
	Description                 *string           `pulumi:"description"`
	FinalBakeTimeInMinutes      *int              `pulumi:"finalBakeTimeInMinutes"`
	GrowthFactor                float64           `pulumi:"growthFactor"`
	GrowthType                  *string           `pulumi:"growthType"`
	Name                        *string           `pulumi:"name"`
	ReplicateTo                 string            `pulumi:"replicateTo"`
	Tags                        map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a DeploymentStrategy resource.
type DeploymentStrategyArgs struct {
	DeploymentDurationInMinutes pulumi.IntInput
	Description                 pulumi.StringPtrInput
	FinalBakeTimeInMinutes      pulumi.IntPtrInput
	GrowthFactor                pulumi.Float64Input
	GrowthType                  pulumi.StringPtrInput
	Name                        pulumi.StringPtrInput
	ReplicateTo                 pulumi.StringInput
	Tags                        pulumi.StringMapInput
}

func (DeploymentStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentStrategyArgs)(nil)).Elem()
}

type DeploymentStrategyInput interface {
	pulumi.Input

	ToDeploymentStrategyOutput() DeploymentStrategyOutput
	ToDeploymentStrategyOutputWithContext(ctx context.Context) DeploymentStrategyOutput
}

func (*DeploymentStrategy) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentStrategy)(nil)).Elem()
}

func (i *DeploymentStrategy) ToDeploymentStrategyOutput() DeploymentStrategyOutput {
	return i.ToDeploymentStrategyOutputWithContext(context.Background())
}

func (i *DeploymentStrategy) ToDeploymentStrategyOutputWithContext(ctx context.Context) DeploymentStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentStrategyOutput)
}

// DeploymentStrategyArrayInput is an input type that accepts DeploymentStrategyArray and DeploymentStrategyArrayOutput values.
// You can construct a concrete instance of `DeploymentStrategyArrayInput` via:
//
//	DeploymentStrategyArray{ DeploymentStrategyArgs{...} }
type DeploymentStrategyArrayInput interface {
	pulumi.Input

	ToDeploymentStrategyArrayOutput() DeploymentStrategyArrayOutput
	ToDeploymentStrategyArrayOutputWithContext(context.Context) DeploymentStrategyArrayOutput
}

type DeploymentStrategyArray []DeploymentStrategyInput

func (DeploymentStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeploymentStrategy)(nil)).Elem()
}

func (i DeploymentStrategyArray) ToDeploymentStrategyArrayOutput() DeploymentStrategyArrayOutput {
	return i.ToDeploymentStrategyArrayOutputWithContext(context.Background())
}

func (i DeploymentStrategyArray) ToDeploymentStrategyArrayOutputWithContext(ctx context.Context) DeploymentStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentStrategyArrayOutput)
}

// DeploymentStrategyMapInput is an input type that accepts DeploymentStrategyMap and DeploymentStrategyMapOutput values.
// You can construct a concrete instance of `DeploymentStrategyMapInput` via:
//
//	DeploymentStrategyMap{ "key": DeploymentStrategyArgs{...} }
type DeploymentStrategyMapInput interface {
	pulumi.Input

	ToDeploymentStrategyMapOutput() DeploymentStrategyMapOutput
	ToDeploymentStrategyMapOutputWithContext(context.Context) DeploymentStrategyMapOutput
}

type DeploymentStrategyMap map[string]DeploymentStrategyInput

func (DeploymentStrategyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeploymentStrategy)(nil)).Elem()
}

func (i DeploymentStrategyMap) ToDeploymentStrategyMapOutput() DeploymentStrategyMapOutput {
	return i.ToDeploymentStrategyMapOutputWithContext(context.Background())
}

func (i DeploymentStrategyMap) ToDeploymentStrategyMapOutputWithContext(ctx context.Context) DeploymentStrategyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentStrategyMapOutput)
}

type DeploymentStrategyOutput struct{ *pulumi.OutputState }

func (DeploymentStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentStrategy)(nil)).Elem()
}

func (o DeploymentStrategyOutput) ToDeploymentStrategyOutput() DeploymentStrategyOutput {
	return o
}

func (o DeploymentStrategyOutput) ToDeploymentStrategyOutputWithContext(ctx context.Context) DeploymentStrategyOutput {
	return o
}

func (o DeploymentStrategyOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *DeploymentStrategy) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o DeploymentStrategyOutput) DeploymentDurationInMinutes() pulumi.IntOutput {
	return o.ApplyT(func(v *DeploymentStrategy) pulumi.IntOutput { return v.DeploymentDurationInMinutes }).(pulumi.IntOutput)
}

func (o DeploymentStrategyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentStrategy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DeploymentStrategyOutput) FinalBakeTimeInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DeploymentStrategy) pulumi.IntPtrOutput { return v.FinalBakeTimeInMinutes }).(pulumi.IntPtrOutput)
}

func (o DeploymentStrategyOutput) GrowthFactor() pulumi.Float64Output {
	return o.ApplyT(func(v *DeploymentStrategy) pulumi.Float64Output { return v.GrowthFactor }).(pulumi.Float64Output)
}

func (o DeploymentStrategyOutput) GrowthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentStrategy) pulumi.StringPtrOutput { return v.GrowthType }).(pulumi.StringPtrOutput)
}

func (o DeploymentStrategyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DeploymentStrategy) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DeploymentStrategyOutput) ReplicateTo() pulumi.StringOutput {
	return o.ApplyT(func(v *DeploymentStrategy) pulumi.StringOutput { return v.ReplicateTo }).(pulumi.StringOutput)
}

func (o DeploymentStrategyOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DeploymentStrategy) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o DeploymentStrategyOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DeploymentStrategy) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type DeploymentStrategyArrayOutput struct{ *pulumi.OutputState }

func (DeploymentStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeploymentStrategy)(nil)).Elem()
}

func (o DeploymentStrategyArrayOutput) ToDeploymentStrategyArrayOutput() DeploymentStrategyArrayOutput {
	return o
}

func (o DeploymentStrategyArrayOutput) ToDeploymentStrategyArrayOutputWithContext(ctx context.Context) DeploymentStrategyArrayOutput {
	return o
}

func (o DeploymentStrategyArrayOutput) Index(i pulumi.IntInput) DeploymentStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DeploymentStrategy {
		return vs[0].([]*DeploymentStrategy)[vs[1].(int)]
	}).(DeploymentStrategyOutput)
}

type DeploymentStrategyMapOutput struct{ *pulumi.OutputState }

func (DeploymentStrategyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeploymentStrategy)(nil)).Elem()
}

func (o DeploymentStrategyMapOutput) ToDeploymentStrategyMapOutput() DeploymentStrategyMapOutput {
	return o
}

func (o DeploymentStrategyMapOutput) ToDeploymentStrategyMapOutputWithContext(ctx context.Context) DeploymentStrategyMapOutput {
	return o
}

func (o DeploymentStrategyMapOutput) MapIndex(k pulumi.StringInput) DeploymentStrategyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DeploymentStrategy {
		return vs[0].(map[string]*DeploymentStrategy)[vs[1].(string)]
	}).(DeploymentStrategyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentStrategyInput)(nil)).Elem(), &DeploymentStrategy{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentStrategyArrayInput)(nil)).Elem(), DeploymentStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentStrategyMapInput)(nil)).Elem(), DeploymentStrategyMap{})
	pulumi.RegisterOutputType(DeploymentStrategyOutput{})
	pulumi.RegisterOutputType(DeploymentStrategyArrayOutput{})
	pulumi.RegisterOutputType(DeploymentStrategyMapOutput{})
}
