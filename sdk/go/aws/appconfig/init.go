// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appconfig

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "aws:appconfig/application:Application":
		r = &Application{}
	case "aws:appconfig/configurationProfile:ConfigurationProfile":
		r = &ConfigurationProfile{}
	case "aws:appconfig/deployment:Deployment":
		r = &Deployment{}
	case "aws:appconfig/deploymentStrategy:DeploymentStrategy":
		r = &DeploymentStrategy{}
	case "aws:appconfig/environment:Environment":
		r = &Environment{}
	case "aws:appconfig/eventIntegration:EventIntegration":
		r = &EventIntegration{}
	case "aws:appconfig/extension:Extension":
		r = &Extension{}
	case "aws:appconfig/extensionAssociation:ExtensionAssociation":
		r = &ExtensionAssociation{}
	case "aws:appconfig/hostedConfigurationVersion:HostedConfigurationVersion":
		r = &HostedConfigurationVersion{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := aws.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"aws",
		"appconfig/application",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"appconfig/configurationProfile",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"appconfig/deployment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"appconfig/deploymentStrategy",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"appconfig/environment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"appconfig/eventIntegration",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"appconfig/extension",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"appconfig/extensionAssociation",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"appconfig/hostedConfigurationVersion",
		&module{version},
	)
}
