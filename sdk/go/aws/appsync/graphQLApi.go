// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appsync

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an AppSync GraphQL API.
type GraphQLApi struct {
	s *pulumi.ResourceState
}

// NewGraphQLApi registers a new resource with the given unique name, arguments, and options.
func NewGraphQLApi(ctx *pulumi.Context,
	name string, args *GraphQLApiArgs, opts ...pulumi.ResourceOpt) (*GraphQLApi, error) {
	if args == nil || args.AuthenticationType == nil {
		return nil, errors.New("missing required argument 'AuthenticationType'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["authenticationType"] = nil
		inputs["logConfig"] = nil
		inputs["name"] = nil
		inputs["openidConnectConfig"] = nil
		inputs["userPoolConfig"] = nil
	} else {
		inputs["authenticationType"] = args.AuthenticationType
		inputs["logConfig"] = args.LogConfig
		inputs["name"] = args.Name
		inputs["openidConnectConfig"] = args.OpenidConnectConfig
		inputs["userPoolConfig"] = args.UserPoolConfig
	}
	inputs["arn"] = nil
	inputs["uris"] = nil
	s, err := ctx.RegisterResource("aws:appsync/graphQLApi:GraphQLApi", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &GraphQLApi{s: s}, nil
}

// GetGraphQLApi gets an existing GraphQLApi resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGraphQLApi(ctx *pulumi.Context,
	name string, id pulumi.ID, state *GraphQLApiState, opts ...pulumi.ResourceOpt) (*GraphQLApi, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["authenticationType"] = state.AuthenticationType
		inputs["logConfig"] = state.LogConfig
		inputs["name"] = state.Name
		inputs["openidConnectConfig"] = state.OpenidConnectConfig
		inputs["uris"] = state.Uris
		inputs["userPoolConfig"] = state.UserPoolConfig
	}
	s, err := ctx.ReadResource("aws:appsync/graphQLApi:GraphQLApi", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &GraphQLApi{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *GraphQLApi) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *GraphQLApi) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The ARN
func (r *GraphQLApi) Arn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["arn"])
}

// The authentication type. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`
func (r *GraphQLApi) AuthenticationType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["authenticationType"])
}

// Nested argument containing logging configuration. Defined below.
func (r *GraphQLApi) LogConfig() *pulumi.Output {
	return r.s.State["logConfig"]
}

// A user-supplied name for the GraphqlApi.
func (r *GraphQLApi) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// Nested argument containing OpenID Connect configuration. Defined below.
func (r *GraphQLApi) OpenidConnectConfig() *pulumi.Output {
	return r.s.State["openidConnectConfig"]
}

// Map of URIs associated with the API. e.g. `uris["GRAPHQL"] = https://ID.appsync-api.REGION.amazonaws.com/graphql`
func (r *GraphQLApi) Uris() *pulumi.MapOutput {
	return (*pulumi.MapOutput)(r.s.State["uris"])
}

// The Amazon Cognito User Pool configuration. Defined below.
func (r *GraphQLApi) UserPoolConfig() *pulumi.Output {
	return r.s.State["userPoolConfig"]
}

// Input properties used for looking up and filtering GraphQLApi resources.
type GraphQLApiState struct {
	// The ARN
	Arn interface{}
	// The authentication type. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`
	AuthenticationType interface{}
	// Nested argument containing logging configuration. Defined below.
	LogConfig interface{}
	// A user-supplied name for the GraphqlApi.
	Name interface{}
	// Nested argument containing OpenID Connect configuration. Defined below.
	OpenidConnectConfig interface{}
	// Map of URIs associated with the API. e.g. `uris["GRAPHQL"] = https://ID.appsync-api.REGION.amazonaws.com/graphql`
	Uris interface{}
	// The Amazon Cognito User Pool configuration. Defined below.
	UserPoolConfig interface{}
}

// The set of arguments for constructing a GraphQLApi resource.
type GraphQLApiArgs struct {
	// The authentication type. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`
	AuthenticationType interface{}
	// Nested argument containing logging configuration. Defined below.
	LogConfig interface{}
	// A user-supplied name for the GraphqlApi.
	Name interface{}
	// Nested argument containing OpenID Connect configuration. Defined below.
	OpenidConnectConfig interface{}
	// The Amazon Cognito User Pool configuration. Defined below.
	UserPoolConfig interface{}
}
