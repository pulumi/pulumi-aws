// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appsync

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataSourceDynamodbConfig struct {
	DeltaSyncConfig *DataSourceDynamodbConfigDeltaSyncConfig `pulumi:"deltaSyncConfig"`
	// AWS Region for RDS HTTP endpoint. Defaults to current region.
	Region *string `pulumi:"region"`
	// Name of the DynamoDB table.
	TableName string `pulumi:"tableName"`
	// Set to `true` to use Amazon Cognito credentials with this data source.
	UseCallerCredentials *bool `pulumi:"useCallerCredentials"`
	Versioned            *bool `pulumi:"versioned"`
}

// DataSourceDynamodbConfigInput is an input type that accepts DataSourceDynamodbConfigArgs and DataSourceDynamodbConfigOutput values.
// You can construct a concrete instance of `DataSourceDynamodbConfigInput` via:
//
//          DataSourceDynamodbConfigArgs{...}
type DataSourceDynamodbConfigInput interface {
	pulumi.Input

	ToDataSourceDynamodbConfigOutput() DataSourceDynamodbConfigOutput
	ToDataSourceDynamodbConfigOutputWithContext(context.Context) DataSourceDynamodbConfigOutput
}

type DataSourceDynamodbConfigArgs struct {
	DeltaSyncConfig DataSourceDynamodbConfigDeltaSyncConfigPtrInput `pulumi:"deltaSyncConfig"`
	// AWS Region for RDS HTTP endpoint. Defaults to current region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Name of the DynamoDB table.
	TableName pulumi.StringInput `pulumi:"tableName"`
	// Set to `true` to use Amazon Cognito credentials with this data source.
	UseCallerCredentials pulumi.BoolPtrInput `pulumi:"useCallerCredentials"`
	Versioned            pulumi.BoolPtrInput `pulumi:"versioned"`
}

func (DataSourceDynamodbConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDynamodbConfig)(nil)).Elem()
}

func (i DataSourceDynamodbConfigArgs) ToDataSourceDynamodbConfigOutput() DataSourceDynamodbConfigOutput {
	return i.ToDataSourceDynamodbConfigOutputWithContext(context.Background())
}

func (i DataSourceDynamodbConfigArgs) ToDataSourceDynamodbConfigOutputWithContext(ctx context.Context) DataSourceDynamodbConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDynamodbConfigOutput)
}

func (i DataSourceDynamodbConfigArgs) ToDataSourceDynamodbConfigPtrOutput() DataSourceDynamodbConfigPtrOutput {
	return i.ToDataSourceDynamodbConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceDynamodbConfigArgs) ToDataSourceDynamodbConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamodbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDynamodbConfigOutput).ToDataSourceDynamodbConfigPtrOutputWithContext(ctx)
}

// DataSourceDynamodbConfigPtrInput is an input type that accepts DataSourceDynamodbConfigArgs, DataSourceDynamodbConfigPtr and DataSourceDynamodbConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceDynamodbConfigPtrInput` via:
//
//          DataSourceDynamodbConfigArgs{...}
//
//  or:
//
//          nil
type DataSourceDynamodbConfigPtrInput interface {
	pulumi.Input

	ToDataSourceDynamodbConfigPtrOutput() DataSourceDynamodbConfigPtrOutput
	ToDataSourceDynamodbConfigPtrOutputWithContext(context.Context) DataSourceDynamodbConfigPtrOutput
}

type dataSourceDynamodbConfigPtrType DataSourceDynamodbConfigArgs

func DataSourceDynamodbConfigPtr(v *DataSourceDynamodbConfigArgs) DataSourceDynamodbConfigPtrInput {
	return (*dataSourceDynamodbConfigPtrType)(v)
}

func (*dataSourceDynamodbConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDynamodbConfig)(nil)).Elem()
}

func (i *dataSourceDynamodbConfigPtrType) ToDataSourceDynamodbConfigPtrOutput() DataSourceDynamodbConfigPtrOutput {
	return i.ToDataSourceDynamodbConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceDynamodbConfigPtrType) ToDataSourceDynamodbConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamodbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDynamodbConfigPtrOutput)
}

type DataSourceDynamodbConfigOutput struct{ *pulumi.OutputState }

func (DataSourceDynamodbConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDynamodbConfig)(nil)).Elem()
}

func (o DataSourceDynamodbConfigOutput) ToDataSourceDynamodbConfigOutput() DataSourceDynamodbConfigOutput {
	return o
}

func (o DataSourceDynamodbConfigOutput) ToDataSourceDynamodbConfigOutputWithContext(ctx context.Context) DataSourceDynamodbConfigOutput {
	return o
}

func (o DataSourceDynamodbConfigOutput) ToDataSourceDynamodbConfigPtrOutput() DataSourceDynamodbConfigPtrOutput {
	return o.ToDataSourceDynamodbConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceDynamodbConfigOutput) ToDataSourceDynamodbConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamodbConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceDynamodbConfig) *DataSourceDynamodbConfig {
		return &v
	}).(DataSourceDynamodbConfigPtrOutput)
}

func (o DataSourceDynamodbConfigOutput) DeltaSyncConfig() DataSourceDynamodbConfigDeltaSyncConfigPtrOutput {
	return o.ApplyT(func(v DataSourceDynamodbConfig) *DataSourceDynamodbConfigDeltaSyncConfig { return v.DeltaSyncConfig }).(DataSourceDynamodbConfigDeltaSyncConfigPtrOutput)
}

// AWS Region for RDS HTTP endpoint. Defaults to current region.
func (o DataSourceDynamodbConfigOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceDynamodbConfig) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Name of the DynamoDB table.
func (o DataSourceDynamodbConfigOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceDynamodbConfig) string { return v.TableName }).(pulumi.StringOutput)
}

// Set to `true` to use Amazon Cognito credentials with this data source.
func (o DataSourceDynamodbConfigOutput) UseCallerCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataSourceDynamodbConfig) *bool { return v.UseCallerCredentials }).(pulumi.BoolPtrOutput)
}

func (o DataSourceDynamodbConfigOutput) Versioned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataSourceDynamodbConfig) *bool { return v.Versioned }).(pulumi.BoolPtrOutput)
}

type DataSourceDynamodbConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceDynamodbConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDynamodbConfig)(nil)).Elem()
}

func (o DataSourceDynamodbConfigPtrOutput) ToDataSourceDynamodbConfigPtrOutput() DataSourceDynamodbConfigPtrOutput {
	return o
}

func (o DataSourceDynamodbConfigPtrOutput) ToDataSourceDynamodbConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamodbConfigPtrOutput {
	return o
}

func (o DataSourceDynamodbConfigPtrOutput) Elem() DataSourceDynamodbConfigOutput {
	return o.ApplyT(func(v *DataSourceDynamodbConfig) DataSourceDynamodbConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceDynamodbConfig
		return ret
	}).(DataSourceDynamodbConfigOutput)
}

func (o DataSourceDynamodbConfigPtrOutput) DeltaSyncConfig() DataSourceDynamodbConfigDeltaSyncConfigPtrOutput {
	return o.ApplyT(func(v *DataSourceDynamodbConfig) *DataSourceDynamodbConfigDeltaSyncConfig {
		if v == nil {
			return nil
		}
		return v.DeltaSyncConfig
	}).(DataSourceDynamodbConfigDeltaSyncConfigPtrOutput)
}

// AWS Region for RDS HTTP endpoint. Defaults to current region.
func (o DataSourceDynamodbConfigPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceDynamodbConfig) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Name of the DynamoDB table.
func (o DataSourceDynamodbConfigPtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceDynamodbConfig) *string {
		if v == nil {
			return nil
		}
		return &v.TableName
	}).(pulumi.StringPtrOutput)
}

// Set to `true` to use Amazon Cognito credentials with this data source.
func (o DataSourceDynamodbConfigPtrOutput) UseCallerCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataSourceDynamodbConfig) *bool {
		if v == nil {
			return nil
		}
		return v.UseCallerCredentials
	}).(pulumi.BoolPtrOutput)
}

func (o DataSourceDynamodbConfigPtrOutput) Versioned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataSourceDynamodbConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Versioned
	}).(pulumi.BoolPtrOutput)
}

type DataSourceDynamodbConfigDeltaSyncConfig struct {
	BaseTableTtl       *int   `pulumi:"baseTableTtl"`
	DeltaSyncTableName string `pulumi:"deltaSyncTableName"`
	DeltaSyncTableTtl  *int   `pulumi:"deltaSyncTableTtl"`
}

// DataSourceDynamodbConfigDeltaSyncConfigInput is an input type that accepts DataSourceDynamodbConfigDeltaSyncConfigArgs and DataSourceDynamodbConfigDeltaSyncConfigOutput values.
// You can construct a concrete instance of `DataSourceDynamodbConfigDeltaSyncConfigInput` via:
//
//          DataSourceDynamodbConfigDeltaSyncConfigArgs{...}
type DataSourceDynamodbConfigDeltaSyncConfigInput interface {
	pulumi.Input

	ToDataSourceDynamodbConfigDeltaSyncConfigOutput() DataSourceDynamodbConfigDeltaSyncConfigOutput
	ToDataSourceDynamodbConfigDeltaSyncConfigOutputWithContext(context.Context) DataSourceDynamodbConfigDeltaSyncConfigOutput
}

type DataSourceDynamodbConfigDeltaSyncConfigArgs struct {
	BaseTableTtl       pulumi.IntPtrInput `pulumi:"baseTableTtl"`
	DeltaSyncTableName pulumi.StringInput `pulumi:"deltaSyncTableName"`
	DeltaSyncTableTtl  pulumi.IntPtrInput `pulumi:"deltaSyncTableTtl"`
}

func (DataSourceDynamodbConfigDeltaSyncConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDynamodbConfigDeltaSyncConfig)(nil)).Elem()
}

func (i DataSourceDynamodbConfigDeltaSyncConfigArgs) ToDataSourceDynamodbConfigDeltaSyncConfigOutput() DataSourceDynamodbConfigDeltaSyncConfigOutput {
	return i.ToDataSourceDynamodbConfigDeltaSyncConfigOutputWithContext(context.Background())
}

func (i DataSourceDynamodbConfigDeltaSyncConfigArgs) ToDataSourceDynamodbConfigDeltaSyncConfigOutputWithContext(ctx context.Context) DataSourceDynamodbConfigDeltaSyncConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDynamodbConfigDeltaSyncConfigOutput)
}

func (i DataSourceDynamodbConfigDeltaSyncConfigArgs) ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutput() DataSourceDynamodbConfigDeltaSyncConfigPtrOutput {
	return i.ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceDynamodbConfigDeltaSyncConfigArgs) ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamodbConfigDeltaSyncConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDynamodbConfigDeltaSyncConfigOutput).ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutputWithContext(ctx)
}

// DataSourceDynamodbConfigDeltaSyncConfigPtrInput is an input type that accepts DataSourceDynamodbConfigDeltaSyncConfigArgs, DataSourceDynamodbConfigDeltaSyncConfigPtr and DataSourceDynamodbConfigDeltaSyncConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceDynamodbConfigDeltaSyncConfigPtrInput` via:
//
//          DataSourceDynamodbConfigDeltaSyncConfigArgs{...}
//
//  or:
//
//          nil
type DataSourceDynamodbConfigDeltaSyncConfigPtrInput interface {
	pulumi.Input

	ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutput() DataSourceDynamodbConfigDeltaSyncConfigPtrOutput
	ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutputWithContext(context.Context) DataSourceDynamodbConfigDeltaSyncConfigPtrOutput
}

type dataSourceDynamodbConfigDeltaSyncConfigPtrType DataSourceDynamodbConfigDeltaSyncConfigArgs

func DataSourceDynamodbConfigDeltaSyncConfigPtr(v *DataSourceDynamodbConfigDeltaSyncConfigArgs) DataSourceDynamodbConfigDeltaSyncConfigPtrInput {
	return (*dataSourceDynamodbConfigDeltaSyncConfigPtrType)(v)
}

func (*dataSourceDynamodbConfigDeltaSyncConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDynamodbConfigDeltaSyncConfig)(nil)).Elem()
}

func (i *dataSourceDynamodbConfigDeltaSyncConfigPtrType) ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutput() DataSourceDynamodbConfigDeltaSyncConfigPtrOutput {
	return i.ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceDynamodbConfigDeltaSyncConfigPtrType) ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamodbConfigDeltaSyncConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDynamodbConfigDeltaSyncConfigPtrOutput)
}

type DataSourceDynamodbConfigDeltaSyncConfigOutput struct{ *pulumi.OutputState }

func (DataSourceDynamodbConfigDeltaSyncConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDynamodbConfigDeltaSyncConfig)(nil)).Elem()
}

func (o DataSourceDynamodbConfigDeltaSyncConfigOutput) ToDataSourceDynamodbConfigDeltaSyncConfigOutput() DataSourceDynamodbConfigDeltaSyncConfigOutput {
	return o
}

func (o DataSourceDynamodbConfigDeltaSyncConfigOutput) ToDataSourceDynamodbConfigDeltaSyncConfigOutputWithContext(ctx context.Context) DataSourceDynamodbConfigDeltaSyncConfigOutput {
	return o
}

func (o DataSourceDynamodbConfigDeltaSyncConfigOutput) ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutput() DataSourceDynamodbConfigDeltaSyncConfigPtrOutput {
	return o.ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceDynamodbConfigDeltaSyncConfigOutput) ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamodbConfigDeltaSyncConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceDynamodbConfigDeltaSyncConfig) *DataSourceDynamodbConfigDeltaSyncConfig {
		return &v
	}).(DataSourceDynamodbConfigDeltaSyncConfigPtrOutput)
}

func (o DataSourceDynamodbConfigDeltaSyncConfigOutput) BaseTableTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataSourceDynamodbConfigDeltaSyncConfig) *int { return v.BaseTableTtl }).(pulumi.IntPtrOutput)
}

func (o DataSourceDynamodbConfigDeltaSyncConfigOutput) DeltaSyncTableName() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceDynamodbConfigDeltaSyncConfig) string { return v.DeltaSyncTableName }).(pulumi.StringOutput)
}

func (o DataSourceDynamodbConfigDeltaSyncConfigOutput) DeltaSyncTableTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataSourceDynamodbConfigDeltaSyncConfig) *int { return v.DeltaSyncTableTtl }).(pulumi.IntPtrOutput)
}

type DataSourceDynamodbConfigDeltaSyncConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceDynamodbConfigDeltaSyncConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDynamodbConfigDeltaSyncConfig)(nil)).Elem()
}

func (o DataSourceDynamodbConfigDeltaSyncConfigPtrOutput) ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutput() DataSourceDynamodbConfigDeltaSyncConfigPtrOutput {
	return o
}

func (o DataSourceDynamodbConfigDeltaSyncConfigPtrOutput) ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamodbConfigDeltaSyncConfigPtrOutput {
	return o
}

func (o DataSourceDynamodbConfigDeltaSyncConfigPtrOutput) Elem() DataSourceDynamodbConfigDeltaSyncConfigOutput {
	return o.ApplyT(func(v *DataSourceDynamodbConfigDeltaSyncConfig) DataSourceDynamodbConfigDeltaSyncConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceDynamodbConfigDeltaSyncConfig
		return ret
	}).(DataSourceDynamodbConfigDeltaSyncConfigOutput)
}

func (o DataSourceDynamodbConfigDeltaSyncConfigPtrOutput) BaseTableTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataSourceDynamodbConfigDeltaSyncConfig) *int {
		if v == nil {
			return nil
		}
		return v.BaseTableTtl
	}).(pulumi.IntPtrOutput)
}

func (o DataSourceDynamodbConfigDeltaSyncConfigPtrOutput) DeltaSyncTableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceDynamodbConfigDeltaSyncConfig) *string {
		if v == nil {
			return nil
		}
		return &v.DeltaSyncTableName
	}).(pulumi.StringPtrOutput)
}

func (o DataSourceDynamodbConfigDeltaSyncConfigPtrOutput) DeltaSyncTableTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataSourceDynamodbConfigDeltaSyncConfig) *int {
		if v == nil {
			return nil
		}
		return v.DeltaSyncTableTtl
	}).(pulumi.IntPtrOutput)
}

type DataSourceElasticsearchConfig struct {
	// HTTP URL.
	Endpoint string `pulumi:"endpoint"`
	// AWS Region for RDS HTTP endpoint. Defaults to current region.
	Region *string `pulumi:"region"`
}

// DataSourceElasticsearchConfigInput is an input type that accepts DataSourceElasticsearchConfigArgs and DataSourceElasticsearchConfigOutput values.
// You can construct a concrete instance of `DataSourceElasticsearchConfigInput` via:
//
//          DataSourceElasticsearchConfigArgs{...}
type DataSourceElasticsearchConfigInput interface {
	pulumi.Input

	ToDataSourceElasticsearchConfigOutput() DataSourceElasticsearchConfigOutput
	ToDataSourceElasticsearchConfigOutputWithContext(context.Context) DataSourceElasticsearchConfigOutput
}

type DataSourceElasticsearchConfigArgs struct {
	// HTTP URL.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// AWS Region for RDS HTTP endpoint. Defaults to current region.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (DataSourceElasticsearchConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceElasticsearchConfig)(nil)).Elem()
}

func (i DataSourceElasticsearchConfigArgs) ToDataSourceElasticsearchConfigOutput() DataSourceElasticsearchConfigOutput {
	return i.ToDataSourceElasticsearchConfigOutputWithContext(context.Background())
}

func (i DataSourceElasticsearchConfigArgs) ToDataSourceElasticsearchConfigOutputWithContext(ctx context.Context) DataSourceElasticsearchConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceElasticsearchConfigOutput)
}

func (i DataSourceElasticsearchConfigArgs) ToDataSourceElasticsearchConfigPtrOutput() DataSourceElasticsearchConfigPtrOutput {
	return i.ToDataSourceElasticsearchConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceElasticsearchConfigArgs) ToDataSourceElasticsearchConfigPtrOutputWithContext(ctx context.Context) DataSourceElasticsearchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceElasticsearchConfigOutput).ToDataSourceElasticsearchConfigPtrOutputWithContext(ctx)
}

// DataSourceElasticsearchConfigPtrInput is an input type that accepts DataSourceElasticsearchConfigArgs, DataSourceElasticsearchConfigPtr and DataSourceElasticsearchConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceElasticsearchConfigPtrInput` via:
//
//          DataSourceElasticsearchConfigArgs{...}
//
//  or:
//
//          nil
type DataSourceElasticsearchConfigPtrInput interface {
	pulumi.Input

	ToDataSourceElasticsearchConfigPtrOutput() DataSourceElasticsearchConfigPtrOutput
	ToDataSourceElasticsearchConfigPtrOutputWithContext(context.Context) DataSourceElasticsearchConfigPtrOutput
}

type dataSourceElasticsearchConfigPtrType DataSourceElasticsearchConfigArgs

func DataSourceElasticsearchConfigPtr(v *DataSourceElasticsearchConfigArgs) DataSourceElasticsearchConfigPtrInput {
	return (*dataSourceElasticsearchConfigPtrType)(v)
}

func (*dataSourceElasticsearchConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceElasticsearchConfig)(nil)).Elem()
}

func (i *dataSourceElasticsearchConfigPtrType) ToDataSourceElasticsearchConfigPtrOutput() DataSourceElasticsearchConfigPtrOutput {
	return i.ToDataSourceElasticsearchConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceElasticsearchConfigPtrType) ToDataSourceElasticsearchConfigPtrOutputWithContext(ctx context.Context) DataSourceElasticsearchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceElasticsearchConfigPtrOutput)
}

type DataSourceElasticsearchConfigOutput struct{ *pulumi.OutputState }

func (DataSourceElasticsearchConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceElasticsearchConfig)(nil)).Elem()
}

func (o DataSourceElasticsearchConfigOutput) ToDataSourceElasticsearchConfigOutput() DataSourceElasticsearchConfigOutput {
	return o
}

func (o DataSourceElasticsearchConfigOutput) ToDataSourceElasticsearchConfigOutputWithContext(ctx context.Context) DataSourceElasticsearchConfigOutput {
	return o
}

func (o DataSourceElasticsearchConfigOutput) ToDataSourceElasticsearchConfigPtrOutput() DataSourceElasticsearchConfigPtrOutput {
	return o.ToDataSourceElasticsearchConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceElasticsearchConfigOutput) ToDataSourceElasticsearchConfigPtrOutputWithContext(ctx context.Context) DataSourceElasticsearchConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceElasticsearchConfig) *DataSourceElasticsearchConfig {
		return &v
	}).(DataSourceElasticsearchConfigPtrOutput)
}

// HTTP URL.
func (o DataSourceElasticsearchConfigOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceElasticsearchConfig) string { return v.Endpoint }).(pulumi.StringOutput)
}

// AWS Region for RDS HTTP endpoint. Defaults to current region.
func (o DataSourceElasticsearchConfigOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceElasticsearchConfig) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type DataSourceElasticsearchConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceElasticsearchConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceElasticsearchConfig)(nil)).Elem()
}

func (o DataSourceElasticsearchConfigPtrOutput) ToDataSourceElasticsearchConfigPtrOutput() DataSourceElasticsearchConfigPtrOutput {
	return o
}

func (o DataSourceElasticsearchConfigPtrOutput) ToDataSourceElasticsearchConfigPtrOutputWithContext(ctx context.Context) DataSourceElasticsearchConfigPtrOutput {
	return o
}

func (o DataSourceElasticsearchConfigPtrOutput) Elem() DataSourceElasticsearchConfigOutput {
	return o.ApplyT(func(v *DataSourceElasticsearchConfig) DataSourceElasticsearchConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceElasticsearchConfig
		return ret
	}).(DataSourceElasticsearchConfigOutput)
}

// HTTP URL.
func (o DataSourceElasticsearchConfigPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceElasticsearchConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// AWS Region for RDS HTTP endpoint. Defaults to current region.
func (o DataSourceElasticsearchConfigPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceElasticsearchConfig) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

type DataSourceHttpConfig struct {
	// The authorization configuration in case the HTTP endpoint requires authorization. See Authorization Config.
	AuthorizationConfig *DataSourceHttpConfigAuthorizationConfig `pulumi:"authorizationConfig"`
	// HTTP URL.
	Endpoint string `pulumi:"endpoint"`
}

// DataSourceHttpConfigInput is an input type that accepts DataSourceHttpConfigArgs and DataSourceHttpConfigOutput values.
// You can construct a concrete instance of `DataSourceHttpConfigInput` via:
//
//          DataSourceHttpConfigArgs{...}
type DataSourceHttpConfigInput interface {
	pulumi.Input

	ToDataSourceHttpConfigOutput() DataSourceHttpConfigOutput
	ToDataSourceHttpConfigOutputWithContext(context.Context) DataSourceHttpConfigOutput
}

type DataSourceHttpConfigArgs struct {
	// The authorization configuration in case the HTTP endpoint requires authorization. See Authorization Config.
	AuthorizationConfig DataSourceHttpConfigAuthorizationConfigPtrInput `pulumi:"authorizationConfig"`
	// HTTP URL.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
}

func (DataSourceHttpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceHttpConfig)(nil)).Elem()
}

func (i DataSourceHttpConfigArgs) ToDataSourceHttpConfigOutput() DataSourceHttpConfigOutput {
	return i.ToDataSourceHttpConfigOutputWithContext(context.Background())
}

func (i DataSourceHttpConfigArgs) ToDataSourceHttpConfigOutputWithContext(ctx context.Context) DataSourceHttpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHttpConfigOutput)
}

func (i DataSourceHttpConfigArgs) ToDataSourceHttpConfigPtrOutput() DataSourceHttpConfigPtrOutput {
	return i.ToDataSourceHttpConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceHttpConfigArgs) ToDataSourceHttpConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHttpConfigOutput).ToDataSourceHttpConfigPtrOutputWithContext(ctx)
}

// DataSourceHttpConfigPtrInput is an input type that accepts DataSourceHttpConfigArgs, DataSourceHttpConfigPtr and DataSourceHttpConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceHttpConfigPtrInput` via:
//
//          DataSourceHttpConfigArgs{...}
//
//  or:
//
//          nil
type DataSourceHttpConfigPtrInput interface {
	pulumi.Input

	ToDataSourceHttpConfigPtrOutput() DataSourceHttpConfigPtrOutput
	ToDataSourceHttpConfigPtrOutputWithContext(context.Context) DataSourceHttpConfigPtrOutput
}

type dataSourceHttpConfigPtrType DataSourceHttpConfigArgs

func DataSourceHttpConfigPtr(v *DataSourceHttpConfigArgs) DataSourceHttpConfigPtrInput {
	return (*dataSourceHttpConfigPtrType)(v)
}

func (*dataSourceHttpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceHttpConfig)(nil)).Elem()
}

func (i *dataSourceHttpConfigPtrType) ToDataSourceHttpConfigPtrOutput() DataSourceHttpConfigPtrOutput {
	return i.ToDataSourceHttpConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceHttpConfigPtrType) ToDataSourceHttpConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHttpConfigPtrOutput)
}

type DataSourceHttpConfigOutput struct{ *pulumi.OutputState }

func (DataSourceHttpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceHttpConfig)(nil)).Elem()
}

func (o DataSourceHttpConfigOutput) ToDataSourceHttpConfigOutput() DataSourceHttpConfigOutput {
	return o
}

func (o DataSourceHttpConfigOutput) ToDataSourceHttpConfigOutputWithContext(ctx context.Context) DataSourceHttpConfigOutput {
	return o
}

func (o DataSourceHttpConfigOutput) ToDataSourceHttpConfigPtrOutput() DataSourceHttpConfigPtrOutput {
	return o.ToDataSourceHttpConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceHttpConfigOutput) ToDataSourceHttpConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceHttpConfig) *DataSourceHttpConfig {
		return &v
	}).(DataSourceHttpConfigPtrOutput)
}

// The authorization configuration in case the HTTP endpoint requires authorization. See Authorization Config.
func (o DataSourceHttpConfigOutput) AuthorizationConfig() DataSourceHttpConfigAuthorizationConfigPtrOutput {
	return o.ApplyT(func(v DataSourceHttpConfig) *DataSourceHttpConfigAuthorizationConfig { return v.AuthorizationConfig }).(DataSourceHttpConfigAuthorizationConfigPtrOutput)
}

// HTTP URL.
func (o DataSourceHttpConfigOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceHttpConfig) string { return v.Endpoint }).(pulumi.StringOutput)
}

type DataSourceHttpConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceHttpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceHttpConfig)(nil)).Elem()
}

func (o DataSourceHttpConfigPtrOutput) ToDataSourceHttpConfigPtrOutput() DataSourceHttpConfigPtrOutput {
	return o
}

func (o DataSourceHttpConfigPtrOutput) ToDataSourceHttpConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigPtrOutput {
	return o
}

func (o DataSourceHttpConfigPtrOutput) Elem() DataSourceHttpConfigOutput {
	return o.ApplyT(func(v *DataSourceHttpConfig) DataSourceHttpConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceHttpConfig
		return ret
	}).(DataSourceHttpConfigOutput)
}

// The authorization configuration in case the HTTP endpoint requires authorization. See Authorization Config.
func (o DataSourceHttpConfigPtrOutput) AuthorizationConfig() DataSourceHttpConfigAuthorizationConfigPtrOutput {
	return o.ApplyT(func(v *DataSourceHttpConfig) *DataSourceHttpConfigAuthorizationConfig {
		if v == nil {
			return nil
		}
		return v.AuthorizationConfig
	}).(DataSourceHttpConfigAuthorizationConfigPtrOutput)
}

// HTTP URL.
func (o DataSourceHttpConfigPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceHttpConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

type DataSourceHttpConfigAuthorizationConfig struct {
	// The authorization type that the HTTP endpoint requires. Default values is `AWS_IAM`.
	AuthorizationType *string `pulumi:"authorizationType"`
	// The Identity and Access Management (IAM) settings. See AWS IAM Config.
	AwsIamConfig *DataSourceHttpConfigAuthorizationConfigAwsIamConfig `pulumi:"awsIamConfig"`
}

// DataSourceHttpConfigAuthorizationConfigInput is an input type that accepts DataSourceHttpConfigAuthorizationConfigArgs and DataSourceHttpConfigAuthorizationConfigOutput values.
// You can construct a concrete instance of `DataSourceHttpConfigAuthorizationConfigInput` via:
//
//          DataSourceHttpConfigAuthorizationConfigArgs{...}
type DataSourceHttpConfigAuthorizationConfigInput interface {
	pulumi.Input

	ToDataSourceHttpConfigAuthorizationConfigOutput() DataSourceHttpConfigAuthorizationConfigOutput
	ToDataSourceHttpConfigAuthorizationConfigOutputWithContext(context.Context) DataSourceHttpConfigAuthorizationConfigOutput
}

type DataSourceHttpConfigAuthorizationConfigArgs struct {
	// The authorization type that the HTTP endpoint requires. Default values is `AWS_IAM`.
	AuthorizationType pulumi.StringPtrInput `pulumi:"authorizationType"`
	// The Identity and Access Management (IAM) settings. See AWS IAM Config.
	AwsIamConfig DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrInput `pulumi:"awsIamConfig"`
}

func (DataSourceHttpConfigAuthorizationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceHttpConfigAuthorizationConfig)(nil)).Elem()
}

func (i DataSourceHttpConfigAuthorizationConfigArgs) ToDataSourceHttpConfigAuthorizationConfigOutput() DataSourceHttpConfigAuthorizationConfigOutput {
	return i.ToDataSourceHttpConfigAuthorizationConfigOutputWithContext(context.Background())
}

func (i DataSourceHttpConfigAuthorizationConfigArgs) ToDataSourceHttpConfigAuthorizationConfigOutputWithContext(ctx context.Context) DataSourceHttpConfigAuthorizationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHttpConfigAuthorizationConfigOutput)
}

func (i DataSourceHttpConfigAuthorizationConfigArgs) ToDataSourceHttpConfigAuthorizationConfigPtrOutput() DataSourceHttpConfigAuthorizationConfigPtrOutput {
	return i.ToDataSourceHttpConfigAuthorizationConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceHttpConfigAuthorizationConfigArgs) ToDataSourceHttpConfigAuthorizationConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigAuthorizationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHttpConfigAuthorizationConfigOutput).ToDataSourceHttpConfigAuthorizationConfigPtrOutputWithContext(ctx)
}

// DataSourceHttpConfigAuthorizationConfigPtrInput is an input type that accepts DataSourceHttpConfigAuthorizationConfigArgs, DataSourceHttpConfigAuthorizationConfigPtr and DataSourceHttpConfigAuthorizationConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceHttpConfigAuthorizationConfigPtrInput` via:
//
//          DataSourceHttpConfigAuthorizationConfigArgs{...}
//
//  or:
//
//          nil
type DataSourceHttpConfigAuthorizationConfigPtrInput interface {
	pulumi.Input

	ToDataSourceHttpConfigAuthorizationConfigPtrOutput() DataSourceHttpConfigAuthorizationConfigPtrOutput
	ToDataSourceHttpConfigAuthorizationConfigPtrOutputWithContext(context.Context) DataSourceHttpConfigAuthorizationConfigPtrOutput
}

type dataSourceHttpConfigAuthorizationConfigPtrType DataSourceHttpConfigAuthorizationConfigArgs

func DataSourceHttpConfigAuthorizationConfigPtr(v *DataSourceHttpConfigAuthorizationConfigArgs) DataSourceHttpConfigAuthorizationConfigPtrInput {
	return (*dataSourceHttpConfigAuthorizationConfigPtrType)(v)
}

func (*dataSourceHttpConfigAuthorizationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceHttpConfigAuthorizationConfig)(nil)).Elem()
}

func (i *dataSourceHttpConfigAuthorizationConfigPtrType) ToDataSourceHttpConfigAuthorizationConfigPtrOutput() DataSourceHttpConfigAuthorizationConfigPtrOutput {
	return i.ToDataSourceHttpConfigAuthorizationConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceHttpConfigAuthorizationConfigPtrType) ToDataSourceHttpConfigAuthorizationConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigAuthorizationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHttpConfigAuthorizationConfigPtrOutput)
}

type DataSourceHttpConfigAuthorizationConfigOutput struct{ *pulumi.OutputState }

func (DataSourceHttpConfigAuthorizationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceHttpConfigAuthorizationConfig)(nil)).Elem()
}

func (o DataSourceHttpConfigAuthorizationConfigOutput) ToDataSourceHttpConfigAuthorizationConfigOutput() DataSourceHttpConfigAuthorizationConfigOutput {
	return o
}

func (o DataSourceHttpConfigAuthorizationConfigOutput) ToDataSourceHttpConfigAuthorizationConfigOutputWithContext(ctx context.Context) DataSourceHttpConfigAuthorizationConfigOutput {
	return o
}

func (o DataSourceHttpConfigAuthorizationConfigOutput) ToDataSourceHttpConfigAuthorizationConfigPtrOutput() DataSourceHttpConfigAuthorizationConfigPtrOutput {
	return o.ToDataSourceHttpConfigAuthorizationConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceHttpConfigAuthorizationConfigOutput) ToDataSourceHttpConfigAuthorizationConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigAuthorizationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceHttpConfigAuthorizationConfig) *DataSourceHttpConfigAuthorizationConfig {
		return &v
	}).(DataSourceHttpConfigAuthorizationConfigPtrOutput)
}

// The authorization type that the HTTP endpoint requires. Default values is `AWS_IAM`.
func (o DataSourceHttpConfigAuthorizationConfigOutput) AuthorizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceHttpConfigAuthorizationConfig) *string { return v.AuthorizationType }).(pulumi.StringPtrOutput)
}

// The Identity and Access Management (IAM) settings. See AWS IAM Config.
func (o DataSourceHttpConfigAuthorizationConfigOutput) AwsIamConfig() DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput {
	return o.ApplyT(func(v DataSourceHttpConfigAuthorizationConfig) *DataSourceHttpConfigAuthorizationConfigAwsIamConfig {
		return v.AwsIamConfig
	}).(DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput)
}

type DataSourceHttpConfigAuthorizationConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceHttpConfigAuthorizationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceHttpConfigAuthorizationConfig)(nil)).Elem()
}

func (o DataSourceHttpConfigAuthorizationConfigPtrOutput) ToDataSourceHttpConfigAuthorizationConfigPtrOutput() DataSourceHttpConfigAuthorizationConfigPtrOutput {
	return o
}

func (o DataSourceHttpConfigAuthorizationConfigPtrOutput) ToDataSourceHttpConfigAuthorizationConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigAuthorizationConfigPtrOutput {
	return o
}

func (o DataSourceHttpConfigAuthorizationConfigPtrOutput) Elem() DataSourceHttpConfigAuthorizationConfigOutput {
	return o.ApplyT(func(v *DataSourceHttpConfigAuthorizationConfig) DataSourceHttpConfigAuthorizationConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceHttpConfigAuthorizationConfig
		return ret
	}).(DataSourceHttpConfigAuthorizationConfigOutput)
}

// The authorization type that the HTTP endpoint requires. Default values is `AWS_IAM`.
func (o DataSourceHttpConfigAuthorizationConfigPtrOutput) AuthorizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceHttpConfigAuthorizationConfig) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationType
	}).(pulumi.StringPtrOutput)
}

// The Identity and Access Management (IAM) settings. See AWS IAM Config.
func (o DataSourceHttpConfigAuthorizationConfigPtrOutput) AwsIamConfig() DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput {
	return o.ApplyT(func(v *DataSourceHttpConfigAuthorizationConfig) *DataSourceHttpConfigAuthorizationConfigAwsIamConfig {
		if v == nil {
			return nil
		}
		return v.AwsIamConfig
	}).(DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput)
}

type DataSourceHttpConfigAuthorizationConfigAwsIamConfig struct {
	// The signing Amazon Web Services Region for IAM authorization.
	SigningRegion *string `pulumi:"signingRegion"`
	// The signing service name for IAM authorization.
	SigningServiceName *string `pulumi:"signingServiceName"`
}

// DataSourceHttpConfigAuthorizationConfigAwsIamConfigInput is an input type that accepts DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs and DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput values.
// You can construct a concrete instance of `DataSourceHttpConfigAuthorizationConfigAwsIamConfigInput` via:
//
//          DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs{...}
type DataSourceHttpConfigAuthorizationConfigAwsIamConfigInput interface {
	pulumi.Input

	ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput() DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput
	ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigOutputWithContext(context.Context) DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput
}

type DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs struct {
	// The signing Amazon Web Services Region for IAM authorization.
	SigningRegion pulumi.StringPtrInput `pulumi:"signingRegion"`
	// The signing service name for IAM authorization.
	SigningServiceName pulumi.StringPtrInput `pulumi:"signingServiceName"`
}

func (DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceHttpConfigAuthorizationConfigAwsIamConfig)(nil)).Elem()
}

func (i DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs) ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput() DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput {
	return i.ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigOutputWithContext(context.Background())
}

func (i DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs) ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigOutputWithContext(ctx context.Context) DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput)
}

func (i DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs) ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput() DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput {
	return i.ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs) ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput).ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutputWithContext(ctx)
}

// DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrInput is an input type that accepts DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs, DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtr and DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrInput` via:
//
//          DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs{...}
//
//  or:
//
//          nil
type DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrInput interface {
	pulumi.Input

	ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput() DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput
	ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutputWithContext(context.Context) DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput
}

type dataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrType DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs

func DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtr(v *DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs) DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrInput {
	return (*dataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrType)(v)
}

func (*dataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceHttpConfigAuthorizationConfigAwsIamConfig)(nil)).Elem()
}

func (i *dataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrType) ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput() DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput {
	return i.ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrType) ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput)
}

type DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput struct{ *pulumi.OutputState }

func (DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceHttpConfigAuthorizationConfigAwsIamConfig)(nil)).Elem()
}

func (o DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput) ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput() DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput {
	return o
}

func (o DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput) ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigOutputWithContext(ctx context.Context) DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput {
	return o
}

func (o DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput) ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput() DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput {
	return o.ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput) ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceHttpConfigAuthorizationConfigAwsIamConfig) *DataSourceHttpConfigAuthorizationConfigAwsIamConfig {
		return &v
	}).(DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput)
}

// The signing Amazon Web Services Region for IAM authorization.
func (o DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput) SigningRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceHttpConfigAuthorizationConfigAwsIamConfig) *string { return v.SigningRegion }).(pulumi.StringPtrOutput)
}

// The signing service name for IAM authorization.
func (o DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput) SigningServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceHttpConfigAuthorizationConfigAwsIamConfig) *string { return v.SigningServiceName }).(pulumi.StringPtrOutput)
}

type DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceHttpConfigAuthorizationConfigAwsIamConfig)(nil)).Elem()
}

func (o DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput) ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput() DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput {
	return o
}

func (o DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput) ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput {
	return o
}

func (o DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput) Elem() DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput {
	return o.ApplyT(func(v *DataSourceHttpConfigAuthorizationConfigAwsIamConfig) DataSourceHttpConfigAuthorizationConfigAwsIamConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceHttpConfigAuthorizationConfigAwsIamConfig
		return ret
	}).(DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput)
}

// The signing Amazon Web Services Region for IAM authorization.
func (o DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput) SigningRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceHttpConfigAuthorizationConfigAwsIamConfig) *string {
		if v == nil {
			return nil
		}
		return v.SigningRegion
	}).(pulumi.StringPtrOutput)
}

// The signing service name for IAM authorization.
func (o DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput) SigningServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceHttpConfigAuthorizationConfigAwsIamConfig) *string {
		if v == nil {
			return nil
		}
		return v.SigningServiceName
	}).(pulumi.StringPtrOutput)
}

type DataSourceLambdaConfig struct {
	// The ARN for the Lambda function.
	FunctionArn string `pulumi:"functionArn"`
}

// DataSourceLambdaConfigInput is an input type that accepts DataSourceLambdaConfigArgs and DataSourceLambdaConfigOutput values.
// You can construct a concrete instance of `DataSourceLambdaConfigInput` via:
//
//          DataSourceLambdaConfigArgs{...}
type DataSourceLambdaConfigInput interface {
	pulumi.Input

	ToDataSourceLambdaConfigOutput() DataSourceLambdaConfigOutput
	ToDataSourceLambdaConfigOutputWithContext(context.Context) DataSourceLambdaConfigOutput
}

type DataSourceLambdaConfigArgs struct {
	// The ARN for the Lambda function.
	FunctionArn pulumi.StringInput `pulumi:"functionArn"`
}

func (DataSourceLambdaConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceLambdaConfig)(nil)).Elem()
}

func (i DataSourceLambdaConfigArgs) ToDataSourceLambdaConfigOutput() DataSourceLambdaConfigOutput {
	return i.ToDataSourceLambdaConfigOutputWithContext(context.Background())
}

func (i DataSourceLambdaConfigArgs) ToDataSourceLambdaConfigOutputWithContext(ctx context.Context) DataSourceLambdaConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceLambdaConfigOutput)
}

func (i DataSourceLambdaConfigArgs) ToDataSourceLambdaConfigPtrOutput() DataSourceLambdaConfigPtrOutput {
	return i.ToDataSourceLambdaConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceLambdaConfigArgs) ToDataSourceLambdaConfigPtrOutputWithContext(ctx context.Context) DataSourceLambdaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceLambdaConfigOutput).ToDataSourceLambdaConfigPtrOutputWithContext(ctx)
}

// DataSourceLambdaConfigPtrInput is an input type that accepts DataSourceLambdaConfigArgs, DataSourceLambdaConfigPtr and DataSourceLambdaConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceLambdaConfigPtrInput` via:
//
//          DataSourceLambdaConfigArgs{...}
//
//  or:
//
//          nil
type DataSourceLambdaConfigPtrInput interface {
	pulumi.Input

	ToDataSourceLambdaConfigPtrOutput() DataSourceLambdaConfigPtrOutput
	ToDataSourceLambdaConfigPtrOutputWithContext(context.Context) DataSourceLambdaConfigPtrOutput
}

type dataSourceLambdaConfigPtrType DataSourceLambdaConfigArgs

func DataSourceLambdaConfigPtr(v *DataSourceLambdaConfigArgs) DataSourceLambdaConfigPtrInput {
	return (*dataSourceLambdaConfigPtrType)(v)
}

func (*dataSourceLambdaConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceLambdaConfig)(nil)).Elem()
}

func (i *dataSourceLambdaConfigPtrType) ToDataSourceLambdaConfigPtrOutput() DataSourceLambdaConfigPtrOutput {
	return i.ToDataSourceLambdaConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceLambdaConfigPtrType) ToDataSourceLambdaConfigPtrOutputWithContext(ctx context.Context) DataSourceLambdaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceLambdaConfigPtrOutput)
}

type DataSourceLambdaConfigOutput struct{ *pulumi.OutputState }

func (DataSourceLambdaConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceLambdaConfig)(nil)).Elem()
}

func (o DataSourceLambdaConfigOutput) ToDataSourceLambdaConfigOutput() DataSourceLambdaConfigOutput {
	return o
}

func (o DataSourceLambdaConfigOutput) ToDataSourceLambdaConfigOutputWithContext(ctx context.Context) DataSourceLambdaConfigOutput {
	return o
}

func (o DataSourceLambdaConfigOutput) ToDataSourceLambdaConfigPtrOutput() DataSourceLambdaConfigPtrOutput {
	return o.ToDataSourceLambdaConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceLambdaConfigOutput) ToDataSourceLambdaConfigPtrOutputWithContext(ctx context.Context) DataSourceLambdaConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceLambdaConfig) *DataSourceLambdaConfig {
		return &v
	}).(DataSourceLambdaConfigPtrOutput)
}

// The ARN for the Lambda function.
func (o DataSourceLambdaConfigOutput) FunctionArn() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceLambdaConfig) string { return v.FunctionArn }).(pulumi.StringOutput)
}

type DataSourceLambdaConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceLambdaConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceLambdaConfig)(nil)).Elem()
}

func (o DataSourceLambdaConfigPtrOutput) ToDataSourceLambdaConfigPtrOutput() DataSourceLambdaConfigPtrOutput {
	return o
}

func (o DataSourceLambdaConfigPtrOutput) ToDataSourceLambdaConfigPtrOutputWithContext(ctx context.Context) DataSourceLambdaConfigPtrOutput {
	return o
}

func (o DataSourceLambdaConfigPtrOutput) Elem() DataSourceLambdaConfigOutput {
	return o.ApplyT(func(v *DataSourceLambdaConfig) DataSourceLambdaConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceLambdaConfig
		return ret
	}).(DataSourceLambdaConfigOutput)
}

// The ARN for the Lambda function.
func (o DataSourceLambdaConfigPtrOutput) FunctionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return &v.FunctionArn
	}).(pulumi.StringPtrOutput)
}

type DataSourceRelationalDatabaseConfig struct {
	// The Amazon RDS HTTP endpoint configuration. See HTTP Endpoint Config.
	HttpEndpointConfig *DataSourceRelationalDatabaseConfigHttpEndpointConfig `pulumi:"httpEndpointConfig"`
	// Source type for the relational database. Valid values: `RDS_HTTP_ENDPOINT`.
	SourceType *string `pulumi:"sourceType"`
}

// DataSourceRelationalDatabaseConfigInput is an input type that accepts DataSourceRelationalDatabaseConfigArgs and DataSourceRelationalDatabaseConfigOutput values.
// You can construct a concrete instance of `DataSourceRelationalDatabaseConfigInput` via:
//
//          DataSourceRelationalDatabaseConfigArgs{...}
type DataSourceRelationalDatabaseConfigInput interface {
	pulumi.Input

	ToDataSourceRelationalDatabaseConfigOutput() DataSourceRelationalDatabaseConfigOutput
	ToDataSourceRelationalDatabaseConfigOutputWithContext(context.Context) DataSourceRelationalDatabaseConfigOutput
}

type DataSourceRelationalDatabaseConfigArgs struct {
	// The Amazon RDS HTTP endpoint configuration. See HTTP Endpoint Config.
	HttpEndpointConfig DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrInput `pulumi:"httpEndpointConfig"`
	// Source type for the relational database. Valid values: `RDS_HTTP_ENDPOINT`.
	SourceType pulumi.StringPtrInput `pulumi:"sourceType"`
}

func (DataSourceRelationalDatabaseConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceRelationalDatabaseConfig)(nil)).Elem()
}

func (i DataSourceRelationalDatabaseConfigArgs) ToDataSourceRelationalDatabaseConfigOutput() DataSourceRelationalDatabaseConfigOutput {
	return i.ToDataSourceRelationalDatabaseConfigOutputWithContext(context.Background())
}

func (i DataSourceRelationalDatabaseConfigArgs) ToDataSourceRelationalDatabaseConfigOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRelationalDatabaseConfigOutput)
}

func (i DataSourceRelationalDatabaseConfigArgs) ToDataSourceRelationalDatabaseConfigPtrOutput() DataSourceRelationalDatabaseConfigPtrOutput {
	return i.ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceRelationalDatabaseConfigArgs) ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRelationalDatabaseConfigOutput).ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(ctx)
}

// DataSourceRelationalDatabaseConfigPtrInput is an input type that accepts DataSourceRelationalDatabaseConfigArgs, DataSourceRelationalDatabaseConfigPtr and DataSourceRelationalDatabaseConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceRelationalDatabaseConfigPtrInput` via:
//
//          DataSourceRelationalDatabaseConfigArgs{...}
//
//  or:
//
//          nil
type DataSourceRelationalDatabaseConfigPtrInput interface {
	pulumi.Input

	ToDataSourceRelationalDatabaseConfigPtrOutput() DataSourceRelationalDatabaseConfigPtrOutput
	ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(context.Context) DataSourceRelationalDatabaseConfigPtrOutput
}

type dataSourceRelationalDatabaseConfigPtrType DataSourceRelationalDatabaseConfigArgs

func DataSourceRelationalDatabaseConfigPtr(v *DataSourceRelationalDatabaseConfigArgs) DataSourceRelationalDatabaseConfigPtrInput {
	return (*dataSourceRelationalDatabaseConfigPtrType)(v)
}

func (*dataSourceRelationalDatabaseConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceRelationalDatabaseConfig)(nil)).Elem()
}

func (i *dataSourceRelationalDatabaseConfigPtrType) ToDataSourceRelationalDatabaseConfigPtrOutput() DataSourceRelationalDatabaseConfigPtrOutput {
	return i.ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceRelationalDatabaseConfigPtrType) ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRelationalDatabaseConfigPtrOutput)
}

type DataSourceRelationalDatabaseConfigOutput struct{ *pulumi.OutputState }

func (DataSourceRelationalDatabaseConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceRelationalDatabaseConfig)(nil)).Elem()
}

func (o DataSourceRelationalDatabaseConfigOutput) ToDataSourceRelationalDatabaseConfigOutput() DataSourceRelationalDatabaseConfigOutput {
	return o
}

func (o DataSourceRelationalDatabaseConfigOutput) ToDataSourceRelationalDatabaseConfigOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigOutput {
	return o
}

func (o DataSourceRelationalDatabaseConfigOutput) ToDataSourceRelationalDatabaseConfigPtrOutput() DataSourceRelationalDatabaseConfigPtrOutput {
	return o.ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceRelationalDatabaseConfigOutput) ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceRelationalDatabaseConfig) *DataSourceRelationalDatabaseConfig {
		return &v
	}).(DataSourceRelationalDatabaseConfigPtrOutput)
}

// The Amazon RDS HTTP endpoint configuration. See HTTP Endpoint Config.
func (o DataSourceRelationalDatabaseConfigOutput) HttpEndpointConfig() DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput {
	return o.ApplyT(func(v DataSourceRelationalDatabaseConfig) *DataSourceRelationalDatabaseConfigHttpEndpointConfig {
		return v.HttpEndpointConfig
	}).(DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput)
}

// Source type for the relational database. Valid values: `RDS_HTTP_ENDPOINT`.
func (o DataSourceRelationalDatabaseConfigOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceRelationalDatabaseConfig) *string { return v.SourceType }).(pulumi.StringPtrOutput)
}

type DataSourceRelationalDatabaseConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceRelationalDatabaseConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceRelationalDatabaseConfig)(nil)).Elem()
}

func (o DataSourceRelationalDatabaseConfigPtrOutput) ToDataSourceRelationalDatabaseConfigPtrOutput() DataSourceRelationalDatabaseConfigPtrOutput {
	return o
}

func (o DataSourceRelationalDatabaseConfigPtrOutput) ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigPtrOutput {
	return o
}

func (o DataSourceRelationalDatabaseConfigPtrOutput) Elem() DataSourceRelationalDatabaseConfigOutput {
	return o.ApplyT(func(v *DataSourceRelationalDatabaseConfig) DataSourceRelationalDatabaseConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceRelationalDatabaseConfig
		return ret
	}).(DataSourceRelationalDatabaseConfigOutput)
}

// The Amazon RDS HTTP endpoint configuration. See HTTP Endpoint Config.
func (o DataSourceRelationalDatabaseConfigPtrOutput) HttpEndpointConfig() DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput {
	return o.ApplyT(func(v *DataSourceRelationalDatabaseConfig) *DataSourceRelationalDatabaseConfigHttpEndpointConfig {
		if v == nil {
			return nil
		}
		return v.HttpEndpointConfig
	}).(DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput)
}

// Source type for the relational database. Valid values: `RDS_HTTP_ENDPOINT`.
func (o DataSourceRelationalDatabaseConfigPtrOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRelationalDatabaseConfig) *string {
		if v == nil {
			return nil
		}
		return v.SourceType
	}).(pulumi.StringPtrOutput)
}

type DataSourceRelationalDatabaseConfigHttpEndpointConfig struct {
	// AWS secret store ARN for database credentials.
	AwsSecretStoreArn string `pulumi:"awsSecretStoreArn"`
	// Logical database name.
	DatabaseName *string `pulumi:"databaseName"`
	// Amazon RDS cluster identifier.
	DbClusterIdentifier string `pulumi:"dbClusterIdentifier"`
	// AWS Region for RDS HTTP endpoint. Defaults to current region.
	Region *string `pulumi:"region"`
	// Logical schema name.
	Schema *string `pulumi:"schema"`
}

// DataSourceRelationalDatabaseConfigHttpEndpointConfigInput is an input type that accepts DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs and DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput values.
// You can construct a concrete instance of `DataSourceRelationalDatabaseConfigHttpEndpointConfigInput` via:
//
//          DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs{...}
type DataSourceRelationalDatabaseConfigHttpEndpointConfigInput interface {
	pulumi.Input

	ToDataSourceRelationalDatabaseConfigHttpEndpointConfigOutput() DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput
	ToDataSourceRelationalDatabaseConfigHttpEndpointConfigOutputWithContext(context.Context) DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput
}

type DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs struct {
	// AWS secret store ARN for database credentials.
	AwsSecretStoreArn pulumi.StringInput `pulumi:"awsSecretStoreArn"`
	// Logical database name.
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// Amazon RDS cluster identifier.
	DbClusterIdentifier pulumi.StringInput `pulumi:"dbClusterIdentifier"`
	// AWS Region for RDS HTTP endpoint. Defaults to current region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Logical schema name.
	Schema pulumi.StringPtrInput `pulumi:"schema"`
}

func (DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceRelationalDatabaseConfigHttpEndpointConfig)(nil)).Elem()
}

func (i DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs) ToDataSourceRelationalDatabaseConfigHttpEndpointConfigOutput() DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput {
	return i.ToDataSourceRelationalDatabaseConfigHttpEndpointConfigOutputWithContext(context.Background())
}

func (i DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs) ToDataSourceRelationalDatabaseConfigHttpEndpointConfigOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput)
}

func (i DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs) ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput() DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput {
	return i.ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs) ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput).ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutputWithContext(ctx)
}

// DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrInput is an input type that accepts DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs, DataSourceRelationalDatabaseConfigHttpEndpointConfigPtr and DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrInput` via:
//
//          DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs{...}
//
//  or:
//
//          nil
type DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrInput interface {
	pulumi.Input

	ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput() DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput
	ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutputWithContext(context.Context) DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput
}

type dataSourceRelationalDatabaseConfigHttpEndpointConfigPtrType DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs

func DataSourceRelationalDatabaseConfigHttpEndpointConfigPtr(v *DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs) DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrInput {
	return (*dataSourceRelationalDatabaseConfigHttpEndpointConfigPtrType)(v)
}

func (*dataSourceRelationalDatabaseConfigHttpEndpointConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceRelationalDatabaseConfigHttpEndpointConfig)(nil)).Elem()
}

func (i *dataSourceRelationalDatabaseConfigHttpEndpointConfigPtrType) ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput() DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput {
	return i.ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceRelationalDatabaseConfigHttpEndpointConfigPtrType) ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput)
}

type DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput struct{ *pulumi.OutputState }

func (DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceRelationalDatabaseConfigHttpEndpointConfig)(nil)).Elem()
}

func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput) ToDataSourceRelationalDatabaseConfigHttpEndpointConfigOutput() DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput {
	return o
}

func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput) ToDataSourceRelationalDatabaseConfigHttpEndpointConfigOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput {
	return o
}

func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput) ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput() DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput {
	return o.ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput) ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceRelationalDatabaseConfigHttpEndpointConfig) *DataSourceRelationalDatabaseConfigHttpEndpointConfig {
		return &v
	}).(DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput)
}

// AWS secret store ARN for database credentials.
func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput) AwsSecretStoreArn() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceRelationalDatabaseConfigHttpEndpointConfig) string { return v.AwsSecretStoreArn }).(pulumi.StringOutput)
}

// Logical database name.
func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceRelationalDatabaseConfigHttpEndpointConfig) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// Amazon RDS cluster identifier.
func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput) DbClusterIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceRelationalDatabaseConfigHttpEndpointConfig) string { return v.DbClusterIdentifier }).(pulumi.StringOutput)
}

// AWS Region for RDS HTTP endpoint. Defaults to current region.
func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceRelationalDatabaseConfigHttpEndpointConfig) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Logical schema name.
func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput) Schema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceRelationalDatabaseConfigHttpEndpointConfig) *string { return v.Schema }).(pulumi.StringPtrOutput)
}

type DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceRelationalDatabaseConfigHttpEndpointConfig)(nil)).Elem()
}

func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput) ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput() DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput {
	return o
}

func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput) ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput {
	return o
}

func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput) Elem() DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput {
	return o.ApplyT(func(v *DataSourceRelationalDatabaseConfigHttpEndpointConfig) DataSourceRelationalDatabaseConfigHttpEndpointConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceRelationalDatabaseConfigHttpEndpointConfig
		return ret
	}).(DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput)
}

// AWS secret store ARN for database credentials.
func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput) AwsSecretStoreArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRelationalDatabaseConfigHttpEndpointConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AwsSecretStoreArn
	}).(pulumi.StringPtrOutput)
}

// Logical database name.
func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRelationalDatabaseConfigHttpEndpointConfig) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// Amazon RDS cluster identifier.
func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput) DbClusterIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRelationalDatabaseConfigHttpEndpointConfig) *string {
		if v == nil {
			return nil
		}
		return &v.DbClusterIdentifier
	}).(pulumi.StringPtrOutput)
}

// AWS Region for RDS HTTP endpoint. Defaults to current region.
func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRelationalDatabaseConfigHttpEndpointConfig) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Logical schema name.
func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput) Schema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRelationalDatabaseConfigHttpEndpointConfig) *string {
		if v == nil {
			return nil
		}
		return v.Schema
	}).(pulumi.StringPtrOutput)
}

type FunctionSyncConfig struct {
	// The Conflict Detection strategy to use. Valid values are `NONE` and `VERSION`.
	ConflictDetection *string `pulumi:"conflictDetection"`
	// The Conflict Resolution strategy to perform in the event of a conflict. Valid values are `NONE`, `OPTIMISTIC_CONCURRENCY`, `AUTOMERGE`, and `LAMBDA`.
	ConflictHandler *string `pulumi:"conflictHandler"`
	// The Lambda Conflict Handler Config when configuring `LAMBDA` as the Conflict Handler. See Lambda Conflict Handler Config.
	LambdaConflictHandlerConfig *FunctionSyncConfigLambdaConflictHandlerConfig `pulumi:"lambdaConflictHandlerConfig"`
}

// FunctionSyncConfigInput is an input type that accepts FunctionSyncConfigArgs and FunctionSyncConfigOutput values.
// You can construct a concrete instance of `FunctionSyncConfigInput` via:
//
//          FunctionSyncConfigArgs{...}
type FunctionSyncConfigInput interface {
	pulumi.Input

	ToFunctionSyncConfigOutput() FunctionSyncConfigOutput
	ToFunctionSyncConfigOutputWithContext(context.Context) FunctionSyncConfigOutput
}

type FunctionSyncConfigArgs struct {
	// The Conflict Detection strategy to use. Valid values are `NONE` and `VERSION`.
	ConflictDetection pulumi.StringPtrInput `pulumi:"conflictDetection"`
	// The Conflict Resolution strategy to perform in the event of a conflict. Valid values are `NONE`, `OPTIMISTIC_CONCURRENCY`, `AUTOMERGE`, and `LAMBDA`.
	ConflictHandler pulumi.StringPtrInput `pulumi:"conflictHandler"`
	// The Lambda Conflict Handler Config when configuring `LAMBDA` as the Conflict Handler. See Lambda Conflict Handler Config.
	LambdaConflictHandlerConfig FunctionSyncConfigLambdaConflictHandlerConfigPtrInput `pulumi:"lambdaConflictHandlerConfig"`
}

func (FunctionSyncConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionSyncConfig)(nil)).Elem()
}

func (i FunctionSyncConfigArgs) ToFunctionSyncConfigOutput() FunctionSyncConfigOutput {
	return i.ToFunctionSyncConfigOutputWithContext(context.Background())
}

func (i FunctionSyncConfigArgs) ToFunctionSyncConfigOutputWithContext(ctx context.Context) FunctionSyncConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSyncConfigOutput)
}

func (i FunctionSyncConfigArgs) ToFunctionSyncConfigPtrOutput() FunctionSyncConfigPtrOutput {
	return i.ToFunctionSyncConfigPtrOutputWithContext(context.Background())
}

func (i FunctionSyncConfigArgs) ToFunctionSyncConfigPtrOutputWithContext(ctx context.Context) FunctionSyncConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSyncConfigOutput).ToFunctionSyncConfigPtrOutputWithContext(ctx)
}

// FunctionSyncConfigPtrInput is an input type that accepts FunctionSyncConfigArgs, FunctionSyncConfigPtr and FunctionSyncConfigPtrOutput values.
// You can construct a concrete instance of `FunctionSyncConfigPtrInput` via:
//
//          FunctionSyncConfigArgs{...}
//
//  or:
//
//          nil
type FunctionSyncConfigPtrInput interface {
	pulumi.Input

	ToFunctionSyncConfigPtrOutput() FunctionSyncConfigPtrOutput
	ToFunctionSyncConfigPtrOutputWithContext(context.Context) FunctionSyncConfigPtrOutput
}

type functionSyncConfigPtrType FunctionSyncConfigArgs

func FunctionSyncConfigPtr(v *FunctionSyncConfigArgs) FunctionSyncConfigPtrInput {
	return (*functionSyncConfigPtrType)(v)
}

func (*functionSyncConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionSyncConfig)(nil)).Elem()
}

func (i *functionSyncConfigPtrType) ToFunctionSyncConfigPtrOutput() FunctionSyncConfigPtrOutput {
	return i.ToFunctionSyncConfigPtrOutputWithContext(context.Background())
}

func (i *functionSyncConfigPtrType) ToFunctionSyncConfigPtrOutputWithContext(ctx context.Context) FunctionSyncConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSyncConfigPtrOutput)
}

type FunctionSyncConfigOutput struct{ *pulumi.OutputState }

func (FunctionSyncConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionSyncConfig)(nil)).Elem()
}

func (o FunctionSyncConfigOutput) ToFunctionSyncConfigOutput() FunctionSyncConfigOutput {
	return o
}

func (o FunctionSyncConfigOutput) ToFunctionSyncConfigOutputWithContext(ctx context.Context) FunctionSyncConfigOutput {
	return o
}

func (o FunctionSyncConfigOutput) ToFunctionSyncConfigPtrOutput() FunctionSyncConfigPtrOutput {
	return o.ToFunctionSyncConfigPtrOutputWithContext(context.Background())
}

func (o FunctionSyncConfigOutput) ToFunctionSyncConfigPtrOutputWithContext(ctx context.Context) FunctionSyncConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionSyncConfig) *FunctionSyncConfig {
		return &v
	}).(FunctionSyncConfigPtrOutput)
}

// The Conflict Detection strategy to use. Valid values are `NONE` and `VERSION`.
func (o FunctionSyncConfigOutput) ConflictDetection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionSyncConfig) *string { return v.ConflictDetection }).(pulumi.StringPtrOutput)
}

// The Conflict Resolution strategy to perform in the event of a conflict. Valid values are `NONE`, `OPTIMISTIC_CONCURRENCY`, `AUTOMERGE`, and `LAMBDA`.
func (o FunctionSyncConfigOutput) ConflictHandler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionSyncConfig) *string { return v.ConflictHandler }).(pulumi.StringPtrOutput)
}

// The Lambda Conflict Handler Config when configuring `LAMBDA` as the Conflict Handler. See Lambda Conflict Handler Config.
func (o FunctionSyncConfigOutput) LambdaConflictHandlerConfig() FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return o.ApplyT(func(v FunctionSyncConfig) *FunctionSyncConfigLambdaConflictHandlerConfig {
		return v.LambdaConflictHandlerConfig
	}).(FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput)
}

type FunctionSyncConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionSyncConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionSyncConfig)(nil)).Elem()
}

func (o FunctionSyncConfigPtrOutput) ToFunctionSyncConfigPtrOutput() FunctionSyncConfigPtrOutput {
	return o
}

func (o FunctionSyncConfigPtrOutput) ToFunctionSyncConfigPtrOutputWithContext(ctx context.Context) FunctionSyncConfigPtrOutput {
	return o
}

func (o FunctionSyncConfigPtrOutput) Elem() FunctionSyncConfigOutput {
	return o.ApplyT(func(v *FunctionSyncConfig) FunctionSyncConfig {
		if v != nil {
			return *v
		}
		var ret FunctionSyncConfig
		return ret
	}).(FunctionSyncConfigOutput)
}

// The Conflict Detection strategy to use. Valid values are `NONE` and `VERSION`.
func (o FunctionSyncConfigPtrOutput) ConflictDetection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionSyncConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConflictDetection
	}).(pulumi.StringPtrOutput)
}

// The Conflict Resolution strategy to perform in the event of a conflict. Valid values are `NONE`, `OPTIMISTIC_CONCURRENCY`, `AUTOMERGE`, and `LAMBDA`.
func (o FunctionSyncConfigPtrOutput) ConflictHandler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionSyncConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConflictHandler
	}).(pulumi.StringPtrOutput)
}

// The Lambda Conflict Handler Config when configuring `LAMBDA` as the Conflict Handler. See Lambda Conflict Handler Config.
func (o FunctionSyncConfigPtrOutput) LambdaConflictHandlerConfig() FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return o.ApplyT(func(v *FunctionSyncConfig) *FunctionSyncConfigLambdaConflictHandlerConfig {
		if v == nil {
			return nil
		}
		return v.LambdaConflictHandlerConfig
	}).(FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput)
}

type FunctionSyncConfigLambdaConflictHandlerConfig struct {
	// The Amazon Resource Name (ARN) for the Lambda function to use as the Conflict Handler.
	LambdaConflictHandlerArn *string `pulumi:"lambdaConflictHandlerArn"`
}

// FunctionSyncConfigLambdaConflictHandlerConfigInput is an input type that accepts FunctionSyncConfigLambdaConflictHandlerConfigArgs and FunctionSyncConfigLambdaConflictHandlerConfigOutput values.
// You can construct a concrete instance of `FunctionSyncConfigLambdaConflictHandlerConfigInput` via:
//
//          FunctionSyncConfigLambdaConflictHandlerConfigArgs{...}
type FunctionSyncConfigLambdaConflictHandlerConfigInput interface {
	pulumi.Input

	ToFunctionSyncConfigLambdaConflictHandlerConfigOutput() FunctionSyncConfigLambdaConflictHandlerConfigOutput
	ToFunctionSyncConfigLambdaConflictHandlerConfigOutputWithContext(context.Context) FunctionSyncConfigLambdaConflictHandlerConfigOutput
}

type FunctionSyncConfigLambdaConflictHandlerConfigArgs struct {
	// The Amazon Resource Name (ARN) for the Lambda function to use as the Conflict Handler.
	LambdaConflictHandlerArn pulumi.StringPtrInput `pulumi:"lambdaConflictHandlerArn"`
}

func (FunctionSyncConfigLambdaConflictHandlerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionSyncConfigLambdaConflictHandlerConfig)(nil)).Elem()
}

func (i FunctionSyncConfigLambdaConflictHandlerConfigArgs) ToFunctionSyncConfigLambdaConflictHandlerConfigOutput() FunctionSyncConfigLambdaConflictHandlerConfigOutput {
	return i.ToFunctionSyncConfigLambdaConflictHandlerConfigOutputWithContext(context.Background())
}

func (i FunctionSyncConfigLambdaConflictHandlerConfigArgs) ToFunctionSyncConfigLambdaConflictHandlerConfigOutputWithContext(ctx context.Context) FunctionSyncConfigLambdaConflictHandlerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSyncConfigLambdaConflictHandlerConfigOutput)
}

func (i FunctionSyncConfigLambdaConflictHandlerConfigArgs) ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutput() FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return i.ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(context.Background())
}

func (i FunctionSyncConfigLambdaConflictHandlerConfigArgs) ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(ctx context.Context) FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSyncConfigLambdaConflictHandlerConfigOutput).ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(ctx)
}

// FunctionSyncConfigLambdaConflictHandlerConfigPtrInput is an input type that accepts FunctionSyncConfigLambdaConflictHandlerConfigArgs, FunctionSyncConfigLambdaConflictHandlerConfigPtr and FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput values.
// You can construct a concrete instance of `FunctionSyncConfigLambdaConflictHandlerConfigPtrInput` via:
//
//          FunctionSyncConfigLambdaConflictHandlerConfigArgs{...}
//
//  or:
//
//          nil
type FunctionSyncConfigLambdaConflictHandlerConfigPtrInput interface {
	pulumi.Input

	ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutput() FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput
	ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(context.Context) FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput
}

type functionSyncConfigLambdaConflictHandlerConfigPtrType FunctionSyncConfigLambdaConflictHandlerConfigArgs

func FunctionSyncConfigLambdaConflictHandlerConfigPtr(v *FunctionSyncConfigLambdaConflictHandlerConfigArgs) FunctionSyncConfigLambdaConflictHandlerConfigPtrInput {
	return (*functionSyncConfigLambdaConflictHandlerConfigPtrType)(v)
}

func (*functionSyncConfigLambdaConflictHandlerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionSyncConfigLambdaConflictHandlerConfig)(nil)).Elem()
}

func (i *functionSyncConfigLambdaConflictHandlerConfigPtrType) ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutput() FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return i.ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(context.Background())
}

func (i *functionSyncConfigLambdaConflictHandlerConfigPtrType) ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(ctx context.Context) FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput)
}

type FunctionSyncConfigLambdaConflictHandlerConfigOutput struct{ *pulumi.OutputState }

func (FunctionSyncConfigLambdaConflictHandlerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionSyncConfigLambdaConflictHandlerConfig)(nil)).Elem()
}

func (o FunctionSyncConfigLambdaConflictHandlerConfigOutput) ToFunctionSyncConfigLambdaConflictHandlerConfigOutput() FunctionSyncConfigLambdaConflictHandlerConfigOutput {
	return o
}

func (o FunctionSyncConfigLambdaConflictHandlerConfigOutput) ToFunctionSyncConfigLambdaConflictHandlerConfigOutputWithContext(ctx context.Context) FunctionSyncConfigLambdaConflictHandlerConfigOutput {
	return o
}

func (o FunctionSyncConfigLambdaConflictHandlerConfigOutput) ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutput() FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return o.ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(context.Background())
}

func (o FunctionSyncConfigLambdaConflictHandlerConfigOutput) ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(ctx context.Context) FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionSyncConfigLambdaConflictHandlerConfig) *FunctionSyncConfigLambdaConflictHandlerConfig {
		return &v
	}).(FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput)
}

// The Amazon Resource Name (ARN) for the Lambda function to use as the Conflict Handler.
func (o FunctionSyncConfigLambdaConflictHandlerConfigOutput) LambdaConflictHandlerArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionSyncConfigLambdaConflictHandlerConfig) *string { return v.LambdaConflictHandlerArn }).(pulumi.StringPtrOutput)
}

type FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionSyncConfigLambdaConflictHandlerConfig)(nil)).Elem()
}

func (o FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput) ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutput() FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return o
}

func (o FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput) ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(ctx context.Context) FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return o
}

func (o FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput) Elem() FunctionSyncConfigLambdaConflictHandlerConfigOutput {
	return o.ApplyT(func(v *FunctionSyncConfigLambdaConflictHandlerConfig) FunctionSyncConfigLambdaConflictHandlerConfig {
		if v != nil {
			return *v
		}
		var ret FunctionSyncConfigLambdaConflictHandlerConfig
		return ret
	}).(FunctionSyncConfigLambdaConflictHandlerConfigOutput)
}

// The Amazon Resource Name (ARN) for the Lambda function to use as the Conflict Handler.
func (o FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput) LambdaConflictHandlerArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionSyncConfigLambdaConflictHandlerConfig) *string {
		if v == nil {
			return nil
		}
		return v.LambdaConflictHandlerArn
	}).(pulumi.StringPtrOutput)
}

type GraphQLApiAdditionalAuthenticationProvider struct {
	// The authentication type. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`, `AWS_LAMBDA`
	AuthenticationType string `pulumi:"authenticationType"`
	// Nested argument containing Lambda authorizer configuration. Defined below.
	LambdaAuthorizerConfig *GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig `pulumi:"lambdaAuthorizerConfig"`
	// Nested argument containing OpenID Connect configuration. Defined below.
	OpenidConnectConfig *GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig `pulumi:"openidConnectConfig"`
	// The Amazon Cognito User Pool configuration. Defined below.
	UserPoolConfig *GraphQLApiAdditionalAuthenticationProviderUserPoolConfig `pulumi:"userPoolConfig"`
}

// GraphQLApiAdditionalAuthenticationProviderInput is an input type that accepts GraphQLApiAdditionalAuthenticationProviderArgs and GraphQLApiAdditionalAuthenticationProviderOutput values.
// You can construct a concrete instance of `GraphQLApiAdditionalAuthenticationProviderInput` via:
//
//          GraphQLApiAdditionalAuthenticationProviderArgs{...}
type GraphQLApiAdditionalAuthenticationProviderInput interface {
	pulumi.Input

	ToGraphQLApiAdditionalAuthenticationProviderOutput() GraphQLApiAdditionalAuthenticationProviderOutput
	ToGraphQLApiAdditionalAuthenticationProviderOutputWithContext(context.Context) GraphQLApiAdditionalAuthenticationProviderOutput
}

type GraphQLApiAdditionalAuthenticationProviderArgs struct {
	// The authentication type. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`, `AWS_LAMBDA`
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// Nested argument containing Lambda authorizer configuration. Defined below.
	LambdaAuthorizerConfig GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrInput `pulumi:"lambdaAuthorizerConfig"`
	// Nested argument containing OpenID Connect configuration. Defined below.
	OpenidConnectConfig GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrInput `pulumi:"openidConnectConfig"`
	// The Amazon Cognito User Pool configuration. Defined below.
	UserPoolConfig GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrInput `pulumi:"userPoolConfig"`
}

func (GraphQLApiAdditionalAuthenticationProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProvider)(nil)).Elem()
}

func (i GraphQLApiAdditionalAuthenticationProviderArgs) ToGraphQLApiAdditionalAuthenticationProviderOutput() GraphQLApiAdditionalAuthenticationProviderOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderOutputWithContext(context.Background())
}

func (i GraphQLApiAdditionalAuthenticationProviderArgs) ToGraphQLApiAdditionalAuthenticationProviderOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderOutput)
}

// GraphQLApiAdditionalAuthenticationProviderArrayInput is an input type that accepts GraphQLApiAdditionalAuthenticationProviderArray and GraphQLApiAdditionalAuthenticationProviderArrayOutput values.
// You can construct a concrete instance of `GraphQLApiAdditionalAuthenticationProviderArrayInput` via:
//
//          GraphQLApiAdditionalAuthenticationProviderArray{ GraphQLApiAdditionalAuthenticationProviderArgs{...} }
type GraphQLApiAdditionalAuthenticationProviderArrayInput interface {
	pulumi.Input

	ToGraphQLApiAdditionalAuthenticationProviderArrayOutput() GraphQLApiAdditionalAuthenticationProviderArrayOutput
	ToGraphQLApiAdditionalAuthenticationProviderArrayOutputWithContext(context.Context) GraphQLApiAdditionalAuthenticationProviderArrayOutput
}

type GraphQLApiAdditionalAuthenticationProviderArray []GraphQLApiAdditionalAuthenticationProviderInput

func (GraphQLApiAdditionalAuthenticationProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GraphQLApiAdditionalAuthenticationProvider)(nil)).Elem()
}

func (i GraphQLApiAdditionalAuthenticationProviderArray) ToGraphQLApiAdditionalAuthenticationProviderArrayOutput() GraphQLApiAdditionalAuthenticationProviderArrayOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderArrayOutputWithContext(context.Background())
}

func (i GraphQLApiAdditionalAuthenticationProviderArray) ToGraphQLApiAdditionalAuthenticationProviderArrayOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderArrayOutput)
}

type GraphQLApiAdditionalAuthenticationProviderOutput struct{ *pulumi.OutputState }

func (GraphQLApiAdditionalAuthenticationProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProvider)(nil)).Elem()
}

func (o GraphQLApiAdditionalAuthenticationProviderOutput) ToGraphQLApiAdditionalAuthenticationProviderOutput() GraphQLApiAdditionalAuthenticationProviderOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderOutput) ToGraphQLApiAdditionalAuthenticationProviderOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderOutput {
	return o
}

// The authentication type. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`, `AWS_LAMBDA`
func (o GraphQLApiAdditionalAuthenticationProviderOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProvider) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// Nested argument containing Lambda authorizer configuration. Defined below.
func (o GraphQLApiAdditionalAuthenticationProviderOutput) LambdaAuthorizerConfig() GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProvider) *GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig {
		return v.LambdaAuthorizerConfig
	}).(GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput)
}

// Nested argument containing OpenID Connect configuration. Defined below.
func (o GraphQLApiAdditionalAuthenticationProviderOutput) OpenidConnectConfig() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProvider) *GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig {
		return v.OpenidConnectConfig
	}).(GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput)
}

// The Amazon Cognito User Pool configuration. Defined below.
func (o GraphQLApiAdditionalAuthenticationProviderOutput) UserPoolConfig() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProvider) *GraphQLApiAdditionalAuthenticationProviderUserPoolConfig {
		return v.UserPoolConfig
	}).(GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput)
}

type GraphQLApiAdditionalAuthenticationProviderArrayOutput struct{ *pulumi.OutputState }

func (GraphQLApiAdditionalAuthenticationProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GraphQLApiAdditionalAuthenticationProvider)(nil)).Elem()
}

func (o GraphQLApiAdditionalAuthenticationProviderArrayOutput) ToGraphQLApiAdditionalAuthenticationProviderArrayOutput() GraphQLApiAdditionalAuthenticationProviderArrayOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderArrayOutput) ToGraphQLApiAdditionalAuthenticationProviderArrayOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderArrayOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderArrayOutput) Index(i pulumi.IntInput) GraphQLApiAdditionalAuthenticationProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GraphQLApiAdditionalAuthenticationProvider {
		return vs[0].([]GraphQLApiAdditionalAuthenticationProvider)[vs[1].(int)]
	}).(GraphQLApiAdditionalAuthenticationProviderOutput)
}

type GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig struct {
	// The number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a `ttlOverride` key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.
	AuthorizerResultTtlInSeconds *int `pulumi:"authorizerResultTtlInSeconds"`
	// The ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow `lambda:InvokeFunction` from service principal `appsync.amazonaws.com`.
	AuthorizerUri string `pulumi:"authorizerUri"`
	// A regular expression for validation of tokens before the Lambda function is called.
	IdentityValidationExpression *string `pulumi:"identityValidationExpression"`
}

// GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigInput is an input type that accepts GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs and GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput values.
// You can construct a concrete instance of `GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigInput` via:
//
//          GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs{...}
type GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigInput interface {
	pulumi.Input

	ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput() GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput
	ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutputWithContext(context.Context) GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput
}

type GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs struct {
	// The number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a `ttlOverride` key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.
	AuthorizerResultTtlInSeconds pulumi.IntPtrInput `pulumi:"authorizerResultTtlInSeconds"`
	// The ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow `lambda:InvokeFunction` from service principal `appsync.amazonaws.com`.
	AuthorizerUri pulumi.StringInput `pulumi:"authorizerUri"`
	// A regular expression for validation of tokens before the Lambda function is called.
	IdentityValidationExpression pulumi.StringPtrInput `pulumi:"identityValidationExpression"`
}

func (GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig)(nil)).Elem()
}

func (i GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput() GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutputWithContext(context.Background())
}

func (i GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput)
}

func (i GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutputWithContext(context.Background())
}

func (i GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput).ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutputWithContext(ctx)
}

// GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrInput is an input type that accepts GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs, GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtr and GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput values.
// You can construct a concrete instance of `GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrInput` via:
//
//          GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs{...}
//
//  or:
//
//          nil
type GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrInput interface {
	pulumi.Input

	ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput
	ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutputWithContext(context.Context) GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput
}

type graphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrType GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs

func GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtr(v *GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs) GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrInput {
	return (*graphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrType)(v)
}

func (*graphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig)(nil)).Elem()
}

func (i *graphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrType) ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutputWithContext(context.Background())
}

func (i *graphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrType) ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput)
}

type GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput struct{ *pulumi.OutputState }

func (GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig)(nil)).Elem()
}

func (o GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput() GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput {
	return o.ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutputWithContext(context.Background())
}

func (o GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig) *GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig {
		return &v
	}).(GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput)
}

// The number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a `ttlOverride` key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.
func (o GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput) AuthorizerResultTtlInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig) *int {
		return v.AuthorizerResultTtlInSeconds
	}).(pulumi.IntPtrOutput)
}

// The ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow `lambda:InvokeFunction` from service principal `appsync.amazonaws.com`.
func (o GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput) AuthorizerUri() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig) string {
		return v.AuthorizerUri
	}).(pulumi.StringOutput)
}

// A regular expression for validation of tokens before the Lambda function is called.
func (o GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput) IdentityValidationExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig) *string {
		return v.IdentityValidationExpression
	}).(pulumi.StringPtrOutput)
}

type GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput struct{ *pulumi.OutputState }

func (GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig)(nil)).Elem()
}

func (o GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput) ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput) ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput) Elem() GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig) GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig {
		if v != nil {
			return *v
		}
		var ret GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig
		return ret
	}).(GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput)
}

// The number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a `ttlOverride` key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.
func (o GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput) AuthorizerResultTtlInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig) *int {
		if v == nil {
			return nil
		}
		return v.AuthorizerResultTtlInSeconds
	}).(pulumi.IntPtrOutput)
}

// The ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow `lambda:InvokeFunction` from service principal `appsync.amazonaws.com`.
func (o GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput) AuthorizerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AuthorizerUri
	}).(pulumi.StringPtrOutput)
}

// A regular expression for validation of tokens before the Lambda function is called.
func (o GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput) IdentityValidationExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig) *string {
		if v == nil {
			return nil
		}
		return v.IdentityValidationExpression
	}).(pulumi.StringPtrOutput)
}

type GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig struct {
	// Number of milliseconds a token is valid after being authenticated.
	AuthTtl *int `pulumi:"authTtl"`
	// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
	ClientId *string `pulumi:"clientId"`
	// Number of milliseconds a token is valid after being issued to a user.
	IatTtl *int `pulumi:"iatTtl"`
	// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
	Issuer string `pulumi:"issuer"`
}

// GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigInput is an input type that accepts GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs and GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput values.
// You can construct a concrete instance of `GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigInput` via:
//
//          GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs{...}
type GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigInput interface {
	pulumi.Input

	ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput
	ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutputWithContext(context.Context) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput
}

type GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs struct {
	// Number of milliseconds a token is valid after being authenticated.
	AuthTtl pulumi.IntPtrInput `pulumi:"authTtl"`
	// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Number of milliseconds a token is valid after being issued to a user.
	IatTtl pulumi.IntPtrInput `pulumi:"iatTtl"`
	// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
	Issuer pulumi.StringInput `pulumi:"issuer"`
}

func (GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig)(nil)).Elem()
}

func (i GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutputWithContext(context.Background())
}

func (i GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput)
}

func (i GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(context.Background())
}

func (i GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput).ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(ctx)
}

// GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrInput is an input type that accepts GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs, GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtr and GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput values.
// You can construct a concrete instance of `GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrInput` via:
//
//          GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs{...}
//
//  or:
//
//          nil
type GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrInput interface {
	pulumi.Input

	ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput
	ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(context.Context) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput
}

type graphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrType GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs

func GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtr(v *GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrInput {
	return (*graphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrType)(v)
}

func (*graphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig)(nil)).Elem()
}

func (i *graphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrType) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(context.Background())
}

func (i *graphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrType) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput)
}

type GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput struct{ *pulumi.OutputState }

func (GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig)(nil)).Elem()
}

func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return o.ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(context.Background())
}

func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) *GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig {
		return &v
	}).(GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput)
}

// Number of milliseconds a token is valid after being authenticated.
func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) AuthTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) *int { return v.AuthTtl }).(pulumi.IntPtrOutput)
}

// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Number of milliseconds a token is valid after being issued to a user.
func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) IatTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) *int { return v.IatTtl }).(pulumi.IntPtrOutput)
}

// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) string { return v.Issuer }).(pulumi.StringOutput)
}

type GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig)(nil)).Elem()
}

func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput) Elem() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig {
		if v != nil {
			return *v
		}
		var ret GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig
		return ret
	}).(GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput)
}

// Number of milliseconds a token is valid after being authenticated.
func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput) AuthTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) *int {
		if v == nil {
			return nil
		}
		return v.AuthTtl
	}).(pulumi.IntPtrOutput)
}

// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Number of milliseconds a token is valid after being issued to a user.
func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput) IatTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) *int {
		if v == nil {
			return nil
		}
		return v.IatTtl
	}).(pulumi.IntPtrOutput)
}

// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Issuer
	}).(pulumi.StringPtrOutput)
}

type GraphQLApiAdditionalAuthenticationProviderUserPoolConfig struct {
	// A regular expression for validating the incoming Amazon Cognito User Pool app client ID.
	AppIdClientRegex *string `pulumi:"appIdClientRegex"`
	// The AWS region in which the user pool was created.
	AwsRegion *string `pulumi:"awsRegion"`
	// The user pool ID.
	UserPoolId string `pulumi:"userPoolId"`
}

// GraphQLApiAdditionalAuthenticationProviderUserPoolConfigInput is an input type that accepts GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs and GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput values.
// You can construct a concrete instance of `GraphQLApiAdditionalAuthenticationProviderUserPoolConfigInput` via:
//
//          GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs{...}
type GraphQLApiAdditionalAuthenticationProviderUserPoolConfigInput interface {
	pulumi.Input

	ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput
	ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutputWithContext(context.Context) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput
}

type GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs struct {
	// A regular expression for validating the incoming Amazon Cognito User Pool app client ID.
	AppIdClientRegex pulumi.StringPtrInput `pulumi:"appIdClientRegex"`
	// The AWS region in which the user pool was created.
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// The user pool ID.
	UserPoolId pulumi.StringInput `pulumi:"userPoolId"`
}

func (GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderUserPoolConfig)(nil)).Elem()
}

func (i GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutputWithContext(context.Background())
}

func (i GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput)
}

func (i GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(context.Background())
}

func (i GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput).ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(ctx)
}

// GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrInput is an input type that accepts GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs, GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtr and GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput values.
// You can construct a concrete instance of `GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrInput` via:
//
//          GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs{...}
//
//  or:
//
//          nil
type GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrInput interface {
	pulumi.Input

	ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput
	ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(context.Context) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput
}

type graphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrType GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs

func GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtr(v *GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrInput {
	return (*graphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrType)(v)
}

func (*graphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiAdditionalAuthenticationProviderUserPoolConfig)(nil)).Elem()
}

func (i *graphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrType) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(context.Background())
}

func (i *graphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrType) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput)
}

type GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput struct{ *pulumi.OutputState }

func (GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderUserPoolConfig)(nil)).Elem()
}

func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return o.ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(context.Background())
}

func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GraphQLApiAdditionalAuthenticationProviderUserPoolConfig) *GraphQLApiAdditionalAuthenticationProviderUserPoolConfig {
		return &v
	}).(GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput)
}

// A regular expression for validating the incoming Amazon Cognito User Pool app client ID.
func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput) AppIdClientRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderUserPoolConfig) *string { return v.AppIdClientRegex }).(pulumi.StringPtrOutput)
}

// The AWS region in which the user pool was created.
func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderUserPoolConfig) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// The user pool ID.
func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput) UserPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderUserPoolConfig) string { return v.UserPoolId }).(pulumi.StringOutput)
}

type GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput struct{ *pulumi.OutputState }

func (GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiAdditionalAuthenticationProviderUserPoolConfig)(nil)).Elem()
}

func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput) Elem() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderUserPoolConfig) GraphQLApiAdditionalAuthenticationProviderUserPoolConfig {
		if v != nil {
			return *v
		}
		var ret GraphQLApiAdditionalAuthenticationProviderUserPoolConfig
		return ret
	}).(GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput)
}

// A regular expression for validating the incoming Amazon Cognito User Pool app client ID.
func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput) AppIdClientRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderUserPoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.AppIdClientRegex
	}).(pulumi.StringPtrOutput)
}

// The AWS region in which the user pool was created.
func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderUserPoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// The user pool ID.
func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput) UserPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderUserPoolConfig) *string {
		if v == nil {
			return nil
		}
		return &v.UserPoolId
	}).(pulumi.StringPtrOutput)
}

type GraphQLApiLambdaAuthorizerConfig struct {
	// The number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a `ttlOverride` key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.
	AuthorizerResultTtlInSeconds *int `pulumi:"authorizerResultTtlInSeconds"`
	// The ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow `lambda:InvokeFunction` from service principal `appsync.amazonaws.com`.
	AuthorizerUri string `pulumi:"authorizerUri"`
	// A regular expression for validation of tokens before the Lambda function is called.
	IdentityValidationExpression *string `pulumi:"identityValidationExpression"`
}

// GraphQLApiLambdaAuthorizerConfigInput is an input type that accepts GraphQLApiLambdaAuthorizerConfigArgs and GraphQLApiLambdaAuthorizerConfigOutput values.
// You can construct a concrete instance of `GraphQLApiLambdaAuthorizerConfigInput` via:
//
//          GraphQLApiLambdaAuthorizerConfigArgs{...}
type GraphQLApiLambdaAuthorizerConfigInput interface {
	pulumi.Input

	ToGraphQLApiLambdaAuthorizerConfigOutput() GraphQLApiLambdaAuthorizerConfigOutput
	ToGraphQLApiLambdaAuthorizerConfigOutputWithContext(context.Context) GraphQLApiLambdaAuthorizerConfigOutput
}

type GraphQLApiLambdaAuthorizerConfigArgs struct {
	// The number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a `ttlOverride` key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.
	AuthorizerResultTtlInSeconds pulumi.IntPtrInput `pulumi:"authorizerResultTtlInSeconds"`
	// The ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow `lambda:InvokeFunction` from service principal `appsync.amazonaws.com`.
	AuthorizerUri pulumi.StringInput `pulumi:"authorizerUri"`
	// A regular expression for validation of tokens before the Lambda function is called.
	IdentityValidationExpression pulumi.StringPtrInput `pulumi:"identityValidationExpression"`
}

func (GraphQLApiLambdaAuthorizerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiLambdaAuthorizerConfig)(nil)).Elem()
}

func (i GraphQLApiLambdaAuthorizerConfigArgs) ToGraphQLApiLambdaAuthorizerConfigOutput() GraphQLApiLambdaAuthorizerConfigOutput {
	return i.ToGraphQLApiLambdaAuthorizerConfigOutputWithContext(context.Background())
}

func (i GraphQLApiLambdaAuthorizerConfigArgs) ToGraphQLApiLambdaAuthorizerConfigOutputWithContext(ctx context.Context) GraphQLApiLambdaAuthorizerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiLambdaAuthorizerConfigOutput)
}

func (i GraphQLApiLambdaAuthorizerConfigArgs) ToGraphQLApiLambdaAuthorizerConfigPtrOutput() GraphQLApiLambdaAuthorizerConfigPtrOutput {
	return i.ToGraphQLApiLambdaAuthorizerConfigPtrOutputWithContext(context.Background())
}

func (i GraphQLApiLambdaAuthorizerConfigArgs) ToGraphQLApiLambdaAuthorizerConfigPtrOutputWithContext(ctx context.Context) GraphQLApiLambdaAuthorizerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiLambdaAuthorizerConfigOutput).ToGraphQLApiLambdaAuthorizerConfigPtrOutputWithContext(ctx)
}

// GraphQLApiLambdaAuthorizerConfigPtrInput is an input type that accepts GraphQLApiLambdaAuthorizerConfigArgs, GraphQLApiLambdaAuthorizerConfigPtr and GraphQLApiLambdaAuthorizerConfigPtrOutput values.
// You can construct a concrete instance of `GraphQLApiLambdaAuthorizerConfigPtrInput` via:
//
//          GraphQLApiLambdaAuthorizerConfigArgs{...}
//
//  or:
//
//          nil
type GraphQLApiLambdaAuthorizerConfigPtrInput interface {
	pulumi.Input

	ToGraphQLApiLambdaAuthorizerConfigPtrOutput() GraphQLApiLambdaAuthorizerConfigPtrOutput
	ToGraphQLApiLambdaAuthorizerConfigPtrOutputWithContext(context.Context) GraphQLApiLambdaAuthorizerConfigPtrOutput
}

type graphQLApiLambdaAuthorizerConfigPtrType GraphQLApiLambdaAuthorizerConfigArgs

func GraphQLApiLambdaAuthorizerConfigPtr(v *GraphQLApiLambdaAuthorizerConfigArgs) GraphQLApiLambdaAuthorizerConfigPtrInput {
	return (*graphQLApiLambdaAuthorizerConfigPtrType)(v)
}

func (*graphQLApiLambdaAuthorizerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiLambdaAuthorizerConfig)(nil)).Elem()
}

func (i *graphQLApiLambdaAuthorizerConfigPtrType) ToGraphQLApiLambdaAuthorizerConfigPtrOutput() GraphQLApiLambdaAuthorizerConfigPtrOutput {
	return i.ToGraphQLApiLambdaAuthorizerConfigPtrOutputWithContext(context.Background())
}

func (i *graphQLApiLambdaAuthorizerConfigPtrType) ToGraphQLApiLambdaAuthorizerConfigPtrOutputWithContext(ctx context.Context) GraphQLApiLambdaAuthorizerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiLambdaAuthorizerConfigPtrOutput)
}

type GraphQLApiLambdaAuthorizerConfigOutput struct{ *pulumi.OutputState }

func (GraphQLApiLambdaAuthorizerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiLambdaAuthorizerConfig)(nil)).Elem()
}

func (o GraphQLApiLambdaAuthorizerConfigOutput) ToGraphQLApiLambdaAuthorizerConfigOutput() GraphQLApiLambdaAuthorizerConfigOutput {
	return o
}

func (o GraphQLApiLambdaAuthorizerConfigOutput) ToGraphQLApiLambdaAuthorizerConfigOutputWithContext(ctx context.Context) GraphQLApiLambdaAuthorizerConfigOutput {
	return o
}

func (o GraphQLApiLambdaAuthorizerConfigOutput) ToGraphQLApiLambdaAuthorizerConfigPtrOutput() GraphQLApiLambdaAuthorizerConfigPtrOutput {
	return o.ToGraphQLApiLambdaAuthorizerConfigPtrOutputWithContext(context.Background())
}

func (o GraphQLApiLambdaAuthorizerConfigOutput) ToGraphQLApiLambdaAuthorizerConfigPtrOutputWithContext(ctx context.Context) GraphQLApiLambdaAuthorizerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GraphQLApiLambdaAuthorizerConfig) *GraphQLApiLambdaAuthorizerConfig {
		return &v
	}).(GraphQLApiLambdaAuthorizerConfigPtrOutput)
}

// The number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a `ttlOverride` key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.
func (o GraphQLApiLambdaAuthorizerConfigOutput) AuthorizerResultTtlInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GraphQLApiLambdaAuthorizerConfig) *int { return v.AuthorizerResultTtlInSeconds }).(pulumi.IntPtrOutput)
}

// The ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow `lambda:InvokeFunction` from service principal `appsync.amazonaws.com`.
func (o GraphQLApiLambdaAuthorizerConfigOutput) AuthorizerUri() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiLambdaAuthorizerConfig) string { return v.AuthorizerUri }).(pulumi.StringOutput)
}

// A regular expression for validation of tokens before the Lambda function is called.
func (o GraphQLApiLambdaAuthorizerConfigOutput) IdentityValidationExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiLambdaAuthorizerConfig) *string { return v.IdentityValidationExpression }).(pulumi.StringPtrOutput)
}

type GraphQLApiLambdaAuthorizerConfigPtrOutput struct{ *pulumi.OutputState }

func (GraphQLApiLambdaAuthorizerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiLambdaAuthorizerConfig)(nil)).Elem()
}

func (o GraphQLApiLambdaAuthorizerConfigPtrOutput) ToGraphQLApiLambdaAuthorizerConfigPtrOutput() GraphQLApiLambdaAuthorizerConfigPtrOutput {
	return o
}

func (o GraphQLApiLambdaAuthorizerConfigPtrOutput) ToGraphQLApiLambdaAuthorizerConfigPtrOutputWithContext(ctx context.Context) GraphQLApiLambdaAuthorizerConfigPtrOutput {
	return o
}

func (o GraphQLApiLambdaAuthorizerConfigPtrOutput) Elem() GraphQLApiLambdaAuthorizerConfigOutput {
	return o.ApplyT(func(v *GraphQLApiLambdaAuthorizerConfig) GraphQLApiLambdaAuthorizerConfig {
		if v != nil {
			return *v
		}
		var ret GraphQLApiLambdaAuthorizerConfig
		return ret
	}).(GraphQLApiLambdaAuthorizerConfigOutput)
}

// The number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a `ttlOverride` key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.
func (o GraphQLApiLambdaAuthorizerConfigPtrOutput) AuthorizerResultTtlInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GraphQLApiLambdaAuthorizerConfig) *int {
		if v == nil {
			return nil
		}
		return v.AuthorizerResultTtlInSeconds
	}).(pulumi.IntPtrOutput)
}

// The ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow `lambda:InvokeFunction` from service principal `appsync.amazonaws.com`.
func (o GraphQLApiLambdaAuthorizerConfigPtrOutput) AuthorizerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiLambdaAuthorizerConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AuthorizerUri
	}).(pulumi.StringPtrOutput)
}

// A regular expression for validation of tokens before the Lambda function is called.
func (o GraphQLApiLambdaAuthorizerConfigPtrOutput) IdentityValidationExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiLambdaAuthorizerConfig) *string {
		if v == nil {
			return nil
		}
		return v.IdentityValidationExpression
	}).(pulumi.StringPtrOutput)
}

type GraphQLApiLogConfig struct {
	// Amazon Resource Name of the service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account.
	CloudwatchLogsRoleArn string `pulumi:"cloudwatchLogsRoleArn"`
	// Set to TRUE to exclude sections that contain information such as headers, context, and evaluated mapping templates, regardless of logging  level. Valid values: `true`, `false`. Default value: `false`
	ExcludeVerboseContent *bool `pulumi:"excludeVerboseContent"`
	// Field logging level. Valid values: `ALL`, `ERROR`, `NONE`.
	FieldLogLevel string `pulumi:"fieldLogLevel"`
}

// GraphQLApiLogConfigInput is an input type that accepts GraphQLApiLogConfigArgs and GraphQLApiLogConfigOutput values.
// You can construct a concrete instance of `GraphQLApiLogConfigInput` via:
//
//          GraphQLApiLogConfigArgs{...}
type GraphQLApiLogConfigInput interface {
	pulumi.Input

	ToGraphQLApiLogConfigOutput() GraphQLApiLogConfigOutput
	ToGraphQLApiLogConfigOutputWithContext(context.Context) GraphQLApiLogConfigOutput
}

type GraphQLApiLogConfigArgs struct {
	// Amazon Resource Name of the service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account.
	CloudwatchLogsRoleArn pulumi.StringInput `pulumi:"cloudwatchLogsRoleArn"`
	// Set to TRUE to exclude sections that contain information such as headers, context, and evaluated mapping templates, regardless of logging  level. Valid values: `true`, `false`. Default value: `false`
	ExcludeVerboseContent pulumi.BoolPtrInput `pulumi:"excludeVerboseContent"`
	// Field logging level. Valid values: `ALL`, `ERROR`, `NONE`.
	FieldLogLevel pulumi.StringInput `pulumi:"fieldLogLevel"`
}

func (GraphQLApiLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiLogConfig)(nil)).Elem()
}

func (i GraphQLApiLogConfigArgs) ToGraphQLApiLogConfigOutput() GraphQLApiLogConfigOutput {
	return i.ToGraphQLApiLogConfigOutputWithContext(context.Background())
}

func (i GraphQLApiLogConfigArgs) ToGraphQLApiLogConfigOutputWithContext(ctx context.Context) GraphQLApiLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiLogConfigOutput)
}

func (i GraphQLApiLogConfigArgs) ToGraphQLApiLogConfigPtrOutput() GraphQLApiLogConfigPtrOutput {
	return i.ToGraphQLApiLogConfigPtrOutputWithContext(context.Background())
}

func (i GraphQLApiLogConfigArgs) ToGraphQLApiLogConfigPtrOutputWithContext(ctx context.Context) GraphQLApiLogConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiLogConfigOutput).ToGraphQLApiLogConfigPtrOutputWithContext(ctx)
}

// GraphQLApiLogConfigPtrInput is an input type that accepts GraphQLApiLogConfigArgs, GraphQLApiLogConfigPtr and GraphQLApiLogConfigPtrOutput values.
// You can construct a concrete instance of `GraphQLApiLogConfigPtrInput` via:
//
//          GraphQLApiLogConfigArgs{...}
//
//  or:
//
//          nil
type GraphQLApiLogConfigPtrInput interface {
	pulumi.Input

	ToGraphQLApiLogConfigPtrOutput() GraphQLApiLogConfigPtrOutput
	ToGraphQLApiLogConfigPtrOutputWithContext(context.Context) GraphQLApiLogConfigPtrOutput
}

type graphQLApiLogConfigPtrType GraphQLApiLogConfigArgs

func GraphQLApiLogConfigPtr(v *GraphQLApiLogConfigArgs) GraphQLApiLogConfigPtrInput {
	return (*graphQLApiLogConfigPtrType)(v)
}

func (*graphQLApiLogConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiLogConfig)(nil)).Elem()
}

func (i *graphQLApiLogConfigPtrType) ToGraphQLApiLogConfigPtrOutput() GraphQLApiLogConfigPtrOutput {
	return i.ToGraphQLApiLogConfigPtrOutputWithContext(context.Background())
}

func (i *graphQLApiLogConfigPtrType) ToGraphQLApiLogConfigPtrOutputWithContext(ctx context.Context) GraphQLApiLogConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiLogConfigPtrOutput)
}

type GraphQLApiLogConfigOutput struct{ *pulumi.OutputState }

func (GraphQLApiLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiLogConfig)(nil)).Elem()
}

func (o GraphQLApiLogConfigOutput) ToGraphQLApiLogConfigOutput() GraphQLApiLogConfigOutput {
	return o
}

func (o GraphQLApiLogConfigOutput) ToGraphQLApiLogConfigOutputWithContext(ctx context.Context) GraphQLApiLogConfigOutput {
	return o
}

func (o GraphQLApiLogConfigOutput) ToGraphQLApiLogConfigPtrOutput() GraphQLApiLogConfigPtrOutput {
	return o.ToGraphQLApiLogConfigPtrOutputWithContext(context.Background())
}

func (o GraphQLApiLogConfigOutput) ToGraphQLApiLogConfigPtrOutputWithContext(ctx context.Context) GraphQLApiLogConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GraphQLApiLogConfig) *GraphQLApiLogConfig {
		return &v
	}).(GraphQLApiLogConfigPtrOutput)
}

// Amazon Resource Name of the service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account.
func (o GraphQLApiLogConfigOutput) CloudwatchLogsRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiLogConfig) string { return v.CloudwatchLogsRoleArn }).(pulumi.StringOutput)
}

// Set to TRUE to exclude sections that contain information such as headers, context, and evaluated mapping templates, regardless of logging  level. Valid values: `true`, `false`. Default value: `false`
func (o GraphQLApiLogConfigOutput) ExcludeVerboseContent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GraphQLApiLogConfig) *bool { return v.ExcludeVerboseContent }).(pulumi.BoolPtrOutput)
}

// Field logging level. Valid values: `ALL`, `ERROR`, `NONE`.
func (o GraphQLApiLogConfigOutput) FieldLogLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiLogConfig) string { return v.FieldLogLevel }).(pulumi.StringOutput)
}

type GraphQLApiLogConfigPtrOutput struct{ *pulumi.OutputState }

func (GraphQLApiLogConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiLogConfig)(nil)).Elem()
}

func (o GraphQLApiLogConfigPtrOutput) ToGraphQLApiLogConfigPtrOutput() GraphQLApiLogConfigPtrOutput {
	return o
}

func (o GraphQLApiLogConfigPtrOutput) ToGraphQLApiLogConfigPtrOutputWithContext(ctx context.Context) GraphQLApiLogConfigPtrOutput {
	return o
}

func (o GraphQLApiLogConfigPtrOutput) Elem() GraphQLApiLogConfigOutput {
	return o.ApplyT(func(v *GraphQLApiLogConfig) GraphQLApiLogConfig {
		if v != nil {
			return *v
		}
		var ret GraphQLApiLogConfig
		return ret
	}).(GraphQLApiLogConfigOutput)
}

// Amazon Resource Name of the service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account.
func (o GraphQLApiLogConfigPtrOutput) CloudwatchLogsRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiLogConfig) *string {
		if v == nil {
			return nil
		}
		return &v.CloudwatchLogsRoleArn
	}).(pulumi.StringPtrOutput)
}

// Set to TRUE to exclude sections that contain information such as headers, context, and evaluated mapping templates, regardless of logging  level. Valid values: `true`, `false`. Default value: `false`
func (o GraphQLApiLogConfigPtrOutput) ExcludeVerboseContent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GraphQLApiLogConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ExcludeVerboseContent
	}).(pulumi.BoolPtrOutput)
}

// Field logging level. Valid values: `ALL`, `ERROR`, `NONE`.
func (o GraphQLApiLogConfigPtrOutput) FieldLogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiLogConfig) *string {
		if v == nil {
			return nil
		}
		return &v.FieldLogLevel
	}).(pulumi.StringPtrOutput)
}

type GraphQLApiOpenidConnectConfig struct {
	// Number of milliseconds a token is valid after being authenticated.
	AuthTtl *int `pulumi:"authTtl"`
	// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
	ClientId *string `pulumi:"clientId"`
	// Number of milliseconds a token is valid after being issued to a user.
	IatTtl *int `pulumi:"iatTtl"`
	// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
	Issuer string `pulumi:"issuer"`
}

// GraphQLApiOpenidConnectConfigInput is an input type that accepts GraphQLApiOpenidConnectConfigArgs and GraphQLApiOpenidConnectConfigOutput values.
// You can construct a concrete instance of `GraphQLApiOpenidConnectConfigInput` via:
//
//          GraphQLApiOpenidConnectConfigArgs{...}
type GraphQLApiOpenidConnectConfigInput interface {
	pulumi.Input

	ToGraphQLApiOpenidConnectConfigOutput() GraphQLApiOpenidConnectConfigOutput
	ToGraphQLApiOpenidConnectConfigOutputWithContext(context.Context) GraphQLApiOpenidConnectConfigOutput
}

type GraphQLApiOpenidConnectConfigArgs struct {
	// Number of milliseconds a token is valid after being authenticated.
	AuthTtl pulumi.IntPtrInput `pulumi:"authTtl"`
	// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Number of milliseconds a token is valid after being issued to a user.
	IatTtl pulumi.IntPtrInput `pulumi:"iatTtl"`
	// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
	Issuer pulumi.StringInput `pulumi:"issuer"`
}

func (GraphQLApiOpenidConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiOpenidConnectConfig)(nil)).Elem()
}

func (i GraphQLApiOpenidConnectConfigArgs) ToGraphQLApiOpenidConnectConfigOutput() GraphQLApiOpenidConnectConfigOutput {
	return i.ToGraphQLApiOpenidConnectConfigOutputWithContext(context.Background())
}

func (i GraphQLApiOpenidConnectConfigArgs) ToGraphQLApiOpenidConnectConfigOutputWithContext(ctx context.Context) GraphQLApiOpenidConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiOpenidConnectConfigOutput)
}

func (i GraphQLApiOpenidConnectConfigArgs) ToGraphQLApiOpenidConnectConfigPtrOutput() GraphQLApiOpenidConnectConfigPtrOutput {
	return i.ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(context.Background())
}

func (i GraphQLApiOpenidConnectConfigArgs) ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(ctx context.Context) GraphQLApiOpenidConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiOpenidConnectConfigOutput).ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(ctx)
}

// GraphQLApiOpenidConnectConfigPtrInput is an input type that accepts GraphQLApiOpenidConnectConfigArgs, GraphQLApiOpenidConnectConfigPtr and GraphQLApiOpenidConnectConfigPtrOutput values.
// You can construct a concrete instance of `GraphQLApiOpenidConnectConfigPtrInput` via:
//
//          GraphQLApiOpenidConnectConfigArgs{...}
//
//  or:
//
//          nil
type GraphQLApiOpenidConnectConfigPtrInput interface {
	pulumi.Input

	ToGraphQLApiOpenidConnectConfigPtrOutput() GraphQLApiOpenidConnectConfigPtrOutput
	ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(context.Context) GraphQLApiOpenidConnectConfigPtrOutput
}

type graphQLApiOpenidConnectConfigPtrType GraphQLApiOpenidConnectConfigArgs

func GraphQLApiOpenidConnectConfigPtr(v *GraphQLApiOpenidConnectConfigArgs) GraphQLApiOpenidConnectConfigPtrInput {
	return (*graphQLApiOpenidConnectConfigPtrType)(v)
}

func (*graphQLApiOpenidConnectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiOpenidConnectConfig)(nil)).Elem()
}

func (i *graphQLApiOpenidConnectConfigPtrType) ToGraphQLApiOpenidConnectConfigPtrOutput() GraphQLApiOpenidConnectConfigPtrOutput {
	return i.ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(context.Background())
}

func (i *graphQLApiOpenidConnectConfigPtrType) ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(ctx context.Context) GraphQLApiOpenidConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiOpenidConnectConfigPtrOutput)
}

type GraphQLApiOpenidConnectConfigOutput struct{ *pulumi.OutputState }

func (GraphQLApiOpenidConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiOpenidConnectConfig)(nil)).Elem()
}

func (o GraphQLApiOpenidConnectConfigOutput) ToGraphQLApiOpenidConnectConfigOutput() GraphQLApiOpenidConnectConfigOutput {
	return o
}

func (o GraphQLApiOpenidConnectConfigOutput) ToGraphQLApiOpenidConnectConfigOutputWithContext(ctx context.Context) GraphQLApiOpenidConnectConfigOutput {
	return o
}

func (o GraphQLApiOpenidConnectConfigOutput) ToGraphQLApiOpenidConnectConfigPtrOutput() GraphQLApiOpenidConnectConfigPtrOutput {
	return o.ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(context.Background())
}

func (o GraphQLApiOpenidConnectConfigOutput) ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(ctx context.Context) GraphQLApiOpenidConnectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GraphQLApiOpenidConnectConfig) *GraphQLApiOpenidConnectConfig {
		return &v
	}).(GraphQLApiOpenidConnectConfigPtrOutput)
}

// Number of milliseconds a token is valid after being authenticated.
func (o GraphQLApiOpenidConnectConfigOutput) AuthTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GraphQLApiOpenidConnectConfig) *int { return v.AuthTtl }).(pulumi.IntPtrOutput)
}

// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
func (o GraphQLApiOpenidConnectConfigOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiOpenidConnectConfig) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Number of milliseconds a token is valid after being issued to a user.
func (o GraphQLApiOpenidConnectConfigOutput) IatTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GraphQLApiOpenidConnectConfig) *int { return v.IatTtl }).(pulumi.IntPtrOutput)
}

// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
func (o GraphQLApiOpenidConnectConfigOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiOpenidConnectConfig) string { return v.Issuer }).(pulumi.StringOutput)
}

type GraphQLApiOpenidConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (GraphQLApiOpenidConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiOpenidConnectConfig)(nil)).Elem()
}

func (o GraphQLApiOpenidConnectConfigPtrOutput) ToGraphQLApiOpenidConnectConfigPtrOutput() GraphQLApiOpenidConnectConfigPtrOutput {
	return o
}

func (o GraphQLApiOpenidConnectConfigPtrOutput) ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(ctx context.Context) GraphQLApiOpenidConnectConfigPtrOutput {
	return o
}

func (o GraphQLApiOpenidConnectConfigPtrOutput) Elem() GraphQLApiOpenidConnectConfigOutput {
	return o.ApplyT(func(v *GraphQLApiOpenidConnectConfig) GraphQLApiOpenidConnectConfig {
		if v != nil {
			return *v
		}
		var ret GraphQLApiOpenidConnectConfig
		return ret
	}).(GraphQLApiOpenidConnectConfigOutput)
}

// Number of milliseconds a token is valid after being authenticated.
func (o GraphQLApiOpenidConnectConfigPtrOutput) AuthTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GraphQLApiOpenidConnectConfig) *int {
		if v == nil {
			return nil
		}
		return v.AuthTtl
	}).(pulumi.IntPtrOutput)
}

// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
func (o GraphQLApiOpenidConnectConfigPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiOpenidConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Number of milliseconds a token is valid after being issued to a user.
func (o GraphQLApiOpenidConnectConfigPtrOutput) IatTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GraphQLApiOpenidConnectConfig) *int {
		if v == nil {
			return nil
		}
		return v.IatTtl
	}).(pulumi.IntPtrOutput)
}

// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
func (o GraphQLApiOpenidConnectConfigPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiOpenidConnectConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Issuer
	}).(pulumi.StringPtrOutput)
}

type GraphQLApiUserPoolConfig struct {
	// A regular expression for validating the incoming Amazon Cognito User Pool app client ID.
	AppIdClientRegex *string `pulumi:"appIdClientRegex"`
	// The AWS region in which the user pool was created.
	AwsRegion *string `pulumi:"awsRegion"`
	// The action that you want your GraphQL API to take when a request that uses Amazon Cognito User Pool authentication doesn't match the Amazon Cognito User Pool configuration. Valid: `ALLOW` and `DENY`
	DefaultAction string `pulumi:"defaultAction"`
	// The user pool ID.
	UserPoolId string `pulumi:"userPoolId"`
}

// GraphQLApiUserPoolConfigInput is an input type that accepts GraphQLApiUserPoolConfigArgs and GraphQLApiUserPoolConfigOutput values.
// You can construct a concrete instance of `GraphQLApiUserPoolConfigInput` via:
//
//          GraphQLApiUserPoolConfigArgs{...}
type GraphQLApiUserPoolConfigInput interface {
	pulumi.Input

	ToGraphQLApiUserPoolConfigOutput() GraphQLApiUserPoolConfigOutput
	ToGraphQLApiUserPoolConfigOutputWithContext(context.Context) GraphQLApiUserPoolConfigOutput
}

type GraphQLApiUserPoolConfigArgs struct {
	// A regular expression for validating the incoming Amazon Cognito User Pool app client ID.
	AppIdClientRegex pulumi.StringPtrInput `pulumi:"appIdClientRegex"`
	// The AWS region in which the user pool was created.
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// The action that you want your GraphQL API to take when a request that uses Amazon Cognito User Pool authentication doesn't match the Amazon Cognito User Pool configuration. Valid: `ALLOW` and `DENY`
	DefaultAction pulumi.StringInput `pulumi:"defaultAction"`
	// The user pool ID.
	UserPoolId pulumi.StringInput `pulumi:"userPoolId"`
}

func (GraphQLApiUserPoolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiUserPoolConfig)(nil)).Elem()
}

func (i GraphQLApiUserPoolConfigArgs) ToGraphQLApiUserPoolConfigOutput() GraphQLApiUserPoolConfigOutput {
	return i.ToGraphQLApiUserPoolConfigOutputWithContext(context.Background())
}

func (i GraphQLApiUserPoolConfigArgs) ToGraphQLApiUserPoolConfigOutputWithContext(ctx context.Context) GraphQLApiUserPoolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiUserPoolConfigOutput)
}

func (i GraphQLApiUserPoolConfigArgs) ToGraphQLApiUserPoolConfigPtrOutput() GraphQLApiUserPoolConfigPtrOutput {
	return i.ToGraphQLApiUserPoolConfigPtrOutputWithContext(context.Background())
}

func (i GraphQLApiUserPoolConfigArgs) ToGraphQLApiUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiUserPoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiUserPoolConfigOutput).ToGraphQLApiUserPoolConfigPtrOutputWithContext(ctx)
}

// GraphQLApiUserPoolConfigPtrInput is an input type that accepts GraphQLApiUserPoolConfigArgs, GraphQLApiUserPoolConfigPtr and GraphQLApiUserPoolConfigPtrOutput values.
// You can construct a concrete instance of `GraphQLApiUserPoolConfigPtrInput` via:
//
//          GraphQLApiUserPoolConfigArgs{...}
//
//  or:
//
//          nil
type GraphQLApiUserPoolConfigPtrInput interface {
	pulumi.Input

	ToGraphQLApiUserPoolConfigPtrOutput() GraphQLApiUserPoolConfigPtrOutput
	ToGraphQLApiUserPoolConfigPtrOutputWithContext(context.Context) GraphQLApiUserPoolConfigPtrOutput
}

type graphQLApiUserPoolConfigPtrType GraphQLApiUserPoolConfigArgs

func GraphQLApiUserPoolConfigPtr(v *GraphQLApiUserPoolConfigArgs) GraphQLApiUserPoolConfigPtrInput {
	return (*graphQLApiUserPoolConfigPtrType)(v)
}

func (*graphQLApiUserPoolConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiUserPoolConfig)(nil)).Elem()
}

func (i *graphQLApiUserPoolConfigPtrType) ToGraphQLApiUserPoolConfigPtrOutput() GraphQLApiUserPoolConfigPtrOutput {
	return i.ToGraphQLApiUserPoolConfigPtrOutputWithContext(context.Background())
}

func (i *graphQLApiUserPoolConfigPtrType) ToGraphQLApiUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiUserPoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiUserPoolConfigPtrOutput)
}

type GraphQLApiUserPoolConfigOutput struct{ *pulumi.OutputState }

func (GraphQLApiUserPoolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiUserPoolConfig)(nil)).Elem()
}

func (o GraphQLApiUserPoolConfigOutput) ToGraphQLApiUserPoolConfigOutput() GraphQLApiUserPoolConfigOutput {
	return o
}

func (o GraphQLApiUserPoolConfigOutput) ToGraphQLApiUserPoolConfigOutputWithContext(ctx context.Context) GraphQLApiUserPoolConfigOutput {
	return o
}

func (o GraphQLApiUserPoolConfigOutput) ToGraphQLApiUserPoolConfigPtrOutput() GraphQLApiUserPoolConfigPtrOutput {
	return o.ToGraphQLApiUserPoolConfigPtrOutputWithContext(context.Background())
}

func (o GraphQLApiUserPoolConfigOutput) ToGraphQLApiUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiUserPoolConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GraphQLApiUserPoolConfig) *GraphQLApiUserPoolConfig {
		return &v
	}).(GraphQLApiUserPoolConfigPtrOutput)
}

// A regular expression for validating the incoming Amazon Cognito User Pool app client ID.
func (o GraphQLApiUserPoolConfigOutput) AppIdClientRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiUserPoolConfig) *string { return v.AppIdClientRegex }).(pulumi.StringPtrOutput)
}

// The AWS region in which the user pool was created.
func (o GraphQLApiUserPoolConfigOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiUserPoolConfig) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// The action that you want your GraphQL API to take when a request that uses Amazon Cognito User Pool authentication doesn't match the Amazon Cognito User Pool configuration. Valid: `ALLOW` and `DENY`
func (o GraphQLApiUserPoolConfigOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiUserPoolConfig) string { return v.DefaultAction }).(pulumi.StringOutput)
}

// The user pool ID.
func (o GraphQLApiUserPoolConfigOutput) UserPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiUserPoolConfig) string { return v.UserPoolId }).(pulumi.StringOutput)
}

type GraphQLApiUserPoolConfigPtrOutput struct{ *pulumi.OutputState }

func (GraphQLApiUserPoolConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiUserPoolConfig)(nil)).Elem()
}

func (o GraphQLApiUserPoolConfigPtrOutput) ToGraphQLApiUserPoolConfigPtrOutput() GraphQLApiUserPoolConfigPtrOutput {
	return o
}

func (o GraphQLApiUserPoolConfigPtrOutput) ToGraphQLApiUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiUserPoolConfigPtrOutput {
	return o
}

func (o GraphQLApiUserPoolConfigPtrOutput) Elem() GraphQLApiUserPoolConfigOutput {
	return o.ApplyT(func(v *GraphQLApiUserPoolConfig) GraphQLApiUserPoolConfig {
		if v != nil {
			return *v
		}
		var ret GraphQLApiUserPoolConfig
		return ret
	}).(GraphQLApiUserPoolConfigOutput)
}

// A regular expression for validating the incoming Amazon Cognito User Pool app client ID.
func (o GraphQLApiUserPoolConfigPtrOutput) AppIdClientRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiUserPoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.AppIdClientRegex
	}).(pulumi.StringPtrOutput)
}

// The AWS region in which the user pool was created.
func (o GraphQLApiUserPoolConfigPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiUserPoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// The action that you want your GraphQL API to take when a request that uses Amazon Cognito User Pool authentication doesn't match the Amazon Cognito User Pool configuration. Valid: `ALLOW` and `DENY`
func (o GraphQLApiUserPoolConfigPtrOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiUserPoolConfig) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultAction
	}).(pulumi.StringPtrOutput)
}

// The user pool ID.
func (o GraphQLApiUserPoolConfigPtrOutput) UserPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiUserPoolConfig) *string {
		if v == nil {
			return nil
		}
		return &v.UserPoolId
	}).(pulumi.StringPtrOutput)
}

type ResolverCachingConfig struct {
	// The list of caching key.
	CachingKeys []string `pulumi:"cachingKeys"`
	// The TTL in seconds.
	Ttl *int `pulumi:"ttl"`
}

// ResolverCachingConfigInput is an input type that accepts ResolverCachingConfigArgs and ResolverCachingConfigOutput values.
// You can construct a concrete instance of `ResolverCachingConfigInput` via:
//
//          ResolverCachingConfigArgs{...}
type ResolverCachingConfigInput interface {
	pulumi.Input

	ToResolverCachingConfigOutput() ResolverCachingConfigOutput
	ToResolverCachingConfigOutputWithContext(context.Context) ResolverCachingConfigOutput
}

type ResolverCachingConfigArgs struct {
	// The list of caching key.
	CachingKeys pulumi.StringArrayInput `pulumi:"cachingKeys"`
	// The TTL in seconds.
	Ttl pulumi.IntPtrInput `pulumi:"ttl"`
}

func (ResolverCachingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverCachingConfig)(nil)).Elem()
}

func (i ResolverCachingConfigArgs) ToResolverCachingConfigOutput() ResolverCachingConfigOutput {
	return i.ToResolverCachingConfigOutputWithContext(context.Background())
}

func (i ResolverCachingConfigArgs) ToResolverCachingConfigOutputWithContext(ctx context.Context) ResolverCachingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverCachingConfigOutput)
}

func (i ResolverCachingConfigArgs) ToResolverCachingConfigPtrOutput() ResolverCachingConfigPtrOutput {
	return i.ToResolverCachingConfigPtrOutputWithContext(context.Background())
}

func (i ResolverCachingConfigArgs) ToResolverCachingConfigPtrOutputWithContext(ctx context.Context) ResolverCachingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverCachingConfigOutput).ToResolverCachingConfigPtrOutputWithContext(ctx)
}

// ResolverCachingConfigPtrInput is an input type that accepts ResolverCachingConfigArgs, ResolverCachingConfigPtr and ResolverCachingConfigPtrOutput values.
// You can construct a concrete instance of `ResolverCachingConfigPtrInput` via:
//
//          ResolverCachingConfigArgs{...}
//
//  or:
//
//          nil
type ResolverCachingConfigPtrInput interface {
	pulumi.Input

	ToResolverCachingConfigPtrOutput() ResolverCachingConfigPtrOutput
	ToResolverCachingConfigPtrOutputWithContext(context.Context) ResolverCachingConfigPtrOutput
}

type resolverCachingConfigPtrType ResolverCachingConfigArgs

func ResolverCachingConfigPtr(v *ResolverCachingConfigArgs) ResolverCachingConfigPtrInput {
	return (*resolverCachingConfigPtrType)(v)
}

func (*resolverCachingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverCachingConfig)(nil)).Elem()
}

func (i *resolverCachingConfigPtrType) ToResolverCachingConfigPtrOutput() ResolverCachingConfigPtrOutput {
	return i.ToResolverCachingConfigPtrOutputWithContext(context.Background())
}

func (i *resolverCachingConfigPtrType) ToResolverCachingConfigPtrOutputWithContext(ctx context.Context) ResolverCachingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverCachingConfigPtrOutput)
}

type ResolverCachingConfigOutput struct{ *pulumi.OutputState }

func (ResolverCachingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverCachingConfig)(nil)).Elem()
}

func (o ResolverCachingConfigOutput) ToResolverCachingConfigOutput() ResolverCachingConfigOutput {
	return o
}

func (o ResolverCachingConfigOutput) ToResolverCachingConfigOutputWithContext(ctx context.Context) ResolverCachingConfigOutput {
	return o
}

func (o ResolverCachingConfigOutput) ToResolverCachingConfigPtrOutput() ResolverCachingConfigPtrOutput {
	return o.ToResolverCachingConfigPtrOutputWithContext(context.Background())
}

func (o ResolverCachingConfigOutput) ToResolverCachingConfigPtrOutputWithContext(ctx context.Context) ResolverCachingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResolverCachingConfig) *ResolverCachingConfig {
		return &v
	}).(ResolverCachingConfigPtrOutput)
}

// The list of caching key.
func (o ResolverCachingConfigOutput) CachingKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResolverCachingConfig) []string { return v.CachingKeys }).(pulumi.StringArrayOutput)
}

// The TTL in seconds.
func (o ResolverCachingConfigOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ResolverCachingConfig) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

type ResolverCachingConfigPtrOutput struct{ *pulumi.OutputState }

func (ResolverCachingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverCachingConfig)(nil)).Elem()
}

func (o ResolverCachingConfigPtrOutput) ToResolverCachingConfigPtrOutput() ResolverCachingConfigPtrOutput {
	return o
}

func (o ResolverCachingConfigPtrOutput) ToResolverCachingConfigPtrOutputWithContext(ctx context.Context) ResolverCachingConfigPtrOutput {
	return o
}

func (o ResolverCachingConfigPtrOutput) Elem() ResolverCachingConfigOutput {
	return o.ApplyT(func(v *ResolverCachingConfig) ResolverCachingConfig {
		if v != nil {
			return *v
		}
		var ret ResolverCachingConfig
		return ret
	}).(ResolverCachingConfigOutput)
}

// The list of caching key.
func (o ResolverCachingConfigPtrOutput) CachingKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResolverCachingConfig) []string {
		if v == nil {
			return nil
		}
		return v.CachingKeys
	}).(pulumi.StringArrayOutput)
}

// The TTL in seconds.
func (o ResolverCachingConfigPtrOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResolverCachingConfig) *int {
		if v == nil {
			return nil
		}
		return v.Ttl
	}).(pulumi.IntPtrOutput)
}

type ResolverPipelineConfig struct {
	// The list of Function ID.
	Functions []string `pulumi:"functions"`
}

// ResolverPipelineConfigInput is an input type that accepts ResolverPipelineConfigArgs and ResolverPipelineConfigOutput values.
// You can construct a concrete instance of `ResolverPipelineConfigInput` via:
//
//          ResolverPipelineConfigArgs{...}
type ResolverPipelineConfigInput interface {
	pulumi.Input

	ToResolverPipelineConfigOutput() ResolverPipelineConfigOutput
	ToResolverPipelineConfigOutputWithContext(context.Context) ResolverPipelineConfigOutput
}

type ResolverPipelineConfigArgs struct {
	// The list of Function ID.
	Functions pulumi.StringArrayInput `pulumi:"functions"`
}

func (ResolverPipelineConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverPipelineConfig)(nil)).Elem()
}

func (i ResolverPipelineConfigArgs) ToResolverPipelineConfigOutput() ResolverPipelineConfigOutput {
	return i.ToResolverPipelineConfigOutputWithContext(context.Background())
}

func (i ResolverPipelineConfigArgs) ToResolverPipelineConfigOutputWithContext(ctx context.Context) ResolverPipelineConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverPipelineConfigOutput)
}

func (i ResolverPipelineConfigArgs) ToResolverPipelineConfigPtrOutput() ResolverPipelineConfigPtrOutput {
	return i.ToResolverPipelineConfigPtrOutputWithContext(context.Background())
}

func (i ResolverPipelineConfigArgs) ToResolverPipelineConfigPtrOutputWithContext(ctx context.Context) ResolverPipelineConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverPipelineConfigOutput).ToResolverPipelineConfigPtrOutputWithContext(ctx)
}

// ResolverPipelineConfigPtrInput is an input type that accepts ResolverPipelineConfigArgs, ResolverPipelineConfigPtr and ResolverPipelineConfigPtrOutput values.
// You can construct a concrete instance of `ResolverPipelineConfigPtrInput` via:
//
//          ResolverPipelineConfigArgs{...}
//
//  or:
//
//          nil
type ResolverPipelineConfigPtrInput interface {
	pulumi.Input

	ToResolverPipelineConfigPtrOutput() ResolverPipelineConfigPtrOutput
	ToResolverPipelineConfigPtrOutputWithContext(context.Context) ResolverPipelineConfigPtrOutput
}

type resolverPipelineConfigPtrType ResolverPipelineConfigArgs

func ResolverPipelineConfigPtr(v *ResolverPipelineConfigArgs) ResolverPipelineConfigPtrInput {
	return (*resolverPipelineConfigPtrType)(v)
}

func (*resolverPipelineConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverPipelineConfig)(nil)).Elem()
}

func (i *resolverPipelineConfigPtrType) ToResolverPipelineConfigPtrOutput() ResolverPipelineConfigPtrOutput {
	return i.ToResolverPipelineConfigPtrOutputWithContext(context.Background())
}

func (i *resolverPipelineConfigPtrType) ToResolverPipelineConfigPtrOutputWithContext(ctx context.Context) ResolverPipelineConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverPipelineConfigPtrOutput)
}

type ResolverPipelineConfigOutput struct{ *pulumi.OutputState }

func (ResolverPipelineConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverPipelineConfig)(nil)).Elem()
}

func (o ResolverPipelineConfigOutput) ToResolverPipelineConfigOutput() ResolverPipelineConfigOutput {
	return o
}

func (o ResolverPipelineConfigOutput) ToResolverPipelineConfigOutputWithContext(ctx context.Context) ResolverPipelineConfigOutput {
	return o
}

func (o ResolverPipelineConfigOutput) ToResolverPipelineConfigPtrOutput() ResolverPipelineConfigPtrOutput {
	return o.ToResolverPipelineConfigPtrOutputWithContext(context.Background())
}

func (o ResolverPipelineConfigOutput) ToResolverPipelineConfigPtrOutputWithContext(ctx context.Context) ResolverPipelineConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResolverPipelineConfig) *ResolverPipelineConfig {
		return &v
	}).(ResolverPipelineConfigPtrOutput)
}

// The list of Function ID.
func (o ResolverPipelineConfigOutput) Functions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResolverPipelineConfig) []string { return v.Functions }).(pulumi.StringArrayOutput)
}

type ResolverPipelineConfigPtrOutput struct{ *pulumi.OutputState }

func (ResolverPipelineConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverPipelineConfig)(nil)).Elem()
}

func (o ResolverPipelineConfigPtrOutput) ToResolverPipelineConfigPtrOutput() ResolverPipelineConfigPtrOutput {
	return o
}

func (o ResolverPipelineConfigPtrOutput) ToResolverPipelineConfigPtrOutputWithContext(ctx context.Context) ResolverPipelineConfigPtrOutput {
	return o
}

func (o ResolverPipelineConfigPtrOutput) Elem() ResolverPipelineConfigOutput {
	return o.ApplyT(func(v *ResolverPipelineConfig) ResolverPipelineConfig {
		if v != nil {
			return *v
		}
		var ret ResolverPipelineConfig
		return ret
	}).(ResolverPipelineConfigOutput)
}

// The list of Function ID.
func (o ResolverPipelineConfigPtrOutput) Functions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResolverPipelineConfig) []string {
		if v == nil {
			return nil
		}
		return v.Functions
	}).(pulumi.StringArrayOutput)
}

type ResolverSyncConfig struct {
	// The Conflict Detection strategy to use. Valid values are `NONE` and `VERSION`.
	ConflictDetection *string `pulumi:"conflictDetection"`
	// The Conflict Resolution strategy to perform in the event of a conflict. Valid values are `NONE`, `OPTIMISTIC_CONCURRENCY`, `AUTOMERGE`, and `LAMBDA`.
	ConflictHandler *string `pulumi:"conflictHandler"`
	// The Lambda Conflict Handler Config when configuring `LAMBDA` as the Conflict Handler. See Lambda Conflict Handler Config.
	LambdaConflictHandlerConfig *ResolverSyncConfigLambdaConflictHandlerConfig `pulumi:"lambdaConflictHandlerConfig"`
}

// ResolverSyncConfigInput is an input type that accepts ResolverSyncConfigArgs and ResolverSyncConfigOutput values.
// You can construct a concrete instance of `ResolverSyncConfigInput` via:
//
//          ResolverSyncConfigArgs{...}
type ResolverSyncConfigInput interface {
	pulumi.Input

	ToResolverSyncConfigOutput() ResolverSyncConfigOutput
	ToResolverSyncConfigOutputWithContext(context.Context) ResolverSyncConfigOutput
}

type ResolverSyncConfigArgs struct {
	// The Conflict Detection strategy to use. Valid values are `NONE` and `VERSION`.
	ConflictDetection pulumi.StringPtrInput `pulumi:"conflictDetection"`
	// The Conflict Resolution strategy to perform in the event of a conflict. Valid values are `NONE`, `OPTIMISTIC_CONCURRENCY`, `AUTOMERGE`, and `LAMBDA`.
	ConflictHandler pulumi.StringPtrInput `pulumi:"conflictHandler"`
	// The Lambda Conflict Handler Config when configuring `LAMBDA` as the Conflict Handler. See Lambda Conflict Handler Config.
	LambdaConflictHandlerConfig ResolverSyncConfigLambdaConflictHandlerConfigPtrInput `pulumi:"lambdaConflictHandlerConfig"`
}

func (ResolverSyncConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverSyncConfig)(nil)).Elem()
}

func (i ResolverSyncConfigArgs) ToResolverSyncConfigOutput() ResolverSyncConfigOutput {
	return i.ToResolverSyncConfigOutputWithContext(context.Background())
}

func (i ResolverSyncConfigArgs) ToResolverSyncConfigOutputWithContext(ctx context.Context) ResolverSyncConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverSyncConfigOutput)
}

func (i ResolverSyncConfigArgs) ToResolverSyncConfigPtrOutput() ResolverSyncConfigPtrOutput {
	return i.ToResolverSyncConfigPtrOutputWithContext(context.Background())
}

func (i ResolverSyncConfigArgs) ToResolverSyncConfigPtrOutputWithContext(ctx context.Context) ResolverSyncConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverSyncConfigOutput).ToResolverSyncConfigPtrOutputWithContext(ctx)
}

// ResolverSyncConfigPtrInput is an input type that accepts ResolverSyncConfigArgs, ResolverSyncConfigPtr and ResolverSyncConfigPtrOutput values.
// You can construct a concrete instance of `ResolverSyncConfigPtrInput` via:
//
//          ResolverSyncConfigArgs{...}
//
//  or:
//
//          nil
type ResolverSyncConfigPtrInput interface {
	pulumi.Input

	ToResolverSyncConfigPtrOutput() ResolverSyncConfigPtrOutput
	ToResolverSyncConfigPtrOutputWithContext(context.Context) ResolverSyncConfigPtrOutput
}

type resolverSyncConfigPtrType ResolverSyncConfigArgs

func ResolverSyncConfigPtr(v *ResolverSyncConfigArgs) ResolverSyncConfigPtrInput {
	return (*resolverSyncConfigPtrType)(v)
}

func (*resolverSyncConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverSyncConfig)(nil)).Elem()
}

func (i *resolverSyncConfigPtrType) ToResolverSyncConfigPtrOutput() ResolverSyncConfigPtrOutput {
	return i.ToResolverSyncConfigPtrOutputWithContext(context.Background())
}

func (i *resolverSyncConfigPtrType) ToResolverSyncConfigPtrOutputWithContext(ctx context.Context) ResolverSyncConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverSyncConfigPtrOutput)
}

type ResolverSyncConfigOutput struct{ *pulumi.OutputState }

func (ResolverSyncConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverSyncConfig)(nil)).Elem()
}

func (o ResolverSyncConfigOutput) ToResolverSyncConfigOutput() ResolverSyncConfigOutput {
	return o
}

func (o ResolverSyncConfigOutput) ToResolverSyncConfigOutputWithContext(ctx context.Context) ResolverSyncConfigOutput {
	return o
}

func (o ResolverSyncConfigOutput) ToResolverSyncConfigPtrOutput() ResolverSyncConfigPtrOutput {
	return o.ToResolverSyncConfigPtrOutputWithContext(context.Background())
}

func (o ResolverSyncConfigOutput) ToResolverSyncConfigPtrOutputWithContext(ctx context.Context) ResolverSyncConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResolverSyncConfig) *ResolverSyncConfig {
		return &v
	}).(ResolverSyncConfigPtrOutput)
}

// The Conflict Detection strategy to use. Valid values are `NONE` and `VERSION`.
func (o ResolverSyncConfigOutput) ConflictDetection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverSyncConfig) *string { return v.ConflictDetection }).(pulumi.StringPtrOutput)
}

// The Conflict Resolution strategy to perform in the event of a conflict. Valid values are `NONE`, `OPTIMISTIC_CONCURRENCY`, `AUTOMERGE`, and `LAMBDA`.
func (o ResolverSyncConfigOutput) ConflictHandler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverSyncConfig) *string { return v.ConflictHandler }).(pulumi.StringPtrOutput)
}

// The Lambda Conflict Handler Config when configuring `LAMBDA` as the Conflict Handler. See Lambda Conflict Handler Config.
func (o ResolverSyncConfigOutput) LambdaConflictHandlerConfig() ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return o.ApplyT(func(v ResolverSyncConfig) *ResolverSyncConfigLambdaConflictHandlerConfig {
		return v.LambdaConflictHandlerConfig
	}).(ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput)
}

type ResolverSyncConfigPtrOutput struct{ *pulumi.OutputState }

func (ResolverSyncConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverSyncConfig)(nil)).Elem()
}

func (o ResolverSyncConfigPtrOutput) ToResolverSyncConfigPtrOutput() ResolverSyncConfigPtrOutput {
	return o
}

func (o ResolverSyncConfigPtrOutput) ToResolverSyncConfigPtrOutputWithContext(ctx context.Context) ResolverSyncConfigPtrOutput {
	return o
}

func (o ResolverSyncConfigPtrOutput) Elem() ResolverSyncConfigOutput {
	return o.ApplyT(func(v *ResolverSyncConfig) ResolverSyncConfig {
		if v != nil {
			return *v
		}
		var ret ResolverSyncConfig
		return ret
	}).(ResolverSyncConfigOutput)
}

// The Conflict Detection strategy to use. Valid values are `NONE` and `VERSION`.
func (o ResolverSyncConfigPtrOutput) ConflictDetection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverSyncConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConflictDetection
	}).(pulumi.StringPtrOutput)
}

// The Conflict Resolution strategy to perform in the event of a conflict. Valid values are `NONE`, `OPTIMISTIC_CONCURRENCY`, `AUTOMERGE`, and `LAMBDA`.
func (o ResolverSyncConfigPtrOutput) ConflictHandler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverSyncConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConflictHandler
	}).(pulumi.StringPtrOutput)
}

// The Lambda Conflict Handler Config when configuring `LAMBDA` as the Conflict Handler. See Lambda Conflict Handler Config.
func (o ResolverSyncConfigPtrOutput) LambdaConflictHandlerConfig() ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return o.ApplyT(func(v *ResolverSyncConfig) *ResolverSyncConfigLambdaConflictHandlerConfig {
		if v == nil {
			return nil
		}
		return v.LambdaConflictHandlerConfig
	}).(ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput)
}

type ResolverSyncConfigLambdaConflictHandlerConfig struct {
	// The Amazon Resource Name (ARN) for the Lambda function to use as the Conflict Handler.
	LambdaConflictHandlerArn *string `pulumi:"lambdaConflictHandlerArn"`
}

// ResolverSyncConfigLambdaConflictHandlerConfigInput is an input type that accepts ResolverSyncConfigLambdaConflictHandlerConfigArgs and ResolverSyncConfigLambdaConflictHandlerConfigOutput values.
// You can construct a concrete instance of `ResolverSyncConfigLambdaConflictHandlerConfigInput` via:
//
//          ResolverSyncConfigLambdaConflictHandlerConfigArgs{...}
type ResolverSyncConfigLambdaConflictHandlerConfigInput interface {
	pulumi.Input

	ToResolverSyncConfigLambdaConflictHandlerConfigOutput() ResolverSyncConfigLambdaConflictHandlerConfigOutput
	ToResolverSyncConfigLambdaConflictHandlerConfigOutputWithContext(context.Context) ResolverSyncConfigLambdaConflictHandlerConfigOutput
}

type ResolverSyncConfigLambdaConflictHandlerConfigArgs struct {
	// The Amazon Resource Name (ARN) for the Lambda function to use as the Conflict Handler.
	LambdaConflictHandlerArn pulumi.StringPtrInput `pulumi:"lambdaConflictHandlerArn"`
}

func (ResolverSyncConfigLambdaConflictHandlerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverSyncConfigLambdaConflictHandlerConfig)(nil)).Elem()
}

func (i ResolverSyncConfigLambdaConflictHandlerConfigArgs) ToResolverSyncConfigLambdaConflictHandlerConfigOutput() ResolverSyncConfigLambdaConflictHandlerConfigOutput {
	return i.ToResolverSyncConfigLambdaConflictHandlerConfigOutputWithContext(context.Background())
}

func (i ResolverSyncConfigLambdaConflictHandlerConfigArgs) ToResolverSyncConfigLambdaConflictHandlerConfigOutputWithContext(ctx context.Context) ResolverSyncConfigLambdaConflictHandlerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverSyncConfigLambdaConflictHandlerConfigOutput)
}

func (i ResolverSyncConfigLambdaConflictHandlerConfigArgs) ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutput() ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return i.ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(context.Background())
}

func (i ResolverSyncConfigLambdaConflictHandlerConfigArgs) ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(ctx context.Context) ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverSyncConfigLambdaConflictHandlerConfigOutput).ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(ctx)
}

// ResolverSyncConfigLambdaConflictHandlerConfigPtrInput is an input type that accepts ResolverSyncConfigLambdaConflictHandlerConfigArgs, ResolverSyncConfigLambdaConflictHandlerConfigPtr and ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput values.
// You can construct a concrete instance of `ResolverSyncConfigLambdaConflictHandlerConfigPtrInput` via:
//
//          ResolverSyncConfigLambdaConflictHandlerConfigArgs{...}
//
//  or:
//
//          nil
type ResolverSyncConfigLambdaConflictHandlerConfigPtrInput interface {
	pulumi.Input

	ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutput() ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput
	ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(context.Context) ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput
}

type resolverSyncConfigLambdaConflictHandlerConfigPtrType ResolverSyncConfigLambdaConflictHandlerConfigArgs

func ResolverSyncConfigLambdaConflictHandlerConfigPtr(v *ResolverSyncConfigLambdaConflictHandlerConfigArgs) ResolverSyncConfigLambdaConflictHandlerConfigPtrInput {
	return (*resolverSyncConfigLambdaConflictHandlerConfigPtrType)(v)
}

func (*resolverSyncConfigLambdaConflictHandlerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverSyncConfigLambdaConflictHandlerConfig)(nil)).Elem()
}

func (i *resolverSyncConfigLambdaConflictHandlerConfigPtrType) ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutput() ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return i.ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(context.Background())
}

func (i *resolverSyncConfigLambdaConflictHandlerConfigPtrType) ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(ctx context.Context) ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput)
}

type ResolverSyncConfigLambdaConflictHandlerConfigOutput struct{ *pulumi.OutputState }

func (ResolverSyncConfigLambdaConflictHandlerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverSyncConfigLambdaConflictHandlerConfig)(nil)).Elem()
}

func (o ResolverSyncConfigLambdaConflictHandlerConfigOutput) ToResolverSyncConfigLambdaConflictHandlerConfigOutput() ResolverSyncConfigLambdaConflictHandlerConfigOutput {
	return o
}

func (o ResolverSyncConfigLambdaConflictHandlerConfigOutput) ToResolverSyncConfigLambdaConflictHandlerConfigOutputWithContext(ctx context.Context) ResolverSyncConfigLambdaConflictHandlerConfigOutput {
	return o
}

func (o ResolverSyncConfigLambdaConflictHandlerConfigOutput) ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutput() ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return o.ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(context.Background())
}

func (o ResolverSyncConfigLambdaConflictHandlerConfigOutput) ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(ctx context.Context) ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResolverSyncConfigLambdaConflictHandlerConfig) *ResolverSyncConfigLambdaConflictHandlerConfig {
		return &v
	}).(ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput)
}

// The Amazon Resource Name (ARN) for the Lambda function to use as the Conflict Handler.
func (o ResolverSyncConfigLambdaConflictHandlerConfigOutput) LambdaConflictHandlerArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverSyncConfigLambdaConflictHandlerConfig) *string { return v.LambdaConflictHandlerArn }).(pulumi.StringPtrOutput)
}

type ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput struct{ *pulumi.OutputState }

func (ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverSyncConfigLambdaConflictHandlerConfig)(nil)).Elem()
}

func (o ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput) ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutput() ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return o
}

func (o ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput) ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(ctx context.Context) ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return o
}

func (o ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput) Elem() ResolverSyncConfigLambdaConflictHandlerConfigOutput {
	return o.ApplyT(func(v *ResolverSyncConfigLambdaConflictHandlerConfig) ResolverSyncConfigLambdaConflictHandlerConfig {
		if v != nil {
			return *v
		}
		var ret ResolverSyncConfigLambdaConflictHandlerConfig
		return ret
	}).(ResolverSyncConfigLambdaConflictHandlerConfigOutput)
}

// The Amazon Resource Name (ARN) for the Lambda function to use as the Conflict Handler.
func (o ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput) LambdaConflictHandlerArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverSyncConfigLambdaConflictHandlerConfig) *string {
		if v == nil {
			return nil
		}
		return v.LambdaConflictHandlerArn
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceDynamodbConfigInput)(nil)).Elem(), DataSourceDynamodbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceDynamodbConfigPtrInput)(nil)).Elem(), DataSourceDynamodbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceDynamodbConfigDeltaSyncConfigInput)(nil)).Elem(), DataSourceDynamodbConfigDeltaSyncConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceDynamodbConfigDeltaSyncConfigPtrInput)(nil)).Elem(), DataSourceDynamodbConfigDeltaSyncConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceElasticsearchConfigInput)(nil)).Elem(), DataSourceElasticsearchConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceElasticsearchConfigPtrInput)(nil)).Elem(), DataSourceElasticsearchConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceHttpConfigInput)(nil)).Elem(), DataSourceHttpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceHttpConfigPtrInput)(nil)).Elem(), DataSourceHttpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceHttpConfigAuthorizationConfigInput)(nil)).Elem(), DataSourceHttpConfigAuthorizationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceHttpConfigAuthorizationConfigPtrInput)(nil)).Elem(), DataSourceHttpConfigAuthorizationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceHttpConfigAuthorizationConfigAwsIamConfigInput)(nil)).Elem(), DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrInput)(nil)).Elem(), DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceLambdaConfigInput)(nil)).Elem(), DataSourceLambdaConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceLambdaConfigPtrInput)(nil)).Elem(), DataSourceLambdaConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceRelationalDatabaseConfigInput)(nil)).Elem(), DataSourceRelationalDatabaseConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceRelationalDatabaseConfigPtrInput)(nil)).Elem(), DataSourceRelationalDatabaseConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceRelationalDatabaseConfigHttpEndpointConfigInput)(nil)).Elem(), DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrInput)(nil)).Elem(), DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionSyncConfigInput)(nil)).Elem(), FunctionSyncConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionSyncConfigPtrInput)(nil)).Elem(), FunctionSyncConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionSyncConfigLambdaConflictHandlerConfigInput)(nil)).Elem(), FunctionSyncConfigLambdaConflictHandlerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionSyncConfigLambdaConflictHandlerConfigPtrInput)(nil)).Elem(), FunctionSyncConfigLambdaConflictHandlerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderInput)(nil)).Elem(), GraphQLApiAdditionalAuthenticationProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderArrayInput)(nil)).Elem(), GraphQLApiAdditionalAuthenticationProviderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigInput)(nil)).Elem(), GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrInput)(nil)).Elem(), GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigInput)(nil)).Elem(), GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrInput)(nil)).Elem(), GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderUserPoolConfigInput)(nil)).Elem(), GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrInput)(nil)).Elem(), GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiLambdaAuthorizerConfigInput)(nil)).Elem(), GraphQLApiLambdaAuthorizerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiLambdaAuthorizerConfigPtrInput)(nil)).Elem(), GraphQLApiLambdaAuthorizerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiLogConfigInput)(nil)).Elem(), GraphQLApiLogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiLogConfigPtrInput)(nil)).Elem(), GraphQLApiLogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiOpenidConnectConfigInput)(nil)).Elem(), GraphQLApiOpenidConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiOpenidConnectConfigPtrInput)(nil)).Elem(), GraphQLApiOpenidConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiUserPoolConfigInput)(nil)).Elem(), GraphQLApiUserPoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiUserPoolConfigPtrInput)(nil)).Elem(), GraphQLApiUserPoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverCachingConfigInput)(nil)).Elem(), ResolverCachingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverCachingConfigPtrInput)(nil)).Elem(), ResolverCachingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverPipelineConfigInput)(nil)).Elem(), ResolverPipelineConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverPipelineConfigPtrInput)(nil)).Elem(), ResolverPipelineConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverSyncConfigInput)(nil)).Elem(), ResolverSyncConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverSyncConfigPtrInput)(nil)).Elem(), ResolverSyncConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverSyncConfigLambdaConflictHandlerConfigInput)(nil)).Elem(), ResolverSyncConfigLambdaConflictHandlerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverSyncConfigLambdaConflictHandlerConfigPtrInput)(nil)).Elem(), ResolverSyncConfigLambdaConflictHandlerConfigArgs{})
	pulumi.RegisterOutputType(DataSourceDynamodbConfigOutput{})
	pulumi.RegisterOutputType(DataSourceDynamodbConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceDynamodbConfigDeltaSyncConfigOutput{})
	pulumi.RegisterOutputType(DataSourceDynamodbConfigDeltaSyncConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceElasticsearchConfigOutput{})
	pulumi.RegisterOutputType(DataSourceElasticsearchConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceHttpConfigOutput{})
	pulumi.RegisterOutputType(DataSourceHttpConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceHttpConfigAuthorizationConfigOutput{})
	pulumi.RegisterOutputType(DataSourceHttpConfigAuthorizationConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput{})
	pulumi.RegisterOutputType(DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceLambdaConfigOutput{})
	pulumi.RegisterOutputType(DataSourceLambdaConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceRelationalDatabaseConfigOutput{})
	pulumi.RegisterOutputType(DataSourceRelationalDatabaseConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput{})
	pulumi.RegisterOutputType(DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionSyncConfigOutput{})
	pulumi.RegisterOutputType(FunctionSyncConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionSyncConfigLambdaConflictHandlerConfigOutput{})
	pulumi.RegisterOutputType(FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput{})
	pulumi.RegisterOutputType(GraphQLApiAdditionalAuthenticationProviderOutput{})
	pulumi.RegisterOutputType(GraphQLApiAdditionalAuthenticationProviderArrayOutput{})
	pulumi.RegisterOutputType(GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput{})
	pulumi.RegisterOutputType(GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput{})
	pulumi.RegisterOutputType(GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput{})
	pulumi.RegisterOutputType(GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput{})
	pulumi.RegisterOutputType(GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput{})
	pulumi.RegisterOutputType(GraphQLApiLambdaAuthorizerConfigOutput{})
	pulumi.RegisterOutputType(GraphQLApiLambdaAuthorizerConfigPtrOutput{})
	pulumi.RegisterOutputType(GraphQLApiLogConfigOutput{})
	pulumi.RegisterOutputType(GraphQLApiLogConfigPtrOutput{})
	pulumi.RegisterOutputType(GraphQLApiOpenidConnectConfigOutput{})
	pulumi.RegisterOutputType(GraphQLApiOpenidConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(GraphQLApiUserPoolConfigOutput{})
	pulumi.RegisterOutputType(GraphQLApiUserPoolConfigPtrOutput{})
	pulumi.RegisterOutputType(ResolverCachingConfigOutput{})
	pulumi.RegisterOutputType(ResolverCachingConfigPtrOutput{})
	pulumi.RegisterOutputType(ResolverPipelineConfigOutput{})
	pulumi.RegisterOutputType(ResolverPipelineConfigPtrOutput{})
	pulumi.RegisterOutputType(ResolverSyncConfigOutput{})
	pulumi.RegisterOutputType(ResolverSyncConfigPtrOutput{})
	pulumi.RegisterOutputType(ResolverSyncConfigLambdaConflictHandlerConfigOutput{})
	pulumi.RegisterOutputType(ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput{})
}
