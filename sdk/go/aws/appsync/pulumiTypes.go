// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appsync

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ApiEventConfig struct {
	// List of authentication providers. See Auth Providers below.
	AuthProviders []ApiEventConfigAuthProvider `pulumi:"authProviders"`
	// List of authentication modes for connections. See Auth Modes below.
	ConnectionAuthModes []ApiEventConfigConnectionAuthMode `pulumi:"connectionAuthModes"`
	// List of default authentication modes for publishing. See Auth Modes below.
	DefaultPublishAuthModes []ApiEventConfigDefaultPublishAuthMode `pulumi:"defaultPublishAuthModes"`
	// List of default authentication modes for subscribing. See Auth Modes below.
	DefaultSubscribeAuthModes []ApiEventConfigDefaultSubscribeAuthMode `pulumi:"defaultSubscribeAuthModes"`
	// Logging configuration. See Log Config below.
	LogConfig *ApiEventConfigLogConfig `pulumi:"logConfig"`
}

// ApiEventConfigInput is an input type that accepts ApiEventConfigArgs and ApiEventConfigOutput values.
// You can construct a concrete instance of `ApiEventConfigInput` via:
//
//	ApiEventConfigArgs{...}
type ApiEventConfigInput interface {
	pulumi.Input

	ToApiEventConfigOutput() ApiEventConfigOutput
	ToApiEventConfigOutputWithContext(context.Context) ApiEventConfigOutput
}

type ApiEventConfigArgs struct {
	// List of authentication providers. See Auth Providers below.
	AuthProviders ApiEventConfigAuthProviderArrayInput `pulumi:"authProviders"`
	// List of authentication modes for connections. See Auth Modes below.
	ConnectionAuthModes ApiEventConfigConnectionAuthModeArrayInput `pulumi:"connectionAuthModes"`
	// List of default authentication modes for publishing. See Auth Modes below.
	DefaultPublishAuthModes ApiEventConfigDefaultPublishAuthModeArrayInput `pulumi:"defaultPublishAuthModes"`
	// List of default authentication modes for subscribing. See Auth Modes below.
	DefaultSubscribeAuthModes ApiEventConfigDefaultSubscribeAuthModeArrayInput `pulumi:"defaultSubscribeAuthModes"`
	// Logging configuration. See Log Config below.
	LogConfig ApiEventConfigLogConfigPtrInput `pulumi:"logConfig"`
}

func (ApiEventConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEventConfig)(nil)).Elem()
}

func (i ApiEventConfigArgs) ToApiEventConfigOutput() ApiEventConfigOutput {
	return i.ToApiEventConfigOutputWithContext(context.Background())
}

func (i ApiEventConfigArgs) ToApiEventConfigOutputWithContext(ctx context.Context) ApiEventConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEventConfigOutput)
}

func (i ApiEventConfigArgs) ToApiEventConfigPtrOutput() ApiEventConfigPtrOutput {
	return i.ToApiEventConfigPtrOutputWithContext(context.Background())
}

func (i ApiEventConfigArgs) ToApiEventConfigPtrOutputWithContext(ctx context.Context) ApiEventConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEventConfigOutput).ToApiEventConfigPtrOutputWithContext(ctx)
}

// ApiEventConfigPtrInput is an input type that accepts ApiEventConfigArgs, ApiEventConfigPtr and ApiEventConfigPtrOutput values.
// You can construct a concrete instance of `ApiEventConfigPtrInput` via:
//
//	        ApiEventConfigArgs{...}
//
//	or:
//
//	        nil
type ApiEventConfigPtrInput interface {
	pulumi.Input

	ToApiEventConfigPtrOutput() ApiEventConfigPtrOutput
	ToApiEventConfigPtrOutputWithContext(context.Context) ApiEventConfigPtrOutput
}

type apiEventConfigPtrType ApiEventConfigArgs

func ApiEventConfigPtr(v *ApiEventConfigArgs) ApiEventConfigPtrInput {
	return (*apiEventConfigPtrType)(v)
}

func (*apiEventConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiEventConfig)(nil)).Elem()
}

func (i *apiEventConfigPtrType) ToApiEventConfigPtrOutput() ApiEventConfigPtrOutput {
	return i.ToApiEventConfigPtrOutputWithContext(context.Background())
}

func (i *apiEventConfigPtrType) ToApiEventConfigPtrOutputWithContext(ctx context.Context) ApiEventConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEventConfigPtrOutput)
}

type ApiEventConfigOutput struct{ *pulumi.OutputState }

func (ApiEventConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEventConfig)(nil)).Elem()
}

func (o ApiEventConfigOutput) ToApiEventConfigOutput() ApiEventConfigOutput {
	return o
}

func (o ApiEventConfigOutput) ToApiEventConfigOutputWithContext(ctx context.Context) ApiEventConfigOutput {
	return o
}

func (o ApiEventConfigOutput) ToApiEventConfigPtrOutput() ApiEventConfigPtrOutput {
	return o.ToApiEventConfigPtrOutputWithContext(context.Background())
}

func (o ApiEventConfigOutput) ToApiEventConfigPtrOutputWithContext(ctx context.Context) ApiEventConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiEventConfig) *ApiEventConfig {
		return &v
	}).(ApiEventConfigPtrOutput)
}

// List of authentication providers. See Auth Providers below.
func (o ApiEventConfigOutput) AuthProviders() ApiEventConfigAuthProviderArrayOutput {
	return o.ApplyT(func(v ApiEventConfig) []ApiEventConfigAuthProvider { return v.AuthProviders }).(ApiEventConfigAuthProviderArrayOutput)
}

// List of authentication modes for connections. See Auth Modes below.
func (o ApiEventConfigOutput) ConnectionAuthModes() ApiEventConfigConnectionAuthModeArrayOutput {
	return o.ApplyT(func(v ApiEventConfig) []ApiEventConfigConnectionAuthMode { return v.ConnectionAuthModes }).(ApiEventConfigConnectionAuthModeArrayOutput)
}

// List of default authentication modes for publishing. See Auth Modes below.
func (o ApiEventConfigOutput) DefaultPublishAuthModes() ApiEventConfigDefaultPublishAuthModeArrayOutput {
	return o.ApplyT(func(v ApiEventConfig) []ApiEventConfigDefaultPublishAuthMode { return v.DefaultPublishAuthModes }).(ApiEventConfigDefaultPublishAuthModeArrayOutput)
}

// List of default authentication modes for subscribing. See Auth Modes below.
func (o ApiEventConfigOutput) DefaultSubscribeAuthModes() ApiEventConfigDefaultSubscribeAuthModeArrayOutput {
	return o.ApplyT(func(v ApiEventConfig) []ApiEventConfigDefaultSubscribeAuthMode { return v.DefaultSubscribeAuthModes }).(ApiEventConfigDefaultSubscribeAuthModeArrayOutput)
}

// Logging configuration. See Log Config below.
func (o ApiEventConfigOutput) LogConfig() ApiEventConfigLogConfigPtrOutput {
	return o.ApplyT(func(v ApiEventConfig) *ApiEventConfigLogConfig { return v.LogConfig }).(ApiEventConfigLogConfigPtrOutput)
}

type ApiEventConfigPtrOutput struct{ *pulumi.OutputState }

func (ApiEventConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiEventConfig)(nil)).Elem()
}

func (o ApiEventConfigPtrOutput) ToApiEventConfigPtrOutput() ApiEventConfigPtrOutput {
	return o
}

func (o ApiEventConfigPtrOutput) ToApiEventConfigPtrOutputWithContext(ctx context.Context) ApiEventConfigPtrOutput {
	return o
}

func (o ApiEventConfigPtrOutput) Elem() ApiEventConfigOutput {
	return o.ApplyT(func(v *ApiEventConfig) ApiEventConfig {
		if v != nil {
			return *v
		}
		var ret ApiEventConfig
		return ret
	}).(ApiEventConfigOutput)
}

// List of authentication providers. See Auth Providers below.
func (o ApiEventConfigPtrOutput) AuthProviders() ApiEventConfigAuthProviderArrayOutput {
	return o.ApplyT(func(v *ApiEventConfig) []ApiEventConfigAuthProvider {
		if v == nil {
			return nil
		}
		return v.AuthProviders
	}).(ApiEventConfigAuthProviderArrayOutput)
}

// List of authentication modes for connections. See Auth Modes below.
func (o ApiEventConfigPtrOutput) ConnectionAuthModes() ApiEventConfigConnectionAuthModeArrayOutput {
	return o.ApplyT(func(v *ApiEventConfig) []ApiEventConfigConnectionAuthMode {
		if v == nil {
			return nil
		}
		return v.ConnectionAuthModes
	}).(ApiEventConfigConnectionAuthModeArrayOutput)
}

// List of default authentication modes for publishing. See Auth Modes below.
func (o ApiEventConfigPtrOutput) DefaultPublishAuthModes() ApiEventConfigDefaultPublishAuthModeArrayOutput {
	return o.ApplyT(func(v *ApiEventConfig) []ApiEventConfigDefaultPublishAuthMode {
		if v == nil {
			return nil
		}
		return v.DefaultPublishAuthModes
	}).(ApiEventConfigDefaultPublishAuthModeArrayOutput)
}

// List of default authentication modes for subscribing. See Auth Modes below.
func (o ApiEventConfigPtrOutput) DefaultSubscribeAuthModes() ApiEventConfigDefaultSubscribeAuthModeArrayOutput {
	return o.ApplyT(func(v *ApiEventConfig) []ApiEventConfigDefaultSubscribeAuthMode {
		if v == nil {
			return nil
		}
		return v.DefaultSubscribeAuthModes
	}).(ApiEventConfigDefaultSubscribeAuthModeArrayOutput)
}

// Logging configuration. See Log Config below.
func (o ApiEventConfigPtrOutput) LogConfig() ApiEventConfigLogConfigPtrOutput {
	return o.ApplyT(func(v *ApiEventConfig) *ApiEventConfigLogConfig {
		if v == nil {
			return nil
		}
		return v.LogConfig
	}).(ApiEventConfigLogConfigPtrOutput)
}

type ApiEventConfigAuthProvider struct {
	// Type of authentication provider. Valid values: `AMAZON_COGNITO_USER_POOLS`, `AWS_LAMBDA`, `OPENID_CONNECT`, `API_KEY`.
	AuthType string `pulumi:"authType"`
	// Configuration for Cognito user pool authentication. Required when `authType` is `AMAZON_COGNITO_USER_POOLS`. See Cognito Config below.
	CognitoConfig *ApiEventConfigAuthProviderCognitoConfig `pulumi:"cognitoConfig"`
	// Configuration for Lambda authorization. Required when `authType` is `AWS_LAMBDA`. See Lambda Authorizer Config below.
	LambdaAuthorizerConfig *ApiEventConfigAuthProviderLambdaAuthorizerConfig `pulumi:"lambdaAuthorizerConfig"`
	// Configuration for OpenID Connect. Required when `authType` is `OPENID_CONNECT`. See OpenID Connect Config below.
	OpenidConnectConfig *ApiEventConfigAuthProviderOpenidConnectConfig `pulumi:"openidConnectConfig"`
}

// ApiEventConfigAuthProviderInput is an input type that accepts ApiEventConfigAuthProviderArgs and ApiEventConfigAuthProviderOutput values.
// You can construct a concrete instance of `ApiEventConfigAuthProviderInput` via:
//
//	ApiEventConfigAuthProviderArgs{...}
type ApiEventConfigAuthProviderInput interface {
	pulumi.Input

	ToApiEventConfigAuthProviderOutput() ApiEventConfigAuthProviderOutput
	ToApiEventConfigAuthProviderOutputWithContext(context.Context) ApiEventConfigAuthProviderOutput
}

type ApiEventConfigAuthProviderArgs struct {
	// Type of authentication provider. Valid values: `AMAZON_COGNITO_USER_POOLS`, `AWS_LAMBDA`, `OPENID_CONNECT`, `API_KEY`.
	AuthType pulumi.StringInput `pulumi:"authType"`
	// Configuration for Cognito user pool authentication. Required when `authType` is `AMAZON_COGNITO_USER_POOLS`. See Cognito Config below.
	CognitoConfig ApiEventConfigAuthProviderCognitoConfigPtrInput `pulumi:"cognitoConfig"`
	// Configuration for Lambda authorization. Required when `authType` is `AWS_LAMBDA`. See Lambda Authorizer Config below.
	LambdaAuthorizerConfig ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrInput `pulumi:"lambdaAuthorizerConfig"`
	// Configuration for OpenID Connect. Required when `authType` is `OPENID_CONNECT`. See OpenID Connect Config below.
	OpenidConnectConfig ApiEventConfigAuthProviderOpenidConnectConfigPtrInput `pulumi:"openidConnectConfig"`
}

func (ApiEventConfigAuthProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEventConfigAuthProvider)(nil)).Elem()
}

func (i ApiEventConfigAuthProviderArgs) ToApiEventConfigAuthProviderOutput() ApiEventConfigAuthProviderOutput {
	return i.ToApiEventConfigAuthProviderOutputWithContext(context.Background())
}

func (i ApiEventConfigAuthProviderArgs) ToApiEventConfigAuthProviderOutputWithContext(ctx context.Context) ApiEventConfigAuthProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEventConfigAuthProviderOutput)
}

// ApiEventConfigAuthProviderArrayInput is an input type that accepts ApiEventConfigAuthProviderArray and ApiEventConfigAuthProviderArrayOutput values.
// You can construct a concrete instance of `ApiEventConfigAuthProviderArrayInput` via:
//
//	ApiEventConfigAuthProviderArray{ ApiEventConfigAuthProviderArgs{...} }
type ApiEventConfigAuthProviderArrayInput interface {
	pulumi.Input

	ToApiEventConfigAuthProviderArrayOutput() ApiEventConfigAuthProviderArrayOutput
	ToApiEventConfigAuthProviderArrayOutputWithContext(context.Context) ApiEventConfigAuthProviderArrayOutput
}

type ApiEventConfigAuthProviderArray []ApiEventConfigAuthProviderInput

func (ApiEventConfigAuthProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiEventConfigAuthProvider)(nil)).Elem()
}

func (i ApiEventConfigAuthProviderArray) ToApiEventConfigAuthProviderArrayOutput() ApiEventConfigAuthProviderArrayOutput {
	return i.ToApiEventConfigAuthProviderArrayOutputWithContext(context.Background())
}

func (i ApiEventConfigAuthProviderArray) ToApiEventConfigAuthProviderArrayOutputWithContext(ctx context.Context) ApiEventConfigAuthProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEventConfigAuthProviderArrayOutput)
}

type ApiEventConfigAuthProviderOutput struct{ *pulumi.OutputState }

func (ApiEventConfigAuthProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEventConfigAuthProvider)(nil)).Elem()
}

func (o ApiEventConfigAuthProviderOutput) ToApiEventConfigAuthProviderOutput() ApiEventConfigAuthProviderOutput {
	return o
}

func (o ApiEventConfigAuthProviderOutput) ToApiEventConfigAuthProviderOutputWithContext(ctx context.Context) ApiEventConfigAuthProviderOutput {
	return o
}

// Type of authentication provider. Valid values: `AMAZON_COGNITO_USER_POOLS`, `AWS_LAMBDA`, `OPENID_CONNECT`, `API_KEY`.
func (o ApiEventConfigAuthProviderOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v ApiEventConfigAuthProvider) string { return v.AuthType }).(pulumi.StringOutput)
}

// Configuration for Cognito user pool authentication. Required when `authType` is `AMAZON_COGNITO_USER_POOLS`. See Cognito Config below.
func (o ApiEventConfigAuthProviderOutput) CognitoConfig() ApiEventConfigAuthProviderCognitoConfigPtrOutput {
	return o.ApplyT(func(v ApiEventConfigAuthProvider) *ApiEventConfigAuthProviderCognitoConfig { return v.CognitoConfig }).(ApiEventConfigAuthProviderCognitoConfigPtrOutput)
}

// Configuration for Lambda authorization. Required when `authType` is `AWS_LAMBDA`. See Lambda Authorizer Config below.
func (o ApiEventConfigAuthProviderOutput) LambdaAuthorizerConfig() ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput {
	return o.ApplyT(func(v ApiEventConfigAuthProvider) *ApiEventConfigAuthProviderLambdaAuthorizerConfig {
		return v.LambdaAuthorizerConfig
	}).(ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput)
}

// Configuration for OpenID Connect. Required when `authType` is `OPENID_CONNECT`. See OpenID Connect Config below.
func (o ApiEventConfigAuthProviderOutput) OpenidConnectConfig() ApiEventConfigAuthProviderOpenidConnectConfigPtrOutput {
	return o.ApplyT(func(v ApiEventConfigAuthProvider) *ApiEventConfigAuthProviderOpenidConnectConfig {
		return v.OpenidConnectConfig
	}).(ApiEventConfigAuthProviderOpenidConnectConfigPtrOutput)
}

type ApiEventConfigAuthProviderArrayOutput struct{ *pulumi.OutputState }

func (ApiEventConfigAuthProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiEventConfigAuthProvider)(nil)).Elem()
}

func (o ApiEventConfigAuthProviderArrayOutput) ToApiEventConfigAuthProviderArrayOutput() ApiEventConfigAuthProviderArrayOutput {
	return o
}

func (o ApiEventConfigAuthProviderArrayOutput) ToApiEventConfigAuthProviderArrayOutputWithContext(ctx context.Context) ApiEventConfigAuthProviderArrayOutput {
	return o
}

func (o ApiEventConfigAuthProviderArrayOutput) Index(i pulumi.IntInput) ApiEventConfigAuthProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiEventConfigAuthProvider {
		return vs[0].([]ApiEventConfigAuthProvider)[vs[1].(int)]
	}).(ApiEventConfigAuthProviderOutput)
}

type ApiEventConfigAuthProviderCognitoConfig struct {
	// Regular expression for matching the client ID.
	AppIdClientRegex *string `pulumi:"appIdClientRegex"`
	// AWS region where the user pool is located.
	AwsRegion string `pulumi:"awsRegion"`
	// ID of the Cognito user pool.
	UserPoolId string `pulumi:"userPoolId"`
}

// ApiEventConfigAuthProviderCognitoConfigInput is an input type that accepts ApiEventConfigAuthProviderCognitoConfigArgs and ApiEventConfigAuthProviderCognitoConfigOutput values.
// You can construct a concrete instance of `ApiEventConfigAuthProviderCognitoConfigInput` via:
//
//	ApiEventConfigAuthProviderCognitoConfigArgs{...}
type ApiEventConfigAuthProviderCognitoConfigInput interface {
	pulumi.Input

	ToApiEventConfigAuthProviderCognitoConfigOutput() ApiEventConfigAuthProviderCognitoConfigOutput
	ToApiEventConfigAuthProviderCognitoConfigOutputWithContext(context.Context) ApiEventConfigAuthProviderCognitoConfigOutput
}

type ApiEventConfigAuthProviderCognitoConfigArgs struct {
	// Regular expression for matching the client ID.
	AppIdClientRegex pulumi.StringPtrInput `pulumi:"appIdClientRegex"`
	// AWS region where the user pool is located.
	AwsRegion pulumi.StringInput `pulumi:"awsRegion"`
	// ID of the Cognito user pool.
	UserPoolId pulumi.StringInput `pulumi:"userPoolId"`
}

func (ApiEventConfigAuthProviderCognitoConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEventConfigAuthProviderCognitoConfig)(nil)).Elem()
}

func (i ApiEventConfigAuthProviderCognitoConfigArgs) ToApiEventConfigAuthProviderCognitoConfigOutput() ApiEventConfigAuthProviderCognitoConfigOutput {
	return i.ToApiEventConfigAuthProviderCognitoConfigOutputWithContext(context.Background())
}

func (i ApiEventConfigAuthProviderCognitoConfigArgs) ToApiEventConfigAuthProviderCognitoConfigOutputWithContext(ctx context.Context) ApiEventConfigAuthProviderCognitoConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEventConfigAuthProviderCognitoConfigOutput)
}

func (i ApiEventConfigAuthProviderCognitoConfigArgs) ToApiEventConfigAuthProviderCognitoConfigPtrOutput() ApiEventConfigAuthProviderCognitoConfigPtrOutput {
	return i.ToApiEventConfigAuthProviderCognitoConfigPtrOutputWithContext(context.Background())
}

func (i ApiEventConfigAuthProviderCognitoConfigArgs) ToApiEventConfigAuthProviderCognitoConfigPtrOutputWithContext(ctx context.Context) ApiEventConfigAuthProviderCognitoConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEventConfigAuthProviderCognitoConfigOutput).ToApiEventConfigAuthProviderCognitoConfigPtrOutputWithContext(ctx)
}

// ApiEventConfigAuthProviderCognitoConfigPtrInput is an input type that accepts ApiEventConfigAuthProviderCognitoConfigArgs, ApiEventConfigAuthProviderCognitoConfigPtr and ApiEventConfigAuthProviderCognitoConfigPtrOutput values.
// You can construct a concrete instance of `ApiEventConfigAuthProviderCognitoConfigPtrInput` via:
//
//	        ApiEventConfigAuthProviderCognitoConfigArgs{...}
//
//	or:
//
//	        nil
type ApiEventConfigAuthProviderCognitoConfigPtrInput interface {
	pulumi.Input

	ToApiEventConfigAuthProviderCognitoConfigPtrOutput() ApiEventConfigAuthProviderCognitoConfigPtrOutput
	ToApiEventConfigAuthProviderCognitoConfigPtrOutputWithContext(context.Context) ApiEventConfigAuthProviderCognitoConfigPtrOutput
}

type apiEventConfigAuthProviderCognitoConfigPtrType ApiEventConfigAuthProviderCognitoConfigArgs

func ApiEventConfigAuthProviderCognitoConfigPtr(v *ApiEventConfigAuthProviderCognitoConfigArgs) ApiEventConfigAuthProviderCognitoConfigPtrInput {
	return (*apiEventConfigAuthProviderCognitoConfigPtrType)(v)
}

func (*apiEventConfigAuthProviderCognitoConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiEventConfigAuthProviderCognitoConfig)(nil)).Elem()
}

func (i *apiEventConfigAuthProviderCognitoConfigPtrType) ToApiEventConfigAuthProviderCognitoConfigPtrOutput() ApiEventConfigAuthProviderCognitoConfigPtrOutput {
	return i.ToApiEventConfigAuthProviderCognitoConfigPtrOutputWithContext(context.Background())
}

func (i *apiEventConfigAuthProviderCognitoConfigPtrType) ToApiEventConfigAuthProviderCognitoConfigPtrOutputWithContext(ctx context.Context) ApiEventConfigAuthProviderCognitoConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEventConfigAuthProviderCognitoConfigPtrOutput)
}

type ApiEventConfigAuthProviderCognitoConfigOutput struct{ *pulumi.OutputState }

func (ApiEventConfigAuthProviderCognitoConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEventConfigAuthProviderCognitoConfig)(nil)).Elem()
}

func (o ApiEventConfigAuthProviderCognitoConfigOutput) ToApiEventConfigAuthProviderCognitoConfigOutput() ApiEventConfigAuthProviderCognitoConfigOutput {
	return o
}

func (o ApiEventConfigAuthProviderCognitoConfigOutput) ToApiEventConfigAuthProviderCognitoConfigOutputWithContext(ctx context.Context) ApiEventConfigAuthProviderCognitoConfigOutput {
	return o
}

func (o ApiEventConfigAuthProviderCognitoConfigOutput) ToApiEventConfigAuthProviderCognitoConfigPtrOutput() ApiEventConfigAuthProviderCognitoConfigPtrOutput {
	return o.ToApiEventConfigAuthProviderCognitoConfigPtrOutputWithContext(context.Background())
}

func (o ApiEventConfigAuthProviderCognitoConfigOutput) ToApiEventConfigAuthProviderCognitoConfigPtrOutputWithContext(ctx context.Context) ApiEventConfigAuthProviderCognitoConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiEventConfigAuthProviderCognitoConfig) *ApiEventConfigAuthProviderCognitoConfig {
		return &v
	}).(ApiEventConfigAuthProviderCognitoConfigPtrOutput)
}

// Regular expression for matching the client ID.
func (o ApiEventConfigAuthProviderCognitoConfigOutput) AppIdClientRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiEventConfigAuthProviderCognitoConfig) *string { return v.AppIdClientRegex }).(pulumi.StringPtrOutput)
}

// AWS region where the user pool is located.
func (o ApiEventConfigAuthProviderCognitoConfigOutput) AwsRegion() pulumi.StringOutput {
	return o.ApplyT(func(v ApiEventConfigAuthProviderCognitoConfig) string { return v.AwsRegion }).(pulumi.StringOutput)
}

// ID of the Cognito user pool.
func (o ApiEventConfigAuthProviderCognitoConfigOutput) UserPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v ApiEventConfigAuthProviderCognitoConfig) string { return v.UserPoolId }).(pulumi.StringOutput)
}

type ApiEventConfigAuthProviderCognitoConfigPtrOutput struct{ *pulumi.OutputState }

func (ApiEventConfigAuthProviderCognitoConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiEventConfigAuthProviderCognitoConfig)(nil)).Elem()
}

func (o ApiEventConfigAuthProviderCognitoConfigPtrOutput) ToApiEventConfigAuthProviderCognitoConfigPtrOutput() ApiEventConfigAuthProviderCognitoConfigPtrOutput {
	return o
}

func (o ApiEventConfigAuthProviderCognitoConfigPtrOutput) ToApiEventConfigAuthProviderCognitoConfigPtrOutputWithContext(ctx context.Context) ApiEventConfigAuthProviderCognitoConfigPtrOutput {
	return o
}

func (o ApiEventConfigAuthProviderCognitoConfigPtrOutput) Elem() ApiEventConfigAuthProviderCognitoConfigOutput {
	return o.ApplyT(func(v *ApiEventConfigAuthProviderCognitoConfig) ApiEventConfigAuthProviderCognitoConfig {
		if v != nil {
			return *v
		}
		var ret ApiEventConfigAuthProviderCognitoConfig
		return ret
	}).(ApiEventConfigAuthProviderCognitoConfigOutput)
}

// Regular expression for matching the client ID.
func (o ApiEventConfigAuthProviderCognitoConfigPtrOutput) AppIdClientRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiEventConfigAuthProviderCognitoConfig) *string {
		if v == nil {
			return nil
		}
		return v.AppIdClientRegex
	}).(pulumi.StringPtrOutput)
}

// AWS region where the user pool is located.
func (o ApiEventConfigAuthProviderCognitoConfigPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiEventConfigAuthProviderCognitoConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// ID of the Cognito user pool.
func (o ApiEventConfigAuthProviderCognitoConfigPtrOutput) UserPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiEventConfigAuthProviderCognitoConfig) *string {
		if v == nil {
			return nil
		}
		return &v.UserPoolId
	}).(pulumi.StringPtrOutput)
}

type ApiEventConfigAuthProviderLambdaAuthorizerConfig struct {
	// TTL in seconds for the authorization result cache.
	AuthorizerResultTtlInSeconds *int `pulumi:"authorizerResultTtlInSeconds"`
	// URI of the Lambda function for authorization.
	AuthorizerUri string `pulumi:"authorizerUri"`
	// Regular expression for identity validation.
	IdentityValidationExpression *string `pulumi:"identityValidationExpression"`
}

// ApiEventConfigAuthProviderLambdaAuthorizerConfigInput is an input type that accepts ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs and ApiEventConfigAuthProviderLambdaAuthorizerConfigOutput values.
// You can construct a concrete instance of `ApiEventConfigAuthProviderLambdaAuthorizerConfigInput` via:
//
//	ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs{...}
type ApiEventConfigAuthProviderLambdaAuthorizerConfigInput interface {
	pulumi.Input

	ToApiEventConfigAuthProviderLambdaAuthorizerConfigOutput() ApiEventConfigAuthProviderLambdaAuthorizerConfigOutput
	ToApiEventConfigAuthProviderLambdaAuthorizerConfigOutputWithContext(context.Context) ApiEventConfigAuthProviderLambdaAuthorizerConfigOutput
}

type ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs struct {
	// TTL in seconds for the authorization result cache.
	AuthorizerResultTtlInSeconds pulumi.IntPtrInput `pulumi:"authorizerResultTtlInSeconds"`
	// URI of the Lambda function for authorization.
	AuthorizerUri pulumi.StringInput `pulumi:"authorizerUri"`
	// Regular expression for identity validation.
	IdentityValidationExpression pulumi.StringPtrInput `pulumi:"identityValidationExpression"`
}

func (ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEventConfigAuthProviderLambdaAuthorizerConfig)(nil)).Elem()
}

func (i ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs) ToApiEventConfigAuthProviderLambdaAuthorizerConfigOutput() ApiEventConfigAuthProviderLambdaAuthorizerConfigOutput {
	return i.ToApiEventConfigAuthProviderLambdaAuthorizerConfigOutputWithContext(context.Background())
}

func (i ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs) ToApiEventConfigAuthProviderLambdaAuthorizerConfigOutputWithContext(ctx context.Context) ApiEventConfigAuthProviderLambdaAuthorizerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEventConfigAuthProviderLambdaAuthorizerConfigOutput)
}

func (i ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs) ToApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput() ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput {
	return i.ToApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutputWithContext(context.Background())
}

func (i ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs) ToApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutputWithContext(ctx context.Context) ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEventConfigAuthProviderLambdaAuthorizerConfigOutput).ToApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutputWithContext(ctx)
}

// ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrInput is an input type that accepts ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs, ApiEventConfigAuthProviderLambdaAuthorizerConfigPtr and ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput values.
// You can construct a concrete instance of `ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrInput` via:
//
//	        ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs{...}
//
//	or:
//
//	        nil
type ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrInput interface {
	pulumi.Input

	ToApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput() ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput
	ToApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutputWithContext(context.Context) ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput
}

type apiEventConfigAuthProviderLambdaAuthorizerConfigPtrType ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs

func ApiEventConfigAuthProviderLambdaAuthorizerConfigPtr(v *ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs) ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrInput {
	return (*apiEventConfigAuthProviderLambdaAuthorizerConfigPtrType)(v)
}

func (*apiEventConfigAuthProviderLambdaAuthorizerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiEventConfigAuthProviderLambdaAuthorizerConfig)(nil)).Elem()
}

func (i *apiEventConfigAuthProviderLambdaAuthorizerConfigPtrType) ToApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput() ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput {
	return i.ToApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutputWithContext(context.Background())
}

func (i *apiEventConfigAuthProviderLambdaAuthorizerConfigPtrType) ToApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutputWithContext(ctx context.Context) ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput)
}

type ApiEventConfigAuthProviderLambdaAuthorizerConfigOutput struct{ *pulumi.OutputState }

func (ApiEventConfigAuthProviderLambdaAuthorizerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEventConfigAuthProviderLambdaAuthorizerConfig)(nil)).Elem()
}

func (o ApiEventConfigAuthProviderLambdaAuthorizerConfigOutput) ToApiEventConfigAuthProviderLambdaAuthorizerConfigOutput() ApiEventConfigAuthProviderLambdaAuthorizerConfigOutput {
	return o
}

func (o ApiEventConfigAuthProviderLambdaAuthorizerConfigOutput) ToApiEventConfigAuthProviderLambdaAuthorizerConfigOutputWithContext(ctx context.Context) ApiEventConfigAuthProviderLambdaAuthorizerConfigOutput {
	return o
}

func (o ApiEventConfigAuthProviderLambdaAuthorizerConfigOutput) ToApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput() ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput {
	return o.ToApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutputWithContext(context.Background())
}

func (o ApiEventConfigAuthProviderLambdaAuthorizerConfigOutput) ToApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutputWithContext(ctx context.Context) ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiEventConfigAuthProviderLambdaAuthorizerConfig) *ApiEventConfigAuthProviderLambdaAuthorizerConfig {
		return &v
	}).(ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput)
}

// TTL in seconds for the authorization result cache.
func (o ApiEventConfigAuthProviderLambdaAuthorizerConfigOutput) AuthorizerResultTtlInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApiEventConfigAuthProviderLambdaAuthorizerConfig) *int { return v.AuthorizerResultTtlInSeconds }).(pulumi.IntPtrOutput)
}

// URI of the Lambda function for authorization.
func (o ApiEventConfigAuthProviderLambdaAuthorizerConfigOutput) AuthorizerUri() pulumi.StringOutput {
	return o.ApplyT(func(v ApiEventConfigAuthProviderLambdaAuthorizerConfig) string { return v.AuthorizerUri }).(pulumi.StringOutput)
}

// Regular expression for identity validation.
func (o ApiEventConfigAuthProviderLambdaAuthorizerConfigOutput) IdentityValidationExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiEventConfigAuthProviderLambdaAuthorizerConfig) *string {
		return v.IdentityValidationExpression
	}).(pulumi.StringPtrOutput)
}

type ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput struct{ *pulumi.OutputState }

func (ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiEventConfigAuthProviderLambdaAuthorizerConfig)(nil)).Elem()
}

func (o ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput) ToApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput() ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput {
	return o
}

func (o ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput) ToApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutputWithContext(ctx context.Context) ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput {
	return o
}

func (o ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput) Elem() ApiEventConfigAuthProviderLambdaAuthorizerConfigOutput {
	return o.ApplyT(func(v *ApiEventConfigAuthProviderLambdaAuthorizerConfig) ApiEventConfigAuthProviderLambdaAuthorizerConfig {
		if v != nil {
			return *v
		}
		var ret ApiEventConfigAuthProviderLambdaAuthorizerConfig
		return ret
	}).(ApiEventConfigAuthProviderLambdaAuthorizerConfigOutput)
}

// TTL in seconds for the authorization result cache.
func (o ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput) AuthorizerResultTtlInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApiEventConfigAuthProviderLambdaAuthorizerConfig) *int {
		if v == nil {
			return nil
		}
		return v.AuthorizerResultTtlInSeconds
	}).(pulumi.IntPtrOutput)
}

// URI of the Lambda function for authorization.
func (o ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput) AuthorizerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiEventConfigAuthProviderLambdaAuthorizerConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AuthorizerUri
	}).(pulumi.StringPtrOutput)
}

// Regular expression for identity validation.
func (o ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput) IdentityValidationExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiEventConfigAuthProviderLambdaAuthorizerConfig) *string {
		if v == nil {
			return nil
		}
		return v.IdentityValidationExpression
	}).(pulumi.StringPtrOutput)
}

type ApiEventConfigAuthProviderOpenidConnectConfig struct {
	// TTL in seconds for the authentication token.
	AuthTtl *int `pulumi:"authTtl"`
	// Client ID for the OpenID Connect provider.
	ClientId *string `pulumi:"clientId"`
	// TTL in seconds for the issued at time.
	IatTtl *int `pulumi:"iatTtl"`
	// Issuer URL for the OpenID Connect provider.
	Issuer string `pulumi:"issuer"`
}

// ApiEventConfigAuthProviderOpenidConnectConfigInput is an input type that accepts ApiEventConfigAuthProviderOpenidConnectConfigArgs and ApiEventConfigAuthProviderOpenidConnectConfigOutput values.
// You can construct a concrete instance of `ApiEventConfigAuthProviderOpenidConnectConfigInput` via:
//
//	ApiEventConfigAuthProviderOpenidConnectConfigArgs{...}
type ApiEventConfigAuthProviderOpenidConnectConfigInput interface {
	pulumi.Input

	ToApiEventConfigAuthProviderOpenidConnectConfigOutput() ApiEventConfigAuthProviderOpenidConnectConfigOutput
	ToApiEventConfigAuthProviderOpenidConnectConfigOutputWithContext(context.Context) ApiEventConfigAuthProviderOpenidConnectConfigOutput
}

type ApiEventConfigAuthProviderOpenidConnectConfigArgs struct {
	// TTL in seconds for the authentication token.
	AuthTtl pulumi.IntPtrInput `pulumi:"authTtl"`
	// Client ID for the OpenID Connect provider.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// TTL in seconds for the issued at time.
	IatTtl pulumi.IntPtrInput `pulumi:"iatTtl"`
	// Issuer URL for the OpenID Connect provider.
	Issuer pulumi.StringInput `pulumi:"issuer"`
}

func (ApiEventConfigAuthProviderOpenidConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEventConfigAuthProviderOpenidConnectConfig)(nil)).Elem()
}

func (i ApiEventConfigAuthProviderOpenidConnectConfigArgs) ToApiEventConfigAuthProviderOpenidConnectConfigOutput() ApiEventConfigAuthProviderOpenidConnectConfigOutput {
	return i.ToApiEventConfigAuthProviderOpenidConnectConfigOutputWithContext(context.Background())
}

func (i ApiEventConfigAuthProviderOpenidConnectConfigArgs) ToApiEventConfigAuthProviderOpenidConnectConfigOutputWithContext(ctx context.Context) ApiEventConfigAuthProviderOpenidConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEventConfigAuthProviderOpenidConnectConfigOutput)
}

func (i ApiEventConfigAuthProviderOpenidConnectConfigArgs) ToApiEventConfigAuthProviderOpenidConnectConfigPtrOutput() ApiEventConfigAuthProviderOpenidConnectConfigPtrOutput {
	return i.ToApiEventConfigAuthProviderOpenidConnectConfigPtrOutputWithContext(context.Background())
}

func (i ApiEventConfigAuthProviderOpenidConnectConfigArgs) ToApiEventConfigAuthProviderOpenidConnectConfigPtrOutputWithContext(ctx context.Context) ApiEventConfigAuthProviderOpenidConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEventConfigAuthProviderOpenidConnectConfigOutput).ToApiEventConfigAuthProviderOpenidConnectConfigPtrOutputWithContext(ctx)
}

// ApiEventConfigAuthProviderOpenidConnectConfigPtrInput is an input type that accepts ApiEventConfigAuthProviderOpenidConnectConfigArgs, ApiEventConfigAuthProviderOpenidConnectConfigPtr and ApiEventConfigAuthProviderOpenidConnectConfigPtrOutput values.
// You can construct a concrete instance of `ApiEventConfigAuthProviderOpenidConnectConfigPtrInput` via:
//
//	        ApiEventConfigAuthProviderOpenidConnectConfigArgs{...}
//
//	or:
//
//	        nil
type ApiEventConfigAuthProviderOpenidConnectConfigPtrInput interface {
	pulumi.Input

	ToApiEventConfigAuthProviderOpenidConnectConfigPtrOutput() ApiEventConfigAuthProviderOpenidConnectConfigPtrOutput
	ToApiEventConfigAuthProviderOpenidConnectConfigPtrOutputWithContext(context.Context) ApiEventConfigAuthProviderOpenidConnectConfigPtrOutput
}

type apiEventConfigAuthProviderOpenidConnectConfigPtrType ApiEventConfigAuthProviderOpenidConnectConfigArgs

func ApiEventConfigAuthProviderOpenidConnectConfigPtr(v *ApiEventConfigAuthProviderOpenidConnectConfigArgs) ApiEventConfigAuthProviderOpenidConnectConfigPtrInput {
	return (*apiEventConfigAuthProviderOpenidConnectConfigPtrType)(v)
}

func (*apiEventConfigAuthProviderOpenidConnectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiEventConfigAuthProviderOpenidConnectConfig)(nil)).Elem()
}

func (i *apiEventConfigAuthProviderOpenidConnectConfigPtrType) ToApiEventConfigAuthProviderOpenidConnectConfigPtrOutput() ApiEventConfigAuthProviderOpenidConnectConfigPtrOutput {
	return i.ToApiEventConfigAuthProviderOpenidConnectConfigPtrOutputWithContext(context.Background())
}

func (i *apiEventConfigAuthProviderOpenidConnectConfigPtrType) ToApiEventConfigAuthProviderOpenidConnectConfigPtrOutputWithContext(ctx context.Context) ApiEventConfigAuthProviderOpenidConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEventConfigAuthProviderOpenidConnectConfigPtrOutput)
}

type ApiEventConfigAuthProviderOpenidConnectConfigOutput struct{ *pulumi.OutputState }

func (ApiEventConfigAuthProviderOpenidConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEventConfigAuthProviderOpenidConnectConfig)(nil)).Elem()
}

func (o ApiEventConfigAuthProviderOpenidConnectConfigOutput) ToApiEventConfigAuthProviderOpenidConnectConfigOutput() ApiEventConfigAuthProviderOpenidConnectConfigOutput {
	return o
}

func (o ApiEventConfigAuthProviderOpenidConnectConfigOutput) ToApiEventConfigAuthProviderOpenidConnectConfigOutputWithContext(ctx context.Context) ApiEventConfigAuthProviderOpenidConnectConfigOutput {
	return o
}

func (o ApiEventConfigAuthProviderOpenidConnectConfigOutput) ToApiEventConfigAuthProviderOpenidConnectConfigPtrOutput() ApiEventConfigAuthProviderOpenidConnectConfigPtrOutput {
	return o.ToApiEventConfigAuthProviderOpenidConnectConfigPtrOutputWithContext(context.Background())
}

func (o ApiEventConfigAuthProviderOpenidConnectConfigOutput) ToApiEventConfigAuthProviderOpenidConnectConfigPtrOutputWithContext(ctx context.Context) ApiEventConfigAuthProviderOpenidConnectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiEventConfigAuthProviderOpenidConnectConfig) *ApiEventConfigAuthProviderOpenidConnectConfig {
		return &v
	}).(ApiEventConfigAuthProviderOpenidConnectConfigPtrOutput)
}

// TTL in seconds for the authentication token.
func (o ApiEventConfigAuthProviderOpenidConnectConfigOutput) AuthTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApiEventConfigAuthProviderOpenidConnectConfig) *int { return v.AuthTtl }).(pulumi.IntPtrOutput)
}

// Client ID for the OpenID Connect provider.
func (o ApiEventConfigAuthProviderOpenidConnectConfigOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApiEventConfigAuthProviderOpenidConnectConfig) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// TTL in seconds for the issued at time.
func (o ApiEventConfigAuthProviderOpenidConnectConfigOutput) IatTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApiEventConfigAuthProviderOpenidConnectConfig) *int { return v.IatTtl }).(pulumi.IntPtrOutput)
}

// Issuer URL for the OpenID Connect provider.
func (o ApiEventConfigAuthProviderOpenidConnectConfigOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v ApiEventConfigAuthProviderOpenidConnectConfig) string { return v.Issuer }).(pulumi.StringOutput)
}

type ApiEventConfigAuthProviderOpenidConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (ApiEventConfigAuthProviderOpenidConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiEventConfigAuthProviderOpenidConnectConfig)(nil)).Elem()
}

func (o ApiEventConfigAuthProviderOpenidConnectConfigPtrOutput) ToApiEventConfigAuthProviderOpenidConnectConfigPtrOutput() ApiEventConfigAuthProviderOpenidConnectConfigPtrOutput {
	return o
}

func (o ApiEventConfigAuthProviderOpenidConnectConfigPtrOutput) ToApiEventConfigAuthProviderOpenidConnectConfigPtrOutputWithContext(ctx context.Context) ApiEventConfigAuthProviderOpenidConnectConfigPtrOutput {
	return o
}

func (o ApiEventConfigAuthProviderOpenidConnectConfigPtrOutput) Elem() ApiEventConfigAuthProviderOpenidConnectConfigOutput {
	return o.ApplyT(func(v *ApiEventConfigAuthProviderOpenidConnectConfig) ApiEventConfigAuthProviderOpenidConnectConfig {
		if v != nil {
			return *v
		}
		var ret ApiEventConfigAuthProviderOpenidConnectConfig
		return ret
	}).(ApiEventConfigAuthProviderOpenidConnectConfigOutput)
}

// TTL in seconds for the authentication token.
func (o ApiEventConfigAuthProviderOpenidConnectConfigPtrOutput) AuthTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApiEventConfigAuthProviderOpenidConnectConfig) *int {
		if v == nil {
			return nil
		}
		return v.AuthTtl
	}).(pulumi.IntPtrOutput)
}

// Client ID for the OpenID Connect provider.
func (o ApiEventConfigAuthProviderOpenidConnectConfigPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiEventConfigAuthProviderOpenidConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// TTL in seconds for the issued at time.
func (o ApiEventConfigAuthProviderOpenidConnectConfigPtrOutput) IatTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApiEventConfigAuthProviderOpenidConnectConfig) *int {
		if v == nil {
			return nil
		}
		return v.IatTtl
	}).(pulumi.IntPtrOutput)
}

// Issuer URL for the OpenID Connect provider.
func (o ApiEventConfigAuthProviderOpenidConnectConfigPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiEventConfigAuthProviderOpenidConnectConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Issuer
	}).(pulumi.StringPtrOutput)
}

type ApiEventConfigConnectionAuthMode struct {
	// Type of authentication. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`, `AWS_LAMBDA`.
	AuthType string `pulumi:"authType"`
}

// ApiEventConfigConnectionAuthModeInput is an input type that accepts ApiEventConfigConnectionAuthModeArgs and ApiEventConfigConnectionAuthModeOutput values.
// You can construct a concrete instance of `ApiEventConfigConnectionAuthModeInput` via:
//
//	ApiEventConfigConnectionAuthModeArgs{...}
type ApiEventConfigConnectionAuthModeInput interface {
	pulumi.Input

	ToApiEventConfigConnectionAuthModeOutput() ApiEventConfigConnectionAuthModeOutput
	ToApiEventConfigConnectionAuthModeOutputWithContext(context.Context) ApiEventConfigConnectionAuthModeOutput
}

type ApiEventConfigConnectionAuthModeArgs struct {
	// Type of authentication. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`, `AWS_LAMBDA`.
	AuthType pulumi.StringInput `pulumi:"authType"`
}

func (ApiEventConfigConnectionAuthModeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEventConfigConnectionAuthMode)(nil)).Elem()
}

func (i ApiEventConfigConnectionAuthModeArgs) ToApiEventConfigConnectionAuthModeOutput() ApiEventConfigConnectionAuthModeOutput {
	return i.ToApiEventConfigConnectionAuthModeOutputWithContext(context.Background())
}

func (i ApiEventConfigConnectionAuthModeArgs) ToApiEventConfigConnectionAuthModeOutputWithContext(ctx context.Context) ApiEventConfigConnectionAuthModeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEventConfigConnectionAuthModeOutput)
}

// ApiEventConfigConnectionAuthModeArrayInput is an input type that accepts ApiEventConfigConnectionAuthModeArray and ApiEventConfigConnectionAuthModeArrayOutput values.
// You can construct a concrete instance of `ApiEventConfigConnectionAuthModeArrayInput` via:
//
//	ApiEventConfigConnectionAuthModeArray{ ApiEventConfigConnectionAuthModeArgs{...} }
type ApiEventConfigConnectionAuthModeArrayInput interface {
	pulumi.Input

	ToApiEventConfigConnectionAuthModeArrayOutput() ApiEventConfigConnectionAuthModeArrayOutput
	ToApiEventConfigConnectionAuthModeArrayOutputWithContext(context.Context) ApiEventConfigConnectionAuthModeArrayOutput
}

type ApiEventConfigConnectionAuthModeArray []ApiEventConfigConnectionAuthModeInput

func (ApiEventConfigConnectionAuthModeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiEventConfigConnectionAuthMode)(nil)).Elem()
}

func (i ApiEventConfigConnectionAuthModeArray) ToApiEventConfigConnectionAuthModeArrayOutput() ApiEventConfigConnectionAuthModeArrayOutput {
	return i.ToApiEventConfigConnectionAuthModeArrayOutputWithContext(context.Background())
}

func (i ApiEventConfigConnectionAuthModeArray) ToApiEventConfigConnectionAuthModeArrayOutputWithContext(ctx context.Context) ApiEventConfigConnectionAuthModeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEventConfigConnectionAuthModeArrayOutput)
}

type ApiEventConfigConnectionAuthModeOutput struct{ *pulumi.OutputState }

func (ApiEventConfigConnectionAuthModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEventConfigConnectionAuthMode)(nil)).Elem()
}

func (o ApiEventConfigConnectionAuthModeOutput) ToApiEventConfigConnectionAuthModeOutput() ApiEventConfigConnectionAuthModeOutput {
	return o
}

func (o ApiEventConfigConnectionAuthModeOutput) ToApiEventConfigConnectionAuthModeOutputWithContext(ctx context.Context) ApiEventConfigConnectionAuthModeOutput {
	return o
}

// Type of authentication. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`, `AWS_LAMBDA`.
func (o ApiEventConfigConnectionAuthModeOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v ApiEventConfigConnectionAuthMode) string { return v.AuthType }).(pulumi.StringOutput)
}

type ApiEventConfigConnectionAuthModeArrayOutput struct{ *pulumi.OutputState }

func (ApiEventConfigConnectionAuthModeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiEventConfigConnectionAuthMode)(nil)).Elem()
}

func (o ApiEventConfigConnectionAuthModeArrayOutput) ToApiEventConfigConnectionAuthModeArrayOutput() ApiEventConfigConnectionAuthModeArrayOutput {
	return o
}

func (o ApiEventConfigConnectionAuthModeArrayOutput) ToApiEventConfigConnectionAuthModeArrayOutputWithContext(ctx context.Context) ApiEventConfigConnectionAuthModeArrayOutput {
	return o
}

func (o ApiEventConfigConnectionAuthModeArrayOutput) Index(i pulumi.IntInput) ApiEventConfigConnectionAuthModeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiEventConfigConnectionAuthMode {
		return vs[0].([]ApiEventConfigConnectionAuthMode)[vs[1].(int)]
	}).(ApiEventConfigConnectionAuthModeOutput)
}

type ApiEventConfigDefaultPublishAuthMode struct {
	// Type of authentication. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`, `AWS_LAMBDA`.
	AuthType string `pulumi:"authType"`
}

// ApiEventConfigDefaultPublishAuthModeInput is an input type that accepts ApiEventConfigDefaultPublishAuthModeArgs and ApiEventConfigDefaultPublishAuthModeOutput values.
// You can construct a concrete instance of `ApiEventConfigDefaultPublishAuthModeInput` via:
//
//	ApiEventConfigDefaultPublishAuthModeArgs{...}
type ApiEventConfigDefaultPublishAuthModeInput interface {
	pulumi.Input

	ToApiEventConfigDefaultPublishAuthModeOutput() ApiEventConfigDefaultPublishAuthModeOutput
	ToApiEventConfigDefaultPublishAuthModeOutputWithContext(context.Context) ApiEventConfigDefaultPublishAuthModeOutput
}

type ApiEventConfigDefaultPublishAuthModeArgs struct {
	// Type of authentication. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`, `AWS_LAMBDA`.
	AuthType pulumi.StringInput `pulumi:"authType"`
}

func (ApiEventConfigDefaultPublishAuthModeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEventConfigDefaultPublishAuthMode)(nil)).Elem()
}

func (i ApiEventConfigDefaultPublishAuthModeArgs) ToApiEventConfigDefaultPublishAuthModeOutput() ApiEventConfigDefaultPublishAuthModeOutput {
	return i.ToApiEventConfigDefaultPublishAuthModeOutputWithContext(context.Background())
}

func (i ApiEventConfigDefaultPublishAuthModeArgs) ToApiEventConfigDefaultPublishAuthModeOutputWithContext(ctx context.Context) ApiEventConfigDefaultPublishAuthModeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEventConfigDefaultPublishAuthModeOutput)
}

// ApiEventConfigDefaultPublishAuthModeArrayInput is an input type that accepts ApiEventConfigDefaultPublishAuthModeArray and ApiEventConfigDefaultPublishAuthModeArrayOutput values.
// You can construct a concrete instance of `ApiEventConfigDefaultPublishAuthModeArrayInput` via:
//
//	ApiEventConfigDefaultPublishAuthModeArray{ ApiEventConfigDefaultPublishAuthModeArgs{...} }
type ApiEventConfigDefaultPublishAuthModeArrayInput interface {
	pulumi.Input

	ToApiEventConfigDefaultPublishAuthModeArrayOutput() ApiEventConfigDefaultPublishAuthModeArrayOutput
	ToApiEventConfigDefaultPublishAuthModeArrayOutputWithContext(context.Context) ApiEventConfigDefaultPublishAuthModeArrayOutput
}

type ApiEventConfigDefaultPublishAuthModeArray []ApiEventConfigDefaultPublishAuthModeInput

func (ApiEventConfigDefaultPublishAuthModeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiEventConfigDefaultPublishAuthMode)(nil)).Elem()
}

func (i ApiEventConfigDefaultPublishAuthModeArray) ToApiEventConfigDefaultPublishAuthModeArrayOutput() ApiEventConfigDefaultPublishAuthModeArrayOutput {
	return i.ToApiEventConfigDefaultPublishAuthModeArrayOutputWithContext(context.Background())
}

func (i ApiEventConfigDefaultPublishAuthModeArray) ToApiEventConfigDefaultPublishAuthModeArrayOutputWithContext(ctx context.Context) ApiEventConfigDefaultPublishAuthModeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEventConfigDefaultPublishAuthModeArrayOutput)
}

type ApiEventConfigDefaultPublishAuthModeOutput struct{ *pulumi.OutputState }

func (ApiEventConfigDefaultPublishAuthModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEventConfigDefaultPublishAuthMode)(nil)).Elem()
}

func (o ApiEventConfigDefaultPublishAuthModeOutput) ToApiEventConfigDefaultPublishAuthModeOutput() ApiEventConfigDefaultPublishAuthModeOutput {
	return o
}

func (o ApiEventConfigDefaultPublishAuthModeOutput) ToApiEventConfigDefaultPublishAuthModeOutputWithContext(ctx context.Context) ApiEventConfigDefaultPublishAuthModeOutput {
	return o
}

// Type of authentication. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`, `AWS_LAMBDA`.
func (o ApiEventConfigDefaultPublishAuthModeOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v ApiEventConfigDefaultPublishAuthMode) string { return v.AuthType }).(pulumi.StringOutput)
}

type ApiEventConfigDefaultPublishAuthModeArrayOutput struct{ *pulumi.OutputState }

func (ApiEventConfigDefaultPublishAuthModeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiEventConfigDefaultPublishAuthMode)(nil)).Elem()
}

func (o ApiEventConfigDefaultPublishAuthModeArrayOutput) ToApiEventConfigDefaultPublishAuthModeArrayOutput() ApiEventConfigDefaultPublishAuthModeArrayOutput {
	return o
}

func (o ApiEventConfigDefaultPublishAuthModeArrayOutput) ToApiEventConfigDefaultPublishAuthModeArrayOutputWithContext(ctx context.Context) ApiEventConfigDefaultPublishAuthModeArrayOutput {
	return o
}

func (o ApiEventConfigDefaultPublishAuthModeArrayOutput) Index(i pulumi.IntInput) ApiEventConfigDefaultPublishAuthModeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiEventConfigDefaultPublishAuthMode {
		return vs[0].([]ApiEventConfigDefaultPublishAuthMode)[vs[1].(int)]
	}).(ApiEventConfigDefaultPublishAuthModeOutput)
}

type ApiEventConfigDefaultSubscribeAuthMode struct {
	// Type of authentication. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`, `AWS_LAMBDA`.
	AuthType string `pulumi:"authType"`
}

// ApiEventConfigDefaultSubscribeAuthModeInput is an input type that accepts ApiEventConfigDefaultSubscribeAuthModeArgs and ApiEventConfigDefaultSubscribeAuthModeOutput values.
// You can construct a concrete instance of `ApiEventConfigDefaultSubscribeAuthModeInput` via:
//
//	ApiEventConfigDefaultSubscribeAuthModeArgs{...}
type ApiEventConfigDefaultSubscribeAuthModeInput interface {
	pulumi.Input

	ToApiEventConfigDefaultSubscribeAuthModeOutput() ApiEventConfigDefaultSubscribeAuthModeOutput
	ToApiEventConfigDefaultSubscribeAuthModeOutputWithContext(context.Context) ApiEventConfigDefaultSubscribeAuthModeOutput
}

type ApiEventConfigDefaultSubscribeAuthModeArgs struct {
	// Type of authentication. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`, `AWS_LAMBDA`.
	AuthType pulumi.StringInput `pulumi:"authType"`
}

func (ApiEventConfigDefaultSubscribeAuthModeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEventConfigDefaultSubscribeAuthMode)(nil)).Elem()
}

func (i ApiEventConfigDefaultSubscribeAuthModeArgs) ToApiEventConfigDefaultSubscribeAuthModeOutput() ApiEventConfigDefaultSubscribeAuthModeOutput {
	return i.ToApiEventConfigDefaultSubscribeAuthModeOutputWithContext(context.Background())
}

func (i ApiEventConfigDefaultSubscribeAuthModeArgs) ToApiEventConfigDefaultSubscribeAuthModeOutputWithContext(ctx context.Context) ApiEventConfigDefaultSubscribeAuthModeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEventConfigDefaultSubscribeAuthModeOutput)
}

// ApiEventConfigDefaultSubscribeAuthModeArrayInput is an input type that accepts ApiEventConfigDefaultSubscribeAuthModeArray and ApiEventConfigDefaultSubscribeAuthModeArrayOutput values.
// You can construct a concrete instance of `ApiEventConfigDefaultSubscribeAuthModeArrayInput` via:
//
//	ApiEventConfigDefaultSubscribeAuthModeArray{ ApiEventConfigDefaultSubscribeAuthModeArgs{...} }
type ApiEventConfigDefaultSubscribeAuthModeArrayInput interface {
	pulumi.Input

	ToApiEventConfigDefaultSubscribeAuthModeArrayOutput() ApiEventConfigDefaultSubscribeAuthModeArrayOutput
	ToApiEventConfigDefaultSubscribeAuthModeArrayOutputWithContext(context.Context) ApiEventConfigDefaultSubscribeAuthModeArrayOutput
}

type ApiEventConfigDefaultSubscribeAuthModeArray []ApiEventConfigDefaultSubscribeAuthModeInput

func (ApiEventConfigDefaultSubscribeAuthModeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiEventConfigDefaultSubscribeAuthMode)(nil)).Elem()
}

func (i ApiEventConfigDefaultSubscribeAuthModeArray) ToApiEventConfigDefaultSubscribeAuthModeArrayOutput() ApiEventConfigDefaultSubscribeAuthModeArrayOutput {
	return i.ToApiEventConfigDefaultSubscribeAuthModeArrayOutputWithContext(context.Background())
}

func (i ApiEventConfigDefaultSubscribeAuthModeArray) ToApiEventConfigDefaultSubscribeAuthModeArrayOutputWithContext(ctx context.Context) ApiEventConfigDefaultSubscribeAuthModeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEventConfigDefaultSubscribeAuthModeArrayOutput)
}

type ApiEventConfigDefaultSubscribeAuthModeOutput struct{ *pulumi.OutputState }

func (ApiEventConfigDefaultSubscribeAuthModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEventConfigDefaultSubscribeAuthMode)(nil)).Elem()
}

func (o ApiEventConfigDefaultSubscribeAuthModeOutput) ToApiEventConfigDefaultSubscribeAuthModeOutput() ApiEventConfigDefaultSubscribeAuthModeOutput {
	return o
}

func (o ApiEventConfigDefaultSubscribeAuthModeOutput) ToApiEventConfigDefaultSubscribeAuthModeOutputWithContext(ctx context.Context) ApiEventConfigDefaultSubscribeAuthModeOutput {
	return o
}

// Type of authentication. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`, `AWS_LAMBDA`.
func (o ApiEventConfigDefaultSubscribeAuthModeOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v ApiEventConfigDefaultSubscribeAuthMode) string { return v.AuthType }).(pulumi.StringOutput)
}

type ApiEventConfigDefaultSubscribeAuthModeArrayOutput struct{ *pulumi.OutputState }

func (ApiEventConfigDefaultSubscribeAuthModeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ApiEventConfigDefaultSubscribeAuthMode)(nil)).Elem()
}

func (o ApiEventConfigDefaultSubscribeAuthModeArrayOutput) ToApiEventConfigDefaultSubscribeAuthModeArrayOutput() ApiEventConfigDefaultSubscribeAuthModeArrayOutput {
	return o
}

func (o ApiEventConfigDefaultSubscribeAuthModeArrayOutput) ToApiEventConfigDefaultSubscribeAuthModeArrayOutputWithContext(ctx context.Context) ApiEventConfigDefaultSubscribeAuthModeArrayOutput {
	return o
}

func (o ApiEventConfigDefaultSubscribeAuthModeArrayOutput) Index(i pulumi.IntInput) ApiEventConfigDefaultSubscribeAuthModeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ApiEventConfigDefaultSubscribeAuthMode {
		return vs[0].([]ApiEventConfigDefaultSubscribeAuthMode)[vs[1].(int)]
	}).(ApiEventConfigDefaultSubscribeAuthModeOutput)
}

type ApiEventConfigLogConfig struct {
	// ARN of the IAM role for CloudWatch logs.
	CloudwatchLogsRoleArn string `pulumi:"cloudwatchLogsRoleArn"`
	// Log level. Valid values: `NONE`, `ERROR`, `ALL`, `INFO`, `DEBUG`.
	LogLevel string `pulumi:"logLevel"`
}

// ApiEventConfigLogConfigInput is an input type that accepts ApiEventConfigLogConfigArgs and ApiEventConfigLogConfigOutput values.
// You can construct a concrete instance of `ApiEventConfigLogConfigInput` via:
//
//	ApiEventConfigLogConfigArgs{...}
type ApiEventConfigLogConfigInput interface {
	pulumi.Input

	ToApiEventConfigLogConfigOutput() ApiEventConfigLogConfigOutput
	ToApiEventConfigLogConfigOutputWithContext(context.Context) ApiEventConfigLogConfigOutput
}

type ApiEventConfigLogConfigArgs struct {
	// ARN of the IAM role for CloudWatch logs.
	CloudwatchLogsRoleArn pulumi.StringInput `pulumi:"cloudwatchLogsRoleArn"`
	// Log level. Valid values: `NONE`, `ERROR`, `ALL`, `INFO`, `DEBUG`.
	LogLevel pulumi.StringInput `pulumi:"logLevel"`
}

func (ApiEventConfigLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEventConfigLogConfig)(nil)).Elem()
}

func (i ApiEventConfigLogConfigArgs) ToApiEventConfigLogConfigOutput() ApiEventConfigLogConfigOutput {
	return i.ToApiEventConfigLogConfigOutputWithContext(context.Background())
}

func (i ApiEventConfigLogConfigArgs) ToApiEventConfigLogConfigOutputWithContext(ctx context.Context) ApiEventConfigLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEventConfigLogConfigOutput)
}

func (i ApiEventConfigLogConfigArgs) ToApiEventConfigLogConfigPtrOutput() ApiEventConfigLogConfigPtrOutput {
	return i.ToApiEventConfigLogConfigPtrOutputWithContext(context.Background())
}

func (i ApiEventConfigLogConfigArgs) ToApiEventConfigLogConfigPtrOutputWithContext(ctx context.Context) ApiEventConfigLogConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEventConfigLogConfigOutput).ToApiEventConfigLogConfigPtrOutputWithContext(ctx)
}

// ApiEventConfigLogConfigPtrInput is an input type that accepts ApiEventConfigLogConfigArgs, ApiEventConfigLogConfigPtr and ApiEventConfigLogConfigPtrOutput values.
// You can construct a concrete instance of `ApiEventConfigLogConfigPtrInput` via:
//
//	        ApiEventConfigLogConfigArgs{...}
//
//	or:
//
//	        nil
type ApiEventConfigLogConfigPtrInput interface {
	pulumi.Input

	ToApiEventConfigLogConfigPtrOutput() ApiEventConfigLogConfigPtrOutput
	ToApiEventConfigLogConfigPtrOutputWithContext(context.Context) ApiEventConfigLogConfigPtrOutput
}

type apiEventConfigLogConfigPtrType ApiEventConfigLogConfigArgs

func ApiEventConfigLogConfigPtr(v *ApiEventConfigLogConfigArgs) ApiEventConfigLogConfigPtrInput {
	return (*apiEventConfigLogConfigPtrType)(v)
}

func (*apiEventConfigLogConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiEventConfigLogConfig)(nil)).Elem()
}

func (i *apiEventConfigLogConfigPtrType) ToApiEventConfigLogConfigPtrOutput() ApiEventConfigLogConfigPtrOutput {
	return i.ToApiEventConfigLogConfigPtrOutputWithContext(context.Background())
}

func (i *apiEventConfigLogConfigPtrType) ToApiEventConfigLogConfigPtrOutputWithContext(ctx context.Context) ApiEventConfigLogConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiEventConfigLogConfigPtrOutput)
}

type ApiEventConfigLogConfigOutput struct{ *pulumi.OutputState }

func (ApiEventConfigLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiEventConfigLogConfig)(nil)).Elem()
}

func (o ApiEventConfigLogConfigOutput) ToApiEventConfigLogConfigOutput() ApiEventConfigLogConfigOutput {
	return o
}

func (o ApiEventConfigLogConfigOutput) ToApiEventConfigLogConfigOutputWithContext(ctx context.Context) ApiEventConfigLogConfigOutput {
	return o
}

func (o ApiEventConfigLogConfigOutput) ToApiEventConfigLogConfigPtrOutput() ApiEventConfigLogConfigPtrOutput {
	return o.ToApiEventConfigLogConfigPtrOutputWithContext(context.Background())
}

func (o ApiEventConfigLogConfigOutput) ToApiEventConfigLogConfigPtrOutputWithContext(ctx context.Context) ApiEventConfigLogConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApiEventConfigLogConfig) *ApiEventConfigLogConfig {
		return &v
	}).(ApiEventConfigLogConfigPtrOutput)
}

// ARN of the IAM role for CloudWatch logs.
func (o ApiEventConfigLogConfigOutput) CloudwatchLogsRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v ApiEventConfigLogConfig) string { return v.CloudwatchLogsRoleArn }).(pulumi.StringOutput)
}

// Log level. Valid values: `NONE`, `ERROR`, `ALL`, `INFO`, `DEBUG`.
func (o ApiEventConfigLogConfigOutput) LogLevel() pulumi.StringOutput {
	return o.ApplyT(func(v ApiEventConfigLogConfig) string { return v.LogLevel }).(pulumi.StringOutput)
}

type ApiEventConfigLogConfigPtrOutput struct{ *pulumi.OutputState }

func (ApiEventConfigLogConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiEventConfigLogConfig)(nil)).Elem()
}

func (o ApiEventConfigLogConfigPtrOutput) ToApiEventConfigLogConfigPtrOutput() ApiEventConfigLogConfigPtrOutput {
	return o
}

func (o ApiEventConfigLogConfigPtrOutput) ToApiEventConfigLogConfigPtrOutputWithContext(ctx context.Context) ApiEventConfigLogConfigPtrOutput {
	return o
}

func (o ApiEventConfigLogConfigPtrOutput) Elem() ApiEventConfigLogConfigOutput {
	return o.ApplyT(func(v *ApiEventConfigLogConfig) ApiEventConfigLogConfig {
		if v != nil {
			return *v
		}
		var ret ApiEventConfigLogConfig
		return ret
	}).(ApiEventConfigLogConfigOutput)
}

// ARN of the IAM role for CloudWatch logs.
func (o ApiEventConfigLogConfigPtrOutput) CloudwatchLogsRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiEventConfigLogConfig) *string {
		if v == nil {
			return nil
		}
		return &v.CloudwatchLogsRoleArn
	}).(pulumi.StringPtrOutput)
}

// Log level. Valid values: `NONE`, `ERROR`, `ALL`, `INFO`, `DEBUG`.
func (o ApiEventConfigLogConfigPtrOutput) LogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApiEventConfigLogConfig) *string {
		if v == nil {
			return nil
		}
		return &v.LogLevel
	}).(pulumi.StringPtrOutput)
}

type ChannelNamespaceHandlerConfigs struct {
	// Handler configuration. See Handler Config below.
	OnPublish *ChannelNamespaceHandlerConfigsOnPublish `pulumi:"onPublish"`
	// Handler configuration. See Handler Config below.
	OnSubscribe *ChannelNamespaceHandlerConfigsOnSubscribe `pulumi:"onSubscribe"`
}

// ChannelNamespaceHandlerConfigsInput is an input type that accepts ChannelNamespaceHandlerConfigsArgs and ChannelNamespaceHandlerConfigsOutput values.
// You can construct a concrete instance of `ChannelNamespaceHandlerConfigsInput` via:
//
//	ChannelNamespaceHandlerConfigsArgs{...}
type ChannelNamespaceHandlerConfigsInput interface {
	pulumi.Input

	ToChannelNamespaceHandlerConfigsOutput() ChannelNamespaceHandlerConfigsOutput
	ToChannelNamespaceHandlerConfigsOutputWithContext(context.Context) ChannelNamespaceHandlerConfigsOutput
}

type ChannelNamespaceHandlerConfigsArgs struct {
	// Handler configuration. See Handler Config below.
	OnPublish ChannelNamespaceHandlerConfigsOnPublishPtrInput `pulumi:"onPublish"`
	// Handler configuration. See Handler Config below.
	OnSubscribe ChannelNamespaceHandlerConfigsOnSubscribePtrInput `pulumi:"onSubscribe"`
}

func (ChannelNamespaceHandlerConfigsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelNamespaceHandlerConfigs)(nil)).Elem()
}

func (i ChannelNamespaceHandlerConfigsArgs) ToChannelNamespaceHandlerConfigsOutput() ChannelNamespaceHandlerConfigsOutput {
	return i.ToChannelNamespaceHandlerConfigsOutputWithContext(context.Background())
}

func (i ChannelNamespaceHandlerConfigsArgs) ToChannelNamespaceHandlerConfigsOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNamespaceHandlerConfigsOutput)
}

func (i ChannelNamespaceHandlerConfigsArgs) ToChannelNamespaceHandlerConfigsPtrOutput() ChannelNamespaceHandlerConfigsPtrOutput {
	return i.ToChannelNamespaceHandlerConfigsPtrOutputWithContext(context.Background())
}

func (i ChannelNamespaceHandlerConfigsArgs) ToChannelNamespaceHandlerConfigsPtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNamespaceHandlerConfigsOutput).ToChannelNamespaceHandlerConfigsPtrOutputWithContext(ctx)
}

// ChannelNamespaceHandlerConfigsPtrInput is an input type that accepts ChannelNamespaceHandlerConfigsArgs, ChannelNamespaceHandlerConfigsPtr and ChannelNamespaceHandlerConfigsPtrOutput values.
// You can construct a concrete instance of `ChannelNamespaceHandlerConfigsPtrInput` via:
//
//	        ChannelNamespaceHandlerConfigsArgs{...}
//
//	or:
//
//	        nil
type ChannelNamespaceHandlerConfigsPtrInput interface {
	pulumi.Input

	ToChannelNamespaceHandlerConfigsPtrOutput() ChannelNamespaceHandlerConfigsPtrOutput
	ToChannelNamespaceHandlerConfigsPtrOutputWithContext(context.Context) ChannelNamespaceHandlerConfigsPtrOutput
}

type channelNamespaceHandlerConfigsPtrType ChannelNamespaceHandlerConfigsArgs

func ChannelNamespaceHandlerConfigsPtr(v *ChannelNamespaceHandlerConfigsArgs) ChannelNamespaceHandlerConfigsPtrInput {
	return (*channelNamespaceHandlerConfigsPtrType)(v)
}

func (*channelNamespaceHandlerConfigsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelNamespaceHandlerConfigs)(nil)).Elem()
}

func (i *channelNamespaceHandlerConfigsPtrType) ToChannelNamespaceHandlerConfigsPtrOutput() ChannelNamespaceHandlerConfigsPtrOutput {
	return i.ToChannelNamespaceHandlerConfigsPtrOutputWithContext(context.Background())
}

func (i *channelNamespaceHandlerConfigsPtrType) ToChannelNamespaceHandlerConfigsPtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNamespaceHandlerConfigsPtrOutput)
}

type ChannelNamespaceHandlerConfigsOutput struct{ *pulumi.OutputState }

func (ChannelNamespaceHandlerConfigsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelNamespaceHandlerConfigs)(nil)).Elem()
}

func (o ChannelNamespaceHandlerConfigsOutput) ToChannelNamespaceHandlerConfigsOutput() ChannelNamespaceHandlerConfigsOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsOutput) ToChannelNamespaceHandlerConfigsOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsOutput) ToChannelNamespaceHandlerConfigsPtrOutput() ChannelNamespaceHandlerConfigsPtrOutput {
	return o.ToChannelNamespaceHandlerConfigsPtrOutputWithContext(context.Background())
}

func (o ChannelNamespaceHandlerConfigsOutput) ToChannelNamespaceHandlerConfigsPtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelNamespaceHandlerConfigs) *ChannelNamespaceHandlerConfigs {
		return &v
	}).(ChannelNamespaceHandlerConfigsPtrOutput)
}

// Handler configuration. See Handler Config below.
func (o ChannelNamespaceHandlerConfigsOutput) OnPublish() ChannelNamespaceHandlerConfigsOnPublishPtrOutput {
	return o.ApplyT(func(v ChannelNamespaceHandlerConfigs) *ChannelNamespaceHandlerConfigsOnPublish { return v.OnPublish }).(ChannelNamespaceHandlerConfigsOnPublishPtrOutput)
}

// Handler configuration. See Handler Config below.
func (o ChannelNamespaceHandlerConfigsOutput) OnSubscribe() ChannelNamespaceHandlerConfigsOnSubscribePtrOutput {
	return o.ApplyT(func(v ChannelNamespaceHandlerConfigs) *ChannelNamespaceHandlerConfigsOnSubscribe {
		return v.OnSubscribe
	}).(ChannelNamespaceHandlerConfigsOnSubscribePtrOutput)
}

type ChannelNamespaceHandlerConfigsPtrOutput struct{ *pulumi.OutputState }

func (ChannelNamespaceHandlerConfigsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelNamespaceHandlerConfigs)(nil)).Elem()
}

func (o ChannelNamespaceHandlerConfigsPtrOutput) ToChannelNamespaceHandlerConfigsPtrOutput() ChannelNamespaceHandlerConfigsPtrOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsPtrOutput) ToChannelNamespaceHandlerConfigsPtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsPtrOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsPtrOutput) Elem() ChannelNamespaceHandlerConfigsOutput {
	return o.ApplyT(func(v *ChannelNamespaceHandlerConfigs) ChannelNamespaceHandlerConfigs {
		if v != nil {
			return *v
		}
		var ret ChannelNamespaceHandlerConfigs
		return ret
	}).(ChannelNamespaceHandlerConfigsOutput)
}

// Handler configuration. See Handler Config below.
func (o ChannelNamespaceHandlerConfigsPtrOutput) OnPublish() ChannelNamespaceHandlerConfigsOnPublishPtrOutput {
	return o.ApplyT(func(v *ChannelNamespaceHandlerConfigs) *ChannelNamespaceHandlerConfigsOnPublish {
		if v == nil {
			return nil
		}
		return v.OnPublish
	}).(ChannelNamespaceHandlerConfigsOnPublishPtrOutput)
}

// Handler configuration. See Handler Config below.
func (o ChannelNamespaceHandlerConfigsPtrOutput) OnSubscribe() ChannelNamespaceHandlerConfigsOnSubscribePtrOutput {
	return o.ApplyT(func(v *ChannelNamespaceHandlerConfigs) *ChannelNamespaceHandlerConfigsOnSubscribe {
		if v == nil {
			return nil
		}
		return v.OnSubscribe
	}).(ChannelNamespaceHandlerConfigsOnSubscribePtrOutput)
}

type ChannelNamespaceHandlerConfigsOnPublish struct {
	// Behavior for the handler. Valid values: `CODE`, `DIRECT`.
	Behavior string `pulumi:"behavior"`
	// Integration data source configuration for the handler. See Integration below.
	Integration *ChannelNamespaceHandlerConfigsOnPublishIntegration `pulumi:"integration"`
}

// ChannelNamespaceHandlerConfigsOnPublishInput is an input type that accepts ChannelNamespaceHandlerConfigsOnPublishArgs and ChannelNamespaceHandlerConfigsOnPublishOutput values.
// You can construct a concrete instance of `ChannelNamespaceHandlerConfigsOnPublishInput` via:
//
//	ChannelNamespaceHandlerConfigsOnPublishArgs{...}
type ChannelNamespaceHandlerConfigsOnPublishInput interface {
	pulumi.Input

	ToChannelNamespaceHandlerConfigsOnPublishOutput() ChannelNamespaceHandlerConfigsOnPublishOutput
	ToChannelNamespaceHandlerConfigsOnPublishOutputWithContext(context.Context) ChannelNamespaceHandlerConfigsOnPublishOutput
}

type ChannelNamespaceHandlerConfigsOnPublishArgs struct {
	// Behavior for the handler. Valid values: `CODE`, `DIRECT`.
	Behavior pulumi.StringInput `pulumi:"behavior"`
	// Integration data source configuration for the handler. See Integration below.
	Integration ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrInput `pulumi:"integration"`
}

func (ChannelNamespaceHandlerConfigsOnPublishArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelNamespaceHandlerConfigsOnPublish)(nil)).Elem()
}

func (i ChannelNamespaceHandlerConfigsOnPublishArgs) ToChannelNamespaceHandlerConfigsOnPublishOutput() ChannelNamespaceHandlerConfigsOnPublishOutput {
	return i.ToChannelNamespaceHandlerConfigsOnPublishOutputWithContext(context.Background())
}

func (i ChannelNamespaceHandlerConfigsOnPublishArgs) ToChannelNamespaceHandlerConfigsOnPublishOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnPublishOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNamespaceHandlerConfigsOnPublishOutput)
}

func (i ChannelNamespaceHandlerConfigsOnPublishArgs) ToChannelNamespaceHandlerConfigsOnPublishPtrOutput() ChannelNamespaceHandlerConfigsOnPublishPtrOutput {
	return i.ToChannelNamespaceHandlerConfigsOnPublishPtrOutputWithContext(context.Background())
}

func (i ChannelNamespaceHandlerConfigsOnPublishArgs) ToChannelNamespaceHandlerConfigsOnPublishPtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnPublishPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNamespaceHandlerConfigsOnPublishOutput).ToChannelNamespaceHandlerConfigsOnPublishPtrOutputWithContext(ctx)
}

// ChannelNamespaceHandlerConfigsOnPublishPtrInput is an input type that accepts ChannelNamespaceHandlerConfigsOnPublishArgs, ChannelNamespaceHandlerConfigsOnPublishPtr and ChannelNamespaceHandlerConfigsOnPublishPtrOutput values.
// You can construct a concrete instance of `ChannelNamespaceHandlerConfigsOnPublishPtrInput` via:
//
//	        ChannelNamespaceHandlerConfigsOnPublishArgs{...}
//
//	or:
//
//	        nil
type ChannelNamespaceHandlerConfigsOnPublishPtrInput interface {
	pulumi.Input

	ToChannelNamespaceHandlerConfigsOnPublishPtrOutput() ChannelNamespaceHandlerConfigsOnPublishPtrOutput
	ToChannelNamespaceHandlerConfigsOnPublishPtrOutputWithContext(context.Context) ChannelNamespaceHandlerConfigsOnPublishPtrOutput
}

type channelNamespaceHandlerConfigsOnPublishPtrType ChannelNamespaceHandlerConfigsOnPublishArgs

func ChannelNamespaceHandlerConfigsOnPublishPtr(v *ChannelNamespaceHandlerConfigsOnPublishArgs) ChannelNamespaceHandlerConfigsOnPublishPtrInput {
	return (*channelNamespaceHandlerConfigsOnPublishPtrType)(v)
}

func (*channelNamespaceHandlerConfigsOnPublishPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelNamespaceHandlerConfigsOnPublish)(nil)).Elem()
}

func (i *channelNamespaceHandlerConfigsOnPublishPtrType) ToChannelNamespaceHandlerConfigsOnPublishPtrOutput() ChannelNamespaceHandlerConfigsOnPublishPtrOutput {
	return i.ToChannelNamespaceHandlerConfigsOnPublishPtrOutputWithContext(context.Background())
}

func (i *channelNamespaceHandlerConfigsOnPublishPtrType) ToChannelNamespaceHandlerConfigsOnPublishPtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnPublishPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNamespaceHandlerConfigsOnPublishPtrOutput)
}

type ChannelNamespaceHandlerConfigsOnPublishOutput struct{ *pulumi.OutputState }

func (ChannelNamespaceHandlerConfigsOnPublishOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelNamespaceHandlerConfigsOnPublish)(nil)).Elem()
}

func (o ChannelNamespaceHandlerConfigsOnPublishOutput) ToChannelNamespaceHandlerConfigsOnPublishOutput() ChannelNamespaceHandlerConfigsOnPublishOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsOnPublishOutput) ToChannelNamespaceHandlerConfigsOnPublishOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnPublishOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsOnPublishOutput) ToChannelNamespaceHandlerConfigsOnPublishPtrOutput() ChannelNamespaceHandlerConfigsOnPublishPtrOutput {
	return o.ToChannelNamespaceHandlerConfigsOnPublishPtrOutputWithContext(context.Background())
}

func (o ChannelNamespaceHandlerConfigsOnPublishOutput) ToChannelNamespaceHandlerConfigsOnPublishPtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnPublishPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelNamespaceHandlerConfigsOnPublish) *ChannelNamespaceHandlerConfigsOnPublish {
		return &v
	}).(ChannelNamespaceHandlerConfigsOnPublishPtrOutput)
}

// Behavior for the handler. Valid values: `CODE`, `DIRECT`.
func (o ChannelNamespaceHandlerConfigsOnPublishOutput) Behavior() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelNamespaceHandlerConfigsOnPublish) string { return v.Behavior }).(pulumi.StringOutput)
}

// Integration data source configuration for the handler. See Integration below.
func (o ChannelNamespaceHandlerConfigsOnPublishOutput) Integration() ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput {
	return o.ApplyT(func(v ChannelNamespaceHandlerConfigsOnPublish) *ChannelNamespaceHandlerConfigsOnPublishIntegration {
		return v.Integration
	}).(ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput)
}

type ChannelNamespaceHandlerConfigsOnPublishPtrOutput struct{ *pulumi.OutputState }

func (ChannelNamespaceHandlerConfigsOnPublishPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelNamespaceHandlerConfigsOnPublish)(nil)).Elem()
}

func (o ChannelNamespaceHandlerConfigsOnPublishPtrOutput) ToChannelNamespaceHandlerConfigsOnPublishPtrOutput() ChannelNamespaceHandlerConfigsOnPublishPtrOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsOnPublishPtrOutput) ToChannelNamespaceHandlerConfigsOnPublishPtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnPublishPtrOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsOnPublishPtrOutput) Elem() ChannelNamespaceHandlerConfigsOnPublishOutput {
	return o.ApplyT(func(v *ChannelNamespaceHandlerConfigsOnPublish) ChannelNamespaceHandlerConfigsOnPublish {
		if v != nil {
			return *v
		}
		var ret ChannelNamespaceHandlerConfigsOnPublish
		return ret
	}).(ChannelNamespaceHandlerConfigsOnPublishOutput)
}

// Behavior for the handler. Valid values: `CODE`, `DIRECT`.
func (o ChannelNamespaceHandlerConfigsOnPublishPtrOutput) Behavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelNamespaceHandlerConfigsOnPublish) *string {
		if v == nil {
			return nil
		}
		return &v.Behavior
	}).(pulumi.StringPtrOutput)
}

// Integration data source configuration for the handler. See Integration below.
func (o ChannelNamespaceHandlerConfigsOnPublishPtrOutput) Integration() ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput {
	return o.ApplyT(func(v *ChannelNamespaceHandlerConfigsOnPublish) *ChannelNamespaceHandlerConfigsOnPublishIntegration {
		if v == nil {
			return nil
		}
		return v.Integration
	}).(ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput)
}

type ChannelNamespaceHandlerConfigsOnPublishIntegration struct {
	// Unique name of the data source that has been configured on the API.
	DataSourceName string `pulumi:"dataSourceName"`
	// Configuration for a Lambda data source. See Lambda Config below.
	LambdaConfig *ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfig `pulumi:"lambdaConfig"`
}

// ChannelNamespaceHandlerConfigsOnPublishIntegrationInput is an input type that accepts ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs and ChannelNamespaceHandlerConfigsOnPublishIntegrationOutput values.
// You can construct a concrete instance of `ChannelNamespaceHandlerConfigsOnPublishIntegrationInput` via:
//
//	ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs{...}
type ChannelNamespaceHandlerConfigsOnPublishIntegrationInput interface {
	pulumi.Input

	ToChannelNamespaceHandlerConfigsOnPublishIntegrationOutput() ChannelNamespaceHandlerConfigsOnPublishIntegrationOutput
	ToChannelNamespaceHandlerConfigsOnPublishIntegrationOutputWithContext(context.Context) ChannelNamespaceHandlerConfigsOnPublishIntegrationOutput
}

type ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs struct {
	// Unique name of the data source that has been configured on the API.
	DataSourceName pulumi.StringInput `pulumi:"dataSourceName"`
	// Configuration for a Lambda data source. See Lambda Config below.
	LambdaConfig ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrInput `pulumi:"lambdaConfig"`
}

func (ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelNamespaceHandlerConfigsOnPublishIntegration)(nil)).Elem()
}

func (i ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs) ToChannelNamespaceHandlerConfigsOnPublishIntegrationOutput() ChannelNamespaceHandlerConfigsOnPublishIntegrationOutput {
	return i.ToChannelNamespaceHandlerConfigsOnPublishIntegrationOutputWithContext(context.Background())
}

func (i ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs) ToChannelNamespaceHandlerConfigsOnPublishIntegrationOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnPublishIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNamespaceHandlerConfigsOnPublishIntegrationOutput)
}

func (i ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs) ToChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput() ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput {
	return i.ToChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutputWithContext(context.Background())
}

func (i ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs) ToChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNamespaceHandlerConfigsOnPublishIntegrationOutput).ToChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutputWithContext(ctx)
}

// ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrInput is an input type that accepts ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs, ChannelNamespaceHandlerConfigsOnPublishIntegrationPtr and ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput values.
// You can construct a concrete instance of `ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrInput` via:
//
//	        ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs{...}
//
//	or:
//
//	        nil
type ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrInput interface {
	pulumi.Input

	ToChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput() ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput
	ToChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutputWithContext(context.Context) ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput
}

type channelNamespaceHandlerConfigsOnPublishIntegrationPtrType ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs

func ChannelNamespaceHandlerConfigsOnPublishIntegrationPtr(v *ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs) ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrInput {
	return (*channelNamespaceHandlerConfigsOnPublishIntegrationPtrType)(v)
}

func (*channelNamespaceHandlerConfigsOnPublishIntegrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelNamespaceHandlerConfigsOnPublishIntegration)(nil)).Elem()
}

func (i *channelNamespaceHandlerConfigsOnPublishIntegrationPtrType) ToChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput() ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput {
	return i.ToChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutputWithContext(context.Background())
}

func (i *channelNamespaceHandlerConfigsOnPublishIntegrationPtrType) ToChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput)
}

type ChannelNamespaceHandlerConfigsOnPublishIntegrationOutput struct{ *pulumi.OutputState }

func (ChannelNamespaceHandlerConfigsOnPublishIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelNamespaceHandlerConfigsOnPublishIntegration)(nil)).Elem()
}

func (o ChannelNamespaceHandlerConfigsOnPublishIntegrationOutput) ToChannelNamespaceHandlerConfigsOnPublishIntegrationOutput() ChannelNamespaceHandlerConfigsOnPublishIntegrationOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsOnPublishIntegrationOutput) ToChannelNamespaceHandlerConfigsOnPublishIntegrationOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnPublishIntegrationOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsOnPublishIntegrationOutput) ToChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput() ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput {
	return o.ToChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutputWithContext(context.Background())
}

func (o ChannelNamespaceHandlerConfigsOnPublishIntegrationOutput) ToChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelNamespaceHandlerConfigsOnPublishIntegration) *ChannelNamespaceHandlerConfigsOnPublishIntegration {
		return &v
	}).(ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput)
}

// Unique name of the data source that has been configured on the API.
func (o ChannelNamespaceHandlerConfigsOnPublishIntegrationOutput) DataSourceName() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelNamespaceHandlerConfigsOnPublishIntegration) string { return v.DataSourceName }).(pulumi.StringOutput)
}

// Configuration for a Lambda data source. See Lambda Config below.
func (o ChannelNamespaceHandlerConfigsOnPublishIntegrationOutput) LambdaConfig() ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput {
	return o.ApplyT(func(v ChannelNamespaceHandlerConfigsOnPublishIntegration) *ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfig {
		return v.LambdaConfig
	}).(ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput)
}

type ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput struct{ *pulumi.OutputState }

func (ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelNamespaceHandlerConfigsOnPublishIntegration)(nil)).Elem()
}

func (o ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput) ToChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput() ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput) ToChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput) Elem() ChannelNamespaceHandlerConfigsOnPublishIntegrationOutput {
	return o.ApplyT(func(v *ChannelNamespaceHandlerConfigsOnPublishIntegration) ChannelNamespaceHandlerConfigsOnPublishIntegration {
		if v != nil {
			return *v
		}
		var ret ChannelNamespaceHandlerConfigsOnPublishIntegration
		return ret
	}).(ChannelNamespaceHandlerConfigsOnPublishIntegrationOutput)
}

// Unique name of the data source that has been configured on the API.
func (o ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput) DataSourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelNamespaceHandlerConfigsOnPublishIntegration) *string {
		if v == nil {
			return nil
		}
		return &v.DataSourceName
	}).(pulumi.StringPtrOutput)
}

// Configuration for a Lambda data source. See Lambda Config below.
func (o ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput) LambdaConfig() ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput {
	return o.ApplyT(func(v *ChannelNamespaceHandlerConfigsOnPublishIntegration) *ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfig {
		if v == nil {
			return nil
		}
		return v.LambdaConfig
	}).(ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput)
}

type ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfig struct {
	// Invocation type for a Lambda data source. Valid values: `REQUEST_RESPONSE`, `EVENT`.
	InvokeType *string `pulumi:"invokeType"`
}

// ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigInput is an input type that accepts ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigArgs and ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigOutput values.
// You can construct a concrete instance of `ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigInput` via:
//
//	ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigArgs{...}
type ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigInput interface {
	pulumi.Input

	ToChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigOutput() ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigOutput
	ToChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigOutputWithContext(context.Context) ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigOutput
}

type ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigArgs struct {
	// Invocation type for a Lambda data source. Valid values: `REQUEST_RESPONSE`, `EVENT`.
	InvokeType pulumi.StringPtrInput `pulumi:"invokeType"`
}

func (ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfig)(nil)).Elem()
}

func (i ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigArgs) ToChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigOutput() ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigOutput {
	return i.ToChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigOutputWithContext(context.Background())
}

func (i ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigArgs) ToChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigOutput)
}

func (i ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigArgs) ToChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput() ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput {
	return i.ToChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutputWithContext(context.Background())
}

func (i ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigArgs) ToChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigOutput).ToChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutputWithContext(ctx)
}

// ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrInput is an input type that accepts ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigArgs, ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtr and ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput values.
// You can construct a concrete instance of `ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrInput` via:
//
//	        ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigArgs{...}
//
//	or:
//
//	        nil
type ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrInput interface {
	pulumi.Input

	ToChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput() ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput
	ToChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutputWithContext(context.Context) ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput
}

type channelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrType ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigArgs

func ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtr(v *ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigArgs) ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrInput {
	return (*channelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrType)(v)
}

func (*channelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfig)(nil)).Elem()
}

func (i *channelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrType) ToChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput() ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput {
	return i.ToChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutputWithContext(context.Background())
}

func (i *channelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrType) ToChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput)
}

type ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigOutput struct{ *pulumi.OutputState }

func (ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfig)(nil)).Elem()
}

func (o ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigOutput) ToChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigOutput() ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigOutput) ToChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigOutput) ToChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput() ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput {
	return o.ToChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutputWithContext(context.Background())
}

func (o ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigOutput) ToChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfig) *ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfig {
		return &v
	}).(ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput)
}

// Invocation type for a Lambda data source. Valid values: `REQUEST_RESPONSE`, `EVENT`.
func (o ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigOutput) InvokeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfig) *string { return v.InvokeType }).(pulumi.StringPtrOutput)
}

type ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput struct{ *pulumi.OutputState }

func (ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfig)(nil)).Elem()
}

func (o ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput) ToChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput() ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput) ToChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput) Elem() ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigOutput {
	return o.ApplyT(func(v *ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfig) ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfig {
		if v != nil {
			return *v
		}
		var ret ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfig
		return ret
	}).(ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigOutput)
}

// Invocation type for a Lambda data source. Valid values: `REQUEST_RESPONSE`, `EVENT`.
func (o ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput) InvokeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return v.InvokeType
	}).(pulumi.StringPtrOutput)
}

type ChannelNamespaceHandlerConfigsOnSubscribe struct {
	// Behavior for the handler. Valid values: `CODE`, `DIRECT`.
	Behavior string `pulumi:"behavior"`
	// Integration data source configuration for the handler. See Integration below.
	Integration *ChannelNamespaceHandlerConfigsOnSubscribeIntegration `pulumi:"integration"`
}

// ChannelNamespaceHandlerConfigsOnSubscribeInput is an input type that accepts ChannelNamespaceHandlerConfigsOnSubscribeArgs and ChannelNamespaceHandlerConfigsOnSubscribeOutput values.
// You can construct a concrete instance of `ChannelNamespaceHandlerConfigsOnSubscribeInput` via:
//
//	ChannelNamespaceHandlerConfigsOnSubscribeArgs{...}
type ChannelNamespaceHandlerConfigsOnSubscribeInput interface {
	pulumi.Input

	ToChannelNamespaceHandlerConfigsOnSubscribeOutput() ChannelNamespaceHandlerConfigsOnSubscribeOutput
	ToChannelNamespaceHandlerConfigsOnSubscribeOutputWithContext(context.Context) ChannelNamespaceHandlerConfigsOnSubscribeOutput
}

type ChannelNamespaceHandlerConfigsOnSubscribeArgs struct {
	// Behavior for the handler. Valid values: `CODE`, `DIRECT`.
	Behavior pulumi.StringInput `pulumi:"behavior"`
	// Integration data source configuration for the handler. See Integration below.
	Integration ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrInput `pulumi:"integration"`
}

func (ChannelNamespaceHandlerConfigsOnSubscribeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelNamespaceHandlerConfigsOnSubscribe)(nil)).Elem()
}

func (i ChannelNamespaceHandlerConfigsOnSubscribeArgs) ToChannelNamespaceHandlerConfigsOnSubscribeOutput() ChannelNamespaceHandlerConfigsOnSubscribeOutput {
	return i.ToChannelNamespaceHandlerConfigsOnSubscribeOutputWithContext(context.Background())
}

func (i ChannelNamespaceHandlerConfigsOnSubscribeArgs) ToChannelNamespaceHandlerConfigsOnSubscribeOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnSubscribeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNamespaceHandlerConfigsOnSubscribeOutput)
}

func (i ChannelNamespaceHandlerConfigsOnSubscribeArgs) ToChannelNamespaceHandlerConfigsOnSubscribePtrOutput() ChannelNamespaceHandlerConfigsOnSubscribePtrOutput {
	return i.ToChannelNamespaceHandlerConfigsOnSubscribePtrOutputWithContext(context.Background())
}

func (i ChannelNamespaceHandlerConfigsOnSubscribeArgs) ToChannelNamespaceHandlerConfigsOnSubscribePtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnSubscribePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNamespaceHandlerConfigsOnSubscribeOutput).ToChannelNamespaceHandlerConfigsOnSubscribePtrOutputWithContext(ctx)
}

// ChannelNamespaceHandlerConfigsOnSubscribePtrInput is an input type that accepts ChannelNamespaceHandlerConfigsOnSubscribeArgs, ChannelNamespaceHandlerConfigsOnSubscribePtr and ChannelNamespaceHandlerConfigsOnSubscribePtrOutput values.
// You can construct a concrete instance of `ChannelNamespaceHandlerConfigsOnSubscribePtrInput` via:
//
//	        ChannelNamespaceHandlerConfigsOnSubscribeArgs{...}
//
//	or:
//
//	        nil
type ChannelNamespaceHandlerConfigsOnSubscribePtrInput interface {
	pulumi.Input

	ToChannelNamespaceHandlerConfigsOnSubscribePtrOutput() ChannelNamespaceHandlerConfigsOnSubscribePtrOutput
	ToChannelNamespaceHandlerConfigsOnSubscribePtrOutputWithContext(context.Context) ChannelNamespaceHandlerConfigsOnSubscribePtrOutput
}

type channelNamespaceHandlerConfigsOnSubscribePtrType ChannelNamespaceHandlerConfigsOnSubscribeArgs

func ChannelNamespaceHandlerConfigsOnSubscribePtr(v *ChannelNamespaceHandlerConfigsOnSubscribeArgs) ChannelNamespaceHandlerConfigsOnSubscribePtrInput {
	return (*channelNamespaceHandlerConfigsOnSubscribePtrType)(v)
}

func (*channelNamespaceHandlerConfigsOnSubscribePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelNamespaceHandlerConfigsOnSubscribe)(nil)).Elem()
}

func (i *channelNamespaceHandlerConfigsOnSubscribePtrType) ToChannelNamespaceHandlerConfigsOnSubscribePtrOutput() ChannelNamespaceHandlerConfigsOnSubscribePtrOutput {
	return i.ToChannelNamespaceHandlerConfigsOnSubscribePtrOutputWithContext(context.Background())
}

func (i *channelNamespaceHandlerConfigsOnSubscribePtrType) ToChannelNamespaceHandlerConfigsOnSubscribePtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnSubscribePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNamespaceHandlerConfigsOnSubscribePtrOutput)
}

type ChannelNamespaceHandlerConfigsOnSubscribeOutput struct{ *pulumi.OutputState }

func (ChannelNamespaceHandlerConfigsOnSubscribeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelNamespaceHandlerConfigsOnSubscribe)(nil)).Elem()
}

func (o ChannelNamespaceHandlerConfigsOnSubscribeOutput) ToChannelNamespaceHandlerConfigsOnSubscribeOutput() ChannelNamespaceHandlerConfigsOnSubscribeOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsOnSubscribeOutput) ToChannelNamespaceHandlerConfigsOnSubscribeOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnSubscribeOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsOnSubscribeOutput) ToChannelNamespaceHandlerConfigsOnSubscribePtrOutput() ChannelNamespaceHandlerConfigsOnSubscribePtrOutput {
	return o.ToChannelNamespaceHandlerConfigsOnSubscribePtrOutputWithContext(context.Background())
}

func (o ChannelNamespaceHandlerConfigsOnSubscribeOutput) ToChannelNamespaceHandlerConfigsOnSubscribePtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnSubscribePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelNamespaceHandlerConfigsOnSubscribe) *ChannelNamespaceHandlerConfigsOnSubscribe {
		return &v
	}).(ChannelNamespaceHandlerConfigsOnSubscribePtrOutput)
}

// Behavior for the handler. Valid values: `CODE`, `DIRECT`.
func (o ChannelNamespaceHandlerConfigsOnSubscribeOutput) Behavior() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelNamespaceHandlerConfigsOnSubscribe) string { return v.Behavior }).(pulumi.StringOutput)
}

// Integration data source configuration for the handler. See Integration below.
func (o ChannelNamespaceHandlerConfigsOnSubscribeOutput) Integration() ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput {
	return o.ApplyT(func(v ChannelNamespaceHandlerConfigsOnSubscribe) *ChannelNamespaceHandlerConfigsOnSubscribeIntegration {
		return v.Integration
	}).(ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput)
}

type ChannelNamespaceHandlerConfigsOnSubscribePtrOutput struct{ *pulumi.OutputState }

func (ChannelNamespaceHandlerConfigsOnSubscribePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelNamespaceHandlerConfigsOnSubscribe)(nil)).Elem()
}

func (o ChannelNamespaceHandlerConfigsOnSubscribePtrOutput) ToChannelNamespaceHandlerConfigsOnSubscribePtrOutput() ChannelNamespaceHandlerConfigsOnSubscribePtrOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsOnSubscribePtrOutput) ToChannelNamespaceHandlerConfigsOnSubscribePtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnSubscribePtrOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsOnSubscribePtrOutput) Elem() ChannelNamespaceHandlerConfigsOnSubscribeOutput {
	return o.ApplyT(func(v *ChannelNamespaceHandlerConfigsOnSubscribe) ChannelNamespaceHandlerConfigsOnSubscribe {
		if v != nil {
			return *v
		}
		var ret ChannelNamespaceHandlerConfigsOnSubscribe
		return ret
	}).(ChannelNamespaceHandlerConfigsOnSubscribeOutput)
}

// Behavior for the handler. Valid values: `CODE`, `DIRECT`.
func (o ChannelNamespaceHandlerConfigsOnSubscribePtrOutput) Behavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelNamespaceHandlerConfigsOnSubscribe) *string {
		if v == nil {
			return nil
		}
		return &v.Behavior
	}).(pulumi.StringPtrOutput)
}

// Integration data source configuration for the handler. See Integration below.
func (o ChannelNamespaceHandlerConfigsOnSubscribePtrOutput) Integration() ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput {
	return o.ApplyT(func(v *ChannelNamespaceHandlerConfigsOnSubscribe) *ChannelNamespaceHandlerConfigsOnSubscribeIntegration {
		if v == nil {
			return nil
		}
		return v.Integration
	}).(ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput)
}

type ChannelNamespaceHandlerConfigsOnSubscribeIntegration struct {
	// Unique name of the data source that has been configured on the API.
	DataSourceName string `pulumi:"dataSourceName"`
	// Configuration for a Lambda data source. See Lambda Config below.
	LambdaConfig *ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfig `pulumi:"lambdaConfig"`
}

// ChannelNamespaceHandlerConfigsOnSubscribeIntegrationInput is an input type that accepts ChannelNamespaceHandlerConfigsOnSubscribeIntegrationArgs and ChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutput values.
// You can construct a concrete instance of `ChannelNamespaceHandlerConfigsOnSubscribeIntegrationInput` via:
//
//	ChannelNamespaceHandlerConfigsOnSubscribeIntegrationArgs{...}
type ChannelNamespaceHandlerConfigsOnSubscribeIntegrationInput interface {
	pulumi.Input

	ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutput() ChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutput
	ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutputWithContext(context.Context) ChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutput
}

type ChannelNamespaceHandlerConfigsOnSubscribeIntegrationArgs struct {
	// Unique name of the data source that has been configured on the API.
	DataSourceName pulumi.StringInput `pulumi:"dataSourceName"`
	// Configuration for a Lambda data source. See Lambda Config below.
	LambdaConfig ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrInput `pulumi:"lambdaConfig"`
}

func (ChannelNamespaceHandlerConfigsOnSubscribeIntegrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelNamespaceHandlerConfigsOnSubscribeIntegration)(nil)).Elem()
}

func (i ChannelNamespaceHandlerConfigsOnSubscribeIntegrationArgs) ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutput() ChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutput {
	return i.ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutputWithContext(context.Background())
}

func (i ChannelNamespaceHandlerConfigsOnSubscribeIntegrationArgs) ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutput)
}

func (i ChannelNamespaceHandlerConfigsOnSubscribeIntegrationArgs) ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput() ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput {
	return i.ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutputWithContext(context.Background())
}

func (i ChannelNamespaceHandlerConfigsOnSubscribeIntegrationArgs) ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutput).ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutputWithContext(ctx)
}

// ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrInput is an input type that accepts ChannelNamespaceHandlerConfigsOnSubscribeIntegrationArgs, ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtr and ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput values.
// You can construct a concrete instance of `ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrInput` via:
//
//	        ChannelNamespaceHandlerConfigsOnSubscribeIntegrationArgs{...}
//
//	or:
//
//	        nil
type ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrInput interface {
	pulumi.Input

	ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput() ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput
	ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutputWithContext(context.Context) ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput
}

type channelNamespaceHandlerConfigsOnSubscribeIntegrationPtrType ChannelNamespaceHandlerConfigsOnSubscribeIntegrationArgs

func ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtr(v *ChannelNamespaceHandlerConfigsOnSubscribeIntegrationArgs) ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrInput {
	return (*channelNamespaceHandlerConfigsOnSubscribeIntegrationPtrType)(v)
}

func (*channelNamespaceHandlerConfigsOnSubscribeIntegrationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelNamespaceHandlerConfigsOnSubscribeIntegration)(nil)).Elem()
}

func (i *channelNamespaceHandlerConfigsOnSubscribeIntegrationPtrType) ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput() ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput {
	return i.ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutputWithContext(context.Background())
}

func (i *channelNamespaceHandlerConfigsOnSubscribeIntegrationPtrType) ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput)
}

type ChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutput struct{ *pulumi.OutputState }

func (ChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelNamespaceHandlerConfigsOnSubscribeIntegration)(nil)).Elem()
}

func (o ChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutput) ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutput() ChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutput) ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutput) ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput() ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput {
	return o.ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutputWithContext(context.Background())
}

func (o ChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutput) ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelNamespaceHandlerConfigsOnSubscribeIntegration) *ChannelNamespaceHandlerConfigsOnSubscribeIntegration {
		return &v
	}).(ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput)
}

// Unique name of the data source that has been configured on the API.
func (o ChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutput) DataSourceName() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelNamespaceHandlerConfigsOnSubscribeIntegration) string { return v.DataSourceName }).(pulumi.StringOutput)
}

// Configuration for a Lambda data source. See Lambda Config below.
func (o ChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutput) LambdaConfig() ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput {
	return o.ApplyT(func(v ChannelNamespaceHandlerConfigsOnSubscribeIntegration) *ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfig {
		return v.LambdaConfig
	}).(ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput)
}

type ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput struct{ *pulumi.OutputState }

func (ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelNamespaceHandlerConfigsOnSubscribeIntegration)(nil)).Elem()
}

func (o ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput) ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput() ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput) ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput) Elem() ChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutput {
	return o.ApplyT(func(v *ChannelNamespaceHandlerConfigsOnSubscribeIntegration) ChannelNamespaceHandlerConfigsOnSubscribeIntegration {
		if v != nil {
			return *v
		}
		var ret ChannelNamespaceHandlerConfigsOnSubscribeIntegration
		return ret
	}).(ChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutput)
}

// Unique name of the data source that has been configured on the API.
func (o ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput) DataSourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelNamespaceHandlerConfigsOnSubscribeIntegration) *string {
		if v == nil {
			return nil
		}
		return &v.DataSourceName
	}).(pulumi.StringPtrOutput)
}

// Configuration for a Lambda data source. See Lambda Config below.
func (o ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput) LambdaConfig() ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput {
	return o.ApplyT(func(v *ChannelNamespaceHandlerConfigsOnSubscribeIntegration) *ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfig {
		if v == nil {
			return nil
		}
		return v.LambdaConfig
	}).(ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput)
}

type ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfig struct {
	// Invocation type for a Lambda data source. Valid values: `REQUEST_RESPONSE`, `EVENT`.
	InvokeType *string `pulumi:"invokeType"`
}

// ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigInput is an input type that accepts ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigArgs and ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigOutput values.
// You can construct a concrete instance of `ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigInput` via:
//
//	ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigArgs{...}
type ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigInput interface {
	pulumi.Input

	ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigOutput() ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigOutput
	ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigOutputWithContext(context.Context) ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigOutput
}

type ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigArgs struct {
	// Invocation type for a Lambda data source. Valid values: `REQUEST_RESPONSE`, `EVENT`.
	InvokeType pulumi.StringPtrInput `pulumi:"invokeType"`
}

func (ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfig)(nil)).Elem()
}

func (i ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigArgs) ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigOutput() ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigOutput {
	return i.ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigOutputWithContext(context.Background())
}

func (i ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigArgs) ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigOutput)
}

func (i ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigArgs) ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput() ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput {
	return i.ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutputWithContext(context.Background())
}

func (i ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigArgs) ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigOutput).ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutputWithContext(ctx)
}

// ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrInput is an input type that accepts ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigArgs, ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtr and ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput values.
// You can construct a concrete instance of `ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrInput` via:
//
//	        ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigArgs{...}
//
//	or:
//
//	        nil
type ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrInput interface {
	pulumi.Input

	ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput() ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput
	ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutputWithContext(context.Context) ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput
}

type channelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrType ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigArgs

func ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtr(v *ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigArgs) ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrInput {
	return (*channelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrType)(v)
}

func (*channelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfig)(nil)).Elem()
}

func (i *channelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrType) ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput() ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput {
	return i.ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutputWithContext(context.Background())
}

func (i *channelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrType) ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput)
}

type ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigOutput struct{ *pulumi.OutputState }

func (ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfig)(nil)).Elem()
}

func (o ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigOutput) ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigOutput() ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigOutput) ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigOutput) ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput() ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput {
	return o.ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutputWithContext(context.Background())
}

func (o ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigOutput) ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfig) *ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfig {
		return &v
	}).(ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput)
}

// Invocation type for a Lambda data source. Valid values: `REQUEST_RESPONSE`, `EVENT`.
func (o ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigOutput) InvokeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfig) *string { return v.InvokeType }).(pulumi.StringPtrOutput)
}

type ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput struct{ *pulumi.OutputState }

func (ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfig)(nil)).Elem()
}

func (o ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput) ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput() ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput) ToChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutputWithContext(ctx context.Context) ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput {
	return o
}

func (o ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput) Elem() ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigOutput {
	return o.ApplyT(func(v *ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfig) ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfig {
		if v != nil {
			return *v
		}
		var ret ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfig
		return ret
	}).(ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigOutput)
}

// Invocation type for a Lambda data source. Valid values: `REQUEST_RESPONSE`, `EVENT`.
func (o ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput) InvokeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return v.InvokeType
	}).(pulumi.StringPtrOutput)
}

type ChannelNamespacePublishAuthMode struct {
	// Type of authentication. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`, `AWS_LAMBDA`.
	AuthType string `pulumi:"authType"`
}

// ChannelNamespacePublishAuthModeInput is an input type that accepts ChannelNamespacePublishAuthModeArgs and ChannelNamespacePublishAuthModeOutput values.
// You can construct a concrete instance of `ChannelNamespacePublishAuthModeInput` via:
//
//	ChannelNamespacePublishAuthModeArgs{...}
type ChannelNamespacePublishAuthModeInput interface {
	pulumi.Input

	ToChannelNamespacePublishAuthModeOutput() ChannelNamespacePublishAuthModeOutput
	ToChannelNamespacePublishAuthModeOutputWithContext(context.Context) ChannelNamespacePublishAuthModeOutput
}

type ChannelNamespacePublishAuthModeArgs struct {
	// Type of authentication. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`, `AWS_LAMBDA`.
	AuthType pulumi.StringInput `pulumi:"authType"`
}

func (ChannelNamespacePublishAuthModeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelNamespacePublishAuthMode)(nil)).Elem()
}

func (i ChannelNamespacePublishAuthModeArgs) ToChannelNamespacePublishAuthModeOutput() ChannelNamespacePublishAuthModeOutput {
	return i.ToChannelNamespacePublishAuthModeOutputWithContext(context.Background())
}

func (i ChannelNamespacePublishAuthModeArgs) ToChannelNamespacePublishAuthModeOutputWithContext(ctx context.Context) ChannelNamespacePublishAuthModeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNamespacePublishAuthModeOutput)
}

// ChannelNamespacePublishAuthModeArrayInput is an input type that accepts ChannelNamespacePublishAuthModeArray and ChannelNamespacePublishAuthModeArrayOutput values.
// You can construct a concrete instance of `ChannelNamespacePublishAuthModeArrayInput` via:
//
//	ChannelNamespacePublishAuthModeArray{ ChannelNamespacePublishAuthModeArgs{...} }
type ChannelNamespacePublishAuthModeArrayInput interface {
	pulumi.Input

	ToChannelNamespacePublishAuthModeArrayOutput() ChannelNamespacePublishAuthModeArrayOutput
	ToChannelNamespacePublishAuthModeArrayOutputWithContext(context.Context) ChannelNamespacePublishAuthModeArrayOutput
}

type ChannelNamespacePublishAuthModeArray []ChannelNamespacePublishAuthModeInput

func (ChannelNamespacePublishAuthModeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelNamespacePublishAuthMode)(nil)).Elem()
}

func (i ChannelNamespacePublishAuthModeArray) ToChannelNamespacePublishAuthModeArrayOutput() ChannelNamespacePublishAuthModeArrayOutput {
	return i.ToChannelNamespacePublishAuthModeArrayOutputWithContext(context.Background())
}

func (i ChannelNamespacePublishAuthModeArray) ToChannelNamespacePublishAuthModeArrayOutputWithContext(ctx context.Context) ChannelNamespacePublishAuthModeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNamespacePublishAuthModeArrayOutput)
}

type ChannelNamespacePublishAuthModeOutput struct{ *pulumi.OutputState }

func (ChannelNamespacePublishAuthModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelNamespacePublishAuthMode)(nil)).Elem()
}

func (o ChannelNamespacePublishAuthModeOutput) ToChannelNamespacePublishAuthModeOutput() ChannelNamespacePublishAuthModeOutput {
	return o
}

func (o ChannelNamespacePublishAuthModeOutput) ToChannelNamespacePublishAuthModeOutputWithContext(ctx context.Context) ChannelNamespacePublishAuthModeOutput {
	return o
}

// Type of authentication. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`, `AWS_LAMBDA`.
func (o ChannelNamespacePublishAuthModeOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelNamespacePublishAuthMode) string { return v.AuthType }).(pulumi.StringOutput)
}

type ChannelNamespacePublishAuthModeArrayOutput struct{ *pulumi.OutputState }

func (ChannelNamespacePublishAuthModeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelNamespacePublishAuthMode)(nil)).Elem()
}

func (o ChannelNamespacePublishAuthModeArrayOutput) ToChannelNamespacePublishAuthModeArrayOutput() ChannelNamespacePublishAuthModeArrayOutput {
	return o
}

func (o ChannelNamespacePublishAuthModeArrayOutput) ToChannelNamespacePublishAuthModeArrayOutputWithContext(ctx context.Context) ChannelNamespacePublishAuthModeArrayOutput {
	return o
}

func (o ChannelNamespacePublishAuthModeArrayOutput) Index(i pulumi.IntInput) ChannelNamespacePublishAuthModeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChannelNamespacePublishAuthMode {
		return vs[0].([]ChannelNamespacePublishAuthMode)[vs[1].(int)]
	}).(ChannelNamespacePublishAuthModeOutput)
}

type ChannelNamespaceSubscribeAuthMode struct {
	// Type of authentication. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`, `AWS_LAMBDA`.
	AuthType string `pulumi:"authType"`
}

// ChannelNamespaceSubscribeAuthModeInput is an input type that accepts ChannelNamespaceSubscribeAuthModeArgs and ChannelNamespaceSubscribeAuthModeOutput values.
// You can construct a concrete instance of `ChannelNamespaceSubscribeAuthModeInput` via:
//
//	ChannelNamespaceSubscribeAuthModeArgs{...}
type ChannelNamespaceSubscribeAuthModeInput interface {
	pulumi.Input

	ToChannelNamespaceSubscribeAuthModeOutput() ChannelNamespaceSubscribeAuthModeOutput
	ToChannelNamespaceSubscribeAuthModeOutputWithContext(context.Context) ChannelNamespaceSubscribeAuthModeOutput
}

type ChannelNamespaceSubscribeAuthModeArgs struct {
	// Type of authentication. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`, `AWS_LAMBDA`.
	AuthType pulumi.StringInput `pulumi:"authType"`
}

func (ChannelNamespaceSubscribeAuthModeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelNamespaceSubscribeAuthMode)(nil)).Elem()
}

func (i ChannelNamespaceSubscribeAuthModeArgs) ToChannelNamespaceSubscribeAuthModeOutput() ChannelNamespaceSubscribeAuthModeOutput {
	return i.ToChannelNamespaceSubscribeAuthModeOutputWithContext(context.Background())
}

func (i ChannelNamespaceSubscribeAuthModeArgs) ToChannelNamespaceSubscribeAuthModeOutputWithContext(ctx context.Context) ChannelNamespaceSubscribeAuthModeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNamespaceSubscribeAuthModeOutput)
}

// ChannelNamespaceSubscribeAuthModeArrayInput is an input type that accepts ChannelNamespaceSubscribeAuthModeArray and ChannelNamespaceSubscribeAuthModeArrayOutput values.
// You can construct a concrete instance of `ChannelNamespaceSubscribeAuthModeArrayInput` via:
//
//	ChannelNamespaceSubscribeAuthModeArray{ ChannelNamespaceSubscribeAuthModeArgs{...} }
type ChannelNamespaceSubscribeAuthModeArrayInput interface {
	pulumi.Input

	ToChannelNamespaceSubscribeAuthModeArrayOutput() ChannelNamespaceSubscribeAuthModeArrayOutput
	ToChannelNamespaceSubscribeAuthModeArrayOutputWithContext(context.Context) ChannelNamespaceSubscribeAuthModeArrayOutput
}

type ChannelNamespaceSubscribeAuthModeArray []ChannelNamespaceSubscribeAuthModeInput

func (ChannelNamespaceSubscribeAuthModeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelNamespaceSubscribeAuthMode)(nil)).Elem()
}

func (i ChannelNamespaceSubscribeAuthModeArray) ToChannelNamespaceSubscribeAuthModeArrayOutput() ChannelNamespaceSubscribeAuthModeArrayOutput {
	return i.ToChannelNamespaceSubscribeAuthModeArrayOutputWithContext(context.Background())
}

func (i ChannelNamespaceSubscribeAuthModeArray) ToChannelNamespaceSubscribeAuthModeArrayOutputWithContext(ctx context.Context) ChannelNamespaceSubscribeAuthModeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ChannelNamespaceSubscribeAuthModeArrayOutput)
}

type ChannelNamespaceSubscribeAuthModeOutput struct{ *pulumi.OutputState }

func (ChannelNamespaceSubscribeAuthModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ChannelNamespaceSubscribeAuthMode)(nil)).Elem()
}

func (o ChannelNamespaceSubscribeAuthModeOutput) ToChannelNamespaceSubscribeAuthModeOutput() ChannelNamespaceSubscribeAuthModeOutput {
	return o
}

func (o ChannelNamespaceSubscribeAuthModeOutput) ToChannelNamespaceSubscribeAuthModeOutputWithContext(ctx context.Context) ChannelNamespaceSubscribeAuthModeOutput {
	return o
}

// Type of authentication. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`, `AWS_LAMBDA`.
func (o ChannelNamespaceSubscribeAuthModeOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v ChannelNamespaceSubscribeAuthMode) string { return v.AuthType }).(pulumi.StringOutput)
}

type ChannelNamespaceSubscribeAuthModeArrayOutput struct{ *pulumi.OutputState }

func (ChannelNamespaceSubscribeAuthModeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ChannelNamespaceSubscribeAuthMode)(nil)).Elem()
}

func (o ChannelNamespaceSubscribeAuthModeArrayOutput) ToChannelNamespaceSubscribeAuthModeArrayOutput() ChannelNamespaceSubscribeAuthModeArrayOutput {
	return o
}

func (o ChannelNamespaceSubscribeAuthModeArrayOutput) ToChannelNamespaceSubscribeAuthModeArrayOutputWithContext(ctx context.Context) ChannelNamespaceSubscribeAuthModeArrayOutput {
	return o
}

func (o ChannelNamespaceSubscribeAuthModeArrayOutput) Index(i pulumi.IntInput) ChannelNamespaceSubscribeAuthModeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ChannelNamespaceSubscribeAuthMode {
		return vs[0].([]ChannelNamespaceSubscribeAuthMode)[vs[1].(int)]
	}).(ChannelNamespaceSubscribeAuthModeOutput)
}

type DataSourceDynamodbConfig struct {
	// The DeltaSyncConfig for a versioned data source. See `deltaSyncConfig` Block for details.
	DeltaSyncConfig *DataSourceDynamodbConfigDeltaSyncConfig `pulumi:"deltaSyncConfig"`
	// AWS region of the DynamoDB table. Defaults to current region.
	Region *string `pulumi:"region"`
	// Name of the DynamoDB table.
	TableName string `pulumi:"tableName"`
	// Set to `true` to use Amazon Cognito credentials with this data source.
	UseCallerCredentials *bool `pulumi:"useCallerCredentials"`
	// Detects Conflict Detection and Resolution with this data source.
	Versioned *bool `pulumi:"versioned"`
}

// DataSourceDynamodbConfigInput is an input type that accepts DataSourceDynamodbConfigArgs and DataSourceDynamodbConfigOutput values.
// You can construct a concrete instance of `DataSourceDynamodbConfigInput` via:
//
//	DataSourceDynamodbConfigArgs{...}
type DataSourceDynamodbConfigInput interface {
	pulumi.Input

	ToDataSourceDynamodbConfigOutput() DataSourceDynamodbConfigOutput
	ToDataSourceDynamodbConfigOutputWithContext(context.Context) DataSourceDynamodbConfigOutput
}

type DataSourceDynamodbConfigArgs struct {
	// The DeltaSyncConfig for a versioned data source. See `deltaSyncConfig` Block for details.
	DeltaSyncConfig DataSourceDynamodbConfigDeltaSyncConfigPtrInput `pulumi:"deltaSyncConfig"`
	// AWS region of the DynamoDB table. Defaults to current region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Name of the DynamoDB table.
	TableName pulumi.StringInput `pulumi:"tableName"`
	// Set to `true` to use Amazon Cognito credentials with this data source.
	UseCallerCredentials pulumi.BoolPtrInput `pulumi:"useCallerCredentials"`
	// Detects Conflict Detection and Resolution with this data source.
	Versioned pulumi.BoolPtrInput `pulumi:"versioned"`
}

func (DataSourceDynamodbConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDynamodbConfig)(nil)).Elem()
}

func (i DataSourceDynamodbConfigArgs) ToDataSourceDynamodbConfigOutput() DataSourceDynamodbConfigOutput {
	return i.ToDataSourceDynamodbConfigOutputWithContext(context.Background())
}

func (i DataSourceDynamodbConfigArgs) ToDataSourceDynamodbConfigOutputWithContext(ctx context.Context) DataSourceDynamodbConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDynamodbConfigOutput)
}

func (i DataSourceDynamodbConfigArgs) ToDataSourceDynamodbConfigPtrOutput() DataSourceDynamodbConfigPtrOutput {
	return i.ToDataSourceDynamodbConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceDynamodbConfigArgs) ToDataSourceDynamodbConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamodbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDynamodbConfigOutput).ToDataSourceDynamodbConfigPtrOutputWithContext(ctx)
}

// DataSourceDynamodbConfigPtrInput is an input type that accepts DataSourceDynamodbConfigArgs, DataSourceDynamodbConfigPtr and DataSourceDynamodbConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceDynamodbConfigPtrInput` via:
//
//	        DataSourceDynamodbConfigArgs{...}
//
//	or:
//
//	        nil
type DataSourceDynamodbConfigPtrInput interface {
	pulumi.Input

	ToDataSourceDynamodbConfigPtrOutput() DataSourceDynamodbConfigPtrOutput
	ToDataSourceDynamodbConfigPtrOutputWithContext(context.Context) DataSourceDynamodbConfigPtrOutput
}

type dataSourceDynamodbConfigPtrType DataSourceDynamodbConfigArgs

func DataSourceDynamodbConfigPtr(v *DataSourceDynamodbConfigArgs) DataSourceDynamodbConfigPtrInput {
	return (*dataSourceDynamodbConfigPtrType)(v)
}

func (*dataSourceDynamodbConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDynamodbConfig)(nil)).Elem()
}

func (i *dataSourceDynamodbConfigPtrType) ToDataSourceDynamodbConfigPtrOutput() DataSourceDynamodbConfigPtrOutput {
	return i.ToDataSourceDynamodbConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceDynamodbConfigPtrType) ToDataSourceDynamodbConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamodbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDynamodbConfigPtrOutput)
}

type DataSourceDynamodbConfigOutput struct{ *pulumi.OutputState }

func (DataSourceDynamodbConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDynamodbConfig)(nil)).Elem()
}

func (o DataSourceDynamodbConfigOutput) ToDataSourceDynamodbConfigOutput() DataSourceDynamodbConfigOutput {
	return o
}

func (o DataSourceDynamodbConfigOutput) ToDataSourceDynamodbConfigOutputWithContext(ctx context.Context) DataSourceDynamodbConfigOutput {
	return o
}

func (o DataSourceDynamodbConfigOutput) ToDataSourceDynamodbConfigPtrOutput() DataSourceDynamodbConfigPtrOutput {
	return o.ToDataSourceDynamodbConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceDynamodbConfigOutput) ToDataSourceDynamodbConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamodbConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceDynamodbConfig) *DataSourceDynamodbConfig {
		return &v
	}).(DataSourceDynamodbConfigPtrOutput)
}

// The DeltaSyncConfig for a versioned data source. See `deltaSyncConfig` Block for details.
func (o DataSourceDynamodbConfigOutput) DeltaSyncConfig() DataSourceDynamodbConfigDeltaSyncConfigPtrOutput {
	return o.ApplyT(func(v DataSourceDynamodbConfig) *DataSourceDynamodbConfigDeltaSyncConfig { return v.DeltaSyncConfig }).(DataSourceDynamodbConfigDeltaSyncConfigPtrOutput)
}

// AWS region of the DynamoDB table. Defaults to current region.
func (o DataSourceDynamodbConfigOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceDynamodbConfig) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Name of the DynamoDB table.
func (o DataSourceDynamodbConfigOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceDynamodbConfig) string { return v.TableName }).(pulumi.StringOutput)
}

// Set to `true` to use Amazon Cognito credentials with this data source.
func (o DataSourceDynamodbConfigOutput) UseCallerCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataSourceDynamodbConfig) *bool { return v.UseCallerCredentials }).(pulumi.BoolPtrOutput)
}

// Detects Conflict Detection and Resolution with this data source.
func (o DataSourceDynamodbConfigOutput) Versioned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataSourceDynamodbConfig) *bool { return v.Versioned }).(pulumi.BoolPtrOutput)
}

type DataSourceDynamodbConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceDynamodbConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDynamodbConfig)(nil)).Elem()
}

func (o DataSourceDynamodbConfigPtrOutput) ToDataSourceDynamodbConfigPtrOutput() DataSourceDynamodbConfigPtrOutput {
	return o
}

func (o DataSourceDynamodbConfigPtrOutput) ToDataSourceDynamodbConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamodbConfigPtrOutput {
	return o
}

func (o DataSourceDynamodbConfigPtrOutput) Elem() DataSourceDynamodbConfigOutput {
	return o.ApplyT(func(v *DataSourceDynamodbConfig) DataSourceDynamodbConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceDynamodbConfig
		return ret
	}).(DataSourceDynamodbConfigOutput)
}

// The DeltaSyncConfig for a versioned data source. See `deltaSyncConfig` Block for details.
func (o DataSourceDynamodbConfigPtrOutput) DeltaSyncConfig() DataSourceDynamodbConfigDeltaSyncConfigPtrOutput {
	return o.ApplyT(func(v *DataSourceDynamodbConfig) *DataSourceDynamodbConfigDeltaSyncConfig {
		if v == nil {
			return nil
		}
		return v.DeltaSyncConfig
	}).(DataSourceDynamodbConfigDeltaSyncConfigPtrOutput)
}

// AWS region of the DynamoDB table. Defaults to current region.
func (o DataSourceDynamodbConfigPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceDynamodbConfig) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Name of the DynamoDB table.
func (o DataSourceDynamodbConfigPtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceDynamodbConfig) *string {
		if v == nil {
			return nil
		}
		return &v.TableName
	}).(pulumi.StringPtrOutput)
}

// Set to `true` to use Amazon Cognito credentials with this data source.
func (o DataSourceDynamodbConfigPtrOutput) UseCallerCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataSourceDynamodbConfig) *bool {
		if v == nil {
			return nil
		}
		return v.UseCallerCredentials
	}).(pulumi.BoolPtrOutput)
}

// Detects Conflict Detection and Resolution with this data source.
func (o DataSourceDynamodbConfigPtrOutput) Versioned() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DataSourceDynamodbConfig) *bool {
		if v == nil {
			return nil
		}
		return v.Versioned
	}).(pulumi.BoolPtrOutput)
}

type DataSourceDynamodbConfigDeltaSyncConfig struct {
	// The number of minutes that an Item is stored in the data source.
	BaseTableTtl *int `pulumi:"baseTableTtl"`
	// The table name.
	DeltaSyncTableName string `pulumi:"deltaSyncTableName"`
	// The number of minutes that a Delta Sync log entry is stored in the Delta Sync table.
	DeltaSyncTableTtl *int `pulumi:"deltaSyncTableTtl"`
}

// DataSourceDynamodbConfigDeltaSyncConfigInput is an input type that accepts DataSourceDynamodbConfigDeltaSyncConfigArgs and DataSourceDynamodbConfigDeltaSyncConfigOutput values.
// You can construct a concrete instance of `DataSourceDynamodbConfigDeltaSyncConfigInput` via:
//
//	DataSourceDynamodbConfigDeltaSyncConfigArgs{...}
type DataSourceDynamodbConfigDeltaSyncConfigInput interface {
	pulumi.Input

	ToDataSourceDynamodbConfigDeltaSyncConfigOutput() DataSourceDynamodbConfigDeltaSyncConfigOutput
	ToDataSourceDynamodbConfigDeltaSyncConfigOutputWithContext(context.Context) DataSourceDynamodbConfigDeltaSyncConfigOutput
}

type DataSourceDynamodbConfigDeltaSyncConfigArgs struct {
	// The number of minutes that an Item is stored in the data source.
	BaseTableTtl pulumi.IntPtrInput `pulumi:"baseTableTtl"`
	// The table name.
	DeltaSyncTableName pulumi.StringInput `pulumi:"deltaSyncTableName"`
	// The number of minutes that a Delta Sync log entry is stored in the Delta Sync table.
	DeltaSyncTableTtl pulumi.IntPtrInput `pulumi:"deltaSyncTableTtl"`
}

func (DataSourceDynamodbConfigDeltaSyncConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDynamodbConfigDeltaSyncConfig)(nil)).Elem()
}

func (i DataSourceDynamodbConfigDeltaSyncConfigArgs) ToDataSourceDynamodbConfigDeltaSyncConfigOutput() DataSourceDynamodbConfigDeltaSyncConfigOutput {
	return i.ToDataSourceDynamodbConfigDeltaSyncConfigOutputWithContext(context.Background())
}

func (i DataSourceDynamodbConfigDeltaSyncConfigArgs) ToDataSourceDynamodbConfigDeltaSyncConfigOutputWithContext(ctx context.Context) DataSourceDynamodbConfigDeltaSyncConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDynamodbConfigDeltaSyncConfigOutput)
}

func (i DataSourceDynamodbConfigDeltaSyncConfigArgs) ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutput() DataSourceDynamodbConfigDeltaSyncConfigPtrOutput {
	return i.ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceDynamodbConfigDeltaSyncConfigArgs) ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamodbConfigDeltaSyncConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDynamodbConfigDeltaSyncConfigOutput).ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutputWithContext(ctx)
}

// DataSourceDynamodbConfigDeltaSyncConfigPtrInput is an input type that accepts DataSourceDynamodbConfigDeltaSyncConfigArgs, DataSourceDynamodbConfigDeltaSyncConfigPtr and DataSourceDynamodbConfigDeltaSyncConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceDynamodbConfigDeltaSyncConfigPtrInput` via:
//
//	        DataSourceDynamodbConfigDeltaSyncConfigArgs{...}
//
//	or:
//
//	        nil
type DataSourceDynamodbConfigDeltaSyncConfigPtrInput interface {
	pulumi.Input

	ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutput() DataSourceDynamodbConfigDeltaSyncConfigPtrOutput
	ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutputWithContext(context.Context) DataSourceDynamodbConfigDeltaSyncConfigPtrOutput
}

type dataSourceDynamodbConfigDeltaSyncConfigPtrType DataSourceDynamodbConfigDeltaSyncConfigArgs

func DataSourceDynamodbConfigDeltaSyncConfigPtr(v *DataSourceDynamodbConfigDeltaSyncConfigArgs) DataSourceDynamodbConfigDeltaSyncConfigPtrInput {
	return (*dataSourceDynamodbConfigDeltaSyncConfigPtrType)(v)
}

func (*dataSourceDynamodbConfigDeltaSyncConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDynamodbConfigDeltaSyncConfig)(nil)).Elem()
}

func (i *dataSourceDynamodbConfigDeltaSyncConfigPtrType) ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutput() DataSourceDynamodbConfigDeltaSyncConfigPtrOutput {
	return i.ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceDynamodbConfigDeltaSyncConfigPtrType) ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamodbConfigDeltaSyncConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDynamodbConfigDeltaSyncConfigPtrOutput)
}

type DataSourceDynamodbConfigDeltaSyncConfigOutput struct{ *pulumi.OutputState }

func (DataSourceDynamodbConfigDeltaSyncConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDynamodbConfigDeltaSyncConfig)(nil)).Elem()
}

func (o DataSourceDynamodbConfigDeltaSyncConfigOutput) ToDataSourceDynamodbConfigDeltaSyncConfigOutput() DataSourceDynamodbConfigDeltaSyncConfigOutput {
	return o
}

func (o DataSourceDynamodbConfigDeltaSyncConfigOutput) ToDataSourceDynamodbConfigDeltaSyncConfigOutputWithContext(ctx context.Context) DataSourceDynamodbConfigDeltaSyncConfigOutput {
	return o
}

func (o DataSourceDynamodbConfigDeltaSyncConfigOutput) ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutput() DataSourceDynamodbConfigDeltaSyncConfigPtrOutput {
	return o.ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceDynamodbConfigDeltaSyncConfigOutput) ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamodbConfigDeltaSyncConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceDynamodbConfigDeltaSyncConfig) *DataSourceDynamodbConfigDeltaSyncConfig {
		return &v
	}).(DataSourceDynamodbConfigDeltaSyncConfigPtrOutput)
}

// The number of minutes that an Item is stored in the data source.
func (o DataSourceDynamodbConfigDeltaSyncConfigOutput) BaseTableTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataSourceDynamodbConfigDeltaSyncConfig) *int { return v.BaseTableTtl }).(pulumi.IntPtrOutput)
}

// The table name.
func (o DataSourceDynamodbConfigDeltaSyncConfigOutput) DeltaSyncTableName() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceDynamodbConfigDeltaSyncConfig) string { return v.DeltaSyncTableName }).(pulumi.StringOutput)
}

// The number of minutes that a Delta Sync log entry is stored in the Delta Sync table.
func (o DataSourceDynamodbConfigDeltaSyncConfigOutput) DeltaSyncTableTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataSourceDynamodbConfigDeltaSyncConfig) *int { return v.DeltaSyncTableTtl }).(pulumi.IntPtrOutput)
}

type DataSourceDynamodbConfigDeltaSyncConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceDynamodbConfigDeltaSyncConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDynamodbConfigDeltaSyncConfig)(nil)).Elem()
}

func (o DataSourceDynamodbConfigDeltaSyncConfigPtrOutput) ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutput() DataSourceDynamodbConfigDeltaSyncConfigPtrOutput {
	return o
}

func (o DataSourceDynamodbConfigDeltaSyncConfigPtrOutput) ToDataSourceDynamodbConfigDeltaSyncConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamodbConfigDeltaSyncConfigPtrOutput {
	return o
}

func (o DataSourceDynamodbConfigDeltaSyncConfigPtrOutput) Elem() DataSourceDynamodbConfigDeltaSyncConfigOutput {
	return o.ApplyT(func(v *DataSourceDynamodbConfigDeltaSyncConfig) DataSourceDynamodbConfigDeltaSyncConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceDynamodbConfigDeltaSyncConfig
		return ret
	}).(DataSourceDynamodbConfigDeltaSyncConfigOutput)
}

// The number of minutes that an Item is stored in the data source.
func (o DataSourceDynamodbConfigDeltaSyncConfigPtrOutput) BaseTableTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataSourceDynamodbConfigDeltaSyncConfig) *int {
		if v == nil {
			return nil
		}
		return v.BaseTableTtl
	}).(pulumi.IntPtrOutput)
}

// The table name.
func (o DataSourceDynamodbConfigDeltaSyncConfigPtrOutput) DeltaSyncTableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceDynamodbConfigDeltaSyncConfig) *string {
		if v == nil {
			return nil
		}
		return &v.DeltaSyncTableName
	}).(pulumi.StringPtrOutput)
}

// The number of minutes that a Delta Sync log entry is stored in the Delta Sync table.
func (o DataSourceDynamodbConfigDeltaSyncConfigPtrOutput) DeltaSyncTableTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataSourceDynamodbConfigDeltaSyncConfig) *int {
		if v == nil {
			return nil
		}
		return v.DeltaSyncTableTtl
	}).(pulumi.IntPtrOutput)
}

type DataSourceElasticsearchConfig struct {
	// HTTP endpoint of the Elasticsearch domain.
	Endpoint string `pulumi:"endpoint"`
	// AWS region of Elasticsearch domain. Defaults to current region.
	Region *string `pulumi:"region"`
}

// DataSourceElasticsearchConfigInput is an input type that accepts DataSourceElasticsearchConfigArgs and DataSourceElasticsearchConfigOutput values.
// You can construct a concrete instance of `DataSourceElasticsearchConfigInput` via:
//
//	DataSourceElasticsearchConfigArgs{...}
type DataSourceElasticsearchConfigInput interface {
	pulumi.Input

	ToDataSourceElasticsearchConfigOutput() DataSourceElasticsearchConfigOutput
	ToDataSourceElasticsearchConfigOutputWithContext(context.Context) DataSourceElasticsearchConfigOutput
}

type DataSourceElasticsearchConfigArgs struct {
	// HTTP endpoint of the Elasticsearch domain.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// AWS region of Elasticsearch domain. Defaults to current region.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (DataSourceElasticsearchConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceElasticsearchConfig)(nil)).Elem()
}

func (i DataSourceElasticsearchConfigArgs) ToDataSourceElasticsearchConfigOutput() DataSourceElasticsearchConfigOutput {
	return i.ToDataSourceElasticsearchConfigOutputWithContext(context.Background())
}

func (i DataSourceElasticsearchConfigArgs) ToDataSourceElasticsearchConfigOutputWithContext(ctx context.Context) DataSourceElasticsearchConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceElasticsearchConfigOutput)
}

func (i DataSourceElasticsearchConfigArgs) ToDataSourceElasticsearchConfigPtrOutput() DataSourceElasticsearchConfigPtrOutput {
	return i.ToDataSourceElasticsearchConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceElasticsearchConfigArgs) ToDataSourceElasticsearchConfigPtrOutputWithContext(ctx context.Context) DataSourceElasticsearchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceElasticsearchConfigOutput).ToDataSourceElasticsearchConfigPtrOutputWithContext(ctx)
}

// DataSourceElasticsearchConfigPtrInput is an input type that accepts DataSourceElasticsearchConfigArgs, DataSourceElasticsearchConfigPtr and DataSourceElasticsearchConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceElasticsearchConfigPtrInput` via:
//
//	        DataSourceElasticsearchConfigArgs{...}
//
//	or:
//
//	        nil
type DataSourceElasticsearchConfigPtrInput interface {
	pulumi.Input

	ToDataSourceElasticsearchConfigPtrOutput() DataSourceElasticsearchConfigPtrOutput
	ToDataSourceElasticsearchConfigPtrOutputWithContext(context.Context) DataSourceElasticsearchConfigPtrOutput
}

type dataSourceElasticsearchConfigPtrType DataSourceElasticsearchConfigArgs

func DataSourceElasticsearchConfigPtr(v *DataSourceElasticsearchConfigArgs) DataSourceElasticsearchConfigPtrInput {
	return (*dataSourceElasticsearchConfigPtrType)(v)
}

func (*dataSourceElasticsearchConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceElasticsearchConfig)(nil)).Elem()
}

func (i *dataSourceElasticsearchConfigPtrType) ToDataSourceElasticsearchConfigPtrOutput() DataSourceElasticsearchConfigPtrOutput {
	return i.ToDataSourceElasticsearchConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceElasticsearchConfigPtrType) ToDataSourceElasticsearchConfigPtrOutputWithContext(ctx context.Context) DataSourceElasticsearchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceElasticsearchConfigPtrOutput)
}

type DataSourceElasticsearchConfigOutput struct{ *pulumi.OutputState }

func (DataSourceElasticsearchConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceElasticsearchConfig)(nil)).Elem()
}

func (o DataSourceElasticsearchConfigOutput) ToDataSourceElasticsearchConfigOutput() DataSourceElasticsearchConfigOutput {
	return o
}

func (o DataSourceElasticsearchConfigOutput) ToDataSourceElasticsearchConfigOutputWithContext(ctx context.Context) DataSourceElasticsearchConfigOutput {
	return o
}

func (o DataSourceElasticsearchConfigOutput) ToDataSourceElasticsearchConfigPtrOutput() DataSourceElasticsearchConfigPtrOutput {
	return o.ToDataSourceElasticsearchConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceElasticsearchConfigOutput) ToDataSourceElasticsearchConfigPtrOutputWithContext(ctx context.Context) DataSourceElasticsearchConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceElasticsearchConfig) *DataSourceElasticsearchConfig {
		return &v
	}).(DataSourceElasticsearchConfigPtrOutput)
}

// HTTP endpoint of the Elasticsearch domain.
func (o DataSourceElasticsearchConfigOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceElasticsearchConfig) string { return v.Endpoint }).(pulumi.StringOutput)
}

// AWS region of Elasticsearch domain. Defaults to current region.
func (o DataSourceElasticsearchConfigOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceElasticsearchConfig) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type DataSourceElasticsearchConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceElasticsearchConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceElasticsearchConfig)(nil)).Elem()
}

func (o DataSourceElasticsearchConfigPtrOutput) ToDataSourceElasticsearchConfigPtrOutput() DataSourceElasticsearchConfigPtrOutput {
	return o
}

func (o DataSourceElasticsearchConfigPtrOutput) ToDataSourceElasticsearchConfigPtrOutputWithContext(ctx context.Context) DataSourceElasticsearchConfigPtrOutput {
	return o
}

func (o DataSourceElasticsearchConfigPtrOutput) Elem() DataSourceElasticsearchConfigOutput {
	return o.ApplyT(func(v *DataSourceElasticsearchConfig) DataSourceElasticsearchConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceElasticsearchConfig
		return ret
	}).(DataSourceElasticsearchConfigOutput)
}

// HTTP endpoint of the Elasticsearch domain.
func (o DataSourceElasticsearchConfigPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceElasticsearchConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// AWS region of Elasticsearch domain. Defaults to current region.
func (o DataSourceElasticsearchConfigPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceElasticsearchConfig) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

type DataSourceEventBridgeConfig struct {
	// ARN for the EventBridge bus.
	EventBusArn string `pulumi:"eventBusArn"`
}

// DataSourceEventBridgeConfigInput is an input type that accepts DataSourceEventBridgeConfigArgs and DataSourceEventBridgeConfigOutput values.
// You can construct a concrete instance of `DataSourceEventBridgeConfigInput` via:
//
//	DataSourceEventBridgeConfigArgs{...}
type DataSourceEventBridgeConfigInput interface {
	pulumi.Input

	ToDataSourceEventBridgeConfigOutput() DataSourceEventBridgeConfigOutput
	ToDataSourceEventBridgeConfigOutputWithContext(context.Context) DataSourceEventBridgeConfigOutput
}

type DataSourceEventBridgeConfigArgs struct {
	// ARN for the EventBridge bus.
	EventBusArn pulumi.StringInput `pulumi:"eventBusArn"`
}

func (DataSourceEventBridgeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceEventBridgeConfig)(nil)).Elem()
}

func (i DataSourceEventBridgeConfigArgs) ToDataSourceEventBridgeConfigOutput() DataSourceEventBridgeConfigOutput {
	return i.ToDataSourceEventBridgeConfigOutputWithContext(context.Background())
}

func (i DataSourceEventBridgeConfigArgs) ToDataSourceEventBridgeConfigOutputWithContext(ctx context.Context) DataSourceEventBridgeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceEventBridgeConfigOutput)
}

func (i DataSourceEventBridgeConfigArgs) ToDataSourceEventBridgeConfigPtrOutput() DataSourceEventBridgeConfigPtrOutput {
	return i.ToDataSourceEventBridgeConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceEventBridgeConfigArgs) ToDataSourceEventBridgeConfigPtrOutputWithContext(ctx context.Context) DataSourceEventBridgeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceEventBridgeConfigOutput).ToDataSourceEventBridgeConfigPtrOutputWithContext(ctx)
}

// DataSourceEventBridgeConfigPtrInput is an input type that accepts DataSourceEventBridgeConfigArgs, DataSourceEventBridgeConfigPtr and DataSourceEventBridgeConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceEventBridgeConfigPtrInput` via:
//
//	        DataSourceEventBridgeConfigArgs{...}
//
//	or:
//
//	        nil
type DataSourceEventBridgeConfigPtrInput interface {
	pulumi.Input

	ToDataSourceEventBridgeConfigPtrOutput() DataSourceEventBridgeConfigPtrOutput
	ToDataSourceEventBridgeConfigPtrOutputWithContext(context.Context) DataSourceEventBridgeConfigPtrOutput
}

type dataSourceEventBridgeConfigPtrType DataSourceEventBridgeConfigArgs

func DataSourceEventBridgeConfigPtr(v *DataSourceEventBridgeConfigArgs) DataSourceEventBridgeConfigPtrInput {
	return (*dataSourceEventBridgeConfigPtrType)(v)
}

func (*dataSourceEventBridgeConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceEventBridgeConfig)(nil)).Elem()
}

func (i *dataSourceEventBridgeConfigPtrType) ToDataSourceEventBridgeConfigPtrOutput() DataSourceEventBridgeConfigPtrOutput {
	return i.ToDataSourceEventBridgeConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceEventBridgeConfigPtrType) ToDataSourceEventBridgeConfigPtrOutputWithContext(ctx context.Context) DataSourceEventBridgeConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceEventBridgeConfigPtrOutput)
}

type DataSourceEventBridgeConfigOutput struct{ *pulumi.OutputState }

func (DataSourceEventBridgeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceEventBridgeConfig)(nil)).Elem()
}

func (o DataSourceEventBridgeConfigOutput) ToDataSourceEventBridgeConfigOutput() DataSourceEventBridgeConfigOutput {
	return o
}

func (o DataSourceEventBridgeConfigOutput) ToDataSourceEventBridgeConfigOutputWithContext(ctx context.Context) DataSourceEventBridgeConfigOutput {
	return o
}

func (o DataSourceEventBridgeConfigOutput) ToDataSourceEventBridgeConfigPtrOutput() DataSourceEventBridgeConfigPtrOutput {
	return o.ToDataSourceEventBridgeConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceEventBridgeConfigOutput) ToDataSourceEventBridgeConfigPtrOutputWithContext(ctx context.Context) DataSourceEventBridgeConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceEventBridgeConfig) *DataSourceEventBridgeConfig {
		return &v
	}).(DataSourceEventBridgeConfigPtrOutput)
}

// ARN for the EventBridge bus.
func (o DataSourceEventBridgeConfigOutput) EventBusArn() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceEventBridgeConfig) string { return v.EventBusArn }).(pulumi.StringOutput)
}

type DataSourceEventBridgeConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceEventBridgeConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceEventBridgeConfig)(nil)).Elem()
}

func (o DataSourceEventBridgeConfigPtrOutput) ToDataSourceEventBridgeConfigPtrOutput() DataSourceEventBridgeConfigPtrOutput {
	return o
}

func (o DataSourceEventBridgeConfigPtrOutput) ToDataSourceEventBridgeConfigPtrOutputWithContext(ctx context.Context) DataSourceEventBridgeConfigPtrOutput {
	return o
}

func (o DataSourceEventBridgeConfigPtrOutput) Elem() DataSourceEventBridgeConfigOutput {
	return o.ApplyT(func(v *DataSourceEventBridgeConfig) DataSourceEventBridgeConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceEventBridgeConfig
		return ret
	}).(DataSourceEventBridgeConfigOutput)
}

// ARN for the EventBridge bus.
func (o DataSourceEventBridgeConfigPtrOutput) EventBusArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceEventBridgeConfig) *string {
		if v == nil {
			return nil
		}
		return &v.EventBusArn
	}).(pulumi.StringPtrOutput)
}

type DataSourceHttpConfig struct {
	// Authorization configuration in case the HTTP endpoint requires authorization. See `authorizationConfig` Block for details.
	AuthorizationConfig *DataSourceHttpConfigAuthorizationConfig `pulumi:"authorizationConfig"`
	// HTTP URL.
	Endpoint string `pulumi:"endpoint"`
}

// DataSourceHttpConfigInput is an input type that accepts DataSourceHttpConfigArgs and DataSourceHttpConfigOutput values.
// You can construct a concrete instance of `DataSourceHttpConfigInput` via:
//
//	DataSourceHttpConfigArgs{...}
type DataSourceHttpConfigInput interface {
	pulumi.Input

	ToDataSourceHttpConfigOutput() DataSourceHttpConfigOutput
	ToDataSourceHttpConfigOutputWithContext(context.Context) DataSourceHttpConfigOutput
}

type DataSourceHttpConfigArgs struct {
	// Authorization configuration in case the HTTP endpoint requires authorization. See `authorizationConfig` Block for details.
	AuthorizationConfig DataSourceHttpConfigAuthorizationConfigPtrInput `pulumi:"authorizationConfig"`
	// HTTP URL.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
}

func (DataSourceHttpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceHttpConfig)(nil)).Elem()
}

func (i DataSourceHttpConfigArgs) ToDataSourceHttpConfigOutput() DataSourceHttpConfigOutput {
	return i.ToDataSourceHttpConfigOutputWithContext(context.Background())
}

func (i DataSourceHttpConfigArgs) ToDataSourceHttpConfigOutputWithContext(ctx context.Context) DataSourceHttpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHttpConfigOutput)
}

func (i DataSourceHttpConfigArgs) ToDataSourceHttpConfigPtrOutput() DataSourceHttpConfigPtrOutput {
	return i.ToDataSourceHttpConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceHttpConfigArgs) ToDataSourceHttpConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHttpConfigOutput).ToDataSourceHttpConfigPtrOutputWithContext(ctx)
}

// DataSourceHttpConfigPtrInput is an input type that accepts DataSourceHttpConfigArgs, DataSourceHttpConfigPtr and DataSourceHttpConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceHttpConfigPtrInput` via:
//
//	        DataSourceHttpConfigArgs{...}
//
//	or:
//
//	        nil
type DataSourceHttpConfigPtrInput interface {
	pulumi.Input

	ToDataSourceHttpConfigPtrOutput() DataSourceHttpConfigPtrOutput
	ToDataSourceHttpConfigPtrOutputWithContext(context.Context) DataSourceHttpConfigPtrOutput
}

type dataSourceHttpConfigPtrType DataSourceHttpConfigArgs

func DataSourceHttpConfigPtr(v *DataSourceHttpConfigArgs) DataSourceHttpConfigPtrInput {
	return (*dataSourceHttpConfigPtrType)(v)
}

func (*dataSourceHttpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceHttpConfig)(nil)).Elem()
}

func (i *dataSourceHttpConfigPtrType) ToDataSourceHttpConfigPtrOutput() DataSourceHttpConfigPtrOutput {
	return i.ToDataSourceHttpConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceHttpConfigPtrType) ToDataSourceHttpConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHttpConfigPtrOutput)
}

type DataSourceHttpConfigOutput struct{ *pulumi.OutputState }

func (DataSourceHttpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceHttpConfig)(nil)).Elem()
}

func (o DataSourceHttpConfigOutput) ToDataSourceHttpConfigOutput() DataSourceHttpConfigOutput {
	return o
}

func (o DataSourceHttpConfigOutput) ToDataSourceHttpConfigOutputWithContext(ctx context.Context) DataSourceHttpConfigOutput {
	return o
}

func (o DataSourceHttpConfigOutput) ToDataSourceHttpConfigPtrOutput() DataSourceHttpConfigPtrOutput {
	return o.ToDataSourceHttpConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceHttpConfigOutput) ToDataSourceHttpConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceHttpConfig) *DataSourceHttpConfig {
		return &v
	}).(DataSourceHttpConfigPtrOutput)
}

// Authorization configuration in case the HTTP endpoint requires authorization. See `authorizationConfig` Block for details.
func (o DataSourceHttpConfigOutput) AuthorizationConfig() DataSourceHttpConfigAuthorizationConfigPtrOutput {
	return o.ApplyT(func(v DataSourceHttpConfig) *DataSourceHttpConfigAuthorizationConfig { return v.AuthorizationConfig }).(DataSourceHttpConfigAuthorizationConfigPtrOutput)
}

// HTTP URL.
func (o DataSourceHttpConfigOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceHttpConfig) string { return v.Endpoint }).(pulumi.StringOutput)
}

type DataSourceHttpConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceHttpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceHttpConfig)(nil)).Elem()
}

func (o DataSourceHttpConfigPtrOutput) ToDataSourceHttpConfigPtrOutput() DataSourceHttpConfigPtrOutput {
	return o
}

func (o DataSourceHttpConfigPtrOutput) ToDataSourceHttpConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigPtrOutput {
	return o
}

func (o DataSourceHttpConfigPtrOutput) Elem() DataSourceHttpConfigOutput {
	return o.ApplyT(func(v *DataSourceHttpConfig) DataSourceHttpConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceHttpConfig
		return ret
	}).(DataSourceHttpConfigOutput)
}

// Authorization configuration in case the HTTP endpoint requires authorization. See `authorizationConfig` Block for details.
func (o DataSourceHttpConfigPtrOutput) AuthorizationConfig() DataSourceHttpConfigAuthorizationConfigPtrOutput {
	return o.ApplyT(func(v *DataSourceHttpConfig) *DataSourceHttpConfigAuthorizationConfig {
		if v == nil {
			return nil
		}
		return v.AuthorizationConfig
	}).(DataSourceHttpConfigAuthorizationConfigPtrOutput)
}

// HTTP URL.
func (o DataSourceHttpConfigPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceHttpConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

type DataSourceHttpConfigAuthorizationConfig struct {
	// Authorization type that the HTTP endpoint requires. Default values is `AWS_IAM`.
	AuthorizationType *string `pulumi:"authorizationType"`
	// Identity and Access Management (IAM) settings. See `awsIamConfig` Block for details.
	AwsIamConfig *DataSourceHttpConfigAuthorizationConfigAwsIamConfig `pulumi:"awsIamConfig"`
}

// DataSourceHttpConfigAuthorizationConfigInput is an input type that accepts DataSourceHttpConfigAuthorizationConfigArgs and DataSourceHttpConfigAuthorizationConfigOutput values.
// You can construct a concrete instance of `DataSourceHttpConfigAuthorizationConfigInput` via:
//
//	DataSourceHttpConfigAuthorizationConfigArgs{...}
type DataSourceHttpConfigAuthorizationConfigInput interface {
	pulumi.Input

	ToDataSourceHttpConfigAuthorizationConfigOutput() DataSourceHttpConfigAuthorizationConfigOutput
	ToDataSourceHttpConfigAuthorizationConfigOutputWithContext(context.Context) DataSourceHttpConfigAuthorizationConfigOutput
}

type DataSourceHttpConfigAuthorizationConfigArgs struct {
	// Authorization type that the HTTP endpoint requires. Default values is `AWS_IAM`.
	AuthorizationType pulumi.StringPtrInput `pulumi:"authorizationType"`
	// Identity and Access Management (IAM) settings. See `awsIamConfig` Block for details.
	AwsIamConfig DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrInput `pulumi:"awsIamConfig"`
}

func (DataSourceHttpConfigAuthorizationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceHttpConfigAuthorizationConfig)(nil)).Elem()
}

func (i DataSourceHttpConfigAuthorizationConfigArgs) ToDataSourceHttpConfigAuthorizationConfigOutput() DataSourceHttpConfigAuthorizationConfigOutput {
	return i.ToDataSourceHttpConfigAuthorizationConfigOutputWithContext(context.Background())
}

func (i DataSourceHttpConfigAuthorizationConfigArgs) ToDataSourceHttpConfigAuthorizationConfigOutputWithContext(ctx context.Context) DataSourceHttpConfigAuthorizationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHttpConfigAuthorizationConfigOutput)
}

func (i DataSourceHttpConfigAuthorizationConfigArgs) ToDataSourceHttpConfigAuthorizationConfigPtrOutput() DataSourceHttpConfigAuthorizationConfigPtrOutput {
	return i.ToDataSourceHttpConfigAuthorizationConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceHttpConfigAuthorizationConfigArgs) ToDataSourceHttpConfigAuthorizationConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigAuthorizationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHttpConfigAuthorizationConfigOutput).ToDataSourceHttpConfigAuthorizationConfigPtrOutputWithContext(ctx)
}

// DataSourceHttpConfigAuthorizationConfigPtrInput is an input type that accepts DataSourceHttpConfigAuthorizationConfigArgs, DataSourceHttpConfigAuthorizationConfigPtr and DataSourceHttpConfigAuthorizationConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceHttpConfigAuthorizationConfigPtrInput` via:
//
//	        DataSourceHttpConfigAuthorizationConfigArgs{...}
//
//	or:
//
//	        nil
type DataSourceHttpConfigAuthorizationConfigPtrInput interface {
	pulumi.Input

	ToDataSourceHttpConfigAuthorizationConfigPtrOutput() DataSourceHttpConfigAuthorizationConfigPtrOutput
	ToDataSourceHttpConfigAuthorizationConfigPtrOutputWithContext(context.Context) DataSourceHttpConfigAuthorizationConfigPtrOutput
}

type dataSourceHttpConfigAuthorizationConfigPtrType DataSourceHttpConfigAuthorizationConfigArgs

func DataSourceHttpConfigAuthorizationConfigPtr(v *DataSourceHttpConfigAuthorizationConfigArgs) DataSourceHttpConfigAuthorizationConfigPtrInput {
	return (*dataSourceHttpConfigAuthorizationConfigPtrType)(v)
}

func (*dataSourceHttpConfigAuthorizationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceHttpConfigAuthorizationConfig)(nil)).Elem()
}

func (i *dataSourceHttpConfigAuthorizationConfigPtrType) ToDataSourceHttpConfigAuthorizationConfigPtrOutput() DataSourceHttpConfigAuthorizationConfigPtrOutput {
	return i.ToDataSourceHttpConfigAuthorizationConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceHttpConfigAuthorizationConfigPtrType) ToDataSourceHttpConfigAuthorizationConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigAuthorizationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHttpConfigAuthorizationConfigPtrOutput)
}

type DataSourceHttpConfigAuthorizationConfigOutput struct{ *pulumi.OutputState }

func (DataSourceHttpConfigAuthorizationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceHttpConfigAuthorizationConfig)(nil)).Elem()
}

func (o DataSourceHttpConfigAuthorizationConfigOutput) ToDataSourceHttpConfigAuthorizationConfigOutput() DataSourceHttpConfigAuthorizationConfigOutput {
	return o
}

func (o DataSourceHttpConfigAuthorizationConfigOutput) ToDataSourceHttpConfigAuthorizationConfigOutputWithContext(ctx context.Context) DataSourceHttpConfigAuthorizationConfigOutput {
	return o
}

func (o DataSourceHttpConfigAuthorizationConfigOutput) ToDataSourceHttpConfigAuthorizationConfigPtrOutput() DataSourceHttpConfigAuthorizationConfigPtrOutput {
	return o.ToDataSourceHttpConfigAuthorizationConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceHttpConfigAuthorizationConfigOutput) ToDataSourceHttpConfigAuthorizationConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigAuthorizationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceHttpConfigAuthorizationConfig) *DataSourceHttpConfigAuthorizationConfig {
		return &v
	}).(DataSourceHttpConfigAuthorizationConfigPtrOutput)
}

// Authorization type that the HTTP endpoint requires. Default values is `AWS_IAM`.
func (o DataSourceHttpConfigAuthorizationConfigOutput) AuthorizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceHttpConfigAuthorizationConfig) *string { return v.AuthorizationType }).(pulumi.StringPtrOutput)
}

// Identity and Access Management (IAM) settings. See `awsIamConfig` Block for details.
func (o DataSourceHttpConfigAuthorizationConfigOutput) AwsIamConfig() DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput {
	return o.ApplyT(func(v DataSourceHttpConfigAuthorizationConfig) *DataSourceHttpConfigAuthorizationConfigAwsIamConfig {
		return v.AwsIamConfig
	}).(DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput)
}

type DataSourceHttpConfigAuthorizationConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceHttpConfigAuthorizationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceHttpConfigAuthorizationConfig)(nil)).Elem()
}

func (o DataSourceHttpConfigAuthorizationConfigPtrOutput) ToDataSourceHttpConfigAuthorizationConfigPtrOutput() DataSourceHttpConfigAuthorizationConfigPtrOutput {
	return o
}

func (o DataSourceHttpConfigAuthorizationConfigPtrOutput) ToDataSourceHttpConfigAuthorizationConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigAuthorizationConfigPtrOutput {
	return o
}

func (o DataSourceHttpConfigAuthorizationConfigPtrOutput) Elem() DataSourceHttpConfigAuthorizationConfigOutput {
	return o.ApplyT(func(v *DataSourceHttpConfigAuthorizationConfig) DataSourceHttpConfigAuthorizationConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceHttpConfigAuthorizationConfig
		return ret
	}).(DataSourceHttpConfigAuthorizationConfigOutput)
}

// Authorization type that the HTTP endpoint requires. Default values is `AWS_IAM`.
func (o DataSourceHttpConfigAuthorizationConfigPtrOutput) AuthorizationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceHttpConfigAuthorizationConfig) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationType
	}).(pulumi.StringPtrOutput)
}

// Identity and Access Management (IAM) settings. See `awsIamConfig` Block for details.
func (o DataSourceHttpConfigAuthorizationConfigPtrOutput) AwsIamConfig() DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput {
	return o.ApplyT(func(v *DataSourceHttpConfigAuthorizationConfig) *DataSourceHttpConfigAuthorizationConfigAwsIamConfig {
		if v == nil {
			return nil
		}
		return v.AwsIamConfig
	}).(DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput)
}

type DataSourceHttpConfigAuthorizationConfigAwsIamConfig struct {
	// Signing Amazon Web Services Region for IAM authorization.
	SigningRegion *string `pulumi:"signingRegion"`
	// Signing service name for IAM authorization.
	SigningServiceName *string `pulumi:"signingServiceName"`
}

// DataSourceHttpConfigAuthorizationConfigAwsIamConfigInput is an input type that accepts DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs and DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput values.
// You can construct a concrete instance of `DataSourceHttpConfigAuthorizationConfigAwsIamConfigInput` via:
//
//	DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs{...}
type DataSourceHttpConfigAuthorizationConfigAwsIamConfigInput interface {
	pulumi.Input

	ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput() DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput
	ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigOutputWithContext(context.Context) DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput
}

type DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs struct {
	// Signing Amazon Web Services Region for IAM authorization.
	SigningRegion pulumi.StringPtrInput `pulumi:"signingRegion"`
	// Signing service name for IAM authorization.
	SigningServiceName pulumi.StringPtrInput `pulumi:"signingServiceName"`
}

func (DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceHttpConfigAuthorizationConfigAwsIamConfig)(nil)).Elem()
}

func (i DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs) ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput() DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput {
	return i.ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigOutputWithContext(context.Background())
}

func (i DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs) ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigOutputWithContext(ctx context.Context) DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput)
}

func (i DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs) ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput() DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput {
	return i.ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs) ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput).ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutputWithContext(ctx)
}

// DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrInput is an input type that accepts DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs, DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtr and DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrInput` via:
//
//	        DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs{...}
//
//	or:
//
//	        nil
type DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrInput interface {
	pulumi.Input

	ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput() DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput
	ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutputWithContext(context.Context) DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput
}

type dataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrType DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs

func DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtr(v *DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs) DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrInput {
	return (*dataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrType)(v)
}

func (*dataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceHttpConfigAuthorizationConfigAwsIamConfig)(nil)).Elem()
}

func (i *dataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrType) ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput() DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput {
	return i.ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrType) ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput)
}

type DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput struct{ *pulumi.OutputState }

func (DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceHttpConfigAuthorizationConfigAwsIamConfig)(nil)).Elem()
}

func (o DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput) ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput() DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput {
	return o
}

func (o DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput) ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigOutputWithContext(ctx context.Context) DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput {
	return o
}

func (o DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput) ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput() DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput {
	return o.ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput) ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceHttpConfigAuthorizationConfigAwsIamConfig) *DataSourceHttpConfigAuthorizationConfigAwsIamConfig {
		return &v
	}).(DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput)
}

// Signing Amazon Web Services Region for IAM authorization.
func (o DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput) SigningRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceHttpConfigAuthorizationConfigAwsIamConfig) *string { return v.SigningRegion }).(pulumi.StringPtrOutput)
}

// Signing service name for IAM authorization.
func (o DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput) SigningServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceHttpConfigAuthorizationConfigAwsIamConfig) *string { return v.SigningServiceName }).(pulumi.StringPtrOutput)
}

type DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceHttpConfigAuthorizationConfigAwsIamConfig)(nil)).Elem()
}

func (o DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput) ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput() DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput {
	return o
}

func (o DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput) ToDataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput {
	return o
}

func (o DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput) Elem() DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput {
	return o.ApplyT(func(v *DataSourceHttpConfigAuthorizationConfigAwsIamConfig) DataSourceHttpConfigAuthorizationConfigAwsIamConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceHttpConfigAuthorizationConfigAwsIamConfig
		return ret
	}).(DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput)
}

// Signing Amazon Web Services Region for IAM authorization.
func (o DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput) SigningRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceHttpConfigAuthorizationConfigAwsIamConfig) *string {
		if v == nil {
			return nil
		}
		return v.SigningRegion
	}).(pulumi.StringPtrOutput)
}

// Signing service name for IAM authorization.
func (o DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput) SigningServiceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceHttpConfigAuthorizationConfigAwsIamConfig) *string {
		if v == nil {
			return nil
		}
		return v.SigningServiceName
	}).(pulumi.StringPtrOutput)
}

type DataSourceLambdaConfig struct {
	// ARN for the Lambda function.
	FunctionArn string `pulumi:"functionArn"`
}

// DataSourceLambdaConfigInput is an input type that accepts DataSourceLambdaConfigArgs and DataSourceLambdaConfigOutput values.
// You can construct a concrete instance of `DataSourceLambdaConfigInput` via:
//
//	DataSourceLambdaConfigArgs{...}
type DataSourceLambdaConfigInput interface {
	pulumi.Input

	ToDataSourceLambdaConfigOutput() DataSourceLambdaConfigOutput
	ToDataSourceLambdaConfigOutputWithContext(context.Context) DataSourceLambdaConfigOutput
}

type DataSourceLambdaConfigArgs struct {
	// ARN for the Lambda function.
	FunctionArn pulumi.StringInput `pulumi:"functionArn"`
}

func (DataSourceLambdaConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceLambdaConfig)(nil)).Elem()
}

func (i DataSourceLambdaConfigArgs) ToDataSourceLambdaConfigOutput() DataSourceLambdaConfigOutput {
	return i.ToDataSourceLambdaConfigOutputWithContext(context.Background())
}

func (i DataSourceLambdaConfigArgs) ToDataSourceLambdaConfigOutputWithContext(ctx context.Context) DataSourceLambdaConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceLambdaConfigOutput)
}

func (i DataSourceLambdaConfigArgs) ToDataSourceLambdaConfigPtrOutput() DataSourceLambdaConfigPtrOutput {
	return i.ToDataSourceLambdaConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceLambdaConfigArgs) ToDataSourceLambdaConfigPtrOutputWithContext(ctx context.Context) DataSourceLambdaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceLambdaConfigOutput).ToDataSourceLambdaConfigPtrOutputWithContext(ctx)
}

// DataSourceLambdaConfigPtrInput is an input type that accepts DataSourceLambdaConfigArgs, DataSourceLambdaConfigPtr and DataSourceLambdaConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceLambdaConfigPtrInput` via:
//
//	        DataSourceLambdaConfigArgs{...}
//
//	or:
//
//	        nil
type DataSourceLambdaConfigPtrInput interface {
	pulumi.Input

	ToDataSourceLambdaConfigPtrOutput() DataSourceLambdaConfigPtrOutput
	ToDataSourceLambdaConfigPtrOutputWithContext(context.Context) DataSourceLambdaConfigPtrOutput
}

type dataSourceLambdaConfigPtrType DataSourceLambdaConfigArgs

func DataSourceLambdaConfigPtr(v *DataSourceLambdaConfigArgs) DataSourceLambdaConfigPtrInput {
	return (*dataSourceLambdaConfigPtrType)(v)
}

func (*dataSourceLambdaConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceLambdaConfig)(nil)).Elem()
}

func (i *dataSourceLambdaConfigPtrType) ToDataSourceLambdaConfigPtrOutput() DataSourceLambdaConfigPtrOutput {
	return i.ToDataSourceLambdaConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceLambdaConfigPtrType) ToDataSourceLambdaConfigPtrOutputWithContext(ctx context.Context) DataSourceLambdaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceLambdaConfigPtrOutput)
}

type DataSourceLambdaConfigOutput struct{ *pulumi.OutputState }

func (DataSourceLambdaConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceLambdaConfig)(nil)).Elem()
}

func (o DataSourceLambdaConfigOutput) ToDataSourceLambdaConfigOutput() DataSourceLambdaConfigOutput {
	return o
}

func (o DataSourceLambdaConfigOutput) ToDataSourceLambdaConfigOutputWithContext(ctx context.Context) DataSourceLambdaConfigOutput {
	return o
}

func (o DataSourceLambdaConfigOutput) ToDataSourceLambdaConfigPtrOutput() DataSourceLambdaConfigPtrOutput {
	return o.ToDataSourceLambdaConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceLambdaConfigOutput) ToDataSourceLambdaConfigPtrOutputWithContext(ctx context.Context) DataSourceLambdaConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceLambdaConfig) *DataSourceLambdaConfig {
		return &v
	}).(DataSourceLambdaConfigPtrOutput)
}

// ARN for the Lambda function.
func (o DataSourceLambdaConfigOutput) FunctionArn() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceLambdaConfig) string { return v.FunctionArn }).(pulumi.StringOutput)
}

type DataSourceLambdaConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceLambdaConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceLambdaConfig)(nil)).Elem()
}

func (o DataSourceLambdaConfigPtrOutput) ToDataSourceLambdaConfigPtrOutput() DataSourceLambdaConfigPtrOutput {
	return o
}

func (o DataSourceLambdaConfigPtrOutput) ToDataSourceLambdaConfigPtrOutputWithContext(ctx context.Context) DataSourceLambdaConfigPtrOutput {
	return o
}

func (o DataSourceLambdaConfigPtrOutput) Elem() DataSourceLambdaConfigOutput {
	return o.ApplyT(func(v *DataSourceLambdaConfig) DataSourceLambdaConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceLambdaConfig
		return ret
	}).(DataSourceLambdaConfigOutput)
}

// ARN for the Lambda function.
func (o DataSourceLambdaConfigPtrOutput) FunctionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return &v.FunctionArn
	}).(pulumi.StringPtrOutput)
}

type DataSourceOpensearchserviceConfig struct {
	// HTTP endpoint of the OpenSearch domain.
	Endpoint string `pulumi:"endpoint"`
	// AWS region of the OpenSearch domain. Defaults to current region.
	Region *string `pulumi:"region"`
}

// DataSourceOpensearchserviceConfigInput is an input type that accepts DataSourceOpensearchserviceConfigArgs and DataSourceOpensearchserviceConfigOutput values.
// You can construct a concrete instance of `DataSourceOpensearchserviceConfigInput` via:
//
//	DataSourceOpensearchserviceConfigArgs{...}
type DataSourceOpensearchserviceConfigInput interface {
	pulumi.Input

	ToDataSourceOpensearchserviceConfigOutput() DataSourceOpensearchserviceConfigOutput
	ToDataSourceOpensearchserviceConfigOutputWithContext(context.Context) DataSourceOpensearchserviceConfigOutput
}

type DataSourceOpensearchserviceConfigArgs struct {
	// HTTP endpoint of the OpenSearch domain.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// AWS region of the OpenSearch domain. Defaults to current region.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (DataSourceOpensearchserviceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceOpensearchserviceConfig)(nil)).Elem()
}

func (i DataSourceOpensearchserviceConfigArgs) ToDataSourceOpensearchserviceConfigOutput() DataSourceOpensearchserviceConfigOutput {
	return i.ToDataSourceOpensearchserviceConfigOutputWithContext(context.Background())
}

func (i DataSourceOpensearchserviceConfigArgs) ToDataSourceOpensearchserviceConfigOutputWithContext(ctx context.Context) DataSourceOpensearchserviceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceOpensearchserviceConfigOutput)
}

func (i DataSourceOpensearchserviceConfigArgs) ToDataSourceOpensearchserviceConfigPtrOutput() DataSourceOpensearchserviceConfigPtrOutput {
	return i.ToDataSourceOpensearchserviceConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceOpensearchserviceConfigArgs) ToDataSourceOpensearchserviceConfigPtrOutputWithContext(ctx context.Context) DataSourceOpensearchserviceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceOpensearchserviceConfigOutput).ToDataSourceOpensearchserviceConfigPtrOutputWithContext(ctx)
}

// DataSourceOpensearchserviceConfigPtrInput is an input type that accepts DataSourceOpensearchserviceConfigArgs, DataSourceOpensearchserviceConfigPtr and DataSourceOpensearchserviceConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceOpensearchserviceConfigPtrInput` via:
//
//	        DataSourceOpensearchserviceConfigArgs{...}
//
//	or:
//
//	        nil
type DataSourceOpensearchserviceConfigPtrInput interface {
	pulumi.Input

	ToDataSourceOpensearchserviceConfigPtrOutput() DataSourceOpensearchserviceConfigPtrOutput
	ToDataSourceOpensearchserviceConfigPtrOutputWithContext(context.Context) DataSourceOpensearchserviceConfigPtrOutput
}

type dataSourceOpensearchserviceConfigPtrType DataSourceOpensearchserviceConfigArgs

func DataSourceOpensearchserviceConfigPtr(v *DataSourceOpensearchserviceConfigArgs) DataSourceOpensearchserviceConfigPtrInput {
	return (*dataSourceOpensearchserviceConfigPtrType)(v)
}

func (*dataSourceOpensearchserviceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceOpensearchserviceConfig)(nil)).Elem()
}

func (i *dataSourceOpensearchserviceConfigPtrType) ToDataSourceOpensearchserviceConfigPtrOutput() DataSourceOpensearchserviceConfigPtrOutput {
	return i.ToDataSourceOpensearchserviceConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceOpensearchserviceConfigPtrType) ToDataSourceOpensearchserviceConfigPtrOutputWithContext(ctx context.Context) DataSourceOpensearchserviceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceOpensearchserviceConfigPtrOutput)
}

type DataSourceOpensearchserviceConfigOutput struct{ *pulumi.OutputState }

func (DataSourceOpensearchserviceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceOpensearchserviceConfig)(nil)).Elem()
}

func (o DataSourceOpensearchserviceConfigOutput) ToDataSourceOpensearchserviceConfigOutput() DataSourceOpensearchserviceConfigOutput {
	return o
}

func (o DataSourceOpensearchserviceConfigOutput) ToDataSourceOpensearchserviceConfigOutputWithContext(ctx context.Context) DataSourceOpensearchserviceConfigOutput {
	return o
}

func (o DataSourceOpensearchserviceConfigOutput) ToDataSourceOpensearchserviceConfigPtrOutput() DataSourceOpensearchserviceConfigPtrOutput {
	return o.ToDataSourceOpensearchserviceConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceOpensearchserviceConfigOutput) ToDataSourceOpensearchserviceConfigPtrOutputWithContext(ctx context.Context) DataSourceOpensearchserviceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceOpensearchserviceConfig) *DataSourceOpensearchserviceConfig {
		return &v
	}).(DataSourceOpensearchserviceConfigPtrOutput)
}

// HTTP endpoint of the OpenSearch domain.
func (o DataSourceOpensearchserviceConfigOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceOpensearchserviceConfig) string { return v.Endpoint }).(pulumi.StringOutput)
}

// AWS region of the OpenSearch domain. Defaults to current region.
func (o DataSourceOpensearchserviceConfigOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceOpensearchserviceConfig) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type DataSourceOpensearchserviceConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceOpensearchserviceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceOpensearchserviceConfig)(nil)).Elem()
}

func (o DataSourceOpensearchserviceConfigPtrOutput) ToDataSourceOpensearchserviceConfigPtrOutput() DataSourceOpensearchserviceConfigPtrOutput {
	return o
}

func (o DataSourceOpensearchserviceConfigPtrOutput) ToDataSourceOpensearchserviceConfigPtrOutputWithContext(ctx context.Context) DataSourceOpensearchserviceConfigPtrOutput {
	return o
}

func (o DataSourceOpensearchserviceConfigPtrOutput) Elem() DataSourceOpensearchserviceConfigOutput {
	return o.ApplyT(func(v *DataSourceOpensearchserviceConfig) DataSourceOpensearchserviceConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceOpensearchserviceConfig
		return ret
	}).(DataSourceOpensearchserviceConfigOutput)
}

// HTTP endpoint of the OpenSearch domain.
func (o DataSourceOpensearchserviceConfigPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceOpensearchserviceConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// AWS region of the OpenSearch domain. Defaults to current region.
func (o DataSourceOpensearchserviceConfigPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceOpensearchserviceConfig) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

type DataSourceRelationalDatabaseConfig struct {
	// Amazon RDS HTTP endpoint configuration. See `httpEndpointConfig` Block for details.
	HttpEndpointConfig *DataSourceRelationalDatabaseConfigHttpEndpointConfig `pulumi:"httpEndpointConfig"`
	// Source type for the relational database. Valid values: `RDS_HTTP_ENDPOINT`.
	SourceType *string `pulumi:"sourceType"`
}

// DataSourceRelationalDatabaseConfigInput is an input type that accepts DataSourceRelationalDatabaseConfigArgs and DataSourceRelationalDatabaseConfigOutput values.
// You can construct a concrete instance of `DataSourceRelationalDatabaseConfigInput` via:
//
//	DataSourceRelationalDatabaseConfigArgs{...}
type DataSourceRelationalDatabaseConfigInput interface {
	pulumi.Input

	ToDataSourceRelationalDatabaseConfigOutput() DataSourceRelationalDatabaseConfigOutput
	ToDataSourceRelationalDatabaseConfigOutputWithContext(context.Context) DataSourceRelationalDatabaseConfigOutput
}

type DataSourceRelationalDatabaseConfigArgs struct {
	// Amazon RDS HTTP endpoint configuration. See `httpEndpointConfig` Block for details.
	HttpEndpointConfig DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrInput `pulumi:"httpEndpointConfig"`
	// Source type for the relational database. Valid values: `RDS_HTTP_ENDPOINT`.
	SourceType pulumi.StringPtrInput `pulumi:"sourceType"`
}

func (DataSourceRelationalDatabaseConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceRelationalDatabaseConfig)(nil)).Elem()
}

func (i DataSourceRelationalDatabaseConfigArgs) ToDataSourceRelationalDatabaseConfigOutput() DataSourceRelationalDatabaseConfigOutput {
	return i.ToDataSourceRelationalDatabaseConfigOutputWithContext(context.Background())
}

func (i DataSourceRelationalDatabaseConfigArgs) ToDataSourceRelationalDatabaseConfigOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRelationalDatabaseConfigOutput)
}

func (i DataSourceRelationalDatabaseConfigArgs) ToDataSourceRelationalDatabaseConfigPtrOutput() DataSourceRelationalDatabaseConfigPtrOutput {
	return i.ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceRelationalDatabaseConfigArgs) ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRelationalDatabaseConfigOutput).ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(ctx)
}

// DataSourceRelationalDatabaseConfigPtrInput is an input type that accepts DataSourceRelationalDatabaseConfigArgs, DataSourceRelationalDatabaseConfigPtr and DataSourceRelationalDatabaseConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceRelationalDatabaseConfigPtrInput` via:
//
//	        DataSourceRelationalDatabaseConfigArgs{...}
//
//	or:
//
//	        nil
type DataSourceRelationalDatabaseConfigPtrInput interface {
	pulumi.Input

	ToDataSourceRelationalDatabaseConfigPtrOutput() DataSourceRelationalDatabaseConfigPtrOutput
	ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(context.Context) DataSourceRelationalDatabaseConfigPtrOutput
}

type dataSourceRelationalDatabaseConfigPtrType DataSourceRelationalDatabaseConfigArgs

func DataSourceRelationalDatabaseConfigPtr(v *DataSourceRelationalDatabaseConfigArgs) DataSourceRelationalDatabaseConfigPtrInput {
	return (*dataSourceRelationalDatabaseConfigPtrType)(v)
}

func (*dataSourceRelationalDatabaseConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceRelationalDatabaseConfig)(nil)).Elem()
}

func (i *dataSourceRelationalDatabaseConfigPtrType) ToDataSourceRelationalDatabaseConfigPtrOutput() DataSourceRelationalDatabaseConfigPtrOutput {
	return i.ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceRelationalDatabaseConfigPtrType) ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRelationalDatabaseConfigPtrOutput)
}

type DataSourceRelationalDatabaseConfigOutput struct{ *pulumi.OutputState }

func (DataSourceRelationalDatabaseConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceRelationalDatabaseConfig)(nil)).Elem()
}

func (o DataSourceRelationalDatabaseConfigOutput) ToDataSourceRelationalDatabaseConfigOutput() DataSourceRelationalDatabaseConfigOutput {
	return o
}

func (o DataSourceRelationalDatabaseConfigOutput) ToDataSourceRelationalDatabaseConfigOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigOutput {
	return o
}

func (o DataSourceRelationalDatabaseConfigOutput) ToDataSourceRelationalDatabaseConfigPtrOutput() DataSourceRelationalDatabaseConfigPtrOutput {
	return o.ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceRelationalDatabaseConfigOutput) ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceRelationalDatabaseConfig) *DataSourceRelationalDatabaseConfig {
		return &v
	}).(DataSourceRelationalDatabaseConfigPtrOutput)
}

// Amazon RDS HTTP endpoint configuration. See `httpEndpointConfig` Block for details.
func (o DataSourceRelationalDatabaseConfigOutput) HttpEndpointConfig() DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput {
	return o.ApplyT(func(v DataSourceRelationalDatabaseConfig) *DataSourceRelationalDatabaseConfigHttpEndpointConfig {
		return v.HttpEndpointConfig
	}).(DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput)
}

// Source type for the relational database. Valid values: `RDS_HTTP_ENDPOINT`.
func (o DataSourceRelationalDatabaseConfigOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceRelationalDatabaseConfig) *string { return v.SourceType }).(pulumi.StringPtrOutput)
}

type DataSourceRelationalDatabaseConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceRelationalDatabaseConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceRelationalDatabaseConfig)(nil)).Elem()
}

func (o DataSourceRelationalDatabaseConfigPtrOutput) ToDataSourceRelationalDatabaseConfigPtrOutput() DataSourceRelationalDatabaseConfigPtrOutput {
	return o
}

func (o DataSourceRelationalDatabaseConfigPtrOutput) ToDataSourceRelationalDatabaseConfigPtrOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigPtrOutput {
	return o
}

func (o DataSourceRelationalDatabaseConfigPtrOutput) Elem() DataSourceRelationalDatabaseConfigOutput {
	return o.ApplyT(func(v *DataSourceRelationalDatabaseConfig) DataSourceRelationalDatabaseConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceRelationalDatabaseConfig
		return ret
	}).(DataSourceRelationalDatabaseConfigOutput)
}

// Amazon RDS HTTP endpoint configuration. See `httpEndpointConfig` Block for details.
func (o DataSourceRelationalDatabaseConfigPtrOutput) HttpEndpointConfig() DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput {
	return o.ApplyT(func(v *DataSourceRelationalDatabaseConfig) *DataSourceRelationalDatabaseConfigHttpEndpointConfig {
		if v == nil {
			return nil
		}
		return v.HttpEndpointConfig
	}).(DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput)
}

// Source type for the relational database. Valid values: `RDS_HTTP_ENDPOINT`.
func (o DataSourceRelationalDatabaseConfigPtrOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRelationalDatabaseConfig) *string {
		if v == nil {
			return nil
		}
		return v.SourceType
	}).(pulumi.StringPtrOutput)
}

type DataSourceRelationalDatabaseConfigHttpEndpointConfig struct {
	// AWS secret store ARN for database credentials.
	AwsSecretStoreArn string `pulumi:"awsSecretStoreArn"`
	// Logical database name.
	DatabaseName *string `pulumi:"databaseName"`
	// Amazon RDS cluster identifier.
	DbClusterIdentifier string `pulumi:"dbClusterIdentifier"`
	// AWS Region for RDS HTTP endpoint. Defaults to current region.
	Region *string `pulumi:"region"`
	// Logical schema name.
	Schema *string `pulumi:"schema"`
}

// DataSourceRelationalDatabaseConfigHttpEndpointConfigInput is an input type that accepts DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs and DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput values.
// You can construct a concrete instance of `DataSourceRelationalDatabaseConfigHttpEndpointConfigInput` via:
//
//	DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs{...}
type DataSourceRelationalDatabaseConfigHttpEndpointConfigInput interface {
	pulumi.Input

	ToDataSourceRelationalDatabaseConfigHttpEndpointConfigOutput() DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput
	ToDataSourceRelationalDatabaseConfigHttpEndpointConfigOutputWithContext(context.Context) DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput
}

type DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs struct {
	// AWS secret store ARN for database credentials.
	AwsSecretStoreArn pulumi.StringInput `pulumi:"awsSecretStoreArn"`
	// Logical database name.
	DatabaseName pulumi.StringPtrInput `pulumi:"databaseName"`
	// Amazon RDS cluster identifier.
	DbClusterIdentifier pulumi.StringInput `pulumi:"dbClusterIdentifier"`
	// AWS Region for RDS HTTP endpoint. Defaults to current region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Logical schema name.
	Schema pulumi.StringPtrInput `pulumi:"schema"`
}

func (DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceRelationalDatabaseConfigHttpEndpointConfig)(nil)).Elem()
}

func (i DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs) ToDataSourceRelationalDatabaseConfigHttpEndpointConfigOutput() DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput {
	return i.ToDataSourceRelationalDatabaseConfigHttpEndpointConfigOutputWithContext(context.Background())
}

func (i DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs) ToDataSourceRelationalDatabaseConfigHttpEndpointConfigOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput)
}

func (i DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs) ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput() DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput {
	return i.ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs) ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput).ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutputWithContext(ctx)
}

// DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrInput is an input type that accepts DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs, DataSourceRelationalDatabaseConfigHttpEndpointConfigPtr and DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrInput` via:
//
//	        DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs{...}
//
//	or:
//
//	        nil
type DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrInput interface {
	pulumi.Input

	ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput() DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput
	ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutputWithContext(context.Context) DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput
}

type dataSourceRelationalDatabaseConfigHttpEndpointConfigPtrType DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs

func DataSourceRelationalDatabaseConfigHttpEndpointConfigPtr(v *DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs) DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrInput {
	return (*dataSourceRelationalDatabaseConfigHttpEndpointConfigPtrType)(v)
}

func (*dataSourceRelationalDatabaseConfigHttpEndpointConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceRelationalDatabaseConfigHttpEndpointConfig)(nil)).Elem()
}

func (i *dataSourceRelationalDatabaseConfigHttpEndpointConfigPtrType) ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput() DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput {
	return i.ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceRelationalDatabaseConfigHttpEndpointConfigPtrType) ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput)
}

type DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput struct{ *pulumi.OutputState }

func (DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceRelationalDatabaseConfigHttpEndpointConfig)(nil)).Elem()
}

func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput) ToDataSourceRelationalDatabaseConfigHttpEndpointConfigOutput() DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput {
	return o
}

func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput) ToDataSourceRelationalDatabaseConfigHttpEndpointConfigOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput {
	return o
}

func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput) ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput() DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput {
	return o.ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput) ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataSourceRelationalDatabaseConfigHttpEndpointConfig) *DataSourceRelationalDatabaseConfigHttpEndpointConfig {
		return &v
	}).(DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput)
}

// AWS secret store ARN for database credentials.
func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput) AwsSecretStoreArn() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceRelationalDatabaseConfigHttpEndpointConfig) string { return v.AwsSecretStoreArn }).(pulumi.StringOutput)
}

// Logical database name.
func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceRelationalDatabaseConfigHttpEndpointConfig) *string { return v.DatabaseName }).(pulumi.StringPtrOutput)
}

// Amazon RDS cluster identifier.
func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput) DbClusterIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceRelationalDatabaseConfigHttpEndpointConfig) string { return v.DbClusterIdentifier }).(pulumi.StringOutput)
}

// AWS Region for RDS HTTP endpoint. Defaults to current region.
func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceRelationalDatabaseConfigHttpEndpointConfig) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Logical schema name.
func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput) Schema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceRelationalDatabaseConfigHttpEndpointConfig) *string { return v.Schema }).(pulumi.StringPtrOutput)
}

type DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceRelationalDatabaseConfigHttpEndpointConfig)(nil)).Elem()
}

func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput) ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput() DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput {
	return o
}

func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput) ToDataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutputWithContext(ctx context.Context) DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput {
	return o
}

func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput) Elem() DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput {
	return o.ApplyT(func(v *DataSourceRelationalDatabaseConfigHttpEndpointConfig) DataSourceRelationalDatabaseConfigHttpEndpointConfig {
		if v != nil {
			return *v
		}
		var ret DataSourceRelationalDatabaseConfigHttpEndpointConfig
		return ret
	}).(DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput)
}

// AWS secret store ARN for database credentials.
func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput) AwsSecretStoreArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRelationalDatabaseConfigHttpEndpointConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AwsSecretStoreArn
	}).(pulumi.StringPtrOutput)
}

// Logical database name.
func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRelationalDatabaseConfigHttpEndpointConfig) *string {
		if v == nil {
			return nil
		}
		return v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// Amazon RDS cluster identifier.
func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput) DbClusterIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRelationalDatabaseConfigHttpEndpointConfig) *string {
		if v == nil {
			return nil
		}
		return &v.DbClusterIdentifier
	}).(pulumi.StringPtrOutput)
}

// AWS Region for RDS HTTP endpoint. Defaults to current region.
func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRelationalDatabaseConfigHttpEndpointConfig) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

// Logical schema name.
func (o DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput) Schema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSourceRelationalDatabaseConfigHttpEndpointConfig) *string {
		if v == nil {
			return nil
		}
		return v.Schema
	}).(pulumi.StringPtrOutput)
}

type FunctionRuntime struct {
	// The name of the runtime to use. Currently, the only allowed value is `APPSYNC_JS`.
	Name string `pulumi:"name"`
	// The version of the runtime to use. Currently, the only allowed version is `1.0.0`.
	RuntimeVersion string `pulumi:"runtimeVersion"`
}

// FunctionRuntimeInput is an input type that accepts FunctionRuntimeArgs and FunctionRuntimeOutput values.
// You can construct a concrete instance of `FunctionRuntimeInput` via:
//
//	FunctionRuntimeArgs{...}
type FunctionRuntimeInput interface {
	pulumi.Input

	ToFunctionRuntimeOutput() FunctionRuntimeOutput
	ToFunctionRuntimeOutputWithContext(context.Context) FunctionRuntimeOutput
}

type FunctionRuntimeArgs struct {
	// The name of the runtime to use. Currently, the only allowed value is `APPSYNC_JS`.
	Name pulumi.StringInput `pulumi:"name"`
	// The version of the runtime to use. Currently, the only allowed version is `1.0.0`.
	RuntimeVersion pulumi.StringInput `pulumi:"runtimeVersion"`
}

func (FunctionRuntimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionRuntime)(nil)).Elem()
}

func (i FunctionRuntimeArgs) ToFunctionRuntimeOutput() FunctionRuntimeOutput {
	return i.ToFunctionRuntimeOutputWithContext(context.Background())
}

func (i FunctionRuntimeArgs) ToFunctionRuntimeOutputWithContext(ctx context.Context) FunctionRuntimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionRuntimeOutput)
}

func (i FunctionRuntimeArgs) ToFunctionRuntimePtrOutput() FunctionRuntimePtrOutput {
	return i.ToFunctionRuntimePtrOutputWithContext(context.Background())
}

func (i FunctionRuntimeArgs) ToFunctionRuntimePtrOutputWithContext(ctx context.Context) FunctionRuntimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionRuntimeOutput).ToFunctionRuntimePtrOutputWithContext(ctx)
}

// FunctionRuntimePtrInput is an input type that accepts FunctionRuntimeArgs, FunctionRuntimePtr and FunctionRuntimePtrOutput values.
// You can construct a concrete instance of `FunctionRuntimePtrInput` via:
//
//	        FunctionRuntimeArgs{...}
//
//	or:
//
//	        nil
type FunctionRuntimePtrInput interface {
	pulumi.Input

	ToFunctionRuntimePtrOutput() FunctionRuntimePtrOutput
	ToFunctionRuntimePtrOutputWithContext(context.Context) FunctionRuntimePtrOutput
}

type functionRuntimePtrType FunctionRuntimeArgs

func FunctionRuntimePtr(v *FunctionRuntimeArgs) FunctionRuntimePtrInput {
	return (*functionRuntimePtrType)(v)
}

func (*functionRuntimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionRuntime)(nil)).Elem()
}

func (i *functionRuntimePtrType) ToFunctionRuntimePtrOutput() FunctionRuntimePtrOutput {
	return i.ToFunctionRuntimePtrOutputWithContext(context.Background())
}

func (i *functionRuntimePtrType) ToFunctionRuntimePtrOutputWithContext(ctx context.Context) FunctionRuntimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionRuntimePtrOutput)
}

type FunctionRuntimeOutput struct{ *pulumi.OutputState }

func (FunctionRuntimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionRuntime)(nil)).Elem()
}

func (o FunctionRuntimeOutput) ToFunctionRuntimeOutput() FunctionRuntimeOutput {
	return o
}

func (o FunctionRuntimeOutput) ToFunctionRuntimeOutputWithContext(ctx context.Context) FunctionRuntimeOutput {
	return o
}

func (o FunctionRuntimeOutput) ToFunctionRuntimePtrOutput() FunctionRuntimePtrOutput {
	return o.ToFunctionRuntimePtrOutputWithContext(context.Background())
}

func (o FunctionRuntimeOutput) ToFunctionRuntimePtrOutputWithContext(ctx context.Context) FunctionRuntimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionRuntime) *FunctionRuntime {
		return &v
	}).(FunctionRuntimePtrOutput)
}

// The name of the runtime to use. Currently, the only allowed value is `APPSYNC_JS`.
func (o FunctionRuntimeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionRuntime) string { return v.Name }).(pulumi.StringOutput)
}

// The version of the runtime to use. Currently, the only allowed version is `1.0.0`.
func (o FunctionRuntimeOutput) RuntimeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v FunctionRuntime) string { return v.RuntimeVersion }).(pulumi.StringOutput)
}

type FunctionRuntimePtrOutput struct{ *pulumi.OutputState }

func (FunctionRuntimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionRuntime)(nil)).Elem()
}

func (o FunctionRuntimePtrOutput) ToFunctionRuntimePtrOutput() FunctionRuntimePtrOutput {
	return o
}

func (o FunctionRuntimePtrOutput) ToFunctionRuntimePtrOutputWithContext(ctx context.Context) FunctionRuntimePtrOutput {
	return o
}

func (o FunctionRuntimePtrOutput) Elem() FunctionRuntimeOutput {
	return o.ApplyT(func(v *FunctionRuntime) FunctionRuntime {
		if v != nil {
			return *v
		}
		var ret FunctionRuntime
		return ret
	}).(FunctionRuntimeOutput)
}

// The name of the runtime to use. Currently, the only allowed value is `APPSYNC_JS`.
func (o FunctionRuntimePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionRuntime) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The version of the runtime to use. Currently, the only allowed version is `1.0.0`.
func (o FunctionRuntimePtrOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionRuntime) *string {
		if v == nil {
			return nil
		}
		return &v.RuntimeVersion
	}).(pulumi.StringPtrOutput)
}

type FunctionSyncConfig struct {
	// Conflict Detection strategy to use. Valid values are `NONE` and `VERSION`.
	ConflictDetection *string `pulumi:"conflictDetection"`
	// Conflict Resolution strategy to perform in the event of a conflict. Valid values are `NONE`, `OPTIMISTIC_CONCURRENCY`, `AUTOMERGE`, and `LAMBDA`.
	ConflictHandler *string `pulumi:"conflictHandler"`
	// Lambda Conflict Handler Config when configuring `LAMBDA` as the Conflict Handler. See `lambdaConflictHandlerConfig` Block for details.
	LambdaConflictHandlerConfig *FunctionSyncConfigLambdaConflictHandlerConfig `pulumi:"lambdaConflictHandlerConfig"`
}

// FunctionSyncConfigInput is an input type that accepts FunctionSyncConfigArgs and FunctionSyncConfigOutput values.
// You can construct a concrete instance of `FunctionSyncConfigInput` via:
//
//	FunctionSyncConfigArgs{...}
type FunctionSyncConfigInput interface {
	pulumi.Input

	ToFunctionSyncConfigOutput() FunctionSyncConfigOutput
	ToFunctionSyncConfigOutputWithContext(context.Context) FunctionSyncConfigOutput
}

type FunctionSyncConfigArgs struct {
	// Conflict Detection strategy to use. Valid values are `NONE` and `VERSION`.
	ConflictDetection pulumi.StringPtrInput `pulumi:"conflictDetection"`
	// Conflict Resolution strategy to perform in the event of a conflict. Valid values are `NONE`, `OPTIMISTIC_CONCURRENCY`, `AUTOMERGE`, and `LAMBDA`.
	ConflictHandler pulumi.StringPtrInput `pulumi:"conflictHandler"`
	// Lambda Conflict Handler Config when configuring `LAMBDA` as the Conflict Handler. See `lambdaConflictHandlerConfig` Block for details.
	LambdaConflictHandlerConfig FunctionSyncConfigLambdaConflictHandlerConfigPtrInput `pulumi:"lambdaConflictHandlerConfig"`
}

func (FunctionSyncConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionSyncConfig)(nil)).Elem()
}

func (i FunctionSyncConfigArgs) ToFunctionSyncConfigOutput() FunctionSyncConfigOutput {
	return i.ToFunctionSyncConfigOutputWithContext(context.Background())
}

func (i FunctionSyncConfigArgs) ToFunctionSyncConfigOutputWithContext(ctx context.Context) FunctionSyncConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSyncConfigOutput)
}

func (i FunctionSyncConfigArgs) ToFunctionSyncConfigPtrOutput() FunctionSyncConfigPtrOutput {
	return i.ToFunctionSyncConfigPtrOutputWithContext(context.Background())
}

func (i FunctionSyncConfigArgs) ToFunctionSyncConfigPtrOutputWithContext(ctx context.Context) FunctionSyncConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSyncConfigOutput).ToFunctionSyncConfigPtrOutputWithContext(ctx)
}

// FunctionSyncConfigPtrInput is an input type that accepts FunctionSyncConfigArgs, FunctionSyncConfigPtr and FunctionSyncConfigPtrOutput values.
// You can construct a concrete instance of `FunctionSyncConfigPtrInput` via:
//
//	        FunctionSyncConfigArgs{...}
//
//	or:
//
//	        nil
type FunctionSyncConfigPtrInput interface {
	pulumi.Input

	ToFunctionSyncConfigPtrOutput() FunctionSyncConfigPtrOutput
	ToFunctionSyncConfigPtrOutputWithContext(context.Context) FunctionSyncConfigPtrOutput
}

type functionSyncConfigPtrType FunctionSyncConfigArgs

func FunctionSyncConfigPtr(v *FunctionSyncConfigArgs) FunctionSyncConfigPtrInput {
	return (*functionSyncConfigPtrType)(v)
}

func (*functionSyncConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionSyncConfig)(nil)).Elem()
}

func (i *functionSyncConfigPtrType) ToFunctionSyncConfigPtrOutput() FunctionSyncConfigPtrOutput {
	return i.ToFunctionSyncConfigPtrOutputWithContext(context.Background())
}

func (i *functionSyncConfigPtrType) ToFunctionSyncConfigPtrOutputWithContext(ctx context.Context) FunctionSyncConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSyncConfigPtrOutput)
}

type FunctionSyncConfigOutput struct{ *pulumi.OutputState }

func (FunctionSyncConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionSyncConfig)(nil)).Elem()
}

func (o FunctionSyncConfigOutput) ToFunctionSyncConfigOutput() FunctionSyncConfigOutput {
	return o
}

func (o FunctionSyncConfigOutput) ToFunctionSyncConfigOutputWithContext(ctx context.Context) FunctionSyncConfigOutput {
	return o
}

func (o FunctionSyncConfigOutput) ToFunctionSyncConfigPtrOutput() FunctionSyncConfigPtrOutput {
	return o.ToFunctionSyncConfigPtrOutputWithContext(context.Background())
}

func (o FunctionSyncConfigOutput) ToFunctionSyncConfigPtrOutputWithContext(ctx context.Context) FunctionSyncConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionSyncConfig) *FunctionSyncConfig {
		return &v
	}).(FunctionSyncConfigPtrOutput)
}

// Conflict Detection strategy to use. Valid values are `NONE` and `VERSION`.
func (o FunctionSyncConfigOutput) ConflictDetection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionSyncConfig) *string { return v.ConflictDetection }).(pulumi.StringPtrOutput)
}

// Conflict Resolution strategy to perform in the event of a conflict. Valid values are `NONE`, `OPTIMISTIC_CONCURRENCY`, `AUTOMERGE`, and `LAMBDA`.
func (o FunctionSyncConfigOutput) ConflictHandler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionSyncConfig) *string { return v.ConflictHandler }).(pulumi.StringPtrOutput)
}

// Lambda Conflict Handler Config when configuring `LAMBDA` as the Conflict Handler. See `lambdaConflictHandlerConfig` Block for details.
func (o FunctionSyncConfigOutput) LambdaConflictHandlerConfig() FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return o.ApplyT(func(v FunctionSyncConfig) *FunctionSyncConfigLambdaConflictHandlerConfig {
		return v.LambdaConflictHandlerConfig
	}).(FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput)
}

type FunctionSyncConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionSyncConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionSyncConfig)(nil)).Elem()
}

func (o FunctionSyncConfigPtrOutput) ToFunctionSyncConfigPtrOutput() FunctionSyncConfigPtrOutput {
	return o
}

func (o FunctionSyncConfigPtrOutput) ToFunctionSyncConfigPtrOutputWithContext(ctx context.Context) FunctionSyncConfigPtrOutput {
	return o
}

func (o FunctionSyncConfigPtrOutput) Elem() FunctionSyncConfigOutput {
	return o.ApplyT(func(v *FunctionSyncConfig) FunctionSyncConfig {
		if v != nil {
			return *v
		}
		var ret FunctionSyncConfig
		return ret
	}).(FunctionSyncConfigOutput)
}

// Conflict Detection strategy to use. Valid values are `NONE` and `VERSION`.
func (o FunctionSyncConfigPtrOutput) ConflictDetection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionSyncConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConflictDetection
	}).(pulumi.StringPtrOutput)
}

// Conflict Resolution strategy to perform in the event of a conflict. Valid values are `NONE`, `OPTIMISTIC_CONCURRENCY`, `AUTOMERGE`, and `LAMBDA`.
func (o FunctionSyncConfigPtrOutput) ConflictHandler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionSyncConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConflictHandler
	}).(pulumi.StringPtrOutput)
}

// Lambda Conflict Handler Config when configuring `LAMBDA` as the Conflict Handler. See `lambdaConflictHandlerConfig` Block for details.
func (o FunctionSyncConfigPtrOutput) LambdaConflictHandlerConfig() FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return o.ApplyT(func(v *FunctionSyncConfig) *FunctionSyncConfigLambdaConflictHandlerConfig {
		if v == nil {
			return nil
		}
		return v.LambdaConflictHandlerConfig
	}).(FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput)
}

type FunctionSyncConfigLambdaConflictHandlerConfig struct {
	// ARN for the Lambda function to use as the Conflict Handler.
	LambdaConflictHandlerArn *string `pulumi:"lambdaConflictHandlerArn"`
}

// FunctionSyncConfigLambdaConflictHandlerConfigInput is an input type that accepts FunctionSyncConfigLambdaConflictHandlerConfigArgs and FunctionSyncConfigLambdaConflictHandlerConfigOutput values.
// You can construct a concrete instance of `FunctionSyncConfigLambdaConflictHandlerConfigInput` via:
//
//	FunctionSyncConfigLambdaConflictHandlerConfigArgs{...}
type FunctionSyncConfigLambdaConflictHandlerConfigInput interface {
	pulumi.Input

	ToFunctionSyncConfigLambdaConflictHandlerConfigOutput() FunctionSyncConfigLambdaConflictHandlerConfigOutput
	ToFunctionSyncConfigLambdaConflictHandlerConfigOutputWithContext(context.Context) FunctionSyncConfigLambdaConflictHandlerConfigOutput
}

type FunctionSyncConfigLambdaConflictHandlerConfigArgs struct {
	// ARN for the Lambda function to use as the Conflict Handler.
	LambdaConflictHandlerArn pulumi.StringPtrInput `pulumi:"lambdaConflictHandlerArn"`
}

func (FunctionSyncConfigLambdaConflictHandlerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionSyncConfigLambdaConflictHandlerConfig)(nil)).Elem()
}

func (i FunctionSyncConfigLambdaConflictHandlerConfigArgs) ToFunctionSyncConfigLambdaConflictHandlerConfigOutput() FunctionSyncConfigLambdaConflictHandlerConfigOutput {
	return i.ToFunctionSyncConfigLambdaConflictHandlerConfigOutputWithContext(context.Background())
}

func (i FunctionSyncConfigLambdaConflictHandlerConfigArgs) ToFunctionSyncConfigLambdaConflictHandlerConfigOutputWithContext(ctx context.Context) FunctionSyncConfigLambdaConflictHandlerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSyncConfigLambdaConflictHandlerConfigOutput)
}

func (i FunctionSyncConfigLambdaConflictHandlerConfigArgs) ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutput() FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return i.ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(context.Background())
}

func (i FunctionSyncConfigLambdaConflictHandlerConfigArgs) ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(ctx context.Context) FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSyncConfigLambdaConflictHandlerConfigOutput).ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(ctx)
}

// FunctionSyncConfigLambdaConflictHandlerConfigPtrInput is an input type that accepts FunctionSyncConfigLambdaConflictHandlerConfigArgs, FunctionSyncConfigLambdaConflictHandlerConfigPtr and FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput values.
// You can construct a concrete instance of `FunctionSyncConfigLambdaConflictHandlerConfigPtrInput` via:
//
//	        FunctionSyncConfigLambdaConflictHandlerConfigArgs{...}
//
//	or:
//
//	        nil
type FunctionSyncConfigLambdaConflictHandlerConfigPtrInput interface {
	pulumi.Input

	ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutput() FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput
	ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(context.Context) FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput
}

type functionSyncConfigLambdaConflictHandlerConfigPtrType FunctionSyncConfigLambdaConflictHandlerConfigArgs

func FunctionSyncConfigLambdaConflictHandlerConfigPtr(v *FunctionSyncConfigLambdaConflictHandlerConfigArgs) FunctionSyncConfigLambdaConflictHandlerConfigPtrInput {
	return (*functionSyncConfigLambdaConflictHandlerConfigPtrType)(v)
}

func (*functionSyncConfigLambdaConflictHandlerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionSyncConfigLambdaConflictHandlerConfig)(nil)).Elem()
}

func (i *functionSyncConfigLambdaConflictHandlerConfigPtrType) ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutput() FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return i.ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(context.Background())
}

func (i *functionSyncConfigLambdaConflictHandlerConfigPtrType) ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(ctx context.Context) FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput)
}

type FunctionSyncConfigLambdaConflictHandlerConfigOutput struct{ *pulumi.OutputState }

func (FunctionSyncConfigLambdaConflictHandlerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FunctionSyncConfigLambdaConflictHandlerConfig)(nil)).Elem()
}

func (o FunctionSyncConfigLambdaConflictHandlerConfigOutput) ToFunctionSyncConfigLambdaConflictHandlerConfigOutput() FunctionSyncConfigLambdaConflictHandlerConfigOutput {
	return o
}

func (o FunctionSyncConfigLambdaConflictHandlerConfigOutput) ToFunctionSyncConfigLambdaConflictHandlerConfigOutputWithContext(ctx context.Context) FunctionSyncConfigLambdaConflictHandlerConfigOutput {
	return o
}

func (o FunctionSyncConfigLambdaConflictHandlerConfigOutput) ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutput() FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return o.ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(context.Background())
}

func (o FunctionSyncConfigLambdaConflictHandlerConfigOutput) ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(ctx context.Context) FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FunctionSyncConfigLambdaConflictHandlerConfig) *FunctionSyncConfigLambdaConflictHandlerConfig {
		return &v
	}).(FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput)
}

// ARN for the Lambda function to use as the Conflict Handler.
func (o FunctionSyncConfigLambdaConflictHandlerConfigOutput) LambdaConflictHandlerArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FunctionSyncConfigLambdaConflictHandlerConfig) *string { return v.LambdaConflictHandlerArn }).(pulumi.StringPtrOutput)
}

type FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput struct{ *pulumi.OutputState }

func (FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionSyncConfigLambdaConflictHandlerConfig)(nil)).Elem()
}

func (o FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput) ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutput() FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return o
}

func (o FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput) ToFunctionSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(ctx context.Context) FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return o
}

func (o FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput) Elem() FunctionSyncConfigLambdaConflictHandlerConfigOutput {
	return o.ApplyT(func(v *FunctionSyncConfigLambdaConflictHandlerConfig) FunctionSyncConfigLambdaConflictHandlerConfig {
		if v != nil {
			return *v
		}
		var ret FunctionSyncConfigLambdaConflictHandlerConfig
		return ret
	}).(FunctionSyncConfigLambdaConflictHandlerConfigOutput)
}

// ARN for the Lambda function to use as the Conflict Handler.
func (o FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput) LambdaConflictHandlerArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionSyncConfigLambdaConflictHandlerConfig) *string {
		if v == nil {
			return nil
		}
		return v.LambdaConflictHandlerArn
	}).(pulumi.StringPtrOutput)
}

type GraphQLApiAdditionalAuthenticationProvider struct {
	// Authentication type. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`, `AWS_LAMBDA`
	AuthenticationType string `pulumi:"authenticationType"`
	// Nested argument containing Lambda authorizer configuration. See `lambdaAuthorizerConfig` Block for details.
	LambdaAuthorizerConfig *GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig `pulumi:"lambdaAuthorizerConfig"`
	// Nested argument containing OpenID Connect configuration. See `openidConnectConfig` Block for details.
	OpenidConnectConfig *GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig `pulumi:"openidConnectConfig"`
	// Amazon Cognito User Pool configuration. See `userPoolConfig` Block for details.
	UserPoolConfig *GraphQLApiAdditionalAuthenticationProviderUserPoolConfig `pulumi:"userPoolConfig"`
}

// GraphQLApiAdditionalAuthenticationProviderInput is an input type that accepts GraphQLApiAdditionalAuthenticationProviderArgs and GraphQLApiAdditionalAuthenticationProviderOutput values.
// You can construct a concrete instance of `GraphQLApiAdditionalAuthenticationProviderInput` via:
//
//	GraphQLApiAdditionalAuthenticationProviderArgs{...}
type GraphQLApiAdditionalAuthenticationProviderInput interface {
	pulumi.Input

	ToGraphQLApiAdditionalAuthenticationProviderOutput() GraphQLApiAdditionalAuthenticationProviderOutput
	ToGraphQLApiAdditionalAuthenticationProviderOutputWithContext(context.Context) GraphQLApiAdditionalAuthenticationProviderOutput
}

type GraphQLApiAdditionalAuthenticationProviderArgs struct {
	// Authentication type. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`, `AWS_LAMBDA`
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// Nested argument containing Lambda authorizer configuration. See `lambdaAuthorizerConfig` Block for details.
	LambdaAuthorizerConfig GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrInput `pulumi:"lambdaAuthorizerConfig"`
	// Nested argument containing OpenID Connect configuration. See `openidConnectConfig` Block for details.
	OpenidConnectConfig GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrInput `pulumi:"openidConnectConfig"`
	// Amazon Cognito User Pool configuration. See `userPoolConfig` Block for details.
	UserPoolConfig GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrInput `pulumi:"userPoolConfig"`
}

func (GraphQLApiAdditionalAuthenticationProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProvider)(nil)).Elem()
}

func (i GraphQLApiAdditionalAuthenticationProviderArgs) ToGraphQLApiAdditionalAuthenticationProviderOutput() GraphQLApiAdditionalAuthenticationProviderOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderOutputWithContext(context.Background())
}

func (i GraphQLApiAdditionalAuthenticationProviderArgs) ToGraphQLApiAdditionalAuthenticationProviderOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderOutput)
}

// GraphQLApiAdditionalAuthenticationProviderArrayInput is an input type that accepts GraphQLApiAdditionalAuthenticationProviderArray and GraphQLApiAdditionalAuthenticationProviderArrayOutput values.
// You can construct a concrete instance of `GraphQLApiAdditionalAuthenticationProviderArrayInput` via:
//
//	GraphQLApiAdditionalAuthenticationProviderArray{ GraphQLApiAdditionalAuthenticationProviderArgs{...} }
type GraphQLApiAdditionalAuthenticationProviderArrayInput interface {
	pulumi.Input

	ToGraphQLApiAdditionalAuthenticationProviderArrayOutput() GraphQLApiAdditionalAuthenticationProviderArrayOutput
	ToGraphQLApiAdditionalAuthenticationProviderArrayOutputWithContext(context.Context) GraphQLApiAdditionalAuthenticationProviderArrayOutput
}

type GraphQLApiAdditionalAuthenticationProviderArray []GraphQLApiAdditionalAuthenticationProviderInput

func (GraphQLApiAdditionalAuthenticationProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GraphQLApiAdditionalAuthenticationProvider)(nil)).Elem()
}

func (i GraphQLApiAdditionalAuthenticationProviderArray) ToGraphQLApiAdditionalAuthenticationProviderArrayOutput() GraphQLApiAdditionalAuthenticationProviderArrayOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderArrayOutputWithContext(context.Background())
}

func (i GraphQLApiAdditionalAuthenticationProviderArray) ToGraphQLApiAdditionalAuthenticationProviderArrayOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderArrayOutput)
}

type GraphQLApiAdditionalAuthenticationProviderOutput struct{ *pulumi.OutputState }

func (GraphQLApiAdditionalAuthenticationProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProvider)(nil)).Elem()
}

func (o GraphQLApiAdditionalAuthenticationProviderOutput) ToGraphQLApiAdditionalAuthenticationProviderOutput() GraphQLApiAdditionalAuthenticationProviderOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderOutput) ToGraphQLApiAdditionalAuthenticationProviderOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderOutput {
	return o
}

// Authentication type. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`, `AWS_LAMBDA`
func (o GraphQLApiAdditionalAuthenticationProviderOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProvider) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// Nested argument containing Lambda authorizer configuration. See `lambdaAuthorizerConfig` Block for details.
func (o GraphQLApiAdditionalAuthenticationProviderOutput) LambdaAuthorizerConfig() GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProvider) *GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig {
		return v.LambdaAuthorizerConfig
	}).(GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput)
}

// Nested argument containing OpenID Connect configuration. See `openidConnectConfig` Block for details.
func (o GraphQLApiAdditionalAuthenticationProviderOutput) OpenidConnectConfig() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProvider) *GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig {
		return v.OpenidConnectConfig
	}).(GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput)
}

// Amazon Cognito User Pool configuration. See `userPoolConfig` Block for details.
func (o GraphQLApiAdditionalAuthenticationProviderOutput) UserPoolConfig() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProvider) *GraphQLApiAdditionalAuthenticationProviderUserPoolConfig {
		return v.UserPoolConfig
	}).(GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput)
}

type GraphQLApiAdditionalAuthenticationProviderArrayOutput struct{ *pulumi.OutputState }

func (GraphQLApiAdditionalAuthenticationProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GraphQLApiAdditionalAuthenticationProvider)(nil)).Elem()
}

func (o GraphQLApiAdditionalAuthenticationProviderArrayOutput) ToGraphQLApiAdditionalAuthenticationProviderArrayOutput() GraphQLApiAdditionalAuthenticationProviderArrayOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderArrayOutput) ToGraphQLApiAdditionalAuthenticationProviderArrayOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderArrayOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderArrayOutput) Index(i pulumi.IntInput) GraphQLApiAdditionalAuthenticationProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GraphQLApiAdditionalAuthenticationProvider {
		return vs[0].([]GraphQLApiAdditionalAuthenticationProvider)[vs[1].(int)]
	}).(GraphQLApiAdditionalAuthenticationProviderOutput)
}

type GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig struct {
	// Number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a `ttlOverride` key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.
	AuthorizerResultTtlInSeconds *int `pulumi:"authorizerResultTtlInSeconds"`
	// ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow `lambda:InvokeFunction` from service principal `appsync.amazonaws.com`.
	AuthorizerUri string `pulumi:"authorizerUri"`
	// Regular expression for validation of tokens before the Lambda function is called.
	IdentityValidationExpression *string `pulumi:"identityValidationExpression"`
}

// GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigInput is an input type that accepts GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs and GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput values.
// You can construct a concrete instance of `GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigInput` via:
//
//	GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs{...}
type GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigInput interface {
	pulumi.Input

	ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput() GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput
	ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutputWithContext(context.Context) GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput
}

type GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs struct {
	// Number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a `ttlOverride` key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.
	AuthorizerResultTtlInSeconds pulumi.IntPtrInput `pulumi:"authorizerResultTtlInSeconds"`
	// ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow `lambda:InvokeFunction` from service principal `appsync.amazonaws.com`.
	AuthorizerUri pulumi.StringInput `pulumi:"authorizerUri"`
	// Regular expression for validation of tokens before the Lambda function is called.
	IdentityValidationExpression pulumi.StringPtrInput `pulumi:"identityValidationExpression"`
}

func (GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig)(nil)).Elem()
}

func (i GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput() GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutputWithContext(context.Background())
}

func (i GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput)
}

func (i GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutputWithContext(context.Background())
}

func (i GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput).ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutputWithContext(ctx)
}

// GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrInput is an input type that accepts GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs, GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtr and GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput values.
// You can construct a concrete instance of `GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrInput` via:
//
//	        GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs{...}
//
//	or:
//
//	        nil
type GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrInput interface {
	pulumi.Input

	ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput
	ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutputWithContext(context.Context) GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput
}

type graphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrType GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs

func GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtr(v *GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs) GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrInput {
	return (*graphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrType)(v)
}

func (*graphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig)(nil)).Elem()
}

func (i *graphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrType) ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutputWithContext(context.Background())
}

func (i *graphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrType) ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput)
}

type GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput struct{ *pulumi.OutputState }

func (GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig)(nil)).Elem()
}

func (o GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput() GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput {
	return o.ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutputWithContext(context.Background())
}

func (o GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig) *GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig {
		return &v
	}).(GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput)
}

// Number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a `ttlOverride` key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.
func (o GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput) AuthorizerResultTtlInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig) *int {
		return v.AuthorizerResultTtlInSeconds
	}).(pulumi.IntPtrOutput)
}

// ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow `lambda:InvokeFunction` from service principal `appsync.amazonaws.com`.
func (o GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput) AuthorizerUri() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig) string {
		return v.AuthorizerUri
	}).(pulumi.StringOutput)
}

// Regular expression for validation of tokens before the Lambda function is called.
func (o GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput) IdentityValidationExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig) *string {
		return v.IdentityValidationExpression
	}).(pulumi.StringPtrOutput)
}

type GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput struct{ *pulumi.OutputState }

func (GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig)(nil)).Elem()
}

func (o GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput) ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput) ToGraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput) Elem() GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig) GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig {
		if v != nil {
			return *v
		}
		var ret GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig
		return ret
	}).(GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput)
}

// Number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a `ttlOverride` key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.
func (o GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput) AuthorizerResultTtlInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig) *int {
		if v == nil {
			return nil
		}
		return v.AuthorizerResultTtlInSeconds
	}).(pulumi.IntPtrOutput)
}

// ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow `lambda:InvokeFunction` from service principal `appsync.amazonaws.com`.
func (o GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput) AuthorizerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AuthorizerUri
	}).(pulumi.StringPtrOutput)
}

// Regular expression for validation of tokens before the Lambda function is called.
func (o GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput) IdentityValidationExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfig) *string {
		if v == nil {
			return nil
		}
		return v.IdentityValidationExpression
	}).(pulumi.StringPtrOutput)
}

type GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig struct {
	// Number of milliseconds a token is valid after being authenticated.
	AuthTtl *int `pulumi:"authTtl"`
	// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
	ClientId *string `pulumi:"clientId"`
	// Number of milliseconds a token is valid after being issued to a user.
	IatTtl *int `pulumi:"iatTtl"`
	// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
	Issuer string `pulumi:"issuer"`
}

// GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigInput is an input type that accepts GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs and GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput values.
// You can construct a concrete instance of `GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigInput` via:
//
//	GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs{...}
type GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigInput interface {
	pulumi.Input

	ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput
	ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutputWithContext(context.Context) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput
}

type GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs struct {
	// Number of milliseconds a token is valid after being authenticated.
	AuthTtl pulumi.IntPtrInput `pulumi:"authTtl"`
	// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Number of milliseconds a token is valid after being issued to a user.
	IatTtl pulumi.IntPtrInput `pulumi:"iatTtl"`
	// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
	Issuer pulumi.StringInput `pulumi:"issuer"`
}

func (GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig)(nil)).Elem()
}

func (i GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutputWithContext(context.Background())
}

func (i GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput)
}

func (i GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(context.Background())
}

func (i GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput).ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(ctx)
}

// GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrInput is an input type that accepts GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs, GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtr and GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput values.
// You can construct a concrete instance of `GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrInput` via:
//
//	        GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs{...}
//
//	or:
//
//	        nil
type GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrInput interface {
	pulumi.Input

	ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput
	ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(context.Context) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput
}

type graphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrType GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs

func GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtr(v *GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrInput {
	return (*graphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrType)(v)
}

func (*graphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig)(nil)).Elem()
}

func (i *graphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrType) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(context.Background())
}

func (i *graphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrType) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput)
}

type GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput struct{ *pulumi.OutputState }

func (GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig)(nil)).Elem()
}

func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return o.ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(context.Background())
}

func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) *GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig {
		return &v
	}).(GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput)
}

// Number of milliseconds a token is valid after being authenticated.
func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) AuthTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) *int { return v.AuthTtl }).(pulumi.IntPtrOutput)
}

// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Number of milliseconds a token is valid after being issued to a user.
func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) IatTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) *int { return v.IatTtl }).(pulumi.IntPtrOutput)
}

// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) string { return v.Issuer }).(pulumi.StringOutput)
}

type GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig)(nil)).Elem()
}

func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput) Elem() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig {
		if v != nil {
			return *v
		}
		var ret GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig
		return ret
	}).(GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput)
}

// Number of milliseconds a token is valid after being authenticated.
func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput) AuthTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) *int {
		if v == nil {
			return nil
		}
		return v.AuthTtl
	}).(pulumi.IntPtrOutput)
}

// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Number of milliseconds a token is valid after being issued to a user.
func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput) IatTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) *int {
		if v == nil {
			return nil
		}
		return v.IatTtl
	}).(pulumi.IntPtrOutput)
}

// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Issuer
	}).(pulumi.StringPtrOutput)
}

type GraphQLApiAdditionalAuthenticationProviderUserPoolConfig struct {
	// Regular expression for validating the incoming Amazon Cognito User Pool app client ID.
	AppIdClientRegex *string `pulumi:"appIdClientRegex"`
	// AWS region in which the user pool was created.
	AwsRegion *string `pulumi:"awsRegion"`
	// User pool ID.
	UserPoolId string `pulumi:"userPoolId"`
}

// GraphQLApiAdditionalAuthenticationProviderUserPoolConfigInput is an input type that accepts GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs and GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput values.
// You can construct a concrete instance of `GraphQLApiAdditionalAuthenticationProviderUserPoolConfigInput` via:
//
//	GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs{...}
type GraphQLApiAdditionalAuthenticationProviderUserPoolConfigInput interface {
	pulumi.Input

	ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput
	ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutputWithContext(context.Context) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput
}

type GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs struct {
	// Regular expression for validating the incoming Amazon Cognito User Pool app client ID.
	AppIdClientRegex pulumi.StringPtrInput `pulumi:"appIdClientRegex"`
	// AWS region in which the user pool was created.
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// User pool ID.
	UserPoolId pulumi.StringInput `pulumi:"userPoolId"`
}

func (GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderUserPoolConfig)(nil)).Elem()
}

func (i GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutputWithContext(context.Background())
}

func (i GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput)
}

func (i GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(context.Background())
}

func (i GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput).ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(ctx)
}

// GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrInput is an input type that accepts GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs, GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtr and GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput values.
// You can construct a concrete instance of `GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrInput` via:
//
//	        GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs{...}
//
//	or:
//
//	        nil
type GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrInput interface {
	pulumi.Input

	ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput
	ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(context.Context) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput
}

type graphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrType GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs

func GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtr(v *GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrInput {
	return (*graphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrType)(v)
}

func (*graphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiAdditionalAuthenticationProviderUserPoolConfig)(nil)).Elem()
}

func (i *graphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrType) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(context.Background())
}

func (i *graphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrType) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput)
}

type GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput struct{ *pulumi.OutputState }

func (GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderUserPoolConfig)(nil)).Elem()
}

func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return o.ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(context.Background())
}

func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GraphQLApiAdditionalAuthenticationProviderUserPoolConfig) *GraphQLApiAdditionalAuthenticationProviderUserPoolConfig {
		return &v
	}).(GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput)
}

// Regular expression for validating the incoming Amazon Cognito User Pool app client ID.
func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput) AppIdClientRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderUserPoolConfig) *string { return v.AppIdClientRegex }).(pulumi.StringPtrOutput)
}

// AWS region in which the user pool was created.
func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderUserPoolConfig) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// User pool ID.
func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput) UserPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderUserPoolConfig) string { return v.UserPoolId }).(pulumi.StringOutput)
}

type GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput struct{ *pulumi.OutputState }

func (GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiAdditionalAuthenticationProviderUserPoolConfig)(nil)).Elem()
}

func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput) Elem() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderUserPoolConfig) GraphQLApiAdditionalAuthenticationProviderUserPoolConfig {
		if v != nil {
			return *v
		}
		var ret GraphQLApiAdditionalAuthenticationProviderUserPoolConfig
		return ret
	}).(GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput)
}

// Regular expression for validating the incoming Amazon Cognito User Pool app client ID.
func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput) AppIdClientRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderUserPoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.AppIdClientRegex
	}).(pulumi.StringPtrOutput)
}

// AWS region in which the user pool was created.
func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderUserPoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// User pool ID.
func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput) UserPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderUserPoolConfig) *string {
		if v == nil {
			return nil
		}
		return &v.UserPoolId
	}).(pulumi.StringPtrOutput)
}

type GraphQLApiEnhancedMetricsConfig struct {
	// How data source metrics will be emitted to CloudWatch. Valid values: `FULL_REQUEST_DATA_SOURCE_METRICS`, `PER_DATA_SOURCE_METRICS`
	DataSourceLevelMetricsBehavior string `pulumi:"dataSourceLevelMetricsBehavior"`
	// How operation metrics will be emitted to CloudWatch. Valid values: `ENABLED`, `DISABLED`
	OperationLevelMetricsConfig string `pulumi:"operationLevelMetricsConfig"`
	// How resolver metrics will be emitted to CloudWatch. Valid values: `FULL_REQUEST_RESOLVER_METRICS`, `PER_RESOLVER_METRICS`
	ResolverLevelMetricsBehavior string `pulumi:"resolverLevelMetricsBehavior"`
}

// GraphQLApiEnhancedMetricsConfigInput is an input type that accepts GraphQLApiEnhancedMetricsConfigArgs and GraphQLApiEnhancedMetricsConfigOutput values.
// You can construct a concrete instance of `GraphQLApiEnhancedMetricsConfigInput` via:
//
//	GraphQLApiEnhancedMetricsConfigArgs{...}
type GraphQLApiEnhancedMetricsConfigInput interface {
	pulumi.Input

	ToGraphQLApiEnhancedMetricsConfigOutput() GraphQLApiEnhancedMetricsConfigOutput
	ToGraphQLApiEnhancedMetricsConfigOutputWithContext(context.Context) GraphQLApiEnhancedMetricsConfigOutput
}

type GraphQLApiEnhancedMetricsConfigArgs struct {
	// How data source metrics will be emitted to CloudWatch. Valid values: `FULL_REQUEST_DATA_SOURCE_METRICS`, `PER_DATA_SOURCE_METRICS`
	DataSourceLevelMetricsBehavior pulumi.StringInput `pulumi:"dataSourceLevelMetricsBehavior"`
	// How operation metrics will be emitted to CloudWatch. Valid values: `ENABLED`, `DISABLED`
	OperationLevelMetricsConfig pulumi.StringInput `pulumi:"operationLevelMetricsConfig"`
	// How resolver metrics will be emitted to CloudWatch. Valid values: `FULL_REQUEST_RESOLVER_METRICS`, `PER_RESOLVER_METRICS`
	ResolverLevelMetricsBehavior pulumi.StringInput `pulumi:"resolverLevelMetricsBehavior"`
}

func (GraphQLApiEnhancedMetricsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiEnhancedMetricsConfig)(nil)).Elem()
}

func (i GraphQLApiEnhancedMetricsConfigArgs) ToGraphQLApiEnhancedMetricsConfigOutput() GraphQLApiEnhancedMetricsConfigOutput {
	return i.ToGraphQLApiEnhancedMetricsConfigOutputWithContext(context.Background())
}

func (i GraphQLApiEnhancedMetricsConfigArgs) ToGraphQLApiEnhancedMetricsConfigOutputWithContext(ctx context.Context) GraphQLApiEnhancedMetricsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiEnhancedMetricsConfigOutput)
}

func (i GraphQLApiEnhancedMetricsConfigArgs) ToGraphQLApiEnhancedMetricsConfigPtrOutput() GraphQLApiEnhancedMetricsConfigPtrOutput {
	return i.ToGraphQLApiEnhancedMetricsConfigPtrOutputWithContext(context.Background())
}

func (i GraphQLApiEnhancedMetricsConfigArgs) ToGraphQLApiEnhancedMetricsConfigPtrOutputWithContext(ctx context.Context) GraphQLApiEnhancedMetricsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiEnhancedMetricsConfigOutput).ToGraphQLApiEnhancedMetricsConfigPtrOutputWithContext(ctx)
}

// GraphQLApiEnhancedMetricsConfigPtrInput is an input type that accepts GraphQLApiEnhancedMetricsConfigArgs, GraphQLApiEnhancedMetricsConfigPtr and GraphQLApiEnhancedMetricsConfigPtrOutput values.
// You can construct a concrete instance of `GraphQLApiEnhancedMetricsConfigPtrInput` via:
//
//	        GraphQLApiEnhancedMetricsConfigArgs{...}
//
//	or:
//
//	        nil
type GraphQLApiEnhancedMetricsConfigPtrInput interface {
	pulumi.Input

	ToGraphQLApiEnhancedMetricsConfigPtrOutput() GraphQLApiEnhancedMetricsConfigPtrOutput
	ToGraphQLApiEnhancedMetricsConfigPtrOutputWithContext(context.Context) GraphQLApiEnhancedMetricsConfigPtrOutput
}

type graphQLApiEnhancedMetricsConfigPtrType GraphQLApiEnhancedMetricsConfigArgs

func GraphQLApiEnhancedMetricsConfigPtr(v *GraphQLApiEnhancedMetricsConfigArgs) GraphQLApiEnhancedMetricsConfigPtrInput {
	return (*graphQLApiEnhancedMetricsConfigPtrType)(v)
}

func (*graphQLApiEnhancedMetricsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiEnhancedMetricsConfig)(nil)).Elem()
}

func (i *graphQLApiEnhancedMetricsConfigPtrType) ToGraphQLApiEnhancedMetricsConfigPtrOutput() GraphQLApiEnhancedMetricsConfigPtrOutput {
	return i.ToGraphQLApiEnhancedMetricsConfigPtrOutputWithContext(context.Background())
}

func (i *graphQLApiEnhancedMetricsConfigPtrType) ToGraphQLApiEnhancedMetricsConfigPtrOutputWithContext(ctx context.Context) GraphQLApiEnhancedMetricsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiEnhancedMetricsConfigPtrOutput)
}

type GraphQLApiEnhancedMetricsConfigOutput struct{ *pulumi.OutputState }

func (GraphQLApiEnhancedMetricsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiEnhancedMetricsConfig)(nil)).Elem()
}

func (o GraphQLApiEnhancedMetricsConfigOutput) ToGraphQLApiEnhancedMetricsConfigOutput() GraphQLApiEnhancedMetricsConfigOutput {
	return o
}

func (o GraphQLApiEnhancedMetricsConfigOutput) ToGraphQLApiEnhancedMetricsConfigOutputWithContext(ctx context.Context) GraphQLApiEnhancedMetricsConfigOutput {
	return o
}

func (o GraphQLApiEnhancedMetricsConfigOutput) ToGraphQLApiEnhancedMetricsConfigPtrOutput() GraphQLApiEnhancedMetricsConfigPtrOutput {
	return o.ToGraphQLApiEnhancedMetricsConfigPtrOutputWithContext(context.Background())
}

func (o GraphQLApiEnhancedMetricsConfigOutput) ToGraphQLApiEnhancedMetricsConfigPtrOutputWithContext(ctx context.Context) GraphQLApiEnhancedMetricsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GraphQLApiEnhancedMetricsConfig) *GraphQLApiEnhancedMetricsConfig {
		return &v
	}).(GraphQLApiEnhancedMetricsConfigPtrOutput)
}

// How data source metrics will be emitted to CloudWatch. Valid values: `FULL_REQUEST_DATA_SOURCE_METRICS`, `PER_DATA_SOURCE_METRICS`
func (o GraphQLApiEnhancedMetricsConfigOutput) DataSourceLevelMetricsBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiEnhancedMetricsConfig) string { return v.DataSourceLevelMetricsBehavior }).(pulumi.StringOutput)
}

// How operation metrics will be emitted to CloudWatch. Valid values: `ENABLED`, `DISABLED`
func (o GraphQLApiEnhancedMetricsConfigOutput) OperationLevelMetricsConfig() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiEnhancedMetricsConfig) string { return v.OperationLevelMetricsConfig }).(pulumi.StringOutput)
}

// How resolver metrics will be emitted to CloudWatch. Valid values: `FULL_REQUEST_RESOLVER_METRICS`, `PER_RESOLVER_METRICS`
func (o GraphQLApiEnhancedMetricsConfigOutput) ResolverLevelMetricsBehavior() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiEnhancedMetricsConfig) string { return v.ResolverLevelMetricsBehavior }).(pulumi.StringOutput)
}

type GraphQLApiEnhancedMetricsConfigPtrOutput struct{ *pulumi.OutputState }

func (GraphQLApiEnhancedMetricsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiEnhancedMetricsConfig)(nil)).Elem()
}

func (o GraphQLApiEnhancedMetricsConfigPtrOutput) ToGraphQLApiEnhancedMetricsConfigPtrOutput() GraphQLApiEnhancedMetricsConfigPtrOutput {
	return o
}

func (o GraphQLApiEnhancedMetricsConfigPtrOutput) ToGraphQLApiEnhancedMetricsConfigPtrOutputWithContext(ctx context.Context) GraphQLApiEnhancedMetricsConfigPtrOutput {
	return o
}

func (o GraphQLApiEnhancedMetricsConfigPtrOutput) Elem() GraphQLApiEnhancedMetricsConfigOutput {
	return o.ApplyT(func(v *GraphQLApiEnhancedMetricsConfig) GraphQLApiEnhancedMetricsConfig {
		if v != nil {
			return *v
		}
		var ret GraphQLApiEnhancedMetricsConfig
		return ret
	}).(GraphQLApiEnhancedMetricsConfigOutput)
}

// How data source metrics will be emitted to CloudWatch. Valid values: `FULL_REQUEST_DATA_SOURCE_METRICS`, `PER_DATA_SOURCE_METRICS`
func (o GraphQLApiEnhancedMetricsConfigPtrOutput) DataSourceLevelMetricsBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiEnhancedMetricsConfig) *string {
		if v == nil {
			return nil
		}
		return &v.DataSourceLevelMetricsBehavior
	}).(pulumi.StringPtrOutput)
}

// How operation metrics will be emitted to CloudWatch. Valid values: `ENABLED`, `DISABLED`
func (o GraphQLApiEnhancedMetricsConfigPtrOutput) OperationLevelMetricsConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiEnhancedMetricsConfig) *string {
		if v == nil {
			return nil
		}
		return &v.OperationLevelMetricsConfig
	}).(pulumi.StringPtrOutput)
}

// How resolver metrics will be emitted to CloudWatch. Valid values: `FULL_REQUEST_RESOLVER_METRICS`, `PER_RESOLVER_METRICS`
func (o GraphQLApiEnhancedMetricsConfigPtrOutput) ResolverLevelMetricsBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiEnhancedMetricsConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ResolverLevelMetricsBehavior
	}).(pulumi.StringPtrOutput)
}

type GraphQLApiLambdaAuthorizerConfig struct {
	// Number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a `ttlOverride` key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.
	AuthorizerResultTtlInSeconds *int `pulumi:"authorizerResultTtlInSeconds"`
	// ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow `lambda:InvokeFunction` from service principal `appsync.amazonaws.com`.
	AuthorizerUri string `pulumi:"authorizerUri"`
	// Regular expression for validation of tokens before the Lambda function is called.
	IdentityValidationExpression *string `pulumi:"identityValidationExpression"`
}

// GraphQLApiLambdaAuthorizerConfigInput is an input type that accepts GraphQLApiLambdaAuthorizerConfigArgs and GraphQLApiLambdaAuthorizerConfigOutput values.
// You can construct a concrete instance of `GraphQLApiLambdaAuthorizerConfigInput` via:
//
//	GraphQLApiLambdaAuthorizerConfigArgs{...}
type GraphQLApiLambdaAuthorizerConfigInput interface {
	pulumi.Input

	ToGraphQLApiLambdaAuthorizerConfigOutput() GraphQLApiLambdaAuthorizerConfigOutput
	ToGraphQLApiLambdaAuthorizerConfigOutputWithContext(context.Context) GraphQLApiLambdaAuthorizerConfigOutput
}

type GraphQLApiLambdaAuthorizerConfigArgs struct {
	// Number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a `ttlOverride` key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.
	AuthorizerResultTtlInSeconds pulumi.IntPtrInput `pulumi:"authorizerResultTtlInSeconds"`
	// ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow `lambda:InvokeFunction` from service principal `appsync.amazonaws.com`.
	AuthorizerUri pulumi.StringInput `pulumi:"authorizerUri"`
	// Regular expression for validation of tokens before the Lambda function is called.
	IdentityValidationExpression pulumi.StringPtrInput `pulumi:"identityValidationExpression"`
}

func (GraphQLApiLambdaAuthorizerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiLambdaAuthorizerConfig)(nil)).Elem()
}

func (i GraphQLApiLambdaAuthorizerConfigArgs) ToGraphQLApiLambdaAuthorizerConfigOutput() GraphQLApiLambdaAuthorizerConfigOutput {
	return i.ToGraphQLApiLambdaAuthorizerConfigOutputWithContext(context.Background())
}

func (i GraphQLApiLambdaAuthorizerConfigArgs) ToGraphQLApiLambdaAuthorizerConfigOutputWithContext(ctx context.Context) GraphQLApiLambdaAuthorizerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiLambdaAuthorizerConfigOutput)
}

func (i GraphQLApiLambdaAuthorizerConfigArgs) ToGraphQLApiLambdaAuthorizerConfigPtrOutput() GraphQLApiLambdaAuthorizerConfigPtrOutput {
	return i.ToGraphQLApiLambdaAuthorizerConfigPtrOutputWithContext(context.Background())
}

func (i GraphQLApiLambdaAuthorizerConfigArgs) ToGraphQLApiLambdaAuthorizerConfigPtrOutputWithContext(ctx context.Context) GraphQLApiLambdaAuthorizerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiLambdaAuthorizerConfigOutput).ToGraphQLApiLambdaAuthorizerConfigPtrOutputWithContext(ctx)
}

// GraphQLApiLambdaAuthorizerConfigPtrInput is an input type that accepts GraphQLApiLambdaAuthorizerConfigArgs, GraphQLApiLambdaAuthorizerConfigPtr and GraphQLApiLambdaAuthorizerConfigPtrOutput values.
// You can construct a concrete instance of `GraphQLApiLambdaAuthorizerConfigPtrInput` via:
//
//	        GraphQLApiLambdaAuthorizerConfigArgs{...}
//
//	or:
//
//	        nil
type GraphQLApiLambdaAuthorizerConfigPtrInput interface {
	pulumi.Input

	ToGraphQLApiLambdaAuthorizerConfigPtrOutput() GraphQLApiLambdaAuthorizerConfigPtrOutput
	ToGraphQLApiLambdaAuthorizerConfigPtrOutputWithContext(context.Context) GraphQLApiLambdaAuthorizerConfigPtrOutput
}

type graphQLApiLambdaAuthorizerConfigPtrType GraphQLApiLambdaAuthorizerConfigArgs

func GraphQLApiLambdaAuthorizerConfigPtr(v *GraphQLApiLambdaAuthorizerConfigArgs) GraphQLApiLambdaAuthorizerConfigPtrInput {
	return (*graphQLApiLambdaAuthorizerConfigPtrType)(v)
}

func (*graphQLApiLambdaAuthorizerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiLambdaAuthorizerConfig)(nil)).Elem()
}

func (i *graphQLApiLambdaAuthorizerConfigPtrType) ToGraphQLApiLambdaAuthorizerConfigPtrOutput() GraphQLApiLambdaAuthorizerConfigPtrOutput {
	return i.ToGraphQLApiLambdaAuthorizerConfigPtrOutputWithContext(context.Background())
}

func (i *graphQLApiLambdaAuthorizerConfigPtrType) ToGraphQLApiLambdaAuthorizerConfigPtrOutputWithContext(ctx context.Context) GraphQLApiLambdaAuthorizerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiLambdaAuthorizerConfigPtrOutput)
}

type GraphQLApiLambdaAuthorizerConfigOutput struct{ *pulumi.OutputState }

func (GraphQLApiLambdaAuthorizerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiLambdaAuthorizerConfig)(nil)).Elem()
}

func (o GraphQLApiLambdaAuthorizerConfigOutput) ToGraphQLApiLambdaAuthorizerConfigOutput() GraphQLApiLambdaAuthorizerConfigOutput {
	return o
}

func (o GraphQLApiLambdaAuthorizerConfigOutput) ToGraphQLApiLambdaAuthorizerConfigOutputWithContext(ctx context.Context) GraphQLApiLambdaAuthorizerConfigOutput {
	return o
}

func (o GraphQLApiLambdaAuthorizerConfigOutput) ToGraphQLApiLambdaAuthorizerConfigPtrOutput() GraphQLApiLambdaAuthorizerConfigPtrOutput {
	return o.ToGraphQLApiLambdaAuthorizerConfigPtrOutputWithContext(context.Background())
}

func (o GraphQLApiLambdaAuthorizerConfigOutput) ToGraphQLApiLambdaAuthorizerConfigPtrOutputWithContext(ctx context.Context) GraphQLApiLambdaAuthorizerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GraphQLApiLambdaAuthorizerConfig) *GraphQLApiLambdaAuthorizerConfig {
		return &v
	}).(GraphQLApiLambdaAuthorizerConfigPtrOutput)
}

// Number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a `ttlOverride` key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.
func (o GraphQLApiLambdaAuthorizerConfigOutput) AuthorizerResultTtlInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GraphQLApiLambdaAuthorizerConfig) *int { return v.AuthorizerResultTtlInSeconds }).(pulumi.IntPtrOutput)
}

// ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow `lambda:InvokeFunction` from service principal `appsync.amazonaws.com`.
func (o GraphQLApiLambdaAuthorizerConfigOutput) AuthorizerUri() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiLambdaAuthorizerConfig) string { return v.AuthorizerUri }).(pulumi.StringOutput)
}

// Regular expression for validation of tokens before the Lambda function is called.
func (o GraphQLApiLambdaAuthorizerConfigOutput) IdentityValidationExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiLambdaAuthorizerConfig) *string { return v.IdentityValidationExpression }).(pulumi.StringPtrOutput)
}

type GraphQLApiLambdaAuthorizerConfigPtrOutput struct{ *pulumi.OutputState }

func (GraphQLApiLambdaAuthorizerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiLambdaAuthorizerConfig)(nil)).Elem()
}

func (o GraphQLApiLambdaAuthorizerConfigPtrOutput) ToGraphQLApiLambdaAuthorizerConfigPtrOutput() GraphQLApiLambdaAuthorizerConfigPtrOutput {
	return o
}

func (o GraphQLApiLambdaAuthorizerConfigPtrOutput) ToGraphQLApiLambdaAuthorizerConfigPtrOutputWithContext(ctx context.Context) GraphQLApiLambdaAuthorizerConfigPtrOutput {
	return o
}

func (o GraphQLApiLambdaAuthorizerConfigPtrOutput) Elem() GraphQLApiLambdaAuthorizerConfigOutput {
	return o.ApplyT(func(v *GraphQLApiLambdaAuthorizerConfig) GraphQLApiLambdaAuthorizerConfig {
		if v != nil {
			return *v
		}
		var ret GraphQLApiLambdaAuthorizerConfig
		return ret
	}).(GraphQLApiLambdaAuthorizerConfigOutput)
}

// Number of seconds a response should be cached for. The default is 5 minutes (300 seconds). The Lambda function can override this by returning a `ttlOverride` key in its response. A value of 0 disables caching of responses. Minimum value of 0. Maximum value of 3600.
func (o GraphQLApiLambdaAuthorizerConfigPtrOutput) AuthorizerResultTtlInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GraphQLApiLambdaAuthorizerConfig) *int {
		if v == nil {
			return nil
		}
		return v.AuthorizerResultTtlInSeconds
	}).(pulumi.IntPtrOutput)
}

// ARN of the Lambda function to be called for authorization. Note: This Lambda function must have a resource-based policy assigned to it, to allow `lambda:InvokeFunction` from service principal `appsync.amazonaws.com`.
func (o GraphQLApiLambdaAuthorizerConfigPtrOutput) AuthorizerUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiLambdaAuthorizerConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AuthorizerUri
	}).(pulumi.StringPtrOutput)
}

// Regular expression for validation of tokens before the Lambda function is called.
func (o GraphQLApiLambdaAuthorizerConfigPtrOutput) IdentityValidationExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiLambdaAuthorizerConfig) *string {
		if v == nil {
			return nil
		}
		return v.IdentityValidationExpression
	}).(pulumi.StringPtrOutput)
}

type GraphQLApiLogConfig struct {
	// Amazon Resource Name of the service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account.
	CloudwatchLogsRoleArn string `pulumi:"cloudwatchLogsRoleArn"`
	// Set to TRUE to exclude sections that contain information such as headers, context, and evaluated mapping templates, regardless of logging  level. Valid values: `true`, `false`. Default value: `false`
	ExcludeVerboseContent *bool `pulumi:"excludeVerboseContent"`
	// Field logging level. Valid values: `ALL`, `ERROR`, `NONE`.
	FieldLogLevel string `pulumi:"fieldLogLevel"`
}

// GraphQLApiLogConfigInput is an input type that accepts GraphQLApiLogConfigArgs and GraphQLApiLogConfigOutput values.
// You can construct a concrete instance of `GraphQLApiLogConfigInput` via:
//
//	GraphQLApiLogConfigArgs{...}
type GraphQLApiLogConfigInput interface {
	pulumi.Input

	ToGraphQLApiLogConfigOutput() GraphQLApiLogConfigOutput
	ToGraphQLApiLogConfigOutputWithContext(context.Context) GraphQLApiLogConfigOutput
}

type GraphQLApiLogConfigArgs struct {
	// Amazon Resource Name of the service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account.
	CloudwatchLogsRoleArn pulumi.StringInput `pulumi:"cloudwatchLogsRoleArn"`
	// Set to TRUE to exclude sections that contain information such as headers, context, and evaluated mapping templates, regardless of logging  level. Valid values: `true`, `false`. Default value: `false`
	ExcludeVerboseContent pulumi.BoolPtrInput `pulumi:"excludeVerboseContent"`
	// Field logging level. Valid values: `ALL`, `ERROR`, `NONE`.
	FieldLogLevel pulumi.StringInput `pulumi:"fieldLogLevel"`
}

func (GraphQLApiLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiLogConfig)(nil)).Elem()
}

func (i GraphQLApiLogConfigArgs) ToGraphQLApiLogConfigOutput() GraphQLApiLogConfigOutput {
	return i.ToGraphQLApiLogConfigOutputWithContext(context.Background())
}

func (i GraphQLApiLogConfigArgs) ToGraphQLApiLogConfigOutputWithContext(ctx context.Context) GraphQLApiLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiLogConfigOutput)
}

func (i GraphQLApiLogConfigArgs) ToGraphQLApiLogConfigPtrOutput() GraphQLApiLogConfigPtrOutput {
	return i.ToGraphQLApiLogConfigPtrOutputWithContext(context.Background())
}

func (i GraphQLApiLogConfigArgs) ToGraphQLApiLogConfigPtrOutputWithContext(ctx context.Context) GraphQLApiLogConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiLogConfigOutput).ToGraphQLApiLogConfigPtrOutputWithContext(ctx)
}

// GraphQLApiLogConfigPtrInput is an input type that accepts GraphQLApiLogConfigArgs, GraphQLApiLogConfigPtr and GraphQLApiLogConfigPtrOutput values.
// You can construct a concrete instance of `GraphQLApiLogConfigPtrInput` via:
//
//	        GraphQLApiLogConfigArgs{...}
//
//	or:
//
//	        nil
type GraphQLApiLogConfigPtrInput interface {
	pulumi.Input

	ToGraphQLApiLogConfigPtrOutput() GraphQLApiLogConfigPtrOutput
	ToGraphQLApiLogConfigPtrOutputWithContext(context.Context) GraphQLApiLogConfigPtrOutput
}

type graphQLApiLogConfigPtrType GraphQLApiLogConfigArgs

func GraphQLApiLogConfigPtr(v *GraphQLApiLogConfigArgs) GraphQLApiLogConfigPtrInput {
	return (*graphQLApiLogConfigPtrType)(v)
}

func (*graphQLApiLogConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiLogConfig)(nil)).Elem()
}

func (i *graphQLApiLogConfigPtrType) ToGraphQLApiLogConfigPtrOutput() GraphQLApiLogConfigPtrOutput {
	return i.ToGraphQLApiLogConfigPtrOutputWithContext(context.Background())
}

func (i *graphQLApiLogConfigPtrType) ToGraphQLApiLogConfigPtrOutputWithContext(ctx context.Context) GraphQLApiLogConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiLogConfigPtrOutput)
}

type GraphQLApiLogConfigOutput struct{ *pulumi.OutputState }

func (GraphQLApiLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiLogConfig)(nil)).Elem()
}

func (o GraphQLApiLogConfigOutput) ToGraphQLApiLogConfigOutput() GraphQLApiLogConfigOutput {
	return o
}

func (o GraphQLApiLogConfigOutput) ToGraphQLApiLogConfigOutputWithContext(ctx context.Context) GraphQLApiLogConfigOutput {
	return o
}

func (o GraphQLApiLogConfigOutput) ToGraphQLApiLogConfigPtrOutput() GraphQLApiLogConfigPtrOutput {
	return o.ToGraphQLApiLogConfigPtrOutputWithContext(context.Background())
}

func (o GraphQLApiLogConfigOutput) ToGraphQLApiLogConfigPtrOutputWithContext(ctx context.Context) GraphQLApiLogConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GraphQLApiLogConfig) *GraphQLApiLogConfig {
		return &v
	}).(GraphQLApiLogConfigPtrOutput)
}

// Amazon Resource Name of the service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account.
func (o GraphQLApiLogConfigOutput) CloudwatchLogsRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiLogConfig) string { return v.CloudwatchLogsRoleArn }).(pulumi.StringOutput)
}

// Set to TRUE to exclude sections that contain information such as headers, context, and evaluated mapping templates, regardless of logging  level. Valid values: `true`, `false`. Default value: `false`
func (o GraphQLApiLogConfigOutput) ExcludeVerboseContent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GraphQLApiLogConfig) *bool { return v.ExcludeVerboseContent }).(pulumi.BoolPtrOutput)
}

// Field logging level. Valid values: `ALL`, `ERROR`, `NONE`.
func (o GraphQLApiLogConfigOutput) FieldLogLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiLogConfig) string { return v.FieldLogLevel }).(pulumi.StringOutput)
}

type GraphQLApiLogConfigPtrOutput struct{ *pulumi.OutputState }

func (GraphQLApiLogConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiLogConfig)(nil)).Elem()
}

func (o GraphQLApiLogConfigPtrOutput) ToGraphQLApiLogConfigPtrOutput() GraphQLApiLogConfigPtrOutput {
	return o
}

func (o GraphQLApiLogConfigPtrOutput) ToGraphQLApiLogConfigPtrOutputWithContext(ctx context.Context) GraphQLApiLogConfigPtrOutput {
	return o
}

func (o GraphQLApiLogConfigPtrOutput) Elem() GraphQLApiLogConfigOutput {
	return o.ApplyT(func(v *GraphQLApiLogConfig) GraphQLApiLogConfig {
		if v != nil {
			return *v
		}
		var ret GraphQLApiLogConfig
		return ret
	}).(GraphQLApiLogConfigOutput)
}

// Amazon Resource Name of the service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account.
func (o GraphQLApiLogConfigPtrOutput) CloudwatchLogsRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiLogConfig) *string {
		if v == nil {
			return nil
		}
		return &v.CloudwatchLogsRoleArn
	}).(pulumi.StringPtrOutput)
}

// Set to TRUE to exclude sections that contain information such as headers, context, and evaluated mapping templates, regardless of logging  level. Valid values: `true`, `false`. Default value: `false`
func (o GraphQLApiLogConfigPtrOutput) ExcludeVerboseContent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GraphQLApiLogConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ExcludeVerboseContent
	}).(pulumi.BoolPtrOutput)
}

// Field logging level. Valid values: `ALL`, `ERROR`, `NONE`.
func (o GraphQLApiLogConfigPtrOutput) FieldLogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiLogConfig) *string {
		if v == nil {
			return nil
		}
		return &v.FieldLogLevel
	}).(pulumi.StringPtrOutput)
}

type GraphQLApiOpenidConnectConfig struct {
	// Number of milliseconds a token is valid after being authenticated.
	AuthTtl *int `pulumi:"authTtl"`
	// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
	ClientId *string `pulumi:"clientId"`
	// Number of milliseconds a token is valid after being issued to a user.
	IatTtl *int `pulumi:"iatTtl"`
	// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
	Issuer string `pulumi:"issuer"`
}

// GraphQLApiOpenidConnectConfigInput is an input type that accepts GraphQLApiOpenidConnectConfigArgs and GraphQLApiOpenidConnectConfigOutput values.
// You can construct a concrete instance of `GraphQLApiOpenidConnectConfigInput` via:
//
//	GraphQLApiOpenidConnectConfigArgs{...}
type GraphQLApiOpenidConnectConfigInput interface {
	pulumi.Input

	ToGraphQLApiOpenidConnectConfigOutput() GraphQLApiOpenidConnectConfigOutput
	ToGraphQLApiOpenidConnectConfigOutputWithContext(context.Context) GraphQLApiOpenidConnectConfigOutput
}

type GraphQLApiOpenidConnectConfigArgs struct {
	// Number of milliseconds a token is valid after being authenticated.
	AuthTtl pulumi.IntPtrInput `pulumi:"authTtl"`
	// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Number of milliseconds a token is valid after being issued to a user.
	IatTtl pulumi.IntPtrInput `pulumi:"iatTtl"`
	// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
	Issuer pulumi.StringInput `pulumi:"issuer"`
}

func (GraphQLApiOpenidConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiOpenidConnectConfig)(nil)).Elem()
}

func (i GraphQLApiOpenidConnectConfigArgs) ToGraphQLApiOpenidConnectConfigOutput() GraphQLApiOpenidConnectConfigOutput {
	return i.ToGraphQLApiOpenidConnectConfigOutputWithContext(context.Background())
}

func (i GraphQLApiOpenidConnectConfigArgs) ToGraphQLApiOpenidConnectConfigOutputWithContext(ctx context.Context) GraphQLApiOpenidConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiOpenidConnectConfigOutput)
}

func (i GraphQLApiOpenidConnectConfigArgs) ToGraphQLApiOpenidConnectConfigPtrOutput() GraphQLApiOpenidConnectConfigPtrOutput {
	return i.ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(context.Background())
}

func (i GraphQLApiOpenidConnectConfigArgs) ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(ctx context.Context) GraphQLApiOpenidConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiOpenidConnectConfigOutput).ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(ctx)
}

// GraphQLApiOpenidConnectConfigPtrInput is an input type that accepts GraphQLApiOpenidConnectConfigArgs, GraphQLApiOpenidConnectConfigPtr and GraphQLApiOpenidConnectConfigPtrOutput values.
// You can construct a concrete instance of `GraphQLApiOpenidConnectConfigPtrInput` via:
//
//	        GraphQLApiOpenidConnectConfigArgs{...}
//
//	or:
//
//	        nil
type GraphQLApiOpenidConnectConfigPtrInput interface {
	pulumi.Input

	ToGraphQLApiOpenidConnectConfigPtrOutput() GraphQLApiOpenidConnectConfigPtrOutput
	ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(context.Context) GraphQLApiOpenidConnectConfigPtrOutput
}

type graphQLApiOpenidConnectConfigPtrType GraphQLApiOpenidConnectConfigArgs

func GraphQLApiOpenidConnectConfigPtr(v *GraphQLApiOpenidConnectConfigArgs) GraphQLApiOpenidConnectConfigPtrInput {
	return (*graphQLApiOpenidConnectConfigPtrType)(v)
}

func (*graphQLApiOpenidConnectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiOpenidConnectConfig)(nil)).Elem()
}

func (i *graphQLApiOpenidConnectConfigPtrType) ToGraphQLApiOpenidConnectConfigPtrOutput() GraphQLApiOpenidConnectConfigPtrOutput {
	return i.ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(context.Background())
}

func (i *graphQLApiOpenidConnectConfigPtrType) ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(ctx context.Context) GraphQLApiOpenidConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiOpenidConnectConfigPtrOutput)
}

type GraphQLApiOpenidConnectConfigOutput struct{ *pulumi.OutputState }

func (GraphQLApiOpenidConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiOpenidConnectConfig)(nil)).Elem()
}

func (o GraphQLApiOpenidConnectConfigOutput) ToGraphQLApiOpenidConnectConfigOutput() GraphQLApiOpenidConnectConfigOutput {
	return o
}

func (o GraphQLApiOpenidConnectConfigOutput) ToGraphQLApiOpenidConnectConfigOutputWithContext(ctx context.Context) GraphQLApiOpenidConnectConfigOutput {
	return o
}

func (o GraphQLApiOpenidConnectConfigOutput) ToGraphQLApiOpenidConnectConfigPtrOutput() GraphQLApiOpenidConnectConfigPtrOutput {
	return o.ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(context.Background())
}

func (o GraphQLApiOpenidConnectConfigOutput) ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(ctx context.Context) GraphQLApiOpenidConnectConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GraphQLApiOpenidConnectConfig) *GraphQLApiOpenidConnectConfig {
		return &v
	}).(GraphQLApiOpenidConnectConfigPtrOutput)
}

// Number of milliseconds a token is valid after being authenticated.
func (o GraphQLApiOpenidConnectConfigOutput) AuthTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GraphQLApiOpenidConnectConfig) *int { return v.AuthTtl }).(pulumi.IntPtrOutput)
}

// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
func (o GraphQLApiOpenidConnectConfigOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiOpenidConnectConfig) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Number of milliseconds a token is valid after being issued to a user.
func (o GraphQLApiOpenidConnectConfigOutput) IatTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GraphQLApiOpenidConnectConfig) *int { return v.IatTtl }).(pulumi.IntPtrOutput)
}

// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
func (o GraphQLApiOpenidConnectConfigOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiOpenidConnectConfig) string { return v.Issuer }).(pulumi.StringOutput)
}

type GraphQLApiOpenidConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (GraphQLApiOpenidConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiOpenidConnectConfig)(nil)).Elem()
}

func (o GraphQLApiOpenidConnectConfigPtrOutput) ToGraphQLApiOpenidConnectConfigPtrOutput() GraphQLApiOpenidConnectConfigPtrOutput {
	return o
}

func (o GraphQLApiOpenidConnectConfigPtrOutput) ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(ctx context.Context) GraphQLApiOpenidConnectConfigPtrOutput {
	return o
}

func (o GraphQLApiOpenidConnectConfigPtrOutput) Elem() GraphQLApiOpenidConnectConfigOutput {
	return o.ApplyT(func(v *GraphQLApiOpenidConnectConfig) GraphQLApiOpenidConnectConfig {
		if v != nil {
			return *v
		}
		var ret GraphQLApiOpenidConnectConfig
		return ret
	}).(GraphQLApiOpenidConnectConfigOutput)
}

// Number of milliseconds a token is valid after being authenticated.
func (o GraphQLApiOpenidConnectConfigPtrOutput) AuthTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GraphQLApiOpenidConnectConfig) *int {
		if v == nil {
			return nil
		}
		return v.AuthTtl
	}).(pulumi.IntPtrOutput)
}

// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
func (o GraphQLApiOpenidConnectConfigPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiOpenidConnectConfig) *string {
		if v == nil {
			return nil
		}
		return v.ClientId
	}).(pulumi.StringPtrOutput)
}

// Number of milliseconds a token is valid after being issued to a user.
func (o GraphQLApiOpenidConnectConfigPtrOutput) IatTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GraphQLApiOpenidConnectConfig) *int {
		if v == nil {
			return nil
		}
		return v.IatTtl
	}).(pulumi.IntPtrOutput)
}

// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
func (o GraphQLApiOpenidConnectConfigPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiOpenidConnectConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Issuer
	}).(pulumi.StringPtrOutput)
}

type GraphQLApiUserPoolConfig struct {
	// Regular expression for validating the incoming Amazon Cognito User Pool app client ID.
	AppIdClientRegex *string `pulumi:"appIdClientRegex"`
	// AWS region in which the user pool was created.
	AwsRegion *string `pulumi:"awsRegion"`
	// Action that you want your GraphQL API to take when a request that uses Amazon Cognito User Pool authentication doesn't match the Amazon Cognito User Pool configuration. Valid: `ALLOW` and `DENY`
	DefaultAction string `pulumi:"defaultAction"`
	// User pool ID.
	UserPoolId string `pulumi:"userPoolId"`
}

// GraphQLApiUserPoolConfigInput is an input type that accepts GraphQLApiUserPoolConfigArgs and GraphQLApiUserPoolConfigOutput values.
// You can construct a concrete instance of `GraphQLApiUserPoolConfigInput` via:
//
//	GraphQLApiUserPoolConfigArgs{...}
type GraphQLApiUserPoolConfigInput interface {
	pulumi.Input

	ToGraphQLApiUserPoolConfigOutput() GraphQLApiUserPoolConfigOutput
	ToGraphQLApiUserPoolConfigOutputWithContext(context.Context) GraphQLApiUserPoolConfigOutput
}

type GraphQLApiUserPoolConfigArgs struct {
	// Regular expression for validating the incoming Amazon Cognito User Pool app client ID.
	AppIdClientRegex pulumi.StringPtrInput `pulumi:"appIdClientRegex"`
	// AWS region in which the user pool was created.
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// Action that you want your GraphQL API to take when a request that uses Amazon Cognito User Pool authentication doesn't match the Amazon Cognito User Pool configuration. Valid: `ALLOW` and `DENY`
	DefaultAction pulumi.StringInput `pulumi:"defaultAction"`
	// User pool ID.
	UserPoolId pulumi.StringInput `pulumi:"userPoolId"`
}

func (GraphQLApiUserPoolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiUserPoolConfig)(nil)).Elem()
}

func (i GraphQLApiUserPoolConfigArgs) ToGraphQLApiUserPoolConfigOutput() GraphQLApiUserPoolConfigOutput {
	return i.ToGraphQLApiUserPoolConfigOutputWithContext(context.Background())
}

func (i GraphQLApiUserPoolConfigArgs) ToGraphQLApiUserPoolConfigOutputWithContext(ctx context.Context) GraphQLApiUserPoolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiUserPoolConfigOutput)
}

func (i GraphQLApiUserPoolConfigArgs) ToGraphQLApiUserPoolConfigPtrOutput() GraphQLApiUserPoolConfigPtrOutput {
	return i.ToGraphQLApiUserPoolConfigPtrOutputWithContext(context.Background())
}

func (i GraphQLApiUserPoolConfigArgs) ToGraphQLApiUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiUserPoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiUserPoolConfigOutput).ToGraphQLApiUserPoolConfigPtrOutputWithContext(ctx)
}

// GraphQLApiUserPoolConfigPtrInput is an input type that accepts GraphQLApiUserPoolConfigArgs, GraphQLApiUserPoolConfigPtr and GraphQLApiUserPoolConfigPtrOutput values.
// You can construct a concrete instance of `GraphQLApiUserPoolConfigPtrInput` via:
//
//	        GraphQLApiUserPoolConfigArgs{...}
//
//	or:
//
//	        nil
type GraphQLApiUserPoolConfigPtrInput interface {
	pulumi.Input

	ToGraphQLApiUserPoolConfigPtrOutput() GraphQLApiUserPoolConfigPtrOutput
	ToGraphQLApiUserPoolConfigPtrOutputWithContext(context.Context) GraphQLApiUserPoolConfigPtrOutput
}

type graphQLApiUserPoolConfigPtrType GraphQLApiUserPoolConfigArgs

func GraphQLApiUserPoolConfigPtr(v *GraphQLApiUserPoolConfigArgs) GraphQLApiUserPoolConfigPtrInput {
	return (*graphQLApiUserPoolConfigPtrType)(v)
}

func (*graphQLApiUserPoolConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiUserPoolConfig)(nil)).Elem()
}

func (i *graphQLApiUserPoolConfigPtrType) ToGraphQLApiUserPoolConfigPtrOutput() GraphQLApiUserPoolConfigPtrOutput {
	return i.ToGraphQLApiUserPoolConfigPtrOutputWithContext(context.Background())
}

func (i *graphQLApiUserPoolConfigPtrType) ToGraphQLApiUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiUserPoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiUserPoolConfigPtrOutput)
}

type GraphQLApiUserPoolConfigOutput struct{ *pulumi.OutputState }

func (GraphQLApiUserPoolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiUserPoolConfig)(nil)).Elem()
}

func (o GraphQLApiUserPoolConfigOutput) ToGraphQLApiUserPoolConfigOutput() GraphQLApiUserPoolConfigOutput {
	return o
}

func (o GraphQLApiUserPoolConfigOutput) ToGraphQLApiUserPoolConfigOutputWithContext(ctx context.Context) GraphQLApiUserPoolConfigOutput {
	return o
}

func (o GraphQLApiUserPoolConfigOutput) ToGraphQLApiUserPoolConfigPtrOutput() GraphQLApiUserPoolConfigPtrOutput {
	return o.ToGraphQLApiUserPoolConfigPtrOutputWithContext(context.Background())
}

func (o GraphQLApiUserPoolConfigOutput) ToGraphQLApiUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiUserPoolConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GraphQLApiUserPoolConfig) *GraphQLApiUserPoolConfig {
		return &v
	}).(GraphQLApiUserPoolConfigPtrOutput)
}

// Regular expression for validating the incoming Amazon Cognito User Pool app client ID.
func (o GraphQLApiUserPoolConfigOutput) AppIdClientRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiUserPoolConfig) *string { return v.AppIdClientRegex }).(pulumi.StringPtrOutput)
}

// AWS region in which the user pool was created.
func (o GraphQLApiUserPoolConfigOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiUserPoolConfig) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// Action that you want your GraphQL API to take when a request that uses Amazon Cognito User Pool authentication doesn't match the Amazon Cognito User Pool configuration. Valid: `ALLOW` and `DENY`
func (o GraphQLApiUserPoolConfigOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiUserPoolConfig) string { return v.DefaultAction }).(pulumi.StringOutput)
}

// User pool ID.
func (o GraphQLApiUserPoolConfigOutput) UserPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiUserPoolConfig) string { return v.UserPoolId }).(pulumi.StringOutput)
}

type GraphQLApiUserPoolConfigPtrOutput struct{ *pulumi.OutputState }

func (GraphQLApiUserPoolConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiUserPoolConfig)(nil)).Elem()
}

func (o GraphQLApiUserPoolConfigPtrOutput) ToGraphQLApiUserPoolConfigPtrOutput() GraphQLApiUserPoolConfigPtrOutput {
	return o
}

func (o GraphQLApiUserPoolConfigPtrOutput) ToGraphQLApiUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiUserPoolConfigPtrOutput {
	return o
}

func (o GraphQLApiUserPoolConfigPtrOutput) Elem() GraphQLApiUserPoolConfigOutput {
	return o.ApplyT(func(v *GraphQLApiUserPoolConfig) GraphQLApiUserPoolConfig {
		if v != nil {
			return *v
		}
		var ret GraphQLApiUserPoolConfig
		return ret
	}).(GraphQLApiUserPoolConfigOutput)
}

// Regular expression for validating the incoming Amazon Cognito User Pool app client ID.
func (o GraphQLApiUserPoolConfigPtrOutput) AppIdClientRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiUserPoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.AppIdClientRegex
	}).(pulumi.StringPtrOutput)
}

// AWS region in which the user pool was created.
func (o GraphQLApiUserPoolConfigPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiUserPoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.AwsRegion
	}).(pulumi.StringPtrOutput)
}

// Action that you want your GraphQL API to take when a request that uses Amazon Cognito User Pool authentication doesn't match the Amazon Cognito User Pool configuration. Valid: `ALLOW` and `DENY`
func (o GraphQLApiUserPoolConfigPtrOutput) DefaultAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiUserPoolConfig) *string {
		if v == nil {
			return nil
		}
		return &v.DefaultAction
	}).(pulumi.StringPtrOutput)
}

// User pool ID.
func (o GraphQLApiUserPoolConfigPtrOutput) UserPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GraphQLApiUserPoolConfig) *string {
		if v == nil {
			return nil
		}
		return &v.UserPoolId
	}).(pulumi.StringPtrOutput)
}

type ResolverCachingConfig struct {
	// The caching keys for a resolver that has caching activated. Valid values are entries from the $context.arguments, $context.source, and $context.identity maps.
	CachingKeys []string `pulumi:"cachingKeys"`
	// The TTL in seconds for a resolver that has caching activated. Valid values are between `1` and `3600` seconds.
	Ttl *int `pulumi:"ttl"`
}

// ResolverCachingConfigInput is an input type that accepts ResolverCachingConfigArgs and ResolverCachingConfigOutput values.
// You can construct a concrete instance of `ResolverCachingConfigInput` via:
//
//	ResolverCachingConfigArgs{...}
type ResolverCachingConfigInput interface {
	pulumi.Input

	ToResolverCachingConfigOutput() ResolverCachingConfigOutput
	ToResolverCachingConfigOutputWithContext(context.Context) ResolverCachingConfigOutput
}

type ResolverCachingConfigArgs struct {
	// The caching keys for a resolver that has caching activated. Valid values are entries from the $context.arguments, $context.source, and $context.identity maps.
	CachingKeys pulumi.StringArrayInput `pulumi:"cachingKeys"`
	// The TTL in seconds for a resolver that has caching activated. Valid values are between `1` and `3600` seconds.
	Ttl pulumi.IntPtrInput `pulumi:"ttl"`
}

func (ResolverCachingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverCachingConfig)(nil)).Elem()
}

func (i ResolverCachingConfigArgs) ToResolverCachingConfigOutput() ResolverCachingConfigOutput {
	return i.ToResolverCachingConfigOutputWithContext(context.Background())
}

func (i ResolverCachingConfigArgs) ToResolverCachingConfigOutputWithContext(ctx context.Context) ResolverCachingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverCachingConfigOutput)
}

func (i ResolverCachingConfigArgs) ToResolverCachingConfigPtrOutput() ResolverCachingConfigPtrOutput {
	return i.ToResolverCachingConfigPtrOutputWithContext(context.Background())
}

func (i ResolverCachingConfigArgs) ToResolverCachingConfigPtrOutputWithContext(ctx context.Context) ResolverCachingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverCachingConfigOutput).ToResolverCachingConfigPtrOutputWithContext(ctx)
}

// ResolverCachingConfigPtrInput is an input type that accepts ResolverCachingConfigArgs, ResolverCachingConfigPtr and ResolverCachingConfigPtrOutput values.
// You can construct a concrete instance of `ResolverCachingConfigPtrInput` via:
//
//	        ResolverCachingConfigArgs{...}
//
//	or:
//
//	        nil
type ResolverCachingConfigPtrInput interface {
	pulumi.Input

	ToResolverCachingConfigPtrOutput() ResolverCachingConfigPtrOutput
	ToResolverCachingConfigPtrOutputWithContext(context.Context) ResolverCachingConfigPtrOutput
}

type resolverCachingConfigPtrType ResolverCachingConfigArgs

func ResolverCachingConfigPtr(v *ResolverCachingConfigArgs) ResolverCachingConfigPtrInput {
	return (*resolverCachingConfigPtrType)(v)
}

func (*resolverCachingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverCachingConfig)(nil)).Elem()
}

func (i *resolverCachingConfigPtrType) ToResolverCachingConfigPtrOutput() ResolverCachingConfigPtrOutput {
	return i.ToResolverCachingConfigPtrOutputWithContext(context.Background())
}

func (i *resolverCachingConfigPtrType) ToResolverCachingConfigPtrOutputWithContext(ctx context.Context) ResolverCachingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverCachingConfigPtrOutput)
}

type ResolverCachingConfigOutput struct{ *pulumi.OutputState }

func (ResolverCachingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverCachingConfig)(nil)).Elem()
}

func (o ResolverCachingConfigOutput) ToResolverCachingConfigOutput() ResolverCachingConfigOutput {
	return o
}

func (o ResolverCachingConfigOutput) ToResolverCachingConfigOutputWithContext(ctx context.Context) ResolverCachingConfigOutput {
	return o
}

func (o ResolverCachingConfigOutput) ToResolverCachingConfigPtrOutput() ResolverCachingConfigPtrOutput {
	return o.ToResolverCachingConfigPtrOutputWithContext(context.Background())
}

func (o ResolverCachingConfigOutput) ToResolverCachingConfigPtrOutputWithContext(ctx context.Context) ResolverCachingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResolverCachingConfig) *ResolverCachingConfig {
		return &v
	}).(ResolverCachingConfigPtrOutput)
}

// The caching keys for a resolver that has caching activated. Valid values are entries from the $context.arguments, $context.source, and $context.identity maps.
func (o ResolverCachingConfigOutput) CachingKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResolverCachingConfig) []string { return v.CachingKeys }).(pulumi.StringArrayOutput)
}

// The TTL in seconds for a resolver that has caching activated. Valid values are between `1` and `3600` seconds.
func (o ResolverCachingConfigOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ResolverCachingConfig) *int { return v.Ttl }).(pulumi.IntPtrOutput)
}

type ResolverCachingConfigPtrOutput struct{ *pulumi.OutputState }

func (ResolverCachingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverCachingConfig)(nil)).Elem()
}

func (o ResolverCachingConfigPtrOutput) ToResolverCachingConfigPtrOutput() ResolverCachingConfigPtrOutput {
	return o
}

func (o ResolverCachingConfigPtrOutput) ToResolverCachingConfigPtrOutputWithContext(ctx context.Context) ResolverCachingConfigPtrOutput {
	return o
}

func (o ResolverCachingConfigPtrOutput) Elem() ResolverCachingConfigOutput {
	return o.ApplyT(func(v *ResolverCachingConfig) ResolverCachingConfig {
		if v != nil {
			return *v
		}
		var ret ResolverCachingConfig
		return ret
	}).(ResolverCachingConfigOutput)
}

// The caching keys for a resolver that has caching activated. Valid values are entries from the $context.arguments, $context.source, and $context.identity maps.
func (o ResolverCachingConfigPtrOutput) CachingKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResolverCachingConfig) []string {
		if v == nil {
			return nil
		}
		return v.CachingKeys
	}).(pulumi.StringArrayOutput)
}

// The TTL in seconds for a resolver that has caching activated. Valid values are between `1` and `3600` seconds.
func (o ResolverCachingConfigPtrOutput) Ttl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResolverCachingConfig) *int {
		if v == nil {
			return nil
		}
		return v.Ttl
	}).(pulumi.IntPtrOutput)
}

type ResolverPipelineConfig struct {
	// A list of Function objects.
	Functions []string `pulumi:"functions"`
}

// ResolverPipelineConfigInput is an input type that accepts ResolverPipelineConfigArgs and ResolverPipelineConfigOutput values.
// You can construct a concrete instance of `ResolverPipelineConfigInput` via:
//
//	ResolverPipelineConfigArgs{...}
type ResolverPipelineConfigInput interface {
	pulumi.Input

	ToResolverPipelineConfigOutput() ResolverPipelineConfigOutput
	ToResolverPipelineConfigOutputWithContext(context.Context) ResolverPipelineConfigOutput
}

type ResolverPipelineConfigArgs struct {
	// A list of Function objects.
	Functions pulumi.StringArrayInput `pulumi:"functions"`
}

func (ResolverPipelineConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverPipelineConfig)(nil)).Elem()
}

func (i ResolverPipelineConfigArgs) ToResolverPipelineConfigOutput() ResolverPipelineConfigOutput {
	return i.ToResolverPipelineConfigOutputWithContext(context.Background())
}

func (i ResolverPipelineConfigArgs) ToResolverPipelineConfigOutputWithContext(ctx context.Context) ResolverPipelineConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverPipelineConfigOutput)
}

func (i ResolverPipelineConfigArgs) ToResolverPipelineConfigPtrOutput() ResolverPipelineConfigPtrOutput {
	return i.ToResolverPipelineConfigPtrOutputWithContext(context.Background())
}

func (i ResolverPipelineConfigArgs) ToResolverPipelineConfigPtrOutputWithContext(ctx context.Context) ResolverPipelineConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverPipelineConfigOutput).ToResolverPipelineConfigPtrOutputWithContext(ctx)
}

// ResolverPipelineConfigPtrInput is an input type that accepts ResolverPipelineConfigArgs, ResolverPipelineConfigPtr and ResolverPipelineConfigPtrOutput values.
// You can construct a concrete instance of `ResolverPipelineConfigPtrInput` via:
//
//	        ResolverPipelineConfigArgs{...}
//
//	or:
//
//	        nil
type ResolverPipelineConfigPtrInput interface {
	pulumi.Input

	ToResolverPipelineConfigPtrOutput() ResolverPipelineConfigPtrOutput
	ToResolverPipelineConfigPtrOutputWithContext(context.Context) ResolverPipelineConfigPtrOutput
}

type resolverPipelineConfigPtrType ResolverPipelineConfigArgs

func ResolverPipelineConfigPtr(v *ResolverPipelineConfigArgs) ResolverPipelineConfigPtrInput {
	return (*resolverPipelineConfigPtrType)(v)
}

func (*resolverPipelineConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverPipelineConfig)(nil)).Elem()
}

func (i *resolverPipelineConfigPtrType) ToResolverPipelineConfigPtrOutput() ResolverPipelineConfigPtrOutput {
	return i.ToResolverPipelineConfigPtrOutputWithContext(context.Background())
}

func (i *resolverPipelineConfigPtrType) ToResolverPipelineConfigPtrOutputWithContext(ctx context.Context) ResolverPipelineConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverPipelineConfigPtrOutput)
}

type ResolverPipelineConfigOutput struct{ *pulumi.OutputState }

func (ResolverPipelineConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverPipelineConfig)(nil)).Elem()
}

func (o ResolverPipelineConfigOutput) ToResolverPipelineConfigOutput() ResolverPipelineConfigOutput {
	return o
}

func (o ResolverPipelineConfigOutput) ToResolverPipelineConfigOutputWithContext(ctx context.Context) ResolverPipelineConfigOutput {
	return o
}

func (o ResolverPipelineConfigOutput) ToResolverPipelineConfigPtrOutput() ResolverPipelineConfigPtrOutput {
	return o.ToResolverPipelineConfigPtrOutputWithContext(context.Background())
}

func (o ResolverPipelineConfigOutput) ToResolverPipelineConfigPtrOutputWithContext(ctx context.Context) ResolverPipelineConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResolverPipelineConfig) *ResolverPipelineConfig {
		return &v
	}).(ResolverPipelineConfigPtrOutput)
}

// A list of Function objects.
func (o ResolverPipelineConfigOutput) Functions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResolverPipelineConfig) []string { return v.Functions }).(pulumi.StringArrayOutput)
}

type ResolverPipelineConfigPtrOutput struct{ *pulumi.OutputState }

func (ResolverPipelineConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverPipelineConfig)(nil)).Elem()
}

func (o ResolverPipelineConfigPtrOutput) ToResolverPipelineConfigPtrOutput() ResolverPipelineConfigPtrOutput {
	return o
}

func (o ResolverPipelineConfigPtrOutput) ToResolverPipelineConfigPtrOutputWithContext(ctx context.Context) ResolverPipelineConfigPtrOutput {
	return o
}

func (o ResolverPipelineConfigPtrOutput) Elem() ResolverPipelineConfigOutput {
	return o.ApplyT(func(v *ResolverPipelineConfig) ResolverPipelineConfig {
		if v != nil {
			return *v
		}
		var ret ResolverPipelineConfig
		return ret
	}).(ResolverPipelineConfigOutput)
}

// A list of Function objects.
func (o ResolverPipelineConfigPtrOutput) Functions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResolverPipelineConfig) []string {
		if v == nil {
			return nil
		}
		return v.Functions
	}).(pulumi.StringArrayOutput)
}

type ResolverRuntime struct {
	// The name of the runtime to use. Currently, the only allowed value is `APPSYNC_JS`.
	Name string `pulumi:"name"`
	// The version of the runtime to use. Currently, the only allowed version is `1.0.0`.
	RuntimeVersion string `pulumi:"runtimeVersion"`
}

// ResolverRuntimeInput is an input type that accepts ResolverRuntimeArgs and ResolverRuntimeOutput values.
// You can construct a concrete instance of `ResolverRuntimeInput` via:
//
//	ResolverRuntimeArgs{...}
type ResolverRuntimeInput interface {
	pulumi.Input

	ToResolverRuntimeOutput() ResolverRuntimeOutput
	ToResolverRuntimeOutputWithContext(context.Context) ResolverRuntimeOutput
}

type ResolverRuntimeArgs struct {
	// The name of the runtime to use. Currently, the only allowed value is `APPSYNC_JS`.
	Name pulumi.StringInput `pulumi:"name"`
	// The version of the runtime to use. Currently, the only allowed version is `1.0.0`.
	RuntimeVersion pulumi.StringInput `pulumi:"runtimeVersion"`
}

func (ResolverRuntimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverRuntime)(nil)).Elem()
}

func (i ResolverRuntimeArgs) ToResolverRuntimeOutput() ResolverRuntimeOutput {
	return i.ToResolverRuntimeOutputWithContext(context.Background())
}

func (i ResolverRuntimeArgs) ToResolverRuntimeOutputWithContext(ctx context.Context) ResolverRuntimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverRuntimeOutput)
}

func (i ResolverRuntimeArgs) ToResolverRuntimePtrOutput() ResolverRuntimePtrOutput {
	return i.ToResolverRuntimePtrOutputWithContext(context.Background())
}

func (i ResolverRuntimeArgs) ToResolverRuntimePtrOutputWithContext(ctx context.Context) ResolverRuntimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverRuntimeOutput).ToResolverRuntimePtrOutputWithContext(ctx)
}

// ResolverRuntimePtrInput is an input type that accepts ResolverRuntimeArgs, ResolverRuntimePtr and ResolverRuntimePtrOutput values.
// You can construct a concrete instance of `ResolverRuntimePtrInput` via:
//
//	        ResolverRuntimeArgs{...}
//
//	or:
//
//	        nil
type ResolverRuntimePtrInput interface {
	pulumi.Input

	ToResolverRuntimePtrOutput() ResolverRuntimePtrOutput
	ToResolverRuntimePtrOutputWithContext(context.Context) ResolverRuntimePtrOutput
}

type resolverRuntimePtrType ResolverRuntimeArgs

func ResolverRuntimePtr(v *ResolverRuntimeArgs) ResolverRuntimePtrInput {
	return (*resolverRuntimePtrType)(v)
}

func (*resolverRuntimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverRuntime)(nil)).Elem()
}

func (i *resolverRuntimePtrType) ToResolverRuntimePtrOutput() ResolverRuntimePtrOutput {
	return i.ToResolverRuntimePtrOutputWithContext(context.Background())
}

func (i *resolverRuntimePtrType) ToResolverRuntimePtrOutputWithContext(ctx context.Context) ResolverRuntimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverRuntimePtrOutput)
}

type ResolverRuntimeOutput struct{ *pulumi.OutputState }

func (ResolverRuntimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverRuntime)(nil)).Elem()
}

func (o ResolverRuntimeOutput) ToResolverRuntimeOutput() ResolverRuntimeOutput {
	return o
}

func (o ResolverRuntimeOutput) ToResolverRuntimeOutputWithContext(ctx context.Context) ResolverRuntimeOutput {
	return o
}

func (o ResolverRuntimeOutput) ToResolverRuntimePtrOutput() ResolverRuntimePtrOutput {
	return o.ToResolverRuntimePtrOutputWithContext(context.Background())
}

func (o ResolverRuntimeOutput) ToResolverRuntimePtrOutputWithContext(ctx context.Context) ResolverRuntimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResolverRuntime) *ResolverRuntime {
		return &v
	}).(ResolverRuntimePtrOutput)
}

// The name of the runtime to use. Currently, the only allowed value is `APPSYNC_JS`.
func (o ResolverRuntimeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverRuntime) string { return v.Name }).(pulumi.StringOutput)
}

// The version of the runtime to use. Currently, the only allowed version is `1.0.0`.
func (o ResolverRuntimeOutput) RuntimeVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverRuntime) string { return v.RuntimeVersion }).(pulumi.StringOutput)
}

type ResolverRuntimePtrOutput struct{ *pulumi.OutputState }

func (ResolverRuntimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverRuntime)(nil)).Elem()
}

func (o ResolverRuntimePtrOutput) ToResolverRuntimePtrOutput() ResolverRuntimePtrOutput {
	return o
}

func (o ResolverRuntimePtrOutput) ToResolverRuntimePtrOutputWithContext(ctx context.Context) ResolverRuntimePtrOutput {
	return o
}

func (o ResolverRuntimePtrOutput) Elem() ResolverRuntimeOutput {
	return o.ApplyT(func(v *ResolverRuntime) ResolverRuntime {
		if v != nil {
			return *v
		}
		var ret ResolverRuntime
		return ret
	}).(ResolverRuntimeOutput)
}

// The name of the runtime to use. Currently, the only allowed value is `APPSYNC_JS`.
func (o ResolverRuntimePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverRuntime) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The version of the runtime to use. Currently, the only allowed version is `1.0.0`.
func (o ResolverRuntimePtrOutput) RuntimeVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverRuntime) *string {
		if v == nil {
			return nil
		}
		return &v.RuntimeVersion
	}).(pulumi.StringPtrOutput)
}

type ResolverSyncConfig struct {
	// Conflict Detection strategy to use. Valid values are `NONE` and `VERSION`.
	ConflictDetection *string `pulumi:"conflictDetection"`
	// Conflict Resolution strategy to perform in the event of a conflict. Valid values are `NONE`, `OPTIMISTIC_CONCURRENCY`, `AUTOMERGE`, and `LAMBDA`.
	ConflictHandler *string `pulumi:"conflictHandler"`
	// Lambda Conflict Handler Config when configuring `LAMBDA` as the Conflict Handler. See Lambda Conflict Handler Config.
	LambdaConflictHandlerConfig *ResolverSyncConfigLambdaConflictHandlerConfig `pulumi:"lambdaConflictHandlerConfig"`
}

// ResolverSyncConfigInput is an input type that accepts ResolverSyncConfigArgs and ResolverSyncConfigOutput values.
// You can construct a concrete instance of `ResolverSyncConfigInput` via:
//
//	ResolverSyncConfigArgs{...}
type ResolverSyncConfigInput interface {
	pulumi.Input

	ToResolverSyncConfigOutput() ResolverSyncConfigOutput
	ToResolverSyncConfigOutputWithContext(context.Context) ResolverSyncConfigOutput
}

type ResolverSyncConfigArgs struct {
	// Conflict Detection strategy to use. Valid values are `NONE` and `VERSION`.
	ConflictDetection pulumi.StringPtrInput `pulumi:"conflictDetection"`
	// Conflict Resolution strategy to perform in the event of a conflict. Valid values are `NONE`, `OPTIMISTIC_CONCURRENCY`, `AUTOMERGE`, and `LAMBDA`.
	ConflictHandler pulumi.StringPtrInput `pulumi:"conflictHandler"`
	// Lambda Conflict Handler Config when configuring `LAMBDA` as the Conflict Handler. See Lambda Conflict Handler Config.
	LambdaConflictHandlerConfig ResolverSyncConfigLambdaConflictHandlerConfigPtrInput `pulumi:"lambdaConflictHandlerConfig"`
}

func (ResolverSyncConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverSyncConfig)(nil)).Elem()
}

func (i ResolverSyncConfigArgs) ToResolverSyncConfigOutput() ResolverSyncConfigOutput {
	return i.ToResolverSyncConfigOutputWithContext(context.Background())
}

func (i ResolverSyncConfigArgs) ToResolverSyncConfigOutputWithContext(ctx context.Context) ResolverSyncConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverSyncConfigOutput)
}

func (i ResolverSyncConfigArgs) ToResolverSyncConfigPtrOutput() ResolverSyncConfigPtrOutput {
	return i.ToResolverSyncConfigPtrOutputWithContext(context.Background())
}

func (i ResolverSyncConfigArgs) ToResolverSyncConfigPtrOutputWithContext(ctx context.Context) ResolverSyncConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverSyncConfigOutput).ToResolverSyncConfigPtrOutputWithContext(ctx)
}

// ResolverSyncConfigPtrInput is an input type that accepts ResolverSyncConfigArgs, ResolverSyncConfigPtr and ResolverSyncConfigPtrOutput values.
// You can construct a concrete instance of `ResolverSyncConfigPtrInput` via:
//
//	        ResolverSyncConfigArgs{...}
//
//	or:
//
//	        nil
type ResolverSyncConfigPtrInput interface {
	pulumi.Input

	ToResolverSyncConfigPtrOutput() ResolverSyncConfigPtrOutput
	ToResolverSyncConfigPtrOutputWithContext(context.Context) ResolverSyncConfigPtrOutput
}

type resolverSyncConfigPtrType ResolverSyncConfigArgs

func ResolverSyncConfigPtr(v *ResolverSyncConfigArgs) ResolverSyncConfigPtrInput {
	return (*resolverSyncConfigPtrType)(v)
}

func (*resolverSyncConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverSyncConfig)(nil)).Elem()
}

func (i *resolverSyncConfigPtrType) ToResolverSyncConfigPtrOutput() ResolverSyncConfigPtrOutput {
	return i.ToResolverSyncConfigPtrOutputWithContext(context.Background())
}

func (i *resolverSyncConfigPtrType) ToResolverSyncConfigPtrOutputWithContext(ctx context.Context) ResolverSyncConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverSyncConfigPtrOutput)
}

type ResolverSyncConfigOutput struct{ *pulumi.OutputState }

func (ResolverSyncConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverSyncConfig)(nil)).Elem()
}

func (o ResolverSyncConfigOutput) ToResolverSyncConfigOutput() ResolverSyncConfigOutput {
	return o
}

func (o ResolverSyncConfigOutput) ToResolverSyncConfigOutputWithContext(ctx context.Context) ResolverSyncConfigOutput {
	return o
}

func (o ResolverSyncConfigOutput) ToResolverSyncConfigPtrOutput() ResolverSyncConfigPtrOutput {
	return o.ToResolverSyncConfigPtrOutputWithContext(context.Background())
}

func (o ResolverSyncConfigOutput) ToResolverSyncConfigPtrOutputWithContext(ctx context.Context) ResolverSyncConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResolverSyncConfig) *ResolverSyncConfig {
		return &v
	}).(ResolverSyncConfigPtrOutput)
}

// Conflict Detection strategy to use. Valid values are `NONE` and `VERSION`.
func (o ResolverSyncConfigOutput) ConflictDetection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverSyncConfig) *string { return v.ConflictDetection }).(pulumi.StringPtrOutput)
}

// Conflict Resolution strategy to perform in the event of a conflict. Valid values are `NONE`, `OPTIMISTIC_CONCURRENCY`, `AUTOMERGE`, and `LAMBDA`.
func (o ResolverSyncConfigOutput) ConflictHandler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverSyncConfig) *string { return v.ConflictHandler }).(pulumi.StringPtrOutput)
}

// Lambda Conflict Handler Config when configuring `LAMBDA` as the Conflict Handler. See Lambda Conflict Handler Config.
func (o ResolverSyncConfigOutput) LambdaConflictHandlerConfig() ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return o.ApplyT(func(v ResolverSyncConfig) *ResolverSyncConfigLambdaConflictHandlerConfig {
		return v.LambdaConflictHandlerConfig
	}).(ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput)
}

type ResolverSyncConfigPtrOutput struct{ *pulumi.OutputState }

func (ResolverSyncConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverSyncConfig)(nil)).Elem()
}

func (o ResolverSyncConfigPtrOutput) ToResolverSyncConfigPtrOutput() ResolverSyncConfigPtrOutput {
	return o
}

func (o ResolverSyncConfigPtrOutput) ToResolverSyncConfigPtrOutputWithContext(ctx context.Context) ResolverSyncConfigPtrOutput {
	return o
}

func (o ResolverSyncConfigPtrOutput) Elem() ResolverSyncConfigOutput {
	return o.ApplyT(func(v *ResolverSyncConfig) ResolverSyncConfig {
		if v != nil {
			return *v
		}
		var ret ResolverSyncConfig
		return ret
	}).(ResolverSyncConfigOutput)
}

// Conflict Detection strategy to use. Valid values are `NONE` and `VERSION`.
func (o ResolverSyncConfigPtrOutput) ConflictDetection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverSyncConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConflictDetection
	}).(pulumi.StringPtrOutput)
}

// Conflict Resolution strategy to perform in the event of a conflict. Valid values are `NONE`, `OPTIMISTIC_CONCURRENCY`, `AUTOMERGE`, and `LAMBDA`.
func (o ResolverSyncConfigPtrOutput) ConflictHandler() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverSyncConfig) *string {
		if v == nil {
			return nil
		}
		return v.ConflictHandler
	}).(pulumi.StringPtrOutput)
}

// Lambda Conflict Handler Config when configuring `LAMBDA` as the Conflict Handler. See Lambda Conflict Handler Config.
func (o ResolverSyncConfigPtrOutput) LambdaConflictHandlerConfig() ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return o.ApplyT(func(v *ResolverSyncConfig) *ResolverSyncConfigLambdaConflictHandlerConfig {
		if v == nil {
			return nil
		}
		return v.LambdaConflictHandlerConfig
	}).(ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput)
}

type ResolverSyncConfigLambdaConflictHandlerConfig struct {
	// ARN for the Lambda function to use as the Conflict Handler.
	LambdaConflictHandlerArn *string `pulumi:"lambdaConflictHandlerArn"`
}

// ResolverSyncConfigLambdaConflictHandlerConfigInput is an input type that accepts ResolverSyncConfigLambdaConflictHandlerConfigArgs and ResolverSyncConfigLambdaConflictHandlerConfigOutput values.
// You can construct a concrete instance of `ResolverSyncConfigLambdaConflictHandlerConfigInput` via:
//
//	ResolverSyncConfigLambdaConflictHandlerConfigArgs{...}
type ResolverSyncConfigLambdaConflictHandlerConfigInput interface {
	pulumi.Input

	ToResolverSyncConfigLambdaConflictHandlerConfigOutput() ResolverSyncConfigLambdaConflictHandlerConfigOutput
	ToResolverSyncConfigLambdaConflictHandlerConfigOutputWithContext(context.Context) ResolverSyncConfigLambdaConflictHandlerConfigOutput
}

type ResolverSyncConfigLambdaConflictHandlerConfigArgs struct {
	// ARN for the Lambda function to use as the Conflict Handler.
	LambdaConflictHandlerArn pulumi.StringPtrInput `pulumi:"lambdaConflictHandlerArn"`
}

func (ResolverSyncConfigLambdaConflictHandlerConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverSyncConfigLambdaConflictHandlerConfig)(nil)).Elem()
}

func (i ResolverSyncConfigLambdaConflictHandlerConfigArgs) ToResolverSyncConfigLambdaConflictHandlerConfigOutput() ResolverSyncConfigLambdaConflictHandlerConfigOutput {
	return i.ToResolverSyncConfigLambdaConflictHandlerConfigOutputWithContext(context.Background())
}

func (i ResolverSyncConfigLambdaConflictHandlerConfigArgs) ToResolverSyncConfigLambdaConflictHandlerConfigOutputWithContext(ctx context.Context) ResolverSyncConfigLambdaConflictHandlerConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverSyncConfigLambdaConflictHandlerConfigOutput)
}

func (i ResolverSyncConfigLambdaConflictHandlerConfigArgs) ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutput() ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return i.ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(context.Background())
}

func (i ResolverSyncConfigLambdaConflictHandlerConfigArgs) ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(ctx context.Context) ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverSyncConfigLambdaConflictHandlerConfigOutput).ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(ctx)
}

// ResolverSyncConfigLambdaConflictHandlerConfigPtrInput is an input type that accepts ResolverSyncConfigLambdaConflictHandlerConfigArgs, ResolverSyncConfigLambdaConflictHandlerConfigPtr and ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput values.
// You can construct a concrete instance of `ResolverSyncConfigLambdaConflictHandlerConfigPtrInput` via:
//
//	        ResolverSyncConfigLambdaConflictHandlerConfigArgs{...}
//
//	or:
//
//	        nil
type ResolverSyncConfigLambdaConflictHandlerConfigPtrInput interface {
	pulumi.Input

	ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutput() ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput
	ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(context.Context) ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput
}

type resolverSyncConfigLambdaConflictHandlerConfigPtrType ResolverSyncConfigLambdaConflictHandlerConfigArgs

func ResolverSyncConfigLambdaConflictHandlerConfigPtr(v *ResolverSyncConfigLambdaConflictHandlerConfigArgs) ResolverSyncConfigLambdaConflictHandlerConfigPtrInput {
	return (*resolverSyncConfigLambdaConflictHandlerConfigPtrType)(v)
}

func (*resolverSyncConfigLambdaConflictHandlerConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverSyncConfigLambdaConflictHandlerConfig)(nil)).Elem()
}

func (i *resolverSyncConfigLambdaConflictHandlerConfigPtrType) ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutput() ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return i.ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(context.Background())
}

func (i *resolverSyncConfigLambdaConflictHandlerConfigPtrType) ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(ctx context.Context) ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput)
}

type ResolverSyncConfigLambdaConflictHandlerConfigOutput struct{ *pulumi.OutputState }

func (ResolverSyncConfigLambdaConflictHandlerConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverSyncConfigLambdaConflictHandlerConfig)(nil)).Elem()
}

func (o ResolverSyncConfigLambdaConflictHandlerConfigOutput) ToResolverSyncConfigLambdaConflictHandlerConfigOutput() ResolverSyncConfigLambdaConflictHandlerConfigOutput {
	return o
}

func (o ResolverSyncConfigLambdaConflictHandlerConfigOutput) ToResolverSyncConfigLambdaConflictHandlerConfigOutputWithContext(ctx context.Context) ResolverSyncConfigLambdaConflictHandlerConfigOutput {
	return o
}

func (o ResolverSyncConfigLambdaConflictHandlerConfigOutput) ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutput() ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return o.ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(context.Background())
}

func (o ResolverSyncConfigLambdaConflictHandlerConfigOutput) ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(ctx context.Context) ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResolverSyncConfigLambdaConflictHandlerConfig) *ResolverSyncConfigLambdaConflictHandlerConfig {
		return &v
	}).(ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput)
}

// ARN for the Lambda function to use as the Conflict Handler.
func (o ResolverSyncConfigLambdaConflictHandlerConfigOutput) LambdaConflictHandlerArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverSyncConfigLambdaConflictHandlerConfig) *string { return v.LambdaConflictHandlerArn }).(pulumi.StringPtrOutput)
}

type ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput struct{ *pulumi.OutputState }

func (ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverSyncConfigLambdaConflictHandlerConfig)(nil)).Elem()
}

func (o ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput) ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutput() ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return o
}

func (o ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput) ToResolverSyncConfigLambdaConflictHandlerConfigPtrOutputWithContext(ctx context.Context) ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput {
	return o
}

func (o ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput) Elem() ResolverSyncConfigLambdaConflictHandlerConfigOutput {
	return o.ApplyT(func(v *ResolverSyncConfigLambdaConflictHandlerConfig) ResolverSyncConfigLambdaConflictHandlerConfig {
		if v != nil {
			return *v
		}
		var ret ResolverSyncConfigLambdaConflictHandlerConfig
		return ret
	}).(ResolverSyncConfigLambdaConflictHandlerConfigOutput)
}

// ARN for the Lambda function to use as the Conflict Handler.
func (o ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput) LambdaConflictHandlerArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverSyncConfigLambdaConflictHandlerConfig) *string {
		if v == nil {
			return nil
		}
		return v.LambdaConflictHandlerArn
	}).(pulumi.StringPtrOutput)
}

type SourceApiAssociationSourceApiAssociationConfig struct {
	// Merge type. Valid values: `MANUAL_MERGE`, `AUTO_MERGE`
	MergeType string `pulumi:"mergeType"`
}

// SourceApiAssociationSourceApiAssociationConfigInput is an input type that accepts SourceApiAssociationSourceApiAssociationConfigArgs and SourceApiAssociationSourceApiAssociationConfigOutput values.
// You can construct a concrete instance of `SourceApiAssociationSourceApiAssociationConfigInput` via:
//
//	SourceApiAssociationSourceApiAssociationConfigArgs{...}
type SourceApiAssociationSourceApiAssociationConfigInput interface {
	pulumi.Input

	ToSourceApiAssociationSourceApiAssociationConfigOutput() SourceApiAssociationSourceApiAssociationConfigOutput
	ToSourceApiAssociationSourceApiAssociationConfigOutputWithContext(context.Context) SourceApiAssociationSourceApiAssociationConfigOutput
}

type SourceApiAssociationSourceApiAssociationConfigArgs struct {
	// Merge type. Valid values: `MANUAL_MERGE`, `AUTO_MERGE`
	MergeType pulumi.StringInput `pulumi:"mergeType"`
}

func (SourceApiAssociationSourceApiAssociationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceApiAssociationSourceApiAssociationConfig)(nil)).Elem()
}

func (i SourceApiAssociationSourceApiAssociationConfigArgs) ToSourceApiAssociationSourceApiAssociationConfigOutput() SourceApiAssociationSourceApiAssociationConfigOutput {
	return i.ToSourceApiAssociationSourceApiAssociationConfigOutputWithContext(context.Background())
}

func (i SourceApiAssociationSourceApiAssociationConfigArgs) ToSourceApiAssociationSourceApiAssociationConfigOutputWithContext(ctx context.Context) SourceApiAssociationSourceApiAssociationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceApiAssociationSourceApiAssociationConfigOutput)
}

// SourceApiAssociationSourceApiAssociationConfigArrayInput is an input type that accepts SourceApiAssociationSourceApiAssociationConfigArray and SourceApiAssociationSourceApiAssociationConfigArrayOutput values.
// You can construct a concrete instance of `SourceApiAssociationSourceApiAssociationConfigArrayInput` via:
//
//	SourceApiAssociationSourceApiAssociationConfigArray{ SourceApiAssociationSourceApiAssociationConfigArgs{...} }
type SourceApiAssociationSourceApiAssociationConfigArrayInput interface {
	pulumi.Input

	ToSourceApiAssociationSourceApiAssociationConfigArrayOutput() SourceApiAssociationSourceApiAssociationConfigArrayOutput
	ToSourceApiAssociationSourceApiAssociationConfigArrayOutputWithContext(context.Context) SourceApiAssociationSourceApiAssociationConfigArrayOutput
}

type SourceApiAssociationSourceApiAssociationConfigArray []SourceApiAssociationSourceApiAssociationConfigInput

func (SourceApiAssociationSourceApiAssociationConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceApiAssociationSourceApiAssociationConfig)(nil)).Elem()
}

func (i SourceApiAssociationSourceApiAssociationConfigArray) ToSourceApiAssociationSourceApiAssociationConfigArrayOutput() SourceApiAssociationSourceApiAssociationConfigArrayOutput {
	return i.ToSourceApiAssociationSourceApiAssociationConfigArrayOutputWithContext(context.Background())
}

func (i SourceApiAssociationSourceApiAssociationConfigArray) ToSourceApiAssociationSourceApiAssociationConfigArrayOutputWithContext(ctx context.Context) SourceApiAssociationSourceApiAssociationConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceApiAssociationSourceApiAssociationConfigArrayOutput)
}

type SourceApiAssociationSourceApiAssociationConfigOutput struct{ *pulumi.OutputState }

func (SourceApiAssociationSourceApiAssociationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceApiAssociationSourceApiAssociationConfig)(nil)).Elem()
}

func (o SourceApiAssociationSourceApiAssociationConfigOutput) ToSourceApiAssociationSourceApiAssociationConfigOutput() SourceApiAssociationSourceApiAssociationConfigOutput {
	return o
}

func (o SourceApiAssociationSourceApiAssociationConfigOutput) ToSourceApiAssociationSourceApiAssociationConfigOutputWithContext(ctx context.Context) SourceApiAssociationSourceApiAssociationConfigOutput {
	return o
}

// Merge type. Valid values: `MANUAL_MERGE`, `AUTO_MERGE`
func (o SourceApiAssociationSourceApiAssociationConfigOutput) MergeType() pulumi.StringOutput {
	return o.ApplyT(func(v SourceApiAssociationSourceApiAssociationConfig) string { return v.MergeType }).(pulumi.StringOutput)
}

type SourceApiAssociationSourceApiAssociationConfigArrayOutput struct{ *pulumi.OutputState }

func (SourceApiAssociationSourceApiAssociationConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SourceApiAssociationSourceApiAssociationConfig)(nil)).Elem()
}

func (o SourceApiAssociationSourceApiAssociationConfigArrayOutput) ToSourceApiAssociationSourceApiAssociationConfigArrayOutput() SourceApiAssociationSourceApiAssociationConfigArrayOutput {
	return o
}

func (o SourceApiAssociationSourceApiAssociationConfigArrayOutput) ToSourceApiAssociationSourceApiAssociationConfigArrayOutputWithContext(ctx context.Context) SourceApiAssociationSourceApiAssociationConfigArrayOutput {
	return o
}

func (o SourceApiAssociationSourceApiAssociationConfigArrayOutput) Index(i pulumi.IntInput) SourceApiAssociationSourceApiAssociationConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SourceApiAssociationSourceApiAssociationConfig {
		return vs[0].([]SourceApiAssociationSourceApiAssociationConfig)[vs[1].(int)]
	}).(SourceApiAssociationSourceApiAssociationConfigOutput)
}

type SourceApiAssociationTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// SourceApiAssociationTimeoutsInput is an input type that accepts SourceApiAssociationTimeoutsArgs and SourceApiAssociationTimeoutsOutput values.
// You can construct a concrete instance of `SourceApiAssociationTimeoutsInput` via:
//
//	SourceApiAssociationTimeoutsArgs{...}
type SourceApiAssociationTimeoutsInput interface {
	pulumi.Input

	ToSourceApiAssociationTimeoutsOutput() SourceApiAssociationTimeoutsOutput
	ToSourceApiAssociationTimeoutsOutputWithContext(context.Context) SourceApiAssociationTimeoutsOutput
}

type SourceApiAssociationTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (SourceApiAssociationTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceApiAssociationTimeouts)(nil)).Elem()
}

func (i SourceApiAssociationTimeoutsArgs) ToSourceApiAssociationTimeoutsOutput() SourceApiAssociationTimeoutsOutput {
	return i.ToSourceApiAssociationTimeoutsOutputWithContext(context.Background())
}

func (i SourceApiAssociationTimeoutsArgs) ToSourceApiAssociationTimeoutsOutputWithContext(ctx context.Context) SourceApiAssociationTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceApiAssociationTimeoutsOutput)
}

func (i SourceApiAssociationTimeoutsArgs) ToSourceApiAssociationTimeoutsPtrOutput() SourceApiAssociationTimeoutsPtrOutput {
	return i.ToSourceApiAssociationTimeoutsPtrOutputWithContext(context.Background())
}

func (i SourceApiAssociationTimeoutsArgs) ToSourceApiAssociationTimeoutsPtrOutputWithContext(ctx context.Context) SourceApiAssociationTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceApiAssociationTimeoutsOutput).ToSourceApiAssociationTimeoutsPtrOutputWithContext(ctx)
}

// SourceApiAssociationTimeoutsPtrInput is an input type that accepts SourceApiAssociationTimeoutsArgs, SourceApiAssociationTimeoutsPtr and SourceApiAssociationTimeoutsPtrOutput values.
// You can construct a concrete instance of `SourceApiAssociationTimeoutsPtrInput` via:
//
//	        SourceApiAssociationTimeoutsArgs{...}
//
//	or:
//
//	        nil
type SourceApiAssociationTimeoutsPtrInput interface {
	pulumi.Input

	ToSourceApiAssociationTimeoutsPtrOutput() SourceApiAssociationTimeoutsPtrOutput
	ToSourceApiAssociationTimeoutsPtrOutputWithContext(context.Context) SourceApiAssociationTimeoutsPtrOutput
}

type sourceApiAssociationTimeoutsPtrType SourceApiAssociationTimeoutsArgs

func SourceApiAssociationTimeoutsPtr(v *SourceApiAssociationTimeoutsArgs) SourceApiAssociationTimeoutsPtrInput {
	return (*sourceApiAssociationTimeoutsPtrType)(v)
}

func (*sourceApiAssociationTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceApiAssociationTimeouts)(nil)).Elem()
}

func (i *sourceApiAssociationTimeoutsPtrType) ToSourceApiAssociationTimeoutsPtrOutput() SourceApiAssociationTimeoutsPtrOutput {
	return i.ToSourceApiAssociationTimeoutsPtrOutputWithContext(context.Background())
}

func (i *sourceApiAssociationTimeoutsPtrType) ToSourceApiAssociationTimeoutsPtrOutputWithContext(ctx context.Context) SourceApiAssociationTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SourceApiAssociationTimeoutsPtrOutput)
}

type SourceApiAssociationTimeoutsOutput struct{ *pulumi.OutputState }

func (SourceApiAssociationTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SourceApiAssociationTimeouts)(nil)).Elem()
}

func (o SourceApiAssociationTimeoutsOutput) ToSourceApiAssociationTimeoutsOutput() SourceApiAssociationTimeoutsOutput {
	return o
}

func (o SourceApiAssociationTimeoutsOutput) ToSourceApiAssociationTimeoutsOutputWithContext(ctx context.Context) SourceApiAssociationTimeoutsOutput {
	return o
}

func (o SourceApiAssociationTimeoutsOutput) ToSourceApiAssociationTimeoutsPtrOutput() SourceApiAssociationTimeoutsPtrOutput {
	return o.ToSourceApiAssociationTimeoutsPtrOutputWithContext(context.Background())
}

func (o SourceApiAssociationTimeoutsOutput) ToSourceApiAssociationTimeoutsPtrOutputWithContext(ctx context.Context) SourceApiAssociationTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SourceApiAssociationTimeouts) *SourceApiAssociationTimeouts {
		return &v
	}).(SourceApiAssociationTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o SourceApiAssociationTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceApiAssociationTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o SourceApiAssociationTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceApiAssociationTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o SourceApiAssociationTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SourceApiAssociationTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type SourceApiAssociationTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (SourceApiAssociationTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SourceApiAssociationTimeouts)(nil)).Elem()
}

func (o SourceApiAssociationTimeoutsPtrOutput) ToSourceApiAssociationTimeoutsPtrOutput() SourceApiAssociationTimeoutsPtrOutput {
	return o
}

func (o SourceApiAssociationTimeoutsPtrOutput) ToSourceApiAssociationTimeoutsPtrOutputWithContext(ctx context.Context) SourceApiAssociationTimeoutsPtrOutput {
	return o
}

func (o SourceApiAssociationTimeoutsPtrOutput) Elem() SourceApiAssociationTimeoutsOutput {
	return o.ApplyT(func(v *SourceApiAssociationTimeouts) SourceApiAssociationTimeouts {
		if v != nil {
			return *v
		}
		var ret SourceApiAssociationTimeouts
		return ret
	}).(SourceApiAssociationTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o SourceApiAssociationTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceApiAssociationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o SourceApiAssociationTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceApiAssociationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o SourceApiAssociationTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SourceApiAssociationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiEventConfigInput)(nil)).Elem(), ApiEventConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiEventConfigPtrInput)(nil)).Elem(), ApiEventConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiEventConfigAuthProviderInput)(nil)).Elem(), ApiEventConfigAuthProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiEventConfigAuthProviderArrayInput)(nil)).Elem(), ApiEventConfigAuthProviderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiEventConfigAuthProviderCognitoConfigInput)(nil)).Elem(), ApiEventConfigAuthProviderCognitoConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiEventConfigAuthProviderCognitoConfigPtrInput)(nil)).Elem(), ApiEventConfigAuthProviderCognitoConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiEventConfigAuthProviderLambdaAuthorizerConfigInput)(nil)).Elem(), ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrInput)(nil)).Elem(), ApiEventConfigAuthProviderLambdaAuthorizerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiEventConfigAuthProviderOpenidConnectConfigInput)(nil)).Elem(), ApiEventConfigAuthProviderOpenidConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiEventConfigAuthProviderOpenidConnectConfigPtrInput)(nil)).Elem(), ApiEventConfigAuthProviderOpenidConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiEventConfigConnectionAuthModeInput)(nil)).Elem(), ApiEventConfigConnectionAuthModeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiEventConfigConnectionAuthModeArrayInput)(nil)).Elem(), ApiEventConfigConnectionAuthModeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiEventConfigDefaultPublishAuthModeInput)(nil)).Elem(), ApiEventConfigDefaultPublishAuthModeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiEventConfigDefaultPublishAuthModeArrayInput)(nil)).Elem(), ApiEventConfigDefaultPublishAuthModeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiEventConfigDefaultSubscribeAuthModeInput)(nil)).Elem(), ApiEventConfigDefaultSubscribeAuthModeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiEventConfigDefaultSubscribeAuthModeArrayInput)(nil)).Elem(), ApiEventConfigDefaultSubscribeAuthModeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiEventConfigLogConfigInput)(nil)).Elem(), ApiEventConfigLogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiEventConfigLogConfigPtrInput)(nil)).Elem(), ApiEventConfigLogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelNamespaceHandlerConfigsInput)(nil)).Elem(), ChannelNamespaceHandlerConfigsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelNamespaceHandlerConfigsPtrInput)(nil)).Elem(), ChannelNamespaceHandlerConfigsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelNamespaceHandlerConfigsOnPublishInput)(nil)).Elem(), ChannelNamespaceHandlerConfigsOnPublishArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelNamespaceHandlerConfigsOnPublishPtrInput)(nil)).Elem(), ChannelNamespaceHandlerConfigsOnPublishArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelNamespaceHandlerConfigsOnPublishIntegrationInput)(nil)).Elem(), ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrInput)(nil)).Elem(), ChannelNamespaceHandlerConfigsOnPublishIntegrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigInput)(nil)).Elem(), ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrInput)(nil)).Elem(), ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelNamespaceHandlerConfigsOnSubscribeInput)(nil)).Elem(), ChannelNamespaceHandlerConfigsOnSubscribeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelNamespaceHandlerConfigsOnSubscribePtrInput)(nil)).Elem(), ChannelNamespaceHandlerConfigsOnSubscribeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelNamespaceHandlerConfigsOnSubscribeIntegrationInput)(nil)).Elem(), ChannelNamespaceHandlerConfigsOnSubscribeIntegrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrInput)(nil)).Elem(), ChannelNamespaceHandlerConfigsOnSubscribeIntegrationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigInput)(nil)).Elem(), ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrInput)(nil)).Elem(), ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelNamespacePublishAuthModeInput)(nil)).Elem(), ChannelNamespacePublishAuthModeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelNamespacePublishAuthModeArrayInput)(nil)).Elem(), ChannelNamespacePublishAuthModeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelNamespaceSubscribeAuthModeInput)(nil)).Elem(), ChannelNamespaceSubscribeAuthModeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ChannelNamespaceSubscribeAuthModeArrayInput)(nil)).Elem(), ChannelNamespaceSubscribeAuthModeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceDynamodbConfigInput)(nil)).Elem(), DataSourceDynamodbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceDynamodbConfigPtrInput)(nil)).Elem(), DataSourceDynamodbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceDynamodbConfigDeltaSyncConfigInput)(nil)).Elem(), DataSourceDynamodbConfigDeltaSyncConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceDynamodbConfigDeltaSyncConfigPtrInput)(nil)).Elem(), DataSourceDynamodbConfigDeltaSyncConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceElasticsearchConfigInput)(nil)).Elem(), DataSourceElasticsearchConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceElasticsearchConfigPtrInput)(nil)).Elem(), DataSourceElasticsearchConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceEventBridgeConfigInput)(nil)).Elem(), DataSourceEventBridgeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceEventBridgeConfigPtrInput)(nil)).Elem(), DataSourceEventBridgeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceHttpConfigInput)(nil)).Elem(), DataSourceHttpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceHttpConfigPtrInput)(nil)).Elem(), DataSourceHttpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceHttpConfigAuthorizationConfigInput)(nil)).Elem(), DataSourceHttpConfigAuthorizationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceHttpConfigAuthorizationConfigPtrInput)(nil)).Elem(), DataSourceHttpConfigAuthorizationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceHttpConfigAuthorizationConfigAwsIamConfigInput)(nil)).Elem(), DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrInput)(nil)).Elem(), DataSourceHttpConfigAuthorizationConfigAwsIamConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceLambdaConfigInput)(nil)).Elem(), DataSourceLambdaConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceLambdaConfigPtrInput)(nil)).Elem(), DataSourceLambdaConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceOpensearchserviceConfigInput)(nil)).Elem(), DataSourceOpensearchserviceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceOpensearchserviceConfigPtrInput)(nil)).Elem(), DataSourceOpensearchserviceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceRelationalDatabaseConfigInput)(nil)).Elem(), DataSourceRelationalDatabaseConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceRelationalDatabaseConfigPtrInput)(nil)).Elem(), DataSourceRelationalDatabaseConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceRelationalDatabaseConfigHttpEndpointConfigInput)(nil)).Elem(), DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrInput)(nil)).Elem(), DataSourceRelationalDatabaseConfigHttpEndpointConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionRuntimeInput)(nil)).Elem(), FunctionRuntimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionRuntimePtrInput)(nil)).Elem(), FunctionRuntimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionSyncConfigInput)(nil)).Elem(), FunctionSyncConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionSyncConfigPtrInput)(nil)).Elem(), FunctionSyncConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionSyncConfigLambdaConflictHandlerConfigInput)(nil)).Elem(), FunctionSyncConfigLambdaConflictHandlerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionSyncConfigLambdaConflictHandlerConfigPtrInput)(nil)).Elem(), FunctionSyncConfigLambdaConflictHandlerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderInput)(nil)).Elem(), GraphQLApiAdditionalAuthenticationProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderArrayInput)(nil)).Elem(), GraphQLApiAdditionalAuthenticationProviderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigInput)(nil)).Elem(), GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrInput)(nil)).Elem(), GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigInput)(nil)).Elem(), GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrInput)(nil)).Elem(), GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderUserPoolConfigInput)(nil)).Elem(), GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrInput)(nil)).Elem(), GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiEnhancedMetricsConfigInput)(nil)).Elem(), GraphQLApiEnhancedMetricsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiEnhancedMetricsConfigPtrInput)(nil)).Elem(), GraphQLApiEnhancedMetricsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiLambdaAuthorizerConfigInput)(nil)).Elem(), GraphQLApiLambdaAuthorizerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiLambdaAuthorizerConfigPtrInput)(nil)).Elem(), GraphQLApiLambdaAuthorizerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiLogConfigInput)(nil)).Elem(), GraphQLApiLogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiLogConfigPtrInput)(nil)).Elem(), GraphQLApiLogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiOpenidConnectConfigInput)(nil)).Elem(), GraphQLApiOpenidConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiOpenidConnectConfigPtrInput)(nil)).Elem(), GraphQLApiOpenidConnectConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiUserPoolConfigInput)(nil)).Elem(), GraphQLApiUserPoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GraphQLApiUserPoolConfigPtrInput)(nil)).Elem(), GraphQLApiUserPoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverCachingConfigInput)(nil)).Elem(), ResolverCachingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverCachingConfigPtrInput)(nil)).Elem(), ResolverCachingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverPipelineConfigInput)(nil)).Elem(), ResolverPipelineConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverPipelineConfigPtrInput)(nil)).Elem(), ResolverPipelineConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverRuntimeInput)(nil)).Elem(), ResolverRuntimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverRuntimePtrInput)(nil)).Elem(), ResolverRuntimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverSyncConfigInput)(nil)).Elem(), ResolverSyncConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverSyncConfigPtrInput)(nil)).Elem(), ResolverSyncConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverSyncConfigLambdaConflictHandlerConfigInput)(nil)).Elem(), ResolverSyncConfigLambdaConflictHandlerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResolverSyncConfigLambdaConflictHandlerConfigPtrInput)(nil)).Elem(), ResolverSyncConfigLambdaConflictHandlerConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceApiAssociationSourceApiAssociationConfigInput)(nil)).Elem(), SourceApiAssociationSourceApiAssociationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceApiAssociationSourceApiAssociationConfigArrayInput)(nil)).Elem(), SourceApiAssociationSourceApiAssociationConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceApiAssociationTimeoutsInput)(nil)).Elem(), SourceApiAssociationTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SourceApiAssociationTimeoutsPtrInput)(nil)).Elem(), SourceApiAssociationTimeoutsArgs{})
	pulumi.RegisterOutputType(ApiEventConfigOutput{})
	pulumi.RegisterOutputType(ApiEventConfigPtrOutput{})
	pulumi.RegisterOutputType(ApiEventConfigAuthProviderOutput{})
	pulumi.RegisterOutputType(ApiEventConfigAuthProviderArrayOutput{})
	pulumi.RegisterOutputType(ApiEventConfigAuthProviderCognitoConfigOutput{})
	pulumi.RegisterOutputType(ApiEventConfigAuthProviderCognitoConfigPtrOutput{})
	pulumi.RegisterOutputType(ApiEventConfigAuthProviderLambdaAuthorizerConfigOutput{})
	pulumi.RegisterOutputType(ApiEventConfigAuthProviderLambdaAuthorizerConfigPtrOutput{})
	pulumi.RegisterOutputType(ApiEventConfigAuthProviderOpenidConnectConfigOutput{})
	pulumi.RegisterOutputType(ApiEventConfigAuthProviderOpenidConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(ApiEventConfigConnectionAuthModeOutput{})
	pulumi.RegisterOutputType(ApiEventConfigConnectionAuthModeArrayOutput{})
	pulumi.RegisterOutputType(ApiEventConfigDefaultPublishAuthModeOutput{})
	pulumi.RegisterOutputType(ApiEventConfigDefaultPublishAuthModeArrayOutput{})
	pulumi.RegisterOutputType(ApiEventConfigDefaultSubscribeAuthModeOutput{})
	pulumi.RegisterOutputType(ApiEventConfigDefaultSubscribeAuthModeArrayOutput{})
	pulumi.RegisterOutputType(ApiEventConfigLogConfigOutput{})
	pulumi.RegisterOutputType(ApiEventConfigLogConfigPtrOutput{})
	pulumi.RegisterOutputType(ChannelNamespaceHandlerConfigsOutput{})
	pulumi.RegisterOutputType(ChannelNamespaceHandlerConfigsPtrOutput{})
	pulumi.RegisterOutputType(ChannelNamespaceHandlerConfigsOnPublishOutput{})
	pulumi.RegisterOutputType(ChannelNamespaceHandlerConfigsOnPublishPtrOutput{})
	pulumi.RegisterOutputType(ChannelNamespaceHandlerConfigsOnPublishIntegrationOutput{})
	pulumi.RegisterOutputType(ChannelNamespaceHandlerConfigsOnPublishIntegrationPtrOutput{})
	pulumi.RegisterOutputType(ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigOutput{})
	pulumi.RegisterOutputType(ChannelNamespaceHandlerConfigsOnPublishIntegrationLambdaConfigPtrOutput{})
	pulumi.RegisterOutputType(ChannelNamespaceHandlerConfigsOnSubscribeOutput{})
	pulumi.RegisterOutputType(ChannelNamespaceHandlerConfigsOnSubscribePtrOutput{})
	pulumi.RegisterOutputType(ChannelNamespaceHandlerConfigsOnSubscribeIntegrationOutput{})
	pulumi.RegisterOutputType(ChannelNamespaceHandlerConfigsOnSubscribeIntegrationPtrOutput{})
	pulumi.RegisterOutputType(ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigOutput{})
	pulumi.RegisterOutputType(ChannelNamespaceHandlerConfigsOnSubscribeIntegrationLambdaConfigPtrOutput{})
	pulumi.RegisterOutputType(ChannelNamespacePublishAuthModeOutput{})
	pulumi.RegisterOutputType(ChannelNamespacePublishAuthModeArrayOutput{})
	pulumi.RegisterOutputType(ChannelNamespaceSubscribeAuthModeOutput{})
	pulumi.RegisterOutputType(ChannelNamespaceSubscribeAuthModeArrayOutput{})
	pulumi.RegisterOutputType(DataSourceDynamodbConfigOutput{})
	pulumi.RegisterOutputType(DataSourceDynamodbConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceDynamodbConfigDeltaSyncConfigOutput{})
	pulumi.RegisterOutputType(DataSourceDynamodbConfigDeltaSyncConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceElasticsearchConfigOutput{})
	pulumi.RegisterOutputType(DataSourceElasticsearchConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceEventBridgeConfigOutput{})
	pulumi.RegisterOutputType(DataSourceEventBridgeConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceHttpConfigOutput{})
	pulumi.RegisterOutputType(DataSourceHttpConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceHttpConfigAuthorizationConfigOutput{})
	pulumi.RegisterOutputType(DataSourceHttpConfigAuthorizationConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceHttpConfigAuthorizationConfigAwsIamConfigOutput{})
	pulumi.RegisterOutputType(DataSourceHttpConfigAuthorizationConfigAwsIamConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceLambdaConfigOutput{})
	pulumi.RegisterOutputType(DataSourceLambdaConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceOpensearchserviceConfigOutput{})
	pulumi.RegisterOutputType(DataSourceOpensearchserviceConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceRelationalDatabaseConfigOutput{})
	pulumi.RegisterOutputType(DataSourceRelationalDatabaseConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceRelationalDatabaseConfigHttpEndpointConfigOutput{})
	pulumi.RegisterOutputType(DataSourceRelationalDatabaseConfigHttpEndpointConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionRuntimeOutput{})
	pulumi.RegisterOutputType(FunctionRuntimePtrOutput{})
	pulumi.RegisterOutputType(FunctionSyncConfigOutput{})
	pulumi.RegisterOutputType(FunctionSyncConfigPtrOutput{})
	pulumi.RegisterOutputType(FunctionSyncConfigLambdaConflictHandlerConfigOutput{})
	pulumi.RegisterOutputType(FunctionSyncConfigLambdaConflictHandlerConfigPtrOutput{})
	pulumi.RegisterOutputType(GraphQLApiAdditionalAuthenticationProviderOutput{})
	pulumi.RegisterOutputType(GraphQLApiAdditionalAuthenticationProviderArrayOutput{})
	pulumi.RegisterOutputType(GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigOutput{})
	pulumi.RegisterOutputType(GraphQLApiAdditionalAuthenticationProviderLambdaAuthorizerConfigPtrOutput{})
	pulumi.RegisterOutputType(GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput{})
	pulumi.RegisterOutputType(GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput{})
	pulumi.RegisterOutputType(GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput{})
	pulumi.RegisterOutputType(GraphQLApiEnhancedMetricsConfigOutput{})
	pulumi.RegisterOutputType(GraphQLApiEnhancedMetricsConfigPtrOutput{})
	pulumi.RegisterOutputType(GraphQLApiLambdaAuthorizerConfigOutput{})
	pulumi.RegisterOutputType(GraphQLApiLambdaAuthorizerConfigPtrOutput{})
	pulumi.RegisterOutputType(GraphQLApiLogConfigOutput{})
	pulumi.RegisterOutputType(GraphQLApiLogConfigPtrOutput{})
	pulumi.RegisterOutputType(GraphQLApiOpenidConnectConfigOutput{})
	pulumi.RegisterOutputType(GraphQLApiOpenidConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(GraphQLApiUserPoolConfigOutput{})
	pulumi.RegisterOutputType(GraphQLApiUserPoolConfigPtrOutput{})
	pulumi.RegisterOutputType(ResolverCachingConfigOutput{})
	pulumi.RegisterOutputType(ResolverCachingConfigPtrOutput{})
	pulumi.RegisterOutputType(ResolverPipelineConfigOutput{})
	pulumi.RegisterOutputType(ResolverPipelineConfigPtrOutput{})
	pulumi.RegisterOutputType(ResolverRuntimeOutput{})
	pulumi.RegisterOutputType(ResolverRuntimePtrOutput{})
	pulumi.RegisterOutputType(ResolverSyncConfigOutput{})
	pulumi.RegisterOutputType(ResolverSyncConfigPtrOutput{})
	pulumi.RegisterOutputType(ResolverSyncConfigLambdaConflictHandlerConfigOutput{})
	pulumi.RegisterOutputType(ResolverSyncConfigLambdaConflictHandlerConfigPtrOutput{})
	pulumi.RegisterOutputType(SourceApiAssociationSourceApiAssociationConfigOutput{})
	pulumi.RegisterOutputType(SourceApiAssociationSourceApiAssociationConfigArrayOutput{})
	pulumi.RegisterOutputType(SourceApiAssociationTimeoutsOutput{})
	pulumi.RegisterOutputType(SourceApiAssociationTimeoutsPtrOutput{})
}
