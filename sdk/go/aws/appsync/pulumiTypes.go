// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appsync

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type DataSourceDynamodbConfig struct {
	// AWS region of Elasticsearch domain. Defaults to current region.
	Region *string `pulumi:"region"`
	// Name of the DynamoDB table.
	TableName string `pulumi:"tableName"`
	// Set to `true` to use Amazon Cognito credentials with this data source.
	UseCallerCredentials *bool `pulumi:"useCallerCredentials"`
}

// DataSourceDynamodbConfigInput is an input type that accepts DataSourceDynamodbConfigArgs and DataSourceDynamodbConfigOutput values.
// You can construct a concrete instance of `DataSourceDynamodbConfigInput` via:
//
// 		 DataSourceDynamodbConfigArgs{...}
//
type DataSourceDynamodbConfigInput interface {
	pulumi.Input

	ToDataSourceDynamodbConfigOutput() DataSourceDynamodbConfigOutput
	ToDataSourceDynamodbConfigOutputWithContext(context.Context) DataSourceDynamodbConfigOutput
}

type DataSourceDynamodbConfigArgs struct {
	// AWS region of Elasticsearch domain. Defaults to current region.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// Name of the DynamoDB table.
	TableName pulumi.StringInput `pulumi:"tableName"`
	// Set to `true` to use Amazon Cognito credentials with this data source.
	UseCallerCredentials pulumi.BoolPtrInput `pulumi:"useCallerCredentials"`
}

func (DataSourceDynamodbConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDynamodbConfig)(nil)).Elem()
}

func (i DataSourceDynamodbConfigArgs) ToDataSourceDynamodbConfigOutput() DataSourceDynamodbConfigOutput {
	return i.ToDataSourceDynamodbConfigOutputWithContext(context.Background())
}

func (i DataSourceDynamodbConfigArgs) ToDataSourceDynamodbConfigOutputWithContext(ctx context.Context) DataSourceDynamodbConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDynamodbConfigOutput)
}

func (i DataSourceDynamodbConfigArgs) ToDataSourceDynamodbConfigPtrOutput() DataSourceDynamodbConfigPtrOutput {
	return i.ToDataSourceDynamodbConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceDynamodbConfigArgs) ToDataSourceDynamodbConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamodbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDynamodbConfigOutput).ToDataSourceDynamodbConfigPtrOutputWithContext(ctx)
}

// DataSourceDynamodbConfigPtrInput is an input type that accepts DataSourceDynamodbConfigArgs, DataSourceDynamodbConfigPtr and DataSourceDynamodbConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceDynamodbConfigPtrInput` via:
//
// 		 DataSourceDynamodbConfigArgs{...}
//
//  or:
//
// 		 nil
//
type DataSourceDynamodbConfigPtrInput interface {
	pulumi.Input

	ToDataSourceDynamodbConfigPtrOutput() DataSourceDynamodbConfigPtrOutput
	ToDataSourceDynamodbConfigPtrOutputWithContext(context.Context) DataSourceDynamodbConfigPtrOutput
}

type dataSourceDynamodbConfigPtrType DataSourceDynamodbConfigArgs

func DataSourceDynamodbConfigPtr(v *DataSourceDynamodbConfigArgs) DataSourceDynamodbConfigPtrInput {
	return (*dataSourceDynamodbConfigPtrType)(v)
}

func (*dataSourceDynamodbConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDynamodbConfig)(nil)).Elem()
}

func (i *dataSourceDynamodbConfigPtrType) ToDataSourceDynamodbConfigPtrOutput() DataSourceDynamodbConfigPtrOutput {
	return i.ToDataSourceDynamodbConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceDynamodbConfigPtrType) ToDataSourceDynamodbConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamodbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceDynamodbConfigPtrOutput)
}

type DataSourceDynamodbConfigOutput struct{ *pulumi.OutputState }

func (DataSourceDynamodbConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceDynamodbConfig)(nil)).Elem()
}

func (o DataSourceDynamodbConfigOutput) ToDataSourceDynamodbConfigOutput() DataSourceDynamodbConfigOutput {
	return o
}

func (o DataSourceDynamodbConfigOutput) ToDataSourceDynamodbConfigOutputWithContext(ctx context.Context) DataSourceDynamodbConfigOutput {
	return o
}

func (o DataSourceDynamodbConfigOutput) ToDataSourceDynamodbConfigPtrOutput() DataSourceDynamodbConfigPtrOutput {
	return o.ToDataSourceDynamodbConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceDynamodbConfigOutput) ToDataSourceDynamodbConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamodbConfigPtrOutput {
	return o.ApplyT(func(v DataSourceDynamodbConfig) *DataSourceDynamodbConfig {
		return &v
	}).(DataSourceDynamodbConfigPtrOutput)
}

// AWS region of Elasticsearch domain. Defaults to current region.
func (o DataSourceDynamodbConfigOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceDynamodbConfig) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Name of the DynamoDB table.
func (o DataSourceDynamodbConfigOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceDynamodbConfig) string { return v.TableName }).(pulumi.StringOutput)
}

// Set to `true` to use Amazon Cognito credentials with this data source.
func (o DataSourceDynamodbConfigOutput) UseCallerCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataSourceDynamodbConfig) *bool { return v.UseCallerCredentials }).(pulumi.BoolPtrOutput)
}

type DataSourceDynamodbConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceDynamodbConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceDynamodbConfig)(nil)).Elem()
}

func (o DataSourceDynamodbConfigPtrOutput) ToDataSourceDynamodbConfigPtrOutput() DataSourceDynamodbConfigPtrOutput {
	return o
}

func (o DataSourceDynamodbConfigPtrOutput) ToDataSourceDynamodbConfigPtrOutputWithContext(ctx context.Context) DataSourceDynamodbConfigPtrOutput {
	return o
}

func (o DataSourceDynamodbConfigPtrOutput) Elem() DataSourceDynamodbConfigOutput {
	return o.ApplyT(func(v *DataSourceDynamodbConfig) DataSourceDynamodbConfig { return *v }).(DataSourceDynamodbConfigOutput)
}

// AWS region of Elasticsearch domain. Defaults to current region.
func (o DataSourceDynamodbConfigPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceDynamodbConfig) *string { return v.Region }).(pulumi.StringPtrOutput)
}

// Name of the DynamoDB table.
func (o DataSourceDynamodbConfigPtrOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceDynamodbConfig) string { return v.TableName }).(pulumi.StringOutput)
}

// Set to `true` to use Amazon Cognito credentials with this data source.
func (o DataSourceDynamodbConfigPtrOutput) UseCallerCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DataSourceDynamodbConfig) *bool { return v.UseCallerCredentials }).(pulumi.BoolPtrOutput)
}

type DataSourceElasticsearchConfig struct {
	// HTTP URL.
	Endpoint string `pulumi:"endpoint"`
	// AWS region of Elasticsearch domain. Defaults to current region.
	Region *string `pulumi:"region"`
}

// DataSourceElasticsearchConfigInput is an input type that accepts DataSourceElasticsearchConfigArgs and DataSourceElasticsearchConfigOutput values.
// You can construct a concrete instance of `DataSourceElasticsearchConfigInput` via:
//
// 		 DataSourceElasticsearchConfigArgs{...}
//
type DataSourceElasticsearchConfigInput interface {
	pulumi.Input

	ToDataSourceElasticsearchConfigOutput() DataSourceElasticsearchConfigOutput
	ToDataSourceElasticsearchConfigOutputWithContext(context.Context) DataSourceElasticsearchConfigOutput
}

type DataSourceElasticsearchConfigArgs struct {
	// HTTP URL.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
	// AWS region of Elasticsearch domain. Defaults to current region.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (DataSourceElasticsearchConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceElasticsearchConfig)(nil)).Elem()
}

func (i DataSourceElasticsearchConfigArgs) ToDataSourceElasticsearchConfigOutput() DataSourceElasticsearchConfigOutput {
	return i.ToDataSourceElasticsearchConfigOutputWithContext(context.Background())
}

func (i DataSourceElasticsearchConfigArgs) ToDataSourceElasticsearchConfigOutputWithContext(ctx context.Context) DataSourceElasticsearchConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceElasticsearchConfigOutput)
}

func (i DataSourceElasticsearchConfigArgs) ToDataSourceElasticsearchConfigPtrOutput() DataSourceElasticsearchConfigPtrOutput {
	return i.ToDataSourceElasticsearchConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceElasticsearchConfigArgs) ToDataSourceElasticsearchConfigPtrOutputWithContext(ctx context.Context) DataSourceElasticsearchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceElasticsearchConfigOutput).ToDataSourceElasticsearchConfigPtrOutputWithContext(ctx)
}

// DataSourceElasticsearchConfigPtrInput is an input type that accepts DataSourceElasticsearchConfigArgs, DataSourceElasticsearchConfigPtr and DataSourceElasticsearchConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceElasticsearchConfigPtrInput` via:
//
// 		 DataSourceElasticsearchConfigArgs{...}
//
//  or:
//
// 		 nil
//
type DataSourceElasticsearchConfigPtrInput interface {
	pulumi.Input

	ToDataSourceElasticsearchConfigPtrOutput() DataSourceElasticsearchConfigPtrOutput
	ToDataSourceElasticsearchConfigPtrOutputWithContext(context.Context) DataSourceElasticsearchConfigPtrOutput
}

type dataSourceElasticsearchConfigPtrType DataSourceElasticsearchConfigArgs

func DataSourceElasticsearchConfigPtr(v *DataSourceElasticsearchConfigArgs) DataSourceElasticsearchConfigPtrInput {
	return (*dataSourceElasticsearchConfigPtrType)(v)
}

func (*dataSourceElasticsearchConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceElasticsearchConfig)(nil)).Elem()
}

func (i *dataSourceElasticsearchConfigPtrType) ToDataSourceElasticsearchConfigPtrOutput() DataSourceElasticsearchConfigPtrOutput {
	return i.ToDataSourceElasticsearchConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceElasticsearchConfigPtrType) ToDataSourceElasticsearchConfigPtrOutputWithContext(ctx context.Context) DataSourceElasticsearchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceElasticsearchConfigPtrOutput)
}

type DataSourceElasticsearchConfigOutput struct{ *pulumi.OutputState }

func (DataSourceElasticsearchConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceElasticsearchConfig)(nil)).Elem()
}

func (o DataSourceElasticsearchConfigOutput) ToDataSourceElasticsearchConfigOutput() DataSourceElasticsearchConfigOutput {
	return o
}

func (o DataSourceElasticsearchConfigOutput) ToDataSourceElasticsearchConfigOutputWithContext(ctx context.Context) DataSourceElasticsearchConfigOutput {
	return o
}

func (o DataSourceElasticsearchConfigOutput) ToDataSourceElasticsearchConfigPtrOutput() DataSourceElasticsearchConfigPtrOutput {
	return o.ToDataSourceElasticsearchConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceElasticsearchConfigOutput) ToDataSourceElasticsearchConfigPtrOutputWithContext(ctx context.Context) DataSourceElasticsearchConfigPtrOutput {
	return o.ApplyT(func(v DataSourceElasticsearchConfig) *DataSourceElasticsearchConfig {
		return &v
	}).(DataSourceElasticsearchConfigPtrOutput)
}

// HTTP URL.
func (o DataSourceElasticsearchConfigOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceElasticsearchConfig) string { return v.Endpoint }).(pulumi.StringOutput)
}

// AWS region of Elasticsearch domain. Defaults to current region.
func (o DataSourceElasticsearchConfigOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceElasticsearchConfig) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type DataSourceElasticsearchConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceElasticsearchConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceElasticsearchConfig)(nil)).Elem()
}

func (o DataSourceElasticsearchConfigPtrOutput) ToDataSourceElasticsearchConfigPtrOutput() DataSourceElasticsearchConfigPtrOutput {
	return o
}

func (o DataSourceElasticsearchConfigPtrOutput) ToDataSourceElasticsearchConfigPtrOutputWithContext(ctx context.Context) DataSourceElasticsearchConfigPtrOutput {
	return o
}

func (o DataSourceElasticsearchConfigPtrOutput) Elem() DataSourceElasticsearchConfigOutput {
	return o.ApplyT(func(v *DataSourceElasticsearchConfig) DataSourceElasticsearchConfig { return *v }).(DataSourceElasticsearchConfigOutput)
}

// HTTP URL.
func (o DataSourceElasticsearchConfigPtrOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceElasticsearchConfig) string { return v.Endpoint }).(pulumi.StringOutput)
}

// AWS region of Elasticsearch domain. Defaults to current region.
func (o DataSourceElasticsearchConfigPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataSourceElasticsearchConfig) *string { return v.Region }).(pulumi.StringPtrOutput)
}

type DataSourceHttpConfig struct {
	// HTTP URL.
	Endpoint string `pulumi:"endpoint"`
}

// DataSourceHttpConfigInput is an input type that accepts DataSourceHttpConfigArgs and DataSourceHttpConfigOutput values.
// You can construct a concrete instance of `DataSourceHttpConfigInput` via:
//
// 		 DataSourceHttpConfigArgs{...}
//
type DataSourceHttpConfigInput interface {
	pulumi.Input

	ToDataSourceHttpConfigOutput() DataSourceHttpConfigOutput
	ToDataSourceHttpConfigOutputWithContext(context.Context) DataSourceHttpConfigOutput
}

type DataSourceHttpConfigArgs struct {
	// HTTP URL.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
}

func (DataSourceHttpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceHttpConfig)(nil)).Elem()
}

func (i DataSourceHttpConfigArgs) ToDataSourceHttpConfigOutput() DataSourceHttpConfigOutput {
	return i.ToDataSourceHttpConfigOutputWithContext(context.Background())
}

func (i DataSourceHttpConfigArgs) ToDataSourceHttpConfigOutputWithContext(ctx context.Context) DataSourceHttpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHttpConfigOutput)
}

func (i DataSourceHttpConfigArgs) ToDataSourceHttpConfigPtrOutput() DataSourceHttpConfigPtrOutput {
	return i.ToDataSourceHttpConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceHttpConfigArgs) ToDataSourceHttpConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHttpConfigOutput).ToDataSourceHttpConfigPtrOutputWithContext(ctx)
}

// DataSourceHttpConfigPtrInput is an input type that accepts DataSourceHttpConfigArgs, DataSourceHttpConfigPtr and DataSourceHttpConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceHttpConfigPtrInput` via:
//
// 		 DataSourceHttpConfigArgs{...}
//
//  or:
//
// 		 nil
//
type DataSourceHttpConfigPtrInput interface {
	pulumi.Input

	ToDataSourceHttpConfigPtrOutput() DataSourceHttpConfigPtrOutput
	ToDataSourceHttpConfigPtrOutputWithContext(context.Context) DataSourceHttpConfigPtrOutput
}

type dataSourceHttpConfigPtrType DataSourceHttpConfigArgs

func DataSourceHttpConfigPtr(v *DataSourceHttpConfigArgs) DataSourceHttpConfigPtrInput {
	return (*dataSourceHttpConfigPtrType)(v)
}

func (*dataSourceHttpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceHttpConfig)(nil)).Elem()
}

func (i *dataSourceHttpConfigPtrType) ToDataSourceHttpConfigPtrOutput() DataSourceHttpConfigPtrOutput {
	return i.ToDataSourceHttpConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceHttpConfigPtrType) ToDataSourceHttpConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceHttpConfigPtrOutput)
}

type DataSourceHttpConfigOutput struct{ *pulumi.OutputState }

func (DataSourceHttpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceHttpConfig)(nil)).Elem()
}

func (o DataSourceHttpConfigOutput) ToDataSourceHttpConfigOutput() DataSourceHttpConfigOutput {
	return o
}

func (o DataSourceHttpConfigOutput) ToDataSourceHttpConfigOutputWithContext(ctx context.Context) DataSourceHttpConfigOutput {
	return o
}

func (o DataSourceHttpConfigOutput) ToDataSourceHttpConfigPtrOutput() DataSourceHttpConfigPtrOutput {
	return o.ToDataSourceHttpConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceHttpConfigOutput) ToDataSourceHttpConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigPtrOutput {
	return o.ApplyT(func(v DataSourceHttpConfig) *DataSourceHttpConfig {
		return &v
	}).(DataSourceHttpConfigPtrOutput)
}

// HTTP URL.
func (o DataSourceHttpConfigOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceHttpConfig) string { return v.Endpoint }).(pulumi.StringOutput)
}

type DataSourceHttpConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceHttpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceHttpConfig)(nil)).Elem()
}

func (o DataSourceHttpConfigPtrOutput) ToDataSourceHttpConfigPtrOutput() DataSourceHttpConfigPtrOutput {
	return o
}

func (o DataSourceHttpConfigPtrOutput) ToDataSourceHttpConfigPtrOutputWithContext(ctx context.Context) DataSourceHttpConfigPtrOutput {
	return o
}

func (o DataSourceHttpConfigPtrOutput) Elem() DataSourceHttpConfigOutput {
	return o.ApplyT(func(v *DataSourceHttpConfig) DataSourceHttpConfig { return *v }).(DataSourceHttpConfigOutput)
}

// HTTP URL.
func (o DataSourceHttpConfigPtrOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceHttpConfig) string { return v.Endpoint }).(pulumi.StringOutput)
}

type DataSourceLambdaConfig struct {
	// The ARN for the Lambda function.
	FunctionArn string `pulumi:"functionArn"`
}

// DataSourceLambdaConfigInput is an input type that accepts DataSourceLambdaConfigArgs and DataSourceLambdaConfigOutput values.
// You can construct a concrete instance of `DataSourceLambdaConfigInput` via:
//
// 		 DataSourceLambdaConfigArgs{...}
//
type DataSourceLambdaConfigInput interface {
	pulumi.Input

	ToDataSourceLambdaConfigOutput() DataSourceLambdaConfigOutput
	ToDataSourceLambdaConfigOutputWithContext(context.Context) DataSourceLambdaConfigOutput
}

type DataSourceLambdaConfigArgs struct {
	// The ARN for the Lambda function.
	FunctionArn pulumi.StringInput `pulumi:"functionArn"`
}

func (DataSourceLambdaConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceLambdaConfig)(nil)).Elem()
}

func (i DataSourceLambdaConfigArgs) ToDataSourceLambdaConfigOutput() DataSourceLambdaConfigOutput {
	return i.ToDataSourceLambdaConfigOutputWithContext(context.Background())
}

func (i DataSourceLambdaConfigArgs) ToDataSourceLambdaConfigOutputWithContext(ctx context.Context) DataSourceLambdaConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceLambdaConfigOutput)
}

func (i DataSourceLambdaConfigArgs) ToDataSourceLambdaConfigPtrOutput() DataSourceLambdaConfigPtrOutput {
	return i.ToDataSourceLambdaConfigPtrOutputWithContext(context.Background())
}

func (i DataSourceLambdaConfigArgs) ToDataSourceLambdaConfigPtrOutputWithContext(ctx context.Context) DataSourceLambdaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceLambdaConfigOutput).ToDataSourceLambdaConfigPtrOutputWithContext(ctx)
}

// DataSourceLambdaConfigPtrInput is an input type that accepts DataSourceLambdaConfigArgs, DataSourceLambdaConfigPtr and DataSourceLambdaConfigPtrOutput values.
// You can construct a concrete instance of `DataSourceLambdaConfigPtrInput` via:
//
// 		 DataSourceLambdaConfigArgs{...}
//
//  or:
//
// 		 nil
//
type DataSourceLambdaConfigPtrInput interface {
	pulumi.Input

	ToDataSourceLambdaConfigPtrOutput() DataSourceLambdaConfigPtrOutput
	ToDataSourceLambdaConfigPtrOutputWithContext(context.Context) DataSourceLambdaConfigPtrOutput
}

type dataSourceLambdaConfigPtrType DataSourceLambdaConfigArgs

func DataSourceLambdaConfigPtr(v *DataSourceLambdaConfigArgs) DataSourceLambdaConfigPtrInput {
	return (*dataSourceLambdaConfigPtrType)(v)
}

func (*dataSourceLambdaConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceLambdaConfig)(nil)).Elem()
}

func (i *dataSourceLambdaConfigPtrType) ToDataSourceLambdaConfigPtrOutput() DataSourceLambdaConfigPtrOutput {
	return i.ToDataSourceLambdaConfigPtrOutputWithContext(context.Background())
}

func (i *dataSourceLambdaConfigPtrType) ToDataSourceLambdaConfigPtrOutputWithContext(ctx context.Context) DataSourceLambdaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceLambdaConfigPtrOutput)
}

type DataSourceLambdaConfigOutput struct{ *pulumi.OutputState }

func (DataSourceLambdaConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataSourceLambdaConfig)(nil)).Elem()
}

func (o DataSourceLambdaConfigOutput) ToDataSourceLambdaConfigOutput() DataSourceLambdaConfigOutput {
	return o
}

func (o DataSourceLambdaConfigOutput) ToDataSourceLambdaConfigOutputWithContext(ctx context.Context) DataSourceLambdaConfigOutput {
	return o
}

func (o DataSourceLambdaConfigOutput) ToDataSourceLambdaConfigPtrOutput() DataSourceLambdaConfigPtrOutput {
	return o.ToDataSourceLambdaConfigPtrOutputWithContext(context.Background())
}

func (o DataSourceLambdaConfigOutput) ToDataSourceLambdaConfigPtrOutputWithContext(ctx context.Context) DataSourceLambdaConfigPtrOutput {
	return o.ApplyT(func(v DataSourceLambdaConfig) *DataSourceLambdaConfig {
		return &v
	}).(DataSourceLambdaConfigPtrOutput)
}

// The ARN for the Lambda function.
func (o DataSourceLambdaConfigOutput) FunctionArn() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceLambdaConfig) string { return v.FunctionArn }).(pulumi.StringOutput)
}

type DataSourceLambdaConfigPtrOutput struct{ *pulumi.OutputState }

func (DataSourceLambdaConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSourceLambdaConfig)(nil)).Elem()
}

func (o DataSourceLambdaConfigPtrOutput) ToDataSourceLambdaConfigPtrOutput() DataSourceLambdaConfigPtrOutput {
	return o
}

func (o DataSourceLambdaConfigPtrOutput) ToDataSourceLambdaConfigPtrOutputWithContext(ctx context.Context) DataSourceLambdaConfigPtrOutput {
	return o
}

func (o DataSourceLambdaConfigPtrOutput) Elem() DataSourceLambdaConfigOutput {
	return o.ApplyT(func(v *DataSourceLambdaConfig) DataSourceLambdaConfig { return *v }).(DataSourceLambdaConfigOutput)
}

// The ARN for the Lambda function.
func (o DataSourceLambdaConfigPtrOutput) FunctionArn() pulumi.StringOutput {
	return o.ApplyT(func(v DataSourceLambdaConfig) string { return v.FunctionArn }).(pulumi.StringOutput)
}

type GraphQLApiAdditionalAuthenticationProvider struct {
	// The authentication type. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`
	AuthenticationType string `pulumi:"authenticationType"`
	// Nested argument containing OpenID Connect configuration. Defined below.
	OpenidConnectConfig *GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig `pulumi:"openidConnectConfig"`
	// The Amazon Cognito User Pool configuration. Defined below.
	UserPoolConfig *GraphQLApiAdditionalAuthenticationProviderUserPoolConfig `pulumi:"userPoolConfig"`
}

// GraphQLApiAdditionalAuthenticationProviderInput is an input type that accepts GraphQLApiAdditionalAuthenticationProviderArgs and GraphQLApiAdditionalAuthenticationProviderOutput values.
// You can construct a concrete instance of `GraphQLApiAdditionalAuthenticationProviderInput` via:
//
// 		 GraphQLApiAdditionalAuthenticationProviderArgs{...}
//
type GraphQLApiAdditionalAuthenticationProviderInput interface {
	pulumi.Input

	ToGraphQLApiAdditionalAuthenticationProviderOutput() GraphQLApiAdditionalAuthenticationProviderOutput
	ToGraphQLApiAdditionalAuthenticationProviderOutputWithContext(context.Context) GraphQLApiAdditionalAuthenticationProviderOutput
}

type GraphQLApiAdditionalAuthenticationProviderArgs struct {
	// The authentication type. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`
	AuthenticationType pulumi.StringInput `pulumi:"authenticationType"`
	// Nested argument containing OpenID Connect configuration. Defined below.
	OpenidConnectConfig GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrInput `pulumi:"openidConnectConfig"`
	// The Amazon Cognito User Pool configuration. Defined below.
	UserPoolConfig GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrInput `pulumi:"userPoolConfig"`
}

func (GraphQLApiAdditionalAuthenticationProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProvider)(nil)).Elem()
}

func (i GraphQLApiAdditionalAuthenticationProviderArgs) ToGraphQLApiAdditionalAuthenticationProviderOutput() GraphQLApiAdditionalAuthenticationProviderOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderOutputWithContext(context.Background())
}

func (i GraphQLApiAdditionalAuthenticationProviderArgs) ToGraphQLApiAdditionalAuthenticationProviderOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderOutput)
}

// GraphQLApiAdditionalAuthenticationProviderArrayInput is an input type that accepts GraphQLApiAdditionalAuthenticationProviderArray and GraphQLApiAdditionalAuthenticationProviderArrayOutput values.
// You can construct a concrete instance of `GraphQLApiAdditionalAuthenticationProviderArrayInput` via:
//
// 		 GraphQLApiAdditionalAuthenticationProviderArray{ GraphQLApiAdditionalAuthenticationProviderArgs{...} }
//
type GraphQLApiAdditionalAuthenticationProviderArrayInput interface {
	pulumi.Input

	ToGraphQLApiAdditionalAuthenticationProviderArrayOutput() GraphQLApiAdditionalAuthenticationProviderArrayOutput
	ToGraphQLApiAdditionalAuthenticationProviderArrayOutputWithContext(context.Context) GraphQLApiAdditionalAuthenticationProviderArrayOutput
}

type GraphQLApiAdditionalAuthenticationProviderArray []GraphQLApiAdditionalAuthenticationProviderInput

func (GraphQLApiAdditionalAuthenticationProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GraphQLApiAdditionalAuthenticationProvider)(nil)).Elem()
}

func (i GraphQLApiAdditionalAuthenticationProviderArray) ToGraphQLApiAdditionalAuthenticationProviderArrayOutput() GraphQLApiAdditionalAuthenticationProviderArrayOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderArrayOutputWithContext(context.Background())
}

func (i GraphQLApiAdditionalAuthenticationProviderArray) ToGraphQLApiAdditionalAuthenticationProviderArrayOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderArrayOutput)
}

type GraphQLApiAdditionalAuthenticationProviderOutput struct{ *pulumi.OutputState }

func (GraphQLApiAdditionalAuthenticationProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProvider)(nil)).Elem()
}

func (o GraphQLApiAdditionalAuthenticationProviderOutput) ToGraphQLApiAdditionalAuthenticationProviderOutput() GraphQLApiAdditionalAuthenticationProviderOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderOutput) ToGraphQLApiAdditionalAuthenticationProviderOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderOutput {
	return o
}

// The authentication type. Valid values: `API_KEY`, `AWS_IAM`, `AMAZON_COGNITO_USER_POOLS`, `OPENID_CONNECT`
func (o GraphQLApiAdditionalAuthenticationProviderOutput) AuthenticationType() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProvider) string { return v.AuthenticationType }).(pulumi.StringOutput)
}

// Nested argument containing OpenID Connect configuration. Defined below.
func (o GraphQLApiAdditionalAuthenticationProviderOutput) OpenidConnectConfig() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProvider) *GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig {
		return v.OpenidConnectConfig
	}).(GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput)
}

// The Amazon Cognito User Pool configuration. Defined below.
func (o GraphQLApiAdditionalAuthenticationProviderOutput) UserPoolConfig() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProvider) *GraphQLApiAdditionalAuthenticationProviderUserPoolConfig {
		return v.UserPoolConfig
	}).(GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput)
}

type GraphQLApiAdditionalAuthenticationProviderArrayOutput struct{ *pulumi.OutputState }

func (GraphQLApiAdditionalAuthenticationProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GraphQLApiAdditionalAuthenticationProvider)(nil)).Elem()
}

func (o GraphQLApiAdditionalAuthenticationProviderArrayOutput) ToGraphQLApiAdditionalAuthenticationProviderArrayOutput() GraphQLApiAdditionalAuthenticationProviderArrayOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderArrayOutput) ToGraphQLApiAdditionalAuthenticationProviderArrayOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderArrayOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderArrayOutput) Index(i pulumi.IntInput) GraphQLApiAdditionalAuthenticationProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GraphQLApiAdditionalAuthenticationProvider {
		return vs[0].([]GraphQLApiAdditionalAuthenticationProvider)[vs[1].(int)]
	}).(GraphQLApiAdditionalAuthenticationProviderOutput)
}

type GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig struct {
	// Number of milliseconds a token is valid after being authenticated.
	AuthTtl *int `pulumi:"authTtl"`
	// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
	ClientId *string `pulumi:"clientId"`
	// Number of milliseconds a token is valid after being issued to a user.
	IatTtl *int `pulumi:"iatTtl"`
	// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
	Issuer string `pulumi:"issuer"`
}

// GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigInput is an input type that accepts GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs and GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput values.
// You can construct a concrete instance of `GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigInput` via:
//
// 		 GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs{...}
//
type GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigInput interface {
	pulumi.Input

	ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput
	ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutputWithContext(context.Context) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput
}

type GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs struct {
	// Number of milliseconds a token is valid after being authenticated.
	AuthTtl pulumi.IntPtrInput `pulumi:"authTtl"`
	// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Number of milliseconds a token is valid after being issued to a user.
	IatTtl pulumi.IntPtrInput `pulumi:"iatTtl"`
	// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
	Issuer pulumi.StringInput `pulumi:"issuer"`
}

func (GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig)(nil)).Elem()
}

func (i GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutputWithContext(context.Background())
}

func (i GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput)
}

func (i GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(context.Background())
}

func (i GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput).ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(ctx)
}

// GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrInput is an input type that accepts GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs, GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtr and GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput values.
// You can construct a concrete instance of `GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrInput` via:
//
// 		 GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs{...}
//
//  or:
//
// 		 nil
//
type GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrInput interface {
	pulumi.Input

	ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput
	ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(context.Context) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput
}

type graphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrType GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs

func GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtr(v *GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigArgs) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrInput {
	return (*graphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrType)(v)
}

func (*graphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig)(nil)).Elem()
}

func (i *graphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrType) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(context.Background())
}

func (i *graphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrType) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput)
}

type GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput struct{ *pulumi.OutputState }

func (GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig)(nil)).Elem()
}

func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return o.ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(context.Background())
}

func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) *GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig {
		return &v
	}).(GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput)
}

// Number of milliseconds a token is valid after being authenticated.
func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) AuthTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) *int { return v.AuthTtl }).(pulumi.IntPtrOutput)
}

// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Number of milliseconds a token is valid after being issued to a user.
func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) IatTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) *int { return v.IatTtl }).(pulumi.IntPtrOutput)
}

// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) string { return v.Issuer }).(pulumi.StringOutput)
}

type GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig)(nil)).Elem()
}

func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput) ToGraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput) Elem() GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig {
		return *v
	}).(GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput)
}

// Number of milliseconds a token is valid after being authenticated.
func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput) AuthTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) *int { return v.AuthTtl }).(pulumi.IntPtrOutput)
}

// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Number of milliseconds a token is valid after being issued to a user.
func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput) IatTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) *int { return v.IatTtl }).(pulumi.IntPtrOutput)
}

// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
func (o GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfig) string { return v.Issuer }).(pulumi.StringOutput)
}

type GraphQLApiAdditionalAuthenticationProviderUserPoolConfig struct {
	// A regular expression for validating the incoming Amazon Cognito User Pool app client ID.
	AppIdClientRegex *string `pulumi:"appIdClientRegex"`
	// The AWS region in which the user pool was created.
	AwsRegion *string `pulumi:"awsRegion"`
	// The user pool ID.
	UserPoolId string `pulumi:"userPoolId"`
}

// GraphQLApiAdditionalAuthenticationProviderUserPoolConfigInput is an input type that accepts GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs and GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput values.
// You can construct a concrete instance of `GraphQLApiAdditionalAuthenticationProviderUserPoolConfigInput` via:
//
// 		 GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs{...}
//
type GraphQLApiAdditionalAuthenticationProviderUserPoolConfigInput interface {
	pulumi.Input

	ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput
	ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutputWithContext(context.Context) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput
}

type GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs struct {
	// A regular expression for validating the incoming Amazon Cognito User Pool app client ID.
	AppIdClientRegex pulumi.StringPtrInput `pulumi:"appIdClientRegex"`
	// The AWS region in which the user pool was created.
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// The user pool ID.
	UserPoolId pulumi.StringInput `pulumi:"userPoolId"`
}

func (GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderUserPoolConfig)(nil)).Elem()
}

func (i GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutputWithContext(context.Background())
}

func (i GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput)
}

func (i GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(context.Background())
}

func (i GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput).ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(ctx)
}

// GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrInput is an input type that accepts GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs, GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtr and GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput values.
// You can construct a concrete instance of `GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrInput` via:
//
// 		 GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs{...}
//
//  or:
//
// 		 nil
//
type GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrInput interface {
	pulumi.Input

	ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput
	ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(context.Context) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput
}

type graphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrType GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs

func GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtr(v *GraphQLApiAdditionalAuthenticationProviderUserPoolConfigArgs) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrInput {
	return (*graphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrType)(v)
}

func (*graphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiAdditionalAuthenticationProviderUserPoolConfig)(nil)).Elem()
}

func (i *graphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrType) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return i.ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(context.Background())
}

func (i *graphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrType) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput)
}

type GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput struct{ *pulumi.OutputState }

func (GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiAdditionalAuthenticationProviderUserPoolConfig)(nil)).Elem()
}

func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return o.ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(context.Background())
}

func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderUserPoolConfig) *GraphQLApiAdditionalAuthenticationProviderUserPoolConfig {
		return &v
	}).(GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput)
}

// A regular expression for validating the incoming Amazon Cognito User Pool app client ID.
func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput) AppIdClientRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderUserPoolConfig) *string { return v.AppIdClientRegex }).(pulumi.StringPtrOutput)
}

// The AWS region in which the user pool was created.
func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderUserPoolConfig) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// The user pool ID.
func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput) UserPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderUserPoolConfig) string { return v.UserPoolId }).(pulumi.StringOutput)
}

type GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput struct{ *pulumi.OutputState }

func (GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiAdditionalAuthenticationProviderUserPoolConfig)(nil)).Elem()
}

func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput) ToGraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput {
	return o
}

func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput) Elem() GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput {
	return o.ApplyT(func(v *GraphQLApiAdditionalAuthenticationProviderUserPoolConfig) GraphQLApiAdditionalAuthenticationProviderUserPoolConfig {
		return *v
	}).(GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput)
}

// A regular expression for validating the incoming Amazon Cognito User Pool app client ID.
func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput) AppIdClientRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderUserPoolConfig) *string { return v.AppIdClientRegex }).(pulumi.StringPtrOutput)
}

// The AWS region in which the user pool was created.
func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderUserPoolConfig) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// The user pool ID.
func (o GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput) UserPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiAdditionalAuthenticationProviderUserPoolConfig) string { return v.UserPoolId }).(pulumi.StringOutput)
}

type GraphQLApiLogConfig struct {
	// Amazon Resource Name of the service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account.
	CloudwatchLogsRoleArn string `pulumi:"cloudwatchLogsRoleArn"`
	// Field logging level. Valid values: `ALL`, `ERROR`, `NONE`.
	FieldLogLevel string `pulumi:"fieldLogLevel"`
}

// GraphQLApiLogConfigInput is an input type that accepts GraphQLApiLogConfigArgs and GraphQLApiLogConfigOutput values.
// You can construct a concrete instance of `GraphQLApiLogConfigInput` via:
//
// 		 GraphQLApiLogConfigArgs{...}
//
type GraphQLApiLogConfigInput interface {
	pulumi.Input

	ToGraphQLApiLogConfigOutput() GraphQLApiLogConfigOutput
	ToGraphQLApiLogConfigOutputWithContext(context.Context) GraphQLApiLogConfigOutput
}

type GraphQLApiLogConfigArgs struct {
	// Amazon Resource Name of the service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account.
	CloudwatchLogsRoleArn pulumi.StringInput `pulumi:"cloudwatchLogsRoleArn"`
	// Field logging level. Valid values: `ALL`, `ERROR`, `NONE`.
	FieldLogLevel pulumi.StringInput `pulumi:"fieldLogLevel"`
}

func (GraphQLApiLogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiLogConfig)(nil)).Elem()
}

func (i GraphQLApiLogConfigArgs) ToGraphQLApiLogConfigOutput() GraphQLApiLogConfigOutput {
	return i.ToGraphQLApiLogConfigOutputWithContext(context.Background())
}

func (i GraphQLApiLogConfigArgs) ToGraphQLApiLogConfigOutputWithContext(ctx context.Context) GraphQLApiLogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiLogConfigOutput)
}

func (i GraphQLApiLogConfigArgs) ToGraphQLApiLogConfigPtrOutput() GraphQLApiLogConfigPtrOutput {
	return i.ToGraphQLApiLogConfigPtrOutputWithContext(context.Background())
}

func (i GraphQLApiLogConfigArgs) ToGraphQLApiLogConfigPtrOutputWithContext(ctx context.Context) GraphQLApiLogConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiLogConfigOutput).ToGraphQLApiLogConfigPtrOutputWithContext(ctx)
}

// GraphQLApiLogConfigPtrInput is an input type that accepts GraphQLApiLogConfigArgs, GraphQLApiLogConfigPtr and GraphQLApiLogConfigPtrOutput values.
// You can construct a concrete instance of `GraphQLApiLogConfigPtrInput` via:
//
// 		 GraphQLApiLogConfigArgs{...}
//
//  or:
//
// 		 nil
//
type GraphQLApiLogConfigPtrInput interface {
	pulumi.Input

	ToGraphQLApiLogConfigPtrOutput() GraphQLApiLogConfigPtrOutput
	ToGraphQLApiLogConfigPtrOutputWithContext(context.Context) GraphQLApiLogConfigPtrOutput
}

type graphQLApiLogConfigPtrType GraphQLApiLogConfigArgs

func GraphQLApiLogConfigPtr(v *GraphQLApiLogConfigArgs) GraphQLApiLogConfigPtrInput {
	return (*graphQLApiLogConfigPtrType)(v)
}

func (*graphQLApiLogConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiLogConfig)(nil)).Elem()
}

func (i *graphQLApiLogConfigPtrType) ToGraphQLApiLogConfigPtrOutput() GraphQLApiLogConfigPtrOutput {
	return i.ToGraphQLApiLogConfigPtrOutputWithContext(context.Background())
}

func (i *graphQLApiLogConfigPtrType) ToGraphQLApiLogConfigPtrOutputWithContext(ctx context.Context) GraphQLApiLogConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiLogConfigPtrOutput)
}

type GraphQLApiLogConfigOutput struct{ *pulumi.OutputState }

func (GraphQLApiLogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiLogConfig)(nil)).Elem()
}

func (o GraphQLApiLogConfigOutput) ToGraphQLApiLogConfigOutput() GraphQLApiLogConfigOutput {
	return o
}

func (o GraphQLApiLogConfigOutput) ToGraphQLApiLogConfigOutputWithContext(ctx context.Context) GraphQLApiLogConfigOutput {
	return o
}

func (o GraphQLApiLogConfigOutput) ToGraphQLApiLogConfigPtrOutput() GraphQLApiLogConfigPtrOutput {
	return o.ToGraphQLApiLogConfigPtrOutputWithContext(context.Background())
}

func (o GraphQLApiLogConfigOutput) ToGraphQLApiLogConfigPtrOutputWithContext(ctx context.Context) GraphQLApiLogConfigPtrOutput {
	return o.ApplyT(func(v GraphQLApiLogConfig) *GraphQLApiLogConfig {
		return &v
	}).(GraphQLApiLogConfigPtrOutput)
}

// Amazon Resource Name of the service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account.
func (o GraphQLApiLogConfigOutput) CloudwatchLogsRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiLogConfig) string { return v.CloudwatchLogsRoleArn }).(pulumi.StringOutput)
}

// Field logging level. Valid values: `ALL`, `ERROR`, `NONE`.
func (o GraphQLApiLogConfigOutput) FieldLogLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiLogConfig) string { return v.FieldLogLevel }).(pulumi.StringOutput)
}

type GraphQLApiLogConfigPtrOutput struct{ *pulumi.OutputState }

func (GraphQLApiLogConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiLogConfig)(nil)).Elem()
}

func (o GraphQLApiLogConfigPtrOutput) ToGraphQLApiLogConfigPtrOutput() GraphQLApiLogConfigPtrOutput {
	return o
}

func (o GraphQLApiLogConfigPtrOutput) ToGraphQLApiLogConfigPtrOutputWithContext(ctx context.Context) GraphQLApiLogConfigPtrOutput {
	return o
}

func (o GraphQLApiLogConfigPtrOutput) Elem() GraphQLApiLogConfigOutput {
	return o.ApplyT(func(v *GraphQLApiLogConfig) GraphQLApiLogConfig { return *v }).(GraphQLApiLogConfigOutput)
}

// Amazon Resource Name of the service role that AWS AppSync will assume to publish to Amazon CloudWatch logs in your account.
func (o GraphQLApiLogConfigPtrOutput) CloudwatchLogsRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiLogConfig) string { return v.CloudwatchLogsRoleArn }).(pulumi.StringOutput)
}

// Field logging level. Valid values: `ALL`, `ERROR`, `NONE`.
func (o GraphQLApiLogConfigPtrOutput) FieldLogLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiLogConfig) string { return v.FieldLogLevel }).(pulumi.StringOutput)
}

type GraphQLApiOpenidConnectConfig struct {
	// Number of milliseconds a token is valid after being authenticated.
	AuthTtl *int `pulumi:"authTtl"`
	// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
	ClientId *string `pulumi:"clientId"`
	// Number of milliseconds a token is valid after being issued to a user.
	IatTtl *int `pulumi:"iatTtl"`
	// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
	Issuer string `pulumi:"issuer"`
}

// GraphQLApiOpenidConnectConfigInput is an input type that accepts GraphQLApiOpenidConnectConfigArgs and GraphQLApiOpenidConnectConfigOutput values.
// You can construct a concrete instance of `GraphQLApiOpenidConnectConfigInput` via:
//
// 		 GraphQLApiOpenidConnectConfigArgs{...}
//
type GraphQLApiOpenidConnectConfigInput interface {
	pulumi.Input

	ToGraphQLApiOpenidConnectConfigOutput() GraphQLApiOpenidConnectConfigOutput
	ToGraphQLApiOpenidConnectConfigOutputWithContext(context.Context) GraphQLApiOpenidConnectConfigOutput
}

type GraphQLApiOpenidConnectConfigArgs struct {
	// Number of milliseconds a token is valid after being authenticated.
	AuthTtl pulumi.IntPtrInput `pulumi:"authTtl"`
	// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// Number of milliseconds a token is valid after being issued to a user.
	IatTtl pulumi.IntPtrInput `pulumi:"iatTtl"`
	// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
	Issuer pulumi.StringInput `pulumi:"issuer"`
}

func (GraphQLApiOpenidConnectConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiOpenidConnectConfig)(nil)).Elem()
}

func (i GraphQLApiOpenidConnectConfigArgs) ToGraphQLApiOpenidConnectConfigOutput() GraphQLApiOpenidConnectConfigOutput {
	return i.ToGraphQLApiOpenidConnectConfigOutputWithContext(context.Background())
}

func (i GraphQLApiOpenidConnectConfigArgs) ToGraphQLApiOpenidConnectConfigOutputWithContext(ctx context.Context) GraphQLApiOpenidConnectConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiOpenidConnectConfigOutput)
}

func (i GraphQLApiOpenidConnectConfigArgs) ToGraphQLApiOpenidConnectConfigPtrOutput() GraphQLApiOpenidConnectConfigPtrOutput {
	return i.ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(context.Background())
}

func (i GraphQLApiOpenidConnectConfigArgs) ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(ctx context.Context) GraphQLApiOpenidConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiOpenidConnectConfigOutput).ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(ctx)
}

// GraphQLApiOpenidConnectConfigPtrInput is an input type that accepts GraphQLApiOpenidConnectConfigArgs, GraphQLApiOpenidConnectConfigPtr and GraphQLApiOpenidConnectConfigPtrOutput values.
// You can construct a concrete instance of `GraphQLApiOpenidConnectConfigPtrInput` via:
//
// 		 GraphQLApiOpenidConnectConfigArgs{...}
//
//  or:
//
// 		 nil
//
type GraphQLApiOpenidConnectConfigPtrInput interface {
	pulumi.Input

	ToGraphQLApiOpenidConnectConfigPtrOutput() GraphQLApiOpenidConnectConfigPtrOutput
	ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(context.Context) GraphQLApiOpenidConnectConfigPtrOutput
}

type graphQLApiOpenidConnectConfigPtrType GraphQLApiOpenidConnectConfigArgs

func GraphQLApiOpenidConnectConfigPtr(v *GraphQLApiOpenidConnectConfigArgs) GraphQLApiOpenidConnectConfigPtrInput {
	return (*graphQLApiOpenidConnectConfigPtrType)(v)
}

func (*graphQLApiOpenidConnectConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiOpenidConnectConfig)(nil)).Elem()
}

func (i *graphQLApiOpenidConnectConfigPtrType) ToGraphQLApiOpenidConnectConfigPtrOutput() GraphQLApiOpenidConnectConfigPtrOutput {
	return i.ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(context.Background())
}

func (i *graphQLApiOpenidConnectConfigPtrType) ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(ctx context.Context) GraphQLApiOpenidConnectConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiOpenidConnectConfigPtrOutput)
}

type GraphQLApiOpenidConnectConfigOutput struct{ *pulumi.OutputState }

func (GraphQLApiOpenidConnectConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiOpenidConnectConfig)(nil)).Elem()
}

func (o GraphQLApiOpenidConnectConfigOutput) ToGraphQLApiOpenidConnectConfigOutput() GraphQLApiOpenidConnectConfigOutput {
	return o
}

func (o GraphQLApiOpenidConnectConfigOutput) ToGraphQLApiOpenidConnectConfigOutputWithContext(ctx context.Context) GraphQLApiOpenidConnectConfigOutput {
	return o
}

func (o GraphQLApiOpenidConnectConfigOutput) ToGraphQLApiOpenidConnectConfigPtrOutput() GraphQLApiOpenidConnectConfigPtrOutput {
	return o.ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(context.Background())
}

func (o GraphQLApiOpenidConnectConfigOutput) ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(ctx context.Context) GraphQLApiOpenidConnectConfigPtrOutput {
	return o.ApplyT(func(v GraphQLApiOpenidConnectConfig) *GraphQLApiOpenidConnectConfig {
		return &v
	}).(GraphQLApiOpenidConnectConfigPtrOutput)
}

// Number of milliseconds a token is valid after being authenticated.
func (o GraphQLApiOpenidConnectConfigOutput) AuthTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GraphQLApiOpenidConnectConfig) *int { return v.AuthTtl }).(pulumi.IntPtrOutput)
}

// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
func (o GraphQLApiOpenidConnectConfigOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiOpenidConnectConfig) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Number of milliseconds a token is valid after being issued to a user.
func (o GraphQLApiOpenidConnectConfigOutput) IatTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GraphQLApiOpenidConnectConfig) *int { return v.IatTtl }).(pulumi.IntPtrOutput)
}

// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
func (o GraphQLApiOpenidConnectConfigOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiOpenidConnectConfig) string { return v.Issuer }).(pulumi.StringOutput)
}

type GraphQLApiOpenidConnectConfigPtrOutput struct{ *pulumi.OutputState }

func (GraphQLApiOpenidConnectConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiOpenidConnectConfig)(nil)).Elem()
}

func (o GraphQLApiOpenidConnectConfigPtrOutput) ToGraphQLApiOpenidConnectConfigPtrOutput() GraphQLApiOpenidConnectConfigPtrOutput {
	return o
}

func (o GraphQLApiOpenidConnectConfigPtrOutput) ToGraphQLApiOpenidConnectConfigPtrOutputWithContext(ctx context.Context) GraphQLApiOpenidConnectConfigPtrOutput {
	return o
}

func (o GraphQLApiOpenidConnectConfigPtrOutput) Elem() GraphQLApiOpenidConnectConfigOutput {
	return o.ApplyT(func(v *GraphQLApiOpenidConnectConfig) GraphQLApiOpenidConnectConfig { return *v }).(GraphQLApiOpenidConnectConfigOutput)
}

// Number of milliseconds a token is valid after being authenticated.
func (o GraphQLApiOpenidConnectConfigPtrOutput) AuthTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GraphQLApiOpenidConnectConfig) *int { return v.AuthTtl }).(pulumi.IntPtrOutput)
}

// Client identifier of the Relying party at the OpenID identity provider. This identifier is typically obtained when the Relying party is registered with the OpenID identity provider. You can specify a regular expression so the AWS AppSync can validate against multiple client identifiers at a time.
func (o GraphQLApiOpenidConnectConfigPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiOpenidConnectConfig) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// Number of milliseconds a token is valid after being issued to a user.
func (o GraphQLApiOpenidConnectConfigPtrOutput) IatTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GraphQLApiOpenidConnectConfig) *int { return v.IatTtl }).(pulumi.IntPtrOutput)
}

// Issuer for the OpenID Connect configuration. The issuer returned by discovery MUST exactly match the value of iss in the ID Token.
func (o GraphQLApiOpenidConnectConfigPtrOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiOpenidConnectConfig) string { return v.Issuer }).(pulumi.StringOutput)
}

type GraphQLApiUserPoolConfig struct {
	// A regular expression for validating the incoming Amazon Cognito User Pool app client ID.
	AppIdClientRegex *string `pulumi:"appIdClientRegex"`
	// The AWS region in which the user pool was created.
	AwsRegion *string `pulumi:"awsRegion"`
	// The action that you want your GraphQL API to take when a request that uses Amazon Cognito User Pool authentication doesn't match the Amazon Cognito User Pool configuration. Valid: `ALLOW` and `DENY`
	DefaultAction string `pulumi:"defaultAction"`
	// The user pool ID.
	UserPoolId string `pulumi:"userPoolId"`
}

// GraphQLApiUserPoolConfigInput is an input type that accepts GraphQLApiUserPoolConfigArgs and GraphQLApiUserPoolConfigOutput values.
// You can construct a concrete instance of `GraphQLApiUserPoolConfigInput` via:
//
// 		 GraphQLApiUserPoolConfigArgs{...}
//
type GraphQLApiUserPoolConfigInput interface {
	pulumi.Input

	ToGraphQLApiUserPoolConfigOutput() GraphQLApiUserPoolConfigOutput
	ToGraphQLApiUserPoolConfigOutputWithContext(context.Context) GraphQLApiUserPoolConfigOutput
}

type GraphQLApiUserPoolConfigArgs struct {
	// A regular expression for validating the incoming Amazon Cognito User Pool app client ID.
	AppIdClientRegex pulumi.StringPtrInput `pulumi:"appIdClientRegex"`
	// The AWS region in which the user pool was created.
	AwsRegion pulumi.StringPtrInput `pulumi:"awsRegion"`
	// The action that you want your GraphQL API to take when a request that uses Amazon Cognito User Pool authentication doesn't match the Amazon Cognito User Pool configuration. Valid: `ALLOW` and `DENY`
	DefaultAction pulumi.StringInput `pulumi:"defaultAction"`
	// The user pool ID.
	UserPoolId pulumi.StringInput `pulumi:"userPoolId"`
}

func (GraphQLApiUserPoolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiUserPoolConfig)(nil)).Elem()
}

func (i GraphQLApiUserPoolConfigArgs) ToGraphQLApiUserPoolConfigOutput() GraphQLApiUserPoolConfigOutput {
	return i.ToGraphQLApiUserPoolConfigOutputWithContext(context.Background())
}

func (i GraphQLApiUserPoolConfigArgs) ToGraphQLApiUserPoolConfigOutputWithContext(ctx context.Context) GraphQLApiUserPoolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiUserPoolConfigOutput)
}

func (i GraphQLApiUserPoolConfigArgs) ToGraphQLApiUserPoolConfigPtrOutput() GraphQLApiUserPoolConfigPtrOutput {
	return i.ToGraphQLApiUserPoolConfigPtrOutputWithContext(context.Background())
}

func (i GraphQLApiUserPoolConfigArgs) ToGraphQLApiUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiUserPoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiUserPoolConfigOutput).ToGraphQLApiUserPoolConfigPtrOutputWithContext(ctx)
}

// GraphQLApiUserPoolConfigPtrInput is an input type that accepts GraphQLApiUserPoolConfigArgs, GraphQLApiUserPoolConfigPtr and GraphQLApiUserPoolConfigPtrOutput values.
// You can construct a concrete instance of `GraphQLApiUserPoolConfigPtrInput` via:
//
// 		 GraphQLApiUserPoolConfigArgs{...}
//
//  or:
//
// 		 nil
//
type GraphQLApiUserPoolConfigPtrInput interface {
	pulumi.Input

	ToGraphQLApiUserPoolConfigPtrOutput() GraphQLApiUserPoolConfigPtrOutput
	ToGraphQLApiUserPoolConfigPtrOutputWithContext(context.Context) GraphQLApiUserPoolConfigPtrOutput
}

type graphQLApiUserPoolConfigPtrType GraphQLApiUserPoolConfigArgs

func GraphQLApiUserPoolConfigPtr(v *GraphQLApiUserPoolConfigArgs) GraphQLApiUserPoolConfigPtrInput {
	return (*graphQLApiUserPoolConfigPtrType)(v)
}

func (*graphQLApiUserPoolConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiUserPoolConfig)(nil)).Elem()
}

func (i *graphQLApiUserPoolConfigPtrType) ToGraphQLApiUserPoolConfigPtrOutput() GraphQLApiUserPoolConfigPtrOutput {
	return i.ToGraphQLApiUserPoolConfigPtrOutputWithContext(context.Background())
}

func (i *graphQLApiUserPoolConfigPtrType) ToGraphQLApiUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiUserPoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GraphQLApiUserPoolConfigPtrOutput)
}

type GraphQLApiUserPoolConfigOutput struct{ *pulumi.OutputState }

func (GraphQLApiUserPoolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GraphQLApiUserPoolConfig)(nil)).Elem()
}

func (o GraphQLApiUserPoolConfigOutput) ToGraphQLApiUserPoolConfigOutput() GraphQLApiUserPoolConfigOutput {
	return o
}

func (o GraphQLApiUserPoolConfigOutput) ToGraphQLApiUserPoolConfigOutputWithContext(ctx context.Context) GraphQLApiUserPoolConfigOutput {
	return o
}

func (o GraphQLApiUserPoolConfigOutput) ToGraphQLApiUserPoolConfigPtrOutput() GraphQLApiUserPoolConfigPtrOutput {
	return o.ToGraphQLApiUserPoolConfigPtrOutputWithContext(context.Background())
}

func (o GraphQLApiUserPoolConfigOutput) ToGraphQLApiUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiUserPoolConfigPtrOutput {
	return o.ApplyT(func(v GraphQLApiUserPoolConfig) *GraphQLApiUserPoolConfig {
		return &v
	}).(GraphQLApiUserPoolConfigPtrOutput)
}

// A regular expression for validating the incoming Amazon Cognito User Pool app client ID.
func (o GraphQLApiUserPoolConfigOutput) AppIdClientRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiUserPoolConfig) *string { return v.AppIdClientRegex }).(pulumi.StringPtrOutput)
}

// The AWS region in which the user pool was created.
func (o GraphQLApiUserPoolConfigOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiUserPoolConfig) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// The action that you want your GraphQL API to take when a request that uses Amazon Cognito User Pool authentication doesn't match the Amazon Cognito User Pool configuration. Valid: `ALLOW` and `DENY`
func (o GraphQLApiUserPoolConfigOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiUserPoolConfig) string { return v.DefaultAction }).(pulumi.StringOutput)
}

// The user pool ID.
func (o GraphQLApiUserPoolConfigOutput) UserPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiUserPoolConfig) string { return v.UserPoolId }).(pulumi.StringOutput)
}

type GraphQLApiUserPoolConfigPtrOutput struct{ *pulumi.OutputState }

func (GraphQLApiUserPoolConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GraphQLApiUserPoolConfig)(nil)).Elem()
}

func (o GraphQLApiUserPoolConfigPtrOutput) ToGraphQLApiUserPoolConfigPtrOutput() GraphQLApiUserPoolConfigPtrOutput {
	return o
}

func (o GraphQLApiUserPoolConfigPtrOutput) ToGraphQLApiUserPoolConfigPtrOutputWithContext(ctx context.Context) GraphQLApiUserPoolConfigPtrOutput {
	return o
}

func (o GraphQLApiUserPoolConfigPtrOutput) Elem() GraphQLApiUserPoolConfigOutput {
	return o.ApplyT(func(v *GraphQLApiUserPoolConfig) GraphQLApiUserPoolConfig { return *v }).(GraphQLApiUserPoolConfigOutput)
}

// A regular expression for validating the incoming Amazon Cognito User Pool app client ID.
func (o GraphQLApiUserPoolConfigPtrOutput) AppIdClientRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiUserPoolConfig) *string { return v.AppIdClientRegex }).(pulumi.StringPtrOutput)
}

// The AWS region in which the user pool was created.
func (o GraphQLApiUserPoolConfigPtrOutput) AwsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GraphQLApiUserPoolConfig) *string { return v.AwsRegion }).(pulumi.StringPtrOutput)
}

// The action that you want your GraphQL API to take when a request that uses Amazon Cognito User Pool authentication doesn't match the Amazon Cognito User Pool configuration. Valid: `ALLOW` and `DENY`
func (o GraphQLApiUserPoolConfigPtrOutput) DefaultAction() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiUserPoolConfig) string { return v.DefaultAction }).(pulumi.StringOutput)
}

// The user pool ID.
func (o GraphQLApiUserPoolConfigPtrOutput) UserPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GraphQLApiUserPoolConfig) string { return v.UserPoolId }).(pulumi.StringOutput)
}

type ResolverPipelineConfig struct {
	// The list of Function ID.
	Functions []string `pulumi:"functions"`
}

// ResolverPipelineConfigInput is an input type that accepts ResolverPipelineConfigArgs and ResolverPipelineConfigOutput values.
// You can construct a concrete instance of `ResolverPipelineConfigInput` via:
//
// 		 ResolverPipelineConfigArgs{...}
//
type ResolverPipelineConfigInput interface {
	pulumi.Input

	ToResolverPipelineConfigOutput() ResolverPipelineConfigOutput
	ToResolverPipelineConfigOutputWithContext(context.Context) ResolverPipelineConfigOutput
}

type ResolverPipelineConfigArgs struct {
	// The list of Function ID.
	Functions pulumi.StringArrayInput `pulumi:"functions"`
}

func (ResolverPipelineConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverPipelineConfig)(nil)).Elem()
}

func (i ResolverPipelineConfigArgs) ToResolverPipelineConfigOutput() ResolverPipelineConfigOutput {
	return i.ToResolverPipelineConfigOutputWithContext(context.Background())
}

func (i ResolverPipelineConfigArgs) ToResolverPipelineConfigOutputWithContext(ctx context.Context) ResolverPipelineConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverPipelineConfigOutput)
}

func (i ResolverPipelineConfigArgs) ToResolverPipelineConfigPtrOutput() ResolverPipelineConfigPtrOutput {
	return i.ToResolverPipelineConfigPtrOutputWithContext(context.Background())
}

func (i ResolverPipelineConfigArgs) ToResolverPipelineConfigPtrOutputWithContext(ctx context.Context) ResolverPipelineConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverPipelineConfigOutput).ToResolverPipelineConfigPtrOutputWithContext(ctx)
}

// ResolverPipelineConfigPtrInput is an input type that accepts ResolverPipelineConfigArgs, ResolverPipelineConfigPtr and ResolverPipelineConfigPtrOutput values.
// You can construct a concrete instance of `ResolverPipelineConfigPtrInput` via:
//
// 		 ResolverPipelineConfigArgs{...}
//
//  or:
//
// 		 nil
//
type ResolverPipelineConfigPtrInput interface {
	pulumi.Input

	ToResolverPipelineConfigPtrOutput() ResolverPipelineConfigPtrOutput
	ToResolverPipelineConfigPtrOutputWithContext(context.Context) ResolverPipelineConfigPtrOutput
}

type resolverPipelineConfigPtrType ResolverPipelineConfigArgs

func ResolverPipelineConfigPtr(v *ResolverPipelineConfigArgs) ResolverPipelineConfigPtrInput {
	return (*resolverPipelineConfigPtrType)(v)
}

func (*resolverPipelineConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverPipelineConfig)(nil)).Elem()
}

func (i *resolverPipelineConfigPtrType) ToResolverPipelineConfigPtrOutput() ResolverPipelineConfigPtrOutput {
	return i.ToResolverPipelineConfigPtrOutputWithContext(context.Background())
}

func (i *resolverPipelineConfigPtrType) ToResolverPipelineConfigPtrOutputWithContext(ctx context.Context) ResolverPipelineConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverPipelineConfigPtrOutput)
}

type ResolverPipelineConfigOutput struct{ *pulumi.OutputState }

func (ResolverPipelineConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverPipelineConfig)(nil)).Elem()
}

func (o ResolverPipelineConfigOutput) ToResolverPipelineConfigOutput() ResolverPipelineConfigOutput {
	return o
}

func (o ResolverPipelineConfigOutput) ToResolverPipelineConfigOutputWithContext(ctx context.Context) ResolverPipelineConfigOutput {
	return o
}

func (o ResolverPipelineConfigOutput) ToResolverPipelineConfigPtrOutput() ResolverPipelineConfigPtrOutput {
	return o.ToResolverPipelineConfigPtrOutputWithContext(context.Background())
}

func (o ResolverPipelineConfigOutput) ToResolverPipelineConfigPtrOutputWithContext(ctx context.Context) ResolverPipelineConfigPtrOutput {
	return o.ApplyT(func(v ResolverPipelineConfig) *ResolverPipelineConfig {
		return &v
	}).(ResolverPipelineConfigPtrOutput)
}

// The list of Function ID.
func (o ResolverPipelineConfigOutput) Functions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResolverPipelineConfig) []string { return v.Functions }).(pulumi.StringArrayOutput)
}

type ResolverPipelineConfigPtrOutput struct{ *pulumi.OutputState }

func (ResolverPipelineConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverPipelineConfig)(nil)).Elem()
}

func (o ResolverPipelineConfigPtrOutput) ToResolverPipelineConfigPtrOutput() ResolverPipelineConfigPtrOutput {
	return o
}

func (o ResolverPipelineConfigPtrOutput) ToResolverPipelineConfigPtrOutputWithContext(ctx context.Context) ResolverPipelineConfigPtrOutput {
	return o
}

func (o ResolverPipelineConfigPtrOutput) Elem() ResolverPipelineConfigOutput {
	return o.ApplyT(func(v *ResolverPipelineConfig) ResolverPipelineConfig { return *v }).(ResolverPipelineConfigOutput)
}

// The list of Function ID.
func (o ResolverPipelineConfigPtrOutput) Functions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResolverPipelineConfig) []string { return v.Functions }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(DataSourceDynamodbConfigOutput{})
	pulumi.RegisterOutputType(DataSourceDynamodbConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceElasticsearchConfigOutput{})
	pulumi.RegisterOutputType(DataSourceElasticsearchConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceHttpConfigOutput{})
	pulumi.RegisterOutputType(DataSourceHttpConfigPtrOutput{})
	pulumi.RegisterOutputType(DataSourceLambdaConfigOutput{})
	pulumi.RegisterOutputType(DataSourceLambdaConfigPtrOutput{})
	pulumi.RegisterOutputType(GraphQLApiAdditionalAuthenticationProviderOutput{})
	pulumi.RegisterOutputType(GraphQLApiAdditionalAuthenticationProviderArrayOutput{})
	pulumi.RegisterOutputType(GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigOutput{})
	pulumi.RegisterOutputType(GraphQLApiAdditionalAuthenticationProviderOpenidConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(GraphQLApiAdditionalAuthenticationProviderUserPoolConfigOutput{})
	pulumi.RegisterOutputType(GraphQLApiAdditionalAuthenticationProviderUserPoolConfigPtrOutput{})
	pulumi.RegisterOutputType(GraphQLApiLogConfigOutput{})
	pulumi.RegisterOutputType(GraphQLApiLogConfigPtrOutput{})
	pulumi.RegisterOutputType(GraphQLApiOpenidConnectConfigOutput{})
	pulumi.RegisterOutputType(GraphQLApiOpenidConnectConfigPtrOutput{})
	pulumi.RegisterOutputType(GraphQLApiUserPoolConfigOutput{})
	pulumi.RegisterOutputType(GraphQLApiUserPoolConfigPtrOutput{})
	pulumi.RegisterOutputType(ResolverPipelineConfigOutput{})
	pulumi.RegisterOutputType(ResolverPipelineConfigPtrOutput{})
}
