// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package docdb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Cluster struct {
	pulumi.CustomResourceState

	ApplyImmediately             pulumi.BoolOutput        `pulumi:"applyImmediately"`
	Arn                          pulumi.StringOutput      `pulumi:"arn"`
	AvailabilityZones            pulumi.StringArrayOutput `pulumi:"availabilityZones"`
	BackupRetentionPeriod        pulumi.IntPtrOutput      `pulumi:"backupRetentionPeriod"`
	ClusterIdentifier            pulumi.StringOutput      `pulumi:"clusterIdentifier"`
	ClusterIdentifierPrefix      pulumi.StringOutput      `pulumi:"clusterIdentifierPrefix"`
	ClusterMembers               pulumi.StringArrayOutput `pulumi:"clusterMembers"`
	ClusterResourceId            pulumi.StringOutput      `pulumi:"clusterResourceId"`
	DbClusterParameterGroupName  pulumi.StringOutput      `pulumi:"dbClusterParameterGroupName"`
	DbSubnetGroupName            pulumi.StringOutput      `pulumi:"dbSubnetGroupName"`
	DeletionProtection           pulumi.BoolPtrOutput     `pulumi:"deletionProtection"`
	EnabledCloudwatchLogsExports pulumi.StringArrayOutput `pulumi:"enabledCloudwatchLogsExports"`
	Endpoint                     pulumi.StringOutput      `pulumi:"endpoint"`
	Engine                       pulumi.StringPtrOutput   `pulumi:"engine"`
	EngineVersion                pulumi.StringOutput      `pulumi:"engineVersion"`
	FinalSnapshotIdentifier      pulumi.StringPtrOutput   `pulumi:"finalSnapshotIdentifier"`
	GlobalClusterIdentifier      pulumi.StringPtrOutput   `pulumi:"globalClusterIdentifier"`
	HostedZoneId                 pulumi.StringOutput      `pulumi:"hostedZoneId"`
	KmsKeyId                     pulumi.StringOutput      `pulumi:"kmsKeyId"`
	MasterPassword               pulumi.StringPtrOutput   `pulumi:"masterPassword"`
	MasterUsername               pulumi.StringOutput      `pulumi:"masterUsername"`
	Port                         pulumi.IntPtrOutput      `pulumi:"port"`
	PreferredBackupWindow        pulumi.StringOutput      `pulumi:"preferredBackupWindow"`
	PreferredMaintenanceWindow   pulumi.StringOutput      `pulumi:"preferredMaintenanceWindow"`
	ReaderEndpoint               pulumi.StringOutput      `pulumi:"readerEndpoint"`
	SkipFinalSnapshot            pulumi.BoolPtrOutput     `pulumi:"skipFinalSnapshot"`
	SnapshotIdentifier           pulumi.StringPtrOutput   `pulumi:"snapshotIdentifier"`
	StorageEncrypted             pulumi.BoolPtrOutput     `pulumi:"storageEncrypted"`
	Tags                         pulumi.StringMapOutput   `pulumi:"tags"`
	TagsAll                      pulumi.StringMapOutput   `pulumi:"tagsAll"`
	VpcSecurityGroupIds          pulumi.StringArrayOutput `pulumi:"vpcSecurityGroupIds"`
}

// NewCluster registers a new resource with the given unique name, arguments, and options.
func NewCluster(ctx *pulumi.Context,
	name string, args *ClusterArgs, opts ...pulumi.ResourceOption) (*Cluster, error) {
	if args == nil {
		args = &ClusterArgs{}
	}

	if args.MasterPassword != nil {
		args.MasterPassword = pulumi.ToSecret(args.MasterPassword).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"masterPassword",
	})
	opts = append(opts, secrets)
	var resource Cluster
	err := ctx.RegisterResource("aws:docdb/cluster:Cluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCluster gets an existing Cluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterState, opts ...pulumi.ResourceOption) (*Cluster, error) {
	var resource Cluster
	err := ctx.ReadResource("aws:docdb/cluster:Cluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Cluster resources.
type clusterState struct {
	ApplyImmediately             *bool             `pulumi:"applyImmediately"`
	Arn                          *string           `pulumi:"arn"`
	AvailabilityZones            []string          `pulumi:"availabilityZones"`
	BackupRetentionPeriod        *int              `pulumi:"backupRetentionPeriod"`
	ClusterIdentifier            *string           `pulumi:"clusterIdentifier"`
	ClusterIdentifierPrefix      *string           `pulumi:"clusterIdentifierPrefix"`
	ClusterMembers               []string          `pulumi:"clusterMembers"`
	ClusterResourceId            *string           `pulumi:"clusterResourceId"`
	DbClusterParameterGroupName  *string           `pulumi:"dbClusterParameterGroupName"`
	DbSubnetGroupName            *string           `pulumi:"dbSubnetGroupName"`
	DeletionProtection           *bool             `pulumi:"deletionProtection"`
	EnabledCloudwatchLogsExports []string          `pulumi:"enabledCloudwatchLogsExports"`
	Endpoint                     *string           `pulumi:"endpoint"`
	Engine                       *string           `pulumi:"engine"`
	EngineVersion                *string           `pulumi:"engineVersion"`
	FinalSnapshotIdentifier      *string           `pulumi:"finalSnapshotIdentifier"`
	GlobalClusterIdentifier      *string           `pulumi:"globalClusterIdentifier"`
	HostedZoneId                 *string           `pulumi:"hostedZoneId"`
	KmsKeyId                     *string           `pulumi:"kmsKeyId"`
	MasterPassword               *string           `pulumi:"masterPassword"`
	MasterUsername               *string           `pulumi:"masterUsername"`
	Port                         *int              `pulumi:"port"`
	PreferredBackupWindow        *string           `pulumi:"preferredBackupWindow"`
	PreferredMaintenanceWindow   *string           `pulumi:"preferredMaintenanceWindow"`
	ReaderEndpoint               *string           `pulumi:"readerEndpoint"`
	SkipFinalSnapshot            *bool             `pulumi:"skipFinalSnapshot"`
	SnapshotIdentifier           *string           `pulumi:"snapshotIdentifier"`
	StorageEncrypted             *bool             `pulumi:"storageEncrypted"`
	Tags                         map[string]string `pulumi:"tags"`
	TagsAll                      map[string]string `pulumi:"tagsAll"`
	VpcSecurityGroupIds          []string          `pulumi:"vpcSecurityGroupIds"`
}

type ClusterState struct {
	ApplyImmediately             pulumi.BoolPtrInput
	Arn                          pulumi.StringPtrInput
	AvailabilityZones            pulumi.StringArrayInput
	BackupRetentionPeriod        pulumi.IntPtrInput
	ClusterIdentifier            pulumi.StringPtrInput
	ClusterIdentifierPrefix      pulumi.StringPtrInput
	ClusterMembers               pulumi.StringArrayInput
	ClusterResourceId            pulumi.StringPtrInput
	DbClusterParameterGroupName  pulumi.StringPtrInput
	DbSubnetGroupName            pulumi.StringPtrInput
	DeletionProtection           pulumi.BoolPtrInput
	EnabledCloudwatchLogsExports pulumi.StringArrayInput
	Endpoint                     pulumi.StringPtrInput
	Engine                       pulumi.StringPtrInput
	EngineVersion                pulumi.StringPtrInput
	FinalSnapshotIdentifier      pulumi.StringPtrInput
	GlobalClusterIdentifier      pulumi.StringPtrInput
	HostedZoneId                 pulumi.StringPtrInput
	KmsKeyId                     pulumi.StringPtrInput
	MasterPassword               pulumi.StringPtrInput
	MasterUsername               pulumi.StringPtrInput
	Port                         pulumi.IntPtrInput
	PreferredBackupWindow        pulumi.StringPtrInput
	PreferredMaintenanceWindow   pulumi.StringPtrInput
	ReaderEndpoint               pulumi.StringPtrInput
	SkipFinalSnapshot            pulumi.BoolPtrInput
	SnapshotIdentifier           pulumi.StringPtrInput
	StorageEncrypted             pulumi.BoolPtrInput
	Tags                         pulumi.StringMapInput
	TagsAll                      pulumi.StringMapInput
	VpcSecurityGroupIds          pulumi.StringArrayInput
}

func (ClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterState)(nil)).Elem()
}

type clusterArgs struct {
	ApplyImmediately             *bool             `pulumi:"applyImmediately"`
	AvailabilityZones            []string          `pulumi:"availabilityZones"`
	BackupRetentionPeriod        *int              `pulumi:"backupRetentionPeriod"`
	ClusterIdentifier            *string           `pulumi:"clusterIdentifier"`
	ClusterIdentifierPrefix      *string           `pulumi:"clusterIdentifierPrefix"`
	ClusterMembers               []string          `pulumi:"clusterMembers"`
	DbClusterParameterGroupName  *string           `pulumi:"dbClusterParameterGroupName"`
	DbSubnetGroupName            *string           `pulumi:"dbSubnetGroupName"`
	DeletionProtection           *bool             `pulumi:"deletionProtection"`
	EnabledCloudwatchLogsExports []string          `pulumi:"enabledCloudwatchLogsExports"`
	Engine                       *string           `pulumi:"engine"`
	EngineVersion                *string           `pulumi:"engineVersion"`
	FinalSnapshotIdentifier      *string           `pulumi:"finalSnapshotIdentifier"`
	GlobalClusterIdentifier      *string           `pulumi:"globalClusterIdentifier"`
	KmsKeyId                     *string           `pulumi:"kmsKeyId"`
	MasterPassword               *string           `pulumi:"masterPassword"`
	MasterUsername               *string           `pulumi:"masterUsername"`
	Port                         *int              `pulumi:"port"`
	PreferredBackupWindow        *string           `pulumi:"preferredBackupWindow"`
	PreferredMaintenanceWindow   *string           `pulumi:"preferredMaintenanceWindow"`
	SkipFinalSnapshot            *bool             `pulumi:"skipFinalSnapshot"`
	SnapshotIdentifier           *string           `pulumi:"snapshotIdentifier"`
	StorageEncrypted             *bool             `pulumi:"storageEncrypted"`
	Tags                         map[string]string `pulumi:"tags"`
	VpcSecurityGroupIds          []string          `pulumi:"vpcSecurityGroupIds"`
}

// The set of arguments for constructing a Cluster resource.
type ClusterArgs struct {
	ApplyImmediately             pulumi.BoolPtrInput
	AvailabilityZones            pulumi.StringArrayInput
	BackupRetentionPeriod        pulumi.IntPtrInput
	ClusterIdentifier            pulumi.StringPtrInput
	ClusterIdentifierPrefix      pulumi.StringPtrInput
	ClusterMembers               pulumi.StringArrayInput
	DbClusterParameterGroupName  pulumi.StringPtrInput
	DbSubnetGroupName            pulumi.StringPtrInput
	DeletionProtection           pulumi.BoolPtrInput
	EnabledCloudwatchLogsExports pulumi.StringArrayInput
	Engine                       pulumi.StringPtrInput
	EngineVersion                pulumi.StringPtrInput
	FinalSnapshotIdentifier      pulumi.StringPtrInput
	GlobalClusterIdentifier      pulumi.StringPtrInput
	KmsKeyId                     pulumi.StringPtrInput
	MasterPassword               pulumi.StringPtrInput
	MasterUsername               pulumi.StringPtrInput
	Port                         pulumi.IntPtrInput
	PreferredBackupWindow        pulumi.StringPtrInput
	PreferredMaintenanceWindow   pulumi.StringPtrInput
	SkipFinalSnapshot            pulumi.BoolPtrInput
	SnapshotIdentifier           pulumi.StringPtrInput
	StorageEncrypted             pulumi.BoolPtrInput
	Tags                         pulumi.StringMapInput
	VpcSecurityGroupIds          pulumi.StringArrayInput
}

func (ClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterArgs)(nil)).Elem()
}

type ClusterInput interface {
	pulumi.Input

	ToClusterOutput() ClusterOutput
	ToClusterOutputWithContext(ctx context.Context) ClusterOutput
}

func (*Cluster) ElementType() reflect.Type {
	return reflect.TypeOf((**Cluster)(nil)).Elem()
}

func (i *Cluster) ToClusterOutput() ClusterOutput {
	return i.ToClusterOutputWithContext(context.Background())
}

func (i *Cluster) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOutput)
}

// ClusterArrayInput is an input type that accepts ClusterArray and ClusterArrayOutput values.
// You can construct a concrete instance of `ClusterArrayInput` via:
//
//	ClusterArray{ ClusterArgs{...} }
type ClusterArrayInput interface {
	pulumi.Input

	ToClusterArrayOutput() ClusterArrayOutput
	ToClusterArrayOutputWithContext(context.Context) ClusterArrayOutput
}

type ClusterArray []ClusterInput

func (ClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Cluster)(nil)).Elem()
}

func (i ClusterArray) ToClusterArrayOutput() ClusterArrayOutput {
	return i.ToClusterArrayOutputWithContext(context.Background())
}

func (i ClusterArray) ToClusterArrayOutputWithContext(ctx context.Context) ClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterArrayOutput)
}

// ClusterMapInput is an input type that accepts ClusterMap and ClusterMapOutput values.
// You can construct a concrete instance of `ClusterMapInput` via:
//
//	ClusterMap{ "key": ClusterArgs{...} }
type ClusterMapInput interface {
	pulumi.Input

	ToClusterMapOutput() ClusterMapOutput
	ToClusterMapOutputWithContext(context.Context) ClusterMapOutput
}

type ClusterMap map[string]ClusterInput

func (ClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Cluster)(nil)).Elem()
}

func (i ClusterMap) ToClusterMapOutput() ClusterMapOutput {
	return i.ToClusterMapOutputWithContext(context.Background())
}

func (i ClusterMap) ToClusterMapOutputWithContext(ctx context.Context) ClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMapOutput)
}

type ClusterOutput struct{ *pulumi.OutputState }

func (ClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Cluster)(nil)).Elem()
}

func (o ClusterOutput) ToClusterOutput() ClusterOutput {
	return o
}

func (o ClusterOutput) ToClusterOutputWithContext(ctx context.Context) ClusterOutput {
	return o
}

func (o ClusterOutput) ApplyImmediately() pulumi.BoolOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolOutput { return v.ApplyImmediately }).(pulumi.BoolOutput)
}

func (o ClusterOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o ClusterOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringArrayOutput { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

func (o ClusterOutput) BackupRetentionPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.IntPtrOutput { return v.BackupRetentionPeriod }).(pulumi.IntPtrOutput)
}

func (o ClusterOutput) ClusterIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ClusterIdentifier }).(pulumi.StringOutput)
}

func (o ClusterOutput) ClusterIdentifierPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ClusterIdentifierPrefix }).(pulumi.StringOutput)
}

func (o ClusterOutput) ClusterMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringArrayOutput { return v.ClusterMembers }).(pulumi.StringArrayOutput)
}

func (o ClusterOutput) ClusterResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ClusterResourceId }).(pulumi.StringOutput)
}

func (o ClusterOutput) DbClusterParameterGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.DbClusterParameterGroupName }).(pulumi.StringOutput)
}

func (o ClusterOutput) DbSubnetGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.DbSubnetGroupName }).(pulumi.StringOutput)
}

func (o ClusterOutput) DeletionProtection() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolPtrOutput { return v.DeletionProtection }).(pulumi.BoolPtrOutput)
}

func (o ClusterOutput) EnabledCloudwatchLogsExports() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringArrayOutput { return v.EnabledCloudwatchLogsExports }).(pulumi.StringArrayOutput)
}

func (o ClusterOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

func (o ClusterOutput) Engine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.Engine }).(pulumi.StringPtrOutput)
}

func (o ClusterOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.EngineVersion }).(pulumi.StringOutput)
}

func (o ClusterOutput) FinalSnapshotIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.FinalSnapshotIdentifier }).(pulumi.StringPtrOutput)
}

func (o ClusterOutput) GlobalClusterIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.GlobalClusterIdentifier }).(pulumi.StringPtrOutput)
}

func (o ClusterOutput) HostedZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.HostedZoneId }).(pulumi.StringOutput)
}

func (o ClusterOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.KmsKeyId }).(pulumi.StringOutput)
}

func (o ClusterOutput) MasterPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.MasterPassword }).(pulumi.StringPtrOutput)
}

func (o ClusterOutput) MasterUsername() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.MasterUsername }).(pulumi.StringOutput)
}

func (o ClusterOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.IntPtrOutput { return v.Port }).(pulumi.IntPtrOutput)
}

func (o ClusterOutput) PreferredBackupWindow() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.PreferredBackupWindow }).(pulumi.StringOutput)
}

func (o ClusterOutput) PreferredMaintenanceWindow() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.PreferredMaintenanceWindow }).(pulumi.StringOutput)
}

func (o ClusterOutput) ReaderEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringOutput { return v.ReaderEndpoint }).(pulumi.StringOutput)
}

func (o ClusterOutput) SkipFinalSnapshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolPtrOutput { return v.SkipFinalSnapshot }).(pulumi.BoolPtrOutput)
}

func (o ClusterOutput) SnapshotIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringPtrOutput { return v.SnapshotIdentifier }).(pulumi.StringPtrOutput)
}

func (o ClusterOutput) StorageEncrypted() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Cluster) pulumi.BoolPtrOutput { return v.StorageEncrypted }).(pulumi.BoolPtrOutput)
}

func (o ClusterOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o ClusterOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o ClusterOutput) VpcSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Cluster) pulumi.StringArrayOutput { return v.VpcSecurityGroupIds }).(pulumi.StringArrayOutput)
}

type ClusterArrayOutput struct{ *pulumi.OutputState }

func (ClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Cluster)(nil)).Elem()
}

func (o ClusterArrayOutput) ToClusterArrayOutput() ClusterArrayOutput {
	return o
}

func (o ClusterArrayOutput) ToClusterArrayOutputWithContext(ctx context.Context) ClusterArrayOutput {
	return o
}

func (o ClusterArrayOutput) Index(i pulumi.IntInput) ClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Cluster {
		return vs[0].([]*Cluster)[vs[1].(int)]
	}).(ClusterOutput)
}

type ClusterMapOutput struct{ *pulumi.OutputState }

func (ClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Cluster)(nil)).Elem()
}

func (o ClusterMapOutput) ToClusterMapOutput() ClusterMapOutput {
	return o
}

func (o ClusterMapOutput) ToClusterMapOutputWithContext(ctx context.Context) ClusterMapOutput {
	return o
}

func (o ClusterMapOutput) MapIndex(k pulumi.StringInput) ClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Cluster {
		return vs[0].(map[string]*Cluster)[vs[1].(string)]
	}).(ClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterInput)(nil)).Elem(), &Cluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterArrayInput)(nil)).Elem(), ClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMapInput)(nil)).Elem(), ClusterMap{})
	pulumi.RegisterOutputType(ClusterOutput{})
	pulumi.RegisterOutputType(ClusterArrayOutput{})
	pulumi.RegisterOutputType(ClusterMapOutput{})
}
