// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package docdb

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an DocDB Cluster Resource Instance. A Cluster Instance Resource defines
// attributes that are specific to a single instance in a [DocDB Cluster][1].
// 
// You do not designate a primary and subsequent replicas. Instead, you simply add DocDB
// Instances and DocDB manages the replication. You can use the [count][3]
// meta-parameter to make multiple instances and join them all to the same DocDB
// Cluster, or you may specify different Cluster Instance resources with various
// `instanceClass` sizes.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/docdb_cluster_instance.html.markdown.
type ClusterInstance struct {
	s *pulumi.ResourceState
}

// NewClusterInstance registers a new resource with the given unique name, arguments, and options.
func NewClusterInstance(ctx *pulumi.Context,
	name string, args *ClusterInstanceArgs, opts ...pulumi.ResourceOpt) (*ClusterInstance, error) {
	if args == nil || args.ClusterIdentifier == nil {
		return nil, errors.New("missing required argument 'ClusterIdentifier'")
	}
	if args == nil || args.InstanceClass == nil {
		return nil, errors.New("missing required argument 'InstanceClass'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["applyImmediately"] = nil
		inputs["autoMinorVersionUpgrade"] = nil
		inputs["availabilityZone"] = nil
		inputs["caCertIdentifier"] = nil
		inputs["clusterIdentifier"] = nil
		inputs["engine"] = nil
		inputs["identifier"] = nil
		inputs["identifierPrefix"] = nil
		inputs["instanceClass"] = nil
		inputs["preferredMaintenanceWindow"] = nil
		inputs["promotionTier"] = nil
		inputs["tags"] = nil
	} else {
		inputs["applyImmediately"] = args.ApplyImmediately
		inputs["autoMinorVersionUpgrade"] = args.AutoMinorVersionUpgrade
		inputs["availabilityZone"] = args.AvailabilityZone
		inputs["caCertIdentifier"] = args.CaCertIdentifier
		inputs["clusterIdentifier"] = args.ClusterIdentifier
		inputs["engine"] = args.Engine
		inputs["identifier"] = args.Identifier
		inputs["identifierPrefix"] = args.IdentifierPrefix
		inputs["instanceClass"] = args.InstanceClass
		inputs["preferredMaintenanceWindow"] = args.PreferredMaintenanceWindow
		inputs["promotionTier"] = args.PromotionTier
		inputs["tags"] = args.Tags
	}
	inputs["arn"] = nil
	inputs["dbSubnetGroupName"] = nil
	inputs["dbiResourceId"] = nil
	inputs["endpoint"] = nil
	inputs["engineVersion"] = nil
	inputs["kmsKeyId"] = nil
	inputs["port"] = nil
	inputs["preferredBackupWindow"] = nil
	inputs["publiclyAccessible"] = nil
	inputs["storageEncrypted"] = nil
	inputs["writer"] = nil
	s, err := ctx.RegisterResource("aws:docdb/clusterInstance:ClusterInstance", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ClusterInstance{s: s}, nil
}

// GetClusterInstance gets an existing ClusterInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterInstance(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ClusterInstanceState, opts ...pulumi.ResourceOpt) (*ClusterInstance, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["applyImmediately"] = state.ApplyImmediately
		inputs["arn"] = state.Arn
		inputs["autoMinorVersionUpgrade"] = state.AutoMinorVersionUpgrade
		inputs["availabilityZone"] = state.AvailabilityZone
		inputs["caCertIdentifier"] = state.CaCertIdentifier
		inputs["clusterIdentifier"] = state.ClusterIdentifier
		inputs["dbSubnetGroupName"] = state.DbSubnetGroupName
		inputs["dbiResourceId"] = state.DbiResourceId
		inputs["endpoint"] = state.Endpoint
		inputs["engine"] = state.Engine
		inputs["engineVersion"] = state.EngineVersion
		inputs["identifier"] = state.Identifier
		inputs["identifierPrefix"] = state.IdentifierPrefix
		inputs["instanceClass"] = state.InstanceClass
		inputs["kmsKeyId"] = state.KmsKeyId
		inputs["port"] = state.Port
		inputs["preferredBackupWindow"] = state.PreferredBackupWindow
		inputs["preferredMaintenanceWindow"] = state.PreferredMaintenanceWindow
		inputs["promotionTier"] = state.PromotionTier
		inputs["publiclyAccessible"] = state.PubliclyAccessible
		inputs["storageEncrypted"] = state.StorageEncrypted
		inputs["tags"] = state.Tags
		inputs["writer"] = state.Writer
	}
	s, err := ctx.ReadResource("aws:docdb/clusterInstance:ClusterInstance", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ClusterInstance{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ClusterInstance) URN() pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ClusterInstance) ID() pulumi.IDOutput {
	return r.s.ID()
}

// Specifies whether any database modifications
// are applied immediately, or during the next maintenance window. Default is`false`.
func (r *ClusterInstance) ApplyImmediately() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["applyImmediately"])
}

// Amazon Resource Name (ARN) of cluster instance
func (r *ClusterInstance) Arn() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["arn"])
}

// Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window. Default `true`.
func (r *ClusterInstance) AutoMinorVersionUpgrade() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["autoMinorVersionUpgrade"])
}

// The EC2 Availability Zone that the DB instance is created in. See [docs](https://docs.aws.amazon.com/documentdb/latest/developerguide/API_CreateDBInstance.html) about the details.
func (r *ClusterInstance) AvailabilityZone() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["availabilityZone"])
}

// (Optional) The identifier of the CA certificate for the DB instance.
func (r *ClusterInstance) CaCertIdentifier() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["caCertIdentifier"])
}

// The identifier of the [`docdb.Cluster`](https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html) in which to launch this instance.
func (r *ClusterInstance) ClusterIdentifier() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["clusterIdentifier"])
}

// The DB subnet group to associate with this DB instance.
func (r *ClusterInstance) DbSubnetGroupName() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["dbSubnetGroupName"])
}

// The region-unique, immutable identifier for the DB instance.
func (r *ClusterInstance) DbiResourceId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["dbiResourceId"])
}

// The DNS address for this instance. May not be writable
func (r *ClusterInstance) Endpoint() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["endpoint"])
}

// The name of the database engine to be used for the DocDB instance. Defaults to `docdb`. Valid Values: `docdb`.
func (r *ClusterInstance) Engine() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["engine"])
}

// The database engine version
func (r *ClusterInstance) EngineVersion() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["engineVersion"])
}

// The indentifier for the DocDB instance, if omitted, this provider will assign a random, unique identifier.
func (r *ClusterInstance) Identifier() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["identifier"])
}

// Creates a unique identifier beginning with the specified prefix. Conflicts with `identifer`.
func (r *ClusterInstance) IdentifierPrefix() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["identifierPrefix"])
}

// The instance class to use. For details on CPU and memory, see [Scaling for DocDB Instances][2]. DocDB currently
// supports the below instance classes. Please see [AWS Documentation][4] for complete details.
// - db.r4.large
// - db.r4.xlarge
// - db.r4.2xlarge
// - db.r4.4xlarge
// - db.r4.8xlarge
// - db.r4.16xlarge
func (r *ClusterInstance) InstanceClass() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["instanceClass"])
}

// The ARN for the KMS encryption key if one is set to the cluster.
func (r *ClusterInstance) KmsKeyId() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["kmsKeyId"])
}

// The database port
func (r *ClusterInstance) Port() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["port"])
}

// The daily time range during which automated backups are created if automated backups are enabled.
func (r *ClusterInstance) PreferredBackupWindow() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["preferredBackupWindow"])
}

// The window to perform maintenance in.
// Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00".
func (r *ClusterInstance) PreferredMaintenanceWindow() pulumi.StringOutput {
	return (pulumi.StringOutput)(r.s.State["preferredMaintenanceWindow"])
}

// Default 0. Failover Priority setting on instance level. The reader who has lower tier has higher priority to get promoter to writer.
func (r *ClusterInstance) PromotionTier() pulumi.IntOutput {
	return (pulumi.IntOutput)(r.s.State["promotionTier"])
}

func (r *ClusterInstance) PubliclyAccessible() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["publiclyAccessible"])
}

// Specifies whether the DB cluster is encrypted.
func (r *ClusterInstance) StorageEncrypted() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["storageEncrypted"])
}

// A mapping of tags to assign to the instance.
func (r *ClusterInstance) Tags() pulumi.MapOutput {
	return (pulumi.MapOutput)(r.s.State["tags"])
}

// Boolean indicating if this instance is writable. `False` indicates this instance is a read replica.
func (r *ClusterInstance) Writer() pulumi.BoolOutput {
	return (pulumi.BoolOutput)(r.s.State["writer"])
}

// Input properties used for looking up and filtering ClusterInstance resources.
type ClusterInstanceState struct {
	// Specifies whether any database modifications
	// are applied immediately, or during the next maintenance window. Default is`false`.
	ApplyImmediately interface{}
	// Amazon Resource Name (ARN) of cluster instance
	Arn interface{}
	// Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window. Default `true`.
	AutoMinorVersionUpgrade interface{}
	// The EC2 Availability Zone that the DB instance is created in. See [docs](https://docs.aws.amazon.com/documentdb/latest/developerguide/API_CreateDBInstance.html) about the details.
	AvailabilityZone interface{}
	// (Optional) The identifier of the CA certificate for the DB instance.
	CaCertIdentifier interface{}
	// The identifier of the [`docdb.Cluster`](https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html) in which to launch this instance.
	ClusterIdentifier interface{}
	// The DB subnet group to associate with this DB instance.
	DbSubnetGroupName interface{}
	// The region-unique, immutable identifier for the DB instance.
	DbiResourceId interface{}
	// The DNS address for this instance. May not be writable
	Endpoint interface{}
	// The name of the database engine to be used for the DocDB instance. Defaults to `docdb`. Valid Values: `docdb`.
	Engine interface{}
	// The database engine version
	EngineVersion interface{}
	// The indentifier for the DocDB instance, if omitted, this provider will assign a random, unique identifier.
	Identifier interface{}
	// Creates a unique identifier beginning with the specified prefix. Conflicts with `identifer`.
	IdentifierPrefix interface{}
	// The instance class to use. For details on CPU and memory, see [Scaling for DocDB Instances][2]. DocDB currently
	// supports the below instance classes. Please see [AWS Documentation][4] for complete details.
	// - db.r4.large
	// - db.r4.xlarge
	// - db.r4.2xlarge
	// - db.r4.4xlarge
	// - db.r4.8xlarge
	// - db.r4.16xlarge
	InstanceClass interface{}
	// The ARN for the KMS encryption key if one is set to the cluster.
	KmsKeyId interface{}
	// The database port
	Port interface{}
	// The daily time range during which automated backups are created if automated backups are enabled.
	PreferredBackupWindow interface{}
	// The window to perform maintenance in.
	// Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00".
	PreferredMaintenanceWindow interface{}
	// Default 0. Failover Priority setting on instance level. The reader who has lower tier has higher priority to get promoter to writer.
	PromotionTier interface{}
	PubliclyAccessible interface{}
	// Specifies whether the DB cluster is encrypted.
	StorageEncrypted interface{}
	// A mapping of tags to assign to the instance.
	Tags interface{}
	// Boolean indicating if this instance is writable. `False` indicates this instance is a read replica.
	Writer interface{}
}

// The set of arguments for constructing a ClusterInstance resource.
type ClusterInstanceArgs struct {
	// Specifies whether any database modifications
	// are applied immediately, or during the next maintenance window. Default is`false`.
	ApplyImmediately interface{}
	// Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window. Default `true`.
	AutoMinorVersionUpgrade interface{}
	// The EC2 Availability Zone that the DB instance is created in. See [docs](https://docs.aws.amazon.com/documentdb/latest/developerguide/API_CreateDBInstance.html) about the details.
	AvailabilityZone interface{}
	// (Optional) The identifier of the CA certificate for the DB instance.
	CaCertIdentifier interface{}
	// The identifier of the [`docdb.Cluster`](https://www.terraform.io/docs/providers/aws/r/docdb_cluster.html) in which to launch this instance.
	ClusterIdentifier interface{}
	// The name of the database engine to be used for the DocDB instance. Defaults to `docdb`. Valid Values: `docdb`.
	Engine interface{}
	// The indentifier for the DocDB instance, if omitted, this provider will assign a random, unique identifier.
	Identifier interface{}
	// Creates a unique identifier beginning with the specified prefix. Conflicts with `identifer`.
	IdentifierPrefix interface{}
	// The instance class to use. For details on CPU and memory, see [Scaling for DocDB Instances][2]. DocDB currently
	// supports the below instance classes. Please see [AWS Documentation][4] for complete details.
	// - db.r4.large
	// - db.r4.xlarge
	// - db.r4.2xlarge
	// - db.r4.4xlarge
	// - db.r4.8xlarge
	// - db.r4.16xlarge
	InstanceClass interface{}
	// The window to perform maintenance in.
	// Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00".
	PreferredMaintenanceWindow interface{}
	// Default 0. Failover Priority setting on instance level. The reader who has lower tier has higher priority to get promoter to writer.
	PromotionTier interface{}
	// A mapping of tags to assign to the instance.
	Tags interface{}
}
