// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package docdb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ClusterMasterUserSecret struct {
	// The ARN for the KMS encryption key. When specifying `kmsKeyId`, `storageEncrypted` needs to be set to true.
	KmsKeyId     *string `pulumi:"kmsKeyId"`
	SecretArn    *string `pulumi:"secretArn"`
	SecretStatus *string `pulumi:"secretStatus"`
}

// ClusterMasterUserSecretInput is an input type that accepts ClusterMasterUserSecretArgs and ClusterMasterUserSecretOutput values.
// You can construct a concrete instance of `ClusterMasterUserSecretInput` via:
//
//	ClusterMasterUserSecretArgs{...}
type ClusterMasterUserSecretInput interface {
	pulumi.Input

	ToClusterMasterUserSecretOutput() ClusterMasterUserSecretOutput
	ToClusterMasterUserSecretOutputWithContext(context.Context) ClusterMasterUserSecretOutput
}

type ClusterMasterUserSecretArgs struct {
	// The ARN for the KMS encryption key. When specifying `kmsKeyId`, `storageEncrypted` needs to be set to true.
	KmsKeyId     pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	SecretArn    pulumi.StringPtrInput `pulumi:"secretArn"`
	SecretStatus pulumi.StringPtrInput `pulumi:"secretStatus"`
}

func (ClusterMasterUserSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterUserSecret)(nil)).Elem()
}

func (i ClusterMasterUserSecretArgs) ToClusterMasterUserSecretOutput() ClusterMasterUserSecretOutput {
	return i.ToClusterMasterUserSecretOutputWithContext(context.Background())
}

func (i ClusterMasterUserSecretArgs) ToClusterMasterUserSecretOutputWithContext(ctx context.Context) ClusterMasterUserSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterUserSecretOutput)
}

// ClusterMasterUserSecretArrayInput is an input type that accepts ClusterMasterUserSecretArray and ClusterMasterUserSecretArrayOutput values.
// You can construct a concrete instance of `ClusterMasterUserSecretArrayInput` via:
//
//	ClusterMasterUserSecretArray{ ClusterMasterUserSecretArgs{...} }
type ClusterMasterUserSecretArrayInput interface {
	pulumi.Input

	ToClusterMasterUserSecretArrayOutput() ClusterMasterUserSecretArrayOutput
	ToClusterMasterUserSecretArrayOutputWithContext(context.Context) ClusterMasterUserSecretArrayOutput
}

type ClusterMasterUserSecretArray []ClusterMasterUserSecretInput

func (ClusterMasterUserSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMasterUserSecret)(nil)).Elem()
}

func (i ClusterMasterUserSecretArray) ToClusterMasterUserSecretArrayOutput() ClusterMasterUserSecretArrayOutput {
	return i.ToClusterMasterUserSecretArrayOutputWithContext(context.Background())
}

func (i ClusterMasterUserSecretArray) ToClusterMasterUserSecretArrayOutputWithContext(ctx context.Context) ClusterMasterUserSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterUserSecretArrayOutput)
}

type ClusterMasterUserSecretOutput struct{ *pulumi.OutputState }

func (ClusterMasterUserSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterUserSecret)(nil)).Elem()
}

func (o ClusterMasterUserSecretOutput) ToClusterMasterUserSecretOutput() ClusterMasterUserSecretOutput {
	return o
}

func (o ClusterMasterUserSecretOutput) ToClusterMasterUserSecretOutputWithContext(ctx context.Context) ClusterMasterUserSecretOutput {
	return o
}

// The ARN for the KMS encryption key. When specifying `kmsKeyId`, `storageEncrypted` needs to be set to true.
func (o ClusterMasterUserSecretOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterUserSecret) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

func (o ClusterMasterUserSecretOutput) SecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterUserSecret) *string { return v.SecretArn }).(pulumi.StringPtrOutput)
}

func (o ClusterMasterUserSecretOutput) SecretStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterUserSecret) *string { return v.SecretStatus }).(pulumi.StringPtrOutput)
}

type ClusterMasterUserSecretArrayOutput struct{ *pulumi.OutputState }

func (ClusterMasterUserSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMasterUserSecret)(nil)).Elem()
}

func (o ClusterMasterUserSecretArrayOutput) ToClusterMasterUserSecretArrayOutput() ClusterMasterUserSecretArrayOutput {
	return o
}

func (o ClusterMasterUserSecretArrayOutput) ToClusterMasterUserSecretArrayOutputWithContext(ctx context.Context) ClusterMasterUserSecretArrayOutput {
	return o
}

func (o ClusterMasterUserSecretArrayOutput) Index(i pulumi.IntInput) ClusterMasterUserSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterMasterUserSecret {
		return vs[0].([]ClusterMasterUserSecret)[vs[1].(int)]
	}).(ClusterMasterUserSecretOutput)
}

type ClusterParameterGroupParameter struct {
	// Valid values are `immediate` and `pending-reboot`. Defaults to `pending-reboot`.
	ApplyMethod *string `pulumi:"applyMethod"`
	// The name of the DocumentDB parameter.
	Name string `pulumi:"name"`
	// The value of the DocumentDB parameter.
	Value string `pulumi:"value"`
}

// ClusterParameterGroupParameterInput is an input type that accepts ClusterParameterGroupParameterArgs and ClusterParameterGroupParameterOutput values.
// You can construct a concrete instance of `ClusterParameterGroupParameterInput` via:
//
//	ClusterParameterGroupParameterArgs{...}
type ClusterParameterGroupParameterInput interface {
	pulumi.Input

	ToClusterParameterGroupParameterOutput() ClusterParameterGroupParameterOutput
	ToClusterParameterGroupParameterOutputWithContext(context.Context) ClusterParameterGroupParameterOutput
}

type ClusterParameterGroupParameterArgs struct {
	// Valid values are `immediate` and `pending-reboot`. Defaults to `pending-reboot`.
	ApplyMethod pulumi.StringPtrInput `pulumi:"applyMethod"`
	// The name of the DocumentDB parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the DocumentDB parameter.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterParameterGroupParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterParameterGroupParameter)(nil)).Elem()
}

func (i ClusterParameterGroupParameterArgs) ToClusterParameterGroupParameterOutput() ClusterParameterGroupParameterOutput {
	return i.ToClusterParameterGroupParameterOutputWithContext(context.Background())
}

func (i ClusterParameterGroupParameterArgs) ToClusterParameterGroupParameterOutputWithContext(ctx context.Context) ClusterParameterGroupParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterParameterGroupParameterOutput)
}

// ClusterParameterGroupParameterArrayInput is an input type that accepts ClusterParameterGroupParameterArray and ClusterParameterGroupParameterArrayOutput values.
// You can construct a concrete instance of `ClusterParameterGroupParameterArrayInput` via:
//
//	ClusterParameterGroupParameterArray{ ClusterParameterGroupParameterArgs{...} }
type ClusterParameterGroupParameterArrayInput interface {
	pulumi.Input

	ToClusterParameterGroupParameterArrayOutput() ClusterParameterGroupParameterArrayOutput
	ToClusterParameterGroupParameterArrayOutputWithContext(context.Context) ClusterParameterGroupParameterArrayOutput
}

type ClusterParameterGroupParameterArray []ClusterParameterGroupParameterInput

func (ClusterParameterGroupParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterParameterGroupParameter)(nil)).Elem()
}

func (i ClusterParameterGroupParameterArray) ToClusterParameterGroupParameterArrayOutput() ClusterParameterGroupParameterArrayOutput {
	return i.ToClusterParameterGroupParameterArrayOutputWithContext(context.Background())
}

func (i ClusterParameterGroupParameterArray) ToClusterParameterGroupParameterArrayOutputWithContext(ctx context.Context) ClusterParameterGroupParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterParameterGroupParameterArrayOutput)
}

type ClusterParameterGroupParameterOutput struct{ *pulumi.OutputState }

func (ClusterParameterGroupParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterParameterGroupParameter)(nil)).Elem()
}

func (o ClusterParameterGroupParameterOutput) ToClusterParameterGroupParameterOutput() ClusterParameterGroupParameterOutput {
	return o
}

func (o ClusterParameterGroupParameterOutput) ToClusterParameterGroupParameterOutputWithContext(ctx context.Context) ClusterParameterGroupParameterOutput {
	return o
}

// Valid values are `immediate` and `pending-reboot`. Defaults to `pending-reboot`.
func (o ClusterParameterGroupParameterOutput) ApplyMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterParameterGroupParameter) *string { return v.ApplyMethod }).(pulumi.StringPtrOutput)
}

// The name of the DocumentDB parameter.
func (o ClusterParameterGroupParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterParameterGroupParameter) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the DocumentDB parameter.
func (o ClusterParameterGroupParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterParameterGroupParameter) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterParameterGroupParameterArrayOutput struct{ *pulumi.OutputState }

func (ClusterParameterGroupParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterParameterGroupParameter)(nil)).Elem()
}

func (o ClusterParameterGroupParameterArrayOutput) ToClusterParameterGroupParameterArrayOutput() ClusterParameterGroupParameterArrayOutput {
	return o
}

func (o ClusterParameterGroupParameterArrayOutput) ToClusterParameterGroupParameterArrayOutputWithContext(ctx context.Context) ClusterParameterGroupParameterArrayOutput {
	return o
}

func (o ClusterParameterGroupParameterArrayOutput) Index(i pulumi.IntInput) ClusterParameterGroupParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterParameterGroupParameter {
		return vs[0].([]ClusterParameterGroupParameter)[vs[1].(int)]
	}).(ClusterParameterGroupParameterOutput)
}

type ClusterRestoreToPointInTime struct {
	// The date and time to restore from. Value must be a time in Universal Coordinated Time (UTC) format and must be before the latest restorable time for the DB instance. Cannot be specified with `useLatestRestorableTime`.
	RestoreToTime *string `pulumi:"restoreToTime"`
	// The type of restore to be performed. Valid values are `full-copy`, `copy-on-write`.
	RestoreType *string `pulumi:"restoreType"`
	// The identifier of the source DB cluster from which to restore. Must match the identifier of an existing DB cluster.
	SourceClusterIdentifier string `pulumi:"sourceClusterIdentifier"`
	// A boolean value that indicates whether the DB cluster is restored from the latest backup time. Defaults to `false`. Cannot be specified with `restoreToTime`.
	UseLatestRestorableTime *bool `pulumi:"useLatestRestorableTime"`
}

// ClusterRestoreToPointInTimeInput is an input type that accepts ClusterRestoreToPointInTimeArgs and ClusterRestoreToPointInTimeOutput values.
// You can construct a concrete instance of `ClusterRestoreToPointInTimeInput` via:
//
//	ClusterRestoreToPointInTimeArgs{...}
type ClusterRestoreToPointInTimeInput interface {
	pulumi.Input

	ToClusterRestoreToPointInTimeOutput() ClusterRestoreToPointInTimeOutput
	ToClusterRestoreToPointInTimeOutputWithContext(context.Context) ClusterRestoreToPointInTimeOutput
}

type ClusterRestoreToPointInTimeArgs struct {
	// The date and time to restore from. Value must be a time in Universal Coordinated Time (UTC) format and must be before the latest restorable time for the DB instance. Cannot be specified with `useLatestRestorableTime`.
	RestoreToTime pulumi.StringPtrInput `pulumi:"restoreToTime"`
	// The type of restore to be performed. Valid values are `full-copy`, `copy-on-write`.
	RestoreType pulumi.StringPtrInput `pulumi:"restoreType"`
	// The identifier of the source DB cluster from which to restore. Must match the identifier of an existing DB cluster.
	SourceClusterIdentifier pulumi.StringInput `pulumi:"sourceClusterIdentifier"`
	// A boolean value that indicates whether the DB cluster is restored from the latest backup time. Defaults to `false`. Cannot be specified with `restoreToTime`.
	UseLatestRestorableTime pulumi.BoolPtrInput `pulumi:"useLatestRestorableTime"`
}

func (ClusterRestoreToPointInTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterRestoreToPointInTime)(nil)).Elem()
}

func (i ClusterRestoreToPointInTimeArgs) ToClusterRestoreToPointInTimeOutput() ClusterRestoreToPointInTimeOutput {
	return i.ToClusterRestoreToPointInTimeOutputWithContext(context.Background())
}

func (i ClusterRestoreToPointInTimeArgs) ToClusterRestoreToPointInTimeOutputWithContext(ctx context.Context) ClusterRestoreToPointInTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRestoreToPointInTimeOutput)
}

func (i ClusterRestoreToPointInTimeArgs) ToClusterRestoreToPointInTimePtrOutput() ClusterRestoreToPointInTimePtrOutput {
	return i.ToClusterRestoreToPointInTimePtrOutputWithContext(context.Background())
}

func (i ClusterRestoreToPointInTimeArgs) ToClusterRestoreToPointInTimePtrOutputWithContext(ctx context.Context) ClusterRestoreToPointInTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRestoreToPointInTimeOutput).ToClusterRestoreToPointInTimePtrOutputWithContext(ctx)
}

// ClusterRestoreToPointInTimePtrInput is an input type that accepts ClusterRestoreToPointInTimeArgs, ClusterRestoreToPointInTimePtr and ClusterRestoreToPointInTimePtrOutput values.
// You can construct a concrete instance of `ClusterRestoreToPointInTimePtrInput` via:
//
//	        ClusterRestoreToPointInTimeArgs{...}
//
//	or:
//
//	        nil
type ClusterRestoreToPointInTimePtrInput interface {
	pulumi.Input

	ToClusterRestoreToPointInTimePtrOutput() ClusterRestoreToPointInTimePtrOutput
	ToClusterRestoreToPointInTimePtrOutputWithContext(context.Context) ClusterRestoreToPointInTimePtrOutput
}

type clusterRestoreToPointInTimePtrType ClusterRestoreToPointInTimeArgs

func ClusterRestoreToPointInTimePtr(v *ClusterRestoreToPointInTimeArgs) ClusterRestoreToPointInTimePtrInput {
	return (*clusterRestoreToPointInTimePtrType)(v)
}

func (*clusterRestoreToPointInTimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterRestoreToPointInTime)(nil)).Elem()
}

func (i *clusterRestoreToPointInTimePtrType) ToClusterRestoreToPointInTimePtrOutput() ClusterRestoreToPointInTimePtrOutput {
	return i.ToClusterRestoreToPointInTimePtrOutputWithContext(context.Background())
}

func (i *clusterRestoreToPointInTimePtrType) ToClusterRestoreToPointInTimePtrOutputWithContext(ctx context.Context) ClusterRestoreToPointInTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRestoreToPointInTimePtrOutput)
}

type ClusterRestoreToPointInTimeOutput struct{ *pulumi.OutputState }

func (ClusterRestoreToPointInTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterRestoreToPointInTime)(nil)).Elem()
}

func (o ClusterRestoreToPointInTimeOutput) ToClusterRestoreToPointInTimeOutput() ClusterRestoreToPointInTimeOutput {
	return o
}

func (o ClusterRestoreToPointInTimeOutput) ToClusterRestoreToPointInTimeOutputWithContext(ctx context.Context) ClusterRestoreToPointInTimeOutput {
	return o
}

func (o ClusterRestoreToPointInTimeOutput) ToClusterRestoreToPointInTimePtrOutput() ClusterRestoreToPointInTimePtrOutput {
	return o.ToClusterRestoreToPointInTimePtrOutputWithContext(context.Background())
}

func (o ClusterRestoreToPointInTimeOutput) ToClusterRestoreToPointInTimePtrOutputWithContext(ctx context.Context) ClusterRestoreToPointInTimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterRestoreToPointInTime) *ClusterRestoreToPointInTime {
		return &v
	}).(ClusterRestoreToPointInTimePtrOutput)
}

// The date and time to restore from. Value must be a time in Universal Coordinated Time (UTC) format and must be before the latest restorable time for the DB instance. Cannot be specified with `useLatestRestorableTime`.
func (o ClusterRestoreToPointInTimeOutput) RestoreToTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRestoreToPointInTime) *string { return v.RestoreToTime }).(pulumi.StringPtrOutput)
}

// The type of restore to be performed. Valid values are `full-copy`, `copy-on-write`.
func (o ClusterRestoreToPointInTimeOutput) RestoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRestoreToPointInTime) *string { return v.RestoreType }).(pulumi.StringPtrOutput)
}

// The identifier of the source DB cluster from which to restore. Must match the identifier of an existing DB cluster.
func (o ClusterRestoreToPointInTimeOutput) SourceClusterIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterRestoreToPointInTime) string { return v.SourceClusterIdentifier }).(pulumi.StringOutput)
}

// A boolean value that indicates whether the DB cluster is restored from the latest backup time. Defaults to `false`. Cannot be specified with `restoreToTime`.
func (o ClusterRestoreToPointInTimeOutput) UseLatestRestorableTime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterRestoreToPointInTime) *bool { return v.UseLatestRestorableTime }).(pulumi.BoolPtrOutput)
}

type ClusterRestoreToPointInTimePtrOutput struct{ *pulumi.OutputState }

func (ClusterRestoreToPointInTimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterRestoreToPointInTime)(nil)).Elem()
}

func (o ClusterRestoreToPointInTimePtrOutput) ToClusterRestoreToPointInTimePtrOutput() ClusterRestoreToPointInTimePtrOutput {
	return o
}

func (o ClusterRestoreToPointInTimePtrOutput) ToClusterRestoreToPointInTimePtrOutputWithContext(ctx context.Context) ClusterRestoreToPointInTimePtrOutput {
	return o
}

func (o ClusterRestoreToPointInTimePtrOutput) Elem() ClusterRestoreToPointInTimeOutput {
	return o.ApplyT(func(v *ClusterRestoreToPointInTime) ClusterRestoreToPointInTime {
		if v != nil {
			return *v
		}
		var ret ClusterRestoreToPointInTime
		return ret
	}).(ClusterRestoreToPointInTimeOutput)
}

// The date and time to restore from. Value must be a time in Universal Coordinated Time (UTC) format and must be before the latest restorable time for the DB instance. Cannot be specified with `useLatestRestorableTime`.
func (o ClusterRestoreToPointInTimePtrOutput) RestoreToTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRestoreToPointInTime) *string {
		if v == nil {
			return nil
		}
		return v.RestoreToTime
	}).(pulumi.StringPtrOutput)
}

// The type of restore to be performed. Valid values are `full-copy`, `copy-on-write`.
func (o ClusterRestoreToPointInTimePtrOutput) RestoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRestoreToPointInTime) *string {
		if v == nil {
			return nil
		}
		return v.RestoreType
	}).(pulumi.StringPtrOutput)
}

// The identifier of the source DB cluster from which to restore. Must match the identifier of an existing DB cluster.
func (o ClusterRestoreToPointInTimePtrOutput) SourceClusterIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRestoreToPointInTime) *string {
		if v == nil {
			return nil
		}
		return &v.SourceClusterIdentifier
	}).(pulumi.StringPtrOutput)
}

// A boolean value that indicates whether the DB cluster is restored from the latest backup time. Defaults to `false`. Cannot be specified with `restoreToTime`.
func (o ClusterRestoreToPointInTimePtrOutput) UseLatestRestorableTime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterRestoreToPointInTime) *bool {
		if v == nil {
			return nil
		}
		return v.UseLatestRestorableTime
	}).(pulumi.BoolPtrOutput)
}

type ElasticClusterTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// ElasticClusterTimeoutsInput is an input type that accepts ElasticClusterTimeoutsArgs and ElasticClusterTimeoutsOutput values.
// You can construct a concrete instance of `ElasticClusterTimeoutsInput` via:
//
//	ElasticClusterTimeoutsArgs{...}
type ElasticClusterTimeoutsInput interface {
	pulumi.Input

	ToElasticClusterTimeoutsOutput() ElasticClusterTimeoutsOutput
	ToElasticClusterTimeoutsOutputWithContext(context.Context) ElasticClusterTimeoutsOutput
}

type ElasticClusterTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (ElasticClusterTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticClusterTimeouts)(nil)).Elem()
}

func (i ElasticClusterTimeoutsArgs) ToElasticClusterTimeoutsOutput() ElasticClusterTimeoutsOutput {
	return i.ToElasticClusterTimeoutsOutputWithContext(context.Background())
}

func (i ElasticClusterTimeoutsArgs) ToElasticClusterTimeoutsOutputWithContext(ctx context.Context) ElasticClusterTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticClusterTimeoutsOutput)
}

func (i ElasticClusterTimeoutsArgs) ToElasticClusterTimeoutsPtrOutput() ElasticClusterTimeoutsPtrOutput {
	return i.ToElasticClusterTimeoutsPtrOutputWithContext(context.Background())
}

func (i ElasticClusterTimeoutsArgs) ToElasticClusterTimeoutsPtrOutputWithContext(ctx context.Context) ElasticClusterTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticClusterTimeoutsOutput).ToElasticClusterTimeoutsPtrOutputWithContext(ctx)
}

// ElasticClusterTimeoutsPtrInput is an input type that accepts ElasticClusterTimeoutsArgs, ElasticClusterTimeoutsPtr and ElasticClusterTimeoutsPtrOutput values.
// You can construct a concrete instance of `ElasticClusterTimeoutsPtrInput` via:
//
//	        ElasticClusterTimeoutsArgs{...}
//
//	or:
//
//	        nil
type ElasticClusterTimeoutsPtrInput interface {
	pulumi.Input

	ToElasticClusterTimeoutsPtrOutput() ElasticClusterTimeoutsPtrOutput
	ToElasticClusterTimeoutsPtrOutputWithContext(context.Context) ElasticClusterTimeoutsPtrOutput
}

type elasticClusterTimeoutsPtrType ElasticClusterTimeoutsArgs

func ElasticClusterTimeoutsPtr(v *ElasticClusterTimeoutsArgs) ElasticClusterTimeoutsPtrInput {
	return (*elasticClusterTimeoutsPtrType)(v)
}

func (*elasticClusterTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticClusterTimeouts)(nil)).Elem()
}

func (i *elasticClusterTimeoutsPtrType) ToElasticClusterTimeoutsPtrOutput() ElasticClusterTimeoutsPtrOutput {
	return i.ToElasticClusterTimeoutsPtrOutputWithContext(context.Background())
}

func (i *elasticClusterTimeoutsPtrType) ToElasticClusterTimeoutsPtrOutputWithContext(ctx context.Context) ElasticClusterTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticClusterTimeoutsPtrOutput)
}

type ElasticClusterTimeoutsOutput struct{ *pulumi.OutputState }

func (ElasticClusterTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticClusterTimeouts)(nil)).Elem()
}

func (o ElasticClusterTimeoutsOutput) ToElasticClusterTimeoutsOutput() ElasticClusterTimeoutsOutput {
	return o
}

func (o ElasticClusterTimeoutsOutput) ToElasticClusterTimeoutsOutputWithContext(ctx context.Context) ElasticClusterTimeoutsOutput {
	return o
}

func (o ElasticClusterTimeoutsOutput) ToElasticClusterTimeoutsPtrOutput() ElasticClusterTimeoutsPtrOutput {
	return o.ToElasticClusterTimeoutsPtrOutputWithContext(context.Background())
}

func (o ElasticClusterTimeoutsOutput) ToElasticClusterTimeoutsPtrOutputWithContext(ctx context.Context) ElasticClusterTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticClusterTimeouts) *ElasticClusterTimeouts {
		return &v
	}).(ElasticClusterTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ElasticClusterTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticClusterTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o ElasticClusterTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticClusterTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ElasticClusterTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticClusterTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type ElasticClusterTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (ElasticClusterTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticClusterTimeouts)(nil)).Elem()
}

func (o ElasticClusterTimeoutsPtrOutput) ToElasticClusterTimeoutsPtrOutput() ElasticClusterTimeoutsPtrOutput {
	return o
}

func (o ElasticClusterTimeoutsPtrOutput) ToElasticClusterTimeoutsPtrOutputWithContext(ctx context.Context) ElasticClusterTimeoutsPtrOutput {
	return o
}

func (o ElasticClusterTimeoutsPtrOutput) Elem() ElasticClusterTimeoutsOutput {
	return o.ApplyT(func(v *ElasticClusterTimeouts) ElasticClusterTimeouts {
		if v != nil {
			return *v
		}
		var ret ElasticClusterTimeouts
		return ret
	}).(ElasticClusterTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ElasticClusterTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticClusterTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o ElasticClusterTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticClusterTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ElasticClusterTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticClusterTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type GlobalClusterGlobalClusterMember struct {
	// Amazon Resource Name (ARN) of member DB Cluster.
	DbClusterArn *string `pulumi:"dbClusterArn"`
	// Whether the member is the primary DB Cluster.
	IsWriter *bool `pulumi:"isWriter"`
}

// GlobalClusterGlobalClusterMemberInput is an input type that accepts GlobalClusterGlobalClusterMemberArgs and GlobalClusterGlobalClusterMemberOutput values.
// You can construct a concrete instance of `GlobalClusterGlobalClusterMemberInput` via:
//
//	GlobalClusterGlobalClusterMemberArgs{...}
type GlobalClusterGlobalClusterMemberInput interface {
	pulumi.Input

	ToGlobalClusterGlobalClusterMemberOutput() GlobalClusterGlobalClusterMemberOutput
	ToGlobalClusterGlobalClusterMemberOutputWithContext(context.Context) GlobalClusterGlobalClusterMemberOutput
}

type GlobalClusterGlobalClusterMemberArgs struct {
	// Amazon Resource Name (ARN) of member DB Cluster.
	DbClusterArn pulumi.StringPtrInput `pulumi:"dbClusterArn"`
	// Whether the member is the primary DB Cluster.
	IsWriter pulumi.BoolPtrInput `pulumi:"isWriter"`
}

func (GlobalClusterGlobalClusterMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClusterGlobalClusterMember)(nil)).Elem()
}

func (i GlobalClusterGlobalClusterMemberArgs) ToGlobalClusterGlobalClusterMemberOutput() GlobalClusterGlobalClusterMemberOutput {
	return i.ToGlobalClusterGlobalClusterMemberOutputWithContext(context.Background())
}

func (i GlobalClusterGlobalClusterMemberArgs) ToGlobalClusterGlobalClusterMemberOutputWithContext(ctx context.Context) GlobalClusterGlobalClusterMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClusterGlobalClusterMemberOutput)
}

// GlobalClusterGlobalClusterMemberArrayInput is an input type that accepts GlobalClusterGlobalClusterMemberArray and GlobalClusterGlobalClusterMemberArrayOutput values.
// You can construct a concrete instance of `GlobalClusterGlobalClusterMemberArrayInput` via:
//
//	GlobalClusterGlobalClusterMemberArray{ GlobalClusterGlobalClusterMemberArgs{...} }
type GlobalClusterGlobalClusterMemberArrayInput interface {
	pulumi.Input

	ToGlobalClusterGlobalClusterMemberArrayOutput() GlobalClusterGlobalClusterMemberArrayOutput
	ToGlobalClusterGlobalClusterMemberArrayOutputWithContext(context.Context) GlobalClusterGlobalClusterMemberArrayOutput
}

type GlobalClusterGlobalClusterMemberArray []GlobalClusterGlobalClusterMemberInput

func (GlobalClusterGlobalClusterMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalClusterGlobalClusterMember)(nil)).Elem()
}

func (i GlobalClusterGlobalClusterMemberArray) ToGlobalClusterGlobalClusterMemberArrayOutput() GlobalClusterGlobalClusterMemberArrayOutput {
	return i.ToGlobalClusterGlobalClusterMemberArrayOutputWithContext(context.Background())
}

func (i GlobalClusterGlobalClusterMemberArray) ToGlobalClusterGlobalClusterMemberArrayOutputWithContext(ctx context.Context) GlobalClusterGlobalClusterMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClusterGlobalClusterMemberArrayOutput)
}

type GlobalClusterGlobalClusterMemberOutput struct{ *pulumi.OutputState }

func (GlobalClusterGlobalClusterMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClusterGlobalClusterMember)(nil)).Elem()
}

func (o GlobalClusterGlobalClusterMemberOutput) ToGlobalClusterGlobalClusterMemberOutput() GlobalClusterGlobalClusterMemberOutput {
	return o
}

func (o GlobalClusterGlobalClusterMemberOutput) ToGlobalClusterGlobalClusterMemberOutputWithContext(ctx context.Context) GlobalClusterGlobalClusterMemberOutput {
	return o
}

// Amazon Resource Name (ARN) of member DB Cluster.
func (o GlobalClusterGlobalClusterMemberOutput) DbClusterArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClusterGlobalClusterMember) *string { return v.DbClusterArn }).(pulumi.StringPtrOutput)
}

// Whether the member is the primary DB Cluster.
func (o GlobalClusterGlobalClusterMemberOutput) IsWriter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClusterGlobalClusterMember) *bool { return v.IsWriter }).(pulumi.BoolPtrOutput)
}

type GlobalClusterGlobalClusterMemberArrayOutput struct{ *pulumi.OutputState }

func (GlobalClusterGlobalClusterMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalClusterGlobalClusterMember)(nil)).Elem()
}

func (o GlobalClusterGlobalClusterMemberArrayOutput) ToGlobalClusterGlobalClusterMemberArrayOutput() GlobalClusterGlobalClusterMemberArrayOutput {
	return o
}

func (o GlobalClusterGlobalClusterMemberArrayOutput) ToGlobalClusterGlobalClusterMemberArrayOutputWithContext(ctx context.Context) GlobalClusterGlobalClusterMemberArrayOutput {
	return o
}

func (o GlobalClusterGlobalClusterMemberArrayOutput) Index(i pulumi.IntInput) GlobalClusterGlobalClusterMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GlobalClusterGlobalClusterMember {
		return vs[0].([]GlobalClusterGlobalClusterMember)[vs[1].(int)]
	}).(GlobalClusterGlobalClusterMemberOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMasterUserSecretInput)(nil)).Elem(), ClusterMasterUserSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMasterUserSecretArrayInput)(nil)).Elem(), ClusterMasterUserSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterParameterGroupParameterInput)(nil)).Elem(), ClusterParameterGroupParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterParameterGroupParameterArrayInput)(nil)).Elem(), ClusterParameterGroupParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterRestoreToPointInTimeInput)(nil)).Elem(), ClusterRestoreToPointInTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterRestoreToPointInTimePtrInput)(nil)).Elem(), ClusterRestoreToPointInTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticClusterTimeoutsInput)(nil)).Elem(), ElasticClusterTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticClusterTimeoutsPtrInput)(nil)).Elem(), ElasticClusterTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClusterGlobalClusterMemberInput)(nil)).Elem(), GlobalClusterGlobalClusterMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClusterGlobalClusterMemberArrayInput)(nil)).Elem(), GlobalClusterGlobalClusterMemberArray{})
	pulumi.RegisterOutputType(ClusterMasterUserSecretOutput{})
	pulumi.RegisterOutputType(ClusterMasterUserSecretArrayOutput{})
	pulumi.RegisterOutputType(ClusterParameterGroupParameterOutput{})
	pulumi.RegisterOutputType(ClusterParameterGroupParameterArrayOutput{})
	pulumi.RegisterOutputType(ClusterRestoreToPointInTimeOutput{})
	pulumi.RegisterOutputType(ClusterRestoreToPointInTimePtrOutput{})
	pulumi.RegisterOutputType(ElasticClusterTimeoutsOutput{})
	pulumi.RegisterOutputType(ElasticClusterTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(GlobalClusterGlobalClusterMemberOutput{})
	pulumi.RegisterOutputType(GlobalClusterGlobalClusterMemberArrayOutput{})
}
