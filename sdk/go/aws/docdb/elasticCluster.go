// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package docdb

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an AWS DocDB (DocumentDB) Elastic Cluster.
//
// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/docdb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := docdb.NewElasticCluster(ctx, "example", &docdb.ElasticClusterArgs{
//				Name:              pulumi.String("my-docdb-cluster"),
//				AdminUserName:     pulumi.String("foo"),
//				AdminUserPassword: pulumi.String("mustbeeightchars"),
//				AuthType:          pulumi.String("PLAIN_TEXT"),
//				ShardCapacity:     pulumi.Int(2),
//				ShardCount:        pulumi.Int(1),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import DocDB (DocumentDB) Elastic Cluster using the `arn` argument. For example,
//
// ```sh
//
//	$ pulumi import aws:docdb/elasticCluster:ElasticCluster example arn:aws:docdb-elastic:us-east-1:000011112222:cluster/12345678-7abc-def0-1234-56789abcdef
//
// ```
type ElasticCluster struct {
	pulumi.CustomResourceState

	// Name of the Elastic DocumentDB cluster administrator
	AdminUserName pulumi.StringOutput `pulumi:"adminUserName"`
	// Password for the Elastic DocumentDB cluster administrator. Can contain any printable ASCII characters. Must be at least 8 characters
	AdminUserPassword pulumi.StringOutput `pulumi:"adminUserPassword"`
	// ARN of the DocumentDB Elastic Cluster
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Authentication type for the Elastic DocumentDB cluster. Valid values are `PLAIN_TEXT` and `SECRET_ARN`
	AuthType pulumi.StringOutput `pulumi:"authType"`
	// The DNS address of the DocDB instance
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// ARN of a KMS key that is used to encrypt the Elastic DocumentDB cluster. If not specified, the default encryption key that KMS creates for your account is used.
	KmsKeyId pulumi.StringOutput `pulumi:"kmsKeyId"`
	// Name of the Elastic DocumentDB cluster
	Name pulumi.StringOutput `pulumi:"name"`
	// Weekly time range during which system maintenance can occur in UTC. Format: `ddd:hh24:mi-ddd:hh24:mi`. If not specified, AWS will choose a random 30-minute window on a random day of the week.
	PreferredMaintenanceWindow pulumi.StringOutput `pulumi:"preferredMaintenanceWindow"`
	// Number of vCPUs assigned to each elastic cluster shard. Maximum is 64. Allowed values are 2, 4, 8, 16, 32, 64
	ShardCapacity pulumi.IntOutput `pulumi:"shardCapacity"`
	// Number of shards assigned to the elastic cluster. Maximum is 32
	//
	// The following arguments are optional:
	ShardCount pulumi.IntOutput `pulumi:"shardCount"`
	// IDs of subnets in which the Elastic DocumentDB Cluster operates.
	SubnetIds pulumi.StringArrayOutput `pulumi:"subnetIds"`
	// A map of tags to assign to the collection. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Deprecated: Please use `tags` instead.
	TagsAll  pulumi.StringMapOutput          `pulumi:"tagsAll"`
	Timeouts ElasticClusterTimeoutsPtrOutput `pulumi:"timeouts"`
	// List of VPC security groups to associate with the Elastic DocumentDB Cluster
	VpcSecurityGroupIds pulumi.StringArrayOutput `pulumi:"vpcSecurityGroupIds"`
}

// NewElasticCluster registers a new resource with the given unique name, arguments, and options.
func NewElasticCluster(ctx *pulumi.Context,
	name string, args *ElasticClusterArgs, opts ...pulumi.ResourceOption) (*ElasticCluster, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AdminUserName == nil {
		return nil, errors.New("invalid value for required argument 'AdminUserName'")
	}
	if args.AdminUserPassword == nil {
		return nil, errors.New("invalid value for required argument 'AdminUserPassword'")
	}
	if args.AuthType == nil {
		return nil, errors.New("invalid value for required argument 'AuthType'")
	}
	if args.ShardCapacity == nil {
		return nil, errors.New("invalid value for required argument 'ShardCapacity'")
	}
	if args.ShardCount == nil {
		return nil, errors.New("invalid value for required argument 'ShardCount'")
	}
	if args.AdminUserPassword != nil {
		args.AdminUserPassword = pulumi.ToSecret(args.AdminUserPassword).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"adminUserPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ElasticCluster
	err := ctx.RegisterResource("aws:docdb/elasticCluster:ElasticCluster", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetElasticCluster gets an existing ElasticCluster resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetElasticCluster(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ElasticClusterState, opts ...pulumi.ResourceOption) (*ElasticCluster, error) {
	var resource ElasticCluster
	err := ctx.ReadResource("aws:docdb/elasticCluster:ElasticCluster", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ElasticCluster resources.
type elasticClusterState struct {
	// Name of the Elastic DocumentDB cluster administrator
	AdminUserName *string `pulumi:"adminUserName"`
	// Password for the Elastic DocumentDB cluster administrator. Can contain any printable ASCII characters. Must be at least 8 characters
	AdminUserPassword *string `pulumi:"adminUserPassword"`
	// ARN of the DocumentDB Elastic Cluster
	Arn *string `pulumi:"arn"`
	// Authentication type for the Elastic DocumentDB cluster. Valid values are `PLAIN_TEXT` and `SECRET_ARN`
	AuthType *string `pulumi:"authType"`
	// The DNS address of the DocDB instance
	Endpoint *string `pulumi:"endpoint"`
	// ARN of a KMS key that is used to encrypt the Elastic DocumentDB cluster. If not specified, the default encryption key that KMS creates for your account is used.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Name of the Elastic DocumentDB cluster
	Name *string `pulumi:"name"`
	// Weekly time range during which system maintenance can occur in UTC. Format: `ddd:hh24:mi-ddd:hh24:mi`. If not specified, AWS will choose a random 30-minute window on a random day of the week.
	PreferredMaintenanceWindow *string `pulumi:"preferredMaintenanceWindow"`
	// Number of vCPUs assigned to each elastic cluster shard. Maximum is 64. Allowed values are 2, 4, 8, 16, 32, 64
	ShardCapacity *int `pulumi:"shardCapacity"`
	// Number of shards assigned to the elastic cluster. Maximum is 32
	//
	// The following arguments are optional:
	ShardCount *int `pulumi:"shardCount"`
	// IDs of subnets in which the Elastic DocumentDB Cluster operates.
	SubnetIds []string `pulumi:"subnetIds"`
	// A map of tags to assign to the collection. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Deprecated: Please use `tags` instead.
	TagsAll  map[string]string       `pulumi:"tagsAll"`
	Timeouts *ElasticClusterTimeouts `pulumi:"timeouts"`
	// List of VPC security groups to associate with the Elastic DocumentDB Cluster
	VpcSecurityGroupIds []string `pulumi:"vpcSecurityGroupIds"`
}

type ElasticClusterState struct {
	// Name of the Elastic DocumentDB cluster administrator
	AdminUserName pulumi.StringPtrInput
	// Password for the Elastic DocumentDB cluster administrator. Can contain any printable ASCII characters. Must be at least 8 characters
	AdminUserPassword pulumi.StringPtrInput
	// ARN of the DocumentDB Elastic Cluster
	Arn pulumi.StringPtrInput
	// Authentication type for the Elastic DocumentDB cluster. Valid values are `PLAIN_TEXT` and `SECRET_ARN`
	AuthType pulumi.StringPtrInput
	// The DNS address of the DocDB instance
	Endpoint pulumi.StringPtrInput
	// ARN of a KMS key that is used to encrypt the Elastic DocumentDB cluster. If not specified, the default encryption key that KMS creates for your account is used.
	KmsKeyId pulumi.StringPtrInput
	// Name of the Elastic DocumentDB cluster
	Name pulumi.StringPtrInput
	// Weekly time range during which system maintenance can occur in UTC. Format: `ddd:hh24:mi-ddd:hh24:mi`. If not specified, AWS will choose a random 30-minute window on a random day of the week.
	PreferredMaintenanceWindow pulumi.StringPtrInput
	// Number of vCPUs assigned to each elastic cluster shard. Maximum is 64. Allowed values are 2, 4, 8, 16, 32, 64
	ShardCapacity pulumi.IntPtrInput
	// Number of shards assigned to the elastic cluster. Maximum is 32
	//
	// The following arguments are optional:
	ShardCount pulumi.IntPtrInput
	// IDs of subnets in which the Elastic DocumentDB Cluster operates.
	SubnetIds pulumi.StringArrayInput
	// A map of tags to assign to the collection. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// Deprecated: Please use `tags` instead.
	TagsAll  pulumi.StringMapInput
	Timeouts ElasticClusterTimeoutsPtrInput
	// List of VPC security groups to associate with the Elastic DocumentDB Cluster
	VpcSecurityGroupIds pulumi.StringArrayInput
}

func (ElasticClusterState) ElementType() reflect.Type {
	return reflect.TypeOf((*elasticClusterState)(nil)).Elem()
}

type elasticClusterArgs struct {
	// Name of the Elastic DocumentDB cluster administrator
	AdminUserName string `pulumi:"adminUserName"`
	// Password for the Elastic DocumentDB cluster administrator. Can contain any printable ASCII characters. Must be at least 8 characters
	AdminUserPassword string `pulumi:"adminUserPassword"`
	// Authentication type for the Elastic DocumentDB cluster. Valid values are `PLAIN_TEXT` and `SECRET_ARN`
	AuthType string `pulumi:"authType"`
	// ARN of a KMS key that is used to encrypt the Elastic DocumentDB cluster. If not specified, the default encryption key that KMS creates for your account is used.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Name of the Elastic DocumentDB cluster
	Name *string `pulumi:"name"`
	// Weekly time range during which system maintenance can occur in UTC. Format: `ddd:hh24:mi-ddd:hh24:mi`. If not specified, AWS will choose a random 30-minute window on a random day of the week.
	PreferredMaintenanceWindow *string `pulumi:"preferredMaintenanceWindow"`
	// Number of vCPUs assigned to each elastic cluster shard. Maximum is 64. Allowed values are 2, 4, 8, 16, 32, 64
	ShardCapacity int `pulumi:"shardCapacity"`
	// Number of shards assigned to the elastic cluster. Maximum is 32
	//
	// The following arguments are optional:
	ShardCount int `pulumi:"shardCount"`
	// IDs of subnets in which the Elastic DocumentDB Cluster operates.
	SubnetIds []string `pulumi:"subnetIds"`
	// A map of tags to assign to the collection. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     map[string]string       `pulumi:"tags"`
	Timeouts *ElasticClusterTimeouts `pulumi:"timeouts"`
	// List of VPC security groups to associate with the Elastic DocumentDB Cluster
	VpcSecurityGroupIds []string `pulumi:"vpcSecurityGroupIds"`
}

// The set of arguments for constructing a ElasticCluster resource.
type ElasticClusterArgs struct {
	// Name of the Elastic DocumentDB cluster administrator
	AdminUserName pulumi.StringInput
	// Password for the Elastic DocumentDB cluster administrator. Can contain any printable ASCII characters. Must be at least 8 characters
	AdminUserPassword pulumi.StringInput
	// Authentication type for the Elastic DocumentDB cluster. Valid values are `PLAIN_TEXT` and `SECRET_ARN`
	AuthType pulumi.StringInput
	// ARN of a KMS key that is used to encrypt the Elastic DocumentDB cluster. If not specified, the default encryption key that KMS creates for your account is used.
	KmsKeyId pulumi.StringPtrInput
	// Name of the Elastic DocumentDB cluster
	Name pulumi.StringPtrInput
	// Weekly time range during which system maintenance can occur in UTC. Format: `ddd:hh24:mi-ddd:hh24:mi`. If not specified, AWS will choose a random 30-minute window on a random day of the week.
	PreferredMaintenanceWindow pulumi.StringPtrInput
	// Number of vCPUs assigned to each elastic cluster shard. Maximum is 64. Allowed values are 2, 4, 8, 16, 32, 64
	ShardCapacity pulumi.IntInput
	// Number of shards assigned to the elastic cluster. Maximum is 32
	//
	// The following arguments are optional:
	ShardCount pulumi.IntInput
	// IDs of subnets in which the Elastic DocumentDB Cluster operates.
	SubnetIds pulumi.StringArrayInput
	// A map of tags to assign to the collection. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     pulumi.StringMapInput
	Timeouts ElasticClusterTimeoutsPtrInput
	// List of VPC security groups to associate with the Elastic DocumentDB Cluster
	VpcSecurityGroupIds pulumi.StringArrayInput
}

func (ElasticClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*elasticClusterArgs)(nil)).Elem()
}

type ElasticClusterInput interface {
	pulumi.Input

	ToElasticClusterOutput() ElasticClusterOutput
	ToElasticClusterOutputWithContext(ctx context.Context) ElasticClusterOutput
}

func (*ElasticCluster) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticCluster)(nil)).Elem()
}

func (i *ElasticCluster) ToElasticClusterOutput() ElasticClusterOutput {
	return i.ToElasticClusterOutputWithContext(context.Background())
}

func (i *ElasticCluster) ToElasticClusterOutputWithContext(ctx context.Context) ElasticClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticClusterOutput)
}

// ElasticClusterArrayInput is an input type that accepts ElasticClusterArray and ElasticClusterArrayOutput values.
// You can construct a concrete instance of `ElasticClusterArrayInput` via:
//
//	ElasticClusterArray{ ElasticClusterArgs{...} }
type ElasticClusterArrayInput interface {
	pulumi.Input

	ToElasticClusterArrayOutput() ElasticClusterArrayOutput
	ToElasticClusterArrayOutputWithContext(context.Context) ElasticClusterArrayOutput
}

type ElasticClusterArray []ElasticClusterInput

func (ElasticClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ElasticCluster)(nil)).Elem()
}

func (i ElasticClusterArray) ToElasticClusterArrayOutput() ElasticClusterArrayOutput {
	return i.ToElasticClusterArrayOutputWithContext(context.Background())
}

func (i ElasticClusterArray) ToElasticClusterArrayOutputWithContext(ctx context.Context) ElasticClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticClusterArrayOutput)
}

// ElasticClusterMapInput is an input type that accepts ElasticClusterMap and ElasticClusterMapOutput values.
// You can construct a concrete instance of `ElasticClusterMapInput` via:
//
//	ElasticClusterMap{ "key": ElasticClusterArgs{...} }
type ElasticClusterMapInput interface {
	pulumi.Input

	ToElasticClusterMapOutput() ElasticClusterMapOutput
	ToElasticClusterMapOutputWithContext(context.Context) ElasticClusterMapOutput
}

type ElasticClusterMap map[string]ElasticClusterInput

func (ElasticClusterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ElasticCluster)(nil)).Elem()
}

func (i ElasticClusterMap) ToElasticClusterMapOutput() ElasticClusterMapOutput {
	return i.ToElasticClusterMapOutputWithContext(context.Background())
}

func (i ElasticClusterMap) ToElasticClusterMapOutputWithContext(ctx context.Context) ElasticClusterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticClusterMapOutput)
}

type ElasticClusterOutput struct{ *pulumi.OutputState }

func (ElasticClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticCluster)(nil)).Elem()
}

func (o ElasticClusterOutput) ToElasticClusterOutput() ElasticClusterOutput {
	return o
}

func (o ElasticClusterOutput) ToElasticClusterOutputWithContext(ctx context.Context) ElasticClusterOutput {
	return o
}

// Name of the Elastic DocumentDB cluster administrator
func (o ElasticClusterOutput) AdminUserName() pulumi.StringOutput {
	return o.ApplyT(func(v *ElasticCluster) pulumi.StringOutput { return v.AdminUserName }).(pulumi.StringOutput)
}

// Password for the Elastic DocumentDB cluster administrator. Can contain any printable ASCII characters. Must be at least 8 characters
func (o ElasticClusterOutput) AdminUserPassword() pulumi.StringOutput {
	return o.ApplyT(func(v *ElasticCluster) pulumi.StringOutput { return v.AdminUserPassword }).(pulumi.StringOutput)
}

// ARN of the DocumentDB Elastic Cluster
func (o ElasticClusterOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ElasticCluster) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Authentication type for the Elastic DocumentDB cluster. Valid values are `PLAIN_TEXT` and `SECRET_ARN`
func (o ElasticClusterOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v *ElasticCluster) pulumi.StringOutput { return v.AuthType }).(pulumi.StringOutput)
}

// The DNS address of the DocDB instance
func (o ElasticClusterOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *ElasticCluster) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

// ARN of a KMS key that is used to encrypt the Elastic DocumentDB cluster. If not specified, the default encryption key that KMS creates for your account is used.
func (o ElasticClusterOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ElasticCluster) pulumi.StringOutput { return v.KmsKeyId }).(pulumi.StringOutput)
}

// Name of the Elastic DocumentDB cluster
func (o ElasticClusterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ElasticCluster) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Weekly time range during which system maintenance can occur in UTC. Format: `ddd:hh24:mi-ddd:hh24:mi`. If not specified, AWS will choose a random 30-minute window on a random day of the week.
func (o ElasticClusterOutput) PreferredMaintenanceWindow() pulumi.StringOutput {
	return o.ApplyT(func(v *ElasticCluster) pulumi.StringOutput { return v.PreferredMaintenanceWindow }).(pulumi.StringOutput)
}

// Number of vCPUs assigned to each elastic cluster shard. Maximum is 64. Allowed values are 2, 4, 8, 16, 32, 64
func (o ElasticClusterOutput) ShardCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v *ElasticCluster) pulumi.IntOutput { return v.ShardCapacity }).(pulumi.IntOutput)
}

// Number of shards assigned to the elastic cluster. Maximum is 32
//
// The following arguments are optional:
func (o ElasticClusterOutput) ShardCount() pulumi.IntOutput {
	return o.ApplyT(func(v *ElasticCluster) pulumi.IntOutput { return v.ShardCount }).(pulumi.IntOutput)
}

// IDs of subnets in which the Elastic DocumentDB Cluster operates.
func (o ElasticClusterOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticCluster) pulumi.StringArrayOutput { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// A map of tags to assign to the collection. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o ElasticClusterOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ElasticCluster) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Deprecated: Please use `tags` instead.
func (o ElasticClusterOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ElasticCluster) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o ElasticClusterOutput) Timeouts() ElasticClusterTimeoutsPtrOutput {
	return o.ApplyT(func(v *ElasticCluster) ElasticClusterTimeoutsPtrOutput { return v.Timeouts }).(ElasticClusterTimeoutsPtrOutput)
}

// List of VPC security groups to associate with the Elastic DocumentDB Cluster
func (o ElasticClusterOutput) VpcSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticCluster) pulumi.StringArrayOutput { return v.VpcSecurityGroupIds }).(pulumi.StringArrayOutput)
}

type ElasticClusterArrayOutput struct{ *pulumi.OutputState }

func (ElasticClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ElasticCluster)(nil)).Elem()
}

func (o ElasticClusterArrayOutput) ToElasticClusterArrayOutput() ElasticClusterArrayOutput {
	return o
}

func (o ElasticClusterArrayOutput) ToElasticClusterArrayOutputWithContext(ctx context.Context) ElasticClusterArrayOutput {
	return o
}

func (o ElasticClusterArrayOutput) Index(i pulumi.IntInput) ElasticClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ElasticCluster {
		return vs[0].([]*ElasticCluster)[vs[1].(int)]
	}).(ElasticClusterOutput)
}

type ElasticClusterMapOutput struct{ *pulumi.OutputState }

func (ElasticClusterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ElasticCluster)(nil)).Elem()
}

func (o ElasticClusterMapOutput) ToElasticClusterMapOutput() ElasticClusterMapOutput {
	return o
}

func (o ElasticClusterMapOutput) ToElasticClusterMapOutputWithContext(ctx context.Context) ElasticClusterMapOutput {
	return o
}

func (o ElasticClusterMapOutput) MapIndex(k pulumi.StringInput) ElasticClusterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ElasticCluster {
		return vs[0].(map[string]*ElasticCluster)[vs[1].(string)]
	}).(ElasticClusterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticClusterInput)(nil)).Elem(), &ElasticCluster{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticClusterArrayInput)(nil)).Elem(), ElasticClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticClusterMapInput)(nil)).Elem(), ElasticClusterMap{})
	pulumi.RegisterOutputType(ElasticClusterOutput{})
	pulumi.RegisterOutputType(ElasticClusterArrayOutput{})
	pulumi.RegisterOutputType(ElasticClusterMapOutput{})
}
