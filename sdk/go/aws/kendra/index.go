// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kendra

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Index struct {
	pulumi.CustomResourceState

	Arn                                  pulumi.StringOutput                                 `pulumi:"arn"`
	CapacityUnits                        IndexCapacityUnitsOutput                            `pulumi:"capacityUnits"`
	CreatedAt                            pulumi.StringOutput                                 `pulumi:"createdAt"`
	Description                          pulumi.StringPtrOutput                              `pulumi:"description"`
	DocumentMetadataConfigurationUpdates IndexDocumentMetadataConfigurationUpdateArrayOutput `pulumi:"documentMetadataConfigurationUpdates"`
	Edition                              pulumi.StringPtrOutput                              `pulumi:"edition"`
	ErrorMessage                         pulumi.StringOutput                                 `pulumi:"errorMessage"`
	IndexStatistics                      IndexIndexStatisticArrayOutput                      `pulumi:"indexStatistics"`
	Name                                 pulumi.StringOutput                                 `pulumi:"name"`
	RoleArn                              pulumi.StringOutput                                 `pulumi:"roleArn"`
	ServerSideEncryptionConfiguration    IndexServerSideEncryptionConfigurationPtrOutput     `pulumi:"serverSideEncryptionConfiguration"`
	Status                               pulumi.StringOutput                                 `pulumi:"status"`
	Tags                                 pulumi.StringMapOutput                              `pulumi:"tags"`
	TagsAll                              pulumi.StringMapOutput                              `pulumi:"tagsAll"`
	UpdatedAt                            pulumi.StringOutput                                 `pulumi:"updatedAt"`
	UserContextPolicy                    pulumi.StringPtrOutput                              `pulumi:"userContextPolicy"`
	UserGroupResolutionConfiguration     IndexUserGroupResolutionConfigurationPtrOutput      `pulumi:"userGroupResolutionConfiguration"`
	UserTokenConfigurations              IndexUserTokenConfigurationsPtrOutput               `pulumi:"userTokenConfigurations"`
}

// NewIndex registers a new resource with the given unique name, arguments, and options.
func NewIndex(ctx *pulumi.Context,
	name string, args *IndexArgs, opts ...pulumi.ResourceOption) (*Index, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	var resource Index
	err := ctx.RegisterResource("aws:kendra/index:Index", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIndex gets an existing Index resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIndex(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IndexState, opts ...pulumi.ResourceOption) (*Index, error) {
	var resource Index
	err := ctx.ReadResource("aws:kendra/index:Index", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Index resources.
type indexState struct {
	Arn                                  *string                                    `pulumi:"arn"`
	CapacityUnits                        *IndexCapacityUnits                        `pulumi:"capacityUnits"`
	CreatedAt                            *string                                    `pulumi:"createdAt"`
	Description                          *string                                    `pulumi:"description"`
	DocumentMetadataConfigurationUpdates []IndexDocumentMetadataConfigurationUpdate `pulumi:"documentMetadataConfigurationUpdates"`
	Edition                              *string                                    `pulumi:"edition"`
	ErrorMessage                         *string                                    `pulumi:"errorMessage"`
	IndexStatistics                      []IndexIndexStatistic                      `pulumi:"indexStatistics"`
	Name                                 *string                                    `pulumi:"name"`
	RoleArn                              *string                                    `pulumi:"roleArn"`
	ServerSideEncryptionConfiguration    *IndexServerSideEncryptionConfiguration    `pulumi:"serverSideEncryptionConfiguration"`
	Status                               *string                                    `pulumi:"status"`
	Tags                                 map[string]string                          `pulumi:"tags"`
	TagsAll                              map[string]string                          `pulumi:"tagsAll"`
	UpdatedAt                            *string                                    `pulumi:"updatedAt"`
	UserContextPolicy                    *string                                    `pulumi:"userContextPolicy"`
	UserGroupResolutionConfiguration     *IndexUserGroupResolutionConfiguration     `pulumi:"userGroupResolutionConfiguration"`
	UserTokenConfigurations              *IndexUserTokenConfigurations              `pulumi:"userTokenConfigurations"`
}

type IndexState struct {
	Arn                                  pulumi.StringPtrInput
	CapacityUnits                        IndexCapacityUnitsPtrInput
	CreatedAt                            pulumi.StringPtrInput
	Description                          pulumi.StringPtrInput
	DocumentMetadataConfigurationUpdates IndexDocumentMetadataConfigurationUpdateArrayInput
	Edition                              pulumi.StringPtrInput
	ErrorMessage                         pulumi.StringPtrInput
	IndexStatistics                      IndexIndexStatisticArrayInput
	Name                                 pulumi.StringPtrInput
	RoleArn                              pulumi.StringPtrInput
	ServerSideEncryptionConfiguration    IndexServerSideEncryptionConfigurationPtrInput
	Status                               pulumi.StringPtrInput
	Tags                                 pulumi.StringMapInput
	TagsAll                              pulumi.StringMapInput
	UpdatedAt                            pulumi.StringPtrInput
	UserContextPolicy                    pulumi.StringPtrInput
	UserGroupResolutionConfiguration     IndexUserGroupResolutionConfigurationPtrInput
	UserTokenConfigurations              IndexUserTokenConfigurationsPtrInput
}

func (IndexState) ElementType() reflect.Type {
	return reflect.TypeOf((*indexState)(nil)).Elem()
}

type indexArgs struct {
	CapacityUnits                        *IndexCapacityUnits                        `pulumi:"capacityUnits"`
	Description                          *string                                    `pulumi:"description"`
	DocumentMetadataConfigurationUpdates []IndexDocumentMetadataConfigurationUpdate `pulumi:"documentMetadataConfigurationUpdates"`
	Edition                              *string                                    `pulumi:"edition"`
	Name                                 *string                                    `pulumi:"name"`
	RoleArn                              string                                     `pulumi:"roleArn"`
	ServerSideEncryptionConfiguration    *IndexServerSideEncryptionConfiguration    `pulumi:"serverSideEncryptionConfiguration"`
	Tags                                 map[string]string                          `pulumi:"tags"`
	UserContextPolicy                    *string                                    `pulumi:"userContextPolicy"`
	UserGroupResolutionConfiguration     *IndexUserGroupResolutionConfiguration     `pulumi:"userGroupResolutionConfiguration"`
	UserTokenConfigurations              *IndexUserTokenConfigurations              `pulumi:"userTokenConfigurations"`
}

// The set of arguments for constructing a Index resource.
type IndexArgs struct {
	CapacityUnits                        IndexCapacityUnitsPtrInput
	Description                          pulumi.StringPtrInput
	DocumentMetadataConfigurationUpdates IndexDocumentMetadataConfigurationUpdateArrayInput
	Edition                              pulumi.StringPtrInput
	Name                                 pulumi.StringPtrInput
	RoleArn                              pulumi.StringInput
	ServerSideEncryptionConfiguration    IndexServerSideEncryptionConfigurationPtrInput
	Tags                                 pulumi.StringMapInput
	UserContextPolicy                    pulumi.StringPtrInput
	UserGroupResolutionConfiguration     IndexUserGroupResolutionConfigurationPtrInput
	UserTokenConfigurations              IndexUserTokenConfigurationsPtrInput
}

func (IndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*indexArgs)(nil)).Elem()
}

type IndexInput interface {
	pulumi.Input

	ToIndexOutput() IndexOutput
	ToIndexOutputWithContext(ctx context.Context) IndexOutput
}

func (*Index) ElementType() reflect.Type {
	return reflect.TypeOf((**Index)(nil)).Elem()
}

func (i *Index) ToIndexOutput() IndexOutput {
	return i.ToIndexOutputWithContext(context.Background())
}

func (i *Index) ToIndexOutputWithContext(ctx context.Context) IndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexOutput)
}

// IndexArrayInput is an input type that accepts IndexArray and IndexArrayOutput values.
// You can construct a concrete instance of `IndexArrayInput` via:
//
//	IndexArray{ IndexArgs{...} }
type IndexArrayInput interface {
	pulumi.Input

	ToIndexArrayOutput() IndexArrayOutput
	ToIndexArrayOutputWithContext(context.Context) IndexArrayOutput
}

type IndexArray []IndexInput

func (IndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Index)(nil)).Elem()
}

func (i IndexArray) ToIndexArrayOutput() IndexArrayOutput {
	return i.ToIndexArrayOutputWithContext(context.Background())
}

func (i IndexArray) ToIndexArrayOutputWithContext(ctx context.Context) IndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexArrayOutput)
}

// IndexMapInput is an input type that accepts IndexMap and IndexMapOutput values.
// You can construct a concrete instance of `IndexMapInput` via:
//
//	IndexMap{ "key": IndexArgs{...} }
type IndexMapInput interface {
	pulumi.Input

	ToIndexMapOutput() IndexMapOutput
	ToIndexMapOutputWithContext(context.Context) IndexMapOutput
}

type IndexMap map[string]IndexInput

func (IndexMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Index)(nil)).Elem()
}

func (i IndexMap) ToIndexMapOutput() IndexMapOutput {
	return i.ToIndexMapOutputWithContext(context.Background())
}

func (i IndexMap) ToIndexMapOutputWithContext(ctx context.Context) IndexMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexMapOutput)
}

type IndexOutput struct{ *pulumi.OutputState }

func (IndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Index)(nil)).Elem()
}

func (o IndexOutput) ToIndexOutput() IndexOutput {
	return o
}

func (o IndexOutput) ToIndexOutputWithContext(ctx context.Context) IndexOutput {
	return o
}

func (o IndexOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Index) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o IndexOutput) CapacityUnits() IndexCapacityUnitsOutput {
	return o.ApplyT(func(v *Index) IndexCapacityUnitsOutput { return v.CapacityUnits }).(IndexCapacityUnitsOutput)
}

func (o IndexOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Index) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o IndexOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Index) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o IndexOutput) DocumentMetadataConfigurationUpdates() IndexDocumentMetadataConfigurationUpdateArrayOutput {
	return o.ApplyT(func(v *Index) IndexDocumentMetadataConfigurationUpdateArrayOutput {
		return v.DocumentMetadataConfigurationUpdates
	}).(IndexDocumentMetadataConfigurationUpdateArrayOutput)
}

func (o IndexOutput) Edition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Index) pulumi.StringPtrOutput { return v.Edition }).(pulumi.StringPtrOutput)
}

func (o IndexOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v *Index) pulumi.StringOutput { return v.ErrorMessage }).(pulumi.StringOutput)
}

func (o IndexOutput) IndexStatistics() IndexIndexStatisticArrayOutput {
	return o.ApplyT(func(v *Index) IndexIndexStatisticArrayOutput { return v.IndexStatistics }).(IndexIndexStatisticArrayOutput)
}

func (o IndexOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Index) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o IndexOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Index) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

func (o IndexOutput) ServerSideEncryptionConfiguration() IndexServerSideEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v *Index) IndexServerSideEncryptionConfigurationPtrOutput {
		return v.ServerSideEncryptionConfiguration
	}).(IndexServerSideEncryptionConfigurationPtrOutput)
}

func (o IndexOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Index) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o IndexOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Index) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o IndexOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Index) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o IndexOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Index) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

func (o IndexOutput) UserContextPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Index) pulumi.StringPtrOutput { return v.UserContextPolicy }).(pulumi.StringPtrOutput)
}

func (o IndexOutput) UserGroupResolutionConfiguration() IndexUserGroupResolutionConfigurationPtrOutput {
	return o.ApplyT(func(v *Index) IndexUserGroupResolutionConfigurationPtrOutput {
		return v.UserGroupResolutionConfiguration
	}).(IndexUserGroupResolutionConfigurationPtrOutput)
}

func (o IndexOutput) UserTokenConfigurations() IndexUserTokenConfigurationsPtrOutput {
	return o.ApplyT(func(v *Index) IndexUserTokenConfigurationsPtrOutput { return v.UserTokenConfigurations }).(IndexUserTokenConfigurationsPtrOutput)
}

type IndexArrayOutput struct{ *pulumi.OutputState }

func (IndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Index)(nil)).Elem()
}

func (o IndexArrayOutput) ToIndexArrayOutput() IndexArrayOutput {
	return o
}

func (o IndexArrayOutput) ToIndexArrayOutputWithContext(ctx context.Context) IndexArrayOutput {
	return o
}

func (o IndexArrayOutput) Index(i pulumi.IntInput) IndexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Index {
		return vs[0].([]*Index)[vs[1].(int)]
	}).(IndexOutput)
}

type IndexMapOutput struct{ *pulumi.OutputState }

func (IndexMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Index)(nil)).Elem()
}

func (o IndexMapOutput) ToIndexMapOutput() IndexMapOutput {
	return o
}

func (o IndexMapOutput) ToIndexMapOutputWithContext(ctx context.Context) IndexMapOutput {
	return o
}

func (o IndexMapOutput) MapIndex(k pulumi.StringInput) IndexOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Index {
		return vs[0].(map[string]*Index)[vs[1].(string)]
	}).(IndexOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IndexInput)(nil)).Elem(), &Index{})
	pulumi.RegisterInputType(reflect.TypeOf((*IndexArrayInput)(nil)).Elem(), IndexArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IndexMapInput)(nil)).Elem(), IndexMap{})
	pulumi.RegisterOutputType(IndexOutput{})
	pulumi.RegisterOutputType(IndexArrayOutput{})
	pulumi.RegisterOutputType(IndexMapOutput{})
}
