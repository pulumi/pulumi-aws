// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kendra

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an Amazon Kendra Index resource.
//
// ## Example Usage
// ### Basic
//
// ```go
// package main
//
// import (
//
//	kendra/index "github.com/pulumi/pulumi-aws/sdk/v1/go/aws/kendra/index"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// _, err := kendra/index.NewIndex(ctx, "example", &kendra/index.IndexArgs{
// Description: "example",
// Edition: "DEVELOPER_EDITION",
// RoleArn: aws_iam_role.This.Arn,
// Tags: map[string]interface{}{
// "Key1": "Value1",
// },
// })
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
// ### With capacity units
//
// ```go
// package main
//
// import (
//
//	kendra/index "github.com/pulumi/pulumi-aws/sdk/v1/go/aws/kendra/index"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// _, err := kendra/index.NewIndex(ctx, "example", &kendra/index.IndexArgs{
// Edition: "DEVELOPER_EDITION",
// RoleArn: aws_iam_role.This.Arn,
// CapacityUnits: map[string]interface{}{
// "queryCapacityUnits": 2,
// "storageCapacityUnits": 2,
// },
// })
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
// ### With server side encryption configuration
//
// ```go
// package main
//
// import (
//
//	kendra/index "github.com/pulumi/pulumi-aws/sdk/v1/go/aws/kendra/index"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// _, err := kendra/index.NewIndex(ctx, "example", &kendra/index.IndexArgs{
// RoleArn: aws_iam_role.This.Arn,
// ServerSideEncryptionConfiguration: map[string]interface{}{
// "kmsKeyId": data.Aws_kms_key.This.Arn,
// },
// })
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
// ### With user group resolution configuration
//
// ```go
// package main
//
// import (
//
//	kendra/index "github.com/pulumi/pulumi-aws/sdk/v1/go/aws/kendra/index"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// _, err := kendra/index.NewIndex(ctx, "example", &kendra/index.IndexArgs{
// RoleArn: aws_iam_role.This.Arn,
// UserGroupResolutionConfiguration: map[string]interface{}{
// "userGroupResolutionMode": "AWS_SSO",
// },
// })
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
// ### With Document Metadata Configuration Updates
// ### Specifying the predefined elements
//
// Refer to [Amazon Kendra documentation on built-in document fields](https://docs.aws.amazon.com/kendra/latest/dg/hiw-index.html#index-reserved-fields) for more information.
//
// ```go
// package main
//
// import (
//
//	kendra/index "github.com/pulumi/pulumi-aws/sdk/v1/go/aws/kendra/index"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// _, err := kendra/index.NewIndex(ctx, "example", &kendra/index.IndexArgs{
// RoleArn: aws_iam_role.This.Arn,
// DocumentMetadataConfigurationUpdates: []interface{}{
// map[string]interface{}{
// "name": "_authors",
// "type": "STRING_LIST_VALUE",
// "search": map[string]interface{}{
// "displayable": false,
// "facetable": false,
// "searchable": false,
// "sortable": false,
// },
// "relevance": map[string]interface{}{
// "importance": 1,
// },
// },
// map[string]interface{}{
// "name": "_category",
// "type": "STRING_VALUE",
// "search": map[string]interface{}{
// "displayable": false,
// "facetable": false,
// "searchable": false,
// "sortable": true,
// },
// "relevance": map[string]interface{}{
// "importance": 1,
// "valuesImportanceMap": nil,
// },
// },
// map[string]interface{}{
// "name": "_created_at",
// "type": "DATE_VALUE",
// "search": map[string]interface{}{
// "displayable": false,
// "facetable": false,
// "searchable": false,
// "sortable": true,
// },
// "relevance": map[string]interface{}{
// "freshness": false,
// "importance": 1,
// "duration": "25920000s",
// "rankOrder": "ASCENDING",
// },
// },
// map[string]interface{}{
// "name": "_data_source_id",
// "type": "STRING_VALUE",
// "search": map[string]interface{}{
// "displayable": false,
// "facetable": false,
// "searchable": false,
// "sortable": true,
// },
// "relevance": map[string]interface{}{
// "importance": 1,
// "valuesImportanceMap": nil,
// },
// },
// map[string]interface{}{
// "name": "_document_title",
// "type": "STRING_VALUE",
// "search": map[string]interface{}{
// "displayable": true,
// "facetable": false,
// "searchable": true,
// "sortable": true,
// },
// "relevance": map[string]interface{}{
// "importance": 2,
// "valuesImportanceMap": nil,
// },
// },
// map[string]interface{}{
// "name": "_excerpt_page_number",
// "type": "LONG_VALUE",
// "search": map[string]interface{}{
// "displayable": false,
// "facetable": false,
// "searchable": false,
// "sortable": false,
// },
// "relevance": map[string]interface{}{
// "importance": 2,
// "rankOrder": "ASCENDING",
// },
// },
// map[string]interface{}{
// "name": "_faq_id",
// "type": "STRING_VALUE",
// "search": map[string]interface{}{
// "displayable": false,
// "facetable": false,
// "searchable": false,
// "sortable": true,
// },
// "relevance": map[string]interface{}{
// "importance": 1,
// "valuesImportanceMap": nil,
// },
// },
// map[string]interface{}{
// "name": "_file_type",
// "type": "STRING_VALUE",
// "search": map[string]interface{}{
// "displayable": false,
// "facetable": false,
// "searchable": false,
// "sortable": true,
// },
// "relevance": map[string]interface{}{
// "importance": 1,
// "valuesImportanceMap": nil,
// },
// },
// map[string]interface{}{
// "name": "_language_code",
// "type": "STRING_VALUE",
// "search": map[string]interface{}{
// "displayable": false,
// "facetable": false,
// "searchable": false,
// "sortable": true,
// },
// "relevance": map[string]interface{}{
// "importance": 1,
// "valuesImportanceMap": nil,
// },
// },
// map[string]interface{}{
// "name": "_last_updated_at",
// "type": "DATE_VALUE",
// "search": map[string]interface{}{
// "displayable": false,
// "facetable": false,
// "searchable": false,
// "sortable": true,
// },
// "relevance": map[string]interface{}{
// "freshness": false,
// "importance": 1,
// "duration": "25920000s",
// "rankOrder": "ASCENDING",
// },
// },
// map[string]interface{}{
// "name": "_source_uri",
// "type": "STRING_VALUE",
// "search": map[string]interface{}{
// "displayable": true,
// "facetable": false,
// "searchable": false,
// "sortable": false,
// },
// "relevance": map[string]interface{}{
// "importance": 1,
// "valuesImportanceMap": nil,
// },
// },
// map[string]interface{}{
// "name": "_tenant_id",
// "type": "STRING_VALUE",
// "search": map[string]interface{}{
// "displayable": false,
// "facetable": false,
// "searchable": false,
// "sortable": true,
// },
// "relevance": map[string]interface{}{
// "importance": 1,
// "valuesImportanceMap": nil,
// },
// },
// map[string]interface{}{
// "name": "_version",
// "type": "STRING_VALUE",
// "search": map[string]interface{}{
// "displayable": false,
// "facetable": false,
// "searchable": false,
// "sortable": true,
// },
// "relevance": map[string]interface{}{
// "importance": 1,
// "valuesImportanceMap": nil,
// },
// },
// map[string]interface{}{
// "name": "_view_count",
// "type": "LONG_VALUE",
// "search": map[string]interface{}{
// "displayable": false,
// "facetable": false,
// "searchable": false,
// "sortable": true,
// },
// "relevance": map[string]interface{}{
// "importance": 1,
// "rankOrder": "ASCENDING",
// },
// },
// },
// })
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
// ### Appending additional elements
//
// The example below shows additional elements with names, `example-string-value`, `example-long-value`, `example-string-list-value`, `example-date-value` representing the 4 types of `STRING_VALUE`, `LONG_VALUE`, `STRING_LIST_VALUE`, `DATE_VALUE` respectively.
//
// ```go
// package main
//
// import (
//
//	kendra/index "github.com/pulumi/pulumi-aws/sdk/v1/go/aws/kendra/index"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// _, err := kendra/index.NewIndex(ctx, "example", &kendra/index.IndexArgs{
// RoleArn: aws_iam_role.This.Arn,
// DocumentMetadataConfigurationUpdates: []interface{}{
// map[string]interface{}{
// "name": "_authors",
// "type": "STRING_LIST_VALUE",
// "search": map[string]interface{}{
// "displayable": false,
// "facetable": false,
// "searchable": false,
// "sortable": false,
// },
// "relevance": map[string]interface{}{
// "importance": 1,
// },
// },
// map[string]interface{}{
// "name": "_category",
// "type": "STRING_VALUE",
// "search": map[string]interface{}{
// "displayable": false,
// "facetable": false,
// "searchable": false,
// "sortable": true,
// },
// "relevance": map[string]interface{}{
// "importance": 1,
// "valuesImportanceMap": nil,
// },
// },
// map[string]interface{}{
// "name": "_created_at",
// "type": "DATE_VALUE",
// "search": map[string]interface{}{
// "displayable": false,
// "facetable": false,
// "searchable": false,
// "sortable": true,
// },
// "relevance": map[string]interface{}{
// "freshness": false,
// "importance": 1,
// "duration": "25920000s",
// "rankOrder": "ASCENDING",
// },
// },
// map[string]interface{}{
// "name": "_data_source_id",
// "type": "STRING_VALUE",
// "search": map[string]interface{}{
// "displayable": false,
// "facetable": false,
// "searchable": false,
// "sortable": true,
// },
// "relevance": map[string]interface{}{
// "importance": 1,
// "valuesImportanceMap": nil,
// },
// },
// map[string]interface{}{
// "name": "_document_title",
// "type": "STRING_VALUE",
// "search": map[string]interface{}{
// "displayable": true,
// "facetable": false,
// "searchable": true,
// "sortable": true,
// },
// "relevance": map[string]interface{}{
// "importance": 2,
// "valuesImportanceMap": nil,
// },
// },
// map[string]interface{}{
// "name": "_excerpt_page_number",
// "type": "LONG_VALUE",
// "search": map[string]interface{}{
// "displayable": false,
// "facetable": false,
// "searchable": false,
// "sortable": false,
// },
// "relevance": map[string]interface{}{
// "importance": 2,
// "rankOrder": "ASCENDING",
// },
// },
// map[string]interface{}{
// "name": "_faq_id",
// "type": "STRING_VALUE",
// "search": map[string]interface{}{
// "displayable": false,
// "facetable": false,
// "searchable": false,
// "sortable": true,
// },
// "relevance": map[string]interface{}{
// "importance": 1,
// "valuesImportanceMap": nil,
// },
// },
// map[string]interface{}{
// "name": "_file_type",
// "type": "STRING_VALUE",
// "search": map[string]interface{}{
// "displayable": false,
// "facetable": false,
// "searchable": false,
// "sortable": true,
// },
// "relevance": map[string]interface{}{
// "importance": 1,
// "valuesImportanceMap": nil,
// },
// },
// map[string]interface{}{
// "name": "_language_code",
// "type": "STRING_VALUE",
// "search": map[string]interface{}{
// "displayable": false,
// "facetable": false,
// "searchable": false,
// "sortable": true,
// },
// "relevance": map[string]interface{}{
// "importance": 1,
// "valuesImportanceMap": nil,
// },
// },
// map[string]interface{}{
// "name": "_last_updated_at",
// "type": "DATE_VALUE",
// "search": map[string]interface{}{
// "displayable": false,
// "facetable": false,
// "searchable": false,
// "sortable": true,
// },
// "relevance": map[string]interface{}{
// "freshness": false,
// "importance": 1,
// "duration": "25920000s",
// "rankOrder": "ASCENDING",
// },
// },
// map[string]interface{}{
// "name": "_source_uri",
// "type": "STRING_VALUE",
// "search": map[string]interface{}{
// "displayable": true,
// "facetable": false,
// "searchable": false,
// "sortable": false,
// },
// "relevance": map[string]interface{}{
// "importance": 1,
// "valuesImportanceMap": nil,
// },
// },
// map[string]interface{}{
// "name": "_tenant_id",
// "type": "STRING_VALUE",
// "search": map[string]interface{}{
// "displayable": false,
// "facetable": false,
// "searchable": false,
// "sortable": true,
// },
// "relevance": map[string]interface{}{
// "importance": 1,
// "valuesImportanceMap": nil,
// },
// },
// map[string]interface{}{
// "name": "_version",
// "type": "STRING_VALUE",
// "search": map[string]interface{}{
// "displayable": false,
// "facetable": false,
// "searchable": false,
// "sortable": true,
// },
// "relevance": map[string]interface{}{
// "importance": 1,
// "valuesImportanceMap": nil,
// },
// },
// map[string]interface{}{
// "name": "_view_count",
// "type": "LONG_VALUE",
// "search": map[string]interface{}{
// "displayable": false,
// "facetable": false,
// "searchable": false,
// "sortable": true,
// },
// "relevance": map[string]interface{}{
// "importance": 1,
// "rankOrder": "ASCENDING",
// },
// },
// map[string]interface{}{
// "name": "example-string-value",
// "type": "STRING_VALUE",
// "search": map[string]interface{}{
// "displayable": true,
// "facetable": true,
// "searchable": true,
// "sortable": true,
// },
// "relevance": map[string]interface{}{
// "importance": 1,
// "valuesImportanceMap": nil,
// },
// },
// map[string]interface{}{
// "name": "example-long-value",
// "type": "LONG_VALUE",
// "search": map[string]interface{}{
// "displayable": true,
// "facetable": true,
// "searchable": false,
// "sortable": true,
// },
// "relevance": map[string]interface{}{
// "importance": 1,
// "rankOrder": "ASCENDING",
// },
// },
// map[string]interface{}{
// "name": "example-string-list-value",
// "type": "STRING_LIST_VALUE",
// "search": map[string]interface{}{
// "displayable": true,
// "facetable": true,
// "searchable": true,
// "sortable": false,
// },
// "relevance": map[string]interface{}{
// "importance": 1,
// },
// },
// map[string]interface{}{
// "name": "example-date-value",
// "type": "DATE_VALUE",
// "search": map[string]interface{}{
// "displayable": true,
// "facetable": true,
// "searchable": false,
// "sortable": false,
// },
// "relevance": map[string]interface{}{
// "freshness": false,
// "importance": 1,
// "duration": "25920000s",
// "rankOrder": "ASCENDING",
// },
// },
// },
// })
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
// ### With JSON token type configuration
//
// ```go
// package main
//
// import (
//
//	kendra/index "github.com/pulumi/pulumi-aws/sdk/v1/go/aws/kendra/index"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// _, err := kendra/index.NewIndex(ctx, "example", &kendra/index.IndexArgs{
// RoleArn: aws_iam_role.This.Arn,
// UserTokenConfigurations: map[string]interface{}{
// "jsonTokenTypeConfiguration": map[string]interface{}{
// "groupAttributeField": "groups",
// "userNameAttributeField": "username",
// },
// },
// })
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
//
// ## Import
//
// Using `pulumi import`, import Amazon Kendra Indexes using its `id`. For example:
//
// ```sh
//
//	$ pulumi import aws:kendra/index:Index example 12345678-1234-5678-9123-123456789123
//
// ```
type Index struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the Index.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// A block that sets the number of additional document storage and query capacity units that should be used by the index. Detailed below.
	CapacityUnits IndexCapacityUnitsOutput `pulumi:"capacityUnits"`
	// The Unix datetime that the index was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The description of the Index.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// One or more blocks that specify the configuration settings for any metadata applied to the documents in the index. Minimum number of 0 items. Maximum number of 500 items. If specified, you must define all elements, including those that are provided by default. These index fields are documented at [Amazon Kendra Index documentation](https://docs.aws.amazon.com/kendra/latest/dg/hiw-index.html). For an example resource that defines these default index fields, refer to the default example above. For an example resource that appends additional index fields, refer to the append example above. All arguments for each block must be specified. Note that blocks cannot be removed since index fields cannot be deleted. This argument is detailed below.
	DocumentMetadataConfigurationUpdates IndexDocumentMetadataConfigurationUpdateArrayOutput `pulumi:"documentMetadataConfigurationUpdates"`
	// The Amazon Kendra edition to use for the index. Choose `DEVELOPER_EDITION` for indexes intended for development, testing, or proof of concept. Use `ENTERPRISE_EDITION` for your production databases. Once you set the edition for an index, it can't be changed. Defaults to `ENTERPRISE_EDITION`
	Edition pulumi.StringPtrOutput `pulumi:"edition"`
	// When the Status field value is `FAILED`, this contains a message that explains why.
	ErrorMessage pulumi.StringOutput `pulumi:"errorMessage"`
	// A block that provides information about the number of FAQ questions and answers and the number of text documents indexed. Detailed below.
	IndexStatistics IndexIndexStatisticArrayOutput `pulumi:"indexStatistics"`
	// Specifies the name of the Index.
	Name pulumi.StringOutput `pulumi:"name"`
	// An AWS Identity and Access Management (IAM) role that gives Amazon Kendra permissions to access your Amazon CloudWatch logs and metrics. This is also the role you use when you call the `BatchPutDocument` API to index documents from an Amazon S3 bucket.
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
	// A block that specifies the identifier of the AWS KMS customer managed key (CMK) that's used to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric CMKs. Detailed below.
	ServerSideEncryptionConfiguration IndexServerSideEncryptionConfigurationPtrOutput `pulumi:"serverSideEncryptionConfiguration"`
	// The current status of the index. When the value is `ACTIVE`, the index is ready for use. If the Status field value is `FAILED`, the `errorMessage` field contains a message that explains why.
	Status pulumi.StringOutput `pulumi:"status"`
	// Tags to apply to the Index. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
	// The Unix datetime that the index was last updated.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// The user context policy. Valid values are `ATTRIBUTE_FILTER` or `USER_TOKEN`. For more information, refer to [UserContextPolicy](https://docs.aws.amazon.com/kendra/latest/APIReference/API_CreateIndex.html#kendra-CreateIndex-request-UserContextPolicy). Defaults to `ATTRIBUTE_FILTER`.
	UserContextPolicy pulumi.StringPtrOutput `pulumi:"userContextPolicy"`
	// A block that enables fetching access levels of groups and users from an AWS Single Sign-On identity source. To configure this, see [UserGroupResolutionConfiguration](https://docs.aws.amazon.com/kendra/latest/dg/API_UserGroupResolutionConfiguration.html). Detailed below.
	UserGroupResolutionConfiguration IndexUserGroupResolutionConfigurationPtrOutput `pulumi:"userGroupResolutionConfiguration"`
	// A block that specifies the user token configuration. Detailed below.
	UserTokenConfigurations IndexUserTokenConfigurationsPtrOutput `pulumi:"userTokenConfigurations"`
}

// NewIndex registers a new resource with the given unique name, arguments, and options.
func NewIndex(ctx *pulumi.Context,
	name string, args *IndexArgs, opts ...pulumi.ResourceOption) (*Index, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Index
	err := ctx.RegisterResource("aws:kendra/index:Index", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIndex gets an existing Index resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIndex(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IndexState, opts ...pulumi.ResourceOption) (*Index, error) {
	var resource Index
	err := ctx.ReadResource("aws:kendra/index:Index", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Index resources.
type indexState struct {
	// The Amazon Resource Name (ARN) of the Index.
	Arn *string `pulumi:"arn"`
	// A block that sets the number of additional document storage and query capacity units that should be used by the index. Detailed below.
	CapacityUnits *IndexCapacityUnits `pulumi:"capacityUnits"`
	// The Unix datetime that the index was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The description of the Index.
	Description *string `pulumi:"description"`
	// One or more blocks that specify the configuration settings for any metadata applied to the documents in the index. Minimum number of 0 items. Maximum number of 500 items. If specified, you must define all elements, including those that are provided by default. These index fields are documented at [Amazon Kendra Index documentation](https://docs.aws.amazon.com/kendra/latest/dg/hiw-index.html). For an example resource that defines these default index fields, refer to the default example above. For an example resource that appends additional index fields, refer to the append example above. All arguments for each block must be specified. Note that blocks cannot be removed since index fields cannot be deleted. This argument is detailed below.
	DocumentMetadataConfigurationUpdates []IndexDocumentMetadataConfigurationUpdate `pulumi:"documentMetadataConfigurationUpdates"`
	// The Amazon Kendra edition to use for the index. Choose `DEVELOPER_EDITION` for indexes intended for development, testing, or proof of concept. Use `ENTERPRISE_EDITION` for your production databases. Once you set the edition for an index, it can't be changed. Defaults to `ENTERPRISE_EDITION`
	Edition *string `pulumi:"edition"`
	// When the Status field value is `FAILED`, this contains a message that explains why.
	ErrorMessage *string `pulumi:"errorMessage"`
	// A block that provides information about the number of FAQ questions and answers and the number of text documents indexed. Detailed below.
	IndexStatistics []IndexIndexStatistic `pulumi:"indexStatistics"`
	// Specifies the name of the Index.
	Name *string `pulumi:"name"`
	// An AWS Identity and Access Management (IAM) role that gives Amazon Kendra permissions to access your Amazon CloudWatch logs and metrics. This is also the role you use when you call the `BatchPutDocument` API to index documents from an Amazon S3 bucket.
	RoleArn *string `pulumi:"roleArn"`
	// A block that specifies the identifier of the AWS KMS customer managed key (CMK) that's used to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric CMKs. Detailed below.
	ServerSideEncryptionConfiguration *IndexServerSideEncryptionConfiguration `pulumi:"serverSideEncryptionConfiguration"`
	// The current status of the index. When the value is `ACTIVE`, the index is ready for use. If the Status field value is `FAILED`, the `errorMessage` field contains a message that explains why.
	Status *string `pulumi:"status"`
	// Tags to apply to the Index. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The Unix datetime that the index was last updated.
	UpdatedAt *string `pulumi:"updatedAt"`
	// The user context policy. Valid values are `ATTRIBUTE_FILTER` or `USER_TOKEN`. For more information, refer to [UserContextPolicy](https://docs.aws.amazon.com/kendra/latest/APIReference/API_CreateIndex.html#kendra-CreateIndex-request-UserContextPolicy). Defaults to `ATTRIBUTE_FILTER`.
	UserContextPolicy *string `pulumi:"userContextPolicy"`
	// A block that enables fetching access levels of groups and users from an AWS Single Sign-On identity source. To configure this, see [UserGroupResolutionConfiguration](https://docs.aws.amazon.com/kendra/latest/dg/API_UserGroupResolutionConfiguration.html). Detailed below.
	UserGroupResolutionConfiguration *IndexUserGroupResolutionConfiguration `pulumi:"userGroupResolutionConfiguration"`
	// A block that specifies the user token configuration. Detailed below.
	UserTokenConfigurations *IndexUserTokenConfigurations `pulumi:"userTokenConfigurations"`
}

type IndexState struct {
	// The Amazon Resource Name (ARN) of the Index.
	Arn pulumi.StringPtrInput
	// A block that sets the number of additional document storage and query capacity units that should be used by the index. Detailed below.
	CapacityUnits IndexCapacityUnitsPtrInput
	// The Unix datetime that the index was created.
	CreatedAt pulumi.StringPtrInput
	// The description of the Index.
	Description pulumi.StringPtrInput
	// One or more blocks that specify the configuration settings for any metadata applied to the documents in the index. Minimum number of 0 items. Maximum number of 500 items. If specified, you must define all elements, including those that are provided by default. These index fields are documented at [Amazon Kendra Index documentation](https://docs.aws.amazon.com/kendra/latest/dg/hiw-index.html). For an example resource that defines these default index fields, refer to the default example above. For an example resource that appends additional index fields, refer to the append example above. All arguments for each block must be specified. Note that blocks cannot be removed since index fields cannot be deleted. This argument is detailed below.
	DocumentMetadataConfigurationUpdates IndexDocumentMetadataConfigurationUpdateArrayInput
	// The Amazon Kendra edition to use for the index. Choose `DEVELOPER_EDITION` for indexes intended for development, testing, or proof of concept. Use `ENTERPRISE_EDITION` for your production databases. Once you set the edition for an index, it can't be changed. Defaults to `ENTERPRISE_EDITION`
	Edition pulumi.StringPtrInput
	// When the Status field value is `FAILED`, this contains a message that explains why.
	ErrorMessage pulumi.StringPtrInput
	// A block that provides information about the number of FAQ questions and answers and the number of text documents indexed. Detailed below.
	IndexStatistics IndexIndexStatisticArrayInput
	// Specifies the name of the Index.
	Name pulumi.StringPtrInput
	// An AWS Identity and Access Management (IAM) role that gives Amazon Kendra permissions to access your Amazon CloudWatch logs and metrics. This is also the role you use when you call the `BatchPutDocument` API to index documents from an Amazon S3 bucket.
	RoleArn pulumi.StringPtrInput
	// A block that specifies the identifier of the AWS KMS customer managed key (CMK) that's used to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric CMKs. Detailed below.
	ServerSideEncryptionConfiguration IndexServerSideEncryptionConfigurationPtrInput
	// The current status of the index. When the value is `ACTIVE`, the index is ready for use. If the Status field value is `FAILED`, the `errorMessage` field contains a message that explains why.
	Status pulumi.StringPtrInput
	// Tags to apply to the Index. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapInput
	// The Unix datetime that the index was last updated.
	UpdatedAt pulumi.StringPtrInput
	// The user context policy. Valid values are `ATTRIBUTE_FILTER` or `USER_TOKEN`. For more information, refer to [UserContextPolicy](https://docs.aws.amazon.com/kendra/latest/APIReference/API_CreateIndex.html#kendra-CreateIndex-request-UserContextPolicy). Defaults to `ATTRIBUTE_FILTER`.
	UserContextPolicy pulumi.StringPtrInput
	// A block that enables fetching access levels of groups and users from an AWS Single Sign-On identity source. To configure this, see [UserGroupResolutionConfiguration](https://docs.aws.amazon.com/kendra/latest/dg/API_UserGroupResolutionConfiguration.html). Detailed below.
	UserGroupResolutionConfiguration IndexUserGroupResolutionConfigurationPtrInput
	// A block that specifies the user token configuration. Detailed below.
	UserTokenConfigurations IndexUserTokenConfigurationsPtrInput
}

func (IndexState) ElementType() reflect.Type {
	return reflect.TypeOf((*indexState)(nil)).Elem()
}

type indexArgs struct {
	// A block that sets the number of additional document storage and query capacity units that should be used by the index. Detailed below.
	CapacityUnits *IndexCapacityUnits `pulumi:"capacityUnits"`
	// The description of the Index.
	Description *string `pulumi:"description"`
	// One or more blocks that specify the configuration settings for any metadata applied to the documents in the index. Minimum number of 0 items. Maximum number of 500 items. If specified, you must define all elements, including those that are provided by default. These index fields are documented at [Amazon Kendra Index documentation](https://docs.aws.amazon.com/kendra/latest/dg/hiw-index.html). For an example resource that defines these default index fields, refer to the default example above. For an example resource that appends additional index fields, refer to the append example above. All arguments for each block must be specified. Note that blocks cannot be removed since index fields cannot be deleted. This argument is detailed below.
	DocumentMetadataConfigurationUpdates []IndexDocumentMetadataConfigurationUpdate `pulumi:"documentMetadataConfigurationUpdates"`
	// The Amazon Kendra edition to use for the index. Choose `DEVELOPER_EDITION` for indexes intended for development, testing, or proof of concept. Use `ENTERPRISE_EDITION` for your production databases. Once you set the edition for an index, it can't be changed. Defaults to `ENTERPRISE_EDITION`
	Edition *string `pulumi:"edition"`
	// Specifies the name of the Index.
	Name *string `pulumi:"name"`
	// An AWS Identity and Access Management (IAM) role that gives Amazon Kendra permissions to access your Amazon CloudWatch logs and metrics. This is also the role you use when you call the `BatchPutDocument` API to index documents from an Amazon S3 bucket.
	RoleArn string `pulumi:"roleArn"`
	// A block that specifies the identifier of the AWS KMS customer managed key (CMK) that's used to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric CMKs. Detailed below.
	ServerSideEncryptionConfiguration *IndexServerSideEncryptionConfiguration `pulumi:"serverSideEncryptionConfiguration"`
	// Tags to apply to the Index. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// The user context policy. Valid values are `ATTRIBUTE_FILTER` or `USER_TOKEN`. For more information, refer to [UserContextPolicy](https://docs.aws.amazon.com/kendra/latest/APIReference/API_CreateIndex.html#kendra-CreateIndex-request-UserContextPolicy). Defaults to `ATTRIBUTE_FILTER`.
	UserContextPolicy *string `pulumi:"userContextPolicy"`
	// A block that enables fetching access levels of groups and users from an AWS Single Sign-On identity source. To configure this, see [UserGroupResolutionConfiguration](https://docs.aws.amazon.com/kendra/latest/dg/API_UserGroupResolutionConfiguration.html). Detailed below.
	UserGroupResolutionConfiguration *IndexUserGroupResolutionConfiguration `pulumi:"userGroupResolutionConfiguration"`
	// A block that specifies the user token configuration. Detailed below.
	UserTokenConfigurations *IndexUserTokenConfigurations `pulumi:"userTokenConfigurations"`
}

// The set of arguments for constructing a Index resource.
type IndexArgs struct {
	// A block that sets the number of additional document storage and query capacity units that should be used by the index. Detailed below.
	CapacityUnits IndexCapacityUnitsPtrInput
	// The description of the Index.
	Description pulumi.StringPtrInput
	// One or more blocks that specify the configuration settings for any metadata applied to the documents in the index. Minimum number of 0 items. Maximum number of 500 items. If specified, you must define all elements, including those that are provided by default. These index fields are documented at [Amazon Kendra Index documentation](https://docs.aws.amazon.com/kendra/latest/dg/hiw-index.html). For an example resource that defines these default index fields, refer to the default example above. For an example resource that appends additional index fields, refer to the append example above. All arguments for each block must be specified. Note that blocks cannot be removed since index fields cannot be deleted. This argument is detailed below.
	DocumentMetadataConfigurationUpdates IndexDocumentMetadataConfigurationUpdateArrayInput
	// The Amazon Kendra edition to use for the index. Choose `DEVELOPER_EDITION` for indexes intended for development, testing, or proof of concept. Use `ENTERPRISE_EDITION` for your production databases. Once you set the edition for an index, it can't be changed. Defaults to `ENTERPRISE_EDITION`
	Edition pulumi.StringPtrInput
	// Specifies the name of the Index.
	Name pulumi.StringPtrInput
	// An AWS Identity and Access Management (IAM) role that gives Amazon Kendra permissions to access your Amazon CloudWatch logs and metrics. This is also the role you use when you call the `BatchPutDocument` API to index documents from an Amazon S3 bucket.
	RoleArn pulumi.StringInput
	// A block that specifies the identifier of the AWS KMS customer managed key (CMK) that's used to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric CMKs. Detailed below.
	ServerSideEncryptionConfiguration IndexServerSideEncryptionConfigurationPtrInput
	// Tags to apply to the Index. If configured with a provider
	// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// The user context policy. Valid values are `ATTRIBUTE_FILTER` or `USER_TOKEN`. For more information, refer to [UserContextPolicy](https://docs.aws.amazon.com/kendra/latest/APIReference/API_CreateIndex.html#kendra-CreateIndex-request-UserContextPolicy). Defaults to `ATTRIBUTE_FILTER`.
	UserContextPolicy pulumi.StringPtrInput
	// A block that enables fetching access levels of groups and users from an AWS Single Sign-On identity source. To configure this, see [UserGroupResolutionConfiguration](https://docs.aws.amazon.com/kendra/latest/dg/API_UserGroupResolutionConfiguration.html). Detailed below.
	UserGroupResolutionConfiguration IndexUserGroupResolutionConfigurationPtrInput
	// A block that specifies the user token configuration. Detailed below.
	UserTokenConfigurations IndexUserTokenConfigurationsPtrInput
}

func (IndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*indexArgs)(nil)).Elem()
}

type IndexInput interface {
	pulumi.Input

	ToIndexOutput() IndexOutput
	ToIndexOutputWithContext(ctx context.Context) IndexOutput
}

func (*Index) ElementType() reflect.Type {
	return reflect.TypeOf((**Index)(nil)).Elem()
}

func (i *Index) ToIndexOutput() IndexOutput {
	return i.ToIndexOutputWithContext(context.Background())
}

func (i *Index) ToIndexOutputWithContext(ctx context.Context) IndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexOutput)
}

// IndexArrayInput is an input type that accepts IndexArray and IndexArrayOutput values.
// You can construct a concrete instance of `IndexArrayInput` via:
//
//	IndexArray{ IndexArgs{...} }
type IndexArrayInput interface {
	pulumi.Input

	ToIndexArrayOutput() IndexArrayOutput
	ToIndexArrayOutputWithContext(context.Context) IndexArrayOutput
}

type IndexArray []IndexInput

func (IndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Index)(nil)).Elem()
}

func (i IndexArray) ToIndexArrayOutput() IndexArrayOutput {
	return i.ToIndexArrayOutputWithContext(context.Background())
}

func (i IndexArray) ToIndexArrayOutputWithContext(ctx context.Context) IndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexArrayOutput)
}

// IndexMapInput is an input type that accepts IndexMap and IndexMapOutput values.
// You can construct a concrete instance of `IndexMapInput` via:
//
//	IndexMap{ "key": IndexArgs{...} }
type IndexMapInput interface {
	pulumi.Input

	ToIndexMapOutput() IndexMapOutput
	ToIndexMapOutputWithContext(context.Context) IndexMapOutput
}

type IndexMap map[string]IndexInput

func (IndexMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Index)(nil)).Elem()
}

func (i IndexMap) ToIndexMapOutput() IndexMapOutput {
	return i.ToIndexMapOutputWithContext(context.Background())
}

func (i IndexMap) ToIndexMapOutputWithContext(ctx context.Context) IndexMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexMapOutput)
}

type IndexOutput struct{ *pulumi.OutputState }

func (IndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Index)(nil)).Elem()
}

func (o IndexOutput) ToIndexOutput() IndexOutput {
	return o
}

func (o IndexOutput) ToIndexOutputWithContext(ctx context.Context) IndexOutput {
	return o
}

// The Amazon Resource Name (ARN) of the Index.
func (o IndexOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Index) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// A block that sets the number of additional document storage and query capacity units that should be used by the index. Detailed below.
func (o IndexOutput) CapacityUnits() IndexCapacityUnitsOutput {
	return o.ApplyT(func(v *Index) IndexCapacityUnitsOutput { return v.CapacityUnits }).(IndexCapacityUnitsOutput)
}

// The Unix datetime that the index was created.
func (o IndexOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Index) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the Index.
func (o IndexOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Index) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// One or more blocks that specify the configuration settings for any metadata applied to the documents in the index. Minimum number of 0 items. Maximum number of 500 items. If specified, you must define all elements, including those that are provided by default. These index fields are documented at [Amazon Kendra Index documentation](https://docs.aws.amazon.com/kendra/latest/dg/hiw-index.html). For an example resource that defines these default index fields, refer to the default example above. For an example resource that appends additional index fields, refer to the append example above. All arguments for each block must be specified. Note that blocks cannot be removed since index fields cannot be deleted. This argument is detailed below.
func (o IndexOutput) DocumentMetadataConfigurationUpdates() IndexDocumentMetadataConfigurationUpdateArrayOutput {
	return o.ApplyT(func(v *Index) IndexDocumentMetadataConfigurationUpdateArrayOutput {
		return v.DocumentMetadataConfigurationUpdates
	}).(IndexDocumentMetadataConfigurationUpdateArrayOutput)
}

// The Amazon Kendra edition to use for the index. Choose `DEVELOPER_EDITION` for indexes intended for development, testing, or proof of concept. Use `ENTERPRISE_EDITION` for your production databases. Once you set the edition for an index, it can't be changed. Defaults to `ENTERPRISE_EDITION`
func (o IndexOutput) Edition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Index) pulumi.StringPtrOutput { return v.Edition }).(pulumi.StringPtrOutput)
}

// When the Status field value is `FAILED`, this contains a message that explains why.
func (o IndexOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v *Index) pulumi.StringOutput { return v.ErrorMessage }).(pulumi.StringOutput)
}

// A block that provides information about the number of FAQ questions and answers and the number of text documents indexed. Detailed below.
func (o IndexOutput) IndexStatistics() IndexIndexStatisticArrayOutput {
	return o.ApplyT(func(v *Index) IndexIndexStatisticArrayOutput { return v.IndexStatistics }).(IndexIndexStatisticArrayOutput)
}

// Specifies the name of the Index.
func (o IndexOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Index) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// An AWS Identity and Access Management (IAM) role that gives Amazon Kendra permissions to access your Amazon CloudWatch logs and metrics. This is also the role you use when you call the `BatchPutDocument` API to index documents from an Amazon S3 bucket.
func (o IndexOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Index) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

// A block that specifies the identifier of the AWS KMS customer managed key (CMK) that's used to encrypt data indexed by Amazon Kendra. Amazon Kendra doesn't support asymmetric CMKs. Detailed below.
func (o IndexOutput) ServerSideEncryptionConfiguration() IndexServerSideEncryptionConfigurationPtrOutput {
	return o.ApplyT(func(v *Index) IndexServerSideEncryptionConfigurationPtrOutput {
		return v.ServerSideEncryptionConfiguration
	}).(IndexServerSideEncryptionConfigurationPtrOutput)
}

// The current status of the index. When the value is `ACTIVE`, the index is ready for use. If the Status field value is `FAILED`, the `errorMessage` field contains a message that explains why.
func (o IndexOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Index) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Tags to apply to the Index. If configured with a provider
// `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o IndexOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Index) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
//
// Deprecated: Please use `tags` instead.
func (o IndexOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Index) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

// The Unix datetime that the index was last updated.
func (o IndexOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Index) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The user context policy. Valid values are `ATTRIBUTE_FILTER` or `USER_TOKEN`. For more information, refer to [UserContextPolicy](https://docs.aws.amazon.com/kendra/latest/APIReference/API_CreateIndex.html#kendra-CreateIndex-request-UserContextPolicy). Defaults to `ATTRIBUTE_FILTER`.
func (o IndexOutput) UserContextPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Index) pulumi.StringPtrOutput { return v.UserContextPolicy }).(pulumi.StringPtrOutput)
}

// A block that enables fetching access levels of groups and users from an AWS Single Sign-On identity source. To configure this, see [UserGroupResolutionConfiguration](https://docs.aws.amazon.com/kendra/latest/dg/API_UserGroupResolutionConfiguration.html). Detailed below.
func (o IndexOutput) UserGroupResolutionConfiguration() IndexUserGroupResolutionConfigurationPtrOutput {
	return o.ApplyT(func(v *Index) IndexUserGroupResolutionConfigurationPtrOutput {
		return v.UserGroupResolutionConfiguration
	}).(IndexUserGroupResolutionConfigurationPtrOutput)
}

// A block that specifies the user token configuration. Detailed below.
func (o IndexOutput) UserTokenConfigurations() IndexUserTokenConfigurationsPtrOutput {
	return o.ApplyT(func(v *Index) IndexUserTokenConfigurationsPtrOutput { return v.UserTokenConfigurations }).(IndexUserTokenConfigurationsPtrOutput)
}

type IndexArrayOutput struct{ *pulumi.OutputState }

func (IndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Index)(nil)).Elem()
}

func (o IndexArrayOutput) ToIndexArrayOutput() IndexArrayOutput {
	return o
}

func (o IndexArrayOutput) ToIndexArrayOutputWithContext(ctx context.Context) IndexArrayOutput {
	return o
}

func (o IndexArrayOutput) Index(i pulumi.IntInput) IndexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Index {
		return vs[0].([]*Index)[vs[1].(int)]
	}).(IndexOutput)
}

type IndexMapOutput struct{ *pulumi.OutputState }

func (IndexMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Index)(nil)).Elem()
}

func (o IndexMapOutput) ToIndexMapOutput() IndexMapOutput {
	return o
}

func (o IndexMapOutput) ToIndexMapOutputWithContext(ctx context.Context) IndexMapOutput {
	return o
}

func (o IndexMapOutput) MapIndex(k pulumi.StringInput) IndexOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Index {
		return vs[0].(map[string]*Index)[vs[1].(string)]
	}).(IndexOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IndexInput)(nil)).Elem(), &Index{})
	pulumi.RegisterInputType(reflect.TypeOf((*IndexArrayInput)(nil)).Elem(), IndexArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IndexMapInput)(nil)).Elem(), IndexMap{})
	pulumi.RegisterOutputType(IndexOutput{})
	pulumi.RegisterOutputType(IndexArrayOutput{})
	pulumi.RegisterOutputType(IndexMapOutput{})
}
