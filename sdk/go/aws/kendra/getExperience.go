// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kendra

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupExperience(ctx *pulumi.Context, args *LookupExperienceArgs, opts ...pulumi.InvokeOption) (*LookupExperienceResult, error) {
	var rv LookupExperienceResult
	err := ctx.Invoke("aws:kendra/getExperience:getExperience", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getExperience.
type LookupExperienceArgs struct {
	ExperienceId string `pulumi:"experienceId"`
	IndexId      string `pulumi:"indexId"`
}

// A collection of values returned by getExperience.
type LookupExperienceResult struct {
	Arn            string                       `pulumi:"arn"`
	Configurations []GetExperienceConfiguration `pulumi:"configurations"`
	CreatedAt      string                       `pulumi:"createdAt"`
	Description    string                       `pulumi:"description"`
	Endpoints      []GetExperienceEndpoint      `pulumi:"endpoints"`
	ErrorMessage   string                       `pulumi:"errorMessage"`
	ExperienceId   string                       `pulumi:"experienceId"`
	// The provider-assigned unique ID for this managed resource.
	Id        string `pulumi:"id"`
	IndexId   string `pulumi:"indexId"`
	Name      string `pulumi:"name"`
	RoleArn   string `pulumi:"roleArn"`
	Status    string `pulumi:"status"`
	UpdatedAt string `pulumi:"updatedAt"`
}

func LookupExperienceOutput(ctx *pulumi.Context, args LookupExperienceOutputArgs, opts ...pulumi.InvokeOption) LookupExperienceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupExperienceResult, error) {
			args := v.(LookupExperienceArgs)
			r, err := LookupExperience(ctx, &args, opts...)
			var s LookupExperienceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupExperienceResultOutput)
}

// A collection of arguments for invoking getExperience.
type LookupExperienceOutputArgs struct {
	ExperienceId pulumi.StringInput `pulumi:"experienceId"`
	IndexId      pulumi.StringInput `pulumi:"indexId"`
}

func (LookupExperienceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExperienceArgs)(nil)).Elem()
}

// A collection of values returned by getExperience.
type LookupExperienceResultOutput struct{ *pulumi.OutputState }

func (LookupExperienceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupExperienceResult)(nil)).Elem()
}

func (o LookupExperienceResultOutput) ToLookupExperienceResultOutput() LookupExperienceResultOutput {
	return o
}

func (o LookupExperienceResultOutput) ToLookupExperienceResultOutputWithContext(ctx context.Context) LookupExperienceResultOutput {
	return o
}

func (o LookupExperienceResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperienceResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupExperienceResultOutput) Configurations() GetExperienceConfigurationArrayOutput {
	return o.ApplyT(func(v LookupExperienceResult) []GetExperienceConfiguration { return v.Configurations }).(GetExperienceConfigurationArrayOutput)
}

func (o LookupExperienceResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperienceResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupExperienceResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperienceResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupExperienceResultOutput) Endpoints() GetExperienceEndpointArrayOutput {
	return o.ApplyT(func(v LookupExperienceResult) []GetExperienceEndpoint { return v.Endpoints }).(GetExperienceEndpointArrayOutput)
}

func (o LookupExperienceResultOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperienceResult) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

func (o LookupExperienceResultOutput) ExperienceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperienceResult) string { return v.ExperienceId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupExperienceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperienceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupExperienceResultOutput) IndexId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperienceResult) string { return v.IndexId }).(pulumi.StringOutput)
}

func (o LookupExperienceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperienceResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupExperienceResultOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperienceResult) string { return v.RoleArn }).(pulumi.StringOutput)
}

func (o LookupExperienceResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperienceResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupExperienceResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupExperienceResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupExperienceResultOutput{})
}
