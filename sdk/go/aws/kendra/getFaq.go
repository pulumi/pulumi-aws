// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kendra

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides details about a specific Amazon Kendra Faq.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/kendra"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := kendra.LookupFaq(ctx, &kendra.LookupFaqArgs{
//				FaqId:   "87654321-1234-4321-4321-321987654321",
//				IndexId: "12345678-1234-1234-1234-123456789123",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupFaq(ctx *pulumi.Context, args *LookupFaqArgs, opts ...pulumi.InvokeOption) (*LookupFaqResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFaqResult
	err := ctx.Invoke("aws:kendra/getFaq:getFaq", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFaq.
type LookupFaqArgs struct {
	// Identifier of the FAQ.
	FaqId string `pulumi:"faqId"`
	// Identifier of the index that contains the FAQ.
	IndexId string `pulumi:"indexId"`
	// Metadata that helps organize the FAQs you create.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getFaq.
type LookupFaqResult struct {
	// ARN of the FAQ.
	Arn string `pulumi:"arn"`
	// Unix datetime that the faq was created.
	CreatedAt string `pulumi:"createdAt"`
	// Description of the FAQ.
	Description string `pulumi:"description"`
	// When the `status` field value is `FAILED`, this contains a message that explains why.
	ErrorMessage string `pulumi:"errorMessage"`
	FaqId        string `pulumi:"faqId"`
	// File format used by the input files for the FAQ. Valid Values are `CSV`, `CSV_WITH_HEADER`, `JSON`.
	FileFormat string `pulumi:"fileFormat"`
	// The provider-assigned unique ID for this managed resource.
	Id      string `pulumi:"id"`
	IndexId string `pulumi:"indexId"`
	// Code for a language. This shows a supported language for the FAQ document. For more information on supported languages, including their codes, see [Adding documents in languages other than English](https://docs.aws.amazon.com/kendra/latest/dg/in-adding-languages.html).
	LanguageCode string `pulumi:"languageCode"`
	// Name of the FAQ.
	Name string `pulumi:"name"`
	// ARN of a role with permission to access the S3 bucket that contains the FAQs. For more information, see [IAM Roles for Amazon Kendra](https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html).
	RoleArn string `pulumi:"roleArn"`
	// S3 location of the FAQ input data. Detailed below.
	S3Paths []GetFaqS3Path `pulumi:"s3Paths"`
	// Status of the FAQ. It is ready to use when the status is ACTIVE.
	Status string `pulumi:"status"`
	// Metadata that helps organize the FAQs you create.
	Tags map[string]string `pulumi:"tags"`
	// Date and time that the FAQ was last updated.
	UpdatedAt string `pulumi:"updatedAt"`
}

func LookupFaqOutput(ctx *pulumi.Context, args LookupFaqOutputArgs, opts ...pulumi.InvokeOption) LookupFaqResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFaqResult, error) {
			args := v.(LookupFaqArgs)
			r, err := LookupFaq(ctx, &args, opts...)
			var s LookupFaqResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFaqResultOutput)
}

// A collection of arguments for invoking getFaq.
type LookupFaqOutputArgs struct {
	// Identifier of the FAQ.
	FaqId pulumi.StringInput `pulumi:"faqId"`
	// Identifier of the index that contains the FAQ.
	IndexId pulumi.StringInput `pulumi:"indexId"`
	// Metadata that helps organize the FAQs you create.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupFaqOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFaqArgs)(nil)).Elem()
}

// A collection of values returned by getFaq.
type LookupFaqResultOutput struct{ *pulumi.OutputState }

func (LookupFaqResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFaqResult)(nil)).Elem()
}

func (o LookupFaqResultOutput) ToLookupFaqResultOutput() LookupFaqResultOutput {
	return o
}

func (o LookupFaqResultOutput) ToLookupFaqResultOutputWithContext(ctx context.Context) LookupFaqResultOutput {
	return o
}

func (o LookupFaqResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupFaqResult] {
	return pulumix.Output[LookupFaqResult]{
		OutputState: o.OutputState,
	}
}

// ARN of the FAQ.
func (o LookupFaqResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFaqResult) string { return v.Arn }).(pulumi.StringOutput)
}

// Unix datetime that the faq was created.
func (o LookupFaqResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFaqResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// Description of the FAQ.
func (o LookupFaqResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFaqResult) string { return v.Description }).(pulumi.StringOutput)
}

// When the `status` field value is `FAILED`, this contains a message that explains why.
func (o LookupFaqResultOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFaqResult) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

func (o LookupFaqResultOutput) FaqId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFaqResult) string { return v.FaqId }).(pulumi.StringOutput)
}

// File format used by the input files for the FAQ. Valid Values are `CSV`, `CSV_WITH_HEADER`, `JSON`.
func (o LookupFaqResultOutput) FileFormat() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFaqResult) string { return v.FileFormat }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupFaqResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFaqResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupFaqResultOutput) IndexId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFaqResult) string { return v.IndexId }).(pulumi.StringOutput)
}

// Code for a language. This shows a supported language for the FAQ document. For more information on supported languages, including their codes, see [Adding documents in languages other than English](https://docs.aws.amazon.com/kendra/latest/dg/in-adding-languages.html).
func (o LookupFaqResultOutput) LanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFaqResult) string { return v.LanguageCode }).(pulumi.StringOutput)
}

// Name of the FAQ.
func (o LookupFaqResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFaqResult) string { return v.Name }).(pulumi.StringOutput)
}

// ARN of a role with permission to access the S3 bucket that contains the FAQs. For more information, see [IAM Roles for Amazon Kendra](https://docs.aws.amazon.com/kendra/latest/dg/iam-roles.html).
func (o LookupFaqResultOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFaqResult) string { return v.RoleArn }).(pulumi.StringOutput)
}

// S3 location of the FAQ input data. Detailed below.
func (o LookupFaqResultOutput) S3Paths() GetFaqS3PathArrayOutput {
	return o.ApplyT(func(v LookupFaqResult) []GetFaqS3Path { return v.S3Paths }).(GetFaqS3PathArrayOutput)
}

// Status of the FAQ. It is ready to use when the status is ACTIVE.
func (o LookupFaqResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFaqResult) string { return v.Status }).(pulumi.StringOutput)
}

// Metadata that helps organize the FAQs you create.
func (o LookupFaqResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFaqResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Date and time that the FAQ was last updated.
func (o LookupFaqResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFaqResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFaqResultOutput{})
}
