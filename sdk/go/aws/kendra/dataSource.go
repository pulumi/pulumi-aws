// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kendra

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataSource struct {
	pulumi.CustomResourceState

	Arn                                   pulumi.StringOutput                                      `pulumi:"arn"`
	Configuration                         DataSourceConfigurationPtrOutput                         `pulumi:"configuration"`
	CreatedAt                             pulumi.StringOutput                                      `pulumi:"createdAt"`
	CustomDocumentEnrichmentConfiguration DataSourceCustomDocumentEnrichmentConfigurationPtrOutput `pulumi:"customDocumentEnrichmentConfiguration"`
	DataSourceId                          pulumi.StringOutput                                      `pulumi:"dataSourceId"`
	Description                           pulumi.StringPtrOutput                                   `pulumi:"description"`
	ErrorMessage                          pulumi.StringOutput                                      `pulumi:"errorMessage"`
	IndexId                               pulumi.StringOutput                                      `pulumi:"indexId"`
	LanguageCode                          pulumi.StringOutput                                      `pulumi:"languageCode"`
	Name                                  pulumi.StringOutput                                      `pulumi:"name"`
	RoleArn                               pulumi.StringPtrOutput                                   `pulumi:"roleArn"`
	Schedule                              pulumi.StringPtrOutput                                   `pulumi:"schedule"`
	Status                                pulumi.StringOutput                                      `pulumi:"status"`
	Tags                                  pulumi.StringMapOutput                                   `pulumi:"tags"`
	TagsAll                               pulumi.StringMapOutput                                   `pulumi:"tagsAll"`
	Type                                  pulumi.StringOutput                                      `pulumi:"type"`
	UpdatedAt                             pulumi.StringOutput                                      `pulumi:"updatedAt"`
}

// NewDataSource registers a new resource with the given unique name, arguments, and options.
func NewDataSource(ctx *pulumi.Context,
	name string, args *DataSourceArgs, opts ...pulumi.ResourceOption) (*DataSource, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IndexId == nil {
		return nil, errors.New("invalid value for required argument 'IndexId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	var resource DataSource
	err := ctx.RegisterResource("aws:kendra/dataSource:DataSource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataSource gets an existing DataSource resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataSource(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataSourceState, opts ...pulumi.ResourceOption) (*DataSource, error) {
	var resource DataSource
	err := ctx.ReadResource("aws:kendra/dataSource:DataSource", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataSource resources.
type dataSourceState struct {
	Arn                                   *string                                          `pulumi:"arn"`
	Configuration                         *DataSourceConfiguration                         `pulumi:"configuration"`
	CreatedAt                             *string                                          `pulumi:"createdAt"`
	CustomDocumentEnrichmentConfiguration *DataSourceCustomDocumentEnrichmentConfiguration `pulumi:"customDocumentEnrichmentConfiguration"`
	DataSourceId                          *string                                          `pulumi:"dataSourceId"`
	Description                           *string                                          `pulumi:"description"`
	ErrorMessage                          *string                                          `pulumi:"errorMessage"`
	IndexId                               *string                                          `pulumi:"indexId"`
	LanguageCode                          *string                                          `pulumi:"languageCode"`
	Name                                  *string                                          `pulumi:"name"`
	RoleArn                               *string                                          `pulumi:"roleArn"`
	Schedule                              *string                                          `pulumi:"schedule"`
	Status                                *string                                          `pulumi:"status"`
	Tags                                  map[string]string                                `pulumi:"tags"`
	TagsAll                               map[string]string                                `pulumi:"tagsAll"`
	Type                                  *string                                          `pulumi:"type"`
	UpdatedAt                             *string                                          `pulumi:"updatedAt"`
}

type DataSourceState struct {
	Arn                                   pulumi.StringPtrInput
	Configuration                         DataSourceConfigurationPtrInput
	CreatedAt                             pulumi.StringPtrInput
	CustomDocumentEnrichmentConfiguration DataSourceCustomDocumentEnrichmentConfigurationPtrInput
	DataSourceId                          pulumi.StringPtrInput
	Description                           pulumi.StringPtrInput
	ErrorMessage                          pulumi.StringPtrInput
	IndexId                               pulumi.StringPtrInput
	LanguageCode                          pulumi.StringPtrInput
	Name                                  pulumi.StringPtrInput
	RoleArn                               pulumi.StringPtrInput
	Schedule                              pulumi.StringPtrInput
	Status                                pulumi.StringPtrInput
	Tags                                  pulumi.StringMapInput
	TagsAll                               pulumi.StringMapInput
	Type                                  pulumi.StringPtrInput
	UpdatedAt                             pulumi.StringPtrInput
}

func (DataSourceState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataSourceState)(nil)).Elem()
}

type dataSourceArgs struct {
	Configuration                         *DataSourceConfiguration                         `pulumi:"configuration"`
	CustomDocumentEnrichmentConfiguration *DataSourceCustomDocumentEnrichmentConfiguration `pulumi:"customDocumentEnrichmentConfiguration"`
	Description                           *string                                          `pulumi:"description"`
	IndexId                               string                                           `pulumi:"indexId"`
	LanguageCode                          *string                                          `pulumi:"languageCode"`
	Name                                  *string                                          `pulumi:"name"`
	RoleArn                               *string                                          `pulumi:"roleArn"`
	Schedule                              *string                                          `pulumi:"schedule"`
	Tags                                  map[string]string                                `pulumi:"tags"`
	Type                                  string                                           `pulumi:"type"`
}

// The set of arguments for constructing a DataSource resource.
type DataSourceArgs struct {
	Configuration                         DataSourceConfigurationPtrInput
	CustomDocumentEnrichmentConfiguration DataSourceCustomDocumentEnrichmentConfigurationPtrInput
	Description                           pulumi.StringPtrInput
	IndexId                               pulumi.StringInput
	LanguageCode                          pulumi.StringPtrInput
	Name                                  pulumi.StringPtrInput
	RoleArn                               pulumi.StringPtrInput
	Schedule                              pulumi.StringPtrInput
	Tags                                  pulumi.StringMapInput
	Type                                  pulumi.StringInput
}

func (DataSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataSourceArgs)(nil)).Elem()
}

type DataSourceInput interface {
	pulumi.Input

	ToDataSourceOutput() DataSourceOutput
	ToDataSourceOutputWithContext(ctx context.Context) DataSourceOutput
}

func (*DataSource) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSource)(nil)).Elem()
}

func (i *DataSource) ToDataSourceOutput() DataSourceOutput {
	return i.ToDataSourceOutputWithContext(context.Background())
}

func (i *DataSource) ToDataSourceOutputWithContext(ctx context.Context) DataSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceOutput)
}

// DataSourceArrayInput is an input type that accepts DataSourceArray and DataSourceArrayOutput values.
// You can construct a concrete instance of `DataSourceArrayInput` via:
//
//	DataSourceArray{ DataSourceArgs{...} }
type DataSourceArrayInput interface {
	pulumi.Input

	ToDataSourceArrayOutput() DataSourceArrayOutput
	ToDataSourceArrayOutputWithContext(context.Context) DataSourceArrayOutput
}

type DataSourceArray []DataSourceInput

func (DataSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DataSource)(nil)).Elem()
}

func (i DataSourceArray) ToDataSourceArrayOutput() DataSourceArrayOutput {
	return i.ToDataSourceArrayOutputWithContext(context.Background())
}

func (i DataSourceArray) ToDataSourceArrayOutputWithContext(ctx context.Context) DataSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceArrayOutput)
}

// DataSourceMapInput is an input type that accepts DataSourceMap and DataSourceMapOutput values.
// You can construct a concrete instance of `DataSourceMapInput` via:
//
//	DataSourceMap{ "key": DataSourceArgs{...} }
type DataSourceMapInput interface {
	pulumi.Input

	ToDataSourceMapOutput() DataSourceMapOutput
	ToDataSourceMapOutputWithContext(context.Context) DataSourceMapOutput
}

type DataSourceMap map[string]DataSourceInput

func (DataSourceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DataSource)(nil)).Elem()
}

func (i DataSourceMap) ToDataSourceMapOutput() DataSourceMapOutput {
	return i.ToDataSourceMapOutputWithContext(context.Background())
}

func (i DataSourceMap) ToDataSourceMapOutputWithContext(ctx context.Context) DataSourceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataSourceMapOutput)
}

type DataSourceOutput struct{ *pulumi.OutputState }

func (DataSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataSource)(nil)).Elem()
}

func (o DataSourceOutput) ToDataSourceOutput() DataSourceOutput {
	return o
}

func (o DataSourceOutput) ToDataSourceOutputWithContext(ctx context.Context) DataSourceOutput {
	return o
}

func (o DataSourceOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *DataSource) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o DataSourceOutput) Configuration() DataSourceConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSource) DataSourceConfigurationPtrOutput { return v.Configuration }).(DataSourceConfigurationPtrOutput)
}

func (o DataSourceOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *DataSource) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o DataSourceOutput) CustomDocumentEnrichmentConfiguration() DataSourceCustomDocumentEnrichmentConfigurationPtrOutput {
	return o.ApplyT(func(v *DataSource) DataSourceCustomDocumentEnrichmentConfigurationPtrOutput {
		return v.CustomDocumentEnrichmentConfiguration
	}).(DataSourceCustomDocumentEnrichmentConfigurationPtrOutput)
}

func (o DataSourceOutput) DataSourceId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataSource) pulumi.StringOutput { return v.DataSourceId }).(pulumi.StringOutput)
}

func (o DataSourceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSource) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DataSourceOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v *DataSource) pulumi.StringOutput { return v.ErrorMessage }).(pulumi.StringOutput)
}

func (o DataSourceOutput) IndexId() pulumi.StringOutput {
	return o.ApplyT(func(v *DataSource) pulumi.StringOutput { return v.IndexId }).(pulumi.StringOutput)
}

func (o DataSourceOutput) LanguageCode() pulumi.StringOutput {
	return o.ApplyT(func(v *DataSource) pulumi.StringOutput { return v.LanguageCode }).(pulumi.StringOutput)
}

func (o DataSourceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DataSource) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DataSourceOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSource) pulumi.StringPtrOutput { return v.RoleArn }).(pulumi.StringPtrOutput)
}

func (o DataSourceOutput) Schedule() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataSource) pulumi.StringPtrOutput { return v.Schedule }).(pulumi.StringPtrOutput)
}

func (o DataSourceOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *DataSource) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o DataSourceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataSource) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o DataSourceOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DataSource) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o DataSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *DataSource) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

func (o DataSourceOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *DataSource) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

type DataSourceArrayOutput struct{ *pulumi.OutputState }

func (DataSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DataSource)(nil)).Elem()
}

func (o DataSourceArrayOutput) ToDataSourceArrayOutput() DataSourceArrayOutput {
	return o
}

func (o DataSourceArrayOutput) ToDataSourceArrayOutputWithContext(ctx context.Context) DataSourceArrayOutput {
	return o
}

func (o DataSourceArrayOutput) Index(i pulumi.IntInput) DataSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DataSource {
		return vs[0].([]*DataSource)[vs[1].(int)]
	}).(DataSourceOutput)
}

type DataSourceMapOutput struct{ *pulumi.OutputState }

func (DataSourceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DataSource)(nil)).Elem()
}

func (o DataSourceMapOutput) ToDataSourceMapOutput() DataSourceMapOutput {
	return o
}

func (o DataSourceMapOutput) ToDataSourceMapOutputWithContext(ctx context.Context) DataSourceMapOutput {
	return o
}

func (o DataSourceMapOutput) MapIndex(k pulumi.StringInput) DataSourceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DataSource {
		return vs[0].(map[string]*DataSource)[vs[1].(string)]
	}).(DataSourceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceInput)(nil)).Elem(), &DataSource{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceArrayInput)(nil)).Elem(), DataSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataSourceMapInput)(nil)).Elem(), DataSourceMap{})
	pulumi.RegisterOutputType(DataSourceOutput{})
	pulumi.RegisterOutputType(DataSourceArrayOutput{})
	pulumi.RegisterOutputType(DataSourceMapOutput{})
}
