// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticsearch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type DomainAdvancedSecurityOptions struct {
	// Whether advanced security is enabled.
	Enabled bool `pulumi:"enabled"`
	// Whether the internal user database is enabled. If not set, defaults to `false` by the AWS API.
	InternalUserDatabaseEnabled *bool `pulumi:"internalUserDatabaseEnabled"`
	// Configuration block for the main user. Detailed below.
	MasterUserOptions *DomainAdvancedSecurityOptionsMasterUserOptions `pulumi:"masterUserOptions"`
}

// DomainAdvancedSecurityOptionsInput is an input type that accepts DomainAdvancedSecurityOptionsArgs and DomainAdvancedSecurityOptionsOutput values.
// You can construct a concrete instance of `DomainAdvancedSecurityOptionsInput` via:
//
//	DomainAdvancedSecurityOptionsArgs{...}
type DomainAdvancedSecurityOptionsInput interface {
	pulumi.Input

	ToDomainAdvancedSecurityOptionsOutput() DomainAdvancedSecurityOptionsOutput
	ToDomainAdvancedSecurityOptionsOutputWithContext(context.Context) DomainAdvancedSecurityOptionsOutput
}

type DomainAdvancedSecurityOptionsArgs struct {
	// Whether advanced security is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Whether the internal user database is enabled. If not set, defaults to `false` by the AWS API.
	InternalUserDatabaseEnabled pulumi.BoolPtrInput `pulumi:"internalUserDatabaseEnabled"`
	// Configuration block for the main user. Detailed below.
	MasterUserOptions DomainAdvancedSecurityOptionsMasterUserOptionsPtrInput `pulumi:"masterUserOptions"`
}

func (DomainAdvancedSecurityOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAdvancedSecurityOptions)(nil)).Elem()
}

func (i DomainAdvancedSecurityOptionsArgs) ToDomainAdvancedSecurityOptionsOutput() DomainAdvancedSecurityOptionsOutput {
	return i.ToDomainAdvancedSecurityOptionsOutputWithContext(context.Background())
}

func (i DomainAdvancedSecurityOptionsArgs) ToDomainAdvancedSecurityOptionsOutputWithContext(ctx context.Context) DomainAdvancedSecurityOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAdvancedSecurityOptionsOutput)
}

func (i DomainAdvancedSecurityOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainAdvancedSecurityOptions] {
	return pulumix.Output[DomainAdvancedSecurityOptions]{
		OutputState: i.ToDomainAdvancedSecurityOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainAdvancedSecurityOptionsArgs) ToDomainAdvancedSecurityOptionsPtrOutput() DomainAdvancedSecurityOptionsPtrOutput {
	return i.ToDomainAdvancedSecurityOptionsPtrOutputWithContext(context.Background())
}

func (i DomainAdvancedSecurityOptionsArgs) ToDomainAdvancedSecurityOptionsPtrOutputWithContext(ctx context.Context) DomainAdvancedSecurityOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAdvancedSecurityOptionsOutput).ToDomainAdvancedSecurityOptionsPtrOutputWithContext(ctx)
}

// DomainAdvancedSecurityOptionsPtrInput is an input type that accepts DomainAdvancedSecurityOptionsArgs, DomainAdvancedSecurityOptionsPtr and DomainAdvancedSecurityOptionsPtrOutput values.
// You can construct a concrete instance of `DomainAdvancedSecurityOptionsPtrInput` via:
//
//	        DomainAdvancedSecurityOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainAdvancedSecurityOptionsPtrInput interface {
	pulumi.Input

	ToDomainAdvancedSecurityOptionsPtrOutput() DomainAdvancedSecurityOptionsPtrOutput
	ToDomainAdvancedSecurityOptionsPtrOutputWithContext(context.Context) DomainAdvancedSecurityOptionsPtrOutput
}

type domainAdvancedSecurityOptionsPtrType DomainAdvancedSecurityOptionsArgs

func DomainAdvancedSecurityOptionsPtr(v *DomainAdvancedSecurityOptionsArgs) DomainAdvancedSecurityOptionsPtrInput {
	return (*domainAdvancedSecurityOptionsPtrType)(v)
}

func (*domainAdvancedSecurityOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainAdvancedSecurityOptions)(nil)).Elem()
}

func (i *domainAdvancedSecurityOptionsPtrType) ToDomainAdvancedSecurityOptionsPtrOutput() DomainAdvancedSecurityOptionsPtrOutput {
	return i.ToDomainAdvancedSecurityOptionsPtrOutputWithContext(context.Background())
}

func (i *domainAdvancedSecurityOptionsPtrType) ToDomainAdvancedSecurityOptionsPtrOutputWithContext(ctx context.Context) DomainAdvancedSecurityOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAdvancedSecurityOptionsPtrOutput)
}

func (i *domainAdvancedSecurityOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainAdvancedSecurityOptions] {
	return pulumix.Output[*DomainAdvancedSecurityOptions]{
		OutputState: i.ToDomainAdvancedSecurityOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainAdvancedSecurityOptionsOutput struct{ *pulumi.OutputState }

func (DomainAdvancedSecurityOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAdvancedSecurityOptions)(nil)).Elem()
}

func (o DomainAdvancedSecurityOptionsOutput) ToDomainAdvancedSecurityOptionsOutput() DomainAdvancedSecurityOptionsOutput {
	return o
}

func (o DomainAdvancedSecurityOptionsOutput) ToDomainAdvancedSecurityOptionsOutputWithContext(ctx context.Context) DomainAdvancedSecurityOptionsOutput {
	return o
}

func (o DomainAdvancedSecurityOptionsOutput) ToDomainAdvancedSecurityOptionsPtrOutput() DomainAdvancedSecurityOptionsPtrOutput {
	return o.ToDomainAdvancedSecurityOptionsPtrOutputWithContext(context.Background())
}

func (o DomainAdvancedSecurityOptionsOutput) ToDomainAdvancedSecurityOptionsPtrOutputWithContext(ctx context.Context) DomainAdvancedSecurityOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainAdvancedSecurityOptions) *DomainAdvancedSecurityOptions {
		return &v
	}).(DomainAdvancedSecurityOptionsPtrOutput)
}

func (o DomainAdvancedSecurityOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainAdvancedSecurityOptions] {
	return pulumix.Output[DomainAdvancedSecurityOptions]{
		OutputState: o.OutputState,
	}
}

// Whether advanced security is enabled.
func (o DomainAdvancedSecurityOptionsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DomainAdvancedSecurityOptions) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Whether the internal user database is enabled. If not set, defaults to `false` by the AWS API.
func (o DomainAdvancedSecurityOptionsOutput) InternalUserDatabaseEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainAdvancedSecurityOptions) *bool { return v.InternalUserDatabaseEnabled }).(pulumi.BoolPtrOutput)
}

// Configuration block for the main user. Detailed below.
func (o DomainAdvancedSecurityOptionsOutput) MasterUserOptions() DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput {
	return o.ApplyT(func(v DomainAdvancedSecurityOptions) *DomainAdvancedSecurityOptionsMasterUserOptions {
		return v.MasterUserOptions
	}).(DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput)
}

type DomainAdvancedSecurityOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainAdvancedSecurityOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainAdvancedSecurityOptions)(nil)).Elem()
}

func (o DomainAdvancedSecurityOptionsPtrOutput) ToDomainAdvancedSecurityOptionsPtrOutput() DomainAdvancedSecurityOptionsPtrOutput {
	return o
}

func (o DomainAdvancedSecurityOptionsPtrOutput) ToDomainAdvancedSecurityOptionsPtrOutputWithContext(ctx context.Context) DomainAdvancedSecurityOptionsPtrOutput {
	return o
}

func (o DomainAdvancedSecurityOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainAdvancedSecurityOptions] {
	return pulumix.Output[*DomainAdvancedSecurityOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainAdvancedSecurityOptionsPtrOutput) Elem() DomainAdvancedSecurityOptionsOutput {
	return o.ApplyT(func(v *DomainAdvancedSecurityOptions) DomainAdvancedSecurityOptions {
		if v != nil {
			return *v
		}
		var ret DomainAdvancedSecurityOptions
		return ret
	}).(DomainAdvancedSecurityOptionsOutput)
}

// Whether advanced security is enabled.
func (o DomainAdvancedSecurityOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainAdvancedSecurityOptions) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Whether the internal user database is enabled. If not set, defaults to `false` by the AWS API.
func (o DomainAdvancedSecurityOptionsPtrOutput) InternalUserDatabaseEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainAdvancedSecurityOptions) *bool {
		if v == nil {
			return nil
		}
		return v.InternalUserDatabaseEnabled
	}).(pulumi.BoolPtrOutput)
}

// Configuration block for the main user. Detailed below.
func (o DomainAdvancedSecurityOptionsPtrOutput) MasterUserOptions() DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput {
	return o.ApplyT(func(v *DomainAdvancedSecurityOptions) *DomainAdvancedSecurityOptionsMasterUserOptions {
		if v == nil {
			return nil
		}
		return v.MasterUserOptions
	}).(DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput)
}

type DomainAdvancedSecurityOptionsMasterUserOptions struct {
	// ARN for the main user. Only specify if `internalUserDatabaseEnabled` is not set or set to `false`.
	MasterUserArn *string `pulumi:"masterUserArn"`
	// Main user's username, which is stored in the Amazon Elasticsearch Service domain's internal database. Only specify if `internalUserDatabaseEnabled` is set to `true`.
	MasterUserName *string `pulumi:"masterUserName"`
	// Main user's password, which is stored in the Amazon Elasticsearch Service domain's internal database. Only specify if `internalUserDatabaseEnabled` is set to `true`.
	MasterUserPassword *string `pulumi:"masterUserPassword"`
}

// DomainAdvancedSecurityOptionsMasterUserOptionsInput is an input type that accepts DomainAdvancedSecurityOptionsMasterUserOptionsArgs and DomainAdvancedSecurityOptionsMasterUserOptionsOutput values.
// You can construct a concrete instance of `DomainAdvancedSecurityOptionsMasterUserOptionsInput` via:
//
//	DomainAdvancedSecurityOptionsMasterUserOptionsArgs{...}
type DomainAdvancedSecurityOptionsMasterUserOptionsInput interface {
	pulumi.Input

	ToDomainAdvancedSecurityOptionsMasterUserOptionsOutput() DomainAdvancedSecurityOptionsMasterUserOptionsOutput
	ToDomainAdvancedSecurityOptionsMasterUserOptionsOutputWithContext(context.Context) DomainAdvancedSecurityOptionsMasterUserOptionsOutput
}

type DomainAdvancedSecurityOptionsMasterUserOptionsArgs struct {
	// ARN for the main user. Only specify if `internalUserDatabaseEnabled` is not set or set to `false`.
	MasterUserArn pulumi.StringPtrInput `pulumi:"masterUserArn"`
	// Main user's username, which is stored in the Amazon Elasticsearch Service domain's internal database. Only specify if `internalUserDatabaseEnabled` is set to `true`.
	MasterUserName pulumi.StringPtrInput `pulumi:"masterUserName"`
	// Main user's password, which is stored in the Amazon Elasticsearch Service domain's internal database. Only specify if `internalUserDatabaseEnabled` is set to `true`.
	MasterUserPassword pulumi.StringPtrInput `pulumi:"masterUserPassword"`
}

func (DomainAdvancedSecurityOptionsMasterUserOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAdvancedSecurityOptionsMasterUserOptions)(nil)).Elem()
}

func (i DomainAdvancedSecurityOptionsMasterUserOptionsArgs) ToDomainAdvancedSecurityOptionsMasterUserOptionsOutput() DomainAdvancedSecurityOptionsMasterUserOptionsOutput {
	return i.ToDomainAdvancedSecurityOptionsMasterUserOptionsOutputWithContext(context.Background())
}

func (i DomainAdvancedSecurityOptionsMasterUserOptionsArgs) ToDomainAdvancedSecurityOptionsMasterUserOptionsOutputWithContext(ctx context.Context) DomainAdvancedSecurityOptionsMasterUserOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAdvancedSecurityOptionsMasterUserOptionsOutput)
}

func (i DomainAdvancedSecurityOptionsMasterUserOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainAdvancedSecurityOptionsMasterUserOptions] {
	return pulumix.Output[DomainAdvancedSecurityOptionsMasterUserOptions]{
		OutputState: i.ToDomainAdvancedSecurityOptionsMasterUserOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainAdvancedSecurityOptionsMasterUserOptionsArgs) ToDomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput() DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput {
	return i.ToDomainAdvancedSecurityOptionsMasterUserOptionsPtrOutputWithContext(context.Background())
}

func (i DomainAdvancedSecurityOptionsMasterUserOptionsArgs) ToDomainAdvancedSecurityOptionsMasterUserOptionsPtrOutputWithContext(ctx context.Context) DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAdvancedSecurityOptionsMasterUserOptionsOutput).ToDomainAdvancedSecurityOptionsMasterUserOptionsPtrOutputWithContext(ctx)
}

// DomainAdvancedSecurityOptionsMasterUserOptionsPtrInput is an input type that accepts DomainAdvancedSecurityOptionsMasterUserOptionsArgs, DomainAdvancedSecurityOptionsMasterUserOptionsPtr and DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput values.
// You can construct a concrete instance of `DomainAdvancedSecurityOptionsMasterUserOptionsPtrInput` via:
//
//	        DomainAdvancedSecurityOptionsMasterUserOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainAdvancedSecurityOptionsMasterUserOptionsPtrInput interface {
	pulumi.Input

	ToDomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput() DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput
	ToDomainAdvancedSecurityOptionsMasterUserOptionsPtrOutputWithContext(context.Context) DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput
}

type domainAdvancedSecurityOptionsMasterUserOptionsPtrType DomainAdvancedSecurityOptionsMasterUserOptionsArgs

func DomainAdvancedSecurityOptionsMasterUserOptionsPtr(v *DomainAdvancedSecurityOptionsMasterUserOptionsArgs) DomainAdvancedSecurityOptionsMasterUserOptionsPtrInput {
	return (*domainAdvancedSecurityOptionsMasterUserOptionsPtrType)(v)
}

func (*domainAdvancedSecurityOptionsMasterUserOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainAdvancedSecurityOptionsMasterUserOptions)(nil)).Elem()
}

func (i *domainAdvancedSecurityOptionsMasterUserOptionsPtrType) ToDomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput() DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput {
	return i.ToDomainAdvancedSecurityOptionsMasterUserOptionsPtrOutputWithContext(context.Background())
}

func (i *domainAdvancedSecurityOptionsMasterUserOptionsPtrType) ToDomainAdvancedSecurityOptionsMasterUserOptionsPtrOutputWithContext(ctx context.Context) DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput)
}

func (i *domainAdvancedSecurityOptionsMasterUserOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainAdvancedSecurityOptionsMasterUserOptions] {
	return pulumix.Output[*DomainAdvancedSecurityOptionsMasterUserOptions]{
		OutputState: i.ToDomainAdvancedSecurityOptionsMasterUserOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainAdvancedSecurityOptionsMasterUserOptionsOutput struct{ *pulumi.OutputState }

func (DomainAdvancedSecurityOptionsMasterUserOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAdvancedSecurityOptionsMasterUserOptions)(nil)).Elem()
}

func (o DomainAdvancedSecurityOptionsMasterUserOptionsOutput) ToDomainAdvancedSecurityOptionsMasterUserOptionsOutput() DomainAdvancedSecurityOptionsMasterUserOptionsOutput {
	return o
}

func (o DomainAdvancedSecurityOptionsMasterUserOptionsOutput) ToDomainAdvancedSecurityOptionsMasterUserOptionsOutputWithContext(ctx context.Context) DomainAdvancedSecurityOptionsMasterUserOptionsOutput {
	return o
}

func (o DomainAdvancedSecurityOptionsMasterUserOptionsOutput) ToDomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput() DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput {
	return o.ToDomainAdvancedSecurityOptionsMasterUserOptionsPtrOutputWithContext(context.Background())
}

func (o DomainAdvancedSecurityOptionsMasterUserOptionsOutput) ToDomainAdvancedSecurityOptionsMasterUserOptionsPtrOutputWithContext(ctx context.Context) DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainAdvancedSecurityOptionsMasterUserOptions) *DomainAdvancedSecurityOptionsMasterUserOptions {
		return &v
	}).(DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput)
}

func (o DomainAdvancedSecurityOptionsMasterUserOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainAdvancedSecurityOptionsMasterUserOptions] {
	return pulumix.Output[DomainAdvancedSecurityOptionsMasterUserOptions]{
		OutputState: o.OutputState,
	}
}

// ARN for the main user. Only specify if `internalUserDatabaseEnabled` is not set or set to `false`.
func (o DomainAdvancedSecurityOptionsMasterUserOptionsOutput) MasterUserArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainAdvancedSecurityOptionsMasterUserOptions) *string { return v.MasterUserArn }).(pulumi.StringPtrOutput)
}

// Main user's username, which is stored in the Amazon Elasticsearch Service domain's internal database. Only specify if `internalUserDatabaseEnabled` is set to `true`.
func (o DomainAdvancedSecurityOptionsMasterUserOptionsOutput) MasterUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainAdvancedSecurityOptionsMasterUserOptions) *string { return v.MasterUserName }).(pulumi.StringPtrOutput)
}

// Main user's password, which is stored in the Amazon Elasticsearch Service domain's internal database. Only specify if `internalUserDatabaseEnabled` is set to `true`.
func (o DomainAdvancedSecurityOptionsMasterUserOptionsOutput) MasterUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainAdvancedSecurityOptionsMasterUserOptions) *string { return v.MasterUserPassword }).(pulumi.StringPtrOutput)
}

type DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainAdvancedSecurityOptionsMasterUserOptions)(nil)).Elem()
}

func (o DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput) ToDomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput() DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput {
	return o
}

func (o DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput) ToDomainAdvancedSecurityOptionsMasterUserOptionsPtrOutputWithContext(ctx context.Context) DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput {
	return o
}

func (o DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainAdvancedSecurityOptionsMasterUserOptions] {
	return pulumix.Output[*DomainAdvancedSecurityOptionsMasterUserOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput) Elem() DomainAdvancedSecurityOptionsMasterUserOptionsOutput {
	return o.ApplyT(func(v *DomainAdvancedSecurityOptionsMasterUserOptions) DomainAdvancedSecurityOptionsMasterUserOptions {
		if v != nil {
			return *v
		}
		var ret DomainAdvancedSecurityOptionsMasterUserOptions
		return ret
	}).(DomainAdvancedSecurityOptionsMasterUserOptionsOutput)
}

// ARN for the main user. Only specify if `internalUserDatabaseEnabled` is not set or set to `false`.
func (o DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput) MasterUserArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAdvancedSecurityOptionsMasterUserOptions) *string {
		if v == nil {
			return nil
		}
		return v.MasterUserArn
	}).(pulumi.StringPtrOutput)
}

// Main user's username, which is stored in the Amazon Elasticsearch Service domain's internal database. Only specify if `internalUserDatabaseEnabled` is set to `true`.
func (o DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput) MasterUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAdvancedSecurityOptionsMasterUserOptions) *string {
		if v == nil {
			return nil
		}
		return v.MasterUserName
	}).(pulumi.StringPtrOutput)
}

// Main user's password, which is stored in the Amazon Elasticsearch Service domain's internal database. Only specify if `internalUserDatabaseEnabled` is set to `true`.
func (o DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput) MasterUserPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAdvancedSecurityOptionsMasterUserOptions) *string {
		if v == nil {
			return nil
		}
		return v.MasterUserPassword
	}).(pulumi.StringPtrOutput)
}

type DomainAutoTuneOptions struct {
	// The Auto-Tune desired state for the domain. Valid values: `ENABLED` or `DISABLED`.
	DesiredState string `pulumi:"desiredState"`
	// Configuration block for Auto-Tune maintenance windows. Can be specified multiple times for each maintenance window. Detailed below.
	MaintenanceSchedules []DomainAutoTuneOptionsMaintenanceSchedule `pulumi:"maintenanceSchedules"`
	// Whether to roll back to default Auto-Tune settings when disabling Auto-Tune. Valid values: `DEFAULT_ROLLBACK` or `NO_ROLLBACK`.
	RollbackOnDisable *string `pulumi:"rollbackOnDisable"`
}

// DomainAutoTuneOptionsInput is an input type that accepts DomainAutoTuneOptionsArgs and DomainAutoTuneOptionsOutput values.
// You can construct a concrete instance of `DomainAutoTuneOptionsInput` via:
//
//	DomainAutoTuneOptionsArgs{...}
type DomainAutoTuneOptionsInput interface {
	pulumi.Input

	ToDomainAutoTuneOptionsOutput() DomainAutoTuneOptionsOutput
	ToDomainAutoTuneOptionsOutputWithContext(context.Context) DomainAutoTuneOptionsOutput
}

type DomainAutoTuneOptionsArgs struct {
	// The Auto-Tune desired state for the domain. Valid values: `ENABLED` or `DISABLED`.
	DesiredState pulumi.StringInput `pulumi:"desiredState"`
	// Configuration block for Auto-Tune maintenance windows. Can be specified multiple times for each maintenance window. Detailed below.
	MaintenanceSchedules DomainAutoTuneOptionsMaintenanceScheduleArrayInput `pulumi:"maintenanceSchedules"`
	// Whether to roll back to default Auto-Tune settings when disabling Auto-Tune. Valid values: `DEFAULT_ROLLBACK` or `NO_ROLLBACK`.
	RollbackOnDisable pulumi.StringPtrInput `pulumi:"rollbackOnDisable"`
}

func (DomainAutoTuneOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAutoTuneOptions)(nil)).Elem()
}

func (i DomainAutoTuneOptionsArgs) ToDomainAutoTuneOptionsOutput() DomainAutoTuneOptionsOutput {
	return i.ToDomainAutoTuneOptionsOutputWithContext(context.Background())
}

func (i DomainAutoTuneOptionsArgs) ToDomainAutoTuneOptionsOutputWithContext(ctx context.Context) DomainAutoTuneOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAutoTuneOptionsOutput)
}

func (i DomainAutoTuneOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainAutoTuneOptions] {
	return pulumix.Output[DomainAutoTuneOptions]{
		OutputState: i.ToDomainAutoTuneOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainAutoTuneOptionsArgs) ToDomainAutoTuneOptionsPtrOutput() DomainAutoTuneOptionsPtrOutput {
	return i.ToDomainAutoTuneOptionsPtrOutputWithContext(context.Background())
}

func (i DomainAutoTuneOptionsArgs) ToDomainAutoTuneOptionsPtrOutputWithContext(ctx context.Context) DomainAutoTuneOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAutoTuneOptionsOutput).ToDomainAutoTuneOptionsPtrOutputWithContext(ctx)
}

// DomainAutoTuneOptionsPtrInput is an input type that accepts DomainAutoTuneOptionsArgs, DomainAutoTuneOptionsPtr and DomainAutoTuneOptionsPtrOutput values.
// You can construct a concrete instance of `DomainAutoTuneOptionsPtrInput` via:
//
//	        DomainAutoTuneOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainAutoTuneOptionsPtrInput interface {
	pulumi.Input

	ToDomainAutoTuneOptionsPtrOutput() DomainAutoTuneOptionsPtrOutput
	ToDomainAutoTuneOptionsPtrOutputWithContext(context.Context) DomainAutoTuneOptionsPtrOutput
}

type domainAutoTuneOptionsPtrType DomainAutoTuneOptionsArgs

func DomainAutoTuneOptionsPtr(v *DomainAutoTuneOptionsArgs) DomainAutoTuneOptionsPtrInput {
	return (*domainAutoTuneOptionsPtrType)(v)
}

func (*domainAutoTuneOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainAutoTuneOptions)(nil)).Elem()
}

func (i *domainAutoTuneOptionsPtrType) ToDomainAutoTuneOptionsPtrOutput() DomainAutoTuneOptionsPtrOutput {
	return i.ToDomainAutoTuneOptionsPtrOutputWithContext(context.Background())
}

func (i *domainAutoTuneOptionsPtrType) ToDomainAutoTuneOptionsPtrOutputWithContext(ctx context.Context) DomainAutoTuneOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAutoTuneOptionsPtrOutput)
}

func (i *domainAutoTuneOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainAutoTuneOptions] {
	return pulumix.Output[*DomainAutoTuneOptions]{
		OutputState: i.ToDomainAutoTuneOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainAutoTuneOptionsOutput struct{ *pulumi.OutputState }

func (DomainAutoTuneOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAutoTuneOptions)(nil)).Elem()
}

func (o DomainAutoTuneOptionsOutput) ToDomainAutoTuneOptionsOutput() DomainAutoTuneOptionsOutput {
	return o
}

func (o DomainAutoTuneOptionsOutput) ToDomainAutoTuneOptionsOutputWithContext(ctx context.Context) DomainAutoTuneOptionsOutput {
	return o
}

func (o DomainAutoTuneOptionsOutput) ToDomainAutoTuneOptionsPtrOutput() DomainAutoTuneOptionsPtrOutput {
	return o.ToDomainAutoTuneOptionsPtrOutputWithContext(context.Background())
}

func (o DomainAutoTuneOptionsOutput) ToDomainAutoTuneOptionsPtrOutputWithContext(ctx context.Context) DomainAutoTuneOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainAutoTuneOptions) *DomainAutoTuneOptions {
		return &v
	}).(DomainAutoTuneOptionsPtrOutput)
}

func (o DomainAutoTuneOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainAutoTuneOptions] {
	return pulumix.Output[DomainAutoTuneOptions]{
		OutputState: o.OutputState,
	}
}

// The Auto-Tune desired state for the domain. Valid values: `ENABLED` or `DISABLED`.
func (o DomainAutoTuneOptionsOutput) DesiredState() pulumi.StringOutput {
	return o.ApplyT(func(v DomainAutoTuneOptions) string { return v.DesiredState }).(pulumi.StringOutput)
}

// Configuration block for Auto-Tune maintenance windows. Can be specified multiple times for each maintenance window. Detailed below.
func (o DomainAutoTuneOptionsOutput) MaintenanceSchedules() DomainAutoTuneOptionsMaintenanceScheduleArrayOutput {
	return o.ApplyT(func(v DomainAutoTuneOptions) []DomainAutoTuneOptionsMaintenanceSchedule {
		return v.MaintenanceSchedules
	}).(DomainAutoTuneOptionsMaintenanceScheduleArrayOutput)
}

// Whether to roll back to default Auto-Tune settings when disabling Auto-Tune. Valid values: `DEFAULT_ROLLBACK` or `NO_ROLLBACK`.
func (o DomainAutoTuneOptionsOutput) RollbackOnDisable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainAutoTuneOptions) *string { return v.RollbackOnDisable }).(pulumi.StringPtrOutput)
}

type DomainAutoTuneOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainAutoTuneOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainAutoTuneOptions)(nil)).Elem()
}

func (o DomainAutoTuneOptionsPtrOutput) ToDomainAutoTuneOptionsPtrOutput() DomainAutoTuneOptionsPtrOutput {
	return o
}

func (o DomainAutoTuneOptionsPtrOutput) ToDomainAutoTuneOptionsPtrOutputWithContext(ctx context.Context) DomainAutoTuneOptionsPtrOutput {
	return o
}

func (o DomainAutoTuneOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainAutoTuneOptions] {
	return pulumix.Output[*DomainAutoTuneOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainAutoTuneOptionsPtrOutput) Elem() DomainAutoTuneOptionsOutput {
	return o.ApplyT(func(v *DomainAutoTuneOptions) DomainAutoTuneOptions {
		if v != nil {
			return *v
		}
		var ret DomainAutoTuneOptions
		return ret
	}).(DomainAutoTuneOptionsOutput)
}

// The Auto-Tune desired state for the domain. Valid values: `ENABLED` or `DISABLED`.
func (o DomainAutoTuneOptionsPtrOutput) DesiredState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAutoTuneOptions) *string {
		if v == nil {
			return nil
		}
		return &v.DesiredState
	}).(pulumi.StringPtrOutput)
}

// Configuration block for Auto-Tune maintenance windows. Can be specified multiple times for each maintenance window. Detailed below.
func (o DomainAutoTuneOptionsPtrOutput) MaintenanceSchedules() DomainAutoTuneOptionsMaintenanceScheduleArrayOutput {
	return o.ApplyT(func(v *DomainAutoTuneOptions) []DomainAutoTuneOptionsMaintenanceSchedule {
		if v == nil {
			return nil
		}
		return v.MaintenanceSchedules
	}).(DomainAutoTuneOptionsMaintenanceScheduleArrayOutput)
}

// Whether to roll back to default Auto-Tune settings when disabling Auto-Tune. Valid values: `DEFAULT_ROLLBACK` or `NO_ROLLBACK`.
func (o DomainAutoTuneOptionsPtrOutput) RollbackOnDisable() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainAutoTuneOptions) *string {
		if v == nil {
			return nil
		}
		return v.RollbackOnDisable
	}).(pulumi.StringPtrOutput)
}

type DomainAutoTuneOptionsMaintenanceSchedule struct {
	// A cron expression specifying the recurrence pattern for an Auto-Tune maintenance schedule.
	CronExpressionForRecurrence string `pulumi:"cronExpressionForRecurrence"`
	// Configuration block for the duration of the Auto-Tune maintenance window. Detailed below.
	Duration DomainAutoTuneOptionsMaintenanceScheduleDuration `pulumi:"duration"`
	// Date and time at which to start the Auto-Tune maintenance schedule in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
	StartAt string `pulumi:"startAt"`
}

// DomainAutoTuneOptionsMaintenanceScheduleInput is an input type that accepts DomainAutoTuneOptionsMaintenanceScheduleArgs and DomainAutoTuneOptionsMaintenanceScheduleOutput values.
// You can construct a concrete instance of `DomainAutoTuneOptionsMaintenanceScheduleInput` via:
//
//	DomainAutoTuneOptionsMaintenanceScheduleArgs{...}
type DomainAutoTuneOptionsMaintenanceScheduleInput interface {
	pulumi.Input

	ToDomainAutoTuneOptionsMaintenanceScheduleOutput() DomainAutoTuneOptionsMaintenanceScheduleOutput
	ToDomainAutoTuneOptionsMaintenanceScheduleOutputWithContext(context.Context) DomainAutoTuneOptionsMaintenanceScheduleOutput
}

type DomainAutoTuneOptionsMaintenanceScheduleArgs struct {
	// A cron expression specifying the recurrence pattern for an Auto-Tune maintenance schedule.
	CronExpressionForRecurrence pulumi.StringInput `pulumi:"cronExpressionForRecurrence"`
	// Configuration block for the duration of the Auto-Tune maintenance window. Detailed below.
	Duration DomainAutoTuneOptionsMaintenanceScheduleDurationInput `pulumi:"duration"`
	// Date and time at which to start the Auto-Tune maintenance schedule in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
	StartAt pulumi.StringInput `pulumi:"startAt"`
}

func (DomainAutoTuneOptionsMaintenanceScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAutoTuneOptionsMaintenanceSchedule)(nil)).Elem()
}

func (i DomainAutoTuneOptionsMaintenanceScheduleArgs) ToDomainAutoTuneOptionsMaintenanceScheduleOutput() DomainAutoTuneOptionsMaintenanceScheduleOutput {
	return i.ToDomainAutoTuneOptionsMaintenanceScheduleOutputWithContext(context.Background())
}

func (i DomainAutoTuneOptionsMaintenanceScheduleArgs) ToDomainAutoTuneOptionsMaintenanceScheduleOutputWithContext(ctx context.Context) DomainAutoTuneOptionsMaintenanceScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAutoTuneOptionsMaintenanceScheduleOutput)
}

func (i DomainAutoTuneOptionsMaintenanceScheduleArgs) ToOutput(ctx context.Context) pulumix.Output[DomainAutoTuneOptionsMaintenanceSchedule] {
	return pulumix.Output[DomainAutoTuneOptionsMaintenanceSchedule]{
		OutputState: i.ToDomainAutoTuneOptionsMaintenanceScheduleOutputWithContext(ctx).OutputState,
	}
}

// DomainAutoTuneOptionsMaintenanceScheduleArrayInput is an input type that accepts DomainAutoTuneOptionsMaintenanceScheduleArray and DomainAutoTuneOptionsMaintenanceScheduleArrayOutput values.
// You can construct a concrete instance of `DomainAutoTuneOptionsMaintenanceScheduleArrayInput` via:
//
//	DomainAutoTuneOptionsMaintenanceScheduleArray{ DomainAutoTuneOptionsMaintenanceScheduleArgs{...} }
type DomainAutoTuneOptionsMaintenanceScheduleArrayInput interface {
	pulumi.Input

	ToDomainAutoTuneOptionsMaintenanceScheduleArrayOutput() DomainAutoTuneOptionsMaintenanceScheduleArrayOutput
	ToDomainAutoTuneOptionsMaintenanceScheduleArrayOutputWithContext(context.Context) DomainAutoTuneOptionsMaintenanceScheduleArrayOutput
}

type DomainAutoTuneOptionsMaintenanceScheduleArray []DomainAutoTuneOptionsMaintenanceScheduleInput

func (DomainAutoTuneOptionsMaintenanceScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainAutoTuneOptionsMaintenanceSchedule)(nil)).Elem()
}

func (i DomainAutoTuneOptionsMaintenanceScheduleArray) ToDomainAutoTuneOptionsMaintenanceScheduleArrayOutput() DomainAutoTuneOptionsMaintenanceScheduleArrayOutput {
	return i.ToDomainAutoTuneOptionsMaintenanceScheduleArrayOutputWithContext(context.Background())
}

func (i DomainAutoTuneOptionsMaintenanceScheduleArray) ToDomainAutoTuneOptionsMaintenanceScheduleArrayOutputWithContext(ctx context.Context) DomainAutoTuneOptionsMaintenanceScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAutoTuneOptionsMaintenanceScheduleArrayOutput)
}

func (i DomainAutoTuneOptionsMaintenanceScheduleArray) ToOutput(ctx context.Context) pulumix.Output[[]DomainAutoTuneOptionsMaintenanceSchedule] {
	return pulumix.Output[[]DomainAutoTuneOptionsMaintenanceSchedule]{
		OutputState: i.ToDomainAutoTuneOptionsMaintenanceScheduleArrayOutputWithContext(ctx).OutputState,
	}
}

type DomainAutoTuneOptionsMaintenanceScheduleOutput struct{ *pulumi.OutputState }

func (DomainAutoTuneOptionsMaintenanceScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAutoTuneOptionsMaintenanceSchedule)(nil)).Elem()
}

func (o DomainAutoTuneOptionsMaintenanceScheduleOutput) ToDomainAutoTuneOptionsMaintenanceScheduleOutput() DomainAutoTuneOptionsMaintenanceScheduleOutput {
	return o
}

func (o DomainAutoTuneOptionsMaintenanceScheduleOutput) ToDomainAutoTuneOptionsMaintenanceScheduleOutputWithContext(ctx context.Context) DomainAutoTuneOptionsMaintenanceScheduleOutput {
	return o
}

func (o DomainAutoTuneOptionsMaintenanceScheduleOutput) ToOutput(ctx context.Context) pulumix.Output[DomainAutoTuneOptionsMaintenanceSchedule] {
	return pulumix.Output[DomainAutoTuneOptionsMaintenanceSchedule]{
		OutputState: o.OutputState,
	}
}

// A cron expression specifying the recurrence pattern for an Auto-Tune maintenance schedule.
func (o DomainAutoTuneOptionsMaintenanceScheduleOutput) CronExpressionForRecurrence() pulumi.StringOutput {
	return o.ApplyT(func(v DomainAutoTuneOptionsMaintenanceSchedule) string { return v.CronExpressionForRecurrence }).(pulumi.StringOutput)
}

// Configuration block for the duration of the Auto-Tune maintenance window. Detailed below.
func (o DomainAutoTuneOptionsMaintenanceScheduleOutput) Duration() DomainAutoTuneOptionsMaintenanceScheduleDurationOutput {
	return o.ApplyT(func(v DomainAutoTuneOptionsMaintenanceSchedule) DomainAutoTuneOptionsMaintenanceScheduleDuration {
		return v.Duration
	}).(DomainAutoTuneOptionsMaintenanceScheduleDurationOutput)
}

// Date and time at which to start the Auto-Tune maintenance schedule in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
func (o DomainAutoTuneOptionsMaintenanceScheduleOutput) StartAt() pulumi.StringOutput {
	return o.ApplyT(func(v DomainAutoTuneOptionsMaintenanceSchedule) string { return v.StartAt }).(pulumi.StringOutput)
}

type DomainAutoTuneOptionsMaintenanceScheduleArrayOutput struct{ *pulumi.OutputState }

func (DomainAutoTuneOptionsMaintenanceScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainAutoTuneOptionsMaintenanceSchedule)(nil)).Elem()
}

func (o DomainAutoTuneOptionsMaintenanceScheduleArrayOutput) ToDomainAutoTuneOptionsMaintenanceScheduleArrayOutput() DomainAutoTuneOptionsMaintenanceScheduleArrayOutput {
	return o
}

func (o DomainAutoTuneOptionsMaintenanceScheduleArrayOutput) ToDomainAutoTuneOptionsMaintenanceScheduleArrayOutputWithContext(ctx context.Context) DomainAutoTuneOptionsMaintenanceScheduleArrayOutput {
	return o
}

func (o DomainAutoTuneOptionsMaintenanceScheduleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DomainAutoTuneOptionsMaintenanceSchedule] {
	return pulumix.Output[[]DomainAutoTuneOptionsMaintenanceSchedule]{
		OutputState: o.OutputState,
	}
}

func (o DomainAutoTuneOptionsMaintenanceScheduleArrayOutput) Index(i pulumi.IntInput) DomainAutoTuneOptionsMaintenanceScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainAutoTuneOptionsMaintenanceSchedule {
		return vs[0].([]DomainAutoTuneOptionsMaintenanceSchedule)[vs[1].(int)]
	}).(DomainAutoTuneOptionsMaintenanceScheduleOutput)
}

type DomainAutoTuneOptionsMaintenanceScheduleDuration struct {
	// The unit of time specifying the duration of an Auto-Tune maintenance window. Valid values: `HOURS`.
	Unit string `pulumi:"unit"`
	// An integer specifying the value of the duration of an Auto-Tune maintenance window.
	Value int `pulumi:"value"`
}

// DomainAutoTuneOptionsMaintenanceScheduleDurationInput is an input type that accepts DomainAutoTuneOptionsMaintenanceScheduleDurationArgs and DomainAutoTuneOptionsMaintenanceScheduleDurationOutput values.
// You can construct a concrete instance of `DomainAutoTuneOptionsMaintenanceScheduleDurationInput` via:
//
//	DomainAutoTuneOptionsMaintenanceScheduleDurationArgs{...}
type DomainAutoTuneOptionsMaintenanceScheduleDurationInput interface {
	pulumi.Input

	ToDomainAutoTuneOptionsMaintenanceScheduleDurationOutput() DomainAutoTuneOptionsMaintenanceScheduleDurationOutput
	ToDomainAutoTuneOptionsMaintenanceScheduleDurationOutputWithContext(context.Context) DomainAutoTuneOptionsMaintenanceScheduleDurationOutput
}

type DomainAutoTuneOptionsMaintenanceScheduleDurationArgs struct {
	// The unit of time specifying the duration of an Auto-Tune maintenance window. Valid values: `HOURS`.
	Unit pulumi.StringInput `pulumi:"unit"`
	// An integer specifying the value of the duration of an Auto-Tune maintenance window.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DomainAutoTuneOptionsMaintenanceScheduleDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAutoTuneOptionsMaintenanceScheduleDuration)(nil)).Elem()
}

func (i DomainAutoTuneOptionsMaintenanceScheduleDurationArgs) ToDomainAutoTuneOptionsMaintenanceScheduleDurationOutput() DomainAutoTuneOptionsMaintenanceScheduleDurationOutput {
	return i.ToDomainAutoTuneOptionsMaintenanceScheduleDurationOutputWithContext(context.Background())
}

func (i DomainAutoTuneOptionsMaintenanceScheduleDurationArgs) ToDomainAutoTuneOptionsMaintenanceScheduleDurationOutputWithContext(ctx context.Context) DomainAutoTuneOptionsMaintenanceScheduleDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainAutoTuneOptionsMaintenanceScheduleDurationOutput)
}

func (i DomainAutoTuneOptionsMaintenanceScheduleDurationArgs) ToOutput(ctx context.Context) pulumix.Output[DomainAutoTuneOptionsMaintenanceScheduleDuration] {
	return pulumix.Output[DomainAutoTuneOptionsMaintenanceScheduleDuration]{
		OutputState: i.ToDomainAutoTuneOptionsMaintenanceScheduleDurationOutputWithContext(ctx).OutputState,
	}
}

type DomainAutoTuneOptionsMaintenanceScheduleDurationOutput struct{ *pulumi.OutputState }

func (DomainAutoTuneOptionsMaintenanceScheduleDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainAutoTuneOptionsMaintenanceScheduleDuration)(nil)).Elem()
}

func (o DomainAutoTuneOptionsMaintenanceScheduleDurationOutput) ToDomainAutoTuneOptionsMaintenanceScheduleDurationOutput() DomainAutoTuneOptionsMaintenanceScheduleDurationOutput {
	return o
}

func (o DomainAutoTuneOptionsMaintenanceScheduleDurationOutput) ToDomainAutoTuneOptionsMaintenanceScheduleDurationOutputWithContext(ctx context.Context) DomainAutoTuneOptionsMaintenanceScheduleDurationOutput {
	return o
}

func (o DomainAutoTuneOptionsMaintenanceScheduleDurationOutput) ToOutput(ctx context.Context) pulumix.Output[DomainAutoTuneOptionsMaintenanceScheduleDuration] {
	return pulumix.Output[DomainAutoTuneOptionsMaintenanceScheduleDuration]{
		OutputState: o.OutputState,
	}
}

// The unit of time specifying the duration of an Auto-Tune maintenance window. Valid values: `HOURS`.
func (o DomainAutoTuneOptionsMaintenanceScheduleDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DomainAutoTuneOptionsMaintenanceScheduleDuration) string { return v.Unit }).(pulumi.StringOutput)
}

// An integer specifying the value of the duration of an Auto-Tune maintenance window.
func (o DomainAutoTuneOptionsMaintenanceScheduleDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DomainAutoTuneOptionsMaintenanceScheduleDuration) int { return v.Value }).(pulumi.IntOutput)
}

type DomainClusterConfig struct {
	// Configuration block containing cold storage configuration. Detailed below.
	ColdStorageOptions *DomainClusterConfigColdStorageOptions `pulumi:"coldStorageOptions"`
	// Number of dedicated main nodes in the cluster.
	DedicatedMasterCount *int `pulumi:"dedicatedMasterCount"`
	// Whether dedicated main nodes are enabled for the cluster.
	DedicatedMasterEnabled *bool `pulumi:"dedicatedMasterEnabled"`
	// Instance type of the dedicated main nodes in the cluster.
	DedicatedMasterType *string `pulumi:"dedicatedMasterType"`
	// Number of instances in the cluster.
	InstanceCount *int `pulumi:"instanceCount"`
	// Instance type of data nodes in the cluster.
	InstanceType *string `pulumi:"instanceType"`
	// Number of warm nodes in the cluster. Valid values are between `2` and `150`. `warmCount` can be only and must be set when `warmEnabled` is set to `true`.
	WarmCount *int `pulumi:"warmCount"`
	// Whether to enable warm storage.
	WarmEnabled *bool `pulumi:"warmEnabled"`
	// Instance type for the Elasticsearch cluster's warm nodes. Valid values are `ultrawarm1.medium.elasticsearch`, `ultrawarm1.large.elasticsearch` and `ultrawarm1.xlarge.elasticsearch`. `warmType` can be only and must be set when `warmEnabled` is set to `true`.
	WarmType *string `pulumi:"warmType"`
	// Configuration block containing zone awareness settings. Detailed below.
	ZoneAwarenessConfig *DomainClusterConfigZoneAwarenessConfig `pulumi:"zoneAwarenessConfig"`
	// Whether zone awareness is enabled, set to `true` for multi-az deployment. To enable awareness with three Availability Zones, the `availabilityZoneCount` within the `zoneAwarenessConfig` must be set to `3`.
	ZoneAwarenessEnabled *bool `pulumi:"zoneAwarenessEnabled"`
}

// DomainClusterConfigInput is an input type that accepts DomainClusterConfigArgs and DomainClusterConfigOutput values.
// You can construct a concrete instance of `DomainClusterConfigInput` via:
//
//	DomainClusterConfigArgs{...}
type DomainClusterConfigInput interface {
	pulumi.Input

	ToDomainClusterConfigOutput() DomainClusterConfigOutput
	ToDomainClusterConfigOutputWithContext(context.Context) DomainClusterConfigOutput
}

type DomainClusterConfigArgs struct {
	// Configuration block containing cold storage configuration. Detailed below.
	ColdStorageOptions DomainClusterConfigColdStorageOptionsPtrInput `pulumi:"coldStorageOptions"`
	// Number of dedicated main nodes in the cluster.
	DedicatedMasterCount pulumi.IntPtrInput `pulumi:"dedicatedMasterCount"`
	// Whether dedicated main nodes are enabled for the cluster.
	DedicatedMasterEnabled pulumi.BoolPtrInput `pulumi:"dedicatedMasterEnabled"`
	// Instance type of the dedicated main nodes in the cluster.
	DedicatedMasterType pulumi.StringPtrInput `pulumi:"dedicatedMasterType"`
	// Number of instances in the cluster.
	InstanceCount pulumi.IntPtrInput `pulumi:"instanceCount"`
	// Instance type of data nodes in the cluster.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// Number of warm nodes in the cluster. Valid values are between `2` and `150`. `warmCount` can be only and must be set when `warmEnabled` is set to `true`.
	WarmCount pulumi.IntPtrInput `pulumi:"warmCount"`
	// Whether to enable warm storage.
	WarmEnabled pulumi.BoolPtrInput `pulumi:"warmEnabled"`
	// Instance type for the Elasticsearch cluster's warm nodes. Valid values are `ultrawarm1.medium.elasticsearch`, `ultrawarm1.large.elasticsearch` and `ultrawarm1.xlarge.elasticsearch`. `warmType` can be only and must be set when `warmEnabled` is set to `true`.
	WarmType pulumi.StringPtrInput `pulumi:"warmType"`
	// Configuration block containing zone awareness settings. Detailed below.
	ZoneAwarenessConfig DomainClusterConfigZoneAwarenessConfigPtrInput `pulumi:"zoneAwarenessConfig"`
	// Whether zone awareness is enabled, set to `true` for multi-az deployment. To enable awareness with three Availability Zones, the `availabilityZoneCount` within the `zoneAwarenessConfig` must be set to `3`.
	ZoneAwarenessEnabled pulumi.BoolPtrInput `pulumi:"zoneAwarenessEnabled"`
}

func (DomainClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainClusterConfig)(nil)).Elem()
}

func (i DomainClusterConfigArgs) ToDomainClusterConfigOutput() DomainClusterConfigOutput {
	return i.ToDomainClusterConfigOutputWithContext(context.Background())
}

func (i DomainClusterConfigArgs) ToDomainClusterConfigOutputWithContext(ctx context.Context) DomainClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainClusterConfigOutput)
}

func (i DomainClusterConfigArgs) ToOutput(ctx context.Context) pulumix.Output[DomainClusterConfig] {
	return pulumix.Output[DomainClusterConfig]{
		OutputState: i.ToDomainClusterConfigOutputWithContext(ctx).OutputState,
	}
}

func (i DomainClusterConfigArgs) ToDomainClusterConfigPtrOutput() DomainClusterConfigPtrOutput {
	return i.ToDomainClusterConfigPtrOutputWithContext(context.Background())
}

func (i DomainClusterConfigArgs) ToDomainClusterConfigPtrOutputWithContext(ctx context.Context) DomainClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainClusterConfigOutput).ToDomainClusterConfigPtrOutputWithContext(ctx)
}

// DomainClusterConfigPtrInput is an input type that accepts DomainClusterConfigArgs, DomainClusterConfigPtr and DomainClusterConfigPtrOutput values.
// You can construct a concrete instance of `DomainClusterConfigPtrInput` via:
//
//	        DomainClusterConfigArgs{...}
//
//	or:
//
//	        nil
type DomainClusterConfigPtrInput interface {
	pulumi.Input

	ToDomainClusterConfigPtrOutput() DomainClusterConfigPtrOutput
	ToDomainClusterConfigPtrOutputWithContext(context.Context) DomainClusterConfigPtrOutput
}

type domainClusterConfigPtrType DomainClusterConfigArgs

func DomainClusterConfigPtr(v *DomainClusterConfigArgs) DomainClusterConfigPtrInput {
	return (*domainClusterConfigPtrType)(v)
}

func (*domainClusterConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainClusterConfig)(nil)).Elem()
}

func (i *domainClusterConfigPtrType) ToDomainClusterConfigPtrOutput() DomainClusterConfigPtrOutput {
	return i.ToDomainClusterConfigPtrOutputWithContext(context.Background())
}

func (i *domainClusterConfigPtrType) ToDomainClusterConfigPtrOutputWithContext(ctx context.Context) DomainClusterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainClusterConfigPtrOutput)
}

func (i *domainClusterConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainClusterConfig] {
	return pulumix.Output[*DomainClusterConfig]{
		OutputState: i.ToDomainClusterConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainClusterConfigOutput struct{ *pulumi.OutputState }

func (DomainClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainClusterConfig)(nil)).Elem()
}

func (o DomainClusterConfigOutput) ToDomainClusterConfigOutput() DomainClusterConfigOutput {
	return o
}

func (o DomainClusterConfigOutput) ToDomainClusterConfigOutputWithContext(ctx context.Context) DomainClusterConfigOutput {
	return o
}

func (o DomainClusterConfigOutput) ToDomainClusterConfigPtrOutput() DomainClusterConfigPtrOutput {
	return o.ToDomainClusterConfigPtrOutputWithContext(context.Background())
}

func (o DomainClusterConfigOutput) ToDomainClusterConfigPtrOutputWithContext(ctx context.Context) DomainClusterConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainClusterConfig) *DomainClusterConfig {
		return &v
	}).(DomainClusterConfigPtrOutput)
}

func (o DomainClusterConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DomainClusterConfig] {
	return pulumix.Output[DomainClusterConfig]{
		OutputState: o.OutputState,
	}
}

// Configuration block containing cold storage configuration. Detailed below.
func (o DomainClusterConfigOutput) ColdStorageOptions() DomainClusterConfigColdStorageOptionsPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *DomainClusterConfigColdStorageOptions { return v.ColdStorageOptions }).(DomainClusterConfigColdStorageOptionsPtrOutput)
}

// Number of dedicated main nodes in the cluster.
func (o DomainClusterConfigOutput) DedicatedMasterCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *int { return v.DedicatedMasterCount }).(pulumi.IntPtrOutput)
}

// Whether dedicated main nodes are enabled for the cluster.
func (o DomainClusterConfigOutput) DedicatedMasterEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *bool { return v.DedicatedMasterEnabled }).(pulumi.BoolPtrOutput)
}

// Instance type of the dedicated main nodes in the cluster.
func (o DomainClusterConfigOutput) DedicatedMasterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *string { return v.DedicatedMasterType }).(pulumi.StringPtrOutput)
}

// Number of instances in the cluster.
func (o DomainClusterConfigOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// Instance type of data nodes in the cluster.
func (o DomainClusterConfigOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// Number of warm nodes in the cluster. Valid values are between `2` and `150`. `warmCount` can be only and must be set when `warmEnabled` is set to `true`.
func (o DomainClusterConfigOutput) WarmCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *int { return v.WarmCount }).(pulumi.IntPtrOutput)
}

// Whether to enable warm storage.
func (o DomainClusterConfigOutput) WarmEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *bool { return v.WarmEnabled }).(pulumi.BoolPtrOutput)
}

// Instance type for the Elasticsearch cluster's warm nodes. Valid values are `ultrawarm1.medium.elasticsearch`, `ultrawarm1.large.elasticsearch` and `ultrawarm1.xlarge.elasticsearch`. `warmType` can be only and must be set when `warmEnabled` is set to `true`.
func (o DomainClusterConfigOutput) WarmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *string { return v.WarmType }).(pulumi.StringPtrOutput)
}

// Configuration block containing zone awareness settings. Detailed below.
func (o DomainClusterConfigOutput) ZoneAwarenessConfig() DomainClusterConfigZoneAwarenessConfigPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *DomainClusterConfigZoneAwarenessConfig { return v.ZoneAwarenessConfig }).(DomainClusterConfigZoneAwarenessConfigPtrOutput)
}

// Whether zone awareness is enabled, set to `true` for multi-az deployment. To enable awareness with three Availability Zones, the `availabilityZoneCount` within the `zoneAwarenessConfig` must be set to `3`.
func (o DomainClusterConfigOutput) ZoneAwarenessEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainClusterConfig) *bool { return v.ZoneAwarenessEnabled }).(pulumi.BoolPtrOutput)
}

type DomainClusterConfigPtrOutput struct{ *pulumi.OutputState }

func (DomainClusterConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainClusterConfig)(nil)).Elem()
}

func (o DomainClusterConfigPtrOutput) ToDomainClusterConfigPtrOutput() DomainClusterConfigPtrOutput {
	return o
}

func (o DomainClusterConfigPtrOutput) ToDomainClusterConfigPtrOutputWithContext(ctx context.Context) DomainClusterConfigPtrOutput {
	return o
}

func (o DomainClusterConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainClusterConfig] {
	return pulumix.Output[*DomainClusterConfig]{
		OutputState: o.OutputState,
	}
}

func (o DomainClusterConfigPtrOutput) Elem() DomainClusterConfigOutput {
	return o.ApplyT(func(v *DomainClusterConfig) DomainClusterConfig {
		if v != nil {
			return *v
		}
		var ret DomainClusterConfig
		return ret
	}).(DomainClusterConfigOutput)
}

// Configuration block containing cold storage configuration. Detailed below.
func (o DomainClusterConfigPtrOutput) ColdStorageOptions() DomainClusterConfigColdStorageOptionsPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *DomainClusterConfigColdStorageOptions {
		if v == nil {
			return nil
		}
		return v.ColdStorageOptions
	}).(DomainClusterConfigColdStorageOptionsPtrOutput)
}

// Number of dedicated main nodes in the cluster.
func (o DomainClusterConfigPtrOutput) DedicatedMasterCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *int {
		if v == nil {
			return nil
		}
		return v.DedicatedMasterCount
	}).(pulumi.IntPtrOutput)
}

// Whether dedicated main nodes are enabled for the cluster.
func (o DomainClusterConfigPtrOutput) DedicatedMasterEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *bool {
		if v == nil {
			return nil
		}
		return v.DedicatedMasterEnabled
	}).(pulumi.BoolPtrOutput)
}

// Instance type of the dedicated main nodes in the cluster.
func (o DomainClusterConfigPtrOutput) DedicatedMasterType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.DedicatedMasterType
	}).(pulumi.StringPtrOutput)
}

// Number of instances in the cluster.
func (o DomainClusterConfigPtrOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *int {
		if v == nil {
			return nil
		}
		return v.InstanceCount
	}).(pulumi.IntPtrOutput)
}

// Instance type of data nodes in the cluster.
func (o DomainClusterConfigPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// Number of warm nodes in the cluster. Valid values are between `2` and `150`. `warmCount` can be only and must be set when `warmEnabled` is set to `true`.
func (o DomainClusterConfigPtrOutput) WarmCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *int {
		if v == nil {
			return nil
		}
		return v.WarmCount
	}).(pulumi.IntPtrOutput)
}

// Whether to enable warm storage.
func (o DomainClusterConfigPtrOutput) WarmEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *bool {
		if v == nil {
			return nil
		}
		return v.WarmEnabled
	}).(pulumi.BoolPtrOutput)
}

// Instance type for the Elasticsearch cluster's warm nodes. Valid values are `ultrawarm1.medium.elasticsearch`, `ultrawarm1.large.elasticsearch` and `ultrawarm1.xlarge.elasticsearch`. `warmType` can be only and must be set when `warmEnabled` is set to `true`.
func (o DomainClusterConfigPtrOutput) WarmType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *string {
		if v == nil {
			return nil
		}
		return v.WarmType
	}).(pulumi.StringPtrOutput)
}

// Configuration block containing zone awareness settings. Detailed below.
func (o DomainClusterConfigPtrOutput) ZoneAwarenessConfig() DomainClusterConfigZoneAwarenessConfigPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *DomainClusterConfigZoneAwarenessConfig {
		if v == nil {
			return nil
		}
		return v.ZoneAwarenessConfig
	}).(DomainClusterConfigZoneAwarenessConfigPtrOutput)
}

// Whether zone awareness is enabled, set to `true` for multi-az deployment. To enable awareness with three Availability Zones, the `availabilityZoneCount` within the `zoneAwarenessConfig` must be set to `3`.
func (o DomainClusterConfigPtrOutput) ZoneAwarenessEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfig) *bool {
		if v == nil {
			return nil
		}
		return v.ZoneAwarenessEnabled
	}).(pulumi.BoolPtrOutput)
}

type DomainClusterConfigColdStorageOptions struct {
	// Boolean to enable cold storage for an Elasticsearch domain. Defaults to `false`. Master and ultrawarm nodes must be enabled for cold storage.
	Enabled *bool `pulumi:"enabled"`
}

// DomainClusterConfigColdStorageOptionsInput is an input type that accepts DomainClusterConfigColdStorageOptionsArgs and DomainClusterConfigColdStorageOptionsOutput values.
// You can construct a concrete instance of `DomainClusterConfigColdStorageOptionsInput` via:
//
//	DomainClusterConfigColdStorageOptionsArgs{...}
type DomainClusterConfigColdStorageOptionsInput interface {
	pulumi.Input

	ToDomainClusterConfigColdStorageOptionsOutput() DomainClusterConfigColdStorageOptionsOutput
	ToDomainClusterConfigColdStorageOptionsOutputWithContext(context.Context) DomainClusterConfigColdStorageOptionsOutput
}

type DomainClusterConfigColdStorageOptionsArgs struct {
	// Boolean to enable cold storage for an Elasticsearch domain. Defaults to `false`. Master and ultrawarm nodes must be enabled for cold storage.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (DomainClusterConfigColdStorageOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainClusterConfigColdStorageOptions)(nil)).Elem()
}

func (i DomainClusterConfigColdStorageOptionsArgs) ToDomainClusterConfigColdStorageOptionsOutput() DomainClusterConfigColdStorageOptionsOutput {
	return i.ToDomainClusterConfigColdStorageOptionsOutputWithContext(context.Background())
}

func (i DomainClusterConfigColdStorageOptionsArgs) ToDomainClusterConfigColdStorageOptionsOutputWithContext(ctx context.Context) DomainClusterConfigColdStorageOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainClusterConfigColdStorageOptionsOutput)
}

func (i DomainClusterConfigColdStorageOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainClusterConfigColdStorageOptions] {
	return pulumix.Output[DomainClusterConfigColdStorageOptions]{
		OutputState: i.ToDomainClusterConfigColdStorageOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainClusterConfigColdStorageOptionsArgs) ToDomainClusterConfigColdStorageOptionsPtrOutput() DomainClusterConfigColdStorageOptionsPtrOutput {
	return i.ToDomainClusterConfigColdStorageOptionsPtrOutputWithContext(context.Background())
}

func (i DomainClusterConfigColdStorageOptionsArgs) ToDomainClusterConfigColdStorageOptionsPtrOutputWithContext(ctx context.Context) DomainClusterConfigColdStorageOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainClusterConfigColdStorageOptionsOutput).ToDomainClusterConfigColdStorageOptionsPtrOutputWithContext(ctx)
}

// DomainClusterConfigColdStorageOptionsPtrInput is an input type that accepts DomainClusterConfigColdStorageOptionsArgs, DomainClusterConfigColdStorageOptionsPtr and DomainClusterConfigColdStorageOptionsPtrOutput values.
// You can construct a concrete instance of `DomainClusterConfigColdStorageOptionsPtrInput` via:
//
//	        DomainClusterConfigColdStorageOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainClusterConfigColdStorageOptionsPtrInput interface {
	pulumi.Input

	ToDomainClusterConfigColdStorageOptionsPtrOutput() DomainClusterConfigColdStorageOptionsPtrOutput
	ToDomainClusterConfigColdStorageOptionsPtrOutputWithContext(context.Context) DomainClusterConfigColdStorageOptionsPtrOutput
}

type domainClusterConfigColdStorageOptionsPtrType DomainClusterConfigColdStorageOptionsArgs

func DomainClusterConfigColdStorageOptionsPtr(v *DomainClusterConfigColdStorageOptionsArgs) DomainClusterConfigColdStorageOptionsPtrInput {
	return (*domainClusterConfigColdStorageOptionsPtrType)(v)
}

func (*domainClusterConfigColdStorageOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainClusterConfigColdStorageOptions)(nil)).Elem()
}

func (i *domainClusterConfigColdStorageOptionsPtrType) ToDomainClusterConfigColdStorageOptionsPtrOutput() DomainClusterConfigColdStorageOptionsPtrOutput {
	return i.ToDomainClusterConfigColdStorageOptionsPtrOutputWithContext(context.Background())
}

func (i *domainClusterConfigColdStorageOptionsPtrType) ToDomainClusterConfigColdStorageOptionsPtrOutputWithContext(ctx context.Context) DomainClusterConfigColdStorageOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainClusterConfigColdStorageOptionsPtrOutput)
}

func (i *domainClusterConfigColdStorageOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainClusterConfigColdStorageOptions] {
	return pulumix.Output[*DomainClusterConfigColdStorageOptions]{
		OutputState: i.ToDomainClusterConfigColdStorageOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainClusterConfigColdStorageOptionsOutput struct{ *pulumi.OutputState }

func (DomainClusterConfigColdStorageOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainClusterConfigColdStorageOptions)(nil)).Elem()
}

func (o DomainClusterConfigColdStorageOptionsOutput) ToDomainClusterConfigColdStorageOptionsOutput() DomainClusterConfigColdStorageOptionsOutput {
	return o
}

func (o DomainClusterConfigColdStorageOptionsOutput) ToDomainClusterConfigColdStorageOptionsOutputWithContext(ctx context.Context) DomainClusterConfigColdStorageOptionsOutput {
	return o
}

func (o DomainClusterConfigColdStorageOptionsOutput) ToDomainClusterConfigColdStorageOptionsPtrOutput() DomainClusterConfigColdStorageOptionsPtrOutput {
	return o.ToDomainClusterConfigColdStorageOptionsPtrOutputWithContext(context.Background())
}

func (o DomainClusterConfigColdStorageOptionsOutput) ToDomainClusterConfigColdStorageOptionsPtrOutputWithContext(ctx context.Context) DomainClusterConfigColdStorageOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainClusterConfigColdStorageOptions) *DomainClusterConfigColdStorageOptions {
		return &v
	}).(DomainClusterConfigColdStorageOptionsPtrOutput)
}

func (o DomainClusterConfigColdStorageOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainClusterConfigColdStorageOptions] {
	return pulumix.Output[DomainClusterConfigColdStorageOptions]{
		OutputState: o.OutputState,
	}
}

// Boolean to enable cold storage for an Elasticsearch domain. Defaults to `false`. Master and ultrawarm nodes must be enabled for cold storage.
func (o DomainClusterConfigColdStorageOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainClusterConfigColdStorageOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type DomainClusterConfigColdStorageOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainClusterConfigColdStorageOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainClusterConfigColdStorageOptions)(nil)).Elem()
}

func (o DomainClusterConfigColdStorageOptionsPtrOutput) ToDomainClusterConfigColdStorageOptionsPtrOutput() DomainClusterConfigColdStorageOptionsPtrOutput {
	return o
}

func (o DomainClusterConfigColdStorageOptionsPtrOutput) ToDomainClusterConfigColdStorageOptionsPtrOutputWithContext(ctx context.Context) DomainClusterConfigColdStorageOptionsPtrOutput {
	return o
}

func (o DomainClusterConfigColdStorageOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainClusterConfigColdStorageOptions] {
	return pulumix.Output[*DomainClusterConfigColdStorageOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainClusterConfigColdStorageOptionsPtrOutput) Elem() DomainClusterConfigColdStorageOptionsOutput {
	return o.ApplyT(func(v *DomainClusterConfigColdStorageOptions) DomainClusterConfigColdStorageOptions {
		if v != nil {
			return *v
		}
		var ret DomainClusterConfigColdStorageOptions
		return ret
	}).(DomainClusterConfigColdStorageOptionsOutput)
}

// Boolean to enable cold storage for an Elasticsearch domain. Defaults to `false`. Master and ultrawarm nodes must be enabled for cold storage.
func (o DomainClusterConfigColdStorageOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfigColdStorageOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type DomainClusterConfigZoneAwarenessConfig struct {
	// Number of Availability Zones for the domain to use with `zoneAwarenessEnabled`. Defaults to `2`. Valid values: `2` or `3`.
	AvailabilityZoneCount *int `pulumi:"availabilityZoneCount"`
}

// DomainClusterConfigZoneAwarenessConfigInput is an input type that accepts DomainClusterConfigZoneAwarenessConfigArgs and DomainClusterConfigZoneAwarenessConfigOutput values.
// You can construct a concrete instance of `DomainClusterConfigZoneAwarenessConfigInput` via:
//
//	DomainClusterConfigZoneAwarenessConfigArgs{...}
type DomainClusterConfigZoneAwarenessConfigInput interface {
	pulumi.Input

	ToDomainClusterConfigZoneAwarenessConfigOutput() DomainClusterConfigZoneAwarenessConfigOutput
	ToDomainClusterConfigZoneAwarenessConfigOutputWithContext(context.Context) DomainClusterConfigZoneAwarenessConfigOutput
}

type DomainClusterConfigZoneAwarenessConfigArgs struct {
	// Number of Availability Zones for the domain to use with `zoneAwarenessEnabled`. Defaults to `2`. Valid values: `2` or `3`.
	AvailabilityZoneCount pulumi.IntPtrInput `pulumi:"availabilityZoneCount"`
}

func (DomainClusterConfigZoneAwarenessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainClusterConfigZoneAwarenessConfig)(nil)).Elem()
}

func (i DomainClusterConfigZoneAwarenessConfigArgs) ToDomainClusterConfigZoneAwarenessConfigOutput() DomainClusterConfigZoneAwarenessConfigOutput {
	return i.ToDomainClusterConfigZoneAwarenessConfigOutputWithContext(context.Background())
}

func (i DomainClusterConfigZoneAwarenessConfigArgs) ToDomainClusterConfigZoneAwarenessConfigOutputWithContext(ctx context.Context) DomainClusterConfigZoneAwarenessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainClusterConfigZoneAwarenessConfigOutput)
}

func (i DomainClusterConfigZoneAwarenessConfigArgs) ToOutput(ctx context.Context) pulumix.Output[DomainClusterConfigZoneAwarenessConfig] {
	return pulumix.Output[DomainClusterConfigZoneAwarenessConfig]{
		OutputState: i.ToDomainClusterConfigZoneAwarenessConfigOutputWithContext(ctx).OutputState,
	}
}

func (i DomainClusterConfigZoneAwarenessConfigArgs) ToDomainClusterConfigZoneAwarenessConfigPtrOutput() DomainClusterConfigZoneAwarenessConfigPtrOutput {
	return i.ToDomainClusterConfigZoneAwarenessConfigPtrOutputWithContext(context.Background())
}

func (i DomainClusterConfigZoneAwarenessConfigArgs) ToDomainClusterConfigZoneAwarenessConfigPtrOutputWithContext(ctx context.Context) DomainClusterConfigZoneAwarenessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainClusterConfigZoneAwarenessConfigOutput).ToDomainClusterConfigZoneAwarenessConfigPtrOutputWithContext(ctx)
}

// DomainClusterConfigZoneAwarenessConfigPtrInput is an input type that accepts DomainClusterConfigZoneAwarenessConfigArgs, DomainClusterConfigZoneAwarenessConfigPtr and DomainClusterConfigZoneAwarenessConfigPtrOutput values.
// You can construct a concrete instance of `DomainClusterConfigZoneAwarenessConfigPtrInput` via:
//
//	        DomainClusterConfigZoneAwarenessConfigArgs{...}
//
//	or:
//
//	        nil
type DomainClusterConfigZoneAwarenessConfigPtrInput interface {
	pulumi.Input

	ToDomainClusterConfigZoneAwarenessConfigPtrOutput() DomainClusterConfigZoneAwarenessConfigPtrOutput
	ToDomainClusterConfigZoneAwarenessConfigPtrOutputWithContext(context.Context) DomainClusterConfigZoneAwarenessConfigPtrOutput
}

type domainClusterConfigZoneAwarenessConfigPtrType DomainClusterConfigZoneAwarenessConfigArgs

func DomainClusterConfigZoneAwarenessConfigPtr(v *DomainClusterConfigZoneAwarenessConfigArgs) DomainClusterConfigZoneAwarenessConfigPtrInput {
	return (*domainClusterConfigZoneAwarenessConfigPtrType)(v)
}

func (*domainClusterConfigZoneAwarenessConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainClusterConfigZoneAwarenessConfig)(nil)).Elem()
}

func (i *domainClusterConfigZoneAwarenessConfigPtrType) ToDomainClusterConfigZoneAwarenessConfigPtrOutput() DomainClusterConfigZoneAwarenessConfigPtrOutput {
	return i.ToDomainClusterConfigZoneAwarenessConfigPtrOutputWithContext(context.Background())
}

func (i *domainClusterConfigZoneAwarenessConfigPtrType) ToDomainClusterConfigZoneAwarenessConfigPtrOutputWithContext(ctx context.Context) DomainClusterConfigZoneAwarenessConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainClusterConfigZoneAwarenessConfigPtrOutput)
}

func (i *domainClusterConfigZoneAwarenessConfigPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainClusterConfigZoneAwarenessConfig] {
	return pulumix.Output[*DomainClusterConfigZoneAwarenessConfig]{
		OutputState: i.ToDomainClusterConfigZoneAwarenessConfigPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainClusterConfigZoneAwarenessConfigOutput struct{ *pulumi.OutputState }

func (DomainClusterConfigZoneAwarenessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainClusterConfigZoneAwarenessConfig)(nil)).Elem()
}

func (o DomainClusterConfigZoneAwarenessConfigOutput) ToDomainClusterConfigZoneAwarenessConfigOutput() DomainClusterConfigZoneAwarenessConfigOutput {
	return o
}

func (o DomainClusterConfigZoneAwarenessConfigOutput) ToDomainClusterConfigZoneAwarenessConfigOutputWithContext(ctx context.Context) DomainClusterConfigZoneAwarenessConfigOutput {
	return o
}

func (o DomainClusterConfigZoneAwarenessConfigOutput) ToDomainClusterConfigZoneAwarenessConfigPtrOutput() DomainClusterConfigZoneAwarenessConfigPtrOutput {
	return o.ToDomainClusterConfigZoneAwarenessConfigPtrOutputWithContext(context.Background())
}

func (o DomainClusterConfigZoneAwarenessConfigOutput) ToDomainClusterConfigZoneAwarenessConfigPtrOutputWithContext(ctx context.Context) DomainClusterConfigZoneAwarenessConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainClusterConfigZoneAwarenessConfig) *DomainClusterConfigZoneAwarenessConfig {
		return &v
	}).(DomainClusterConfigZoneAwarenessConfigPtrOutput)
}

func (o DomainClusterConfigZoneAwarenessConfigOutput) ToOutput(ctx context.Context) pulumix.Output[DomainClusterConfigZoneAwarenessConfig] {
	return pulumix.Output[DomainClusterConfigZoneAwarenessConfig]{
		OutputState: o.OutputState,
	}
}

// Number of Availability Zones for the domain to use with `zoneAwarenessEnabled`. Defaults to `2`. Valid values: `2` or `3`.
func (o DomainClusterConfigZoneAwarenessConfigOutput) AvailabilityZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainClusterConfigZoneAwarenessConfig) *int { return v.AvailabilityZoneCount }).(pulumi.IntPtrOutput)
}

type DomainClusterConfigZoneAwarenessConfigPtrOutput struct{ *pulumi.OutputState }

func (DomainClusterConfigZoneAwarenessConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainClusterConfigZoneAwarenessConfig)(nil)).Elem()
}

func (o DomainClusterConfigZoneAwarenessConfigPtrOutput) ToDomainClusterConfigZoneAwarenessConfigPtrOutput() DomainClusterConfigZoneAwarenessConfigPtrOutput {
	return o
}

func (o DomainClusterConfigZoneAwarenessConfigPtrOutput) ToDomainClusterConfigZoneAwarenessConfigPtrOutputWithContext(ctx context.Context) DomainClusterConfigZoneAwarenessConfigPtrOutput {
	return o
}

func (o DomainClusterConfigZoneAwarenessConfigPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainClusterConfigZoneAwarenessConfig] {
	return pulumix.Output[*DomainClusterConfigZoneAwarenessConfig]{
		OutputState: o.OutputState,
	}
}

func (o DomainClusterConfigZoneAwarenessConfigPtrOutput) Elem() DomainClusterConfigZoneAwarenessConfigOutput {
	return o.ApplyT(func(v *DomainClusterConfigZoneAwarenessConfig) DomainClusterConfigZoneAwarenessConfig {
		if v != nil {
			return *v
		}
		var ret DomainClusterConfigZoneAwarenessConfig
		return ret
	}).(DomainClusterConfigZoneAwarenessConfigOutput)
}

// Number of Availability Zones for the domain to use with `zoneAwarenessEnabled`. Defaults to `2`. Valid values: `2` or `3`.
func (o DomainClusterConfigZoneAwarenessConfigPtrOutput) AvailabilityZoneCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainClusterConfigZoneAwarenessConfig) *int {
		if v == nil {
			return nil
		}
		return v.AvailabilityZoneCount
	}).(pulumi.IntPtrOutput)
}

type DomainCognitoOptions struct {
	// Whether Amazon Cognito authentication with Kibana is enabled or not.
	Enabled *bool `pulumi:"enabled"`
	// ID of the Cognito Identity Pool to use.
	IdentityPoolId string `pulumi:"identityPoolId"`
	// ARN of the IAM role that has the AmazonESCognitoAccess policy attached.
	RoleArn string `pulumi:"roleArn"`
	// ID of the Cognito User Pool to use.
	UserPoolId string `pulumi:"userPoolId"`
}

// DomainCognitoOptionsInput is an input type that accepts DomainCognitoOptionsArgs and DomainCognitoOptionsOutput values.
// You can construct a concrete instance of `DomainCognitoOptionsInput` via:
//
//	DomainCognitoOptionsArgs{...}
type DomainCognitoOptionsInput interface {
	pulumi.Input

	ToDomainCognitoOptionsOutput() DomainCognitoOptionsOutput
	ToDomainCognitoOptionsOutputWithContext(context.Context) DomainCognitoOptionsOutput
}

type DomainCognitoOptionsArgs struct {
	// Whether Amazon Cognito authentication with Kibana is enabled or not.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// ID of the Cognito Identity Pool to use.
	IdentityPoolId pulumi.StringInput `pulumi:"identityPoolId"`
	// ARN of the IAM role that has the AmazonESCognitoAccess policy attached.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// ID of the Cognito User Pool to use.
	UserPoolId pulumi.StringInput `pulumi:"userPoolId"`
}

func (DomainCognitoOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCognitoOptions)(nil)).Elem()
}

func (i DomainCognitoOptionsArgs) ToDomainCognitoOptionsOutput() DomainCognitoOptionsOutput {
	return i.ToDomainCognitoOptionsOutputWithContext(context.Background())
}

func (i DomainCognitoOptionsArgs) ToDomainCognitoOptionsOutputWithContext(ctx context.Context) DomainCognitoOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCognitoOptionsOutput)
}

func (i DomainCognitoOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainCognitoOptions] {
	return pulumix.Output[DomainCognitoOptions]{
		OutputState: i.ToDomainCognitoOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainCognitoOptionsArgs) ToDomainCognitoOptionsPtrOutput() DomainCognitoOptionsPtrOutput {
	return i.ToDomainCognitoOptionsPtrOutputWithContext(context.Background())
}

func (i DomainCognitoOptionsArgs) ToDomainCognitoOptionsPtrOutputWithContext(ctx context.Context) DomainCognitoOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCognitoOptionsOutput).ToDomainCognitoOptionsPtrOutputWithContext(ctx)
}

// DomainCognitoOptionsPtrInput is an input type that accepts DomainCognitoOptionsArgs, DomainCognitoOptionsPtr and DomainCognitoOptionsPtrOutput values.
// You can construct a concrete instance of `DomainCognitoOptionsPtrInput` via:
//
//	        DomainCognitoOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainCognitoOptionsPtrInput interface {
	pulumi.Input

	ToDomainCognitoOptionsPtrOutput() DomainCognitoOptionsPtrOutput
	ToDomainCognitoOptionsPtrOutputWithContext(context.Context) DomainCognitoOptionsPtrOutput
}

type domainCognitoOptionsPtrType DomainCognitoOptionsArgs

func DomainCognitoOptionsPtr(v *DomainCognitoOptionsArgs) DomainCognitoOptionsPtrInput {
	return (*domainCognitoOptionsPtrType)(v)
}

func (*domainCognitoOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainCognitoOptions)(nil)).Elem()
}

func (i *domainCognitoOptionsPtrType) ToDomainCognitoOptionsPtrOutput() DomainCognitoOptionsPtrOutput {
	return i.ToDomainCognitoOptionsPtrOutputWithContext(context.Background())
}

func (i *domainCognitoOptionsPtrType) ToDomainCognitoOptionsPtrOutputWithContext(ctx context.Context) DomainCognitoOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainCognitoOptionsPtrOutput)
}

func (i *domainCognitoOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainCognitoOptions] {
	return pulumix.Output[*DomainCognitoOptions]{
		OutputState: i.ToDomainCognitoOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainCognitoOptionsOutput struct{ *pulumi.OutputState }

func (DomainCognitoOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainCognitoOptions)(nil)).Elem()
}

func (o DomainCognitoOptionsOutput) ToDomainCognitoOptionsOutput() DomainCognitoOptionsOutput {
	return o
}

func (o DomainCognitoOptionsOutput) ToDomainCognitoOptionsOutputWithContext(ctx context.Context) DomainCognitoOptionsOutput {
	return o
}

func (o DomainCognitoOptionsOutput) ToDomainCognitoOptionsPtrOutput() DomainCognitoOptionsPtrOutput {
	return o.ToDomainCognitoOptionsPtrOutputWithContext(context.Background())
}

func (o DomainCognitoOptionsOutput) ToDomainCognitoOptionsPtrOutputWithContext(ctx context.Context) DomainCognitoOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainCognitoOptions) *DomainCognitoOptions {
		return &v
	}).(DomainCognitoOptionsPtrOutput)
}

func (o DomainCognitoOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainCognitoOptions] {
	return pulumix.Output[DomainCognitoOptions]{
		OutputState: o.OutputState,
	}
}

// Whether Amazon Cognito authentication with Kibana is enabled or not.
func (o DomainCognitoOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainCognitoOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// ID of the Cognito Identity Pool to use.
func (o DomainCognitoOptionsOutput) IdentityPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v DomainCognitoOptions) string { return v.IdentityPoolId }).(pulumi.StringOutput)
}

// ARN of the IAM role that has the AmazonESCognitoAccess policy attached.
func (o DomainCognitoOptionsOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v DomainCognitoOptions) string { return v.RoleArn }).(pulumi.StringOutput)
}

// ID of the Cognito User Pool to use.
func (o DomainCognitoOptionsOutput) UserPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v DomainCognitoOptions) string { return v.UserPoolId }).(pulumi.StringOutput)
}

type DomainCognitoOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainCognitoOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainCognitoOptions)(nil)).Elem()
}

func (o DomainCognitoOptionsPtrOutput) ToDomainCognitoOptionsPtrOutput() DomainCognitoOptionsPtrOutput {
	return o
}

func (o DomainCognitoOptionsPtrOutput) ToDomainCognitoOptionsPtrOutputWithContext(ctx context.Context) DomainCognitoOptionsPtrOutput {
	return o
}

func (o DomainCognitoOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainCognitoOptions] {
	return pulumix.Output[*DomainCognitoOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainCognitoOptionsPtrOutput) Elem() DomainCognitoOptionsOutput {
	return o.ApplyT(func(v *DomainCognitoOptions) DomainCognitoOptions {
		if v != nil {
			return *v
		}
		var ret DomainCognitoOptions
		return ret
	}).(DomainCognitoOptionsOutput)
}

// Whether Amazon Cognito authentication with Kibana is enabled or not.
func (o DomainCognitoOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainCognitoOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// ID of the Cognito Identity Pool to use.
func (o DomainCognitoOptionsPtrOutput) IdentityPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainCognitoOptions) *string {
		if v == nil {
			return nil
		}
		return &v.IdentityPoolId
	}).(pulumi.StringPtrOutput)
}

// ARN of the IAM role that has the AmazonESCognitoAccess policy attached.
func (o DomainCognitoOptionsPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainCognitoOptions) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// ID of the Cognito User Pool to use.
func (o DomainCognitoOptionsPtrOutput) UserPoolId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainCognitoOptions) *string {
		if v == nil {
			return nil
		}
		return &v.UserPoolId
	}).(pulumi.StringPtrOutput)
}

type DomainDomainEndpointOptions struct {
	// Fully qualified domain for your custom endpoint.
	CustomEndpoint *string `pulumi:"customEndpoint"`
	// ACM certificate ARN for your custom endpoint.
	CustomEndpointCertificateArn *string `pulumi:"customEndpointCertificateArn"`
	// Whether to enable custom endpoint for the Elasticsearch domain.
	CustomEndpointEnabled *bool `pulumi:"customEndpointEnabled"`
	// Whether or not to require HTTPS. Defaults to `true`.
	EnforceHttps *bool `pulumi:"enforceHttps"`
	// Name of the TLS security policy that needs to be applied to the HTTPS endpoint. Valid values:  `Policy-Min-TLS-1-0-2019-07` and `Policy-Min-TLS-1-2-2019-07`. The provider will only perform drift detection if a configuration value is provided.
	TlsSecurityPolicy *string `pulumi:"tlsSecurityPolicy"`
}

// DomainDomainEndpointOptionsInput is an input type that accepts DomainDomainEndpointOptionsArgs and DomainDomainEndpointOptionsOutput values.
// You can construct a concrete instance of `DomainDomainEndpointOptionsInput` via:
//
//	DomainDomainEndpointOptionsArgs{...}
type DomainDomainEndpointOptionsInput interface {
	pulumi.Input

	ToDomainDomainEndpointOptionsOutput() DomainDomainEndpointOptionsOutput
	ToDomainDomainEndpointOptionsOutputWithContext(context.Context) DomainDomainEndpointOptionsOutput
}

type DomainDomainEndpointOptionsArgs struct {
	// Fully qualified domain for your custom endpoint.
	CustomEndpoint pulumi.StringPtrInput `pulumi:"customEndpoint"`
	// ACM certificate ARN for your custom endpoint.
	CustomEndpointCertificateArn pulumi.StringPtrInput `pulumi:"customEndpointCertificateArn"`
	// Whether to enable custom endpoint for the Elasticsearch domain.
	CustomEndpointEnabled pulumi.BoolPtrInput `pulumi:"customEndpointEnabled"`
	// Whether or not to require HTTPS. Defaults to `true`.
	EnforceHttps pulumi.BoolPtrInput `pulumi:"enforceHttps"`
	// Name of the TLS security policy that needs to be applied to the HTTPS endpoint. Valid values:  `Policy-Min-TLS-1-0-2019-07` and `Policy-Min-TLS-1-2-2019-07`. The provider will only perform drift detection if a configuration value is provided.
	TlsSecurityPolicy pulumi.StringPtrInput `pulumi:"tlsSecurityPolicy"`
}

func (DomainDomainEndpointOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDomainEndpointOptions)(nil)).Elem()
}

func (i DomainDomainEndpointOptionsArgs) ToDomainDomainEndpointOptionsOutput() DomainDomainEndpointOptionsOutput {
	return i.ToDomainDomainEndpointOptionsOutputWithContext(context.Background())
}

func (i DomainDomainEndpointOptionsArgs) ToDomainDomainEndpointOptionsOutputWithContext(ctx context.Context) DomainDomainEndpointOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDomainEndpointOptionsOutput)
}

func (i DomainDomainEndpointOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainDomainEndpointOptions] {
	return pulumix.Output[DomainDomainEndpointOptions]{
		OutputState: i.ToDomainDomainEndpointOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainDomainEndpointOptionsArgs) ToDomainDomainEndpointOptionsPtrOutput() DomainDomainEndpointOptionsPtrOutput {
	return i.ToDomainDomainEndpointOptionsPtrOutputWithContext(context.Background())
}

func (i DomainDomainEndpointOptionsArgs) ToDomainDomainEndpointOptionsPtrOutputWithContext(ctx context.Context) DomainDomainEndpointOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDomainEndpointOptionsOutput).ToDomainDomainEndpointOptionsPtrOutputWithContext(ctx)
}

// DomainDomainEndpointOptionsPtrInput is an input type that accepts DomainDomainEndpointOptionsArgs, DomainDomainEndpointOptionsPtr and DomainDomainEndpointOptionsPtrOutput values.
// You can construct a concrete instance of `DomainDomainEndpointOptionsPtrInput` via:
//
//	        DomainDomainEndpointOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainDomainEndpointOptionsPtrInput interface {
	pulumi.Input

	ToDomainDomainEndpointOptionsPtrOutput() DomainDomainEndpointOptionsPtrOutput
	ToDomainDomainEndpointOptionsPtrOutputWithContext(context.Context) DomainDomainEndpointOptionsPtrOutput
}

type domainDomainEndpointOptionsPtrType DomainDomainEndpointOptionsArgs

func DomainDomainEndpointOptionsPtr(v *DomainDomainEndpointOptionsArgs) DomainDomainEndpointOptionsPtrInput {
	return (*domainDomainEndpointOptionsPtrType)(v)
}

func (*domainDomainEndpointOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainDomainEndpointOptions)(nil)).Elem()
}

func (i *domainDomainEndpointOptionsPtrType) ToDomainDomainEndpointOptionsPtrOutput() DomainDomainEndpointOptionsPtrOutput {
	return i.ToDomainDomainEndpointOptionsPtrOutputWithContext(context.Background())
}

func (i *domainDomainEndpointOptionsPtrType) ToDomainDomainEndpointOptionsPtrOutputWithContext(ctx context.Context) DomainDomainEndpointOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainDomainEndpointOptionsPtrOutput)
}

func (i *domainDomainEndpointOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainDomainEndpointOptions] {
	return pulumix.Output[*DomainDomainEndpointOptions]{
		OutputState: i.ToDomainDomainEndpointOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainDomainEndpointOptionsOutput struct{ *pulumi.OutputState }

func (DomainDomainEndpointOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainDomainEndpointOptions)(nil)).Elem()
}

func (o DomainDomainEndpointOptionsOutput) ToDomainDomainEndpointOptionsOutput() DomainDomainEndpointOptionsOutput {
	return o
}

func (o DomainDomainEndpointOptionsOutput) ToDomainDomainEndpointOptionsOutputWithContext(ctx context.Context) DomainDomainEndpointOptionsOutput {
	return o
}

func (o DomainDomainEndpointOptionsOutput) ToDomainDomainEndpointOptionsPtrOutput() DomainDomainEndpointOptionsPtrOutput {
	return o.ToDomainDomainEndpointOptionsPtrOutputWithContext(context.Background())
}

func (o DomainDomainEndpointOptionsOutput) ToDomainDomainEndpointOptionsPtrOutputWithContext(ctx context.Context) DomainDomainEndpointOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainDomainEndpointOptions) *DomainDomainEndpointOptions {
		return &v
	}).(DomainDomainEndpointOptionsPtrOutput)
}

func (o DomainDomainEndpointOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainDomainEndpointOptions] {
	return pulumix.Output[DomainDomainEndpointOptions]{
		OutputState: o.OutputState,
	}
}

// Fully qualified domain for your custom endpoint.
func (o DomainDomainEndpointOptionsOutput) CustomEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainDomainEndpointOptions) *string { return v.CustomEndpoint }).(pulumi.StringPtrOutput)
}

// ACM certificate ARN for your custom endpoint.
func (o DomainDomainEndpointOptionsOutput) CustomEndpointCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainDomainEndpointOptions) *string { return v.CustomEndpointCertificateArn }).(pulumi.StringPtrOutput)
}

// Whether to enable custom endpoint for the Elasticsearch domain.
func (o DomainDomainEndpointOptionsOutput) CustomEndpointEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainDomainEndpointOptions) *bool { return v.CustomEndpointEnabled }).(pulumi.BoolPtrOutput)
}

// Whether or not to require HTTPS. Defaults to `true`.
func (o DomainDomainEndpointOptionsOutput) EnforceHttps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainDomainEndpointOptions) *bool { return v.EnforceHttps }).(pulumi.BoolPtrOutput)
}

// Name of the TLS security policy that needs to be applied to the HTTPS endpoint. Valid values:  `Policy-Min-TLS-1-0-2019-07` and `Policy-Min-TLS-1-2-2019-07`. The provider will only perform drift detection if a configuration value is provided.
func (o DomainDomainEndpointOptionsOutput) TlsSecurityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainDomainEndpointOptions) *string { return v.TlsSecurityPolicy }).(pulumi.StringPtrOutput)
}

type DomainDomainEndpointOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainDomainEndpointOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainDomainEndpointOptions)(nil)).Elem()
}

func (o DomainDomainEndpointOptionsPtrOutput) ToDomainDomainEndpointOptionsPtrOutput() DomainDomainEndpointOptionsPtrOutput {
	return o
}

func (o DomainDomainEndpointOptionsPtrOutput) ToDomainDomainEndpointOptionsPtrOutputWithContext(ctx context.Context) DomainDomainEndpointOptionsPtrOutput {
	return o
}

func (o DomainDomainEndpointOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainDomainEndpointOptions] {
	return pulumix.Output[*DomainDomainEndpointOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainDomainEndpointOptionsPtrOutput) Elem() DomainDomainEndpointOptionsOutput {
	return o.ApplyT(func(v *DomainDomainEndpointOptions) DomainDomainEndpointOptions {
		if v != nil {
			return *v
		}
		var ret DomainDomainEndpointOptions
		return ret
	}).(DomainDomainEndpointOptionsOutput)
}

// Fully qualified domain for your custom endpoint.
func (o DomainDomainEndpointOptionsPtrOutput) CustomEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainDomainEndpointOptions) *string {
		if v == nil {
			return nil
		}
		return v.CustomEndpoint
	}).(pulumi.StringPtrOutput)
}

// ACM certificate ARN for your custom endpoint.
func (o DomainDomainEndpointOptionsPtrOutput) CustomEndpointCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainDomainEndpointOptions) *string {
		if v == nil {
			return nil
		}
		return v.CustomEndpointCertificateArn
	}).(pulumi.StringPtrOutput)
}

// Whether to enable custom endpoint for the Elasticsearch domain.
func (o DomainDomainEndpointOptionsPtrOutput) CustomEndpointEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainDomainEndpointOptions) *bool {
		if v == nil {
			return nil
		}
		return v.CustomEndpointEnabled
	}).(pulumi.BoolPtrOutput)
}

// Whether or not to require HTTPS. Defaults to `true`.
func (o DomainDomainEndpointOptionsPtrOutput) EnforceHttps() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainDomainEndpointOptions) *bool {
		if v == nil {
			return nil
		}
		return v.EnforceHttps
	}).(pulumi.BoolPtrOutput)
}

// Name of the TLS security policy that needs to be applied to the HTTPS endpoint. Valid values:  `Policy-Min-TLS-1-0-2019-07` and `Policy-Min-TLS-1-2-2019-07`. The provider will only perform drift detection if a configuration value is provided.
func (o DomainDomainEndpointOptionsPtrOutput) TlsSecurityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainDomainEndpointOptions) *string {
		if v == nil {
			return nil
		}
		return v.TlsSecurityPolicy
	}).(pulumi.StringPtrOutput)
}

type DomainEbsOptions struct {
	// Whether EBS volumes are attached to data nodes in the domain.
	EbsEnabled bool `pulumi:"ebsEnabled"`
	// Baseline input/output (I/O) performance of EBS volumes attached to data nodes. Applicable only for the GP3 and Provisioned IOPS EBS volume types.
	Iops *int `pulumi:"iops"`
	// Specifies the throughput (in MiB/s) of the EBS volumes attached to data nodes. Applicable only for the gp3 volume type.
	Throughput *int `pulumi:"throughput"`
	// Size of EBS volumes attached to data nodes (in GiB).
	VolumeSize *int `pulumi:"volumeSize"`
	// Type of EBS volumes attached to data nodes.
	VolumeType *string `pulumi:"volumeType"`
}

// DomainEbsOptionsInput is an input type that accepts DomainEbsOptionsArgs and DomainEbsOptionsOutput values.
// You can construct a concrete instance of `DomainEbsOptionsInput` via:
//
//	DomainEbsOptionsArgs{...}
type DomainEbsOptionsInput interface {
	pulumi.Input

	ToDomainEbsOptionsOutput() DomainEbsOptionsOutput
	ToDomainEbsOptionsOutputWithContext(context.Context) DomainEbsOptionsOutput
}

type DomainEbsOptionsArgs struct {
	// Whether EBS volumes are attached to data nodes in the domain.
	EbsEnabled pulumi.BoolInput `pulumi:"ebsEnabled"`
	// Baseline input/output (I/O) performance of EBS volumes attached to data nodes. Applicable only for the GP3 and Provisioned IOPS EBS volume types.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Specifies the throughput (in MiB/s) of the EBS volumes attached to data nodes. Applicable only for the gp3 volume type.
	Throughput pulumi.IntPtrInput `pulumi:"throughput"`
	// Size of EBS volumes attached to data nodes (in GiB).
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
	// Type of EBS volumes attached to data nodes.
	VolumeType pulumi.StringPtrInput `pulumi:"volumeType"`
}

func (DomainEbsOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainEbsOptions)(nil)).Elem()
}

func (i DomainEbsOptionsArgs) ToDomainEbsOptionsOutput() DomainEbsOptionsOutput {
	return i.ToDomainEbsOptionsOutputWithContext(context.Background())
}

func (i DomainEbsOptionsArgs) ToDomainEbsOptionsOutputWithContext(ctx context.Context) DomainEbsOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEbsOptionsOutput)
}

func (i DomainEbsOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainEbsOptions] {
	return pulumix.Output[DomainEbsOptions]{
		OutputState: i.ToDomainEbsOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainEbsOptionsArgs) ToDomainEbsOptionsPtrOutput() DomainEbsOptionsPtrOutput {
	return i.ToDomainEbsOptionsPtrOutputWithContext(context.Background())
}

func (i DomainEbsOptionsArgs) ToDomainEbsOptionsPtrOutputWithContext(ctx context.Context) DomainEbsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEbsOptionsOutput).ToDomainEbsOptionsPtrOutputWithContext(ctx)
}

// DomainEbsOptionsPtrInput is an input type that accepts DomainEbsOptionsArgs, DomainEbsOptionsPtr and DomainEbsOptionsPtrOutput values.
// You can construct a concrete instance of `DomainEbsOptionsPtrInput` via:
//
//	        DomainEbsOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainEbsOptionsPtrInput interface {
	pulumi.Input

	ToDomainEbsOptionsPtrOutput() DomainEbsOptionsPtrOutput
	ToDomainEbsOptionsPtrOutputWithContext(context.Context) DomainEbsOptionsPtrOutput
}

type domainEbsOptionsPtrType DomainEbsOptionsArgs

func DomainEbsOptionsPtr(v *DomainEbsOptionsArgs) DomainEbsOptionsPtrInput {
	return (*domainEbsOptionsPtrType)(v)
}

func (*domainEbsOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainEbsOptions)(nil)).Elem()
}

func (i *domainEbsOptionsPtrType) ToDomainEbsOptionsPtrOutput() DomainEbsOptionsPtrOutput {
	return i.ToDomainEbsOptionsPtrOutputWithContext(context.Background())
}

func (i *domainEbsOptionsPtrType) ToDomainEbsOptionsPtrOutputWithContext(ctx context.Context) DomainEbsOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEbsOptionsPtrOutput)
}

func (i *domainEbsOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainEbsOptions] {
	return pulumix.Output[*DomainEbsOptions]{
		OutputState: i.ToDomainEbsOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainEbsOptionsOutput struct{ *pulumi.OutputState }

func (DomainEbsOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainEbsOptions)(nil)).Elem()
}

func (o DomainEbsOptionsOutput) ToDomainEbsOptionsOutput() DomainEbsOptionsOutput {
	return o
}

func (o DomainEbsOptionsOutput) ToDomainEbsOptionsOutputWithContext(ctx context.Context) DomainEbsOptionsOutput {
	return o
}

func (o DomainEbsOptionsOutput) ToDomainEbsOptionsPtrOutput() DomainEbsOptionsPtrOutput {
	return o.ToDomainEbsOptionsPtrOutputWithContext(context.Background())
}

func (o DomainEbsOptionsOutput) ToDomainEbsOptionsPtrOutputWithContext(ctx context.Context) DomainEbsOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainEbsOptions) *DomainEbsOptions {
		return &v
	}).(DomainEbsOptionsPtrOutput)
}

func (o DomainEbsOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainEbsOptions] {
	return pulumix.Output[DomainEbsOptions]{
		OutputState: o.OutputState,
	}
}

// Whether EBS volumes are attached to data nodes in the domain.
func (o DomainEbsOptionsOutput) EbsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DomainEbsOptions) bool { return v.EbsEnabled }).(pulumi.BoolOutput)
}

// Baseline input/output (I/O) performance of EBS volumes attached to data nodes. Applicable only for the GP3 and Provisioned IOPS EBS volume types.
func (o DomainEbsOptionsOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainEbsOptions) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Specifies the throughput (in MiB/s) of the EBS volumes attached to data nodes. Applicable only for the gp3 volume type.
func (o DomainEbsOptionsOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainEbsOptions) *int { return v.Throughput }).(pulumi.IntPtrOutput)
}

// Size of EBS volumes attached to data nodes (in GiB).
func (o DomainEbsOptionsOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainEbsOptions) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

// Type of EBS volumes attached to data nodes.
func (o DomainEbsOptionsOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainEbsOptions) *string { return v.VolumeType }).(pulumi.StringPtrOutput)
}

type DomainEbsOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainEbsOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainEbsOptions)(nil)).Elem()
}

func (o DomainEbsOptionsPtrOutput) ToDomainEbsOptionsPtrOutput() DomainEbsOptionsPtrOutput {
	return o
}

func (o DomainEbsOptionsPtrOutput) ToDomainEbsOptionsPtrOutputWithContext(ctx context.Context) DomainEbsOptionsPtrOutput {
	return o
}

func (o DomainEbsOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainEbsOptions] {
	return pulumix.Output[*DomainEbsOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainEbsOptionsPtrOutput) Elem() DomainEbsOptionsOutput {
	return o.ApplyT(func(v *DomainEbsOptions) DomainEbsOptions {
		if v != nil {
			return *v
		}
		var ret DomainEbsOptions
		return ret
	}).(DomainEbsOptionsOutput)
}

// Whether EBS volumes are attached to data nodes in the domain.
func (o DomainEbsOptionsPtrOutput) EbsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainEbsOptions) *bool {
		if v == nil {
			return nil
		}
		return &v.EbsEnabled
	}).(pulumi.BoolPtrOutput)
}

// Baseline input/output (I/O) performance of EBS volumes attached to data nodes. Applicable only for the GP3 and Provisioned IOPS EBS volume types.
func (o DomainEbsOptionsPtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainEbsOptions) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

// Specifies the throughput (in MiB/s) of the EBS volumes attached to data nodes. Applicable only for the gp3 volume type.
func (o DomainEbsOptionsPtrOutput) Throughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainEbsOptions) *int {
		if v == nil {
			return nil
		}
		return v.Throughput
	}).(pulumi.IntPtrOutput)
}

// Size of EBS volumes attached to data nodes (in GiB).
func (o DomainEbsOptionsPtrOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainEbsOptions) *int {
		if v == nil {
			return nil
		}
		return v.VolumeSize
	}).(pulumi.IntPtrOutput)
}

// Type of EBS volumes attached to data nodes.
func (o DomainEbsOptionsPtrOutput) VolumeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainEbsOptions) *string {
		if v == nil {
			return nil
		}
		return v.VolumeType
	}).(pulumi.StringPtrOutput)
}

type DomainEncryptAtRest struct {
	// Whether to enable encryption at rest. If the `encryptAtRest` block is not provided then this defaults to `false`. Enabling encryption on new domains requires `elasticsearchVersion` 5.1 or greater.
	Enabled bool `pulumi:"enabled"`
	// KMS key ARN to encrypt the Elasticsearch domain with. If not specified then it defaults to using the `aws/es` service KMS key. Note that KMS will accept a KMS key ID but will return the key ARN. To prevent the provider detecting unwanted changes, use the key ARN instead.
	KmsKeyId *string `pulumi:"kmsKeyId"`
}

// DomainEncryptAtRestInput is an input type that accepts DomainEncryptAtRestArgs and DomainEncryptAtRestOutput values.
// You can construct a concrete instance of `DomainEncryptAtRestInput` via:
//
//	DomainEncryptAtRestArgs{...}
type DomainEncryptAtRestInput interface {
	pulumi.Input

	ToDomainEncryptAtRestOutput() DomainEncryptAtRestOutput
	ToDomainEncryptAtRestOutputWithContext(context.Context) DomainEncryptAtRestOutput
}

type DomainEncryptAtRestArgs struct {
	// Whether to enable encryption at rest. If the `encryptAtRest` block is not provided then this defaults to `false`. Enabling encryption on new domains requires `elasticsearchVersion` 5.1 or greater.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// KMS key ARN to encrypt the Elasticsearch domain with. If not specified then it defaults to using the `aws/es` service KMS key. Note that KMS will accept a KMS key ID but will return the key ARN. To prevent the provider detecting unwanted changes, use the key ARN instead.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
}

func (DomainEncryptAtRestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainEncryptAtRest)(nil)).Elem()
}

func (i DomainEncryptAtRestArgs) ToDomainEncryptAtRestOutput() DomainEncryptAtRestOutput {
	return i.ToDomainEncryptAtRestOutputWithContext(context.Background())
}

func (i DomainEncryptAtRestArgs) ToDomainEncryptAtRestOutputWithContext(ctx context.Context) DomainEncryptAtRestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEncryptAtRestOutput)
}

func (i DomainEncryptAtRestArgs) ToOutput(ctx context.Context) pulumix.Output[DomainEncryptAtRest] {
	return pulumix.Output[DomainEncryptAtRest]{
		OutputState: i.ToDomainEncryptAtRestOutputWithContext(ctx).OutputState,
	}
}

func (i DomainEncryptAtRestArgs) ToDomainEncryptAtRestPtrOutput() DomainEncryptAtRestPtrOutput {
	return i.ToDomainEncryptAtRestPtrOutputWithContext(context.Background())
}

func (i DomainEncryptAtRestArgs) ToDomainEncryptAtRestPtrOutputWithContext(ctx context.Context) DomainEncryptAtRestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEncryptAtRestOutput).ToDomainEncryptAtRestPtrOutputWithContext(ctx)
}

// DomainEncryptAtRestPtrInput is an input type that accepts DomainEncryptAtRestArgs, DomainEncryptAtRestPtr and DomainEncryptAtRestPtrOutput values.
// You can construct a concrete instance of `DomainEncryptAtRestPtrInput` via:
//
//	        DomainEncryptAtRestArgs{...}
//
//	or:
//
//	        nil
type DomainEncryptAtRestPtrInput interface {
	pulumi.Input

	ToDomainEncryptAtRestPtrOutput() DomainEncryptAtRestPtrOutput
	ToDomainEncryptAtRestPtrOutputWithContext(context.Context) DomainEncryptAtRestPtrOutput
}

type domainEncryptAtRestPtrType DomainEncryptAtRestArgs

func DomainEncryptAtRestPtr(v *DomainEncryptAtRestArgs) DomainEncryptAtRestPtrInput {
	return (*domainEncryptAtRestPtrType)(v)
}

func (*domainEncryptAtRestPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainEncryptAtRest)(nil)).Elem()
}

func (i *domainEncryptAtRestPtrType) ToDomainEncryptAtRestPtrOutput() DomainEncryptAtRestPtrOutput {
	return i.ToDomainEncryptAtRestPtrOutputWithContext(context.Background())
}

func (i *domainEncryptAtRestPtrType) ToDomainEncryptAtRestPtrOutputWithContext(ctx context.Context) DomainEncryptAtRestPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainEncryptAtRestPtrOutput)
}

func (i *domainEncryptAtRestPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainEncryptAtRest] {
	return pulumix.Output[*DomainEncryptAtRest]{
		OutputState: i.ToDomainEncryptAtRestPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainEncryptAtRestOutput struct{ *pulumi.OutputState }

func (DomainEncryptAtRestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainEncryptAtRest)(nil)).Elem()
}

func (o DomainEncryptAtRestOutput) ToDomainEncryptAtRestOutput() DomainEncryptAtRestOutput {
	return o
}

func (o DomainEncryptAtRestOutput) ToDomainEncryptAtRestOutputWithContext(ctx context.Context) DomainEncryptAtRestOutput {
	return o
}

func (o DomainEncryptAtRestOutput) ToDomainEncryptAtRestPtrOutput() DomainEncryptAtRestPtrOutput {
	return o.ToDomainEncryptAtRestPtrOutputWithContext(context.Background())
}

func (o DomainEncryptAtRestOutput) ToDomainEncryptAtRestPtrOutputWithContext(ctx context.Context) DomainEncryptAtRestPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainEncryptAtRest) *DomainEncryptAtRest {
		return &v
	}).(DomainEncryptAtRestPtrOutput)
}

func (o DomainEncryptAtRestOutput) ToOutput(ctx context.Context) pulumix.Output[DomainEncryptAtRest] {
	return pulumix.Output[DomainEncryptAtRest]{
		OutputState: o.OutputState,
	}
}

// Whether to enable encryption at rest. If the `encryptAtRest` block is not provided then this defaults to `false`. Enabling encryption on new domains requires `elasticsearchVersion` 5.1 or greater.
func (o DomainEncryptAtRestOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DomainEncryptAtRest) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// KMS key ARN to encrypt the Elasticsearch domain with. If not specified then it defaults to using the `aws/es` service KMS key. Note that KMS will accept a KMS key ID but will return the key ARN. To prevent the provider detecting unwanted changes, use the key ARN instead.
func (o DomainEncryptAtRestOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainEncryptAtRest) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

type DomainEncryptAtRestPtrOutput struct{ *pulumi.OutputState }

func (DomainEncryptAtRestPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainEncryptAtRest)(nil)).Elem()
}

func (o DomainEncryptAtRestPtrOutput) ToDomainEncryptAtRestPtrOutput() DomainEncryptAtRestPtrOutput {
	return o
}

func (o DomainEncryptAtRestPtrOutput) ToDomainEncryptAtRestPtrOutputWithContext(ctx context.Context) DomainEncryptAtRestPtrOutput {
	return o
}

func (o DomainEncryptAtRestPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainEncryptAtRest] {
	return pulumix.Output[*DomainEncryptAtRest]{
		OutputState: o.OutputState,
	}
}

func (o DomainEncryptAtRestPtrOutput) Elem() DomainEncryptAtRestOutput {
	return o.ApplyT(func(v *DomainEncryptAtRest) DomainEncryptAtRest {
		if v != nil {
			return *v
		}
		var ret DomainEncryptAtRest
		return ret
	}).(DomainEncryptAtRestOutput)
}

// Whether to enable encryption at rest. If the `encryptAtRest` block is not provided then this defaults to `false`. Enabling encryption on new domains requires `elasticsearchVersion` 5.1 or greater.
func (o DomainEncryptAtRestPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainEncryptAtRest) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// KMS key ARN to encrypt the Elasticsearch domain with. If not specified then it defaults to using the `aws/es` service KMS key. Note that KMS will accept a KMS key ID but will return the key ARN. To prevent the provider detecting unwanted changes, use the key ARN instead.
func (o DomainEncryptAtRestPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainEncryptAtRest) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

type DomainLogPublishingOption struct {
	// ARN of the Cloudwatch log group to which log needs to be published.
	CloudwatchLogGroupArn string `pulumi:"cloudwatchLogGroupArn"`
	// Whether given log publishing option is enabled or not.
	Enabled *bool `pulumi:"enabled"`
	// Type of Elasticsearch log. Valid values: `INDEX_SLOW_LOGS`, `SEARCH_SLOW_LOGS`, `ES_APPLICATION_LOGS`, `AUDIT_LOGS`.
	LogType string `pulumi:"logType"`
}

// DomainLogPublishingOptionInput is an input type that accepts DomainLogPublishingOptionArgs and DomainLogPublishingOptionOutput values.
// You can construct a concrete instance of `DomainLogPublishingOptionInput` via:
//
//	DomainLogPublishingOptionArgs{...}
type DomainLogPublishingOptionInput interface {
	pulumi.Input

	ToDomainLogPublishingOptionOutput() DomainLogPublishingOptionOutput
	ToDomainLogPublishingOptionOutputWithContext(context.Context) DomainLogPublishingOptionOutput
}

type DomainLogPublishingOptionArgs struct {
	// ARN of the Cloudwatch log group to which log needs to be published.
	CloudwatchLogGroupArn pulumi.StringInput `pulumi:"cloudwatchLogGroupArn"`
	// Whether given log publishing option is enabled or not.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Type of Elasticsearch log. Valid values: `INDEX_SLOW_LOGS`, `SEARCH_SLOW_LOGS`, `ES_APPLICATION_LOGS`, `AUDIT_LOGS`.
	LogType pulumi.StringInput `pulumi:"logType"`
}

func (DomainLogPublishingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainLogPublishingOption)(nil)).Elem()
}

func (i DomainLogPublishingOptionArgs) ToDomainLogPublishingOptionOutput() DomainLogPublishingOptionOutput {
	return i.ToDomainLogPublishingOptionOutputWithContext(context.Background())
}

func (i DomainLogPublishingOptionArgs) ToDomainLogPublishingOptionOutputWithContext(ctx context.Context) DomainLogPublishingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainLogPublishingOptionOutput)
}

func (i DomainLogPublishingOptionArgs) ToOutput(ctx context.Context) pulumix.Output[DomainLogPublishingOption] {
	return pulumix.Output[DomainLogPublishingOption]{
		OutputState: i.ToDomainLogPublishingOptionOutputWithContext(ctx).OutputState,
	}
}

// DomainLogPublishingOptionArrayInput is an input type that accepts DomainLogPublishingOptionArray and DomainLogPublishingOptionArrayOutput values.
// You can construct a concrete instance of `DomainLogPublishingOptionArrayInput` via:
//
//	DomainLogPublishingOptionArray{ DomainLogPublishingOptionArgs{...} }
type DomainLogPublishingOptionArrayInput interface {
	pulumi.Input

	ToDomainLogPublishingOptionArrayOutput() DomainLogPublishingOptionArrayOutput
	ToDomainLogPublishingOptionArrayOutputWithContext(context.Context) DomainLogPublishingOptionArrayOutput
}

type DomainLogPublishingOptionArray []DomainLogPublishingOptionInput

func (DomainLogPublishingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainLogPublishingOption)(nil)).Elem()
}

func (i DomainLogPublishingOptionArray) ToDomainLogPublishingOptionArrayOutput() DomainLogPublishingOptionArrayOutput {
	return i.ToDomainLogPublishingOptionArrayOutputWithContext(context.Background())
}

func (i DomainLogPublishingOptionArray) ToDomainLogPublishingOptionArrayOutputWithContext(ctx context.Context) DomainLogPublishingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainLogPublishingOptionArrayOutput)
}

func (i DomainLogPublishingOptionArray) ToOutput(ctx context.Context) pulumix.Output[[]DomainLogPublishingOption] {
	return pulumix.Output[[]DomainLogPublishingOption]{
		OutputState: i.ToDomainLogPublishingOptionArrayOutputWithContext(ctx).OutputState,
	}
}

type DomainLogPublishingOptionOutput struct{ *pulumi.OutputState }

func (DomainLogPublishingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainLogPublishingOption)(nil)).Elem()
}

func (o DomainLogPublishingOptionOutput) ToDomainLogPublishingOptionOutput() DomainLogPublishingOptionOutput {
	return o
}

func (o DomainLogPublishingOptionOutput) ToDomainLogPublishingOptionOutputWithContext(ctx context.Context) DomainLogPublishingOptionOutput {
	return o
}

func (o DomainLogPublishingOptionOutput) ToOutput(ctx context.Context) pulumix.Output[DomainLogPublishingOption] {
	return pulumix.Output[DomainLogPublishingOption]{
		OutputState: o.OutputState,
	}
}

// ARN of the Cloudwatch log group to which log needs to be published.
func (o DomainLogPublishingOptionOutput) CloudwatchLogGroupArn() pulumi.StringOutput {
	return o.ApplyT(func(v DomainLogPublishingOption) string { return v.CloudwatchLogGroupArn }).(pulumi.StringOutput)
}

// Whether given log publishing option is enabled or not.
func (o DomainLogPublishingOptionOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainLogPublishingOption) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Type of Elasticsearch log. Valid values: `INDEX_SLOW_LOGS`, `SEARCH_SLOW_LOGS`, `ES_APPLICATION_LOGS`, `AUDIT_LOGS`.
func (o DomainLogPublishingOptionOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v DomainLogPublishingOption) string { return v.LogType }).(pulumi.StringOutput)
}

type DomainLogPublishingOptionArrayOutput struct{ *pulumi.OutputState }

func (DomainLogPublishingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainLogPublishingOption)(nil)).Elem()
}

func (o DomainLogPublishingOptionArrayOutput) ToDomainLogPublishingOptionArrayOutput() DomainLogPublishingOptionArrayOutput {
	return o
}

func (o DomainLogPublishingOptionArrayOutput) ToDomainLogPublishingOptionArrayOutputWithContext(ctx context.Context) DomainLogPublishingOptionArrayOutput {
	return o
}

func (o DomainLogPublishingOptionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]DomainLogPublishingOption] {
	return pulumix.Output[[]DomainLogPublishingOption]{
		OutputState: o.OutputState,
	}
}

func (o DomainLogPublishingOptionArrayOutput) Index(i pulumi.IntInput) DomainLogPublishingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainLogPublishingOption {
		return vs[0].([]DomainLogPublishingOption)[vs[1].(int)]
	}).(DomainLogPublishingOptionOutput)
}

type DomainNodeToNodeEncryption struct {
	// Whether to enable node-to-node encryption. If the `nodeToNodeEncryption` block is not provided then this defaults to `false`. Enabling node-to-node encryption of a new domain requires an `elasticsearchVersion` of `6.0` or greater.
	Enabled bool `pulumi:"enabled"`
}

// DomainNodeToNodeEncryptionInput is an input type that accepts DomainNodeToNodeEncryptionArgs and DomainNodeToNodeEncryptionOutput values.
// You can construct a concrete instance of `DomainNodeToNodeEncryptionInput` via:
//
//	DomainNodeToNodeEncryptionArgs{...}
type DomainNodeToNodeEncryptionInput interface {
	pulumi.Input

	ToDomainNodeToNodeEncryptionOutput() DomainNodeToNodeEncryptionOutput
	ToDomainNodeToNodeEncryptionOutputWithContext(context.Context) DomainNodeToNodeEncryptionOutput
}

type DomainNodeToNodeEncryptionArgs struct {
	// Whether to enable node-to-node encryption. If the `nodeToNodeEncryption` block is not provided then this defaults to `false`. Enabling node-to-node encryption of a new domain requires an `elasticsearchVersion` of `6.0` or greater.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (DomainNodeToNodeEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainNodeToNodeEncryption)(nil)).Elem()
}

func (i DomainNodeToNodeEncryptionArgs) ToDomainNodeToNodeEncryptionOutput() DomainNodeToNodeEncryptionOutput {
	return i.ToDomainNodeToNodeEncryptionOutputWithContext(context.Background())
}

func (i DomainNodeToNodeEncryptionArgs) ToDomainNodeToNodeEncryptionOutputWithContext(ctx context.Context) DomainNodeToNodeEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNodeToNodeEncryptionOutput)
}

func (i DomainNodeToNodeEncryptionArgs) ToOutput(ctx context.Context) pulumix.Output[DomainNodeToNodeEncryption] {
	return pulumix.Output[DomainNodeToNodeEncryption]{
		OutputState: i.ToDomainNodeToNodeEncryptionOutputWithContext(ctx).OutputState,
	}
}

func (i DomainNodeToNodeEncryptionArgs) ToDomainNodeToNodeEncryptionPtrOutput() DomainNodeToNodeEncryptionPtrOutput {
	return i.ToDomainNodeToNodeEncryptionPtrOutputWithContext(context.Background())
}

func (i DomainNodeToNodeEncryptionArgs) ToDomainNodeToNodeEncryptionPtrOutputWithContext(ctx context.Context) DomainNodeToNodeEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNodeToNodeEncryptionOutput).ToDomainNodeToNodeEncryptionPtrOutputWithContext(ctx)
}

// DomainNodeToNodeEncryptionPtrInput is an input type that accepts DomainNodeToNodeEncryptionArgs, DomainNodeToNodeEncryptionPtr and DomainNodeToNodeEncryptionPtrOutput values.
// You can construct a concrete instance of `DomainNodeToNodeEncryptionPtrInput` via:
//
//	        DomainNodeToNodeEncryptionArgs{...}
//
//	or:
//
//	        nil
type DomainNodeToNodeEncryptionPtrInput interface {
	pulumi.Input

	ToDomainNodeToNodeEncryptionPtrOutput() DomainNodeToNodeEncryptionPtrOutput
	ToDomainNodeToNodeEncryptionPtrOutputWithContext(context.Context) DomainNodeToNodeEncryptionPtrOutput
}

type domainNodeToNodeEncryptionPtrType DomainNodeToNodeEncryptionArgs

func DomainNodeToNodeEncryptionPtr(v *DomainNodeToNodeEncryptionArgs) DomainNodeToNodeEncryptionPtrInput {
	return (*domainNodeToNodeEncryptionPtrType)(v)
}

func (*domainNodeToNodeEncryptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainNodeToNodeEncryption)(nil)).Elem()
}

func (i *domainNodeToNodeEncryptionPtrType) ToDomainNodeToNodeEncryptionPtrOutput() DomainNodeToNodeEncryptionPtrOutput {
	return i.ToDomainNodeToNodeEncryptionPtrOutputWithContext(context.Background())
}

func (i *domainNodeToNodeEncryptionPtrType) ToDomainNodeToNodeEncryptionPtrOutputWithContext(ctx context.Context) DomainNodeToNodeEncryptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNodeToNodeEncryptionPtrOutput)
}

func (i *domainNodeToNodeEncryptionPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainNodeToNodeEncryption] {
	return pulumix.Output[*DomainNodeToNodeEncryption]{
		OutputState: i.ToDomainNodeToNodeEncryptionPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainNodeToNodeEncryptionOutput struct{ *pulumi.OutputState }

func (DomainNodeToNodeEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainNodeToNodeEncryption)(nil)).Elem()
}

func (o DomainNodeToNodeEncryptionOutput) ToDomainNodeToNodeEncryptionOutput() DomainNodeToNodeEncryptionOutput {
	return o
}

func (o DomainNodeToNodeEncryptionOutput) ToDomainNodeToNodeEncryptionOutputWithContext(ctx context.Context) DomainNodeToNodeEncryptionOutput {
	return o
}

func (o DomainNodeToNodeEncryptionOutput) ToDomainNodeToNodeEncryptionPtrOutput() DomainNodeToNodeEncryptionPtrOutput {
	return o.ToDomainNodeToNodeEncryptionPtrOutputWithContext(context.Background())
}

func (o DomainNodeToNodeEncryptionOutput) ToDomainNodeToNodeEncryptionPtrOutputWithContext(ctx context.Context) DomainNodeToNodeEncryptionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainNodeToNodeEncryption) *DomainNodeToNodeEncryption {
		return &v
	}).(DomainNodeToNodeEncryptionPtrOutput)
}

func (o DomainNodeToNodeEncryptionOutput) ToOutput(ctx context.Context) pulumix.Output[DomainNodeToNodeEncryption] {
	return pulumix.Output[DomainNodeToNodeEncryption]{
		OutputState: o.OutputState,
	}
}

// Whether to enable node-to-node encryption. If the `nodeToNodeEncryption` block is not provided then this defaults to `false`. Enabling node-to-node encryption of a new domain requires an `elasticsearchVersion` of `6.0` or greater.
func (o DomainNodeToNodeEncryptionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DomainNodeToNodeEncryption) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type DomainNodeToNodeEncryptionPtrOutput struct{ *pulumi.OutputState }

func (DomainNodeToNodeEncryptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainNodeToNodeEncryption)(nil)).Elem()
}

func (o DomainNodeToNodeEncryptionPtrOutput) ToDomainNodeToNodeEncryptionPtrOutput() DomainNodeToNodeEncryptionPtrOutput {
	return o
}

func (o DomainNodeToNodeEncryptionPtrOutput) ToDomainNodeToNodeEncryptionPtrOutputWithContext(ctx context.Context) DomainNodeToNodeEncryptionPtrOutput {
	return o
}

func (o DomainNodeToNodeEncryptionPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainNodeToNodeEncryption] {
	return pulumix.Output[*DomainNodeToNodeEncryption]{
		OutputState: o.OutputState,
	}
}

func (o DomainNodeToNodeEncryptionPtrOutput) Elem() DomainNodeToNodeEncryptionOutput {
	return o.ApplyT(func(v *DomainNodeToNodeEncryption) DomainNodeToNodeEncryption {
		if v != nil {
			return *v
		}
		var ret DomainNodeToNodeEncryption
		return ret
	}).(DomainNodeToNodeEncryptionOutput)
}

// Whether to enable node-to-node encryption. If the `nodeToNodeEncryption` block is not provided then this defaults to `false`. Enabling node-to-node encryption of a new domain requires an `elasticsearchVersion` of `6.0` or greater.
func (o DomainNodeToNodeEncryptionPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainNodeToNodeEncryption) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type DomainSamlOptionsSamlOptions struct {
	// Whether SAML authentication is enabled.
	Enabled *bool `pulumi:"enabled"`
	// Information from your identity provider.
	Idp *DomainSamlOptionsSamlOptionsIdp `pulumi:"idp"`
	// This backend role from the SAML IdP receives full permissions to the cluster, equivalent to a new master user.
	MasterBackendRole *string `pulumi:"masterBackendRole"`
	// This username from the SAML IdP receives full permissions to the cluster, equivalent to a new master user.
	MasterUserName *string `pulumi:"masterUserName"`
	// Element of the SAML assertion to use for backend roles. Default is roles.
	RolesKey *string `pulumi:"rolesKey"`
	// Duration of a session in minutes after a user logs in. Default is 60. Maximum value is 1,440.
	SessionTimeoutMinutes *int `pulumi:"sessionTimeoutMinutes"`
	// Custom SAML attribute to use for user names. Default is an empty string - `""`. This will cause Elasticsearch to use the `NameID` element of the `Subject`, which is the default location for name identifiers in the SAML specification.
	SubjectKey *string `pulumi:"subjectKey"`
}

// DomainSamlOptionsSamlOptionsInput is an input type that accepts DomainSamlOptionsSamlOptionsArgs and DomainSamlOptionsSamlOptionsOutput values.
// You can construct a concrete instance of `DomainSamlOptionsSamlOptionsInput` via:
//
//	DomainSamlOptionsSamlOptionsArgs{...}
type DomainSamlOptionsSamlOptionsInput interface {
	pulumi.Input

	ToDomainSamlOptionsSamlOptionsOutput() DomainSamlOptionsSamlOptionsOutput
	ToDomainSamlOptionsSamlOptionsOutputWithContext(context.Context) DomainSamlOptionsSamlOptionsOutput
}

type DomainSamlOptionsSamlOptionsArgs struct {
	// Whether SAML authentication is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Information from your identity provider.
	Idp DomainSamlOptionsSamlOptionsIdpPtrInput `pulumi:"idp"`
	// This backend role from the SAML IdP receives full permissions to the cluster, equivalent to a new master user.
	MasterBackendRole pulumi.StringPtrInput `pulumi:"masterBackendRole"`
	// This username from the SAML IdP receives full permissions to the cluster, equivalent to a new master user.
	MasterUserName pulumi.StringPtrInput `pulumi:"masterUserName"`
	// Element of the SAML assertion to use for backend roles. Default is roles.
	RolesKey pulumi.StringPtrInput `pulumi:"rolesKey"`
	// Duration of a session in minutes after a user logs in. Default is 60. Maximum value is 1,440.
	SessionTimeoutMinutes pulumi.IntPtrInput `pulumi:"sessionTimeoutMinutes"`
	// Custom SAML attribute to use for user names. Default is an empty string - `""`. This will cause Elasticsearch to use the `NameID` element of the `Subject`, which is the default location for name identifiers in the SAML specification.
	SubjectKey pulumi.StringPtrInput `pulumi:"subjectKey"`
}

func (DomainSamlOptionsSamlOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSamlOptionsSamlOptions)(nil)).Elem()
}

func (i DomainSamlOptionsSamlOptionsArgs) ToDomainSamlOptionsSamlOptionsOutput() DomainSamlOptionsSamlOptionsOutput {
	return i.ToDomainSamlOptionsSamlOptionsOutputWithContext(context.Background())
}

func (i DomainSamlOptionsSamlOptionsArgs) ToDomainSamlOptionsSamlOptionsOutputWithContext(ctx context.Context) DomainSamlOptionsSamlOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSamlOptionsSamlOptionsOutput)
}

func (i DomainSamlOptionsSamlOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainSamlOptionsSamlOptions] {
	return pulumix.Output[DomainSamlOptionsSamlOptions]{
		OutputState: i.ToDomainSamlOptionsSamlOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainSamlOptionsSamlOptionsArgs) ToDomainSamlOptionsSamlOptionsPtrOutput() DomainSamlOptionsSamlOptionsPtrOutput {
	return i.ToDomainSamlOptionsSamlOptionsPtrOutputWithContext(context.Background())
}

func (i DomainSamlOptionsSamlOptionsArgs) ToDomainSamlOptionsSamlOptionsPtrOutputWithContext(ctx context.Context) DomainSamlOptionsSamlOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSamlOptionsSamlOptionsOutput).ToDomainSamlOptionsSamlOptionsPtrOutputWithContext(ctx)
}

// DomainSamlOptionsSamlOptionsPtrInput is an input type that accepts DomainSamlOptionsSamlOptionsArgs, DomainSamlOptionsSamlOptionsPtr and DomainSamlOptionsSamlOptionsPtrOutput values.
// You can construct a concrete instance of `DomainSamlOptionsSamlOptionsPtrInput` via:
//
//	        DomainSamlOptionsSamlOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainSamlOptionsSamlOptionsPtrInput interface {
	pulumi.Input

	ToDomainSamlOptionsSamlOptionsPtrOutput() DomainSamlOptionsSamlOptionsPtrOutput
	ToDomainSamlOptionsSamlOptionsPtrOutputWithContext(context.Context) DomainSamlOptionsSamlOptionsPtrOutput
}

type domainSamlOptionsSamlOptionsPtrType DomainSamlOptionsSamlOptionsArgs

func DomainSamlOptionsSamlOptionsPtr(v *DomainSamlOptionsSamlOptionsArgs) DomainSamlOptionsSamlOptionsPtrInput {
	return (*domainSamlOptionsSamlOptionsPtrType)(v)
}

func (*domainSamlOptionsSamlOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSamlOptionsSamlOptions)(nil)).Elem()
}

func (i *domainSamlOptionsSamlOptionsPtrType) ToDomainSamlOptionsSamlOptionsPtrOutput() DomainSamlOptionsSamlOptionsPtrOutput {
	return i.ToDomainSamlOptionsSamlOptionsPtrOutputWithContext(context.Background())
}

func (i *domainSamlOptionsSamlOptionsPtrType) ToDomainSamlOptionsSamlOptionsPtrOutputWithContext(ctx context.Context) DomainSamlOptionsSamlOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSamlOptionsSamlOptionsPtrOutput)
}

func (i *domainSamlOptionsSamlOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainSamlOptionsSamlOptions] {
	return pulumix.Output[*DomainSamlOptionsSamlOptions]{
		OutputState: i.ToDomainSamlOptionsSamlOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainSamlOptionsSamlOptionsOutput struct{ *pulumi.OutputState }

func (DomainSamlOptionsSamlOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSamlOptionsSamlOptions)(nil)).Elem()
}

func (o DomainSamlOptionsSamlOptionsOutput) ToDomainSamlOptionsSamlOptionsOutput() DomainSamlOptionsSamlOptionsOutput {
	return o
}

func (o DomainSamlOptionsSamlOptionsOutput) ToDomainSamlOptionsSamlOptionsOutputWithContext(ctx context.Context) DomainSamlOptionsSamlOptionsOutput {
	return o
}

func (o DomainSamlOptionsSamlOptionsOutput) ToDomainSamlOptionsSamlOptionsPtrOutput() DomainSamlOptionsSamlOptionsPtrOutput {
	return o.ToDomainSamlOptionsSamlOptionsPtrOutputWithContext(context.Background())
}

func (o DomainSamlOptionsSamlOptionsOutput) ToDomainSamlOptionsSamlOptionsPtrOutputWithContext(ctx context.Context) DomainSamlOptionsSamlOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainSamlOptionsSamlOptions) *DomainSamlOptionsSamlOptions {
		return &v
	}).(DomainSamlOptionsSamlOptionsPtrOutput)
}

func (o DomainSamlOptionsSamlOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainSamlOptionsSamlOptions] {
	return pulumix.Output[DomainSamlOptionsSamlOptions]{
		OutputState: o.OutputState,
	}
}

// Whether SAML authentication is enabled.
func (o DomainSamlOptionsSamlOptionsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DomainSamlOptionsSamlOptions) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Information from your identity provider.
func (o DomainSamlOptionsSamlOptionsOutput) Idp() DomainSamlOptionsSamlOptionsIdpPtrOutput {
	return o.ApplyT(func(v DomainSamlOptionsSamlOptions) *DomainSamlOptionsSamlOptionsIdp { return v.Idp }).(DomainSamlOptionsSamlOptionsIdpPtrOutput)
}

// This backend role from the SAML IdP receives full permissions to the cluster, equivalent to a new master user.
func (o DomainSamlOptionsSamlOptionsOutput) MasterBackendRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSamlOptionsSamlOptions) *string { return v.MasterBackendRole }).(pulumi.StringPtrOutput)
}

// This username from the SAML IdP receives full permissions to the cluster, equivalent to a new master user.
func (o DomainSamlOptionsSamlOptionsOutput) MasterUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSamlOptionsSamlOptions) *string { return v.MasterUserName }).(pulumi.StringPtrOutput)
}

// Element of the SAML assertion to use for backend roles. Default is roles.
func (o DomainSamlOptionsSamlOptionsOutput) RolesKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSamlOptionsSamlOptions) *string { return v.RolesKey }).(pulumi.StringPtrOutput)
}

// Duration of a session in minutes after a user logs in. Default is 60. Maximum value is 1,440.
func (o DomainSamlOptionsSamlOptionsOutput) SessionTimeoutMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainSamlOptionsSamlOptions) *int { return v.SessionTimeoutMinutes }).(pulumi.IntPtrOutput)
}

// Custom SAML attribute to use for user names. Default is an empty string - `""`. This will cause Elasticsearch to use the `NameID` element of the `Subject`, which is the default location for name identifiers in the SAML specification.
func (o DomainSamlOptionsSamlOptionsOutput) SubjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainSamlOptionsSamlOptions) *string { return v.SubjectKey }).(pulumi.StringPtrOutput)
}

type DomainSamlOptionsSamlOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainSamlOptionsSamlOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSamlOptionsSamlOptions)(nil)).Elem()
}

func (o DomainSamlOptionsSamlOptionsPtrOutput) ToDomainSamlOptionsSamlOptionsPtrOutput() DomainSamlOptionsSamlOptionsPtrOutput {
	return o
}

func (o DomainSamlOptionsSamlOptionsPtrOutput) ToDomainSamlOptionsSamlOptionsPtrOutputWithContext(ctx context.Context) DomainSamlOptionsSamlOptionsPtrOutput {
	return o
}

func (o DomainSamlOptionsSamlOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainSamlOptionsSamlOptions] {
	return pulumix.Output[*DomainSamlOptionsSamlOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainSamlOptionsSamlOptionsPtrOutput) Elem() DomainSamlOptionsSamlOptionsOutput {
	return o.ApplyT(func(v *DomainSamlOptionsSamlOptions) DomainSamlOptionsSamlOptions {
		if v != nil {
			return *v
		}
		var ret DomainSamlOptionsSamlOptions
		return ret
	}).(DomainSamlOptionsSamlOptionsOutput)
}

// Whether SAML authentication is enabled.
func (o DomainSamlOptionsSamlOptionsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainSamlOptionsSamlOptions) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Information from your identity provider.
func (o DomainSamlOptionsSamlOptionsPtrOutput) Idp() DomainSamlOptionsSamlOptionsIdpPtrOutput {
	return o.ApplyT(func(v *DomainSamlOptionsSamlOptions) *DomainSamlOptionsSamlOptionsIdp {
		if v == nil {
			return nil
		}
		return v.Idp
	}).(DomainSamlOptionsSamlOptionsIdpPtrOutput)
}

// This backend role from the SAML IdP receives full permissions to the cluster, equivalent to a new master user.
func (o DomainSamlOptionsSamlOptionsPtrOutput) MasterBackendRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSamlOptionsSamlOptions) *string {
		if v == nil {
			return nil
		}
		return v.MasterBackendRole
	}).(pulumi.StringPtrOutput)
}

// This username from the SAML IdP receives full permissions to the cluster, equivalent to a new master user.
func (o DomainSamlOptionsSamlOptionsPtrOutput) MasterUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSamlOptionsSamlOptions) *string {
		if v == nil {
			return nil
		}
		return v.MasterUserName
	}).(pulumi.StringPtrOutput)
}

// Element of the SAML assertion to use for backend roles. Default is roles.
func (o DomainSamlOptionsSamlOptionsPtrOutput) RolesKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSamlOptionsSamlOptions) *string {
		if v == nil {
			return nil
		}
		return v.RolesKey
	}).(pulumi.StringPtrOutput)
}

// Duration of a session in minutes after a user logs in. Default is 60. Maximum value is 1,440.
func (o DomainSamlOptionsSamlOptionsPtrOutput) SessionTimeoutMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainSamlOptionsSamlOptions) *int {
		if v == nil {
			return nil
		}
		return v.SessionTimeoutMinutes
	}).(pulumi.IntPtrOutput)
}

// Custom SAML attribute to use for user names. Default is an empty string - `""`. This will cause Elasticsearch to use the `NameID` element of the `Subject`, which is the default location for name identifiers in the SAML specification.
func (o DomainSamlOptionsSamlOptionsPtrOutput) SubjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSamlOptionsSamlOptions) *string {
		if v == nil {
			return nil
		}
		return v.SubjectKey
	}).(pulumi.StringPtrOutput)
}

type DomainSamlOptionsSamlOptionsIdp struct {
	// The unique Entity ID of the application in SAML Identity Provider.
	EntityId string `pulumi:"entityId"`
	// The Metadata of the SAML application in xml format.
	MetadataContent string `pulumi:"metadataContent"`
}

// DomainSamlOptionsSamlOptionsIdpInput is an input type that accepts DomainSamlOptionsSamlOptionsIdpArgs and DomainSamlOptionsSamlOptionsIdpOutput values.
// You can construct a concrete instance of `DomainSamlOptionsSamlOptionsIdpInput` via:
//
//	DomainSamlOptionsSamlOptionsIdpArgs{...}
type DomainSamlOptionsSamlOptionsIdpInput interface {
	pulumi.Input

	ToDomainSamlOptionsSamlOptionsIdpOutput() DomainSamlOptionsSamlOptionsIdpOutput
	ToDomainSamlOptionsSamlOptionsIdpOutputWithContext(context.Context) DomainSamlOptionsSamlOptionsIdpOutput
}

type DomainSamlOptionsSamlOptionsIdpArgs struct {
	// The unique Entity ID of the application in SAML Identity Provider.
	EntityId pulumi.StringInput `pulumi:"entityId"`
	// The Metadata of the SAML application in xml format.
	MetadataContent pulumi.StringInput `pulumi:"metadataContent"`
}

func (DomainSamlOptionsSamlOptionsIdpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSamlOptionsSamlOptionsIdp)(nil)).Elem()
}

func (i DomainSamlOptionsSamlOptionsIdpArgs) ToDomainSamlOptionsSamlOptionsIdpOutput() DomainSamlOptionsSamlOptionsIdpOutput {
	return i.ToDomainSamlOptionsSamlOptionsIdpOutputWithContext(context.Background())
}

func (i DomainSamlOptionsSamlOptionsIdpArgs) ToDomainSamlOptionsSamlOptionsIdpOutputWithContext(ctx context.Context) DomainSamlOptionsSamlOptionsIdpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSamlOptionsSamlOptionsIdpOutput)
}

func (i DomainSamlOptionsSamlOptionsIdpArgs) ToOutput(ctx context.Context) pulumix.Output[DomainSamlOptionsSamlOptionsIdp] {
	return pulumix.Output[DomainSamlOptionsSamlOptionsIdp]{
		OutputState: i.ToDomainSamlOptionsSamlOptionsIdpOutputWithContext(ctx).OutputState,
	}
}

func (i DomainSamlOptionsSamlOptionsIdpArgs) ToDomainSamlOptionsSamlOptionsIdpPtrOutput() DomainSamlOptionsSamlOptionsIdpPtrOutput {
	return i.ToDomainSamlOptionsSamlOptionsIdpPtrOutputWithContext(context.Background())
}

func (i DomainSamlOptionsSamlOptionsIdpArgs) ToDomainSamlOptionsSamlOptionsIdpPtrOutputWithContext(ctx context.Context) DomainSamlOptionsSamlOptionsIdpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSamlOptionsSamlOptionsIdpOutput).ToDomainSamlOptionsSamlOptionsIdpPtrOutputWithContext(ctx)
}

// DomainSamlOptionsSamlOptionsIdpPtrInput is an input type that accepts DomainSamlOptionsSamlOptionsIdpArgs, DomainSamlOptionsSamlOptionsIdpPtr and DomainSamlOptionsSamlOptionsIdpPtrOutput values.
// You can construct a concrete instance of `DomainSamlOptionsSamlOptionsIdpPtrInput` via:
//
//	        DomainSamlOptionsSamlOptionsIdpArgs{...}
//
//	or:
//
//	        nil
type DomainSamlOptionsSamlOptionsIdpPtrInput interface {
	pulumi.Input

	ToDomainSamlOptionsSamlOptionsIdpPtrOutput() DomainSamlOptionsSamlOptionsIdpPtrOutput
	ToDomainSamlOptionsSamlOptionsIdpPtrOutputWithContext(context.Context) DomainSamlOptionsSamlOptionsIdpPtrOutput
}

type domainSamlOptionsSamlOptionsIdpPtrType DomainSamlOptionsSamlOptionsIdpArgs

func DomainSamlOptionsSamlOptionsIdpPtr(v *DomainSamlOptionsSamlOptionsIdpArgs) DomainSamlOptionsSamlOptionsIdpPtrInput {
	return (*domainSamlOptionsSamlOptionsIdpPtrType)(v)
}

func (*domainSamlOptionsSamlOptionsIdpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSamlOptionsSamlOptionsIdp)(nil)).Elem()
}

func (i *domainSamlOptionsSamlOptionsIdpPtrType) ToDomainSamlOptionsSamlOptionsIdpPtrOutput() DomainSamlOptionsSamlOptionsIdpPtrOutput {
	return i.ToDomainSamlOptionsSamlOptionsIdpPtrOutputWithContext(context.Background())
}

func (i *domainSamlOptionsSamlOptionsIdpPtrType) ToDomainSamlOptionsSamlOptionsIdpPtrOutputWithContext(ctx context.Context) DomainSamlOptionsSamlOptionsIdpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSamlOptionsSamlOptionsIdpPtrOutput)
}

func (i *domainSamlOptionsSamlOptionsIdpPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainSamlOptionsSamlOptionsIdp] {
	return pulumix.Output[*DomainSamlOptionsSamlOptionsIdp]{
		OutputState: i.ToDomainSamlOptionsSamlOptionsIdpPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainSamlOptionsSamlOptionsIdpOutput struct{ *pulumi.OutputState }

func (DomainSamlOptionsSamlOptionsIdpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSamlOptionsSamlOptionsIdp)(nil)).Elem()
}

func (o DomainSamlOptionsSamlOptionsIdpOutput) ToDomainSamlOptionsSamlOptionsIdpOutput() DomainSamlOptionsSamlOptionsIdpOutput {
	return o
}

func (o DomainSamlOptionsSamlOptionsIdpOutput) ToDomainSamlOptionsSamlOptionsIdpOutputWithContext(ctx context.Context) DomainSamlOptionsSamlOptionsIdpOutput {
	return o
}

func (o DomainSamlOptionsSamlOptionsIdpOutput) ToDomainSamlOptionsSamlOptionsIdpPtrOutput() DomainSamlOptionsSamlOptionsIdpPtrOutput {
	return o.ToDomainSamlOptionsSamlOptionsIdpPtrOutputWithContext(context.Background())
}

func (o DomainSamlOptionsSamlOptionsIdpOutput) ToDomainSamlOptionsSamlOptionsIdpPtrOutputWithContext(ctx context.Context) DomainSamlOptionsSamlOptionsIdpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainSamlOptionsSamlOptionsIdp) *DomainSamlOptionsSamlOptionsIdp {
		return &v
	}).(DomainSamlOptionsSamlOptionsIdpPtrOutput)
}

func (o DomainSamlOptionsSamlOptionsIdpOutput) ToOutput(ctx context.Context) pulumix.Output[DomainSamlOptionsSamlOptionsIdp] {
	return pulumix.Output[DomainSamlOptionsSamlOptionsIdp]{
		OutputState: o.OutputState,
	}
}

// The unique Entity ID of the application in SAML Identity Provider.
func (o DomainSamlOptionsSamlOptionsIdpOutput) EntityId() pulumi.StringOutput {
	return o.ApplyT(func(v DomainSamlOptionsSamlOptionsIdp) string { return v.EntityId }).(pulumi.StringOutput)
}

// The Metadata of the SAML application in xml format.
func (o DomainSamlOptionsSamlOptionsIdpOutput) MetadataContent() pulumi.StringOutput {
	return o.ApplyT(func(v DomainSamlOptionsSamlOptionsIdp) string { return v.MetadataContent }).(pulumi.StringOutput)
}

type DomainSamlOptionsSamlOptionsIdpPtrOutput struct{ *pulumi.OutputState }

func (DomainSamlOptionsSamlOptionsIdpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSamlOptionsSamlOptionsIdp)(nil)).Elem()
}

func (o DomainSamlOptionsSamlOptionsIdpPtrOutput) ToDomainSamlOptionsSamlOptionsIdpPtrOutput() DomainSamlOptionsSamlOptionsIdpPtrOutput {
	return o
}

func (o DomainSamlOptionsSamlOptionsIdpPtrOutput) ToDomainSamlOptionsSamlOptionsIdpPtrOutputWithContext(ctx context.Context) DomainSamlOptionsSamlOptionsIdpPtrOutput {
	return o
}

func (o DomainSamlOptionsSamlOptionsIdpPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainSamlOptionsSamlOptionsIdp] {
	return pulumix.Output[*DomainSamlOptionsSamlOptionsIdp]{
		OutputState: o.OutputState,
	}
}

func (o DomainSamlOptionsSamlOptionsIdpPtrOutput) Elem() DomainSamlOptionsSamlOptionsIdpOutput {
	return o.ApplyT(func(v *DomainSamlOptionsSamlOptionsIdp) DomainSamlOptionsSamlOptionsIdp {
		if v != nil {
			return *v
		}
		var ret DomainSamlOptionsSamlOptionsIdp
		return ret
	}).(DomainSamlOptionsSamlOptionsIdpOutput)
}

// The unique Entity ID of the application in SAML Identity Provider.
func (o DomainSamlOptionsSamlOptionsIdpPtrOutput) EntityId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSamlOptionsSamlOptionsIdp) *string {
		if v == nil {
			return nil
		}
		return &v.EntityId
	}).(pulumi.StringPtrOutput)
}

// The Metadata of the SAML application in xml format.
func (o DomainSamlOptionsSamlOptionsIdpPtrOutput) MetadataContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainSamlOptionsSamlOptionsIdp) *string {
		if v == nil {
			return nil
		}
		return &v.MetadataContent
	}).(pulumi.StringPtrOutput)
}

type DomainSnapshotOptions struct {
	// Hour during which the service takes an automated daily snapshot of the indices in the domain.
	AutomatedSnapshotStartHour int `pulumi:"automatedSnapshotStartHour"`
}

// DomainSnapshotOptionsInput is an input type that accepts DomainSnapshotOptionsArgs and DomainSnapshotOptionsOutput values.
// You can construct a concrete instance of `DomainSnapshotOptionsInput` via:
//
//	DomainSnapshotOptionsArgs{...}
type DomainSnapshotOptionsInput interface {
	pulumi.Input

	ToDomainSnapshotOptionsOutput() DomainSnapshotOptionsOutput
	ToDomainSnapshotOptionsOutputWithContext(context.Context) DomainSnapshotOptionsOutput
}

type DomainSnapshotOptionsArgs struct {
	// Hour during which the service takes an automated daily snapshot of the indices in the domain.
	AutomatedSnapshotStartHour pulumi.IntInput `pulumi:"automatedSnapshotStartHour"`
}

func (DomainSnapshotOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSnapshotOptions)(nil)).Elem()
}

func (i DomainSnapshotOptionsArgs) ToDomainSnapshotOptionsOutput() DomainSnapshotOptionsOutput {
	return i.ToDomainSnapshotOptionsOutputWithContext(context.Background())
}

func (i DomainSnapshotOptionsArgs) ToDomainSnapshotOptionsOutputWithContext(ctx context.Context) DomainSnapshotOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSnapshotOptionsOutput)
}

func (i DomainSnapshotOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainSnapshotOptions] {
	return pulumix.Output[DomainSnapshotOptions]{
		OutputState: i.ToDomainSnapshotOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainSnapshotOptionsArgs) ToDomainSnapshotOptionsPtrOutput() DomainSnapshotOptionsPtrOutput {
	return i.ToDomainSnapshotOptionsPtrOutputWithContext(context.Background())
}

func (i DomainSnapshotOptionsArgs) ToDomainSnapshotOptionsPtrOutputWithContext(ctx context.Context) DomainSnapshotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSnapshotOptionsOutput).ToDomainSnapshotOptionsPtrOutputWithContext(ctx)
}

// DomainSnapshotOptionsPtrInput is an input type that accepts DomainSnapshotOptionsArgs, DomainSnapshotOptionsPtr and DomainSnapshotOptionsPtrOutput values.
// You can construct a concrete instance of `DomainSnapshotOptionsPtrInput` via:
//
//	        DomainSnapshotOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainSnapshotOptionsPtrInput interface {
	pulumi.Input

	ToDomainSnapshotOptionsPtrOutput() DomainSnapshotOptionsPtrOutput
	ToDomainSnapshotOptionsPtrOutputWithContext(context.Context) DomainSnapshotOptionsPtrOutput
}

type domainSnapshotOptionsPtrType DomainSnapshotOptionsArgs

func DomainSnapshotOptionsPtr(v *DomainSnapshotOptionsArgs) DomainSnapshotOptionsPtrInput {
	return (*domainSnapshotOptionsPtrType)(v)
}

func (*domainSnapshotOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSnapshotOptions)(nil)).Elem()
}

func (i *domainSnapshotOptionsPtrType) ToDomainSnapshotOptionsPtrOutput() DomainSnapshotOptionsPtrOutput {
	return i.ToDomainSnapshotOptionsPtrOutputWithContext(context.Background())
}

func (i *domainSnapshotOptionsPtrType) ToDomainSnapshotOptionsPtrOutputWithContext(ctx context.Context) DomainSnapshotOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainSnapshotOptionsPtrOutput)
}

func (i *domainSnapshotOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainSnapshotOptions] {
	return pulumix.Output[*DomainSnapshotOptions]{
		OutputState: i.ToDomainSnapshotOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainSnapshotOptionsOutput struct{ *pulumi.OutputState }

func (DomainSnapshotOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainSnapshotOptions)(nil)).Elem()
}

func (o DomainSnapshotOptionsOutput) ToDomainSnapshotOptionsOutput() DomainSnapshotOptionsOutput {
	return o
}

func (o DomainSnapshotOptionsOutput) ToDomainSnapshotOptionsOutputWithContext(ctx context.Context) DomainSnapshotOptionsOutput {
	return o
}

func (o DomainSnapshotOptionsOutput) ToDomainSnapshotOptionsPtrOutput() DomainSnapshotOptionsPtrOutput {
	return o.ToDomainSnapshotOptionsPtrOutputWithContext(context.Background())
}

func (o DomainSnapshotOptionsOutput) ToDomainSnapshotOptionsPtrOutputWithContext(ctx context.Context) DomainSnapshotOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainSnapshotOptions) *DomainSnapshotOptions {
		return &v
	}).(DomainSnapshotOptionsPtrOutput)
}

func (o DomainSnapshotOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainSnapshotOptions] {
	return pulumix.Output[DomainSnapshotOptions]{
		OutputState: o.OutputState,
	}
}

// Hour during which the service takes an automated daily snapshot of the indices in the domain.
func (o DomainSnapshotOptionsOutput) AutomatedSnapshotStartHour() pulumi.IntOutput {
	return o.ApplyT(func(v DomainSnapshotOptions) int { return v.AutomatedSnapshotStartHour }).(pulumi.IntOutput)
}

type DomainSnapshotOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainSnapshotOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainSnapshotOptions)(nil)).Elem()
}

func (o DomainSnapshotOptionsPtrOutput) ToDomainSnapshotOptionsPtrOutput() DomainSnapshotOptionsPtrOutput {
	return o
}

func (o DomainSnapshotOptionsPtrOutput) ToDomainSnapshotOptionsPtrOutputWithContext(ctx context.Context) DomainSnapshotOptionsPtrOutput {
	return o
}

func (o DomainSnapshotOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainSnapshotOptions] {
	return pulumix.Output[*DomainSnapshotOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainSnapshotOptionsPtrOutput) Elem() DomainSnapshotOptionsOutput {
	return o.ApplyT(func(v *DomainSnapshotOptions) DomainSnapshotOptions {
		if v != nil {
			return *v
		}
		var ret DomainSnapshotOptions
		return ret
	}).(DomainSnapshotOptionsOutput)
}

// Hour during which the service takes an automated daily snapshot of the indices in the domain.
func (o DomainSnapshotOptionsPtrOutput) AutomatedSnapshotStartHour() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainSnapshotOptions) *int {
		if v == nil {
			return nil
		}
		return &v.AutomatedSnapshotStartHour
	}).(pulumi.IntPtrOutput)
}

type DomainVpcOptions struct {
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// List of VPC Security Group IDs to be applied to the Elasticsearch domain endpoints. If omitted, the default Security Group for the VPC will be used.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// List of VPC Subnet IDs for the Elasticsearch domain endpoints to be created in.
	SubnetIds []string `pulumi:"subnetIds"`
	VpcId     *string  `pulumi:"vpcId"`
}

// DomainVpcOptionsInput is an input type that accepts DomainVpcOptionsArgs and DomainVpcOptionsOutput values.
// You can construct a concrete instance of `DomainVpcOptionsInput` via:
//
//	DomainVpcOptionsArgs{...}
type DomainVpcOptionsInput interface {
	pulumi.Input

	ToDomainVpcOptionsOutput() DomainVpcOptionsOutput
	ToDomainVpcOptionsOutputWithContext(context.Context) DomainVpcOptionsOutput
}

type DomainVpcOptionsArgs struct {
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// List of VPC Security Group IDs to be applied to the Elasticsearch domain endpoints. If omitted, the default Security Group for the VPC will be used.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// List of VPC Subnet IDs for the Elasticsearch domain endpoints to be created in.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	VpcId     pulumi.StringPtrInput   `pulumi:"vpcId"`
}

func (DomainVpcOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainVpcOptions)(nil)).Elem()
}

func (i DomainVpcOptionsArgs) ToDomainVpcOptionsOutput() DomainVpcOptionsOutput {
	return i.ToDomainVpcOptionsOutputWithContext(context.Background())
}

func (i DomainVpcOptionsArgs) ToDomainVpcOptionsOutputWithContext(ctx context.Context) DomainVpcOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainVpcOptionsOutput)
}

func (i DomainVpcOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[DomainVpcOptions] {
	return pulumix.Output[DomainVpcOptions]{
		OutputState: i.ToDomainVpcOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i DomainVpcOptionsArgs) ToDomainVpcOptionsPtrOutput() DomainVpcOptionsPtrOutput {
	return i.ToDomainVpcOptionsPtrOutputWithContext(context.Background())
}

func (i DomainVpcOptionsArgs) ToDomainVpcOptionsPtrOutputWithContext(ctx context.Context) DomainVpcOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainVpcOptionsOutput).ToDomainVpcOptionsPtrOutputWithContext(ctx)
}

// DomainVpcOptionsPtrInput is an input type that accepts DomainVpcOptionsArgs, DomainVpcOptionsPtr and DomainVpcOptionsPtrOutput values.
// You can construct a concrete instance of `DomainVpcOptionsPtrInput` via:
//
//	        DomainVpcOptionsArgs{...}
//
//	or:
//
//	        nil
type DomainVpcOptionsPtrInput interface {
	pulumi.Input

	ToDomainVpcOptionsPtrOutput() DomainVpcOptionsPtrOutput
	ToDomainVpcOptionsPtrOutputWithContext(context.Context) DomainVpcOptionsPtrOutput
}

type domainVpcOptionsPtrType DomainVpcOptionsArgs

func DomainVpcOptionsPtr(v *DomainVpcOptionsArgs) DomainVpcOptionsPtrInput {
	return (*domainVpcOptionsPtrType)(v)
}

func (*domainVpcOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainVpcOptions)(nil)).Elem()
}

func (i *domainVpcOptionsPtrType) ToDomainVpcOptionsPtrOutput() DomainVpcOptionsPtrOutput {
	return i.ToDomainVpcOptionsPtrOutputWithContext(context.Background())
}

func (i *domainVpcOptionsPtrType) ToDomainVpcOptionsPtrOutputWithContext(ctx context.Context) DomainVpcOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainVpcOptionsPtrOutput)
}

func (i *domainVpcOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*DomainVpcOptions] {
	return pulumix.Output[*DomainVpcOptions]{
		OutputState: i.ToDomainVpcOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type DomainVpcOptionsOutput struct{ *pulumi.OutputState }

func (DomainVpcOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainVpcOptions)(nil)).Elem()
}

func (o DomainVpcOptionsOutput) ToDomainVpcOptionsOutput() DomainVpcOptionsOutput {
	return o
}

func (o DomainVpcOptionsOutput) ToDomainVpcOptionsOutputWithContext(ctx context.Context) DomainVpcOptionsOutput {
	return o
}

func (o DomainVpcOptionsOutput) ToDomainVpcOptionsPtrOutput() DomainVpcOptionsPtrOutput {
	return o.ToDomainVpcOptionsPtrOutputWithContext(context.Background())
}

func (o DomainVpcOptionsOutput) ToDomainVpcOptionsPtrOutputWithContext(ctx context.Context) DomainVpcOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainVpcOptions) *DomainVpcOptions {
		return &v
	}).(DomainVpcOptionsPtrOutput)
}

func (o DomainVpcOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[DomainVpcOptions] {
	return pulumix.Output[DomainVpcOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainVpcOptionsOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainVpcOptions) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// List of VPC Security Group IDs to be applied to the Elasticsearch domain endpoints. If omitted, the default Security Group for the VPC will be used.
func (o DomainVpcOptionsOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainVpcOptions) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// List of VPC Subnet IDs for the Elasticsearch domain endpoints to be created in.
func (o DomainVpcOptionsOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainVpcOptions) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

func (o DomainVpcOptionsOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainVpcOptions) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type DomainVpcOptionsPtrOutput struct{ *pulumi.OutputState }

func (DomainVpcOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainVpcOptions)(nil)).Elem()
}

func (o DomainVpcOptionsPtrOutput) ToDomainVpcOptionsPtrOutput() DomainVpcOptionsPtrOutput {
	return o
}

func (o DomainVpcOptionsPtrOutput) ToDomainVpcOptionsPtrOutputWithContext(ctx context.Context) DomainVpcOptionsPtrOutput {
	return o
}

func (o DomainVpcOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DomainVpcOptions] {
	return pulumix.Output[*DomainVpcOptions]{
		OutputState: o.OutputState,
	}
}

func (o DomainVpcOptionsPtrOutput) Elem() DomainVpcOptionsOutput {
	return o.ApplyT(func(v *DomainVpcOptions) DomainVpcOptions {
		if v != nil {
			return *v
		}
		var ret DomainVpcOptions
		return ret
	}).(DomainVpcOptionsOutput)
}

func (o DomainVpcOptionsPtrOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainVpcOptions) []string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZones
	}).(pulumi.StringArrayOutput)
}

// List of VPC Security Group IDs to be applied to the Elasticsearch domain endpoints. If omitted, the default Security Group for the VPC will be used.
func (o DomainVpcOptionsPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainVpcOptions) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// List of VPC Subnet IDs for the Elasticsearch domain endpoints to be created in.
func (o DomainVpcOptionsPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainVpcOptions) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

func (o DomainVpcOptionsPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainVpcOptions) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

type VpcEndpointVpcOptions struct {
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// The list of security group IDs associated with the VPC endpoints for the domain. If you do not provide a security group ID, elasticsearch Service uses the default security group for the VPC.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// A list of subnet IDs associated with the VPC endpoints for the domain. If your domain uses multiple Availability Zones, you need to provide two subnet IDs, one per zone. Otherwise, provide only one.
	SubnetIds []string `pulumi:"subnetIds"`
	VpcId     *string  `pulumi:"vpcId"`
}

// VpcEndpointVpcOptionsInput is an input type that accepts VpcEndpointVpcOptionsArgs and VpcEndpointVpcOptionsOutput values.
// You can construct a concrete instance of `VpcEndpointVpcOptionsInput` via:
//
//	VpcEndpointVpcOptionsArgs{...}
type VpcEndpointVpcOptionsInput interface {
	pulumi.Input

	ToVpcEndpointVpcOptionsOutput() VpcEndpointVpcOptionsOutput
	ToVpcEndpointVpcOptionsOutputWithContext(context.Context) VpcEndpointVpcOptionsOutput
}

type VpcEndpointVpcOptionsArgs struct {
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// The list of security group IDs associated with the VPC endpoints for the domain. If you do not provide a security group ID, elasticsearch Service uses the default security group for the VPC.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// A list of subnet IDs associated with the VPC endpoints for the domain. If your domain uses multiple Availability Zones, you need to provide two subnet IDs, one per zone. Otherwise, provide only one.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	VpcId     pulumi.StringPtrInput   `pulumi:"vpcId"`
}

func (VpcEndpointVpcOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEndpointVpcOptions)(nil)).Elem()
}

func (i VpcEndpointVpcOptionsArgs) ToVpcEndpointVpcOptionsOutput() VpcEndpointVpcOptionsOutput {
	return i.ToVpcEndpointVpcOptionsOutputWithContext(context.Background())
}

func (i VpcEndpointVpcOptionsArgs) ToVpcEndpointVpcOptionsOutputWithContext(ctx context.Context) VpcEndpointVpcOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointVpcOptionsOutput)
}

func (i VpcEndpointVpcOptionsArgs) ToOutput(ctx context.Context) pulumix.Output[VpcEndpointVpcOptions] {
	return pulumix.Output[VpcEndpointVpcOptions]{
		OutputState: i.ToVpcEndpointVpcOptionsOutputWithContext(ctx).OutputState,
	}
}

func (i VpcEndpointVpcOptionsArgs) ToVpcEndpointVpcOptionsPtrOutput() VpcEndpointVpcOptionsPtrOutput {
	return i.ToVpcEndpointVpcOptionsPtrOutputWithContext(context.Background())
}

func (i VpcEndpointVpcOptionsArgs) ToVpcEndpointVpcOptionsPtrOutputWithContext(ctx context.Context) VpcEndpointVpcOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointVpcOptionsOutput).ToVpcEndpointVpcOptionsPtrOutputWithContext(ctx)
}

// VpcEndpointVpcOptionsPtrInput is an input type that accepts VpcEndpointVpcOptionsArgs, VpcEndpointVpcOptionsPtr and VpcEndpointVpcOptionsPtrOutput values.
// You can construct a concrete instance of `VpcEndpointVpcOptionsPtrInput` via:
//
//	        VpcEndpointVpcOptionsArgs{...}
//
//	or:
//
//	        nil
type VpcEndpointVpcOptionsPtrInput interface {
	pulumi.Input

	ToVpcEndpointVpcOptionsPtrOutput() VpcEndpointVpcOptionsPtrOutput
	ToVpcEndpointVpcOptionsPtrOutputWithContext(context.Context) VpcEndpointVpcOptionsPtrOutput
}

type vpcEndpointVpcOptionsPtrType VpcEndpointVpcOptionsArgs

func VpcEndpointVpcOptionsPtr(v *VpcEndpointVpcOptionsArgs) VpcEndpointVpcOptionsPtrInput {
	return (*vpcEndpointVpcOptionsPtrType)(v)
}

func (*vpcEndpointVpcOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcEndpointVpcOptions)(nil)).Elem()
}

func (i *vpcEndpointVpcOptionsPtrType) ToVpcEndpointVpcOptionsPtrOutput() VpcEndpointVpcOptionsPtrOutput {
	return i.ToVpcEndpointVpcOptionsPtrOutputWithContext(context.Background())
}

func (i *vpcEndpointVpcOptionsPtrType) ToVpcEndpointVpcOptionsPtrOutputWithContext(ctx context.Context) VpcEndpointVpcOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointVpcOptionsPtrOutput)
}

func (i *vpcEndpointVpcOptionsPtrType) ToOutput(ctx context.Context) pulumix.Output[*VpcEndpointVpcOptions] {
	return pulumix.Output[*VpcEndpointVpcOptions]{
		OutputState: i.ToVpcEndpointVpcOptionsPtrOutputWithContext(ctx).OutputState,
	}
}

type VpcEndpointVpcOptionsOutput struct{ *pulumi.OutputState }

func (VpcEndpointVpcOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VpcEndpointVpcOptions)(nil)).Elem()
}

func (o VpcEndpointVpcOptionsOutput) ToVpcEndpointVpcOptionsOutput() VpcEndpointVpcOptionsOutput {
	return o
}

func (o VpcEndpointVpcOptionsOutput) ToVpcEndpointVpcOptionsOutputWithContext(ctx context.Context) VpcEndpointVpcOptionsOutput {
	return o
}

func (o VpcEndpointVpcOptionsOutput) ToVpcEndpointVpcOptionsPtrOutput() VpcEndpointVpcOptionsPtrOutput {
	return o.ToVpcEndpointVpcOptionsPtrOutputWithContext(context.Background())
}

func (o VpcEndpointVpcOptionsOutput) ToVpcEndpointVpcOptionsPtrOutputWithContext(ctx context.Context) VpcEndpointVpcOptionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v VpcEndpointVpcOptions) *VpcEndpointVpcOptions {
		return &v
	}).(VpcEndpointVpcOptionsPtrOutput)
}

func (o VpcEndpointVpcOptionsOutput) ToOutput(ctx context.Context) pulumix.Output[VpcEndpointVpcOptions] {
	return pulumix.Output[VpcEndpointVpcOptions]{
		OutputState: o.OutputState,
	}
}

func (o VpcEndpointVpcOptionsOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcEndpointVpcOptions) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// The list of security group IDs associated with the VPC endpoints for the domain. If you do not provide a security group ID, elasticsearch Service uses the default security group for the VPC.
func (o VpcEndpointVpcOptionsOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcEndpointVpcOptions) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// A list of subnet IDs associated with the VPC endpoints for the domain. If your domain uses multiple Availability Zones, you need to provide two subnet IDs, one per zone. Otherwise, provide only one.
func (o VpcEndpointVpcOptionsOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v VpcEndpointVpcOptions) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

func (o VpcEndpointVpcOptionsOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v VpcEndpointVpcOptions) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type VpcEndpointVpcOptionsPtrOutput struct{ *pulumi.OutputState }

func (VpcEndpointVpcOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcEndpointVpcOptions)(nil)).Elem()
}

func (o VpcEndpointVpcOptionsPtrOutput) ToVpcEndpointVpcOptionsPtrOutput() VpcEndpointVpcOptionsPtrOutput {
	return o
}

func (o VpcEndpointVpcOptionsPtrOutput) ToVpcEndpointVpcOptionsPtrOutputWithContext(ctx context.Context) VpcEndpointVpcOptionsPtrOutput {
	return o
}

func (o VpcEndpointVpcOptionsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*VpcEndpointVpcOptions] {
	return pulumix.Output[*VpcEndpointVpcOptions]{
		OutputState: o.OutputState,
	}
}

func (o VpcEndpointVpcOptionsPtrOutput) Elem() VpcEndpointVpcOptionsOutput {
	return o.ApplyT(func(v *VpcEndpointVpcOptions) VpcEndpointVpcOptions {
		if v != nil {
			return *v
		}
		var ret VpcEndpointVpcOptions
		return ret
	}).(VpcEndpointVpcOptionsOutput)
}

func (o VpcEndpointVpcOptionsPtrOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcEndpointVpcOptions) []string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZones
	}).(pulumi.StringArrayOutput)
}

// The list of security group IDs associated with the VPC endpoints for the domain. If you do not provide a security group ID, elasticsearch Service uses the default security group for the VPC.
func (o VpcEndpointVpcOptionsPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcEndpointVpcOptions) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// A list of subnet IDs associated with the VPC endpoints for the domain. If your domain uses multiple Availability Zones, you need to provide two subnet IDs, one per zone. Otherwise, provide only one.
func (o VpcEndpointVpcOptionsPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *VpcEndpointVpcOptions) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

func (o VpcEndpointVpcOptionsPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcEndpointVpcOptions) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

type GetDomainAdvancedSecurityOption struct {
	// Whether node to node encryption is enabled.
	Enabled bool `pulumi:"enabled"`
	// Whether the internal user database is enabled.
	InternalUserDatabaseEnabled bool `pulumi:"internalUserDatabaseEnabled"`
}

// GetDomainAdvancedSecurityOptionInput is an input type that accepts GetDomainAdvancedSecurityOptionArgs and GetDomainAdvancedSecurityOptionOutput values.
// You can construct a concrete instance of `GetDomainAdvancedSecurityOptionInput` via:
//
//	GetDomainAdvancedSecurityOptionArgs{...}
type GetDomainAdvancedSecurityOptionInput interface {
	pulumi.Input

	ToGetDomainAdvancedSecurityOptionOutput() GetDomainAdvancedSecurityOptionOutput
	ToGetDomainAdvancedSecurityOptionOutputWithContext(context.Context) GetDomainAdvancedSecurityOptionOutput
}

type GetDomainAdvancedSecurityOptionArgs struct {
	// Whether node to node encryption is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Whether the internal user database is enabled.
	InternalUserDatabaseEnabled pulumi.BoolInput `pulumi:"internalUserDatabaseEnabled"`
}

func (GetDomainAdvancedSecurityOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainAdvancedSecurityOption)(nil)).Elem()
}

func (i GetDomainAdvancedSecurityOptionArgs) ToGetDomainAdvancedSecurityOptionOutput() GetDomainAdvancedSecurityOptionOutput {
	return i.ToGetDomainAdvancedSecurityOptionOutputWithContext(context.Background())
}

func (i GetDomainAdvancedSecurityOptionArgs) ToGetDomainAdvancedSecurityOptionOutputWithContext(ctx context.Context) GetDomainAdvancedSecurityOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainAdvancedSecurityOptionOutput)
}

func (i GetDomainAdvancedSecurityOptionArgs) ToOutput(ctx context.Context) pulumix.Output[GetDomainAdvancedSecurityOption] {
	return pulumix.Output[GetDomainAdvancedSecurityOption]{
		OutputState: i.ToGetDomainAdvancedSecurityOptionOutputWithContext(ctx).OutputState,
	}
}

// GetDomainAdvancedSecurityOptionArrayInput is an input type that accepts GetDomainAdvancedSecurityOptionArray and GetDomainAdvancedSecurityOptionArrayOutput values.
// You can construct a concrete instance of `GetDomainAdvancedSecurityOptionArrayInput` via:
//
//	GetDomainAdvancedSecurityOptionArray{ GetDomainAdvancedSecurityOptionArgs{...} }
type GetDomainAdvancedSecurityOptionArrayInput interface {
	pulumi.Input

	ToGetDomainAdvancedSecurityOptionArrayOutput() GetDomainAdvancedSecurityOptionArrayOutput
	ToGetDomainAdvancedSecurityOptionArrayOutputWithContext(context.Context) GetDomainAdvancedSecurityOptionArrayOutput
}

type GetDomainAdvancedSecurityOptionArray []GetDomainAdvancedSecurityOptionInput

func (GetDomainAdvancedSecurityOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainAdvancedSecurityOption)(nil)).Elem()
}

func (i GetDomainAdvancedSecurityOptionArray) ToGetDomainAdvancedSecurityOptionArrayOutput() GetDomainAdvancedSecurityOptionArrayOutput {
	return i.ToGetDomainAdvancedSecurityOptionArrayOutputWithContext(context.Background())
}

func (i GetDomainAdvancedSecurityOptionArray) ToGetDomainAdvancedSecurityOptionArrayOutputWithContext(ctx context.Context) GetDomainAdvancedSecurityOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainAdvancedSecurityOptionArrayOutput)
}

func (i GetDomainAdvancedSecurityOptionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainAdvancedSecurityOption] {
	return pulumix.Output[[]GetDomainAdvancedSecurityOption]{
		OutputState: i.ToGetDomainAdvancedSecurityOptionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDomainAdvancedSecurityOptionOutput struct{ *pulumi.OutputState }

func (GetDomainAdvancedSecurityOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainAdvancedSecurityOption)(nil)).Elem()
}

func (o GetDomainAdvancedSecurityOptionOutput) ToGetDomainAdvancedSecurityOptionOutput() GetDomainAdvancedSecurityOptionOutput {
	return o
}

func (o GetDomainAdvancedSecurityOptionOutput) ToGetDomainAdvancedSecurityOptionOutputWithContext(ctx context.Context) GetDomainAdvancedSecurityOptionOutput {
	return o
}

func (o GetDomainAdvancedSecurityOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetDomainAdvancedSecurityOption] {
	return pulumix.Output[GetDomainAdvancedSecurityOption]{
		OutputState: o.OutputState,
	}
}

// Whether node to node encryption is enabled.
func (o GetDomainAdvancedSecurityOptionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainAdvancedSecurityOption) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Whether the internal user database is enabled.
func (o GetDomainAdvancedSecurityOptionOutput) InternalUserDatabaseEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainAdvancedSecurityOption) bool { return v.InternalUserDatabaseEnabled }).(pulumi.BoolOutput)
}

type GetDomainAdvancedSecurityOptionArrayOutput struct{ *pulumi.OutputState }

func (GetDomainAdvancedSecurityOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainAdvancedSecurityOption)(nil)).Elem()
}

func (o GetDomainAdvancedSecurityOptionArrayOutput) ToGetDomainAdvancedSecurityOptionArrayOutput() GetDomainAdvancedSecurityOptionArrayOutput {
	return o
}

func (o GetDomainAdvancedSecurityOptionArrayOutput) ToGetDomainAdvancedSecurityOptionArrayOutputWithContext(ctx context.Context) GetDomainAdvancedSecurityOptionArrayOutput {
	return o
}

func (o GetDomainAdvancedSecurityOptionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainAdvancedSecurityOption] {
	return pulumix.Output[[]GetDomainAdvancedSecurityOption]{
		OutputState: o.OutputState,
	}
}

func (o GetDomainAdvancedSecurityOptionArrayOutput) Index(i pulumi.IntInput) GetDomainAdvancedSecurityOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainAdvancedSecurityOption {
		return vs[0].([]GetDomainAdvancedSecurityOption)[vs[1].(int)]
	}).(GetDomainAdvancedSecurityOptionOutput)
}

type GetDomainAutoTuneOption struct {
	// The Auto-Tune desired state for the domain.
	DesiredState string `pulumi:"desiredState"`
	// A list of the nested configurations for the Auto-Tune maintenance windows of the domain.
	MaintenanceSchedules []GetDomainAutoTuneOptionMaintenanceSchedule `pulumi:"maintenanceSchedules"`
	// Whether the domain is set to roll back to default Auto-Tune settings when disabling Auto-Tune.
	RollbackOnDisable string `pulumi:"rollbackOnDisable"`
}

// GetDomainAutoTuneOptionInput is an input type that accepts GetDomainAutoTuneOptionArgs and GetDomainAutoTuneOptionOutput values.
// You can construct a concrete instance of `GetDomainAutoTuneOptionInput` via:
//
//	GetDomainAutoTuneOptionArgs{...}
type GetDomainAutoTuneOptionInput interface {
	pulumi.Input

	ToGetDomainAutoTuneOptionOutput() GetDomainAutoTuneOptionOutput
	ToGetDomainAutoTuneOptionOutputWithContext(context.Context) GetDomainAutoTuneOptionOutput
}

type GetDomainAutoTuneOptionArgs struct {
	// The Auto-Tune desired state for the domain.
	DesiredState pulumi.StringInput `pulumi:"desiredState"`
	// A list of the nested configurations for the Auto-Tune maintenance windows of the domain.
	MaintenanceSchedules GetDomainAutoTuneOptionMaintenanceScheduleArrayInput `pulumi:"maintenanceSchedules"`
	// Whether the domain is set to roll back to default Auto-Tune settings when disabling Auto-Tune.
	RollbackOnDisable pulumi.StringInput `pulumi:"rollbackOnDisable"`
}

func (GetDomainAutoTuneOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainAutoTuneOption)(nil)).Elem()
}

func (i GetDomainAutoTuneOptionArgs) ToGetDomainAutoTuneOptionOutput() GetDomainAutoTuneOptionOutput {
	return i.ToGetDomainAutoTuneOptionOutputWithContext(context.Background())
}

func (i GetDomainAutoTuneOptionArgs) ToGetDomainAutoTuneOptionOutputWithContext(ctx context.Context) GetDomainAutoTuneOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainAutoTuneOptionOutput)
}

func (i GetDomainAutoTuneOptionArgs) ToOutput(ctx context.Context) pulumix.Output[GetDomainAutoTuneOption] {
	return pulumix.Output[GetDomainAutoTuneOption]{
		OutputState: i.ToGetDomainAutoTuneOptionOutputWithContext(ctx).OutputState,
	}
}

// GetDomainAutoTuneOptionArrayInput is an input type that accepts GetDomainAutoTuneOptionArray and GetDomainAutoTuneOptionArrayOutput values.
// You can construct a concrete instance of `GetDomainAutoTuneOptionArrayInput` via:
//
//	GetDomainAutoTuneOptionArray{ GetDomainAutoTuneOptionArgs{...} }
type GetDomainAutoTuneOptionArrayInput interface {
	pulumi.Input

	ToGetDomainAutoTuneOptionArrayOutput() GetDomainAutoTuneOptionArrayOutput
	ToGetDomainAutoTuneOptionArrayOutputWithContext(context.Context) GetDomainAutoTuneOptionArrayOutput
}

type GetDomainAutoTuneOptionArray []GetDomainAutoTuneOptionInput

func (GetDomainAutoTuneOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainAutoTuneOption)(nil)).Elem()
}

func (i GetDomainAutoTuneOptionArray) ToGetDomainAutoTuneOptionArrayOutput() GetDomainAutoTuneOptionArrayOutput {
	return i.ToGetDomainAutoTuneOptionArrayOutputWithContext(context.Background())
}

func (i GetDomainAutoTuneOptionArray) ToGetDomainAutoTuneOptionArrayOutputWithContext(ctx context.Context) GetDomainAutoTuneOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainAutoTuneOptionArrayOutput)
}

func (i GetDomainAutoTuneOptionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainAutoTuneOption] {
	return pulumix.Output[[]GetDomainAutoTuneOption]{
		OutputState: i.ToGetDomainAutoTuneOptionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDomainAutoTuneOptionOutput struct{ *pulumi.OutputState }

func (GetDomainAutoTuneOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainAutoTuneOption)(nil)).Elem()
}

func (o GetDomainAutoTuneOptionOutput) ToGetDomainAutoTuneOptionOutput() GetDomainAutoTuneOptionOutput {
	return o
}

func (o GetDomainAutoTuneOptionOutput) ToGetDomainAutoTuneOptionOutputWithContext(ctx context.Context) GetDomainAutoTuneOptionOutput {
	return o
}

func (o GetDomainAutoTuneOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetDomainAutoTuneOption] {
	return pulumix.Output[GetDomainAutoTuneOption]{
		OutputState: o.OutputState,
	}
}

// The Auto-Tune desired state for the domain.
func (o GetDomainAutoTuneOptionOutput) DesiredState() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainAutoTuneOption) string { return v.DesiredState }).(pulumi.StringOutput)
}

// A list of the nested configurations for the Auto-Tune maintenance windows of the domain.
func (o GetDomainAutoTuneOptionOutput) MaintenanceSchedules() GetDomainAutoTuneOptionMaintenanceScheduleArrayOutput {
	return o.ApplyT(func(v GetDomainAutoTuneOption) []GetDomainAutoTuneOptionMaintenanceSchedule {
		return v.MaintenanceSchedules
	}).(GetDomainAutoTuneOptionMaintenanceScheduleArrayOutput)
}

// Whether the domain is set to roll back to default Auto-Tune settings when disabling Auto-Tune.
func (o GetDomainAutoTuneOptionOutput) RollbackOnDisable() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainAutoTuneOption) string { return v.RollbackOnDisable }).(pulumi.StringOutput)
}

type GetDomainAutoTuneOptionArrayOutput struct{ *pulumi.OutputState }

func (GetDomainAutoTuneOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainAutoTuneOption)(nil)).Elem()
}

func (o GetDomainAutoTuneOptionArrayOutput) ToGetDomainAutoTuneOptionArrayOutput() GetDomainAutoTuneOptionArrayOutput {
	return o
}

func (o GetDomainAutoTuneOptionArrayOutput) ToGetDomainAutoTuneOptionArrayOutputWithContext(ctx context.Context) GetDomainAutoTuneOptionArrayOutput {
	return o
}

func (o GetDomainAutoTuneOptionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainAutoTuneOption] {
	return pulumix.Output[[]GetDomainAutoTuneOption]{
		OutputState: o.OutputState,
	}
}

func (o GetDomainAutoTuneOptionArrayOutput) Index(i pulumi.IntInput) GetDomainAutoTuneOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainAutoTuneOption {
		return vs[0].([]GetDomainAutoTuneOption)[vs[1].(int)]
	}).(GetDomainAutoTuneOptionOutput)
}

type GetDomainAutoTuneOptionMaintenanceSchedule struct {
	// Cron expression for an Auto-Tune maintenance schedule.
	CronExpressionForRecurrence string `pulumi:"cronExpressionForRecurrence"`
	// Configuration block for the duration of the Auto-Tune maintenance window.
	Durations []GetDomainAutoTuneOptionMaintenanceScheduleDuration `pulumi:"durations"`
	// Date and time at which the Auto-Tune maintenance schedule starts in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
	StartAt string `pulumi:"startAt"`
}

// GetDomainAutoTuneOptionMaintenanceScheduleInput is an input type that accepts GetDomainAutoTuneOptionMaintenanceScheduleArgs and GetDomainAutoTuneOptionMaintenanceScheduleOutput values.
// You can construct a concrete instance of `GetDomainAutoTuneOptionMaintenanceScheduleInput` via:
//
//	GetDomainAutoTuneOptionMaintenanceScheduleArgs{...}
type GetDomainAutoTuneOptionMaintenanceScheduleInput interface {
	pulumi.Input

	ToGetDomainAutoTuneOptionMaintenanceScheduleOutput() GetDomainAutoTuneOptionMaintenanceScheduleOutput
	ToGetDomainAutoTuneOptionMaintenanceScheduleOutputWithContext(context.Context) GetDomainAutoTuneOptionMaintenanceScheduleOutput
}

type GetDomainAutoTuneOptionMaintenanceScheduleArgs struct {
	// Cron expression for an Auto-Tune maintenance schedule.
	CronExpressionForRecurrence pulumi.StringInput `pulumi:"cronExpressionForRecurrence"`
	// Configuration block for the duration of the Auto-Tune maintenance window.
	Durations GetDomainAutoTuneOptionMaintenanceScheduleDurationArrayInput `pulumi:"durations"`
	// Date and time at which the Auto-Tune maintenance schedule starts in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
	StartAt pulumi.StringInput `pulumi:"startAt"`
}

func (GetDomainAutoTuneOptionMaintenanceScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainAutoTuneOptionMaintenanceSchedule)(nil)).Elem()
}

func (i GetDomainAutoTuneOptionMaintenanceScheduleArgs) ToGetDomainAutoTuneOptionMaintenanceScheduleOutput() GetDomainAutoTuneOptionMaintenanceScheduleOutput {
	return i.ToGetDomainAutoTuneOptionMaintenanceScheduleOutputWithContext(context.Background())
}

func (i GetDomainAutoTuneOptionMaintenanceScheduleArgs) ToGetDomainAutoTuneOptionMaintenanceScheduleOutputWithContext(ctx context.Context) GetDomainAutoTuneOptionMaintenanceScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainAutoTuneOptionMaintenanceScheduleOutput)
}

func (i GetDomainAutoTuneOptionMaintenanceScheduleArgs) ToOutput(ctx context.Context) pulumix.Output[GetDomainAutoTuneOptionMaintenanceSchedule] {
	return pulumix.Output[GetDomainAutoTuneOptionMaintenanceSchedule]{
		OutputState: i.ToGetDomainAutoTuneOptionMaintenanceScheduleOutputWithContext(ctx).OutputState,
	}
}

// GetDomainAutoTuneOptionMaintenanceScheduleArrayInput is an input type that accepts GetDomainAutoTuneOptionMaintenanceScheduleArray and GetDomainAutoTuneOptionMaintenanceScheduleArrayOutput values.
// You can construct a concrete instance of `GetDomainAutoTuneOptionMaintenanceScheduleArrayInput` via:
//
//	GetDomainAutoTuneOptionMaintenanceScheduleArray{ GetDomainAutoTuneOptionMaintenanceScheduleArgs{...} }
type GetDomainAutoTuneOptionMaintenanceScheduleArrayInput interface {
	pulumi.Input

	ToGetDomainAutoTuneOptionMaintenanceScheduleArrayOutput() GetDomainAutoTuneOptionMaintenanceScheduleArrayOutput
	ToGetDomainAutoTuneOptionMaintenanceScheduleArrayOutputWithContext(context.Context) GetDomainAutoTuneOptionMaintenanceScheduleArrayOutput
}

type GetDomainAutoTuneOptionMaintenanceScheduleArray []GetDomainAutoTuneOptionMaintenanceScheduleInput

func (GetDomainAutoTuneOptionMaintenanceScheduleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainAutoTuneOptionMaintenanceSchedule)(nil)).Elem()
}

func (i GetDomainAutoTuneOptionMaintenanceScheduleArray) ToGetDomainAutoTuneOptionMaintenanceScheduleArrayOutput() GetDomainAutoTuneOptionMaintenanceScheduleArrayOutput {
	return i.ToGetDomainAutoTuneOptionMaintenanceScheduleArrayOutputWithContext(context.Background())
}

func (i GetDomainAutoTuneOptionMaintenanceScheduleArray) ToGetDomainAutoTuneOptionMaintenanceScheduleArrayOutputWithContext(ctx context.Context) GetDomainAutoTuneOptionMaintenanceScheduleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainAutoTuneOptionMaintenanceScheduleArrayOutput)
}

func (i GetDomainAutoTuneOptionMaintenanceScheduleArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainAutoTuneOptionMaintenanceSchedule] {
	return pulumix.Output[[]GetDomainAutoTuneOptionMaintenanceSchedule]{
		OutputState: i.ToGetDomainAutoTuneOptionMaintenanceScheduleArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDomainAutoTuneOptionMaintenanceScheduleOutput struct{ *pulumi.OutputState }

func (GetDomainAutoTuneOptionMaintenanceScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainAutoTuneOptionMaintenanceSchedule)(nil)).Elem()
}

func (o GetDomainAutoTuneOptionMaintenanceScheduleOutput) ToGetDomainAutoTuneOptionMaintenanceScheduleOutput() GetDomainAutoTuneOptionMaintenanceScheduleOutput {
	return o
}

func (o GetDomainAutoTuneOptionMaintenanceScheduleOutput) ToGetDomainAutoTuneOptionMaintenanceScheduleOutputWithContext(ctx context.Context) GetDomainAutoTuneOptionMaintenanceScheduleOutput {
	return o
}

func (o GetDomainAutoTuneOptionMaintenanceScheduleOutput) ToOutput(ctx context.Context) pulumix.Output[GetDomainAutoTuneOptionMaintenanceSchedule] {
	return pulumix.Output[GetDomainAutoTuneOptionMaintenanceSchedule]{
		OutputState: o.OutputState,
	}
}

// Cron expression for an Auto-Tune maintenance schedule.
func (o GetDomainAutoTuneOptionMaintenanceScheduleOutput) CronExpressionForRecurrence() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainAutoTuneOptionMaintenanceSchedule) string { return v.CronExpressionForRecurrence }).(pulumi.StringOutput)
}

// Configuration block for the duration of the Auto-Tune maintenance window.
func (o GetDomainAutoTuneOptionMaintenanceScheduleOutput) Durations() GetDomainAutoTuneOptionMaintenanceScheduleDurationArrayOutput {
	return o.ApplyT(func(v GetDomainAutoTuneOptionMaintenanceSchedule) []GetDomainAutoTuneOptionMaintenanceScheduleDuration {
		return v.Durations
	}).(GetDomainAutoTuneOptionMaintenanceScheduleDurationArrayOutput)
}

// Date and time at which the Auto-Tune maintenance schedule starts in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
func (o GetDomainAutoTuneOptionMaintenanceScheduleOutput) StartAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainAutoTuneOptionMaintenanceSchedule) string { return v.StartAt }).(pulumi.StringOutput)
}

type GetDomainAutoTuneOptionMaintenanceScheduleArrayOutput struct{ *pulumi.OutputState }

func (GetDomainAutoTuneOptionMaintenanceScheduleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainAutoTuneOptionMaintenanceSchedule)(nil)).Elem()
}

func (o GetDomainAutoTuneOptionMaintenanceScheduleArrayOutput) ToGetDomainAutoTuneOptionMaintenanceScheduleArrayOutput() GetDomainAutoTuneOptionMaintenanceScheduleArrayOutput {
	return o
}

func (o GetDomainAutoTuneOptionMaintenanceScheduleArrayOutput) ToGetDomainAutoTuneOptionMaintenanceScheduleArrayOutputWithContext(ctx context.Context) GetDomainAutoTuneOptionMaintenanceScheduleArrayOutput {
	return o
}

func (o GetDomainAutoTuneOptionMaintenanceScheduleArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainAutoTuneOptionMaintenanceSchedule] {
	return pulumix.Output[[]GetDomainAutoTuneOptionMaintenanceSchedule]{
		OutputState: o.OutputState,
	}
}

func (o GetDomainAutoTuneOptionMaintenanceScheduleArrayOutput) Index(i pulumi.IntInput) GetDomainAutoTuneOptionMaintenanceScheduleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainAutoTuneOptionMaintenanceSchedule {
		return vs[0].([]GetDomainAutoTuneOptionMaintenanceSchedule)[vs[1].(int)]
	}).(GetDomainAutoTuneOptionMaintenanceScheduleOutput)
}

type GetDomainAutoTuneOptionMaintenanceScheduleDuration struct {
	// Unit of time.
	Unit string `pulumi:"unit"`
	// Duration of an Auto-Tune maintenance window.
	Value int `pulumi:"value"`
}

// GetDomainAutoTuneOptionMaintenanceScheduleDurationInput is an input type that accepts GetDomainAutoTuneOptionMaintenanceScheduleDurationArgs and GetDomainAutoTuneOptionMaintenanceScheduleDurationOutput values.
// You can construct a concrete instance of `GetDomainAutoTuneOptionMaintenanceScheduleDurationInput` via:
//
//	GetDomainAutoTuneOptionMaintenanceScheduleDurationArgs{...}
type GetDomainAutoTuneOptionMaintenanceScheduleDurationInput interface {
	pulumi.Input

	ToGetDomainAutoTuneOptionMaintenanceScheduleDurationOutput() GetDomainAutoTuneOptionMaintenanceScheduleDurationOutput
	ToGetDomainAutoTuneOptionMaintenanceScheduleDurationOutputWithContext(context.Context) GetDomainAutoTuneOptionMaintenanceScheduleDurationOutput
}

type GetDomainAutoTuneOptionMaintenanceScheduleDurationArgs struct {
	// Unit of time.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Duration of an Auto-Tune maintenance window.
	Value pulumi.IntInput `pulumi:"value"`
}

func (GetDomainAutoTuneOptionMaintenanceScheduleDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainAutoTuneOptionMaintenanceScheduleDuration)(nil)).Elem()
}

func (i GetDomainAutoTuneOptionMaintenanceScheduleDurationArgs) ToGetDomainAutoTuneOptionMaintenanceScheduleDurationOutput() GetDomainAutoTuneOptionMaintenanceScheduleDurationOutput {
	return i.ToGetDomainAutoTuneOptionMaintenanceScheduleDurationOutputWithContext(context.Background())
}

func (i GetDomainAutoTuneOptionMaintenanceScheduleDurationArgs) ToGetDomainAutoTuneOptionMaintenanceScheduleDurationOutputWithContext(ctx context.Context) GetDomainAutoTuneOptionMaintenanceScheduleDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainAutoTuneOptionMaintenanceScheduleDurationOutput)
}

func (i GetDomainAutoTuneOptionMaintenanceScheduleDurationArgs) ToOutput(ctx context.Context) pulumix.Output[GetDomainAutoTuneOptionMaintenanceScheduleDuration] {
	return pulumix.Output[GetDomainAutoTuneOptionMaintenanceScheduleDuration]{
		OutputState: i.ToGetDomainAutoTuneOptionMaintenanceScheduleDurationOutputWithContext(ctx).OutputState,
	}
}

// GetDomainAutoTuneOptionMaintenanceScheduleDurationArrayInput is an input type that accepts GetDomainAutoTuneOptionMaintenanceScheduleDurationArray and GetDomainAutoTuneOptionMaintenanceScheduleDurationArrayOutput values.
// You can construct a concrete instance of `GetDomainAutoTuneOptionMaintenanceScheduleDurationArrayInput` via:
//
//	GetDomainAutoTuneOptionMaintenanceScheduleDurationArray{ GetDomainAutoTuneOptionMaintenanceScheduleDurationArgs{...} }
type GetDomainAutoTuneOptionMaintenanceScheduleDurationArrayInput interface {
	pulumi.Input

	ToGetDomainAutoTuneOptionMaintenanceScheduleDurationArrayOutput() GetDomainAutoTuneOptionMaintenanceScheduleDurationArrayOutput
	ToGetDomainAutoTuneOptionMaintenanceScheduleDurationArrayOutputWithContext(context.Context) GetDomainAutoTuneOptionMaintenanceScheduleDurationArrayOutput
}

type GetDomainAutoTuneOptionMaintenanceScheduleDurationArray []GetDomainAutoTuneOptionMaintenanceScheduleDurationInput

func (GetDomainAutoTuneOptionMaintenanceScheduleDurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainAutoTuneOptionMaintenanceScheduleDuration)(nil)).Elem()
}

func (i GetDomainAutoTuneOptionMaintenanceScheduleDurationArray) ToGetDomainAutoTuneOptionMaintenanceScheduleDurationArrayOutput() GetDomainAutoTuneOptionMaintenanceScheduleDurationArrayOutput {
	return i.ToGetDomainAutoTuneOptionMaintenanceScheduleDurationArrayOutputWithContext(context.Background())
}

func (i GetDomainAutoTuneOptionMaintenanceScheduleDurationArray) ToGetDomainAutoTuneOptionMaintenanceScheduleDurationArrayOutputWithContext(ctx context.Context) GetDomainAutoTuneOptionMaintenanceScheduleDurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainAutoTuneOptionMaintenanceScheduleDurationArrayOutput)
}

func (i GetDomainAutoTuneOptionMaintenanceScheduleDurationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainAutoTuneOptionMaintenanceScheduleDuration] {
	return pulumix.Output[[]GetDomainAutoTuneOptionMaintenanceScheduleDuration]{
		OutputState: i.ToGetDomainAutoTuneOptionMaintenanceScheduleDurationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDomainAutoTuneOptionMaintenanceScheduleDurationOutput struct{ *pulumi.OutputState }

func (GetDomainAutoTuneOptionMaintenanceScheduleDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainAutoTuneOptionMaintenanceScheduleDuration)(nil)).Elem()
}

func (o GetDomainAutoTuneOptionMaintenanceScheduleDurationOutput) ToGetDomainAutoTuneOptionMaintenanceScheduleDurationOutput() GetDomainAutoTuneOptionMaintenanceScheduleDurationOutput {
	return o
}

func (o GetDomainAutoTuneOptionMaintenanceScheduleDurationOutput) ToGetDomainAutoTuneOptionMaintenanceScheduleDurationOutputWithContext(ctx context.Context) GetDomainAutoTuneOptionMaintenanceScheduleDurationOutput {
	return o
}

func (o GetDomainAutoTuneOptionMaintenanceScheduleDurationOutput) ToOutput(ctx context.Context) pulumix.Output[GetDomainAutoTuneOptionMaintenanceScheduleDuration] {
	return pulumix.Output[GetDomainAutoTuneOptionMaintenanceScheduleDuration]{
		OutputState: o.OutputState,
	}
}

// Unit of time.
func (o GetDomainAutoTuneOptionMaintenanceScheduleDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainAutoTuneOptionMaintenanceScheduleDuration) string { return v.Unit }).(pulumi.StringOutput)
}

// Duration of an Auto-Tune maintenance window.
func (o GetDomainAutoTuneOptionMaintenanceScheduleDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainAutoTuneOptionMaintenanceScheduleDuration) int { return v.Value }).(pulumi.IntOutput)
}

type GetDomainAutoTuneOptionMaintenanceScheduleDurationArrayOutput struct{ *pulumi.OutputState }

func (GetDomainAutoTuneOptionMaintenanceScheduleDurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainAutoTuneOptionMaintenanceScheduleDuration)(nil)).Elem()
}

func (o GetDomainAutoTuneOptionMaintenanceScheduleDurationArrayOutput) ToGetDomainAutoTuneOptionMaintenanceScheduleDurationArrayOutput() GetDomainAutoTuneOptionMaintenanceScheduleDurationArrayOutput {
	return o
}

func (o GetDomainAutoTuneOptionMaintenanceScheduleDurationArrayOutput) ToGetDomainAutoTuneOptionMaintenanceScheduleDurationArrayOutputWithContext(ctx context.Context) GetDomainAutoTuneOptionMaintenanceScheduleDurationArrayOutput {
	return o
}

func (o GetDomainAutoTuneOptionMaintenanceScheduleDurationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainAutoTuneOptionMaintenanceScheduleDuration] {
	return pulumix.Output[[]GetDomainAutoTuneOptionMaintenanceScheduleDuration]{
		OutputState: o.OutputState,
	}
}

func (o GetDomainAutoTuneOptionMaintenanceScheduleDurationArrayOutput) Index(i pulumi.IntInput) GetDomainAutoTuneOptionMaintenanceScheduleDurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainAutoTuneOptionMaintenanceScheduleDuration {
		return vs[0].([]GetDomainAutoTuneOptionMaintenanceScheduleDuration)[vs[1].(int)]
	}).(GetDomainAutoTuneOptionMaintenanceScheduleDurationOutput)
}

type GetDomainClusterConfig struct {
	// Configuration block containing cold storage configuration.
	ColdStorageOptions []GetDomainClusterConfigColdStorageOption `pulumi:"coldStorageOptions"`
	// Number of dedicated master nodes in the cluster.
	DedicatedMasterCount int `pulumi:"dedicatedMasterCount"`
	// Indicates whether dedicated master nodes are enabled for the cluster.
	DedicatedMasterEnabled bool `pulumi:"dedicatedMasterEnabled"`
	// Instance type of the dedicated master nodes in the cluster.
	DedicatedMasterType string `pulumi:"dedicatedMasterType"`
	// Number of instances in the cluster.
	InstanceCount int `pulumi:"instanceCount"`
	// Instance type of data nodes in the cluster.
	InstanceType string `pulumi:"instanceType"`
	// The number of warm nodes in the cluster.
	WarmCount int `pulumi:"warmCount"`
	// Warm storage is enabled.
	WarmEnabled bool `pulumi:"warmEnabled"`
	// The instance type for the Elasticsearch cluster's warm nodes.
	WarmType string `pulumi:"warmType"`
	// Configuration block containing zone awareness settings.
	ZoneAwarenessConfigs []GetDomainClusterConfigZoneAwarenessConfig `pulumi:"zoneAwarenessConfigs"`
	// Indicates whether zone awareness is enabled.
	ZoneAwarenessEnabled bool `pulumi:"zoneAwarenessEnabled"`
}

// GetDomainClusterConfigInput is an input type that accepts GetDomainClusterConfigArgs and GetDomainClusterConfigOutput values.
// You can construct a concrete instance of `GetDomainClusterConfigInput` via:
//
//	GetDomainClusterConfigArgs{...}
type GetDomainClusterConfigInput interface {
	pulumi.Input

	ToGetDomainClusterConfigOutput() GetDomainClusterConfigOutput
	ToGetDomainClusterConfigOutputWithContext(context.Context) GetDomainClusterConfigOutput
}

type GetDomainClusterConfigArgs struct {
	// Configuration block containing cold storage configuration.
	ColdStorageOptions GetDomainClusterConfigColdStorageOptionArrayInput `pulumi:"coldStorageOptions"`
	// Number of dedicated master nodes in the cluster.
	DedicatedMasterCount pulumi.IntInput `pulumi:"dedicatedMasterCount"`
	// Indicates whether dedicated master nodes are enabled for the cluster.
	DedicatedMasterEnabled pulumi.BoolInput `pulumi:"dedicatedMasterEnabled"`
	// Instance type of the dedicated master nodes in the cluster.
	DedicatedMasterType pulumi.StringInput `pulumi:"dedicatedMasterType"`
	// Number of instances in the cluster.
	InstanceCount pulumi.IntInput `pulumi:"instanceCount"`
	// Instance type of data nodes in the cluster.
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// The number of warm nodes in the cluster.
	WarmCount pulumi.IntInput `pulumi:"warmCount"`
	// Warm storage is enabled.
	WarmEnabled pulumi.BoolInput `pulumi:"warmEnabled"`
	// The instance type for the Elasticsearch cluster's warm nodes.
	WarmType pulumi.StringInput `pulumi:"warmType"`
	// Configuration block containing zone awareness settings.
	ZoneAwarenessConfigs GetDomainClusterConfigZoneAwarenessConfigArrayInput `pulumi:"zoneAwarenessConfigs"`
	// Indicates whether zone awareness is enabled.
	ZoneAwarenessEnabled pulumi.BoolInput `pulumi:"zoneAwarenessEnabled"`
}

func (GetDomainClusterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainClusterConfig)(nil)).Elem()
}

func (i GetDomainClusterConfigArgs) ToGetDomainClusterConfigOutput() GetDomainClusterConfigOutput {
	return i.ToGetDomainClusterConfigOutputWithContext(context.Background())
}

func (i GetDomainClusterConfigArgs) ToGetDomainClusterConfigOutputWithContext(ctx context.Context) GetDomainClusterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainClusterConfigOutput)
}

func (i GetDomainClusterConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetDomainClusterConfig] {
	return pulumix.Output[GetDomainClusterConfig]{
		OutputState: i.ToGetDomainClusterConfigOutputWithContext(ctx).OutputState,
	}
}

// GetDomainClusterConfigArrayInput is an input type that accepts GetDomainClusterConfigArray and GetDomainClusterConfigArrayOutput values.
// You can construct a concrete instance of `GetDomainClusterConfigArrayInput` via:
//
//	GetDomainClusterConfigArray{ GetDomainClusterConfigArgs{...} }
type GetDomainClusterConfigArrayInput interface {
	pulumi.Input

	ToGetDomainClusterConfigArrayOutput() GetDomainClusterConfigArrayOutput
	ToGetDomainClusterConfigArrayOutputWithContext(context.Context) GetDomainClusterConfigArrayOutput
}

type GetDomainClusterConfigArray []GetDomainClusterConfigInput

func (GetDomainClusterConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainClusterConfig)(nil)).Elem()
}

func (i GetDomainClusterConfigArray) ToGetDomainClusterConfigArrayOutput() GetDomainClusterConfigArrayOutput {
	return i.ToGetDomainClusterConfigArrayOutputWithContext(context.Background())
}

func (i GetDomainClusterConfigArray) ToGetDomainClusterConfigArrayOutputWithContext(ctx context.Context) GetDomainClusterConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainClusterConfigArrayOutput)
}

func (i GetDomainClusterConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainClusterConfig] {
	return pulumix.Output[[]GetDomainClusterConfig]{
		OutputState: i.ToGetDomainClusterConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDomainClusterConfigOutput struct{ *pulumi.OutputState }

func (GetDomainClusterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainClusterConfig)(nil)).Elem()
}

func (o GetDomainClusterConfigOutput) ToGetDomainClusterConfigOutput() GetDomainClusterConfigOutput {
	return o
}

func (o GetDomainClusterConfigOutput) ToGetDomainClusterConfigOutputWithContext(ctx context.Context) GetDomainClusterConfigOutput {
	return o
}

func (o GetDomainClusterConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetDomainClusterConfig] {
	return pulumix.Output[GetDomainClusterConfig]{
		OutputState: o.OutputState,
	}
}

// Configuration block containing cold storage configuration.
func (o GetDomainClusterConfigOutput) ColdStorageOptions() GetDomainClusterConfigColdStorageOptionArrayOutput {
	return o.ApplyT(func(v GetDomainClusterConfig) []GetDomainClusterConfigColdStorageOption { return v.ColdStorageOptions }).(GetDomainClusterConfigColdStorageOptionArrayOutput)
}

// Number of dedicated master nodes in the cluster.
func (o GetDomainClusterConfigOutput) DedicatedMasterCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainClusterConfig) int { return v.DedicatedMasterCount }).(pulumi.IntOutput)
}

// Indicates whether dedicated master nodes are enabled for the cluster.
func (o GetDomainClusterConfigOutput) DedicatedMasterEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainClusterConfig) bool { return v.DedicatedMasterEnabled }).(pulumi.BoolOutput)
}

// Instance type of the dedicated master nodes in the cluster.
func (o GetDomainClusterConfigOutput) DedicatedMasterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainClusterConfig) string { return v.DedicatedMasterType }).(pulumi.StringOutput)
}

// Number of instances in the cluster.
func (o GetDomainClusterConfigOutput) InstanceCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainClusterConfig) int { return v.InstanceCount }).(pulumi.IntOutput)
}

// Instance type of data nodes in the cluster.
func (o GetDomainClusterConfigOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainClusterConfig) string { return v.InstanceType }).(pulumi.StringOutput)
}

// The number of warm nodes in the cluster.
func (o GetDomainClusterConfigOutput) WarmCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainClusterConfig) int { return v.WarmCount }).(pulumi.IntOutput)
}

// Warm storage is enabled.
func (o GetDomainClusterConfigOutput) WarmEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainClusterConfig) bool { return v.WarmEnabled }).(pulumi.BoolOutput)
}

// The instance type for the Elasticsearch cluster's warm nodes.
func (o GetDomainClusterConfigOutput) WarmType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainClusterConfig) string { return v.WarmType }).(pulumi.StringOutput)
}

// Configuration block containing zone awareness settings.
func (o GetDomainClusterConfigOutput) ZoneAwarenessConfigs() GetDomainClusterConfigZoneAwarenessConfigArrayOutput {
	return o.ApplyT(func(v GetDomainClusterConfig) []GetDomainClusterConfigZoneAwarenessConfig {
		return v.ZoneAwarenessConfigs
	}).(GetDomainClusterConfigZoneAwarenessConfigArrayOutput)
}

// Indicates whether zone awareness is enabled.
func (o GetDomainClusterConfigOutput) ZoneAwarenessEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainClusterConfig) bool { return v.ZoneAwarenessEnabled }).(pulumi.BoolOutput)
}

type GetDomainClusterConfigArrayOutput struct{ *pulumi.OutputState }

func (GetDomainClusterConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainClusterConfig)(nil)).Elem()
}

func (o GetDomainClusterConfigArrayOutput) ToGetDomainClusterConfigArrayOutput() GetDomainClusterConfigArrayOutput {
	return o
}

func (o GetDomainClusterConfigArrayOutput) ToGetDomainClusterConfigArrayOutputWithContext(ctx context.Context) GetDomainClusterConfigArrayOutput {
	return o
}

func (o GetDomainClusterConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainClusterConfig] {
	return pulumix.Output[[]GetDomainClusterConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetDomainClusterConfigArrayOutput) Index(i pulumi.IntInput) GetDomainClusterConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainClusterConfig {
		return vs[0].([]GetDomainClusterConfig)[vs[1].(int)]
	}).(GetDomainClusterConfigOutput)
}

type GetDomainClusterConfigColdStorageOption struct {
	// Whether node to node encryption is enabled.
	Enabled bool `pulumi:"enabled"`
}

// GetDomainClusterConfigColdStorageOptionInput is an input type that accepts GetDomainClusterConfigColdStorageOptionArgs and GetDomainClusterConfigColdStorageOptionOutput values.
// You can construct a concrete instance of `GetDomainClusterConfigColdStorageOptionInput` via:
//
//	GetDomainClusterConfigColdStorageOptionArgs{...}
type GetDomainClusterConfigColdStorageOptionInput interface {
	pulumi.Input

	ToGetDomainClusterConfigColdStorageOptionOutput() GetDomainClusterConfigColdStorageOptionOutput
	ToGetDomainClusterConfigColdStorageOptionOutputWithContext(context.Context) GetDomainClusterConfigColdStorageOptionOutput
}

type GetDomainClusterConfigColdStorageOptionArgs struct {
	// Whether node to node encryption is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetDomainClusterConfigColdStorageOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainClusterConfigColdStorageOption)(nil)).Elem()
}

func (i GetDomainClusterConfigColdStorageOptionArgs) ToGetDomainClusterConfigColdStorageOptionOutput() GetDomainClusterConfigColdStorageOptionOutput {
	return i.ToGetDomainClusterConfigColdStorageOptionOutputWithContext(context.Background())
}

func (i GetDomainClusterConfigColdStorageOptionArgs) ToGetDomainClusterConfigColdStorageOptionOutputWithContext(ctx context.Context) GetDomainClusterConfigColdStorageOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainClusterConfigColdStorageOptionOutput)
}

func (i GetDomainClusterConfigColdStorageOptionArgs) ToOutput(ctx context.Context) pulumix.Output[GetDomainClusterConfigColdStorageOption] {
	return pulumix.Output[GetDomainClusterConfigColdStorageOption]{
		OutputState: i.ToGetDomainClusterConfigColdStorageOptionOutputWithContext(ctx).OutputState,
	}
}

// GetDomainClusterConfigColdStorageOptionArrayInput is an input type that accepts GetDomainClusterConfigColdStorageOptionArray and GetDomainClusterConfigColdStorageOptionArrayOutput values.
// You can construct a concrete instance of `GetDomainClusterConfigColdStorageOptionArrayInput` via:
//
//	GetDomainClusterConfigColdStorageOptionArray{ GetDomainClusterConfigColdStorageOptionArgs{...} }
type GetDomainClusterConfigColdStorageOptionArrayInput interface {
	pulumi.Input

	ToGetDomainClusterConfigColdStorageOptionArrayOutput() GetDomainClusterConfigColdStorageOptionArrayOutput
	ToGetDomainClusterConfigColdStorageOptionArrayOutputWithContext(context.Context) GetDomainClusterConfigColdStorageOptionArrayOutput
}

type GetDomainClusterConfigColdStorageOptionArray []GetDomainClusterConfigColdStorageOptionInput

func (GetDomainClusterConfigColdStorageOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainClusterConfigColdStorageOption)(nil)).Elem()
}

func (i GetDomainClusterConfigColdStorageOptionArray) ToGetDomainClusterConfigColdStorageOptionArrayOutput() GetDomainClusterConfigColdStorageOptionArrayOutput {
	return i.ToGetDomainClusterConfigColdStorageOptionArrayOutputWithContext(context.Background())
}

func (i GetDomainClusterConfigColdStorageOptionArray) ToGetDomainClusterConfigColdStorageOptionArrayOutputWithContext(ctx context.Context) GetDomainClusterConfigColdStorageOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainClusterConfigColdStorageOptionArrayOutput)
}

func (i GetDomainClusterConfigColdStorageOptionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainClusterConfigColdStorageOption] {
	return pulumix.Output[[]GetDomainClusterConfigColdStorageOption]{
		OutputState: i.ToGetDomainClusterConfigColdStorageOptionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDomainClusterConfigColdStorageOptionOutput struct{ *pulumi.OutputState }

func (GetDomainClusterConfigColdStorageOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainClusterConfigColdStorageOption)(nil)).Elem()
}

func (o GetDomainClusterConfigColdStorageOptionOutput) ToGetDomainClusterConfigColdStorageOptionOutput() GetDomainClusterConfigColdStorageOptionOutput {
	return o
}

func (o GetDomainClusterConfigColdStorageOptionOutput) ToGetDomainClusterConfigColdStorageOptionOutputWithContext(ctx context.Context) GetDomainClusterConfigColdStorageOptionOutput {
	return o
}

func (o GetDomainClusterConfigColdStorageOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetDomainClusterConfigColdStorageOption] {
	return pulumix.Output[GetDomainClusterConfigColdStorageOption]{
		OutputState: o.OutputState,
	}
}

// Whether node to node encryption is enabled.
func (o GetDomainClusterConfigColdStorageOptionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainClusterConfigColdStorageOption) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetDomainClusterConfigColdStorageOptionArrayOutput struct{ *pulumi.OutputState }

func (GetDomainClusterConfigColdStorageOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainClusterConfigColdStorageOption)(nil)).Elem()
}

func (o GetDomainClusterConfigColdStorageOptionArrayOutput) ToGetDomainClusterConfigColdStorageOptionArrayOutput() GetDomainClusterConfigColdStorageOptionArrayOutput {
	return o
}

func (o GetDomainClusterConfigColdStorageOptionArrayOutput) ToGetDomainClusterConfigColdStorageOptionArrayOutputWithContext(ctx context.Context) GetDomainClusterConfigColdStorageOptionArrayOutput {
	return o
}

func (o GetDomainClusterConfigColdStorageOptionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainClusterConfigColdStorageOption] {
	return pulumix.Output[[]GetDomainClusterConfigColdStorageOption]{
		OutputState: o.OutputState,
	}
}

func (o GetDomainClusterConfigColdStorageOptionArrayOutput) Index(i pulumi.IntInput) GetDomainClusterConfigColdStorageOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainClusterConfigColdStorageOption {
		return vs[0].([]GetDomainClusterConfigColdStorageOption)[vs[1].(int)]
	}).(GetDomainClusterConfigColdStorageOptionOutput)
}

type GetDomainClusterConfigZoneAwarenessConfig struct {
	// Number of availability zones used.
	AvailabilityZoneCount int `pulumi:"availabilityZoneCount"`
}

// GetDomainClusterConfigZoneAwarenessConfigInput is an input type that accepts GetDomainClusterConfigZoneAwarenessConfigArgs and GetDomainClusterConfigZoneAwarenessConfigOutput values.
// You can construct a concrete instance of `GetDomainClusterConfigZoneAwarenessConfigInput` via:
//
//	GetDomainClusterConfigZoneAwarenessConfigArgs{...}
type GetDomainClusterConfigZoneAwarenessConfigInput interface {
	pulumi.Input

	ToGetDomainClusterConfigZoneAwarenessConfigOutput() GetDomainClusterConfigZoneAwarenessConfigOutput
	ToGetDomainClusterConfigZoneAwarenessConfigOutputWithContext(context.Context) GetDomainClusterConfigZoneAwarenessConfigOutput
}

type GetDomainClusterConfigZoneAwarenessConfigArgs struct {
	// Number of availability zones used.
	AvailabilityZoneCount pulumi.IntInput `pulumi:"availabilityZoneCount"`
}

func (GetDomainClusterConfigZoneAwarenessConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainClusterConfigZoneAwarenessConfig)(nil)).Elem()
}

func (i GetDomainClusterConfigZoneAwarenessConfigArgs) ToGetDomainClusterConfigZoneAwarenessConfigOutput() GetDomainClusterConfigZoneAwarenessConfigOutput {
	return i.ToGetDomainClusterConfigZoneAwarenessConfigOutputWithContext(context.Background())
}

func (i GetDomainClusterConfigZoneAwarenessConfigArgs) ToGetDomainClusterConfigZoneAwarenessConfigOutputWithContext(ctx context.Context) GetDomainClusterConfigZoneAwarenessConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainClusterConfigZoneAwarenessConfigOutput)
}

func (i GetDomainClusterConfigZoneAwarenessConfigArgs) ToOutput(ctx context.Context) pulumix.Output[GetDomainClusterConfigZoneAwarenessConfig] {
	return pulumix.Output[GetDomainClusterConfigZoneAwarenessConfig]{
		OutputState: i.ToGetDomainClusterConfigZoneAwarenessConfigOutputWithContext(ctx).OutputState,
	}
}

// GetDomainClusterConfigZoneAwarenessConfigArrayInput is an input type that accepts GetDomainClusterConfigZoneAwarenessConfigArray and GetDomainClusterConfigZoneAwarenessConfigArrayOutput values.
// You can construct a concrete instance of `GetDomainClusterConfigZoneAwarenessConfigArrayInput` via:
//
//	GetDomainClusterConfigZoneAwarenessConfigArray{ GetDomainClusterConfigZoneAwarenessConfigArgs{...} }
type GetDomainClusterConfigZoneAwarenessConfigArrayInput interface {
	pulumi.Input

	ToGetDomainClusterConfigZoneAwarenessConfigArrayOutput() GetDomainClusterConfigZoneAwarenessConfigArrayOutput
	ToGetDomainClusterConfigZoneAwarenessConfigArrayOutputWithContext(context.Context) GetDomainClusterConfigZoneAwarenessConfigArrayOutput
}

type GetDomainClusterConfigZoneAwarenessConfigArray []GetDomainClusterConfigZoneAwarenessConfigInput

func (GetDomainClusterConfigZoneAwarenessConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainClusterConfigZoneAwarenessConfig)(nil)).Elem()
}

func (i GetDomainClusterConfigZoneAwarenessConfigArray) ToGetDomainClusterConfigZoneAwarenessConfigArrayOutput() GetDomainClusterConfigZoneAwarenessConfigArrayOutput {
	return i.ToGetDomainClusterConfigZoneAwarenessConfigArrayOutputWithContext(context.Background())
}

func (i GetDomainClusterConfigZoneAwarenessConfigArray) ToGetDomainClusterConfigZoneAwarenessConfigArrayOutputWithContext(ctx context.Context) GetDomainClusterConfigZoneAwarenessConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainClusterConfigZoneAwarenessConfigArrayOutput)
}

func (i GetDomainClusterConfigZoneAwarenessConfigArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainClusterConfigZoneAwarenessConfig] {
	return pulumix.Output[[]GetDomainClusterConfigZoneAwarenessConfig]{
		OutputState: i.ToGetDomainClusterConfigZoneAwarenessConfigArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDomainClusterConfigZoneAwarenessConfigOutput struct{ *pulumi.OutputState }

func (GetDomainClusterConfigZoneAwarenessConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainClusterConfigZoneAwarenessConfig)(nil)).Elem()
}

func (o GetDomainClusterConfigZoneAwarenessConfigOutput) ToGetDomainClusterConfigZoneAwarenessConfigOutput() GetDomainClusterConfigZoneAwarenessConfigOutput {
	return o
}

func (o GetDomainClusterConfigZoneAwarenessConfigOutput) ToGetDomainClusterConfigZoneAwarenessConfigOutputWithContext(ctx context.Context) GetDomainClusterConfigZoneAwarenessConfigOutput {
	return o
}

func (o GetDomainClusterConfigZoneAwarenessConfigOutput) ToOutput(ctx context.Context) pulumix.Output[GetDomainClusterConfigZoneAwarenessConfig] {
	return pulumix.Output[GetDomainClusterConfigZoneAwarenessConfig]{
		OutputState: o.OutputState,
	}
}

// Number of availability zones used.
func (o GetDomainClusterConfigZoneAwarenessConfigOutput) AvailabilityZoneCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainClusterConfigZoneAwarenessConfig) int { return v.AvailabilityZoneCount }).(pulumi.IntOutput)
}

type GetDomainClusterConfigZoneAwarenessConfigArrayOutput struct{ *pulumi.OutputState }

func (GetDomainClusterConfigZoneAwarenessConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainClusterConfigZoneAwarenessConfig)(nil)).Elem()
}

func (o GetDomainClusterConfigZoneAwarenessConfigArrayOutput) ToGetDomainClusterConfigZoneAwarenessConfigArrayOutput() GetDomainClusterConfigZoneAwarenessConfigArrayOutput {
	return o
}

func (o GetDomainClusterConfigZoneAwarenessConfigArrayOutput) ToGetDomainClusterConfigZoneAwarenessConfigArrayOutputWithContext(ctx context.Context) GetDomainClusterConfigZoneAwarenessConfigArrayOutput {
	return o
}

func (o GetDomainClusterConfigZoneAwarenessConfigArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainClusterConfigZoneAwarenessConfig] {
	return pulumix.Output[[]GetDomainClusterConfigZoneAwarenessConfig]{
		OutputState: o.OutputState,
	}
}

func (o GetDomainClusterConfigZoneAwarenessConfigArrayOutput) Index(i pulumi.IntInput) GetDomainClusterConfigZoneAwarenessConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainClusterConfigZoneAwarenessConfig {
		return vs[0].([]GetDomainClusterConfigZoneAwarenessConfig)[vs[1].(int)]
	}).(GetDomainClusterConfigZoneAwarenessConfigOutput)
}

type GetDomainCognitoOption struct {
	// Whether node to node encryption is enabled.
	Enabled bool `pulumi:"enabled"`
	// The Cognito Identity pool used by the domain.
	IdentityPoolId string `pulumi:"identityPoolId"`
	// The IAM Role with the AmazonESCognitoAccess policy attached.
	RoleArn string `pulumi:"roleArn"`
	// The Cognito User pool used by the domain.
	UserPoolId string `pulumi:"userPoolId"`
}

// GetDomainCognitoOptionInput is an input type that accepts GetDomainCognitoOptionArgs and GetDomainCognitoOptionOutput values.
// You can construct a concrete instance of `GetDomainCognitoOptionInput` via:
//
//	GetDomainCognitoOptionArgs{...}
type GetDomainCognitoOptionInput interface {
	pulumi.Input

	ToGetDomainCognitoOptionOutput() GetDomainCognitoOptionOutput
	ToGetDomainCognitoOptionOutputWithContext(context.Context) GetDomainCognitoOptionOutput
}

type GetDomainCognitoOptionArgs struct {
	// Whether node to node encryption is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The Cognito Identity pool used by the domain.
	IdentityPoolId pulumi.StringInput `pulumi:"identityPoolId"`
	// The IAM Role with the AmazonESCognitoAccess policy attached.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The Cognito User pool used by the domain.
	UserPoolId pulumi.StringInput `pulumi:"userPoolId"`
}

func (GetDomainCognitoOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainCognitoOption)(nil)).Elem()
}

func (i GetDomainCognitoOptionArgs) ToGetDomainCognitoOptionOutput() GetDomainCognitoOptionOutput {
	return i.ToGetDomainCognitoOptionOutputWithContext(context.Background())
}

func (i GetDomainCognitoOptionArgs) ToGetDomainCognitoOptionOutputWithContext(ctx context.Context) GetDomainCognitoOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainCognitoOptionOutput)
}

func (i GetDomainCognitoOptionArgs) ToOutput(ctx context.Context) pulumix.Output[GetDomainCognitoOption] {
	return pulumix.Output[GetDomainCognitoOption]{
		OutputState: i.ToGetDomainCognitoOptionOutputWithContext(ctx).OutputState,
	}
}

// GetDomainCognitoOptionArrayInput is an input type that accepts GetDomainCognitoOptionArray and GetDomainCognitoOptionArrayOutput values.
// You can construct a concrete instance of `GetDomainCognitoOptionArrayInput` via:
//
//	GetDomainCognitoOptionArray{ GetDomainCognitoOptionArgs{...} }
type GetDomainCognitoOptionArrayInput interface {
	pulumi.Input

	ToGetDomainCognitoOptionArrayOutput() GetDomainCognitoOptionArrayOutput
	ToGetDomainCognitoOptionArrayOutputWithContext(context.Context) GetDomainCognitoOptionArrayOutput
}

type GetDomainCognitoOptionArray []GetDomainCognitoOptionInput

func (GetDomainCognitoOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainCognitoOption)(nil)).Elem()
}

func (i GetDomainCognitoOptionArray) ToGetDomainCognitoOptionArrayOutput() GetDomainCognitoOptionArrayOutput {
	return i.ToGetDomainCognitoOptionArrayOutputWithContext(context.Background())
}

func (i GetDomainCognitoOptionArray) ToGetDomainCognitoOptionArrayOutputWithContext(ctx context.Context) GetDomainCognitoOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainCognitoOptionArrayOutput)
}

func (i GetDomainCognitoOptionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainCognitoOption] {
	return pulumix.Output[[]GetDomainCognitoOption]{
		OutputState: i.ToGetDomainCognitoOptionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDomainCognitoOptionOutput struct{ *pulumi.OutputState }

func (GetDomainCognitoOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainCognitoOption)(nil)).Elem()
}

func (o GetDomainCognitoOptionOutput) ToGetDomainCognitoOptionOutput() GetDomainCognitoOptionOutput {
	return o
}

func (o GetDomainCognitoOptionOutput) ToGetDomainCognitoOptionOutputWithContext(ctx context.Context) GetDomainCognitoOptionOutput {
	return o
}

func (o GetDomainCognitoOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetDomainCognitoOption] {
	return pulumix.Output[GetDomainCognitoOption]{
		OutputState: o.OutputState,
	}
}

// Whether node to node encryption is enabled.
func (o GetDomainCognitoOptionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainCognitoOption) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The Cognito Identity pool used by the domain.
func (o GetDomainCognitoOptionOutput) IdentityPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainCognitoOption) string { return v.IdentityPoolId }).(pulumi.StringOutput)
}

// The IAM Role with the AmazonESCognitoAccess policy attached.
func (o GetDomainCognitoOptionOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainCognitoOption) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The Cognito User pool used by the domain.
func (o GetDomainCognitoOptionOutput) UserPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainCognitoOption) string { return v.UserPoolId }).(pulumi.StringOutput)
}

type GetDomainCognitoOptionArrayOutput struct{ *pulumi.OutputState }

func (GetDomainCognitoOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainCognitoOption)(nil)).Elem()
}

func (o GetDomainCognitoOptionArrayOutput) ToGetDomainCognitoOptionArrayOutput() GetDomainCognitoOptionArrayOutput {
	return o
}

func (o GetDomainCognitoOptionArrayOutput) ToGetDomainCognitoOptionArrayOutputWithContext(ctx context.Context) GetDomainCognitoOptionArrayOutput {
	return o
}

func (o GetDomainCognitoOptionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainCognitoOption] {
	return pulumix.Output[[]GetDomainCognitoOption]{
		OutputState: o.OutputState,
	}
}

func (o GetDomainCognitoOptionArrayOutput) Index(i pulumi.IntInput) GetDomainCognitoOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainCognitoOption {
		return vs[0].([]GetDomainCognitoOption)[vs[1].(int)]
	}).(GetDomainCognitoOptionOutput)
}

type GetDomainEbsOption struct {
	// Whether EBS volumes are attached to data nodes in the domain.
	EbsEnabled bool `pulumi:"ebsEnabled"`
	// The baseline input/output (I/O) performance of EBS volumes attached to data nodes.
	Iops int `pulumi:"iops"`
	// The throughput (in MiB/s) of the EBS volumes attached to data nodes.
	Throughput int `pulumi:"throughput"`
	// The size of EBS volumes attached to data nodes (in GB).
	VolumeSize int `pulumi:"volumeSize"`
	// The type of EBS volumes attached to data nodes.
	VolumeType string `pulumi:"volumeType"`
}

// GetDomainEbsOptionInput is an input type that accepts GetDomainEbsOptionArgs and GetDomainEbsOptionOutput values.
// You can construct a concrete instance of `GetDomainEbsOptionInput` via:
//
//	GetDomainEbsOptionArgs{...}
type GetDomainEbsOptionInput interface {
	pulumi.Input

	ToGetDomainEbsOptionOutput() GetDomainEbsOptionOutput
	ToGetDomainEbsOptionOutputWithContext(context.Context) GetDomainEbsOptionOutput
}

type GetDomainEbsOptionArgs struct {
	// Whether EBS volumes are attached to data nodes in the domain.
	EbsEnabled pulumi.BoolInput `pulumi:"ebsEnabled"`
	// The baseline input/output (I/O) performance of EBS volumes attached to data nodes.
	Iops pulumi.IntInput `pulumi:"iops"`
	// The throughput (in MiB/s) of the EBS volumes attached to data nodes.
	Throughput pulumi.IntInput `pulumi:"throughput"`
	// The size of EBS volumes attached to data nodes (in GB).
	VolumeSize pulumi.IntInput `pulumi:"volumeSize"`
	// The type of EBS volumes attached to data nodes.
	VolumeType pulumi.StringInput `pulumi:"volumeType"`
}

func (GetDomainEbsOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainEbsOption)(nil)).Elem()
}

func (i GetDomainEbsOptionArgs) ToGetDomainEbsOptionOutput() GetDomainEbsOptionOutput {
	return i.ToGetDomainEbsOptionOutputWithContext(context.Background())
}

func (i GetDomainEbsOptionArgs) ToGetDomainEbsOptionOutputWithContext(ctx context.Context) GetDomainEbsOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainEbsOptionOutput)
}

func (i GetDomainEbsOptionArgs) ToOutput(ctx context.Context) pulumix.Output[GetDomainEbsOption] {
	return pulumix.Output[GetDomainEbsOption]{
		OutputState: i.ToGetDomainEbsOptionOutputWithContext(ctx).OutputState,
	}
}

// GetDomainEbsOptionArrayInput is an input type that accepts GetDomainEbsOptionArray and GetDomainEbsOptionArrayOutput values.
// You can construct a concrete instance of `GetDomainEbsOptionArrayInput` via:
//
//	GetDomainEbsOptionArray{ GetDomainEbsOptionArgs{...} }
type GetDomainEbsOptionArrayInput interface {
	pulumi.Input

	ToGetDomainEbsOptionArrayOutput() GetDomainEbsOptionArrayOutput
	ToGetDomainEbsOptionArrayOutputWithContext(context.Context) GetDomainEbsOptionArrayOutput
}

type GetDomainEbsOptionArray []GetDomainEbsOptionInput

func (GetDomainEbsOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainEbsOption)(nil)).Elem()
}

func (i GetDomainEbsOptionArray) ToGetDomainEbsOptionArrayOutput() GetDomainEbsOptionArrayOutput {
	return i.ToGetDomainEbsOptionArrayOutputWithContext(context.Background())
}

func (i GetDomainEbsOptionArray) ToGetDomainEbsOptionArrayOutputWithContext(ctx context.Context) GetDomainEbsOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainEbsOptionArrayOutput)
}

func (i GetDomainEbsOptionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainEbsOption] {
	return pulumix.Output[[]GetDomainEbsOption]{
		OutputState: i.ToGetDomainEbsOptionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDomainEbsOptionOutput struct{ *pulumi.OutputState }

func (GetDomainEbsOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainEbsOption)(nil)).Elem()
}

func (o GetDomainEbsOptionOutput) ToGetDomainEbsOptionOutput() GetDomainEbsOptionOutput {
	return o
}

func (o GetDomainEbsOptionOutput) ToGetDomainEbsOptionOutputWithContext(ctx context.Context) GetDomainEbsOptionOutput {
	return o
}

func (o GetDomainEbsOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetDomainEbsOption] {
	return pulumix.Output[GetDomainEbsOption]{
		OutputState: o.OutputState,
	}
}

// Whether EBS volumes are attached to data nodes in the domain.
func (o GetDomainEbsOptionOutput) EbsEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainEbsOption) bool { return v.EbsEnabled }).(pulumi.BoolOutput)
}

// The baseline input/output (I/O) performance of EBS volumes attached to data nodes.
func (o GetDomainEbsOptionOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainEbsOption) int { return v.Iops }).(pulumi.IntOutput)
}

// The throughput (in MiB/s) of the EBS volumes attached to data nodes.
func (o GetDomainEbsOptionOutput) Throughput() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainEbsOption) int { return v.Throughput }).(pulumi.IntOutput)
}

// The size of EBS volumes attached to data nodes (in GB).
func (o GetDomainEbsOptionOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainEbsOption) int { return v.VolumeSize }).(pulumi.IntOutput)
}

// The type of EBS volumes attached to data nodes.
func (o GetDomainEbsOptionOutput) VolumeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainEbsOption) string { return v.VolumeType }).(pulumi.StringOutput)
}

type GetDomainEbsOptionArrayOutput struct{ *pulumi.OutputState }

func (GetDomainEbsOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainEbsOption)(nil)).Elem()
}

func (o GetDomainEbsOptionArrayOutput) ToGetDomainEbsOptionArrayOutput() GetDomainEbsOptionArrayOutput {
	return o
}

func (o GetDomainEbsOptionArrayOutput) ToGetDomainEbsOptionArrayOutputWithContext(ctx context.Context) GetDomainEbsOptionArrayOutput {
	return o
}

func (o GetDomainEbsOptionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainEbsOption] {
	return pulumix.Output[[]GetDomainEbsOption]{
		OutputState: o.OutputState,
	}
}

func (o GetDomainEbsOptionArrayOutput) Index(i pulumi.IntInput) GetDomainEbsOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainEbsOption {
		return vs[0].([]GetDomainEbsOption)[vs[1].(int)]
	}).(GetDomainEbsOptionOutput)
}

type GetDomainEncryptionAtRest struct {
	// Whether node to node encryption is enabled.
	Enabled bool `pulumi:"enabled"`
	// The KMS key id used to encrypt data at rest.
	KmsKeyId string `pulumi:"kmsKeyId"`
}

// GetDomainEncryptionAtRestInput is an input type that accepts GetDomainEncryptionAtRestArgs and GetDomainEncryptionAtRestOutput values.
// You can construct a concrete instance of `GetDomainEncryptionAtRestInput` via:
//
//	GetDomainEncryptionAtRestArgs{...}
type GetDomainEncryptionAtRestInput interface {
	pulumi.Input

	ToGetDomainEncryptionAtRestOutput() GetDomainEncryptionAtRestOutput
	ToGetDomainEncryptionAtRestOutputWithContext(context.Context) GetDomainEncryptionAtRestOutput
}

type GetDomainEncryptionAtRestArgs struct {
	// Whether node to node encryption is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The KMS key id used to encrypt data at rest.
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
}

func (GetDomainEncryptionAtRestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainEncryptionAtRest)(nil)).Elem()
}

func (i GetDomainEncryptionAtRestArgs) ToGetDomainEncryptionAtRestOutput() GetDomainEncryptionAtRestOutput {
	return i.ToGetDomainEncryptionAtRestOutputWithContext(context.Background())
}

func (i GetDomainEncryptionAtRestArgs) ToGetDomainEncryptionAtRestOutputWithContext(ctx context.Context) GetDomainEncryptionAtRestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainEncryptionAtRestOutput)
}

func (i GetDomainEncryptionAtRestArgs) ToOutput(ctx context.Context) pulumix.Output[GetDomainEncryptionAtRest] {
	return pulumix.Output[GetDomainEncryptionAtRest]{
		OutputState: i.ToGetDomainEncryptionAtRestOutputWithContext(ctx).OutputState,
	}
}

// GetDomainEncryptionAtRestArrayInput is an input type that accepts GetDomainEncryptionAtRestArray and GetDomainEncryptionAtRestArrayOutput values.
// You can construct a concrete instance of `GetDomainEncryptionAtRestArrayInput` via:
//
//	GetDomainEncryptionAtRestArray{ GetDomainEncryptionAtRestArgs{...} }
type GetDomainEncryptionAtRestArrayInput interface {
	pulumi.Input

	ToGetDomainEncryptionAtRestArrayOutput() GetDomainEncryptionAtRestArrayOutput
	ToGetDomainEncryptionAtRestArrayOutputWithContext(context.Context) GetDomainEncryptionAtRestArrayOutput
}

type GetDomainEncryptionAtRestArray []GetDomainEncryptionAtRestInput

func (GetDomainEncryptionAtRestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainEncryptionAtRest)(nil)).Elem()
}

func (i GetDomainEncryptionAtRestArray) ToGetDomainEncryptionAtRestArrayOutput() GetDomainEncryptionAtRestArrayOutput {
	return i.ToGetDomainEncryptionAtRestArrayOutputWithContext(context.Background())
}

func (i GetDomainEncryptionAtRestArray) ToGetDomainEncryptionAtRestArrayOutputWithContext(ctx context.Context) GetDomainEncryptionAtRestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainEncryptionAtRestArrayOutput)
}

func (i GetDomainEncryptionAtRestArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainEncryptionAtRest] {
	return pulumix.Output[[]GetDomainEncryptionAtRest]{
		OutputState: i.ToGetDomainEncryptionAtRestArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDomainEncryptionAtRestOutput struct{ *pulumi.OutputState }

func (GetDomainEncryptionAtRestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainEncryptionAtRest)(nil)).Elem()
}

func (o GetDomainEncryptionAtRestOutput) ToGetDomainEncryptionAtRestOutput() GetDomainEncryptionAtRestOutput {
	return o
}

func (o GetDomainEncryptionAtRestOutput) ToGetDomainEncryptionAtRestOutputWithContext(ctx context.Context) GetDomainEncryptionAtRestOutput {
	return o
}

func (o GetDomainEncryptionAtRestOutput) ToOutput(ctx context.Context) pulumix.Output[GetDomainEncryptionAtRest] {
	return pulumix.Output[GetDomainEncryptionAtRest]{
		OutputState: o.OutputState,
	}
}

// Whether node to node encryption is enabled.
func (o GetDomainEncryptionAtRestOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainEncryptionAtRest) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The KMS key id used to encrypt data at rest.
func (o GetDomainEncryptionAtRestOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainEncryptionAtRest) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

type GetDomainEncryptionAtRestArrayOutput struct{ *pulumi.OutputState }

func (GetDomainEncryptionAtRestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainEncryptionAtRest)(nil)).Elem()
}

func (o GetDomainEncryptionAtRestArrayOutput) ToGetDomainEncryptionAtRestArrayOutput() GetDomainEncryptionAtRestArrayOutput {
	return o
}

func (o GetDomainEncryptionAtRestArrayOutput) ToGetDomainEncryptionAtRestArrayOutputWithContext(ctx context.Context) GetDomainEncryptionAtRestArrayOutput {
	return o
}

func (o GetDomainEncryptionAtRestArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainEncryptionAtRest] {
	return pulumix.Output[[]GetDomainEncryptionAtRest]{
		OutputState: o.OutputState,
	}
}

func (o GetDomainEncryptionAtRestArrayOutput) Index(i pulumi.IntInput) GetDomainEncryptionAtRestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainEncryptionAtRest {
		return vs[0].([]GetDomainEncryptionAtRest)[vs[1].(int)]
	}).(GetDomainEncryptionAtRestOutput)
}

type GetDomainLogPublishingOption struct {
	// The CloudWatch Log Group where the logs are published.
	CloudwatchLogGroupArn string `pulumi:"cloudwatchLogGroupArn"`
	// Whether node to node encryption is enabled.
	Enabled bool `pulumi:"enabled"`
	// The type of Elasticsearch log being published.
	LogType string `pulumi:"logType"`
}

// GetDomainLogPublishingOptionInput is an input type that accepts GetDomainLogPublishingOptionArgs and GetDomainLogPublishingOptionOutput values.
// You can construct a concrete instance of `GetDomainLogPublishingOptionInput` via:
//
//	GetDomainLogPublishingOptionArgs{...}
type GetDomainLogPublishingOptionInput interface {
	pulumi.Input

	ToGetDomainLogPublishingOptionOutput() GetDomainLogPublishingOptionOutput
	ToGetDomainLogPublishingOptionOutputWithContext(context.Context) GetDomainLogPublishingOptionOutput
}

type GetDomainLogPublishingOptionArgs struct {
	// The CloudWatch Log Group where the logs are published.
	CloudwatchLogGroupArn pulumi.StringInput `pulumi:"cloudwatchLogGroupArn"`
	// Whether node to node encryption is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// The type of Elasticsearch log being published.
	LogType pulumi.StringInput `pulumi:"logType"`
}

func (GetDomainLogPublishingOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainLogPublishingOption)(nil)).Elem()
}

func (i GetDomainLogPublishingOptionArgs) ToGetDomainLogPublishingOptionOutput() GetDomainLogPublishingOptionOutput {
	return i.ToGetDomainLogPublishingOptionOutputWithContext(context.Background())
}

func (i GetDomainLogPublishingOptionArgs) ToGetDomainLogPublishingOptionOutputWithContext(ctx context.Context) GetDomainLogPublishingOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainLogPublishingOptionOutput)
}

func (i GetDomainLogPublishingOptionArgs) ToOutput(ctx context.Context) pulumix.Output[GetDomainLogPublishingOption] {
	return pulumix.Output[GetDomainLogPublishingOption]{
		OutputState: i.ToGetDomainLogPublishingOptionOutputWithContext(ctx).OutputState,
	}
}

// GetDomainLogPublishingOptionArrayInput is an input type that accepts GetDomainLogPublishingOptionArray and GetDomainLogPublishingOptionArrayOutput values.
// You can construct a concrete instance of `GetDomainLogPublishingOptionArrayInput` via:
//
//	GetDomainLogPublishingOptionArray{ GetDomainLogPublishingOptionArgs{...} }
type GetDomainLogPublishingOptionArrayInput interface {
	pulumi.Input

	ToGetDomainLogPublishingOptionArrayOutput() GetDomainLogPublishingOptionArrayOutput
	ToGetDomainLogPublishingOptionArrayOutputWithContext(context.Context) GetDomainLogPublishingOptionArrayOutput
}

type GetDomainLogPublishingOptionArray []GetDomainLogPublishingOptionInput

func (GetDomainLogPublishingOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainLogPublishingOption)(nil)).Elem()
}

func (i GetDomainLogPublishingOptionArray) ToGetDomainLogPublishingOptionArrayOutput() GetDomainLogPublishingOptionArrayOutput {
	return i.ToGetDomainLogPublishingOptionArrayOutputWithContext(context.Background())
}

func (i GetDomainLogPublishingOptionArray) ToGetDomainLogPublishingOptionArrayOutputWithContext(ctx context.Context) GetDomainLogPublishingOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainLogPublishingOptionArrayOutput)
}

func (i GetDomainLogPublishingOptionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainLogPublishingOption] {
	return pulumix.Output[[]GetDomainLogPublishingOption]{
		OutputState: i.ToGetDomainLogPublishingOptionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDomainLogPublishingOptionOutput struct{ *pulumi.OutputState }

func (GetDomainLogPublishingOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainLogPublishingOption)(nil)).Elem()
}

func (o GetDomainLogPublishingOptionOutput) ToGetDomainLogPublishingOptionOutput() GetDomainLogPublishingOptionOutput {
	return o
}

func (o GetDomainLogPublishingOptionOutput) ToGetDomainLogPublishingOptionOutputWithContext(ctx context.Context) GetDomainLogPublishingOptionOutput {
	return o
}

func (o GetDomainLogPublishingOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetDomainLogPublishingOption] {
	return pulumix.Output[GetDomainLogPublishingOption]{
		OutputState: o.OutputState,
	}
}

// The CloudWatch Log Group where the logs are published.
func (o GetDomainLogPublishingOptionOutput) CloudwatchLogGroupArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainLogPublishingOption) string { return v.CloudwatchLogGroupArn }).(pulumi.StringOutput)
}

// Whether node to node encryption is enabled.
func (o GetDomainLogPublishingOptionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainLogPublishingOption) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// The type of Elasticsearch log being published.
func (o GetDomainLogPublishingOptionOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainLogPublishingOption) string { return v.LogType }).(pulumi.StringOutput)
}

type GetDomainLogPublishingOptionArrayOutput struct{ *pulumi.OutputState }

func (GetDomainLogPublishingOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainLogPublishingOption)(nil)).Elem()
}

func (o GetDomainLogPublishingOptionArrayOutput) ToGetDomainLogPublishingOptionArrayOutput() GetDomainLogPublishingOptionArrayOutput {
	return o
}

func (o GetDomainLogPublishingOptionArrayOutput) ToGetDomainLogPublishingOptionArrayOutputWithContext(ctx context.Context) GetDomainLogPublishingOptionArrayOutput {
	return o
}

func (o GetDomainLogPublishingOptionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainLogPublishingOption] {
	return pulumix.Output[[]GetDomainLogPublishingOption]{
		OutputState: o.OutputState,
	}
}

func (o GetDomainLogPublishingOptionArrayOutput) Index(i pulumi.IntInput) GetDomainLogPublishingOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainLogPublishingOption {
		return vs[0].([]GetDomainLogPublishingOption)[vs[1].(int)]
	}).(GetDomainLogPublishingOptionOutput)
}

type GetDomainNodeToNodeEncryption struct {
	// Whether node to node encryption is enabled.
	Enabled bool `pulumi:"enabled"`
}

// GetDomainNodeToNodeEncryptionInput is an input type that accepts GetDomainNodeToNodeEncryptionArgs and GetDomainNodeToNodeEncryptionOutput values.
// You can construct a concrete instance of `GetDomainNodeToNodeEncryptionInput` via:
//
//	GetDomainNodeToNodeEncryptionArgs{...}
type GetDomainNodeToNodeEncryptionInput interface {
	pulumi.Input

	ToGetDomainNodeToNodeEncryptionOutput() GetDomainNodeToNodeEncryptionOutput
	ToGetDomainNodeToNodeEncryptionOutputWithContext(context.Context) GetDomainNodeToNodeEncryptionOutput
}

type GetDomainNodeToNodeEncryptionArgs struct {
	// Whether node to node encryption is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (GetDomainNodeToNodeEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainNodeToNodeEncryption)(nil)).Elem()
}

func (i GetDomainNodeToNodeEncryptionArgs) ToGetDomainNodeToNodeEncryptionOutput() GetDomainNodeToNodeEncryptionOutput {
	return i.ToGetDomainNodeToNodeEncryptionOutputWithContext(context.Background())
}

func (i GetDomainNodeToNodeEncryptionArgs) ToGetDomainNodeToNodeEncryptionOutputWithContext(ctx context.Context) GetDomainNodeToNodeEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainNodeToNodeEncryptionOutput)
}

func (i GetDomainNodeToNodeEncryptionArgs) ToOutput(ctx context.Context) pulumix.Output[GetDomainNodeToNodeEncryption] {
	return pulumix.Output[GetDomainNodeToNodeEncryption]{
		OutputState: i.ToGetDomainNodeToNodeEncryptionOutputWithContext(ctx).OutputState,
	}
}

// GetDomainNodeToNodeEncryptionArrayInput is an input type that accepts GetDomainNodeToNodeEncryptionArray and GetDomainNodeToNodeEncryptionArrayOutput values.
// You can construct a concrete instance of `GetDomainNodeToNodeEncryptionArrayInput` via:
//
//	GetDomainNodeToNodeEncryptionArray{ GetDomainNodeToNodeEncryptionArgs{...} }
type GetDomainNodeToNodeEncryptionArrayInput interface {
	pulumi.Input

	ToGetDomainNodeToNodeEncryptionArrayOutput() GetDomainNodeToNodeEncryptionArrayOutput
	ToGetDomainNodeToNodeEncryptionArrayOutputWithContext(context.Context) GetDomainNodeToNodeEncryptionArrayOutput
}

type GetDomainNodeToNodeEncryptionArray []GetDomainNodeToNodeEncryptionInput

func (GetDomainNodeToNodeEncryptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainNodeToNodeEncryption)(nil)).Elem()
}

func (i GetDomainNodeToNodeEncryptionArray) ToGetDomainNodeToNodeEncryptionArrayOutput() GetDomainNodeToNodeEncryptionArrayOutput {
	return i.ToGetDomainNodeToNodeEncryptionArrayOutputWithContext(context.Background())
}

func (i GetDomainNodeToNodeEncryptionArray) ToGetDomainNodeToNodeEncryptionArrayOutputWithContext(ctx context.Context) GetDomainNodeToNodeEncryptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainNodeToNodeEncryptionArrayOutput)
}

func (i GetDomainNodeToNodeEncryptionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainNodeToNodeEncryption] {
	return pulumix.Output[[]GetDomainNodeToNodeEncryption]{
		OutputState: i.ToGetDomainNodeToNodeEncryptionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDomainNodeToNodeEncryptionOutput struct{ *pulumi.OutputState }

func (GetDomainNodeToNodeEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainNodeToNodeEncryption)(nil)).Elem()
}

func (o GetDomainNodeToNodeEncryptionOutput) ToGetDomainNodeToNodeEncryptionOutput() GetDomainNodeToNodeEncryptionOutput {
	return o
}

func (o GetDomainNodeToNodeEncryptionOutput) ToGetDomainNodeToNodeEncryptionOutputWithContext(ctx context.Context) GetDomainNodeToNodeEncryptionOutput {
	return o
}

func (o GetDomainNodeToNodeEncryptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetDomainNodeToNodeEncryption] {
	return pulumix.Output[GetDomainNodeToNodeEncryption]{
		OutputState: o.OutputState,
	}
}

// Whether node to node encryption is enabled.
func (o GetDomainNodeToNodeEncryptionOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDomainNodeToNodeEncryption) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type GetDomainNodeToNodeEncryptionArrayOutput struct{ *pulumi.OutputState }

func (GetDomainNodeToNodeEncryptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainNodeToNodeEncryption)(nil)).Elem()
}

func (o GetDomainNodeToNodeEncryptionArrayOutput) ToGetDomainNodeToNodeEncryptionArrayOutput() GetDomainNodeToNodeEncryptionArrayOutput {
	return o
}

func (o GetDomainNodeToNodeEncryptionArrayOutput) ToGetDomainNodeToNodeEncryptionArrayOutputWithContext(ctx context.Context) GetDomainNodeToNodeEncryptionArrayOutput {
	return o
}

func (o GetDomainNodeToNodeEncryptionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainNodeToNodeEncryption] {
	return pulumix.Output[[]GetDomainNodeToNodeEncryption]{
		OutputState: o.OutputState,
	}
}

func (o GetDomainNodeToNodeEncryptionArrayOutput) Index(i pulumi.IntInput) GetDomainNodeToNodeEncryptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainNodeToNodeEncryption {
		return vs[0].([]GetDomainNodeToNodeEncryption)[vs[1].(int)]
	}).(GetDomainNodeToNodeEncryptionOutput)
}

type GetDomainSnapshotOption struct {
	// Hour during which the service takes an automated daily snapshot of the indices in the domain.
	AutomatedSnapshotStartHour int `pulumi:"automatedSnapshotStartHour"`
}

// GetDomainSnapshotOptionInput is an input type that accepts GetDomainSnapshotOptionArgs and GetDomainSnapshotOptionOutput values.
// You can construct a concrete instance of `GetDomainSnapshotOptionInput` via:
//
//	GetDomainSnapshotOptionArgs{...}
type GetDomainSnapshotOptionInput interface {
	pulumi.Input

	ToGetDomainSnapshotOptionOutput() GetDomainSnapshotOptionOutput
	ToGetDomainSnapshotOptionOutputWithContext(context.Context) GetDomainSnapshotOptionOutput
}

type GetDomainSnapshotOptionArgs struct {
	// Hour during which the service takes an automated daily snapshot of the indices in the domain.
	AutomatedSnapshotStartHour pulumi.IntInput `pulumi:"automatedSnapshotStartHour"`
}

func (GetDomainSnapshotOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainSnapshotOption)(nil)).Elem()
}

func (i GetDomainSnapshotOptionArgs) ToGetDomainSnapshotOptionOutput() GetDomainSnapshotOptionOutput {
	return i.ToGetDomainSnapshotOptionOutputWithContext(context.Background())
}

func (i GetDomainSnapshotOptionArgs) ToGetDomainSnapshotOptionOutputWithContext(ctx context.Context) GetDomainSnapshotOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainSnapshotOptionOutput)
}

func (i GetDomainSnapshotOptionArgs) ToOutput(ctx context.Context) pulumix.Output[GetDomainSnapshotOption] {
	return pulumix.Output[GetDomainSnapshotOption]{
		OutputState: i.ToGetDomainSnapshotOptionOutputWithContext(ctx).OutputState,
	}
}

// GetDomainSnapshotOptionArrayInput is an input type that accepts GetDomainSnapshotOptionArray and GetDomainSnapshotOptionArrayOutput values.
// You can construct a concrete instance of `GetDomainSnapshotOptionArrayInput` via:
//
//	GetDomainSnapshotOptionArray{ GetDomainSnapshotOptionArgs{...} }
type GetDomainSnapshotOptionArrayInput interface {
	pulumi.Input

	ToGetDomainSnapshotOptionArrayOutput() GetDomainSnapshotOptionArrayOutput
	ToGetDomainSnapshotOptionArrayOutputWithContext(context.Context) GetDomainSnapshotOptionArrayOutput
}

type GetDomainSnapshotOptionArray []GetDomainSnapshotOptionInput

func (GetDomainSnapshotOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainSnapshotOption)(nil)).Elem()
}

func (i GetDomainSnapshotOptionArray) ToGetDomainSnapshotOptionArrayOutput() GetDomainSnapshotOptionArrayOutput {
	return i.ToGetDomainSnapshotOptionArrayOutputWithContext(context.Background())
}

func (i GetDomainSnapshotOptionArray) ToGetDomainSnapshotOptionArrayOutputWithContext(ctx context.Context) GetDomainSnapshotOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainSnapshotOptionArrayOutput)
}

func (i GetDomainSnapshotOptionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainSnapshotOption] {
	return pulumix.Output[[]GetDomainSnapshotOption]{
		OutputState: i.ToGetDomainSnapshotOptionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDomainSnapshotOptionOutput struct{ *pulumi.OutputState }

func (GetDomainSnapshotOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainSnapshotOption)(nil)).Elem()
}

func (o GetDomainSnapshotOptionOutput) ToGetDomainSnapshotOptionOutput() GetDomainSnapshotOptionOutput {
	return o
}

func (o GetDomainSnapshotOptionOutput) ToGetDomainSnapshotOptionOutputWithContext(ctx context.Context) GetDomainSnapshotOptionOutput {
	return o
}

func (o GetDomainSnapshotOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetDomainSnapshotOption] {
	return pulumix.Output[GetDomainSnapshotOption]{
		OutputState: o.OutputState,
	}
}

// Hour during which the service takes an automated daily snapshot of the indices in the domain.
func (o GetDomainSnapshotOptionOutput) AutomatedSnapshotStartHour() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainSnapshotOption) int { return v.AutomatedSnapshotStartHour }).(pulumi.IntOutput)
}

type GetDomainSnapshotOptionArrayOutput struct{ *pulumi.OutputState }

func (GetDomainSnapshotOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainSnapshotOption)(nil)).Elem()
}

func (o GetDomainSnapshotOptionArrayOutput) ToGetDomainSnapshotOptionArrayOutput() GetDomainSnapshotOptionArrayOutput {
	return o
}

func (o GetDomainSnapshotOptionArrayOutput) ToGetDomainSnapshotOptionArrayOutputWithContext(ctx context.Context) GetDomainSnapshotOptionArrayOutput {
	return o
}

func (o GetDomainSnapshotOptionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainSnapshotOption] {
	return pulumix.Output[[]GetDomainSnapshotOption]{
		OutputState: o.OutputState,
	}
}

func (o GetDomainSnapshotOptionArrayOutput) Index(i pulumi.IntInput) GetDomainSnapshotOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainSnapshotOption {
		return vs[0].([]GetDomainSnapshotOption)[vs[1].(int)]
	}).(GetDomainSnapshotOptionOutput)
}

type GetDomainVpcOption struct {
	// The availability zones used by the domain.
	AvailabilityZones []string `pulumi:"availabilityZones"`
	// The security groups used by the domain.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// The subnets used by the domain.
	SubnetIds []string `pulumi:"subnetIds"`
	// The VPC used by the domain.
	VpcId string `pulumi:"vpcId"`
}

// GetDomainVpcOptionInput is an input type that accepts GetDomainVpcOptionArgs and GetDomainVpcOptionOutput values.
// You can construct a concrete instance of `GetDomainVpcOptionInput` via:
//
//	GetDomainVpcOptionArgs{...}
type GetDomainVpcOptionInput interface {
	pulumi.Input

	ToGetDomainVpcOptionOutput() GetDomainVpcOptionOutput
	ToGetDomainVpcOptionOutputWithContext(context.Context) GetDomainVpcOptionOutput
}

type GetDomainVpcOptionArgs struct {
	// The availability zones used by the domain.
	AvailabilityZones pulumi.StringArrayInput `pulumi:"availabilityZones"`
	// The security groups used by the domain.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// The subnets used by the domain.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	// The VPC used by the domain.
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (GetDomainVpcOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainVpcOption)(nil)).Elem()
}

func (i GetDomainVpcOptionArgs) ToGetDomainVpcOptionOutput() GetDomainVpcOptionOutput {
	return i.ToGetDomainVpcOptionOutputWithContext(context.Background())
}

func (i GetDomainVpcOptionArgs) ToGetDomainVpcOptionOutputWithContext(ctx context.Context) GetDomainVpcOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainVpcOptionOutput)
}

func (i GetDomainVpcOptionArgs) ToOutput(ctx context.Context) pulumix.Output[GetDomainVpcOption] {
	return pulumix.Output[GetDomainVpcOption]{
		OutputState: i.ToGetDomainVpcOptionOutputWithContext(ctx).OutputState,
	}
}

// GetDomainVpcOptionArrayInput is an input type that accepts GetDomainVpcOptionArray and GetDomainVpcOptionArrayOutput values.
// You can construct a concrete instance of `GetDomainVpcOptionArrayInput` via:
//
//	GetDomainVpcOptionArray{ GetDomainVpcOptionArgs{...} }
type GetDomainVpcOptionArrayInput interface {
	pulumi.Input

	ToGetDomainVpcOptionArrayOutput() GetDomainVpcOptionArrayOutput
	ToGetDomainVpcOptionArrayOutputWithContext(context.Context) GetDomainVpcOptionArrayOutput
}

type GetDomainVpcOptionArray []GetDomainVpcOptionInput

func (GetDomainVpcOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainVpcOption)(nil)).Elem()
}

func (i GetDomainVpcOptionArray) ToGetDomainVpcOptionArrayOutput() GetDomainVpcOptionArrayOutput {
	return i.ToGetDomainVpcOptionArrayOutputWithContext(context.Background())
}

func (i GetDomainVpcOptionArray) ToGetDomainVpcOptionArrayOutputWithContext(ctx context.Context) GetDomainVpcOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainVpcOptionArrayOutput)
}

func (i GetDomainVpcOptionArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainVpcOption] {
	return pulumix.Output[[]GetDomainVpcOption]{
		OutputState: i.ToGetDomainVpcOptionArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDomainVpcOptionOutput struct{ *pulumi.OutputState }

func (GetDomainVpcOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainVpcOption)(nil)).Elem()
}

func (o GetDomainVpcOptionOutput) ToGetDomainVpcOptionOutput() GetDomainVpcOptionOutput {
	return o
}

func (o GetDomainVpcOptionOutput) ToGetDomainVpcOptionOutputWithContext(ctx context.Context) GetDomainVpcOptionOutput {
	return o
}

func (o GetDomainVpcOptionOutput) ToOutput(ctx context.Context) pulumix.Output[GetDomainVpcOption] {
	return pulumix.Output[GetDomainVpcOption]{
		OutputState: o.OutputState,
	}
}

// The availability zones used by the domain.
func (o GetDomainVpcOptionOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainVpcOption) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

// The security groups used by the domain.
func (o GetDomainVpcOptionOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainVpcOption) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// The subnets used by the domain.
func (o GetDomainVpcOptionOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainVpcOption) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// The VPC used by the domain.
func (o GetDomainVpcOptionOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainVpcOption) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetDomainVpcOptionArrayOutput struct{ *pulumi.OutputState }

func (GetDomainVpcOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainVpcOption)(nil)).Elem()
}

func (o GetDomainVpcOptionArrayOutput) ToGetDomainVpcOptionArrayOutput() GetDomainVpcOptionArrayOutput {
	return o
}

func (o GetDomainVpcOptionArrayOutput) ToGetDomainVpcOptionArrayOutputWithContext(ctx context.Context) GetDomainVpcOptionArrayOutput {
	return o
}

func (o GetDomainVpcOptionArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDomainVpcOption] {
	return pulumix.Output[[]GetDomainVpcOption]{
		OutputState: o.OutputState,
	}
}

func (o GetDomainVpcOptionArrayOutput) Index(i pulumi.IntInput) GetDomainVpcOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainVpcOption {
		return vs[0].([]GetDomainVpcOption)[vs[1].(int)]
	}).(GetDomainVpcOptionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAdvancedSecurityOptionsInput)(nil)).Elem(), DomainAdvancedSecurityOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAdvancedSecurityOptionsPtrInput)(nil)).Elem(), DomainAdvancedSecurityOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAdvancedSecurityOptionsMasterUserOptionsInput)(nil)).Elem(), DomainAdvancedSecurityOptionsMasterUserOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAdvancedSecurityOptionsMasterUserOptionsPtrInput)(nil)).Elem(), DomainAdvancedSecurityOptionsMasterUserOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAutoTuneOptionsInput)(nil)).Elem(), DomainAutoTuneOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAutoTuneOptionsPtrInput)(nil)).Elem(), DomainAutoTuneOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAutoTuneOptionsMaintenanceScheduleInput)(nil)).Elem(), DomainAutoTuneOptionsMaintenanceScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAutoTuneOptionsMaintenanceScheduleArrayInput)(nil)).Elem(), DomainAutoTuneOptionsMaintenanceScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainAutoTuneOptionsMaintenanceScheduleDurationInput)(nil)).Elem(), DomainAutoTuneOptionsMaintenanceScheduleDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainClusterConfigInput)(nil)).Elem(), DomainClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainClusterConfigPtrInput)(nil)).Elem(), DomainClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainClusterConfigColdStorageOptionsInput)(nil)).Elem(), DomainClusterConfigColdStorageOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainClusterConfigColdStorageOptionsPtrInput)(nil)).Elem(), DomainClusterConfigColdStorageOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainClusterConfigZoneAwarenessConfigInput)(nil)).Elem(), DomainClusterConfigZoneAwarenessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainClusterConfigZoneAwarenessConfigPtrInput)(nil)).Elem(), DomainClusterConfigZoneAwarenessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCognitoOptionsInput)(nil)).Elem(), DomainCognitoOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainCognitoOptionsPtrInput)(nil)).Elem(), DomainCognitoOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainDomainEndpointOptionsInput)(nil)).Elem(), DomainDomainEndpointOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainDomainEndpointOptionsPtrInput)(nil)).Elem(), DomainDomainEndpointOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainEbsOptionsInput)(nil)).Elem(), DomainEbsOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainEbsOptionsPtrInput)(nil)).Elem(), DomainEbsOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainEncryptAtRestInput)(nil)).Elem(), DomainEncryptAtRestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainEncryptAtRestPtrInput)(nil)).Elem(), DomainEncryptAtRestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainLogPublishingOptionInput)(nil)).Elem(), DomainLogPublishingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainLogPublishingOptionArrayInput)(nil)).Elem(), DomainLogPublishingOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainNodeToNodeEncryptionInput)(nil)).Elem(), DomainNodeToNodeEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainNodeToNodeEncryptionPtrInput)(nil)).Elem(), DomainNodeToNodeEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSamlOptionsSamlOptionsInput)(nil)).Elem(), DomainSamlOptionsSamlOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSamlOptionsSamlOptionsPtrInput)(nil)).Elem(), DomainSamlOptionsSamlOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSamlOptionsSamlOptionsIdpInput)(nil)).Elem(), DomainSamlOptionsSamlOptionsIdpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSamlOptionsSamlOptionsIdpPtrInput)(nil)).Elem(), DomainSamlOptionsSamlOptionsIdpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSnapshotOptionsInput)(nil)).Elem(), DomainSnapshotOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainSnapshotOptionsPtrInput)(nil)).Elem(), DomainSnapshotOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainVpcOptionsInput)(nil)).Elem(), DomainVpcOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainVpcOptionsPtrInput)(nil)).Elem(), DomainVpcOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointVpcOptionsInput)(nil)).Elem(), VpcEndpointVpcOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointVpcOptionsPtrInput)(nil)).Elem(), VpcEndpointVpcOptionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainAdvancedSecurityOptionInput)(nil)).Elem(), GetDomainAdvancedSecurityOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainAdvancedSecurityOptionArrayInput)(nil)).Elem(), GetDomainAdvancedSecurityOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainAutoTuneOptionInput)(nil)).Elem(), GetDomainAutoTuneOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainAutoTuneOptionArrayInput)(nil)).Elem(), GetDomainAutoTuneOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainAutoTuneOptionMaintenanceScheduleInput)(nil)).Elem(), GetDomainAutoTuneOptionMaintenanceScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainAutoTuneOptionMaintenanceScheduleArrayInput)(nil)).Elem(), GetDomainAutoTuneOptionMaintenanceScheduleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainAutoTuneOptionMaintenanceScheduleDurationInput)(nil)).Elem(), GetDomainAutoTuneOptionMaintenanceScheduleDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainAutoTuneOptionMaintenanceScheduleDurationArrayInput)(nil)).Elem(), GetDomainAutoTuneOptionMaintenanceScheduleDurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainClusterConfigInput)(nil)).Elem(), GetDomainClusterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainClusterConfigArrayInput)(nil)).Elem(), GetDomainClusterConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainClusterConfigColdStorageOptionInput)(nil)).Elem(), GetDomainClusterConfigColdStorageOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainClusterConfigColdStorageOptionArrayInput)(nil)).Elem(), GetDomainClusterConfigColdStorageOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainClusterConfigZoneAwarenessConfigInput)(nil)).Elem(), GetDomainClusterConfigZoneAwarenessConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainClusterConfigZoneAwarenessConfigArrayInput)(nil)).Elem(), GetDomainClusterConfigZoneAwarenessConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainCognitoOptionInput)(nil)).Elem(), GetDomainCognitoOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainCognitoOptionArrayInput)(nil)).Elem(), GetDomainCognitoOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainEbsOptionInput)(nil)).Elem(), GetDomainEbsOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainEbsOptionArrayInput)(nil)).Elem(), GetDomainEbsOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainEncryptionAtRestInput)(nil)).Elem(), GetDomainEncryptionAtRestArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainEncryptionAtRestArrayInput)(nil)).Elem(), GetDomainEncryptionAtRestArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainLogPublishingOptionInput)(nil)).Elem(), GetDomainLogPublishingOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainLogPublishingOptionArrayInput)(nil)).Elem(), GetDomainLogPublishingOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainNodeToNodeEncryptionInput)(nil)).Elem(), GetDomainNodeToNodeEncryptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainNodeToNodeEncryptionArrayInput)(nil)).Elem(), GetDomainNodeToNodeEncryptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainSnapshotOptionInput)(nil)).Elem(), GetDomainSnapshotOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainSnapshotOptionArrayInput)(nil)).Elem(), GetDomainSnapshotOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainVpcOptionInput)(nil)).Elem(), GetDomainVpcOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainVpcOptionArrayInput)(nil)).Elem(), GetDomainVpcOptionArray{})
	pulumi.RegisterOutputType(DomainAdvancedSecurityOptionsOutput{})
	pulumi.RegisterOutputType(DomainAdvancedSecurityOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainAdvancedSecurityOptionsMasterUserOptionsOutput{})
	pulumi.RegisterOutputType(DomainAdvancedSecurityOptionsMasterUserOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainAutoTuneOptionsOutput{})
	pulumi.RegisterOutputType(DomainAutoTuneOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainAutoTuneOptionsMaintenanceScheduleOutput{})
	pulumi.RegisterOutputType(DomainAutoTuneOptionsMaintenanceScheduleArrayOutput{})
	pulumi.RegisterOutputType(DomainAutoTuneOptionsMaintenanceScheduleDurationOutput{})
	pulumi.RegisterOutputType(DomainClusterConfigOutput{})
	pulumi.RegisterOutputType(DomainClusterConfigPtrOutput{})
	pulumi.RegisterOutputType(DomainClusterConfigColdStorageOptionsOutput{})
	pulumi.RegisterOutputType(DomainClusterConfigColdStorageOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainClusterConfigZoneAwarenessConfigOutput{})
	pulumi.RegisterOutputType(DomainClusterConfigZoneAwarenessConfigPtrOutput{})
	pulumi.RegisterOutputType(DomainCognitoOptionsOutput{})
	pulumi.RegisterOutputType(DomainCognitoOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainDomainEndpointOptionsOutput{})
	pulumi.RegisterOutputType(DomainDomainEndpointOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainEbsOptionsOutput{})
	pulumi.RegisterOutputType(DomainEbsOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainEncryptAtRestOutput{})
	pulumi.RegisterOutputType(DomainEncryptAtRestPtrOutput{})
	pulumi.RegisterOutputType(DomainLogPublishingOptionOutput{})
	pulumi.RegisterOutputType(DomainLogPublishingOptionArrayOutput{})
	pulumi.RegisterOutputType(DomainNodeToNodeEncryptionOutput{})
	pulumi.RegisterOutputType(DomainNodeToNodeEncryptionPtrOutput{})
	pulumi.RegisterOutputType(DomainSamlOptionsSamlOptionsOutput{})
	pulumi.RegisterOutputType(DomainSamlOptionsSamlOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainSamlOptionsSamlOptionsIdpOutput{})
	pulumi.RegisterOutputType(DomainSamlOptionsSamlOptionsIdpPtrOutput{})
	pulumi.RegisterOutputType(DomainSnapshotOptionsOutput{})
	pulumi.RegisterOutputType(DomainSnapshotOptionsPtrOutput{})
	pulumi.RegisterOutputType(DomainVpcOptionsOutput{})
	pulumi.RegisterOutputType(DomainVpcOptionsPtrOutput{})
	pulumi.RegisterOutputType(VpcEndpointVpcOptionsOutput{})
	pulumi.RegisterOutputType(VpcEndpointVpcOptionsPtrOutput{})
	pulumi.RegisterOutputType(GetDomainAdvancedSecurityOptionOutput{})
	pulumi.RegisterOutputType(GetDomainAdvancedSecurityOptionArrayOutput{})
	pulumi.RegisterOutputType(GetDomainAutoTuneOptionOutput{})
	pulumi.RegisterOutputType(GetDomainAutoTuneOptionArrayOutput{})
	pulumi.RegisterOutputType(GetDomainAutoTuneOptionMaintenanceScheduleOutput{})
	pulumi.RegisterOutputType(GetDomainAutoTuneOptionMaintenanceScheduleArrayOutput{})
	pulumi.RegisterOutputType(GetDomainAutoTuneOptionMaintenanceScheduleDurationOutput{})
	pulumi.RegisterOutputType(GetDomainAutoTuneOptionMaintenanceScheduleDurationArrayOutput{})
	pulumi.RegisterOutputType(GetDomainClusterConfigOutput{})
	pulumi.RegisterOutputType(GetDomainClusterConfigArrayOutput{})
	pulumi.RegisterOutputType(GetDomainClusterConfigColdStorageOptionOutput{})
	pulumi.RegisterOutputType(GetDomainClusterConfigColdStorageOptionArrayOutput{})
	pulumi.RegisterOutputType(GetDomainClusterConfigZoneAwarenessConfigOutput{})
	pulumi.RegisterOutputType(GetDomainClusterConfigZoneAwarenessConfigArrayOutput{})
	pulumi.RegisterOutputType(GetDomainCognitoOptionOutput{})
	pulumi.RegisterOutputType(GetDomainCognitoOptionArrayOutput{})
	pulumi.RegisterOutputType(GetDomainEbsOptionOutput{})
	pulumi.RegisterOutputType(GetDomainEbsOptionArrayOutput{})
	pulumi.RegisterOutputType(GetDomainEncryptionAtRestOutput{})
	pulumi.RegisterOutputType(GetDomainEncryptionAtRestArrayOutput{})
	pulumi.RegisterOutputType(GetDomainLogPublishingOptionOutput{})
	pulumi.RegisterOutputType(GetDomainLogPublishingOptionArrayOutput{})
	pulumi.RegisterOutputType(GetDomainNodeToNodeEncryptionOutput{})
	pulumi.RegisterOutputType(GetDomainNodeToNodeEncryptionArrayOutput{})
	pulumi.RegisterOutputType(GetDomainSnapshotOptionOutput{})
	pulumi.RegisterOutputType(GetDomainSnapshotOptionArrayOutput{})
	pulumi.RegisterOutputType(GetDomainVpcOptionOutput{})
	pulumi.RegisterOutputType(GetDomainVpcOptionArrayOutput{})
}
