// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bedrock

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ### GitHub OAuth Provider
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/bedrock"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bedrock.NewAgentcoreOauth2CredentialProvider(ctx, "github", &bedrock.AgentcoreOauth2CredentialProviderArgs{
//				Name:                     pulumi.String("github-oauth-provider"),
//				CredentialProviderVendor: pulumi.String("GithubOauth2"),
//				Oauth2ProviderConfig: &bedrock.AgentcoreOauth2CredentialProviderOauth2ProviderConfigArgs{
//					GithubOauth2ProviderConfig: &bedrock.AgentcoreOauth2CredentialProviderOauth2ProviderConfigGithubOauth2ProviderConfigArgs{
//						ClientId:     pulumi.String("your-github-client-id"),
//						ClientSecret: pulumi.String("your-github-client-secret"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Custom OAuth Provider with Discovery URL
//
// ### Custom OAuth Provider with Authorization Server Metadata
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/bedrock"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bedrock.NewAgentcoreOauth2CredentialProvider(ctx, "keycloak", &bedrock.AgentcoreOauth2CredentialProviderArgs{
//				Name:                     pulumi.String("keycloak-oauth-provider"),
//				CredentialProviderVendor: pulumi.String("CustomOauth2"),
//				Oauth2ProviderConfig: &bedrock.AgentcoreOauth2CredentialProviderOauth2ProviderConfigArgs{
//					CustomOauth2ProviderConfig: &bedrock.AgentcoreOauth2CredentialProviderOauth2ProviderConfigCustomOauth2ProviderConfigArgs{
//						ClientIdWo:                 pulumi.String("keycloak-client-id"),
//						ClientSecretWo:             pulumi.String("keycloak-client-secret"),
//						ClientCredentialsWoVersion: pulumi.Int(1),
//						OauthDiscovery: &bedrock.AgentcoreOauth2CredentialProviderOauth2ProviderConfigCustomOauth2ProviderConfigOauthDiscoveryArgs{
//							AuthorizationServerMetadata: &bedrock.AgentcoreOauth2CredentialProviderOauth2ProviderConfigCustomOauth2ProviderConfigOauthDiscoveryAuthorizationServerMetadataArgs{
//								Issuer:                pulumi.String("https://auth.company.com/realms/production"),
//								AuthorizationEndpoint: pulumi.String("https://auth.company.com/realms/production/protocol/openid-connect/auth"),
//								TokenEndpoint:         pulumi.String("https://auth.company.com/realms/production/protocol/openid-connect/token"),
//								ResponseTypes: pulumi.StringArray{
//									pulumi.String("code"),
//									pulumi.String("id_token"),
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import Bedrock AgentCore OAuth2 Credential Provider using the provider name. For example:
//
// ```sh
// $ pulumi import aws:bedrock/agentcoreOauth2CredentialProvider:AgentcoreOauth2CredentialProvider example oauth2-provider-name
// ```
type AgentcoreOauth2CredentialProvider struct {
	pulumi.CustomResourceState

	// ARN of the AWS Secrets Manager secret containing the client secret.
	ClientSecretArns AgentcoreOauth2CredentialProviderClientSecretArnArrayOutput `pulumi:"clientSecretArns"`
	// ARN of the OAuth2 credential provider.
	CredentialProviderArn pulumi.StringOutput `pulumi:"credentialProviderArn"`
	// Vendor of the OAuth2 credential provider. Valid values: `CustomOauth2`, `GithubOauth2`, `GoogleOauth2`, `Microsoft`, `SalesforceOauth2`, `SlackOauth2`.
	CredentialProviderVendor pulumi.StringOutput `pulumi:"credentialProviderVendor"`
	// Name of the OAuth2 credential provider.
	Name pulumi.StringOutput `pulumi:"name"`
	// OAuth2 provider configuration. Must contain exactly one provider type. See `oauth2ProviderConfig` below.
	//
	// The following arguments are optional:
	Oauth2ProviderConfig AgentcoreOauth2CredentialProviderOauth2ProviderConfigPtrOutput `pulumi:"oauth2ProviderConfig"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringOutput `pulumi:"region"`
}

// NewAgentcoreOauth2CredentialProvider registers a new resource with the given unique name, arguments, and options.
func NewAgentcoreOauth2CredentialProvider(ctx *pulumi.Context,
	name string, args *AgentcoreOauth2CredentialProviderArgs, opts ...pulumi.ResourceOption) (*AgentcoreOauth2CredentialProvider, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CredentialProviderVendor == nil {
		return nil, errors.New("invalid value for required argument 'CredentialProviderVendor'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AgentcoreOauth2CredentialProvider
	err := ctx.RegisterResource("aws:bedrock/agentcoreOauth2CredentialProvider:AgentcoreOauth2CredentialProvider", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAgentcoreOauth2CredentialProvider gets an existing AgentcoreOauth2CredentialProvider resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAgentcoreOauth2CredentialProvider(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AgentcoreOauth2CredentialProviderState, opts ...pulumi.ResourceOption) (*AgentcoreOauth2CredentialProvider, error) {
	var resource AgentcoreOauth2CredentialProvider
	err := ctx.ReadResource("aws:bedrock/agentcoreOauth2CredentialProvider:AgentcoreOauth2CredentialProvider", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AgentcoreOauth2CredentialProvider resources.
type agentcoreOauth2CredentialProviderState struct {
	// ARN of the AWS Secrets Manager secret containing the client secret.
	ClientSecretArns []AgentcoreOauth2CredentialProviderClientSecretArn `pulumi:"clientSecretArns"`
	// ARN of the OAuth2 credential provider.
	CredentialProviderArn *string `pulumi:"credentialProviderArn"`
	// Vendor of the OAuth2 credential provider. Valid values: `CustomOauth2`, `GithubOauth2`, `GoogleOauth2`, `Microsoft`, `SalesforceOauth2`, `SlackOauth2`.
	CredentialProviderVendor *string `pulumi:"credentialProviderVendor"`
	// Name of the OAuth2 credential provider.
	Name *string `pulumi:"name"`
	// OAuth2 provider configuration. Must contain exactly one provider type. See `oauth2ProviderConfig` below.
	//
	// The following arguments are optional:
	Oauth2ProviderConfig *AgentcoreOauth2CredentialProviderOauth2ProviderConfig `pulumi:"oauth2ProviderConfig"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
}

type AgentcoreOauth2CredentialProviderState struct {
	// ARN of the AWS Secrets Manager secret containing the client secret.
	ClientSecretArns AgentcoreOauth2CredentialProviderClientSecretArnArrayInput
	// ARN of the OAuth2 credential provider.
	CredentialProviderArn pulumi.StringPtrInput
	// Vendor of the OAuth2 credential provider. Valid values: `CustomOauth2`, `GithubOauth2`, `GoogleOauth2`, `Microsoft`, `SalesforceOauth2`, `SlackOauth2`.
	CredentialProviderVendor pulumi.StringPtrInput
	// Name of the OAuth2 credential provider.
	Name pulumi.StringPtrInput
	// OAuth2 provider configuration. Must contain exactly one provider type. See `oauth2ProviderConfig` below.
	//
	// The following arguments are optional:
	Oauth2ProviderConfig AgentcoreOauth2CredentialProviderOauth2ProviderConfigPtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
}

func (AgentcoreOauth2CredentialProviderState) ElementType() reflect.Type {
	return reflect.TypeOf((*agentcoreOauth2CredentialProviderState)(nil)).Elem()
}

type agentcoreOauth2CredentialProviderArgs struct {
	// Vendor of the OAuth2 credential provider. Valid values: `CustomOauth2`, `GithubOauth2`, `GoogleOauth2`, `Microsoft`, `SalesforceOauth2`, `SlackOauth2`.
	CredentialProviderVendor string `pulumi:"credentialProviderVendor"`
	// Name of the OAuth2 credential provider.
	Name *string `pulumi:"name"`
	// OAuth2 provider configuration. Must contain exactly one provider type. See `oauth2ProviderConfig` below.
	//
	// The following arguments are optional:
	Oauth2ProviderConfig *AgentcoreOauth2CredentialProviderOauth2ProviderConfig `pulumi:"oauth2ProviderConfig"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
}

// The set of arguments for constructing a AgentcoreOauth2CredentialProvider resource.
type AgentcoreOauth2CredentialProviderArgs struct {
	// Vendor of the OAuth2 credential provider. Valid values: `CustomOauth2`, `GithubOauth2`, `GoogleOauth2`, `Microsoft`, `SalesforceOauth2`, `SlackOauth2`.
	CredentialProviderVendor pulumi.StringInput
	// Name of the OAuth2 credential provider.
	Name pulumi.StringPtrInput
	// OAuth2 provider configuration. Must contain exactly one provider type. See `oauth2ProviderConfig` below.
	//
	// The following arguments are optional:
	Oauth2ProviderConfig AgentcoreOauth2CredentialProviderOauth2ProviderConfigPtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
}

func (AgentcoreOauth2CredentialProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*agentcoreOauth2CredentialProviderArgs)(nil)).Elem()
}

type AgentcoreOauth2CredentialProviderInput interface {
	pulumi.Input

	ToAgentcoreOauth2CredentialProviderOutput() AgentcoreOauth2CredentialProviderOutput
	ToAgentcoreOauth2CredentialProviderOutputWithContext(ctx context.Context) AgentcoreOauth2CredentialProviderOutput
}

func (*AgentcoreOauth2CredentialProvider) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentcoreOauth2CredentialProvider)(nil)).Elem()
}

func (i *AgentcoreOauth2CredentialProvider) ToAgentcoreOauth2CredentialProviderOutput() AgentcoreOauth2CredentialProviderOutput {
	return i.ToAgentcoreOauth2CredentialProviderOutputWithContext(context.Background())
}

func (i *AgentcoreOauth2CredentialProvider) ToAgentcoreOauth2CredentialProviderOutputWithContext(ctx context.Context) AgentcoreOauth2CredentialProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentcoreOauth2CredentialProviderOutput)
}

// AgentcoreOauth2CredentialProviderArrayInput is an input type that accepts AgentcoreOauth2CredentialProviderArray and AgentcoreOauth2CredentialProviderArrayOutput values.
// You can construct a concrete instance of `AgentcoreOauth2CredentialProviderArrayInput` via:
//
//	AgentcoreOauth2CredentialProviderArray{ AgentcoreOauth2CredentialProviderArgs{...} }
type AgentcoreOauth2CredentialProviderArrayInput interface {
	pulumi.Input

	ToAgentcoreOauth2CredentialProviderArrayOutput() AgentcoreOauth2CredentialProviderArrayOutput
	ToAgentcoreOauth2CredentialProviderArrayOutputWithContext(context.Context) AgentcoreOauth2CredentialProviderArrayOutput
}

type AgentcoreOauth2CredentialProviderArray []AgentcoreOauth2CredentialProviderInput

func (AgentcoreOauth2CredentialProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AgentcoreOauth2CredentialProvider)(nil)).Elem()
}

func (i AgentcoreOauth2CredentialProviderArray) ToAgentcoreOauth2CredentialProviderArrayOutput() AgentcoreOauth2CredentialProviderArrayOutput {
	return i.ToAgentcoreOauth2CredentialProviderArrayOutputWithContext(context.Background())
}

func (i AgentcoreOauth2CredentialProviderArray) ToAgentcoreOauth2CredentialProviderArrayOutputWithContext(ctx context.Context) AgentcoreOauth2CredentialProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentcoreOauth2CredentialProviderArrayOutput)
}

// AgentcoreOauth2CredentialProviderMapInput is an input type that accepts AgentcoreOauth2CredentialProviderMap and AgentcoreOauth2CredentialProviderMapOutput values.
// You can construct a concrete instance of `AgentcoreOauth2CredentialProviderMapInput` via:
//
//	AgentcoreOauth2CredentialProviderMap{ "key": AgentcoreOauth2CredentialProviderArgs{...} }
type AgentcoreOauth2CredentialProviderMapInput interface {
	pulumi.Input

	ToAgentcoreOauth2CredentialProviderMapOutput() AgentcoreOauth2CredentialProviderMapOutput
	ToAgentcoreOauth2CredentialProviderMapOutputWithContext(context.Context) AgentcoreOauth2CredentialProviderMapOutput
}

type AgentcoreOauth2CredentialProviderMap map[string]AgentcoreOauth2CredentialProviderInput

func (AgentcoreOauth2CredentialProviderMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AgentcoreOauth2CredentialProvider)(nil)).Elem()
}

func (i AgentcoreOauth2CredentialProviderMap) ToAgentcoreOauth2CredentialProviderMapOutput() AgentcoreOauth2CredentialProviderMapOutput {
	return i.ToAgentcoreOauth2CredentialProviderMapOutputWithContext(context.Background())
}

func (i AgentcoreOauth2CredentialProviderMap) ToAgentcoreOauth2CredentialProviderMapOutputWithContext(ctx context.Context) AgentcoreOauth2CredentialProviderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentcoreOauth2CredentialProviderMapOutput)
}

type AgentcoreOauth2CredentialProviderOutput struct{ *pulumi.OutputState }

func (AgentcoreOauth2CredentialProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentcoreOauth2CredentialProvider)(nil)).Elem()
}

func (o AgentcoreOauth2CredentialProviderOutput) ToAgentcoreOauth2CredentialProviderOutput() AgentcoreOauth2CredentialProviderOutput {
	return o
}

func (o AgentcoreOauth2CredentialProviderOutput) ToAgentcoreOauth2CredentialProviderOutputWithContext(ctx context.Context) AgentcoreOauth2CredentialProviderOutput {
	return o
}

// ARN of the AWS Secrets Manager secret containing the client secret.
func (o AgentcoreOauth2CredentialProviderOutput) ClientSecretArns() AgentcoreOauth2CredentialProviderClientSecretArnArrayOutput {
	return o.ApplyT(func(v *AgentcoreOauth2CredentialProvider) AgentcoreOauth2CredentialProviderClientSecretArnArrayOutput {
		return v.ClientSecretArns
	}).(AgentcoreOauth2CredentialProviderClientSecretArnArrayOutput)
}

// ARN of the OAuth2 credential provider.
func (o AgentcoreOauth2CredentialProviderOutput) CredentialProviderArn() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentcoreOauth2CredentialProvider) pulumi.StringOutput { return v.CredentialProviderArn }).(pulumi.StringOutput)
}

// Vendor of the OAuth2 credential provider. Valid values: `CustomOauth2`, `GithubOauth2`, `GoogleOauth2`, `Microsoft`, `SalesforceOauth2`, `SlackOauth2`.
func (o AgentcoreOauth2CredentialProviderOutput) CredentialProviderVendor() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentcoreOauth2CredentialProvider) pulumi.StringOutput { return v.CredentialProviderVendor }).(pulumi.StringOutput)
}

// Name of the OAuth2 credential provider.
func (o AgentcoreOauth2CredentialProviderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentcoreOauth2CredentialProvider) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// OAuth2 provider configuration. Must contain exactly one provider type. See `oauth2ProviderConfig` below.
//
// The following arguments are optional:
func (o AgentcoreOauth2CredentialProviderOutput) Oauth2ProviderConfig() AgentcoreOauth2CredentialProviderOauth2ProviderConfigPtrOutput {
	return o.ApplyT(func(v *AgentcoreOauth2CredentialProvider) AgentcoreOauth2CredentialProviderOauth2ProviderConfigPtrOutput {
		return v.Oauth2ProviderConfig
	}).(AgentcoreOauth2CredentialProviderOauth2ProviderConfigPtrOutput)
}

// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
func (o AgentcoreOauth2CredentialProviderOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentcoreOauth2CredentialProvider) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

type AgentcoreOauth2CredentialProviderArrayOutput struct{ *pulumi.OutputState }

func (AgentcoreOauth2CredentialProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AgentcoreOauth2CredentialProvider)(nil)).Elem()
}

func (o AgentcoreOauth2CredentialProviderArrayOutput) ToAgentcoreOauth2CredentialProviderArrayOutput() AgentcoreOauth2CredentialProviderArrayOutput {
	return o
}

func (o AgentcoreOauth2CredentialProviderArrayOutput) ToAgentcoreOauth2CredentialProviderArrayOutputWithContext(ctx context.Context) AgentcoreOauth2CredentialProviderArrayOutput {
	return o
}

func (o AgentcoreOauth2CredentialProviderArrayOutput) Index(i pulumi.IntInput) AgentcoreOauth2CredentialProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AgentcoreOauth2CredentialProvider {
		return vs[0].([]*AgentcoreOauth2CredentialProvider)[vs[1].(int)]
	}).(AgentcoreOauth2CredentialProviderOutput)
}

type AgentcoreOauth2CredentialProviderMapOutput struct{ *pulumi.OutputState }

func (AgentcoreOauth2CredentialProviderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AgentcoreOauth2CredentialProvider)(nil)).Elem()
}

func (o AgentcoreOauth2CredentialProviderMapOutput) ToAgentcoreOauth2CredentialProviderMapOutput() AgentcoreOauth2CredentialProviderMapOutput {
	return o
}

func (o AgentcoreOauth2CredentialProviderMapOutput) ToAgentcoreOauth2CredentialProviderMapOutputWithContext(ctx context.Context) AgentcoreOauth2CredentialProviderMapOutput {
	return o
}

func (o AgentcoreOauth2CredentialProviderMapOutput) MapIndex(k pulumi.StringInput) AgentcoreOauth2CredentialProviderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AgentcoreOauth2CredentialProvider {
		return vs[0].(map[string]*AgentcoreOauth2CredentialProvider)[vs[1].(string)]
	}).(AgentcoreOauth2CredentialProviderOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AgentcoreOauth2CredentialProviderInput)(nil)).Elem(), &AgentcoreOauth2CredentialProvider{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentcoreOauth2CredentialProviderArrayInput)(nil)).Elem(), AgentcoreOauth2CredentialProviderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentcoreOauth2CredentialProviderMapInput)(nil)).Elem(), AgentcoreOauth2CredentialProviderMap{})
	pulumi.RegisterOutputType(AgentcoreOauth2CredentialProviderOutput{})
	pulumi.RegisterOutputType(AgentcoreOauth2CredentialProviderArrayOutput{})
	pulumi.RegisterOutputType(AgentcoreOauth2CredentialProviderMapOutput{})
}
