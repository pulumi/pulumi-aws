// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bedrock

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for managing an AWS Bedrock Inference Profile.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/bedrock"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			test, err := bedrock.GetInferenceProfiles(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = bedrock.GetInferenceProfile(ctx, &bedrock.GetInferenceProfileArgs{
//				InferenceProfileId: test.InferenceProfileSummaries[0].InferenceProfileId,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetInferenceProfile(ctx *pulumi.Context, args *GetInferenceProfileArgs, opts ...pulumi.InvokeOption) (*GetInferenceProfileResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetInferenceProfileResult
	err := ctx.Invoke("aws:bedrock/getInferenceProfile:getInferenceProfile", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInferenceProfile.
type GetInferenceProfileArgs struct {
	// Inference Profile identifier.
	InferenceProfileId string `pulumi:"inferenceProfileId"`
}

// A collection of values returned by getInferenceProfile.
type GetInferenceProfileResult struct {
	// The time at which the inference profile was created.
	CreatedAt string `pulumi:"createdAt"`
	// The description of the inference profile.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Amazon Resource Name (ARN) of the inference profile.
	InferenceProfileArn string `pulumi:"inferenceProfileArn"`
	InferenceProfileId  string `pulumi:"inferenceProfileId"`
	// The unique identifier of the inference profile.
	InferenceProfileName string `pulumi:"inferenceProfileName"`
	// A list of information about each model in the inference profile. See `models`.
	Models []GetInferenceProfileModel `pulumi:"models"`
	// The status of the inference profile. `ACTIVE` means that the inference profile is available to use.
	Status string `pulumi:"status"`
	// The type of the inference profile. `SYSTEM_DEFINED` means that the inference profile is defined by Amazon Bedrock.
	Type string `pulumi:"type"`
	// The time at which the inference profile was last updated.
	UpdatedAt string `pulumi:"updatedAt"`
}

func GetInferenceProfileOutput(ctx *pulumi.Context, args GetInferenceProfileOutputArgs, opts ...pulumi.InvokeOption) GetInferenceProfileResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetInferenceProfileResultOutput, error) {
			args := v.(GetInferenceProfileArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetInferenceProfileResult
			secret, err := ctx.InvokePackageRaw("aws:bedrock/getInferenceProfile:getInferenceProfile", args, &rv, "", opts...)
			if err != nil {
				return GetInferenceProfileResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetInferenceProfileResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetInferenceProfileResultOutput), nil
			}
			return output, nil
		}).(GetInferenceProfileResultOutput)
}

// A collection of arguments for invoking getInferenceProfile.
type GetInferenceProfileOutputArgs struct {
	// Inference Profile identifier.
	InferenceProfileId pulumi.StringInput `pulumi:"inferenceProfileId"`
}

func (GetInferenceProfileOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInferenceProfileArgs)(nil)).Elem()
}

// A collection of values returned by getInferenceProfile.
type GetInferenceProfileResultOutput struct{ *pulumi.OutputState }

func (GetInferenceProfileResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInferenceProfileResult)(nil)).Elem()
}

func (o GetInferenceProfileResultOutput) ToGetInferenceProfileResultOutput() GetInferenceProfileResultOutput {
	return o
}

func (o GetInferenceProfileResultOutput) ToGetInferenceProfileResultOutputWithContext(ctx context.Context) GetInferenceProfileResultOutput {
	return o
}

// The time at which the inference profile was created.
func (o GetInferenceProfileResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetInferenceProfileResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the inference profile.
func (o GetInferenceProfileResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInferenceProfileResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetInferenceProfileResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInferenceProfileResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the inference profile.
func (o GetInferenceProfileResultOutput) InferenceProfileArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetInferenceProfileResult) string { return v.InferenceProfileArn }).(pulumi.StringOutput)
}

func (o GetInferenceProfileResultOutput) InferenceProfileId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInferenceProfileResult) string { return v.InferenceProfileId }).(pulumi.StringOutput)
}

// The unique identifier of the inference profile.
func (o GetInferenceProfileResultOutput) InferenceProfileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInferenceProfileResult) string { return v.InferenceProfileName }).(pulumi.StringOutput)
}

// A list of information about each model in the inference profile. See `models`.
func (o GetInferenceProfileResultOutput) Models() GetInferenceProfileModelArrayOutput {
	return o.ApplyT(func(v GetInferenceProfileResult) []GetInferenceProfileModel { return v.Models }).(GetInferenceProfileModelArrayOutput)
}

// The status of the inference profile. `ACTIVE` means that the inference profile is available to use.
func (o GetInferenceProfileResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInferenceProfileResult) string { return v.Status }).(pulumi.StringOutput)
}

// The type of the inference profile. `SYSTEM_DEFINED` means that the inference profile is defined by Amazon Bedrock.
func (o GetInferenceProfileResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInferenceProfileResult) string { return v.Type }).(pulumi.StringOutput)
}

// The time at which the inference profile was last updated.
func (o GetInferenceProfileResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetInferenceProfileResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInferenceProfileResultOutput{})
}
