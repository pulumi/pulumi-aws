// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bedrock

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS Agents for Amazon Bedrock Agent Knowledge Base Association.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/bedrock"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bedrock.NewAgentAgentKnowledgeBaseAssociation(ctx, "example", &bedrock.AgentAgentKnowledgeBaseAssociationArgs{
//				AgentId:            pulumi.String("012EXAMPLE"),
//				Description:        pulumi.String("Example Knowledge base"),
//				KnowledgeBaseId:    pulumi.String("345EXAMPLE"),
//				KnowledgeBaseState: pulumi.String("ENABLED"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import Agents for Amazon Bedrock Agent Knowledge Base Association using the `012AGENTID-DRAFT-345678KBID`. For example:
//
// ```sh
// $ pulumi import aws:bedrock/agentAgentKnowledgeBaseAssociation:AgentAgentKnowledgeBaseAssociation example 012AGENTID-DRAFT-345678KBID
// ```
type AgentAgentKnowledgeBaseAssociation struct {
	pulumi.CustomResourceState

	// The ID of the agent to associate.
	AgentId pulumi.StringOutput `pulumi:"agentId"`
	// Agent version to associate the Knowledge Base to, currently only DRAFT.
	AgentVersion pulumi.StringOutput `pulumi:"agentVersion"`
	// Description of the association.
	Description pulumi.StringOutput `pulumi:"description"`
	// The ID of the Knowledge Base to associate.
	KnowledgeBaseId pulumi.StringOutput `pulumi:"knowledgeBaseId"`
	// State of the association ENABLED or DISABLED.
	//
	// The following arguments are optional:
	KnowledgeBaseState pulumi.StringOutput `pulumi:"knowledgeBaseState"`
}

// NewAgentAgentKnowledgeBaseAssociation registers a new resource with the given unique name, arguments, and options.
func NewAgentAgentKnowledgeBaseAssociation(ctx *pulumi.Context,
	name string, args *AgentAgentKnowledgeBaseAssociationArgs, opts ...pulumi.ResourceOption) (*AgentAgentKnowledgeBaseAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AgentId == nil {
		return nil, errors.New("invalid value for required argument 'AgentId'")
	}
	if args.Description == nil {
		return nil, errors.New("invalid value for required argument 'Description'")
	}
	if args.KnowledgeBaseId == nil {
		return nil, errors.New("invalid value for required argument 'KnowledgeBaseId'")
	}
	if args.KnowledgeBaseState == nil {
		return nil, errors.New("invalid value for required argument 'KnowledgeBaseState'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AgentAgentKnowledgeBaseAssociation
	err := ctx.RegisterResource("aws:bedrock/agentAgentKnowledgeBaseAssociation:AgentAgentKnowledgeBaseAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAgentAgentKnowledgeBaseAssociation gets an existing AgentAgentKnowledgeBaseAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAgentAgentKnowledgeBaseAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AgentAgentKnowledgeBaseAssociationState, opts ...pulumi.ResourceOption) (*AgentAgentKnowledgeBaseAssociation, error) {
	var resource AgentAgentKnowledgeBaseAssociation
	err := ctx.ReadResource("aws:bedrock/agentAgentKnowledgeBaseAssociation:AgentAgentKnowledgeBaseAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AgentAgentKnowledgeBaseAssociation resources.
type agentAgentKnowledgeBaseAssociationState struct {
	// The ID of the agent to associate.
	AgentId *string `pulumi:"agentId"`
	// Agent version to associate the Knowledge Base to, currently only DRAFT.
	AgentVersion *string `pulumi:"agentVersion"`
	// Description of the association.
	Description *string `pulumi:"description"`
	// The ID of the Knowledge Base to associate.
	KnowledgeBaseId *string `pulumi:"knowledgeBaseId"`
	// State of the association ENABLED or DISABLED.
	//
	// The following arguments are optional:
	KnowledgeBaseState *string `pulumi:"knowledgeBaseState"`
}

type AgentAgentKnowledgeBaseAssociationState struct {
	// The ID of the agent to associate.
	AgentId pulumi.StringPtrInput
	// Agent version to associate the Knowledge Base to, currently only DRAFT.
	AgentVersion pulumi.StringPtrInput
	// Description of the association.
	Description pulumi.StringPtrInput
	// The ID of the Knowledge Base to associate.
	KnowledgeBaseId pulumi.StringPtrInput
	// State of the association ENABLED or DISABLED.
	//
	// The following arguments are optional:
	KnowledgeBaseState pulumi.StringPtrInput
}

func (AgentAgentKnowledgeBaseAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*agentAgentKnowledgeBaseAssociationState)(nil)).Elem()
}

type agentAgentKnowledgeBaseAssociationArgs struct {
	// The ID of the agent to associate.
	AgentId string `pulumi:"agentId"`
	// Agent version to associate the Knowledge Base to, currently only DRAFT.
	AgentVersion *string `pulumi:"agentVersion"`
	// Description of the association.
	Description string `pulumi:"description"`
	// The ID of the Knowledge Base to associate.
	KnowledgeBaseId string `pulumi:"knowledgeBaseId"`
	// State of the association ENABLED or DISABLED.
	//
	// The following arguments are optional:
	KnowledgeBaseState string `pulumi:"knowledgeBaseState"`
}

// The set of arguments for constructing a AgentAgentKnowledgeBaseAssociation resource.
type AgentAgentKnowledgeBaseAssociationArgs struct {
	// The ID of the agent to associate.
	AgentId pulumi.StringInput
	// Agent version to associate the Knowledge Base to, currently only DRAFT.
	AgentVersion pulumi.StringPtrInput
	// Description of the association.
	Description pulumi.StringInput
	// The ID of the Knowledge Base to associate.
	KnowledgeBaseId pulumi.StringInput
	// State of the association ENABLED or DISABLED.
	//
	// The following arguments are optional:
	KnowledgeBaseState pulumi.StringInput
}

func (AgentAgentKnowledgeBaseAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*agentAgentKnowledgeBaseAssociationArgs)(nil)).Elem()
}

type AgentAgentKnowledgeBaseAssociationInput interface {
	pulumi.Input

	ToAgentAgentKnowledgeBaseAssociationOutput() AgentAgentKnowledgeBaseAssociationOutput
	ToAgentAgentKnowledgeBaseAssociationOutputWithContext(ctx context.Context) AgentAgentKnowledgeBaseAssociationOutput
}

func (*AgentAgentKnowledgeBaseAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentAgentKnowledgeBaseAssociation)(nil)).Elem()
}

func (i *AgentAgentKnowledgeBaseAssociation) ToAgentAgentKnowledgeBaseAssociationOutput() AgentAgentKnowledgeBaseAssociationOutput {
	return i.ToAgentAgentKnowledgeBaseAssociationOutputWithContext(context.Background())
}

func (i *AgentAgentKnowledgeBaseAssociation) ToAgentAgentKnowledgeBaseAssociationOutputWithContext(ctx context.Context) AgentAgentKnowledgeBaseAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentAgentKnowledgeBaseAssociationOutput)
}

// AgentAgentKnowledgeBaseAssociationArrayInput is an input type that accepts AgentAgentKnowledgeBaseAssociationArray and AgentAgentKnowledgeBaseAssociationArrayOutput values.
// You can construct a concrete instance of `AgentAgentKnowledgeBaseAssociationArrayInput` via:
//
//	AgentAgentKnowledgeBaseAssociationArray{ AgentAgentKnowledgeBaseAssociationArgs{...} }
type AgentAgentKnowledgeBaseAssociationArrayInput interface {
	pulumi.Input

	ToAgentAgentKnowledgeBaseAssociationArrayOutput() AgentAgentKnowledgeBaseAssociationArrayOutput
	ToAgentAgentKnowledgeBaseAssociationArrayOutputWithContext(context.Context) AgentAgentKnowledgeBaseAssociationArrayOutput
}

type AgentAgentKnowledgeBaseAssociationArray []AgentAgentKnowledgeBaseAssociationInput

func (AgentAgentKnowledgeBaseAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AgentAgentKnowledgeBaseAssociation)(nil)).Elem()
}

func (i AgentAgentKnowledgeBaseAssociationArray) ToAgentAgentKnowledgeBaseAssociationArrayOutput() AgentAgentKnowledgeBaseAssociationArrayOutput {
	return i.ToAgentAgentKnowledgeBaseAssociationArrayOutputWithContext(context.Background())
}

func (i AgentAgentKnowledgeBaseAssociationArray) ToAgentAgentKnowledgeBaseAssociationArrayOutputWithContext(ctx context.Context) AgentAgentKnowledgeBaseAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentAgentKnowledgeBaseAssociationArrayOutput)
}

// AgentAgentKnowledgeBaseAssociationMapInput is an input type that accepts AgentAgentKnowledgeBaseAssociationMap and AgentAgentKnowledgeBaseAssociationMapOutput values.
// You can construct a concrete instance of `AgentAgentKnowledgeBaseAssociationMapInput` via:
//
//	AgentAgentKnowledgeBaseAssociationMap{ "key": AgentAgentKnowledgeBaseAssociationArgs{...} }
type AgentAgentKnowledgeBaseAssociationMapInput interface {
	pulumi.Input

	ToAgentAgentKnowledgeBaseAssociationMapOutput() AgentAgentKnowledgeBaseAssociationMapOutput
	ToAgentAgentKnowledgeBaseAssociationMapOutputWithContext(context.Context) AgentAgentKnowledgeBaseAssociationMapOutput
}

type AgentAgentKnowledgeBaseAssociationMap map[string]AgentAgentKnowledgeBaseAssociationInput

func (AgentAgentKnowledgeBaseAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AgentAgentKnowledgeBaseAssociation)(nil)).Elem()
}

func (i AgentAgentKnowledgeBaseAssociationMap) ToAgentAgentKnowledgeBaseAssociationMapOutput() AgentAgentKnowledgeBaseAssociationMapOutput {
	return i.ToAgentAgentKnowledgeBaseAssociationMapOutputWithContext(context.Background())
}

func (i AgentAgentKnowledgeBaseAssociationMap) ToAgentAgentKnowledgeBaseAssociationMapOutputWithContext(ctx context.Context) AgentAgentKnowledgeBaseAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentAgentKnowledgeBaseAssociationMapOutput)
}

type AgentAgentKnowledgeBaseAssociationOutput struct{ *pulumi.OutputState }

func (AgentAgentKnowledgeBaseAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentAgentKnowledgeBaseAssociation)(nil)).Elem()
}

func (o AgentAgentKnowledgeBaseAssociationOutput) ToAgentAgentKnowledgeBaseAssociationOutput() AgentAgentKnowledgeBaseAssociationOutput {
	return o
}

func (o AgentAgentKnowledgeBaseAssociationOutput) ToAgentAgentKnowledgeBaseAssociationOutputWithContext(ctx context.Context) AgentAgentKnowledgeBaseAssociationOutput {
	return o
}

// The ID of the agent to associate.
func (o AgentAgentKnowledgeBaseAssociationOutput) AgentId() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentAgentKnowledgeBaseAssociation) pulumi.StringOutput { return v.AgentId }).(pulumi.StringOutput)
}

// Agent version to associate the Knowledge Base to, currently only DRAFT.
func (o AgentAgentKnowledgeBaseAssociationOutput) AgentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentAgentKnowledgeBaseAssociation) pulumi.StringOutput { return v.AgentVersion }).(pulumi.StringOutput)
}

// Description of the association.
func (o AgentAgentKnowledgeBaseAssociationOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentAgentKnowledgeBaseAssociation) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// The ID of the Knowledge Base to associate.
func (o AgentAgentKnowledgeBaseAssociationOutput) KnowledgeBaseId() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentAgentKnowledgeBaseAssociation) pulumi.StringOutput { return v.KnowledgeBaseId }).(pulumi.StringOutput)
}

// State of the association ENABLED or DISABLED.
//
// The following arguments are optional:
func (o AgentAgentKnowledgeBaseAssociationOutput) KnowledgeBaseState() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentAgentKnowledgeBaseAssociation) pulumi.StringOutput { return v.KnowledgeBaseState }).(pulumi.StringOutput)
}

type AgentAgentKnowledgeBaseAssociationArrayOutput struct{ *pulumi.OutputState }

func (AgentAgentKnowledgeBaseAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AgentAgentKnowledgeBaseAssociation)(nil)).Elem()
}

func (o AgentAgentKnowledgeBaseAssociationArrayOutput) ToAgentAgentKnowledgeBaseAssociationArrayOutput() AgentAgentKnowledgeBaseAssociationArrayOutput {
	return o
}

func (o AgentAgentKnowledgeBaseAssociationArrayOutput) ToAgentAgentKnowledgeBaseAssociationArrayOutputWithContext(ctx context.Context) AgentAgentKnowledgeBaseAssociationArrayOutput {
	return o
}

func (o AgentAgentKnowledgeBaseAssociationArrayOutput) Index(i pulumi.IntInput) AgentAgentKnowledgeBaseAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AgentAgentKnowledgeBaseAssociation {
		return vs[0].([]*AgentAgentKnowledgeBaseAssociation)[vs[1].(int)]
	}).(AgentAgentKnowledgeBaseAssociationOutput)
}

type AgentAgentKnowledgeBaseAssociationMapOutput struct{ *pulumi.OutputState }

func (AgentAgentKnowledgeBaseAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AgentAgentKnowledgeBaseAssociation)(nil)).Elem()
}

func (o AgentAgentKnowledgeBaseAssociationMapOutput) ToAgentAgentKnowledgeBaseAssociationMapOutput() AgentAgentKnowledgeBaseAssociationMapOutput {
	return o
}

func (o AgentAgentKnowledgeBaseAssociationMapOutput) ToAgentAgentKnowledgeBaseAssociationMapOutputWithContext(ctx context.Context) AgentAgentKnowledgeBaseAssociationMapOutput {
	return o
}

func (o AgentAgentKnowledgeBaseAssociationMapOutput) MapIndex(k pulumi.StringInput) AgentAgentKnowledgeBaseAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AgentAgentKnowledgeBaseAssociation {
		return vs[0].(map[string]*AgentAgentKnowledgeBaseAssociation)[vs[1].(string)]
	}).(AgentAgentKnowledgeBaseAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AgentAgentKnowledgeBaseAssociationInput)(nil)).Elem(), &AgentAgentKnowledgeBaseAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentAgentKnowledgeBaseAssociationArrayInput)(nil)).Elem(), AgentAgentKnowledgeBaseAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentAgentKnowledgeBaseAssociationMapInput)(nil)).Elem(), AgentAgentKnowledgeBaseAssociationMap{})
	pulumi.RegisterOutputType(AgentAgentKnowledgeBaseAssociationOutput{})
	pulumi.RegisterOutputType(AgentAgentKnowledgeBaseAssociationArrayOutput{})
	pulumi.RegisterOutputType(AgentAgentKnowledgeBaseAssociationMapOutput{})
}
