// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bedrock

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS Bedrock Agents Prompt.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/bedrock"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bedrock.NewAgentPrompt(ctx, "example", &bedrock.AgentPromptArgs{
//				Name:        pulumi.String("MyPrompt"),
//				Description: pulumi.String("My prompt description."),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### With Variants
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/bedrock"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bedrock.NewAgentPrompt(ctx, "example", &bedrock.AgentPromptArgs{
//				Name:           pulumi.String("MakePlaylist"),
//				Description:    pulumi.String("My first prompt."),
//				DefaultVariant: pulumi.String("Variant1"),
//				Variants: bedrock.AgentPromptVariantArray{
//					&bedrock.AgentPromptVariantArgs{
//						Name:    pulumi.String("Variant1"),
//						ModelId: pulumi.String("amazon.titan-text-express-v1"),
//						InferenceConfiguration: &bedrock.AgentPromptVariantInferenceConfigurationArgs{
//							Text: &bedrock.AgentPromptVariantInferenceConfigurationTextArgs{
//								Temperature: pulumi.Float64(0.8),
//							},
//						},
//						TemplateType: pulumi.String("TEXT"),
//						TemplateConfiguration: &bedrock.AgentPromptVariantTemplateConfigurationArgs{
//							Text: &bedrock.AgentPromptVariantTemplateConfigurationTextArgs{
//								Text: pulumi.String("Make me a {{genre}} playlist consisting of the following number of songs: {{number}}."),
//								InputVariables: bedrock.AgentPromptVariantTemplateConfigurationTextInputVariableArray{
//									&bedrock.AgentPromptVariantTemplateConfigurationTextInputVariableArgs{
//										Name: pulumi.String("genre"),
//									},
//									&bedrock.AgentPromptVariantTemplateConfigurationTextInputVariableArgs{
//										Name: pulumi.String("number"),
//									},
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import Bedrock Agents Prompt using the `id`. For example:
//
// ```sh
// $ pulumi import aws:bedrock/agentPrompt:AgentPrompt example 1A2BC3DEFG
// ```
type AgentPrompt struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of the prompt.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Time at which the prompt was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Amazon Resource Name (ARN) of the KMS key that you encrypted the prompt with.
	CustomerEncryptionKeyArn pulumi.StringPtrOutput `pulumi:"customerEncryptionKeyArn"`
	// Name of the default variant for your prompt.
	DefaultVariant pulumi.StringPtrOutput `pulumi:"defaultVariant"`
	// Description of the prompt.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Name of the prompt.
	//
	// The following arguments are optional:
	Name pulumi.StringOutput `pulumi:"name"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
	// Time at which the prompt was last updated.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// A list of objects, each containing details about a variant of the prompt. See Variant for more information.
	Variants AgentPromptVariantArrayOutput `pulumi:"variants"`
	// Version of the prompt. When you create a prompt, the version created is the `DRAFT` version.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewAgentPrompt registers a new resource with the given unique name, arguments, and options.
func NewAgentPrompt(ctx *pulumi.Context,
	name string, args *AgentPromptArgs, opts ...pulumi.ResourceOption) (*AgentPrompt, error) {
	if args == nil {
		args = &AgentPromptArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AgentPrompt
	err := ctx.RegisterResource("aws:bedrock/agentPrompt:AgentPrompt", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAgentPrompt gets an existing AgentPrompt resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAgentPrompt(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AgentPromptState, opts ...pulumi.ResourceOption) (*AgentPrompt, error) {
	var resource AgentPrompt
	err := ctx.ReadResource("aws:bedrock/agentPrompt:AgentPrompt", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AgentPrompt resources.
type agentPromptState struct {
	// Amazon Resource Name (ARN) of the prompt.
	Arn *string `pulumi:"arn"`
	// Time at which the prompt was created.
	CreatedAt *string `pulumi:"createdAt"`
	// Amazon Resource Name (ARN) of the KMS key that you encrypted the prompt with.
	CustomerEncryptionKeyArn *string `pulumi:"customerEncryptionKeyArn"`
	// Name of the default variant for your prompt.
	DefaultVariant *string `pulumi:"defaultVariant"`
	// Description of the prompt.
	Description *string `pulumi:"description"`
	// Name of the prompt.
	//
	// The following arguments are optional:
	Name *string `pulumi:"name"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Time at which the prompt was last updated.
	UpdatedAt *string `pulumi:"updatedAt"`
	// A list of objects, each containing details about a variant of the prompt. See Variant for more information.
	Variants []AgentPromptVariant `pulumi:"variants"`
	// Version of the prompt. When you create a prompt, the version created is the `DRAFT` version.
	Version *string `pulumi:"version"`
}

type AgentPromptState struct {
	// Amazon Resource Name (ARN) of the prompt.
	Arn pulumi.StringPtrInput
	// Time at which the prompt was created.
	CreatedAt pulumi.StringPtrInput
	// Amazon Resource Name (ARN) of the KMS key that you encrypted the prompt with.
	CustomerEncryptionKeyArn pulumi.StringPtrInput
	// Name of the default variant for your prompt.
	DefaultVariant pulumi.StringPtrInput
	// Description of the prompt.
	Description pulumi.StringPtrInput
	// Name of the prompt.
	//
	// The following arguments are optional:
	Name pulumi.StringPtrInput
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapInput
	// Time at which the prompt was last updated.
	UpdatedAt pulumi.StringPtrInput
	// A list of objects, each containing details about a variant of the prompt. See Variant for more information.
	Variants AgentPromptVariantArrayInput
	// Version of the prompt. When you create a prompt, the version created is the `DRAFT` version.
	Version pulumi.StringPtrInput
}

func (AgentPromptState) ElementType() reflect.Type {
	return reflect.TypeOf((*agentPromptState)(nil)).Elem()
}

type agentPromptArgs struct {
	// Amazon Resource Name (ARN) of the KMS key that you encrypted the prompt with.
	CustomerEncryptionKeyArn *string `pulumi:"customerEncryptionKeyArn"`
	// Name of the default variant for your prompt.
	DefaultVariant *string `pulumi:"defaultVariant"`
	// Description of the prompt.
	Description *string `pulumi:"description"`
	// Name of the prompt.
	//
	// The following arguments are optional:
	Name *string `pulumi:"name"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A list of objects, each containing details about a variant of the prompt. See Variant for more information.
	Variants []AgentPromptVariant `pulumi:"variants"`
}

// The set of arguments for constructing a AgentPrompt resource.
type AgentPromptArgs struct {
	// Amazon Resource Name (ARN) of the KMS key that you encrypted the prompt with.
	CustomerEncryptionKeyArn pulumi.StringPtrInput
	// Name of the default variant for your prompt.
	DefaultVariant pulumi.StringPtrInput
	// Description of the prompt.
	Description pulumi.StringPtrInput
	// Name of the prompt.
	//
	// The following arguments are optional:
	Name pulumi.StringPtrInput
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A list of objects, each containing details about a variant of the prompt. See Variant for more information.
	Variants AgentPromptVariantArrayInput
}

func (AgentPromptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*agentPromptArgs)(nil)).Elem()
}

type AgentPromptInput interface {
	pulumi.Input

	ToAgentPromptOutput() AgentPromptOutput
	ToAgentPromptOutputWithContext(ctx context.Context) AgentPromptOutput
}

func (*AgentPrompt) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPrompt)(nil)).Elem()
}

func (i *AgentPrompt) ToAgentPromptOutput() AgentPromptOutput {
	return i.ToAgentPromptOutputWithContext(context.Background())
}

func (i *AgentPrompt) ToAgentPromptOutputWithContext(ctx context.Context) AgentPromptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPromptOutput)
}

// AgentPromptArrayInput is an input type that accepts AgentPromptArray and AgentPromptArrayOutput values.
// You can construct a concrete instance of `AgentPromptArrayInput` via:
//
//	AgentPromptArray{ AgentPromptArgs{...} }
type AgentPromptArrayInput interface {
	pulumi.Input

	ToAgentPromptArrayOutput() AgentPromptArrayOutput
	ToAgentPromptArrayOutputWithContext(context.Context) AgentPromptArrayOutput
}

type AgentPromptArray []AgentPromptInput

func (AgentPromptArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AgentPrompt)(nil)).Elem()
}

func (i AgentPromptArray) ToAgentPromptArrayOutput() AgentPromptArrayOutput {
	return i.ToAgentPromptArrayOutputWithContext(context.Background())
}

func (i AgentPromptArray) ToAgentPromptArrayOutputWithContext(ctx context.Context) AgentPromptArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPromptArrayOutput)
}

// AgentPromptMapInput is an input type that accepts AgentPromptMap and AgentPromptMapOutput values.
// You can construct a concrete instance of `AgentPromptMapInput` via:
//
//	AgentPromptMap{ "key": AgentPromptArgs{...} }
type AgentPromptMapInput interface {
	pulumi.Input

	ToAgentPromptMapOutput() AgentPromptMapOutput
	ToAgentPromptMapOutputWithContext(context.Context) AgentPromptMapOutput
}

type AgentPromptMap map[string]AgentPromptInput

func (AgentPromptMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AgentPrompt)(nil)).Elem()
}

func (i AgentPromptMap) ToAgentPromptMapOutput() AgentPromptMapOutput {
	return i.ToAgentPromptMapOutputWithContext(context.Background())
}

func (i AgentPromptMap) ToAgentPromptMapOutputWithContext(ctx context.Context) AgentPromptMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPromptMapOutput)
}

type AgentPromptOutput struct{ *pulumi.OutputState }

func (AgentPromptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPrompt)(nil)).Elem()
}

func (o AgentPromptOutput) ToAgentPromptOutput() AgentPromptOutput {
	return o
}

func (o AgentPromptOutput) ToAgentPromptOutputWithContext(ctx context.Context) AgentPromptOutput {
	return o
}

// Amazon Resource Name (ARN) of the prompt.
func (o AgentPromptOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentPrompt) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Time at which the prompt was created.
func (o AgentPromptOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentPrompt) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Amazon Resource Name (ARN) of the KMS key that you encrypted the prompt with.
func (o AgentPromptOutput) CustomerEncryptionKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentPrompt) pulumi.StringPtrOutput { return v.CustomerEncryptionKeyArn }).(pulumi.StringPtrOutput)
}

// Name of the default variant for your prompt.
func (o AgentPromptOutput) DefaultVariant() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentPrompt) pulumi.StringPtrOutput { return v.DefaultVariant }).(pulumi.StringPtrOutput)
}

// Description of the prompt.
func (o AgentPromptOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentPrompt) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Name of the prompt.
//
// The following arguments are optional:
func (o AgentPromptOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentPrompt) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o AgentPromptOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentPrompt) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
//
// Deprecated: Please use `tags` instead.
func (o AgentPromptOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentPrompt) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

// Time at which the prompt was last updated.
func (o AgentPromptOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentPrompt) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// A list of objects, each containing details about a variant of the prompt. See Variant for more information.
func (o AgentPromptOutput) Variants() AgentPromptVariantArrayOutput {
	return o.ApplyT(func(v *AgentPrompt) AgentPromptVariantArrayOutput { return v.Variants }).(AgentPromptVariantArrayOutput)
}

// Version of the prompt. When you create a prompt, the version created is the `DRAFT` version.
func (o AgentPromptOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentPrompt) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

type AgentPromptArrayOutput struct{ *pulumi.OutputState }

func (AgentPromptArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AgentPrompt)(nil)).Elem()
}

func (o AgentPromptArrayOutput) ToAgentPromptArrayOutput() AgentPromptArrayOutput {
	return o
}

func (o AgentPromptArrayOutput) ToAgentPromptArrayOutputWithContext(ctx context.Context) AgentPromptArrayOutput {
	return o
}

func (o AgentPromptArrayOutput) Index(i pulumi.IntInput) AgentPromptOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AgentPrompt {
		return vs[0].([]*AgentPrompt)[vs[1].(int)]
	}).(AgentPromptOutput)
}

type AgentPromptMapOutput struct{ *pulumi.OutputState }

func (AgentPromptMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AgentPrompt)(nil)).Elem()
}

func (o AgentPromptMapOutput) ToAgentPromptMapOutput() AgentPromptMapOutput {
	return o
}

func (o AgentPromptMapOutput) ToAgentPromptMapOutputWithContext(ctx context.Context) AgentPromptMapOutput {
	return o
}

func (o AgentPromptMapOutput) MapIndex(k pulumi.StringInput) AgentPromptOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AgentPrompt {
		return vs[0].(map[string]*AgentPrompt)[vs[1].(string)]
	}).(AgentPromptOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AgentPromptInput)(nil)).Elem(), &AgentPrompt{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentPromptArrayInput)(nil)).Elem(), AgentPromptArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentPromptMapInput)(nil)).Elem(), AgentPromptMap{})
	pulumi.RegisterOutputType(AgentPromptOutput{})
	pulumi.RegisterOutputType(AgentPromptArrayOutput{})
	pulumi.RegisterOutputType(AgentPromptMapOutput{})
}
