// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bedrock

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an AWS Bedrock AgentCore Gateway Target. Gateway targets define the endpoints and configurations that a gateway can invoke, such as Lambda functions or APIs, allowing agents to interact with external services through the Model Context Protocol (MCP).
//
// ## Example Usage
//
// ### Lambda Target with Gateway IAM Role
//
// ### Target with API Key Authentication
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/bedrock"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bedrock.NewAgentcoreGatewayTarget(ctx, "api_key_example", &bedrock.AgentcoreGatewayTargetArgs{
//				Name:              pulumi.String("api-target"),
//				GatewayIdentifier: pulumi.Any(exampleAwsBedrockagentcoreGateway.GatewayId),
//				Description:       pulumi.String("External API target with API key authentication"),
//				CredentialProviderConfiguration: &bedrock.AgentcoreGatewayTargetCredentialProviderConfigurationArgs{
//					ApiKey: &bedrock.AgentcoreGatewayTargetCredentialProviderConfigurationApiKeyArgs{
//						ProviderArn:             pulumi.String("arn:aws:iam::123456789012:oidc-provider/example.com"),
//						CredentialLocation:      pulumi.String("HEADER"),
//						CredentialParameterName: pulumi.String("X-API-Key"),
//						CredentialPrefix:        pulumi.String("Bearer"),
//					},
//				},
//				TargetConfiguration: &bedrock.AgentcoreGatewayTargetTargetConfigurationArgs{
//					Mcp: &bedrock.AgentcoreGatewayTargetTargetConfigurationMcpArgs{
//						Lambda: &bedrock.AgentcoreGatewayTargetTargetConfigurationMcpLambdaArgs{
//							LambdaArn: pulumi.Any(example.Arn),
//							ToolSchema: &bedrock.AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaArgs{
//								InlinePayloads: bedrock.AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadArray{
//									&bedrock.AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadArgs{
//										Name:        pulumi.String("api_tool"),
//										Description: pulumi.String("External API integration tool"),
//										InputSchema: &bedrock.AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaArgs{
//											Type:        pulumi.String("string"),
//											Description: pulumi.String("Simple string input for API calls"),
//										},
//									},
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Target with OAuth Authentication
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/bedrock"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bedrock.NewAgentcoreGatewayTarget(ctx, "oauth_example", &bedrock.AgentcoreGatewayTargetArgs{
//				Name:              pulumi.String("oauth-target"),
//				GatewayIdentifier: pulumi.Any(exampleAwsBedrockagentcoreGateway.GatewayId),
//				CredentialProviderConfiguration: &bedrock.AgentcoreGatewayTargetCredentialProviderConfigurationArgs{
//					Oauth: &bedrock.AgentcoreGatewayTargetCredentialProviderConfigurationOauthArgs{
//						ProviderArn: pulumi.String("arn:aws:iam::123456789012:oidc-provider/oauth.example.com"),
//						Scopes: pulumi.StringArray{
//							pulumi.String("read"),
//							pulumi.String("write"),
//						},
//						CustomParameters: pulumi.StringMap{
//							"client_type": pulumi.String("confidential"),
//							"grant_type":  pulumi.String("authorization_code"),
//						},
//					},
//				},
//				TargetConfiguration: &bedrock.AgentcoreGatewayTargetTargetConfigurationArgs{
//					Mcp: &bedrock.AgentcoreGatewayTargetTargetConfigurationMcpArgs{
//						Lambda: &bedrock.AgentcoreGatewayTargetTargetConfigurationMcpLambdaArgs{
//							LambdaArn: pulumi.Any(example.Arn),
//							ToolSchema: &bedrock.AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaArgs{
//								InlinePayloads: bedrock.AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadArray{
//									&bedrock.AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadArgs{
//										Name:        pulumi.String("oauth_tool"),
//										Description: pulumi.String("OAuth-authenticated service"),
//										InputSchema: &bedrock.AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaArgs{
//											Type: pulumi.String("array"),
//											Items: &bedrock.AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaItemsArgs{
//												Type: pulumi.String("object"),
//												Properties: bedrock.AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaItemsPropertyArray{
//													&bedrock.AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaItemsPropertyArgs{
//														Name:     pulumi.String("id"),
//														Type:     pulumi.String("string"),
//														Required: pulumi.Bool(true),
//													},
//													&bedrock.AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaItemsPropertyArgs{
//														Name: pulumi.String("value"),
//														Type: pulumi.String("number"),
//													},
//												},
//											},
//										},
//									},
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Complex Schema with JSON Serialization
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/bedrock"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"type": "string",
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			tmpJSON1, err := json.Marshal(map[string]interface{}{
//				"properties": map[string]interface{}{
//					"created_at": map[string]interface{}{
//						"type": "string",
//					},
//					"version": map[string]interface{}{
//						"type": "number",
//					},
//				},
//				"required": []string{
//					"created_at",
//				},
//			})
//			if err != nil {
//				return err
//			}
//			json1 := string(tmpJSON1)
//			_, err = bedrock.NewAgentcoreGatewayTarget(ctx, "complex_schema", &bedrock.AgentcoreGatewayTargetArgs{
//				Name:              pulumi.String("complex-target"),
//				GatewayIdentifier: pulumi.Any(exampleAwsBedrockagentcoreGateway.GatewayId),
//				CredentialProviderConfiguration: &bedrock.AgentcoreGatewayTargetCredentialProviderConfigurationArgs{
//					GatewayIamRole: &bedrock.AgentcoreGatewayTargetCredentialProviderConfigurationGatewayIamRoleArgs{},
//				},
//				TargetConfiguration: &bedrock.AgentcoreGatewayTargetTargetConfigurationArgs{
//					Mcp: &bedrock.AgentcoreGatewayTargetTargetConfigurationMcpArgs{
//						Lambda: &bedrock.AgentcoreGatewayTargetTargetConfigurationMcpLambdaArgs{
//							LambdaArn: pulumi.Any(example.Arn),
//							ToolSchema: &bedrock.AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaArgs{
//								InlinePayloads: bedrock.AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadArray{
//									&bedrock.AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadArgs{
//										Name:        pulumi.String("complex_tool"),
//										Description: pulumi.String("Tool with complex nested schema"),
//										InputSchema: &bedrock.AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaArgs{
//											Type: pulumi.String("object"),
//											Properties: bedrock.AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaPropertyArray{
//												&bedrock.AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaPropertyArgs{
//													Name: pulumi.String("profile"),
//													Type: pulumi.String("object"),
//													Properties: bedrock.AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaPropertyPropertyArray{
//														&bedrock.AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaPropertyPropertyArgs{
//															Name:      pulumi.String("nested_tags"),
//															Type:      pulumi.String("array"),
//															ItemsJson: pulumi.String(json0),
//														},
//														&bedrock.AgentcoreGatewayTargetTargetConfigurationMcpLambdaToolSchemaInlinePayloadInputSchemaPropertyPropertyArgs{
//															Name:           pulumi.String("metadata"),
//															Type:           pulumi.String("object"),
//															PropertiesJson: pulumi.String(json1),
//														},
//													},
//												},
//											},
//										},
//									},
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import Bedrock AgentCore Gateway Target using the gateway identifier and target ID separated by a comma. For example:
//
// ```sh
// $ pulumi import aws:bedrock/agentcoreGatewayTarget:AgentcoreGatewayTarget example GATEWAY1234567890,TARGET0987654321
// ```
type AgentcoreGatewayTarget struct {
	pulumi.CustomResourceState

	// Configuration for authenticating requests to the target. See `credentialProviderConfiguration` below.
	CredentialProviderConfiguration AgentcoreGatewayTargetCredentialProviderConfigurationPtrOutput `pulumi:"credentialProviderConfiguration"`
	// Description of the gateway target.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Identifier of the gateway that this target belongs to.
	GatewayIdentifier pulumi.StringOutput `pulumi:"gatewayIdentifier"`
	// Name of the gateway target.
	Name pulumi.StringOutput `pulumi:"name"`
	// AWS region where the resource will be created. If not provided, the region from the provider configuration will be used.
	Region pulumi.StringOutput `pulumi:"region"`
	// Configuration for the target endpoint. See `targetConfiguration` below.
	//
	// The following arguments are optional:
	TargetConfiguration AgentcoreGatewayTargetTargetConfigurationPtrOutput `pulumi:"targetConfiguration"`
	// Unique identifier of the gateway target.
	TargetId pulumi.StringOutput                     `pulumi:"targetId"`
	Timeouts AgentcoreGatewayTargetTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewAgentcoreGatewayTarget registers a new resource with the given unique name, arguments, and options.
func NewAgentcoreGatewayTarget(ctx *pulumi.Context,
	name string, args *AgentcoreGatewayTargetArgs, opts ...pulumi.ResourceOption) (*AgentcoreGatewayTarget, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GatewayIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'GatewayIdentifier'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AgentcoreGatewayTarget
	err := ctx.RegisterResource("aws:bedrock/agentcoreGatewayTarget:AgentcoreGatewayTarget", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAgentcoreGatewayTarget gets an existing AgentcoreGatewayTarget resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAgentcoreGatewayTarget(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AgentcoreGatewayTargetState, opts ...pulumi.ResourceOption) (*AgentcoreGatewayTarget, error) {
	var resource AgentcoreGatewayTarget
	err := ctx.ReadResource("aws:bedrock/agentcoreGatewayTarget:AgentcoreGatewayTarget", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AgentcoreGatewayTarget resources.
type agentcoreGatewayTargetState struct {
	// Configuration for authenticating requests to the target. See `credentialProviderConfiguration` below.
	CredentialProviderConfiguration *AgentcoreGatewayTargetCredentialProviderConfiguration `pulumi:"credentialProviderConfiguration"`
	// Description of the gateway target.
	Description *string `pulumi:"description"`
	// Identifier of the gateway that this target belongs to.
	GatewayIdentifier *string `pulumi:"gatewayIdentifier"`
	// Name of the gateway target.
	Name *string `pulumi:"name"`
	// AWS region where the resource will be created. If not provided, the region from the provider configuration will be used.
	Region *string `pulumi:"region"`
	// Configuration for the target endpoint. See `targetConfiguration` below.
	//
	// The following arguments are optional:
	TargetConfiguration *AgentcoreGatewayTargetTargetConfiguration `pulumi:"targetConfiguration"`
	// Unique identifier of the gateway target.
	TargetId *string                         `pulumi:"targetId"`
	Timeouts *AgentcoreGatewayTargetTimeouts `pulumi:"timeouts"`
}

type AgentcoreGatewayTargetState struct {
	// Configuration for authenticating requests to the target. See `credentialProviderConfiguration` below.
	CredentialProviderConfiguration AgentcoreGatewayTargetCredentialProviderConfigurationPtrInput
	// Description of the gateway target.
	Description pulumi.StringPtrInput
	// Identifier of the gateway that this target belongs to.
	GatewayIdentifier pulumi.StringPtrInput
	// Name of the gateway target.
	Name pulumi.StringPtrInput
	// AWS region where the resource will be created. If not provided, the region from the provider configuration will be used.
	Region pulumi.StringPtrInput
	// Configuration for the target endpoint. See `targetConfiguration` below.
	//
	// The following arguments are optional:
	TargetConfiguration AgentcoreGatewayTargetTargetConfigurationPtrInput
	// Unique identifier of the gateway target.
	TargetId pulumi.StringPtrInput
	Timeouts AgentcoreGatewayTargetTimeoutsPtrInput
}

func (AgentcoreGatewayTargetState) ElementType() reflect.Type {
	return reflect.TypeOf((*agentcoreGatewayTargetState)(nil)).Elem()
}

type agentcoreGatewayTargetArgs struct {
	// Configuration for authenticating requests to the target. See `credentialProviderConfiguration` below.
	CredentialProviderConfiguration *AgentcoreGatewayTargetCredentialProviderConfiguration `pulumi:"credentialProviderConfiguration"`
	// Description of the gateway target.
	Description *string `pulumi:"description"`
	// Identifier of the gateway that this target belongs to.
	GatewayIdentifier string `pulumi:"gatewayIdentifier"`
	// Name of the gateway target.
	Name *string `pulumi:"name"`
	// AWS region where the resource will be created. If not provided, the region from the provider configuration will be used.
	Region *string `pulumi:"region"`
	// Configuration for the target endpoint. See `targetConfiguration` below.
	//
	// The following arguments are optional:
	TargetConfiguration *AgentcoreGatewayTargetTargetConfiguration `pulumi:"targetConfiguration"`
	Timeouts            *AgentcoreGatewayTargetTimeouts            `pulumi:"timeouts"`
}

// The set of arguments for constructing a AgentcoreGatewayTarget resource.
type AgentcoreGatewayTargetArgs struct {
	// Configuration for authenticating requests to the target. See `credentialProviderConfiguration` below.
	CredentialProviderConfiguration AgentcoreGatewayTargetCredentialProviderConfigurationPtrInput
	// Description of the gateway target.
	Description pulumi.StringPtrInput
	// Identifier of the gateway that this target belongs to.
	GatewayIdentifier pulumi.StringInput
	// Name of the gateway target.
	Name pulumi.StringPtrInput
	// AWS region where the resource will be created. If not provided, the region from the provider configuration will be used.
	Region pulumi.StringPtrInput
	// Configuration for the target endpoint. See `targetConfiguration` below.
	//
	// The following arguments are optional:
	TargetConfiguration AgentcoreGatewayTargetTargetConfigurationPtrInput
	Timeouts            AgentcoreGatewayTargetTimeoutsPtrInput
}

func (AgentcoreGatewayTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*agentcoreGatewayTargetArgs)(nil)).Elem()
}

type AgentcoreGatewayTargetInput interface {
	pulumi.Input

	ToAgentcoreGatewayTargetOutput() AgentcoreGatewayTargetOutput
	ToAgentcoreGatewayTargetOutputWithContext(ctx context.Context) AgentcoreGatewayTargetOutput
}

func (*AgentcoreGatewayTarget) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentcoreGatewayTarget)(nil)).Elem()
}

func (i *AgentcoreGatewayTarget) ToAgentcoreGatewayTargetOutput() AgentcoreGatewayTargetOutput {
	return i.ToAgentcoreGatewayTargetOutputWithContext(context.Background())
}

func (i *AgentcoreGatewayTarget) ToAgentcoreGatewayTargetOutputWithContext(ctx context.Context) AgentcoreGatewayTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentcoreGatewayTargetOutput)
}

// AgentcoreGatewayTargetArrayInput is an input type that accepts AgentcoreGatewayTargetArray and AgentcoreGatewayTargetArrayOutput values.
// You can construct a concrete instance of `AgentcoreGatewayTargetArrayInput` via:
//
//	AgentcoreGatewayTargetArray{ AgentcoreGatewayTargetArgs{...} }
type AgentcoreGatewayTargetArrayInput interface {
	pulumi.Input

	ToAgentcoreGatewayTargetArrayOutput() AgentcoreGatewayTargetArrayOutput
	ToAgentcoreGatewayTargetArrayOutputWithContext(context.Context) AgentcoreGatewayTargetArrayOutput
}

type AgentcoreGatewayTargetArray []AgentcoreGatewayTargetInput

func (AgentcoreGatewayTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AgentcoreGatewayTarget)(nil)).Elem()
}

func (i AgentcoreGatewayTargetArray) ToAgentcoreGatewayTargetArrayOutput() AgentcoreGatewayTargetArrayOutput {
	return i.ToAgentcoreGatewayTargetArrayOutputWithContext(context.Background())
}

func (i AgentcoreGatewayTargetArray) ToAgentcoreGatewayTargetArrayOutputWithContext(ctx context.Context) AgentcoreGatewayTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentcoreGatewayTargetArrayOutput)
}

// AgentcoreGatewayTargetMapInput is an input type that accepts AgentcoreGatewayTargetMap and AgentcoreGatewayTargetMapOutput values.
// You can construct a concrete instance of `AgentcoreGatewayTargetMapInput` via:
//
//	AgentcoreGatewayTargetMap{ "key": AgentcoreGatewayTargetArgs{...} }
type AgentcoreGatewayTargetMapInput interface {
	pulumi.Input

	ToAgentcoreGatewayTargetMapOutput() AgentcoreGatewayTargetMapOutput
	ToAgentcoreGatewayTargetMapOutputWithContext(context.Context) AgentcoreGatewayTargetMapOutput
}

type AgentcoreGatewayTargetMap map[string]AgentcoreGatewayTargetInput

func (AgentcoreGatewayTargetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AgentcoreGatewayTarget)(nil)).Elem()
}

func (i AgentcoreGatewayTargetMap) ToAgentcoreGatewayTargetMapOutput() AgentcoreGatewayTargetMapOutput {
	return i.ToAgentcoreGatewayTargetMapOutputWithContext(context.Background())
}

func (i AgentcoreGatewayTargetMap) ToAgentcoreGatewayTargetMapOutputWithContext(ctx context.Context) AgentcoreGatewayTargetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentcoreGatewayTargetMapOutput)
}

type AgentcoreGatewayTargetOutput struct{ *pulumi.OutputState }

func (AgentcoreGatewayTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentcoreGatewayTarget)(nil)).Elem()
}

func (o AgentcoreGatewayTargetOutput) ToAgentcoreGatewayTargetOutput() AgentcoreGatewayTargetOutput {
	return o
}

func (o AgentcoreGatewayTargetOutput) ToAgentcoreGatewayTargetOutputWithContext(ctx context.Context) AgentcoreGatewayTargetOutput {
	return o
}

// Configuration for authenticating requests to the target. See `credentialProviderConfiguration` below.
func (o AgentcoreGatewayTargetOutput) CredentialProviderConfiguration() AgentcoreGatewayTargetCredentialProviderConfigurationPtrOutput {
	return o.ApplyT(func(v *AgentcoreGatewayTarget) AgentcoreGatewayTargetCredentialProviderConfigurationPtrOutput {
		return v.CredentialProviderConfiguration
	}).(AgentcoreGatewayTargetCredentialProviderConfigurationPtrOutput)
}

// Description of the gateway target.
func (o AgentcoreGatewayTargetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentcoreGatewayTarget) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Identifier of the gateway that this target belongs to.
func (o AgentcoreGatewayTargetOutput) GatewayIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentcoreGatewayTarget) pulumi.StringOutput { return v.GatewayIdentifier }).(pulumi.StringOutput)
}

// Name of the gateway target.
func (o AgentcoreGatewayTargetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentcoreGatewayTarget) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// AWS region where the resource will be created. If not provided, the region from the provider configuration will be used.
func (o AgentcoreGatewayTargetOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentcoreGatewayTarget) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// Configuration for the target endpoint. See `targetConfiguration` below.
//
// The following arguments are optional:
func (o AgentcoreGatewayTargetOutput) TargetConfiguration() AgentcoreGatewayTargetTargetConfigurationPtrOutput {
	return o.ApplyT(func(v *AgentcoreGatewayTarget) AgentcoreGatewayTargetTargetConfigurationPtrOutput {
		return v.TargetConfiguration
	}).(AgentcoreGatewayTargetTargetConfigurationPtrOutput)
}

// Unique identifier of the gateway target.
func (o AgentcoreGatewayTargetOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentcoreGatewayTarget) pulumi.StringOutput { return v.TargetId }).(pulumi.StringOutput)
}

func (o AgentcoreGatewayTargetOutput) Timeouts() AgentcoreGatewayTargetTimeoutsPtrOutput {
	return o.ApplyT(func(v *AgentcoreGatewayTarget) AgentcoreGatewayTargetTimeoutsPtrOutput { return v.Timeouts }).(AgentcoreGatewayTargetTimeoutsPtrOutput)
}

type AgentcoreGatewayTargetArrayOutput struct{ *pulumi.OutputState }

func (AgentcoreGatewayTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AgentcoreGatewayTarget)(nil)).Elem()
}

func (o AgentcoreGatewayTargetArrayOutput) ToAgentcoreGatewayTargetArrayOutput() AgentcoreGatewayTargetArrayOutput {
	return o
}

func (o AgentcoreGatewayTargetArrayOutput) ToAgentcoreGatewayTargetArrayOutputWithContext(ctx context.Context) AgentcoreGatewayTargetArrayOutput {
	return o
}

func (o AgentcoreGatewayTargetArrayOutput) Index(i pulumi.IntInput) AgentcoreGatewayTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AgentcoreGatewayTarget {
		return vs[0].([]*AgentcoreGatewayTarget)[vs[1].(int)]
	}).(AgentcoreGatewayTargetOutput)
}

type AgentcoreGatewayTargetMapOutput struct{ *pulumi.OutputState }

func (AgentcoreGatewayTargetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AgentcoreGatewayTarget)(nil)).Elem()
}

func (o AgentcoreGatewayTargetMapOutput) ToAgentcoreGatewayTargetMapOutput() AgentcoreGatewayTargetMapOutput {
	return o
}

func (o AgentcoreGatewayTargetMapOutput) ToAgentcoreGatewayTargetMapOutputWithContext(ctx context.Context) AgentcoreGatewayTargetMapOutput {
	return o
}

func (o AgentcoreGatewayTargetMapOutput) MapIndex(k pulumi.StringInput) AgentcoreGatewayTargetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AgentcoreGatewayTarget {
		return vs[0].(map[string]*AgentcoreGatewayTarget)[vs[1].(string)]
	}).(AgentcoreGatewayTargetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AgentcoreGatewayTargetInput)(nil)).Elem(), &AgentcoreGatewayTarget{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentcoreGatewayTargetArrayInput)(nil)).Elem(), AgentcoreGatewayTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentcoreGatewayTargetMapInput)(nil)).Elem(), AgentcoreGatewayTargetMap{})
	pulumi.RegisterOutputType(AgentcoreGatewayTargetOutput{})
	pulumi.RegisterOutputType(AgentcoreGatewayTargetArrayOutput{})
	pulumi.RegisterOutputType(AgentcoreGatewayTargetMapOutput{})
}
