// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bedrock

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an AWS Bedrock AgentCore Gateway. With Gateway, developers can convert APIs, Lambda functions, and existing services into Model Context Protocol (MCP)-compatible tools.
//
// ## Example Usage
//
// ### Gateway with JWT Authorization
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/bedrock"
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/iam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			assumeRole, err := iam.GetPolicyDocument(ctx, &iam.GetPolicyDocumentArgs{
//				Statements: []iam.GetPolicyDocumentStatement{
//					{
//						Effect: pulumi.StringRef("Allow"),
//						Actions: []string{
//							"sts:AssumeRole",
//						},
//						Principals: []iam.GetPolicyDocumentStatementPrincipal{
//							{
//								Type: "Service",
//								Identifiers: []string{
//									"bedrock-agentcore.amazonaws.com",
//								},
//							},
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			example, err := iam.NewRole(ctx, "example", &iam.RoleArgs{
//				Name:             pulumi.String("bedrock-agentcore-gateway-role"),
//				AssumeRolePolicy: pulumi.String(assumeRole.Json),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = bedrock.NewAgentcoreGateway(ctx, "example", &bedrock.AgentcoreGatewayArgs{
//				Name:           pulumi.String("example-gateway"),
//				RoleArn:        example.Arn,
//				AuthorizerType: pulumi.String("CUSTOM_JWT"),
//				AuthorizerConfiguration: &bedrock.AgentcoreGatewayAuthorizerConfigurationArgs{
//					CustomJwtAuthorizer: &bedrock.AgentcoreGatewayAuthorizerConfigurationCustomJwtAuthorizerArgs{
//						DiscoveryUrl: pulumi.String("https://accounts.google.com/.well-known/openid-configuration"),
//						AllowedAudiences: pulumi.StringArray{
//							pulumi.String("test1"),
//							pulumi.String("test2"),
//						},
//					},
//				},
//				ProtocolType: pulumi.String("MCP"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Gateway with advanced JWT Authorization and MCP Configuration
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/bedrock"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := bedrock.NewAgentcoreGateway(ctx, "example", &bedrock.AgentcoreGatewayArgs{
//				Name:           pulumi.String("mcp-gateway"),
//				Description:    pulumi.String("Gateway for MCP communication"),
//				RoleArn:        pulumi.Any(exampleAwsIamRole.Arn),
//				AuthorizerType: pulumi.String("CUSTOM_JWT"),
//				AuthorizerConfiguration: &bedrock.AgentcoreGatewayAuthorizerConfigurationArgs{
//					CustomJwtAuthorizer: &bedrock.AgentcoreGatewayAuthorizerConfigurationCustomJwtAuthorizerArgs{
//						DiscoveryUrl: pulumi.String("https://auth.example.com/.well-known/openid-configuration"),
//						AllowedAudiences: pulumi.StringArray{
//							pulumi.String("app-client"),
//							pulumi.String("web-client"),
//						},
//						AllowedClients: pulumi.StringArray{
//							pulumi.String("client-123"),
//							pulumi.String("client-456"),
//						},
//					},
//				},
//				ProtocolType: pulumi.String("MCP"),
//				ProtocolConfiguration: &bedrock.AgentcoreGatewayProtocolConfigurationArgs{
//					Mcp: &bedrock.AgentcoreGatewayProtocolConfigurationMcpArgs{
//						Instructions: pulumi.String("Gateway for handling MCP requests"),
//						SearchType:   pulumi.String("HYBRID"),
//						SupportedVersions: pulumi.StringArray{
//							pulumi.String("2025-03-26"),
//							pulumi.String("2025-06-18"),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import Bedrock AgentCore Gateway using the gateway ID. For example:
//
// ```sh
// $ pulumi import aws:bedrock/agentcoreGateway:AgentcoreGateway example GATEWAY1234567890
// ```
type AgentcoreGateway struct {
	pulumi.CustomResourceState

	// Configuration for request authorization. See `authorizerConfiguration` below.
	AuthorizerConfiguration AgentcoreGatewayAuthorizerConfigurationPtrOutput `pulumi:"authorizerConfiguration"`
	// Type of authorizer to use. Valid values: `CUSTOM_JWT`, `AWS_IAM`.
	AuthorizerType pulumi.StringOutput `pulumi:"authorizerType"`
	// Description of the gateway.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Exception level for the gateway. Valid values: `INFO`, `WARN`, `ERROR`.
	ExceptionLevel pulumi.StringPtrOutput `pulumi:"exceptionLevel"`
	// ARN of the Gateway.
	GatewayArn pulumi.StringOutput `pulumi:"gatewayArn"`
	// Unique identifier of the Gateway.
	GatewayId pulumi.StringOutput `pulumi:"gatewayId"`
	// URL endpoint for the gateway.
	GatewayUrl pulumi.StringOutput `pulumi:"gatewayUrl"`
	// ARN of the KMS key used to encrypt the gateway data.
	KmsKeyArn pulumi.StringPtrOutput `pulumi:"kmsKeyArn"`
	// Name of the gateway.
	Name pulumi.StringOutput `pulumi:"name"`
	// Protocol-specific configuration for the gateway. See `protocolConfiguration` below.
	ProtocolConfiguration AgentcoreGatewayProtocolConfigurationPtrOutput `pulumi:"protocolConfiguration"`
	// Protocol type for the gateway. Valid values: `MCP`.
	ProtocolType pulumi.StringOutput `pulumi:"protocolType"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringOutput `pulumi:"region"`
	// ARN of the IAM role that the gateway assumes to access AWS services.
	//
	// The following arguments are optional:
	RoleArn pulumi.StringOutput `pulumi:"roleArn"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll  pulumi.StringMapOutput            `pulumi:"tagsAll"`
	Timeouts AgentcoreGatewayTimeoutsPtrOutput `pulumi:"timeouts"`
	// Workload identity details for the gateway. See `workloadIdentityDetails` below.
	WorkloadIdentityDetails AgentcoreGatewayWorkloadIdentityDetailArrayOutput `pulumi:"workloadIdentityDetails"`
}

// NewAgentcoreGateway registers a new resource with the given unique name, arguments, and options.
func NewAgentcoreGateway(ctx *pulumi.Context,
	name string, args *AgentcoreGatewayArgs, opts ...pulumi.ResourceOption) (*AgentcoreGateway, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AuthorizerType == nil {
		return nil, errors.New("invalid value for required argument 'AuthorizerType'")
	}
	if args.ProtocolType == nil {
		return nil, errors.New("invalid value for required argument 'ProtocolType'")
	}
	if args.RoleArn == nil {
		return nil, errors.New("invalid value for required argument 'RoleArn'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AgentcoreGateway
	err := ctx.RegisterResource("aws:bedrock/agentcoreGateway:AgentcoreGateway", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAgentcoreGateway gets an existing AgentcoreGateway resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAgentcoreGateway(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AgentcoreGatewayState, opts ...pulumi.ResourceOption) (*AgentcoreGateway, error) {
	var resource AgentcoreGateway
	err := ctx.ReadResource("aws:bedrock/agentcoreGateway:AgentcoreGateway", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AgentcoreGateway resources.
type agentcoreGatewayState struct {
	// Configuration for request authorization. See `authorizerConfiguration` below.
	AuthorizerConfiguration *AgentcoreGatewayAuthorizerConfiguration `pulumi:"authorizerConfiguration"`
	// Type of authorizer to use. Valid values: `CUSTOM_JWT`, `AWS_IAM`.
	AuthorizerType *string `pulumi:"authorizerType"`
	// Description of the gateway.
	Description *string `pulumi:"description"`
	// Exception level for the gateway. Valid values: `INFO`, `WARN`, `ERROR`.
	ExceptionLevel *string `pulumi:"exceptionLevel"`
	// ARN of the Gateway.
	GatewayArn *string `pulumi:"gatewayArn"`
	// Unique identifier of the Gateway.
	GatewayId *string `pulumi:"gatewayId"`
	// URL endpoint for the gateway.
	GatewayUrl *string `pulumi:"gatewayUrl"`
	// ARN of the KMS key used to encrypt the gateway data.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// Name of the gateway.
	Name *string `pulumi:"name"`
	// Protocol-specific configuration for the gateway. See `protocolConfiguration` below.
	ProtocolConfiguration *AgentcoreGatewayProtocolConfiguration `pulumi:"protocolConfiguration"`
	// Protocol type for the gateway. Valid values: `MCP`.
	ProtocolType *string `pulumi:"protocolType"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// ARN of the IAM role that the gateway assumes to access AWS services.
	//
	// The following arguments are optional:
	RoleArn *string `pulumi:"roleArn"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll  map[string]string         `pulumi:"tagsAll"`
	Timeouts *AgentcoreGatewayTimeouts `pulumi:"timeouts"`
	// Workload identity details for the gateway. See `workloadIdentityDetails` below.
	WorkloadIdentityDetails []AgentcoreGatewayWorkloadIdentityDetail `pulumi:"workloadIdentityDetails"`
}

type AgentcoreGatewayState struct {
	// Configuration for request authorization. See `authorizerConfiguration` below.
	AuthorizerConfiguration AgentcoreGatewayAuthorizerConfigurationPtrInput
	// Type of authorizer to use. Valid values: `CUSTOM_JWT`, `AWS_IAM`.
	AuthorizerType pulumi.StringPtrInput
	// Description of the gateway.
	Description pulumi.StringPtrInput
	// Exception level for the gateway. Valid values: `INFO`, `WARN`, `ERROR`.
	ExceptionLevel pulumi.StringPtrInput
	// ARN of the Gateway.
	GatewayArn pulumi.StringPtrInput
	// Unique identifier of the Gateway.
	GatewayId pulumi.StringPtrInput
	// URL endpoint for the gateway.
	GatewayUrl pulumi.StringPtrInput
	// ARN of the KMS key used to encrypt the gateway data.
	KmsKeyArn pulumi.StringPtrInput
	// Name of the gateway.
	Name pulumi.StringPtrInput
	// Protocol-specific configuration for the gateway. See `protocolConfiguration` below.
	ProtocolConfiguration AgentcoreGatewayProtocolConfigurationPtrInput
	// Protocol type for the gateway. Valid values: `MCP`.
	ProtocolType pulumi.StringPtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// ARN of the IAM role that the gateway assumes to access AWS services.
	//
	// The following arguments are optional:
	RoleArn pulumi.StringPtrInput
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll  pulumi.StringMapInput
	Timeouts AgentcoreGatewayTimeoutsPtrInput
	// Workload identity details for the gateway. See `workloadIdentityDetails` below.
	WorkloadIdentityDetails AgentcoreGatewayWorkloadIdentityDetailArrayInput
}

func (AgentcoreGatewayState) ElementType() reflect.Type {
	return reflect.TypeOf((*agentcoreGatewayState)(nil)).Elem()
}

type agentcoreGatewayArgs struct {
	// Configuration for request authorization. See `authorizerConfiguration` below.
	AuthorizerConfiguration *AgentcoreGatewayAuthorizerConfiguration `pulumi:"authorizerConfiguration"`
	// Type of authorizer to use. Valid values: `CUSTOM_JWT`, `AWS_IAM`.
	AuthorizerType string `pulumi:"authorizerType"`
	// Description of the gateway.
	Description *string `pulumi:"description"`
	// Exception level for the gateway. Valid values: `INFO`, `WARN`, `ERROR`.
	ExceptionLevel *string `pulumi:"exceptionLevel"`
	// ARN of the KMS key used to encrypt the gateway data.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// Name of the gateway.
	Name *string `pulumi:"name"`
	// Protocol-specific configuration for the gateway. See `protocolConfiguration` below.
	ProtocolConfiguration *AgentcoreGatewayProtocolConfiguration `pulumi:"protocolConfiguration"`
	// Protocol type for the gateway. Valid values: `MCP`.
	ProtocolType string `pulumi:"protocolType"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// ARN of the IAM role that the gateway assumes to access AWS services.
	//
	// The following arguments are optional:
	RoleArn string `pulumi:"roleArn"`
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     map[string]string         `pulumi:"tags"`
	Timeouts *AgentcoreGatewayTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a AgentcoreGateway resource.
type AgentcoreGatewayArgs struct {
	// Configuration for request authorization. See `authorizerConfiguration` below.
	AuthorizerConfiguration AgentcoreGatewayAuthorizerConfigurationPtrInput
	// Type of authorizer to use. Valid values: `CUSTOM_JWT`, `AWS_IAM`.
	AuthorizerType pulumi.StringInput
	// Description of the gateway.
	Description pulumi.StringPtrInput
	// Exception level for the gateway. Valid values: `INFO`, `WARN`, `ERROR`.
	ExceptionLevel pulumi.StringPtrInput
	// ARN of the KMS key used to encrypt the gateway data.
	KmsKeyArn pulumi.StringPtrInput
	// Name of the gateway.
	Name pulumi.StringPtrInput
	// Protocol-specific configuration for the gateway. See `protocolConfiguration` below.
	ProtocolConfiguration AgentcoreGatewayProtocolConfigurationPtrInput
	// Protocol type for the gateway. Valid values: `MCP`.
	ProtocolType pulumi.StringInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// ARN of the IAM role that the gateway assumes to access AWS services.
	//
	// The following arguments are optional:
	RoleArn pulumi.StringInput
	// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     pulumi.StringMapInput
	Timeouts AgentcoreGatewayTimeoutsPtrInput
}

func (AgentcoreGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*agentcoreGatewayArgs)(nil)).Elem()
}

type AgentcoreGatewayInput interface {
	pulumi.Input

	ToAgentcoreGatewayOutput() AgentcoreGatewayOutput
	ToAgentcoreGatewayOutputWithContext(ctx context.Context) AgentcoreGatewayOutput
}

func (*AgentcoreGateway) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentcoreGateway)(nil)).Elem()
}

func (i *AgentcoreGateway) ToAgentcoreGatewayOutput() AgentcoreGatewayOutput {
	return i.ToAgentcoreGatewayOutputWithContext(context.Background())
}

func (i *AgentcoreGateway) ToAgentcoreGatewayOutputWithContext(ctx context.Context) AgentcoreGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentcoreGatewayOutput)
}

// AgentcoreGatewayArrayInput is an input type that accepts AgentcoreGatewayArray and AgentcoreGatewayArrayOutput values.
// You can construct a concrete instance of `AgentcoreGatewayArrayInput` via:
//
//	AgentcoreGatewayArray{ AgentcoreGatewayArgs{...} }
type AgentcoreGatewayArrayInput interface {
	pulumi.Input

	ToAgentcoreGatewayArrayOutput() AgentcoreGatewayArrayOutput
	ToAgentcoreGatewayArrayOutputWithContext(context.Context) AgentcoreGatewayArrayOutput
}

type AgentcoreGatewayArray []AgentcoreGatewayInput

func (AgentcoreGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AgentcoreGateway)(nil)).Elem()
}

func (i AgentcoreGatewayArray) ToAgentcoreGatewayArrayOutput() AgentcoreGatewayArrayOutput {
	return i.ToAgentcoreGatewayArrayOutputWithContext(context.Background())
}

func (i AgentcoreGatewayArray) ToAgentcoreGatewayArrayOutputWithContext(ctx context.Context) AgentcoreGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentcoreGatewayArrayOutput)
}

// AgentcoreGatewayMapInput is an input type that accepts AgentcoreGatewayMap and AgentcoreGatewayMapOutput values.
// You can construct a concrete instance of `AgentcoreGatewayMapInput` via:
//
//	AgentcoreGatewayMap{ "key": AgentcoreGatewayArgs{...} }
type AgentcoreGatewayMapInput interface {
	pulumi.Input

	ToAgentcoreGatewayMapOutput() AgentcoreGatewayMapOutput
	ToAgentcoreGatewayMapOutputWithContext(context.Context) AgentcoreGatewayMapOutput
}

type AgentcoreGatewayMap map[string]AgentcoreGatewayInput

func (AgentcoreGatewayMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AgentcoreGateway)(nil)).Elem()
}

func (i AgentcoreGatewayMap) ToAgentcoreGatewayMapOutput() AgentcoreGatewayMapOutput {
	return i.ToAgentcoreGatewayMapOutputWithContext(context.Background())
}

func (i AgentcoreGatewayMap) ToAgentcoreGatewayMapOutputWithContext(ctx context.Context) AgentcoreGatewayMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentcoreGatewayMapOutput)
}

type AgentcoreGatewayOutput struct{ *pulumi.OutputState }

func (AgentcoreGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentcoreGateway)(nil)).Elem()
}

func (o AgentcoreGatewayOutput) ToAgentcoreGatewayOutput() AgentcoreGatewayOutput {
	return o
}

func (o AgentcoreGatewayOutput) ToAgentcoreGatewayOutputWithContext(ctx context.Context) AgentcoreGatewayOutput {
	return o
}

// Configuration for request authorization. See `authorizerConfiguration` below.
func (o AgentcoreGatewayOutput) AuthorizerConfiguration() AgentcoreGatewayAuthorizerConfigurationPtrOutput {
	return o.ApplyT(func(v *AgentcoreGateway) AgentcoreGatewayAuthorizerConfigurationPtrOutput {
		return v.AuthorizerConfiguration
	}).(AgentcoreGatewayAuthorizerConfigurationPtrOutput)
}

// Type of authorizer to use. Valid values: `CUSTOM_JWT`, `AWS_IAM`.
func (o AgentcoreGatewayOutput) AuthorizerType() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentcoreGateway) pulumi.StringOutput { return v.AuthorizerType }).(pulumi.StringOutput)
}

// Description of the gateway.
func (o AgentcoreGatewayOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentcoreGateway) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Exception level for the gateway. Valid values: `INFO`, `WARN`, `ERROR`.
func (o AgentcoreGatewayOutput) ExceptionLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentcoreGateway) pulumi.StringPtrOutput { return v.ExceptionLevel }).(pulumi.StringPtrOutput)
}

// ARN of the Gateway.
func (o AgentcoreGatewayOutput) GatewayArn() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentcoreGateway) pulumi.StringOutput { return v.GatewayArn }).(pulumi.StringOutput)
}

// Unique identifier of the Gateway.
func (o AgentcoreGatewayOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentcoreGateway) pulumi.StringOutput { return v.GatewayId }).(pulumi.StringOutput)
}

// URL endpoint for the gateway.
func (o AgentcoreGatewayOutput) GatewayUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentcoreGateway) pulumi.StringOutput { return v.GatewayUrl }).(pulumi.StringOutput)
}

// ARN of the KMS key used to encrypt the gateway data.
func (o AgentcoreGatewayOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentcoreGateway) pulumi.StringPtrOutput { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// Name of the gateway.
func (o AgentcoreGatewayOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentcoreGateway) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Protocol-specific configuration for the gateway. See `protocolConfiguration` below.
func (o AgentcoreGatewayOutput) ProtocolConfiguration() AgentcoreGatewayProtocolConfigurationPtrOutput {
	return o.ApplyT(func(v *AgentcoreGateway) AgentcoreGatewayProtocolConfigurationPtrOutput {
		return v.ProtocolConfiguration
	}).(AgentcoreGatewayProtocolConfigurationPtrOutput)
}

// Protocol type for the gateway. Valid values: `MCP`.
func (o AgentcoreGatewayOutput) ProtocolType() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentcoreGateway) pulumi.StringOutput { return v.ProtocolType }).(pulumi.StringOutput)
}

// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
func (o AgentcoreGatewayOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentcoreGateway) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// ARN of the IAM role that the gateway assumes to access AWS services.
//
// The following arguments are optional:
func (o AgentcoreGatewayOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *AgentcoreGateway) pulumi.StringOutput { return v.RoleArn }).(pulumi.StringOutput)
}

// Key-value map of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o AgentcoreGatewayOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentcoreGateway) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o AgentcoreGatewayOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *AgentcoreGateway) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o AgentcoreGatewayOutput) Timeouts() AgentcoreGatewayTimeoutsPtrOutput {
	return o.ApplyT(func(v *AgentcoreGateway) AgentcoreGatewayTimeoutsPtrOutput { return v.Timeouts }).(AgentcoreGatewayTimeoutsPtrOutput)
}

// Workload identity details for the gateway. See `workloadIdentityDetails` below.
func (o AgentcoreGatewayOutput) WorkloadIdentityDetails() AgentcoreGatewayWorkloadIdentityDetailArrayOutput {
	return o.ApplyT(func(v *AgentcoreGateway) AgentcoreGatewayWorkloadIdentityDetailArrayOutput {
		return v.WorkloadIdentityDetails
	}).(AgentcoreGatewayWorkloadIdentityDetailArrayOutput)
}

type AgentcoreGatewayArrayOutput struct{ *pulumi.OutputState }

func (AgentcoreGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AgentcoreGateway)(nil)).Elem()
}

func (o AgentcoreGatewayArrayOutput) ToAgentcoreGatewayArrayOutput() AgentcoreGatewayArrayOutput {
	return o
}

func (o AgentcoreGatewayArrayOutput) ToAgentcoreGatewayArrayOutputWithContext(ctx context.Context) AgentcoreGatewayArrayOutput {
	return o
}

func (o AgentcoreGatewayArrayOutput) Index(i pulumi.IntInput) AgentcoreGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AgentcoreGateway {
		return vs[0].([]*AgentcoreGateway)[vs[1].(int)]
	}).(AgentcoreGatewayOutput)
}

type AgentcoreGatewayMapOutput struct{ *pulumi.OutputState }

func (AgentcoreGatewayMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AgentcoreGateway)(nil)).Elem()
}

func (o AgentcoreGatewayMapOutput) ToAgentcoreGatewayMapOutput() AgentcoreGatewayMapOutput {
	return o
}

func (o AgentcoreGatewayMapOutput) ToAgentcoreGatewayMapOutputWithContext(ctx context.Context) AgentcoreGatewayMapOutput {
	return o
}

func (o AgentcoreGatewayMapOutput) MapIndex(k pulumi.StringInput) AgentcoreGatewayOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AgentcoreGateway {
		return vs[0].(map[string]*AgentcoreGateway)[vs[1].(string)]
	}).(AgentcoreGatewayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AgentcoreGatewayInput)(nil)).Elem(), &AgentcoreGateway{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentcoreGatewayArrayInput)(nil)).Elem(), AgentcoreGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentcoreGatewayMapInput)(nil)).Elem(), AgentcoreGatewayMap{})
	pulumi.RegisterOutputType(AgentcoreGatewayOutput{})
	pulumi.RegisterOutputType(AgentcoreGatewayArrayOutput{})
	pulumi.RegisterOutputType(AgentcoreGatewayMapOutput{})
}
