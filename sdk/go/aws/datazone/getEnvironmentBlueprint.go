// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datazone

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for managing an AWS DataZone Environment Blueprint.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/datazone"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleDomain, err := datazone.NewDomain(ctx, "example", &datazone.DomainArgs{
//				Name:                pulumi.String("example_domain"),
//				DomainExecutionRole: pulumi.Any(domainExecutionRole.Arn),
//			})
//			if err != nil {
//				return err
//			}
//			_ = datazone.GetEnvironmentBlueprintOutput(ctx, datazone.GetEnvironmentBlueprintOutputArgs{
//				DomainId: exampleDomain.ID(),
//				Name:     pulumi.String("DefaultDataLake"),
//				Managed:  pulumi.Bool(true),
//			}, nil)
//			return nil
//		})
//	}
//
// ```
func GetEnvironmentBlueprint(ctx *pulumi.Context, args *GetEnvironmentBlueprintArgs, opts ...pulumi.InvokeOption) (*GetEnvironmentBlueprintResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEnvironmentBlueprintResult
	err := ctx.Invoke("aws:datazone/getEnvironmentBlueprint:getEnvironmentBlueprint", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEnvironmentBlueprint.
type GetEnvironmentBlueprintArgs struct {
	// ID of the domain.
	DomainId string `pulumi:"domainId"`
	// Whether the blueprint is managed by Amazon DataZone.
	Managed bool `pulumi:"managed"`
	// Name of the blueprint.
	Name string `pulumi:"name"`
}

// A collection of values returned by getEnvironmentBlueprint.
type GetEnvironmentBlueprintResult struct {
	// Provider of the blueprint
	BlueprintProvider string `pulumi:"blueprintProvider"`
	// Description of the blueprint
	Description string `pulumi:"description"`
	DomainId    string `pulumi:"domainId"`
	// ID of the environment blueprint
	Id      string `pulumi:"id"`
	Managed bool   `pulumi:"managed"`
	Name    string `pulumi:"name"`
}

func GetEnvironmentBlueprintOutput(ctx *pulumi.Context, args GetEnvironmentBlueprintOutputArgs, opts ...pulumi.InvokeOption) GetEnvironmentBlueprintResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetEnvironmentBlueprintResult, error) {
			args := v.(GetEnvironmentBlueprintArgs)
			r, err := GetEnvironmentBlueprint(ctx, &args, opts...)
			var s GetEnvironmentBlueprintResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetEnvironmentBlueprintResultOutput)
}

// A collection of arguments for invoking getEnvironmentBlueprint.
type GetEnvironmentBlueprintOutputArgs struct {
	// ID of the domain.
	DomainId pulumi.StringInput `pulumi:"domainId"`
	// Whether the blueprint is managed by Amazon DataZone.
	Managed pulumi.BoolInput `pulumi:"managed"`
	// Name of the blueprint.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetEnvironmentBlueprintOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentBlueprintArgs)(nil)).Elem()
}

// A collection of values returned by getEnvironmentBlueprint.
type GetEnvironmentBlueprintResultOutput struct{ *pulumi.OutputState }

func (GetEnvironmentBlueprintResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEnvironmentBlueprintResult)(nil)).Elem()
}

func (o GetEnvironmentBlueprintResultOutput) ToGetEnvironmentBlueprintResultOutput() GetEnvironmentBlueprintResultOutput {
	return o
}

func (o GetEnvironmentBlueprintResultOutput) ToGetEnvironmentBlueprintResultOutputWithContext(ctx context.Context) GetEnvironmentBlueprintResultOutput {
	return o
}

// Provider of the blueprint
func (o GetEnvironmentBlueprintResultOutput) BlueprintProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentBlueprintResult) string { return v.BlueprintProvider }).(pulumi.StringOutput)
}

// Description of the blueprint
func (o GetEnvironmentBlueprintResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentBlueprintResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetEnvironmentBlueprintResultOutput) DomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentBlueprintResult) string { return v.DomainId }).(pulumi.StringOutput)
}

// ID of the environment blueprint
func (o GetEnvironmentBlueprintResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentBlueprintResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEnvironmentBlueprintResultOutput) Managed() pulumi.BoolOutput {
	return o.ApplyT(func(v GetEnvironmentBlueprintResult) bool { return v.Managed }).(pulumi.BoolOutput)
}

func (o GetEnvironmentBlueprintResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEnvironmentBlueprintResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEnvironmentBlueprintResultOutput{})
}
