// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datazone

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS DataZone Environment Profile.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws"
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/datazone"
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ec2"
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/iam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"Version": "2012-10-17",
//				"Statement": []map[string]interface{}{
//					map[string]interface{}{
//						"Action": []string{
//							"sts:AssumeRole",
//							"sts:TagSession",
//						},
//						"Effect": "Allow",
//						"Principal": map[string]interface{}{
//							"Service": "datazone.amazonaws.com",
//						},
//					},
//					map[string]interface{}{
//						"Action": []string{
//							"sts:AssumeRole",
//							"sts:TagSession",
//						},
//						"Effect": "Allow",
//						"Principal": map[string]interface{}{
//							"Service": "cloudformation.amazonaws.com",
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			tmpJSON1, err := json.Marshal(map[string]interface{}{
//				"Version": "2012-10-17",
//				"Statement": []map[string]interface{}{
//					map[string]interface{}{
//						"Action": []string{
//							"datazone:*",
//							"ram:*",
//							"sso:*",
//							"kms:*",
//						},
//						"Effect":   "Allow",
//						"Resource": "*",
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			json1 := string(tmpJSON1)
//			domainExecutionRole, err := iam.NewRole(ctx, "domain_execution_role", &iam.RoleArgs{
//				Name:             pulumi.String("example-name"),
//				AssumeRolePolicy: pulumi.String(json0),
//				InlinePolicies: iam.RoleInlinePolicyArray{
//					&iam.RoleInlinePolicyArgs{
//						Name:   pulumi.String("example-name"),
//						Policy: pulumi.String(json1),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			testDomain, err := datazone.NewDomain(ctx, "test", &datazone.DomainArgs{
//				Name:                pulumi.String("example-name"),
//				DomainExecutionRole: domainExecutionRole.Arn,
//			})
//			if err != nil {
//				return err
//			}
//			_, err = ec2.NewSecurityGroup(ctx, "test", &ec2.SecurityGroupArgs{
//				Name: pulumi.String("example-name"),
//			})
//			if err != nil {
//				return err
//			}
//			testProject, err := datazone.NewProject(ctx, "test", &datazone.ProjectArgs{
//				DomainIdentifier: testDomain.ID(),
//				GlossaryTerms: pulumi.StringArray{
//					pulumi.String("2N8w6XJCwZf"),
//				},
//				Name:              pulumi.String("example-name"),
//				Description:       pulumi.String("desc"),
//				SkipDeletionCheck: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			test, err := aws.GetCallerIdentity(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			testGetRegion, err := aws.GetRegion(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			testGetEnvironmentBlueprint := datazone.GetEnvironmentBlueprintOutput(ctx, datazone.GetEnvironmentBlueprintOutputArgs{
//				DomainId: testDomain.ID(),
//				Name:     pulumi.String("DefaultDataLake"),
//				Managed:  pulumi.Bool(true),
//			}, nil)
//			_, err = datazone.NewEnvironmentBlueprintConfiguration(ctx, "test", &datazone.EnvironmentBlueprintConfigurationArgs{
//				DomainId: testDomain.ID(),
//				EnvironmentBlueprintId: pulumi.String(testGetEnvironmentBlueprint.ApplyT(func(testGetEnvironmentBlueprint datazone.GetEnvironmentBlueprintResult) (*string, error) {
//					return &testGetEnvironmentBlueprint.Id, nil
//				}).(pulumi.StringPtrOutput)),
//				ProvisioningRoleArn: domainExecutionRole.Arn,
//				EnabledRegions: pulumi.StringArray{
//					pulumi.String(testGetRegion.Name),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = datazone.NewEnvironmentProfile(ctx, "test", &datazone.EnvironmentProfileArgs{
//				AwsAccountId:     pulumi.String(test.AccountId),
//				AwsAccountRegion: pulumi.String(testGetRegion.Name),
//				Description:      pulumi.String("description"),
//				EnvironmentBlueprintIdentifier: pulumi.String(testGetEnvironmentBlueprint.ApplyT(func(testGetEnvironmentBlueprint datazone.GetEnvironmentBlueprintResult) (*string, error) {
//					return &testGetEnvironmentBlueprint.Id, nil
//				}).(pulumi.StringPtrOutput)),
//				Name:              pulumi.String("example-name"),
//				ProjectIdentifier: testProject.ID(),
//				DomainIdentifier:  testDomain.ID(),
//				UserParameters: datazone.EnvironmentProfileUserParameterArray{
//					&datazone.EnvironmentProfileUserParameterArgs{
//						Name:  pulumi.String("consumerGlueDbName"),
//						Value: pulumi.String("value"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import DataZone Environment Profile using a comma-delimited string combining `id` and `domain_identifier`. For example:
//
// ```sh
// $ pulumi import aws:datazone/environmentProfile:EnvironmentProfile example environment_profile-id-12345678,domain-id-12345678
// ```
type EnvironmentProfile struct {
	pulumi.CustomResourceState

	// Id of the AWS account being used.
	AwsAccountId pulumi.StringOutput `pulumi:"awsAccountId"`
	// Desired region for environment profile.
	AwsAccountRegion pulumi.StringOutput `pulumi:"awsAccountRegion"`
	// Creation time of environment profile.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Creator of environment profile.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// Description of environment profile.
	Description pulumi.StringOutput `pulumi:"description"`
	// Domain Identifier for environment profile.
	DomainIdentifier pulumi.StringOutput `pulumi:"domainIdentifier"`
	// ID of the blueprint which the environment will be created with.
	EnvironmentBlueprintIdentifier pulumi.StringOutput `pulumi:"environmentBlueprintIdentifier"`
	// Name of the environment profile.
	Name pulumi.StringOutput `pulumi:"name"`
	// Project identifier for environment profile.
	//
	// The following arguments are optional:
	ProjectIdentifier pulumi.StringOutput `pulumi:"projectIdentifier"`
	// Time of last update to environment profile.
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// Array of user parameters of the environment profile with the following attributes:
	UserParameters EnvironmentProfileUserParameterArrayOutput `pulumi:"userParameters"`
}

// NewEnvironmentProfile registers a new resource with the given unique name, arguments, and options.
func NewEnvironmentProfile(ctx *pulumi.Context,
	name string, args *EnvironmentProfileArgs, opts ...pulumi.ResourceOption) (*EnvironmentProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AwsAccountRegion == nil {
		return nil, errors.New("invalid value for required argument 'AwsAccountRegion'")
	}
	if args.DomainIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'DomainIdentifier'")
	}
	if args.EnvironmentBlueprintIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentBlueprintIdentifier'")
	}
	if args.ProjectIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'ProjectIdentifier'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EnvironmentProfile
	err := ctx.RegisterResource("aws:datazone/environmentProfile:EnvironmentProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnvironmentProfile gets an existing EnvironmentProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnvironmentProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnvironmentProfileState, opts ...pulumi.ResourceOption) (*EnvironmentProfile, error) {
	var resource EnvironmentProfile
	err := ctx.ReadResource("aws:datazone/environmentProfile:EnvironmentProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EnvironmentProfile resources.
type environmentProfileState struct {
	// Id of the AWS account being used.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// Desired region for environment profile.
	AwsAccountRegion *string `pulumi:"awsAccountRegion"`
	// Creation time of environment profile.
	CreatedAt *string `pulumi:"createdAt"`
	// Creator of environment profile.
	CreatedBy *string `pulumi:"createdBy"`
	// Description of environment profile.
	Description *string `pulumi:"description"`
	// Domain Identifier for environment profile.
	DomainIdentifier *string `pulumi:"domainIdentifier"`
	// ID of the blueprint which the environment will be created with.
	EnvironmentBlueprintIdentifier *string `pulumi:"environmentBlueprintIdentifier"`
	// Name of the environment profile.
	Name *string `pulumi:"name"`
	// Project identifier for environment profile.
	//
	// The following arguments are optional:
	ProjectIdentifier *string `pulumi:"projectIdentifier"`
	// Time of last update to environment profile.
	UpdatedAt *string `pulumi:"updatedAt"`
	// Array of user parameters of the environment profile with the following attributes:
	UserParameters []EnvironmentProfileUserParameter `pulumi:"userParameters"`
}

type EnvironmentProfileState struct {
	// Id of the AWS account being used.
	AwsAccountId pulumi.StringPtrInput
	// Desired region for environment profile.
	AwsAccountRegion pulumi.StringPtrInput
	// Creation time of environment profile.
	CreatedAt pulumi.StringPtrInput
	// Creator of environment profile.
	CreatedBy pulumi.StringPtrInput
	// Description of environment profile.
	Description pulumi.StringPtrInput
	// Domain Identifier for environment profile.
	DomainIdentifier pulumi.StringPtrInput
	// ID of the blueprint which the environment will be created with.
	EnvironmentBlueprintIdentifier pulumi.StringPtrInput
	// Name of the environment profile.
	Name pulumi.StringPtrInput
	// Project identifier for environment profile.
	//
	// The following arguments are optional:
	ProjectIdentifier pulumi.StringPtrInput
	// Time of last update to environment profile.
	UpdatedAt pulumi.StringPtrInput
	// Array of user parameters of the environment profile with the following attributes:
	UserParameters EnvironmentProfileUserParameterArrayInput
}

func (EnvironmentProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentProfileState)(nil)).Elem()
}

type environmentProfileArgs struct {
	// Id of the AWS account being used.
	AwsAccountId *string `pulumi:"awsAccountId"`
	// Desired region for environment profile.
	AwsAccountRegion string `pulumi:"awsAccountRegion"`
	// Description of environment profile.
	Description *string `pulumi:"description"`
	// Domain Identifier for environment profile.
	DomainIdentifier string `pulumi:"domainIdentifier"`
	// ID of the blueprint which the environment will be created with.
	EnvironmentBlueprintIdentifier string `pulumi:"environmentBlueprintIdentifier"`
	// Name of the environment profile.
	Name *string `pulumi:"name"`
	// Project identifier for environment profile.
	//
	// The following arguments are optional:
	ProjectIdentifier string `pulumi:"projectIdentifier"`
	// Array of user parameters of the environment profile with the following attributes:
	UserParameters []EnvironmentProfileUserParameter `pulumi:"userParameters"`
}

// The set of arguments for constructing a EnvironmentProfile resource.
type EnvironmentProfileArgs struct {
	// Id of the AWS account being used.
	AwsAccountId pulumi.StringPtrInput
	// Desired region for environment profile.
	AwsAccountRegion pulumi.StringInput
	// Description of environment profile.
	Description pulumi.StringPtrInput
	// Domain Identifier for environment profile.
	DomainIdentifier pulumi.StringInput
	// ID of the blueprint which the environment will be created with.
	EnvironmentBlueprintIdentifier pulumi.StringInput
	// Name of the environment profile.
	Name pulumi.StringPtrInput
	// Project identifier for environment profile.
	//
	// The following arguments are optional:
	ProjectIdentifier pulumi.StringInput
	// Array of user parameters of the environment profile with the following attributes:
	UserParameters EnvironmentProfileUserParameterArrayInput
}

func (EnvironmentProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentProfileArgs)(nil)).Elem()
}

type EnvironmentProfileInput interface {
	pulumi.Input

	ToEnvironmentProfileOutput() EnvironmentProfileOutput
	ToEnvironmentProfileOutputWithContext(ctx context.Context) EnvironmentProfileOutput
}

func (*EnvironmentProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentProfile)(nil)).Elem()
}

func (i *EnvironmentProfile) ToEnvironmentProfileOutput() EnvironmentProfileOutput {
	return i.ToEnvironmentProfileOutputWithContext(context.Background())
}

func (i *EnvironmentProfile) ToEnvironmentProfileOutputWithContext(ctx context.Context) EnvironmentProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentProfileOutput)
}

// EnvironmentProfileArrayInput is an input type that accepts EnvironmentProfileArray and EnvironmentProfileArrayOutput values.
// You can construct a concrete instance of `EnvironmentProfileArrayInput` via:
//
//	EnvironmentProfileArray{ EnvironmentProfileArgs{...} }
type EnvironmentProfileArrayInput interface {
	pulumi.Input

	ToEnvironmentProfileArrayOutput() EnvironmentProfileArrayOutput
	ToEnvironmentProfileArrayOutputWithContext(context.Context) EnvironmentProfileArrayOutput
}

type EnvironmentProfileArray []EnvironmentProfileInput

func (EnvironmentProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EnvironmentProfile)(nil)).Elem()
}

func (i EnvironmentProfileArray) ToEnvironmentProfileArrayOutput() EnvironmentProfileArrayOutput {
	return i.ToEnvironmentProfileArrayOutputWithContext(context.Background())
}

func (i EnvironmentProfileArray) ToEnvironmentProfileArrayOutputWithContext(ctx context.Context) EnvironmentProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentProfileArrayOutput)
}

// EnvironmentProfileMapInput is an input type that accepts EnvironmentProfileMap and EnvironmentProfileMapOutput values.
// You can construct a concrete instance of `EnvironmentProfileMapInput` via:
//
//	EnvironmentProfileMap{ "key": EnvironmentProfileArgs{...} }
type EnvironmentProfileMapInput interface {
	pulumi.Input

	ToEnvironmentProfileMapOutput() EnvironmentProfileMapOutput
	ToEnvironmentProfileMapOutputWithContext(context.Context) EnvironmentProfileMapOutput
}

type EnvironmentProfileMap map[string]EnvironmentProfileInput

func (EnvironmentProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EnvironmentProfile)(nil)).Elem()
}

func (i EnvironmentProfileMap) ToEnvironmentProfileMapOutput() EnvironmentProfileMapOutput {
	return i.ToEnvironmentProfileMapOutputWithContext(context.Background())
}

func (i EnvironmentProfileMap) ToEnvironmentProfileMapOutputWithContext(ctx context.Context) EnvironmentProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentProfileMapOutput)
}

type EnvironmentProfileOutput struct{ *pulumi.OutputState }

func (EnvironmentProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentProfile)(nil)).Elem()
}

func (o EnvironmentProfileOutput) ToEnvironmentProfileOutput() EnvironmentProfileOutput {
	return o
}

func (o EnvironmentProfileOutput) ToEnvironmentProfileOutputWithContext(ctx context.Context) EnvironmentProfileOutput {
	return o
}

// Id of the AWS account being used.
func (o EnvironmentProfileOutput) AwsAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentProfile) pulumi.StringOutput { return v.AwsAccountId }).(pulumi.StringOutput)
}

// Desired region for environment profile.
func (o EnvironmentProfileOutput) AwsAccountRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentProfile) pulumi.StringOutput { return v.AwsAccountRegion }).(pulumi.StringOutput)
}

// Creation time of environment profile.
func (o EnvironmentProfileOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentProfile) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Creator of environment profile.
func (o EnvironmentProfileOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentProfile) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// Description of environment profile.
func (o EnvironmentProfileOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentProfile) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

// Domain Identifier for environment profile.
func (o EnvironmentProfileOutput) DomainIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentProfile) pulumi.StringOutput { return v.DomainIdentifier }).(pulumi.StringOutput)
}

// ID of the blueprint which the environment will be created with.
func (o EnvironmentProfileOutput) EnvironmentBlueprintIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentProfile) pulumi.StringOutput { return v.EnvironmentBlueprintIdentifier }).(pulumi.StringOutput)
}

// Name of the environment profile.
func (o EnvironmentProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Project identifier for environment profile.
//
// The following arguments are optional:
func (o EnvironmentProfileOutput) ProjectIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentProfile) pulumi.StringOutput { return v.ProjectIdentifier }).(pulumi.StringOutput)
}

// Time of last update to environment profile.
func (o EnvironmentProfileOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentProfile) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// Array of user parameters of the environment profile with the following attributes:
func (o EnvironmentProfileOutput) UserParameters() EnvironmentProfileUserParameterArrayOutput {
	return o.ApplyT(func(v *EnvironmentProfile) EnvironmentProfileUserParameterArrayOutput { return v.UserParameters }).(EnvironmentProfileUserParameterArrayOutput)
}

type EnvironmentProfileArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EnvironmentProfile)(nil)).Elem()
}

func (o EnvironmentProfileArrayOutput) ToEnvironmentProfileArrayOutput() EnvironmentProfileArrayOutput {
	return o
}

func (o EnvironmentProfileArrayOutput) ToEnvironmentProfileArrayOutputWithContext(ctx context.Context) EnvironmentProfileArrayOutput {
	return o
}

func (o EnvironmentProfileArrayOutput) Index(i pulumi.IntInput) EnvironmentProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EnvironmentProfile {
		return vs[0].([]*EnvironmentProfile)[vs[1].(int)]
	}).(EnvironmentProfileOutput)
}

type EnvironmentProfileMapOutput struct{ *pulumi.OutputState }

func (EnvironmentProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EnvironmentProfile)(nil)).Elem()
}

func (o EnvironmentProfileMapOutput) ToEnvironmentProfileMapOutput() EnvironmentProfileMapOutput {
	return o
}

func (o EnvironmentProfileMapOutput) ToEnvironmentProfileMapOutputWithContext(ctx context.Context) EnvironmentProfileMapOutput {
	return o
}

func (o EnvironmentProfileMapOutput) MapIndex(k pulumi.StringInput) EnvironmentProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EnvironmentProfile {
		return vs[0].(map[string]*EnvironmentProfile)[vs[1].(string)]
	}).(EnvironmentProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentProfileInput)(nil)).Elem(), &EnvironmentProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentProfileArrayInput)(nil)).Elem(), EnvironmentProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentProfileMapInput)(nil)).Elem(), EnvironmentProfileMap{})
	pulumi.RegisterOutputType(EnvironmentProfileOutput{})
	pulumi.RegisterOutputType(EnvironmentProfileArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentProfileMapOutput{})
}
