// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datazone

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS DataZone Asset Type.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/datazone"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := datazone.NewAssetType(ctx, "test", &datazone.AssetTypeArgs{
//				Description:             pulumi.String("example"),
//				DomainIdentifier:        pulumi.Any(testAwsDatazoneDomain.Id),
//				Name:                    pulumi.String("example"),
//				OwningProjectIdentifier: pulumi.Any(testAwsDatazoneProject.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import DataZone Asset Type using the `domain_identifier,name`. For example:
//
// ```sh
// $ pulumi import aws:datazone/assetType:AssetType example domain-id-12345678,example
// ```
type AssetType struct {
	pulumi.CustomResourceState

	// The timestamp when the custom asset type was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The user who created the custom asset type.
	CreatedBy pulumi.StringOutput `pulumi:"createdBy"`
	// The description of the custom asset type.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The unique identifier of the Amazon DataZone domain where the custom asset type is being created.
	DomainIdentifier pulumi.StringOutput `pulumi:"domainIdentifier"`
	// The metadata forms that are to be attached to the custom asset type.
	FormsInputs AssetTypeFormsInputArrayOutput `pulumi:"formsInputs"`
	// The name of the custom asset type.
	Name pulumi.StringOutput `pulumi:"name"`
	// The unique identifier of the Amazon DataZone project that owns the custom asset type.
	//
	// The following arguments are optional:
	OwningProjectIdentifier pulumi.StringOutput `pulumi:"owningProjectIdentifier"`
	// The revision of the asset type.
	Revision pulumi.StringOutput        `pulumi:"revision"`
	Timeouts AssetTypeTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewAssetType registers a new resource with the given unique name, arguments, and options.
func NewAssetType(ctx *pulumi.Context,
	name string, args *AssetTypeArgs, opts ...pulumi.ResourceOption) (*AssetType, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'DomainIdentifier'")
	}
	if args.OwningProjectIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'OwningProjectIdentifier'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AssetType
	err := ctx.RegisterResource("aws:datazone/assetType:AssetType", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAssetType gets an existing AssetType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAssetType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AssetTypeState, opts ...pulumi.ResourceOption) (*AssetType, error) {
	var resource AssetType
	err := ctx.ReadResource("aws:datazone/assetType:AssetType", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AssetType resources.
type assetTypeState struct {
	// The timestamp when the custom asset type was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The user who created the custom asset type.
	CreatedBy *string `pulumi:"createdBy"`
	// The description of the custom asset type.
	Description *string `pulumi:"description"`
	// The unique identifier of the Amazon DataZone domain where the custom asset type is being created.
	DomainIdentifier *string `pulumi:"domainIdentifier"`
	// The metadata forms that are to be attached to the custom asset type.
	FormsInputs []AssetTypeFormsInput `pulumi:"formsInputs"`
	// The name of the custom asset type.
	Name *string `pulumi:"name"`
	// The unique identifier of the Amazon DataZone project that owns the custom asset type.
	//
	// The following arguments are optional:
	OwningProjectIdentifier *string `pulumi:"owningProjectIdentifier"`
	// The revision of the asset type.
	Revision *string            `pulumi:"revision"`
	Timeouts *AssetTypeTimeouts `pulumi:"timeouts"`
}

type AssetTypeState struct {
	// The timestamp when the custom asset type was created.
	CreatedAt pulumi.StringPtrInput
	// The user who created the custom asset type.
	CreatedBy pulumi.StringPtrInput
	// The description of the custom asset type.
	Description pulumi.StringPtrInput
	// The unique identifier of the Amazon DataZone domain where the custom asset type is being created.
	DomainIdentifier pulumi.StringPtrInput
	// The metadata forms that are to be attached to the custom asset type.
	FormsInputs AssetTypeFormsInputArrayInput
	// The name of the custom asset type.
	Name pulumi.StringPtrInput
	// The unique identifier of the Amazon DataZone project that owns the custom asset type.
	//
	// The following arguments are optional:
	OwningProjectIdentifier pulumi.StringPtrInput
	// The revision of the asset type.
	Revision pulumi.StringPtrInput
	Timeouts AssetTypeTimeoutsPtrInput
}

func (AssetTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*assetTypeState)(nil)).Elem()
}

type assetTypeArgs struct {
	// The description of the custom asset type.
	Description *string `pulumi:"description"`
	// The unique identifier of the Amazon DataZone domain where the custom asset type is being created.
	DomainIdentifier string `pulumi:"domainIdentifier"`
	// The metadata forms that are to be attached to the custom asset type.
	FormsInputs []AssetTypeFormsInput `pulumi:"formsInputs"`
	// The name of the custom asset type.
	Name *string `pulumi:"name"`
	// The unique identifier of the Amazon DataZone project that owns the custom asset type.
	//
	// The following arguments are optional:
	OwningProjectIdentifier string             `pulumi:"owningProjectIdentifier"`
	Timeouts                *AssetTypeTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a AssetType resource.
type AssetTypeArgs struct {
	// The description of the custom asset type.
	Description pulumi.StringPtrInput
	// The unique identifier of the Amazon DataZone domain where the custom asset type is being created.
	DomainIdentifier pulumi.StringInput
	// The metadata forms that are to be attached to the custom asset type.
	FormsInputs AssetTypeFormsInputArrayInput
	// The name of the custom asset type.
	Name pulumi.StringPtrInput
	// The unique identifier of the Amazon DataZone project that owns the custom asset type.
	//
	// The following arguments are optional:
	OwningProjectIdentifier pulumi.StringInput
	Timeouts                AssetTypeTimeoutsPtrInput
}

func (AssetTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*assetTypeArgs)(nil)).Elem()
}

type AssetTypeInput interface {
	pulumi.Input

	ToAssetTypeOutput() AssetTypeOutput
	ToAssetTypeOutputWithContext(ctx context.Context) AssetTypeOutput
}

func (*AssetType) ElementType() reflect.Type {
	return reflect.TypeOf((**AssetType)(nil)).Elem()
}

func (i *AssetType) ToAssetTypeOutput() AssetTypeOutput {
	return i.ToAssetTypeOutputWithContext(context.Background())
}

func (i *AssetType) ToAssetTypeOutputWithContext(ctx context.Context) AssetTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssetTypeOutput)
}

// AssetTypeArrayInput is an input type that accepts AssetTypeArray and AssetTypeArrayOutput values.
// You can construct a concrete instance of `AssetTypeArrayInput` via:
//
//	AssetTypeArray{ AssetTypeArgs{...} }
type AssetTypeArrayInput interface {
	pulumi.Input

	ToAssetTypeArrayOutput() AssetTypeArrayOutput
	ToAssetTypeArrayOutputWithContext(context.Context) AssetTypeArrayOutput
}

type AssetTypeArray []AssetTypeInput

func (AssetTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AssetType)(nil)).Elem()
}

func (i AssetTypeArray) ToAssetTypeArrayOutput() AssetTypeArrayOutput {
	return i.ToAssetTypeArrayOutputWithContext(context.Background())
}

func (i AssetTypeArray) ToAssetTypeArrayOutputWithContext(ctx context.Context) AssetTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssetTypeArrayOutput)
}

// AssetTypeMapInput is an input type that accepts AssetTypeMap and AssetTypeMapOutput values.
// You can construct a concrete instance of `AssetTypeMapInput` via:
//
//	AssetTypeMap{ "key": AssetTypeArgs{...} }
type AssetTypeMapInput interface {
	pulumi.Input

	ToAssetTypeMapOutput() AssetTypeMapOutput
	ToAssetTypeMapOutputWithContext(context.Context) AssetTypeMapOutput
}

type AssetTypeMap map[string]AssetTypeInput

func (AssetTypeMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AssetType)(nil)).Elem()
}

func (i AssetTypeMap) ToAssetTypeMapOutput() AssetTypeMapOutput {
	return i.ToAssetTypeMapOutputWithContext(context.Background())
}

func (i AssetTypeMap) ToAssetTypeMapOutputWithContext(ctx context.Context) AssetTypeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssetTypeMapOutput)
}

type AssetTypeOutput struct{ *pulumi.OutputState }

func (AssetTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AssetType)(nil)).Elem()
}

func (o AssetTypeOutput) ToAssetTypeOutput() AssetTypeOutput {
	return o
}

func (o AssetTypeOutput) ToAssetTypeOutputWithContext(ctx context.Context) AssetTypeOutput {
	return o
}

// The timestamp when the custom asset type was created.
func (o AssetTypeOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *AssetType) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The user who created the custom asset type.
func (o AssetTypeOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *AssetType) pulumi.StringOutput { return v.CreatedBy }).(pulumi.StringOutput)
}

// The description of the custom asset type.
func (o AssetTypeOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AssetType) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The unique identifier of the Amazon DataZone domain where the custom asset type is being created.
func (o AssetTypeOutput) DomainIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *AssetType) pulumi.StringOutput { return v.DomainIdentifier }).(pulumi.StringOutput)
}

// The metadata forms that are to be attached to the custom asset type.
func (o AssetTypeOutput) FormsInputs() AssetTypeFormsInputArrayOutput {
	return o.ApplyT(func(v *AssetType) AssetTypeFormsInputArrayOutput { return v.FormsInputs }).(AssetTypeFormsInputArrayOutput)
}

// The name of the custom asset type.
func (o AssetTypeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AssetType) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The unique identifier of the Amazon DataZone project that owns the custom asset type.
//
// The following arguments are optional:
func (o AssetTypeOutput) OwningProjectIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *AssetType) pulumi.StringOutput { return v.OwningProjectIdentifier }).(pulumi.StringOutput)
}

// The revision of the asset type.
func (o AssetTypeOutput) Revision() pulumi.StringOutput {
	return o.ApplyT(func(v *AssetType) pulumi.StringOutput { return v.Revision }).(pulumi.StringOutput)
}

func (o AssetTypeOutput) Timeouts() AssetTypeTimeoutsPtrOutput {
	return o.ApplyT(func(v *AssetType) AssetTypeTimeoutsPtrOutput { return v.Timeouts }).(AssetTypeTimeoutsPtrOutput)
}

type AssetTypeArrayOutput struct{ *pulumi.OutputState }

func (AssetTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AssetType)(nil)).Elem()
}

func (o AssetTypeArrayOutput) ToAssetTypeArrayOutput() AssetTypeArrayOutput {
	return o
}

func (o AssetTypeArrayOutput) ToAssetTypeArrayOutputWithContext(ctx context.Context) AssetTypeArrayOutput {
	return o
}

func (o AssetTypeArrayOutput) Index(i pulumi.IntInput) AssetTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AssetType {
		return vs[0].([]*AssetType)[vs[1].(int)]
	}).(AssetTypeOutput)
}

type AssetTypeMapOutput struct{ *pulumi.OutputState }

func (AssetTypeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AssetType)(nil)).Elem()
}

func (o AssetTypeMapOutput) ToAssetTypeMapOutput() AssetTypeMapOutput {
	return o
}

func (o AssetTypeMapOutput) ToAssetTypeMapOutputWithContext(ctx context.Context) AssetTypeMapOutput {
	return o
}

func (o AssetTypeMapOutput) MapIndex(k pulumi.StringInput) AssetTypeOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AssetType {
		return vs[0].(map[string]*AssetType)[vs[1].(string)]
	}).(AssetTypeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AssetTypeInput)(nil)).Elem(), &AssetType{})
	pulumi.RegisterInputType(reflect.TypeOf((*AssetTypeArrayInput)(nil)).Elem(), AssetTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AssetTypeMapInput)(nil)).Elem(), AssetTypeMap{})
	pulumi.RegisterOutputType(AssetTypeOutput{})
	pulumi.RegisterOutputType(AssetTypeArrayOutput{})
	pulumi.RegisterOutputType(AssetTypeMapOutput{})
}
