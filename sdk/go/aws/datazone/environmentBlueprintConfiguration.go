// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datazone

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS DataZone Environment Blueprint Configuration.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/datazone"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := datazone.NewDomain(ctx, "example", &datazone.DomainArgs{
//				Name:                pulumi.String("example_domain"),
//				DomainExecutionRole: pulumi.Any(domainExecutionRole.Arn),
//			})
//			if err != nil {
//				return err
//			}
//			defaultDataLake := datazone.GetEnvironmentBlueprintOutput(ctx, datazone.GetEnvironmentBlueprintOutputArgs{
//				DomainId: example.ID(),
//				Name:     pulumi.String("DefaultDataLake"),
//				Managed:  pulumi.Bool(true),
//			}, nil)
//			_, err = datazone.NewEnvironmentBlueprintConfiguration(ctx, "example", &datazone.EnvironmentBlueprintConfigurationArgs{
//				DomainId: example.ID(),
//				EnvironmentBlueprintId: pulumi.String(defaultDataLake.ApplyT(func(defaultDataLake datazone.GetEnvironmentBlueprintResult) (*string, error) {
//					return &defaultDataLake.Id, nil
//				}).(pulumi.StringPtrOutput)),
//				EnabledRegions: pulumi.StringArray{
//					pulumi.String("us-east-1"),
//				},
//				RegionalParameters: pulumi.StringMapMap{
//					"us-east-1": pulumi.StringMap{
//						"s3Location": pulumi.String("s3://my-amazon-datazone-bucket"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import DataZone Environment Blueprint Configuration using the `domain_id` and `environment_blueprint_id`, separated by a `/`. For example:
//
// ```sh
// $ pulumi import aws:datazone/environmentBlueprintConfiguration:EnvironmentBlueprintConfiguration example domain-id-12345/environment-blueprint-id-54321
// ```
type EnvironmentBlueprintConfiguration struct {
	pulumi.CustomResourceState

	// ID of the Domain.
	DomainId pulumi.StringOutput `pulumi:"domainId"`
	// Regions in which the blueprint is enabled
	//
	// The following arguments are optional:
	EnabledRegions pulumi.StringArrayOutput `pulumi:"enabledRegions"`
	// ID of the Environment Blueprint
	EnvironmentBlueprintId pulumi.StringOutput `pulumi:"environmentBlueprintId"`
	// ARN of the manage access role with which this blueprint is created.
	ManageAccessRoleArn pulumi.StringPtrOutput `pulumi:"manageAccessRoleArn"`
	// ARN of the provisioning role with which this blueprint is created.
	ProvisioningRoleArn pulumi.StringPtrOutput `pulumi:"provisioningRoleArn"`
	// Parameters for each region in which the blueprint is enabled
	RegionalParameters pulumi.StringMapMapOutput `pulumi:"regionalParameters"`
}

// NewEnvironmentBlueprintConfiguration registers a new resource with the given unique name, arguments, and options.
func NewEnvironmentBlueprintConfiguration(ctx *pulumi.Context,
	name string, args *EnvironmentBlueprintConfigurationArgs, opts ...pulumi.ResourceOption) (*EnvironmentBlueprintConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DomainId == nil {
		return nil, errors.New("invalid value for required argument 'DomainId'")
	}
	if args.EnabledRegions == nil {
		return nil, errors.New("invalid value for required argument 'EnabledRegions'")
	}
	if args.EnvironmentBlueprintId == nil {
		return nil, errors.New("invalid value for required argument 'EnvironmentBlueprintId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EnvironmentBlueprintConfiguration
	err := ctx.RegisterResource("aws:datazone/environmentBlueprintConfiguration:EnvironmentBlueprintConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnvironmentBlueprintConfiguration gets an existing EnvironmentBlueprintConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnvironmentBlueprintConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnvironmentBlueprintConfigurationState, opts ...pulumi.ResourceOption) (*EnvironmentBlueprintConfiguration, error) {
	var resource EnvironmentBlueprintConfiguration
	err := ctx.ReadResource("aws:datazone/environmentBlueprintConfiguration:EnvironmentBlueprintConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EnvironmentBlueprintConfiguration resources.
type environmentBlueprintConfigurationState struct {
	// ID of the Domain.
	DomainId *string `pulumi:"domainId"`
	// Regions in which the blueprint is enabled
	//
	// The following arguments are optional:
	EnabledRegions []string `pulumi:"enabledRegions"`
	// ID of the Environment Blueprint
	EnvironmentBlueprintId *string `pulumi:"environmentBlueprintId"`
	// ARN of the manage access role with which this blueprint is created.
	ManageAccessRoleArn *string `pulumi:"manageAccessRoleArn"`
	// ARN of the provisioning role with which this blueprint is created.
	ProvisioningRoleArn *string `pulumi:"provisioningRoleArn"`
	// Parameters for each region in which the blueprint is enabled
	RegionalParameters map[string]map[string]string `pulumi:"regionalParameters"`
}

type EnvironmentBlueprintConfigurationState struct {
	// ID of the Domain.
	DomainId pulumi.StringPtrInput
	// Regions in which the blueprint is enabled
	//
	// The following arguments are optional:
	EnabledRegions pulumi.StringArrayInput
	// ID of the Environment Blueprint
	EnvironmentBlueprintId pulumi.StringPtrInput
	// ARN of the manage access role with which this blueprint is created.
	ManageAccessRoleArn pulumi.StringPtrInput
	// ARN of the provisioning role with which this blueprint is created.
	ProvisioningRoleArn pulumi.StringPtrInput
	// Parameters for each region in which the blueprint is enabled
	RegionalParameters pulumi.StringMapMapInput
}

func (EnvironmentBlueprintConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentBlueprintConfigurationState)(nil)).Elem()
}

type environmentBlueprintConfigurationArgs struct {
	// ID of the Domain.
	DomainId string `pulumi:"domainId"`
	// Regions in which the blueprint is enabled
	//
	// The following arguments are optional:
	EnabledRegions []string `pulumi:"enabledRegions"`
	// ID of the Environment Blueprint
	EnvironmentBlueprintId string `pulumi:"environmentBlueprintId"`
	// ARN of the manage access role with which this blueprint is created.
	ManageAccessRoleArn *string `pulumi:"manageAccessRoleArn"`
	// ARN of the provisioning role with which this blueprint is created.
	ProvisioningRoleArn *string `pulumi:"provisioningRoleArn"`
	// Parameters for each region in which the blueprint is enabled
	RegionalParameters map[string]map[string]string `pulumi:"regionalParameters"`
}

// The set of arguments for constructing a EnvironmentBlueprintConfiguration resource.
type EnvironmentBlueprintConfigurationArgs struct {
	// ID of the Domain.
	DomainId pulumi.StringInput
	// Regions in which the blueprint is enabled
	//
	// The following arguments are optional:
	EnabledRegions pulumi.StringArrayInput
	// ID of the Environment Blueprint
	EnvironmentBlueprintId pulumi.StringInput
	// ARN of the manage access role with which this blueprint is created.
	ManageAccessRoleArn pulumi.StringPtrInput
	// ARN of the provisioning role with which this blueprint is created.
	ProvisioningRoleArn pulumi.StringPtrInput
	// Parameters for each region in which the blueprint is enabled
	RegionalParameters pulumi.StringMapMapInput
}

func (EnvironmentBlueprintConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*environmentBlueprintConfigurationArgs)(nil)).Elem()
}

type EnvironmentBlueprintConfigurationInput interface {
	pulumi.Input

	ToEnvironmentBlueprintConfigurationOutput() EnvironmentBlueprintConfigurationOutput
	ToEnvironmentBlueprintConfigurationOutputWithContext(ctx context.Context) EnvironmentBlueprintConfigurationOutput
}

func (*EnvironmentBlueprintConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentBlueprintConfiguration)(nil)).Elem()
}

func (i *EnvironmentBlueprintConfiguration) ToEnvironmentBlueprintConfigurationOutput() EnvironmentBlueprintConfigurationOutput {
	return i.ToEnvironmentBlueprintConfigurationOutputWithContext(context.Background())
}

func (i *EnvironmentBlueprintConfiguration) ToEnvironmentBlueprintConfigurationOutputWithContext(ctx context.Context) EnvironmentBlueprintConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentBlueprintConfigurationOutput)
}

// EnvironmentBlueprintConfigurationArrayInput is an input type that accepts EnvironmentBlueprintConfigurationArray and EnvironmentBlueprintConfigurationArrayOutput values.
// You can construct a concrete instance of `EnvironmentBlueprintConfigurationArrayInput` via:
//
//	EnvironmentBlueprintConfigurationArray{ EnvironmentBlueprintConfigurationArgs{...} }
type EnvironmentBlueprintConfigurationArrayInput interface {
	pulumi.Input

	ToEnvironmentBlueprintConfigurationArrayOutput() EnvironmentBlueprintConfigurationArrayOutput
	ToEnvironmentBlueprintConfigurationArrayOutputWithContext(context.Context) EnvironmentBlueprintConfigurationArrayOutput
}

type EnvironmentBlueprintConfigurationArray []EnvironmentBlueprintConfigurationInput

func (EnvironmentBlueprintConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EnvironmentBlueprintConfiguration)(nil)).Elem()
}

func (i EnvironmentBlueprintConfigurationArray) ToEnvironmentBlueprintConfigurationArrayOutput() EnvironmentBlueprintConfigurationArrayOutput {
	return i.ToEnvironmentBlueprintConfigurationArrayOutputWithContext(context.Background())
}

func (i EnvironmentBlueprintConfigurationArray) ToEnvironmentBlueprintConfigurationArrayOutputWithContext(ctx context.Context) EnvironmentBlueprintConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentBlueprintConfigurationArrayOutput)
}

// EnvironmentBlueprintConfigurationMapInput is an input type that accepts EnvironmentBlueprintConfigurationMap and EnvironmentBlueprintConfigurationMapOutput values.
// You can construct a concrete instance of `EnvironmentBlueprintConfigurationMapInput` via:
//
//	EnvironmentBlueprintConfigurationMap{ "key": EnvironmentBlueprintConfigurationArgs{...} }
type EnvironmentBlueprintConfigurationMapInput interface {
	pulumi.Input

	ToEnvironmentBlueprintConfigurationMapOutput() EnvironmentBlueprintConfigurationMapOutput
	ToEnvironmentBlueprintConfigurationMapOutputWithContext(context.Context) EnvironmentBlueprintConfigurationMapOutput
}

type EnvironmentBlueprintConfigurationMap map[string]EnvironmentBlueprintConfigurationInput

func (EnvironmentBlueprintConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EnvironmentBlueprintConfiguration)(nil)).Elem()
}

func (i EnvironmentBlueprintConfigurationMap) ToEnvironmentBlueprintConfigurationMapOutput() EnvironmentBlueprintConfigurationMapOutput {
	return i.ToEnvironmentBlueprintConfigurationMapOutputWithContext(context.Background())
}

func (i EnvironmentBlueprintConfigurationMap) ToEnvironmentBlueprintConfigurationMapOutputWithContext(ctx context.Context) EnvironmentBlueprintConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentBlueprintConfigurationMapOutput)
}

type EnvironmentBlueprintConfigurationOutput struct{ *pulumi.OutputState }

func (EnvironmentBlueprintConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentBlueprintConfiguration)(nil)).Elem()
}

func (o EnvironmentBlueprintConfigurationOutput) ToEnvironmentBlueprintConfigurationOutput() EnvironmentBlueprintConfigurationOutput {
	return o
}

func (o EnvironmentBlueprintConfigurationOutput) ToEnvironmentBlueprintConfigurationOutputWithContext(ctx context.Context) EnvironmentBlueprintConfigurationOutput {
	return o
}

// ID of the Domain.
func (o EnvironmentBlueprintConfigurationOutput) DomainId() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentBlueprintConfiguration) pulumi.StringOutput { return v.DomainId }).(pulumi.StringOutput)
}

// Regions in which the blueprint is enabled
//
// The following arguments are optional:
func (o EnvironmentBlueprintConfigurationOutput) EnabledRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EnvironmentBlueprintConfiguration) pulumi.StringArrayOutput { return v.EnabledRegions }).(pulumi.StringArrayOutput)
}

// ID of the Environment Blueprint
func (o EnvironmentBlueprintConfigurationOutput) EnvironmentBlueprintId() pulumi.StringOutput {
	return o.ApplyT(func(v *EnvironmentBlueprintConfiguration) pulumi.StringOutput { return v.EnvironmentBlueprintId }).(pulumi.StringOutput)
}

// ARN of the manage access role with which this blueprint is created.
func (o EnvironmentBlueprintConfigurationOutput) ManageAccessRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentBlueprintConfiguration) pulumi.StringPtrOutput { return v.ManageAccessRoleArn }).(pulumi.StringPtrOutput)
}

// ARN of the provisioning role with which this blueprint is created.
func (o EnvironmentBlueprintConfigurationOutput) ProvisioningRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentBlueprintConfiguration) pulumi.StringPtrOutput { return v.ProvisioningRoleArn }).(pulumi.StringPtrOutput)
}

// Parameters for each region in which the blueprint is enabled
func (o EnvironmentBlueprintConfigurationOutput) RegionalParameters() pulumi.StringMapMapOutput {
	return o.ApplyT(func(v *EnvironmentBlueprintConfiguration) pulumi.StringMapMapOutput { return v.RegionalParameters }).(pulumi.StringMapMapOutput)
}

type EnvironmentBlueprintConfigurationArrayOutput struct{ *pulumi.OutputState }

func (EnvironmentBlueprintConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EnvironmentBlueprintConfiguration)(nil)).Elem()
}

func (o EnvironmentBlueprintConfigurationArrayOutput) ToEnvironmentBlueprintConfigurationArrayOutput() EnvironmentBlueprintConfigurationArrayOutput {
	return o
}

func (o EnvironmentBlueprintConfigurationArrayOutput) ToEnvironmentBlueprintConfigurationArrayOutputWithContext(ctx context.Context) EnvironmentBlueprintConfigurationArrayOutput {
	return o
}

func (o EnvironmentBlueprintConfigurationArrayOutput) Index(i pulumi.IntInput) EnvironmentBlueprintConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EnvironmentBlueprintConfiguration {
		return vs[0].([]*EnvironmentBlueprintConfiguration)[vs[1].(int)]
	}).(EnvironmentBlueprintConfigurationOutput)
}

type EnvironmentBlueprintConfigurationMapOutput struct{ *pulumi.OutputState }

func (EnvironmentBlueprintConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EnvironmentBlueprintConfiguration)(nil)).Elem()
}

func (o EnvironmentBlueprintConfigurationMapOutput) ToEnvironmentBlueprintConfigurationMapOutput() EnvironmentBlueprintConfigurationMapOutput {
	return o
}

func (o EnvironmentBlueprintConfigurationMapOutput) ToEnvironmentBlueprintConfigurationMapOutputWithContext(ctx context.Context) EnvironmentBlueprintConfigurationMapOutput {
	return o
}

func (o EnvironmentBlueprintConfigurationMapOutput) MapIndex(k pulumi.StringInput) EnvironmentBlueprintConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EnvironmentBlueprintConfiguration {
		return vs[0].(map[string]*EnvironmentBlueprintConfiguration)[vs[1].(string)]
	}).(EnvironmentBlueprintConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentBlueprintConfigurationInput)(nil)).Elem(), &EnvironmentBlueprintConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentBlueprintConfigurationArrayInput)(nil)).Elem(), EnvironmentBlueprintConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentBlueprintConfigurationMapInput)(nil)).Elem(), EnvironmentBlueprintConfigurationMap{})
	pulumi.RegisterOutputType(EnvironmentBlueprintConfigurationOutput{})
	pulumi.RegisterOutputType(EnvironmentBlueprintConfigurationArrayOutput{})
	pulumi.RegisterOutputType(EnvironmentBlueprintConfigurationMapOutput{})
}
