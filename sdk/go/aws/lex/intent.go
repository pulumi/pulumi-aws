// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Intent struct {
	pulumi.CustomResourceState

	Arn                   pulumi.StringOutput                `pulumi:"arn"`
	Checksum              pulumi.StringOutput                `pulumi:"checksum"`
	ConclusionStatement   IntentConclusionStatementPtrOutput `pulumi:"conclusionStatement"`
	ConfirmationPrompt    IntentConfirmationPromptPtrOutput  `pulumi:"confirmationPrompt"`
	CreateVersion         pulumi.BoolPtrOutput               `pulumi:"createVersion"`
	CreatedDate           pulumi.StringOutput                `pulumi:"createdDate"`
	Description           pulumi.StringPtrOutput             `pulumi:"description"`
	DialogCodeHook        IntentDialogCodeHookPtrOutput      `pulumi:"dialogCodeHook"`
	FollowUpPrompt        IntentFollowUpPromptPtrOutput      `pulumi:"followUpPrompt"`
	FulfillmentActivity   IntentFulfillmentActivityOutput    `pulumi:"fulfillmentActivity"`
	LastUpdatedDate       pulumi.StringOutput                `pulumi:"lastUpdatedDate"`
	Name                  pulumi.StringOutput                `pulumi:"name"`
	ParentIntentSignature pulumi.StringPtrOutput             `pulumi:"parentIntentSignature"`
	RejectionStatement    IntentRejectionStatementPtrOutput  `pulumi:"rejectionStatement"`
	SampleUtterances      pulumi.StringArrayOutput           `pulumi:"sampleUtterances"`
	Slots                 IntentSlotArrayOutput              `pulumi:"slots"`
	Version               pulumi.StringOutput                `pulumi:"version"`
}

// NewIntent registers a new resource with the given unique name, arguments, and options.
func NewIntent(ctx *pulumi.Context,
	name string, args *IntentArgs, opts ...pulumi.ResourceOption) (*Intent, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FulfillmentActivity == nil {
		return nil, errors.New("invalid value for required argument 'FulfillmentActivity'")
	}
	var resource Intent
	err := ctx.RegisterResource("aws:lex/intent:Intent", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIntent gets an existing Intent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIntent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IntentState, opts ...pulumi.ResourceOption) (*Intent, error) {
	var resource Intent
	err := ctx.ReadResource("aws:lex/intent:Intent", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Intent resources.
type intentState struct {
	Arn                   *string                    `pulumi:"arn"`
	Checksum              *string                    `pulumi:"checksum"`
	ConclusionStatement   *IntentConclusionStatement `pulumi:"conclusionStatement"`
	ConfirmationPrompt    *IntentConfirmationPrompt  `pulumi:"confirmationPrompt"`
	CreateVersion         *bool                      `pulumi:"createVersion"`
	CreatedDate           *string                    `pulumi:"createdDate"`
	Description           *string                    `pulumi:"description"`
	DialogCodeHook        *IntentDialogCodeHook      `pulumi:"dialogCodeHook"`
	FollowUpPrompt        *IntentFollowUpPrompt      `pulumi:"followUpPrompt"`
	FulfillmentActivity   *IntentFulfillmentActivity `pulumi:"fulfillmentActivity"`
	LastUpdatedDate       *string                    `pulumi:"lastUpdatedDate"`
	Name                  *string                    `pulumi:"name"`
	ParentIntentSignature *string                    `pulumi:"parentIntentSignature"`
	RejectionStatement    *IntentRejectionStatement  `pulumi:"rejectionStatement"`
	SampleUtterances      []string                   `pulumi:"sampleUtterances"`
	Slots                 []IntentSlot               `pulumi:"slots"`
	Version               *string                    `pulumi:"version"`
}

type IntentState struct {
	Arn                   pulumi.StringPtrInput
	Checksum              pulumi.StringPtrInput
	ConclusionStatement   IntentConclusionStatementPtrInput
	ConfirmationPrompt    IntentConfirmationPromptPtrInput
	CreateVersion         pulumi.BoolPtrInput
	CreatedDate           pulumi.StringPtrInput
	Description           pulumi.StringPtrInput
	DialogCodeHook        IntentDialogCodeHookPtrInput
	FollowUpPrompt        IntentFollowUpPromptPtrInput
	FulfillmentActivity   IntentFulfillmentActivityPtrInput
	LastUpdatedDate       pulumi.StringPtrInput
	Name                  pulumi.StringPtrInput
	ParentIntentSignature pulumi.StringPtrInput
	RejectionStatement    IntentRejectionStatementPtrInput
	SampleUtterances      pulumi.StringArrayInput
	Slots                 IntentSlotArrayInput
	Version               pulumi.StringPtrInput
}

func (IntentState) ElementType() reflect.Type {
	return reflect.TypeOf((*intentState)(nil)).Elem()
}

type intentArgs struct {
	ConclusionStatement   *IntentConclusionStatement `pulumi:"conclusionStatement"`
	ConfirmationPrompt    *IntentConfirmationPrompt  `pulumi:"confirmationPrompt"`
	CreateVersion         *bool                      `pulumi:"createVersion"`
	Description           *string                    `pulumi:"description"`
	DialogCodeHook        *IntentDialogCodeHook      `pulumi:"dialogCodeHook"`
	FollowUpPrompt        *IntentFollowUpPrompt      `pulumi:"followUpPrompt"`
	FulfillmentActivity   IntentFulfillmentActivity  `pulumi:"fulfillmentActivity"`
	Name                  *string                    `pulumi:"name"`
	ParentIntentSignature *string                    `pulumi:"parentIntentSignature"`
	RejectionStatement    *IntentRejectionStatement  `pulumi:"rejectionStatement"`
	SampleUtterances      []string                   `pulumi:"sampleUtterances"`
	Slots                 []IntentSlot               `pulumi:"slots"`
}

// The set of arguments for constructing a Intent resource.
type IntentArgs struct {
	ConclusionStatement   IntentConclusionStatementPtrInput
	ConfirmationPrompt    IntentConfirmationPromptPtrInput
	CreateVersion         pulumi.BoolPtrInput
	Description           pulumi.StringPtrInput
	DialogCodeHook        IntentDialogCodeHookPtrInput
	FollowUpPrompt        IntentFollowUpPromptPtrInput
	FulfillmentActivity   IntentFulfillmentActivityInput
	Name                  pulumi.StringPtrInput
	ParentIntentSignature pulumi.StringPtrInput
	RejectionStatement    IntentRejectionStatementPtrInput
	SampleUtterances      pulumi.StringArrayInput
	Slots                 IntentSlotArrayInput
}

func (IntentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*intentArgs)(nil)).Elem()
}

type IntentInput interface {
	pulumi.Input

	ToIntentOutput() IntentOutput
	ToIntentOutputWithContext(ctx context.Context) IntentOutput
}

func (*Intent) ElementType() reflect.Type {
	return reflect.TypeOf((**Intent)(nil)).Elem()
}

func (i *Intent) ToIntentOutput() IntentOutput {
	return i.ToIntentOutputWithContext(context.Background())
}

func (i *Intent) ToIntentOutputWithContext(ctx context.Context) IntentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntentOutput)
}

// IntentArrayInput is an input type that accepts IntentArray and IntentArrayOutput values.
// You can construct a concrete instance of `IntentArrayInput` via:
//
//	IntentArray{ IntentArgs{...} }
type IntentArrayInput interface {
	pulumi.Input

	ToIntentArrayOutput() IntentArrayOutput
	ToIntentArrayOutputWithContext(context.Context) IntentArrayOutput
}

type IntentArray []IntentInput

func (IntentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Intent)(nil)).Elem()
}

func (i IntentArray) ToIntentArrayOutput() IntentArrayOutput {
	return i.ToIntentArrayOutputWithContext(context.Background())
}

func (i IntentArray) ToIntentArrayOutputWithContext(ctx context.Context) IntentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntentArrayOutput)
}

// IntentMapInput is an input type that accepts IntentMap and IntentMapOutput values.
// You can construct a concrete instance of `IntentMapInput` via:
//
//	IntentMap{ "key": IntentArgs{...} }
type IntentMapInput interface {
	pulumi.Input

	ToIntentMapOutput() IntentMapOutput
	ToIntentMapOutputWithContext(context.Context) IntentMapOutput
}

type IntentMap map[string]IntentInput

func (IntentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Intent)(nil)).Elem()
}

func (i IntentMap) ToIntentMapOutput() IntentMapOutput {
	return i.ToIntentMapOutputWithContext(context.Background())
}

func (i IntentMap) ToIntentMapOutputWithContext(ctx context.Context) IntentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntentMapOutput)
}

type IntentOutput struct{ *pulumi.OutputState }

func (IntentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Intent)(nil)).Elem()
}

func (o IntentOutput) ToIntentOutput() IntentOutput {
	return o
}

func (o IntentOutput) ToIntentOutputWithContext(ctx context.Context) IntentOutput {
	return o
}

func (o IntentOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Intent) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o IntentOutput) Checksum() pulumi.StringOutput {
	return o.ApplyT(func(v *Intent) pulumi.StringOutput { return v.Checksum }).(pulumi.StringOutput)
}

func (o IntentOutput) ConclusionStatement() IntentConclusionStatementPtrOutput {
	return o.ApplyT(func(v *Intent) IntentConclusionStatementPtrOutput { return v.ConclusionStatement }).(IntentConclusionStatementPtrOutput)
}

func (o IntentOutput) ConfirmationPrompt() IntentConfirmationPromptPtrOutput {
	return o.ApplyT(func(v *Intent) IntentConfirmationPromptPtrOutput { return v.ConfirmationPrompt }).(IntentConfirmationPromptPtrOutput)
}

func (o IntentOutput) CreateVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Intent) pulumi.BoolPtrOutput { return v.CreateVersion }).(pulumi.BoolPtrOutput)
}

func (o IntentOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v *Intent) pulumi.StringOutput { return v.CreatedDate }).(pulumi.StringOutput)
}

func (o IntentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Intent) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o IntentOutput) DialogCodeHook() IntentDialogCodeHookPtrOutput {
	return o.ApplyT(func(v *Intent) IntentDialogCodeHookPtrOutput { return v.DialogCodeHook }).(IntentDialogCodeHookPtrOutput)
}

func (o IntentOutput) FollowUpPrompt() IntentFollowUpPromptPtrOutput {
	return o.ApplyT(func(v *Intent) IntentFollowUpPromptPtrOutput { return v.FollowUpPrompt }).(IntentFollowUpPromptPtrOutput)
}

func (o IntentOutput) FulfillmentActivity() IntentFulfillmentActivityOutput {
	return o.ApplyT(func(v *Intent) IntentFulfillmentActivityOutput { return v.FulfillmentActivity }).(IntentFulfillmentActivityOutput)
}

func (o IntentOutput) LastUpdatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v *Intent) pulumi.StringOutput { return v.LastUpdatedDate }).(pulumi.StringOutput)
}

func (o IntentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Intent) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o IntentOutput) ParentIntentSignature() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Intent) pulumi.StringPtrOutput { return v.ParentIntentSignature }).(pulumi.StringPtrOutput)
}

func (o IntentOutput) RejectionStatement() IntentRejectionStatementPtrOutput {
	return o.ApplyT(func(v *Intent) IntentRejectionStatementPtrOutput { return v.RejectionStatement }).(IntentRejectionStatementPtrOutput)
}

func (o IntentOutput) SampleUtterances() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Intent) pulumi.StringArrayOutput { return v.SampleUtterances }).(pulumi.StringArrayOutput)
}

func (o IntentOutput) Slots() IntentSlotArrayOutput {
	return o.ApplyT(func(v *Intent) IntentSlotArrayOutput { return v.Slots }).(IntentSlotArrayOutput)
}

func (o IntentOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *Intent) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

type IntentArrayOutput struct{ *pulumi.OutputState }

func (IntentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Intent)(nil)).Elem()
}

func (o IntentArrayOutput) ToIntentArrayOutput() IntentArrayOutput {
	return o
}

func (o IntentArrayOutput) ToIntentArrayOutputWithContext(ctx context.Context) IntentArrayOutput {
	return o
}

func (o IntentArrayOutput) Index(i pulumi.IntInput) IntentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Intent {
		return vs[0].([]*Intent)[vs[1].(int)]
	}).(IntentOutput)
}

type IntentMapOutput struct{ *pulumi.OutputState }

func (IntentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Intent)(nil)).Elem()
}

func (o IntentMapOutput) ToIntentMapOutput() IntentMapOutput {
	return o
}

func (o IntentMapOutput) ToIntentMapOutputWithContext(ctx context.Context) IntentMapOutput {
	return o
}

func (o IntentMapOutput) MapIndex(k pulumi.StringInput) IntentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Intent {
		return vs[0].(map[string]*Intent)[vs[1].(string)]
	}).(IntentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IntentInput)(nil)).Elem(), &Intent{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntentArrayInput)(nil)).Elem(), IntentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IntentMapInput)(nil)).Elem(), IntentMap{})
	pulumi.RegisterOutputType(IntentOutput{})
	pulumi.RegisterOutputType(IntentArrayOutput{})
	pulumi.RegisterOutputType(IntentMapOutput{})
}
