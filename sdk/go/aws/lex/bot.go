// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Bot struct {
	pulumi.CustomResourceState

	AbortStatement               BotAbortStatementOutput         `pulumi:"abortStatement"`
	Arn                          pulumi.StringOutput             `pulumi:"arn"`
	Checksum                     pulumi.StringOutput             `pulumi:"checksum"`
	ChildDirected                pulumi.BoolOutput               `pulumi:"childDirected"`
	ClarificationPrompt          BotClarificationPromptPtrOutput `pulumi:"clarificationPrompt"`
	CreateVersion                pulumi.BoolPtrOutput            `pulumi:"createVersion"`
	CreatedDate                  pulumi.StringOutput             `pulumi:"createdDate"`
	Description                  pulumi.StringPtrOutput          `pulumi:"description"`
	DetectSentiment              pulumi.BoolPtrOutput            `pulumi:"detectSentiment"`
	EnableModelImprovements      pulumi.BoolPtrOutput            `pulumi:"enableModelImprovements"`
	FailureReason                pulumi.StringOutput             `pulumi:"failureReason"`
	IdleSessionTtlInSeconds      pulumi.IntPtrOutput             `pulumi:"idleSessionTtlInSeconds"`
	Intents                      BotIntentArrayOutput            `pulumi:"intents"`
	LastUpdatedDate              pulumi.StringOutput             `pulumi:"lastUpdatedDate"`
	Locale                       pulumi.StringPtrOutput          `pulumi:"locale"`
	Name                         pulumi.StringOutput             `pulumi:"name"`
	NluIntentConfidenceThreshold pulumi.Float64PtrOutput         `pulumi:"nluIntentConfidenceThreshold"`
	ProcessBehavior              pulumi.StringPtrOutput          `pulumi:"processBehavior"`
	Status                       pulumi.StringOutput             `pulumi:"status"`
	Version                      pulumi.StringOutput             `pulumi:"version"`
	VoiceId                      pulumi.StringOutput             `pulumi:"voiceId"`
}

// NewBot registers a new resource with the given unique name, arguments, and options.
func NewBot(ctx *pulumi.Context,
	name string, args *BotArgs, opts ...pulumi.ResourceOption) (*Bot, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AbortStatement == nil {
		return nil, errors.New("invalid value for required argument 'AbortStatement'")
	}
	if args.ChildDirected == nil {
		return nil, errors.New("invalid value for required argument 'ChildDirected'")
	}
	if args.Intents == nil {
		return nil, errors.New("invalid value for required argument 'Intents'")
	}
	var resource Bot
	err := ctx.RegisterResource("aws:lex/bot:Bot", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBot gets an existing Bot resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBot(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BotState, opts ...pulumi.ResourceOption) (*Bot, error) {
	var resource Bot
	err := ctx.ReadResource("aws:lex/bot:Bot", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Bot resources.
type botState struct {
	AbortStatement               *BotAbortStatement      `pulumi:"abortStatement"`
	Arn                          *string                 `pulumi:"arn"`
	Checksum                     *string                 `pulumi:"checksum"`
	ChildDirected                *bool                   `pulumi:"childDirected"`
	ClarificationPrompt          *BotClarificationPrompt `pulumi:"clarificationPrompt"`
	CreateVersion                *bool                   `pulumi:"createVersion"`
	CreatedDate                  *string                 `pulumi:"createdDate"`
	Description                  *string                 `pulumi:"description"`
	DetectSentiment              *bool                   `pulumi:"detectSentiment"`
	EnableModelImprovements      *bool                   `pulumi:"enableModelImprovements"`
	FailureReason                *string                 `pulumi:"failureReason"`
	IdleSessionTtlInSeconds      *int                    `pulumi:"idleSessionTtlInSeconds"`
	Intents                      []BotIntent             `pulumi:"intents"`
	LastUpdatedDate              *string                 `pulumi:"lastUpdatedDate"`
	Locale                       *string                 `pulumi:"locale"`
	Name                         *string                 `pulumi:"name"`
	NluIntentConfidenceThreshold *float64                `pulumi:"nluIntentConfidenceThreshold"`
	ProcessBehavior              *string                 `pulumi:"processBehavior"`
	Status                       *string                 `pulumi:"status"`
	Version                      *string                 `pulumi:"version"`
	VoiceId                      *string                 `pulumi:"voiceId"`
}

type BotState struct {
	AbortStatement               BotAbortStatementPtrInput
	Arn                          pulumi.StringPtrInput
	Checksum                     pulumi.StringPtrInput
	ChildDirected                pulumi.BoolPtrInput
	ClarificationPrompt          BotClarificationPromptPtrInput
	CreateVersion                pulumi.BoolPtrInput
	CreatedDate                  pulumi.StringPtrInput
	Description                  pulumi.StringPtrInput
	DetectSentiment              pulumi.BoolPtrInput
	EnableModelImprovements      pulumi.BoolPtrInput
	FailureReason                pulumi.StringPtrInput
	IdleSessionTtlInSeconds      pulumi.IntPtrInput
	Intents                      BotIntentArrayInput
	LastUpdatedDate              pulumi.StringPtrInput
	Locale                       pulumi.StringPtrInput
	Name                         pulumi.StringPtrInput
	NluIntentConfidenceThreshold pulumi.Float64PtrInput
	ProcessBehavior              pulumi.StringPtrInput
	Status                       pulumi.StringPtrInput
	Version                      pulumi.StringPtrInput
	VoiceId                      pulumi.StringPtrInput
}

func (BotState) ElementType() reflect.Type {
	return reflect.TypeOf((*botState)(nil)).Elem()
}

type botArgs struct {
	AbortStatement               BotAbortStatement       `pulumi:"abortStatement"`
	ChildDirected                bool                    `pulumi:"childDirected"`
	ClarificationPrompt          *BotClarificationPrompt `pulumi:"clarificationPrompt"`
	CreateVersion                *bool                   `pulumi:"createVersion"`
	Description                  *string                 `pulumi:"description"`
	DetectSentiment              *bool                   `pulumi:"detectSentiment"`
	EnableModelImprovements      *bool                   `pulumi:"enableModelImprovements"`
	IdleSessionTtlInSeconds      *int                    `pulumi:"idleSessionTtlInSeconds"`
	Intents                      []BotIntent             `pulumi:"intents"`
	Locale                       *string                 `pulumi:"locale"`
	Name                         *string                 `pulumi:"name"`
	NluIntentConfidenceThreshold *float64                `pulumi:"nluIntentConfidenceThreshold"`
	ProcessBehavior              *string                 `pulumi:"processBehavior"`
	VoiceId                      *string                 `pulumi:"voiceId"`
}

// The set of arguments for constructing a Bot resource.
type BotArgs struct {
	AbortStatement               BotAbortStatementInput
	ChildDirected                pulumi.BoolInput
	ClarificationPrompt          BotClarificationPromptPtrInput
	CreateVersion                pulumi.BoolPtrInput
	Description                  pulumi.StringPtrInput
	DetectSentiment              pulumi.BoolPtrInput
	EnableModelImprovements      pulumi.BoolPtrInput
	IdleSessionTtlInSeconds      pulumi.IntPtrInput
	Intents                      BotIntentArrayInput
	Locale                       pulumi.StringPtrInput
	Name                         pulumi.StringPtrInput
	NluIntentConfidenceThreshold pulumi.Float64PtrInput
	ProcessBehavior              pulumi.StringPtrInput
	VoiceId                      pulumi.StringPtrInput
}

func (BotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*botArgs)(nil)).Elem()
}

type BotInput interface {
	pulumi.Input

	ToBotOutput() BotOutput
	ToBotOutputWithContext(ctx context.Context) BotOutput
}

func (*Bot) ElementType() reflect.Type {
	return reflect.TypeOf((**Bot)(nil)).Elem()
}

func (i *Bot) ToBotOutput() BotOutput {
	return i.ToBotOutputWithContext(context.Background())
}

func (i *Bot) ToBotOutputWithContext(ctx context.Context) BotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotOutput)
}

// BotArrayInput is an input type that accepts BotArray and BotArrayOutput values.
// You can construct a concrete instance of `BotArrayInput` via:
//
//	BotArray{ BotArgs{...} }
type BotArrayInput interface {
	pulumi.Input

	ToBotArrayOutput() BotArrayOutput
	ToBotArrayOutputWithContext(context.Context) BotArrayOutput
}

type BotArray []BotInput

func (BotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Bot)(nil)).Elem()
}

func (i BotArray) ToBotArrayOutput() BotArrayOutput {
	return i.ToBotArrayOutputWithContext(context.Background())
}

func (i BotArray) ToBotArrayOutputWithContext(ctx context.Context) BotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotArrayOutput)
}

// BotMapInput is an input type that accepts BotMap and BotMapOutput values.
// You can construct a concrete instance of `BotMapInput` via:
//
//	BotMap{ "key": BotArgs{...} }
type BotMapInput interface {
	pulumi.Input

	ToBotMapOutput() BotMapOutput
	ToBotMapOutputWithContext(context.Context) BotMapOutput
}

type BotMap map[string]BotInput

func (BotMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Bot)(nil)).Elem()
}

func (i BotMap) ToBotMapOutput() BotMapOutput {
	return i.ToBotMapOutputWithContext(context.Background())
}

func (i BotMap) ToBotMapOutputWithContext(ctx context.Context) BotMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BotMapOutput)
}

type BotOutput struct{ *pulumi.OutputState }

func (BotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Bot)(nil)).Elem()
}

func (o BotOutput) ToBotOutput() BotOutput {
	return o
}

func (o BotOutput) ToBotOutputWithContext(ctx context.Context) BotOutput {
	return o
}

func (o BotOutput) AbortStatement() BotAbortStatementOutput {
	return o.ApplyT(func(v *Bot) BotAbortStatementOutput { return v.AbortStatement }).(BotAbortStatementOutput)
}

func (o BotOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Bot) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o BotOutput) Checksum() pulumi.StringOutput {
	return o.ApplyT(func(v *Bot) pulumi.StringOutput { return v.Checksum }).(pulumi.StringOutput)
}

func (o BotOutput) ChildDirected() pulumi.BoolOutput {
	return o.ApplyT(func(v *Bot) pulumi.BoolOutput { return v.ChildDirected }).(pulumi.BoolOutput)
}

func (o BotOutput) ClarificationPrompt() BotClarificationPromptPtrOutput {
	return o.ApplyT(func(v *Bot) BotClarificationPromptPtrOutput { return v.ClarificationPrompt }).(BotClarificationPromptPtrOutput)
}

func (o BotOutput) CreateVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Bot) pulumi.BoolPtrOutput { return v.CreateVersion }).(pulumi.BoolPtrOutput)
}

func (o BotOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v *Bot) pulumi.StringOutput { return v.CreatedDate }).(pulumi.StringOutput)
}

func (o BotOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bot) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o BotOutput) DetectSentiment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Bot) pulumi.BoolPtrOutput { return v.DetectSentiment }).(pulumi.BoolPtrOutput)
}

func (o BotOutput) EnableModelImprovements() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Bot) pulumi.BoolPtrOutput { return v.EnableModelImprovements }).(pulumi.BoolPtrOutput)
}

func (o BotOutput) FailureReason() pulumi.StringOutput {
	return o.ApplyT(func(v *Bot) pulumi.StringOutput { return v.FailureReason }).(pulumi.StringOutput)
}

func (o BotOutput) IdleSessionTtlInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Bot) pulumi.IntPtrOutput { return v.IdleSessionTtlInSeconds }).(pulumi.IntPtrOutput)
}

func (o BotOutput) Intents() BotIntentArrayOutput {
	return o.ApplyT(func(v *Bot) BotIntentArrayOutput { return v.Intents }).(BotIntentArrayOutput)
}

func (o BotOutput) LastUpdatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v *Bot) pulumi.StringOutput { return v.LastUpdatedDate }).(pulumi.StringOutput)
}

func (o BotOutput) Locale() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bot) pulumi.StringPtrOutput { return v.Locale }).(pulumi.StringPtrOutput)
}

func (o BotOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Bot) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o BotOutput) NluIntentConfidenceThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *Bot) pulumi.Float64PtrOutput { return v.NluIntentConfidenceThreshold }).(pulumi.Float64PtrOutput)
}

func (o BotOutput) ProcessBehavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Bot) pulumi.StringPtrOutput { return v.ProcessBehavior }).(pulumi.StringPtrOutput)
}

func (o BotOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Bot) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o BotOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *Bot) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

func (o BotOutput) VoiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *Bot) pulumi.StringOutput { return v.VoiceId }).(pulumi.StringOutput)
}

type BotArrayOutput struct{ *pulumi.OutputState }

func (BotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Bot)(nil)).Elem()
}

func (o BotArrayOutput) ToBotArrayOutput() BotArrayOutput {
	return o
}

func (o BotArrayOutput) ToBotArrayOutputWithContext(ctx context.Context) BotArrayOutput {
	return o
}

func (o BotArrayOutput) Index(i pulumi.IntInput) BotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Bot {
		return vs[0].([]*Bot)[vs[1].(int)]
	}).(BotOutput)
}

type BotMapOutput struct{ *pulumi.OutputState }

func (BotMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Bot)(nil)).Elem()
}

func (o BotMapOutput) ToBotMapOutput() BotMapOutput {
	return o
}

func (o BotMapOutput) ToBotMapOutputWithContext(ctx context.Context) BotMapOutput {
	return o
}

func (o BotMapOutput) MapIndex(k pulumi.StringInput) BotOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Bot {
		return vs[0].(map[string]*Bot)[vs[1].(string)]
	}).(BotOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BotInput)(nil)).Elem(), &Bot{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotArrayInput)(nil)).Elem(), BotArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BotMapInput)(nil)).Elem(), BotMap{})
	pulumi.RegisterOutputType(BotOutput{})
	pulumi.RegisterOutputType(BotArrayOutput{})
	pulumi.RegisterOutputType(BotMapOutput{})
}
