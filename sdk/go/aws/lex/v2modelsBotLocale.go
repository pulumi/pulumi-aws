// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lex

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS Lex V2 Models Bot Locale.
//
// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/lex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := lex.NewV2modelsBotLocale(ctx, "example", &lex.V2modelsBotLocaleArgs{
//				BotId:                        pulumi.Any(aws_lexv2models_bot.Test.Id),
//				BotVersion:                   pulumi.String("DRAFT"),
//				LocaleId:                     pulumi.String("en_US"),
//				NLuIntentConfidenceThreshold: pulumi.Float64(0.7),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import Lex V2 Models Bot Locale using the `id`. For example:
//
// ```sh
//
//	$ pulumi import aws:lex/v2modelsBotLocale:V2modelsBotLocale example bot_locale-id-12345678
//
// ```
type V2modelsBotLocale struct {
	pulumi.CustomResourceState

	// Identifier of the bot to create the locale for.
	BotId pulumi.StringOutput `pulumi:"botId"`
	// Version of the bot to create the locale for. This can only be the draft version of the bot.
	BotVersion pulumi.StringOutput `pulumi:"botVersion"`
	// Description of the bot locale. Use this to help identify the bot locale in lists.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Identifier of the language and locale that the bot will be used in. The string must match one of the supported locales. All of the intents, slot types, and slots used in the bot must have the same locale. For more information, see Supported languages (https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html)
	LocaleId pulumi.StringOutput `pulumi:"localeId"`
	// Determines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both when returning alternative intents.
	//
	// The following arguments are optional:
	NLuIntentConfidenceThreshold pulumi.Float64Output `pulumi:"nLuIntentConfidenceThreshold"`
	// Specified locale name.
	Name     pulumi.StringOutput                `pulumi:"name"`
	Timeouts V2modelsBotLocaleTimeoutsPtrOutput `pulumi:"timeouts"`
	// Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user.
	VoiceSettings V2modelsBotLocaleVoiceSettingsPtrOutput `pulumi:"voiceSettings"`
}

// NewV2modelsBotLocale registers a new resource with the given unique name, arguments, and options.
func NewV2modelsBotLocale(ctx *pulumi.Context,
	name string, args *V2modelsBotLocaleArgs, opts ...pulumi.ResourceOption) (*V2modelsBotLocale, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BotId == nil {
		return nil, errors.New("invalid value for required argument 'BotId'")
	}
	if args.BotVersion == nil {
		return nil, errors.New("invalid value for required argument 'BotVersion'")
	}
	if args.LocaleId == nil {
		return nil, errors.New("invalid value for required argument 'LocaleId'")
	}
	if args.NLuIntentConfidenceThreshold == nil {
		return nil, errors.New("invalid value for required argument 'NLuIntentConfidenceThreshold'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource V2modelsBotLocale
	err := ctx.RegisterResource("aws:lex/v2modelsBotLocale:V2modelsBotLocale", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetV2modelsBotLocale gets an existing V2modelsBotLocale resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetV2modelsBotLocale(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *V2modelsBotLocaleState, opts ...pulumi.ResourceOption) (*V2modelsBotLocale, error) {
	var resource V2modelsBotLocale
	err := ctx.ReadResource("aws:lex/v2modelsBotLocale:V2modelsBotLocale", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering V2modelsBotLocale resources.
type v2modelsBotLocaleState struct {
	// Identifier of the bot to create the locale for.
	BotId *string `pulumi:"botId"`
	// Version of the bot to create the locale for. This can only be the draft version of the bot.
	BotVersion *string `pulumi:"botVersion"`
	// Description of the bot locale. Use this to help identify the bot locale in lists.
	Description *string `pulumi:"description"`
	// Identifier of the language and locale that the bot will be used in. The string must match one of the supported locales. All of the intents, slot types, and slots used in the bot must have the same locale. For more information, see Supported languages (https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html)
	LocaleId *string `pulumi:"localeId"`
	// Determines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both when returning alternative intents.
	//
	// The following arguments are optional:
	NLuIntentConfidenceThreshold *float64 `pulumi:"nLuIntentConfidenceThreshold"`
	// Specified locale name.
	Name     *string                    `pulumi:"name"`
	Timeouts *V2modelsBotLocaleTimeouts `pulumi:"timeouts"`
	// Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user.
	VoiceSettings *V2modelsBotLocaleVoiceSettings `pulumi:"voiceSettings"`
}

type V2modelsBotLocaleState struct {
	// Identifier of the bot to create the locale for.
	BotId pulumi.StringPtrInput
	// Version of the bot to create the locale for. This can only be the draft version of the bot.
	BotVersion pulumi.StringPtrInput
	// Description of the bot locale. Use this to help identify the bot locale in lists.
	Description pulumi.StringPtrInput
	// Identifier of the language and locale that the bot will be used in. The string must match one of the supported locales. All of the intents, slot types, and slots used in the bot must have the same locale. For more information, see Supported languages (https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html)
	LocaleId pulumi.StringPtrInput
	// Determines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both when returning alternative intents.
	//
	// The following arguments are optional:
	NLuIntentConfidenceThreshold pulumi.Float64PtrInput
	// Specified locale name.
	Name     pulumi.StringPtrInput
	Timeouts V2modelsBotLocaleTimeoutsPtrInput
	// Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user.
	VoiceSettings V2modelsBotLocaleVoiceSettingsPtrInput
}

func (V2modelsBotLocaleState) ElementType() reflect.Type {
	return reflect.TypeOf((*v2modelsBotLocaleState)(nil)).Elem()
}

type v2modelsBotLocaleArgs struct {
	// Identifier of the bot to create the locale for.
	BotId string `pulumi:"botId"`
	// Version of the bot to create the locale for. This can only be the draft version of the bot.
	BotVersion string `pulumi:"botVersion"`
	// Description of the bot locale. Use this to help identify the bot locale in lists.
	Description *string `pulumi:"description"`
	// Identifier of the language and locale that the bot will be used in. The string must match one of the supported locales. All of the intents, slot types, and slots used in the bot must have the same locale. For more information, see Supported languages (https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html)
	LocaleId string `pulumi:"localeId"`
	// Determines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both when returning alternative intents.
	//
	// The following arguments are optional:
	NLuIntentConfidenceThreshold float64 `pulumi:"nLuIntentConfidenceThreshold"`
	// Specified locale name.
	Name     *string                    `pulumi:"name"`
	Timeouts *V2modelsBotLocaleTimeouts `pulumi:"timeouts"`
	// Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user.
	VoiceSettings *V2modelsBotLocaleVoiceSettings `pulumi:"voiceSettings"`
}

// The set of arguments for constructing a V2modelsBotLocale resource.
type V2modelsBotLocaleArgs struct {
	// Identifier of the bot to create the locale for.
	BotId pulumi.StringInput
	// Version of the bot to create the locale for. This can only be the draft version of the bot.
	BotVersion pulumi.StringInput
	// Description of the bot locale. Use this to help identify the bot locale in lists.
	Description pulumi.StringPtrInput
	// Identifier of the language and locale that the bot will be used in. The string must match one of the supported locales. All of the intents, slot types, and slots used in the bot must have the same locale. For more information, see Supported languages (https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html)
	LocaleId pulumi.StringInput
	// Determines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both when returning alternative intents.
	//
	// The following arguments are optional:
	NLuIntentConfidenceThreshold pulumi.Float64Input
	// Specified locale name.
	Name     pulumi.StringPtrInput
	Timeouts V2modelsBotLocaleTimeoutsPtrInput
	// Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user.
	VoiceSettings V2modelsBotLocaleVoiceSettingsPtrInput
}

func (V2modelsBotLocaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*v2modelsBotLocaleArgs)(nil)).Elem()
}

type V2modelsBotLocaleInput interface {
	pulumi.Input

	ToV2modelsBotLocaleOutput() V2modelsBotLocaleOutput
	ToV2modelsBotLocaleOutputWithContext(ctx context.Context) V2modelsBotLocaleOutput
}

func (*V2modelsBotLocale) ElementType() reflect.Type {
	return reflect.TypeOf((**V2modelsBotLocale)(nil)).Elem()
}

func (i *V2modelsBotLocale) ToV2modelsBotLocaleOutput() V2modelsBotLocaleOutput {
	return i.ToV2modelsBotLocaleOutputWithContext(context.Background())
}

func (i *V2modelsBotLocale) ToV2modelsBotLocaleOutputWithContext(ctx context.Context) V2modelsBotLocaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2modelsBotLocaleOutput)
}

// V2modelsBotLocaleArrayInput is an input type that accepts V2modelsBotLocaleArray and V2modelsBotLocaleArrayOutput values.
// You can construct a concrete instance of `V2modelsBotLocaleArrayInput` via:
//
//	V2modelsBotLocaleArray{ V2modelsBotLocaleArgs{...} }
type V2modelsBotLocaleArrayInput interface {
	pulumi.Input

	ToV2modelsBotLocaleArrayOutput() V2modelsBotLocaleArrayOutput
	ToV2modelsBotLocaleArrayOutputWithContext(context.Context) V2modelsBotLocaleArrayOutput
}

type V2modelsBotLocaleArray []V2modelsBotLocaleInput

func (V2modelsBotLocaleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*V2modelsBotLocale)(nil)).Elem()
}

func (i V2modelsBotLocaleArray) ToV2modelsBotLocaleArrayOutput() V2modelsBotLocaleArrayOutput {
	return i.ToV2modelsBotLocaleArrayOutputWithContext(context.Background())
}

func (i V2modelsBotLocaleArray) ToV2modelsBotLocaleArrayOutputWithContext(ctx context.Context) V2modelsBotLocaleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2modelsBotLocaleArrayOutput)
}

// V2modelsBotLocaleMapInput is an input type that accepts V2modelsBotLocaleMap and V2modelsBotLocaleMapOutput values.
// You can construct a concrete instance of `V2modelsBotLocaleMapInput` via:
//
//	V2modelsBotLocaleMap{ "key": V2modelsBotLocaleArgs{...} }
type V2modelsBotLocaleMapInput interface {
	pulumi.Input

	ToV2modelsBotLocaleMapOutput() V2modelsBotLocaleMapOutput
	ToV2modelsBotLocaleMapOutputWithContext(context.Context) V2modelsBotLocaleMapOutput
}

type V2modelsBotLocaleMap map[string]V2modelsBotLocaleInput

func (V2modelsBotLocaleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*V2modelsBotLocale)(nil)).Elem()
}

func (i V2modelsBotLocaleMap) ToV2modelsBotLocaleMapOutput() V2modelsBotLocaleMapOutput {
	return i.ToV2modelsBotLocaleMapOutputWithContext(context.Background())
}

func (i V2modelsBotLocaleMap) ToV2modelsBotLocaleMapOutputWithContext(ctx context.Context) V2modelsBotLocaleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2modelsBotLocaleMapOutput)
}

type V2modelsBotLocaleOutput struct{ *pulumi.OutputState }

func (V2modelsBotLocaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**V2modelsBotLocale)(nil)).Elem()
}

func (o V2modelsBotLocaleOutput) ToV2modelsBotLocaleOutput() V2modelsBotLocaleOutput {
	return o
}

func (o V2modelsBotLocaleOutput) ToV2modelsBotLocaleOutputWithContext(ctx context.Context) V2modelsBotLocaleOutput {
	return o
}

// Identifier of the bot to create the locale for.
func (o V2modelsBotLocaleOutput) BotId() pulumi.StringOutput {
	return o.ApplyT(func(v *V2modelsBotLocale) pulumi.StringOutput { return v.BotId }).(pulumi.StringOutput)
}

// Version of the bot to create the locale for. This can only be the draft version of the bot.
func (o V2modelsBotLocaleOutput) BotVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *V2modelsBotLocale) pulumi.StringOutput { return v.BotVersion }).(pulumi.StringOutput)
}

// Description of the bot locale. Use this to help identify the bot locale in lists.
func (o V2modelsBotLocaleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V2modelsBotLocale) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Identifier of the language and locale that the bot will be used in. The string must match one of the supported locales. All of the intents, slot types, and slots used in the bot must have the same locale. For more information, see Supported languages (https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html)
func (o V2modelsBotLocaleOutput) LocaleId() pulumi.StringOutput {
	return o.ApplyT(func(v *V2modelsBotLocale) pulumi.StringOutput { return v.LocaleId }).(pulumi.StringOutput)
}

// Determines the threshold where Amazon Lex will insert the AMAZON.FallbackIntent, AMAZON.KendraSearchIntent, or both when returning alternative intents.
//
// The following arguments are optional:
func (o V2modelsBotLocaleOutput) NLuIntentConfidenceThreshold() pulumi.Float64Output {
	return o.ApplyT(func(v *V2modelsBotLocale) pulumi.Float64Output { return v.NLuIntentConfidenceThreshold }).(pulumi.Float64Output)
}

// Specified locale name.
func (o V2modelsBotLocaleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *V2modelsBotLocale) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o V2modelsBotLocaleOutput) Timeouts() V2modelsBotLocaleTimeoutsPtrOutput {
	return o.ApplyT(func(v *V2modelsBotLocale) V2modelsBotLocaleTimeoutsPtrOutput { return v.Timeouts }).(V2modelsBotLocaleTimeoutsPtrOutput)
}

// Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user.
func (o V2modelsBotLocaleOutput) VoiceSettings() V2modelsBotLocaleVoiceSettingsPtrOutput {
	return o.ApplyT(func(v *V2modelsBotLocale) V2modelsBotLocaleVoiceSettingsPtrOutput { return v.VoiceSettings }).(V2modelsBotLocaleVoiceSettingsPtrOutput)
}

type V2modelsBotLocaleArrayOutput struct{ *pulumi.OutputState }

func (V2modelsBotLocaleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*V2modelsBotLocale)(nil)).Elem()
}

func (o V2modelsBotLocaleArrayOutput) ToV2modelsBotLocaleArrayOutput() V2modelsBotLocaleArrayOutput {
	return o
}

func (o V2modelsBotLocaleArrayOutput) ToV2modelsBotLocaleArrayOutputWithContext(ctx context.Context) V2modelsBotLocaleArrayOutput {
	return o
}

func (o V2modelsBotLocaleArrayOutput) Index(i pulumi.IntInput) V2modelsBotLocaleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *V2modelsBotLocale {
		return vs[0].([]*V2modelsBotLocale)[vs[1].(int)]
	}).(V2modelsBotLocaleOutput)
}

type V2modelsBotLocaleMapOutput struct{ *pulumi.OutputState }

func (V2modelsBotLocaleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*V2modelsBotLocale)(nil)).Elem()
}

func (o V2modelsBotLocaleMapOutput) ToV2modelsBotLocaleMapOutput() V2modelsBotLocaleMapOutput {
	return o
}

func (o V2modelsBotLocaleMapOutput) ToV2modelsBotLocaleMapOutputWithContext(ctx context.Context) V2modelsBotLocaleMapOutput {
	return o
}

func (o V2modelsBotLocaleMapOutput) MapIndex(k pulumi.StringInput) V2modelsBotLocaleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *V2modelsBotLocale {
		return vs[0].(map[string]*V2modelsBotLocale)[vs[1].(string)]
	}).(V2modelsBotLocaleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*V2modelsBotLocaleInput)(nil)).Elem(), &V2modelsBotLocale{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2modelsBotLocaleArrayInput)(nil)).Elem(), V2modelsBotLocaleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2modelsBotLocaleMapInput)(nil)).Elem(), V2modelsBotLocaleMap{})
	pulumi.RegisterOutputType(V2modelsBotLocaleOutput{})
	pulumi.RegisterOutputType(V2modelsBotLocaleArrayOutput{})
	pulumi.RegisterOutputType(V2modelsBotLocaleMapOutput{})
}
