// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lex

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS Lex V2 Models Bot Version.
//
// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/lex"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := lex.NewV2modelsBotVersion(ctx, "test", &lex.V2modelsBotVersionArgs{
//				BotId: pulumi.Any(aws_lexv2models.Test.Id),
//				LocaleSpecification: lex.V2modelsBotVersionLocaleSpecificationMap{
//					"en_US": &lex.V2modelsBotVersionLocaleSpecificationArgs{
//						SourceBotVersion: pulumi.String("DRAFT"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import Lex V2 Models Bot Version using the `id`. For example:
//
// ```sh
//
//	$ pulumi import aws:lex/v2modelsBotVersion:V2modelsBotVersion example id-12345678,1
//
// ```
type V2modelsBotVersion struct {
	pulumi.CustomResourceState

	// Idientifier of the bot to create the version for.
	BotId pulumi.StringOutput `pulumi:"botId"`
	// Version number assigned to the version.
	BotVersion pulumi.StringOutput `pulumi:"botVersion"`
	// A description of the version. Use the description to help identify the version in lists.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the locales that Amazon Lex adds to this version. You can choose the draft version or any other previously published version for each locale. When you specify a source version, the locale data is copied from the source version to the new version.
	//
	// The following arguments are optional:
	LocaleSpecification V2modelsBotVersionLocaleSpecificationMapOutput `pulumi:"localeSpecification"`
	Timeouts            V2modelsBotVersionTimeoutsPtrOutput            `pulumi:"timeouts"`
}

// NewV2modelsBotVersion registers a new resource with the given unique name, arguments, and options.
func NewV2modelsBotVersion(ctx *pulumi.Context,
	name string, args *V2modelsBotVersionArgs, opts ...pulumi.ResourceOption) (*V2modelsBotVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BotId == nil {
		return nil, errors.New("invalid value for required argument 'BotId'")
	}
	if args.LocaleSpecification == nil {
		return nil, errors.New("invalid value for required argument 'LocaleSpecification'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource V2modelsBotVersion
	err := ctx.RegisterResource("aws:lex/v2modelsBotVersion:V2modelsBotVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetV2modelsBotVersion gets an existing V2modelsBotVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetV2modelsBotVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *V2modelsBotVersionState, opts ...pulumi.ResourceOption) (*V2modelsBotVersion, error) {
	var resource V2modelsBotVersion
	err := ctx.ReadResource("aws:lex/v2modelsBotVersion:V2modelsBotVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering V2modelsBotVersion resources.
type v2modelsBotVersionState struct {
	// Idientifier of the bot to create the version for.
	BotId *string `pulumi:"botId"`
	// Version number assigned to the version.
	BotVersion *string `pulumi:"botVersion"`
	// A description of the version. Use the description to help identify the version in lists.
	Description *string `pulumi:"description"`
	// Specifies the locales that Amazon Lex adds to this version. You can choose the draft version or any other previously published version for each locale. When you specify a source version, the locale data is copied from the source version to the new version.
	//
	// The following arguments are optional:
	LocaleSpecification map[string]V2modelsBotVersionLocaleSpecification `pulumi:"localeSpecification"`
	Timeouts            *V2modelsBotVersionTimeouts                      `pulumi:"timeouts"`
}

type V2modelsBotVersionState struct {
	// Idientifier of the bot to create the version for.
	BotId pulumi.StringPtrInput
	// Version number assigned to the version.
	BotVersion pulumi.StringPtrInput
	// A description of the version. Use the description to help identify the version in lists.
	Description pulumi.StringPtrInput
	// Specifies the locales that Amazon Lex adds to this version. You can choose the draft version or any other previously published version for each locale. When you specify a source version, the locale data is copied from the source version to the new version.
	//
	// The following arguments are optional:
	LocaleSpecification V2modelsBotVersionLocaleSpecificationMapInput
	Timeouts            V2modelsBotVersionTimeoutsPtrInput
}

func (V2modelsBotVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*v2modelsBotVersionState)(nil)).Elem()
}

type v2modelsBotVersionArgs struct {
	// Idientifier of the bot to create the version for.
	BotId string `pulumi:"botId"`
	// Version number assigned to the version.
	BotVersion *string `pulumi:"botVersion"`
	// A description of the version. Use the description to help identify the version in lists.
	Description *string `pulumi:"description"`
	// Specifies the locales that Amazon Lex adds to this version. You can choose the draft version or any other previously published version for each locale. When you specify a source version, the locale data is copied from the source version to the new version.
	//
	// The following arguments are optional:
	LocaleSpecification map[string]V2modelsBotVersionLocaleSpecification `pulumi:"localeSpecification"`
	Timeouts            *V2modelsBotVersionTimeouts                      `pulumi:"timeouts"`
}

// The set of arguments for constructing a V2modelsBotVersion resource.
type V2modelsBotVersionArgs struct {
	// Idientifier of the bot to create the version for.
	BotId pulumi.StringInput
	// Version number assigned to the version.
	BotVersion pulumi.StringPtrInput
	// A description of the version. Use the description to help identify the version in lists.
	Description pulumi.StringPtrInput
	// Specifies the locales that Amazon Lex adds to this version. You can choose the draft version or any other previously published version for each locale. When you specify a source version, the locale data is copied from the source version to the new version.
	//
	// The following arguments are optional:
	LocaleSpecification V2modelsBotVersionLocaleSpecificationMapInput
	Timeouts            V2modelsBotVersionTimeoutsPtrInput
}

func (V2modelsBotVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*v2modelsBotVersionArgs)(nil)).Elem()
}

type V2modelsBotVersionInput interface {
	pulumi.Input

	ToV2modelsBotVersionOutput() V2modelsBotVersionOutput
	ToV2modelsBotVersionOutputWithContext(ctx context.Context) V2modelsBotVersionOutput
}

func (*V2modelsBotVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**V2modelsBotVersion)(nil)).Elem()
}

func (i *V2modelsBotVersion) ToV2modelsBotVersionOutput() V2modelsBotVersionOutput {
	return i.ToV2modelsBotVersionOutputWithContext(context.Background())
}

func (i *V2modelsBotVersion) ToV2modelsBotVersionOutputWithContext(ctx context.Context) V2modelsBotVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2modelsBotVersionOutput)
}

// V2modelsBotVersionArrayInput is an input type that accepts V2modelsBotVersionArray and V2modelsBotVersionArrayOutput values.
// You can construct a concrete instance of `V2modelsBotVersionArrayInput` via:
//
//	V2modelsBotVersionArray{ V2modelsBotVersionArgs{...} }
type V2modelsBotVersionArrayInput interface {
	pulumi.Input

	ToV2modelsBotVersionArrayOutput() V2modelsBotVersionArrayOutput
	ToV2modelsBotVersionArrayOutputWithContext(context.Context) V2modelsBotVersionArrayOutput
}

type V2modelsBotVersionArray []V2modelsBotVersionInput

func (V2modelsBotVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*V2modelsBotVersion)(nil)).Elem()
}

func (i V2modelsBotVersionArray) ToV2modelsBotVersionArrayOutput() V2modelsBotVersionArrayOutput {
	return i.ToV2modelsBotVersionArrayOutputWithContext(context.Background())
}

func (i V2modelsBotVersionArray) ToV2modelsBotVersionArrayOutputWithContext(ctx context.Context) V2modelsBotVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2modelsBotVersionArrayOutput)
}

// V2modelsBotVersionMapInput is an input type that accepts V2modelsBotVersionMap and V2modelsBotVersionMapOutput values.
// You can construct a concrete instance of `V2modelsBotVersionMapInput` via:
//
//	V2modelsBotVersionMap{ "key": V2modelsBotVersionArgs{...} }
type V2modelsBotVersionMapInput interface {
	pulumi.Input

	ToV2modelsBotVersionMapOutput() V2modelsBotVersionMapOutput
	ToV2modelsBotVersionMapOutputWithContext(context.Context) V2modelsBotVersionMapOutput
}

type V2modelsBotVersionMap map[string]V2modelsBotVersionInput

func (V2modelsBotVersionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*V2modelsBotVersion)(nil)).Elem()
}

func (i V2modelsBotVersionMap) ToV2modelsBotVersionMapOutput() V2modelsBotVersionMapOutput {
	return i.ToV2modelsBotVersionMapOutputWithContext(context.Background())
}

func (i V2modelsBotVersionMap) ToV2modelsBotVersionMapOutputWithContext(ctx context.Context) V2modelsBotVersionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(V2modelsBotVersionMapOutput)
}

type V2modelsBotVersionOutput struct{ *pulumi.OutputState }

func (V2modelsBotVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**V2modelsBotVersion)(nil)).Elem()
}

func (o V2modelsBotVersionOutput) ToV2modelsBotVersionOutput() V2modelsBotVersionOutput {
	return o
}

func (o V2modelsBotVersionOutput) ToV2modelsBotVersionOutputWithContext(ctx context.Context) V2modelsBotVersionOutput {
	return o
}

// Idientifier of the bot to create the version for.
func (o V2modelsBotVersionOutput) BotId() pulumi.StringOutput {
	return o.ApplyT(func(v *V2modelsBotVersion) pulumi.StringOutput { return v.BotId }).(pulumi.StringOutput)
}

// Version number assigned to the version.
func (o V2modelsBotVersionOutput) BotVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *V2modelsBotVersion) pulumi.StringOutput { return v.BotVersion }).(pulumi.StringOutput)
}

// A description of the version. Use the description to help identify the version in lists.
func (o V2modelsBotVersionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *V2modelsBotVersion) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies the locales that Amazon Lex adds to this version. You can choose the draft version or any other previously published version for each locale. When you specify a source version, the locale data is copied from the source version to the new version.
//
// The following arguments are optional:
func (o V2modelsBotVersionOutput) LocaleSpecification() V2modelsBotVersionLocaleSpecificationMapOutput {
	return o.ApplyT(func(v *V2modelsBotVersion) V2modelsBotVersionLocaleSpecificationMapOutput {
		return v.LocaleSpecification
	}).(V2modelsBotVersionLocaleSpecificationMapOutput)
}

func (o V2modelsBotVersionOutput) Timeouts() V2modelsBotVersionTimeoutsPtrOutput {
	return o.ApplyT(func(v *V2modelsBotVersion) V2modelsBotVersionTimeoutsPtrOutput { return v.Timeouts }).(V2modelsBotVersionTimeoutsPtrOutput)
}

type V2modelsBotVersionArrayOutput struct{ *pulumi.OutputState }

func (V2modelsBotVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*V2modelsBotVersion)(nil)).Elem()
}

func (o V2modelsBotVersionArrayOutput) ToV2modelsBotVersionArrayOutput() V2modelsBotVersionArrayOutput {
	return o
}

func (o V2modelsBotVersionArrayOutput) ToV2modelsBotVersionArrayOutputWithContext(ctx context.Context) V2modelsBotVersionArrayOutput {
	return o
}

func (o V2modelsBotVersionArrayOutput) Index(i pulumi.IntInput) V2modelsBotVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *V2modelsBotVersion {
		return vs[0].([]*V2modelsBotVersion)[vs[1].(int)]
	}).(V2modelsBotVersionOutput)
}

type V2modelsBotVersionMapOutput struct{ *pulumi.OutputState }

func (V2modelsBotVersionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*V2modelsBotVersion)(nil)).Elem()
}

func (o V2modelsBotVersionMapOutput) ToV2modelsBotVersionMapOutput() V2modelsBotVersionMapOutput {
	return o
}

func (o V2modelsBotVersionMapOutput) ToV2modelsBotVersionMapOutputWithContext(ctx context.Context) V2modelsBotVersionMapOutput {
	return o
}

func (o V2modelsBotVersionMapOutput) MapIndex(k pulumi.StringInput) V2modelsBotVersionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *V2modelsBotVersion {
		return vs[0].(map[string]*V2modelsBotVersion)[vs[1].(string)]
	}).(V2modelsBotVersionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*V2modelsBotVersionInput)(nil)).Elem(), &V2modelsBotVersion{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2modelsBotVersionArrayInput)(nil)).Elem(), V2modelsBotVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*V2modelsBotVersionMapInput)(nil)).Elem(), V2modelsBotVersionMap{})
	pulumi.RegisterOutputType(V2modelsBotVersionOutput{})
	pulumi.RegisterOutputType(V2modelsBotVersionArrayOutput{})
	pulumi.RegisterOutputType(V2modelsBotVersionMapOutput{})
}
