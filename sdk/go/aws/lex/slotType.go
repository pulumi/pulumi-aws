// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package lex

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides an Amazon Lex Slot Type resource. For more information see
// [Amazon Lex: How It Works](https://docs.aws.amazon.com/lex/latest/dg/how-it-works.html)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v3/go/aws/lex"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := lex.NewSlotType(ctx, "flowerTypes", &lex.SlotTypeArgs{
// 			CreateVersion: pulumi.Bool(true),
// 			Description:   pulumi.String("Types of flowers to order"),
// 			EnumerationValues: lex.SlotTypeEnumerationValueArray{
// 				&lex.SlotTypeEnumerationValueArgs{
// 					Synonyms: pulumi.StringArray{
// 						pulumi.String("Lirium"),
// 						pulumi.String("Martagon"),
// 					},
// 					Value: pulumi.String("lilies"),
// 				},
// 				&lex.SlotTypeEnumerationValueArgs{
// 					Synonyms: pulumi.StringArray{
// 						pulumi.String("Eduardoregelia"),
// 						pulumi.String("Podonix"),
// 					},
// 					Value: pulumi.String("tulips"),
// 				},
// 			},
// 			Name:                   pulumi.String("FlowerTypes"),
// 			ValueSelectionStrategy: pulumi.String("ORIGINAL_VALUE"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Slot types can be imported using their name.
//
// ```sh
//  $ pulumi import aws:lex/slotType:SlotType flower_types FlowerTypes
// ```
type SlotType struct {
	pulumi.CustomResourceState

	// Checksum identifying the version of the slot type that was created. The checksum is
	// not included as an argument because the resource will add it automatically when updating the slot type.
	Checksum pulumi.StringOutput `pulumi:"checksum"`
	// Determines if a new slot type version is created when the initial resource is created and on each
	// update. Defaults to `false`.
	CreateVersion pulumi.BoolPtrOutput `pulumi:"createVersion"`
	// The date when the slot type version was created.
	CreatedDate pulumi.StringOutput `pulumi:"createdDate"`
	// A description of the slot type. Must be less than or equal to 200 characters in length.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A list of EnumerationValue objects that defines the values that
	// the slot type can take. Each value can have a list of synonyms, which are additional values that help
	// train the machine learning model about the values that it resolves for a slot. Attributes are
	// documented under enumeration_value.
	EnumerationValues SlotTypeEnumerationValueArrayOutput `pulumi:"enumerationValues"`
	// The date when the `$LATEST` version of this slot type was updated.
	LastUpdatedDate pulumi.StringOutput `pulumi:"lastUpdatedDate"`
	// The name of the slot type. The name is not case sensitive. Must be less than or equal to 100 characters in length.
	Name pulumi.StringOutput `pulumi:"name"`
	// Determines the slot resolution strategy that Amazon Lex
	// uses to return slot type values. `ORIGINAL_VALUE` returns the value entered by the user if the user
	// value is similar to the slot value. `TOP_RESOLUTION` returns the first value in the resolution list
	// if there is a resolution list for the slot, otherwise null is returned. Defaults to `ORIGINAL_VALUE`.
	ValueSelectionStrategy pulumi.StringPtrOutput `pulumi:"valueSelectionStrategy"`
	// The version of the slot type.
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewSlotType registers a new resource with the given unique name, arguments, and options.
func NewSlotType(ctx *pulumi.Context,
	name string, args *SlotTypeArgs, opts ...pulumi.ResourceOption) (*SlotType, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnumerationValues == nil {
		return nil, errors.New("invalid value for required argument 'EnumerationValues'")
	}
	var resource SlotType
	err := ctx.RegisterResource("aws:lex/slotType:SlotType", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSlotType gets an existing SlotType resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSlotType(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SlotTypeState, opts ...pulumi.ResourceOption) (*SlotType, error) {
	var resource SlotType
	err := ctx.ReadResource("aws:lex/slotType:SlotType", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SlotType resources.
type slotTypeState struct {
	// Checksum identifying the version of the slot type that was created. The checksum is
	// not included as an argument because the resource will add it automatically when updating the slot type.
	Checksum *string `pulumi:"checksum"`
	// Determines if a new slot type version is created when the initial resource is created and on each
	// update. Defaults to `false`.
	CreateVersion *bool `pulumi:"createVersion"`
	// The date when the slot type version was created.
	CreatedDate *string `pulumi:"createdDate"`
	// A description of the slot type. Must be less than or equal to 200 characters in length.
	Description *string `pulumi:"description"`
	// A list of EnumerationValue objects that defines the values that
	// the slot type can take. Each value can have a list of synonyms, which are additional values that help
	// train the machine learning model about the values that it resolves for a slot. Attributes are
	// documented under enumeration_value.
	EnumerationValues []SlotTypeEnumerationValue `pulumi:"enumerationValues"`
	// The date when the `$LATEST` version of this slot type was updated.
	LastUpdatedDate *string `pulumi:"lastUpdatedDate"`
	// The name of the slot type. The name is not case sensitive. Must be less than or equal to 100 characters in length.
	Name *string `pulumi:"name"`
	// Determines the slot resolution strategy that Amazon Lex
	// uses to return slot type values. `ORIGINAL_VALUE` returns the value entered by the user if the user
	// value is similar to the slot value. `TOP_RESOLUTION` returns the first value in the resolution list
	// if there is a resolution list for the slot, otherwise null is returned. Defaults to `ORIGINAL_VALUE`.
	ValueSelectionStrategy *string `pulumi:"valueSelectionStrategy"`
	// The version of the slot type.
	Version *string `pulumi:"version"`
}

type SlotTypeState struct {
	// Checksum identifying the version of the slot type that was created. The checksum is
	// not included as an argument because the resource will add it automatically when updating the slot type.
	Checksum pulumi.StringPtrInput
	// Determines if a new slot type version is created when the initial resource is created and on each
	// update. Defaults to `false`.
	CreateVersion pulumi.BoolPtrInput
	// The date when the slot type version was created.
	CreatedDate pulumi.StringPtrInput
	// A description of the slot type. Must be less than or equal to 200 characters in length.
	Description pulumi.StringPtrInput
	// A list of EnumerationValue objects that defines the values that
	// the slot type can take. Each value can have a list of synonyms, which are additional values that help
	// train the machine learning model about the values that it resolves for a slot. Attributes are
	// documented under enumeration_value.
	EnumerationValues SlotTypeEnumerationValueArrayInput
	// The date when the `$LATEST` version of this slot type was updated.
	LastUpdatedDate pulumi.StringPtrInput
	// The name of the slot type. The name is not case sensitive. Must be less than or equal to 100 characters in length.
	Name pulumi.StringPtrInput
	// Determines the slot resolution strategy that Amazon Lex
	// uses to return slot type values. `ORIGINAL_VALUE` returns the value entered by the user if the user
	// value is similar to the slot value. `TOP_RESOLUTION` returns the first value in the resolution list
	// if there is a resolution list for the slot, otherwise null is returned. Defaults to `ORIGINAL_VALUE`.
	ValueSelectionStrategy pulumi.StringPtrInput
	// The version of the slot type.
	Version pulumi.StringPtrInput
}

func (SlotTypeState) ElementType() reflect.Type {
	return reflect.TypeOf((*slotTypeState)(nil)).Elem()
}

type slotTypeArgs struct {
	// Determines if a new slot type version is created when the initial resource is created and on each
	// update. Defaults to `false`.
	CreateVersion *bool `pulumi:"createVersion"`
	// A description of the slot type. Must be less than or equal to 200 characters in length.
	Description *string `pulumi:"description"`
	// A list of EnumerationValue objects that defines the values that
	// the slot type can take. Each value can have a list of synonyms, which are additional values that help
	// train the machine learning model about the values that it resolves for a slot. Attributes are
	// documented under enumeration_value.
	EnumerationValues []SlotTypeEnumerationValue `pulumi:"enumerationValues"`
	// The name of the slot type. The name is not case sensitive. Must be less than or equal to 100 characters in length.
	Name *string `pulumi:"name"`
	// Determines the slot resolution strategy that Amazon Lex
	// uses to return slot type values. `ORIGINAL_VALUE` returns the value entered by the user if the user
	// value is similar to the slot value. `TOP_RESOLUTION` returns the first value in the resolution list
	// if there is a resolution list for the slot, otherwise null is returned. Defaults to `ORIGINAL_VALUE`.
	ValueSelectionStrategy *string `pulumi:"valueSelectionStrategy"`
}

// The set of arguments for constructing a SlotType resource.
type SlotTypeArgs struct {
	// Determines if a new slot type version is created when the initial resource is created and on each
	// update. Defaults to `false`.
	CreateVersion pulumi.BoolPtrInput
	// A description of the slot type. Must be less than or equal to 200 characters in length.
	Description pulumi.StringPtrInput
	// A list of EnumerationValue objects that defines the values that
	// the slot type can take. Each value can have a list of synonyms, which are additional values that help
	// train the machine learning model about the values that it resolves for a slot. Attributes are
	// documented under enumeration_value.
	EnumerationValues SlotTypeEnumerationValueArrayInput
	// The name of the slot type. The name is not case sensitive. Must be less than or equal to 100 characters in length.
	Name pulumi.StringPtrInput
	// Determines the slot resolution strategy that Amazon Lex
	// uses to return slot type values. `ORIGINAL_VALUE` returns the value entered by the user if the user
	// value is similar to the slot value. `TOP_RESOLUTION` returns the first value in the resolution list
	// if there is a resolution list for the slot, otherwise null is returned. Defaults to `ORIGINAL_VALUE`.
	ValueSelectionStrategy pulumi.StringPtrInput
}

func (SlotTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*slotTypeArgs)(nil)).Elem()
}

type SlotTypeInput interface {
	pulumi.Input

	ToSlotTypeOutput() SlotTypeOutput
	ToSlotTypeOutputWithContext(ctx context.Context) SlotTypeOutput
}

func (SlotType) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotType)(nil)).Elem()
}

func (i SlotType) ToSlotTypeOutput() SlotTypeOutput {
	return i.ToSlotTypeOutputWithContext(context.Background())
}

func (i SlotType) ToSlotTypeOutputWithContext(ctx context.Context) SlotTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SlotTypeOutput)
}

type SlotTypeOutput struct {
	*pulumi.OutputState
}

func (SlotTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SlotTypeOutput)(nil)).Elem()
}

func (o SlotTypeOutput) ToSlotTypeOutput() SlotTypeOutput {
	return o
}

func (o SlotTypeOutput) ToSlotTypeOutputWithContext(ctx context.Context) SlotTypeOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(SlotTypeOutput{})
}
