// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redshift

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type EndpointAuthorization struct {
	pulumi.CustomResourceState

	Account           pulumi.StringOutput      `pulumi:"account"`
	AllowedAllVpcs    pulumi.BoolOutput        `pulumi:"allowedAllVpcs"`
	ClusterIdentifier pulumi.StringOutput      `pulumi:"clusterIdentifier"`
	EndpointCount     pulumi.IntOutput         `pulumi:"endpointCount"`
	ForceDelete       pulumi.BoolPtrOutput     `pulumi:"forceDelete"`
	Grantee           pulumi.StringOutput      `pulumi:"grantee"`
	Grantor           pulumi.StringOutput      `pulumi:"grantor"`
	VpcIds            pulumi.StringArrayOutput `pulumi:"vpcIds"`
}

// NewEndpointAuthorization registers a new resource with the given unique name, arguments, and options.
func NewEndpointAuthorization(ctx *pulumi.Context,
	name string, args *EndpointAuthorizationArgs, opts ...pulumi.ResourceOption) (*EndpointAuthorization, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Account == nil {
		return nil, errors.New("invalid value for required argument 'Account'")
	}
	if args.ClusterIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'ClusterIdentifier'")
	}
	var resource EndpointAuthorization
	err := ctx.RegisterResource("aws:redshift/endpointAuthorization:EndpointAuthorization", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEndpointAuthorization gets an existing EndpointAuthorization resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEndpointAuthorization(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EndpointAuthorizationState, opts ...pulumi.ResourceOption) (*EndpointAuthorization, error) {
	var resource EndpointAuthorization
	err := ctx.ReadResource("aws:redshift/endpointAuthorization:EndpointAuthorization", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EndpointAuthorization resources.
type endpointAuthorizationState struct {
	Account           *string  `pulumi:"account"`
	AllowedAllVpcs    *bool    `pulumi:"allowedAllVpcs"`
	ClusterIdentifier *string  `pulumi:"clusterIdentifier"`
	EndpointCount     *int     `pulumi:"endpointCount"`
	ForceDelete       *bool    `pulumi:"forceDelete"`
	Grantee           *string  `pulumi:"grantee"`
	Grantor           *string  `pulumi:"grantor"`
	VpcIds            []string `pulumi:"vpcIds"`
}

type EndpointAuthorizationState struct {
	Account           pulumi.StringPtrInput
	AllowedAllVpcs    pulumi.BoolPtrInput
	ClusterIdentifier pulumi.StringPtrInput
	EndpointCount     pulumi.IntPtrInput
	ForceDelete       pulumi.BoolPtrInput
	Grantee           pulumi.StringPtrInput
	Grantor           pulumi.StringPtrInput
	VpcIds            pulumi.StringArrayInput
}

func (EndpointAuthorizationState) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointAuthorizationState)(nil)).Elem()
}

type endpointAuthorizationArgs struct {
	Account           string   `pulumi:"account"`
	ClusterIdentifier string   `pulumi:"clusterIdentifier"`
	ForceDelete       *bool    `pulumi:"forceDelete"`
	VpcIds            []string `pulumi:"vpcIds"`
}

// The set of arguments for constructing a EndpointAuthorization resource.
type EndpointAuthorizationArgs struct {
	Account           pulumi.StringInput
	ClusterIdentifier pulumi.StringInput
	ForceDelete       pulumi.BoolPtrInput
	VpcIds            pulumi.StringArrayInput
}

func (EndpointAuthorizationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointAuthorizationArgs)(nil)).Elem()
}

type EndpointAuthorizationInput interface {
	pulumi.Input

	ToEndpointAuthorizationOutput() EndpointAuthorizationOutput
	ToEndpointAuthorizationOutputWithContext(ctx context.Context) EndpointAuthorizationOutput
}

func (*EndpointAuthorization) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointAuthorization)(nil)).Elem()
}

func (i *EndpointAuthorization) ToEndpointAuthorizationOutput() EndpointAuthorizationOutput {
	return i.ToEndpointAuthorizationOutputWithContext(context.Background())
}

func (i *EndpointAuthorization) ToEndpointAuthorizationOutputWithContext(ctx context.Context) EndpointAuthorizationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointAuthorizationOutput)
}

// EndpointAuthorizationArrayInput is an input type that accepts EndpointAuthorizationArray and EndpointAuthorizationArrayOutput values.
// You can construct a concrete instance of `EndpointAuthorizationArrayInput` via:
//
//	EndpointAuthorizationArray{ EndpointAuthorizationArgs{...} }
type EndpointAuthorizationArrayInput interface {
	pulumi.Input

	ToEndpointAuthorizationArrayOutput() EndpointAuthorizationArrayOutput
	ToEndpointAuthorizationArrayOutputWithContext(context.Context) EndpointAuthorizationArrayOutput
}

type EndpointAuthorizationArray []EndpointAuthorizationInput

func (EndpointAuthorizationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EndpointAuthorization)(nil)).Elem()
}

func (i EndpointAuthorizationArray) ToEndpointAuthorizationArrayOutput() EndpointAuthorizationArrayOutput {
	return i.ToEndpointAuthorizationArrayOutputWithContext(context.Background())
}

func (i EndpointAuthorizationArray) ToEndpointAuthorizationArrayOutputWithContext(ctx context.Context) EndpointAuthorizationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointAuthorizationArrayOutput)
}

// EndpointAuthorizationMapInput is an input type that accepts EndpointAuthorizationMap and EndpointAuthorizationMapOutput values.
// You can construct a concrete instance of `EndpointAuthorizationMapInput` via:
//
//	EndpointAuthorizationMap{ "key": EndpointAuthorizationArgs{...} }
type EndpointAuthorizationMapInput interface {
	pulumi.Input

	ToEndpointAuthorizationMapOutput() EndpointAuthorizationMapOutput
	ToEndpointAuthorizationMapOutputWithContext(context.Context) EndpointAuthorizationMapOutput
}

type EndpointAuthorizationMap map[string]EndpointAuthorizationInput

func (EndpointAuthorizationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EndpointAuthorization)(nil)).Elem()
}

func (i EndpointAuthorizationMap) ToEndpointAuthorizationMapOutput() EndpointAuthorizationMapOutput {
	return i.ToEndpointAuthorizationMapOutputWithContext(context.Background())
}

func (i EndpointAuthorizationMap) ToEndpointAuthorizationMapOutputWithContext(ctx context.Context) EndpointAuthorizationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointAuthorizationMapOutput)
}

type EndpointAuthorizationOutput struct{ *pulumi.OutputState }

func (EndpointAuthorizationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointAuthorization)(nil)).Elem()
}

func (o EndpointAuthorizationOutput) ToEndpointAuthorizationOutput() EndpointAuthorizationOutput {
	return o
}

func (o EndpointAuthorizationOutput) ToEndpointAuthorizationOutputWithContext(ctx context.Context) EndpointAuthorizationOutput {
	return o
}

func (o EndpointAuthorizationOutput) Account() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointAuthorization) pulumi.StringOutput { return v.Account }).(pulumi.StringOutput)
}

func (o EndpointAuthorizationOutput) AllowedAllVpcs() pulumi.BoolOutput {
	return o.ApplyT(func(v *EndpointAuthorization) pulumi.BoolOutput { return v.AllowedAllVpcs }).(pulumi.BoolOutput)
}

func (o EndpointAuthorizationOutput) ClusterIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointAuthorization) pulumi.StringOutput { return v.ClusterIdentifier }).(pulumi.StringOutput)
}

func (o EndpointAuthorizationOutput) EndpointCount() pulumi.IntOutput {
	return o.ApplyT(func(v *EndpointAuthorization) pulumi.IntOutput { return v.EndpointCount }).(pulumi.IntOutput)
}

func (o EndpointAuthorizationOutput) ForceDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointAuthorization) pulumi.BoolPtrOutput { return v.ForceDelete }).(pulumi.BoolPtrOutput)
}

func (o EndpointAuthorizationOutput) Grantee() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointAuthorization) pulumi.StringOutput { return v.Grantee }).(pulumi.StringOutput)
}

func (o EndpointAuthorizationOutput) Grantor() pulumi.StringOutput {
	return o.ApplyT(func(v *EndpointAuthorization) pulumi.StringOutput { return v.Grantor }).(pulumi.StringOutput)
}

func (o EndpointAuthorizationOutput) VpcIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EndpointAuthorization) pulumi.StringArrayOutput { return v.VpcIds }).(pulumi.StringArrayOutput)
}

type EndpointAuthorizationArrayOutput struct{ *pulumi.OutputState }

func (EndpointAuthorizationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EndpointAuthorization)(nil)).Elem()
}

func (o EndpointAuthorizationArrayOutput) ToEndpointAuthorizationArrayOutput() EndpointAuthorizationArrayOutput {
	return o
}

func (o EndpointAuthorizationArrayOutput) ToEndpointAuthorizationArrayOutputWithContext(ctx context.Context) EndpointAuthorizationArrayOutput {
	return o
}

func (o EndpointAuthorizationArrayOutput) Index(i pulumi.IntInput) EndpointAuthorizationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EndpointAuthorization {
		return vs[0].([]*EndpointAuthorization)[vs[1].(int)]
	}).(EndpointAuthorizationOutput)
}

type EndpointAuthorizationMapOutput struct{ *pulumi.OutputState }

func (EndpointAuthorizationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EndpointAuthorization)(nil)).Elem()
}

func (o EndpointAuthorizationMapOutput) ToEndpointAuthorizationMapOutput() EndpointAuthorizationMapOutput {
	return o
}

func (o EndpointAuthorizationMapOutput) ToEndpointAuthorizationMapOutputWithContext(ctx context.Context) EndpointAuthorizationMapOutput {
	return o
}

func (o EndpointAuthorizationMapOutput) MapIndex(k pulumi.StringInput) EndpointAuthorizationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EndpointAuthorization {
		return vs[0].(map[string]*EndpointAuthorization)[vs[1].(string)]
	}).(EndpointAuthorizationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointAuthorizationInput)(nil)).Elem(), &EndpointAuthorization{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointAuthorizationArrayInput)(nil)).Elem(), EndpointAuthorizationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointAuthorizationMapInput)(nil)).Elem(), EndpointAuthorizationMap{})
	pulumi.RegisterOutputType(EndpointAuthorizationOutput{})
	pulumi.RegisterOutputType(EndpointAuthorizationArrayOutput{})
	pulumi.RegisterOutputType(EndpointAuthorizationMapOutput{})
}
