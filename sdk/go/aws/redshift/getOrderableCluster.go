// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redshift

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetOrderableCluster(ctx *pulumi.Context, args *GetOrderableClusterArgs, opts ...pulumi.InvokeOption) (*GetOrderableClusterResult, error) {
	var rv GetOrderableClusterResult
	err := ctx.Invoke("aws:redshift/getOrderableCluster:getOrderableCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrderableCluster.
type GetOrderableClusterArgs struct {
	ClusterType        *string  `pulumi:"clusterType"`
	ClusterVersion     *string  `pulumi:"clusterVersion"`
	NodeType           *string  `pulumi:"nodeType"`
	PreferredNodeTypes []string `pulumi:"preferredNodeTypes"`
}

// A collection of values returned by getOrderableCluster.
type GetOrderableClusterResult struct {
	AvailabilityZones []string `pulumi:"availabilityZones"`
	ClusterType       string   `pulumi:"clusterType"`
	ClusterVersion    string   `pulumi:"clusterVersion"`
	// The provider-assigned unique ID for this managed resource.
	Id                 string   `pulumi:"id"`
	NodeType           string   `pulumi:"nodeType"`
	PreferredNodeTypes []string `pulumi:"preferredNodeTypes"`
}

func GetOrderableClusterOutput(ctx *pulumi.Context, args GetOrderableClusterOutputArgs, opts ...pulumi.InvokeOption) GetOrderableClusterResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetOrderableClusterResult, error) {
			args := v.(GetOrderableClusterArgs)
			r, err := GetOrderableCluster(ctx, &args, opts...)
			var s GetOrderableClusterResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetOrderableClusterResultOutput)
}

// A collection of arguments for invoking getOrderableCluster.
type GetOrderableClusterOutputArgs struct {
	ClusterType        pulumi.StringPtrInput   `pulumi:"clusterType"`
	ClusterVersion     pulumi.StringPtrInput   `pulumi:"clusterVersion"`
	NodeType           pulumi.StringPtrInput   `pulumi:"nodeType"`
	PreferredNodeTypes pulumi.StringArrayInput `pulumi:"preferredNodeTypes"`
}

func (GetOrderableClusterOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrderableClusterArgs)(nil)).Elem()
}

// A collection of values returned by getOrderableCluster.
type GetOrderableClusterResultOutput struct{ *pulumi.OutputState }

func (GetOrderableClusterResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrderableClusterResult)(nil)).Elem()
}

func (o GetOrderableClusterResultOutput) ToGetOrderableClusterResultOutput() GetOrderableClusterResultOutput {
	return o
}

func (o GetOrderableClusterResultOutput) ToGetOrderableClusterResultOutputWithContext(ctx context.Context) GetOrderableClusterResultOutput {
	return o
}

func (o GetOrderableClusterResultOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOrderableClusterResult) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

func (o GetOrderableClusterResultOutput) ClusterType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrderableClusterResult) string { return v.ClusterType }).(pulumi.StringOutput)
}

func (o GetOrderableClusterResultOutput) ClusterVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrderableClusterResult) string { return v.ClusterVersion }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetOrderableClusterResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrderableClusterResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetOrderableClusterResultOutput) NodeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrderableClusterResult) string { return v.NodeType }).(pulumi.StringOutput)
}

func (o GetOrderableClusterResultOutput) PreferredNodeTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOrderableClusterResult) []string { return v.PreferredNodeTypes }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOrderableClusterResultOutput{})
}
