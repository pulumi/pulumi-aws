// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redshift

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type HsmClientCertificate struct {
	pulumi.CustomResourceState

	Arn                            pulumi.StringOutput    `pulumi:"arn"`
	HsmClientCertificateIdentifier pulumi.StringOutput    `pulumi:"hsmClientCertificateIdentifier"`
	HsmClientCertificatePublicKey  pulumi.StringOutput    `pulumi:"hsmClientCertificatePublicKey"`
	Tags                           pulumi.StringMapOutput `pulumi:"tags"`
	TagsAll                        pulumi.StringMapOutput `pulumi:"tagsAll"`
}

// NewHsmClientCertificate registers a new resource with the given unique name, arguments, and options.
func NewHsmClientCertificate(ctx *pulumi.Context,
	name string, args *HsmClientCertificateArgs, opts ...pulumi.ResourceOption) (*HsmClientCertificate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.HsmClientCertificateIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'HsmClientCertificateIdentifier'")
	}
	var resource HsmClientCertificate
	err := ctx.RegisterResource("aws:redshift/hsmClientCertificate:HsmClientCertificate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHsmClientCertificate gets an existing HsmClientCertificate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHsmClientCertificate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HsmClientCertificateState, opts ...pulumi.ResourceOption) (*HsmClientCertificate, error) {
	var resource HsmClientCertificate
	err := ctx.ReadResource("aws:redshift/hsmClientCertificate:HsmClientCertificate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HsmClientCertificate resources.
type hsmClientCertificateState struct {
	Arn                            *string           `pulumi:"arn"`
	HsmClientCertificateIdentifier *string           `pulumi:"hsmClientCertificateIdentifier"`
	HsmClientCertificatePublicKey  *string           `pulumi:"hsmClientCertificatePublicKey"`
	Tags                           map[string]string `pulumi:"tags"`
	TagsAll                        map[string]string `pulumi:"tagsAll"`
}

type HsmClientCertificateState struct {
	Arn                            pulumi.StringPtrInput
	HsmClientCertificateIdentifier pulumi.StringPtrInput
	HsmClientCertificatePublicKey  pulumi.StringPtrInput
	Tags                           pulumi.StringMapInput
	TagsAll                        pulumi.StringMapInput
}

func (HsmClientCertificateState) ElementType() reflect.Type {
	return reflect.TypeOf((*hsmClientCertificateState)(nil)).Elem()
}

type hsmClientCertificateArgs struct {
	HsmClientCertificateIdentifier string            `pulumi:"hsmClientCertificateIdentifier"`
	Tags                           map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a HsmClientCertificate resource.
type HsmClientCertificateArgs struct {
	HsmClientCertificateIdentifier pulumi.StringInput
	Tags                           pulumi.StringMapInput
}

func (HsmClientCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hsmClientCertificateArgs)(nil)).Elem()
}

type HsmClientCertificateInput interface {
	pulumi.Input

	ToHsmClientCertificateOutput() HsmClientCertificateOutput
	ToHsmClientCertificateOutputWithContext(ctx context.Context) HsmClientCertificateOutput
}

func (*HsmClientCertificate) ElementType() reflect.Type {
	return reflect.TypeOf((**HsmClientCertificate)(nil)).Elem()
}

func (i *HsmClientCertificate) ToHsmClientCertificateOutput() HsmClientCertificateOutput {
	return i.ToHsmClientCertificateOutputWithContext(context.Background())
}

func (i *HsmClientCertificate) ToHsmClientCertificateOutputWithContext(ctx context.Context) HsmClientCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HsmClientCertificateOutput)
}

// HsmClientCertificateArrayInput is an input type that accepts HsmClientCertificateArray and HsmClientCertificateArrayOutput values.
// You can construct a concrete instance of `HsmClientCertificateArrayInput` via:
//
//	HsmClientCertificateArray{ HsmClientCertificateArgs{...} }
type HsmClientCertificateArrayInput interface {
	pulumi.Input

	ToHsmClientCertificateArrayOutput() HsmClientCertificateArrayOutput
	ToHsmClientCertificateArrayOutputWithContext(context.Context) HsmClientCertificateArrayOutput
}

type HsmClientCertificateArray []HsmClientCertificateInput

func (HsmClientCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HsmClientCertificate)(nil)).Elem()
}

func (i HsmClientCertificateArray) ToHsmClientCertificateArrayOutput() HsmClientCertificateArrayOutput {
	return i.ToHsmClientCertificateArrayOutputWithContext(context.Background())
}

func (i HsmClientCertificateArray) ToHsmClientCertificateArrayOutputWithContext(ctx context.Context) HsmClientCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HsmClientCertificateArrayOutput)
}

// HsmClientCertificateMapInput is an input type that accepts HsmClientCertificateMap and HsmClientCertificateMapOutput values.
// You can construct a concrete instance of `HsmClientCertificateMapInput` via:
//
//	HsmClientCertificateMap{ "key": HsmClientCertificateArgs{...} }
type HsmClientCertificateMapInput interface {
	pulumi.Input

	ToHsmClientCertificateMapOutput() HsmClientCertificateMapOutput
	ToHsmClientCertificateMapOutputWithContext(context.Context) HsmClientCertificateMapOutput
}

type HsmClientCertificateMap map[string]HsmClientCertificateInput

func (HsmClientCertificateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HsmClientCertificate)(nil)).Elem()
}

func (i HsmClientCertificateMap) ToHsmClientCertificateMapOutput() HsmClientCertificateMapOutput {
	return i.ToHsmClientCertificateMapOutputWithContext(context.Background())
}

func (i HsmClientCertificateMap) ToHsmClientCertificateMapOutputWithContext(ctx context.Context) HsmClientCertificateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HsmClientCertificateMapOutput)
}

type HsmClientCertificateOutput struct{ *pulumi.OutputState }

func (HsmClientCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HsmClientCertificate)(nil)).Elem()
}

func (o HsmClientCertificateOutput) ToHsmClientCertificateOutput() HsmClientCertificateOutput {
	return o
}

func (o HsmClientCertificateOutput) ToHsmClientCertificateOutputWithContext(ctx context.Context) HsmClientCertificateOutput {
	return o
}

func (o HsmClientCertificateOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *HsmClientCertificate) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o HsmClientCertificateOutput) HsmClientCertificateIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *HsmClientCertificate) pulumi.StringOutput { return v.HsmClientCertificateIdentifier }).(pulumi.StringOutput)
}

func (o HsmClientCertificateOutput) HsmClientCertificatePublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v *HsmClientCertificate) pulumi.StringOutput { return v.HsmClientCertificatePublicKey }).(pulumi.StringOutput)
}

func (o HsmClientCertificateOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HsmClientCertificate) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o HsmClientCertificateOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *HsmClientCertificate) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type HsmClientCertificateArrayOutput struct{ *pulumi.OutputState }

func (HsmClientCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HsmClientCertificate)(nil)).Elem()
}

func (o HsmClientCertificateArrayOutput) ToHsmClientCertificateArrayOutput() HsmClientCertificateArrayOutput {
	return o
}

func (o HsmClientCertificateArrayOutput) ToHsmClientCertificateArrayOutputWithContext(ctx context.Context) HsmClientCertificateArrayOutput {
	return o
}

func (o HsmClientCertificateArrayOutput) Index(i pulumi.IntInput) HsmClientCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *HsmClientCertificate {
		return vs[0].([]*HsmClientCertificate)[vs[1].(int)]
	}).(HsmClientCertificateOutput)
}

type HsmClientCertificateMapOutput struct{ *pulumi.OutputState }

func (HsmClientCertificateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HsmClientCertificate)(nil)).Elem()
}

func (o HsmClientCertificateMapOutput) ToHsmClientCertificateMapOutput() HsmClientCertificateMapOutput {
	return o
}

func (o HsmClientCertificateMapOutput) ToHsmClientCertificateMapOutputWithContext(ctx context.Context) HsmClientCertificateMapOutput {
	return o
}

func (o HsmClientCertificateMapOutput) MapIndex(k pulumi.StringInput) HsmClientCertificateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *HsmClientCertificate {
		return vs[0].(map[string]*HsmClientCertificate)[vs[1].(string)]
	}).(HsmClientCertificateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HsmClientCertificateInput)(nil)).Elem(), &HsmClientCertificate{})
	pulumi.RegisterInputType(reflect.TypeOf((*HsmClientCertificateArrayInput)(nil)).Elem(), HsmClientCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HsmClientCertificateMapInput)(nil)).Elem(), HsmClientCertificateMap{})
	pulumi.RegisterOutputType(HsmClientCertificateOutput{})
	pulumi.RegisterOutputType(HsmClientCertificateArrayOutput{})
	pulumi.RegisterOutputType(HsmClientCertificateMapOutput{})
}
