// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package redshift

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides details about a specific redshift cluster.
func Lookupluster(ctx *pulumi.Context, args *GetClusterArgs) (*GetClusterResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["clusterIdentifier"] = args.ClusterIdentifier
		inputs["tags"] = args.Tags
	}
	outputs, err := ctx.Invoke("aws:redshift/getCluster:getCluster", inputs)
	if err != nil {
		return nil, err
	}
	ret := GetClusterResult{}
	if v, ok := outputs["allowVersionUpgrade"]; ok {
		ret.AllowVersionUpgrade = v
	}
	if v, ok := outputs["automatedSnapshotRetentionPeriod"]; ok {
		ret.AutomatedSnapshotRetentionPeriod = v
	}
	if v, ok := outputs["availabilityZone"]; ok {
		ret.AvailabilityZone = v
	}
	if v, ok := outputs["bucketName"]; ok {
		ret.BucketName = v
	}
	if v, ok := outputs["clusterParameterGroupName"]; ok {
		ret.ClusterParameterGroupName = v
	}
	if v, ok := outputs["clusterPublicKey"]; ok {
		ret.ClusterPublicKey = v
	}
	if v, ok := outputs["clusterRevisionNumber"]; ok {
		ret.ClusterRevisionNumber = v
	}
	if v, ok := outputs["clusterSecurityGroups"]; ok {
		ret.ClusterSecurityGroups = v
	}
	if v, ok := outputs["clusterSubnetGroupName"]; ok {
		ret.ClusterSubnetGroupName = v
	}
	if v, ok := outputs["clusterType"]; ok {
		ret.ClusterType = v
	}
	if v, ok := outputs["clusterVersion"]; ok {
		ret.ClusterVersion = v
	}
	if v, ok := outputs["databaseName"]; ok {
		ret.DatabaseName = v
	}
	if v, ok := outputs["elasticIp"]; ok {
		ret.ElasticIp = v
	}
	if v, ok := outputs["enableLogging"]; ok {
		ret.EnableLogging = v
	}
	if v, ok := outputs["encrypted"]; ok {
		ret.Encrypted = v
	}
	if v, ok := outputs["endpoint"]; ok {
		ret.Endpoint = v
	}
	if v, ok := outputs["enhancedVpcRouting"]; ok {
		ret.EnhancedVpcRouting = v
	}
	if v, ok := outputs["iamRoles"]; ok {
		ret.IamRoles = v
	}
	if v, ok := outputs["kmsKeyId"]; ok {
		ret.KmsKeyId = v
	}
	if v, ok := outputs["masterUsername"]; ok {
		ret.MasterUsername = v
	}
	if v, ok := outputs["nodeType"]; ok {
		ret.NodeType = v
	}
	if v, ok := outputs["numberOfNodes"]; ok {
		ret.NumberOfNodes = v
	}
	if v, ok := outputs["port"]; ok {
		ret.Port = v
	}
	if v, ok := outputs["preferredMaintenanceWindow"]; ok {
		ret.PreferredMaintenanceWindow = v
	}
	if v, ok := outputs["publiclyAccessible"]; ok {
		ret.PubliclyAccessible = v
	}
	if v, ok := outputs["s3KeyPrefix"]; ok {
		ret.S3KeyPrefix = v
	}
	if v, ok := outputs["vpcId"]; ok {
		ret.VpcId = v
	}
	if v, ok := outputs["vpcSecurityGroupIds"]; ok {
		ret.VpcSecurityGroupIds = v
	}
	return &ret, nil
}

// A collection of arguments for invoking getCluster.
type GetClusterArgs struct {
	// The cluster identifier
	ClusterIdentifier interface{}
	Tags interface{}
}

// A collection of values returned by getCluster.
type GetClusterResult struct {
	// Whether major version upgrades can be applied during maintenance period
	AllowVersionUpgrade interface{}
	// The backup retention period
	AutomatedSnapshotRetentionPeriod interface{}
	// The availability zone of the cluster
	AvailabilityZone interface{}
	// The name of the S3 bucket where the log files are to be stored
	BucketName interface{}
	// The name of the parameter group to be associated with this cluster
	ClusterParameterGroupName interface{}
	// The public key for the cluster
	ClusterPublicKey interface{}
	// The cluster revision number
	ClusterRevisionNumber interface{}
	// The security groups associated with the cluster
	ClusterSecurityGroups interface{}
	// The name of a cluster subnet group to be associated with this cluster
	ClusterSubnetGroupName interface{}
	// The cluster type
	ClusterType interface{}
	ClusterVersion interface{}
	// The name of the default database in the cluster
	DatabaseName interface{}
	// The Elastic IP of the cluster
	ElasticIp interface{}
	// Whether cluster logging is enabled
	EnableLogging interface{}
	// Whether the cluster data is encrypted
	Encrypted interface{}
	// The cluster endpoint
	Endpoint interface{}
	// Whether enhanced VPC routing is enabled
	EnhancedVpcRouting interface{}
	// The IAM roles associated to the cluster
	IamRoles interface{}
	// The KMS encryption key associated to the cluster
	KmsKeyId interface{}
	// Username for the master DB user
	MasterUsername interface{}
	// The cluster node type
	NodeType interface{}
	// The number of nodes in the cluster
	NumberOfNodes interface{}
	// The port the cluster responds on
	Port interface{}
	// The maintenance window
	PreferredMaintenanceWindow interface{}
	// Whether the cluster is publicly accessible
	PubliclyAccessible interface{}
	// The folder inside the S3 bucket where the log files are stored
	S3KeyPrefix interface{}
	// The VPC Id associated with the cluster
	VpcId interface{}
	// The VPC security group Ids associated with the cluster
	VpcSecurityGroupIds interface{}
}
