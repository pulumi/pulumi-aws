// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redshift

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for managing AWS Redshift Data Shares.
//
// ## Example Usage
//
// ### Basic Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/redshift"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := redshift.GetDataShares(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetDataShares(ctx *pulumi.Context, args *GetDataSharesArgs, opts ...pulumi.InvokeOption) (*GetDataSharesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDataSharesResult
	err := ctx.Invoke("aws:redshift/getDataShares:getDataShares", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDataShares.
type GetDataSharesArgs struct {
	// An array of all data shares in the current region. See `dataShares` below.
	DataShares []GetDataSharesDataShare `pulumi:"dataShares"`
}

// A collection of values returned by getDataShares.
type GetDataSharesResult struct {
	// An array of all data shares in the current region. See `dataShares` below.
	DataShares []GetDataSharesDataShare `pulumi:"dataShares"`
	// AWS region.
	Id string `pulumi:"id"`
}

func GetDataSharesOutput(ctx *pulumi.Context, args GetDataSharesOutputArgs, opts ...pulumi.InvokeOption) GetDataSharesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDataSharesResult, error) {
			args := v.(GetDataSharesArgs)
			r, err := GetDataShares(ctx, &args, opts...)
			var s GetDataSharesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDataSharesResultOutput)
}

// A collection of arguments for invoking getDataShares.
type GetDataSharesOutputArgs struct {
	// An array of all data shares in the current region. See `dataShares` below.
	DataShares GetDataSharesDataShareArrayInput `pulumi:"dataShares"`
}

func (GetDataSharesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSharesArgs)(nil)).Elem()
}

// A collection of values returned by getDataShares.
type GetDataSharesResultOutput struct{ *pulumi.OutputState }

func (GetDataSharesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDataSharesResult)(nil)).Elem()
}

func (o GetDataSharesResultOutput) ToGetDataSharesResultOutput() GetDataSharesResultOutput {
	return o
}

func (o GetDataSharesResultOutput) ToGetDataSharesResultOutputWithContext(ctx context.Context) GetDataSharesResultOutput {
	return o
}

// An array of all data shares in the current region. See `dataShares` below.
func (o GetDataSharesResultOutput) DataShares() GetDataSharesDataShareArrayOutput {
	return o.ApplyT(func(v GetDataSharesResult) []GetDataSharesDataShare { return v.DataShares }).(GetDataSharesDataShareArrayOutput)
}

// AWS region.
func (o GetDataSharesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDataSharesResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDataSharesResultOutput{})
}
