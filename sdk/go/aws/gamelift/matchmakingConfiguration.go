// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gamelift

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type MatchmakingConfiguration struct {
	pulumi.CustomResourceState

	AcceptanceRequired       pulumi.BoolOutput                               `pulumi:"acceptanceRequired"`
	AcceptanceTimeoutSeconds pulumi.IntPtrOutput                             `pulumi:"acceptanceTimeoutSeconds"`
	AdditionalPlayerCount    pulumi.IntPtrOutput                             `pulumi:"additionalPlayerCount"`
	Arn                      pulumi.StringOutput                             `pulumi:"arn"`
	BackfillMode             pulumi.StringPtrOutput                          `pulumi:"backfillMode"`
	CreationTime             pulumi.StringOutput                             `pulumi:"creationTime"`
	CustomEventData          pulumi.StringPtrOutput                          `pulumi:"customEventData"`
	Description              pulumi.StringPtrOutput                          `pulumi:"description"`
	FlexMatchMode            pulumi.StringOutput                             `pulumi:"flexMatchMode"`
	GameProperties           MatchmakingConfigurationGamePropertyArrayOutput `pulumi:"gameProperties"`
	GameSessionData          pulumi.StringOutput                             `pulumi:"gameSessionData"`
	GameSessionQueueArns     pulumi.StringArrayOutput                        `pulumi:"gameSessionQueueArns"`
	Name                     pulumi.StringOutput                             `pulumi:"name"`
	NotificationTarget       pulumi.StringPtrOutput                          `pulumi:"notificationTarget"`
	RequestTimeoutSeconds    pulumi.IntOutput                                `pulumi:"requestTimeoutSeconds"`
	RuleSetArn               pulumi.StringOutput                             `pulumi:"ruleSetArn"`
	RuleSetName              pulumi.StringOutput                             `pulumi:"ruleSetName"`
	Tags                     pulumi.StringMapOutput                          `pulumi:"tags"`
	TagsAll                  pulumi.StringMapOutput                          `pulumi:"tagsAll"`
}

// NewMatchmakingConfiguration registers a new resource with the given unique name, arguments, and options.
func NewMatchmakingConfiguration(ctx *pulumi.Context,
	name string, args *MatchmakingConfigurationArgs, opts ...pulumi.ResourceOption) (*MatchmakingConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AcceptanceRequired == nil {
		return nil, errors.New("invalid value for required argument 'AcceptanceRequired'")
	}
	if args.GameSessionData == nil {
		return nil, errors.New("invalid value for required argument 'GameSessionData'")
	}
	if args.RequestTimeoutSeconds == nil {
		return nil, errors.New("invalid value for required argument 'RequestTimeoutSeconds'")
	}
	if args.RuleSetName == nil {
		return nil, errors.New("invalid value for required argument 'RuleSetName'")
	}
	var resource MatchmakingConfiguration
	err := ctx.RegisterResource("aws:gamelift/matchmakingConfiguration:MatchmakingConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMatchmakingConfiguration gets an existing MatchmakingConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMatchmakingConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MatchmakingConfigurationState, opts ...pulumi.ResourceOption) (*MatchmakingConfiguration, error) {
	var resource MatchmakingConfiguration
	err := ctx.ReadResource("aws:gamelift/matchmakingConfiguration:MatchmakingConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MatchmakingConfiguration resources.
type matchmakingConfigurationState struct {
	AcceptanceRequired       *bool                                  `pulumi:"acceptanceRequired"`
	AcceptanceTimeoutSeconds *int                                   `pulumi:"acceptanceTimeoutSeconds"`
	AdditionalPlayerCount    *int                                   `pulumi:"additionalPlayerCount"`
	Arn                      *string                                `pulumi:"arn"`
	BackfillMode             *string                                `pulumi:"backfillMode"`
	CreationTime             *string                                `pulumi:"creationTime"`
	CustomEventData          *string                                `pulumi:"customEventData"`
	Description              *string                                `pulumi:"description"`
	FlexMatchMode            *string                                `pulumi:"flexMatchMode"`
	GameProperties           []MatchmakingConfigurationGameProperty `pulumi:"gameProperties"`
	GameSessionData          *string                                `pulumi:"gameSessionData"`
	GameSessionQueueArns     []string                               `pulumi:"gameSessionQueueArns"`
	Name                     *string                                `pulumi:"name"`
	NotificationTarget       *string                                `pulumi:"notificationTarget"`
	RequestTimeoutSeconds    *int                                   `pulumi:"requestTimeoutSeconds"`
	RuleSetArn               *string                                `pulumi:"ruleSetArn"`
	RuleSetName              *string                                `pulumi:"ruleSetName"`
	Tags                     map[string]string                      `pulumi:"tags"`
	TagsAll                  map[string]string                      `pulumi:"tagsAll"`
}

type MatchmakingConfigurationState struct {
	AcceptanceRequired       pulumi.BoolPtrInput
	AcceptanceTimeoutSeconds pulumi.IntPtrInput
	AdditionalPlayerCount    pulumi.IntPtrInput
	Arn                      pulumi.StringPtrInput
	BackfillMode             pulumi.StringPtrInput
	CreationTime             pulumi.StringPtrInput
	CustomEventData          pulumi.StringPtrInput
	Description              pulumi.StringPtrInput
	FlexMatchMode            pulumi.StringPtrInput
	GameProperties           MatchmakingConfigurationGamePropertyArrayInput
	GameSessionData          pulumi.StringPtrInput
	GameSessionQueueArns     pulumi.StringArrayInput
	Name                     pulumi.StringPtrInput
	NotificationTarget       pulumi.StringPtrInput
	RequestTimeoutSeconds    pulumi.IntPtrInput
	RuleSetArn               pulumi.StringPtrInput
	RuleSetName              pulumi.StringPtrInput
	Tags                     pulumi.StringMapInput
	TagsAll                  pulumi.StringMapInput
}

func (MatchmakingConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*matchmakingConfigurationState)(nil)).Elem()
}

type matchmakingConfigurationArgs struct {
	AcceptanceRequired       bool                                   `pulumi:"acceptanceRequired"`
	AcceptanceTimeoutSeconds *int                                   `pulumi:"acceptanceTimeoutSeconds"`
	AdditionalPlayerCount    *int                                   `pulumi:"additionalPlayerCount"`
	BackfillMode             *string                                `pulumi:"backfillMode"`
	CustomEventData          *string                                `pulumi:"customEventData"`
	Description              *string                                `pulumi:"description"`
	FlexMatchMode            *string                                `pulumi:"flexMatchMode"`
	GameProperties           []MatchmakingConfigurationGameProperty `pulumi:"gameProperties"`
	GameSessionData          string                                 `pulumi:"gameSessionData"`
	GameSessionQueueArns     []string                               `pulumi:"gameSessionQueueArns"`
	Name                     *string                                `pulumi:"name"`
	NotificationTarget       *string                                `pulumi:"notificationTarget"`
	RequestTimeoutSeconds    int                                    `pulumi:"requestTimeoutSeconds"`
	RuleSetName              string                                 `pulumi:"ruleSetName"`
	Tags                     map[string]string                      `pulumi:"tags"`
}

// The set of arguments for constructing a MatchmakingConfiguration resource.
type MatchmakingConfigurationArgs struct {
	AcceptanceRequired       pulumi.BoolInput
	AcceptanceTimeoutSeconds pulumi.IntPtrInput
	AdditionalPlayerCount    pulumi.IntPtrInput
	BackfillMode             pulumi.StringPtrInput
	CustomEventData          pulumi.StringPtrInput
	Description              pulumi.StringPtrInput
	FlexMatchMode            pulumi.StringPtrInput
	GameProperties           MatchmakingConfigurationGamePropertyArrayInput
	GameSessionData          pulumi.StringInput
	GameSessionQueueArns     pulumi.StringArrayInput
	Name                     pulumi.StringPtrInput
	NotificationTarget       pulumi.StringPtrInput
	RequestTimeoutSeconds    pulumi.IntInput
	RuleSetName              pulumi.StringInput
	Tags                     pulumi.StringMapInput
}

func (MatchmakingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*matchmakingConfigurationArgs)(nil)).Elem()
}

type MatchmakingConfigurationInput interface {
	pulumi.Input

	ToMatchmakingConfigurationOutput() MatchmakingConfigurationOutput
	ToMatchmakingConfigurationOutputWithContext(ctx context.Context) MatchmakingConfigurationOutput
}

func (*MatchmakingConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**MatchmakingConfiguration)(nil)).Elem()
}

func (i *MatchmakingConfiguration) ToMatchmakingConfigurationOutput() MatchmakingConfigurationOutput {
	return i.ToMatchmakingConfigurationOutputWithContext(context.Background())
}

func (i *MatchmakingConfiguration) ToMatchmakingConfigurationOutputWithContext(ctx context.Context) MatchmakingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchmakingConfigurationOutput)
}

// MatchmakingConfigurationArrayInput is an input type that accepts MatchmakingConfigurationArray and MatchmakingConfigurationArrayOutput values.
// You can construct a concrete instance of `MatchmakingConfigurationArrayInput` via:
//
//	MatchmakingConfigurationArray{ MatchmakingConfigurationArgs{...} }
type MatchmakingConfigurationArrayInput interface {
	pulumi.Input

	ToMatchmakingConfigurationArrayOutput() MatchmakingConfigurationArrayOutput
	ToMatchmakingConfigurationArrayOutputWithContext(context.Context) MatchmakingConfigurationArrayOutput
}

type MatchmakingConfigurationArray []MatchmakingConfigurationInput

func (MatchmakingConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MatchmakingConfiguration)(nil)).Elem()
}

func (i MatchmakingConfigurationArray) ToMatchmakingConfigurationArrayOutput() MatchmakingConfigurationArrayOutput {
	return i.ToMatchmakingConfigurationArrayOutputWithContext(context.Background())
}

func (i MatchmakingConfigurationArray) ToMatchmakingConfigurationArrayOutputWithContext(ctx context.Context) MatchmakingConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchmakingConfigurationArrayOutput)
}

// MatchmakingConfigurationMapInput is an input type that accepts MatchmakingConfigurationMap and MatchmakingConfigurationMapOutput values.
// You can construct a concrete instance of `MatchmakingConfigurationMapInput` via:
//
//	MatchmakingConfigurationMap{ "key": MatchmakingConfigurationArgs{...} }
type MatchmakingConfigurationMapInput interface {
	pulumi.Input

	ToMatchmakingConfigurationMapOutput() MatchmakingConfigurationMapOutput
	ToMatchmakingConfigurationMapOutputWithContext(context.Context) MatchmakingConfigurationMapOutput
}

type MatchmakingConfigurationMap map[string]MatchmakingConfigurationInput

func (MatchmakingConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MatchmakingConfiguration)(nil)).Elem()
}

func (i MatchmakingConfigurationMap) ToMatchmakingConfigurationMapOutput() MatchmakingConfigurationMapOutput {
	return i.ToMatchmakingConfigurationMapOutputWithContext(context.Background())
}

func (i MatchmakingConfigurationMap) ToMatchmakingConfigurationMapOutputWithContext(ctx context.Context) MatchmakingConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MatchmakingConfigurationMapOutput)
}

type MatchmakingConfigurationOutput struct{ *pulumi.OutputState }

func (MatchmakingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MatchmakingConfiguration)(nil)).Elem()
}

func (o MatchmakingConfigurationOutput) ToMatchmakingConfigurationOutput() MatchmakingConfigurationOutput {
	return o
}

func (o MatchmakingConfigurationOutput) ToMatchmakingConfigurationOutputWithContext(ctx context.Context) MatchmakingConfigurationOutput {
	return o
}

func (o MatchmakingConfigurationOutput) AcceptanceRequired() pulumi.BoolOutput {
	return o.ApplyT(func(v *MatchmakingConfiguration) pulumi.BoolOutput { return v.AcceptanceRequired }).(pulumi.BoolOutput)
}

func (o MatchmakingConfigurationOutput) AcceptanceTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MatchmakingConfiguration) pulumi.IntPtrOutput { return v.AcceptanceTimeoutSeconds }).(pulumi.IntPtrOutput)
}

func (o MatchmakingConfigurationOutput) AdditionalPlayerCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MatchmakingConfiguration) pulumi.IntPtrOutput { return v.AdditionalPlayerCount }).(pulumi.IntPtrOutput)
}

func (o MatchmakingConfigurationOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *MatchmakingConfiguration) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o MatchmakingConfigurationOutput) BackfillMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MatchmakingConfiguration) pulumi.StringPtrOutput { return v.BackfillMode }).(pulumi.StringPtrOutput)
}

func (o MatchmakingConfigurationOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *MatchmakingConfiguration) pulumi.StringOutput { return v.CreationTime }).(pulumi.StringOutput)
}

func (o MatchmakingConfigurationOutput) CustomEventData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MatchmakingConfiguration) pulumi.StringPtrOutput { return v.CustomEventData }).(pulumi.StringPtrOutput)
}

func (o MatchmakingConfigurationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MatchmakingConfiguration) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o MatchmakingConfigurationOutput) FlexMatchMode() pulumi.StringOutput {
	return o.ApplyT(func(v *MatchmakingConfiguration) pulumi.StringOutput { return v.FlexMatchMode }).(pulumi.StringOutput)
}

func (o MatchmakingConfigurationOutput) GameProperties() MatchmakingConfigurationGamePropertyArrayOutput {
	return o.ApplyT(func(v *MatchmakingConfiguration) MatchmakingConfigurationGamePropertyArrayOutput {
		return v.GameProperties
	}).(MatchmakingConfigurationGamePropertyArrayOutput)
}

func (o MatchmakingConfigurationOutput) GameSessionData() pulumi.StringOutput {
	return o.ApplyT(func(v *MatchmakingConfiguration) pulumi.StringOutput { return v.GameSessionData }).(pulumi.StringOutput)
}

func (o MatchmakingConfigurationOutput) GameSessionQueueArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MatchmakingConfiguration) pulumi.StringArrayOutput { return v.GameSessionQueueArns }).(pulumi.StringArrayOutput)
}

func (o MatchmakingConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MatchmakingConfiguration) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o MatchmakingConfigurationOutput) NotificationTarget() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MatchmakingConfiguration) pulumi.StringPtrOutput { return v.NotificationTarget }).(pulumi.StringPtrOutput)
}

func (o MatchmakingConfigurationOutput) RequestTimeoutSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v *MatchmakingConfiguration) pulumi.IntOutput { return v.RequestTimeoutSeconds }).(pulumi.IntOutput)
}

func (o MatchmakingConfigurationOutput) RuleSetArn() pulumi.StringOutput {
	return o.ApplyT(func(v *MatchmakingConfiguration) pulumi.StringOutput { return v.RuleSetArn }).(pulumi.StringOutput)
}

func (o MatchmakingConfigurationOutput) RuleSetName() pulumi.StringOutput {
	return o.ApplyT(func(v *MatchmakingConfiguration) pulumi.StringOutput { return v.RuleSetName }).(pulumi.StringOutput)
}

func (o MatchmakingConfigurationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MatchmakingConfiguration) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o MatchmakingConfigurationOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MatchmakingConfiguration) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type MatchmakingConfigurationArrayOutput struct{ *pulumi.OutputState }

func (MatchmakingConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MatchmakingConfiguration)(nil)).Elem()
}

func (o MatchmakingConfigurationArrayOutput) ToMatchmakingConfigurationArrayOutput() MatchmakingConfigurationArrayOutput {
	return o
}

func (o MatchmakingConfigurationArrayOutput) ToMatchmakingConfigurationArrayOutputWithContext(ctx context.Context) MatchmakingConfigurationArrayOutput {
	return o
}

func (o MatchmakingConfigurationArrayOutput) Index(i pulumi.IntInput) MatchmakingConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MatchmakingConfiguration {
		return vs[0].([]*MatchmakingConfiguration)[vs[1].(int)]
	}).(MatchmakingConfigurationOutput)
}

type MatchmakingConfigurationMapOutput struct{ *pulumi.OutputState }

func (MatchmakingConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MatchmakingConfiguration)(nil)).Elem()
}

func (o MatchmakingConfigurationMapOutput) ToMatchmakingConfigurationMapOutput() MatchmakingConfigurationMapOutput {
	return o
}

func (o MatchmakingConfigurationMapOutput) ToMatchmakingConfigurationMapOutputWithContext(ctx context.Context) MatchmakingConfigurationMapOutput {
	return o
}

func (o MatchmakingConfigurationMapOutput) MapIndex(k pulumi.StringInput) MatchmakingConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MatchmakingConfiguration {
		return vs[0].(map[string]*MatchmakingConfiguration)[vs[1].(string)]
	}).(MatchmakingConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MatchmakingConfigurationInput)(nil)).Elem(), &MatchmakingConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*MatchmakingConfigurationArrayInput)(nil)).Elem(), MatchmakingConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MatchmakingConfigurationMapInput)(nil)).Elem(), MatchmakingConfigurationMap{})
	pulumi.RegisterOutputType(MatchmakingConfigurationOutput{})
	pulumi.RegisterOutputType(MatchmakingConfigurationArrayOutput{})
	pulumi.RegisterOutputType(MatchmakingConfigurationMapOutput{})
}
