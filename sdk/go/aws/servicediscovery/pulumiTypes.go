// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicediscovery

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ServiceDnsConfig struct {
	// An array that contains one DnsRecord object for each resource record set.
	DnsRecords []ServiceDnsConfigDnsRecord `pulumi:"dnsRecords"`
	// The ID of the namespace to use for DNS configuration.
	NamespaceId string `pulumi:"namespaceId"`
	// The routing policy that you want to apply to all records that Route 53 creates when you register an instance and specify the service. Valid Values: MULTIVALUE, WEIGHTED
	RoutingPolicy *string `pulumi:"routingPolicy"`
}

// ServiceDnsConfigInput is an input type that accepts ServiceDnsConfigArgs and ServiceDnsConfigOutput values.
// You can construct a concrete instance of `ServiceDnsConfigInput` via:
//
//	ServiceDnsConfigArgs{...}
type ServiceDnsConfigInput interface {
	pulumi.Input

	ToServiceDnsConfigOutput() ServiceDnsConfigOutput
	ToServiceDnsConfigOutputWithContext(context.Context) ServiceDnsConfigOutput
}

type ServiceDnsConfigArgs struct {
	// An array that contains one DnsRecord object for each resource record set.
	DnsRecords ServiceDnsConfigDnsRecordArrayInput `pulumi:"dnsRecords"`
	// The ID of the namespace to use for DNS configuration.
	NamespaceId pulumi.StringInput `pulumi:"namespaceId"`
	// The routing policy that you want to apply to all records that Route 53 creates when you register an instance and specify the service. Valid Values: MULTIVALUE, WEIGHTED
	RoutingPolicy pulumi.StringPtrInput `pulumi:"routingPolicy"`
}

func (ServiceDnsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDnsConfig)(nil)).Elem()
}

func (i ServiceDnsConfigArgs) ToServiceDnsConfigOutput() ServiceDnsConfigOutput {
	return i.ToServiceDnsConfigOutputWithContext(context.Background())
}

func (i ServiceDnsConfigArgs) ToServiceDnsConfigOutputWithContext(ctx context.Context) ServiceDnsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDnsConfigOutput)
}

func (i ServiceDnsConfigArgs) ToServiceDnsConfigPtrOutput() ServiceDnsConfigPtrOutput {
	return i.ToServiceDnsConfigPtrOutputWithContext(context.Background())
}

func (i ServiceDnsConfigArgs) ToServiceDnsConfigPtrOutputWithContext(ctx context.Context) ServiceDnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDnsConfigOutput).ToServiceDnsConfigPtrOutputWithContext(ctx)
}

// ServiceDnsConfigPtrInput is an input type that accepts ServiceDnsConfigArgs, ServiceDnsConfigPtr and ServiceDnsConfigPtrOutput values.
// You can construct a concrete instance of `ServiceDnsConfigPtrInput` via:
//
//	        ServiceDnsConfigArgs{...}
//
//	or:
//
//	        nil
type ServiceDnsConfigPtrInput interface {
	pulumi.Input

	ToServiceDnsConfigPtrOutput() ServiceDnsConfigPtrOutput
	ToServiceDnsConfigPtrOutputWithContext(context.Context) ServiceDnsConfigPtrOutput
}

type serviceDnsConfigPtrType ServiceDnsConfigArgs

func ServiceDnsConfigPtr(v *ServiceDnsConfigArgs) ServiceDnsConfigPtrInput {
	return (*serviceDnsConfigPtrType)(v)
}

func (*serviceDnsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDnsConfig)(nil)).Elem()
}

func (i *serviceDnsConfigPtrType) ToServiceDnsConfigPtrOutput() ServiceDnsConfigPtrOutput {
	return i.ToServiceDnsConfigPtrOutputWithContext(context.Background())
}

func (i *serviceDnsConfigPtrType) ToServiceDnsConfigPtrOutputWithContext(ctx context.Context) ServiceDnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDnsConfigPtrOutput)
}

type ServiceDnsConfigOutput struct{ *pulumi.OutputState }

func (ServiceDnsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDnsConfig)(nil)).Elem()
}

func (o ServiceDnsConfigOutput) ToServiceDnsConfigOutput() ServiceDnsConfigOutput {
	return o
}

func (o ServiceDnsConfigOutput) ToServiceDnsConfigOutputWithContext(ctx context.Context) ServiceDnsConfigOutput {
	return o
}

func (o ServiceDnsConfigOutput) ToServiceDnsConfigPtrOutput() ServiceDnsConfigPtrOutput {
	return o.ToServiceDnsConfigPtrOutputWithContext(context.Background())
}

func (o ServiceDnsConfigOutput) ToServiceDnsConfigPtrOutputWithContext(ctx context.Context) ServiceDnsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceDnsConfig) *ServiceDnsConfig {
		return &v
	}).(ServiceDnsConfigPtrOutput)
}

// An array that contains one DnsRecord object for each resource record set.
func (o ServiceDnsConfigOutput) DnsRecords() ServiceDnsConfigDnsRecordArrayOutput {
	return o.ApplyT(func(v ServiceDnsConfig) []ServiceDnsConfigDnsRecord { return v.DnsRecords }).(ServiceDnsConfigDnsRecordArrayOutput)
}

// The ID of the namespace to use for DNS configuration.
func (o ServiceDnsConfigOutput) NamespaceId() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceDnsConfig) string { return v.NamespaceId }).(pulumi.StringOutput)
}

// The routing policy that you want to apply to all records that Route 53 creates when you register an instance and specify the service. Valid Values: MULTIVALUE, WEIGHTED
func (o ServiceDnsConfigOutput) RoutingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDnsConfig) *string { return v.RoutingPolicy }).(pulumi.StringPtrOutput)
}

type ServiceDnsConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceDnsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDnsConfig)(nil)).Elem()
}

func (o ServiceDnsConfigPtrOutput) ToServiceDnsConfigPtrOutput() ServiceDnsConfigPtrOutput {
	return o
}

func (o ServiceDnsConfigPtrOutput) ToServiceDnsConfigPtrOutputWithContext(ctx context.Context) ServiceDnsConfigPtrOutput {
	return o
}

func (o ServiceDnsConfigPtrOutput) Elem() ServiceDnsConfigOutput {
	return o.ApplyT(func(v *ServiceDnsConfig) ServiceDnsConfig {
		if v != nil {
			return *v
		}
		var ret ServiceDnsConfig
		return ret
	}).(ServiceDnsConfigOutput)
}

// An array that contains one DnsRecord object for each resource record set.
func (o ServiceDnsConfigPtrOutput) DnsRecords() ServiceDnsConfigDnsRecordArrayOutput {
	return o.ApplyT(func(v *ServiceDnsConfig) []ServiceDnsConfigDnsRecord {
		if v == nil {
			return nil
		}
		return v.DnsRecords
	}).(ServiceDnsConfigDnsRecordArrayOutput)
}

// The ID of the namespace to use for DNS configuration.
func (o ServiceDnsConfigPtrOutput) NamespaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDnsConfig) *string {
		if v == nil {
			return nil
		}
		return &v.NamespaceId
	}).(pulumi.StringPtrOutput)
}

// The routing policy that you want to apply to all records that Route 53 creates when you register an instance and specify the service. Valid Values: MULTIVALUE, WEIGHTED
func (o ServiceDnsConfigPtrOutput) RoutingPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDnsConfig) *string {
		if v == nil {
			return nil
		}
		return v.RoutingPolicy
	}).(pulumi.StringPtrOutput)
}

type ServiceDnsConfigDnsRecord struct {
	// The amount of time, in seconds, that you want DNS resolvers to cache the settings for this resource record set.
	Ttl int `pulumi:"ttl"`
	// The type of the resource, which indicates the value that Amazon Route 53 returns in response to DNS queries. Valid Values: A, AAAA, SRV, CNAME
	Type string `pulumi:"type"`
}

// ServiceDnsConfigDnsRecordInput is an input type that accepts ServiceDnsConfigDnsRecordArgs and ServiceDnsConfigDnsRecordOutput values.
// You can construct a concrete instance of `ServiceDnsConfigDnsRecordInput` via:
//
//	ServiceDnsConfigDnsRecordArgs{...}
type ServiceDnsConfigDnsRecordInput interface {
	pulumi.Input

	ToServiceDnsConfigDnsRecordOutput() ServiceDnsConfigDnsRecordOutput
	ToServiceDnsConfigDnsRecordOutputWithContext(context.Context) ServiceDnsConfigDnsRecordOutput
}

type ServiceDnsConfigDnsRecordArgs struct {
	// The amount of time, in seconds, that you want DNS resolvers to cache the settings for this resource record set.
	Ttl pulumi.IntInput `pulumi:"ttl"`
	// The type of the resource, which indicates the value that Amazon Route 53 returns in response to DNS queries. Valid Values: A, AAAA, SRV, CNAME
	Type pulumi.StringInput `pulumi:"type"`
}

func (ServiceDnsConfigDnsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDnsConfigDnsRecord)(nil)).Elem()
}

func (i ServiceDnsConfigDnsRecordArgs) ToServiceDnsConfigDnsRecordOutput() ServiceDnsConfigDnsRecordOutput {
	return i.ToServiceDnsConfigDnsRecordOutputWithContext(context.Background())
}

func (i ServiceDnsConfigDnsRecordArgs) ToServiceDnsConfigDnsRecordOutputWithContext(ctx context.Context) ServiceDnsConfigDnsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDnsConfigDnsRecordOutput)
}

// ServiceDnsConfigDnsRecordArrayInput is an input type that accepts ServiceDnsConfigDnsRecordArray and ServiceDnsConfigDnsRecordArrayOutput values.
// You can construct a concrete instance of `ServiceDnsConfigDnsRecordArrayInput` via:
//
//	ServiceDnsConfigDnsRecordArray{ ServiceDnsConfigDnsRecordArgs{...} }
type ServiceDnsConfigDnsRecordArrayInput interface {
	pulumi.Input

	ToServiceDnsConfigDnsRecordArrayOutput() ServiceDnsConfigDnsRecordArrayOutput
	ToServiceDnsConfigDnsRecordArrayOutputWithContext(context.Context) ServiceDnsConfigDnsRecordArrayOutput
}

type ServiceDnsConfigDnsRecordArray []ServiceDnsConfigDnsRecordInput

func (ServiceDnsConfigDnsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDnsConfigDnsRecord)(nil)).Elem()
}

func (i ServiceDnsConfigDnsRecordArray) ToServiceDnsConfigDnsRecordArrayOutput() ServiceDnsConfigDnsRecordArrayOutput {
	return i.ToServiceDnsConfigDnsRecordArrayOutputWithContext(context.Background())
}

func (i ServiceDnsConfigDnsRecordArray) ToServiceDnsConfigDnsRecordArrayOutputWithContext(ctx context.Context) ServiceDnsConfigDnsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDnsConfigDnsRecordArrayOutput)
}

type ServiceDnsConfigDnsRecordOutput struct{ *pulumi.OutputState }

func (ServiceDnsConfigDnsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDnsConfigDnsRecord)(nil)).Elem()
}

func (o ServiceDnsConfigDnsRecordOutput) ToServiceDnsConfigDnsRecordOutput() ServiceDnsConfigDnsRecordOutput {
	return o
}

func (o ServiceDnsConfigDnsRecordOutput) ToServiceDnsConfigDnsRecordOutputWithContext(ctx context.Context) ServiceDnsConfigDnsRecordOutput {
	return o
}

// The amount of time, in seconds, that you want DNS resolvers to cache the settings for this resource record set.
func (o ServiceDnsConfigDnsRecordOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceDnsConfigDnsRecord) int { return v.Ttl }).(pulumi.IntOutput)
}

// The type of the resource, which indicates the value that Amazon Route 53 returns in response to DNS queries. Valid Values: A, AAAA, SRV, CNAME
func (o ServiceDnsConfigDnsRecordOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceDnsConfigDnsRecord) string { return v.Type }).(pulumi.StringOutput)
}

type ServiceDnsConfigDnsRecordArrayOutput struct{ *pulumi.OutputState }

func (ServiceDnsConfigDnsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDnsConfigDnsRecord)(nil)).Elem()
}

func (o ServiceDnsConfigDnsRecordArrayOutput) ToServiceDnsConfigDnsRecordArrayOutput() ServiceDnsConfigDnsRecordArrayOutput {
	return o
}

func (o ServiceDnsConfigDnsRecordArrayOutput) ToServiceDnsConfigDnsRecordArrayOutputWithContext(ctx context.Context) ServiceDnsConfigDnsRecordArrayOutput {
	return o
}

func (o ServiceDnsConfigDnsRecordArrayOutput) Index(i pulumi.IntInput) ServiceDnsConfigDnsRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceDnsConfigDnsRecord {
		return vs[0].([]ServiceDnsConfigDnsRecord)[vs[1].(int)]
	}).(ServiceDnsConfigDnsRecordOutput)
}

type ServiceHealthCheckConfig struct {
	// The number of consecutive health checks. Maximum value of 10.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// The path that you want Route 53 to request when performing health checks. Route 53 automatically adds the DNS name for the service. If you don't specify a value, the default value is /.
	ResourcePath *string `pulumi:"resourcePath"`
	// The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP
	Type *string `pulumi:"type"`
}

// ServiceHealthCheckConfigInput is an input type that accepts ServiceHealthCheckConfigArgs and ServiceHealthCheckConfigOutput values.
// You can construct a concrete instance of `ServiceHealthCheckConfigInput` via:
//
//	ServiceHealthCheckConfigArgs{...}
type ServiceHealthCheckConfigInput interface {
	pulumi.Input

	ToServiceHealthCheckConfigOutput() ServiceHealthCheckConfigOutput
	ToServiceHealthCheckConfigOutputWithContext(context.Context) ServiceHealthCheckConfigOutput
}

type ServiceHealthCheckConfigArgs struct {
	// The number of consecutive health checks. Maximum value of 10.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// The path that you want Route 53 to request when performing health checks. Route 53 automatically adds the DNS name for the service. If you don't specify a value, the default value is /.
	ResourcePath pulumi.StringPtrInput `pulumi:"resourcePath"`
	// The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ServiceHealthCheckConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHealthCheckConfig)(nil)).Elem()
}

func (i ServiceHealthCheckConfigArgs) ToServiceHealthCheckConfigOutput() ServiceHealthCheckConfigOutput {
	return i.ToServiceHealthCheckConfigOutputWithContext(context.Background())
}

func (i ServiceHealthCheckConfigArgs) ToServiceHealthCheckConfigOutputWithContext(ctx context.Context) ServiceHealthCheckConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHealthCheckConfigOutput)
}

func (i ServiceHealthCheckConfigArgs) ToServiceHealthCheckConfigPtrOutput() ServiceHealthCheckConfigPtrOutput {
	return i.ToServiceHealthCheckConfigPtrOutputWithContext(context.Background())
}

func (i ServiceHealthCheckConfigArgs) ToServiceHealthCheckConfigPtrOutputWithContext(ctx context.Context) ServiceHealthCheckConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHealthCheckConfigOutput).ToServiceHealthCheckConfigPtrOutputWithContext(ctx)
}

// ServiceHealthCheckConfigPtrInput is an input type that accepts ServiceHealthCheckConfigArgs, ServiceHealthCheckConfigPtr and ServiceHealthCheckConfigPtrOutput values.
// You can construct a concrete instance of `ServiceHealthCheckConfigPtrInput` via:
//
//	        ServiceHealthCheckConfigArgs{...}
//
//	or:
//
//	        nil
type ServiceHealthCheckConfigPtrInput interface {
	pulumi.Input

	ToServiceHealthCheckConfigPtrOutput() ServiceHealthCheckConfigPtrOutput
	ToServiceHealthCheckConfigPtrOutputWithContext(context.Context) ServiceHealthCheckConfigPtrOutput
}

type serviceHealthCheckConfigPtrType ServiceHealthCheckConfigArgs

func ServiceHealthCheckConfigPtr(v *ServiceHealthCheckConfigArgs) ServiceHealthCheckConfigPtrInput {
	return (*serviceHealthCheckConfigPtrType)(v)
}

func (*serviceHealthCheckConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceHealthCheckConfig)(nil)).Elem()
}

func (i *serviceHealthCheckConfigPtrType) ToServiceHealthCheckConfigPtrOutput() ServiceHealthCheckConfigPtrOutput {
	return i.ToServiceHealthCheckConfigPtrOutputWithContext(context.Background())
}

func (i *serviceHealthCheckConfigPtrType) ToServiceHealthCheckConfigPtrOutputWithContext(ctx context.Context) ServiceHealthCheckConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHealthCheckConfigPtrOutput)
}

type ServiceHealthCheckConfigOutput struct{ *pulumi.OutputState }

func (ServiceHealthCheckConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHealthCheckConfig)(nil)).Elem()
}

func (o ServiceHealthCheckConfigOutput) ToServiceHealthCheckConfigOutput() ServiceHealthCheckConfigOutput {
	return o
}

func (o ServiceHealthCheckConfigOutput) ToServiceHealthCheckConfigOutputWithContext(ctx context.Context) ServiceHealthCheckConfigOutput {
	return o
}

func (o ServiceHealthCheckConfigOutput) ToServiceHealthCheckConfigPtrOutput() ServiceHealthCheckConfigPtrOutput {
	return o.ToServiceHealthCheckConfigPtrOutputWithContext(context.Background())
}

func (o ServiceHealthCheckConfigOutput) ToServiceHealthCheckConfigPtrOutputWithContext(ctx context.Context) ServiceHealthCheckConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceHealthCheckConfig) *ServiceHealthCheckConfig {
		return &v
	}).(ServiceHealthCheckConfigPtrOutput)
}

// The number of consecutive health checks. Maximum value of 10.
func (o ServiceHealthCheckConfigOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceHealthCheckConfig) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// The path that you want Route 53 to request when performing health checks. Route 53 automatically adds the DNS name for the service. If you don't specify a value, the default value is /.
func (o ServiceHealthCheckConfigOutput) ResourcePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHealthCheckConfig) *string { return v.ResourcePath }).(pulumi.StringPtrOutput)
}

// The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP
func (o ServiceHealthCheckConfigOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceHealthCheckConfig) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ServiceHealthCheckConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceHealthCheckConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceHealthCheckConfig)(nil)).Elem()
}

func (o ServiceHealthCheckConfigPtrOutput) ToServiceHealthCheckConfigPtrOutput() ServiceHealthCheckConfigPtrOutput {
	return o
}

func (o ServiceHealthCheckConfigPtrOutput) ToServiceHealthCheckConfigPtrOutputWithContext(ctx context.Context) ServiceHealthCheckConfigPtrOutput {
	return o
}

func (o ServiceHealthCheckConfigPtrOutput) Elem() ServiceHealthCheckConfigOutput {
	return o.ApplyT(func(v *ServiceHealthCheckConfig) ServiceHealthCheckConfig {
		if v != nil {
			return *v
		}
		var ret ServiceHealthCheckConfig
		return ret
	}).(ServiceHealthCheckConfigOutput)
}

// The number of consecutive health checks. Maximum value of 10.
func (o ServiceHealthCheckConfigPtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceHealthCheckConfig) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// The path that you want Route 53 to request when performing health checks. Route 53 automatically adds the DNS name for the service. If you don't specify a value, the default value is /.
func (o ServiceHealthCheckConfigPtrOutput) ResourcePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceHealthCheckConfig) *string {
		if v == nil {
			return nil
		}
		return v.ResourcePath
	}).(pulumi.StringPtrOutput)
}

// The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP
func (o ServiceHealthCheckConfigPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceHealthCheckConfig) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ServiceHealthCheckCustomConfig struct {
	// The number of 30-second intervals that you want service discovery to wait before it changes the health status of a service instance.  Maximum value of 10.
	FailureThreshold *int `pulumi:"failureThreshold"`
}

// ServiceHealthCheckCustomConfigInput is an input type that accepts ServiceHealthCheckCustomConfigArgs and ServiceHealthCheckCustomConfigOutput values.
// You can construct a concrete instance of `ServiceHealthCheckCustomConfigInput` via:
//
//	ServiceHealthCheckCustomConfigArgs{...}
type ServiceHealthCheckCustomConfigInput interface {
	pulumi.Input

	ToServiceHealthCheckCustomConfigOutput() ServiceHealthCheckCustomConfigOutput
	ToServiceHealthCheckCustomConfigOutputWithContext(context.Context) ServiceHealthCheckCustomConfigOutput
}

type ServiceHealthCheckCustomConfigArgs struct {
	// The number of 30-second intervals that you want service discovery to wait before it changes the health status of a service instance.  Maximum value of 10.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
}

func (ServiceHealthCheckCustomConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHealthCheckCustomConfig)(nil)).Elem()
}

func (i ServiceHealthCheckCustomConfigArgs) ToServiceHealthCheckCustomConfigOutput() ServiceHealthCheckCustomConfigOutput {
	return i.ToServiceHealthCheckCustomConfigOutputWithContext(context.Background())
}

func (i ServiceHealthCheckCustomConfigArgs) ToServiceHealthCheckCustomConfigOutputWithContext(ctx context.Context) ServiceHealthCheckCustomConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHealthCheckCustomConfigOutput)
}

func (i ServiceHealthCheckCustomConfigArgs) ToServiceHealthCheckCustomConfigPtrOutput() ServiceHealthCheckCustomConfigPtrOutput {
	return i.ToServiceHealthCheckCustomConfigPtrOutputWithContext(context.Background())
}

func (i ServiceHealthCheckCustomConfigArgs) ToServiceHealthCheckCustomConfigPtrOutputWithContext(ctx context.Context) ServiceHealthCheckCustomConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHealthCheckCustomConfigOutput).ToServiceHealthCheckCustomConfigPtrOutputWithContext(ctx)
}

// ServiceHealthCheckCustomConfigPtrInput is an input type that accepts ServiceHealthCheckCustomConfigArgs, ServiceHealthCheckCustomConfigPtr and ServiceHealthCheckCustomConfigPtrOutput values.
// You can construct a concrete instance of `ServiceHealthCheckCustomConfigPtrInput` via:
//
//	        ServiceHealthCheckCustomConfigArgs{...}
//
//	or:
//
//	        nil
type ServiceHealthCheckCustomConfigPtrInput interface {
	pulumi.Input

	ToServiceHealthCheckCustomConfigPtrOutput() ServiceHealthCheckCustomConfigPtrOutput
	ToServiceHealthCheckCustomConfigPtrOutputWithContext(context.Context) ServiceHealthCheckCustomConfigPtrOutput
}

type serviceHealthCheckCustomConfigPtrType ServiceHealthCheckCustomConfigArgs

func ServiceHealthCheckCustomConfigPtr(v *ServiceHealthCheckCustomConfigArgs) ServiceHealthCheckCustomConfigPtrInput {
	return (*serviceHealthCheckCustomConfigPtrType)(v)
}

func (*serviceHealthCheckCustomConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceHealthCheckCustomConfig)(nil)).Elem()
}

func (i *serviceHealthCheckCustomConfigPtrType) ToServiceHealthCheckCustomConfigPtrOutput() ServiceHealthCheckCustomConfigPtrOutput {
	return i.ToServiceHealthCheckCustomConfigPtrOutputWithContext(context.Background())
}

func (i *serviceHealthCheckCustomConfigPtrType) ToServiceHealthCheckCustomConfigPtrOutputWithContext(ctx context.Context) ServiceHealthCheckCustomConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceHealthCheckCustomConfigPtrOutput)
}

type ServiceHealthCheckCustomConfigOutput struct{ *pulumi.OutputState }

func (ServiceHealthCheckCustomConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceHealthCheckCustomConfig)(nil)).Elem()
}

func (o ServiceHealthCheckCustomConfigOutput) ToServiceHealthCheckCustomConfigOutput() ServiceHealthCheckCustomConfigOutput {
	return o
}

func (o ServiceHealthCheckCustomConfigOutput) ToServiceHealthCheckCustomConfigOutputWithContext(ctx context.Context) ServiceHealthCheckCustomConfigOutput {
	return o
}

func (o ServiceHealthCheckCustomConfigOutput) ToServiceHealthCheckCustomConfigPtrOutput() ServiceHealthCheckCustomConfigPtrOutput {
	return o.ToServiceHealthCheckCustomConfigPtrOutputWithContext(context.Background())
}

func (o ServiceHealthCheckCustomConfigOutput) ToServiceHealthCheckCustomConfigPtrOutputWithContext(ctx context.Context) ServiceHealthCheckCustomConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceHealthCheckCustomConfig) *ServiceHealthCheckCustomConfig {
		return &v
	}).(ServiceHealthCheckCustomConfigPtrOutput)
}

// The number of 30-second intervals that you want service discovery to wait before it changes the health status of a service instance.  Maximum value of 10.
func (o ServiceHealthCheckCustomConfigOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceHealthCheckCustomConfig) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

type ServiceHealthCheckCustomConfigPtrOutput struct{ *pulumi.OutputState }

func (ServiceHealthCheckCustomConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceHealthCheckCustomConfig)(nil)).Elem()
}

func (o ServiceHealthCheckCustomConfigPtrOutput) ToServiceHealthCheckCustomConfigPtrOutput() ServiceHealthCheckCustomConfigPtrOutput {
	return o
}

func (o ServiceHealthCheckCustomConfigPtrOutput) ToServiceHealthCheckCustomConfigPtrOutputWithContext(ctx context.Context) ServiceHealthCheckCustomConfigPtrOutput {
	return o
}

func (o ServiceHealthCheckCustomConfigPtrOutput) Elem() ServiceHealthCheckCustomConfigOutput {
	return o.ApplyT(func(v *ServiceHealthCheckCustomConfig) ServiceHealthCheckCustomConfig {
		if v != nil {
			return *v
		}
		var ret ServiceHealthCheckCustomConfig
		return ret
	}).(ServiceHealthCheckCustomConfigOutput)
}

// The number of 30-second intervals that you want service discovery to wait before it changes the health status of a service instance.  Maximum value of 10.
func (o ServiceHealthCheckCustomConfigPtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceHealthCheckCustomConfig) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

type GetServiceDnsConfig struct {
	// An array that contains one DnsRecord object for each resource record set.
	DnsRecords []GetServiceDnsConfigDnsRecord `pulumi:"dnsRecords"`
	// ID of the namespace that the service belongs to.
	NamespaceId string `pulumi:"namespaceId"`
	// Routing policy that you want to apply to all records that Route 53 creates when you register an instance and specify the service. Valid Values: MULTIVALUE, WEIGHTED
	RoutingPolicy string `pulumi:"routingPolicy"`
}

// GetServiceDnsConfigInput is an input type that accepts GetServiceDnsConfigArgs and GetServiceDnsConfigOutput values.
// You can construct a concrete instance of `GetServiceDnsConfigInput` via:
//
//	GetServiceDnsConfigArgs{...}
type GetServiceDnsConfigInput interface {
	pulumi.Input

	ToGetServiceDnsConfigOutput() GetServiceDnsConfigOutput
	ToGetServiceDnsConfigOutputWithContext(context.Context) GetServiceDnsConfigOutput
}

type GetServiceDnsConfigArgs struct {
	// An array that contains one DnsRecord object for each resource record set.
	DnsRecords GetServiceDnsConfigDnsRecordArrayInput `pulumi:"dnsRecords"`
	// ID of the namespace that the service belongs to.
	NamespaceId pulumi.StringInput `pulumi:"namespaceId"`
	// Routing policy that you want to apply to all records that Route 53 creates when you register an instance and specify the service. Valid Values: MULTIVALUE, WEIGHTED
	RoutingPolicy pulumi.StringInput `pulumi:"routingPolicy"`
}

func (GetServiceDnsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceDnsConfig)(nil)).Elem()
}

func (i GetServiceDnsConfigArgs) ToGetServiceDnsConfigOutput() GetServiceDnsConfigOutput {
	return i.ToGetServiceDnsConfigOutputWithContext(context.Background())
}

func (i GetServiceDnsConfigArgs) ToGetServiceDnsConfigOutputWithContext(ctx context.Context) GetServiceDnsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceDnsConfigOutput)
}

// GetServiceDnsConfigArrayInput is an input type that accepts GetServiceDnsConfigArray and GetServiceDnsConfigArrayOutput values.
// You can construct a concrete instance of `GetServiceDnsConfigArrayInput` via:
//
//	GetServiceDnsConfigArray{ GetServiceDnsConfigArgs{...} }
type GetServiceDnsConfigArrayInput interface {
	pulumi.Input

	ToGetServiceDnsConfigArrayOutput() GetServiceDnsConfigArrayOutput
	ToGetServiceDnsConfigArrayOutputWithContext(context.Context) GetServiceDnsConfigArrayOutput
}

type GetServiceDnsConfigArray []GetServiceDnsConfigInput

func (GetServiceDnsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceDnsConfig)(nil)).Elem()
}

func (i GetServiceDnsConfigArray) ToGetServiceDnsConfigArrayOutput() GetServiceDnsConfigArrayOutput {
	return i.ToGetServiceDnsConfigArrayOutputWithContext(context.Background())
}

func (i GetServiceDnsConfigArray) ToGetServiceDnsConfigArrayOutputWithContext(ctx context.Context) GetServiceDnsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceDnsConfigArrayOutput)
}

type GetServiceDnsConfigOutput struct{ *pulumi.OutputState }

func (GetServiceDnsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceDnsConfig)(nil)).Elem()
}

func (o GetServiceDnsConfigOutput) ToGetServiceDnsConfigOutput() GetServiceDnsConfigOutput {
	return o
}

func (o GetServiceDnsConfigOutput) ToGetServiceDnsConfigOutputWithContext(ctx context.Context) GetServiceDnsConfigOutput {
	return o
}

// An array that contains one DnsRecord object for each resource record set.
func (o GetServiceDnsConfigOutput) DnsRecords() GetServiceDnsConfigDnsRecordArrayOutput {
	return o.ApplyT(func(v GetServiceDnsConfig) []GetServiceDnsConfigDnsRecord { return v.DnsRecords }).(GetServiceDnsConfigDnsRecordArrayOutput)
}

// ID of the namespace that the service belongs to.
func (o GetServiceDnsConfigOutput) NamespaceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceDnsConfig) string { return v.NamespaceId }).(pulumi.StringOutput)
}

// Routing policy that you want to apply to all records that Route 53 creates when you register an instance and specify the service. Valid Values: MULTIVALUE, WEIGHTED
func (o GetServiceDnsConfigOutput) RoutingPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceDnsConfig) string { return v.RoutingPolicy }).(pulumi.StringOutput)
}

type GetServiceDnsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetServiceDnsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceDnsConfig)(nil)).Elem()
}

func (o GetServiceDnsConfigArrayOutput) ToGetServiceDnsConfigArrayOutput() GetServiceDnsConfigArrayOutput {
	return o
}

func (o GetServiceDnsConfigArrayOutput) ToGetServiceDnsConfigArrayOutputWithContext(ctx context.Context) GetServiceDnsConfigArrayOutput {
	return o
}

func (o GetServiceDnsConfigArrayOutput) Index(i pulumi.IntInput) GetServiceDnsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceDnsConfig {
		return vs[0].([]GetServiceDnsConfig)[vs[1].(int)]
	}).(GetServiceDnsConfigOutput)
}

type GetServiceDnsConfigDnsRecord struct {
	// Amount of time, in seconds, that you want DNS resolvers to cache the settings for this resource record set.
	Ttl int `pulumi:"ttl"`
	// The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP
	Type string `pulumi:"type"`
}

// GetServiceDnsConfigDnsRecordInput is an input type that accepts GetServiceDnsConfigDnsRecordArgs and GetServiceDnsConfigDnsRecordOutput values.
// You can construct a concrete instance of `GetServiceDnsConfigDnsRecordInput` via:
//
//	GetServiceDnsConfigDnsRecordArgs{...}
type GetServiceDnsConfigDnsRecordInput interface {
	pulumi.Input

	ToGetServiceDnsConfigDnsRecordOutput() GetServiceDnsConfigDnsRecordOutput
	ToGetServiceDnsConfigDnsRecordOutputWithContext(context.Context) GetServiceDnsConfigDnsRecordOutput
}

type GetServiceDnsConfigDnsRecordArgs struct {
	// Amount of time, in seconds, that you want DNS resolvers to cache the settings for this resource record set.
	Ttl pulumi.IntInput `pulumi:"ttl"`
	// The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetServiceDnsConfigDnsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceDnsConfigDnsRecord)(nil)).Elem()
}

func (i GetServiceDnsConfigDnsRecordArgs) ToGetServiceDnsConfigDnsRecordOutput() GetServiceDnsConfigDnsRecordOutput {
	return i.ToGetServiceDnsConfigDnsRecordOutputWithContext(context.Background())
}

func (i GetServiceDnsConfigDnsRecordArgs) ToGetServiceDnsConfigDnsRecordOutputWithContext(ctx context.Context) GetServiceDnsConfigDnsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceDnsConfigDnsRecordOutput)
}

// GetServiceDnsConfigDnsRecordArrayInput is an input type that accepts GetServiceDnsConfigDnsRecordArray and GetServiceDnsConfigDnsRecordArrayOutput values.
// You can construct a concrete instance of `GetServiceDnsConfigDnsRecordArrayInput` via:
//
//	GetServiceDnsConfigDnsRecordArray{ GetServiceDnsConfigDnsRecordArgs{...} }
type GetServiceDnsConfigDnsRecordArrayInput interface {
	pulumi.Input

	ToGetServiceDnsConfigDnsRecordArrayOutput() GetServiceDnsConfigDnsRecordArrayOutput
	ToGetServiceDnsConfigDnsRecordArrayOutputWithContext(context.Context) GetServiceDnsConfigDnsRecordArrayOutput
}

type GetServiceDnsConfigDnsRecordArray []GetServiceDnsConfigDnsRecordInput

func (GetServiceDnsConfigDnsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceDnsConfigDnsRecord)(nil)).Elem()
}

func (i GetServiceDnsConfigDnsRecordArray) ToGetServiceDnsConfigDnsRecordArrayOutput() GetServiceDnsConfigDnsRecordArrayOutput {
	return i.ToGetServiceDnsConfigDnsRecordArrayOutputWithContext(context.Background())
}

func (i GetServiceDnsConfigDnsRecordArray) ToGetServiceDnsConfigDnsRecordArrayOutputWithContext(ctx context.Context) GetServiceDnsConfigDnsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceDnsConfigDnsRecordArrayOutput)
}

type GetServiceDnsConfigDnsRecordOutput struct{ *pulumi.OutputState }

func (GetServiceDnsConfigDnsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceDnsConfigDnsRecord)(nil)).Elem()
}

func (o GetServiceDnsConfigDnsRecordOutput) ToGetServiceDnsConfigDnsRecordOutput() GetServiceDnsConfigDnsRecordOutput {
	return o
}

func (o GetServiceDnsConfigDnsRecordOutput) ToGetServiceDnsConfigDnsRecordOutputWithContext(ctx context.Context) GetServiceDnsConfigDnsRecordOutput {
	return o
}

// Amount of time, in seconds, that you want DNS resolvers to cache the settings for this resource record set.
func (o GetServiceDnsConfigDnsRecordOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v GetServiceDnsConfigDnsRecord) int { return v.Ttl }).(pulumi.IntOutput)
}

// The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP
func (o GetServiceDnsConfigDnsRecordOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceDnsConfigDnsRecord) string { return v.Type }).(pulumi.StringOutput)
}

type GetServiceDnsConfigDnsRecordArrayOutput struct{ *pulumi.OutputState }

func (GetServiceDnsConfigDnsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceDnsConfigDnsRecord)(nil)).Elem()
}

func (o GetServiceDnsConfigDnsRecordArrayOutput) ToGetServiceDnsConfigDnsRecordArrayOutput() GetServiceDnsConfigDnsRecordArrayOutput {
	return o
}

func (o GetServiceDnsConfigDnsRecordArrayOutput) ToGetServiceDnsConfigDnsRecordArrayOutputWithContext(ctx context.Context) GetServiceDnsConfigDnsRecordArrayOutput {
	return o
}

func (o GetServiceDnsConfigDnsRecordArrayOutput) Index(i pulumi.IntInput) GetServiceDnsConfigDnsRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceDnsConfigDnsRecord {
		return vs[0].([]GetServiceDnsConfigDnsRecord)[vs[1].(int)]
	}).(GetServiceDnsConfigDnsRecordOutput)
}

type GetServiceHealthCheckConfig struct {
	// The number of 30-second intervals that you want service discovery to wait before it changes the health status of a service instance.  Maximum value of 10.
	FailureThreshold int `pulumi:"failureThreshold"`
	// Path that you want Route 53 to request when performing health checks. Route 53 automatically adds the DNS name for the service. If you don't specify a value, the default value is /.
	ResourcePath string `pulumi:"resourcePath"`
	// The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP
	Type string `pulumi:"type"`
}

// GetServiceHealthCheckConfigInput is an input type that accepts GetServiceHealthCheckConfigArgs and GetServiceHealthCheckConfigOutput values.
// You can construct a concrete instance of `GetServiceHealthCheckConfigInput` via:
//
//	GetServiceHealthCheckConfigArgs{...}
type GetServiceHealthCheckConfigInput interface {
	pulumi.Input

	ToGetServiceHealthCheckConfigOutput() GetServiceHealthCheckConfigOutput
	ToGetServiceHealthCheckConfigOutputWithContext(context.Context) GetServiceHealthCheckConfigOutput
}

type GetServiceHealthCheckConfigArgs struct {
	// The number of 30-second intervals that you want service discovery to wait before it changes the health status of a service instance.  Maximum value of 10.
	FailureThreshold pulumi.IntInput `pulumi:"failureThreshold"`
	// Path that you want Route 53 to request when performing health checks. Route 53 automatically adds the DNS name for the service. If you don't specify a value, the default value is /.
	ResourcePath pulumi.StringInput `pulumi:"resourcePath"`
	// The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetServiceHealthCheckConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHealthCheckConfig)(nil)).Elem()
}

func (i GetServiceHealthCheckConfigArgs) ToGetServiceHealthCheckConfigOutput() GetServiceHealthCheckConfigOutput {
	return i.ToGetServiceHealthCheckConfigOutputWithContext(context.Background())
}

func (i GetServiceHealthCheckConfigArgs) ToGetServiceHealthCheckConfigOutputWithContext(ctx context.Context) GetServiceHealthCheckConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHealthCheckConfigOutput)
}

// GetServiceHealthCheckConfigArrayInput is an input type that accepts GetServiceHealthCheckConfigArray and GetServiceHealthCheckConfigArrayOutput values.
// You can construct a concrete instance of `GetServiceHealthCheckConfigArrayInput` via:
//
//	GetServiceHealthCheckConfigArray{ GetServiceHealthCheckConfigArgs{...} }
type GetServiceHealthCheckConfigArrayInput interface {
	pulumi.Input

	ToGetServiceHealthCheckConfigArrayOutput() GetServiceHealthCheckConfigArrayOutput
	ToGetServiceHealthCheckConfigArrayOutputWithContext(context.Context) GetServiceHealthCheckConfigArrayOutput
}

type GetServiceHealthCheckConfigArray []GetServiceHealthCheckConfigInput

func (GetServiceHealthCheckConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHealthCheckConfig)(nil)).Elem()
}

func (i GetServiceHealthCheckConfigArray) ToGetServiceHealthCheckConfigArrayOutput() GetServiceHealthCheckConfigArrayOutput {
	return i.ToGetServiceHealthCheckConfigArrayOutputWithContext(context.Background())
}

func (i GetServiceHealthCheckConfigArray) ToGetServiceHealthCheckConfigArrayOutputWithContext(ctx context.Context) GetServiceHealthCheckConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHealthCheckConfigArrayOutput)
}

type GetServiceHealthCheckConfigOutput struct{ *pulumi.OutputState }

func (GetServiceHealthCheckConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHealthCheckConfig)(nil)).Elem()
}

func (o GetServiceHealthCheckConfigOutput) ToGetServiceHealthCheckConfigOutput() GetServiceHealthCheckConfigOutput {
	return o
}

func (o GetServiceHealthCheckConfigOutput) ToGetServiceHealthCheckConfigOutputWithContext(ctx context.Context) GetServiceHealthCheckConfigOutput {
	return o
}

// The number of 30-second intervals that you want service discovery to wait before it changes the health status of a service instance.  Maximum value of 10.
func (o GetServiceHealthCheckConfigOutput) FailureThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetServiceHealthCheckConfig) int { return v.FailureThreshold }).(pulumi.IntOutput)
}

// Path that you want Route 53 to request when performing health checks. Route 53 automatically adds the DNS name for the service. If you don't specify a value, the default value is /.
func (o GetServiceHealthCheckConfigOutput) ResourcePath() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHealthCheckConfig) string { return v.ResourcePath }).(pulumi.StringOutput)
}

// The type of health check that you want to create, which indicates how Route 53 determines whether an endpoint is healthy. Valid Values: HTTP, HTTPS, TCP
func (o GetServiceHealthCheckConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceHealthCheckConfig) string { return v.Type }).(pulumi.StringOutput)
}

type GetServiceHealthCheckConfigArrayOutput struct{ *pulumi.OutputState }

func (GetServiceHealthCheckConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHealthCheckConfig)(nil)).Elem()
}

func (o GetServiceHealthCheckConfigArrayOutput) ToGetServiceHealthCheckConfigArrayOutput() GetServiceHealthCheckConfigArrayOutput {
	return o
}

func (o GetServiceHealthCheckConfigArrayOutput) ToGetServiceHealthCheckConfigArrayOutputWithContext(ctx context.Context) GetServiceHealthCheckConfigArrayOutput {
	return o
}

func (o GetServiceHealthCheckConfigArrayOutput) Index(i pulumi.IntInput) GetServiceHealthCheckConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceHealthCheckConfig {
		return vs[0].([]GetServiceHealthCheckConfig)[vs[1].(int)]
	}).(GetServiceHealthCheckConfigOutput)
}

type GetServiceHealthCheckCustomConfig struct {
	// The number of 30-second intervals that you want service discovery to wait before it changes the health status of a service instance.  Maximum value of 10.
	FailureThreshold int `pulumi:"failureThreshold"`
}

// GetServiceHealthCheckCustomConfigInput is an input type that accepts GetServiceHealthCheckCustomConfigArgs and GetServiceHealthCheckCustomConfigOutput values.
// You can construct a concrete instance of `GetServiceHealthCheckCustomConfigInput` via:
//
//	GetServiceHealthCheckCustomConfigArgs{...}
type GetServiceHealthCheckCustomConfigInput interface {
	pulumi.Input

	ToGetServiceHealthCheckCustomConfigOutput() GetServiceHealthCheckCustomConfigOutput
	ToGetServiceHealthCheckCustomConfigOutputWithContext(context.Context) GetServiceHealthCheckCustomConfigOutput
}

type GetServiceHealthCheckCustomConfigArgs struct {
	// The number of 30-second intervals that you want service discovery to wait before it changes the health status of a service instance.  Maximum value of 10.
	FailureThreshold pulumi.IntInput `pulumi:"failureThreshold"`
}

func (GetServiceHealthCheckCustomConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHealthCheckCustomConfig)(nil)).Elem()
}

func (i GetServiceHealthCheckCustomConfigArgs) ToGetServiceHealthCheckCustomConfigOutput() GetServiceHealthCheckCustomConfigOutput {
	return i.ToGetServiceHealthCheckCustomConfigOutputWithContext(context.Background())
}

func (i GetServiceHealthCheckCustomConfigArgs) ToGetServiceHealthCheckCustomConfigOutputWithContext(ctx context.Context) GetServiceHealthCheckCustomConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHealthCheckCustomConfigOutput)
}

// GetServiceHealthCheckCustomConfigArrayInput is an input type that accepts GetServiceHealthCheckCustomConfigArray and GetServiceHealthCheckCustomConfigArrayOutput values.
// You can construct a concrete instance of `GetServiceHealthCheckCustomConfigArrayInput` via:
//
//	GetServiceHealthCheckCustomConfigArray{ GetServiceHealthCheckCustomConfigArgs{...} }
type GetServiceHealthCheckCustomConfigArrayInput interface {
	pulumi.Input

	ToGetServiceHealthCheckCustomConfigArrayOutput() GetServiceHealthCheckCustomConfigArrayOutput
	ToGetServiceHealthCheckCustomConfigArrayOutputWithContext(context.Context) GetServiceHealthCheckCustomConfigArrayOutput
}

type GetServiceHealthCheckCustomConfigArray []GetServiceHealthCheckCustomConfigInput

func (GetServiceHealthCheckCustomConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHealthCheckCustomConfig)(nil)).Elem()
}

func (i GetServiceHealthCheckCustomConfigArray) ToGetServiceHealthCheckCustomConfigArrayOutput() GetServiceHealthCheckCustomConfigArrayOutput {
	return i.ToGetServiceHealthCheckCustomConfigArrayOutputWithContext(context.Background())
}

func (i GetServiceHealthCheckCustomConfigArray) ToGetServiceHealthCheckCustomConfigArrayOutputWithContext(ctx context.Context) GetServiceHealthCheckCustomConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetServiceHealthCheckCustomConfigArrayOutput)
}

type GetServiceHealthCheckCustomConfigOutput struct{ *pulumi.OutputState }

func (GetServiceHealthCheckCustomConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceHealthCheckCustomConfig)(nil)).Elem()
}

func (o GetServiceHealthCheckCustomConfigOutput) ToGetServiceHealthCheckCustomConfigOutput() GetServiceHealthCheckCustomConfigOutput {
	return o
}

func (o GetServiceHealthCheckCustomConfigOutput) ToGetServiceHealthCheckCustomConfigOutputWithContext(ctx context.Context) GetServiceHealthCheckCustomConfigOutput {
	return o
}

// The number of 30-second intervals that you want service discovery to wait before it changes the health status of a service instance.  Maximum value of 10.
func (o GetServiceHealthCheckCustomConfigOutput) FailureThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetServiceHealthCheckCustomConfig) int { return v.FailureThreshold }).(pulumi.IntOutput)
}

type GetServiceHealthCheckCustomConfigArrayOutput struct{ *pulumi.OutputState }

func (GetServiceHealthCheckCustomConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetServiceHealthCheckCustomConfig)(nil)).Elem()
}

func (o GetServiceHealthCheckCustomConfigArrayOutput) ToGetServiceHealthCheckCustomConfigArrayOutput() GetServiceHealthCheckCustomConfigArrayOutput {
	return o
}

func (o GetServiceHealthCheckCustomConfigArrayOutput) ToGetServiceHealthCheckCustomConfigArrayOutputWithContext(ctx context.Context) GetServiceHealthCheckCustomConfigArrayOutput {
	return o
}

func (o GetServiceHealthCheckCustomConfigArrayOutput) Index(i pulumi.IntInput) GetServiceHealthCheckCustomConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetServiceHealthCheckCustomConfig {
		return vs[0].([]GetServiceHealthCheckCustomConfig)[vs[1].(int)]
	}).(GetServiceHealthCheckCustomConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDnsConfigInput)(nil)).Elem(), ServiceDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDnsConfigPtrInput)(nil)).Elem(), ServiceDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDnsConfigDnsRecordInput)(nil)).Elem(), ServiceDnsConfigDnsRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDnsConfigDnsRecordArrayInput)(nil)).Elem(), ServiceDnsConfigDnsRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHealthCheckConfigInput)(nil)).Elem(), ServiceHealthCheckConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHealthCheckConfigPtrInput)(nil)).Elem(), ServiceHealthCheckConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHealthCheckCustomConfigInput)(nil)).Elem(), ServiceHealthCheckCustomConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceHealthCheckCustomConfigPtrInput)(nil)).Elem(), ServiceHealthCheckCustomConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceDnsConfigInput)(nil)).Elem(), GetServiceDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceDnsConfigArrayInput)(nil)).Elem(), GetServiceDnsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceDnsConfigDnsRecordInput)(nil)).Elem(), GetServiceDnsConfigDnsRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceDnsConfigDnsRecordArrayInput)(nil)).Elem(), GetServiceDnsConfigDnsRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceHealthCheckConfigInput)(nil)).Elem(), GetServiceHealthCheckConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceHealthCheckConfigArrayInput)(nil)).Elem(), GetServiceHealthCheckConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceHealthCheckCustomConfigInput)(nil)).Elem(), GetServiceHealthCheckCustomConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetServiceHealthCheckCustomConfigArrayInput)(nil)).Elem(), GetServiceHealthCheckCustomConfigArray{})
	pulumi.RegisterOutputType(ServiceDnsConfigOutput{})
	pulumi.RegisterOutputType(ServiceDnsConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceDnsConfigDnsRecordOutput{})
	pulumi.RegisterOutputType(ServiceDnsConfigDnsRecordArrayOutput{})
	pulumi.RegisterOutputType(ServiceHealthCheckConfigOutput{})
	pulumi.RegisterOutputType(ServiceHealthCheckConfigPtrOutput{})
	pulumi.RegisterOutputType(ServiceHealthCheckCustomConfigOutput{})
	pulumi.RegisterOutputType(ServiceHealthCheckCustomConfigPtrOutput{})
	pulumi.RegisterOutputType(GetServiceDnsConfigOutput{})
	pulumi.RegisterOutputType(GetServiceDnsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetServiceDnsConfigDnsRecordOutput{})
	pulumi.RegisterOutputType(GetServiceDnsConfigDnsRecordArrayOutput{})
	pulumi.RegisterOutputType(GetServiceHealthCheckConfigOutput{})
	pulumi.RegisterOutputType(GetServiceHealthCheckConfigArrayOutput{})
	pulumi.RegisterOutputType(GetServiceHealthCheckCustomConfigOutput{})
	pulumi.RegisterOutputType(GetServiceHealthCheckCustomConfigArrayOutput{})
}
