// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package servicediscovery

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PrivateDnsNamespace struct {
	pulumi.CustomResourceState

	Arn         pulumi.StringOutput    `pulumi:"arn"`
	Description pulumi.StringPtrOutput `pulumi:"description"`
	HostedZone  pulumi.StringOutput    `pulumi:"hostedZone"`
	Name        pulumi.StringOutput    `pulumi:"name"`
	Tags        pulumi.StringMapOutput `pulumi:"tags"`
	TagsAll     pulumi.StringMapOutput `pulumi:"tagsAll"`
	Vpc         pulumi.StringOutput    `pulumi:"vpc"`
}

// NewPrivateDnsNamespace registers a new resource with the given unique name, arguments, and options.
func NewPrivateDnsNamespace(ctx *pulumi.Context,
	name string, args *PrivateDnsNamespaceArgs, opts ...pulumi.ResourceOption) (*PrivateDnsNamespace, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Vpc == nil {
		return nil, errors.New("invalid value for required argument 'Vpc'")
	}
	var resource PrivateDnsNamespace
	err := ctx.RegisterResource("aws:servicediscovery/privateDnsNamespace:PrivateDnsNamespace", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPrivateDnsNamespace gets an existing PrivateDnsNamespace resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPrivateDnsNamespace(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PrivateDnsNamespaceState, opts ...pulumi.ResourceOption) (*PrivateDnsNamespace, error) {
	var resource PrivateDnsNamespace
	err := ctx.ReadResource("aws:servicediscovery/privateDnsNamespace:PrivateDnsNamespace", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PrivateDnsNamespace resources.
type privateDnsNamespaceState struct {
	Arn         *string           `pulumi:"arn"`
	Description *string           `pulumi:"description"`
	HostedZone  *string           `pulumi:"hostedZone"`
	Name        *string           `pulumi:"name"`
	Tags        map[string]string `pulumi:"tags"`
	TagsAll     map[string]string `pulumi:"tagsAll"`
	Vpc         *string           `pulumi:"vpc"`
}

type PrivateDnsNamespaceState struct {
	Arn         pulumi.StringPtrInput
	Description pulumi.StringPtrInput
	HostedZone  pulumi.StringPtrInput
	Name        pulumi.StringPtrInput
	Tags        pulumi.StringMapInput
	TagsAll     pulumi.StringMapInput
	Vpc         pulumi.StringPtrInput
}

func (PrivateDnsNamespaceState) ElementType() reflect.Type {
	return reflect.TypeOf((*privateDnsNamespaceState)(nil)).Elem()
}

type privateDnsNamespaceArgs struct {
	Description *string           `pulumi:"description"`
	Name        *string           `pulumi:"name"`
	Tags        map[string]string `pulumi:"tags"`
	Vpc         string            `pulumi:"vpc"`
}

// The set of arguments for constructing a PrivateDnsNamespace resource.
type PrivateDnsNamespaceArgs struct {
	Description pulumi.StringPtrInput
	Name        pulumi.StringPtrInput
	Tags        pulumi.StringMapInput
	Vpc         pulumi.StringInput
}

func (PrivateDnsNamespaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*privateDnsNamespaceArgs)(nil)).Elem()
}

type PrivateDnsNamespaceInput interface {
	pulumi.Input

	ToPrivateDnsNamespaceOutput() PrivateDnsNamespaceOutput
	ToPrivateDnsNamespaceOutputWithContext(ctx context.Context) PrivateDnsNamespaceOutput
}

func (*PrivateDnsNamespace) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateDnsNamespace)(nil)).Elem()
}

func (i *PrivateDnsNamespace) ToPrivateDnsNamespaceOutput() PrivateDnsNamespaceOutput {
	return i.ToPrivateDnsNamespaceOutputWithContext(context.Background())
}

func (i *PrivateDnsNamespace) ToPrivateDnsNamespaceOutputWithContext(ctx context.Context) PrivateDnsNamespaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsNamespaceOutput)
}

// PrivateDnsNamespaceArrayInput is an input type that accepts PrivateDnsNamespaceArray and PrivateDnsNamespaceArrayOutput values.
// You can construct a concrete instance of `PrivateDnsNamespaceArrayInput` via:
//
//	PrivateDnsNamespaceArray{ PrivateDnsNamespaceArgs{...} }
type PrivateDnsNamespaceArrayInput interface {
	pulumi.Input

	ToPrivateDnsNamespaceArrayOutput() PrivateDnsNamespaceArrayOutput
	ToPrivateDnsNamespaceArrayOutputWithContext(context.Context) PrivateDnsNamespaceArrayOutput
}

type PrivateDnsNamespaceArray []PrivateDnsNamespaceInput

func (PrivateDnsNamespaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrivateDnsNamespace)(nil)).Elem()
}

func (i PrivateDnsNamespaceArray) ToPrivateDnsNamespaceArrayOutput() PrivateDnsNamespaceArrayOutput {
	return i.ToPrivateDnsNamespaceArrayOutputWithContext(context.Background())
}

func (i PrivateDnsNamespaceArray) ToPrivateDnsNamespaceArrayOutputWithContext(ctx context.Context) PrivateDnsNamespaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsNamespaceArrayOutput)
}

// PrivateDnsNamespaceMapInput is an input type that accepts PrivateDnsNamespaceMap and PrivateDnsNamespaceMapOutput values.
// You can construct a concrete instance of `PrivateDnsNamespaceMapInput` via:
//
//	PrivateDnsNamespaceMap{ "key": PrivateDnsNamespaceArgs{...} }
type PrivateDnsNamespaceMapInput interface {
	pulumi.Input

	ToPrivateDnsNamespaceMapOutput() PrivateDnsNamespaceMapOutput
	ToPrivateDnsNamespaceMapOutputWithContext(context.Context) PrivateDnsNamespaceMapOutput
}

type PrivateDnsNamespaceMap map[string]PrivateDnsNamespaceInput

func (PrivateDnsNamespaceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrivateDnsNamespace)(nil)).Elem()
}

func (i PrivateDnsNamespaceMap) ToPrivateDnsNamespaceMapOutput() PrivateDnsNamespaceMapOutput {
	return i.ToPrivateDnsNamespaceMapOutputWithContext(context.Background())
}

func (i PrivateDnsNamespaceMap) ToPrivateDnsNamespaceMapOutputWithContext(ctx context.Context) PrivateDnsNamespaceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PrivateDnsNamespaceMapOutput)
}

type PrivateDnsNamespaceOutput struct{ *pulumi.OutputState }

func (PrivateDnsNamespaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PrivateDnsNamespace)(nil)).Elem()
}

func (o PrivateDnsNamespaceOutput) ToPrivateDnsNamespaceOutput() PrivateDnsNamespaceOutput {
	return o
}

func (o PrivateDnsNamespaceOutput) ToPrivateDnsNamespaceOutputWithContext(ctx context.Context) PrivateDnsNamespaceOutput {
	return o
}

func (o PrivateDnsNamespaceOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateDnsNamespace) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o PrivateDnsNamespaceOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PrivateDnsNamespace) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o PrivateDnsNamespaceOutput) HostedZone() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateDnsNamespace) pulumi.StringOutput { return v.HostedZone }).(pulumi.StringOutput)
}

func (o PrivateDnsNamespaceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateDnsNamespace) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o PrivateDnsNamespaceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PrivateDnsNamespace) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o PrivateDnsNamespaceOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *PrivateDnsNamespace) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o PrivateDnsNamespaceOutput) Vpc() pulumi.StringOutput {
	return o.ApplyT(func(v *PrivateDnsNamespace) pulumi.StringOutput { return v.Vpc }).(pulumi.StringOutput)
}

type PrivateDnsNamespaceArrayOutput struct{ *pulumi.OutputState }

func (PrivateDnsNamespaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PrivateDnsNamespace)(nil)).Elem()
}

func (o PrivateDnsNamespaceArrayOutput) ToPrivateDnsNamespaceArrayOutput() PrivateDnsNamespaceArrayOutput {
	return o
}

func (o PrivateDnsNamespaceArrayOutput) ToPrivateDnsNamespaceArrayOutputWithContext(ctx context.Context) PrivateDnsNamespaceArrayOutput {
	return o
}

func (o PrivateDnsNamespaceArrayOutput) Index(i pulumi.IntInput) PrivateDnsNamespaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PrivateDnsNamespace {
		return vs[0].([]*PrivateDnsNamespace)[vs[1].(int)]
	}).(PrivateDnsNamespaceOutput)
}

type PrivateDnsNamespaceMapOutput struct{ *pulumi.OutputState }

func (PrivateDnsNamespaceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PrivateDnsNamespace)(nil)).Elem()
}

func (o PrivateDnsNamespaceMapOutput) ToPrivateDnsNamespaceMapOutput() PrivateDnsNamespaceMapOutput {
	return o
}

func (o PrivateDnsNamespaceMapOutput) ToPrivateDnsNamespaceMapOutputWithContext(ctx context.Context) PrivateDnsNamespaceMapOutput {
	return o
}

func (o PrivateDnsNamespaceMapOutput) MapIndex(k pulumi.StringInput) PrivateDnsNamespaceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PrivateDnsNamespace {
		return vs[0].(map[string]*PrivateDnsNamespace)[vs[1].(string)]
	}).(PrivateDnsNamespaceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateDnsNamespaceInput)(nil)).Elem(), &PrivateDnsNamespace{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateDnsNamespaceArrayInput)(nil)).Elem(), PrivateDnsNamespaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PrivateDnsNamespaceMapInput)(nil)).Elem(), PrivateDnsNamespaceMap{})
	pulumi.RegisterOutputType(PrivateDnsNamespaceOutput{})
	pulumi.RegisterOutputType(PrivateDnsNamespaceArrayOutput{})
	pulumi.RegisterOutputType(PrivateDnsNamespaceMapOutput{})
}
