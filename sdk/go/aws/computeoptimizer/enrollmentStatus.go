// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package computeoptimizer

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages AWS Compute Optimizer enrollment status.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/computeoptimizer"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := computeoptimizer.NewEnrollmentStatus(ctx, "example", &computeoptimizer.EnrollmentStatusArgs{
//				Status: pulumi.String("Active"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import enrollment status using the account ID. For example:
//
// ```sh
// $ pulumi import aws:computeoptimizer/enrollmentStatus:EnrollmentStatus example 123456789012
// ```
type EnrollmentStatus struct {
	pulumi.CustomResourceState

	// Whether to enroll member accounts of the organization if the account is the management account of an organization. Default is `false`.
	IncludeMemberAccounts pulumi.BoolOutput `pulumi:"includeMemberAccounts"`
	// The count of organization member accounts that are opted in to the service, if your account is an organization management account.
	NumberOfMemberAccountsOptedIn pulumi.IntOutput `pulumi:"numberOfMemberAccountsOptedIn"`
	// The enrollment status of the account. Valid values: `Active`, `Inactive`.
	Status   pulumi.StringOutput               `pulumi:"status"`
	Timeouts EnrollmentStatusTimeoutsPtrOutput `pulumi:"timeouts"`
}

// NewEnrollmentStatus registers a new resource with the given unique name, arguments, and options.
func NewEnrollmentStatus(ctx *pulumi.Context,
	name string, args *EnrollmentStatusArgs, opts ...pulumi.ResourceOption) (*EnrollmentStatus, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Status == nil {
		return nil, errors.New("invalid value for required argument 'Status'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EnrollmentStatus
	err := ctx.RegisterResource("aws:computeoptimizer/enrollmentStatus:EnrollmentStatus", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnrollmentStatus gets an existing EnrollmentStatus resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnrollmentStatus(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnrollmentStatusState, opts ...pulumi.ResourceOption) (*EnrollmentStatus, error) {
	var resource EnrollmentStatus
	err := ctx.ReadResource("aws:computeoptimizer/enrollmentStatus:EnrollmentStatus", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EnrollmentStatus resources.
type enrollmentStatusState struct {
	// Whether to enroll member accounts of the organization if the account is the management account of an organization. Default is `false`.
	IncludeMemberAccounts *bool `pulumi:"includeMemberAccounts"`
	// The count of organization member accounts that are opted in to the service, if your account is an organization management account.
	NumberOfMemberAccountsOptedIn *int `pulumi:"numberOfMemberAccountsOptedIn"`
	// The enrollment status of the account. Valid values: `Active`, `Inactive`.
	Status   *string                   `pulumi:"status"`
	Timeouts *EnrollmentStatusTimeouts `pulumi:"timeouts"`
}

type EnrollmentStatusState struct {
	// Whether to enroll member accounts of the organization if the account is the management account of an organization. Default is `false`.
	IncludeMemberAccounts pulumi.BoolPtrInput
	// The count of organization member accounts that are opted in to the service, if your account is an organization management account.
	NumberOfMemberAccountsOptedIn pulumi.IntPtrInput
	// The enrollment status of the account. Valid values: `Active`, `Inactive`.
	Status   pulumi.StringPtrInput
	Timeouts EnrollmentStatusTimeoutsPtrInput
}

func (EnrollmentStatusState) ElementType() reflect.Type {
	return reflect.TypeOf((*enrollmentStatusState)(nil)).Elem()
}

type enrollmentStatusArgs struct {
	// Whether to enroll member accounts of the organization if the account is the management account of an organization. Default is `false`.
	IncludeMemberAccounts *bool `pulumi:"includeMemberAccounts"`
	// The enrollment status of the account. Valid values: `Active`, `Inactive`.
	Status   string                    `pulumi:"status"`
	Timeouts *EnrollmentStatusTimeouts `pulumi:"timeouts"`
}

// The set of arguments for constructing a EnrollmentStatus resource.
type EnrollmentStatusArgs struct {
	// Whether to enroll member accounts of the organization if the account is the management account of an organization. Default is `false`.
	IncludeMemberAccounts pulumi.BoolPtrInput
	// The enrollment status of the account. Valid values: `Active`, `Inactive`.
	Status   pulumi.StringInput
	Timeouts EnrollmentStatusTimeoutsPtrInput
}

func (EnrollmentStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*enrollmentStatusArgs)(nil)).Elem()
}

type EnrollmentStatusInput interface {
	pulumi.Input

	ToEnrollmentStatusOutput() EnrollmentStatusOutput
	ToEnrollmentStatusOutputWithContext(ctx context.Context) EnrollmentStatusOutput
}

func (*EnrollmentStatus) ElementType() reflect.Type {
	return reflect.TypeOf((**EnrollmentStatus)(nil)).Elem()
}

func (i *EnrollmentStatus) ToEnrollmentStatusOutput() EnrollmentStatusOutput {
	return i.ToEnrollmentStatusOutputWithContext(context.Background())
}

func (i *EnrollmentStatus) ToEnrollmentStatusOutputWithContext(ctx context.Context) EnrollmentStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnrollmentStatusOutput)
}

// EnrollmentStatusArrayInput is an input type that accepts EnrollmentStatusArray and EnrollmentStatusArrayOutput values.
// You can construct a concrete instance of `EnrollmentStatusArrayInput` via:
//
//	EnrollmentStatusArray{ EnrollmentStatusArgs{...} }
type EnrollmentStatusArrayInput interface {
	pulumi.Input

	ToEnrollmentStatusArrayOutput() EnrollmentStatusArrayOutput
	ToEnrollmentStatusArrayOutputWithContext(context.Context) EnrollmentStatusArrayOutput
}

type EnrollmentStatusArray []EnrollmentStatusInput

func (EnrollmentStatusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EnrollmentStatus)(nil)).Elem()
}

func (i EnrollmentStatusArray) ToEnrollmentStatusArrayOutput() EnrollmentStatusArrayOutput {
	return i.ToEnrollmentStatusArrayOutputWithContext(context.Background())
}

func (i EnrollmentStatusArray) ToEnrollmentStatusArrayOutputWithContext(ctx context.Context) EnrollmentStatusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnrollmentStatusArrayOutput)
}

// EnrollmentStatusMapInput is an input type that accepts EnrollmentStatusMap and EnrollmentStatusMapOutput values.
// You can construct a concrete instance of `EnrollmentStatusMapInput` via:
//
//	EnrollmentStatusMap{ "key": EnrollmentStatusArgs{...} }
type EnrollmentStatusMapInput interface {
	pulumi.Input

	ToEnrollmentStatusMapOutput() EnrollmentStatusMapOutput
	ToEnrollmentStatusMapOutputWithContext(context.Context) EnrollmentStatusMapOutput
}

type EnrollmentStatusMap map[string]EnrollmentStatusInput

func (EnrollmentStatusMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EnrollmentStatus)(nil)).Elem()
}

func (i EnrollmentStatusMap) ToEnrollmentStatusMapOutput() EnrollmentStatusMapOutput {
	return i.ToEnrollmentStatusMapOutputWithContext(context.Background())
}

func (i EnrollmentStatusMap) ToEnrollmentStatusMapOutputWithContext(ctx context.Context) EnrollmentStatusMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnrollmentStatusMapOutput)
}

type EnrollmentStatusOutput struct{ *pulumi.OutputState }

func (EnrollmentStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnrollmentStatus)(nil)).Elem()
}

func (o EnrollmentStatusOutput) ToEnrollmentStatusOutput() EnrollmentStatusOutput {
	return o
}

func (o EnrollmentStatusOutput) ToEnrollmentStatusOutputWithContext(ctx context.Context) EnrollmentStatusOutput {
	return o
}

// Whether to enroll member accounts of the organization if the account is the management account of an organization. Default is `false`.
func (o EnrollmentStatusOutput) IncludeMemberAccounts() pulumi.BoolOutput {
	return o.ApplyT(func(v *EnrollmentStatus) pulumi.BoolOutput { return v.IncludeMemberAccounts }).(pulumi.BoolOutput)
}

// The count of organization member accounts that are opted in to the service, if your account is an organization management account.
func (o EnrollmentStatusOutput) NumberOfMemberAccountsOptedIn() pulumi.IntOutput {
	return o.ApplyT(func(v *EnrollmentStatus) pulumi.IntOutput { return v.NumberOfMemberAccountsOptedIn }).(pulumi.IntOutput)
}

// The enrollment status of the account. Valid values: `Active`, `Inactive`.
func (o EnrollmentStatusOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *EnrollmentStatus) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o EnrollmentStatusOutput) Timeouts() EnrollmentStatusTimeoutsPtrOutput {
	return o.ApplyT(func(v *EnrollmentStatus) EnrollmentStatusTimeoutsPtrOutput { return v.Timeouts }).(EnrollmentStatusTimeoutsPtrOutput)
}

type EnrollmentStatusArrayOutput struct{ *pulumi.OutputState }

func (EnrollmentStatusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EnrollmentStatus)(nil)).Elem()
}

func (o EnrollmentStatusArrayOutput) ToEnrollmentStatusArrayOutput() EnrollmentStatusArrayOutput {
	return o
}

func (o EnrollmentStatusArrayOutput) ToEnrollmentStatusArrayOutputWithContext(ctx context.Context) EnrollmentStatusArrayOutput {
	return o
}

func (o EnrollmentStatusArrayOutput) Index(i pulumi.IntInput) EnrollmentStatusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EnrollmentStatus {
		return vs[0].([]*EnrollmentStatus)[vs[1].(int)]
	}).(EnrollmentStatusOutput)
}

type EnrollmentStatusMapOutput struct{ *pulumi.OutputState }

func (EnrollmentStatusMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EnrollmentStatus)(nil)).Elem()
}

func (o EnrollmentStatusMapOutput) ToEnrollmentStatusMapOutput() EnrollmentStatusMapOutput {
	return o
}

func (o EnrollmentStatusMapOutput) ToEnrollmentStatusMapOutputWithContext(ctx context.Context) EnrollmentStatusMapOutput {
	return o
}

func (o EnrollmentStatusMapOutput) MapIndex(k pulumi.StringInput) EnrollmentStatusOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EnrollmentStatus {
		return vs[0].(map[string]*EnrollmentStatus)[vs[1].(string)]
	}).(EnrollmentStatusOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnrollmentStatusInput)(nil)).Elem(), &EnrollmentStatus{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnrollmentStatusArrayInput)(nil)).Elem(), EnrollmentStatusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnrollmentStatusMapInput)(nil)).Elem(), EnrollmentStatusMap{})
	pulumi.RegisterOutputType(EnrollmentStatusOutput{})
	pulumi.RegisterOutputType(EnrollmentStatusArrayOutput{})
	pulumi.RegisterOutputType(EnrollmentStatusMapOutput{})
}
