// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lightsail

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Lightsail database. Use this resource to create and manage fully managed database instances with automated backups, monitoring, and maintenance in Lightsail.
//
// > **Note:** Lightsail is currently only supported in a limited number of AWS Regions, please see ["Regions and Availability Zones"](https://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/) for more details
//
// ## Example Usage
//
// ### Basic MySQL Blueprint
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/lightsail"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := lightsail.NewDatabase(ctx, "example", &lightsail.DatabaseArgs{
//				RelationalDatabaseName: pulumi.String("example-database"),
//				AvailabilityZone:       pulumi.String("us-east-1a"),
//				MasterDatabaseName:     pulumi.String("exampledb"),
//				MasterPassword:         pulumi.String("examplepassword123"),
//				MasterUsername:         pulumi.String("exampleuser"),
//				BlueprintId:            pulumi.String("mysql_8_0"),
//				BundleId:               pulumi.String("micro_1_0"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Basic PostgreSQL Blueprint
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/lightsail"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := lightsail.NewDatabase(ctx, "example", &lightsail.DatabaseArgs{
//				RelationalDatabaseName: pulumi.String("example-database"),
//				AvailabilityZone:       pulumi.String("us-east-1a"),
//				MasterDatabaseName:     pulumi.String("exampledb"),
//				MasterPassword:         pulumi.String("examplepassword123"),
//				MasterUsername:         pulumi.String("exampleuser"),
//				BlueprintId:            pulumi.String("postgres_12"),
//				BundleId:               pulumi.String("micro_1_0"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Custom Backup and Maintenance Windows
//
// Below is an example that sets a custom backup and maintenance window. Times are specified in UTC. This example will allow daily backups to take place between 16:00 and 16:30 each day. This example also requires any maintenance tasks (anything that would cause an outage, including changing some attributes) to take place on Tuesdays between 17:00 and 17:30. An action taken against this database that would cause an outage will wait until this time window to make the requested changes.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/lightsail"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := lightsail.NewDatabase(ctx, "example", &lightsail.DatabaseArgs{
//				RelationalDatabaseName:     pulumi.String("example-database"),
//				AvailabilityZone:           pulumi.String("us-east-1a"),
//				MasterDatabaseName:         pulumi.String("exampledb"),
//				MasterPassword:             pulumi.String("examplepassword123"),
//				MasterUsername:             pulumi.String("exampleuser"),
//				BlueprintId:                pulumi.String("postgres_12"),
//				BundleId:                   pulumi.String("micro_1_0"),
//				PreferredBackupWindow:      pulumi.String("16:00-16:30"),
//				PreferredMaintenanceWindow: pulumi.String("Tue:17:00-Tue:17:30"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Final Snapshots
//
// To enable creating a final snapshot of your database on deletion, use the `finalSnapshotName` argument to provide a name to be used for the snapshot.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/lightsail"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := lightsail.NewDatabase(ctx, "example", &lightsail.DatabaseArgs{
//				RelationalDatabaseName:     pulumi.String("example-database"),
//				AvailabilityZone:           pulumi.String("us-east-1a"),
//				MasterDatabaseName:         pulumi.String("exampledb"),
//				MasterPassword:             pulumi.String("examplepassword123"),
//				MasterUsername:             pulumi.String("exampleuser"),
//				BlueprintId:                pulumi.String("postgres_12"),
//				BundleId:                   pulumi.String("micro_1_0"),
//				PreferredBackupWindow:      pulumi.String("16:00-16:30"),
//				PreferredMaintenanceWindow: pulumi.String("Tue:17:00-Tue:17:30"),
//				FinalSnapshotName:          pulumi.String("example-final-snapshot"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Apply Immediately
//
// To enable applying changes immediately instead of waiting for a maintenance window, use the `applyImmediately` argument.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/lightsail"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := lightsail.NewDatabase(ctx, "example", &lightsail.DatabaseArgs{
//				RelationalDatabaseName: pulumi.String("example-database"),
//				AvailabilityZone:       pulumi.String("us-east-1a"),
//				MasterDatabaseName:     pulumi.String("exampledb"),
//				MasterPassword:         pulumi.String("examplepassword123"),
//				MasterUsername:         pulumi.String("exampleuser"),
//				BlueprintId:            pulumi.String("postgres_12"),
//				BundleId:               pulumi.String("micro_1_0"),
//				ApplyImmediately:       pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Blueprint IDs
//
// A list of all available Lightsail Blueprints for Relational Databases the [aws lightsail get-relational-database-blueprints](https://docs.aws.amazon.com/cli/latest/reference/lightsail/get-relational-database-blueprints.html) aws cli command.
//
// ### Examples
//
// - `mysql80`
// - `postgres12`
//
// ### Prefix
//
// A Blueprint ID starts with a prefix of the engine type.
//
// ### Suffix
//
// A Blueprint ID has a suffix of the engine version.
//
// ## Bundles
//
// A list of all available Lightsail Bundles for Relational Databases the [aws lightsail get-relational-database-bundles](https://docs.aws.amazon.com/cli/latest/reference/lightsail/get-relational-database-bundles.html) aws cli command.
//
// ### Examples
//
// - `small10`
// - `smallHa10`
// - `large10`
// - `largeHa10`
//
// ### Prefix
//
// A Bundle ID starts with one of the below size prefixes:
//
// - `micro_`
// - `small_`
// - `medium_`
// - `large_`
//
// ### Infixes (Optional for HA Database)
//
// A Bundle ID can have the following infix added in order to use the HA option of the selected bundle.
//
// - `ha_`
//
// ### Suffix
//
// A Bundle ID ends with one of the following suffix: `10`
//
// ## Import
//
// Using `pulumi import`, import Lightsail Databases using their name. For example:
//
// ```sh
// $ pulumi import aws:lightsail/database:Database example example-database
// ```
type Database struct {
	pulumi.CustomResourceState

	// Whether to apply changes immediately. When false, applies changes during the preferred maintenance window. Some changes may cause an outage.
	ApplyImmediately pulumi.BoolOutput `pulumi:"applyImmediately"`
	// ARN of the database (matches `id`).
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Availability Zone in which to create your database. Use the us-east-2a case-sensitive format.
	AvailabilityZone pulumi.StringOutput `pulumi:"availabilityZone"`
	// Whether to enable automated backup retention for your database. When false, disables automated backup retention for your database. Disabling backup retention deletes all automated database backups. Before disabling this, you may want to create a snapshot of your database.
	BackupRetentionEnabled pulumi.BoolPtrOutput `pulumi:"backupRetentionEnabled"`
	// Blueprint ID for your database. A blueprint describes the major engine version of a database. You can get a list of database blueprints IDs by using the AWS CLI command: `aws lightsail get-relational-database-blueprints`
	BlueprintId pulumi.StringOutput `pulumi:"blueprintId"`
	// Bundle ID for your database. A bundle describes the performance specifications for your database (see list below). You can get a list of database bundle IDs by using the AWS CLI command: `aws lightsail get-relational-database-bundles`.
	BundleId pulumi.StringOutput `pulumi:"bundleId"`
	// Certificate associated with the database.
	CaCertificateIdentifier pulumi.StringOutput `pulumi:"caCertificateIdentifier"`
	// Number of vCPUs for the database.
	CpuCount pulumi.IntOutput `pulumi:"cpuCount"`
	// Date and time when the database was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Size of the disk for the database.
	DiskSize pulumi.Float64Output `pulumi:"diskSize"`
	// Database software (for example, MySQL).
	Engine pulumi.StringOutput `pulumi:"engine"`
	// Database engine version (for example, 5.7.23).
	EngineVersion pulumi.StringOutput `pulumi:"engineVersion"`
	// Name of the database snapshot created if skip final snapshot is false, which is the default value for that parameter.
	FinalSnapshotName pulumi.StringPtrOutput `pulumi:"finalSnapshotName"`
	// Name of the master database created when the Lightsail database resource is created.
	MasterDatabaseName pulumi.StringOutput `pulumi:"masterDatabaseName"`
	// Master endpoint FQDN for the database.
	MasterEndpointAddress pulumi.StringOutput `pulumi:"masterEndpointAddress"`
	// Master endpoint network port for the database.
	MasterEndpointPort pulumi.IntOutput `pulumi:"masterEndpointPort"`
	// Password for the master user of your database. The password can include any printable ASCII character except "/", """, or "@".
	MasterPassword pulumi.StringOutput `pulumi:"masterPassword"`
	// Master user name for your database.
	MasterUsername pulumi.StringOutput `pulumi:"masterUsername"`
	// Daily time range during which automated backups are created for your database if automated backups are enabled. Must be in the hh24:mi-hh24:mi format. Example: `16:00-16:30`. Specified in Coordinated Universal Time (UTC).
	PreferredBackupWindow pulumi.StringOutput `pulumi:"preferredBackupWindow"`
	// Weekly time range during which system maintenance can occur on your database. Must be in the ddd:hh24:mi-ddd:hh24:mi format. Specified in Coordinated Universal Time (UTC). Example: `Tue:17:00-Tue:17:30`
	PreferredMaintenanceWindow pulumi.StringOutput `pulumi:"preferredMaintenanceWindow"`
	// Whether the database is accessible to resources outside of your Lightsail account. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database.
	PubliclyAccessible pulumi.BoolPtrOutput `pulumi:"publiclyAccessible"`
	// Amount of RAM in GB for the database.
	RamSize pulumi.Float64Output `pulumi:"ramSize"`
	// Name to use for your Lightsail database resource. Names be unique within each AWS Region in your Lightsail account.
	//
	// The following arguments are optional:
	RelationalDatabaseName pulumi.StringOutput `pulumi:"relationalDatabaseName"`
	// Secondary Availability Zone of a high availability database. The secondary database is used for failover support of a high availability database.
	SecondaryAvailabilityZone pulumi.StringOutput `pulumi:"secondaryAvailabilityZone"`
	// Whether a final database snapshot is created before your database is deleted. If true is specified, no database snapshot is created. If false is specified, a database snapshot is created before your database is deleted. You must specify the final relational database snapshot name parameter if the skip final snapshot parameter is false.
	SkipFinalSnapshot pulumi.BoolPtrOutput `pulumi:"skipFinalSnapshot"`
	// Support code for the database. Include this code in your email to support when you have questions about a database in Lightsail. This code enables our support team to look up your Lightsail information more easily.
	SupportCode pulumi.StringOutput `pulumi:"supportCode"`
	// Map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
}

// NewDatabase registers a new resource with the given unique name, arguments, and options.
func NewDatabase(ctx *pulumi.Context,
	name string, args *DatabaseArgs, opts ...pulumi.ResourceOption) (*Database, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BlueprintId == nil {
		return nil, errors.New("invalid value for required argument 'BlueprintId'")
	}
	if args.BundleId == nil {
		return nil, errors.New("invalid value for required argument 'BundleId'")
	}
	if args.MasterDatabaseName == nil {
		return nil, errors.New("invalid value for required argument 'MasterDatabaseName'")
	}
	if args.MasterPassword == nil {
		return nil, errors.New("invalid value for required argument 'MasterPassword'")
	}
	if args.MasterUsername == nil {
		return nil, errors.New("invalid value for required argument 'MasterUsername'")
	}
	if args.RelationalDatabaseName == nil {
		return nil, errors.New("invalid value for required argument 'RelationalDatabaseName'")
	}
	if args.MasterPassword != nil {
		args.MasterPassword = pulumi.ToSecret(args.MasterPassword).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"masterPassword",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Database
	err := ctx.RegisterResource("aws:lightsail/database:Database", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabase gets an existing Database resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseState, opts ...pulumi.ResourceOption) (*Database, error) {
	var resource Database
	err := ctx.ReadResource("aws:lightsail/database:Database", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Database resources.
type databaseState struct {
	// Whether to apply changes immediately. When false, applies changes during the preferred maintenance window. Some changes may cause an outage.
	ApplyImmediately *bool `pulumi:"applyImmediately"`
	// ARN of the database (matches `id`).
	Arn *string `pulumi:"arn"`
	// Availability Zone in which to create your database. Use the us-east-2a case-sensitive format.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Whether to enable automated backup retention for your database. When false, disables automated backup retention for your database. Disabling backup retention deletes all automated database backups. Before disabling this, you may want to create a snapshot of your database.
	BackupRetentionEnabled *bool `pulumi:"backupRetentionEnabled"`
	// Blueprint ID for your database. A blueprint describes the major engine version of a database. You can get a list of database blueprints IDs by using the AWS CLI command: `aws lightsail get-relational-database-blueprints`
	BlueprintId *string `pulumi:"blueprintId"`
	// Bundle ID for your database. A bundle describes the performance specifications for your database (see list below). You can get a list of database bundle IDs by using the AWS CLI command: `aws lightsail get-relational-database-bundles`.
	BundleId *string `pulumi:"bundleId"`
	// Certificate associated with the database.
	CaCertificateIdentifier *string `pulumi:"caCertificateIdentifier"`
	// Number of vCPUs for the database.
	CpuCount *int `pulumi:"cpuCount"`
	// Date and time when the database was created.
	CreatedAt *string `pulumi:"createdAt"`
	// Size of the disk for the database.
	DiskSize *float64 `pulumi:"diskSize"`
	// Database software (for example, MySQL).
	Engine *string `pulumi:"engine"`
	// Database engine version (for example, 5.7.23).
	EngineVersion *string `pulumi:"engineVersion"`
	// Name of the database snapshot created if skip final snapshot is false, which is the default value for that parameter.
	FinalSnapshotName *string `pulumi:"finalSnapshotName"`
	// Name of the master database created when the Lightsail database resource is created.
	MasterDatabaseName *string `pulumi:"masterDatabaseName"`
	// Master endpoint FQDN for the database.
	MasterEndpointAddress *string `pulumi:"masterEndpointAddress"`
	// Master endpoint network port for the database.
	MasterEndpointPort *int `pulumi:"masterEndpointPort"`
	// Password for the master user of your database. The password can include any printable ASCII character except "/", """, or "@".
	MasterPassword *string `pulumi:"masterPassword"`
	// Master user name for your database.
	MasterUsername *string `pulumi:"masterUsername"`
	// Daily time range during which automated backups are created for your database if automated backups are enabled. Must be in the hh24:mi-hh24:mi format. Example: `16:00-16:30`. Specified in Coordinated Universal Time (UTC).
	PreferredBackupWindow *string `pulumi:"preferredBackupWindow"`
	// Weekly time range during which system maintenance can occur on your database. Must be in the ddd:hh24:mi-ddd:hh24:mi format. Specified in Coordinated Universal Time (UTC). Example: `Tue:17:00-Tue:17:30`
	PreferredMaintenanceWindow *string `pulumi:"preferredMaintenanceWindow"`
	// Whether the database is accessible to resources outside of your Lightsail account. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database.
	PubliclyAccessible *bool `pulumi:"publiclyAccessible"`
	// Amount of RAM in GB for the database.
	RamSize *float64 `pulumi:"ramSize"`
	// Name to use for your Lightsail database resource. Names be unique within each AWS Region in your Lightsail account.
	//
	// The following arguments are optional:
	RelationalDatabaseName *string `pulumi:"relationalDatabaseName"`
	// Secondary Availability Zone of a high availability database. The secondary database is used for failover support of a high availability database.
	SecondaryAvailabilityZone *string `pulumi:"secondaryAvailabilityZone"`
	// Whether a final database snapshot is created before your database is deleted. If true is specified, no database snapshot is created. If false is specified, a database snapshot is created before your database is deleted. You must specify the final relational database snapshot name parameter if the skip final snapshot parameter is false.
	SkipFinalSnapshot *bool `pulumi:"skipFinalSnapshot"`
	// Support code for the database. Include this code in your email to support when you have questions about a database in Lightsail. This code enables our support team to look up your Lightsail information more easily.
	SupportCode *string `pulumi:"supportCode"`
	// Map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type DatabaseState struct {
	// Whether to apply changes immediately. When false, applies changes during the preferred maintenance window. Some changes may cause an outage.
	ApplyImmediately pulumi.BoolPtrInput
	// ARN of the database (matches `id`).
	Arn pulumi.StringPtrInput
	// Availability Zone in which to create your database. Use the us-east-2a case-sensitive format.
	AvailabilityZone pulumi.StringPtrInput
	// Whether to enable automated backup retention for your database. When false, disables automated backup retention for your database. Disabling backup retention deletes all automated database backups. Before disabling this, you may want to create a snapshot of your database.
	BackupRetentionEnabled pulumi.BoolPtrInput
	// Blueprint ID for your database. A blueprint describes the major engine version of a database. You can get a list of database blueprints IDs by using the AWS CLI command: `aws lightsail get-relational-database-blueprints`
	BlueprintId pulumi.StringPtrInput
	// Bundle ID for your database. A bundle describes the performance specifications for your database (see list below). You can get a list of database bundle IDs by using the AWS CLI command: `aws lightsail get-relational-database-bundles`.
	BundleId pulumi.StringPtrInput
	// Certificate associated with the database.
	CaCertificateIdentifier pulumi.StringPtrInput
	// Number of vCPUs for the database.
	CpuCount pulumi.IntPtrInput
	// Date and time when the database was created.
	CreatedAt pulumi.StringPtrInput
	// Size of the disk for the database.
	DiskSize pulumi.Float64PtrInput
	// Database software (for example, MySQL).
	Engine pulumi.StringPtrInput
	// Database engine version (for example, 5.7.23).
	EngineVersion pulumi.StringPtrInput
	// Name of the database snapshot created if skip final snapshot is false, which is the default value for that parameter.
	FinalSnapshotName pulumi.StringPtrInput
	// Name of the master database created when the Lightsail database resource is created.
	MasterDatabaseName pulumi.StringPtrInput
	// Master endpoint FQDN for the database.
	MasterEndpointAddress pulumi.StringPtrInput
	// Master endpoint network port for the database.
	MasterEndpointPort pulumi.IntPtrInput
	// Password for the master user of your database. The password can include any printable ASCII character except "/", """, or "@".
	MasterPassword pulumi.StringPtrInput
	// Master user name for your database.
	MasterUsername pulumi.StringPtrInput
	// Daily time range during which automated backups are created for your database if automated backups are enabled. Must be in the hh24:mi-hh24:mi format. Example: `16:00-16:30`. Specified in Coordinated Universal Time (UTC).
	PreferredBackupWindow pulumi.StringPtrInput
	// Weekly time range during which system maintenance can occur on your database. Must be in the ddd:hh24:mi-ddd:hh24:mi format. Specified in Coordinated Universal Time (UTC). Example: `Tue:17:00-Tue:17:30`
	PreferredMaintenanceWindow pulumi.StringPtrInput
	// Whether the database is accessible to resources outside of your Lightsail account. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database.
	PubliclyAccessible pulumi.BoolPtrInput
	// Amount of RAM in GB for the database.
	RamSize pulumi.Float64PtrInput
	// Name to use for your Lightsail database resource. Names be unique within each AWS Region in your Lightsail account.
	//
	// The following arguments are optional:
	RelationalDatabaseName pulumi.StringPtrInput
	// Secondary Availability Zone of a high availability database. The secondary database is used for failover support of a high availability database.
	SecondaryAvailabilityZone pulumi.StringPtrInput
	// Whether a final database snapshot is created before your database is deleted. If true is specified, no database snapshot is created. If false is specified, a database snapshot is created before your database is deleted. You must specify the final relational database snapshot name parameter if the skip final snapshot parameter is false.
	SkipFinalSnapshot pulumi.BoolPtrInput
	// Support code for the database. Include this code in your email to support when you have questions about a database in Lightsail. This code enables our support team to look up your Lightsail information more easily.
	SupportCode pulumi.StringPtrInput
	// Map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapInput
}

func (DatabaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseState)(nil)).Elem()
}

type databaseArgs struct {
	// Whether to apply changes immediately. When false, applies changes during the preferred maintenance window. Some changes may cause an outage.
	ApplyImmediately *bool `pulumi:"applyImmediately"`
	// Availability Zone in which to create your database. Use the us-east-2a case-sensitive format.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Whether to enable automated backup retention for your database. When false, disables automated backup retention for your database. Disabling backup retention deletes all automated database backups. Before disabling this, you may want to create a snapshot of your database.
	BackupRetentionEnabled *bool `pulumi:"backupRetentionEnabled"`
	// Blueprint ID for your database. A blueprint describes the major engine version of a database. You can get a list of database blueprints IDs by using the AWS CLI command: `aws lightsail get-relational-database-blueprints`
	BlueprintId string `pulumi:"blueprintId"`
	// Bundle ID for your database. A bundle describes the performance specifications for your database (see list below). You can get a list of database bundle IDs by using the AWS CLI command: `aws lightsail get-relational-database-bundles`.
	BundleId string `pulumi:"bundleId"`
	// Name of the database snapshot created if skip final snapshot is false, which is the default value for that parameter.
	FinalSnapshotName *string `pulumi:"finalSnapshotName"`
	// Name of the master database created when the Lightsail database resource is created.
	MasterDatabaseName string `pulumi:"masterDatabaseName"`
	// Password for the master user of your database. The password can include any printable ASCII character except "/", """, or "@".
	MasterPassword string `pulumi:"masterPassword"`
	// Master user name for your database.
	MasterUsername string `pulumi:"masterUsername"`
	// Daily time range during which automated backups are created for your database if automated backups are enabled. Must be in the hh24:mi-hh24:mi format. Example: `16:00-16:30`. Specified in Coordinated Universal Time (UTC).
	PreferredBackupWindow *string `pulumi:"preferredBackupWindow"`
	// Weekly time range during which system maintenance can occur on your database. Must be in the ddd:hh24:mi-ddd:hh24:mi format. Specified in Coordinated Universal Time (UTC). Example: `Tue:17:00-Tue:17:30`
	PreferredMaintenanceWindow *string `pulumi:"preferredMaintenanceWindow"`
	// Whether the database is accessible to resources outside of your Lightsail account. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database.
	PubliclyAccessible *bool `pulumi:"publiclyAccessible"`
	// Name to use for your Lightsail database resource. Names be unique within each AWS Region in your Lightsail account.
	//
	// The following arguments are optional:
	RelationalDatabaseName string `pulumi:"relationalDatabaseName"`
	// Whether a final database snapshot is created before your database is deleted. If true is specified, no database snapshot is created. If false is specified, a database snapshot is created before your database is deleted. You must specify the final relational database snapshot name parameter if the skip final snapshot parameter is false.
	SkipFinalSnapshot *bool `pulumi:"skipFinalSnapshot"`
	// Map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Database resource.
type DatabaseArgs struct {
	// Whether to apply changes immediately. When false, applies changes during the preferred maintenance window. Some changes may cause an outage.
	ApplyImmediately pulumi.BoolPtrInput
	// Availability Zone in which to create your database. Use the us-east-2a case-sensitive format.
	AvailabilityZone pulumi.StringPtrInput
	// Whether to enable automated backup retention for your database. When false, disables automated backup retention for your database. Disabling backup retention deletes all automated database backups. Before disabling this, you may want to create a snapshot of your database.
	BackupRetentionEnabled pulumi.BoolPtrInput
	// Blueprint ID for your database. A blueprint describes the major engine version of a database. You can get a list of database blueprints IDs by using the AWS CLI command: `aws lightsail get-relational-database-blueprints`
	BlueprintId pulumi.StringInput
	// Bundle ID for your database. A bundle describes the performance specifications for your database (see list below). You can get a list of database bundle IDs by using the AWS CLI command: `aws lightsail get-relational-database-bundles`.
	BundleId pulumi.StringInput
	// Name of the database snapshot created if skip final snapshot is false, which is the default value for that parameter.
	FinalSnapshotName pulumi.StringPtrInput
	// Name of the master database created when the Lightsail database resource is created.
	MasterDatabaseName pulumi.StringInput
	// Password for the master user of your database. The password can include any printable ASCII character except "/", """, or "@".
	MasterPassword pulumi.StringInput
	// Master user name for your database.
	MasterUsername pulumi.StringInput
	// Daily time range during which automated backups are created for your database if automated backups are enabled. Must be in the hh24:mi-hh24:mi format. Example: `16:00-16:30`. Specified in Coordinated Universal Time (UTC).
	PreferredBackupWindow pulumi.StringPtrInput
	// Weekly time range during which system maintenance can occur on your database. Must be in the ddd:hh24:mi-ddd:hh24:mi format. Specified in Coordinated Universal Time (UTC). Example: `Tue:17:00-Tue:17:30`
	PreferredMaintenanceWindow pulumi.StringPtrInput
	// Whether the database is accessible to resources outside of your Lightsail account. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database.
	PubliclyAccessible pulumi.BoolPtrInput
	// Name to use for your Lightsail database resource. Names be unique within each AWS Region in your Lightsail account.
	//
	// The following arguments are optional:
	RelationalDatabaseName pulumi.StringInput
	// Whether a final database snapshot is created before your database is deleted. If true is specified, no database snapshot is created. If false is specified, a database snapshot is created before your database is deleted. You must specify the final relational database snapshot name parameter if the skip final snapshot parameter is false.
	SkipFinalSnapshot pulumi.BoolPtrInput
	// Map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
}

func (DatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseArgs)(nil)).Elem()
}

type DatabaseInput interface {
	pulumi.Input

	ToDatabaseOutput() DatabaseOutput
	ToDatabaseOutputWithContext(ctx context.Context) DatabaseOutput
}

func (*Database) ElementType() reflect.Type {
	return reflect.TypeOf((**Database)(nil)).Elem()
}

func (i *Database) ToDatabaseOutput() DatabaseOutput {
	return i.ToDatabaseOutputWithContext(context.Background())
}

func (i *Database) ToDatabaseOutputWithContext(ctx context.Context) DatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseOutput)
}

// DatabaseArrayInput is an input type that accepts DatabaseArray and DatabaseArrayOutput values.
// You can construct a concrete instance of `DatabaseArrayInput` via:
//
//	DatabaseArray{ DatabaseArgs{...} }
type DatabaseArrayInput interface {
	pulumi.Input

	ToDatabaseArrayOutput() DatabaseArrayOutput
	ToDatabaseArrayOutputWithContext(context.Context) DatabaseArrayOutput
}

type DatabaseArray []DatabaseInput

func (DatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Database)(nil)).Elem()
}

func (i DatabaseArray) ToDatabaseArrayOutput() DatabaseArrayOutput {
	return i.ToDatabaseArrayOutputWithContext(context.Background())
}

func (i DatabaseArray) ToDatabaseArrayOutputWithContext(ctx context.Context) DatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseArrayOutput)
}

// DatabaseMapInput is an input type that accepts DatabaseMap and DatabaseMapOutput values.
// You can construct a concrete instance of `DatabaseMapInput` via:
//
//	DatabaseMap{ "key": DatabaseArgs{...} }
type DatabaseMapInput interface {
	pulumi.Input

	ToDatabaseMapOutput() DatabaseMapOutput
	ToDatabaseMapOutputWithContext(context.Context) DatabaseMapOutput
}

type DatabaseMap map[string]DatabaseInput

func (DatabaseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Database)(nil)).Elem()
}

func (i DatabaseMap) ToDatabaseMapOutput() DatabaseMapOutput {
	return i.ToDatabaseMapOutputWithContext(context.Background())
}

func (i DatabaseMap) ToDatabaseMapOutputWithContext(ctx context.Context) DatabaseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseMapOutput)
}

type DatabaseOutput struct{ *pulumi.OutputState }

func (DatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Database)(nil)).Elem()
}

func (o DatabaseOutput) ToDatabaseOutput() DatabaseOutput {
	return o
}

func (o DatabaseOutput) ToDatabaseOutputWithContext(ctx context.Context) DatabaseOutput {
	return o
}

// Whether to apply changes immediately. When false, applies changes during the preferred maintenance window. Some changes may cause an outage.
func (o DatabaseOutput) ApplyImmediately() pulumi.BoolOutput {
	return o.ApplyT(func(v *Database) pulumi.BoolOutput { return v.ApplyImmediately }).(pulumi.BoolOutput)
}

// ARN of the database (matches `id`).
func (o DatabaseOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Availability Zone in which to create your database. Use the us-east-2a case-sensitive format.
func (o DatabaseOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Whether to enable automated backup retention for your database. When false, disables automated backup retention for your database. Disabling backup retention deletes all automated database backups. Before disabling this, you may want to create a snapshot of your database.
func (o DatabaseOutput) BackupRetentionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Database) pulumi.BoolPtrOutput { return v.BackupRetentionEnabled }).(pulumi.BoolPtrOutput)
}

// Blueprint ID for your database. A blueprint describes the major engine version of a database. You can get a list of database blueprints IDs by using the AWS CLI command: `aws lightsail get-relational-database-blueprints`
func (o DatabaseOutput) BlueprintId() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.BlueprintId }).(pulumi.StringOutput)
}

// Bundle ID for your database. A bundle describes the performance specifications for your database (see list below). You can get a list of database bundle IDs by using the AWS CLI command: `aws lightsail get-relational-database-bundles`.
func (o DatabaseOutput) BundleId() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.BundleId }).(pulumi.StringOutput)
}

// Certificate associated with the database.
func (o DatabaseOutput) CaCertificateIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.CaCertificateIdentifier }).(pulumi.StringOutput)
}

// Number of vCPUs for the database.
func (o DatabaseOutput) CpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v *Database) pulumi.IntOutput { return v.CpuCount }).(pulumi.IntOutput)
}

// Date and time when the database was created.
func (o DatabaseOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Size of the disk for the database.
func (o DatabaseOutput) DiskSize() pulumi.Float64Output {
	return o.ApplyT(func(v *Database) pulumi.Float64Output { return v.DiskSize }).(pulumi.Float64Output)
}

// Database software (for example, MySQL).
func (o DatabaseOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.Engine }).(pulumi.StringOutput)
}

// Database engine version (for example, 5.7.23).
func (o DatabaseOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.EngineVersion }).(pulumi.StringOutput)
}

// Name of the database snapshot created if skip final snapshot is false, which is the default value for that parameter.
func (o DatabaseOutput) FinalSnapshotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Database) pulumi.StringPtrOutput { return v.FinalSnapshotName }).(pulumi.StringPtrOutput)
}

// Name of the master database created when the Lightsail database resource is created.
func (o DatabaseOutput) MasterDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.MasterDatabaseName }).(pulumi.StringOutput)
}

// Master endpoint FQDN for the database.
func (o DatabaseOutput) MasterEndpointAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.MasterEndpointAddress }).(pulumi.StringOutput)
}

// Master endpoint network port for the database.
func (o DatabaseOutput) MasterEndpointPort() pulumi.IntOutput {
	return o.ApplyT(func(v *Database) pulumi.IntOutput { return v.MasterEndpointPort }).(pulumi.IntOutput)
}

// Password for the master user of your database. The password can include any printable ASCII character except "/", """, or "@".
func (o DatabaseOutput) MasterPassword() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.MasterPassword }).(pulumi.StringOutput)
}

// Master user name for your database.
func (o DatabaseOutput) MasterUsername() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.MasterUsername }).(pulumi.StringOutput)
}

// Daily time range during which automated backups are created for your database if automated backups are enabled. Must be in the hh24:mi-hh24:mi format. Example: `16:00-16:30`. Specified in Coordinated Universal Time (UTC).
func (o DatabaseOutput) PreferredBackupWindow() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.PreferredBackupWindow }).(pulumi.StringOutput)
}

// Weekly time range during which system maintenance can occur on your database. Must be in the ddd:hh24:mi-ddd:hh24:mi format. Specified in Coordinated Universal Time (UTC). Example: `Tue:17:00-Tue:17:30`
func (o DatabaseOutput) PreferredMaintenanceWindow() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.PreferredMaintenanceWindow }).(pulumi.StringOutput)
}

// Whether the database is accessible to resources outside of your Lightsail account. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database.
func (o DatabaseOutput) PubliclyAccessible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Database) pulumi.BoolPtrOutput { return v.PubliclyAccessible }).(pulumi.BoolPtrOutput)
}

// Amount of RAM in GB for the database.
func (o DatabaseOutput) RamSize() pulumi.Float64Output {
	return o.ApplyT(func(v *Database) pulumi.Float64Output { return v.RamSize }).(pulumi.Float64Output)
}

// Name to use for your Lightsail database resource. Names be unique within each AWS Region in your Lightsail account.
//
// The following arguments are optional:
func (o DatabaseOutput) RelationalDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.RelationalDatabaseName }).(pulumi.StringOutput)
}

// Secondary Availability Zone of a high availability database. The secondary database is used for failover support of a high availability database.
func (o DatabaseOutput) SecondaryAvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.SecondaryAvailabilityZone }).(pulumi.StringOutput)
}

// Whether a final database snapshot is created before your database is deleted. If true is specified, no database snapshot is created. If false is specified, a database snapshot is created before your database is deleted. You must specify the final relational database snapshot name parameter if the skip final snapshot parameter is false.
func (o DatabaseOutput) SkipFinalSnapshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Database) pulumi.BoolPtrOutput { return v.SkipFinalSnapshot }).(pulumi.BoolPtrOutput)
}

// Support code for the database. Include this code in your email to support when you have questions about a database in Lightsail. This code enables our support team to look up your Lightsail information more easily.
func (o DatabaseOutput) SupportCode() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.SupportCode }).(pulumi.StringOutput)
}

// Map of tags to assign to the resource. To create a key-only tag, use an empty string as the value. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o DatabaseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Database) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
//
// Deprecated: Please use `tags` instead.
func (o DatabaseOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Database) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type DatabaseArrayOutput struct{ *pulumi.OutputState }

func (DatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Database)(nil)).Elem()
}

func (o DatabaseArrayOutput) ToDatabaseArrayOutput() DatabaseArrayOutput {
	return o
}

func (o DatabaseArrayOutput) ToDatabaseArrayOutputWithContext(ctx context.Context) DatabaseArrayOutput {
	return o
}

func (o DatabaseArrayOutput) Index(i pulumi.IntInput) DatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Database {
		return vs[0].([]*Database)[vs[1].(int)]
	}).(DatabaseOutput)
}

type DatabaseMapOutput struct{ *pulumi.OutputState }

func (DatabaseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Database)(nil)).Elem()
}

func (o DatabaseMapOutput) ToDatabaseMapOutput() DatabaseMapOutput {
	return o
}

func (o DatabaseMapOutput) ToDatabaseMapOutputWithContext(ctx context.Context) DatabaseMapOutput {
	return o
}

func (o DatabaseMapOutput) MapIndex(k pulumi.StringInput) DatabaseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Database {
		return vs[0].(map[string]*Database)[vs[1].(string)]
	}).(DatabaseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseInput)(nil)).Elem(), &Database{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseArrayInput)(nil)).Elem(), DatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseMapInput)(nil)).Elem(), DatabaseMap{})
	pulumi.RegisterOutputType(DatabaseOutput{})
	pulumi.RegisterOutputType(DatabaseArrayOutput{})
	pulumi.RegisterOutputType(DatabaseMapOutput{})
}
