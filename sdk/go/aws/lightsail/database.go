// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lightsail

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a Lightsail Database. Amazon Lightsail is a service to provide easy virtual private servers
// with custom software already setup. See [What is Amazon Lightsail?](https://lightsail.aws.amazon.com/ls/docs/getting-started/article/what-is-amazon-lightsail)
// for more information.
//
// > **Note:** Lightsail is currently only supported in a limited number of AWS Regions, please see ["Regions and Availability Zones"](https://aws.amazon.com/about-aws/global-infrastructure/regional-product-services/) for more details
//
// ## Example Usage
// ## Blueprint Ids
//
// A list of all available Lightsail Blueprints for Relational Databases the [aws lightsail get-relational-database-blueprints](https://docs.aws.amazon.com/cli/latest/reference/lightsail/get-relational-database-blueprints.html) aws cli command.
//
// ### Examples
//
// - `mysql80`
// - `postgres12`
//
// ### Prefix
//
// A Blueprint ID starts with a prefix of the engine type.
//
// ### Suffix
//
// A Blueprint ID has a sufix of the engine version.
//
// ## Bundles
//
// A list of all available Lightsail Bundles for Relational Databases the [aws lightsail get-relational-database-bundles](https://docs.aws.amazon.com/cli/latest/reference/lightsail/get-relational-database-bundles.html) aws cli command.
//
// ### Examples
//
// - `small10`
// - `smallHa10`
// - `large10`
// - `largeHa10`
//
// ### Prefix
//
// A Bundle ID starts with one of the below size prefixes:
//
// - `micro_`
// - `small_`
// - `medium_`
// - `large_`
//
// ### Infixes (Optional for HA Database)
//
// A Bundle Id can have the following infix added in order to use the HA option of the selected bundle.
//
// - `ha_`
//
// ### Suffix
//
// A Bundle ID ends with one of the following suffix: `10`
//
// ## Import
//
// Lightsail Databases can be imported using their name, e.g.
//
// ```sh
//
//	$ pulumi import aws:lightsail/database:Database foo 'bar'
//
// ```
type Database struct {
	pulumi.CustomResourceState

	// When true , applies changes immediately. When false , applies changes during the preferred maintenance window. Some changes may cause an outage.
	ApplyImmediately pulumi.BoolOutput `pulumi:"applyImmediately"`
	// The ARN of the Lightsail instance (matches `id`).
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The Availability Zone in which to create your new database. Use the us-east-2a case-sensitive format.
	AvailabilityZone pulumi.StringOutput `pulumi:"availabilityZone"`
	// When true, enables automated backup retention for your database. When false, disables automated backup retention for your database. Disabling backup retention deletes all automated database backups. Before disabling this, you may want to create a snapshot of your database.
	BackupRetentionEnabled pulumi.BoolPtrOutput `pulumi:"backupRetentionEnabled"`
	// The blueprint ID for your new database. A blueprint describes the major engine version of a database. You can get a list of database blueprints IDs by using the AWS CLI command: `aws lightsail get-relational-database-blueprints`
	BlueprintId pulumi.StringOutput `pulumi:"blueprintId"`
	// The bundle ID for your new database. A bundle describes the performance specifications for your database (see list below). You can get a list of database bundle IDs by using the AWS CLI command: `aws lightsail get-relational-database-bundles`.
	BundleId pulumi.StringOutput `pulumi:"bundleId"`
	// The certificate associated with the database.
	CaCertificateIdentifier pulumi.StringOutput `pulumi:"caCertificateIdentifier"`
	// The number of vCPUs for the database.
	CpuCount pulumi.IntOutput `pulumi:"cpuCount"`
	// The timestamp when the instance was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The size of the disk for the database.
	DiskSize pulumi.Float64Output `pulumi:"diskSize"`
	// The database software (for example, MySQL).
	Engine pulumi.StringOutput `pulumi:"engine"`
	// The database engine version (for example, 5.7.23).
	EngineVersion pulumi.StringOutput `pulumi:"engineVersion"`
	// The name of the database snapshot created if skip final snapshot is false, which is the default value for that parameter.
	FinalSnapshotName pulumi.StringPtrOutput `pulumi:"finalSnapshotName"`
	// The name of the master database created when the Lightsail database resource is created.
	MasterDatabaseName pulumi.StringOutput `pulumi:"masterDatabaseName"`
	// The master endpoint fqdn for the database.
	MasterEndpointAddress pulumi.StringOutput `pulumi:"masterEndpointAddress"`
	// The master endpoint network port for the database.
	MasterEndpointPort pulumi.IntOutput `pulumi:"masterEndpointPort"`
	// The password for the master user of your new database. The password can include any printable ASCII character except "/", """, or "@".
	MasterPassword pulumi.StringOutput `pulumi:"masterPassword"`
	// The master user name for your new database.
	MasterUsername pulumi.StringOutput `pulumi:"masterUsername"`
	// The daily time range during which automated backups are created for your new database if automated backups are enabled. Must be in the hh24:mi-hh24:mi format. Example: `16:00-16:30`. Specified in Coordinated Universal Time (UTC).
	PreferredBackupWindow pulumi.StringOutput `pulumi:"preferredBackupWindow"`
	// The weekly time range during which system maintenance can occur on your new database. Must be in the ddd:hh24:mi-ddd:hh24:mi format. Specified in Coordinated Universal Time (UTC). Example: `Tue:17:00-Tue:17:30`
	PreferredMaintenanceWindow pulumi.StringOutput `pulumi:"preferredMaintenanceWindow"`
	// Specifies the accessibility options for your new database. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database.
	PubliclyAccessible pulumi.BoolPtrOutput `pulumi:"publiclyAccessible"`
	// The amount of RAM in GB for the database.
	RamSize                pulumi.Float64Output `pulumi:"ramSize"`
	RelationalDatabaseName pulumi.StringOutput  `pulumi:"relationalDatabaseName"`
	// Describes the secondary Availability Zone of a high availability database. The secondary database is used for failover support of a high availability database.
	SecondaryAvailabilityZone pulumi.StringOutput `pulumi:"secondaryAvailabilityZone"`
	// Determines whether a final database snapshot is created before your database is deleted. If true is specified, no database snapshot is created. If false is specified, a database snapshot is created before your database is deleted. You must specify the final relational database snapshot name parameter if the skip final snapshot parameter is false.
	SkipFinalSnapshot pulumi.BoolPtrOutput `pulumi:"skipFinalSnapshot"`
	// The support code for the database. Include this code in your email to support when you have questions about a database in Lightsail. This code enables our support team to look up your Lightsail information more easily.
	SupportCode pulumi.StringOutput `pulumi:"supportCode"`
	// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
}

// NewDatabase registers a new resource with the given unique name, arguments, and options.
func NewDatabase(ctx *pulumi.Context,
	name string, args *DatabaseArgs, opts ...pulumi.ResourceOption) (*Database, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AvailabilityZone == nil {
		return nil, errors.New("invalid value for required argument 'AvailabilityZone'")
	}
	if args.BlueprintId == nil {
		return nil, errors.New("invalid value for required argument 'BlueprintId'")
	}
	if args.BundleId == nil {
		return nil, errors.New("invalid value for required argument 'BundleId'")
	}
	if args.MasterDatabaseName == nil {
		return nil, errors.New("invalid value for required argument 'MasterDatabaseName'")
	}
	if args.MasterPassword == nil {
		return nil, errors.New("invalid value for required argument 'MasterPassword'")
	}
	if args.MasterUsername == nil {
		return nil, errors.New("invalid value for required argument 'MasterUsername'")
	}
	if args.RelationalDatabaseName == nil {
		return nil, errors.New("invalid value for required argument 'RelationalDatabaseName'")
	}
	var resource Database
	err := ctx.RegisterResource("aws:lightsail/database:Database", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabase gets an existing Database resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabase(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseState, opts ...pulumi.ResourceOption) (*Database, error) {
	var resource Database
	err := ctx.ReadResource("aws:lightsail/database:Database", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Database resources.
type databaseState struct {
	// When true , applies changes immediately. When false , applies changes during the preferred maintenance window. Some changes may cause an outage.
	ApplyImmediately *bool `pulumi:"applyImmediately"`
	// The ARN of the Lightsail instance (matches `id`).
	Arn *string `pulumi:"arn"`
	// The Availability Zone in which to create your new database. Use the us-east-2a case-sensitive format.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// When true, enables automated backup retention for your database. When false, disables automated backup retention for your database. Disabling backup retention deletes all automated database backups. Before disabling this, you may want to create a snapshot of your database.
	BackupRetentionEnabled *bool `pulumi:"backupRetentionEnabled"`
	// The blueprint ID for your new database. A blueprint describes the major engine version of a database. You can get a list of database blueprints IDs by using the AWS CLI command: `aws lightsail get-relational-database-blueprints`
	BlueprintId *string `pulumi:"blueprintId"`
	// The bundle ID for your new database. A bundle describes the performance specifications for your database (see list below). You can get a list of database bundle IDs by using the AWS CLI command: `aws lightsail get-relational-database-bundles`.
	BundleId *string `pulumi:"bundleId"`
	// The certificate associated with the database.
	CaCertificateIdentifier *string `pulumi:"caCertificateIdentifier"`
	// The number of vCPUs for the database.
	CpuCount *int `pulumi:"cpuCount"`
	// The timestamp when the instance was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The size of the disk for the database.
	DiskSize *float64 `pulumi:"diskSize"`
	// The database software (for example, MySQL).
	Engine *string `pulumi:"engine"`
	// The database engine version (for example, 5.7.23).
	EngineVersion *string `pulumi:"engineVersion"`
	// The name of the database snapshot created if skip final snapshot is false, which is the default value for that parameter.
	FinalSnapshotName *string `pulumi:"finalSnapshotName"`
	// The name of the master database created when the Lightsail database resource is created.
	MasterDatabaseName *string `pulumi:"masterDatabaseName"`
	// The master endpoint fqdn for the database.
	MasterEndpointAddress *string `pulumi:"masterEndpointAddress"`
	// The master endpoint network port for the database.
	MasterEndpointPort *int `pulumi:"masterEndpointPort"`
	// The password for the master user of your new database. The password can include any printable ASCII character except "/", """, or "@".
	MasterPassword *string `pulumi:"masterPassword"`
	// The master user name for your new database.
	MasterUsername *string `pulumi:"masterUsername"`
	// The daily time range during which automated backups are created for your new database if automated backups are enabled. Must be in the hh24:mi-hh24:mi format. Example: `16:00-16:30`. Specified in Coordinated Universal Time (UTC).
	PreferredBackupWindow *string `pulumi:"preferredBackupWindow"`
	// The weekly time range during which system maintenance can occur on your new database. Must be in the ddd:hh24:mi-ddd:hh24:mi format. Specified in Coordinated Universal Time (UTC). Example: `Tue:17:00-Tue:17:30`
	PreferredMaintenanceWindow *string `pulumi:"preferredMaintenanceWindow"`
	// Specifies the accessibility options for your new database. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database.
	PubliclyAccessible *bool `pulumi:"publiclyAccessible"`
	// The amount of RAM in GB for the database.
	RamSize                *float64 `pulumi:"ramSize"`
	RelationalDatabaseName *string  `pulumi:"relationalDatabaseName"`
	// Describes the secondary Availability Zone of a high availability database. The secondary database is used for failover support of a high availability database.
	SecondaryAvailabilityZone *string `pulumi:"secondaryAvailabilityZone"`
	// Determines whether a final database snapshot is created before your database is deleted. If true is specified, no database snapshot is created. If false is specified, a database snapshot is created before your database is deleted. You must specify the final relational database snapshot name parameter if the skip final snapshot parameter is false.
	SkipFinalSnapshot *bool `pulumi:"skipFinalSnapshot"`
	// The support code for the database. Include this code in your email to support when you have questions about a database in Lightsail. This code enables our support team to look up your Lightsail information more easily.
	SupportCode *string `pulumi:"supportCode"`
	// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type DatabaseState struct {
	// When true , applies changes immediately. When false , applies changes during the preferred maintenance window. Some changes may cause an outage.
	ApplyImmediately pulumi.BoolPtrInput
	// The ARN of the Lightsail instance (matches `id`).
	Arn pulumi.StringPtrInput
	// The Availability Zone in which to create your new database. Use the us-east-2a case-sensitive format.
	AvailabilityZone pulumi.StringPtrInput
	// When true, enables automated backup retention for your database. When false, disables automated backup retention for your database. Disabling backup retention deletes all automated database backups. Before disabling this, you may want to create a snapshot of your database.
	BackupRetentionEnabled pulumi.BoolPtrInput
	// The blueprint ID for your new database. A blueprint describes the major engine version of a database. You can get a list of database blueprints IDs by using the AWS CLI command: `aws lightsail get-relational-database-blueprints`
	BlueprintId pulumi.StringPtrInput
	// The bundle ID for your new database. A bundle describes the performance specifications for your database (see list below). You can get a list of database bundle IDs by using the AWS CLI command: `aws lightsail get-relational-database-bundles`.
	BundleId pulumi.StringPtrInput
	// The certificate associated with the database.
	CaCertificateIdentifier pulumi.StringPtrInput
	// The number of vCPUs for the database.
	CpuCount pulumi.IntPtrInput
	// The timestamp when the instance was created.
	CreatedAt pulumi.StringPtrInput
	// The size of the disk for the database.
	DiskSize pulumi.Float64PtrInput
	// The database software (for example, MySQL).
	Engine pulumi.StringPtrInput
	// The database engine version (for example, 5.7.23).
	EngineVersion pulumi.StringPtrInput
	// The name of the database snapshot created if skip final snapshot is false, which is the default value for that parameter.
	FinalSnapshotName pulumi.StringPtrInput
	// The name of the master database created when the Lightsail database resource is created.
	MasterDatabaseName pulumi.StringPtrInput
	// The master endpoint fqdn for the database.
	MasterEndpointAddress pulumi.StringPtrInput
	// The master endpoint network port for the database.
	MasterEndpointPort pulumi.IntPtrInput
	// The password for the master user of your new database. The password can include any printable ASCII character except "/", """, or "@".
	MasterPassword pulumi.StringPtrInput
	// The master user name for your new database.
	MasterUsername pulumi.StringPtrInput
	// The daily time range during which automated backups are created for your new database if automated backups are enabled. Must be in the hh24:mi-hh24:mi format. Example: `16:00-16:30`. Specified in Coordinated Universal Time (UTC).
	PreferredBackupWindow pulumi.StringPtrInput
	// The weekly time range during which system maintenance can occur on your new database. Must be in the ddd:hh24:mi-ddd:hh24:mi format. Specified in Coordinated Universal Time (UTC). Example: `Tue:17:00-Tue:17:30`
	PreferredMaintenanceWindow pulumi.StringPtrInput
	// Specifies the accessibility options for your new database. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database.
	PubliclyAccessible pulumi.BoolPtrInput
	// The amount of RAM in GB for the database.
	RamSize                pulumi.Float64PtrInput
	RelationalDatabaseName pulumi.StringPtrInput
	// Describes the secondary Availability Zone of a high availability database. The secondary database is used for failover support of a high availability database.
	SecondaryAvailabilityZone pulumi.StringPtrInput
	// Determines whether a final database snapshot is created before your database is deleted. If true is specified, no database snapshot is created. If false is specified, a database snapshot is created before your database is deleted. You must specify the final relational database snapshot name parameter if the skip final snapshot parameter is false.
	SkipFinalSnapshot pulumi.BoolPtrInput
	// The support code for the database. Include this code in your email to support when you have questions about a database in Lightsail. This code enables our support team to look up your Lightsail information more easily.
	SupportCode pulumi.StringPtrInput
	// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumi.StringMapInput
}

func (DatabaseState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseState)(nil)).Elem()
}

type databaseArgs struct {
	// When true , applies changes immediately. When false , applies changes during the preferred maintenance window. Some changes may cause an outage.
	ApplyImmediately *bool `pulumi:"applyImmediately"`
	// The Availability Zone in which to create your new database. Use the us-east-2a case-sensitive format.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// When true, enables automated backup retention for your database. When false, disables automated backup retention for your database. Disabling backup retention deletes all automated database backups. Before disabling this, you may want to create a snapshot of your database.
	BackupRetentionEnabled *bool `pulumi:"backupRetentionEnabled"`
	// The blueprint ID for your new database. A blueprint describes the major engine version of a database. You can get a list of database blueprints IDs by using the AWS CLI command: `aws lightsail get-relational-database-blueprints`
	BlueprintId string `pulumi:"blueprintId"`
	// The bundle ID for your new database. A bundle describes the performance specifications for your database (see list below). You can get a list of database bundle IDs by using the AWS CLI command: `aws lightsail get-relational-database-bundles`.
	BundleId string `pulumi:"bundleId"`
	// The name of the database snapshot created if skip final snapshot is false, which is the default value for that parameter.
	FinalSnapshotName *string `pulumi:"finalSnapshotName"`
	// The name of the master database created when the Lightsail database resource is created.
	MasterDatabaseName string `pulumi:"masterDatabaseName"`
	// The password for the master user of your new database. The password can include any printable ASCII character except "/", """, or "@".
	MasterPassword string `pulumi:"masterPassword"`
	// The master user name for your new database.
	MasterUsername string `pulumi:"masterUsername"`
	// The daily time range during which automated backups are created for your new database if automated backups are enabled. Must be in the hh24:mi-hh24:mi format. Example: `16:00-16:30`. Specified in Coordinated Universal Time (UTC).
	PreferredBackupWindow *string `pulumi:"preferredBackupWindow"`
	// The weekly time range during which system maintenance can occur on your new database. Must be in the ddd:hh24:mi-ddd:hh24:mi format. Specified in Coordinated Universal Time (UTC). Example: `Tue:17:00-Tue:17:30`
	PreferredMaintenanceWindow *string `pulumi:"preferredMaintenanceWindow"`
	// Specifies the accessibility options for your new database. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database.
	PubliclyAccessible     *bool  `pulumi:"publiclyAccessible"`
	RelationalDatabaseName string `pulumi:"relationalDatabaseName"`
	// Determines whether a final database snapshot is created before your database is deleted. If true is specified, no database snapshot is created. If false is specified, a database snapshot is created before your database is deleted. You must specify the final relational database snapshot name parameter if the skip final snapshot parameter is false.
	SkipFinalSnapshot *bool `pulumi:"skipFinalSnapshot"`
	// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a Database resource.
type DatabaseArgs struct {
	// When true , applies changes immediately. When false , applies changes during the preferred maintenance window. Some changes may cause an outage.
	ApplyImmediately pulumi.BoolPtrInput
	// The Availability Zone in which to create your new database. Use the us-east-2a case-sensitive format.
	AvailabilityZone pulumi.StringInput
	// When true, enables automated backup retention for your database. When false, disables automated backup retention for your database. Disabling backup retention deletes all automated database backups. Before disabling this, you may want to create a snapshot of your database.
	BackupRetentionEnabled pulumi.BoolPtrInput
	// The blueprint ID for your new database. A blueprint describes the major engine version of a database. You can get a list of database blueprints IDs by using the AWS CLI command: `aws lightsail get-relational-database-blueprints`
	BlueprintId pulumi.StringInput
	// The bundle ID for your new database. A bundle describes the performance specifications for your database (see list below). You can get a list of database bundle IDs by using the AWS CLI command: `aws lightsail get-relational-database-bundles`.
	BundleId pulumi.StringInput
	// The name of the database snapshot created if skip final snapshot is false, which is the default value for that parameter.
	FinalSnapshotName pulumi.StringPtrInput
	// The name of the master database created when the Lightsail database resource is created.
	MasterDatabaseName pulumi.StringInput
	// The password for the master user of your new database. The password can include any printable ASCII character except "/", """, or "@".
	MasterPassword pulumi.StringInput
	// The master user name for your new database.
	MasterUsername pulumi.StringInput
	// The daily time range during which automated backups are created for your new database if automated backups are enabled. Must be in the hh24:mi-hh24:mi format. Example: `16:00-16:30`. Specified in Coordinated Universal Time (UTC).
	PreferredBackupWindow pulumi.StringPtrInput
	// The weekly time range during which system maintenance can occur on your new database. Must be in the ddd:hh24:mi-ddd:hh24:mi format. Specified in Coordinated Universal Time (UTC). Example: `Tue:17:00-Tue:17:30`
	PreferredMaintenanceWindow pulumi.StringPtrInput
	// Specifies the accessibility options for your new database. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database.
	PubliclyAccessible     pulumi.BoolPtrInput
	RelationalDatabaseName pulumi.StringInput
	// Determines whether a final database snapshot is created before your database is deleted. If true is specified, no database snapshot is created. If false is specified, a database snapshot is created before your database is deleted. You must specify the final relational database snapshot name parameter if the skip final snapshot parameter is false.
	SkipFinalSnapshot pulumi.BoolPtrInput
	// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value.
	Tags pulumi.StringMapInput
}

func (DatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseArgs)(nil)).Elem()
}

type DatabaseInput interface {
	pulumi.Input

	ToDatabaseOutput() DatabaseOutput
	ToDatabaseOutputWithContext(ctx context.Context) DatabaseOutput
}

func (*Database) ElementType() reflect.Type {
	return reflect.TypeOf((**Database)(nil)).Elem()
}

func (i *Database) ToDatabaseOutput() DatabaseOutput {
	return i.ToDatabaseOutputWithContext(context.Background())
}

func (i *Database) ToDatabaseOutputWithContext(ctx context.Context) DatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseOutput)
}

// DatabaseArrayInput is an input type that accepts DatabaseArray and DatabaseArrayOutput values.
// You can construct a concrete instance of `DatabaseArrayInput` via:
//
//	DatabaseArray{ DatabaseArgs{...} }
type DatabaseArrayInput interface {
	pulumi.Input

	ToDatabaseArrayOutput() DatabaseArrayOutput
	ToDatabaseArrayOutputWithContext(context.Context) DatabaseArrayOutput
}

type DatabaseArray []DatabaseInput

func (DatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Database)(nil)).Elem()
}

func (i DatabaseArray) ToDatabaseArrayOutput() DatabaseArrayOutput {
	return i.ToDatabaseArrayOutputWithContext(context.Background())
}

func (i DatabaseArray) ToDatabaseArrayOutputWithContext(ctx context.Context) DatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseArrayOutput)
}

// DatabaseMapInput is an input type that accepts DatabaseMap and DatabaseMapOutput values.
// You can construct a concrete instance of `DatabaseMapInput` via:
//
//	DatabaseMap{ "key": DatabaseArgs{...} }
type DatabaseMapInput interface {
	pulumi.Input

	ToDatabaseMapOutput() DatabaseMapOutput
	ToDatabaseMapOutputWithContext(context.Context) DatabaseMapOutput
}

type DatabaseMap map[string]DatabaseInput

func (DatabaseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Database)(nil)).Elem()
}

func (i DatabaseMap) ToDatabaseMapOutput() DatabaseMapOutput {
	return i.ToDatabaseMapOutputWithContext(context.Background())
}

func (i DatabaseMap) ToDatabaseMapOutputWithContext(ctx context.Context) DatabaseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseMapOutput)
}

type DatabaseOutput struct{ *pulumi.OutputState }

func (DatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Database)(nil)).Elem()
}

func (o DatabaseOutput) ToDatabaseOutput() DatabaseOutput {
	return o
}

func (o DatabaseOutput) ToDatabaseOutputWithContext(ctx context.Context) DatabaseOutput {
	return o
}

// When true , applies changes immediately. When false , applies changes during the preferred maintenance window. Some changes may cause an outage.
func (o DatabaseOutput) ApplyImmediately() pulumi.BoolOutput {
	return o.ApplyT(func(v *Database) pulumi.BoolOutput { return v.ApplyImmediately }).(pulumi.BoolOutput)
}

// The ARN of the Lightsail instance (matches `id`).
func (o DatabaseOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The Availability Zone in which to create your new database. Use the us-east-2a case-sensitive format.
func (o DatabaseOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// When true, enables automated backup retention for your database. When false, disables automated backup retention for your database. Disabling backup retention deletes all automated database backups. Before disabling this, you may want to create a snapshot of your database.
func (o DatabaseOutput) BackupRetentionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Database) pulumi.BoolPtrOutput { return v.BackupRetentionEnabled }).(pulumi.BoolPtrOutput)
}

// The blueprint ID for your new database. A blueprint describes the major engine version of a database. You can get a list of database blueprints IDs by using the AWS CLI command: `aws lightsail get-relational-database-blueprints`
func (o DatabaseOutput) BlueprintId() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.BlueprintId }).(pulumi.StringOutput)
}

// The bundle ID for your new database. A bundle describes the performance specifications for your database (see list below). You can get a list of database bundle IDs by using the AWS CLI command: `aws lightsail get-relational-database-bundles`.
func (o DatabaseOutput) BundleId() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.BundleId }).(pulumi.StringOutput)
}

// The certificate associated with the database.
func (o DatabaseOutput) CaCertificateIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.CaCertificateIdentifier }).(pulumi.StringOutput)
}

// The number of vCPUs for the database.
func (o DatabaseOutput) CpuCount() pulumi.IntOutput {
	return o.ApplyT(func(v *Database) pulumi.IntOutput { return v.CpuCount }).(pulumi.IntOutput)
}

// The timestamp when the instance was created.
func (o DatabaseOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The size of the disk for the database.
func (o DatabaseOutput) DiskSize() pulumi.Float64Output {
	return o.ApplyT(func(v *Database) pulumi.Float64Output { return v.DiskSize }).(pulumi.Float64Output)
}

// The database software (for example, MySQL).
func (o DatabaseOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.Engine }).(pulumi.StringOutput)
}

// The database engine version (for example, 5.7.23).
func (o DatabaseOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.EngineVersion }).(pulumi.StringOutput)
}

// The name of the database snapshot created if skip final snapshot is false, which is the default value for that parameter.
func (o DatabaseOutput) FinalSnapshotName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Database) pulumi.StringPtrOutput { return v.FinalSnapshotName }).(pulumi.StringPtrOutput)
}

// The name of the master database created when the Lightsail database resource is created.
func (o DatabaseOutput) MasterDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.MasterDatabaseName }).(pulumi.StringOutput)
}

// The master endpoint fqdn for the database.
func (o DatabaseOutput) MasterEndpointAddress() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.MasterEndpointAddress }).(pulumi.StringOutput)
}

// The master endpoint network port for the database.
func (o DatabaseOutput) MasterEndpointPort() pulumi.IntOutput {
	return o.ApplyT(func(v *Database) pulumi.IntOutput { return v.MasterEndpointPort }).(pulumi.IntOutput)
}

// The password for the master user of your new database. The password can include any printable ASCII character except "/", """, or "@".
func (o DatabaseOutput) MasterPassword() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.MasterPassword }).(pulumi.StringOutput)
}

// The master user name for your new database.
func (o DatabaseOutput) MasterUsername() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.MasterUsername }).(pulumi.StringOutput)
}

// The daily time range during which automated backups are created for your new database if automated backups are enabled. Must be in the hh24:mi-hh24:mi format. Example: `16:00-16:30`. Specified in Coordinated Universal Time (UTC).
func (o DatabaseOutput) PreferredBackupWindow() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.PreferredBackupWindow }).(pulumi.StringOutput)
}

// The weekly time range during which system maintenance can occur on your new database. Must be in the ddd:hh24:mi-ddd:hh24:mi format. Specified in Coordinated Universal Time (UTC). Example: `Tue:17:00-Tue:17:30`
func (o DatabaseOutput) PreferredMaintenanceWindow() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.PreferredMaintenanceWindow }).(pulumi.StringOutput)
}

// Specifies the accessibility options for your new database. A value of true specifies a database that is available to resources outside of your Lightsail account. A value of false specifies a database that is available only to your Lightsail resources in the same region as your database.
func (o DatabaseOutput) PubliclyAccessible() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Database) pulumi.BoolPtrOutput { return v.PubliclyAccessible }).(pulumi.BoolPtrOutput)
}

// The amount of RAM in GB for the database.
func (o DatabaseOutput) RamSize() pulumi.Float64Output {
	return o.ApplyT(func(v *Database) pulumi.Float64Output { return v.RamSize }).(pulumi.Float64Output)
}

func (o DatabaseOutput) RelationalDatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.RelationalDatabaseName }).(pulumi.StringOutput)
}

// Describes the secondary Availability Zone of a high availability database. The secondary database is used for failover support of a high availability database.
func (o DatabaseOutput) SecondaryAvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.SecondaryAvailabilityZone }).(pulumi.StringOutput)
}

// Determines whether a final database snapshot is created before your database is deleted. If true is specified, no database snapshot is created. If false is specified, a database snapshot is created before your database is deleted. You must specify the final relational database snapshot name parameter if the skip final snapshot parameter is false.
func (o DatabaseOutput) SkipFinalSnapshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Database) pulumi.BoolPtrOutput { return v.SkipFinalSnapshot }).(pulumi.BoolPtrOutput)
}

// The support code for the database. Include this code in your email to support when you have questions about a database in Lightsail. This code enables our support team to look up your Lightsail information more easily.
func (o DatabaseOutput) SupportCode() pulumi.StringOutput {
	return o.ApplyT(func(v *Database) pulumi.StringOutput { return v.SupportCode }).(pulumi.StringOutput)
}

// A map of tags to assign to the resource. To create a key-only tag, use an empty string as the value.
func (o DatabaseOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Database) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o DatabaseOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Database) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type DatabaseArrayOutput struct{ *pulumi.OutputState }

func (DatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Database)(nil)).Elem()
}

func (o DatabaseArrayOutput) ToDatabaseArrayOutput() DatabaseArrayOutput {
	return o
}

func (o DatabaseArrayOutput) ToDatabaseArrayOutputWithContext(ctx context.Context) DatabaseArrayOutput {
	return o
}

func (o DatabaseArrayOutput) Index(i pulumi.IntInput) DatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Database {
		return vs[0].([]*Database)[vs[1].(int)]
	}).(DatabaseOutput)
}

type DatabaseMapOutput struct{ *pulumi.OutputState }

func (DatabaseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Database)(nil)).Elem()
}

func (o DatabaseMapOutput) ToDatabaseMapOutput() DatabaseMapOutput {
	return o
}

func (o DatabaseMapOutput) ToDatabaseMapOutputWithContext(ctx context.Context) DatabaseMapOutput {
	return o
}

func (o DatabaseMapOutput) MapIndex(k pulumi.StringInput) DatabaseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Database {
		return vs[0].(map[string]*Database)[vs[1].(string)]
	}).(DatabaseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseInput)(nil)).Elem(), &Database{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseArrayInput)(nil)).Elem(), DatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseMapInput)(nil)).Elem(), DatabaseMap{})
	pulumi.RegisterOutputType(DatabaseOutput{})
	pulumi.RegisterOutputType(DatabaseArrayOutput{})
	pulumi.RegisterOutputType(DatabaseMapOutput{})
}
