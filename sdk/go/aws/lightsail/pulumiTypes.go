// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lightsail

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CertificateDomainValidationOption struct {
	// A domain name for which the certificate should be issued.
	DomainName          *string `pulumi:"domainName"`
	ResourceRecordName  *string `pulumi:"resourceRecordName"`
	ResourceRecordType  *string `pulumi:"resourceRecordType"`
	ResourceRecordValue *string `pulumi:"resourceRecordValue"`
}

// CertificateDomainValidationOptionInput is an input type that accepts CertificateDomainValidationOptionArgs and CertificateDomainValidationOptionOutput values.
// You can construct a concrete instance of `CertificateDomainValidationOptionInput` via:
//
//	CertificateDomainValidationOptionArgs{...}
type CertificateDomainValidationOptionInput interface {
	pulumi.Input

	ToCertificateDomainValidationOptionOutput() CertificateDomainValidationOptionOutput
	ToCertificateDomainValidationOptionOutputWithContext(context.Context) CertificateDomainValidationOptionOutput
}

type CertificateDomainValidationOptionArgs struct {
	// A domain name for which the certificate should be issued.
	DomainName          pulumi.StringPtrInput `pulumi:"domainName"`
	ResourceRecordName  pulumi.StringPtrInput `pulumi:"resourceRecordName"`
	ResourceRecordType  pulumi.StringPtrInput `pulumi:"resourceRecordType"`
	ResourceRecordValue pulumi.StringPtrInput `pulumi:"resourceRecordValue"`
}

func (CertificateDomainValidationOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateDomainValidationOption)(nil)).Elem()
}

func (i CertificateDomainValidationOptionArgs) ToCertificateDomainValidationOptionOutput() CertificateDomainValidationOptionOutput {
	return i.ToCertificateDomainValidationOptionOutputWithContext(context.Background())
}

func (i CertificateDomainValidationOptionArgs) ToCertificateDomainValidationOptionOutputWithContext(ctx context.Context) CertificateDomainValidationOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateDomainValidationOptionOutput)
}

// CertificateDomainValidationOptionArrayInput is an input type that accepts CertificateDomainValidationOptionArray and CertificateDomainValidationOptionArrayOutput values.
// You can construct a concrete instance of `CertificateDomainValidationOptionArrayInput` via:
//
//	CertificateDomainValidationOptionArray{ CertificateDomainValidationOptionArgs{...} }
type CertificateDomainValidationOptionArrayInput interface {
	pulumi.Input

	ToCertificateDomainValidationOptionArrayOutput() CertificateDomainValidationOptionArrayOutput
	ToCertificateDomainValidationOptionArrayOutputWithContext(context.Context) CertificateDomainValidationOptionArrayOutput
}

type CertificateDomainValidationOptionArray []CertificateDomainValidationOptionInput

func (CertificateDomainValidationOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateDomainValidationOption)(nil)).Elem()
}

func (i CertificateDomainValidationOptionArray) ToCertificateDomainValidationOptionArrayOutput() CertificateDomainValidationOptionArrayOutput {
	return i.ToCertificateDomainValidationOptionArrayOutputWithContext(context.Background())
}

func (i CertificateDomainValidationOptionArray) ToCertificateDomainValidationOptionArrayOutputWithContext(ctx context.Context) CertificateDomainValidationOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CertificateDomainValidationOptionArrayOutput)
}

type CertificateDomainValidationOptionOutput struct{ *pulumi.OutputState }

func (CertificateDomainValidationOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CertificateDomainValidationOption)(nil)).Elem()
}

func (o CertificateDomainValidationOptionOutput) ToCertificateDomainValidationOptionOutput() CertificateDomainValidationOptionOutput {
	return o
}

func (o CertificateDomainValidationOptionOutput) ToCertificateDomainValidationOptionOutputWithContext(ctx context.Context) CertificateDomainValidationOptionOutput {
	return o
}

// A domain name for which the certificate should be issued.
func (o CertificateDomainValidationOptionOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDomainValidationOption) *string { return v.DomainName }).(pulumi.StringPtrOutput)
}

func (o CertificateDomainValidationOptionOutput) ResourceRecordName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDomainValidationOption) *string { return v.ResourceRecordName }).(pulumi.StringPtrOutput)
}

func (o CertificateDomainValidationOptionOutput) ResourceRecordType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDomainValidationOption) *string { return v.ResourceRecordType }).(pulumi.StringPtrOutput)
}

func (o CertificateDomainValidationOptionOutput) ResourceRecordValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CertificateDomainValidationOption) *string { return v.ResourceRecordValue }).(pulumi.StringPtrOutput)
}

type CertificateDomainValidationOptionArrayOutput struct{ *pulumi.OutputState }

func (CertificateDomainValidationOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CertificateDomainValidationOption)(nil)).Elem()
}

func (o CertificateDomainValidationOptionArrayOutput) ToCertificateDomainValidationOptionArrayOutput() CertificateDomainValidationOptionArrayOutput {
	return o
}

func (o CertificateDomainValidationOptionArrayOutput) ToCertificateDomainValidationOptionArrayOutputWithContext(ctx context.Context) CertificateDomainValidationOptionArrayOutput {
	return o
}

func (o CertificateDomainValidationOptionArrayOutput) Index(i pulumi.IntInput) CertificateDomainValidationOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CertificateDomainValidationOption {
		return vs[0].([]CertificateDomainValidationOption)[vs[1].(int)]
	}).(CertificateDomainValidationOptionOutput)
}

type ContainerServiceDeploymentVersionContainer struct {
	// The launch command for the container. A list of string.
	Commands []string `pulumi:"commands"`
	// The name for the container.
	ContainerName string `pulumi:"containerName"`
	// A key-value map of the environment variables of the container.
	Environment map[string]string `pulumi:"environment"`
	// The name of the image used for the container. Container images sourced from your Lightsail container service, that are registered and stored on your service, start with a colon (`:`). For example, `:container-service-1.mystaticwebsite.1`. Container images sourced from a public registry like Docker Hub don't start with a colon. For example, `nginx:latest` or `nginx`.
	Image string `pulumi:"image"`
	// A key-value map of the open firewall ports of the container. Valid values: `HTTP`, `HTTPS`, `TCP`, `UDP`.
	Ports map[string]string `pulumi:"ports"`
}

// ContainerServiceDeploymentVersionContainerInput is an input type that accepts ContainerServiceDeploymentVersionContainerArgs and ContainerServiceDeploymentVersionContainerOutput values.
// You can construct a concrete instance of `ContainerServiceDeploymentVersionContainerInput` via:
//
//	ContainerServiceDeploymentVersionContainerArgs{...}
type ContainerServiceDeploymentVersionContainerInput interface {
	pulumi.Input

	ToContainerServiceDeploymentVersionContainerOutput() ContainerServiceDeploymentVersionContainerOutput
	ToContainerServiceDeploymentVersionContainerOutputWithContext(context.Context) ContainerServiceDeploymentVersionContainerOutput
}

type ContainerServiceDeploymentVersionContainerArgs struct {
	// The launch command for the container. A list of string.
	Commands pulumi.StringArrayInput `pulumi:"commands"`
	// The name for the container.
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// A key-value map of the environment variables of the container.
	Environment pulumi.StringMapInput `pulumi:"environment"`
	// The name of the image used for the container. Container images sourced from your Lightsail container service, that are registered and stored on your service, start with a colon (`:`). For example, `:container-service-1.mystaticwebsite.1`. Container images sourced from a public registry like Docker Hub don't start with a colon. For example, `nginx:latest` or `nginx`.
	Image pulumi.StringInput `pulumi:"image"`
	// A key-value map of the open firewall ports of the container. Valid values: `HTTP`, `HTTPS`, `TCP`, `UDP`.
	Ports pulumi.StringMapInput `pulumi:"ports"`
}

func (ContainerServiceDeploymentVersionContainerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceDeploymentVersionContainer)(nil)).Elem()
}

func (i ContainerServiceDeploymentVersionContainerArgs) ToContainerServiceDeploymentVersionContainerOutput() ContainerServiceDeploymentVersionContainerOutput {
	return i.ToContainerServiceDeploymentVersionContainerOutputWithContext(context.Background())
}

func (i ContainerServiceDeploymentVersionContainerArgs) ToContainerServiceDeploymentVersionContainerOutputWithContext(ctx context.Context) ContainerServiceDeploymentVersionContainerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceDeploymentVersionContainerOutput)
}

// ContainerServiceDeploymentVersionContainerArrayInput is an input type that accepts ContainerServiceDeploymentVersionContainerArray and ContainerServiceDeploymentVersionContainerArrayOutput values.
// You can construct a concrete instance of `ContainerServiceDeploymentVersionContainerArrayInput` via:
//
//	ContainerServiceDeploymentVersionContainerArray{ ContainerServiceDeploymentVersionContainerArgs{...} }
type ContainerServiceDeploymentVersionContainerArrayInput interface {
	pulumi.Input

	ToContainerServiceDeploymentVersionContainerArrayOutput() ContainerServiceDeploymentVersionContainerArrayOutput
	ToContainerServiceDeploymentVersionContainerArrayOutputWithContext(context.Context) ContainerServiceDeploymentVersionContainerArrayOutput
}

type ContainerServiceDeploymentVersionContainerArray []ContainerServiceDeploymentVersionContainerInput

func (ContainerServiceDeploymentVersionContainerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerServiceDeploymentVersionContainer)(nil)).Elem()
}

func (i ContainerServiceDeploymentVersionContainerArray) ToContainerServiceDeploymentVersionContainerArrayOutput() ContainerServiceDeploymentVersionContainerArrayOutput {
	return i.ToContainerServiceDeploymentVersionContainerArrayOutputWithContext(context.Background())
}

func (i ContainerServiceDeploymentVersionContainerArray) ToContainerServiceDeploymentVersionContainerArrayOutputWithContext(ctx context.Context) ContainerServiceDeploymentVersionContainerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceDeploymentVersionContainerArrayOutput)
}

type ContainerServiceDeploymentVersionContainerOutput struct{ *pulumi.OutputState }

func (ContainerServiceDeploymentVersionContainerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceDeploymentVersionContainer)(nil)).Elem()
}

func (o ContainerServiceDeploymentVersionContainerOutput) ToContainerServiceDeploymentVersionContainerOutput() ContainerServiceDeploymentVersionContainerOutput {
	return o
}

func (o ContainerServiceDeploymentVersionContainerOutput) ToContainerServiceDeploymentVersionContainerOutputWithContext(ctx context.Context) ContainerServiceDeploymentVersionContainerOutput {
	return o
}

// The launch command for the container. A list of string.
func (o ContainerServiceDeploymentVersionContainerOutput) Commands() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContainerServiceDeploymentVersionContainer) []string { return v.Commands }).(pulumi.StringArrayOutput)
}

// The name for the container.
func (o ContainerServiceDeploymentVersionContainerOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceDeploymentVersionContainer) string { return v.ContainerName }).(pulumi.StringOutput)
}

// A key-value map of the environment variables of the container.
func (o ContainerServiceDeploymentVersionContainerOutput) Environment() pulumi.StringMapOutput {
	return o.ApplyT(func(v ContainerServiceDeploymentVersionContainer) map[string]string { return v.Environment }).(pulumi.StringMapOutput)
}

// The name of the image used for the container. Container images sourced from your Lightsail container service, that are registered and stored on your service, start with a colon (`:`). For example, `:container-service-1.mystaticwebsite.1`. Container images sourced from a public registry like Docker Hub don't start with a colon. For example, `nginx:latest` or `nginx`.
func (o ContainerServiceDeploymentVersionContainerOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceDeploymentVersionContainer) string { return v.Image }).(pulumi.StringOutput)
}

// A key-value map of the open firewall ports of the container. Valid values: `HTTP`, `HTTPS`, `TCP`, `UDP`.
func (o ContainerServiceDeploymentVersionContainerOutput) Ports() pulumi.StringMapOutput {
	return o.ApplyT(func(v ContainerServiceDeploymentVersionContainer) map[string]string { return v.Ports }).(pulumi.StringMapOutput)
}

type ContainerServiceDeploymentVersionContainerArrayOutput struct{ *pulumi.OutputState }

func (ContainerServiceDeploymentVersionContainerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerServiceDeploymentVersionContainer)(nil)).Elem()
}

func (o ContainerServiceDeploymentVersionContainerArrayOutput) ToContainerServiceDeploymentVersionContainerArrayOutput() ContainerServiceDeploymentVersionContainerArrayOutput {
	return o
}

func (o ContainerServiceDeploymentVersionContainerArrayOutput) ToContainerServiceDeploymentVersionContainerArrayOutputWithContext(ctx context.Context) ContainerServiceDeploymentVersionContainerArrayOutput {
	return o
}

func (o ContainerServiceDeploymentVersionContainerArrayOutput) Index(i pulumi.IntInput) ContainerServiceDeploymentVersionContainerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerServiceDeploymentVersionContainer {
		return vs[0].([]ContainerServiceDeploymentVersionContainer)[vs[1].(int)]
	}).(ContainerServiceDeploymentVersionContainerOutput)
}

type ContainerServiceDeploymentVersionPublicEndpoint struct {
	// The name of the container for the endpoint.
	ContainerName string `pulumi:"containerName"`
	// The port of the container to which traffic is forwarded to.
	ContainerPort int `pulumi:"containerPort"`
	// A configuration block that describes the health check configuration of the container. Detailed below.
	HealthCheck ContainerServiceDeploymentVersionPublicEndpointHealthCheck `pulumi:"healthCheck"`
}

// ContainerServiceDeploymentVersionPublicEndpointInput is an input type that accepts ContainerServiceDeploymentVersionPublicEndpointArgs and ContainerServiceDeploymentVersionPublicEndpointOutput values.
// You can construct a concrete instance of `ContainerServiceDeploymentVersionPublicEndpointInput` via:
//
//	ContainerServiceDeploymentVersionPublicEndpointArgs{...}
type ContainerServiceDeploymentVersionPublicEndpointInput interface {
	pulumi.Input

	ToContainerServiceDeploymentVersionPublicEndpointOutput() ContainerServiceDeploymentVersionPublicEndpointOutput
	ToContainerServiceDeploymentVersionPublicEndpointOutputWithContext(context.Context) ContainerServiceDeploymentVersionPublicEndpointOutput
}

type ContainerServiceDeploymentVersionPublicEndpointArgs struct {
	// The name of the container for the endpoint.
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// The port of the container to which traffic is forwarded to.
	ContainerPort pulumi.IntInput `pulumi:"containerPort"`
	// A configuration block that describes the health check configuration of the container. Detailed below.
	HealthCheck ContainerServiceDeploymentVersionPublicEndpointHealthCheckInput `pulumi:"healthCheck"`
}

func (ContainerServiceDeploymentVersionPublicEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceDeploymentVersionPublicEndpoint)(nil)).Elem()
}

func (i ContainerServiceDeploymentVersionPublicEndpointArgs) ToContainerServiceDeploymentVersionPublicEndpointOutput() ContainerServiceDeploymentVersionPublicEndpointOutput {
	return i.ToContainerServiceDeploymentVersionPublicEndpointOutputWithContext(context.Background())
}

func (i ContainerServiceDeploymentVersionPublicEndpointArgs) ToContainerServiceDeploymentVersionPublicEndpointOutputWithContext(ctx context.Context) ContainerServiceDeploymentVersionPublicEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceDeploymentVersionPublicEndpointOutput)
}

func (i ContainerServiceDeploymentVersionPublicEndpointArgs) ToContainerServiceDeploymentVersionPublicEndpointPtrOutput() ContainerServiceDeploymentVersionPublicEndpointPtrOutput {
	return i.ToContainerServiceDeploymentVersionPublicEndpointPtrOutputWithContext(context.Background())
}

func (i ContainerServiceDeploymentVersionPublicEndpointArgs) ToContainerServiceDeploymentVersionPublicEndpointPtrOutputWithContext(ctx context.Context) ContainerServiceDeploymentVersionPublicEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceDeploymentVersionPublicEndpointOutput).ToContainerServiceDeploymentVersionPublicEndpointPtrOutputWithContext(ctx)
}

// ContainerServiceDeploymentVersionPublicEndpointPtrInput is an input type that accepts ContainerServiceDeploymentVersionPublicEndpointArgs, ContainerServiceDeploymentVersionPublicEndpointPtr and ContainerServiceDeploymentVersionPublicEndpointPtrOutput values.
// You can construct a concrete instance of `ContainerServiceDeploymentVersionPublicEndpointPtrInput` via:
//
//	        ContainerServiceDeploymentVersionPublicEndpointArgs{...}
//
//	or:
//
//	        nil
type ContainerServiceDeploymentVersionPublicEndpointPtrInput interface {
	pulumi.Input

	ToContainerServiceDeploymentVersionPublicEndpointPtrOutput() ContainerServiceDeploymentVersionPublicEndpointPtrOutput
	ToContainerServiceDeploymentVersionPublicEndpointPtrOutputWithContext(context.Context) ContainerServiceDeploymentVersionPublicEndpointPtrOutput
}

type containerServiceDeploymentVersionPublicEndpointPtrType ContainerServiceDeploymentVersionPublicEndpointArgs

func ContainerServiceDeploymentVersionPublicEndpointPtr(v *ContainerServiceDeploymentVersionPublicEndpointArgs) ContainerServiceDeploymentVersionPublicEndpointPtrInput {
	return (*containerServiceDeploymentVersionPublicEndpointPtrType)(v)
}

func (*containerServiceDeploymentVersionPublicEndpointPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceDeploymentVersionPublicEndpoint)(nil)).Elem()
}

func (i *containerServiceDeploymentVersionPublicEndpointPtrType) ToContainerServiceDeploymentVersionPublicEndpointPtrOutput() ContainerServiceDeploymentVersionPublicEndpointPtrOutput {
	return i.ToContainerServiceDeploymentVersionPublicEndpointPtrOutputWithContext(context.Background())
}

func (i *containerServiceDeploymentVersionPublicEndpointPtrType) ToContainerServiceDeploymentVersionPublicEndpointPtrOutputWithContext(ctx context.Context) ContainerServiceDeploymentVersionPublicEndpointPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceDeploymentVersionPublicEndpointPtrOutput)
}

type ContainerServiceDeploymentVersionPublicEndpointOutput struct{ *pulumi.OutputState }

func (ContainerServiceDeploymentVersionPublicEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceDeploymentVersionPublicEndpoint)(nil)).Elem()
}

func (o ContainerServiceDeploymentVersionPublicEndpointOutput) ToContainerServiceDeploymentVersionPublicEndpointOutput() ContainerServiceDeploymentVersionPublicEndpointOutput {
	return o
}

func (o ContainerServiceDeploymentVersionPublicEndpointOutput) ToContainerServiceDeploymentVersionPublicEndpointOutputWithContext(ctx context.Context) ContainerServiceDeploymentVersionPublicEndpointOutput {
	return o
}

func (o ContainerServiceDeploymentVersionPublicEndpointOutput) ToContainerServiceDeploymentVersionPublicEndpointPtrOutput() ContainerServiceDeploymentVersionPublicEndpointPtrOutput {
	return o.ToContainerServiceDeploymentVersionPublicEndpointPtrOutputWithContext(context.Background())
}

func (o ContainerServiceDeploymentVersionPublicEndpointOutput) ToContainerServiceDeploymentVersionPublicEndpointPtrOutputWithContext(ctx context.Context) ContainerServiceDeploymentVersionPublicEndpointPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerServiceDeploymentVersionPublicEndpoint) *ContainerServiceDeploymentVersionPublicEndpoint {
		return &v
	}).(ContainerServiceDeploymentVersionPublicEndpointPtrOutput)
}

// The name of the container for the endpoint.
func (o ContainerServiceDeploymentVersionPublicEndpointOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServiceDeploymentVersionPublicEndpoint) string { return v.ContainerName }).(pulumi.StringOutput)
}

// The port of the container to which traffic is forwarded to.
func (o ContainerServiceDeploymentVersionPublicEndpointOutput) ContainerPort() pulumi.IntOutput {
	return o.ApplyT(func(v ContainerServiceDeploymentVersionPublicEndpoint) int { return v.ContainerPort }).(pulumi.IntOutput)
}

// A configuration block that describes the health check configuration of the container. Detailed below.
func (o ContainerServiceDeploymentVersionPublicEndpointOutput) HealthCheck() ContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput {
	return o.ApplyT(func(v ContainerServiceDeploymentVersionPublicEndpoint) ContainerServiceDeploymentVersionPublicEndpointHealthCheck {
		return v.HealthCheck
	}).(ContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput)
}

type ContainerServiceDeploymentVersionPublicEndpointPtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceDeploymentVersionPublicEndpointPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceDeploymentVersionPublicEndpoint)(nil)).Elem()
}

func (o ContainerServiceDeploymentVersionPublicEndpointPtrOutput) ToContainerServiceDeploymentVersionPublicEndpointPtrOutput() ContainerServiceDeploymentVersionPublicEndpointPtrOutput {
	return o
}

func (o ContainerServiceDeploymentVersionPublicEndpointPtrOutput) ToContainerServiceDeploymentVersionPublicEndpointPtrOutputWithContext(ctx context.Context) ContainerServiceDeploymentVersionPublicEndpointPtrOutput {
	return o
}

func (o ContainerServiceDeploymentVersionPublicEndpointPtrOutput) Elem() ContainerServiceDeploymentVersionPublicEndpointOutput {
	return o.ApplyT(func(v *ContainerServiceDeploymentVersionPublicEndpoint) ContainerServiceDeploymentVersionPublicEndpoint {
		if v != nil {
			return *v
		}
		var ret ContainerServiceDeploymentVersionPublicEndpoint
		return ret
	}).(ContainerServiceDeploymentVersionPublicEndpointOutput)
}

// The name of the container for the endpoint.
func (o ContainerServiceDeploymentVersionPublicEndpointPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceDeploymentVersionPublicEndpoint) *string {
		if v == nil {
			return nil
		}
		return &v.ContainerName
	}).(pulumi.StringPtrOutput)
}

// The port of the container to which traffic is forwarded to.
func (o ContainerServiceDeploymentVersionPublicEndpointPtrOutput) ContainerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerServiceDeploymentVersionPublicEndpoint) *int {
		if v == nil {
			return nil
		}
		return &v.ContainerPort
	}).(pulumi.IntPtrOutput)
}

// A configuration block that describes the health check configuration of the container. Detailed below.
func (o ContainerServiceDeploymentVersionPublicEndpointPtrOutput) HealthCheck() ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput {
	return o.ApplyT(func(v *ContainerServiceDeploymentVersionPublicEndpoint) *ContainerServiceDeploymentVersionPublicEndpointHealthCheck {
		if v == nil {
			return nil
		}
		return &v.HealthCheck
	}).(ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput)
}

type ContainerServiceDeploymentVersionPublicEndpointHealthCheck struct {
	// The number of consecutive health checks successes required before moving the container to the Healthy state. Defaults to 2.
	HealthyThreshold *int `pulumi:"healthyThreshold"`
	// The approximate interval, in seconds, between health checks of an individual container. You can specify between 5 and 300 seconds. Defaults to 5.
	IntervalSeconds *int `pulumi:"intervalSeconds"`
	// The path on the container on which to perform the health check. Defaults to "/".
	Path *string `pulumi:"path"`
	// The HTTP codes to use when checking for a successful response from a container. You can specify values between 200 and 499. Defaults to "200-499".
	SuccessCodes *string `pulumi:"successCodes"`
	// The amount of time, in seconds, during which no response means a failed health check. You can specify between 2 and 60 seconds. Defaults to 2.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
	// The number of consecutive health checks failures required before moving the container to the Unhealthy state. Defaults to 2.
	UnhealthyThreshold *int `pulumi:"unhealthyThreshold"`
}

// ContainerServiceDeploymentVersionPublicEndpointHealthCheckInput is an input type that accepts ContainerServiceDeploymentVersionPublicEndpointHealthCheckArgs and ContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput values.
// You can construct a concrete instance of `ContainerServiceDeploymentVersionPublicEndpointHealthCheckInput` via:
//
//	ContainerServiceDeploymentVersionPublicEndpointHealthCheckArgs{...}
type ContainerServiceDeploymentVersionPublicEndpointHealthCheckInput interface {
	pulumi.Input

	ToContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput() ContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput
	ToContainerServiceDeploymentVersionPublicEndpointHealthCheckOutputWithContext(context.Context) ContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput
}

type ContainerServiceDeploymentVersionPublicEndpointHealthCheckArgs struct {
	// The number of consecutive health checks successes required before moving the container to the Healthy state. Defaults to 2.
	HealthyThreshold pulumi.IntPtrInput `pulumi:"healthyThreshold"`
	// The approximate interval, in seconds, between health checks of an individual container. You can specify between 5 and 300 seconds. Defaults to 5.
	IntervalSeconds pulumi.IntPtrInput `pulumi:"intervalSeconds"`
	// The path on the container on which to perform the health check. Defaults to "/".
	Path pulumi.StringPtrInput `pulumi:"path"`
	// The HTTP codes to use when checking for a successful response from a container. You can specify values between 200 and 499. Defaults to "200-499".
	SuccessCodes pulumi.StringPtrInput `pulumi:"successCodes"`
	// The amount of time, in seconds, during which no response means a failed health check. You can specify between 2 and 60 seconds. Defaults to 2.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
	// The number of consecutive health checks failures required before moving the container to the Unhealthy state. Defaults to 2.
	UnhealthyThreshold pulumi.IntPtrInput `pulumi:"unhealthyThreshold"`
}

func (ContainerServiceDeploymentVersionPublicEndpointHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceDeploymentVersionPublicEndpointHealthCheck)(nil)).Elem()
}

func (i ContainerServiceDeploymentVersionPublicEndpointHealthCheckArgs) ToContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput() ContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput {
	return i.ToContainerServiceDeploymentVersionPublicEndpointHealthCheckOutputWithContext(context.Background())
}

func (i ContainerServiceDeploymentVersionPublicEndpointHealthCheckArgs) ToContainerServiceDeploymentVersionPublicEndpointHealthCheckOutputWithContext(ctx context.Context) ContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput)
}

func (i ContainerServiceDeploymentVersionPublicEndpointHealthCheckArgs) ToContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput() ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput {
	return i.ToContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutputWithContext(context.Background())
}

func (i ContainerServiceDeploymentVersionPublicEndpointHealthCheckArgs) ToContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutputWithContext(ctx context.Context) ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput).ToContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutputWithContext(ctx)
}

// ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrInput is an input type that accepts ContainerServiceDeploymentVersionPublicEndpointHealthCheckArgs, ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtr and ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput values.
// You can construct a concrete instance of `ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrInput` via:
//
//	        ContainerServiceDeploymentVersionPublicEndpointHealthCheckArgs{...}
//
//	or:
//
//	        nil
type ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrInput interface {
	pulumi.Input

	ToContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput() ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput
	ToContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutputWithContext(context.Context) ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput
}

type containerServiceDeploymentVersionPublicEndpointHealthCheckPtrType ContainerServiceDeploymentVersionPublicEndpointHealthCheckArgs

func ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtr(v *ContainerServiceDeploymentVersionPublicEndpointHealthCheckArgs) ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrInput {
	return (*containerServiceDeploymentVersionPublicEndpointHealthCheckPtrType)(v)
}

func (*containerServiceDeploymentVersionPublicEndpointHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceDeploymentVersionPublicEndpointHealthCheck)(nil)).Elem()
}

func (i *containerServiceDeploymentVersionPublicEndpointHealthCheckPtrType) ToContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput() ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput {
	return i.ToContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutputWithContext(context.Background())
}

func (i *containerServiceDeploymentVersionPublicEndpointHealthCheckPtrType) ToContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutputWithContext(ctx context.Context) ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput)
}

type ContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput struct{ *pulumi.OutputState }

func (ContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServiceDeploymentVersionPublicEndpointHealthCheck)(nil)).Elem()
}

func (o ContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput) ToContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput() ContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput {
	return o
}

func (o ContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput) ToContainerServiceDeploymentVersionPublicEndpointHealthCheckOutputWithContext(ctx context.Context) ContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput {
	return o
}

func (o ContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput) ToContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput() ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput {
	return o.ToContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutputWithContext(context.Background())
}

func (o ContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput) ToContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutputWithContext(ctx context.Context) ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerServiceDeploymentVersionPublicEndpointHealthCheck) *ContainerServiceDeploymentVersionPublicEndpointHealthCheck {
		return &v
	}).(ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput)
}

// The number of consecutive health checks successes required before moving the container to the Healthy state. Defaults to 2.
func (o ContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerServiceDeploymentVersionPublicEndpointHealthCheck) *int { return v.HealthyThreshold }).(pulumi.IntPtrOutput)
}

// The approximate interval, in seconds, between health checks of an individual container. You can specify between 5 and 300 seconds. Defaults to 5.
func (o ContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput) IntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerServiceDeploymentVersionPublicEndpointHealthCheck) *int { return v.IntervalSeconds }).(pulumi.IntPtrOutput)
}

// The path on the container on which to perform the health check. Defaults to "/".
func (o ContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceDeploymentVersionPublicEndpointHealthCheck) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// The HTTP codes to use when checking for a successful response from a container. You can specify values between 200 and 499. Defaults to "200-499".
func (o ContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput) SuccessCodes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServiceDeploymentVersionPublicEndpointHealthCheck) *string { return v.SuccessCodes }).(pulumi.StringPtrOutput)
}

// The amount of time, in seconds, during which no response means a failed health check. You can specify between 2 and 60 seconds. Defaults to 2.
func (o ContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerServiceDeploymentVersionPublicEndpointHealthCheck) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

// The number of consecutive health checks failures required before moving the container to the Unhealthy state. Defaults to 2.
func (o ContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ContainerServiceDeploymentVersionPublicEndpointHealthCheck) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

type ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceDeploymentVersionPublicEndpointHealthCheck)(nil)).Elem()
}

func (o ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput) ToContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput() ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput {
	return o
}

func (o ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput) ToContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutputWithContext(ctx context.Context) ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput {
	return o
}

func (o ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput) Elem() ContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput {
	return o.ApplyT(func(v *ContainerServiceDeploymentVersionPublicEndpointHealthCheck) ContainerServiceDeploymentVersionPublicEndpointHealthCheck {
		if v != nil {
			return *v
		}
		var ret ContainerServiceDeploymentVersionPublicEndpointHealthCheck
		return ret
	}).(ContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput)
}

// The number of consecutive health checks successes required before moving the container to the Healthy state. Defaults to 2.
func (o ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerServiceDeploymentVersionPublicEndpointHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.HealthyThreshold
	}).(pulumi.IntPtrOutput)
}

// The approximate interval, in seconds, between health checks of an individual container. You can specify between 5 and 300 seconds. Defaults to 5.
func (o ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput) IntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerServiceDeploymentVersionPublicEndpointHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.IntervalSeconds
	}).(pulumi.IntPtrOutput)
}

// The path on the container on which to perform the health check. Defaults to "/".
func (o ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceDeploymentVersionPublicEndpointHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// The HTTP codes to use when checking for a successful response from a container. You can specify values between 200 and 499. Defaults to "200-499".
func (o ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput) SuccessCodes() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServiceDeploymentVersionPublicEndpointHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.SuccessCodes
	}).(pulumi.StringPtrOutput)
}

// The amount of time, in seconds, during which no response means a failed health check. You can specify between 2 and 60 seconds. Defaults to 2.
func (o ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerServiceDeploymentVersionPublicEndpointHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// The number of consecutive health checks failures required before moving the container to the Unhealthy state. Defaults to 2.
func (o ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ContainerServiceDeploymentVersionPublicEndpointHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.UnhealthyThreshold
	}).(pulumi.IntPtrOutput)
}

type ContainerServicePrivateRegistryAccess struct {
	// Describes a request to configure an Amazon Lightsail container service to access private container image repositories, such as Amazon Elastic Container Registry (Amazon ECR) private repositories. See ECR Image Puller Role below for more details.
	EcrImagePullerRole *ContainerServicePrivateRegistryAccessEcrImagePullerRole `pulumi:"ecrImagePullerRole"`
}

// ContainerServicePrivateRegistryAccessInput is an input type that accepts ContainerServicePrivateRegistryAccessArgs and ContainerServicePrivateRegistryAccessOutput values.
// You can construct a concrete instance of `ContainerServicePrivateRegistryAccessInput` via:
//
//	ContainerServicePrivateRegistryAccessArgs{...}
type ContainerServicePrivateRegistryAccessInput interface {
	pulumi.Input

	ToContainerServicePrivateRegistryAccessOutput() ContainerServicePrivateRegistryAccessOutput
	ToContainerServicePrivateRegistryAccessOutputWithContext(context.Context) ContainerServicePrivateRegistryAccessOutput
}

type ContainerServicePrivateRegistryAccessArgs struct {
	// Describes a request to configure an Amazon Lightsail container service to access private container image repositories, such as Amazon Elastic Container Registry (Amazon ECR) private repositories. See ECR Image Puller Role below for more details.
	EcrImagePullerRole ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrInput `pulumi:"ecrImagePullerRole"`
}

func (ContainerServicePrivateRegistryAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServicePrivateRegistryAccess)(nil)).Elem()
}

func (i ContainerServicePrivateRegistryAccessArgs) ToContainerServicePrivateRegistryAccessOutput() ContainerServicePrivateRegistryAccessOutput {
	return i.ToContainerServicePrivateRegistryAccessOutputWithContext(context.Background())
}

func (i ContainerServicePrivateRegistryAccessArgs) ToContainerServicePrivateRegistryAccessOutputWithContext(ctx context.Context) ContainerServicePrivateRegistryAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServicePrivateRegistryAccessOutput)
}

func (i ContainerServicePrivateRegistryAccessArgs) ToContainerServicePrivateRegistryAccessPtrOutput() ContainerServicePrivateRegistryAccessPtrOutput {
	return i.ToContainerServicePrivateRegistryAccessPtrOutputWithContext(context.Background())
}

func (i ContainerServicePrivateRegistryAccessArgs) ToContainerServicePrivateRegistryAccessPtrOutputWithContext(ctx context.Context) ContainerServicePrivateRegistryAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServicePrivateRegistryAccessOutput).ToContainerServicePrivateRegistryAccessPtrOutputWithContext(ctx)
}

// ContainerServicePrivateRegistryAccessPtrInput is an input type that accepts ContainerServicePrivateRegistryAccessArgs, ContainerServicePrivateRegistryAccessPtr and ContainerServicePrivateRegistryAccessPtrOutput values.
// You can construct a concrete instance of `ContainerServicePrivateRegistryAccessPtrInput` via:
//
//	        ContainerServicePrivateRegistryAccessArgs{...}
//
//	or:
//
//	        nil
type ContainerServicePrivateRegistryAccessPtrInput interface {
	pulumi.Input

	ToContainerServicePrivateRegistryAccessPtrOutput() ContainerServicePrivateRegistryAccessPtrOutput
	ToContainerServicePrivateRegistryAccessPtrOutputWithContext(context.Context) ContainerServicePrivateRegistryAccessPtrOutput
}

type containerServicePrivateRegistryAccessPtrType ContainerServicePrivateRegistryAccessArgs

func ContainerServicePrivateRegistryAccessPtr(v *ContainerServicePrivateRegistryAccessArgs) ContainerServicePrivateRegistryAccessPtrInput {
	return (*containerServicePrivateRegistryAccessPtrType)(v)
}

func (*containerServicePrivateRegistryAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServicePrivateRegistryAccess)(nil)).Elem()
}

func (i *containerServicePrivateRegistryAccessPtrType) ToContainerServicePrivateRegistryAccessPtrOutput() ContainerServicePrivateRegistryAccessPtrOutput {
	return i.ToContainerServicePrivateRegistryAccessPtrOutputWithContext(context.Background())
}

func (i *containerServicePrivateRegistryAccessPtrType) ToContainerServicePrivateRegistryAccessPtrOutputWithContext(ctx context.Context) ContainerServicePrivateRegistryAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServicePrivateRegistryAccessPtrOutput)
}

type ContainerServicePrivateRegistryAccessOutput struct{ *pulumi.OutputState }

func (ContainerServicePrivateRegistryAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServicePrivateRegistryAccess)(nil)).Elem()
}

func (o ContainerServicePrivateRegistryAccessOutput) ToContainerServicePrivateRegistryAccessOutput() ContainerServicePrivateRegistryAccessOutput {
	return o
}

func (o ContainerServicePrivateRegistryAccessOutput) ToContainerServicePrivateRegistryAccessOutputWithContext(ctx context.Context) ContainerServicePrivateRegistryAccessOutput {
	return o
}

func (o ContainerServicePrivateRegistryAccessOutput) ToContainerServicePrivateRegistryAccessPtrOutput() ContainerServicePrivateRegistryAccessPtrOutput {
	return o.ToContainerServicePrivateRegistryAccessPtrOutputWithContext(context.Background())
}

func (o ContainerServicePrivateRegistryAccessOutput) ToContainerServicePrivateRegistryAccessPtrOutputWithContext(ctx context.Context) ContainerServicePrivateRegistryAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerServicePrivateRegistryAccess) *ContainerServicePrivateRegistryAccess {
		return &v
	}).(ContainerServicePrivateRegistryAccessPtrOutput)
}

// Describes a request to configure an Amazon Lightsail container service to access private container image repositories, such as Amazon Elastic Container Registry (Amazon ECR) private repositories. See ECR Image Puller Role below for more details.
func (o ContainerServicePrivateRegistryAccessOutput) EcrImagePullerRole() ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput {
	return o.ApplyT(func(v ContainerServicePrivateRegistryAccess) *ContainerServicePrivateRegistryAccessEcrImagePullerRole {
		return v.EcrImagePullerRole
	}).(ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput)
}

type ContainerServicePrivateRegistryAccessPtrOutput struct{ *pulumi.OutputState }

func (ContainerServicePrivateRegistryAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServicePrivateRegistryAccess)(nil)).Elem()
}

func (o ContainerServicePrivateRegistryAccessPtrOutput) ToContainerServicePrivateRegistryAccessPtrOutput() ContainerServicePrivateRegistryAccessPtrOutput {
	return o
}

func (o ContainerServicePrivateRegistryAccessPtrOutput) ToContainerServicePrivateRegistryAccessPtrOutputWithContext(ctx context.Context) ContainerServicePrivateRegistryAccessPtrOutput {
	return o
}

func (o ContainerServicePrivateRegistryAccessPtrOutput) Elem() ContainerServicePrivateRegistryAccessOutput {
	return o.ApplyT(func(v *ContainerServicePrivateRegistryAccess) ContainerServicePrivateRegistryAccess {
		if v != nil {
			return *v
		}
		var ret ContainerServicePrivateRegistryAccess
		return ret
	}).(ContainerServicePrivateRegistryAccessOutput)
}

// Describes a request to configure an Amazon Lightsail container service to access private container image repositories, such as Amazon Elastic Container Registry (Amazon ECR) private repositories. See ECR Image Puller Role below for more details.
func (o ContainerServicePrivateRegistryAccessPtrOutput) EcrImagePullerRole() ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput {
	return o.ApplyT(func(v *ContainerServicePrivateRegistryAccess) *ContainerServicePrivateRegistryAccessEcrImagePullerRole {
		if v == nil {
			return nil
		}
		return v.EcrImagePullerRole
	}).(ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput)
}

type ContainerServicePrivateRegistryAccessEcrImagePullerRole struct {
	// A Boolean value that indicates whether to activate the role. The default is `false`.
	IsActive *bool `pulumi:"isActive"`
	// The principal ARN of the container service. The principal ARN can be used to create a trust
	// relationship between your standard AWS account and your Lightsail container service. This allows you to give your
	// service permission to access resources in your standard AWS account.
	PrincipalArn *string `pulumi:"principalArn"`
}

// ContainerServicePrivateRegistryAccessEcrImagePullerRoleInput is an input type that accepts ContainerServicePrivateRegistryAccessEcrImagePullerRoleArgs and ContainerServicePrivateRegistryAccessEcrImagePullerRoleOutput values.
// You can construct a concrete instance of `ContainerServicePrivateRegistryAccessEcrImagePullerRoleInput` via:
//
//	ContainerServicePrivateRegistryAccessEcrImagePullerRoleArgs{...}
type ContainerServicePrivateRegistryAccessEcrImagePullerRoleInput interface {
	pulumi.Input

	ToContainerServicePrivateRegistryAccessEcrImagePullerRoleOutput() ContainerServicePrivateRegistryAccessEcrImagePullerRoleOutput
	ToContainerServicePrivateRegistryAccessEcrImagePullerRoleOutputWithContext(context.Context) ContainerServicePrivateRegistryAccessEcrImagePullerRoleOutput
}

type ContainerServicePrivateRegistryAccessEcrImagePullerRoleArgs struct {
	// A Boolean value that indicates whether to activate the role. The default is `false`.
	IsActive pulumi.BoolPtrInput `pulumi:"isActive"`
	// The principal ARN of the container service. The principal ARN can be used to create a trust
	// relationship between your standard AWS account and your Lightsail container service. This allows you to give your
	// service permission to access resources in your standard AWS account.
	PrincipalArn pulumi.StringPtrInput `pulumi:"principalArn"`
}

func (ContainerServicePrivateRegistryAccessEcrImagePullerRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServicePrivateRegistryAccessEcrImagePullerRole)(nil)).Elem()
}

func (i ContainerServicePrivateRegistryAccessEcrImagePullerRoleArgs) ToContainerServicePrivateRegistryAccessEcrImagePullerRoleOutput() ContainerServicePrivateRegistryAccessEcrImagePullerRoleOutput {
	return i.ToContainerServicePrivateRegistryAccessEcrImagePullerRoleOutputWithContext(context.Background())
}

func (i ContainerServicePrivateRegistryAccessEcrImagePullerRoleArgs) ToContainerServicePrivateRegistryAccessEcrImagePullerRoleOutputWithContext(ctx context.Context) ContainerServicePrivateRegistryAccessEcrImagePullerRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServicePrivateRegistryAccessEcrImagePullerRoleOutput)
}

func (i ContainerServicePrivateRegistryAccessEcrImagePullerRoleArgs) ToContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput() ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput {
	return i.ToContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutputWithContext(context.Background())
}

func (i ContainerServicePrivateRegistryAccessEcrImagePullerRoleArgs) ToContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutputWithContext(ctx context.Context) ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServicePrivateRegistryAccessEcrImagePullerRoleOutput).ToContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutputWithContext(ctx)
}

// ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrInput is an input type that accepts ContainerServicePrivateRegistryAccessEcrImagePullerRoleArgs, ContainerServicePrivateRegistryAccessEcrImagePullerRolePtr and ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput values.
// You can construct a concrete instance of `ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrInput` via:
//
//	        ContainerServicePrivateRegistryAccessEcrImagePullerRoleArgs{...}
//
//	or:
//
//	        nil
type ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrInput interface {
	pulumi.Input

	ToContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput() ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput
	ToContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutputWithContext(context.Context) ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput
}

type containerServicePrivateRegistryAccessEcrImagePullerRolePtrType ContainerServicePrivateRegistryAccessEcrImagePullerRoleArgs

func ContainerServicePrivateRegistryAccessEcrImagePullerRolePtr(v *ContainerServicePrivateRegistryAccessEcrImagePullerRoleArgs) ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrInput {
	return (*containerServicePrivateRegistryAccessEcrImagePullerRolePtrType)(v)
}

func (*containerServicePrivateRegistryAccessEcrImagePullerRolePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServicePrivateRegistryAccessEcrImagePullerRole)(nil)).Elem()
}

func (i *containerServicePrivateRegistryAccessEcrImagePullerRolePtrType) ToContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput() ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput {
	return i.ToContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutputWithContext(context.Background())
}

func (i *containerServicePrivateRegistryAccessEcrImagePullerRolePtrType) ToContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutputWithContext(ctx context.Context) ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput)
}

type ContainerServicePrivateRegistryAccessEcrImagePullerRoleOutput struct{ *pulumi.OutputState }

func (ContainerServicePrivateRegistryAccessEcrImagePullerRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServicePrivateRegistryAccessEcrImagePullerRole)(nil)).Elem()
}

func (o ContainerServicePrivateRegistryAccessEcrImagePullerRoleOutput) ToContainerServicePrivateRegistryAccessEcrImagePullerRoleOutput() ContainerServicePrivateRegistryAccessEcrImagePullerRoleOutput {
	return o
}

func (o ContainerServicePrivateRegistryAccessEcrImagePullerRoleOutput) ToContainerServicePrivateRegistryAccessEcrImagePullerRoleOutputWithContext(ctx context.Context) ContainerServicePrivateRegistryAccessEcrImagePullerRoleOutput {
	return o
}

func (o ContainerServicePrivateRegistryAccessEcrImagePullerRoleOutput) ToContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput() ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput {
	return o.ToContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutputWithContext(context.Background())
}

func (o ContainerServicePrivateRegistryAccessEcrImagePullerRoleOutput) ToContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutputWithContext(ctx context.Context) ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerServicePrivateRegistryAccessEcrImagePullerRole) *ContainerServicePrivateRegistryAccessEcrImagePullerRole {
		return &v
	}).(ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput)
}

// A Boolean value that indicates whether to activate the role. The default is `false`.
func (o ContainerServicePrivateRegistryAccessEcrImagePullerRoleOutput) IsActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ContainerServicePrivateRegistryAccessEcrImagePullerRole) *bool { return v.IsActive }).(pulumi.BoolPtrOutput)
}

// The principal ARN of the container service. The principal ARN can be used to create a trust
// relationship between your standard AWS account and your Lightsail container service. This allows you to give your
// service permission to access resources in your standard AWS account.
func (o ContainerServicePrivateRegistryAccessEcrImagePullerRoleOutput) PrincipalArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ContainerServicePrivateRegistryAccessEcrImagePullerRole) *string { return v.PrincipalArn }).(pulumi.StringPtrOutput)
}

type ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput struct{ *pulumi.OutputState }

func (ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServicePrivateRegistryAccessEcrImagePullerRole)(nil)).Elem()
}

func (o ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput) ToContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput() ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput {
	return o
}

func (o ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput) ToContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutputWithContext(ctx context.Context) ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput {
	return o
}

func (o ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput) Elem() ContainerServicePrivateRegistryAccessEcrImagePullerRoleOutput {
	return o.ApplyT(func(v *ContainerServicePrivateRegistryAccessEcrImagePullerRole) ContainerServicePrivateRegistryAccessEcrImagePullerRole {
		if v != nil {
			return *v
		}
		var ret ContainerServicePrivateRegistryAccessEcrImagePullerRole
		return ret
	}).(ContainerServicePrivateRegistryAccessEcrImagePullerRoleOutput)
}

// A Boolean value that indicates whether to activate the role. The default is `false`.
func (o ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput) IsActive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ContainerServicePrivateRegistryAccessEcrImagePullerRole) *bool {
		if v == nil {
			return nil
		}
		return v.IsActive
	}).(pulumi.BoolPtrOutput)
}

// The principal ARN of the container service. The principal ARN can be used to create a trust
// relationship between your standard AWS account and your Lightsail container service. This allows you to give your
// service permission to access resources in your standard AWS account.
func (o ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput) PrincipalArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContainerServicePrivateRegistryAccessEcrImagePullerRole) *string {
		if v == nil {
			return nil
		}
		return v.PrincipalArn
	}).(pulumi.StringPtrOutput)
}

type ContainerServicePublicDomainNames struct {
	Certificates []ContainerServicePublicDomainNamesCertificate `pulumi:"certificates"`
}

// ContainerServicePublicDomainNamesInput is an input type that accepts ContainerServicePublicDomainNamesArgs and ContainerServicePublicDomainNamesOutput values.
// You can construct a concrete instance of `ContainerServicePublicDomainNamesInput` via:
//
//	ContainerServicePublicDomainNamesArgs{...}
type ContainerServicePublicDomainNamesInput interface {
	pulumi.Input

	ToContainerServicePublicDomainNamesOutput() ContainerServicePublicDomainNamesOutput
	ToContainerServicePublicDomainNamesOutputWithContext(context.Context) ContainerServicePublicDomainNamesOutput
}

type ContainerServicePublicDomainNamesArgs struct {
	Certificates ContainerServicePublicDomainNamesCertificateArrayInput `pulumi:"certificates"`
}

func (ContainerServicePublicDomainNamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServicePublicDomainNames)(nil)).Elem()
}

func (i ContainerServicePublicDomainNamesArgs) ToContainerServicePublicDomainNamesOutput() ContainerServicePublicDomainNamesOutput {
	return i.ToContainerServicePublicDomainNamesOutputWithContext(context.Background())
}

func (i ContainerServicePublicDomainNamesArgs) ToContainerServicePublicDomainNamesOutputWithContext(ctx context.Context) ContainerServicePublicDomainNamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServicePublicDomainNamesOutput)
}

func (i ContainerServicePublicDomainNamesArgs) ToContainerServicePublicDomainNamesPtrOutput() ContainerServicePublicDomainNamesPtrOutput {
	return i.ToContainerServicePublicDomainNamesPtrOutputWithContext(context.Background())
}

func (i ContainerServicePublicDomainNamesArgs) ToContainerServicePublicDomainNamesPtrOutputWithContext(ctx context.Context) ContainerServicePublicDomainNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServicePublicDomainNamesOutput).ToContainerServicePublicDomainNamesPtrOutputWithContext(ctx)
}

// ContainerServicePublicDomainNamesPtrInput is an input type that accepts ContainerServicePublicDomainNamesArgs, ContainerServicePublicDomainNamesPtr and ContainerServicePublicDomainNamesPtrOutput values.
// You can construct a concrete instance of `ContainerServicePublicDomainNamesPtrInput` via:
//
//	        ContainerServicePublicDomainNamesArgs{...}
//
//	or:
//
//	        nil
type ContainerServicePublicDomainNamesPtrInput interface {
	pulumi.Input

	ToContainerServicePublicDomainNamesPtrOutput() ContainerServicePublicDomainNamesPtrOutput
	ToContainerServicePublicDomainNamesPtrOutputWithContext(context.Context) ContainerServicePublicDomainNamesPtrOutput
}

type containerServicePublicDomainNamesPtrType ContainerServicePublicDomainNamesArgs

func ContainerServicePublicDomainNamesPtr(v *ContainerServicePublicDomainNamesArgs) ContainerServicePublicDomainNamesPtrInput {
	return (*containerServicePublicDomainNamesPtrType)(v)
}

func (*containerServicePublicDomainNamesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServicePublicDomainNames)(nil)).Elem()
}

func (i *containerServicePublicDomainNamesPtrType) ToContainerServicePublicDomainNamesPtrOutput() ContainerServicePublicDomainNamesPtrOutput {
	return i.ToContainerServicePublicDomainNamesPtrOutputWithContext(context.Background())
}

func (i *containerServicePublicDomainNamesPtrType) ToContainerServicePublicDomainNamesPtrOutputWithContext(ctx context.Context) ContainerServicePublicDomainNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServicePublicDomainNamesPtrOutput)
}

type ContainerServicePublicDomainNamesOutput struct{ *pulumi.OutputState }

func (ContainerServicePublicDomainNamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServicePublicDomainNames)(nil)).Elem()
}

func (o ContainerServicePublicDomainNamesOutput) ToContainerServicePublicDomainNamesOutput() ContainerServicePublicDomainNamesOutput {
	return o
}

func (o ContainerServicePublicDomainNamesOutput) ToContainerServicePublicDomainNamesOutputWithContext(ctx context.Context) ContainerServicePublicDomainNamesOutput {
	return o
}

func (o ContainerServicePublicDomainNamesOutput) ToContainerServicePublicDomainNamesPtrOutput() ContainerServicePublicDomainNamesPtrOutput {
	return o.ToContainerServicePublicDomainNamesPtrOutputWithContext(context.Background())
}

func (o ContainerServicePublicDomainNamesOutput) ToContainerServicePublicDomainNamesPtrOutputWithContext(ctx context.Context) ContainerServicePublicDomainNamesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ContainerServicePublicDomainNames) *ContainerServicePublicDomainNames {
		return &v
	}).(ContainerServicePublicDomainNamesPtrOutput)
}

func (o ContainerServicePublicDomainNamesOutput) Certificates() ContainerServicePublicDomainNamesCertificateArrayOutput {
	return o.ApplyT(func(v ContainerServicePublicDomainNames) []ContainerServicePublicDomainNamesCertificate {
		return v.Certificates
	}).(ContainerServicePublicDomainNamesCertificateArrayOutput)
}

type ContainerServicePublicDomainNamesPtrOutput struct{ *pulumi.OutputState }

func (ContainerServicePublicDomainNamesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServicePublicDomainNames)(nil)).Elem()
}

func (o ContainerServicePublicDomainNamesPtrOutput) ToContainerServicePublicDomainNamesPtrOutput() ContainerServicePublicDomainNamesPtrOutput {
	return o
}

func (o ContainerServicePublicDomainNamesPtrOutput) ToContainerServicePublicDomainNamesPtrOutputWithContext(ctx context.Context) ContainerServicePublicDomainNamesPtrOutput {
	return o
}

func (o ContainerServicePublicDomainNamesPtrOutput) Elem() ContainerServicePublicDomainNamesOutput {
	return o.ApplyT(func(v *ContainerServicePublicDomainNames) ContainerServicePublicDomainNames {
		if v != nil {
			return *v
		}
		var ret ContainerServicePublicDomainNames
		return ret
	}).(ContainerServicePublicDomainNamesOutput)
}

func (o ContainerServicePublicDomainNamesPtrOutput) Certificates() ContainerServicePublicDomainNamesCertificateArrayOutput {
	return o.ApplyT(func(v *ContainerServicePublicDomainNames) []ContainerServicePublicDomainNamesCertificate {
		if v == nil {
			return nil
		}
		return v.Certificates
	}).(ContainerServicePublicDomainNamesCertificateArrayOutput)
}

type ContainerServicePublicDomainNamesCertificate struct {
	CertificateName string   `pulumi:"certificateName"`
	DomainNames     []string `pulumi:"domainNames"`
}

// ContainerServicePublicDomainNamesCertificateInput is an input type that accepts ContainerServicePublicDomainNamesCertificateArgs and ContainerServicePublicDomainNamesCertificateOutput values.
// You can construct a concrete instance of `ContainerServicePublicDomainNamesCertificateInput` via:
//
//	ContainerServicePublicDomainNamesCertificateArgs{...}
type ContainerServicePublicDomainNamesCertificateInput interface {
	pulumi.Input

	ToContainerServicePublicDomainNamesCertificateOutput() ContainerServicePublicDomainNamesCertificateOutput
	ToContainerServicePublicDomainNamesCertificateOutputWithContext(context.Context) ContainerServicePublicDomainNamesCertificateOutput
}

type ContainerServicePublicDomainNamesCertificateArgs struct {
	CertificateName pulumi.StringInput      `pulumi:"certificateName"`
	DomainNames     pulumi.StringArrayInput `pulumi:"domainNames"`
}

func (ContainerServicePublicDomainNamesCertificateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServicePublicDomainNamesCertificate)(nil)).Elem()
}

func (i ContainerServicePublicDomainNamesCertificateArgs) ToContainerServicePublicDomainNamesCertificateOutput() ContainerServicePublicDomainNamesCertificateOutput {
	return i.ToContainerServicePublicDomainNamesCertificateOutputWithContext(context.Background())
}

func (i ContainerServicePublicDomainNamesCertificateArgs) ToContainerServicePublicDomainNamesCertificateOutputWithContext(ctx context.Context) ContainerServicePublicDomainNamesCertificateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServicePublicDomainNamesCertificateOutput)
}

// ContainerServicePublicDomainNamesCertificateArrayInput is an input type that accepts ContainerServicePublicDomainNamesCertificateArray and ContainerServicePublicDomainNamesCertificateArrayOutput values.
// You can construct a concrete instance of `ContainerServicePublicDomainNamesCertificateArrayInput` via:
//
//	ContainerServicePublicDomainNamesCertificateArray{ ContainerServicePublicDomainNamesCertificateArgs{...} }
type ContainerServicePublicDomainNamesCertificateArrayInput interface {
	pulumi.Input

	ToContainerServicePublicDomainNamesCertificateArrayOutput() ContainerServicePublicDomainNamesCertificateArrayOutput
	ToContainerServicePublicDomainNamesCertificateArrayOutputWithContext(context.Context) ContainerServicePublicDomainNamesCertificateArrayOutput
}

type ContainerServicePublicDomainNamesCertificateArray []ContainerServicePublicDomainNamesCertificateInput

func (ContainerServicePublicDomainNamesCertificateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerServicePublicDomainNamesCertificate)(nil)).Elem()
}

func (i ContainerServicePublicDomainNamesCertificateArray) ToContainerServicePublicDomainNamesCertificateArrayOutput() ContainerServicePublicDomainNamesCertificateArrayOutput {
	return i.ToContainerServicePublicDomainNamesCertificateArrayOutputWithContext(context.Background())
}

func (i ContainerServicePublicDomainNamesCertificateArray) ToContainerServicePublicDomainNamesCertificateArrayOutputWithContext(ctx context.Context) ContainerServicePublicDomainNamesCertificateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServicePublicDomainNamesCertificateArrayOutput)
}

type ContainerServicePublicDomainNamesCertificateOutput struct{ *pulumi.OutputState }

func (ContainerServicePublicDomainNamesCertificateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ContainerServicePublicDomainNamesCertificate)(nil)).Elem()
}

func (o ContainerServicePublicDomainNamesCertificateOutput) ToContainerServicePublicDomainNamesCertificateOutput() ContainerServicePublicDomainNamesCertificateOutput {
	return o
}

func (o ContainerServicePublicDomainNamesCertificateOutput) ToContainerServicePublicDomainNamesCertificateOutputWithContext(ctx context.Context) ContainerServicePublicDomainNamesCertificateOutput {
	return o
}

func (o ContainerServicePublicDomainNamesCertificateOutput) CertificateName() pulumi.StringOutput {
	return o.ApplyT(func(v ContainerServicePublicDomainNamesCertificate) string { return v.CertificateName }).(pulumi.StringOutput)
}

func (o ContainerServicePublicDomainNamesCertificateOutput) DomainNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ContainerServicePublicDomainNamesCertificate) []string { return v.DomainNames }).(pulumi.StringArrayOutput)
}

type ContainerServicePublicDomainNamesCertificateArrayOutput struct{ *pulumi.OutputState }

func (ContainerServicePublicDomainNamesCertificateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ContainerServicePublicDomainNamesCertificate)(nil)).Elem()
}

func (o ContainerServicePublicDomainNamesCertificateArrayOutput) ToContainerServicePublicDomainNamesCertificateArrayOutput() ContainerServicePublicDomainNamesCertificateArrayOutput {
	return o
}

func (o ContainerServicePublicDomainNamesCertificateArrayOutput) ToContainerServicePublicDomainNamesCertificateArrayOutputWithContext(ctx context.Context) ContainerServicePublicDomainNamesCertificateArrayOutput {
	return o
}

func (o ContainerServicePublicDomainNamesCertificateArrayOutput) Index(i pulumi.IntInput) ContainerServicePublicDomainNamesCertificateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ContainerServicePublicDomainNamesCertificate {
		return vs[0].([]ContainerServicePublicDomainNamesCertificate)[vs[1].(int)]
	}).(ContainerServicePublicDomainNamesCertificateOutput)
}

type DistributionCacheBehavior struct {
	// The cache behavior for the specified path.
	Behavior string `pulumi:"behavior"`
	// The path to a directory or file to cached, or not cache. Use an asterisk symbol to specify wildcard directories (path/to/assets/\*), and file types (\*.html, \*jpg, \*js). Directories and file paths are case-sensitive.
	Path string `pulumi:"path"`
}

// DistributionCacheBehaviorInput is an input type that accepts DistributionCacheBehaviorArgs and DistributionCacheBehaviorOutput values.
// You can construct a concrete instance of `DistributionCacheBehaviorInput` via:
//
//	DistributionCacheBehaviorArgs{...}
type DistributionCacheBehaviorInput interface {
	pulumi.Input

	ToDistributionCacheBehaviorOutput() DistributionCacheBehaviorOutput
	ToDistributionCacheBehaviorOutputWithContext(context.Context) DistributionCacheBehaviorOutput
}

type DistributionCacheBehaviorArgs struct {
	// The cache behavior for the specified path.
	Behavior pulumi.StringInput `pulumi:"behavior"`
	// The path to a directory or file to cached, or not cache. Use an asterisk symbol to specify wildcard directories (path/to/assets/\*), and file types (\*.html, \*jpg, \*js). Directories and file paths are case-sensitive.
	Path pulumi.StringInput `pulumi:"path"`
}

func (DistributionCacheBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCacheBehavior)(nil)).Elem()
}

func (i DistributionCacheBehaviorArgs) ToDistributionCacheBehaviorOutput() DistributionCacheBehaviorOutput {
	return i.ToDistributionCacheBehaviorOutputWithContext(context.Background())
}

func (i DistributionCacheBehaviorArgs) ToDistributionCacheBehaviorOutputWithContext(ctx context.Context) DistributionCacheBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCacheBehaviorOutput)
}

// DistributionCacheBehaviorArrayInput is an input type that accepts DistributionCacheBehaviorArray and DistributionCacheBehaviorArrayOutput values.
// You can construct a concrete instance of `DistributionCacheBehaviorArrayInput` via:
//
//	DistributionCacheBehaviorArray{ DistributionCacheBehaviorArgs{...} }
type DistributionCacheBehaviorArrayInput interface {
	pulumi.Input

	ToDistributionCacheBehaviorArrayOutput() DistributionCacheBehaviorArrayOutput
	ToDistributionCacheBehaviorArrayOutputWithContext(context.Context) DistributionCacheBehaviorArrayOutput
}

type DistributionCacheBehaviorArray []DistributionCacheBehaviorInput

func (DistributionCacheBehaviorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionCacheBehavior)(nil)).Elem()
}

func (i DistributionCacheBehaviorArray) ToDistributionCacheBehaviorArrayOutput() DistributionCacheBehaviorArrayOutput {
	return i.ToDistributionCacheBehaviorArrayOutputWithContext(context.Background())
}

func (i DistributionCacheBehaviorArray) ToDistributionCacheBehaviorArrayOutputWithContext(ctx context.Context) DistributionCacheBehaviorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCacheBehaviorArrayOutput)
}

type DistributionCacheBehaviorOutput struct{ *pulumi.OutputState }

func (DistributionCacheBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCacheBehavior)(nil)).Elem()
}

func (o DistributionCacheBehaviorOutput) ToDistributionCacheBehaviorOutput() DistributionCacheBehaviorOutput {
	return o
}

func (o DistributionCacheBehaviorOutput) ToDistributionCacheBehaviorOutputWithContext(ctx context.Context) DistributionCacheBehaviorOutput {
	return o
}

// The cache behavior for the specified path.
func (o DistributionCacheBehaviorOutput) Behavior() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionCacheBehavior) string { return v.Behavior }).(pulumi.StringOutput)
}

// The path to a directory or file to cached, or not cache. Use an asterisk symbol to specify wildcard directories (path/to/assets/\*), and file types (\*.html, \*jpg, \*js). Directories and file paths are case-sensitive.
func (o DistributionCacheBehaviorOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionCacheBehavior) string { return v.Path }).(pulumi.StringOutput)
}

type DistributionCacheBehaviorArrayOutput struct{ *pulumi.OutputState }

func (DistributionCacheBehaviorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionCacheBehavior)(nil)).Elem()
}

func (o DistributionCacheBehaviorArrayOutput) ToDistributionCacheBehaviorArrayOutput() DistributionCacheBehaviorArrayOutput {
	return o
}

func (o DistributionCacheBehaviorArrayOutput) ToDistributionCacheBehaviorArrayOutputWithContext(ctx context.Context) DistributionCacheBehaviorArrayOutput {
	return o
}

func (o DistributionCacheBehaviorArrayOutput) Index(i pulumi.IntInput) DistributionCacheBehaviorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DistributionCacheBehavior {
		return vs[0].([]DistributionCacheBehavior)[vs[1].(int)]
	}).(DistributionCacheBehaviorOutput)
}

type DistributionCacheBehaviorSettings struct {
	// The HTTP methods that are processed and forwarded to the distribution's origin.
	AllowedHttpMethods *string `pulumi:"allowedHttpMethods"`
	// The HTTP method responses that are cached by your distribution.
	CachedHttpMethods *string `pulumi:"cachedHttpMethods"`
	// The default amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the content has been updated.
	DefaultTtl *int `pulumi:"defaultTtl"`
	// An object that describes the cookies that are forwarded to the origin. Your content is cached based on the cookies that are forwarded. Detailed below
	ForwardedCookies *DistributionCacheBehaviorSettingsForwardedCookies `pulumi:"forwardedCookies"`
	// An object that describes the headers that are forwarded to the origin. Your content is cached based on the headers that are forwarded. Detailed below
	ForwardedHeaders *DistributionCacheBehaviorSettingsForwardedHeaders `pulumi:"forwardedHeaders"`
	// An object that describes the query strings that are forwarded to the origin. Your content is cached based on the query strings that are forwarded. Detailed below
	ForwardedQueryStrings *DistributionCacheBehaviorSettingsForwardedQueryStrings `pulumi:"forwardedQueryStrings"`
	// The maximum amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the object has been updated.
	MaximumTtl *int `pulumi:"maximumTtl"`
	// The minimum amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the object has been updated.
	MinimumTtl *int `pulumi:"minimumTtl"`
}

// DistributionCacheBehaviorSettingsInput is an input type that accepts DistributionCacheBehaviorSettingsArgs and DistributionCacheBehaviorSettingsOutput values.
// You can construct a concrete instance of `DistributionCacheBehaviorSettingsInput` via:
//
//	DistributionCacheBehaviorSettingsArgs{...}
type DistributionCacheBehaviorSettingsInput interface {
	pulumi.Input

	ToDistributionCacheBehaviorSettingsOutput() DistributionCacheBehaviorSettingsOutput
	ToDistributionCacheBehaviorSettingsOutputWithContext(context.Context) DistributionCacheBehaviorSettingsOutput
}

type DistributionCacheBehaviorSettingsArgs struct {
	// The HTTP methods that are processed and forwarded to the distribution's origin.
	AllowedHttpMethods pulumi.StringPtrInput `pulumi:"allowedHttpMethods"`
	// The HTTP method responses that are cached by your distribution.
	CachedHttpMethods pulumi.StringPtrInput `pulumi:"cachedHttpMethods"`
	// The default amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the content has been updated.
	DefaultTtl pulumi.IntPtrInput `pulumi:"defaultTtl"`
	// An object that describes the cookies that are forwarded to the origin. Your content is cached based on the cookies that are forwarded. Detailed below
	ForwardedCookies DistributionCacheBehaviorSettingsForwardedCookiesPtrInput `pulumi:"forwardedCookies"`
	// An object that describes the headers that are forwarded to the origin. Your content is cached based on the headers that are forwarded. Detailed below
	ForwardedHeaders DistributionCacheBehaviorSettingsForwardedHeadersPtrInput `pulumi:"forwardedHeaders"`
	// An object that describes the query strings that are forwarded to the origin. Your content is cached based on the query strings that are forwarded. Detailed below
	ForwardedQueryStrings DistributionCacheBehaviorSettingsForwardedQueryStringsPtrInput `pulumi:"forwardedQueryStrings"`
	// The maximum amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the object has been updated.
	MaximumTtl pulumi.IntPtrInput `pulumi:"maximumTtl"`
	// The minimum amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the object has been updated.
	MinimumTtl pulumi.IntPtrInput `pulumi:"minimumTtl"`
}

func (DistributionCacheBehaviorSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCacheBehaviorSettings)(nil)).Elem()
}

func (i DistributionCacheBehaviorSettingsArgs) ToDistributionCacheBehaviorSettingsOutput() DistributionCacheBehaviorSettingsOutput {
	return i.ToDistributionCacheBehaviorSettingsOutputWithContext(context.Background())
}

func (i DistributionCacheBehaviorSettingsArgs) ToDistributionCacheBehaviorSettingsOutputWithContext(ctx context.Context) DistributionCacheBehaviorSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCacheBehaviorSettingsOutput)
}

func (i DistributionCacheBehaviorSettingsArgs) ToDistributionCacheBehaviorSettingsPtrOutput() DistributionCacheBehaviorSettingsPtrOutput {
	return i.ToDistributionCacheBehaviorSettingsPtrOutputWithContext(context.Background())
}

func (i DistributionCacheBehaviorSettingsArgs) ToDistributionCacheBehaviorSettingsPtrOutputWithContext(ctx context.Context) DistributionCacheBehaviorSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCacheBehaviorSettingsOutput).ToDistributionCacheBehaviorSettingsPtrOutputWithContext(ctx)
}

// DistributionCacheBehaviorSettingsPtrInput is an input type that accepts DistributionCacheBehaviorSettingsArgs, DistributionCacheBehaviorSettingsPtr and DistributionCacheBehaviorSettingsPtrOutput values.
// You can construct a concrete instance of `DistributionCacheBehaviorSettingsPtrInput` via:
//
//	        DistributionCacheBehaviorSettingsArgs{...}
//
//	or:
//
//	        nil
type DistributionCacheBehaviorSettingsPtrInput interface {
	pulumi.Input

	ToDistributionCacheBehaviorSettingsPtrOutput() DistributionCacheBehaviorSettingsPtrOutput
	ToDistributionCacheBehaviorSettingsPtrOutputWithContext(context.Context) DistributionCacheBehaviorSettingsPtrOutput
}

type distributionCacheBehaviorSettingsPtrType DistributionCacheBehaviorSettingsArgs

func DistributionCacheBehaviorSettingsPtr(v *DistributionCacheBehaviorSettingsArgs) DistributionCacheBehaviorSettingsPtrInput {
	return (*distributionCacheBehaviorSettingsPtrType)(v)
}

func (*distributionCacheBehaviorSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionCacheBehaviorSettings)(nil)).Elem()
}

func (i *distributionCacheBehaviorSettingsPtrType) ToDistributionCacheBehaviorSettingsPtrOutput() DistributionCacheBehaviorSettingsPtrOutput {
	return i.ToDistributionCacheBehaviorSettingsPtrOutputWithContext(context.Background())
}

func (i *distributionCacheBehaviorSettingsPtrType) ToDistributionCacheBehaviorSettingsPtrOutputWithContext(ctx context.Context) DistributionCacheBehaviorSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCacheBehaviorSettingsPtrOutput)
}

type DistributionCacheBehaviorSettingsOutput struct{ *pulumi.OutputState }

func (DistributionCacheBehaviorSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCacheBehaviorSettings)(nil)).Elem()
}

func (o DistributionCacheBehaviorSettingsOutput) ToDistributionCacheBehaviorSettingsOutput() DistributionCacheBehaviorSettingsOutput {
	return o
}

func (o DistributionCacheBehaviorSettingsOutput) ToDistributionCacheBehaviorSettingsOutputWithContext(ctx context.Context) DistributionCacheBehaviorSettingsOutput {
	return o
}

func (o DistributionCacheBehaviorSettingsOutput) ToDistributionCacheBehaviorSettingsPtrOutput() DistributionCacheBehaviorSettingsPtrOutput {
	return o.ToDistributionCacheBehaviorSettingsPtrOutputWithContext(context.Background())
}

func (o DistributionCacheBehaviorSettingsOutput) ToDistributionCacheBehaviorSettingsPtrOutputWithContext(ctx context.Context) DistributionCacheBehaviorSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionCacheBehaviorSettings) *DistributionCacheBehaviorSettings {
		return &v
	}).(DistributionCacheBehaviorSettingsPtrOutput)
}

// The HTTP methods that are processed and forwarded to the distribution's origin.
func (o DistributionCacheBehaviorSettingsOutput) AllowedHttpMethods() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionCacheBehaviorSettings) *string { return v.AllowedHttpMethods }).(pulumi.StringPtrOutput)
}

// The HTTP method responses that are cached by your distribution.
func (o DistributionCacheBehaviorSettingsOutput) CachedHttpMethods() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionCacheBehaviorSettings) *string { return v.CachedHttpMethods }).(pulumi.StringPtrOutput)
}

// The default amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the content has been updated.
func (o DistributionCacheBehaviorSettingsOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DistributionCacheBehaviorSettings) *int { return v.DefaultTtl }).(pulumi.IntPtrOutput)
}

// An object that describes the cookies that are forwarded to the origin. Your content is cached based on the cookies that are forwarded. Detailed below
func (o DistributionCacheBehaviorSettingsOutput) ForwardedCookies() DistributionCacheBehaviorSettingsForwardedCookiesPtrOutput {
	return o.ApplyT(func(v DistributionCacheBehaviorSettings) *DistributionCacheBehaviorSettingsForwardedCookies {
		return v.ForwardedCookies
	}).(DistributionCacheBehaviorSettingsForwardedCookiesPtrOutput)
}

// An object that describes the headers that are forwarded to the origin. Your content is cached based on the headers that are forwarded. Detailed below
func (o DistributionCacheBehaviorSettingsOutput) ForwardedHeaders() DistributionCacheBehaviorSettingsForwardedHeadersPtrOutput {
	return o.ApplyT(func(v DistributionCacheBehaviorSettings) *DistributionCacheBehaviorSettingsForwardedHeaders {
		return v.ForwardedHeaders
	}).(DistributionCacheBehaviorSettingsForwardedHeadersPtrOutput)
}

// An object that describes the query strings that are forwarded to the origin. Your content is cached based on the query strings that are forwarded. Detailed below
func (o DistributionCacheBehaviorSettingsOutput) ForwardedQueryStrings() DistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput {
	return o.ApplyT(func(v DistributionCacheBehaviorSettings) *DistributionCacheBehaviorSettingsForwardedQueryStrings {
		return v.ForwardedQueryStrings
	}).(DistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput)
}

// The maximum amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the object has been updated.
func (o DistributionCacheBehaviorSettingsOutput) MaximumTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DistributionCacheBehaviorSettings) *int { return v.MaximumTtl }).(pulumi.IntPtrOutput)
}

// The minimum amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the object has been updated.
func (o DistributionCacheBehaviorSettingsOutput) MinimumTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DistributionCacheBehaviorSettings) *int { return v.MinimumTtl }).(pulumi.IntPtrOutput)
}

type DistributionCacheBehaviorSettingsPtrOutput struct{ *pulumi.OutputState }

func (DistributionCacheBehaviorSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionCacheBehaviorSettings)(nil)).Elem()
}

func (o DistributionCacheBehaviorSettingsPtrOutput) ToDistributionCacheBehaviorSettingsPtrOutput() DistributionCacheBehaviorSettingsPtrOutput {
	return o
}

func (o DistributionCacheBehaviorSettingsPtrOutput) ToDistributionCacheBehaviorSettingsPtrOutputWithContext(ctx context.Context) DistributionCacheBehaviorSettingsPtrOutput {
	return o
}

func (o DistributionCacheBehaviorSettingsPtrOutput) Elem() DistributionCacheBehaviorSettingsOutput {
	return o.ApplyT(func(v *DistributionCacheBehaviorSettings) DistributionCacheBehaviorSettings {
		if v != nil {
			return *v
		}
		var ret DistributionCacheBehaviorSettings
		return ret
	}).(DistributionCacheBehaviorSettingsOutput)
}

// The HTTP methods that are processed and forwarded to the distribution's origin.
func (o DistributionCacheBehaviorSettingsPtrOutput) AllowedHttpMethods() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionCacheBehaviorSettings) *string {
		if v == nil {
			return nil
		}
		return v.AllowedHttpMethods
	}).(pulumi.StringPtrOutput)
}

// The HTTP method responses that are cached by your distribution.
func (o DistributionCacheBehaviorSettingsPtrOutput) CachedHttpMethods() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionCacheBehaviorSettings) *string {
		if v == nil {
			return nil
		}
		return v.CachedHttpMethods
	}).(pulumi.StringPtrOutput)
}

// The default amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the content has been updated.
func (o DistributionCacheBehaviorSettingsPtrOutput) DefaultTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DistributionCacheBehaviorSettings) *int {
		if v == nil {
			return nil
		}
		return v.DefaultTtl
	}).(pulumi.IntPtrOutput)
}

// An object that describes the cookies that are forwarded to the origin. Your content is cached based on the cookies that are forwarded. Detailed below
func (o DistributionCacheBehaviorSettingsPtrOutput) ForwardedCookies() DistributionCacheBehaviorSettingsForwardedCookiesPtrOutput {
	return o.ApplyT(func(v *DistributionCacheBehaviorSettings) *DistributionCacheBehaviorSettingsForwardedCookies {
		if v == nil {
			return nil
		}
		return v.ForwardedCookies
	}).(DistributionCacheBehaviorSettingsForwardedCookiesPtrOutput)
}

// An object that describes the headers that are forwarded to the origin. Your content is cached based on the headers that are forwarded. Detailed below
func (o DistributionCacheBehaviorSettingsPtrOutput) ForwardedHeaders() DistributionCacheBehaviorSettingsForwardedHeadersPtrOutput {
	return o.ApplyT(func(v *DistributionCacheBehaviorSettings) *DistributionCacheBehaviorSettingsForwardedHeaders {
		if v == nil {
			return nil
		}
		return v.ForwardedHeaders
	}).(DistributionCacheBehaviorSettingsForwardedHeadersPtrOutput)
}

// An object that describes the query strings that are forwarded to the origin. Your content is cached based on the query strings that are forwarded. Detailed below
func (o DistributionCacheBehaviorSettingsPtrOutput) ForwardedQueryStrings() DistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput {
	return o.ApplyT(func(v *DistributionCacheBehaviorSettings) *DistributionCacheBehaviorSettingsForwardedQueryStrings {
		if v == nil {
			return nil
		}
		return v.ForwardedQueryStrings
	}).(DistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput)
}

// The maximum amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the object has been updated.
func (o DistributionCacheBehaviorSettingsPtrOutput) MaximumTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DistributionCacheBehaviorSettings) *int {
		if v == nil {
			return nil
		}
		return v.MaximumTtl
	}).(pulumi.IntPtrOutput)
}

// The minimum amount of time that objects stay in the distribution's cache before the distribution forwards another request to the origin to determine whether the object has been updated.
func (o DistributionCacheBehaviorSettingsPtrOutput) MinimumTtl() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DistributionCacheBehaviorSettings) *int {
		if v == nil {
			return nil
		}
		return v.MinimumTtl
	}).(pulumi.IntPtrOutput)
}

type DistributionCacheBehaviorSettingsForwardedCookies struct {
	// The specific cookies to forward to your distribution's origin.
	CookiesAllowLists []string `pulumi:"cookiesAllowLists"`
	// Specifies which cookies to forward to the distribution's origin for a cache behavior: all, none, or allow-list to forward only the cookies specified in the cookiesAllowList parameter.
	Option *string `pulumi:"option"`
}

// DistributionCacheBehaviorSettingsForwardedCookiesInput is an input type that accepts DistributionCacheBehaviorSettingsForwardedCookiesArgs and DistributionCacheBehaviorSettingsForwardedCookiesOutput values.
// You can construct a concrete instance of `DistributionCacheBehaviorSettingsForwardedCookiesInput` via:
//
//	DistributionCacheBehaviorSettingsForwardedCookiesArgs{...}
type DistributionCacheBehaviorSettingsForwardedCookiesInput interface {
	pulumi.Input

	ToDistributionCacheBehaviorSettingsForwardedCookiesOutput() DistributionCacheBehaviorSettingsForwardedCookiesOutput
	ToDistributionCacheBehaviorSettingsForwardedCookiesOutputWithContext(context.Context) DistributionCacheBehaviorSettingsForwardedCookiesOutput
}

type DistributionCacheBehaviorSettingsForwardedCookiesArgs struct {
	// The specific cookies to forward to your distribution's origin.
	CookiesAllowLists pulumi.StringArrayInput `pulumi:"cookiesAllowLists"`
	// Specifies which cookies to forward to the distribution's origin for a cache behavior: all, none, or allow-list to forward only the cookies specified in the cookiesAllowList parameter.
	Option pulumi.StringPtrInput `pulumi:"option"`
}

func (DistributionCacheBehaviorSettingsForwardedCookiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCacheBehaviorSettingsForwardedCookies)(nil)).Elem()
}

func (i DistributionCacheBehaviorSettingsForwardedCookiesArgs) ToDistributionCacheBehaviorSettingsForwardedCookiesOutput() DistributionCacheBehaviorSettingsForwardedCookiesOutput {
	return i.ToDistributionCacheBehaviorSettingsForwardedCookiesOutputWithContext(context.Background())
}

func (i DistributionCacheBehaviorSettingsForwardedCookiesArgs) ToDistributionCacheBehaviorSettingsForwardedCookiesOutputWithContext(ctx context.Context) DistributionCacheBehaviorSettingsForwardedCookiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCacheBehaviorSettingsForwardedCookiesOutput)
}

func (i DistributionCacheBehaviorSettingsForwardedCookiesArgs) ToDistributionCacheBehaviorSettingsForwardedCookiesPtrOutput() DistributionCacheBehaviorSettingsForwardedCookiesPtrOutput {
	return i.ToDistributionCacheBehaviorSettingsForwardedCookiesPtrOutputWithContext(context.Background())
}

func (i DistributionCacheBehaviorSettingsForwardedCookiesArgs) ToDistributionCacheBehaviorSettingsForwardedCookiesPtrOutputWithContext(ctx context.Context) DistributionCacheBehaviorSettingsForwardedCookiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCacheBehaviorSettingsForwardedCookiesOutput).ToDistributionCacheBehaviorSettingsForwardedCookiesPtrOutputWithContext(ctx)
}

// DistributionCacheBehaviorSettingsForwardedCookiesPtrInput is an input type that accepts DistributionCacheBehaviorSettingsForwardedCookiesArgs, DistributionCacheBehaviorSettingsForwardedCookiesPtr and DistributionCacheBehaviorSettingsForwardedCookiesPtrOutput values.
// You can construct a concrete instance of `DistributionCacheBehaviorSettingsForwardedCookiesPtrInput` via:
//
//	        DistributionCacheBehaviorSettingsForwardedCookiesArgs{...}
//
//	or:
//
//	        nil
type DistributionCacheBehaviorSettingsForwardedCookiesPtrInput interface {
	pulumi.Input

	ToDistributionCacheBehaviorSettingsForwardedCookiesPtrOutput() DistributionCacheBehaviorSettingsForwardedCookiesPtrOutput
	ToDistributionCacheBehaviorSettingsForwardedCookiesPtrOutputWithContext(context.Context) DistributionCacheBehaviorSettingsForwardedCookiesPtrOutput
}

type distributionCacheBehaviorSettingsForwardedCookiesPtrType DistributionCacheBehaviorSettingsForwardedCookiesArgs

func DistributionCacheBehaviorSettingsForwardedCookiesPtr(v *DistributionCacheBehaviorSettingsForwardedCookiesArgs) DistributionCacheBehaviorSettingsForwardedCookiesPtrInput {
	return (*distributionCacheBehaviorSettingsForwardedCookiesPtrType)(v)
}

func (*distributionCacheBehaviorSettingsForwardedCookiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionCacheBehaviorSettingsForwardedCookies)(nil)).Elem()
}

func (i *distributionCacheBehaviorSettingsForwardedCookiesPtrType) ToDistributionCacheBehaviorSettingsForwardedCookiesPtrOutput() DistributionCacheBehaviorSettingsForwardedCookiesPtrOutput {
	return i.ToDistributionCacheBehaviorSettingsForwardedCookiesPtrOutputWithContext(context.Background())
}

func (i *distributionCacheBehaviorSettingsForwardedCookiesPtrType) ToDistributionCacheBehaviorSettingsForwardedCookiesPtrOutputWithContext(ctx context.Context) DistributionCacheBehaviorSettingsForwardedCookiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCacheBehaviorSettingsForwardedCookiesPtrOutput)
}

type DistributionCacheBehaviorSettingsForwardedCookiesOutput struct{ *pulumi.OutputState }

func (DistributionCacheBehaviorSettingsForwardedCookiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCacheBehaviorSettingsForwardedCookies)(nil)).Elem()
}

func (o DistributionCacheBehaviorSettingsForwardedCookiesOutput) ToDistributionCacheBehaviorSettingsForwardedCookiesOutput() DistributionCacheBehaviorSettingsForwardedCookiesOutput {
	return o
}

func (o DistributionCacheBehaviorSettingsForwardedCookiesOutput) ToDistributionCacheBehaviorSettingsForwardedCookiesOutputWithContext(ctx context.Context) DistributionCacheBehaviorSettingsForwardedCookiesOutput {
	return o
}

func (o DistributionCacheBehaviorSettingsForwardedCookiesOutput) ToDistributionCacheBehaviorSettingsForwardedCookiesPtrOutput() DistributionCacheBehaviorSettingsForwardedCookiesPtrOutput {
	return o.ToDistributionCacheBehaviorSettingsForwardedCookiesPtrOutputWithContext(context.Background())
}

func (o DistributionCacheBehaviorSettingsForwardedCookiesOutput) ToDistributionCacheBehaviorSettingsForwardedCookiesPtrOutputWithContext(ctx context.Context) DistributionCacheBehaviorSettingsForwardedCookiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionCacheBehaviorSettingsForwardedCookies) *DistributionCacheBehaviorSettingsForwardedCookies {
		return &v
	}).(DistributionCacheBehaviorSettingsForwardedCookiesPtrOutput)
}

// The specific cookies to forward to your distribution's origin.
func (o DistributionCacheBehaviorSettingsForwardedCookiesOutput) CookiesAllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionCacheBehaviorSettingsForwardedCookies) []string { return v.CookiesAllowLists }).(pulumi.StringArrayOutput)
}

// Specifies which cookies to forward to the distribution's origin for a cache behavior: all, none, or allow-list to forward only the cookies specified in the cookiesAllowList parameter.
func (o DistributionCacheBehaviorSettingsForwardedCookiesOutput) Option() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionCacheBehaviorSettingsForwardedCookies) *string { return v.Option }).(pulumi.StringPtrOutput)
}

type DistributionCacheBehaviorSettingsForwardedCookiesPtrOutput struct{ *pulumi.OutputState }

func (DistributionCacheBehaviorSettingsForwardedCookiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionCacheBehaviorSettingsForwardedCookies)(nil)).Elem()
}

func (o DistributionCacheBehaviorSettingsForwardedCookiesPtrOutput) ToDistributionCacheBehaviorSettingsForwardedCookiesPtrOutput() DistributionCacheBehaviorSettingsForwardedCookiesPtrOutput {
	return o
}

func (o DistributionCacheBehaviorSettingsForwardedCookiesPtrOutput) ToDistributionCacheBehaviorSettingsForwardedCookiesPtrOutputWithContext(ctx context.Context) DistributionCacheBehaviorSettingsForwardedCookiesPtrOutput {
	return o
}

func (o DistributionCacheBehaviorSettingsForwardedCookiesPtrOutput) Elem() DistributionCacheBehaviorSettingsForwardedCookiesOutput {
	return o.ApplyT(func(v *DistributionCacheBehaviorSettingsForwardedCookies) DistributionCacheBehaviorSettingsForwardedCookies {
		if v != nil {
			return *v
		}
		var ret DistributionCacheBehaviorSettingsForwardedCookies
		return ret
	}).(DistributionCacheBehaviorSettingsForwardedCookiesOutput)
}

// The specific cookies to forward to your distribution's origin.
func (o DistributionCacheBehaviorSettingsForwardedCookiesPtrOutput) CookiesAllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionCacheBehaviorSettingsForwardedCookies) []string {
		if v == nil {
			return nil
		}
		return v.CookiesAllowLists
	}).(pulumi.StringArrayOutput)
}

// Specifies which cookies to forward to the distribution's origin for a cache behavior: all, none, or allow-list to forward only the cookies specified in the cookiesAllowList parameter.
func (o DistributionCacheBehaviorSettingsForwardedCookiesPtrOutput) Option() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionCacheBehaviorSettingsForwardedCookies) *string {
		if v == nil {
			return nil
		}
		return v.Option
	}).(pulumi.StringPtrOutput)
}

type DistributionCacheBehaviorSettingsForwardedHeaders struct {
	// The specific headers to forward to your distribution's origin.
	HeadersAllowLists []string `pulumi:"headersAllowLists"`
	// The headers that you want your distribution to forward to your origin and base caching on.
	Option *string `pulumi:"option"`
}

// DistributionCacheBehaviorSettingsForwardedHeadersInput is an input type that accepts DistributionCacheBehaviorSettingsForwardedHeadersArgs and DistributionCacheBehaviorSettingsForwardedHeadersOutput values.
// You can construct a concrete instance of `DistributionCacheBehaviorSettingsForwardedHeadersInput` via:
//
//	DistributionCacheBehaviorSettingsForwardedHeadersArgs{...}
type DistributionCacheBehaviorSettingsForwardedHeadersInput interface {
	pulumi.Input

	ToDistributionCacheBehaviorSettingsForwardedHeadersOutput() DistributionCacheBehaviorSettingsForwardedHeadersOutput
	ToDistributionCacheBehaviorSettingsForwardedHeadersOutputWithContext(context.Context) DistributionCacheBehaviorSettingsForwardedHeadersOutput
}

type DistributionCacheBehaviorSettingsForwardedHeadersArgs struct {
	// The specific headers to forward to your distribution's origin.
	HeadersAllowLists pulumi.StringArrayInput `pulumi:"headersAllowLists"`
	// The headers that you want your distribution to forward to your origin and base caching on.
	Option pulumi.StringPtrInput `pulumi:"option"`
}

func (DistributionCacheBehaviorSettingsForwardedHeadersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCacheBehaviorSettingsForwardedHeaders)(nil)).Elem()
}

func (i DistributionCacheBehaviorSettingsForwardedHeadersArgs) ToDistributionCacheBehaviorSettingsForwardedHeadersOutput() DistributionCacheBehaviorSettingsForwardedHeadersOutput {
	return i.ToDistributionCacheBehaviorSettingsForwardedHeadersOutputWithContext(context.Background())
}

func (i DistributionCacheBehaviorSettingsForwardedHeadersArgs) ToDistributionCacheBehaviorSettingsForwardedHeadersOutputWithContext(ctx context.Context) DistributionCacheBehaviorSettingsForwardedHeadersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCacheBehaviorSettingsForwardedHeadersOutput)
}

func (i DistributionCacheBehaviorSettingsForwardedHeadersArgs) ToDistributionCacheBehaviorSettingsForwardedHeadersPtrOutput() DistributionCacheBehaviorSettingsForwardedHeadersPtrOutput {
	return i.ToDistributionCacheBehaviorSettingsForwardedHeadersPtrOutputWithContext(context.Background())
}

func (i DistributionCacheBehaviorSettingsForwardedHeadersArgs) ToDistributionCacheBehaviorSettingsForwardedHeadersPtrOutputWithContext(ctx context.Context) DistributionCacheBehaviorSettingsForwardedHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCacheBehaviorSettingsForwardedHeadersOutput).ToDistributionCacheBehaviorSettingsForwardedHeadersPtrOutputWithContext(ctx)
}

// DistributionCacheBehaviorSettingsForwardedHeadersPtrInput is an input type that accepts DistributionCacheBehaviorSettingsForwardedHeadersArgs, DistributionCacheBehaviorSettingsForwardedHeadersPtr and DistributionCacheBehaviorSettingsForwardedHeadersPtrOutput values.
// You can construct a concrete instance of `DistributionCacheBehaviorSettingsForwardedHeadersPtrInput` via:
//
//	        DistributionCacheBehaviorSettingsForwardedHeadersArgs{...}
//
//	or:
//
//	        nil
type DistributionCacheBehaviorSettingsForwardedHeadersPtrInput interface {
	pulumi.Input

	ToDistributionCacheBehaviorSettingsForwardedHeadersPtrOutput() DistributionCacheBehaviorSettingsForwardedHeadersPtrOutput
	ToDistributionCacheBehaviorSettingsForwardedHeadersPtrOutputWithContext(context.Context) DistributionCacheBehaviorSettingsForwardedHeadersPtrOutput
}

type distributionCacheBehaviorSettingsForwardedHeadersPtrType DistributionCacheBehaviorSettingsForwardedHeadersArgs

func DistributionCacheBehaviorSettingsForwardedHeadersPtr(v *DistributionCacheBehaviorSettingsForwardedHeadersArgs) DistributionCacheBehaviorSettingsForwardedHeadersPtrInput {
	return (*distributionCacheBehaviorSettingsForwardedHeadersPtrType)(v)
}

func (*distributionCacheBehaviorSettingsForwardedHeadersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionCacheBehaviorSettingsForwardedHeaders)(nil)).Elem()
}

func (i *distributionCacheBehaviorSettingsForwardedHeadersPtrType) ToDistributionCacheBehaviorSettingsForwardedHeadersPtrOutput() DistributionCacheBehaviorSettingsForwardedHeadersPtrOutput {
	return i.ToDistributionCacheBehaviorSettingsForwardedHeadersPtrOutputWithContext(context.Background())
}

func (i *distributionCacheBehaviorSettingsForwardedHeadersPtrType) ToDistributionCacheBehaviorSettingsForwardedHeadersPtrOutputWithContext(ctx context.Context) DistributionCacheBehaviorSettingsForwardedHeadersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCacheBehaviorSettingsForwardedHeadersPtrOutput)
}

type DistributionCacheBehaviorSettingsForwardedHeadersOutput struct{ *pulumi.OutputState }

func (DistributionCacheBehaviorSettingsForwardedHeadersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCacheBehaviorSettingsForwardedHeaders)(nil)).Elem()
}

func (o DistributionCacheBehaviorSettingsForwardedHeadersOutput) ToDistributionCacheBehaviorSettingsForwardedHeadersOutput() DistributionCacheBehaviorSettingsForwardedHeadersOutput {
	return o
}

func (o DistributionCacheBehaviorSettingsForwardedHeadersOutput) ToDistributionCacheBehaviorSettingsForwardedHeadersOutputWithContext(ctx context.Context) DistributionCacheBehaviorSettingsForwardedHeadersOutput {
	return o
}

func (o DistributionCacheBehaviorSettingsForwardedHeadersOutput) ToDistributionCacheBehaviorSettingsForwardedHeadersPtrOutput() DistributionCacheBehaviorSettingsForwardedHeadersPtrOutput {
	return o.ToDistributionCacheBehaviorSettingsForwardedHeadersPtrOutputWithContext(context.Background())
}

func (o DistributionCacheBehaviorSettingsForwardedHeadersOutput) ToDistributionCacheBehaviorSettingsForwardedHeadersPtrOutputWithContext(ctx context.Context) DistributionCacheBehaviorSettingsForwardedHeadersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionCacheBehaviorSettingsForwardedHeaders) *DistributionCacheBehaviorSettingsForwardedHeaders {
		return &v
	}).(DistributionCacheBehaviorSettingsForwardedHeadersPtrOutput)
}

// The specific headers to forward to your distribution's origin.
func (o DistributionCacheBehaviorSettingsForwardedHeadersOutput) HeadersAllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionCacheBehaviorSettingsForwardedHeaders) []string { return v.HeadersAllowLists }).(pulumi.StringArrayOutput)
}

// The headers that you want your distribution to forward to your origin and base caching on.
func (o DistributionCacheBehaviorSettingsForwardedHeadersOutput) Option() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionCacheBehaviorSettingsForwardedHeaders) *string { return v.Option }).(pulumi.StringPtrOutput)
}

type DistributionCacheBehaviorSettingsForwardedHeadersPtrOutput struct{ *pulumi.OutputState }

func (DistributionCacheBehaviorSettingsForwardedHeadersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionCacheBehaviorSettingsForwardedHeaders)(nil)).Elem()
}

func (o DistributionCacheBehaviorSettingsForwardedHeadersPtrOutput) ToDistributionCacheBehaviorSettingsForwardedHeadersPtrOutput() DistributionCacheBehaviorSettingsForwardedHeadersPtrOutput {
	return o
}

func (o DistributionCacheBehaviorSettingsForwardedHeadersPtrOutput) ToDistributionCacheBehaviorSettingsForwardedHeadersPtrOutputWithContext(ctx context.Context) DistributionCacheBehaviorSettingsForwardedHeadersPtrOutput {
	return o
}

func (o DistributionCacheBehaviorSettingsForwardedHeadersPtrOutput) Elem() DistributionCacheBehaviorSettingsForwardedHeadersOutput {
	return o.ApplyT(func(v *DistributionCacheBehaviorSettingsForwardedHeaders) DistributionCacheBehaviorSettingsForwardedHeaders {
		if v != nil {
			return *v
		}
		var ret DistributionCacheBehaviorSettingsForwardedHeaders
		return ret
	}).(DistributionCacheBehaviorSettingsForwardedHeadersOutput)
}

// The specific headers to forward to your distribution's origin.
func (o DistributionCacheBehaviorSettingsForwardedHeadersPtrOutput) HeadersAllowLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionCacheBehaviorSettingsForwardedHeaders) []string {
		if v == nil {
			return nil
		}
		return v.HeadersAllowLists
	}).(pulumi.StringArrayOutput)
}

// The headers that you want your distribution to forward to your origin and base caching on.
func (o DistributionCacheBehaviorSettingsForwardedHeadersPtrOutput) Option() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionCacheBehaviorSettingsForwardedHeaders) *string {
		if v == nil {
			return nil
		}
		return v.Option
	}).(pulumi.StringPtrOutput)
}

type DistributionCacheBehaviorSettingsForwardedQueryStrings struct {
	// Indicates whether the distribution forwards and caches based on query strings.
	Option *bool `pulumi:"option"`
	// The specific query strings that the distribution forwards to the origin.
	QueryStringsAllowedLists []string `pulumi:"queryStringsAllowedLists"`
}

// DistributionCacheBehaviorSettingsForwardedQueryStringsInput is an input type that accepts DistributionCacheBehaviorSettingsForwardedQueryStringsArgs and DistributionCacheBehaviorSettingsForwardedQueryStringsOutput values.
// You can construct a concrete instance of `DistributionCacheBehaviorSettingsForwardedQueryStringsInput` via:
//
//	DistributionCacheBehaviorSettingsForwardedQueryStringsArgs{...}
type DistributionCacheBehaviorSettingsForwardedQueryStringsInput interface {
	pulumi.Input

	ToDistributionCacheBehaviorSettingsForwardedQueryStringsOutput() DistributionCacheBehaviorSettingsForwardedQueryStringsOutput
	ToDistributionCacheBehaviorSettingsForwardedQueryStringsOutputWithContext(context.Context) DistributionCacheBehaviorSettingsForwardedQueryStringsOutput
}

type DistributionCacheBehaviorSettingsForwardedQueryStringsArgs struct {
	// Indicates whether the distribution forwards and caches based on query strings.
	Option pulumi.BoolPtrInput `pulumi:"option"`
	// The specific query strings that the distribution forwards to the origin.
	QueryStringsAllowedLists pulumi.StringArrayInput `pulumi:"queryStringsAllowedLists"`
}

func (DistributionCacheBehaviorSettingsForwardedQueryStringsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCacheBehaviorSettingsForwardedQueryStrings)(nil)).Elem()
}

func (i DistributionCacheBehaviorSettingsForwardedQueryStringsArgs) ToDistributionCacheBehaviorSettingsForwardedQueryStringsOutput() DistributionCacheBehaviorSettingsForwardedQueryStringsOutput {
	return i.ToDistributionCacheBehaviorSettingsForwardedQueryStringsOutputWithContext(context.Background())
}

func (i DistributionCacheBehaviorSettingsForwardedQueryStringsArgs) ToDistributionCacheBehaviorSettingsForwardedQueryStringsOutputWithContext(ctx context.Context) DistributionCacheBehaviorSettingsForwardedQueryStringsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCacheBehaviorSettingsForwardedQueryStringsOutput)
}

func (i DistributionCacheBehaviorSettingsForwardedQueryStringsArgs) ToDistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput() DistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput {
	return i.ToDistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutputWithContext(context.Background())
}

func (i DistributionCacheBehaviorSettingsForwardedQueryStringsArgs) ToDistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutputWithContext(ctx context.Context) DistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCacheBehaviorSettingsForwardedQueryStringsOutput).ToDistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutputWithContext(ctx)
}

// DistributionCacheBehaviorSettingsForwardedQueryStringsPtrInput is an input type that accepts DistributionCacheBehaviorSettingsForwardedQueryStringsArgs, DistributionCacheBehaviorSettingsForwardedQueryStringsPtr and DistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput values.
// You can construct a concrete instance of `DistributionCacheBehaviorSettingsForwardedQueryStringsPtrInput` via:
//
//	        DistributionCacheBehaviorSettingsForwardedQueryStringsArgs{...}
//
//	or:
//
//	        nil
type DistributionCacheBehaviorSettingsForwardedQueryStringsPtrInput interface {
	pulumi.Input

	ToDistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput() DistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput
	ToDistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutputWithContext(context.Context) DistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput
}

type distributionCacheBehaviorSettingsForwardedQueryStringsPtrType DistributionCacheBehaviorSettingsForwardedQueryStringsArgs

func DistributionCacheBehaviorSettingsForwardedQueryStringsPtr(v *DistributionCacheBehaviorSettingsForwardedQueryStringsArgs) DistributionCacheBehaviorSettingsForwardedQueryStringsPtrInput {
	return (*distributionCacheBehaviorSettingsForwardedQueryStringsPtrType)(v)
}

func (*distributionCacheBehaviorSettingsForwardedQueryStringsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionCacheBehaviorSettingsForwardedQueryStrings)(nil)).Elem()
}

func (i *distributionCacheBehaviorSettingsForwardedQueryStringsPtrType) ToDistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput() DistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput {
	return i.ToDistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutputWithContext(context.Background())
}

func (i *distributionCacheBehaviorSettingsForwardedQueryStringsPtrType) ToDistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutputWithContext(ctx context.Context) DistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput)
}

type DistributionCacheBehaviorSettingsForwardedQueryStringsOutput struct{ *pulumi.OutputState }

func (DistributionCacheBehaviorSettingsForwardedQueryStringsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionCacheBehaviorSettingsForwardedQueryStrings)(nil)).Elem()
}

func (o DistributionCacheBehaviorSettingsForwardedQueryStringsOutput) ToDistributionCacheBehaviorSettingsForwardedQueryStringsOutput() DistributionCacheBehaviorSettingsForwardedQueryStringsOutput {
	return o
}

func (o DistributionCacheBehaviorSettingsForwardedQueryStringsOutput) ToDistributionCacheBehaviorSettingsForwardedQueryStringsOutputWithContext(ctx context.Context) DistributionCacheBehaviorSettingsForwardedQueryStringsOutput {
	return o
}

func (o DistributionCacheBehaviorSettingsForwardedQueryStringsOutput) ToDistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput() DistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput {
	return o.ToDistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutputWithContext(context.Background())
}

func (o DistributionCacheBehaviorSettingsForwardedQueryStringsOutput) ToDistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutputWithContext(ctx context.Context) DistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionCacheBehaviorSettingsForwardedQueryStrings) *DistributionCacheBehaviorSettingsForwardedQueryStrings {
		return &v
	}).(DistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput)
}

// Indicates whether the distribution forwards and caches based on query strings.
func (o DistributionCacheBehaviorSettingsForwardedQueryStringsOutput) Option() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DistributionCacheBehaviorSettingsForwardedQueryStrings) *bool { return v.Option }).(pulumi.BoolPtrOutput)
}

// The specific query strings that the distribution forwards to the origin.
func (o DistributionCacheBehaviorSettingsForwardedQueryStringsOutput) QueryStringsAllowedLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DistributionCacheBehaviorSettingsForwardedQueryStrings) []string {
		return v.QueryStringsAllowedLists
	}).(pulumi.StringArrayOutput)
}

type DistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput struct{ *pulumi.OutputState }

func (DistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionCacheBehaviorSettingsForwardedQueryStrings)(nil)).Elem()
}

func (o DistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput) ToDistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput() DistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput {
	return o
}

func (o DistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput) ToDistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutputWithContext(ctx context.Context) DistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput {
	return o
}

func (o DistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput) Elem() DistributionCacheBehaviorSettingsForwardedQueryStringsOutput {
	return o.ApplyT(func(v *DistributionCacheBehaviorSettingsForwardedQueryStrings) DistributionCacheBehaviorSettingsForwardedQueryStrings {
		if v != nil {
			return *v
		}
		var ret DistributionCacheBehaviorSettingsForwardedQueryStrings
		return ret
	}).(DistributionCacheBehaviorSettingsForwardedQueryStringsOutput)
}

// Indicates whether the distribution forwards and caches based on query strings.
func (o DistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput) Option() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DistributionCacheBehaviorSettingsForwardedQueryStrings) *bool {
		if v == nil {
			return nil
		}
		return v.Option
	}).(pulumi.BoolPtrOutput)
}

// The specific query strings that the distribution forwards to the origin.
func (o DistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput) QueryStringsAllowedLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DistributionCacheBehaviorSettingsForwardedQueryStrings) []string {
		if v == nil {
			return nil
		}
		return v.QueryStringsAllowedLists
	}).(pulumi.StringArrayOutput)
}

type DistributionDefaultCacheBehavior struct {
	// The cache behavior of the distribution. Valid values: `cache` and `dont-cache`.
	Behavior string `pulumi:"behavior"`
}

// DistributionDefaultCacheBehaviorInput is an input type that accepts DistributionDefaultCacheBehaviorArgs and DistributionDefaultCacheBehaviorOutput values.
// You can construct a concrete instance of `DistributionDefaultCacheBehaviorInput` via:
//
//	DistributionDefaultCacheBehaviorArgs{...}
type DistributionDefaultCacheBehaviorInput interface {
	pulumi.Input

	ToDistributionDefaultCacheBehaviorOutput() DistributionDefaultCacheBehaviorOutput
	ToDistributionDefaultCacheBehaviorOutputWithContext(context.Context) DistributionDefaultCacheBehaviorOutput
}

type DistributionDefaultCacheBehaviorArgs struct {
	// The cache behavior of the distribution. Valid values: `cache` and `dont-cache`.
	Behavior pulumi.StringInput `pulumi:"behavior"`
}

func (DistributionDefaultCacheBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionDefaultCacheBehavior)(nil)).Elem()
}

func (i DistributionDefaultCacheBehaviorArgs) ToDistributionDefaultCacheBehaviorOutput() DistributionDefaultCacheBehaviorOutput {
	return i.ToDistributionDefaultCacheBehaviorOutputWithContext(context.Background())
}

func (i DistributionDefaultCacheBehaviorArgs) ToDistributionDefaultCacheBehaviorOutputWithContext(ctx context.Context) DistributionDefaultCacheBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionDefaultCacheBehaviorOutput)
}

func (i DistributionDefaultCacheBehaviorArgs) ToDistributionDefaultCacheBehaviorPtrOutput() DistributionDefaultCacheBehaviorPtrOutput {
	return i.ToDistributionDefaultCacheBehaviorPtrOutputWithContext(context.Background())
}

func (i DistributionDefaultCacheBehaviorArgs) ToDistributionDefaultCacheBehaviorPtrOutputWithContext(ctx context.Context) DistributionDefaultCacheBehaviorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionDefaultCacheBehaviorOutput).ToDistributionDefaultCacheBehaviorPtrOutputWithContext(ctx)
}

// DistributionDefaultCacheBehaviorPtrInput is an input type that accepts DistributionDefaultCacheBehaviorArgs, DistributionDefaultCacheBehaviorPtr and DistributionDefaultCacheBehaviorPtrOutput values.
// You can construct a concrete instance of `DistributionDefaultCacheBehaviorPtrInput` via:
//
//	        DistributionDefaultCacheBehaviorArgs{...}
//
//	or:
//
//	        nil
type DistributionDefaultCacheBehaviorPtrInput interface {
	pulumi.Input

	ToDistributionDefaultCacheBehaviorPtrOutput() DistributionDefaultCacheBehaviorPtrOutput
	ToDistributionDefaultCacheBehaviorPtrOutputWithContext(context.Context) DistributionDefaultCacheBehaviorPtrOutput
}

type distributionDefaultCacheBehaviorPtrType DistributionDefaultCacheBehaviorArgs

func DistributionDefaultCacheBehaviorPtr(v *DistributionDefaultCacheBehaviorArgs) DistributionDefaultCacheBehaviorPtrInput {
	return (*distributionDefaultCacheBehaviorPtrType)(v)
}

func (*distributionDefaultCacheBehaviorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionDefaultCacheBehavior)(nil)).Elem()
}

func (i *distributionDefaultCacheBehaviorPtrType) ToDistributionDefaultCacheBehaviorPtrOutput() DistributionDefaultCacheBehaviorPtrOutput {
	return i.ToDistributionDefaultCacheBehaviorPtrOutputWithContext(context.Background())
}

func (i *distributionDefaultCacheBehaviorPtrType) ToDistributionDefaultCacheBehaviorPtrOutputWithContext(ctx context.Context) DistributionDefaultCacheBehaviorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionDefaultCacheBehaviorPtrOutput)
}

type DistributionDefaultCacheBehaviorOutput struct{ *pulumi.OutputState }

func (DistributionDefaultCacheBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionDefaultCacheBehavior)(nil)).Elem()
}

func (o DistributionDefaultCacheBehaviorOutput) ToDistributionDefaultCacheBehaviorOutput() DistributionDefaultCacheBehaviorOutput {
	return o
}

func (o DistributionDefaultCacheBehaviorOutput) ToDistributionDefaultCacheBehaviorOutputWithContext(ctx context.Context) DistributionDefaultCacheBehaviorOutput {
	return o
}

func (o DistributionDefaultCacheBehaviorOutput) ToDistributionDefaultCacheBehaviorPtrOutput() DistributionDefaultCacheBehaviorPtrOutput {
	return o.ToDistributionDefaultCacheBehaviorPtrOutputWithContext(context.Background())
}

func (o DistributionDefaultCacheBehaviorOutput) ToDistributionDefaultCacheBehaviorPtrOutputWithContext(ctx context.Context) DistributionDefaultCacheBehaviorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionDefaultCacheBehavior) *DistributionDefaultCacheBehavior {
		return &v
	}).(DistributionDefaultCacheBehaviorPtrOutput)
}

// The cache behavior of the distribution. Valid values: `cache` and `dont-cache`.
func (o DistributionDefaultCacheBehaviorOutput) Behavior() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionDefaultCacheBehavior) string { return v.Behavior }).(pulumi.StringOutput)
}

type DistributionDefaultCacheBehaviorPtrOutput struct{ *pulumi.OutputState }

func (DistributionDefaultCacheBehaviorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionDefaultCacheBehavior)(nil)).Elem()
}

func (o DistributionDefaultCacheBehaviorPtrOutput) ToDistributionDefaultCacheBehaviorPtrOutput() DistributionDefaultCacheBehaviorPtrOutput {
	return o
}

func (o DistributionDefaultCacheBehaviorPtrOutput) ToDistributionDefaultCacheBehaviorPtrOutputWithContext(ctx context.Context) DistributionDefaultCacheBehaviorPtrOutput {
	return o
}

func (o DistributionDefaultCacheBehaviorPtrOutput) Elem() DistributionDefaultCacheBehaviorOutput {
	return o.ApplyT(func(v *DistributionDefaultCacheBehavior) DistributionDefaultCacheBehavior {
		if v != nil {
			return *v
		}
		var ret DistributionDefaultCacheBehavior
		return ret
	}).(DistributionDefaultCacheBehaviorOutput)
}

// The cache behavior of the distribution. Valid values: `cache` and `dont-cache`.
func (o DistributionDefaultCacheBehaviorPtrOutput) Behavior() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionDefaultCacheBehavior) *string {
		if v == nil {
			return nil
		}
		return &v.Behavior
	}).(pulumi.StringPtrOutput)
}

type DistributionLocation struct {
	// The Availability Zone. Follows the format us-east-2a (case-sensitive).
	AvailabilityZone string `pulumi:"availabilityZone"`
	// The AWS Region name of the origin resource.
	RegionName string `pulumi:"regionName"`
}

// DistributionLocationInput is an input type that accepts DistributionLocationArgs and DistributionLocationOutput values.
// You can construct a concrete instance of `DistributionLocationInput` via:
//
//	DistributionLocationArgs{...}
type DistributionLocationInput interface {
	pulumi.Input

	ToDistributionLocationOutput() DistributionLocationOutput
	ToDistributionLocationOutputWithContext(context.Context) DistributionLocationOutput
}

type DistributionLocationArgs struct {
	// The Availability Zone. Follows the format us-east-2a (case-sensitive).
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	// The AWS Region name of the origin resource.
	RegionName pulumi.StringInput `pulumi:"regionName"`
}

func (DistributionLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionLocation)(nil)).Elem()
}

func (i DistributionLocationArgs) ToDistributionLocationOutput() DistributionLocationOutput {
	return i.ToDistributionLocationOutputWithContext(context.Background())
}

func (i DistributionLocationArgs) ToDistributionLocationOutputWithContext(ctx context.Context) DistributionLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionLocationOutput)
}

// DistributionLocationArrayInput is an input type that accepts DistributionLocationArray and DistributionLocationArrayOutput values.
// You can construct a concrete instance of `DistributionLocationArrayInput` via:
//
//	DistributionLocationArray{ DistributionLocationArgs{...} }
type DistributionLocationArrayInput interface {
	pulumi.Input

	ToDistributionLocationArrayOutput() DistributionLocationArrayOutput
	ToDistributionLocationArrayOutputWithContext(context.Context) DistributionLocationArrayOutput
}

type DistributionLocationArray []DistributionLocationInput

func (DistributionLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionLocation)(nil)).Elem()
}

func (i DistributionLocationArray) ToDistributionLocationArrayOutput() DistributionLocationArrayOutput {
	return i.ToDistributionLocationArrayOutputWithContext(context.Background())
}

func (i DistributionLocationArray) ToDistributionLocationArrayOutputWithContext(ctx context.Context) DistributionLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionLocationArrayOutput)
}

type DistributionLocationOutput struct{ *pulumi.OutputState }

func (DistributionLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionLocation)(nil)).Elem()
}

func (o DistributionLocationOutput) ToDistributionLocationOutput() DistributionLocationOutput {
	return o
}

func (o DistributionLocationOutput) ToDistributionLocationOutputWithContext(ctx context.Context) DistributionLocationOutput {
	return o
}

// The Availability Zone. Follows the format us-east-2a (case-sensitive).
func (o DistributionLocationOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionLocation) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// The AWS Region name of the origin resource.
func (o DistributionLocationOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionLocation) string { return v.RegionName }).(pulumi.StringOutput)
}

type DistributionLocationArrayOutput struct{ *pulumi.OutputState }

func (DistributionLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DistributionLocation)(nil)).Elem()
}

func (o DistributionLocationArrayOutput) ToDistributionLocationArrayOutput() DistributionLocationArrayOutput {
	return o
}

func (o DistributionLocationArrayOutput) ToDistributionLocationArrayOutputWithContext(ctx context.Context) DistributionLocationArrayOutput {
	return o
}

func (o DistributionLocationArrayOutput) Index(i pulumi.IntInput) DistributionLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DistributionLocation {
		return vs[0].([]DistributionLocation)[vs[1].(int)]
	}).(DistributionLocationOutput)
}

type DistributionOrigin struct {
	// The name of the origin resource. Your origin can be an instance with an attached static IP, a bucket, or a load balancer that has at least one instance attached to it.
	Name string `pulumi:"name"`
	// The protocol that your Amazon Lightsail distribution uses when establishing a connection with your origin to pull content.
	ProtocolPolicy *string `pulumi:"protocolPolicy"`
	// The AWS Region name of the origin resource.
	RegionName string `pulumi:"regionName"`
	// The resource type of the origin resource (e.g., Instance).
	ResourceType *string `pulumi:"resourceType"`
}

// DistributionOriginInput is an input type that accepts DistributionOriginArgs and DistributionOriginOutput values.
// You can construct a concrete instance of `DistributionOriginInput` via:
//
//	DistributionOriginArgs{...}
type DistributionOriginInput interface {
	pulumi.Input

	ToDistributionOriginOutput() DistributionOriginOutput
	ToDistributionOriginOutputWithContext(context.Context) DistributionOriginOutput
}

type DistributionOriginArgs struct {
	// The name of the origin resource. Your origin can be an instance with an attached static IP, a bucket, or a load balancer that has at least one instance attached to it.
	Name pulumi.StringInput `pulumi:"name"`
	// The protocol that your Amazon Lightsail distribution uses when establishing a connection with your origin to pull content.
	ProtocolPolicy pulumi.StringPtrInput `pulumi:"protocolPolicy"`
	// The AWS Region name of the origin resource.
	RegionName pulumi.StringInput `pulumi:"regionName"`
	// The resource type of the origin resource (e.g., Instance).
	ResourceType pulumi.StringPtrInput `pulumi:"resourceType"`
}

func (DistributionOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOrigin)(nil)).Elem()
}

func (i DistributionOriginArgs) ToDistributionOriginOutput() DistributionOriginOutput {
	return i.ToDistributionOriginOutputWithContext(context.Background())
}

func (i DistributionOriginArgs) ToDistributionOriginOutputWithContext(ctx context.Context) DistributionOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginOutput)
}

func (i DistributionOriginArgs) ToDistributionOriginPtrOutput() DistributionOriginPtrOutput {
	return i.ToDistributionOriginPtrOutputWithContext(context.Background())
}

func (i DistributionOriginArgs) ToDistributionOriginPtrOutputWithContext(ctx context.Context) DistributionOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginOutput).ToDistributionOriginPtrOutputWithContext(ctx)
}

// DistributionOriginPtrInput is an input type that accepts DistributionOriginArgs, DistributionOriginPtr and DistributionOriginPtrOutput values.
// You can construct a concrete instance of `DistributionOriginPtrInput` via:
//
//	        DistributionOriginArgs{...}
//
//	or:
//
//	        nil
type DistributionOriginPtrInput interface {
	pulumi.Input

	ToDistributionOriginPtrOutput() DistributionOriginPtrOutput
	ToDistributionOriginPtrOutputWithContext(context.Context) DistributionOriginPtrOutput
}

type distributionOriginPtrType DistributionOriginArgs

func DistributionOriginPtr(v *DistributionOriginArgs) DistributionOriginPtrInput {
	return (*distributionOriginPtrType)(v)
}

func (*distributionOriginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionOrigin)(nil)).Elem()
}

func (i *distributionOriginPtrType) ToDistributionOriginPtrOutput() DistributionOriginPtrOutput {
	return i.ToDistributionOriginPtrOutputWithContext(context.Background())
}

func (i *distributionOriginPtrType) ToDistributionOriginPtrOutputWithContext(ctx context.Context) DistributionOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DistributionOriginPtrOutput)
}

type DistributionOriginOutput struct{ *pulumi.OutputState }

func (DistributionOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DistributionOrigin)(nil)).Elem()
}

func (o DistributionOriginOutput) ToDistributionOriginOutput() DistributionOriginOutput {
	return o
}

func (o DistributionOriginOutput) ToDistributionOriginOutputWithContext(ctx context.Context) DistributionOriginOutput {
	return o
}

func (o DistributionOriginOutput) ToDistributionOriginPtrOutput() DistributionOriginPtrOutput {
	return o.ToDistributionOriginPtrOutputWithContext(context.Background())
}

func (o DistributionOriginOutput) ToDistributionOriginPtrOutputWithContext(ctx context.Context) DistributionOriginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DistributionOrigin) *DistributionOrigin {
		return &v
	}).(DistributionOriginPtrOutput)
}

// The name of the origin resource. Your origin can be an instance with an attached static IP, a bucket, or a load balancer that has at least one instance attached to it.
func (o DistributionOriginOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionOrigin) string { return v.Name }).(pulumi.StringOutput)
}

// The protocol that your Amazon Lightsail distribution uses when establishing a connection with your origin to pull content.
func (o DistributionOriginOutput) ProtocolPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionOrigin) *string { return v.ProtocolPolicy }).(pulumi.StringPtrOutput)
}

// The AWS Region name of the origin resource.
func (o DistributionOriginOutput) RegionName() pulumi.StringOutput {
	return o.ApplyT(func(v DistributionOrigin) string { return v.RegionName }).(pulumi.StringOutput)
}

// The resource type of the origin resource (e.g., Instance).
func (o DistributionOriginOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DistributionOrigin) *string { return v.ResourceType }).(pulumi.StringPtrOutput)
}

type DistributionOriginPtrOutput struct{ *pulumi.OutputState }

func (DistributionOriginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DistributionOrigin)(nil)).Elem()
}

func (o DistributionOriginPtrOutput) ToDistributionOriginPtrOutput() DistributionOriginPtrOutput {
	return o
}

func (o DistributionOriginPtrOutput) ToDistributionOriginPtrOutputWithContext(ctx context.Context) DistributionOriginPtrOutput {
	return o
}

func (o DistributionOriginPtrOutput) Elem() DistributionOriginOutput {
	return o.ApplyT(func(v *DistributionOrigin) DistributionOrigin {
		if v != nil {
			return *v
		}
		var ret DistributionOrigin
		return ret
	}).(DistributionOriginOutput)
}

// The name of the origin resource. Your origin can be an instance with an attached static IP, a bucket, or a load balancer that has at least one instance attached to it.
func (o DistributionOriginPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionOrigin) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The protocol that your Amazon Lightsail distribution uses when establishing a connection with your origin to pull content.
func (o DistributionOriginPtrOutput) ProtocolPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionOrigin) *string {
		if v == nil {
			return nil
		}
		return v.ProtocolPolicy
	}).(pulumi.StringPtrOutput)
}

// The AWS Region name of the origin resource.
func (o DistributionOriginPtrOutput) RegionName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionOrigin) *string {
		if v == nil {
			return nil
		}
		return &v.RegionName
	}).(pulumi.StringPtrOutput)
}

// The resource type of the origin resource (e.g., Instance).
func (o DistributionOriginPtrOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DistributionOrigin) *string {
		if v == nil {
			return nil
		}
		return v.ResourceType
	}).(pulumi.StringPtrOutput)
}

type InstanceAddOn struct {
	// The daily time when an automatic snapshot will be created. Must be in HH:00 format, and in an hourly increment and specified in Coordinated Universal Time (UTC). The snapshot will be automatically created between the time specified and up to 45 minutes after.
	SnapshotTime string `pulumi:"snapshotTime"`
	// The status of the add on. Valid Values: `Enabled`, `Disabled`.
	Status string `pulumi:"status"`
	// The add-on type. There is currently only one valid type `AutoSnapshot`.
	Type string `pulumi:"type"`
}

// InstanceAddOnInput is an input type that accepts InstanceAddOnArgs and InstanceAddOnOutput values.
// You can construct a concrete instance of `InstanceAddOnInput` via:
//
//	InstanceAddOnArgs{...}
type InstanceAddOnInput interface {
	pulumi.Input

	ToInstanceAddOnOutput() InstanceAddOnOutput
	ToInstanceAddOnOutputWithContext(context.Context) InstanceAddOnOutput
}

type InstanceAddOnArgs struct {
	// The daily time when an automatic snapshot will be created. Must be in HH:00 format, and in an hourly increment and specified in Coordinated Universal Time (UTC). The snapshot will be automatically created between the time specified and up to 45 minutes after.
	SnapshotTime pulumi.StringInput `pulumi:"snapshotTime"`
	// The status of the add on. Valid Values: `Enabled`, `Disabled`.
	Status pulumi.StringInput `pulumi:"status"`
	// The add-on type. There is currently only one valid type `AutoSnapshot`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (InstanceAddOnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAddOn)(nil)).Elem()
}

func (i InstanceAddOnArgs) ToInstanceAddOnOutput() InstanceAddOnOutput {
	return i.ToInstanceAddOnOutputWithContext(context.Background())
}

func (i InstanceAddOnArgs) ToInstanceAddOnOutputWithContext(ctx context.Context) InstanceAddOnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAddOnOutput)
}

func (i InstanceAddOnArgs) ToInstanceAddOnPtrOutput() InstanceAddOnPtrOutput {
	return i.ToInstanceAddOnPtrOutputWithContext(context.Background())
}

func (i InstanceAddOnArgs) ToInstanceAddOnPtrOutputWithContext(ctx context.Context) InstanceAddOnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAddOnOutput).ToInstanceAddOnPtrOutputWithContext(ctx)
}

// InstanceAddOnPtrInput is an input type that accepts InstanceAddOnArgs, InstanceAddOnPtr and InstanceAddOnPtrOutput values.
// You can construct a concrete instance of `InstanceAddOnPtrInput` via:
//
//	        InstanceAddOnArgs{...}
//
//	or:
//
//	        nil
type InstanceAddOnPtrInput interface {
	pulumi.Input

	ToInstanceAddOnPtrOutput() InstanceAddOnPtrOutput
	ToInstanceAddOnPtrOutputWithContext(context.Context) InstanceAddOnPtrOutput
}

type instanceAddOnPtrType InstanceAddOnArgs

func InstanceAddOnPtr(v *InstanceAddOnArgs) InstanceAddOnPtrInput {
	return (*instanceAddOnPtrType)(v)
}

func (*instanceAddOnPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceAddOn)(nil)).Elem()
}

func (i *instanceAddOnPtrType) ToInstanceAddOnPtrOutput() InstanceAddOnPtrOutput {
	return i.ToInstanceAddOnPtrOutputWithContext(context.Background())
}

func (i *instanceAddOnPtrType) ToInstanceAddOnPtrOutputWithContext(ctx context.Context) InstanceAddOnPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceAddOnPtrOutput)
}

type InstanceAddOnOutput struct{ *pulumi.OutputState }

func (InstanceAddOnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceAddOn)(nil)).Elem()
}

func (o InstanceAddOnOutput) ToInstanceAddOnOutput() InstanceAddOnOutput {
	return o
}

func (o InstanceAddOnOutput) ToInstanceAddOnOutputWithContext(ctx context.Context) InstanceAddOnOutput {
	return o
}

func (o InstanceAddOnOutput) ToInstanceAddOnPtrOutput() InstanceAddOnPtrOutput {
	return o.ToInstanceAddOnPtrOutputWithContext(context.Background())
}

func (o InstanceAddOnOutput) ToInstanceAddOnPtrOutputWithContext(ctx context.Context) InstanceAddOnPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceAddOn) *InstanceAddOn {
		return &v
	}).(InstanceAddOnPtrOutput)
}

// The daily time when an automatic snapshot will be created. Must be in HH:00 format, and in an hourly increment and specified in Coordinated Universal Time (UTC). The snapshot will be automatically created between the time specified and up to 45 minutes after.
func (o InstanceAddOnOutput) SnapshotTime() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceAddOn) string { return v.SnapshotTime }).(pulumi.StringOutput)
}

// The status of the add on. Valid Values: `Enabled`, `Disabled`.
func (o InstanceAddOnOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceAddOn) string { return v.Status }).(pulumi.StringOutput)
}

// The add-on type. There is currently only one valid type `AutoSnapshot`.
func (o InstanceAddOnOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceAddOn) string { return v.Type }).(pulumi.StringOutput)
}

type InstanceAddOnPtrOutput struct{ *pulumi.OutputState }

func (InstanceAddOnPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceAddOn)(nil)).Elem()
}

func (o InstanceAddOnPtrOutput) ToInstanceAddOnPtrOutput() InstanceAddOnPtrOutput {
	return o
}

func (o InstanceAddOnPtrOutput) ToInstanceAddOnPtrOutputWithContext(ctx context.Context) InstanceAddOnPtrOutput {
	return o
}

func (o InstanceAddOnPtrOutput) Elem() InstanceAddOnOutput {
	return o.ApplyT(func(v *InstanceAddOn) InstanceAddOn {
		if v != nil {
			return *v
		}
		var ret InstanceAddOn
		return ret
	}).(InstanceAddOnOutput)
}

// The daily time when an automatic snapshot will be created. Must be in HH:00 format, and in an hourly increment and specified in Coordinated Universal Time (UTC). The snapshot will be automatically created between the time specified and up to 45 minutes after.
func (o InstanceAddOnPtrOutput) SnapshotTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceAddOn) *string {
		if v == nil {
			return nil
		}
		return &v.SnapshotTime
	}).(pulumi.StringPtrOutput)
}

// The status of the add on. Valid Values: `Enabled`, `Disabled`.
func (o InstanceAddOnPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceAddOn) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// The add-on type. There is currently only one valid type `AutoSnapshot`.
func (o InstanceAddOnPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceAddOn) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type InstancePublicPortsPortInfo struct {
	// Set of CIDR aliases that define access for a preconfigured range of IP addresses.
	CidrListAliases []string `pulumi:"cidrListAliases"`
	// Set of CIDR blocks.
	Cidrs []string `pulumi:"cidrs"`
	// First port in a range of open ports on an instance.
	FromPort  int      `pulumi:"fromPort"`
	Ipv6Cidrs []string `pulumi:"ipv6Cidrs"`
	// IP protocol name. Valid values are `tcp`, `all`, `udp`, and `icmp`.
	Protocol string `pulumi:"protocol"`
	// Last port in a range of open ports on an instance.
	//
	// The following arguments are optional:
	ToPort int `pulumi:"toPort"`
}

// InstancePublicPortsPortInfoInput is an input type that accepts InstancePublicPortsPortInfoArgs and InstancePublicPortsPortInfoOutput values.
// You can construct a concrete instance of `InstancePublicPortsPortInfoInput` via:
//
//	InstancePublicPortsPortInfoArgs{...}
type InstancePublicPortsPortInfoInput interface {
	pulumi.Input

	ToInstancePublicPortsPortInfoOutput() InstancePublicPortsPortInfoOutput
	ToInstancePublicPortsPortInfoOutputWithContext(context.Context) InstancePublicPortsPortInfoOutput
}

type InstancePublicPortsPortInfoArgs struct {
	// Set of CIDR aliases that define access for a preconfigured range of IP addresses.
	CidrListAliases pulumi.StringArrayInput `pulumi:"cidrListAliases"`
	// Set of CIDR blocks.
	Cidrs pulumi.StringArrayInput `pulumi:"cidrs"`
	// First port in a range of open ports on an instance.
	FromPort  pulumi.IntInput         `pulumi:"fromPort"`
	Ipv6Cidrs pulumi.StringArrayInput `pulumi:"ipv6Cidrs"`
	// IP protocol name. Valid values are `tcp`, `all`, `udp`, and `icmp`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Last port in a range of open ports on an instance.
	//
	// The following arguments are optional:
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (InstancePublicPortsPortInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePublicPortsPortInfo)(nil)).Elem()
}

func (i InstancePublicPortsPortInfoArgs) ToInstancePublicPortsPortInfoOutput() InstancePublicPortsPortInfoOutput {
	return i.ToInstancePublicPortsPortInfoOutputWithContext(context.Background())
}

func (i InstancePublicPortsPortInfoArgs) ToInstancePublicPortsPortInfoOutputWithContext(ctx context.Context) InstancePublicPortsPortInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePublicPortsPortInfoOutput)
}

// InstancePublicPortsPortInfoArrayInput is an input type that accepts InstancePublicPortsPortInfoArray and InstancePublicPortsPortInfoArrayOutput values.
// You can construct a concrete instance of `InstancePublicPortsPortInfoArrayInput` via:
//
//	InstancePublicPortsPortInfoArray{ InstancePublicPortsPortInfoArgs{...} }
type InstancePublicPortsPortInfoArrayInput interface {
	pulumi.Input

	ToInstancePublicPortsPortInfoArrayOutput() InstancePublicPortsPortInfoArrayOutput
	ToInstancePublicPortsPortInfoArrayOutputWithContext(context.Context) InstancePublicPortsPortInfoArrayOutput
}

type InstancePublicPortsPortInfoArray []InstancePublicPortsPortInfoInput

func (InstancePublicPortsPortInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancePublicPortsPortInfo)(nil)).Elem()
}

func (i InstancePublicPortsPortInfoArray) ToInstancePublicPortsPortInfoArrayOutput() InstancePublicPortsPortInfoArrayOutput {
	return i.ToInstancePublicPortsPortInfoArrayOutputWithContext(context.Background())
}

func (i InstancePublicPortsPortInfoArray) ToInstancePublicPortsPortInfoArrayOutputWithContext(ctx context.Context) InstancePublicPortsPortInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePublicPortsPortInfoArrayOutput)
}

type InstancePublicPortsPortInfoOutput struct{ *pulumi.OutputState }

func (InstancePublicPortsPortInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePublicPortsPortInfo)(nil)).Elem()
}

func (o InstancePublicPortsPortInfoOutput) ToInstancePublicPortsPortInfoOutput() InstancePublicPortsPortInfoOutput {
	return o
}

func (o InstancePublicPortsPortInfoOutput) ToInstancePublicPortsPortInfoOutputWithContext(ctx context.Context) InstancePublicPortsPortInfoOutput {
	return o
}

// Set of CIDR aliases that define access for a preconfigured range of IP addresses.
func (o InstancePublicPortsPortInfoOutput) CidrListAliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstancePublicPortsPortInfo) []string { return v.CidrListAliases }).(pulumi.StringArrayOutput)
}

// Set of CIDR blocks.
func (o InstancePublicPortsPortInfoOutput) Cidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstancePublicPortsPortInfo) []string { return v.Cidrs }).(pulumi.StringArrayOutput)
}

// First port in a range of open ports on an instance.
func (o InstancePublicPortsPortInfoOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v InstancePublicPortsPortInfo) int { return v.FromPort }).(pulumi.IntOutput)
}

func (o InstancePublicPortsPortInfoOutput) Ipv6Cidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstancePublicPortsPortInfo) []string { return v.Ipv6Cidrs }).(pulumi.StringArrayOutput)
}

// IP protocol name. Valid values are `tcp`, `all`, `udp`, and `icmp`.
func (o InstancePublicPortsPortInfoOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v InstancePublicPortsPortInfo) string { return v.Protocol }).(pulumi.StringOutput)
}

// Last port in a range of open ports on an instance.
//
// The following arguments are optional:
func (o InstancePublicPortsPortInfoOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v InstancePublicPortsPortInfo) int { return v.ToPort }).(pulumi.IntOutput)
}

type InstancePublicPortsPortInfoArrayOutput struct{ *pulumi.OutputState }

func (InstancePublicPortsPortInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancePublicPortsPortInfo)(nil)).Elem()
}

func (o InstancePublicPortsPortInfoArrayOutput) ToInstancePublicPortsPortInfoArrayOutput() InstancePublicPortsPortInfoArrayOutput {
	return o
}

func (o InstancePublicPortsPortInfoArrayOutput) ToInstancePublicPortsPortInfoArrayOutputWithContext(ctx context.Context) InstancePublicPortsPortInfoArrayOutput {
	return o
}

func (o InstancePublicPortsPortInfoArrayOutput) Index(i pulumi.IntInput) InstancePublicPortsPortInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancePublicPortsPortInfo {
		return vs[0].([]InstancePublicPortsPortInfo)[vs[1].(int)]
	}).(InstancePublicPortsPortInfoOutput)
}

type LbCertificateDomainValidationRecord struct {
	// The domain name (e.g., example.com) for your SSL/TLS certificate.
	DomainName          *string `pulumi:"domainName"`
	ResourceRecordName  *string `pulumi:"resourceRecordName"`
	ResourceRecordType  *string `pulumi:"resourceRecordType"`
	ResourceRecordValue *string `pulumi:"resourceRecordValue"`
}

// LbCertificateDomainValidationRecordInput is an input type that accepts LbCertificateDomainValidationRecordArgs and LbCertificateDomainValidationRecordOutput values.
// You can construct a concrete instance of `LbCertificateDomainValidationRecordInput` via:
//
//	LbCertificateDomainValidationRecordArgs{...}
type LbCertificateDomainValidationRecordInput interface {
	pulumi.Input

	ToLbCertificateDomainValidationRecordOutput() LbCertificateDomainValidationRecordOutput
	ToLbCertificateDomainValidationRecordOutputWithContext(context.Context) LbCertificateDomainValidationRecordOutput
}

type LbCertificateDomainValidationRecordArgs struct {
	// The domain name (e.g., example.com) for your SSL/TLS certificate.
	DomainName          pulumi.StringPtrInput `pulumi:"domainName"`
	ResourceRecordName  pulumi.StringPtrInput `pulumi:"resourceRecordName"`
	ResourceRecordType  pulumi.StringPtrInput `pulumi:"resourceRecordType"`
	ResourceRecordValue pulumi.StringPtrInput `pulumi:"resourceRecordValue"`
}

func (LbCertificateDomainValidationRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LbCertificateDomainValidationRecord)(nil)).Elem()
}

func (i LbCertificateDomainValidationRecordArgs) ToLbCertificateDomainValidationRecordOutput() LbCertificateDomainValidationRecordOutput {
	return i.ToLbCertificateDomainValidationRecordOutputWithContext(context.Background())
}

func (i LbCertificateDomainValidationRecordArgs) ToLbCertificateDomainValidationRecordOutputWithContext(ctx context.Context) LbCertificateDomainValidationRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbCertificateDomainValidationRecordOutput)
}

// LbCertificateDomainValidationRecordArrayInput is an input type that accepts LbCertificateDomainValidationRecordArray and LbCertificateDomainValidationRecordArrayOutput values.
// You can construct a concrete instance of `LbCertificateDomainValidationRecordArrayInput` via:
//
//	LbCertificateDomainValidationRecordArray{ LbCertificateDomainValidationRecordArgs{...} }
type LbCertificateDomainValidationRecordArrayInput interface {
	pulumi.Input

	ToLbCertificateDomainValidationRecordArrayOutput() LbCertificateDomainValidationRecordArrayOutput
	ToLbCertificateDomainValidationRecordArrayOutputWithContext(context.Context) LbCertificateDomainValidationRecordArrayOutput
}

type LbCertificateDomainValidationRecordArray []LbCertificateDomainValidationRecordInput

func (LbCertificateDomainValidationRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LbCertificateDomainValidationRecord)(nil)).Elem()
}

func (i LbCertificateDomainValidationRecordArray) ToLbCertificateDomainValidationRecordArrayOutput() LbCertificateDomainValidationRecordArrayOutput {
	return i.ToLbCertificateDomainValidationRecordArrayOutputWithContext(context.Background())
}

func (i LbCertificateDomainValidationRecordArray) ToLbCertificateDomainValidationRecordArrayOutputWithContext(ctx context.Context) LbCertificateDomainValidationRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LbCertificateDomainValidationRecordArrayOutput)
}

type LbCertificateDomainValidationRecordOutput struct{ *pulumi.OutputState }

func (LbCertificateDomainValidationRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LbCertificateDomainValidationRecord)(nil)).Elem()
}

func (o LbCertificateDomainValidationRecordOutput) ToLbCertificateDomainValidationRecordOutput() LbCertificateDomainValidationRecordOutput {
	return o
}

func (o LbCertificateDomainValidationRecordOutput) ToLbCertificateDomainValidationRecordOutputWithContext(ctx context.Context) LbCertificateDomainValidationRecordOutput {
	return o
}

// The domain name (e.g., example.com) for your SSL/TLS certificate.
func (o LbCertificateDomainValidationRecordOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LbCertificateDomainValidationRecord) *string { return v.DomainName }).(pulumi.StringPtrOutput)
}

func (o LbCertificateDomainValidationRecordOutput) ResourceRecordName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LbCertificateDomainValidationRecord) *string { return v.ResourceRecordName }).(pulumi.StringPtrOutput)
}

func (o LbCertificateDomainValidationRecordOutput) ResourceRecordType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LbCertificateDomainValidationRecord) *string { return v.ResourceRecordType }).(pulumi.StringPtrOutput)
}

func (o LbCertificateDomainValidationRecordOutput) ResourceRecordValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LbCertificateDomainValidationRecord) *string { return v.ResourceRecordValue }).(pulumi.StringPtrOutput)
}

type LbCertificateDomainValidationRecordArrayOutput struct{ *pulumi.OutputState }

func (LbCertificateDomainValidationRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LbCertificateDomainValidationRecord)(nil)).Elem()
}

func (o LbCertificateDomainValidationRecordArrayOutput) ToLbCertificateDomainValidationRecordArrayOutput() LbCertificateDomainValidationRecordArrayOutput {
	return o
}

func (o LbCertificateDomainValidationRecordArrayOutput) ToLbCertificateDomainValidationRecordArrayOutputWithContext(ctx context.Context) LbCertificateDomainValidationRecordArrayOutput {
	return o
}

func (o LbCertificateDomainValidationRecordArrayOutput) Index(i pulumi.IntInput) LbCertificateDomainValidationRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LbCertificateDomainValidationRecord {
		return vs[0].([]LbCertificateDomainValidationRecord)[vs[1].(int)]
	}).(LbCertificateDomainValidationRecordOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateDomainValidationOptionInput)(nil)).Elem(), CertificateDomainValidationOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CertificateDomainValidationOptionArrayInput)(nil)).Elem(), CertificateDomainValidationOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerServiceDeploymentVersionContainerInput)(nil)).Elem(), ContainerServiceDeploymentVersionContainerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerServiceDeploymentVersionContainerArrayInput)(nil)).Elem(), ContainerServiceDeploymentVersionContainerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerServiceDeploymentVersionPublicEndpointInput)(nil)).Elem(), ContainerServiceDeploymentVersionPublicEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerServiceDeploymentVersionPublicEndpointPtrInput)(nil)).Elem(), ContainerServiceDeploymentVersionPublicEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerServiceDeploymentVersionPublicEndpointHealthCheckInput)(nil)).Elem(), ContainerServiceDeploymentVersionPublicEndpointHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrInput)(nil)).Elem(), ContainerServiceDeploymentVersionPublicEndpointHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerServicePrivateRegistryAccessInput)(nil)).Elem(), ContainerServicePrivateRegistryAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerServicePrivateRegistryAccessPtrInput)(nil)).Elem(), ContainerServicePrivateRegistryAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerServicePrivateRegistryAccessEcrImagePullerRoleInput)(nil)).Elem(), ContainerServicePrivateRegistryAccessEcrImagePullerRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrInput)(nil)).Elem(), ContainerServicePrivateRegistryAccessEcrImagePullerRoleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerServicePublicDomainNamesInput)(nil)).Elem(), ContainerServicePublicDomainNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerServicePublicDomainNamesPtrInput)(nil)).Elem(), ContainerServicePublicDomainNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerServicePublicDomainNamesCertificateInput)(nil)).Elem(), ContainerServicePublicDomainNamesCertificateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerServicePublicDomainNamesCertificateArrayInput)(nil)).Elem(), ContainerServicePublicDomainNamesCertificateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionCacheBehaviorInput)(nil)).Elem(), DistributionCacheBehaviorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionCacheBehaviorArrayInput)(nil)).Elem(), DistributionCacheBehaviorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionCacheBehaviorSettingsInput)(nil)).Elem(), DistributionCacheBehaviorSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionCacheBehaviorSettingsPtrInput)(nil)).Elem(), DistributionCacheBehaviorSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionCacheBehaviorSettingsForwardedCookiesInput)(nil)).Elem(), DistributionCacheBehaviorSettingsForwardedCookiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionCacheBehaviorSettingsForwardedCookiesPtrInput)(nil)).Elem(), DistributionCacheBehaviorSettingsForwardedCookiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionCacheBehaviorSettingsForwardedHeadersInput)(nil)).Elem(), DistributionCacheBehaviorSettingsForwardedHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionCacheBehaviorSettingsForwardedHeadersPtrInput)(nil)).Elem(), DistributionCacheBehaviorSettingsForwardedHeadersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionCacheBehaviorSettingsForwardedQueryStringsInput)(nil)).Elem(), DistributionCacheBehaviorSettingsForwardedQueryStringsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionCacheBehaviorSettingsForwardedQueryStringsPtrInput)(nil)).Elem(), DistributionCacheBehaviorSettingsForwardedQueryStringsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionDefaultCacheBehaviorInput)(nil)).Elem(), DistributionDefaultCacheBehaviorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionDefaultCacheBehaviorPtrInput)(nil)).Elem(), DistributionDefaultCacheBehaviorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionLocationInput)(nil)).Elem(), DistributionLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionLocationArrayInput)(nil)).Elem(), DistributionLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionOriginInput)(nil)).Elem(), DistributionOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DistributionOriginPtrInput)(nil)).Elem(), DistributionOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAddOnInput)(nil)).Elem(), InstanceAddOnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceAddOnPtrInput)(nil)).Elem(), InstanceAddOnArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePublicPortsPortInfoInput)(nil)).Elem(), InstancePublicPortsPortInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePublicPortsPortInfoArrayInput)(nil)).Elem(), InstancePublicPortsPortInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LbCertificateDomainValidationRecordInput)(nil)).Elem(), LbCertificateDomainValidationRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LbCertificateDomainValidationRecordArrayInput)(nil)).Elem(), LbCertificateDomainValidationRecordArray{})
	pulumi.RegisterOutputType(CertificateDomainValidationOptionOutput{})
	pulumi.RegisterOutputType(CertificateDomainValidationOptionArrayOutput{})
	pulumi.RegisterOutputType(ContainerServiceDeploymentVersionContainerOutput{})
	pulumi.RegisterOutputType(ContainerServiceDeploymentVersionContainerArrayOutput{})
	pulumi.RegisterOutputType(ContainerServiceDeploymentVersionPublicEndpointOutput{})
	pulumi.RegisterOutputType(ContainerServiceDeploymentVersionPublicEndpointPtrOutput{})
	pulumi.RegisterOutputType(ContainerServiceDeploymentVersionPublicEndpointHealthCheckOutput{})
	pulumi.RegisterOutputType(ContainerServiceDeploymentVersionPublicEndpointHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(ContainerServicePrivateRegistryAccessOutput{})
	pulumi.RegisterOutputType(ContainerServicePrivateRegistryAccessPtrOutput{})
	pulumi.RegisterOutputType(ContainerServicePrivateRegistryAccessEcrImagePullerRoleOutput{})
	pulumi.RegisterOutputType(ContainerServicePrivateRegistryAccessEcrImagePullerRolePtrOutput{})
	pulumi.RegisterOutputType(ContainerServicePublicDomainNamesOutput{})
	pulumi.RegisterOutputType(ContainerServicePublicDomainNamesPtrOutput{})
	pulumi.RegisterOutputType(ContainerServicePublicDomainNamesCertificateOutput{})
	pulumi.RegisterOutputType(ContainerServicePublicDomainNamesCertificateArrayOutput{})
	pulumi.RegisterOutputType(DistributionCacheBehaviorOutput{})
	pulumi.RegisterOutputType(DistributionCacheBehaviorArrayOutput{})
	pulumi.RegisterOutputType(DistributionCacheBehaviorSettingsOutput{})
	pulumi.RegisterOutputType(DistributionCacheBehaviorSettingsPtrOutput{})
	pulumi.RegisterOutputType(DistributionCacheBehaviorSettingsForwardedCookiesOutput{})
	pulumi.RegisterOutputType(DistributionCacheBehaviorSettingsForwardedCookiesPtrOutput{})
	pulumi.RegisterOutputType(DistributionCacheBehaviorSettingsForwardedHeadersOutput{})
	pulumi.RegisterOutputType(DistributionCacheBehaviorSettingsForwardedHeadersPtrOutput{})
	pulumi.RegisterOutputType(DistributionCacheBehaviorSettingsForwardedQueryStringsOutput{})
	pulumi.RegisterOutputType(DistributionCacheBehaviorSettingsForwardedQueryStringsPtrOutput{})
	pulumi.RegisterOutputType(DistributionDefaultCacheBehaviorOutput{})
	pulumi.RegisterOutputType(DistributionDefaultCacheBehaviorPtrOutput{})
	pulumi.RegisterOutputType(DistributionLocationOutput{})
	pulumi.RegisterOutputType(DistributionLocationArrayOutput{})
	pulumi.RegisterOutputType(DistributionOriginOutput{})
	pulumi.RegisterOutputType(DistributionOriginPtrOutput{})
	pulumi.RegisterOutputType(InstanceAddOnOutput{})
	pulumi.RegisterOutputType(InstanceAddOnPtrOutput{})
	pulumi.RegisterOutputType(InstancePublicPortsPortInfoOutput{})
	pulumi.RegisterOutputType(InstancePublicPortsPortInfoArrayOutput{})
	pulumi.RegisterOutputType(LbCertificateDomainValidationRecordOutput{})
	pulumi.RegisterOutputType(LbCertificateDomainValidationRecordArrayOutput{})
}
