// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lightsail

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type InstancePublicPortsPortInfo struct {
	// Set of CIDR blocks.
	Cidrs []string `pulumi:"cidrs"`
	// First port in a range of open ports on an instance.
	FromPort int `pulumi:"fromPort"`
	// IP protocol name. Valid values are `tcp`, `all`, `udp`, and `icmp`.
	Protocol string `pulumi:"protocol"`
	// Last port in a range of open ports on an instance.
	ToPort int `pulumi:"toPort"`
}

// InstancePublicPortsPortInfoInput is an input type that accepts InstancePublicPortsPortInfoArgs and InstancePublicPortsPortInfoOutput values.
// You can construct a concrete instance of `InstancePublicPortsPortInfoInput` via:
//
//          InstancePublicPortsPortInfoArgs{...}
type InstancePublicPortsPortInfoInput interface {
	pulumi.Input

	ToInstancePublicPortsPortInfoOutput() InstancePublicPortsPortInfoOutput
	ToInstancePublicPortsPortInfoOutputWithContext(context.Context) InstancePublicPortsPortInfoOutput
}

type InstancePublicPortsPortInfoArgs struct {
	// Set of CIDR blocks.
	Cidrs pulumi.StringArrayInput `pulumi:"cidrs"`
	// First port in a range of open ports on an instance.
	FromPort pulumi.IntInput `pulumi:"fromPort"`
	// IP protocol name. Valid values are `tcp`, `all`, `udp`, and `icmp`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Last port in a range of open ports on an instance.
	ToPort pulumi.IntInput `pulumi:"toPort"`
}

func (InstancePublicPortsPortInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePublicPortsPortInfo)(nil)).Elem()
}

func (i InstancePublicPortsPortInfoArgs) ToInstancePublicPortsPortInfoOutput() InstancePublicPortsPortInfoOutput {
	return i.ToInstancePublicPortsPortInfoOutputWithContext(context.Background())
}

func (i InstancePublicPortsPortInfoArgs) ToInstancePublicPortsPortInfoOutputWithContext(ctx context.Context) InstancePublicPortsPortInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePublicPortsPortInfoOutput)
}

// InstancePublicPortsPortInfoArrayInput is an input type that accepts InstancePublicPortsPortInfoArray and InstancePublicPortsPortInfoArrayOutput values.
// You can construct a concrete instance of `InstancePublicPortsPortInfoArrayInput` via:
//
//          InstancePublicPortsPortInfoArray{ InstancePublicPortsPortInfoArgs{...} }
type InstancePublicPortsPortInfoArrayInput interface {
	pulumi.Input

	ToInstancePublicPortsPortInfoArrayOutput() InstancePublicPortsPortInfoArrayOutput
	ToInstancePublicPortsPortInfoArrayOutputWithContext(context.Context) InstancePublicPortsPortInfoArrayOutput
}

type InstancePublicPortsPortInfoArray []InstancePublicPortsPortInfoInput

func (InstancePublicPortsPortInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancePublicPortsPortInfo)(nil)).Elem()
}

func (i InstancePublicPortsPortInfoArray) ToInstancePublicPortsPortInfoArrayOutput() InstancePublicPortsPortInfoArrayOutput {
	return i.ToInstancePublicPortsPortInfoArrayOutputWithContext(context.Background())
}

func (i InstancePublicPortsPortInfoArray) ToInstancePublicPortsPortInfoArrayOutputWithContext(ctx context.Context) InstancePublicPortsPortInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstancePublicPortsPortInfoArrayOutput)
}

type InstancePublicPortsPortInfoOutput struct{ *pulumi.OutputState }

func (InstancePublicPortsPortInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstancePublicPortsPortInfo)(nil)).Elem()
}

func (o InstancePublicPortsPortInfoOutput) ToInstancePublicPortsPortInfoOutput() InstancePublicPortsPortInfoOutput {
	return o
}

func (o InstancePublicPortsPortInfoOutput) ToInstancePublicPortsPortInfoOutputWithContext(ctx context.Context) InstancePublicPortsPortInfoOutput {
	return o
}

// Set of CIDR blocks.
func (o InstancePublicPortsPortInfoOutput) Cidrs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstancePublicPortsPortInfo) []string { return v.Cidrs }).(pulumi.StringArrayOutput)
}

// First port in a range of open ports on an instance.
func (o InstancePublicPortsPortInfoOutput) FromPort() pulumi.IntOutput {
	return o.ApplyT(func(v InstancePublicPortsPortInfo) int { return v.FromPort }).(pulumi.IntOutput)
}

// IP protocol name. Valid values are `tcp`, `all`, `udp`, and `icmp`.
func (o InstancePublicPortsPortInfoOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v InstancePublicPortsPortInfo) string { return v.Protocol }).(pulumi.StringOutput)
}

// Last port in a range of open ports on an instance.
func (o InstancePublicPortsPortInfoOutput) ToPort() pulumi.IntOutput {
	return o.ApplyT(func(v InstancePublicPortsPortInfo) int { return v.ToPort }).(pulumi.IntOutput)
}

type InstancePublicPortsPortInfoArrayOutput struct{ *pulumi.OutputState }

func (InstancePublicPortsPortInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstancePublicPortsPortInfo)(nil)).Elem()
}

func (o InstancePublicPortsPortInfoArrayOutput) ToInstancePublicPortsPortInfoArrayOutput() InstancePublicPortsPortInfoArrayOutput {
	return o
}

func (o InstancePublicPortsPortInfoArrayOutput) ToInstancePublicPortsPortInfoArrayOutputWithContext(ctx context.Context) InstancePublicPortsPortInfoArrayOutput {
	return o
}

func (o InstancePublicPortsPortInfoArrayOutput) Index(i pulumi.IntInput) InstancePublicPortsPortInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstancePublicPortsPortInfo {
		return vs[0].([]InstancePublicPortsPortInfo)[vs[1].(int)]
	}).(InstancePublicPortsPortInfoOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePublicPortsPortInfoInput)(nil)).Elem(), InstancePublicPortsPortInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstancePublicPortsPortInfoArrayInput)(nil)).Elem(), InstancePublicPortsPortInfoArray{})
	pulumi.RegisterOutputType(InstancePublicPortsPortInfoOutput{})
	pulumi.RegisterOutputType(InstancePublicPortsPortInfoArrayOutput{})
}
