// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lightsail

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ContainerServiceDeploymentVersion struct {
	pulumi.CustomResourceState

	Containers     ContainerServiceDeploymentVersionContainerArrayOutput    `pulumi:"containers"`
	CreatedAt      pulumi.StringOutput                                      `pulumi:"createdAt"`
	PublicEndpoint ContainerServiceDeploymentVersionPublicEndpointPtrOutput `pulumi:"publicEndpoint"`
	ServiceName    pulumi.StringOutput                                      `pulumi:"serviceName"`
	State          pulumi.StringOutput                                      `pulumi:"state"`
	Version        pulumi.IntOutput                                         `pulumi:"version"`
}

// NewContainerServiceDeploymentVersion registers a new resource with the given unique name, arguments, and options.
func NewContainerServiceDeploymentVersion(ctx *pulumi.Context,
	name string, args *ContainerServiceDeploymentVersionArgs, opts ...pulumi.ResourceOption) (*ContainerServiceDeploymentVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Containers == nil {
		return nil, errors.New("invalid value for required argument 'Containers'")
	}
	if args.ServiceName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceName'")
	}
	var resource ContainerServiceDeploymentVersion
	err := ctx.RegisterResource("aws:lightsail/containerServiceDeploymentVersion:ContainerServiceDeploymentVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContainerServiceDeploymentVersion gets an existing ContainerServiceDeploymentVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContainerServiceDeploymentVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContainerServiceDeploymentVersionState, opts ...pulumi.ResourceOption) (*ContainerServiceDeploymentVersion, error) {
	var resource ContainerServiceDeploymentVersion
	err := ctx.ReadResource("aws:lightsail/containerServiceDeploymentVersion:ContainerServiceDeploymentVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContainerServiceDeploymentVersion resources.
type containerServiceDeploymentVersionState struct {
	Containers     []ContainerServiceDeploymentVersionContainer     `pulumi:"containers"`
	CreatedAt      *string                                          `pulumi:"createdAt"`
	PublicEndpoint *ContainerServiceDeploymentVersionPublicEndpoint `pulumi:"publicEndpoint"`
	ServiceName    *string                                          `pulumi:"serviceName"`
	State          *string                                          `pulumi:"state"`
	Version        *int                                             `pulumi:"version"`
}

type ContainerServiceDeploymentVersionState struct {
	Containers     ContainerServiceDeploymentVersionContainerArrayInput
	CreatedAt      pulumi.StringPtrInput
	PublicEndpoint ContainerServiceDeploymentVersionPublicEndpointPtrInput
	ServiceName    pulumi.StringPtrInput
	State          pulumi.StringPtrInput
	Version        pulumi.IntPtrInput
}

func (ContainerServiceDeploymentVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*containerServiceDeploymentVersionState)(nil)).Elem()
}

type containerServiceDeploymentVersionArgs struct {
	Containers     []ContainerServiceDeploymentVersionContainer     `pulumi:"containers"`
	PublicEndpoint *ContainerServiceDeploymentVersionPublicEndpoint `pulumi:"publicEndpoint"`
	ServiceName    string                                           `pulumi:"serviceName"`
}

// The set of arguments for constructing a ContainerServiceDeploymentVersion resource.
type ContainerServiceDeploymentVersionArgs struct {
	Containers     ContainerServiceDeploymentVersionContainerArrayInput
	PublicEndpoint ContainerServiceDeploymentVersionPublicEndpointPtrInput
	ServiceName    pulumi.StringInput
}

func (ContainerServiceDeploymentVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*containerServiceDeploymentVersionArgs)(nil)).Elem()
}

type ContainerServiceDeploymentVersionInput interface {
	pulumi.Input

	ToContainerServiceDeploymentVersionOutput() ContainerServiceDeploymentVersionOutput
	ToContainerServiceDeploymentVersionOutputWithContext(ctx context.Context) ContainerServiceDeploymentVersionOutput
}

func (*ContainerServiceDeploymentVersion) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceDeploymentVersion)(nil)).Elem()
}

func (i *ContainerServiceDeploymentVersion) ToContainerServiceDeploymentVersionOutput() ContainerServiceDeploymentVersionOutput {
	return i.ToContainerServiceDeploymentVersionOutputWithContext(context.Background())
}

func (i *ContainerServiceDeploymentVersion) ToContainerServiceDeploymentVersionOutputWithContext(ctx context.Context) ContainerServiceDeploymentVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceDeploymentVersionOutput)
}

// ContainerServiceDeploymentVersionArrayInput is an input type that accepts ContainerServiceDeploymentVersionArray and ContainerServiceDeploymentVersionArrayOutput values.
// You can construct a concrete instance of `ContainerServiceDeploymentVersionArrayInput` via:
//
//	ContainerServiceDeploymentVersionArray{ ContainerServiceDeploymentVersionArgs{...} }
type ContainerServiceDeploymentVersionArrayInput interface {
	pulumi.Input

	ToContainerServiceDeploymentVersionArrayOutput() ContainerServiceDeploymentVersionArrayOutput
	ToContainerServiceDeploymentVersionArrayOutputWithContext(context.Context) ContainerServiceDeploymentVersionArrayOutput
}

type ContainerServiceDeploymentVersionArray []ContainerServiceDeploymentVersionInput

func (ContainerServiceDeploymentVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ContainerServiceDeploymentVersion)(nil)).Elem()
}

func (i ContainerServiceDeploymentVersionArray) ToContainerServiceDeploymentVersionArrayOutput() ContainerServiceDeploymentVersionArrayOutput {
	return i.ToContainerServiceDeploymentVersionArrayOutputWithContext(context.Background())
}

func (i ContainerServiceDeploymentVersionArray) ToContainerServiceDeploymentVersionArrayOutputWithContext(ctx context.Context) ContainerServiceDeploymentVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceDeploymentVersionArrayOutput)
}

// ContainerServiceDeploymentVersionMapInput is an input type that accepts ContainerServiceDeploymentVersionMap and ContainerServiceDeploymentVersionMapOutput values.
// You can construct a concrete instance of `ContainerServiceDeploymentVersionMapInput` via:
//
//	ContainerServiceDeploymentVersionMap{ "key": ContainerServiceDeploymentVersionArgs{...} }
type ContainerServiceDeploymentVersionMapInput interface {
	pulumi.Input

	ToContainerServiceDeploymentVersionMapOutput() ContainerServiceDeploymentVersionMapOutput
	ToContainerServiceDeploymentVersionMapOutputWithContext(context.Context) ContainerServiceDeploymentVersionMapOutput
}

type ContainerServiceDeploymentVersionMap map[string]ContainerServiceDeploymentVersionInput

func (ContainerServiceDeploymentVersionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ContainerServiceDeploymentVersion)(nil)).Elem()
}

func (i ContainerServiceDeploymentVersionMap) ToContainerServiceDeploymentVersionMapOutput() ContainerServiceDeploymentVersionMapOutput {
	return i.ToContainerServiceDeploymentVersionMapOutputWithContext(context.Background())
}

func (i ContainerServiceDeploymentVersionMap) ToContainerServiceDeploymentVersionMapOutputWithContext(ctx context.Context) ContainerServiceDeploymentVersionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContainerServiceDeploymentVersionMapOutput)
}

type ContainerServiceDeploymentVersionOutput struct{ *pulumi.OutputState }

func (ContainerServiceDeploymentVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContainerServiceDeploymentVersion)(nil)).Elem()
}

func (o ContainerServiceDeploymentVersionOutput) ToContainerServiceDeploymentVersionOutput() ContainerServiceDeploymentVersionOutput {
	return o
}

func (o ContainerServiceDeploymentVersionOutput) ToContainerServiceDeploymentVersionOutputWithContext(ctx context.Context) ContainerServiceDeploymentVersionOutput {
	return o
}

func (o ContainerServiceDeploymentVersionOutput) Containers() ContainerServiceDeploymentVersionContainerArrayOutput {
	return o.ApplyT(func(v *ContainerServiceDeploymentVersion) ContainerServiceDeploymentVersionContainerArrayOutput {
		return v.Containers
	}).(ContainerServiceDeploymentVersionContainerArrayOutput)
}

func (o ContainerServiceDeploymentVersionOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerServiceDeploymentVersion) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o ContainerServiceDeploymentVersionOutput) PublicEndpoint() ContainerServiceDeploymentVersionPublicEndpointPtrOutput {
	return o.ApplyT(func(v *ContainerServiceDeploymentVersion) ContainerServiceDeploymentVersionPublicEndpointPtrOutput {
		return v.PublicEndpoint
	}).(ContainerServiceDeploymentVersionPublicEndpointPtrOutput)
}

func (o ContainerServiceDeploymentVersionOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerServiceDeploymentVersion) pulumi.StringOutput { return v.ServiceName }).(pulumi.StringOutput)
}

func (o ContainerServiceDeploymentVersionOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ContainerServiceDeploymentVersion) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

func (o ContainerServiceDeploymentVersionOutput) Version() pulumi.IntOutput {
	return o.ApplyT(func(v *ContainerServiceDeploymentVersion) pulumi.IntOutput { return v.Version }).(pulumi.IntOutput)
}

type ContainerServiceDeploymentVersionArrayOutput struct{ *pulumi.OutputState }

func (ContainerServiceDeploymentVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ContainerServiceDeploymentVersion)(nil)).Elem()
}

func (o ContainerServiceDeploymentVersionArrayOutput) ToContainerServiceDeploymentVersionArrayOutput() ContainerServiceDeploymentVersionArrayOutput {
	return o
}

func (o ContainerServiceDeploymentVersionArrayOutput) ToContainerServiceDeploymentVersionArrayOutputWithContext(ctx context.Context) ContainerServiceDeploymentVersionArrayOutput {
	return o
}

func (o ContainerServiceDeploymentVersionArrayOutput) Index(i pulumi.IntInput) ContainerServiceDeploymentVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ContainerServiceDeploymentVersion {
		return vs[0].([]*ContainerServiceDeploymentVersion)[vs[1].(int)]
	}).(ContainerServiceDeploymentVersionOutput)
}

type ContainerServiceDeploymentVersionMapOutput struct{ *pulumi.OutputState }

func (ContainerServiceDeploymentVersionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ContainerServiceDeploymentVersion)(nil)).Elem()
}

func (o ContainerServiceDeploymentVersionMapOutput) ToContainerServiceDeploymentVersionMapOutput() ContainerServiceDeploymentVersionMapOutput {
	return o
}

func (o ContainerServiceDeploymentVersionMapOutput) ToContainerServiceDeploymentVersionMapOutputWithContext(ctx context.Context) ContainerServiceDeploymentVersionMapOutput {
	return o
}

func (o ContainerServiceDeploymentVersionMapOutput) MapIndex(k pulumi.StringInput) ContainerServiceDeploymentVersionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ContainerServiceDeploymentVersion {
		return vs[0].(map[string]*ContainerServiceDeploymentVersion)[vs[1].(string)]
	}).(ContainerServiceDeploymentVersionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerServiceDeploymentVersionInput)(nil)).Elem(), &ContainerServiceDeploymentVersion{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerServiceDeploymentVersionArrayInput)(nil)).Elem(), ContainerServiceDeploymentVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContainerServiceDeploymentVersionMapInput)(nil)).Elem(), ContainerServiceDeploymentVersionMap{})
	pulumi.RegisterOutputType(ContainerServiceDeploymentVersionOutput{})
	pulumi.RegisterOutputType(ContainerServiceDeploymentVersionArrayOutput{})
	pulumi.RegisterOutputType(ContainerServiceDeploymentVersionMapOutput{})
}
