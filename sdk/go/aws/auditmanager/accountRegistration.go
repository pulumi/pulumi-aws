// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package auditmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing AWS Audit Manager Account Registration.
//
// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/auditmanager"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := auditmanager.NewAccountRegistration(ctx, "example", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Deregister On Destroy
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/auditmanager"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := auditmanager.NewAccountRegistration(ctx, "example", &auditmanager.AccountRegistrationArgs{
//				DeregisterOnDestroy: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// terraform import {
//
//	to = aws_auditmanager_account_registration.example
//
//	id = "us-east-1" } Using `pulumi import`, import Audit Manager Account Registration resources using the `id`. For exampleconsole % pulumi import aws_auditmanager_account_registration.example us-east-1
type AccountRegistration struct {
	pulumi.CustomResourceState

	// Identifier for the delegated administrator account.
	DelegatedAdminAccount pulumi.StringPtrOutput `pulumi:"delegatedAdminAccount"`
	// Flag to deregister AuditManager in the account upon destruction. Defaults to `false` (ie. AuditManager will remain active in the account, even if this resource is removed).
	DeregisterOnDestroy pulumi.BoolPtrOutput `pulumi:"deregisterOnDestroy"`
	// KMS key identifier.
	KmsKey pulumi.StringPtrOutput `pulumi:"kmsKey"`
	// Status of the account registration request.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewAccountRegistration registers a new resource with the given unique name, arguments, and options.
func NewAccountRegistration(ctx *pulumi.Context,
	name string, args *AccountRegistrationArgs, opts ...pulumi.ResourceOption) (*AccountRegistration, error) {
	if args == nil {
		args = &AccountRegistrationArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccountRegistration
	err := ctx.RegisterResource("aws:auditmanager/accountRegistration:AccountRegistration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountRegistration gets an existing AccountRegistration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountRegistration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountRegistrationState, opts ...pulumi.ResourceOption) (*AccountRegistration, error) {
	var resource AccountRegistration
	err := ctx.ReadResource("aws:auditmanager/accountRegistration:AccountRegistration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountRegistration resources.
type accountRegistrationState struct {
	// Identifier for the delegated administrator account.
	DelegatedAdminAccount *string `pulumi:"delegatedAdminAccount"`
	// Flag to deregister AuditManager in the account upon destruction. Defaults to `false` (ie. AuditManager will remain active in the account, even if this resource is removed).
	DeregisterOnDestroy *bool `pulumi:"deregisterOnDestroy"`
	// KMS key identifier.
	KmsKey *string `pulumi:"kmsKey"`
	// Status of the account registration request.
	Status *string `pulumi:"status"`
}

type AccountRegistrationState struct {
	// Identifier for the delegated administrator account.
	DelegatedAdminAccount pulumi.StringPtrInput
	// Flag to deregister AuditManager in the account upon destruction. Defaults to `false` (ie. AuditManager will remain active in the account, even if this resource is removed).
	DeregisterOnDestroy pulumi.BoolPtrInput
	// KMS key identifier.
	KmsKey pulumi.StringPtrInput
	// Status of the account registration request.
	Status pulumi.StringPtrInput
}

func (AccountRegistrationState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountRegistrationState)(nil)).Elem()
}

type accountRegistrationArgs struct {
	// Identifier for the delegated administrator account.
	DelegatedAdminAccount *string `pulumi:"delegatedAdminAccount"`
	// Flag to deregister AuditManager in the account upon destruction. Defaults to `false` (ie. AuditManager will remain active in the account, even if this resource is removed).
	DeregisterOnDestroy *bool `pulumi:"deregisterOnDestroy"`
	// KMS key identifier.
	KmsKey *string `pulumi:"kmsKey"`
}

// The set of arguments for constructing a AccountRegistration resource.
type AccountRegistrationArgs struct {
	// Identifier for the delegated administrator account.
	DelegatedAdminAccount pulumi.StringPtrInput
	// Flag to deregister AuditManager in the account upon destruction. Defaults to `false` (ie. AuditManager will remain active in the account, even if this resource is removed).
	DeregisterOnDestroy pulumi.BoolPtrInput
	// KMS key identifier.
	KmsKey pulumi.StringPtrInput
}

func (AccountRegistrationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountRegistrationArgs)(nil)).Elem()
}

type AccountRegistrationInput interface {
	pulumi.Input

	ToAccountRegistrationOutput() AccountRegistrationOutput
	ToAccountRegistrationOutputWithContext(ctx context.Context) AccountRegistrationOutput
}

func (*AccountRegistration) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountRegistration)(nil)).Elem()
}

func (i *AccountRegistration) ToAccountRegistrationOutput() AccountRegistrationOutput {
	return i.ToAccountRegistrationOutputWithContext(context.Background())
}

func (i *AccountRegistration) ToAccountRegistrationOutputWithContext(ctx context.Context) AccountRegistrationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountRegistrationOutput)
}

// AccountRegistrationArrayInput is an input type that accepts AccountRegistrationArray and AccountRegistrationArrayOutput values.
// You can construct a concrete instance of `AccountRegistrationArrayInput` via:
//
//	AccountRegistrationArray{ AccountRegistrationArgs{...} }
type AccountRegistrationArrayInput interface {
	pulumi.Input

	ToAccountRegistrationArrayOutput() AccountRegistrationArrayOutput
	ToAccountRegistrationArrayOutputWithContext(context.Context) AccountRegistrationArrayOutput
}

type AccountRegistrationArray []AccountRegistrationInput

func (AccountRegistrationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountRegistration)(nil)).Elem()
}

func (i AccountRegistrationArray) ToAccountRegistrationArrayOutput() AccountRegistrationArrayOutput {
	return i.ToAccountRegistrationArrayOutputWithContext(context.Background())
}

func (i AccountRegistrationArray) ToAccountRegistrationArrayOutputWithContext(ctx context.Context) AccountRegistrationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountRegistrationArrayOutput)
}

// AccountRegistrationMapInput is an input type that accepts AccountRegistrationMap and AccountRegistrationMapOutput values.
// You can construct a concrete instance of `AccountRegistrationMapInput` via:
//
//	AccountRegistrationMap{ "key": AccountRegistrationArgs{...} }
type AccountRegistrationMapInput interface {
	pulumi.Input

	ToAccountRegistrationMapOutput() AccountRegistrationMapOutput
	ToAccountRegistrationMapOutputWithContext(context.Context) AccountRegistrationMapOutput
}

type AccountRegistrationMap map[string]AccountRegistrationInput

func (AccountRegistrationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountRegistration)(nil)).Elem()
}

func (i AccountRegistrationMap) ToAccountRegistrationMapOutput() AccountRegistrationMapOutput {
	return i.ToAccountRegistrationMapOutputWithContext(context.Background())
}

func (i AccountRegistrationMap) ToAccountRegistrationMapOutputWithContext(ctx context.Context) AccountRegistrationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountRegistrationMapOutput)
}

type AccountRegistrationOutput struct{ *pulumi.OutputState }

func (AccountRegistrationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountRegistration)(nil)).Elem()
}

func (o AccountRegistrationOutput) ToAccountRegistrationOutput() AccountRegistrationOutput {
	return o
}

func (o AccountRegistrationOutput) ToAccountRegistrationOutputWithContext(ctx context.Context) AccountRegistrationOutput {
	return o
}

// Identifier for the delegated administrator account.
func (o AccountRegistrationOutput) DelegatedAdminAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountRegistration) pulumi.StringPtrOutput { return v.DelegatedAdminAccount }).(pulumi.StringPtrOutput)
}

// Flag to deregister AuditManager in the account upon destruction. Defaults to `false` (ie. AuditManager will remain active in the account, even if this resource is removed).
func (o AccountRegistrationOutput) DeregisterOnDestroy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccountRegistration) pulumi.BoolPtrOutput { return v.DeregisterOnDestroy }).(pulumi.BoolPtrOutput)
}

// KMS key identifier.
func (o AccountRegistrationOutput) KmsKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccountRegistration) pulumi.StringPtrOutput { return v.KmsKey }).(pulumi.StringPtrOutput)
}

// Status of the account registration request.
func (o AccountRegistrationOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountRegistration) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type AccountRegistrationArrayOutput struct{ *pulumi.OutputState }

func (AccountRegistrationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountRegistration)(nil)).Elem()
}

func (o AccountRegistrationArrayOutput) ToAccountRegistrationArrayOutput() AccountRegistrationArrayOutput {
	return o
}

func (o AccountRegistrationArrayOutput) ToAccountRegistrationArrayOutputWithContext(ctx context.Context) AccountRegistrationArrayOutput {
	return o
}

func (o AccountRegistrationArrayOutput) Index(i pulumi.IntInput) AccountRegistrationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccountRegistration {
		return vs[0].([]*AccountRegistration)[vs[1].(int)]
	}).(AccountRegistrationOutput)
}

type AccountRegistrationMapOutput struct{ *pulumi.OutputState }

func (AccountRegistrationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountRegistration)(nil)).Elem()
}

func (o AccountRegistrationMapOutput) ToAccountRegistrationMapOutput() AccountRegistrationMapOutput {
	return o
}

func (o AccountRegistrationMapOutput) ToAccountRegistrationMapOutputWithContext(ctx context.Context) AccountRegistrationMapOutput {
	return o
}

func (o AccountRegistrationMapOutput) MapIndex(k pulumi.StringInput) AccountRegistrationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccountRegistration {
		return vs[0].(map[string]*AccountRegistration)[vs[1].(string)]
	}).(AccountRegistrationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountRegistrationInput)(nil)).Elem(), &AccountRegistration{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountRegistrationArrayInput)(nil)).Elem(), AccountRegistrationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountRegistrationMapInput)(nil)).Elem(), AccountRegistrationMap{})
	pulumi.RegisterOutputType(AccountRegistrationOutput{})
	pulumi.RegisterOutputType(AccountRegistrationArrayOutput{})
	pulumi.RegisterOutputType(AccountRegistrationMapOutput{})
}
