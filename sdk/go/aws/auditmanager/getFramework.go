// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package auditmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Data source for managing an AWS Audit Manager Framework.
//
// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/auditmanager"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := auditmanager.LookupFramework(ctx, &auditmanager.LookupFrameworkArgs{
//				FrameworkType: "Standard",
//				Name:          "Essential Eight",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupFramework(ctx *pulumi.Context, args *LookupFrameworkArgs, opts ...pulumi.InvokeOption) (*LookupFrameworkResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupFrameworkResult
	err := ctx.Invoke("aws:auditmanager/getFramework:getFramework", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFramework.
type LookupFrameworkArgs struct {
	ControlSets   []GetFrameworkControlSet `pulumi:"controlSets"`
	FrameworkType string                   `pulumi:"frameworkType"`
	// Name of the framework.
	Name string `pulumi:"name"`
}

// A collection of values returned by getFramework.
type LookupFrameworkResult struct {
	Arn            string                   `pulumi:"arn"`
	ComplianceType string                   `pulumi:"complianceType"`
	ControlSets    []GetFrameworkControlSet `pulumi:"controlSets"`
	Description    string                   `pulumi:"description"`
	FrameworkType  string                   `pulumi:"frameworkType"`
	Id             string                   `pulumi:"id"`
	Name           string                   `pulumi:"name"`
	Tags           map[string]string        `pulumi:"tags"`
}

func LookupFrameworkOutput(ctx *pulumi.Context, args LookupFrameworkOutputArgs, opts ...pulumi.InvokeOption) LookupFrameworkResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFrameworkResult, error) {
			args := v.(LookupFrameworkArgs)
			r, err := LookupFramework(ctx, &args, opts...)
			var s LookupFrameworkResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFrameworkResultOutput)
}

// A collection of arguments for invoking getFramework.
type LookupFrameworkOutputArgs struct {
	ControlSets   GetFrameworkControlSetArrayInput `pulumi:"controlSets"`
	FrameworkType pulumi.StringInput               `pulumi:"frameworkType"`
	// Name of the framework.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupFrameworkOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFrameworkArgs)(nil)).Elem()
}

// A collection of values returned by getFramework.
type LookupFrameworkResultOutput struct{ *pulumi.OutputState }

func (LookupFrameworkResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFrameworkResult)(nil)).Elem()
}

func (o LookupFrameworkResultOutput) ToLookupFrameworkResultOutput() LookupFrameworkResultOutput {
	return o
}

func (o LookupFrameworkResultOutput) ToLookupFrameworkResultOutputWithContext(ctx context.Context) LookupFrameworkResultOutput {
	return o
}

func (o LookupFrameworkResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupFrameworkResult] {
	return pulumix.Output[LookupFrameworkResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupFrameworkResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFrameworkResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupFrameworkResultOutput) ComplianceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFrameworkResult) string { return v.ComplianceType }).(pulumi.StringOutput)
}

func (o LookupFrameworkResultOutput) ControlSets() GetFrameworkControlSetArrayOutput {
	return o.ApplyT(func(v LookupFrameworkResult) []GetFrameworkControlSet { return v.ControlSets }).(GetFrameworkControlSetArrayOutput)
}

func (o LookupFrameworkResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFrameworkResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupFrameworkResultOutput) FrameworkType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFrameworkResult) string { return v.FrameworkType }).(pulumi.StringOutput)
}

func (o LookupFrameworkResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFrameworkResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupFrameworkResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFrameworkResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupFrameworkResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFrameworkResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFrameworkResultOutput{})
}
