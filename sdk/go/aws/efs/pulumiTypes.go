// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package efs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AccessPointPosixUser struct {
	// POSIX group ID used for all file system operations using this access point.
	Gid int `pulumi:"gid"`
	// Secondary POSIX group IDs used for all file system operations using this access point.
	SecondaryGids []int `pulumi:"secondaryGids"`
	// POSIX user ID used for all file system operations using this access point.
	Uid int `pulumi:"uid"`
}

// AccessPointPosixUserInput is an input type that accepts AccessPointPosixUserArgs and AccessPointPosixUserOutput values.
// You can construct a concrete instance of `AccessPointPosixUserInput` via:
//
//          AccessPointPosixUserArgs{...}
type AccessPointPosixUserInput interface {
	pulumi.Input

	ToAccessPointPosixUserOutput() AccessPointPosixUserOutput
	ToAccessPointPosixUserOutputWithContext(context.Context) AccessPointPosixUserOutput
}

type AccessPointPosixUserArgs struct {
	// POSIX group ID used for all file system operations using this access point.
	Gid pulumi.IntInput `pulumi:"gid"`
	// Secondary POSIX group IDs used for all file system operations using this access point.
	SecondaryGids pulumi.IntArrayInput `pulumi:"secondaryGids"`
	// POSIX user ID used for all file system operations using this access point.
	Uid pulumi.IntInput `pulumi:"uid"`
}

func (AccessPointPosixUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPointPosixUser)(nil)).Elem()
}

func (i AccessPointPosixUserArgs) ToAccessPointPosixUserOutput() AccessPointPosixUserOutput {
	return i.ToAccessPointPosixUserOutputWithContext(context.Background())
}

func (i AccessPointPosixUserArgs) ToAccessPointPosixUserOutputWithContext(ctx context.Context) AccessPointPosixUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointPosixUserOutput)
}

func (i AccessPointPosixUserArgs) ToAccessPointPosixUserPtrOutput() AccessPointPosixUserPtrOutput {
	return i.ToAccessPointPosixUserPtrOutputWithContext(context.Background())
}

func (i AccessPointPosixUserArgs) ToAccessPointPosixUserPtrOutputWithContext(ctx context.Context) AccessPointPosixUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointPosixUserOutput).ToAccessPointPosixUserPtrOutputWithContext(ctx)
}

// AccessPointPosixUserPtrInput is an input type that accepts AccessPointPosixUserArgs, AccessPointPosixUserPtr and AccessPointPosixUserPtrOutput values.
// You can construct a concrete instance of `AccessPointPosixUserPtrInput` via:
//
//          AccessPointPosixUserArgs{...}
//
//  or:
//
//          nil
type AccessPointPosixUserPtrInput interface {
	pulumi.Input

	ToAccessPointPosixUserPtrOutput() AccessPointPosixUserPtrOutput
	ToAccessPointPosixUserPtrOutputWithContext(context.Context) AccessPointPosixUserPtrOutput
}

type accessPointPosixUserPtrType AccessPointPosixUserArgs

func AccessPointPosixUserPtr(v *AccessPointPosixUserArgs) AccessPointPosixUserPtrInput {
	return (*accessPointPosixUserPtrType)(v)
}

func (*accessPointPosixUserPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPointPosixUser)(nil)).Elem()
}

func (i *accessPointPosixUserPtrType) ToAccessPointPosixUserPtrOutput() AccessPointPosixUserPtrOutput {
	return i.ToAccessPointPosixUserPtrOutputWithContext(context.Background())
}

func (i *accessPointPosixUserPtrType) ToAccessPointPosixUserPtrOutputWithContext(ctx context.Context) AccessPointPosixUserPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointPosixUserPtrOutput)
}

type AccessPointPosixUserOutput struct{ *pulumi.OutputState }

func (AccessPointPosixUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPointPosixUser)(nil)).Elem()
}

func (o AccessPointPosixUserOutput) ToAccessPointPosixUserOutput() AccessPointPosixUserOutput {
	return o
}

func (o AccessPointPosixUserOutput) ToAccessPointPosixUserOutputWithContext(ctx context.Context) AccessPointPosixUserOutput {
	return o
}

func (o AccessPointPosixUserOutput) ToAccessPointPosixUserPtrOutput() AccessPointPosixUserPtrOutput {
	return o.ToAccessPointPosixUserPtrOutputWithContext(context.Background())
}

func (o AccessPointPosixUserOutput) ToAccessPointPosixUserPtrOutputWithContext(ctx context.Context) AccessPointPosixUserPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessPointPosixUser) *AccessPointPosixUser {
		return &v
	}).(AccessPointPosixUserPtrOutput)
}

// POSIX group ID used for all file system operations using this access point.
func (o AccessPointPosixUserOutput) Gid() pulumi.IntOutput {
	return o.ApplyT(func(v AccessPointPosixUser) int { return v.Gid }).(pulumi.IntOutput)
}

// Secondary POSIX group IDs used for all file system operations using this access point.
func (o AccessPointPosixUserOutput) SecondaryGids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v AccessPointPosixUser) []int { return v.SecondaryGids }).(pulumi.IntArrayOutput)
}

// POSIX user ID used for all file system operations using this access point.
func (o AccessPointPosixUserOutput) Uid() pulumi.IntOutput {
	return o.ApplyT(func(v AccessPointPosixUser) int { return v.Uid }).(pulumi.IntOutput)
}

type AccessPointPosixUserPtrOutput struct{ *pulumi.OutputState }

func (AccessPointPosixUserPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPointPosixUser)(nil)).Elem()
}

func (o AccessPointPosixUserPtrOutput) ToAccessPointPosixUserPtrOutput() AccessPointPosixUserPtrOutput {
	return o
}

func (o AccessPointPosixUserPtrOutput) ToAccessPointPosixUserPtrOutputWithContext(ctx context.Context) AccessPointPosixUserPtrOutput {
	return o
}

func (o AccessPointPosixUserPtrOutput) Elem() AccessPointPosixUserOutput {
	return o.ApplyT(func(v *AccessPointPosixUser) AccessPointPosixUser {
		if v != nil {
			return *v
		}
		var ret AccessPointPosixUser
		return ret
	}).(AccessPointPosixUserOutput)
}

// POSIX group ID used for all file system operations using this access point.
func (o AccessPointPosixUserPtrOutput) Gid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccessPointPosixUser) *int {
		if v == nil {
			return nil
		}
		return &v.Gid
	}).(pulumi.IntPtrOutput)
}

// Secondary POSIX group IDs used for all file system operations using this access point.
func (o AccessPointPosixUserPtrOutput) SecondaryGids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v *AccessPointPosixUser) []int {
		if v == nil {
			return nil
		}
		return v.SecondaryGids
	}).(pulumi.IntArrayOutput)
}

// POSIX user ID used for all file system operations using this access point.
func (o AccessPointPosixUserPtrOutput) Uid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccessPointPosixUser) *int {
		if v == nil {
			return nil
		}
		return &v.Uid
	}).(pulumi.IntPtrOutput)
}

type AccessPointRootDirectory struct {
	// POSIX IDs and permissions to apply to the access point's Root Directory. See Creation Info below.
	CreationInfo *AccessPointRootDirectoryCreationInfo `pulumi:"creationInfo"`
	// Path on the EFS file system to expose as the root directory to NFS clients using the access point to access the EFS file system. A path can have up to four subdirectories. If the specified path does not exist, you are required to provide `creationInfo`.
	Path *string `pulumi:"path"`
}

// AccessPointRootDirectoryInput is an input type that accepts AccessPointRootDirectoryArgs and AccessPointRootDirectoryOutput values.
// You can construct a concrete instance of `AccessPointRootDirectoryInput` via:
//
//          AccessPointRootDirectoryArgs{...}
type AccessPointRootDirectoryInput interface {
	pulumi.Input

	ToAccessPointRootDirectoryOutput() AccessPointRootDirectoryOutput
	ToAccessPointRootDirectoryOutputWithContext(context.Context) AccessPointRootDirectoryOutput
}

type AccessPointRootDirectoryArgs struct {
	// POSIX IDs and permissions to apply to the access point's Root Directory. See Creation Info below.
	CreationInfo AccessPointRootDirectoryCreationInfoPtrInput `pulumi:"creationInfo"`
	// Path on the EFS file system to expose as the root directory to NFS clients using the access point to access the EFS file system. A path can have up to four subdirectories. If the specified path does not exist, you are required to provide `creationInfo`.
	Path pulumi.StringPtrInput `pulumi:"path"`
}

func (AccessPointRootDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPointRootDirectory)(nil)).Elem()
}

func (i AccessPointRootDirectoryArgs) ToAccessPointRootDirectoryOutput() AccessPointRootDirectoryOutput {
	return i.ToAccessPointRootDirectoryOutputWithContext(context.Background())
}

func (i AccessPointRootDirectoryArgs) ToAccessPointRootDirectoryOutputWithContext(ctx context.Context) AccessPointRootDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointRootDirectoryOutput)
}

func (i AccessPointRootDirectoryArgs) ToAccessPointRootDirectoryPtrOutput() AccessPointRootDirectoryPtrOutput {
	return i.ToAccessPointRootDirectoryPtrOutputWithContext(context.Background())
}

func (i AccessPointRootDirectoryArgs) ToAccessPointRootDirectoryPtrOutputWithContext(ctx context.Context) AccessPointRootDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointRootDirectoryOutput).ToAccessPointRootDirectoryPtrOutputWithContext(ctx)
}

// AccessPointRootDirectoryPtrInput is an input type that accepts AccessPointRootDirectoryArgs, AccessPointRootDirectoryPtr and AccessPointRootDirectoryPtrOutput values.
// You can construct a concrete instance of `AccessPointRootDirectoryPtrInput` via:
//
//          AccessPointRootDirectoryArgs{...}
//
//  or:
//
//          nil
type AccessPointRootDirectoryPtrInput interface {
	pulumi.Input

	ToAccessPointRootDirectoryPtrOutput() AccessPointRootDirectoryPtrOutput
	ToAccessPointRootDirectoryPtrOutputWithContext(context.Context) AccessPointRootDirectoryPtrOutput
}

type accessPointRootDirectoryPtrType AccessPointRootDirectoryArgs

func AccessPointRootDirectoryPtr(v *AccessPointRootDirectoryArgs) AccessPointRootDirectoryPtrInput {
	return (*accessPointRootDirectoryPtrType)(v)
}

func (*accessPointRootDirectoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPointRootDirectory)(nil)).Elem()
}

func (i *accessPointRootDirectoryPtrType) ToAccessPointRootDirectoryPtrOutput() AccessPointRootDirectoryPtrOutput {
	return i.ToAccessPointRootDirectoryPtrOutputWithContext(context.Background())
}

func (i *accessPointRootDirectoryPtrType) ToAccessPointRootDirectoryPtrOutputWithContext(ctx context.Context) AccessPointRootDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointRootDirectoryPtrOutput)
}

type AccessPointRootDirectoryOutput struct{ *pulumi.OutputState }

func (AccessPointRootDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPointRootDirectory)(nil)).Elem()
}

func (o AccessPointRootDirectoryOutput) ToAccessPointRootDirectoryOutput() AccessPointRootDirectoryOutput {
	return o
}

func (o AccessPointRootDirectoryOutput) ToAccessPointRootDirectoryOutputWithContext(ctx context.Context) AccessPointRootDirectoryOutput {
	return o
}

func (o AccessPointRootDirectoryOutput) ToAccessPointRootDirectoryPtrOutput() AccessPointRootDirectoryPtrOutput {
	return o.ToAccessPointRootDirectoryPtrOutputWithContext(context.Background())
}

func (o AccessPointRootDirectoryOutput) ToAccessPointRootDirectoryPtrOutputWithContext(ctx context.Context) AccessPointRootDirectoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessPointRootDirectory) *AccessPointRootDirectory {
		return &v
	}).(AccessPointRootDirectoryPtrOutput)
}

// POSIX IDs and permissions to apply to the access point's Root Directory. See Creation Info below.
func (o AccessPointRootDirectoryOutput) CreationInfo() AccessPointRootDirectoryCreationInfoPtrOutput {
	return o.ApplyT(func(v AccessPointRootDirectory) *AccessPointRootDirectoryCreationInfo { return v.CreationInfo }).(AccessPointRootDirectoryCreationInfoPtrOutput)
}

// Path on the EFS file system to expose as the root directory to NFS clients using the access point to access the EFS file system. A path can have up to four subdirectories. If the specified path does not exist, you are required to provide `creationInfo`.
func (o AccessPointRootDirectoryOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AccessPointRootDirectory) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type AccessPointRootDirectoryPtrOutput struct{ *pulumi.OutputState }

func (AccessPointRootDirectoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPointRootDirectory)(nil)).Elem()
}

func (o AccessPointRootDirectoryPtrOutput) ToAccessPointRootDirectoryPtrOutput() AccessPointRootDirectoryPtrOutput {
	return o
}

func (o AccessPointRootDirectoryPtrOutput) ToAccessPointRootDirectoryPtrOutputWithContext(ctx context.Context) AccessPointRootDirectoryPtrOutput {
	return o
}

func (o AccessPointRootDirectoryPtrOutput) Elem() AccessPointRootDirectoryOutput {
	return o.ApplyT(func(v *AccessPointRootDirectory) AccessPointRootDirectory {
		if v != nil {
			return *v
		}
		var ret AccessPointRootDirectory
		return ret
	}).(AccessPointRootDirectoryOutput)
}

// POSIX IDs and permissions to apply to the access point's Root Directory. See Creation Info below.
func (o AccessPointRootDirectoryPtrOutput) CreationInfo() AccessPointRootDirectoryCreationInfoPtrOutput {
	return o.ApplyT(func(v *AccessPointRootDirectory) *AccessPointRootDirectoryCreationInfo {
		if v == nil {
			return nil
		}
		return v.CreationInfo
	}).(AccessPointRootDirectoryCreationInfoPtrOutput)
}

// Path on the EFS file system to expose as the root directory to NFS clients using the access point to access the EFS file system. A path can have up to four subdirectories. If the specified path does not exist, you are required to provide `creationInfo`.
func (o AccessPointRootDirectoryPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPointRootDirectory) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

type AccessPointRootDirectoryCreationInfo struct {
	// POSIX group ID to apply to the `rootDirectory`.
	OwnerGid int `pulumi:"ownerGid"`
	// POSIX user ID to apply to the `rootDirectory`.
	OwnerUid int `pulumi:"ownerUid"`
	// POSIX permissions to apply to the RootDirectory, in the format of an octal number representing the file's mode bits.
	Permissions string `pulumi:"permissions"`
}

// AccessPointRootDirectoryCreationInfoInput is an input type that accepts AccessPointRootDirectoryCreationInfoArgs and AccessPointRootDirectoryCreationInfoOutput values.
// You can construct a concrete instance of `AccessPointRootDirectoryCreationInfoInput` via:
//
//          AccessPointRootDirectoryCreationInfoArgs{...}
type AccessPointRootDirectoryCreationInfoInput interface {
	pulumi.Input

	ToAccessPointRootDirectoryCreationInfoOutput() AccessPointRootDirectoryCreationInfoOutput
	ToAccessPointRootDirectoryCreationInfoOutputWithContext(context.Context) AccessPointRootDirectoryCreationInfoOutput
}

type AccessPointRootDirectoryCreationInfoArgs struct {
	// POSIX group ID to apply to the `rootDirectory`.
	OwnerGid pulumi.IntInput `pulumi:"ownerGid"`
	// POSIX user ID to apply to the `rootDirectory`.
	OwnerUid pulumi.IntInput `pulumi:"ownerUid"`
	// POSIX permissions to apply to the RootDirectory, in the format of an octal number representing the file's mode bits.
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (AccessPointRootDirectoryCreationInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPointRootDirectoryCreationInfo)(nil)).Elem()
}

func (i AccessPointRootDirectoryCreationInfoArgs) ToAccessPointRootDirectoryCreationInfoOutput() AccessPointRootDirectoryCreationInfoOutput {
	return i.ToAccessPointRootDirectoryCreationInfoOutputWithContext(context.Background())
}

func (i AccessPointRootDirectoryCreationInfoArgs) ToAccessPointRootDirectoryCreationInfoOutputWithContext(ctx context.Context) AccessPointRootDirectoryCreationInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointRootDirectoryCreationInfoOutput)
}

func (i AccessPointRootDirectoryCreationInfoArgs) ToAccessPointRootDirectoryCreationInfoPtrOutput() AccessPointRootDirectoryCreationInfoPtrOutput {
	return i.ToAccessPointRootDirectoryCreationInfoPtrOutputWithContext(context.Background())
}

func (i AccessPointRootDirectoryCreationInfoArgs) ToAccessPointRootDirectoryCreationInfoPtrOutputWithContext(ctx context.Context) AccessPointRootDirectoryCreationInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointRootDirectoryCreationInfoOutput).ToAccessPointRootDirectoryCreationInfoPtrOutputWithContext(ctx)
}

// AccessPointRootDirectoryCreationInfoPtrInput is an input type that accepts AccessPointRootDirectoryCreationInfoArgs, AccessPointRootDirectoryCreationInfoPtr and AccessPointRootDirectoryCreationInfoPtrOutput values.
// You can construct a concrete instance of `AccessPointRootDirectoryCreationInfoPtrInput` via:
//
//          AccessPointRootDirectoryCreationInfoArgs{...}
//
//  or:
//
//          nil
type AccessPointRootDirectoryCreationInfoPtrInput interface {
	pulumi.Input

	ToAccessPointRootDirectoryCreationInfoPtrOutput() AccessPointRootDirectoryCreationInfoPtrOutput
	ToAccessPointRootDirectoryCreationInfoPtrOutputWithContext(context.Context) AccessPointRootDirectoryCreationInfoPtrOutput
}

type accessPointRootDirectoryCreationInfoPtrType AccessPointRootDirectoryCreationInfoArgs

func AccessPointRootDirectoryCreationInfoPtr(v *AccessPointRootDirectoryCreationInfoArgs) AccessPointRootDirectoryCreationInfoPtrInput {
	return (*accessPointRootDirectoryCreationInfoPtrType)(v)
}

func (*accessPointRootDirectoryCreationInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPointRootDirectoryCreationInfo)(nil)).Elem()
}

func (i *accessPointRootDirectoryCreationInfoPtrType) ToAccessPointRootDirectoryCreationInfoPtrOutput() AccessPointRootDirectoryCreationInfoPtrOutput {
	return i.ToAccessPointRootDirectoryCreationInfoPtrOutputWithContext(context.Background())
}

func (i *accessPointRootDirectoryCreationInfoPtrType) ToAccessPointRootDirectoryCreationInfoPtrOutputWithContext(ctx context.Context) AccessPointRootDirectoryCreationInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccessPointRootDirectoryCreationInfoPtrOutput)
}

type AccessPointRootDirectoryCreationInfoOutput struct{ *pulumi.OutputState }

func (AccessPointRootDirectoryCreationInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AccessPointRootDirectoryCreationInfo)(nil)).Elem()
}

func (o AccessPointRootDirectoryCreationInfoOutput) ToAccessPointRootDirectoryCreationInfoOutput() AccessPointRootDirectoryCreationInfoOutput {
	return o
}

func (o AccessPointRootDirectoryCreationInfoOutput) ToAccessPointRootDirectoryCreationInfoOutputWithContext(ctx context.Context) AccessPointRootDirectoryCreationInfoOutput {
	return o
}

func (o AccessPointRootDirectoryCreationInfoOutput) ToAccessPointRootDirectoryCreationInfoPtrOutput() AccessPointRootDirectoryCreationInfoPtrOutput {
	return o.ToAccessPointRootDirectoryCreationInfoPtrOutputWithContext(context.Background())
}

func (o AccessPointRootDirectoryCreationInfoOutput) ToAccessPointRootDirectoryCreationInfoPtrOutputWithContext(ctx context.Context) AccessPointRootDirectoryCreationInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AccessPointRootDirectoryCreationInfo) *AccessPointRootDirectoryCreationInfo {
		return &v
	}).(AccessPointRootDirectoryCreationInfoPtrOutput)
}

// POSIX group ID to apply to the `rootDirectory`.
func (o AccessPointRootDirectoryCreationInfoOutput) OwnerGid() pulumi.IntOutput {
	return o.ApplyT(func(v AccessPointRootDirectoryCreationInfo) int { return v.OwnerGid }).(pulumi.IntOutput)
}

// POSIX user ID to apply to the `rootDirectory`.
func (o AccessPointRootDirectoryCreationInfoOutput) OwnerUid() pulumi.IntOutput {
	return o.ApplyT(func(v AccessPointRootDirectoryCreationInfo) int { return v.OwnerUid }).(pulumi.IntOutput)
}

// POSIX permissions to apply to the RootDirectory, in the format of an octal number representing the file's mode bits.
func (o AccessPointRootDirectoryCreationInfoOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v AccessPointRootDirectoryCreationInfo) string { return v.Permissions }).(pulumi.StringOutput)
}

type AccessPointRootDirectoryCreationInfoPtrOutput struct{ *pulumi.OutputState }

func (AccessPointRootDirectoryCreationInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccessPointRootDirectoryCreationInfo)(nil)).Elem()
}

func (o AccessPointRootDirectoryCreationInfoPtrOutput) ToAccessPointRootDirectoryCreationInfoPtrOutput() AccessPointRootDirectoryCreationInfoPtrOutput {
	return o
}

func (o AccessPointRootDirectoryCreationInfoPtrOutput) ToAccessPointRootDirectoryCreationInfoPtrOutputWithContext(ctx context.Context) AccessPointRootDirectoryCreationInfoPtrOutput {
	return o
}

func (o AccessPointRootDirectoryCreationInfoPtrOutput) Elem() AccessPointRootDirectoryCreationInfoOutput {
	return o.ApplyT(func(v *AccessPointRootDirectoryCreationInfo) AccessPointRootDirectoryCreationInfo {
		if v != nil {
			return *v
		}
		var ret AccessPointRootDirectoryCreationInfo
		return ret
	}).(AccessPointRootDirectoryCreationInfoOutput)
}

// POSIX group ID to apply to the `rootDirectory`.
func (o AccessPointRootDirectoryCreationInfoPtrOutput) OwnerGid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccessPointRootDirectoryCreationInfo) *int {
		if v == nil {
			return nil
		}
		return &v.OwnerGid
	}).(pulumi.IntPtrOutput)
}

// POSIX user ID to apply to the `rootDirectory`.
func (o AccessPointRootDirectoryCreationInfoPtrOutput) OwnerUid() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccessPointRootDirectoryCreationInfo) *int {
		if v == nil {
			return nil
		}
		return &v.OwnerUid
	}).(pulumi.IntPtrOutput)
}

// POSIX permissions to apply to the RootDirectory, in the format of an octal number representing the file's mode bits.
func (o AccessPointRootDirectoryCreationInfoPtrOutput) Permissions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AccessPointRootDirectoryCreationInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Permissions
	}).(pulumi.StringPtrOutput)
}

type BackupPolicyBackupPolicy struct {
	// A status of the backup policy. Valid values: `ENABLED`, `DISABLED`.
	Status string `pulumi:"status"`
}

// BackupPolicyBackupPolicyInput is an input type that accepts BackupPolicyBackupPolicyArgs and BackupPolicyBackupPolicyOutput values.
// You can construct a concrete instance of `BackupPolicyBackupPolicyInput` via:
//
//          BackupPolicyBackupPolicyArgs{...}
type BackupPolicyBackupPolicyInput interface {
	pulumi.Input

	ToBackupPolicyBackupPolicyOutput() BackupPolicyBackupPolicyOutput
	ToBackupPolicyBackupPolicyOutputWithContext(context.Context) BackupPolicyBackupPolicyOutput
}

type BackupPolicyBackupPolicyArgs struct {
	// A status of the backup policy. Valid values: `ENABLED`, `DISABLED`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (BackupPolicyBackupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPolicyBackupPolicy)(nil)).Elem()
}

func (i BackupPolicyBackupPolicyArgs) ToBackupPolicyBackupPolicyOutput() BackupPolicyBackupPolicyOutput {
	return i.ToBackupPolicyBackupPolicyOutputWithContext(context.Background())
}

func (i BackupPolicyBackupPolicyArgs) ToBackupPolicyBackupPolicyOutputWithContext(ctx context.Context) BackupPolicyBackupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyBackupPolicyOutput)
}

func (i BackupPolicyBackupPolicyArgs) ToBackupPolicyBackupPolicyPtrOutput() BackupPolicyBackupPolicyPtrOutput {
	return i.ToBackupPolicyBackupPolicyPtrOutputWithContext(context.Background())
}

func (i BackupPolicyBackupPolicyArgs) ToBackupPolicyBackupPolicyPtrOutputWithContext(ctx context.Context) BackupPolicyBackupPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyBackupPolicyOutput).ToBackupPolicyBackupPolicyPtrOutputWithContext(ctx)
}

// BackupPolicyBackupPolicyPtrInput is an input type that accepts BackupPolicyBackupPolicyArgs, BackupPolicyBackupPolicyPtr and BackupPolicyBackupPolicyPtrOutput values.
// You can construct a concrete instance of `BackupPolicyBackupPolicyPtrInput` via:
//
//          BackupPolicyBackupPolicyArgs{...}
//
//  or:
//
//          nil
type BackupPolicyBackupPolicyPtrInput interface {
	pulumi.Input

	ToBackupPolicyBackupPolicyPtrOutput() BackupPolicyBackupPolicyPtrOutput
	ToBackupPolicyBackupPolicyPtrOutputWithContext(context.Context) BackupPolicyBackupPolicyPtrOutput
}

type backupPolicyBackupPolicyPtrType BackupPolicyBackupPolicyArgs

func BackupPolicyBackupPolicyPtr(v *BackupPolicyBackupPolicyArgs) BackupPolicyBackupPolicyPtrInput {
	return (*backupPolicyBackupPolicyPtrType)(v)
}

func (*backupPolicyBackupPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPolicyBackupPolicy)(nil)).Elem()
}

func (i *backupPolicyBackupPolicyPtrType) ToBackupPolicyBackupPolicyPtrOutput() BackupPolicyBackupPolicyPtrOutput {
	return i.ToBackupPolicyBackupPolicyPtrOutputWithContext(context.Background())
}

func (i *backupPolicyBackupPolicyPtrType) ToBackupPolicyBackupPolicyPtrOutputWithContext(ctx context.Context) BackupPolicyBackupPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BackupPolicyBackupPolicyPtrOutput)
}

type BackupPolicyBackupPolicyOutput struct{ *pulumi.OutputState }

func (BackupPolicyBackupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BackupPolicyBackupPolicy)(nil)).Elem()
}

func (o BackupPolicyBackupPolicyOutput) ToBackupPolicyBackupPolicyOutput() BackupPolicyBackupPolicyOutput {
	return o
}

func (o BackupPolicyBackupPolicyOutput) ToBackupPolicyBackupPolicyOutputWithContext(ctx context.Context) BackupPolicyBackupPolicyOutput {
	return o
}

func (o BackupPolicyBackupPolicyOutput) ToBackupPolicyBackupPolicyPtrOutput() BackupPolicyBackupPolicyPtrOutput {
	return o.ToBackupPolicyBackupPolicyPtrOutputWithContext(context.Background())
}

func (o BackupPolicyBackupPolicyOutput) ToBackupPolicyBackupPolicyPtrOutputWithContext(ctx context.Context) BackupPolicyBackupPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v BackupPolicyBackupPolicy) *BackupPolicyBackupPolicy {
		return &v
	}).(BackupPolicyBackupPolicyPtrOutput)
}

// A status of the backup policy. Valid values: `ENABLED`, `DISABLED`.
func (o BackupPolicyBackupPolicyOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v BackupPolicyBackupPolicy) string { return v.Status }).(pulumi.StringOutput)
}

type BackupPolicyBackupPolicyPtrOutput struct{ *pulumi.OutputState }

func (BackupPolicyBackupPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BackupPolicyBackupPolicy)(nil)).Elem()
}

func (o BackupPolicyBackupPolicyPtrOutput) ToBackupPolicyBackupPolicyPtrOutput() BackupPolicyBackupPolicyPtrOutput {
	return o
}

func (o BackupPolicyBackupPolicyPtrOutput) ToBackupPolicyBackupPolicyPtrOutputWithContext(ctx context.Context) BackupPolicyBackupPolicyPtrOutput {
	return o
}

func (o BackupPolicyBackupPolicyPtrOutput) Elem() BackupPolicyBackupPolicyOutput {
	return o.ApplyT(func(v *BackupPolicyBackupPolicy) BackupPolicyBackupPolicy {
		if v != nil {
			return *v
		}
		var ret BackupPolicyBackupPolicy
		return ret
	}).(BackupPolicyBackupPolicyOutput)
}

// A status of the backup policy. Valid values: `ENABLED`, `DISABLED`.
func (o BackupPolicyBackupPolicyPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BackupPolicyBackupPolicy) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

type FileSystemLifecyclePolicy struct {
	// Indicates how long it takes to transition files to the IA storage class. Valid values: `AFTER_7_DAYS`, `AFTER_14_DAYS`, `AFTER_30_DAYS`, `AFTER_60_DAYS`, or `AFTER_90_DAYS`.
	TransitionToIa *string `pulumi:"transitionToIa"`
	// Describes the policy used to transition a file from infequent access storage to primary storage. Valid values: `AFTER_1_ACCESS`.
	TransitionToPrimaryStorageClass *string `pulumi:"transitionToPrimaryStorageClass"`
}

// FileSystemLifecyclePolicyInput is an input type that accepts FileSystemLifecyclePolicyArgs and FileSystemLifecyclePolicyOutput values.
// You can construct a concrete instance of `FileSystemLifecyclePolicyInput` via:
//
//          FileSystemLifecyclePolicyArgs{...}
type FileSystemLifecyclePolicyInput interface {
	pulumi.Input

	ToFileSystemLifecyclePolicyOutput() FileSystemLifecyclePolicyOutput
	ToFileSystemLifecyclePolicyOutputWithContext(context.Context) FileSystemLifecyclePolicyOutput
}

type FileSystemLifecyclePolicyArgs struct {
	// Indicates how long it takes to transition files to the IA storage class. Valid values: `AFTER_7_DAYS`, `AFTER_14_DAYS`, `AFTER_30_DAYS`, `AFTER_60_DAYS`, or `AFTER_90_DAYS`.
	TransitionToIa pulumi.StringPtrInput `pulumi:"transitionToIa"`
	// Describes the policy used to transition a file from infequent access storage to primary storage. Valid values: `AFTER_1_ACCESS`.
	TransitionToPrimaryStorageClass pulumi.StringPtrInput `pulumi:"transitionToPrimaryStorageClass"`
}

func (FileSystemLifecyclePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemLifecyclePolicy)(nil)).Elem()
}

func (i FileSystemLifecyclePolicyArgs) ToFileSystemLifecyclePolicyOutput() FileSystemLifecyclePolicyOutput {
	return i.ToFileSystemLifecyclePolicyOutputWithContext(context.Background())
}

func (i FileSystemLifecyclePolicyArgs) ToFileSystemLifecyclePolicyOutputWithContext(ctx context.Context) FileSystemLifecyclePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemLifecyclePolicyOutput)
}

// FileSystemLifecyclePolicyArrayInput is an input type that accepts FileSystemLifecyclePolicyArray and FileSystemLifecyclePolicyArrayOutput values.
// You can construct a concrete instance of `FileSystemLifecyclePolicyArrayInput` via:
//
//          FileSystemLifecyclePolicyArray{ FileSystemLifecyclePolicyArgs{...} }
type FileSystemLifecyclePolicyArrayInput interface {
	pulumi.Input

	ToFileSystemLifecyclePolicyArrayOutput() FileSystemLifecyclePolicyArrayOutput
	ToFileSystemLifecyclePolicyArrayOutputWithContext(context.Context) FileSystemLifecyclePolicyArrayOutput
}

type FileSystemLifecyclePolicyArray []FileSystemLifecyclePolicyInput

func (FileSystemLifecyclePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileSystemLifecyclePolicy)(nil)).Elem()
}

func (i FileSystemLifecyclePolicyArray) ToFileSystemLifecyclePolicyArrayOutput() FileSystemLifecyclePolicyArrayOutput {
	return i.ToFileSystemLifecyclePolicyArrayOutputWithContext(context.Background())
}

func (i FileSystemLifecyclePolicyArray) ToFileSystemLifecyclePolicyArrayOutputWithContext(ctx context.Context) FileSystemLifecyclePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemLifecyclePolicyArrayOutput)
}

type FileSystemLifecyclePolicyOutput struct{ *pulumi.OutputState }

func (FileSystemLifecyclePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemLifecyclePolicy)(nil)).Elem()
}

func (o FileSystemLifecyclePolicyOutput) ToFileSystemLifecyclePolicyOutput() FileSystemLifecyclePolicyOutput {
	return o
}

func (o FileSystemLifecyclePolicyOutput) ToFileSystemLifecyclePolicyOutputWithContext(ctx context.Context) FileSystemLifecyclePolicyOutput {
	return o
}

// Indicates how long it takes to transition files to the IA storage class. Valid values: `AFTER_7_DAYS`, `AFTER_14_DAYS`, `AFTER_30_DAYS`, `AFTER_60_DAYS`, or `AFTER_90_DAYS`.
func (o FileSystemLifecyclePolicyOutput) TransitionToIa() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileSystemLifecyclePolicy) *string { return v.TransitionToIa }).(pulumi.StringPtrOutput)
}

// Describes the policy used to transition a file from infequent access storage to primary storage. Valid values: `AFTER_1_ACCESS`.
func (o FileSystemLifecyclePolicyOutput) TransitionToPrimaryStorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileSystemLifecyclePolicy) *string { return v.TransitionToPrimaryStorageClass }).(pulumi.StringPtrOutput)
}

type FileSystemLifecyclePolicyArrayOutput struct{ *pulumi.OutputState }

func (FileSystemLifecyclePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileSystemLifecyclePolicy)(nil)).Elem()
}

func (o FileSystemLifecyclePolicyArrayOutput) ToFileSystemLifecyclePolicyArrayOutput() FileSystemLifecyclePolicyArrayOutput {
	return o
}

func (o FileSystemLifecyclePolicyArrayOutput) ToFileSystemLifecyclePolicyArrayOutputWithContext(ctx context.Context) FileSystemLifecyclePolicyArrayOutput {
	return o
}

func (o FileSystemLifecyclePolicyArrayOutput) Index(i pulumi.IntInput) FileSystemLifecyclePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FileSystemLifecyclePolicy {
		return vs[0].([]FileSystemLifecyclePolicy)[vs[1].(int)]
	}).(FileSystemLifecyclePolicyOutput)
}

type FileSystemSizeInByte struct {
	// The latest known metered size (in bytes) of data stored in the file system.
	Value *int `pulumi:"value"`
	// The latest known metered size (in bytes) of data stored in the Infrequent Access storage class.
	ValueInIa *int `pulumi:"valueInIa"`
	// The latest known metered size (in bytes) of data stored in the Standard storage class.
	ValueInStandard *int `pulumi:"valueInStandard"`
}

// FileSystemSizeInByteInput is an input type that accepts FileSystemSizeInByteArgs and FileSystemSizeInByteOutput values.
// You can construct a concrete instance of `FileSystemSizeInByteInput` via:
//
//          FileSystemSizeInByteArgs{...}
type FileSystemSizeInByteInput interface {
	pulumi.Input

	ToFileSystemSizeInByteOutput() FileSystemSizeInByteOutput
	ToFileSystemSizeInByteOutputWithContext(context.Context) FileSystemSizeInByteOutput
}

type FileSystemSizeInByteArgs struct {
	// The latest known metered size (in bytes) of data stored in the file system.
	Value pulumi.IntPtrInput `pulumi:"value"`
	// The latest known metered size (in bytes) of data stored in the Infrequent Access storage class.
	ValueInIa pulumi.IntPtrInput `pulumi:"valueInIa"`
	// The latest known metered size (in bytes) of data stored in the Standard storage class.
	ValueInStandard pulumi.IntPtrInput `pulumi:"valueInStandard"`
}

func (FileSystemSizeInByteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemSizeInByte)(nil)).Elem()
}

func (i FileSystemSizeInByteArgs) ToFileSystemSizeInByteOutput() FileSystemSizeInByteOutput {
	return i.ToFileSystemSizeInByteOutputWithContext(context.Background())
}

func (i FileSystemSizeInByteArgs) ToFileSystemSizeInByteOutputWithContext(ctx context.Context) FileSystemSizeInByteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemSizeInByteOutput)
}

// FileSystemSizeInByteArrayInput is an input type that accepts FileSystemSizeInByteArray and FileSystemSizeInByteArrayOutput values.
// You can construct a concrete instance of `FileSystemSizeInByteArrayInput` via:
//
//          FileSystemSizeInByteArray{ FileSystemSizeInByteArgs{...} }
type FileSystemSizeInByteArrayInput interface {
	pulumi.Input

	ToFileSystemSizeInByteArrayOutput() FileSystemSizeInByteArrayOutput
	ToFileSystemSizeInByteArrayOutputWithContext(context.Context) FileSystemSizeInByteArrayOutput
}

type FileSystemSizeInByteArray []FileSystemSizeInByteInput

func (FileSystemSizeInByteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileSystemSizeInByte)(nil)).Elem()
}

func (i FileSystemSizeInByteArray) ToFileSystemSizeInByteArrayOutput() FileSystemSizeInByteArrayOutput {
	return i.ToFileSystemSizeInByteArrayOutputWithContext(context.Background())
}

func (i FileSystemSizeInByteArray) ToFileSystemSizeInByteArrayOutputWithContext(ctx context.Context) FileSystemSizeInByteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileSystemSizeInByteArrayOutput)
}

type FileSystemSizeInByteOutput struct{ *pulumi.OutputState }

func (FileSystemSizeInByteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileSystemSizeInByte)(nil)).Elem()
}

func (o FileSystemSizeInByteOutput) ToFileSystemSizeInByteOutput() FileSystemSizeInByteOutput {
	return o
}

func (o FileSystemSizeInByteOutput) ToFileSystemSizeInByteOutputWithContext(ctx context.Context) FileSystemSizeInByteOutput {
	return o
}

// The latest known metered size (in bytes) of data stored in the file system.
func (o FileSystemSizeInByteOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileSystemSizeInByte) *int { return v.Value }).(pulumi.IntPtrOutput)
}

// The latest known metered size (in bytes) of data stored in the Infrequent Access storage class.
func (o FileSystemSizeInByteOutput) ValueInIa() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileSystemSizeInByte) *int { return v.ValueInIa }).(pulumi.IntPtrOutput)
}

// The latest known metered size (in bytes) of data stored in the Standard storage class.
func (o FileSystemSizeInByteOutput) ValueInStandard() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileSystemSizeInByte) *int { return v.ValueInStandard }).(pulumi.IntPtrOutput)
}

type FileSystemSizeInByteArrayOutput struct{ *pulumi.OutputState }

func (FileSystemSizeInByteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileSystemSizeInByte)(nil)).Elem()
}

func (o FileSystemSizeInByteArrayOutput) ToFileSystemSizeInByteArrayOutput() FileSystemSizeInByteArrayOutput {
	return o
}

func (o FileSystemSizeInByteArrayOutput) ToFileSystemSizeInByteArrayOutputWithContext(ctx context.Context) FileSystemSizeInByteArrayOutput {
	return o
}

func (o FileSystemSizeInByteArrayOutput) Index(i pulumi.IntInput) FileSystemSizeInByteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FileSystemSizeInByte {
		return vs[0].([]FileSystemSizeInByte)[vs[1].(int)]
	}).(FileSystemSizeInByteOutput)
}

type ReplicationConfigurationDestination struct {
	// The availability zone in which the replica should be created. If specified, the replica will be created with One Zone storage. If omitted, regional storage will be used.
	AvailabilityZoneName *string `pulumi:"availabilityZoneName"`
	FileSystemId         *string `pulumi:"fileSystemId"`
	// The Key ID, ARN, alias, or alias ARN of the KMS key that should be used to encrypt the replica file system. If omitted, the default KMS key for EFS `/aws/elasticfilesystem` will be used.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The region in which the replica should be created.
	Region *string `pulumi:"region"`
	Status *string `pulumi:"status"`
}

// ReplicationConfigurationDestinationInput is an input type that accepts ReplicationConfigurationDestinationArgs and ReplicationConfigurationDestinationOutput values.
// You can construct a concrete instance of `ReplicationConfigurationDestinationInput` via:
//
//          ReplicationConfigurationDestinationArgs{...}
type ReplicationConfigurationDestinationInput interface {
	pulumi.Input

	ToReplicationConfigurationDestinationOutput() ReplicationConfigurationDestinationOutput
	ToReplicationConfigurationDestinationOutputWithContext(context.Context) ReplicationConfigurationDestinationOutput
}

type ReplicationConfigurationDestinationArgs struct {
	// The availability zone in which the replica should be created. If specified, the replica will be created with One Zone storage. If omitted, regional storage will be used.
	AvailabilityZoneName pulumi.StringPtrInput `pulumi:"availabilityZoneName"`
	FileSystemId         pulumi.StringPtrInput `pulumi:"fileSystemId"`
	// The Key ID, ARN, alias, or alias ARN of the KMS key that should be used to encrypt the replica file system. If omitted, the default KMS key for EFS `/aws/elasticfilesystem` will be used.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// The region in which the replica should be created.
	Region pulumi.StringPtrInput `pulumi:"region"`
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ReplicationConfigurationDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationConfigurationDestination)(nil)).Elem()
}

func (i ReplicationConfigurationDestinationArgs) ToReplicationConfigurationDestinationOutput() ReplicationConfigurationDestinationOutput {
	return i.ToReplicationConfigurationDestinationOutputWithContext(context.Background())
}

func (i ReplicationConfigurationDestinationArgs) ToReplicationConfigurationDestinationOutputWithContext(ctx context.Context) ReplicationConfigurationDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationConfigurationDestinationOutput)
}

func (i ReplicationConfigurationDestinationArgs) ToReplicationConfigurationDestinationPtrOutput() ReplicationConfigurationDestinationPtrOutput {
	return i.ToReplicationConfigurationDestinationPtrOutputWithContext(context.Background())
}

func (i ReplicationConfigurationDestinationArgs) ToReplicationConfigurationDestinationPtrOutputWithContext(ctx context.Context) ReplicationConfigurationDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationConfigurationDestinationOutput).ToReplicationConfigurationDestinationPtrOutputWithContext(ctx)
}

// ReplicationConfigurationDestinationPtrInput is an input type that accepts ReplicationConfigurationDestinationArgs, ReplicationConfigurationDestinationPtr and ReplicationConfigurationDestinationPtrOutput values.
// You can construct a concrete instance of `ReplicationConfigurationDestinationPtrInput` via:
//
//          ReplicationConfigurationDestinationArgs{...}
//
//  or:
//
//          nil
type ReplicationConfigurationDestinationPtrInput interface {
	pulumi.Input

	ToReplicationConfigurationDestinationPtrOutput() ReplicationConfigurationDestinationPtrOutput
	ToReplicationConfigurationDestinationPtrOutputWithContext(context.Context) ReplicationConfigurationDestinationPtrOutput
}

type replicationConfigurationDestinationPtrType ReplicationConfigurationDestinationArgs

func ReplicationConfigurationDestinationPtr(v *ReplicationConfigurationDestinationArgs) ReplicationConfigurationDestinationPtrInput {
	return (*replicationConfigurationDestinationPtrType)(v)
}

func (*replicationConfigurationDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationConfigurationDestination)(nil)).Elem()
}

func (i *replicationConfigurationDestinationPtrType) ToReplicationConfigurationDestinationPtrOutput() ReplicationConfigurationDestinationPtrOutput {
	return i.ToReplicationConfigurationDestinationPtrOutputWithContext(context.Background())
}

func (i *replicationConfigurationDestinationPtrType) ToReplicationConfigurationDestinationPtrOutputWithContext(ctx context.Context) ReplicationConfigurationDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationConfigurationDestinationPtrOutput)
}

type ReplicationConfigurationDestinationOutput struct{ *pulumi.OutputState }

func (ReplicationConfigurationDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicationConfigurationDestination)(nil)).Elem()
}

func (o ReplicationConfigurationDestinationOutput) ToReplicationConfigurationDestinationOutput() ReplicationConfigurationDestinationOutput {
	return o
}

func (o ReplicationConfigurationDestinationOutput) ToReplicationConfigurationDestinationOutputWithContext(ctx context.Context) ReplicationConfigurationDestinationOutput {
	return o
}

func (o ReplicationConfigurationDestinationOutput) ToReplicationConfigurationDestinationPtrOutput() ReplicationConfigurationDestinationPtrOutput {
	return o.ToReplicationConfigurationDestinationPtrOutputWithContext(context.Background())
}

func (o ReplicationConfigurationDestinationOutput) ToReplicationConfigurationDestinationPtrOutputWithContext(ctx context.Context) ReplicationConfigurationDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicationConfigurationDestination) *ReplicationConfigurationDestination {
		return &v
	}).(ReplicationConfigurationDestinationPtrOutput)
}

// The availability zone in which the replica should be created. If specified, the replica will be created with One Zone storage. If omitted, regional storage will be used.
func (o ReplicationConfigurationDestinationOutput) AvailabilityZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationConfigurationDestination) *string { return v.AvailabilityZoneName }).(pulumi.StringPtrOutput)
}

func (o ReplicationConfigurationDestinationOutput) FileSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationConfigurationDestination) *string { return v.FileSystemId }).(pulumi.StringPtrOutput)
}

// The Key ID, ARN, alias, or alias ARN of the KMS key that should be used to encrypt the replica file system. If omitted, the default KMS key for EFS `/aws/elasticfilesystem` will be used.
func (o ReplicationConfigurationDestinationOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationConfigurationDestination) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The region in which the replica should be created.
func (o ReplicationConfigurationDestinationOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationConfigurationDestination) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o ReplicationConfigurationDestinationOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicationConfigurationDestination) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ReplicationConfigurationDestinationPtrOutput struct{ *pulumi.OutputState }

func (ReplicationConfigurationDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationConfigurationDestination)(nil)).Elem()
}

func (o ReplicationConfigurationDestinationPtrOutput) ToReplicationConfigurationDestinationPtrOutput() ReplicationConfigurationDestinationPtrOutput {
	return o
}

func (o ReplicationConfigurationDestinationPtrOutput) ToReplicationConfigurationDestinationPtrOutputWithContext(ctx context.Context) ReplicationConfigurationDestinationPtrOutput {
	return o
}

func (o ReplicationConfigurationDestinationPtrOutput) Elem() ReplicationConfigurationDestinationOutput {
	return o.ApplyT(func(v *ReplicationConfigurationDestination) ReplicationConfigurationDestination {
		if v != nil {
			return *v
		}
		var ret ReplicationConfigurationDestination
		return ret
	}).(ReplicationConfigurationDestinationOutput)
}

// The availability zone in which the replica should be created. If specified, the replica will be created with One Zone storage. If omitted, regional storage will be used.
func (o ReplicationConfigurationDestinationPtrOutput) AvailabilityZoneName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationConfigurationDestination) *string {
		if v == nil {
			return nil
		}
		return v.AvailabilityZoneName
	}).(pulumi.StringPtrOutput)
}

func (o ReplicationConfigurationDestinationPtrOutput) FileSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationConfigurationDestination) *string {
		if v == nil {
			return nil
		}
		return v.FileSystemId
	}).(pulumi.StringPtrOutput)
}

// The Key ID, ARN, alias, or alias ARN of the KMS key that should be used to encrypt the replica file system. If omitted, the default KMS key for EFS `/aws/elasticfilesystem` will be used.
func (o ReplicationConfigurationDestinationPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationConfigurationDestination) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// The region in which the replica should be created.
func (o ReplicationConfigurationDestinationPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationConfigurationDestination) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o ReplicationConfigurationDestinationPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationConfigurationDestination) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type GetAccessPointPosixUser struct {
	// Group ID
	Gid int `pulumi:"gid"`
	// Secondary group IDs
	SecondaryGids []int `pulumi:"secondaryGids"`
	// User Id
	// * `rootDirectory`- Single element list containing information on the directory on the Amazon EFS file system that the access point provides access to.
	Uid int `pulumi:"uid"`
}

// GetAccessPointPosixUserInput is an input type that accepts GetAccessPointPosixUserArgs and GetAccessPointPosixUserOutput values.
// You can construct a concrete instance of `GetAccessPointPosixUserInput` via:
//
//          GetAccessPointPosixUserArgs{...}
type GetAccessPointPosixUserInput interface {
	pulumi.Input

	ToGetAccessPointPosixUserOutput() GetAccessPointPosixUserOutput
	ToGetAccessPointPosixUserOutputWithContext(context.Context) GetAccessPointPosixUserOutput
}

type GetAccessPointPosixUserArgs struct {
	// Group ID
	Gid pulumi.IntInput `pulumi:"gid"`
	// Secondary group IDs
	SecondaryGids pulumi.IntArrayInput `pulumi:"secondaryGids"`
	// User Id
	// * `rootDirectory`- Single element list containing information on the directory on the Amazon EFS file system that the access point provides access to.
	Uid pulumi.IntInput `pulumi:"uid"`
}

func (GetAccessPointPosixUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessPointPosixUser)(nil)).Elem()
}

func (i GetAccessPointPosixUserArgs) ToGetAccessPointPosixUserOutput() GetAccessPointPosixUserOutput {
	return i.ToGetAccessPointPosixUserOutputWithContext(context.Background())
}

func (i GetAccessPointPosixUserArgs) ToGetAccessPointPosixUserOutputWithContext(ctx context.Context) GetAccessPointPosixUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessPointPosixUserOutput)
}

// GetAccessPointPosixUserArrayInput is an input type that accepts GetAccessPointPosixUserArray and GetAccessPointPosixUserArrayOutput values.
// You can construct a concrete instance of `GetAccessPointPosixUserArrayInput` via:
//
//          GetAccessPointPosixUserArray{ GetAccessPointPosixUserArgs{...} }
type GetAccessPointPosixUserArrayInput interface {
	pulumi.Input

	ToGetAccessPointPosixUserArrayOutput() GetAccessPointPosixUserArrayOutput
	ToGetAccessPointPosixUserArrayOutputWithContext(context.Context) GetAccessPointPosixUserArrayOutput
}

type GetAccessPointPosixUserArray []GetAccessPointPosixUserInput

func (GetAccessPointPosixUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessPointPosixUser)(nil)).Elem()
}

func (i GetAccessPointPosixUserArray) ToGetAccessPointPosixUserArrayOutput() GetAccessPointPosixUserArrayOutput {
	return i.ToGetAccessPointPosixUserArrayOutputWithContext(context.Background())
}

func (i GetAccessPointPosixUserArray) ToGetAccessPointPosixUserArrayOutputWithContext(ctx context.Context) GetAccessPointPosixUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessPointPosixUserArrayOutput)
}

type GetAccessPointPosixUserOutput struct{ *pulumi.OutputState }

func (GetAccessPointPosixUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessPointPosixUser)(nil)).Elem()
}

func (o GetAccessPointPosixUserOutput) ToGetAccessPointPosixUserOutput() GetAccessPointPosixUserOutput {
	return o
}

func (o GetAccessPointPosixUserOutput) ToGetAccessPointPosixUserOutputWithContext(ctx context.Context) GetAccessPointPosixUserOutput {
	return o
}

// Group ID
func (o GetAccessPointPosixUserOutput) Gid() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccessPointPosixUser) int { return v.Gid }).(pulumi.IntOutput)
}

// Secondary group IDs
func (o GetAccessPointPosixUserOutput) SecondaryGids() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetAccessPointPosixUser) []int { return v.SecondaryGids }).(pulumi.IntArrayOutput)
}

// User Id
// * `rootDirectory`- Single element list containing information on the directory on the Amazon EFS file system that the access point provides access to.
func (o GetAccessPointPosixUserOutput) Uid() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccessPointPosixUser) int { return v.Uid }).(pulumi.IntOutput)
}

type GetAccessPointPosixUserArrayOutput struct{ *pulumi.OutputState }

func (GetAccessPointPosixUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessPointPosixUser)(nil)).Elem()
}

func (o GetAccessPointPosixUserArrayOutput) ToGetAccessPointPosixUserArrayOutput() GetAccessPointPosixUserArrayOutput {
	return o
}

func (o GetAccessPointPosixUserArrayOutput) ToGetAccessPointPosixUserArrayOutputWithContext(ctx context.Context) GetAccessPointPosixUserArrayOutput {
	return o
}

func (o GetAccessPointPosixUserArrayOutput) Index(i pulumi.IntInput) GetAccessPointPosixUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccessPointPosixUser {
		return vs[0].([]GetAccessPointPosixUser)[vs[1].(int)]
	}).(GetAccessPointPosixUserOutput)
}

type GetAccessPointRootDirectory struct {
	// Single element list containing information on the creation permissions of the directory
	CreationInfos []GetAccessPointRootDirectoryCreationInfo `pulumi:"creationInfos"`
	// Path exposed as the root directory
	Path string `pulumi:"path"`
}

// GetAccessPointRootDirectoryInput is an input type that accepts GetAccessPointRootDirectoryArgs and GetAccessPointRootDirectoryOutput values.
// You can construct a concrete instance of `GetAccessPointRootDirectoryInput` via:
//
//          GetAccessPointRootDirectoryArgs{...}
type GetAccessPointRootDirectoryInput interface {
	pulumi.Input

	ToGetAccessPointRootDirectoryOutput() GetAccessPointRootDirectoryOutput
	ToGetAccessPointRootDirectoryOutputWithContext(context.Context) GetAccessPointRootDirectoryOutput
}

type GetAccessPointRootDirectoryArgs struct {
	// Single element list containing information on the creation permissions of the directory
	CreationInfos GetAccessPointRootDirectoryCreationInfoArrayInput `pulumi:"creationInfos"`
	// Path exposed as the root directory
	Path pulumi.StringInput `pulumi:"path"`
}

func (GetAccessPointRootDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessPointRootDirectory)(nil)).Elem()
}

func (i GetAccessPointRootDirectoryArgs) ToGetAccessPointRootDirectoryOutput() GetAccessPointRootDirectoryOutput {
	return i.ToGetAccessPointRootDirectoryOutputWithContext(context.Background())
}

func (i GetAccessPointRootDirectoryArgs) ToGetAccessPointRootDirectoryOutputWithContext(ctx context.Context) GetAccessPointRootDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessPointRootDirectoryOutput)
}

// GetAccessPointRootDirectoryArrayInput is an input type that accepts GetAccessPointRootDirectoryArray and GetAccessPointRootDirectoryArrayOutput values.
// You can construct a concrete instance of `GetAccessPointRootDirectoryArrayInput` via:
//
//          GetAccessPointRootDirectoryArray{ GetAccessPointRootDirectoryArgs{...} }
type GetAccessPointRootDirectoryArrayInput interface {
	pulumi.Input

	ToGetAccessPointRootDirectoryArrayOutput() GetAccessPointRootDirectoryArrayOutput
	ToGetAccessPointRootDirectoryArrayOutputWithContext(context.Context) GetAccessPointRootDirectoryArrayOutput
}

type GetAccessPointRootDirectoryArray []GetAccessPointRootDirectoryInput

func (GetAccessPointRootDirectoryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessPointRootDirectory)(nil)).Elem()
}

func (i GetAccessPointRootDirectoryArray) ToGetAccessPointRootDirectoryArrayOutput() GetAccessPointRootDirectoryArrayOutput {
	return i.ToGetAccessPointRootDirectoryArrayOutputWithContext(context.Background())
}

func (i GetAccessPointRootDirectoryArray) ToGetAccessPointRootDirectoryArrayOutputWithContext(ctx context.Context) GetAccessPointRootDirectoryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessPointRootDirectoryArrayOutput)
}

type GetAccessPointRootDirectoryOutput struct{ *pulumi.OutputState }

func (GetAccessPointRootDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessPointRootDirectory)(nil)).Elem()
}

func (o GetAccessPointRootDirectoryOutput) ToGetAccessPointRootDirectoryOutput() GetAccessPointRootDirectoryOutput {
	return o
}

func (o GetAccessPointRootDirectoryOutput) ToGetAccessPointRootDirectoryOutputWithContext(ctx context.Context) GetAccessPointRootDirectoryOutput {
	return o
}

// Single element list containing information on the creation permissions of the directory
func (o GetAccessPointRootDirectoryOutput) CreationInfos() GetAccessPointRootDirectoryCreationInfoArrayOutput {
	return o.ApplyT(func(v GetAccessPointRootDirectory) []GetAccessPointRootDirectoryCreationInfo { return v.CreationInfos }).(GetAccessPointRootDirectoryCreationInfoArrayOutput)
}

// Path exposed as the root directory
func (o GetAccessPointRootDirectoryOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPointRootDirectory) string { return v.Path }).(pulumi.StringOutput)
}

type GetAccessPointRootDirectoryArrayOutput struct{ *pulumi.OutputState }

func (GetAccessPointRootDirectoryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessPointRootDirectory)(nil)).Elem()
}

func (o GetAccessPointRootDirectoryArrayOutput) ToGetAccessPointRootDirectoryArrayOutput() GetAccessPointRootDirectoryArrayOutput {
	return o
}

func (o GetAccessPointRootDirectoryArrayOutput) ToGetAccessPointRootDirectoryArrayOutputWithContext(ctx context.Context) GetAccessPointRootDirectoryArrayOutput {
	return o
}

func (o GetAccessPointRootDirectoryArrayOutput) Index(i pulumi.IntInput) GetAccessPointRootDirectoryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccessPointRootDirectory {
		return vs[0].([]GetAccessPointRootDirectory)[vs[1].(int)]
	}).(GetAccessPointRootDirectoryOutput)
}

type GetAccessPointRootDirectoryCreationInfo struct {
	// POSIX owner group ID
	OwnerGid int `pulumi:"ownerGid"`
	// POSIX owner user ID
	OwnerUid int `pulumi:"ownerUid"`
	// POSIX permissions mode
	Permissions string `pulumi:"permissions"`
}

// GetAccessPointRootDirectoryCreationInfoInput is an input type that accepts GetAccessPointRootDirectoryCreationInfoArgs and GetAccessPointRootDirectoryCreationInfoOutput values.
// You can construct a concrete instance of `GetAccessPointRootDirectoryCreationInfoInput` via:
//
//          GetAccessPointRootDirectoryCreationInfoArgs{...}
type GetAccessPointRootDirectoryCreationInfoInput interface {
	pulumi.Input

	ToGetAccessPointRootDirectoryCreationInfoOutput() GetAccessPointRootDirectoryCreationInfoOutput
	ToGetAccessPointRootDirectoryCreationInfoOutputWithContext(context.Context) GetAccessPointRootDirectoryCreationInfoOutput
}

type GetAccessPointRootDirectoryCreationInfoArgs struct {
	// POSIX owner group ID
	OwnerGid pulumi.IntInput `pulumi:"ownerGid"`
	// POSIX owner user ID
	OwnerUid pulumi.IntInput `pulumi:"ownerUid"`
	// POSIX permissions mode
	Permissions pulumi.StringInput `pulumi:"permissions"`
}

func (GetAccessPointRootDirectoryCreationInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessPointRootDirectoryCreationInfo)(nil)).Elem()
}

func (i GetAccessPointRootDirectoryCreationInfoArgs) ToGetAccessPointRootDirectoryCreationInfoOutput() GetAccessPointRootDirectoryCreationInfoOutput {
	return i.ToGetAccessPointRootDirectoryCreationInfoOutputWithContext(context.Background())
}

func (i GetAccessPointRootDirectoryCreationInfoArgs) ToGetAccessPointRootDirectoryCreationInfoOutputWithContext(ctx context.Context) GetAccessPointRootDirectoryCreationInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessPointRootDirectoryCreationInfoOutput)
}

// GetAccessPointRootDirectoryCreationInfoArrayInput is an input type that accepts GetAccessPointRootDirectoryCreationInfoArray and GetAccessPointRootDirectoryCreationInfoArrayOutput values.
// You can construct a concrete instance of `GetAccessPointRootDirectoryCreationInfoArrayInput` via:
//
//          GetAccessPointRootDirectoryCreationInfoArray{ GetAccessPointRootDirectoryCreationInfoArgs{...} }
type GetAccessPointRootDirectoryCreationInfoArrayInput interface {
	pulumi.Input

	ToGetAccessPointRootDirectoryCreationInfoArrayOutput() GetAccessPointRootDirectoryCreationInfoArrayOutput
	ToGetAccessPointRootDirectoryCreationInfoArrayOutputWithContext(context.Context) GetAccessPointRootDirectoryCreationInfoArrayOutput
}

type GetAccessPointRootDirectoryCreationInfoArray []GetAccessPointRootDirectoryCreationInfoInput

func (GetAccessPointRootDirectoryCreationInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessPointRootDirectoryCreationInfo)(nil)).Elem()
}

func (i GetAccessPointRootDirectoryCreationInfoArray) ToGetAccessPointRootDirectoryCreationInfoArrayOutput() GetAccessPointRootDirectoryCreationInfoArrayOutput {
	return i.ToGetAccessPointRootDirectoryCreationInfoArrayOutputWithContext(context.Background())
}

func (i GetAccessPointRootDirectoryCreationInfoArray) ToGetAccessPointRootDirectoryCreationInfoArrayOutputWithContext(ctx context.Context) GetAccessPointRootDirectoryCreationInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAccessPointRootDirectoryCreationInfoArrayOutput)
}

type GetAccessPointRootDirectoryCreationInfoOutput struct{ *pulumi.OutputState }

func (GetAccessPointRootDirectoryCreationInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccessPointRootDirectoryCreationInfo)(nil)).Elem()
}

func (o GetAccessPointRootDirectoryCreationInfoOutput) ToGetAccessPointRootDirectoryCreationInfoOutput() GetAccessPointRootDirectoryCreationInfoOutput {
	return o
}

func (o GetAccessPointRootDirectoryCreationInfoOutput) ToGetAccessPointRootDirectoryCreationInfoOutputWithContext(ctx context.Context) GetAccessPointRootDirectoryCreationInfoOutput {
	return o
}

// POSIX owner group ID
func (o GetAccessPointRootDirectoryCreationInfoOutput) OwnerGid() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccessPointRootDirectoryCreationInfo) int { return v.OwnerGid }).(pulumi.IntOutput)
}

// POSIX owner user ID
func (o GetAccessPointRootDirectoryCreationInfoOutput) OwnerUid() pulumi.IntOutput {
	return o.ApplyT(func(v GetAccessPointRootDirectoryCreationInfo) int { return v.OwnerUid }).(pulumi.IntOutput)
}

// POSIX permissions mode
func (o GetAccessPointRootDirectoryCreationInfoOutput) Permissions() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccessPointRootDirectoryCreationInfo) string { return v.Permissions }).(pulumi.StringOutput)
}

type GetAccessPointRootDirectoryCreationInfoArrayOutput struct{ *pulumi.OutputState }

func (GetAccessPointRootDirectoryCreationInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAccessPointRootDirectoryCreationInfo)(nil)).Elem()
}

func (o GetAccessPointRootDirectoryCreationInfoArrayOutput) ToGetAccessPointRootDirectoryCreationInfoArrayOutput() GetAccessPointRootDirectoryCreationInfoArrayOutput {
	return o
}

func (o GetAccessPointRootDirectoryCreationInfoArrayOutput) ToGetAccessPointRootDirectoryCreationInfoArrayOutputWithContext(ctx context.Context) GetAccessPointRootDirectoryCreationInfoArrayOutput {
	return o
}

func (o GetAccessPointRootDirectoryCreationInfoArrayOutput) Index(i pulumi.IntInput) GetAccessPointRootDirectoryCreationInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAccessPointRootDirectoryCreationInfo {
		return vs[0].([]GetAccessPointRootDirectoryCreationInfo)[vs[1].(int)]
	}).(GetAccessPointRootDirectoryCreationInfoOutput)
}

type GetFileSystemLifecyclePolicy struct {
	TransitionToIa                  string `pulumi:"transitionToIa"`
	TransitionToPrimaryStorageClass string `pulumi:"transitionToPrimaryStorageClass"`
}

// GetFileSystemLifecyclePolicyInput is an input type that accepts GetFileSystemLifecyclePolicyArgs and GetFileSystemLifecyclePolicyOutput values.
// You can construct a concrete instance of `GetFileSystemLifecyclePolicyInput` via:
//
//          GetFileSystemLifecyclePolicyArgs{...}
type GetFileSystemLifecyclePolicyInput interface {
	pulumi.Input

	ToGetFileSystemLifecyclePolicyOutput() GetFileSystemLifecyclePolicyOutput
	ToGetFileSystemLifecyclePolicyOutputWithContext(context.Context) GetFileSystemLifecyclePolicyOutput
}

type GetFileSystemLifecyclePolicyArgs struct {
	TransitionToIa                  pulumi.StringInput `pulumi:"transitionToIa"`
	TransitionToPrimaryStorageClass pulumi.StringInput `pulumi:"transitionToPrimaryStorageClass"`
}

func (GetFileSystemLifecyclePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileSystemLifecyclePolicy)(nil)).Elem()
}

func (i GetFileSystemLifecyclePolicyArgs) ToGetFileSystemLifecyclePolicyOutput() GetFileSystemLifecyclePolicyOutput {
	return i.ToGetFileSystemLifecyclePolicyOutputWithContext(context.Background())
}

func (i GetFileSystemLifecyclePolicyArgs) ToGetFileSystemLifecyclePolicyOutputWithContext(ctx context.Context) GetFileSystemLifecyclePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFileSystemLifecyclePolicyOutput)
}

type GetFileSystemLifecyclePolicyOutput struct{ *pulumi.OutputState }

func (GetFileSystemLifecyclePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFileSystemLifecyclePolicy)(nil)).Elem()
}

func (o GetFileSystemLifecyclePolicyOutput) ToGetFileSystemLifecyclePolicyOutput() GetFileSystemLifecyclePolicyOutput {
	return o
}

func (o GetFileSystemLifecyclePolicyOutput) ToGetFileSystemLifecyclePolicyOutputWithContext(ctx context.Context) GetFileSystemLifecyclePolicyOutput {
	return o
}

func (o GetFileSystemLifecyclePolicyOutput) TransitionToIa() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemLifecyclePolicy) string { return v.TransitionToIa }).(pulumi.StringOutput)
}

func (o GetFileSystemLifecyclePolicyOutput) TransitionToPrimaryStorageClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetFileSystemLifecyclePolicy) string { return v.TransitionToPrimaryStorageClass }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPointPosixUserInput)(nil)).Elem(), AccessPointPosixUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPointPosixUserPtrInput)(nil)).Elem(), AccessPointPosixUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPointRootDirectoryInput)(nil)).Elem(), AccessPointRootDirectoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPointRootDirectoryPtrInput)(nil)).Elem(), AccessPointRootDirectoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPointRootDirectoryCreationInfoInput)(nil)).Elem(), AccessPointRootDirectoryCreationInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccessPointRootDirectoryCreationInfoPtrInput)(nil)).Elem(), AccessPointRootDirectoryCreationInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupPolicyBackupPolicyInput)(nil)).Elem(), BackupPolicyBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BackupPolicyBackupPolicyPtrInput)(nil)).Elem(), BackupPolicyBackupPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileSystemLifecyclePolicyInput)(nil)).Elem(), FileSystemLifecyclePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileSystemLifecyclePolicyArrayInput)(nil)).Elem(), FileSystemLifecyclePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileSystemSizeInByteInput)(nil)).Elem(), FileSystemSizeInByteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileSystemSizeInByteArrayInput)(nil)).Elem(), FileSystemSizeInByteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationConfigurationDestinationInput)(nil)).Elem(), ReplicationConfigurationDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationConfigurationDestinationPtrInput)(nil)).Elem(), ReplicationConfigurationDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessPointPosixUserInput)(nil)).Elem(), GetAccessPointPosixUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessPointPosixUserArrayInput)(nil)).Elem(), GetAccessPointPosixUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessPointRootDirectoryInput)(nil)).Elem(), GetAccessPointRootDirectoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessPointRootDirectoryArrayInput)(nil)).Elem(), GetAccessPointRootDirectoryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessPointRootDirectoryCreationInfoInput)(nil)).Elem(), GetAccessPointRootDirectoryCreationInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAccessPointRootDirectoryCreationInfoArrayInput)(nil)).Elem(), GetAccessPointRootDirectoryCreationInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFileSystemLifecyclePolicyInput)(nil)).Elem(), GetFileSystemLifecyclePolicyArgs{})
	pulumi.RegisterOutputType(AccessPointPosixUserOutput{})
	pulumi.RegisterOutputType(AccessPointPosixUserPtrOutput{})
	pulumi.RegisterOutputType(AccessPointRootDirectoryOutput{})
	pulumi.RegisterOutputType(AccessPointRootDirectoryPtrOutput{})
	pulumi.RegisterOutputType(AccessPointRootDirectoryCreationInfoOutput{})
	pulumi.RegisterOutputType(AccessPointRootDirectoryCreationInfoPtrOutput{})
	pulumi.RegisterOutputType(BackupPolicyBackupPolicyOutput{})
	pulumi.RegisterOutputType(BackupPolicyBackupPolicyPtrOutput{})
	pulumi.RegisterOutputType(FileSystemLifecyclePolicyOutput{})
	pulumi.RegisterOutputType(FileSystemLifecyclePolicyArrayOutput{})
	pulumi.RegisterOutputType(FileSystemSizeInByteOutput{})
	pulumi.RegisterOutputType(FileSystemSizeInByteArrayOutput{})
	pulumi.RegisterOutputType(ReplicationConfigurationDestinationOutput{})
	pulumi.RegisterOutputType(ReplicationConfigurationDestinationPtrOutput{})
	pulumi.RegisterOutputType(GetAccessPointPosixUserOutput{})
	pulumi.RegisterOutputType(GetAccessPointPosixUserArrayOutput{})
	pulumi.RegisterOutputType(GetAccessPointRootDirectoryOutput{})
	pulumi.RegisterOutputType(GetAccessPointRootDirectoryArrayOutput{})
	pulumi.RegisterOutputType(GetAccessPointRootDirectoryCreationInfoOutput{})
	pulumi.RegisterOutputType(GetAccessPointRootDirectoryCreationInfoArrayOutput{})
	pulumi.RegisterOutputType(GetFileSystemLifecyclePolicyOutput{})
}
