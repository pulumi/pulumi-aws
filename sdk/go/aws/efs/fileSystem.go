// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package efs

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an Elastic File System (EFS) resource.
type FileSystem struct {
	s *pulumi.ResourceState
}

// NewFileSystem registers a new resource with the given unique name, arguments, and options.
func NewFileSystem(ctx *pulumi.Context,
	name string, args *FileSystemArgs, opts ...pulumi.ResourceOpt) (*FileSystem, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["creationToken"] = nil
		inputs["encrypted"] = nil
		inputs["kmsKeyId"] = nil
		inputs["performanceMode"] = nil
		inputs["referenceName"] = nil
		inputs["tags"] = nil
	} else {
		inputs["creationToken"] = args.CreationToken
		inputs["encrypted"] = args.Encrypted
		inputs["kmsKeyId"] = args.KmsKeyId
		inputs["performanceMode"] = args.PerformanceMode
		inputs["referenceName"] = args.ReferenceName
		inputs["tags"] = args.Tags
	}
	inputs["dnsName"] = nil
	s, err := ctx.RegisterResource("aws:efs/fileSystem:FileSystem", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &FileSystem{s: s}, nil
}

// GetFileSystem gets an existing FileSystem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFileSystem(ctx *pulumi.Context,
	name string, id pulumi.ID, state *FileSystemState, opts ...pulumi.ResourceOpt) (*FileSystem, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["creationToken"] = state.CreationToken
		inputs["dnsName"] = state.DnsName
		inputs["encrypted"] = state.Encrypted
		inputs["kmsKeyId"] = state.KmsKeyId
		inputs["performanceMode"] = state.PerformanceMode
		inputs["referenceName"] = state.ReferenceName
		inputs["tags"] = state.Tags
	}
	s, err := ctx.ReadResource("aws:efs/fileSystem:FileSystem", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &FileSystem{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *FileSystem) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *FileSystem) ID() *pulumi.IDOutput {
	return r.s.ID
}

// A unique name (a maximum of 64 characters are allowed)
// used as reference when creating the Elastic File System to ensure idempotent file
// system creation. By default generated by Terraform. See [Elastic File System]
// (http://docs.aws.amazon.com/efs/latest/ug/) user guide for more information.
func (r *FileSystem) CreationToken() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["creationToken"])
}

// The DNS name for the filesystem per [documented convention](http://docs.aws.amazon.com/efs/latest/ug/mounting-fs-mount-cmd-dns-name.html).
func (r *FileSystem) DnsName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["dnsName"])
}

// If true, the disk will be encrypted.
func (r *FileSystem) Encrypted() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["encrypted"])
}

// The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.
func (r *FileSystem) KmsKeyId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["kmsKeyId"])
}

// The file system performance mode. Can be either
// `"generalPurpose"` or `"maxIO"` (Default: `"generalPurpose"`).
func (r *FileSystem) PerformanceMode() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["performanceMode"])
}

// **DEPRECATED** (Optional) A reference name used when creating the
// `Creation Token` which Amazon EFS uses to ensure idempotent file system creation. By
// default generated by Terraform.
func (r *FileSystem) ReferenceName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["referenceName"])
}

// A mapping of tags to assign to the file system.
func (r *FileSystem) Tags() *pulumi.MapOutput {
	return (*pulumi.MapOutput)(r.s.State["tags"])
}

// Input properties used for looking up and filtering FileSystem resources.
type FileSystemState struct {
	// A unique name (a maximum of 64 characters are allowed)
	// used as reference when creating the Elastic File System to ensure idempotent file
	// system creation. By default generated by Terraform. See [Elastic File System]
	// (http://docs.aws.amazon.com/efs/latest/ug/) user guide for more information.
	CreationToken interface{}
	// The DNS name for the filesystem per [documented convention](http://docs.aws.amazon.com/efs/latest/ug/mounting-fs-mount-cmd-dns-name.html).
	DnsName interface{}
	// If true, the disk will be encrypted.
	Encrypted interface{}
	// The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.
	KmsKeyId interface{}
	// The file system performance mode. Can be either
	// `"generalPurpose"` or `"maxIO"` (Default: `"generalPurpose"`).
	PerformanceMode interface{}
	// **DEPRECATED** (Optional) A reference name used when creating the
	// `Creation Token` which Amazon EFS uses to ensure idempotent file system creation. By
	// default generated by Terraform.
	ReferenceName interface{}
	// A mapping of tags to assign to the file system.
	Tags interface{}
}

// The set of arguments for constructing a FileSystem resource.
type FileSystemArgs struct {
	// A unique name (a maximum of 64 characters are allowed)
	// used as reference when creating the Elastic File System to ensure idempotent file
	// system creation. By default generated by Terraform. See [Elastic File System]
	// (http://docs.aws.amazon.com/efs/latest/ug/) user guide for more information.
	CreationToken interface{}
	// If true, the disk will be encrypted.
	Encrypted interface{}
	// The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.
	KmsKeyId interface{}
	// The file system performance mode. Can be either
	// `"generalPurpose"` or `"maxIO"` (Default: `"generalPurpose"`).
	PerformanceMode interface{}
	// **DEPRECATED** (Optional) A reference name used when creating the
	// `Creation Token` which Amazon EFS uses to ensure idempotent file system creation. By
	// default generated by Terraform.
	ReferenceName interface{}
	// A mapping of tags to assign to the file system.
	Tags interface{}
}
