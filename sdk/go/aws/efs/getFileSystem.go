// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package efs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupFileSystem(ctx *pulumi.Context, args *LookupFileSystemArgs, opts ...pulumi.InvokeOption) (*LookupFileSystemResult, error) {
	var rv LookupFileSystemResult
	err := ctx.Invoke("aws:efs/getFileSystem:getFileSystem", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFileSystem.
type LookupFileSystemArgs struct {
	CreationToken *string           `pulumi:"creationToken"`
	FileSystemId  *string           `pulumi:"fileSystemId"`
	Tags          map[string]string `pulumi:"tags"`
}

// A collection of values returned by getFileSystem.
type LookupFileSystemResult struct {
	Arn                  string `pulumi:"arn"`
	AvailabilityZoneId   string `pulumi:"availabilityZoneId"`
	AvailabilityZoneName string `pulumi:"availabilityZoneName"`
	CreationToken        string `pulumi:"creationToken"`
	DnsName              string `pulumi:"dnsName"`
	Encrypted            bool   `pulumi:"encrypted"`
	FileSystemId         string `pulumi:"fileSystemId"`
	// The provider-assigned unique ID for this managed resource.
	Id                           string                       `pulumi:"id"`
	KmsKeyId                     string                       `pulumi:"kmsKeyId"`
	LifecyclePolicy              GetFileSystemLifecyclePolicy `pulumi:"lifecyclePolicy"`
	PerformanceMode              string                       `pulumi:"performanceMode"`
	ProvisionedThroughputInMibps float64                      `pulumi:"provisionedThroughputInMibps"`
	SizeInBytes                  int                          `pulumi:"sizeInBytes"`
	Tags                         map[string]string            `pulumi:"tags"`
	ThroughputMode               string                       `pulumi:"throughputMode"`
}

func LookupFileSystemOutput(ctx *pulumi.Context, args LookupFileSystemOutputArgs, opts ...pulumi.InvokeOption) LookupFileSystemResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupFileSystemResult, error) {
			args := v.(LookupFileSystemArgs)
			r, err := LookupFileSystem(ctx, &args, opts...)
			var s LookupFileSystemResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupFileSystemResultOutput)
}

// A collection of arguments for invoking getFileSystem.
type LookupFileSystemOutputArgs struct {
	CreationToken pulumi.StringPtrInput `pulumi:"creationToken"`
	FileSystemId  pulumi.StringPtrInput `pulumi:"fileSystemId"`
	Tags          pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupFileSystemOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFileSystemArgs)(nil)).Elem()
}

// A collection of values returned by getFileSystem.
type LookupFileSystemResultOutput struct{ *pulumi.OutputState }

func (LookupFileSystemResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupFileSystemResult)(nil)).Elem()
}

func (o LookupFileSystemResultOutput) ToLookupFileSystemResultOutput() LookupFileSystemResultOutput {
	return o
}

func (o LookupFileSystemResultOutput) ToLookupFileSystemResultOutputWithContext(ctx context.Context) LookupFileSystemResultOutput {
	return o
}

func (o LookupFileSystemResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFileSystemResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupFileSystemResultOutput) AvailabilityZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFileSystemResult) string { return v.AvailabilityZoneId }).(pulumi.StringOutput)
}

func (o LookupFileSystemResultOutput) AvailabilityZoneName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFileSystemResult) string { return v.AvailabilityZoneName }).(pulumi.StringOutput)
}

func (o LookupFileSystemResultOutput) CreationToken() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFileSystemResult) string { return v.CreationToken }).(pulumi.StringOutput)
}

func (o LookupFileSystemResultOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFileSystemResult) string { return v.DnsName }).(pulumi.StringOutput)
}

func (o LookupFileSystemResultOutput) Encrypted() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupFileSystemResult) bool { return v.Encrypted }).(pulumi.BoolOutput)
}

func (o LookupFileSystemResultOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFileSystemResult) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupFileSystemResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFileSystemResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupFileSystemResultOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFileSystemResult) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

func (o LookupFileSystemResultOutput) LifecyclePolicy() GetFileSystemLifecyclePolicyOutput {
	return o.ApplyT(func(v LookupFileSystemResult) GetFileSystemLifecyclePolicy { return v.LifecyclePolicy }).(GetFileSystemLifecyclePolicyOutput)
}

func (o LookupFileSystemResultOutput) PerformanceMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFileSystemResult) string { return v.PerformanceMode }).(pulumi.StringOutput)
}

func (o LookupFileSystemResultOutput) ProvisionedThroughputInMibps() pulumi.Float64Output {
	return o.ApplyT(func(v LookupFileSystemResult) float64 { return v.ProvisionedThroughputInMibps }).(pulumi.Float64Output)
}

func (o LookupFileSystemResultOutput) SizeInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v LookupFileSystemResult) int { return v.SizeInBytes }).(pulumi.IntOutput)
}

func (o LookupFileSystemResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupFileSystemResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupFileSystemResultOutput) ThroughputMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupFileSystemResult) string { return v.ThroughputMode }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupFileSystemResultOutput{})
}
