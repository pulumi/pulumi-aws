// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package efs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupAccessPoint(ctx *pulumi.Context, args *LookupAccessPointArgs, opts ...pulumi.InvokeOption) (*LookupAccessPointResult, error) {
	var rv LookupAccessPointResult
	err := ctx.Invoke("aws:efs/getAccessPoint:getAccessPoint", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAccessPoint.
type LookupAccessPointArgs struct {
	AccessPointId string            `pulumi:"accessPointId"`
	Tags          map[string]string `pulumi:"tags"`
}

// A collection of values returned by getAccessPoint.
type LookupAccessPointResult struct {
	AccessPointId string `pulumi:"accessPointId"`
	Arn           string `pulumi:"arn"`
	FileSystemArn string `pulumi:"fileSystemArn"`
	FileSystemId  string `pulumi:"fileSystemId"`
	// The provider-assigned unique ID for this managed resource.
	Id              string                        `pulumi:"id"`
	OwnerId         string                        `pulumi:"ownerId"`
	PosixUsers      []GetAccessPointPosixUser     `pulumi:"posixUsers"`
	RootDirectories []GetAccessPointRootDirectory `pulumi:"rootDirectories"`
	Tags            map[string]string             `pulumi:"tags"`
}

func LookupAccessPointOutput(ctx *pulumi.Context, args LookupAccessPointOutputArgs, opts ...pulumi.InvokeOption) LookupAccessPointResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupAccessPointResult, error) {
			args := v.(LookupAccessPointArgs)
			r, err := LookupAccessPoint(ctx, &args, opts...)
			var s LookupAccessPointResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupAccessPointResultOutput)
}

// A collection of arguments for invoking getAccessPoint.
type LookupAccessPointOutputArgs struct {
	AccessPointId pulumi.StringInput    `pulumi:"accessPointId"`
	Tags          pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupAccessPointOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccessPointArgs)(nil)).Elem()
}

// A collection of values returned by getAccessPoint.
type LookupAccessPointResultOutput struct{ *pulumi.OutputState }

func (LookupAccessPointResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupAccessPointResult)(nil)).Elem()
}

func (o LookupAccessPointResultOutput) ToLookupAccessPointResultOutput() LookupAccessPointResultOutput {
	return o
}

func (o LookupAccessPointResultOutput) ToLookupAccessPointResultOutputWithContext(ctx context.Context) LookupAccessPointResultOutput {
	return o
}

func (o LookupAccessPointResultOutput) AccessPointId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessPointResult) string { return v.AccessPointId }).(pulumi.StringOutput)
}

func (o LookupAccessPointResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessPointResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupAccessPointResultOutput) FileSystemArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessPointResult) string { return v.FileSystemArn }).(pulumi.StringOutput)
}

func (o LookupAccessPointResultOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessPointResult) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupAccessPointResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessPointResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupAccessPointResultOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupAccessPointResult) string { return v.OwnerId }).(pulumi.StringOutput)
}

func (o LookupAccessPointResultOutput) PosixUsers() GetAccessPointPosixUserArrayOutput {
	return o.ApplyT(func(v LookupAccessPointResult) []GetAccessPointPosixUser { return v.PosixUsers }).(GetAccessPointPosixUserArrayOutput)
}

func (o LookupAccessPointResultOutput) RootDirectories() GetAccessPointRootDirectoryArrayOutput {
	return o.ApplyT(func(v LookupAccessPointResult) []GetAccessPointRootDirectory { return v.RootDirectories }).(GetAccessPointRootDirectoryArrayOutput)
}

func (o LookupAccessPointResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupAccessPointResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupAccessPointResultOutput{})
}
