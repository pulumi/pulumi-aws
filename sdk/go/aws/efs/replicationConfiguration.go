// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package efs

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ReplicationConfiguration struct {
	pulumi.CustomResourceState

	CreationTime                pulumi.StringOutput                       `pulumi:"creationTime"`
	Destination                 ReplicationConfigurationDestinationOutput `pulumi:"destination"`
	OriginalSourceFileSystemArn pulumi.StringOutput                       `pulumi:"originalSourceFileSystemArn"`
	SourceFileSystemArn         pulumi.StringOutput                       `pulumi:"sourceFileSystemArn"`
	SourceFileSystemId          pulumi.StringOutput                       `pulumi:"sourceFileSystemId"`
	SourceFileSystemRegion      pulumi.StringOutput                       `pulumi:"sourceFileSystemRegion"`
}

// NewReplicationConfiguration registers a new resource with the given unique name, arguments, and options.
func NewReplicationConfiguration(ctx *pulumi.Context,
	name string, args *ReplicationConfigurationArgs, opts ...pulumi.ResourceOption) (*ReplicationConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Destination == nil {
		return nil, errors.New("invalid value for required argument 'Destination'")
	}
	if args.SourceFileSystemId == nil {
		return nil, errors.New("invalid value for required argument 'SourceFileSystemId'")
	}
	var resource ReplicationConfiguration
	err := ctx.RegisterResource("aws:efs/replicationConfiguration:ReplicationConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReplicationConfiguration gets an existing ReplicationConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReplicationConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReplicationConfigurationState, opts ...pulumi.ResourceOption) (*ReplicationConfiguration, error) {
	var resource ReplicationConfiguration
	err := ctx.ReadResource("aws:efs/replicationConfiguration:ReplicationConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReplicationConfiguration resources.
type replicationConfigurationState struct {
	CreationTime                *string                              `pulumi:"creationTime"`
	Destination                 *ReplicationConfigurationDestination `pulumi:"destination"`
	OriginalSourceFileSystemArn *string                              `pulumi:"originalSourceFileSystemArn"`
	SourceFileSystemArn         *string                              `pulumi:"sourceFileSystemArn"`
	SourceFileSystemId          *string                              `pulumi:"sourceFileSystemId"`
	SourceFileSystemRegion      *string                              `pulumi:"sourceFileSystemRegion"`
}

type ReplicationConfigurationState struct {
	CreationTime                pulumi.StringPtrInput
	Destination                 ReplicationConfigurationDestinationPtrInput
	OriginalSourceFileSystemArn pulumi.StringPtrInput
	SourceFileSystemArn         pulumi.StringPtrInput
	SourceFileSystemId          pulumi.StringPtrInput
	SourceFileSystemRegion      pulumi.StringPtrInput
}

func (ReplicationConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*replicationConfigurationState)(nil)).Elem()
}

type replicationConfigurationArgs struct {
	Destination        ReplicationConfigurationDestination `pulumi:"destination"`
	SourceFileSystemId string                              `pulumi:"sourceFileSystemId"`
}

// The set of arguments for constructing a ReplicationConfiguration resource.
type ReplicationConfigurationArgs struct {
	Destination        ReplicationConfigurationDestinationInput
	SourceFileSystemId pulumi.StringInput
}

func (ReplicationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*replicationConfigurationArgs)(nil)).Elem()
}

type ReplicationConfigurationInput interface {
	pulumi.Input

	ToReplicationConfigurationOutput() ReplicationConfigurationOutput
	ToReplicationConfigurationOutputWithContext(ctx context.Context) ReplicationConfigurationOutput
}

func (*ReplicationConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationConfiguration)(nil)).Elem()
}

func (i *ReplicationConfiguration) ToReplicationConfigurationOutput() ReplicationConfigurationOutput {
	return i.ToReplicationConfigurationOutputWithContext(context.Background())
}

func (i *ReplicationConfiguration) ToReplicationConfigurationOutputWithContext(ctx context.Context) ReplicationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationConfigurationOutput)
}

// ReplicationConfigurationArrayInput is an input type that accepts ReplicationConfigurationArray and ReplicationConfigurationArrayOutput values.
// You can construct a concrete instance of `ReplicationConfigurationArrayInput` via:
//
//	ReplicationConfigurationArray{ ReplicationConfigurationArgs{...} }
type ReplicationConfigurationArrayInput interface {
	pulumi.Input

	ToReplicationConfigurationArrayOutput() ReplicationConfigurationArrayOutput
	ToReplicationConfigurationArrayOutputWithContext(context.Context) ReplicationConfigurationArrayOutput
}

type ReplicationConfigurationArray []ReplicationConfigurationInput

func (ReplicationConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReplicationConfiguration)(nil)).Elem()
}

func (i ReplicationConfigurationArray) ToReplicationConfigurationArrayOutput() ReplicationConfigurationArrayOutput {
	return i.ToReplicationConfigurationArrayOutputWithContext(context.Background())
}

func (i ReplicationConfigurationArray) ToReplicationConfigurationArrayOutputWithContext(ctx context.Context) ReplicationConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationConfigurationArrayOutput)
}

// ReplicationConfigurationMapInput is an input type that accepts ReplicationConfigurationMap and ReplicationConfigurationMapOutput values.
// You can construct a concrete instance of `ReplicationConfigurationMapInput` via:
//
//	ReplicationConfigurationMap{ "key": ReplicationConfigurationArgs{...} }
type ReplicationConfigurationMapInput interface {
	pulumi.Input

	ToReplicationConfigurationMapOutput() ReplicationConfigurationMapOutput
	ToReplicationConfigurationMapOutputWithContext(context.Context) ReplicationConfigurationMapOutput
}

type ReplicationConfigurationMap map[string]ReplicationConfigurationInput

func (ReplicationConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReplicationConfiguration)(nil)).Elem()
}

func (i ReplicationConfigurationMap) ToReplicationConfigurationMapOutput() ReplicationConfigurationMapOutput {
	return i.ToReplicationConfigurationMapOutputWithContext(context.Background())
}

func (i ReplicationConfigurationMap) ToReplicationConfigurationMapOutputWithContext(ctx context.Context) ReplicationConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationConfigurationMapOutput)
}

type ReplicationConfigurationOutput struct{ *pulumi.OutputState }

func (ReplicationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationConfiguration)(nil)).Elem()
}

func (o ReplicationConfigurationOutput) ToReplicationConfigurationOutput() ReplicationConfigurationOutput {
	return o
}

func (o ReplicationConfigurationOutput) ToReplicationConfigurationOutputWithContext(ctx context.Context) ReplicationConfigurationOutput {
	return o
}

func (o ReplicationConfigurationOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationConfiguration) pulumi.StringOutput { return v.CreationTime }).(pulumi.StringOutput)
}

func (o ReplicationConfigurationOutput) Destination() ReplicationConfigurationDestinationOutput {
	return o.ApplyT(func(v *ReplicationConfiguration) ReplicationConfigurationDestinationOutput { return v.Destination }).(ReplicationConfigurationDestinationOutput)
}

func (o ReplicationConfigurationOutput) OriginalSourceFileSystemArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationConfiguration) pulumi.StringOutput { return v.OriginalSourceFileSystemArn }).(pulumi.StringOutput)
}

func (o ReplicationConfigurationOutput) SourceFileSystemArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationConfiguration) pulumi.StringOutput { return v.SourceFileSystemArn }).(pulumi.StringOutput)
}

func (o ReplicationConfigurationOutput) SourceFileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationConfiguration) pulumi.StringOutput { return v.SourceFileSystemId }).(pulumi.StringOutput)
}

func (o ReplicationConfigurationOutput) SourceFileSystemRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationConfiguration) pulumi.StringOutput { return v.SourceFileSystemRegion }).(pulumi.StringOutput)
}

type ReplicationConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ReplicationConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReplicationConfiguration)(nil)).Elem()
}

func (o ReplicationConfigurationArrayOutput) ToReplicationConfigurationArrayOutput() ReplicationConfigurationArrayOutput {
	return o
}

func (o ReplicationConfigurationArrayOutput) ToReplicationConfigurationArrayOutputWithContext(ctx context.Context) ReplicationConfigurationArrayOutput {
	return o
}

func (o ReplicationConfigurationArrayOutput) Index(i pulumi.IntInput) ReplicationConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ReplicationConfiguration {
		return vs[0].([]*ReplicationConfiguration)[vs[1].(int)]
	}).(ReplicationConfigurationOutput)
}

type ReplicationConfigurationMapOutput struct{ *pulumi.OutputState }

func (ReplicationConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReplicationConfiguration)(nil)).Elem()
}

func (o ReplicationConfigurationMapOutput) ToReplicationConfigurationMapOutput() ReplicationConfigurationMapOutput {
	return o
}

func (o ReplicationConfigurationMapOutput) ToReplicationConfigurationMapOutputWithContext(ctx context.Context) ReplicationConfigurationMapOutput {
	return o
}

func (o ReplicationConfigurationMapOutput) MapIndex(k pulumi.StringInput) ReplicationConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ReplicationConfiguration {
		return vs[0].(map[string]*ReplicationConfiguration)[vs[1].(string)]
	}).(ReplicationConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationConfigurationInput)(nil)).Elem(), &ReplicationConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationConfigurationArrayInput)(nil)).Elem(), ReplicationConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationConfigurationMapInput)(nil)).Elem(), ReplicationConfigurationMap{})
	pulumi.RegisterOutputType(ReplicationConfigurationOutput{})
	pulumi.RegisterOutputType(ReplicationConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ReplicationConfigurationMapOutput{})
}
