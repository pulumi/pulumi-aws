// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package verifiedpermissions

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for managing an AWS Verified Permissions Policy Store.
//
// ## Example Usage
//
// ### Basic Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/verifiedpermissions"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := verifiedpermissions.LookupPolicyStore(ctx, &verifiedpermissions.LookupPolicyStoreArgs{
//				Id: "example",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func LookupPolicyStore(ctx *pulumi.Context, args *LookupPolicyStoreArgs, opts ...pulumi.InvokeOption) (*LookupPolicyStoreResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPolicyStoreResult
	err := ctx.Invoke("aws:verifiedpermissions/getPolicyStore:getPolicyStore", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPolicyStore.
type LookupPolicyStoreArgs struct {
	// The ID of the Policy Store.
	Id string `pulumi:"id"`
}

// A collection of values returned by getPolicyStore.
type LookupPolicyStoreResult struct {
	// The ARN of the Policy Store.
	Arn string `pulumi:"arn"`
	// The date the Policy Store was created.
	CreatedDate string `pulumi:"createdDate"`
	Description string `pulumi:"description"`
	Id          string `pulumi:"id"`
	// The date the Policy Store was last updated.
	LastUpdatedDate string `pulumi:"lastUpdatedDate"`
	// Validation settings for the policy store.
	ValidationSettings []GetPolicyStoreValidationSetting `pulumi:"validationSettings"`
}

func LookupPolicyStoreOutput(ctx *pulumi.Context, args LookupPolicyStoreOutputArgs, opts ...pulumi.InvokeOption) LookupPolicyStoreResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPolicyStoreResult, error) {
			args := v.(LookupPolicyStoreArgs)
			r, err := LookupPolicyStore(ctx, &args, opts...)
			var s LookupPolicyStoreResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPolicyStoreResultOutput)
}

// A collection of arguments for invoking getPolicyStore.
type LookupPolicyStoreOutputArgs struct {
	// The ID of the Policy Store.
	Id pulumi.StringInput `pulumi:"id"`
}

func (LookupPolicyStoreOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPolicyStoreArgs)(nil)).Elem()
}

// A collection of values returned by getPolicyStore.
type LookupPolicyStoreResultOutput struct{ *pulumi.OutputState }

func (LookupPolicyStoreResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPolicyStoreResult)(nil)).Elem()
}

func (o LookupPolicyStoreResultOutput) ToLookupPolicyStoreResultOutput() LookupPolicyStoreResultOutput {
	return o
}

func (o LookupPolicyStoreResultOutput) ToLookupPolicyStoreResultOutputWithContext(ctx context.Context) LookupPolicyStoreResultOutput {
	return o
}

// The ARN of the Policy Store.
func (o LookupPolicyStoreResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyStoreResult) string { return v.Arn }).(pulumi.StringOutput)
}

// The date the Policy Store was created.
func (o LookupPolicyStoreResultOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyStoreResult) string { return v.CreatedDate }).(pulumi.StringOutput)
}

func (o LookupPolicyStoreResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyStoreResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupPolicyStoreResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyStoreResult) string { return v.Id }).(pulumi.StringOutput)
}

// The date the Policy Store was last updated.
func (o LookupPolicyStoreResultOutput) LastUpdatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyStoreResult) string { return v.LastUpdatedDate }).(pulumi.StringOutput)
}

// Validation settings for the policy store.
func (o LookupPolicyStoreResultOutput) ValidationSettings() GetPolicyStoreValidationSettingArrayOutput {
	return o.ApplyT(func(v LookupPolicyStoreResult) []GetPolicyStoreValidationSetting { return v.ValidationSettings }).(GetPolicyStoreValidationSettingArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPolicyStoreResultOutput{})
}
