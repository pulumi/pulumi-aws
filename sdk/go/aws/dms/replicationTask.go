// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dms

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ReplicationTask struct {
	pulumi.CustomResourceState

	CdcStartPosition        pulumi.StringOutput    `pulumi:"cdcStartPosition"`
	CdcStartTime            pulumi.StringPtrOutput `pulumi:"cdcStartTime"`
	MigrationType           pulumi.StringOutput    `pulumi:"migrationType"`
	ReplicationInstanceArn  pulumi.StringOutput    `pulumi:"replicationInstanceArn"`
	ReplicationTaskArn      pulumi.StringOutput    `pulumi:"replicationTaskArn"`
	ReplicationTaskId       pulumi.StringOutput    `pulumi:"replicationTaskId"`
	ReplicationTaskSettings pulumi.StringPtrOutput `pulumi:"replicationTaskSettings"`
	SourceEndpointArn       pulumi.StringOutput    `pulumi:"sourceEndpointArn"`
	StartReplicationTask    pulumi.BoolPtrOutput   `pulumi:"startReplicationTask"`
	Status                  pulumi.StringOutput    `pulumi:"status"`
	TableMappings           pulumi.StringOutput    `pulumi:"tableMappings"`
	Tags                    pulumi.StringMapOutput `pulumi:"tags"`
	TagsAll                 pulumi.StringMapOutput `pulumi:"tagsAll"`
	TargetEndpointArn       pulumi.StringOutput    `pulumi:"targetEndpointArn"`
}

// NewReplicationTask registers a new resource with the given unique name, arguments, and options.
func NewReplicationTask(ctx *pulumi.Context,
	name string, args *ReplicationTaskArgs, opts ...pulumi.ResourceOption) (*ReplicationTask, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MigrationType == nil {
		return nil, errors.New("invalid value for required argument 'MigrationType'")
	}
	if args.ReplicationInstanceArn == nil {
		return nil, errors.New("invalid value for required argument 'ReplicationInstanceArn'")
	}
	if args.ReplicationTaskId == nil {
		return nil, errors.New("invalid value for required argument 'ReplicationTaskId'")
	}
	if args.SourceEndpointArn == nil {
		return nil, errors.New("invalid value for required argument 'SourceEndpointArn'")
	}
	if args.TableMappings == nil {
		return nil, errors.New("invalid value for required argument 'TableMappings'")
	}
	if args.TargetEndpointArn == nil {
		return nil, errors.New("invalid value for required argument 'TargetEndpointArn'")
	}
	var resource ReplicationTask
	err := ctx.RegisterResource("aws:dms/replicationTask:ReplicationTask", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReplicationTask gets an existing ReplicationTask resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReplicationTask(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReplicationTaskState, opts ...pulumi.ResourceOption) (*ReplicationTask, error) {
	var resource ReplicationTask
	err := ctx.ReadResource("aws:dms/replicationTask:ReplicationTask", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReplicationTask resources.
type replicationTaskState struct {
	CdcStartPosition        *string           `pulumi:"cdcStartPosition"`
	CdcStartTime            *string           `pulumi:"cdcStartTime"`
	MigrationType           *string           `pulumi:"migrationType"`
	ReplicationInstanceArn  *string           `pulumi:"replicationInstanceArn"`
	ReplicationTaskArn      *string           `pulumi:"replicationTaskArn"`
	ReplicationTaskId       *string           `pulumi:"replicationTaskId"`
	ReplicationTaskSettings *string           `pulumi:"replicationTaskSettings"`
	SourceEndpointArn       *string           `pulumi:"sourceEndpointArn"`
	StartReplicationTask    *bool             `pulumi:"startReplicationTask"`
	Status                  *string           `pulumi:"status"`
	TableMappings           *string           `pulumi:"tableMappings"`
	Tags                    map[string]string `pulumi:"tags"`
	TagsAll                 map[string]string `pulumi:"tagsAll"`
	TargetEndpointArn       *string           `pulumi:"targetEndpointArn"`
}

type ReplicationTaskState struct {
	CdcStartPosition        pulumi.StringPtrInput
	CdcStartTime            pulumi.StringPtrInput
	MigrationType           pulumi.StringPtrInput
	ReplicationInstanceArn  pulumi.StringPtrInput
	ReplicationTaskArn      pulumi.StringPtrInput
	ReplicationTaskId       pulumi.StringPtrInput
	ReplicationTaskSettings pulumi.StringPtrInput
	SourceEndpointArn       pulumi.StringPtrInput
	StartReplicationTask    pulumi.BoolPtrInput
	Status                  pulumi.StringPtrInput
	TableMappings           pulumi.StringPtrInput
	Tags                    pulumi.StringMapInput
	TagsAll                 pulumi.StringMapInput
	TargetEndpointArn       pulumi.StringPtrInput
}

func (ReplicationTaskState) ElementType() reflect.Type {
	return reflect.TypeOf((*replicationTaskState)(nil)).Elem()
}

type replicationTaskArgs struct {
	CdcStartPosition        *string           `pulumi:"cdcStartPosition"`
	CdcStartTime            *string           `pulumi:"cdcStartTime"`
	MigrationType           string            `pulumi:"migrationType"`
	ReplicationInstanceArn  string            `pulumi:"replicationInstanceArn"`
	ReplicationTaskId       string            `pulumi:"replicationTaskId"`
	ReplicationTaskSettings *string           `pulumi:"replicationTaskSettings"`
	SourceEndpointArn       string            `pulumi:"sourceEndpointArn"`
	StartReplicationTask    *bool             `pulumi:"startReplicationTask"`
	TableMappings           string            `pulumi:"tableMappings"`
	Tags                    map[string]string `pulumi:"tags"`
	TargetEndpointArn       string            `pulumi:"targetEndpointArn"`
}

// The set of arguments for constructing a ReplicationTask resource.
type ReplicationTaskArgs struct {
	CdcStartPosition        pulumi.StringPtrInput
	CdcStartTime            pulumi.StringPtrInput
	MigrationType           pulumi.StringInput
	ReplicationInstanceArn  pulumi.StringInput
	ReplicationTaskId       pulumi.StringInput
	ReplicationTaskSettings pulumi.StringPtrInput
	SourceEndpointArn       pulumi.StringInput
	StartReplicationTask    pulumi.BoolPtrInput
	TableMappings           pulumi.StringInput
	Tags                    pulumi.StringMapInput
	TargetEndpointArn       pulumi.StringInput
}

func (ReplicationTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*replicationTaskArgs)(nil)).Elem()
}

type ReplicationTaskInput interface {
	pulumi.Input

	ToReplicationTaskOutput() ReplicationTaskOutput
	ToReplicationTaskOutputWithContext(ctx context.Context) ReplicationTaskOutput
}

func (*ReplicationTask) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationTask)(nil)).Elem()
}

func (i *ReplicationTask) ToReplicationTaskOutput() ReplicationTaskOutput {
	return i.ToReplicationTaskOutputWithContext(context.Background())
}

func (i *ReplicationTask) ToReplicationTaskOutputWithContext(ctx context.Context) ReplicationTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationTaskOutput)
}

// ReplicationTaskArrayInput is an input type that accepts ReplicationTaskArray and ReplicationTaskArrayOutput values.
// You can construct a concrete instance of `ReplicationTaskArrayInput` via:
//
//	ReplicationTaskArray{ ReplicationTaskArgs{...} }
type ReplicationTaskArrayInput interface {
	pulumi.Input

	ToReplicationTaskArrayOutput() ReplicationTaskArrayOutput
	ToReplicationTaskArrayOutputWithContext(context.Context) ReplicationTaskArrayOutput
}

type ReplicationTaskArray []ReplicationTaskInput

func (ReplicationTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReplicationTask)(nil)).Elem()
}

func (i ReplicationTaskArray) ToReplicationTaskArrayOutput() ReplicationTaskArrayOutput {
	return i.ToReplicationTaskArrayOutputWithContext(context.Background())
}

func (i ReplicationTaskArray) ToReplicationTaskArrayOutputWithContext(ctx context.Context) ReplicationTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationTaskArrayOutput)
}

// ReplicationTaskMapInput is an input type that accepts ReplicationTaskMap and ReplicationTaskMapOutput values.
// You can construct a concrete instance of `ReplicationTaskMapInput` via:
//
//	ReplicationTaskMap{ "key": ReplicationTaskArgs{...} }
type ReplicationTaskMapInput interface {
	pulumi.Input

	ToReplicationTaskMapOutput() ReplicationTaskMapOutput
	ToReplicationTaskMapOutputWithContext(context.Context) ReplicationTaskMapOutput
}

type ReplicationTaskMap map[string]ReplicationTaskInput

func (ReplicationTaskMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReplicationTask)(nil)).Elem()
}

func (i ReplicationTaskMap) ToReplicationTaskMapOutput() ReplicationTaskMapOutput {
	return i.ToReplicationTaskMapOutputWithContext(context.Background())
}

func (i ReplicationTaskMap) ToReplicationTaskMapOutputWithContext(ctx context.Context) ReplicationTaskMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicationTaskMapOutput)
}

type ReplicationTaskOutput struct{ *pulumi.OutputState }

func (ReplicationTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicationTask)(nil)).Elem()
}

func (o ReplicationTaskOutput) ToReplicationTaskOutput() ReplicationTaskOutput {
	return o
}

func (o ReplicationTaskOutput) ToReplicationTaskOutputWithContext(ctx context.Context) ReplicationTaskOutput {
	return o
}

func (o ReplicationTaskOutput) CdcStartPosition() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationTask) pulumi.StringOutput { return v.CdcStartPosition }).(pulumi.StringOutput)
}

func (o ReplicationTaskOutput) CdcStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationTask) pulumi.StringPtrOutput { return v.CdcStartTime }).(pulumi.StringPtrOutput)
}

func (o ReplicationTaskOutput) MigrationType() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationTask) pulumi.StringOutput { return v.MigrationType }).(pulumi.StringOutput)
}

func (o ReplicationTaskOutput) ReplicationInstanceArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationTask) pulumi.StringOutput { return v.ReplicationInstanceArn }).(pulumi.StringOutput)
}

func (o ReplicationTaskOutput) ReplicationTaskArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationTask) pulumi.StringOutput { return v.ReplicationTaskArn }).(pulumi.StringOutput)
}

func (o ReplicationTaskOutput) ReplicationTaskId() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationTask) pulumi.StringOutput { return v.ReplicationTaskId }).(pulumi.StringOutput)
}

func (o ReplicationTaskOutput) ReplicationTaskSettings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicationTask) pulumi.StringPtrOutput { return v.ReplicationTaskSettings }).(pulumi.StringPtrOutput)
}

func (o ReplicationTaskOutput) SourceEndpointArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationTask) pulumi.StringOutput { return v.SourceEndpointArn }).(pulumi.StringOutput)
}

func (o ReplicationTaskOutput) StartReplicationTask() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ReplicationTask) pulumi.BoolPtrOutput { return v.StartReplicationTask }).(pulumi.BoolPtrOutput)
}

func (o ReplicationTaskOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationTask) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o ReplicationTaskOutput) TableMappings() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationTask) pulumi.StringOutput { return v.TableMappings }).(pulumi.StringOutput)
}

func (o ReplicationTaskOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ReplicationTask) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o ReplicationTaskOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ReplicationTask) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o ReplicationTaskOutput) TargetEndpointArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicationTask) pulumi.StringOutput { return v.TargetEndpointArn }).(pulumi.StringOutput)
}

type ReplicationTaskArrayOutput struct{ *pulumi.OutputState }

func (ReplicationTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReplicationTask)(nil)).Elem()
}

func (o ReplicationTaskArrayOutput) ToReplicationTaskArrayOutput() ReplicationTaskArrayOutput {
	return o
}

func (o ReplicationTaskArrayOutput) ToReplicationTaskArrayOutputWithContext(ctx context.Context) ReplicationTaskArrayOutput {
	return o
}

func (o ReplicationTaskArrayOutput) Index(i pulumi.IntInput) ReplicationTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ReplicationTask {
		return vs[0].([]*ReplicationTask)[vs[1].(int)]
	}).(ReplicationTaskOutput)
}

type ReplicationTaskMapOutput struct{ *pulumi.OutputState }

func (ReplicationTaskMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReplicationTask)(nil)).Elem()
}

func (o ReplicationTaskMapOutput) ToReplicationTaskMapOutput() ReplicationTaskMapOutput {
	return o
}

func (o ReplicationTaskMapOutput) ToReplicationTaskMapOutputWithContext(ctx context.Context) ReplicationTaskMapOutput {
	return o
}

func (o ReplicationTaskMapOutput) MapIndex(k pulumi.StringInput) ReplicationTaskOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ReplicationTask {
		return vs[0].(map[string]*ReplicationTask)[vs[1].(string)]
	}).(ReplicationTaskOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationTaskInput)(nil)).Elem(), &ReplicationTask{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationTaskArrayInput)(nil)).Elem(), ReplicationTaskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicationTaskMapInput)(nil)).Elem(), ReplicationTaskMap{})
	pulumi.RegisterOutputType(ReplicationTaskOutput{})
	pulumi.RegisterOutputType(ReplicationTaskArrayOutput{})
	pulumi.RegisterOutputType(ReplicationTaskMapOutput{})
}
