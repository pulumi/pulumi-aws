// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package dms

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a DMS (Data Migration Service) replication subnet group resource. DMS replication subnet groups can be created, updated, deleted, and imported.
type ReplicationSubnetGroup struct {
	s *pulumi.ResourceState
}

// NewReplicationSubnetGroup registers a new resource with the given unique name, arguments, and options.
func NewReplicationSubnetGroup(ctx *pulumi.Context,
	name string, args *ReplicationSubnetGroupArgs, opts ...pulumi.ResourceOpt) (*ReplicationSubnetGroup, error) {
	if args == nil || args.ReplicationSubnetGroupDescription == nil {
		return nil, errors.New("missing required argument 'ReplicationSubnetGroupDescription'")
	}
	if args == nil || args.ReplicationSubnetGroupId == nil {
		return nil, errors.New("missing required argument 'ReplicationSubnetGroupId'")
	}
	if args == nil || args.SubnetIds == nil {
		return nil, errors.New("missing required argument 'SubnetIds'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["replicationSubnetGroupDescription"] = nil
		inputs["replicationSubnetGroupId"] = nil
		inputs["subnetIds"] = nil
		inputs["tags"] = nil
	} else {
		inputs["replicationSubnetGroupDescription"] = args.ReplicationSubnetGroupDescription
		inputs["replicationSubnetGroupId"] = args.ReplicationSubnetGroupId
		inputs["subnetIds"] = args.SubnetIds
		inputs["tags"] = args.Tags
	}
	inputs["replicationSubnetGroupArn"] = nil
	inputs["vpcId"] = nil
	s, err := ctx.RegisterResource("aws:dms/replicationSubnetGroup:ReplicationSubnetGroup", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ReplicationSubnetGroup{s: s}, nil
}

// GetReplicationSubnetGroup gets an existing ReplicationSubnetGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReplicationSubnetGroup(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ReplicationSubnetGroupState, opts ...pulumi.ResourceOpt) (*ReplicationSubnetGroup, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["replicationSubnetGroupArn"] = state.ReplicationSubnetGroupArn
		inputs["replicationSubnetGroupDescription"] = state.ReplicationSubnetGroupDescription
		inputs["replicationSubnetGroupId"] = state.ReplicationSubnetGroupId
		inputs["subnetIds"] = state.SubnetIds
		inputs["tags"] = state.Tags
		inputs["vpcId"] = state.VpcId
	}
	s, err := ctx.ReadResource("aws:dms/replicationSubnetGroup:ReplicationSubnetGroup", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ReplicationSubnetGroup{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ReplicationSubnetGroup) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ReplicationSubnetGroup) ID() *pulumi.IDOutput {
	return r.s.ID
}

func (r *ReplicationSubnetGroup) ReplicationSubnetGroupArn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["replicationSubnetGroupArn"])
}

// The description for the subnet group.
func (r *ReplicationSubnetGroup) ReplicationSubnetGroupDescription() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["replicationSubnetGroupDescription"])
}

// The name for the replication subnet group. This value is stored as a lowercase string.
func (r *ReplicationSubnetGroup) ReplicationSubnetGroupId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["replicationSubnetGroupId"])
}

// A list of the EC2 subnet IDs for the subnet group.
func (r *ReplicationSubnetGroup) SubnetIds() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["subnetIds"])
}

// A mapping of tags to assign to the resource.
func (r *ReplicationSubnetGroup) Tags() *pulumi.MapOutput {
	return (*pulumi.MapOutput)(r.s.State["tags"])
}

// The ID of the VPC the subnet group is in.
func (r *ReplicationSubnetGroup) VpcId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["vpcId"])
}

// Input properties used for looking up and filtering ReplicationSubnetGroup resources.
type ReplicationSubnetGroupState struct {
	ReplicationSubnetGroupArn interface{}
	// The description for the subnet group.
	ReplicationSubnetGroupDescription interface{}
	// The name for the replication subnet group. This value is stored as a lowercase string.
	ReplicationSubnetGroupId interface{}
	// A list of the EC2 subnet IDs for the subnet group.
	SubnetIds interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
	// The ID of the VPC the subnet group is in.
	VpcId interface{}
}

// The set of arguments for constructing a ReplicationSubnetGroup resource.
type ReplicationSubnetGroupArgs struct {
	// The description for the subnet group.
	ReplicationSubnetGroupDescription interface{}
	// The name for the replication subnet group. This value is stored as a lowercase string.
	ReplicationSubnetGroupId interface{}
	// A list of the EC2 subnet IDs for the subnet group.
	SubnetIds interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
}
