// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type EndpointElasticsearchSettings struct {
	// Endpoint for the OpenSearch cluster.
	EndpointUri string `pulumi:"endpointUri"`
	// Maximum number of seconds for which DMS retries failed API requests to the OpenSearch cluster. Default is `300`.
	ErrorRetryDuration *int `pulumi:"errorRetryDuration"`
	// Maximum percentage of records that can fail to be written before a full load operation stops. Default is `10`.
	FullLoadErrorPercentage *int `pulumi:"fullLoadErrorPercentage"`
	// ARN of the IAM Role with permissions to read from or write to the S3 Bucket.
	ServiceAccessRoleArn string `pulumi:"serviceAccessRoleArn"`
}

// EndpointElasticsearchSettingsInput is an input type that accepts EndpointElasticsearchSettingsArgs and EndpointElasticsearchSettingsOutput values.
// You can construct a concrete instance of `EndpointElasticsearchSettingsInput` via:
//
//	EndpointElasticsearchSettingsArgs{...}
type EndpointElasticsearchSettingsInput interface {
	pulumi.Input

	ToEndpointElasticsearchSettingsOutput() EndpointElasticsearchSettingsOutput
	ToEndpointElasticsearchSettingsOutputWithContext(context.Context) EndpointElasticsearchSettingsOutput
}

type EndpointElasticsearchSettingsArgs struct {
	// Endpoint for the OpenSearch cluster.
	EndpointUri pulumi.StringInput `pulumi:"endpointUri"`
	// Maximum number of seconds for which DMS retries failed API requests to the OpenSearch cluster. Default is `300`.
	ErrorRetryDuration pulumi.IntPtrInput `pulumi:"errorRetryDuration"`
	// Maximum percentage of records that can fail to be written before a full load operation stops. Default is `10`.
	FullLoadErrorPercentage pulumi.IntPtrInput `pulumi:"fullLoadErrorPercentage"`
	// ARN of the IAM Role with permissions to read from or write to the S3 Bucket.
	ServiceAccessRoleArn pulumi.StringInput `pulumi:"serviceAccessRoleArn"`
}

func (EndpointElasticsearchSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointElasticsearchSettings)(nil)).Elem()
}

func (i EndpointElasticsearchSettingsArgs) ToEndpointElasticsearchSettingsOutput() EndpointElasticsearchSettingsOutput {
	return i.ToEndpointElasticsearchSettingsOutputWithContext(context.Background())
}

func (i EndpointElasticsearchSettingsArgs) ToEndpointElasticsearchSettingsOutputWithContext(ctx context.Context) EndpointElasticsearchSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointElasticsearchSettingsOutput)
}

func (i EndpointElasticsearchSettingsArgs) ToEndpointElasticsearchSettingsPtrOutput() EndpointElasticsearchSettingsPtrOutput {
	return i.ToEndpointElasticsearchSettingsPtrOutputWithContext(context.Background())
}

func (i EndpointElasticsearchSettingsArgs) ToEndpointElasticsearchSettingsPtrOutputWithContext(ctx context.Context) EndpointElasticsearchSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointElasticsearchSettingsOutput).ToEndpointElasticsearchSettingsPtrOutputWithContext(ctx)
}

// EndpointElasticsearchSettingsPtrInput is an input type that accepts EndpointElasticsearchSettingsArgs, EndpointElasticsearchSettingsPtr and EndpointElasticsearchSettingsPtrOutput values.
// You can construct a concrete instance of `EndpointElasticsearchSettingsPtrInput` via:
//
//	        EndpointElasticsearchSettingsArgs{...}
//
//	or:
//
//	        nil
type EndpointElasticsearchSettingsPtrInput interface {
	pulumi.Input

	ToEndpointElasticsearchSettingsPtrOutput() EndpointElasticsearchSettingsPtrOutput
	ToEndpointElasticsearchSettingsPtrOutputWithContext(context.Context) EndpointElasticsearchSettingsPtrOutput
}

type endpointElasticsearchSettingsPtrType EndpointElasticsearchSettingsArgs

func EndpointElasticsearchSettingsPtr(v *EndpointElasticsearchSettingsArgs) EndpointElasticsearchSettingsPtrInput {
	return (*endpointElasticsearchSettingsPtrType)(v)
}

func (*endpointElasticsearchSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointElasticsearchSettings)(nil)).Elem()
}

func (i *endpointElasticsearchSettingsPtrType) ToEndpointElasticsearchSettingsPtrOutput() EndpointElasticsearchSettingsPtrOutput {
	return i.ToEndpointElasticsearchSettingsPtrOutputWithContext(context.Background())
}

func (i *endpointElasticsearchSettingsPtrType) ToEndpointElasticsearchSettingsPtrOutputWithContext(ctx context.Context) EndpointElasticsearchSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointElasticsearchSettingsPtrOutput)
}

type EndpointElasticsearchSettingsOutput struct{ *pulumi.OutputState }

func (EndpointElasticsearchSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointElasticsearchSettings)(nil)).Elem()
}

func (o EndpointElasticsearchSettingsOutput) ToEndpointElasticsearchSettingsOutput() EndpointElasticsearchSettingsOutput {
	return o
}

func (o EndpointElasticsearchSettingsOutput) ToEndpointElasticsearchSettingsOutputWithContext(ctx context.Context) EndpointElasticsearchSettingsOutput {
	return o
}

func (o EndpointElasticsearchSettingsOutput) ToEndpointElasticsearchSettingsPtrOutput() EndpointElasticsearchSettingsPtrOutput {
	return o.ToEndpointElasticsearchSettingsPtrOutputWithContext(context.Background())
}

func (o EndpointElasticsearchSettingsOutput) ToEndpointElasticsearchSettingsPtrOutputWithContext(ctx context.Context) EndpointElasticsearchSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointElasticsearchSettings) *EndpointElasticsearchSettings {
		return &v
	}).(EndpointElasticsearchSettingsPtrOutput)
}

// Endpoint for the OpenSearch cluster.
func (o EndpointElasticsearchSettingsOutput) EndpointUri() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointElasticsearchSettings) string { return v.EndpointUri }).(pulumi.StringOutput)
}

// Maximum number of seconds for which DMS retries failed API requests to the OpenSearch cluster. Default is `300`.
func (o EndpointElasticsearchSettingsOutput) ErrorRetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointElasticsearchSettings) *int { return v.ErrorRetryDuration }).(pulumi.IntPtrOutput)
}

// Maximum percentage of records that can fail to be written before a full load operation stops. Default is `10`.
func (o EndpointElasticsearchSettingsOutput) FullLoadErrorPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointElasticsearchSettings) *int { return v.FullLoadErrorPercentage }).(pulumi.IntPtrOutput)
}

// ARN of the IAM Role with permissions to read from or write to the S3 Bucket.
func (o EndpointElasticsearchSettingsOutput) ServiceAccessRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointElasticsearchSettings) string { return v.ServiceAccessRoleArn }).(pulumi.StringOutput)
}

type EndpointElasticsearchSettingsPtrOutput struct{ *pulumi.OutputState }

func (EndpointElasticsearchSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointElasticsearchSettings)(nil)).Elem()
}

func (o EndpointElasticsearchSettingsPtrOutput) ToEndpointElasticsearchSettingsPtrOutput() EndpointElasticsearchSettingsPtrOutput {
	return o
}

func (o EndpointElasticsearchSettingsPtrOutput) ToEndpointElasticsearchSettingsPtrOutputWithContext(ctx context.Context) EndpointElasticsearchSettingsPtrOutput {
	return o
}

func (o EndpointElasticsearchSettingsPtrOutput) Elem() EndpointElasticsearchSettingsOutput {
	return o.ApplyT(func(v *EndpointElasticsearchSettings) EndpointElasticsearchSettings {
		if v != nil {
			return *v
		}
		var ret EndpointElasticsearchSettings
		return ret
	}).(EndpointElasticsearchSettingsOutput)
}

// Endpoint for the OpenSearch cluster.
func (o EndpointElasticsearchSettingsPtrOutput) EndpointUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointElasticsearchSettings) *string {
		if v == nil {
			return nil
		}
		return &v.EndpointUri
	}).(pulumi.StringPtrOutput)
}

// Maximum number of seconds for which DMS retries failed API requests to the OpenSearch cluster. Default is `300`.
func (o EndpointElasticsearchSettingsPtrOutput) ErrorRetryDuration() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointElasticsearchSettings) *int {
		if v == nil {
			return nil
		}
		return v.ErrorRetryDuration
	}).(pulumi.IntPtrOutput)
}

// Maximum percentage of records that can fail to be written before a full load operation stops. Default is `10`.
func (o EndpointElasticsearchSettingsPtrOutput) FullLoadErrorPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointElasticsearchSettings) *int {
		if v == nil {
			return nil
		}
		return v.FullLoadErrorPercentage
	}).(pulumi.IntPtrOutput)
}

// ARN of the IAM Role with permissions to read from or write to the S3 Bucket.
func (o EndpointElasticsearchSettingsPtrOutput) ServiceAccessRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointElasticsearchSettings) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceAccessRoleArn
	}).(pulumi.StringPtrOutput)
}

type EndpointKafkaSettings struct {
	// Kafka broker location. Specify in the form broker-hostname-or-ip:port.
	Broker string `pulumi:"broker"`
	// Shows detailed control information for table definition, column definition, and table and column changes in the Kinesis message output. Default is `false`.
	IncludeControlDetails *bool `pulumi:"includeControlDetails"`
	// Include NULL and empty columns in the target. Default is `false`.
	IncludeNullAndEmpty *bool `pulumi:"includeNullAndEmpty"`
	// Shows the partition value within the Kinesis message output, unless the partition type is schema-table-type. Default is `false`.
	IncludePartitionValue *bool `pulumi:"includePartitionValue"`
	// Includes any data definition language (DDL) operations that change the table in the control data. Default is `false`.
	IncludeTableAlterOperations *bool `pulumi:"includeTableAlterOperations"`
	// Provides detailed transaction information from the source database. Default is `false`.
	IncludeTransactionDetails *bool `pulumi:"includeTransactionDetails"`
	// Output format for the records created. Default is `json`. Valid values are `json` and `json-unformatted` (a single line with no tab).
	MessageFormat *string `pulumi:"messageFormat"`
	// Maximum size in bytes for records created on the endpoint Default is `1,000,000`.
	MessageMaxBytes *int `pulumi:"messageMaxBytes"`
	// Set this optional parameter to true to avoid adding a '0x' prefix to raw data in hexadecimal format. For example, by default, AWS DMS adds a '0x' prefix to the LOB column type in hexadecimal format moving from an Oracle source to a Kafka target. Use the `noHexPrefix` endpoint setting to enable migration of RAW data type columns without adding the `'0x'` prefix.
	NoHexPrefix *bool `pulumi:"noHexPrefix"`
	// Prefixes schema and table names to partition values, when the partition type is primary-key-type. Default is `false`.
	PartitionIncludeSchemaTable *bool `pulumi:"partitionIncludeSchemaTable"`
	// Secure password you created when you first set up your MSK cluster to validate a client identity and make an encrypted connection between server and client using SASL-SSL authentication.
	SaslPassword *string `pulumi:"saslPassword"`
	// Secure user name you created when you first set up your MSK cluster to validate a client identity and make an encrypted connection between server and client using SASL-SSL authentication.
	SaslUsername *string `pulumi:"saslUsername"`
	// Set secure connection to a Kafka target endpoint using Transport Layer Security (TLS). Options include `ssl-encryption`, `ssl-authentication`, and `sasl-ssl`. `sasl-ssl` requires `saslUsername` and `saslPassword`.
	SecurityProtocol *string `pulumi:"securityProtocol"`
	// The Amazon Resource Name (ARN) for the certificate authority (CA) that DMS uses to connect to your Redis target endpoint.
	SslCaCertificateArn *string `pulumi:"sslCaCertificateArn"`
	// ARN of the client certificate used to securely connect to a Kafka target endpoint.
	SslClientCertificateArn *string `pulumi:"sslClientCertificateArn"`
	// ARN for the client private key used to securely connect to a Kafka target endpoint.
	SslClientKeyArn *string `pulumi:"sslClientKeyArn"`
	// Password for the client private key used to securely connect to a Kafka target endpoint.
	SslClientKeyPassword *string `pulumi:"sslClientKeyPassword"`
	// Kafka topic for migration. Default is `kafka-default-topic`.
	Topic *string `pulumi:"topic"`
}

// EndpointKafkaSettingsInput is an input type that accepts EndpointKafkaSettingsArgs and EndpointKafkaSettingsOutput values.
// You can construct a concrete instance of `EndpointKafkaSettingsInput` via:
//
//	EndpointKafkaSettingsArgs{...}
type EndpointKafkaSettingsInput interface {
	pulumi.Input

	ToEndpointKafkaSettingsOutput() EndpointKafkaSettingsOutput
	ToEndpointKafkaSettingsOutputWithContext(context.Context) EndpointKafkaSettingsOutput
}

type EndpointKafkaSettingsArgs struct {
	// Kafka broker location. Specify in the form broker-hostname-or-ip:port.
	Broker pulumi.StringInput `pulumi:"broker"`
	// Shows detailed control information for table definition, column definition, and table and column changes in the Kinesis message output. Default is `false`.
	IncludeControlDetails pulumi.BoolPtrInput `pulumi:"includeControlDetails"`
	// Include NULL and empty columns in the target. Default is `false`.
	IncludeNullAndEmpty pulumi.BoolPtrInput `pulumi:"includeNullAndEmpty"`
	// Shows the partition value within the Kinesis message output, unless the partition type is schema-table-type. Default is `false`.
	IncludePartitionValue pulumi.BoolPtrInput `pulumi:"includePartitionValue"`
	// Includes any data definition language (DDL) operations that change the table in the control data. Default is `false`.
	IncludeTableAlterOperations pulumi.BoolPtrInput `pulumi:"includeTableAlterOperations"`
	// Provides detailed transaction information from the source database. Default is `false`.
	IncludeTransactionDetails pulumi.BoolPtrInput `pulumi:"includeTransactionDetails"`
	// Output format for the records created. Default is `json`. Valid values are `json` and `json-unformatted` (a single line with no tab).
	MessageFormat pulumi.StringPtrInput `pulumi:"messageFormat"`
	// Maximum size in bytes for records created on the endpoint Default is `1,000,000`.
	MessageMaxBytes pulumi.IntPtrInput `pulumi:"messageMaxBytes"`
	// Set this optional parameter to true to avoid adding a '0x' prefix to raw data in hexadecimal format. For example, by default, AWS DMS adds a '0x' prefix to the LOB column type in hexadecimal format moving from an Oracle source to a Kafka target. Use the `noHexPrefix` endpoint setting to enable migration of RAW data type columns without adding the `'0x'` prefix.
	NoHexPrefix pulumi.BoolPtrInput `pulumi:"noHexPrefix"`
	// Prefixes schema and table names to partition values, when the partition type is primary-key-type. Default is `false`.
	PartitionIncludeSchemaTable pulumi.BoolPtrInput `pulumi:"partitionIncludeSchemaTable"`
	// Secure password you created when you first set up your MSK cluster to validate a client identity and make an encrypted connection between server and client using SASL-SSL authentication.
	SaslPassword pulumi.StringPtrInput `pulumi:"saslPassword"`
	// Secure user name you created when you first set up your MSK cluster to validate a client identity and make an encrypted connection between server and client using SASL-SSL authentication.
	SaslUsername pulumi.StringPtrInput `pulumi:"saslUsername"`
	// Set secure connection to a Kafka target endpoint using Transport Layer Security (TLS). Options include `ssl-encryption`, `ssl-authentication`, and `sasl-ssl`. `sasl-ssl` requires `saslUsername` and `saslPassword`.
	SecurityProtocol pulumi.StringPtrInput `pulumi:"securityProtocol"`
	// The Amazon Resource Name (ARN) for the certificate authority (CA) that DMS uses to connect to your Redis target endpoint.
	SslCaCertificateArn pulumi.StringPtrInput `pulumi:"sslCaCertificateArn"`
	// ARN of the client certificate used to securely connect to a Kafka target endpoint.
	SslClientCertificateArn pulumi.StringPtrInput `pulumi:"sslClientCertificateArn"`
	// ARN for the client private key used to securely connect to a Kafka target endpoint.
	SslClientKeyArn pulumi.StringPtrInput `pulumi:"sslClientKeyArn"`
	// Password for the client private key used to securely connect to a Kafka target endpoint.
	SslClientKeyPassword pulumi.StringPtrInput `pulumi:"sslClientKeyPassword"`
	// Kafka topic for migration. Default is `kafka-default-topic`.
	Topic pulumi.StringPtrInput `pulumi:"topic"`
}

func (EndpointKafkaSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointKafkaSettings)(nil)).Elem()
}

func (i EndpointKafkaSettingsArgs) ToEndpointKafkaSettingsOutput() EndpointKafkaSettingsOutput {
	return i.ToEndpointKafkaSettingsOutputWithContext(context.Background())
}

func (i EndpointKafkaSettingsArgs) ToEndpointKafkaSettingsOutputWithContext(ctx context.Context) EndpointKafkaSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointKafkaSettingsOutput)
}

func (i EndpointKafkaSettingsArgs) ToEndpointKafkaSettingsPtrOutput() EndpointKafkaSettingsPtrOutput {
	return i.ToEndpointKafkaSettingsPtrOutputWithContext(context.Background())
}

func (i EndpointKafkaSettingsArgs) ToEndpointKafkaSettingsPtrOutputWithContext(ctx context.Context) EndpointKafkaSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointKafkaSettingsOutput).ToEndpointKafkaSettingsPtrOutputWithContext(ctx)
}

// EndpointKafkaSettingsPtrInput is an input type that accepts EndpointKafkaSettingsArgs, EndpointKafkaSettingsPtr and EndpointKafkaSettingsPtrOutput values.
// You can construct a concrete instance of `EndpointKafkaSettingsPtrInput` via:
//
//	        EndpointKafkaSettingsArgs{...}
//
//	or:
//
//	        nil
type EndpointKafkaSettingsPtrInput interface {
	pulumi.Input

	ToEndpointKafkaSettingsPtrOutput() EndpointKafkaSettingsPtrOutput
	ToEndpointKafkaSettingsPtrOutputWithContext(context.Context) EndpointKafkaSettingsPtrOutput
}

type endpointKafkaSettingsPtrType EndpointKafkaSettingsArgs

func EndpointKafkaSettingsPtr(v *EndpointKafkaSettingsArgs) EndpointKafkaSettingsPtrInput {
	return (*endpointKafkaSettingsPtrType)(v)
}

func (*endpointKafkaSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointKafkaSettings)(nil)).Elem()
}

func (i *endpointKafkaSettingsPtrType) ToEndpointKafkaSettingsPtrOutput() EndpointKafkaSettingsPtrOutput {
	return i.ToEndpointKafkaSettingsPtrOutputWithContext(context.Background())
}

func (i *endpointKafkaSettingsPtrType) ToEndpointKafkaSettingsPtrOutputWithContext(ctx context.Context) EndpointKafkaSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointKafkaSettingsPtrOutput)
}

type EndpointKafkaSettingsOutput struct{ *pulumi.OutputState }

func (EndpointKafkaSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointKafkaSettings)(nil)).Elem()
}

func (o EndpointKafkaSettingsOutput) ToEndpointKafkaSettingsOutput() EndpointKafkaSettingsOutput {
	return o
}

func (o EndpointKafkaSettingsOutput) ToEndpointKafkaSettingsOutputWithContext(ctx context.Context) EndpointKafkaSettingsOutput {
	return o
}

func (o EndpointKafkaSettingsOutput) ToEndpointKafkaSettingsPtrOutput() EndpointKafkaSettingsPtrOutput {
	return o.ToEndpointKafkaSettingsPtrOutputWithContext(context.Background())
}

func (o EndpointKafkaSettingsOutput) ToEndpointKafkaSettingsPtrOutputWithContext(ctx context.Context) EndpointKafkaSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointKafkaSettings) *EndpointKafkaSettings {
		return &v
	}).(EndpointKafkaSettingsPtrOutput)
}

// Kafka broker location. Specify in the form broker-hostname-or-ip:port.
func (o EndpointKafkaSettingsOutput) Broker() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointKafkaSettings) string { return v.Broker }).(pulumi.StringOutput)
}

// Shows detailed control information for table definition, column definition, and table and column changes in the Kinesis message output. Default is `false`.
func (o EndpointKafkaSettingsOutput) IncludeControlDetails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointKafkaSettings) *bool { return v.IncludeControlDetails }).(pulumi.BoolPtrOutput)
}

// Include NULL and empty columns in the target. Default is `false`.
func (o EndpointKafkaSettingsOutput) IncludeNullAndEmpty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointKafkaSettings) *bool { return v.IncludeNullAndEmpty }).(pulumi.BoolPtrOutput)
}

// Shows the partition value within the Kinesis message output, unless the partition type is schema-table-type. Default is `false`.
func (o EndpointKafkaSettingsOutput) IncludePartitionValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointKafkaSettings) *bool { return v.IncludePartitionValue }).(pulumi.BoolPtrOutput)
}

// Includes any data definition language (DDL) operations that change the table in the control data. Default is `false`.
func (o EndpointKafkaSettingsOutput) IncludeTableAlterOperations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointKafkaSettings) *bool { return v.IncludeTableAlterOperations }).(pulumi.BoolPtrOutput)
}

// Provides detailed transaction information from the source database. Default is `false`.
func (o EndpointKafkaSettingsOutput) IncludeTransactionDetails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointKafkaSettings) *bool { return v.IncludeTransactionDetails }).(pulumi.BoolPtrOutput)
}

// Output format for the records created. Default is `json`. Valid values are `json` and `json-unformatted` (a single line with no tab).
func (o EndpointKafkaSettingsOutput) MessageFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointKafkaSettings) *string { return v.MessageFormat }).(pulumi.StringPtrOutput)
}

// Maximum size in bytes for records created on the endpoint Default is `1,000,000`.
func (o EndpointKafkaSettingsOutput) MessageMaxBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointKafkaSettings) *int { return v.MessageMaxBytes }).(pulumi.IntPtrOutput)
}

// Set this optional parameter to true to avoid adding a '0x' prefix to raw data in hexadecimal format. For example, by default, AWS DMS adds a '0x' prefix to the LOB column type in hexadecimal format moving from an Oracle source to a Kafka target. Use the `noHexPrefix` endpoint setting to enable migration of RAW data type columns without adding the `'0x'` prefix.
func (o EndpointKafkaSettingsOutput) NoHexPrefix() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointKafkaSettings) *bool { return v.NoHexPrefix }).(pulumi.BoolPtrOutput)
}

// Prefixes schema and table names to partition values, when the partition type is primary-key-type. Default is `false`.
func (o EndpointKafkaSettingsOutput) PartitionIncludeSchemaTable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointKafkaSettings) *bool { return v.PartitionIncludeSchemaTable }).(pulumi.BoolPtrOutput)
}

// Secure password you created when you first set up your MSK cluster to validate a client identity and make an encrypted connection between server and client using SASL-SSL authentication.
func (o EndpointKafkaSettingsOutput) SaslPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointKafkaSettings) *string { return v.SaslPassword }).(pulumi.StringPtrOutput)
}

// Secure user name you created when you first set up your MSK cluster to validate a client identity and make an encrypted connection between server and client using SASL-SSL authentication.
func (o EndpointKafkaSettingsOutput) SaslUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointKafkaSettings) *string { return v.SaslUsername }).(pulumi.StringPtrOutput)
}

// Set secure connection to a Kafka target endpoint using Transport Layer Security (TLS). Options include `ssl-encryption`, `ssl-authentication`, and `sasl-ssl`. `sasl-ssl` requires `saslUsername` and `saslPassword`.
func (o EndpointKafkaSettingsOutput) SecurityProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointKafkaSettings) *string { return v.SecurityProtocol }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) for the certificate authority (CA) that DMS uses to connect to your Redis target endpoint.
func (o EndpointKafkaSettingsOutput) SslCaCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointKafkaSettings) *string { return v.SslCaCertificateArn }).(pulumi.StringPtrOutput)
}

// ARN of the client certificate used to securely connect to a Kafka target endpoint.
func (o EndpointKafkaSettingsOutput) SslClientCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointKafkaSettings) *string { return v.SslClientCertificateArn }).(pulumi.StringPtrOutput)
}

// ARN for the client private key used to securely connect to a Kafka target endpoint.
func (o EndpointKafkaSettingsOutput) SslClientKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointKafkaSettings) *string { return v.SslClientKeyArn }).(pulumi.StringPtrOutput)
}

// Password for the client private key used to securely connect to a Kafka target endpoint.
func (o EndpointKafkaSettingsOutput) SslClientKeyPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointKafkaSettings) *string { return v.SslClientKeyPassword }).(pulumi.StringPtrOutput)
}

// Kafka topic for migration. Default is `kafka-default-topic`.
func (o EndpointKafkaSettingsOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointKafkaSettings) *string { return v.Topic }).(pulumi.StringPtrOutput)
}

type EndpointKafkaSettingsPtrOutput struct{ *pulumi.OutputState }

func (EndpointKafkaSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointKafkaSettings)(nil)).Elem()
}

func (o EndpointKafkaSettingsPtrOutput) ToEndpointKafkaSettingsPtrOutput() EndpointKafkaSettingsPtrOutput {
	return o
}

func (o EndpointKafkaSettingsPtrOutput) ToEndpointKafkaSettingsPtrOutputWithContext(ctx context.Context) EndpointKafkaSettingsPtrOutput {
	return o
}

func (o EndpointKafkaSettingsPtrOutput) Elem() EndpointKafkaSettingsOutput {
	return o.ApplyT(func(v *EndpointKafkaSettings) EndpointKafkaSettings {
		if v != nil {
			return *v
		}
		var ret EndpointKafkaSettings
		return ret
	}).(EndpointKafkaSettingsOutput)
}

// Kafka broker location. Specify in the form broker-hostname-or-ip:port.
func (o EndpointKafkaSettingsPtrOutput) Broker() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointKafkaSettings) *string {
		if v == nil {
			return nil
		}
		return &v.Broker
	}).(pulumi.StringPtrOutput)
}

// Shows detailed control information for table definition, column definition, and table and column changes in the Kinesis message output. Default is `false`.
func (o EndpointKafkaSettingsPtrOutput) IncludeControlDetails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointKafkaSettings) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeControlDetails
	}).(pulumi.BoolPtrOutput)
}

// Include NULL and empty columns in the target. Default is `false`.
func (o EndpointKafkaSettingsPtrOutput) IncludeNullAndEmpty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointKafkaSettings) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeNullAndEmpty
	}).(pulumi.BoolPtrOutput)
}

// Shows the partition value within the Kinesis message output, unless the partition type is schema-table-type. Default is `false`.
func (o EndpointKafkaSettingsPtrOutput) IncludePartitionValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointKafkaSettings) *bool {
		if v == nil {
			return nil
		}
		return v.IncludePartitionValue
	}).(pulumi.BoolPtrOutput)
}

// Includes any data definition language (DDL) operations that change the table in the control data. Default is `false`.
func (o EndpointKafkaSettingsPtrOutput) IncludeTableAlterOperations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointKafkaSettings) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeTableAlterOperations
	}).(pulumi.BoolPtrOutput)
}

// Provides detailed transaction information from the source database. Default is `false`.
func (o EndpointKafkaSettingsPtrOutput) IncludeTransactionDetails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointKafkaSettings) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeTransactionDetails
	}).(pulumi.BoolPtrOutput)
}

// Output format for the records created. Default is `json`. Valid values are `json` and `json-unformatted` (a single line with no tab).
func (o EndpointKafkaSettingsPtrOutput) MessageFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointKafkaSettings) *string {
		if v == nil {
			return nil
		}
		return v.MessageFormat
	}).(pulumi.StringPtrOutput)
}

// Maximum size in bytes for records created on the endpoint Default is `1,000,000`.
func (o EndpointKafkaSettingsPtrOutput) MessageMaxBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointKafkaSettings) *int {
		if v == nil {
			return nil
		}
		return v.MessageMaxBytes
	}).(pulumi.IntPtrOutput)
}

// Set this optional parameter to true to avoid adding a '0x' prefix to raw data in hexadecimal format. For example, by default, AWS DMS adds a '0x' prefix to the LOB column type in hexadecimal format moving from an Oracle source to a Kafka target. Use the `noHexPrefix` endpoint setting to enable migration of RAW data type columns without adding the `'0x'` prefix.
func (o EndpointKafkaSettingsPtrOutput) NoHexPrefix() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointKafkaSettings) *bool {
		if v == nil {
			return nil
		}
		return v.NoHexPrefix
	}).(pulumi.BoolPtrOutput)
}

// Prefixes schema and table names to partition values, when the partition type is primary-key-type. Default is `false`.
func (o EndpointKafkaSettingsPtrOutput) PartitionIncludeSchemaTable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointKafkaSettings) *bool {
		if v == nil {
			return nil
		}
		return v.PartitionIncludeSchemaTable
	}).(pulumi.BoolPtrOutput)
}

// Secure password you created when you first set up your MSK cluster to validate a client identity and make an encrypted connection between server and client using SASL-SSL authentication.
func (o EndpointKafkaSettingsPtrOutput) SaslPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointKafkaSettings) *string {
		if v == nil {
			return nil
		}
		return v.SaslPassword
	}).(pulumi.StringPtrOutput)
}

// Secure user name you created when you first set up your MSK cluster to validate a client identity and make an encrypted connection between server and client using SASL-SSL authentication.
func (o EndpointKafkaSettingsPtrOutput) SaslUsername() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointKafkaSettings) *string {
		if v == nil {
			return nil
		}
		return v.SaslUsername
	}).(pulumi.StringPtrOutput)
}

// Set secure connection to a Kafka target endpoint using Transport Layer Security (TLS). Options include `ssl-encryption`, `ssl-authentication`, and `sasl-ssl`. `sasl-ssl` requires `saslUsername` and `saslPassword`.
func (o EndpointKafkaSettingsPtrOutput) SecurityProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointKafkaSettings) *string {
		if v == nil {
			return nil
		}
		return v.SecurityProtocol
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) for the certificate authority (CA) that DMS uses to connect to your Redis target endpoint.
func (o EndpointKafkaSettingsPtrOutput) SslCaCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointKafkaSettings) *string {
		if v == nil {
			return nil
		}
		return v.SslCaCertificateArn
	}).(pulumi.StringPtrOutput)
}

// ARN of the client certificate used to securely connect to a Kafka target endpoint.
func (o EndpointKafkaSettingsPtrOutput) SslClientCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointKafkaSettings) *string {
		if v == nil {
			return nil
		}
		return v.SslClientCertificateArn
	}).(pulumi.StringPtrOutput)
}

// ARN for the client private key used to securely connect to a Kafka target endpoint.
func (o EndpointKafkaSettingsPtrOutput) SslClientKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointKafkaSettings) *string {
		if v == nil {
			return nil
		}
		return v.SslClientKeyArn
	}).(pulumi.StringPtrOutput)
}

// Password for the client private key used to securely connect to a Kafka target endpoint.
func (o EndpointKafkaSettingsPtrOutput) SslClientKeyPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointKafkaSettings) *string {
		if v == nil {
			return nil
		}
		return v.SslClientKeyPassword
	}).(pulumi.StringPtrOutput)
}

// Kafka topic for migration. Default is `kafka-default-topic`.
func (o EndpointKafkaSettingsPtrOutput) Topic() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointKafkaSettings) *string {
		if v == nil {
			return nil
		}
		return v.Topic
	}).(pulumi.StringPtrOutput)
}

type EndpointKinesisSettings struct {
	// Shows detailed control information for table definition, column definition, and table and column changes in the Kinesis message output. Default is `false`.
	IncludeControlDetails *bool `pulumi:"includeControlDetails"`
	// Include NULL and empty columns in the target. Default is `false`.
	IncludeNullAndEmpty *bool `pulumi:"includeNullAndEmpty"`
	// Shows the partition value within the Kinesis message output, unless the partition type is schema-table-type. Default is `false`.
	IncludePartitionValue *bool `pulumi:"includePartitionValue"`
	// Includes any data definition language (DDL) operations that change the table in the control data. Default is `false`.
	IncludeTableAlterOperations *bool `pulumi:"includeTableAlterOperations"`
	// Provides detailed transaction information from the source database. Default is `false`.
	IncludeTransactionDetails *bool `pulumi:"includeTransactionDetails"`
	// Output format for the records created. Default is `json`. Valid values are `json` and `json-unformatted` (a single line with no tab).
	MessageFormat *string `pulumi:"messageFormat"`
	// Prefixes schema and table names to partition values, when the partition type is primary-key-type. Default is `false`.
	PartitionIncludeSchemaTable *bool `pulumi:"partitionIncludeSchemaTable"`
	// ARN of the IAM Role with permissions to read from or write to the S3 Bucket.
	ServiceAccessRoleArn *string `pulumi:"serviceAccessRoleArn"`
	// ARN of the Kinesis data stream.
	StreamArn *string `pulumi:"streamArn"`
}

// EndpointKinesisSettingsInput is an input type that accepts EndpointKinesisSettingsArgs and EndpointKinesisSettingsOutput values.
// You can construct a concrete instance of `EndpointKinesisSettingsInput` via:
//
//	EndpointKinesisSettingsArgs{...}
type EndpointKinesisSettingsInput interface {
	pulumi.Input

	ToEndpointKinesisSettingsOutput() EndpointKinesisSettingsOutput
	ToEndpointKinesisSettingsOutputWithContext(context.Context) EndpointKinesisSettingsOutput
}

type EndpointKinesisSettingsArgs struct {
	// Shows detailed control information for table definition, column definition, and table and column changes in the Kinesis message output. Default is `false`.
	IncludeControlDetails pulumi.BoolPtrInput `pulumi:"includeControlDetails"`
	// Include NULL and empty columns in the target. Default is `false`.
	IncludeNullAndEmpty pulumi.BoolPtrInput `pulumi:"includeNullAndEmpty"`
	// Shows the partition value within the Kinesis message output, unless the partition type is schema-table-type. Default is `false`.
	IncludePartitionValue pulumi.BoolPtrInput `pulumi:"includePartitionValue"`
	// Includes any data definition language (DDL) operations that change the table in the control data. Default is `false`.
	IncludeTableAlterOperations pulumi.BoolPtrInput `pulumi:"includeTableAlterOperations"`
	// Provides detailed transaction information from the source database. Default is `false`.
	IncludeTransactionDetails pulumi.BoolPtrInput `pulumi:"includeTransactionDetails"`
	// Output format for the records created. Default is `json`. Valid values are `json` and `json-unformatted` (a single line with no tab).
	MessageFormat pulumi.StringPtrInput `pulumi:"messageFormat"`
	// Prefixes schema and table names to partition values, when the partition type is primary-key-type. Default is `false`.
	PartitionIncludeSchemaTable pulumi.BoolPtrInput `pulumi:"partitionIncludeSchemaTable"`
	// ARN of the IAM Role with permissions to read from or write to the S3 Bucket.
	ServiceAccessRoleArn pulumi.StringPtrInput `pulumi:"serviceAccessRoleArn"`
	// ARN of the Kinesis data stream.
	StreamArn pulumi.StringPtrInput `pulumi:"streamArn"`
}

func (EndpointKinesisSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointKinesisSettings)(nil)).Elem()
}

func (i EndpointKinesisSettingsArgs) ToEndpointKinesisSettingsOutput() EndpointKinesisSettingsOutput {
	return i.ToEndpointKinesisSettingsOutputWithContext(context.Background())
}

func (i EndpointKinesisSettingsArgs) ToEndpointKinesisSettingsOutputWithContext(ctx context.Context) EndpointKinesisSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointKinesisSettingsOutput)
}

func (i EndpointKinesisSettingsArgs) ToEndpointKinesisSettingsPtrOutput() EndpointKinesisSettingsPtrOutput {
	return i.ToEndpointKinesisSettingsPtrOutputWithContext(context.Background())
}

func (i EndpointKinesisSettingsArgs) ToEndpointKinesisSettingsPtrOutputWithContext(ctx context.Context) EndpointKinesisSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointKinesisSettingsOutput).ToEndpointKinesisSettingsPtrOutputWithContext(ctx)
}

// EndpointKinesisSettingsPtrInput is an input type that accepts EndpointKinesisSettingsArgs, EndpointKinesisSettingsPtr and EndpointKinesisSettingsPtrOutput values.
// You can construct a concrete instance of `EndpointKinesisSettingsPtrInput` via:
//
//	        EndpointKinesisSettingsArgs{...}
//
//	or:
//
//	        nil
type EndpointKinesisSettingsPtrInput interface {
	pulumi.Input

	ToEndpointKinesisSettingsPtrOutput() EndpointKinesisSettingsPtrOutput
	ToEndpointKinesisSettingsPtrOutputWithContext(context.Context) EndpointKinesisSettingsPtrOutput
}

type endpointKinesisSettingsPtrType EndpointKinesisSettingsArgs

func EndpointKinesisSettingsPtr(v *EndpointKinesisSettingsArgs) EndpointKinesisSettingsPtrInput {
	return (*endpointKinesisSettingsPtrType)(v)
}

func (*endpointKinesisSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointKinesisSettings)(nil)).Elem()
}

func (i *endpointKinesisSettingsPtrType) ToEndpointKinesisSettingsPtrOutput() EndpointKinesisSettingsPtrOutput {
	return i.ToEndpointKinesisSettingsPtrOutputWithContext(context.Background())
}

func (i *endpointKinesisSettingsPtrType) ToEndpointKinesisSettingsPtrOutputWithContext(ctx context.Context) EndpointKinesisSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointKinesisSettingsPtrOutput)
}

type EndpointKinesisSettingsOutput struct{ *pulumi.OutputState }

func (EndpointKinesisSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointKinesisSettings)(nil)).Elem()
}

func (o EndpointKinesisSettingsOutput) ToEndpointKinesisSettingsOutput() EndpointKinesisSettingsOutput {
	return o
}

func (o EndpointKinesisSettingsOutput) ToEndpointKinesisSettingsOutputWithContext(ctx context.Context) EndpointKinesisSettingsOutput {
	return o
}

func (o EndpointKinesisSettingsOutput) ToEndpointKinesisSettingsPtrOutput() EndpointKinesisSettingsPtrOutput {
	return o.ToEndpointKinesisSettingsPtrOutputWithContext(context.Background())
}

func (o EndpointKinesisSettingsOutput) ToEndpointKinesisSettingsPtrOutputWithContext(ctx context.Context) EndpointKinesisSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointKinesisSettings) *EndpointKinesisSettings {
		return &v
	}).(EndpointKinesisSettingsPtrOutput)
}

// Shows detailed control information for table definition, column definition, and table and column changes in the Kinesis message output. Default is `false`.
func (o EndpointKinesisSettingsOutput) IncludeControlDetails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointKinesisSettings) *bool { return v.IncludeControlDetails }).(pulumi.BoolPtrOutput)
}

// Include NULL and empty columns in the target. Default is `false`.
func (o EndpointKinesisSettingsOutput) IncludeNullAndEmpty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointKinesisSettings) *bool { return v.IncludeNullAndEmpty }).(pulumi.BoolPtrOutput)
}

// Shows the partition value within the Kinesis message output, unless the partition type is schema-table-type. Default is `false`.
func (o EndpointKinesisSettingsOutput) IncludePartitionValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointKinesisSettings) *bool { return v.IncludePartitionValue }).(pulumi.BoolPtrOutput)
}

// Includes any data definition language (DDL) operations that change the table in the control data. Default is `false`.
func (o EndpointKinesisSettingsOutput) IncludeTableAlterOperations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointKinesisSettings) *bool { return v.IncludeTableAlterOperations }).(pulumi.BoolPtrOutput)
}

// Provides detailed transaction information from the source database. Default is `false`.
func (o EndpointKinesisSettingsOutput) IncludeTransactionDetails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointKinesisSettings) *bool { return v.IncludeTransactionDetails }).(pulumi.BoolPtrOutput)
}

// Output format for the records created. Default is `json`. Valid values are `json` and `json-unformatted` (a single line with no tab).
func (o EndpointKinesisSettingsOutput) MessageFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointKinesisSettings) *string { return v.MessageFormat }).(pulumi.StringPtrOutput)
}

// Prefixes schema and table names to partition values, when the partition type is primary-key-type. Default is `false`.
func (o EndpointKinesisSettingsOutput) PartitionIncludeSchemaTable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointKinesisSettings) *bool { return v.PartitionIncludeSchemaTable }).(pulumi.BoolPtrOutput)
}

// ARN of the IAM Role with permissions to read from or write to the S3 Bucket.
func (o EndpointKinesisSettingsOutput) ServiceAccessRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointKinesisSettings) *string { return v.ServiceAccessRoleArn }).(pulumi.StringPtrOutput)
}

// ARN of the Kinesis data stream.
func (o EndpointKinesisSettingsOutput) StreamArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointKinesisSettings) *string { return v.StreamArn }).(pulumi.StringPtrOutput)
}

type EndpointKinesisSettingsPtrOutput struct{ *pulumi.OutputState }

func (EndpointKinesisSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointKinesisSettings)(nil)).Elem()
}

func (o EndpointKinesisSettingsPtrOutput) ToEndpointKinesisSettingsPtrOutput() EndpointKinesisSettingsPtrOutput {
	return o
}

func (o EndpointKinesisSettingsPtrOutput) ToEndpointKinesisSettingsPtrOutputWithContext(ctx context.Context) EndpointKinesisSettingsPtrOutput {
	return o
}

func (o EndpointKinesisSettingsPtrOutput) Elem() EndpointKinesisSettingsOutput {
	return o.ApplyT(func(v *EndpointKinesisSettings) EndpointKinesisSettings {
		if v != nil {
			return *v
		}
		var ret EndpointKinesisSettings
		return ret
	}).(EndpointKinesisSettingsOutput)
}

// Shows detailed control information for table definition, column definition, and table and column changes in the Kinesis message output. Default is `false`.
func (o EndpointKinesisSettingsPtrOutput) IncludeControlDetails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointKinesisSettings) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeControlDetails
	}).(pulumi.BoolPtrOutput)
}

// Include NULL and empty columns in the target. Default is `false`.
func (o EndpointKinesisSettingsPtrOutput) IncludeNullAndEmpty() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointKinesisSettings) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeNullAndEmpty
	}).(pulumi.BoolPtrOutput)
}

// Shows the partition value within the Kinesis message output, unless the partition type is schema-table-type. Default is `false`.
func (o EndpointKinesisSettingsPtrOutput) IncludePartitionValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointKinesisSettings) *bool {
		if v == nil {
			return nil
		}
		return v.IncludePartitionValue
	}).(pulumi.BoolPtrOutput)
}

// Includes any data definition language (DDL) operations that change the table in the control data. Default is `false`.
func (o EndpointKinesisSettingsPtrOutput) IncludeTableAlterOperations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointKinesisSettings) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeTableAlterOperations
	}).(pulumi.BoolPtrOutput)
}

// Provides detailed transaction information from the source database. Default is `false`.
func (o EndpointKinesisSettingsPtrOutput) IncludeTransactionDetails() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointKinesisSettings) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeTransactionDetails
	}).(pulumi.BoolPtrOutput)
}

// Output format for the records created. Default is `json`. Valid values are `json` and `json-unformatted` (a single line with no tab).
func (o EndpointKinesisSettingsPtrOutput) MessageFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointKinesisSettings) *string {
		if v == nil {
			return nil
		}
		return v.MessageFormat
	}).(pulumi.StringPtrOutput)
}

// Prefixes schema and table names to partition values, when the partition type is primary-key-type. Default is `false`.
func (o EndpointKinesisSettingsPtrOutput) PartitionIncludeSchemaTable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointKinesisSettings) *bool {
		if v == nil {
			return nil
		}
		return v.PartitionIncludeSchemaTable
	}).(pulumi.BoolPtrOutput)
}

// ARN of the IAM Role with permissions to read from or write to the S3 Bucket.
func (o EndpointKinesisSettingsPtrOutput) ServiceAccessRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointKinesisSettings) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccessRoleArn
	}).(pulumi.StringPtrOutput)
}

// ARN of the Kinesis data stream.
func (o EndpointKinesisSettingsPtrOutput) StreamArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointKinesisSettings) *string {
		if v == nil {
			return nil
		}
		return v.StreamArn
	}).(pulumi.StringPtrOutput)
}

type EndpointMongodbSettings struct {
	// Authentication mechanism to access the MongoDB source endpoint. Default is `default`.
	AuthMechanism *string `pulumi:"authMechanism"`
	// Authentication database name. Not used when `authType` is `no`. Default is `admin`.
	AuthSource *string `pulumi:"authSource"`
	// The type of authentication to perform when connecting to a Redis target. Options include `none`, `auth-token`, and `auth-role`. The `auth-token` option requires an `authPassword` value to be provided. The `auth-role` option requires `authUserName` and `authPassword` values to be provided.
	AuthType *string `pulumi:"authType"`
	// Number of documents to preview to determine the document organization. Use this setting when `nestingLevel` is set to `one`. Default is `1000`.
	DocsToInvestigate *string `pulumi:"docsToInvestigate"`
	// Document ID. Use this setting when `nestingLevel` is set to `none`. Default is `false`.
	ExtractDocId *string `pulumi:"extractDocId"`
	// Specifies either document or table mode. Default is `none`. Valid values are `one` (table mode) and `none` (document mode).
	NestingLevel *string `pulumi:"nestingLevel"`
}

// EndpointMongodbSettingsInput is an input type that accepts EndpointMongodbSettingsArgs and EndpointMongodbSettingsOutput values.
// You can construct a concrete instance of `EndpointMongodbSettingsInput` via:
//
//	EndpointMongodbSettingsArgs{...}
type EndpointMongodbSettingsInput interface {
	pulumi.Input

	ToEndpointMongodbSettingsOutput() EndpointMongodbSettingsOutput
	ToEndpointMongodbSettingsOutputWithContext(context.Context) EndpointMongodbSettingsOutput
}

type EndpointMongodbSettingsArgs struct {
	// Authentication mechanism to access the MongoDB source endpoint. Default is `default`.
	AuthMechanism pulumi.StringPtrInput `pulumi:"authMechanism"`
	// Authentication database name. Not used when `authType` is `no`. Default is `admin`.
	AuthSource pulumi.StringPtrInput `pulumi:"authSource"`
	// The type of authentication to perform when connecting to a Redis target. Options include `none`, `auth-token`, and `auth-role`. The `auth-token` option requires an `authPassword` value to be provided. The `auth-role` option requires `authUserName` and `authPassword` values to be provided.
	AuthType pulumi.StringPtrInput `pulumi:"authType"`
	// Number of documents to preview to determine the document organization. Use this setting when `nestingLevel` is set to `one`. Default is `1000`.
	DocsToInvestigate pulumi.StringPtrInput `pulumi:"docsToInvestigate"`
	// Document ID. Use this setting when `nestingLevel` is set to `none`. Default is `false`.
	ExtractDocId pulumi.StringPtrInput `pulumi:"extractDocId"`
	// Specifies either document or table mode. Default is `none`. Valid values are `one` (table mode) and `none` (document mode).
	NestingLevel pulumi.StringPtrInput `pulumi:"nestingLevel"`
}

func (EndpointMongodbSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointMongodbSettings)(nil)).Elem()
}

func (i EndpointMongodbSettingsArgs) ToEndpointMongodbSettingsOutput() EndpointMongodbSettingsOutput {
	return i.ToEndpointMongodbSettingsOutputWithContext(context.Background())
}

func (i EndpointMongodbSettingsArgs) ToEndpointMongodbSettingsOutputWithContext(ctx context.Context) EndpointMongodbSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointMongodbSettingsOutput)
}

func (i EndpointMongodbSettingsArgs) ToEndpointMongodbSettingsPtrOutput() EndpointMongodbSettingsPtrOutput {
	return i.ToEndpointMongodbSettingsPtrOutputWithContext(context.Background())
}

func (i EndpointMongodbSettingsArgs) ToEndpointMongodbSettingsPtrOutputWithContext(ctx context.Context) EndpointMongodbSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointMongodbSettingsOutput).ToEndpointMongodbSettingsPtrOutputWithContext(ctx)
}

// EndpointMongodbSettingsPtrInput is an input type that accepts EndpointMongodbSettingsArgs, EndpointMongodbSettingsPtr and EndpointMongodbSettingsPtrOutput values.
// You can construct a concrete instance of `EndpointMongodbSettingsPtrInput` via:
//
//	        EndpointMongodbSettingsArgs{...}
//
//	or:
//
//	        nil
type EndpointMongodbSettingsPtrInput interface {
	pulumi.Input

	ToEndpointMongodbSettingsPtrOutput() EndpointMongodbSettingsPtrOutput
	ToEndpointMongodbSettingsPtrOutputWithContext(context.Context) EndpointMongodbSettingsPtrOutput
}

type endpointMongodbSettingsPtrType EndpointMongodbSettingsArgs

func EndpointMongodbSettingsPtr(v *EndpointMongodbSettingsArgs) EndpointMongodbSettingsPtrInput {
	return (*endpointMongodbSettingsPtrType)(v)
}

func (*endpointMongodbSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointMongodbSettings)(nil)).Elem()
}

func (i *endpointMongodbSettingsPtrType) ToEndpointMongodbSettingsPtrOutput() EndpointMongodbSettingsPtrOutput {
	return i.ToEndpointMongodbSettingsPtrOutputWithContext(context.Background())
}

func (i *endpointMongodbSettingsPtrType) ToEndpointMongodbSettingsPtrOutputWithContext(ctx context.Context) EndpointMongodbSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointMongodbSettingsPtrOutput)
}

type EndpointMongodbSettingsOutput struct{ *pulumi.OutputState }

func (EndpointMongodbSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointMongodbSettings)(nil)).Elem()
}

func (o EndpointMongodbSettingsOutput) ToEndpointMongodbSettingsOutput() EndpointMongodbSettingsOutput {
	return o
}

func (o EndpointMongodbSettingsOutput) ToEndpointMongodbSettingsOutputWithContext(ctx context.Context) EndpointMongodbSettingsOutput {
	return o
}

func (o EndpointMongodbSettingsOutput) ToEndpointMongodbSettingsPtrOutput() EndpointMongodbSettingsPtrOutput {
	return o.ToEndpointMongodbSettingsPtrOutputWithContext(context.Background())
}

func (o EndpointMongodbSettingsOutput) ToEndpointMongodbSettingsPtrOutputWithContext(ctx context.Context) EndpointMongodbSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointMongodbSettings) *EndpointMongodbSettings {
		return &v
	}).(EndpointMongodbSettingsPtrOutput)
}

// Authentication mechanism to access the MongoDB source endpoint. Default is `default`.
func (o EndpointMongodbSettingsOutput) AuthMechanism() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointMongodbSettings) *string { return v.AuthMechanism }).(pulumi.StringPtrOutput)
}

// Authentication database name. Not used when `authType` is `no`. Default is `admin`.
func (o EndpointMongodbSettingsOutput) AuthSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointMongodbSettings) *string { return v.AuthSource }).(pulumi.StringPtrOutput)
}

// The type of authentication to perform when connecting to a Redis target. Options include `none`, `auth-token`, and `auth-role`. The `auth-token` option requires an `authPassword` value to be provided. The `auth-role` option requires `authUserName` and `authPassword` values to be provided.
func (o EndpointMongodbSettingsOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointMongodbSettings) *string { return v.AuthType }).(pulumi.StringPtrOutput)
}

// Number of documents to preview to determine the document organization. Use this setting when `nestingLevel` is set to `one`. Default is `1000`.
func (o EndpointMongodbSettingsOutput) DocsToInvestigate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointMongodbSettings) *string { return v.DocsToInvestigate }).(pulumi.StringPtrOutput)
}

// Document ID. Use this setting when `nestingLevel` is set to `none`. Default is `false`.
func (o EndpointMongodbSettingsOutput) ExtractDocId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointMongodbSettings) *string { return v.ExtractDocId }).(pulumi.StringPtrOutput)
}

// Specifies either document or table mode. Default is `none`. Valid values are `one` (table mode) and `none` (document mode).
func (o EndpointMongodbSettingsOutput) NestingLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointMongodbSettings) *string { return v.NestingLevel }).(pulumi.StringPtrOutput)
}

type EndpointMongodbSettingsPtrOutput struct{ *pulumi.OutputState }

func (EndpointMongodbSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointMongodbSettings)(nil)).Elem()
}

func (o EndpointMongodbSettingsPtrOutput) ToEndpointMongodbSettingsPtrOutput() EndpointMongodbSettingsPtrOutput {
	return o
}

func (o EndpointMongodbSettingsPtrOutput) ToEndpointMongodbSettingsPtrOutputWithContext(ctx context.Context) EndpointMongodbSettingsPtrOutput {
	return o
}

func (o EndpointMongodbSettingsPtrOutput) Elem() EndpointMongodbSettingsOutput {
	return o.ApplyT(func(v *EndpointMongodbSettings) EndpointMongodbSettings {
		if v != nil {
			return *v
		}
		var ret EndpointMongodbSettings
		return ret
	}).(EndpointMongodbSettingsOutput)
}

// Authentication mechanism to access the MongoDB source endpoint. Default is `default`.
func (o EndpointMongodbSettingsPtrOutput) AuthMechanism() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointMongodbSettings) *string {
		if v == nil {
			return nil
		}
		return v.AuthMechanism
	}).(pulumi.StringPtrOutput)
}

// Authentication database name. Not used when `authType` is `no`. Default is `admin`.
func (o EndpointMongodbSettingsPtrOutput) AuthSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointMongodbSettings) *string {
		if v == nil {
			return nil
		}
		return v.AuthSource
	}).(pulumi.StringPtrOutput)
}

// The type of authentication to perform when connecting to a Redis target. Options include `none`, `auth-token`, and `auth-role`. The `auth-token` option requires an `authPassword` value to be provided. The `auth-role` option requires `authUserName` and `authPassword` values to be provided.
func (o EndpointMongodbSettingsPtrOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointMongodbSettings) *string {
		if v == nil {
			return nil
		}
		return v.AuthType
	}).(pulumi.StringPtrOutput)
}

// Number of documents to preview to determine the document organization. Use this setting when `nestingLevel` is set to `one`. Default is `1000`.
func (o EndpointMongodbSettingsPtrOutput) DocsToInvestigate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointMongodbSettings) *string {
		if v == nil {
			return nil
		}
		return v.DocsToInvestigate
	}).(pulumi.StringPtrOutput)
}

// Document ID. Use this setting when `nestingLevel` is set to `none`. Default is `false`.
func (o EndpointMongodbSettingsPtrOutput) ExtractDocId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointMongodbSettings) *string {
		if v == nil {
			return nil
		}
		return v.ExtractDocId
	}).(pulumi.StringPtrOutput)
}

// Specifies either document or table mode. Default is `none`. Valid values are `one` (table mode) and `none` (document mode).
func (o EndpointMongodbSettingsPtrOutput) NestingLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointMongodbSettings) *string {
		if v == nil {
			return nil
		}
		return v.NestingLevel
	}).(pulumi.StringPtrOutput)
}

type EndpointRedisSettings struct {
	// The password provided with the auth-role and auth-token options of the AuthType setting for a Redis target endpoint.
	AuthPassword *string `pulumi:"authPassword"`
	// The type of authentication to perform when connecting to a Redis target. Options include `none`, `auth-token`, and `auth-role`. The `auth-token` option requires an `authPassword` value to be provided. The `auth-role` option requires `authUserName` and `authPassword` values to be provided.
	AuthType string `pulumi:"authType"`
	// The username provided with the `auth-role` option of the AuthType setting for a Redis target endpoint.
	AuthUserName *string `pulumi:"authUserName"`
	// Transmission Control Protocol (TCP) port for the endpoint.
	Port int `pulumi:"port"`
	// Fully qualified domain name of the endpoint.
	ServerName string `pulumi:"serverName"`
	// The Amazon Resource Name (ARN) for the certificate authority (CA) that DMS uses to connect to your Redis target endpoint.
	SslCaCertificateArn *string `pulumi:"sslCaCertificateArn"`
	// The plaintext option doesn't provide Transport Layer Security (TLS) encryption for traffic between endpoint and database. Options include `plaintext`, `ssl-encryption`. The default is `ssl-encryption`.
	SslSecurityProtocol *string `pulumi:"sslSecurityProtocol"`
}

// EndpointRedisSettingsInput is an input type that accepts EndpointRedisSettingsArgs and EndpointRedisSettingsOutput values.
// You can construct a concrete instance of `EndpointRedisSettingsInput` via:
//
//	EndpointRedisSettingsArgs{...}
type EndpointRedisSettingsInput interface {
	pulumi.Input

	ToEndpointRedisSettingsOutput() EndpointRedisSettingsOutput
	ToEndpointRedisSettingsOutputWithContext(context.Context) EndpointRedisSettingsOutput
}

type EndpointRedisSettingsArgs struct {
	// The password provided with the auth-role and auth-token options of the AuthType setting for a Redis target endpoint.
	AuthPassword pulumi.StringPtrInput `pulumi:"authPassword"`
	// The type of authentication to perform when connecting to a Redis target. Options include `none`, `auth-token`, and `auth-role`. The `auth-token` option requires an `authPassword` value to be provided. The `auth-role` option requires `authUserName` and `authPassword` values to be provided.
	AuthType pulumi.StringInput `pulumi:"authType"`
	// The username provided with the `auth-role` option of the AuthType setting for a Redis target endpoint.
	AuthUserName pulumi.StringPtrInput `pulumi:"authUserName"`
	// Transmission Control Protocol (TCP) port for the endpoint.
	Port pulumi.IntInput `pulumi:"port"`
	// Fully qualified domain name of the endpoint.
	ServerName pulumi.StringInput `pulumi:"serverName"`
	// The Amazon Resource Name (ARN) for the certificate authority (CA) that DMS uses to connect to your Redis target endpoint.
	SslCaCertificateArn pulumi.StringPtrInput `pulumi:"sslCaCertificateArn"`
	// The plaintext option doesn't provide Transport Layer Security (TLS) encryption for traffic between endpoint and database. Options include `plaintext`, `ssl-encryption`. The default is `ssl-encryption`.
	SslSecurityProtocol pulumi.StringPtrInput `pulumi:"sslSecurityProtocol"`
}

func (EndpointRedisSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointRedisSettings)(nil)).Elem()
}

func (i EndpointRedisSettingsArgs) ToEndpointRedisSettingsOutput() EndpointRedisSettingsOutput {
	return i.ToEndpointRedisSettingsOutputWithContext(context.Background())
}

func (i EndpointRedisSettingsArgs) ToEndpointRedisSettingsOutputWithContext(ctx context.Context) EndpointRedisSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointRedisSettingsOutput)
}

func (i EndpointRedisSettingsArgs) ToEndpointRedisSettingsPtrOutput() EndpointRedisSettingsPtrOutput {
	return i.ToEndpointRedisSettingsPtrOutputWithContext(context.Background())
}

func (i EndpointRedisSettingsArgs) ToEndpointRedisSettingsPtrOutputWithContext(ctx context.Context) EndpointRedisSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointRedisSettingsOutput).ToEndpointRedisSettingsPtrOutputWithContext(ctx)
}

// EndpointRedisSettingsPtrInput is an input type that accepts EndpointRedisSettingsArgs, EndpointRedisSettingsPtr and EndpointRedisSettingsPtrOutput values.
// You can construct a concrete instance of `EndpointRedisSettingsPtrInput` via:
//
//	        EndpointRedisSettingsArgs{...}
//
//	or:
//
//	        nil
type EndpointRedisSettingsPtrInput interface {
	pulumi.Input

	ToEndpointRedisSettingsPtrOutput() EndpointRedisSettingsPtrOutput
	ToEndpointRedisSettingsPtrOutputWithContext(context.Context) EndpointRedisSettingsPtrOutput
}

type endpointRedisSettingsPtrType EndpointRedisSettingsArgs

func EndpointRedisSettingsPtr(v *EndpointRedisSettingsArgs) EndpointRedisSettingsPtrInput {
	return (*endpointRedisSettingsPtrType)(v)
}

func (*endpointRedisSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointRedisSettings)(nil)).Elem()
}

func (i *endpointRedisSettingsPtrType) ToEndpointRedisSettingsPtrOutput() EndpointRedisSettingsPtrOutput {
	return i.ToEndpointRedisSettingsPtrOutputWithContext(context.Background())
}

func (i *endpointRedisSettingsPtrType) ToEndpointRedisSettingsPtrOutputWithContext(ctx context.Context) EndpointRedisSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointRedisSettingsPtrOutput)
}

type EndpointRedisSettingsOutput struct{ *pulumi.OutputState }

func (EndpointRedisSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointRedisSettings)(nil)).Elem()
}

func (o EndpointRedisSettingsOutput) ToEndpointRedisSettingsOutput() EndpointRedisSettingsOutput {
	return o
}

func (o EndpointRedisSettingsOutput) ToEndpointRedisSettingsOutputWithContext(ctx context.Context) EndpointRedisSettingsOutput {
	return o
}

func (o EndpointRedisSettingsOutput) ToEndpointRedisSettingsPtrOutput() EndpointRedisSettingsPtrOutput {
	return o.ToEndpointRedisSettingsPtrOutputWithContext(context.Background())
}

func (o EndpointRedisSettingsOutput) ToEndpointRedisSettingsPtrOutputWithContext(ctx context.Context) EndpointRedisSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointRedisSettings) *EndpointRedisSettings {
		return &v
	}).(EndpointRedisSettingsPtrOutput)
}

// The password provided with the auth-role and auth-token options of the AuthType setting for a Redis target endpoint.
func (o EndpointRedisSettingsOutput) AuthPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointRedisSettings) *string { return v.AuthPassword }).(pulumi.StringPtrOutput)
}

// The type of authentication to perform when connecting to a Redis target. Options include `none`, `auth-token`, and `auth-role`. The `auth-token` option requires an `authPassword` value to be provided. The `auth-role` option requires `authUserName` and `authPassword` values to be provided.
func (o EndpointRedisSettingsOutput) AuthType() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointRedisSettings) string { return v.AuthType }).(pulumi.StringOutput)
}

// The username provided with the `auth-role` option of the AuthType setting for a Redis target endpoint.
func (o EndpointRedisSettingsOutput) AuthUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointRedisSettings) *string { return v.AuthUserName }).(pulumi.StringPtrOutput)
}

// Transmission Control Protocol (TCP) port for the endpoint.
func (o EndpointRedisSettingsOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v EndpointRedisSettings) int { return v.Port }).(pulumi.IntOutput)
}

// Fully qualified domain name of the endpoint.
func (o EndpointRedisSettingsOutput) ServerName() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointRedisSettings) string { return v.ServerName }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) for the certificate authority (CA) that DMS uses to connect to your Redis target endpoint.
func (o EndpointRedisSettingsOutput) SslCaCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointRedisSettings) *string { return v.SslCaCertificateArn }).(pulumi.StringPtrOutput)
}

// The plaintext option doesn't provide Transport Layer Security (TLS) encryption for traffic between endpoint and database. Options include `plaintext`, `ssl-encryption`. The default is `ssl-encryption`.
func (o EndpointRedisSettingsOutput) SslSecurityProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointRedisSettings) *string { return v.SslSecurityProtocol }).(pulumi.StringPtrOutput)
}

type EndpointRedisSettingsPtrOutput struct{ *pulumi.OutputState }

func (EndpointRedisSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointRedisSettings)(nil)).Elem()
}

func (o EndpointRedisSettingsPtrOutput) ToEndpointRedisSettingsPtrOutput() EndpointRedisSettingsPtrOutput {
	return o
}

func (o EndpointRedisSettingsPtrOutput) ToEndpointRedisSettingsPtrOutputWithContext(ctx context.Context) EndpointRedisSettingsPtrOutput {
	return o
}

func (o EndpointRedisSettingsPtrOutput) Elem() EndpointRedisSettingsOutput {
	return o.ApplyT(func(v *EndpointRedisSettings) EndpointRedisSettings {
		if v != nil {
			return *v
		}
		var ret EndpointRedisSettings
		return ret
	}).(EndpointRedisSettingsOutput)
}

// The password provided with the auth-role and auth-token options of the AuthType setting for a Redis target endpoint.
func (o EndpointRedisSettingsPtrOutput) AuthPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointRedisSettings) *string {
		if v == nil {
			return nil
		}
		return v.AuthPassword
	}).(pulumi.StringPtrOutput)
}

// The type of authentication to perform when connecting to a Redis target. Options include `none`, `auth-token`, and `auth-role`. The `auth-token` option requires an `authPassword` value to be provided. The `auth-role` option requires `authUserName` and `authPassword` values to be provided.
func (o EndpointRedisSettingsPtrOutput) AuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointRedisSettings) *string {
		if v == nil {
			return nil
		}
		return &v.AuthType
	}).(pulumi.StringPtrOutput)
}

// The username provided with the `auth-role` option of the AuthType setting for a Redis target endpoint.
func (o EndpointRedisSettingsPtrOutput) AuthUserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointRedisSettings) *string {
		if v == nil {
			return nil
		}
		return v.AuthUserName
	}).(pulumi.StringPtrOutput)
}

// Transmission Control Protocol (TCP) port for the endpoint.
func (o EndpointRedisSettingsPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointRedisSettings) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// Fully qualified domain name of the endpoint.
func (o EndpointRedisSettingsPtrOutput) ServerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointRedisSettings) *string {
		if v == nil {
			return nil
		}
		return &v.ServerName
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) for the certificate authority (CA) that DMS uses to connect to your Redis target endpoint.
func (o EndpointRedisSettingsPtrOutput) SslCaCertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointRedisSettings) *string {
		if v == nil {
			return nil
		}
		return v.SslCaCertificateArn
	}).(pulumi.StringPtrOutput)
}

// The plaintext option doesn't provide Transport Layer Security (TLS) encryption for traffic between endpoint and database. Options include `plaintext`, `ssl-encryption`. The default is `ssl-encryption`.
func (o EndpointRedisSettingsPtrOutput) SslSecurityProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointRedisSettings) *string {
		if v == nil {
			return nil
		}
		return v.SslSecurityProtocol
	}).(pulumi.StringPtrOutput)
}

type EndpointRedshiftSettings struct {
	// S3 object prefix.
	BucketFolder *string `pulumi:"bucketFolder"`
	// S3 bucket name.
	BucketName *string `pulumi:"bucketName"`
	// Server-side encryption mode that you want to encrypt your .csv or .parquet object files copied to S3. Valid values are `SSE_S3` and `SSE_KMS`. Default is `SSE_S3`.
	EncryptionMode *string `pulumi:"encryptionMode"`
	// If you set encryptionMode to `SSE_KMS`, set this parameter to the ARN for the AWS KMS key.
	ServerSideEncryptionKmsKeyId *string `pulumi:"serverSideEncryptionKmsKeyId"`
	// ARN of the IAM Role with permissions to read from or write to the S3 Bucket.
	ServiceAccessRoleArn *string `pulumi:"serviceAccessRoleArn"`
}

// EndpointRedshiftSettingsInput is an input type that accepts EndpointRedshiftSettingsArgs and EndpointRedshiftSettingsOutput values.
// You can construct a concrete instance of `EndpointRedshiftSettingsInput` via:
//
//	EndpointRedshiftSettingsArgs{...}
type EndpointRedshiftSettingsInput interface {
	pulumi.Input

	ToEndpointRedshiftSettingsOutput() EndpointRedshiftSettingsOutput
	ToEndpointRedshiftSettingsOutputWithContext(context.Context) EndpointRedshiftSettingsOutput
}

type EndpointRedshiftSettingsArgs struct {
	// S3 object prefix.
	BucketFolder pulumi.StringPtrInput `pulumi:"bucketFolder"`
	// S3 bucket name.
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// Server-side encryption mode that you want to encrypt your .csv or .parquet object files copied to S3. Valid values are `SSE_S3` and `SSE_KMS`. Default is `SSE_S3`.
	EncryptionMode pulumi.StringPtrInput `pulumi:"encryptionMode"`
	// If you set encryptionMode to `SSE_KMS`, set this parameter to the ARN for the AWS KMS key.
	ServerSideEncryptionKmsKeyId pulumi.StringPtrInput `pulumi:"serverSideEncryptionKmsKeyId"`
	// ARN of the IAM Role with permissions to read from or write to the S3 Bucket.
	ServiceAccessRoleArn pulumi.StringPtrInput `pulumi:"serviceAccessRoleArn"`
}

func (EndpointRedshiftSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointRedshiftSettings)(nil)).Elem()
}

func (i EndpointRedshiftSettingsArgs) ToEndpointRedshiftSettingsOutput() EndpointRedshiftSettingsOutput {
	return i.ToEndpointRedshiftSettingsOutputWithContext(context.Background())
}

func (i EndpointRedshiftSettingsArgs) ToEndpointRedshiftSettingsOutputWithContext(ctx context.Context) EndpointRedshiftSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointRedshiftSettingsOutput)
}

func (i EndpointRedshiftSettingsArgs) ToEndpointRedshiftSettingsPtrOutput() EndpointRedshiftSettingsPtrOutput {
	return i.ToEndpointRedshiftSettingsPtrOutputWithContext(context.Background())
}

func (i EndpointRedshiftSettingsArgs) ToEndpointRedshiftSettingsPtrOutputWithContext(ctx context.Context) EndpointRedshiftSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointRedshiftSettingsOutput).ToEndpointRedshiftSettingsPtrOutputWithContext(ctx)
}

// EndpointRedshiftSettingsPtrInput is an input type that accepts EndpointRedshiftSettingsArgs, EndpointRedshiftSettingsPtr and EndpointRedshiftSettingsPtrOutput values.
// You can construct a concrete instance of `EndpointRedshiftSettingsPtrInput` via:
//
//	        EndpointRedshiftSettingsArgs{...}
//
//	or:
//
//	        nil
type EndpointRedshiftSettingsPtrInput interface {
	pulumi.Input

	ToEndpointRedshiftSettingsPtrOutput() EndpointRedshiftSettingsPtrOutput
	ToEndpointRedshiftSettingsPtrOutputWithContext(context.Context) EndpointRedshiftSettingsPtrOutput
}

type endpointRedshiftSettingsPtrType EndpointRedshiftSettingsArgs

func EndpointRedshiftSettingsPtr(v *EndpointRedshiftSettingsArgs) EndpointRedshiftSettingsPtrInput {
	return (*endpointRedshiftSettingsPtrType)(v)
}

func (*endpointRedshiftSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointRedshiftSettings)(nil)).Elem()
}

func (i *endpointRedshiftSettingsPtrType) ToEndpointRedshiftSettingsPtrOutput() EndpointRedshiftSettingsPtrOutput {
	return i.ToEndpointRedshiftSettingsPtrOutputWithContext(context.Background())
}

func (i *endpointRedshiftSettingsPtrType) ToEndpointRedshiftSettingsPtrOutputWithContext(ctx context.Context) EndpointRedshiftSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointRedshiftSettingsPtrOutput)
}

type EndpointRedshiftSettingsOutput struct{ *pulumi.OutputState }

func (EndpointRedshiftSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointRedshiftSettings)(nil)).Elem()
}

func (o EndpointRedshiftSettingsOutput) ToEndpointRedshiftSettingsOutput() EndpointRedshiftSettingsOutput {
	return o
}

func (o EndpointRedshiftSettingsOutput) ToEndpointRedshiftSettingsOutputWithContext(ctx context.Context) EndpointRedshiftSettingsOutput {
	return o
}

func (o EndpointRedshiftSettingsOutput) ToEndpointRedshiftSettingsPtrOutput() EndpointRedshiftSettingsPtrOutput {
	return o.ToEndpointRedshiftSettingsPtrOutputWithContext(context.Background())
}

func (o EndpointRedshiftSettingsOutput) ToEndpointRedshiftSettingsPtrOutputWithContext(ctx context.Context) EndpointRedshiftSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointRedshiftSettings) *EndpointRedshiftSettings {
		return &v
	}).(EndpointRedshiftSettingsPtrOutput)
}

// S3 object prefix.
func (o EndpointRedshiftSettingsOutput) BucketFolder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointRedshiftSettings) *string { return v.BucketFolder }).(pulumi.StringPtrOutput)
}

// S3 bucket name.
func (o EndpointRedshiftSettingsOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointRedshiftSettings) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

// Server-side encryption mode that you want to encrypt your .csv or .parquet object files copied to S3. Valid values are `SSE_S3` and `SSE_KMS`. Default is `SSE_S3`.
func (o EndpointRedshiftSettingsOutput) EncryptionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointRedshiftSettings) *string { return v.EncryptionMode }).(pulumi.StringPtrOutput)
}

// If you set encryptionMode to `SSE_KMS`, set this parameter to the ARN for the AWS KMS key.
func (o EndpointRedshiftSettingsOutput) ServerSideEncryptionKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointRedshiftSettings) *string { return v.ServerSideEncryptionKmsKeyId }).(pulumi.StringPtrOutput)
}

// ARN of the IAM Role with permissions to read from or write to the S3 Bucket.
func (o EndpointRedshiftSettingsOutput) ServiceAccessRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointRedshiftSettings) *string { return v.ServiceAccessRoleArn }).(pulumi.StringPtrOutput)
}

type EndpointRedshiftSettingsPtrOutput struct{ *pulumi.OutputState }

func (EndpointRedshiftSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointRedshiftSettings)(nil)).Elem()
}

func (o EndpointRedshiftSettingsPtrOutput) ToEndpointRedshiftSettingsPtrOutput() EndpointRedshiftSettingsPtrOutput {
	return o
}

func (o EndpointRedshiftSettingsPtrOutput) ToEndpointRedshiftSettingsPtrOutputWithContext(ctx context.Context) EndpointRedshiftSettingsPtrOutput {
	return o
}

func (o EndpointRedshiftSettingsPtrOutput) Elem() EndpointRedshiftSettingsOutput {
	return o.ApplyT(func(v *EndpointRedshiftSettings) EndpointRedshiftSettings {
		if v != nil {
			return *v
		}
		var ret EndpointRedshiftSettings
		return ret
	}).(EndpointRedshiftSettingsOutput)
}

// S3 object prefix.
func (o EndpointRedshiftSettingsPtrOutput) BucketFolder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointRedshiftSettings) *string {
		if v == nil {
			return nil
		}
		return v.BucketFolder
	}).(pulumi.StringPtrOutput)
}

// S3 bucket name.
func (o EndpointRedshiftSettingsPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointRedshiftSettings) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Server-side encryption mode that you want to encrypt your .csv or .parquet object files copied to S3. Valid values are `SSE_S3` and `SSE_KMS`. Default is `SSE_S3`.
func (o EndpointRedshiftSettingsPtrOutput) EncryptionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointRedshiftSettings) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionMode
	}).(pulumi.StringPtrOutput)
}

// If you set encryptionMode to `SSE_KMS`, set this parameter to the ARN for the AWS KMS key.
func (o EndpointRedshiftSettingsPtrOutput) ServerSideEncryptionKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointRedshiftSettings) *string {
		if v == nil {
			return nil
		}
		return v.ServerSideEncryptionKmsKeyId
	}).(pulumi.StringPtrOutput)
}

// ARN of the IAM Role with permissions to read from or write to the S3 Bucket.
func (o EndpointRedshiftSettingsPtrOutput) ServiceAccessRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointRedshiftSettings) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccessRoleArn
	}).(pulumi.StringPtrOutput)
}

type EndpointS3Settings struct {
	// Whether to add column name information to the .csv output file. Default is `false`.
	AddColumnName *bool `pulumi:"addColumnName"`
	// S3 object prefix.
	BucketFolder *string `pulumi:"bucketFolder"`
	// S3 bucket name.
	BucketName *string `pulumi:"bucketName"`
	// Predefined (canned) access control list for objects created in an S3 bucket. Valid values include `NONE`, `PRIVATE`, `PUBLIC_READ`, `PUBLIC_READ_WRITE`, `AUTHENTICATED_READ`, `AWS_EXEC_READ`, `BUCKET_OWNER_READ`, and `BUCKET_OWNER_FULL_CONTROL`. Default is `NONE`.
	CannedAclForObjects *string `pulumi:"cannedAclForObjects"`
	// Whether to write insert and update operations to .csv or .parquet output files. Default is `false`.
	CdcInsertsAndUpdates *bool `pulumi:"cdcInsertsAndUpdates"`
	// Whether to write insert operations to .csv or .parquet output files. Default is `false`.
	CdcInsertsOnly *bool `pulumi:"cdcInsertsOnly"`
	// Maximum length of the interval, defined in seconds, after which to output a file to Amazon S3. Default is `60`.
	CdcMaxBatchInterval *int `pulumi:"cdcMaxBatchInterval"`
	// Minimum file size, defined in megabytes, to reach for a file output. Default is `32`.
	CdcMinFileSize *int `pulumi:"cdcMinFileSize"`
	// Folder path of CDC files. For an S3 source, this setting is required if a task captures change data; otherwise, it's optional. If `cdcPath` is set, AWS DMS reads CDC files from this path and replicates the data changes to the target endpoint. Supported in AWS DMS versions 3.4.2 and later.
	CdcPath *string `pulumi:"cdcPath"`
	// Set to compress target files. Default is `NONE`. Valid values are `GZIP` and `NONE`.
	CompressionType *string `pulumi:"compressionType"`
	// Delimiter used to separate columns in the source files. Default is `,`.
	CsvDelimiter *string `pulumi:"csvDelimiter"`
	// String to use for all columns not included in the supplemental log.
	CsvNoSupValue *string `pulumi:"csvNoSupValue"`
	// String to as null when writing to the target.
	CsvNullValue *string `pulumi:"csvNullValue"`
	// Delimiter used to separate rows in the source files. Default is `\n`.
	CsvRowDelimiter *string `pulumi:"csvRowDelimiter"`
	// Output format for the files that AWS DMS uses to create S3 objects. Valid values are `csv` and `parquet`. Default is `csv`.
	DataFormat *string `pulumi:"dataFormat"`
	// Size of one data page in bytes. Default is `1048576` (1 MiB).
	DataPageSize *int `pulumi:"dataPageSize"`
	// Date separating delimiter to use during folder partitioning. Valid values are `SLASH`, `UNDERSCORE`, `DASH`, and `NONE`. Default is `SLASH`.
	DatePartitionDelimiter *string `pulumi:"datePartitionDelimiter"`
	// Partition S3 bucket folders based on transaction commit dates. Default is `false`.
	DatePartitionEnabled *bool `pulumi:"datePartitionEnabled"`
	// Date format to use during folder partitioning. Use this parameter when `datePartitionEnabled` is set to true. Valid values are `YYYYMMDD`, `YYYYMMDDHH`, `YYYYMM`, `MMYYYYDD`, and `DDMMYYYY`. Default is `YYYYMMDD`.
	DatePartitionSequence *string `pulumi:"datePartitionSequence"`
	// Maximum size in bytes of an encoded dictionary page of a column. Default is `1048576` (1 MiB).
	DictPageSizeLimit *int `pulumi:"dictPageSizeLimit"`
	// Whether to enable statistics for Parquet pages and row groups. Default is `true`.
	EnableStatistics *bool `pulumi:"enableStatistics"`
	// Type of encoding to use. Value values are `rleDictionary`, `plain`, and `plainDictionary`. Default is `rleDictionary`.
	EncodingType *string `pulumi:"encodingType"`
	// Server-side encryption mode that you want to encrypt your .csv or .parquet object files copied to S3. Valid values are `SSE_S3` and `SSE_KMS`. Default is `SSE_S3`.
	EncryptionMode *string `pulumi:"encryptionMode"`
	// JSON document that describes how AWS DMS should interpret the data.
	ExternalTableDefinition *string `pulumi:"externalTableDefinition"`
	// When this value is set to `1`, DMS ignores the first row header in a .csv file. Default is `0`.
	IgnoreHeadersRow *int `pulumi:"ignoreHeadersRow"`
	// Whether to enable a full load to write INSERT operations to the .csv output files only to indicate how the rows were added to the source database. Default is `false`.
	IncludeOpForFullLoad *bool `pulumi:"includeOpForFullLoad"`
	// Maximum size (in KB) of any .csv file to be created while migrating to an S3 target during full load. Valid values are from `1` to `1048576`. Default is `1048576` (1 GB).
	MaxFileSize *int `pulumi:"maxFileSize"`
	// - Specifies the precision of any TIMESTAMP column values written to an S3 object file in .parquet format. Default is `false`.
	ParquetTimestampInMillisecond *bool `pulumi:"parquetTimestampInMillisecond"`
	// Version of the .parquet file format. Default is `parquet-1-0`. Valid values are `parquet-1-0` and `parquet-2-0`.
	ParquetVersion *string `pulumi:"parquetVersion"`
	// Whether DMS saves the transaction order for a CDC load on the S3 target specified by `cdcPath`. Default is `false`.
	PreserveTransactions *bool `pulumi:"preserveTransactions"`
	// For an S3 source, whether each leading double quotation mark has to be followed by an ending double quotation mark. Default is `true`.
	Rfc4180 *bool `pulumi:"rfc4180"`
	// Number of rows in a row group. Default is `10000`.
	RowGroupLength *int `pulumi:"rowGroupLength"`
	// If you set encryptionMode to `SSE_KMS`, set this parameter to the ARN for the AWS KMS key.
	ServerSideEncryptionKmsKeyId *string `pulumi:"serverSideEncryptionKmsKeyId"`
	// ARN of the IAM Role with permissions to read from or write to the S3 Bucket.
	ServiceAccessRoleArn *string `pulumi:"serviceAccessRoleArn"`
	// Column to add with timestamp information to the endpoint data for an Amazon S3 target.
	TimestampColumnName *string `pulumi:"timestampColumnName"`
	// Whether to use `csvNoSupValue` for columns not included in the supplemental log.
	UseCsvNoSupValue *bool `pulumi:"useCsvNoSupValue"`
}

// EndpointS3SettingsInput is an input type that accepts EndpointS3SettingsArgs and EndpointS3SettingsOutput values.
// You can construct a concrete instance of `EndpointS3SettingsInput` via:
//
//	EndpointS3SettingsArgs{...}
type EndpointS3SettingsInput interface {
	pulumi.Input

	ToEndpointS3SettingsOutput() EndpointS3SettingsOutput
	ToEndpointS3SettingsOutputWithContext(context.Context) EndpointS3SettingsOutput
}

type EndpointS3SettingsArgs struct {
	// Whether to add column name information to the .csv output file. Default is `false`.
	AddColumnName pulumi.BoolPtrInput `pulumi:"addColumnName"`
	// S3 object prefix.
	BucketFolder pulumi.StringPtrInput `pulumi:"bucketFolder"`
	// S3 bucket name.
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// Predefined (canned) access control list for objects created in an S3 bucket. Valid values include `NONE`, `PRIVATE`, `PUBLIC_READ`, `PUBLIC_READ_WRITE`, `AUTHENTICATED_READ`, `AWS_EXEC_READ`, `BUCKET_OWNER_READ`, and `BUCKET_OWNER_FULL_CONTROL`. Default is `NONE`.
	CannedAclForObjects pulumi.StringPtrInput `pulumi:"cannedAclForObjects"`
	// Whether to write insert and update operations to .csv or .parquet output files. Default is `false`.
	CdcInsertsAndUpdates pulumi.BoolPtrInput `pulumi:"cdcInsertsAndUpdates"`
	// Whether to write insert operations to .csv or .parquet output files. Default is `false`.
	CdcInsertsOnly pulumi.BoolPtrInput `pulumi:"cdcInsertsOnly"`
	// Maximum length of the interval, defined in seconds, after which to output a file to Amazon S3. Default is `60`.
	CdcMaxBatchInterval pulumi.IntPtrInput `pulumi:"cdcMaxBatchInterval"`
	// Minimum file size, defined in megabytes, to reach for a file output. Default is `32`.
	CdcMinFileSize pulumi.IntPtrInput `pulumi:"cdcMinFileSize"`
	// Folder path of CDC files. For an S3 source, this setting is required if a task captures change data; otherwise, it's optional. If `cdcPath` is set, AWS DMS reads CDC files from this path and replicates the data changes to the target endpoint. Supported in AWS DMS versions 3.4.2 and later.
	CdcPath pulumi.StringPtrInput `pulumi:"cdcPath"`
	// Set to compress target files. Default is `NONE`. Valid values are `GZIP` and `NONE`.
	CompressionType pulumi.StringPtrInput `pulumi:"compressionType"`
	// Delimiter used to separate columns in the source files. Default is `,`.
	CsvDelimiter pulumi.StringPtrInput `pulumi:"csvDelimiter"`
	// String to use for all columns not included in the supplemental log.
	CsvNoSupValue pulumi.StringPtrInput `pulumi:"csvNoSupValue"`
	// String to as null when writing to the target.
	CsvNullValue pulumi.StringPtrInput `pulumi:"csvNullValue"`
	// Delimiter used to separate rows in the source files. Default is `\n`.
	CsvRowDelimiter pulumi.StringPtrInput `pulumi:"csvRowDelimiter"`
	// Output format for the files that AWS DMS uses to create S3 objects. Valid values are `csv` and `parquet`. Default is `csv`.
	DataFormat pulumi.StringPtrInput `pulumi:"dataFormat"`
	// Size of one data page in bytes. Default is `1048576` (1 MiB).
	DataPageSize pulumi.IntPtrInput `pulumi:"dataPageSize"`
	// Date separating delimiter to use during folder partitioning. Valid values are `SLASH`, `UNDERSCORE`, `DASH`, and `NONE`. Default is `SLASH`.
	DatePartitionDelimiter pulumi.StringPtrInput `pulumi:"datePartitionDelimiter"`
	// Partition S3 bucket folders based on transaction commit dates. Default is `false`.
	DatePartitionEnabled pulumi.BoolPtrInput `pulumi:"datePartitionEnabled"`
	// Date format to use during folder partitioning. Use this parameter when `datePartitionEnabled` is set to true. Valid values are `YYYYMMDD`, `YYYYMMDDHH`, `YYYYMM`, `MMYYYYDD`, and `DDMMYYYY`. Default is `YYYYMMDD`.
	DatePartitionSequence pulumi.StringPtrInput `pulumi:"datePartitionSequence"`
	// Maximum size in bytes of an encoded dictionary page of a column. Default is `1048576` (1 MiB).
	DictPageSizeLimit pulumi.IntPtrInput `pulumi:"dictPageSizeLimit"`
	// Whether to enable statistics for Parquet pages and row groups. Default is `true`.
	EnableStatistics pulumi.BoolPtrInput `pulumi:"enableStatistics"`
	// Type of encoding to use. Value values are `rleDictionary`, `plain`, and `plainDictionary`. Default is `rleDictionary`.
	EncodingType pulumi.StringPtrInput `pulumi:"encodingType"`
	// Server-side encryption mode that you want to encrypt your .csv or .parquet object files copied to S3. Valid values are `SSE_S3` and `SSE_KMS`. Default is `SSE_S3`.
	EncryptionMode pulumi.StringPtrInput `pulumi:"encryptionMode"`
	// JSON document that describes how AWS DMS should interpret the data.
	ExternalTableDefinition pulumi.StringPtrInput `pulumi:"externalTableDefinition"`
	// When this value is set to `1`, DMS ignores the first row header in a .csv file. Default is `0`.
	IgnoreHeadersRow pulumi.IntPtrInput `pulumi:"ignoreHeadersRow"`
	// Whether to enable a full load to write INSERT operations to the .csv output files only to indicate how the rows were added to the source database. Default is `false`.
	IncludeOpForFullLoad pulumi.BoolPtrInput `pulumi:"includeOpForFullLoad"`
	// Maximum size (in KB) of any .csv file to be created while migrating to an S3 target during full load. Valid values are from `1` to `1048576`. Default is `1048576` (1 GB).
	MaxFileSize pulumi.IntPtrInput `pulumi:"maxFileSize"`
	// - Specifies the precision of any TIMESTAMP column values written to an S3 object file in .parquet format. Default is `false`.
	ParquetTimestampInMillisecond pulumi.BoolPtrInput `pulumi:"parquetTimestampInMillisecond"`
	// Version of the .parquet file format. Default is `parquet-1-0`. Valid values are `parquet-1-0` and `parquet-2-0`.
	ParquetVersion pulumi.StringPtrInput `pulumi:"parquetVersion"`
	// Whether DMS saves the transaction order for a CDC load on the S3 target specified by `cdcPath`. Default is `false`.
	PreserveTransactions pulumi.BoolPtrInput `pulumi:"preserveTransactions"`
	// For an S3 source, whether each leading double quotation mark has to be followed by an ending double quotation mark. Default is `true`.
	Rfc4180 pulumi.BoolPtrInput `pulumi:"rfc4180"`
	// Number of rows in a row group. Default is `10000`.
	RowGroupLength pulumi.IntPtrInput `pulumi:"rowGroupLength"`
	// If you set encryptionMode to `SSE_KMS`, set this parameter to the ARN for the AWS KMS key.
	ServerSideEncryptionKmsKeyId pulumi.StringPtrInput `pulumi:"serverSideEncryptionKmsKeyId"`
	// ARN of the IAM Role with permissions to read from or write to the S3 Bucket.
	ServiceAccessRoleArn pulumi.StringPtrInput `pulumi:"serviceAccessRoleArn"`
	// Column to add with timestamp information to the endpoint data for an Amazon S3 target.
	TimestampColumnName pulumi.StringPtrInput `pulumi:"timestampColumnName"`
	// Whether to use `csvNoSupValue` for columns not included in the supplemental log.
	UseCsvNoSupValue pulumi.BoolPtrInput `pulumi:"useCsvNoSupValue"`
}

func (EndpointS3SettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointS3Settings)(nil)).Elem()
}

func (i EndpointS3SettingsArgs) ToEndpointS3SettingsOutput() EndpointS3SettingsOutput {
	return i.ToEndpointS3SettingsOutputWithContext(context.Background())
}

func (i EndpointS3SettingsArgs) ToEndpointS3SettingsOutputWithContext(ctx context.Context) EndpointS3SettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointS3SettingsOutput)
}

func (i EndpointS3SettingsArgs) ToEndpointS3SettingsPtrOutput() EndpointS3SettingsPtrOutput {
	return i.ToEndpointS3SettingsPtrOutputWithContext(context.Background())
}

func (i EndpointS3SettingsArgs) ToEndpointS3SettingsPtrOutputWithContext(ctx context.Context) EndpointS3SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointS3SettingsOutput).ToEndpointS3SettingsPtrOutputWithContext(ctx)
}

// EndpointS3SettingsPtrInput is an input type that accepts EndpointS3SettingsArgs, EndpointS3SettingsPtr and EndpointS3SettingsPtrOutput values.
// You can construct a concrete instance of `EndpointS3SettingsPtrInput` via:
//
//	        EndpointS3SettingsArgs{...}
//
//	or:
//
//	        nil
type EndpointS3SettingsPtrInput interface {
	pulumi.Input

	ToEndpointS3SettingsPtrOutput() EndpointS3SettingsPtrOutput
	ToEndpointS3SettingsPtrOutputWithContext(context.Context) EndpointS3SettingsPtrOutput
}

type endpointS3SettingsPtrType EndpointS3SettingsArgs

func EndpointS3SettingsPtr(v *EndpointS3SettingsArgs) EndpointS3SettingsPtrInput {
	return (*endpointS3SettingsPtrType)(v)
}

func (*endpointS3SettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointS3Settings)(nil)).Elem()
}

func (i *endpointS3SettingsPtrType) ToEndpointS3SettingsPtrOutput() EndpointS3SettingsPtrOutput {
	return i.ToEndpointS3SettingsPtrOutputWithContext(context.Background())
}

func (i *endpointS3SettingsPtrType) ToEndpointS3SettingsPtrOutputWithContext(ctx context.Context) EndpointS3SettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointS3SettingsPtrOutput)
}

type EndpointS3SettingsOutput struct{ *pulumi.OutputState }

func (EndpointS3SettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointS3Settings)(nil)).Elem()
}

func (o EndpointS3SettingsOutput) ToEndpointS3SettingsOutput() EndpointS3SettingsOutput {
	return o
}

func (o EndpointS3SettingsOutput) ToEndpointS3SettingsOutputWithContext(ctx context.Context) EndpointS3SettingsOutput {
	return o
}

func (o EndpointS3SettingsOutput) ToEndpointS3SettingsPtrOutput() EndpointS3SettingsPtrOutput {
	return o.ToEndpointS3SettingsPtrOutputWithContext(context.Background())
}

func (o EndpointS3SettingsOutput) ToEndpointS3SettingsPtrOutputWithContext(ctx context.Context) EndpointS3SettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EndpointS3Settings) *EndpointS3Settings {
		return &v
	}).(EndpointS3SettingsPtrOutput)
}

// Whether to add column name information to the .csv output file. Default is `false`.
func (o EndpointS3SettingsOutput) AddColumnName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *bool { return v.AddColumnName }).(pulumi.BoolPtrOutput)
}

// S3 object prefix.
func (o EndpointS3SettingsOutput) BucketFolder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *string { return v.BucketFolder }).(pulumi.StringPtrOutput)
}

// S3 bucket name.
func (o EndpointS3SettingsOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

// Predefined (canned) access control list for objects created in an S3 bucket. Valid values include `NONE`, `PRIVATE`, `PUBLIC_READ`, `PUBLIC_READ_WRITE`, `AUTHENTICATED_READ`, `AWS_EXEC_READ`, `BUCKET_OWNER_READ`, and `BUCKET_OWNER_FULL_CONTROL`. Default is `NONE`.
func (o EndpointS3SettingsOutput) CannedAclForObjects() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *string { return v.CannedAclForObjects }).(pulumi.StringPtrOutput)
}

// Whether to write insert and update operations to .csv or .parquet output files. Default is `false`.
func (o EndpointS3SettingsOutput) CdcInsertsAndUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *bool { return v.CdcInsertsAndUpdates }).(pulumi.BoolPtrOutput)
}

// Whether to write insert operations to .csv or .parquet output files. Default is `false`.
func (o EndpointS3SettingsOutput) CdcInsertsOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *bool { return v.CdcInsertsOnly }).(pulumi.BoolPtrOutput)
}

// Maximum length of the interval, defined in seconds, after which to output a file to Amazon S3. Default is `60`.
func (o EndpointS3SettingsOutput) CdcMaxBatchInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *int { return v.CdcMaxBatchInterval }).(pulumi.IntPtrOutput)
}

// Minimum file size, defined in megabytes, to reach for a file output. Default is `32`.
func (o EndpointS3SettingsOutput) CdcMinFileSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *int { return v.CdcMinFileSize }).(pulumi.IntPtrOutput)
}

// Folder path of CDC files. For an S3 source, this setting is required if a task captures change data; otherwise, it's optional. If `cdcPath` is set, AWS DMS reads CDC files from this path and replicates the data changes to the target endpoint. Supported in AWS DMS versions 3.4.2 and later.
func (o EndpointS3SettingsOutput) CdcPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *string { return v.CdcPath }).(pulumi.StringPtrOutput)
}

// Set to compress target files. Default is `NONE`. Valid values are `GZIP` and `NONE`.
func (o EndpointS3SettingsOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *string { return v.CompressionType }).(pulumi.StringPtrOutput)
}

// Delimiter used to separate columns in the source files. Default is `,`.
func (o EndpointS3SettingsOutput) CsvDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *string { return v.CsvDelimiter }).(pulumi.StringPtrOutput)
}

// String to use for all columns not included in the supplemental log.
func (o EndpointS3SettingsOutput) CsvNoSupValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *string { return v.CsvNoSupValue }).(pulumi.StringPtrOutput)
}

// String to as null when writing to the target.
func (o EndpointS3SettingsOutput) CsvNullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *string { return v.CsvNullValue }).(pulumi.StringPtrOutput)
}

// Delimiter used to separate rows in the source files. Default is `\n`.
func (o EndpointS3SettingsOutput) CsvRowDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *string { return v.CsvRowDelimiter }).(pulumi.StringPtrOutput)
}

// Output format for the files that AWS DMS uses to create S3 objects. Valid values are `csv` and `parquet`. Default is `csv`.
func (o EndpointS3SettingsOutput) DataFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *string { return v.DataFormat }).(pulumi.StringPtrOutput)
}

// Size of one data page in bytes. Default is `1048576` (1 MiB).
func (o EndpointS3SettingsOutput) DataPageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *int { return v.DataPageSize }).(pulumi.IntPtrOutput)
}

// Date separating delimiter to use during folder partitioning. Valid values are `SLASH`, `UNDERSCORE`, `DASH`, and `NONE`. Default is `SLASH`.
func (o EndpointS3SettingsOutput) DatePartitionDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *string { return v.DatePartitionDelimiter }).(pulumi.StringPtrOutput)
}

// Partition S3 bucket folders based on transaction commit dates. Default is `false`.
func (o EndpointS3SettingsOutput) DatePartitionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *bool { return v.DatePartitionEnabled }).(pulumi.BoolPtrOutput)
}

// Date format to use during folder partitioning. Use this parameter when `datePartitionEnabled` is set to true. Valid values are `YYYYMMDD`, `YYYYMMDDHH`, `YYYYMM`, `MMYYYYDD`, and `DDMMYYYY`. Default is `YYYYMMDD`.
func (o EndpointS3SettingsOutput) DatePartitionSequence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *string { return v.DatePartitionSequence }).(pulumi.StringPtrOutput)
}

// Maximum size in bytes of an encoded dictionary page of a column. Default is `1048576` (1 MiB).
func (o EndpointS3SettingsOutput) DictPageSizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *int { return v.DictPageSizeLimit }).(pulumi.IntPtrOutput)
}

// Whether to enable statistics for Parquet pages and row groups. Default is `true`.
func (o EndpointS3SettingsOutput) EnableStatistics() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *bool { return v.EnableStatistics }).(pulumi.BoolPtrOutput)
}

// Type of encoding to use. Value values are `rleDictionary`, `plain`, and `plainDictionary`. Default is `rleDictionary`.
func (o EndpointS3SettingsOutput) EncodingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *string { return v.EncodingType }).(pulumi.StringPtrOutput)
}

// Server-side encryption mode that you want to encrypt your .csv or .parquet object files copied to S3. Valid values are `SSE_S3` and `SSE_KMS`. Default is `SSE_S3`.
func (o EndpointS3SettingsOutput) EncryptionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *string { return v.EncryptionMode }).(pulumi.StringPtrOutput)
}

// JSON document that describes how AWS DMS should interpret the data.
func (o EndpointS3SettingsOutput) ExternalTableDefinition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *string { return v.ExternalTableDefinition }).(pulumi.StringPtrOutput)
}

// When this value is set to `1`, DMS ignores the first row header in a .csv file. Default is `0`.
func (o EndpointS3SettingsOutput) IgnoreHeadersRow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *int { return v.IgnoreHeadersRow }).(pulumi.IntPtrOutput)
}

// Whether to enable a full load to write INSERT operations to the .csv output files only to indicate how the rows were added to the source database. Default is `false`.
func (o EndpointS3SettingsOutput) IncludeOpForFullLoad() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *bool { return v.IncludeOpForFullLoad }).(pulumi.BoolPtrOutput)
}

// Maximum size (in KB) of any .csv file to be created while migrating to an S3 target during full load. Valid values are from `1` to `1048576`. Default is `1048576` (1 GB).
func (o EndpointS3SettingsOutput) MaxFileSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *int { return v.MaxFileSize }).(pulumi.IntPtrOutput)
}

// - Specifies the precision of any TIMESTAMP column values written to an S3 object file in .parquet format. Default is `false`.
func (o EndpointS3SettingsOutput) ParquetTimestampInMillisecond() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *bool { return v.ParquetTimestampInMillisecond }).(pulumi.BoolPtrOutput)
}

// Version of the .parquet file format. Default is `parquet-1-0`. Valid values are `parquet-1-0` and `parquet-2-0`.
func (o EndpointS3SettingsOutput) ParquetVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *string { return v.ParquetVersion }).(pulumi.StringPtrOutput)
}

// Whether DMS saves the transaction order for a CDC load on the S3 target specified by `cdcPath`. Default is `false`.
func (o EndpointS3SettingsOutput) PreserveTransactions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *bool { return v.PreserveTransactions }).(pulumi.BoolPtrOutput)
}

// For an S3 source, whether each leading double quotation mark has to be followed by an ending double quotation mark. Default is `true`.
func (o EndpointS3SettingsOutput) Rfc4180() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *bool { return v.Rfc4180 }).(pulumi.BoolPtrOutput)
}

// Number of rows in a row group. Default is `10000`.
func (o EndpointS3SettingsOutput) RowGroupLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *int { return v.RowGroupLength }).(pulumi.IntPtrOutput)
}

// If you set encryptionMode to `SSE_KMS`, set this parameter to the ARN for the AWS KMS key.
func (o EndpointS3SettingsOutput) ServerSideEncryptionKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *string { return v.ServerSideEncryptionKmsKeyId }).(pulumi.StringPtrOutput)
}

// ARN of the IAM Role with permissions to read from or write to the S3 Bucket.
func (o EndpointS3SettingsOutput) ServiceAccessRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *string { return v.ServiceAccessRoleArn }).(pulumi.StringPtrOutput)
}

// Column to add with timestamp information to the endpoint data for an Amazon S3 target.
func (o EndpointS3SettingsOutput) TimestampColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *string { return v.TimestampColumnName }).(pulumi.StringPtrOutput)
}

// Whether to use `csvNoSupValue` for columns not included in the supplemental log.
func (o EndpointS3SettingsOutput) UseCsvNoSupValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EndpointS3Settings) *bool { return v.UseCsvNoSupValue }).(pulumi.BoolPtrOutput)
}

type EndpointS3SettingsPtrOutput struct{ *pulumi.OutputState }

func (EndpointS3SettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointS3Settings)(nil)).Elem()
}

func (o EndpointS3SettingsPtrOutput) ToEndpointS3SettingsPtrOutput() EndpointS3SettingsPtrOutput {
	return o
}

func (o EndpointS3SettingsPtrOutput) ToEndpointS3SettingsPtrOutputWithContext(ctx context.Context) EndpointS3SettingsPtrOutput {
	return o
}

func (o EndpointS3SettingsPtrOutput) Elem() EndpointS3SettingsOutput {
	return o.ApplyT(func(v *EndpointS3Settings) EndpointS3Settings {
		if v != nil {
			return *v
		}
		var ret EndpointS3Settings
		return ret
	}).(EndpointS3SettingsOutput)
}

// Whether to add column name information to the .csv output file. Default is `false`.
func (o EndpointS3SettingsPtrOutput) AddColumnName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *bool {
		if v == nil {
			return nil
		}
		return v.AddColumnName
	}).(pulumi.BoolPtrOutput)
}

// S3 object prefix.
func (o EndpointS3SettingsPtrOutput) BucketFolder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *string {
		if v == nil {
			return nil
		}
		return v.BucketFolder
	}).(pulumi.StringPtrOutput)
}

// S3 bucket name.
func (o EndpointS3SettingsPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *string {
		if v == nil {
			return nil
		}
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Predefined (canned) access control list for objects created in an S3 bucket. Valid values include `NONE`, `PRIVATE`, `PUBLIC_READ`, `PUBLIC_READ_WRITE`, `AUTHENTICATED_READ`, `AWS_EXEC_READ`, `BUCKET_OWNER_READ`, and `BUCKET_OWNER_FULL_CONTROL`. Default is `NONE`.
func (o EndpointS3SettingsPtrOutput) CannedAclForObjects() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *string {
		if v == nil {
			return nil
		}
		return v.CannedAclForObjects
	}).(pulumi.StringPtrOutput)
}

// Whether to write insert and update operations to .csv or .parquet output files. Default is `false`.
func (o EndpointS3SettingsPtrOutput) CdcInsertsAndUpdates() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *bool {
		if v == nil {
			return nil
		}
		return v.CdcInsertsAndUpdates
	}).(pulumi.BoolPtrOutput)
}

// Whether to write insert operations to .csv or .parquet output files. Default is `false`.
func (o EndpointS3SettingsPtrOutput) CdcInsertsOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *bool {
		if v == nil {
			return nil
		}
		return v.CdcInsertsOnly
	}).(pulumi.BoolPtrOutput)
}

// Maximum length of the interval, defined in seconds, after which to output a file to Amazon S3. Default is `60`.
func (o EndpointS3SettingsPtrOutput) CdcMaxBatchInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *int {
		if v == nil {
			return nil
		}
		return v.CdcMaxBatchInterval
	}).(pulumi.IntPtrOutput)
}

// Minimum file size, defined in megabytes, to reach for a file output. Default is `32`.
func (o EndpointS3SettingsPtrOutput) CdcMinFileSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *int {
		if v == nil {
			return nil
		}
		return v.CdcMinFileSize
	}).(pulumi.IntPtrOutput)
}

// Folder path of CDC files. For an S3 source, this setting is required if a task captures change data; otherwise, it's optional. If `cdcPath` is set, AWS DMS reads CDC files from this path and replicates the data changes to the target endpoint. Supported in AWS DMS versions 3.4.2 and later.
func (o EndpointS3SettingsPtrOutput) CdcPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *string {
		if v == nil {
			return nil
		}
		return v.CdcPath
	}).(pulumi.StringPtrOutput)
}

// Set to compress target files. Default is `NONE`. Valid values are `GZIP` and `NONE`.
func (o EndpointS3SettingsPtrOutput) CompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *string {
		if v == nil {
			return nil
		}
		return v.CompressionType
	}).(pulumi.StringPtrOutput)
}

// Delimiter used to separate columns in the source files. Default is `,`.
func (o EndpointS3SettingsPtrOutput) CsvDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *string {
		if v == nil {
			return nil
		}
		return v.CsvDelimiter
	}).(pulumi.StringPtrOutput)
}

// String to use for all columns not included in the supplemental log.
func (o EndpointS3SettingsPtrOutput) CsvNoSupValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *string {
		if v == nil {
			return nil
		}
		return v.CsvNoSupValue
	}).(pulumi.StringPtrOutput)
}

// String to as null when writing to the target.
func (o EndpointS3SettingsPtrOutput) CsvNullValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *string {
		if v == nil {
			return nil
		}
		return v.CsvNullValue
	}).(pulumi.StringPtrOutput)
}

// Delimiter used to separate rows in the source files. Default is `\n`.
func (o EndpointS3SettingsPtrOutput) CsvRowDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *string {
		if v == nil {
			return nil
		}
		return v.CsvRowDelimiter
	}).(pulumi.StringPtrOutput)
}

// Output format for the files that AWS DMS uses to create S3 objects. Valid values are `csv` and `parquet`. Default is `csv`.
func (o EndpointS3SettingsPtrOutput) DataFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *string {
		if v == nil {
			return nil
		}
		return v.DataFormat
	}).(pulumi.StringPtrOutput)
}

// Size of one data page in bytes. Default is `1048576` (1 MiB).
func (o EndpointS3SettingsPtrOutput) DataPageSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *int {
		if v == nil {
			return nil
		}
		return v.DataPageSize
	}).(pulumi.IntPtrOutput)
}

// Date separating delimiter to use during folder partitioning. Valid values are `SLASH`, `UNDERSCORE`, `DASH`, and `NONE`. Default is `SLASH`.
func (o EndpointS3SettingsPtrOutput) DatePartitionDelimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *string {
		if v == nil {
			return nil
		}
		return v.DatePartitionDelimiter
	}).(pulumi.StringPtrOutput)
}

// Partition S3 bucket folders based on transaction commit dates. Default is `false`.
func (o EndpointS3SettingsPtrOutput) DatePartitionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *bool {
		if v == nil {
			return nil
		}
		return v.DatePartitionEnabled
	}).(pulumi.BoolPtrOutput)
}

// Date format to use during folder partitioning. Use this parameter when `datePartitionEnabled` is set to true. Valid values are `YYYYMMDD`, `YYYYMMDDHH`, `YYYYMM`, `MMYYYYDD`, and `DDMMYYYY`. Default is `YYYYMMDD`.
func (o EndpointS3SettingsPtrOutput) DatePartitionSequence() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *string {
		if v == nil {
			return nil
		}
		return v.DatePartitionSequence
	}).(pulumi.StringPtrOutput)
}

// Maximum size in bytes of an encoded dictionary page of a column. Default is `1048576` (1 MiB).
func (o EndpointS3SettingsPtrOutput) DictPageSizeLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *int {
		if v == nil {
			return nil
		}
		return v.DictPageSizeLimit
	}).(pulumi.IntPtrOutput)
}

// Whether to enable statistics for Parquet pages and row groups. Default is `true`.
func (o EndpointS3SettingsPtrOutput) EnableStatistics() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *bool {
		if v == nil {
			return nil
		}
		return v.EnableStatistics
	}).(pulumi.BoolPtrOutput)
}

// Type of encoding to use. Value values are `rleDictionary`, `plain`, and `plainDictionary`. Default is `rleDictionary`.
func (o EndpointS3SettingsPtrOutput) EncodingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *string {
		if v == nil {
			return nil
		}
		return v.EncodingType
	}).(pulumi.StringPtrOutput)
}

// Server-side encryption mode that you want to encrypt your .csv or .parquet object files copied to S3. Valid values are `SSE_S3` and `SSE_KMS`. Default is `SSE_S3`.
func (o EndpointS3SettingsPtrOutput) EncryptionMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionMode
	}).(pulumi.StringPtrOutput)
}

// JSON document that describes how AWS DMS should interpret the data.
func (o EndpointS3SettingsPtrOutput) ExternalTableDefinition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *string {
		if v == nil {
			return nil
		}
		return v.ExternalTableDefinition
	}).(pulumi.StringPtrOutput)
}

// When this value is set to `1`, DMS ignores the first row header in a .csv file. Default is `0`.
func (o EndpointS3SettingsPtrOutput) IgnoreHeadersRow() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *int {
		if v == nil {
			return nil
		}
		return v.IgnoreHeadersRow
	}).(pulumi.IntPtrOutput)
}

// Whether to enable a full load to write INSERT operations to the .csv output files only to indicate how the rows were added to the source database. Default is `false`.
func (o EndpointS3SettingsPtrOutput) IncludeOpForFullLoad() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeOpForFullLoad
	}).(pulumi.BoolPtrOutput)
}

// Maximum size (in KB) of any .csv file to be created while migrating to an S3 target during full load. Valid values are from `1` to `1048576`. Default is `1048576` (1 GB).
func (o EndpointS3SettingsPtrOutput) MaxFileSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *int {
		if v == nil {
			return nil
		}
		return v.MaxFileSize
	}).(pulumi.IntPtrOutput)
}

// - Specifies the precision of any TIMESTAMP column values written to an S3 object file in .parquet format. Default is `false`.
func (o EndpointS3SettingsPtrOutput) ParquetTimestampInMillisecond() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *bool {
		if v == nil {
			return nil
		}
		return v.ParquetTimestampInMillisecond
	}).(pulumi.BoolPtrOutput)
}

// Version of the .parquet file format. Default is `parquet-1-0`. Valid values are `parquet-1-0` and `parquet-2-0`.
func (o EndpointS3SettingsPtrOutput) ParquetVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *string {
		if v == nil {
			return nil
		}
		return v.ParquetVersion
	}).(pulumi.StringPtrOutput)
}

// Whether DMS saves the transaction order for a CDC load on the S3 target specified by `cdcPath`. Default is `false`.
func (o EndpointS3SettingsPtrOutput) PreserveTransactions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *bool {
		if v == nil {
			return nil
		}
		return v.PreserveTransactions
	}).(pulumi.BoolPtrOutput)
}

// For an S3 source, whether each leading double quotation mark has to be followed by an ending double quotation mark. Default is `true`.
func (o EndpointS3SettingsPtrOutput) Rfc4180() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *bool {
		if v == nil {
			return nil
		}
		return v.Rfc4180
	}).(pulumi.BoolPtrOutput)
}

// Number of rows in a row group. Default is `10000`.
func (o EndpointS3SettingsPtrOutput) RowGroupLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *int {
		if v == nil {
			return nil
		}
		return v.RowGroupLength
	}).(pulumi.IntPtrOutput)
}

// If you set encryptionMode to `SSE_KMS`, set this parameter to the ARN for the AWS KMS key.
func (o EndpointS3SettingsPtrOutput) ServerSideEncryptionKmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *string {
		if v == nil {
			return nil
		}
		return v.ServerSideEncryptionKmsKeyId
	}).(pulumi.StringPtrOutput)
}

// ARN of the IAM Role with permissions to read from or write to the S3 Bucket.
func (o EndpointS3SettingsPtrOutput) ServiceAccessRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *string {
		if v == nil {
			return nil
		}
		return v.ServiceAccessRoleArn
	}).(pulumi.StringPtrOutput)
}

// Column to add with timestamp information to the endpoint data for an Amazon S3 target.
func (o EndpointS3SettingsPtrOutput) TimestampColumnName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *string {
		if v == nil {
			return nil
		}
		return v.TimestampColumnName
	}).(pulumi.StringPtrOutput)
}

// Whether to use `csvNoSupValue` for columns not included in the supplemental log.
func (o EndpointS3SettingsPtrOutput) UseCsvNoSupValue() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EndpointS3Settings) *bool {
		if v == nil {
			return nil
		}
		return v.UseCsvNoSupValue
	}).(pulumi.BoolPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointElasticsearchSettingsInput)(nil)).Elem(), EndpointElasticsearchSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointElasticsearchSettingsPtrInput)(nil)).Elem(), EndpointElasticsearchSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointKafkaSettingsInput)(nil)).Elem(), EndpointKafkaSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointKafkaSettingsPtrInput)(nil)).Elem(), EndpointKafkaSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointKinesisSettingsInput)(nil)).Elem(), EndpointKinesisSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointKinesisSettingsPtrInput)(nil)).Elem(), EndpointKinesisSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointMongodbSettingsInput)(nil)).Elem(), EndpointMongodbSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointMongodbSettingsPtrInput)(nil)).Elem(), EndpointMongodbSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointRedisSettingsInput)(nil)).Elem(), EndpointRedisSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointRedisSettingsPtrInput)(nil)).Elem(), EndpointRedisSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointRedshiftSettingsInput)(nil)).Elem(), EndpointRedshiftSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointRedshiftSettingsPtrInput)(nil)).Elem(), EndpointRedshiftSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointS3SettingsInput)(nil)).Elem(), EndpointS3SettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointS3SettingsPtrInput)(nil)).Elem(), EndpointS3SettingsArgs{})
	pulumi.RegisterOutputType(EndpointElasticsearchSettingsOutput{})
	pulumi.RegisterOutputType(EndpointElasticsearchSettingsPtrOutput{})
	pulumi.RegisterOutputType(EndpointKafkaSettingsOutput{})
	pulumi.RegisterOutputType(EndpointKafkaSettingsPtrOutput{})
	pulumi.RegisterOutputType(EndpointKinesisSettingsOutput{})
	pulumi.RegisterOutputType(EndpointKinesisSettingsPtrOutput{})
	pulumi.RegisterOutputType(EndpointMongodbSettingsOutput{})
	pulumi.RegisterOutputType(EndpointMongodbSettingsPtrOutput{})
	pulumi.RegisterOutputType(EndpointRedisSettingsOutput{})
	pulumi.RegisterOutputType(EndpointRedisSettingsPtrOutput{})
	pulumi.RegisterOutputType(EndpointRedshiftSettingsOutput{})
	pulumi.RegisterOutputType(EndpointRedshiftSettingsPtrOutput{})
	pulumi.RegisterOutputType(EndpointS3SettingsOutput{})
	pulumi.RegisterOutputType(EndpointS3SettingsPtrOutput{})
}
