// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for managing an AWS DMS (Database Migration) Replication Instance.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/dms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dms.LookupReplicationInstance(ctx, &dms.LookupReplicationInstanceArgs{
//				ReplicationInstanceId: aws_dms_replication_instance.Test.Replication_instance_id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupReplicationInstance(ctx *pulumi.Context, args *LookupReplicationInstanceArgs, opts ...pulumi.InvokeOption) (*LookupReplicationInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupReplicationInstanceResult
	err := ctx.Invoke("aws:dms/getReplicationInstance:getReplicationInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getReplicationInstance.
type LookupReplicationInstanceArgs struct {
	// The replication instance identifier.
	ReplicationInstanceId string            `pulumi:"replicationInstanceId"`
	Tags                  map[string]string `pulumi:"tags"`
}

// A collection of values returned by getReplicationInstance.
type LookupReplicationInstanceResult struct {
	// The amount of storage (in gigabytes) to be initially allocated for the replication instance.
	AllocatedStorage int `pulumi:"allocatedStorage"`
	// Indicates that minor engine upgrades will be applied automatically to the replication instance during the maintenance window.
	AutoMinorVersionUpgrade bool `pulumi:"autoMinorVersionUpgrade"`
	// The EC2 Availability Zone that the replication instance will be created in.
	AvailabilityZone string `pulumi:"availabilityZone"`
	// The engine version number of the replication instance.
	EngineVersion string `pulumi:"engineVersion"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The Amazon Resource Name (ARN) for the KMS key used to encrypt the connection parameters.
	KmsKeyArn string `pulumi:"kmsKeyArn"`
	// Specifies if the replication instance is a multi-az deployment.
	MultiAz bool `pulumi:"multiAz"`
	// The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
	PreferredMaintenanceWindow string `pulumi:"preferredMaintenanceWindow"`
	// Specifies the accessibility options for the replication instance. A value of true represents an instance with a public IP address. A value of false represents an instance with a private IP address.
	PubliclyAccessible bool `pulumi:"publiclyAccessible"`
	// The Amazon Resource Name (ARN) of the replication instance.
	ReplicationInstanceArn string `pulumi:"replicationInstanceArn"`
	// The compute and memory capacity of the replication instance as specified by the replication instance class. See [AWS DMS User Guide](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.Types.html) for information on instance classes.
	ReplicationInstanceClass string `pulumi:"replicationInstanceClass"`
	ReplicationInstanceId    string `pulumi:"replicationInstanceId"`
	// A list of the private IP addresses of the replication instance.
	ReplicationInstancePrivateIps []string `pulumi:"replicationInstancePrivateIps"`
	// A list of the public IP addresses of the replication instance.
	ReplicationInstancePublicIps []string `pulumi:"replicationInstancePublicIps"`
	// A subnet group to associate with the replication instance.
	ReplicationSubnetGroupId string            `pulumi:"replicationSubnetGroupId"`
	Tags                     map[string]string `pulumi:"tags"`
	// A set of VPC security group IDs that are used with the replication instance.
	VpcSecurityGroupIds []string `pulumi:"vpcSecurityGroupIds"`
}

func LookupReplicationInstanceOutput(ctx *pulumi.Context, args LookupReplicationInstanceOutputArgs, opts ...pulumi.InvokeOption) LookupReplicationInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupReplicationInstanceResult, error) {
			args := v.(LookupReplicationInstanceArgs)
			r, err := LookupReplicationInstance(ctx, &args, opts...)
			var s LookupReplicationInstanceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupReplicationInstanceResultOutput)
}

// A collection of arguments for invoking getReplicationInstance.
type LookupReplicationInstanceOutputArgs struct {
	// The replication instance identifier.
	ReplicationInstanceId pulumi.StringInput    `pulumi:"replicationInstanceId"`
	Tags                  pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupReplicationInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReplicationInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getReplicationInstance.
type LookupReplicationInstanceResultOutput struct{ *pulumi.OutputState }

func (LookupReplicationInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReplicationInstanceResult)(nil)).Elem()
}

func (o LookupReplicationInstanceResultOutput) ToLookupReplicationInstanceResultOutput() LookupReplicationInstanceResultOutput {
	return o
}

func (o LookupReplicationInstanceResultOutput) ToLookupReplicationInstanceResultOutputWithContext(ctx context.Context) LookupReplicationInstanceResultOutput {
	return o
}

// The amount of storage (in gigabytes) to be initially allocated for the replication instance.
func (o LookupReplicationInstanceResultOutput) AllocatedStorage() pulumi.IntOutput {
	return o.ApplyT(func(v LookupReplicationInstanceResult) int { return v.AllocatedStorage }).(pulumi.IntOutput)
}

// Indicates that minor engine upgrades will be applied automatically to the replication instance during the maintenance window.
func (o LookupReplicationInstanceResultOutput) AutoMinorVersionUpgrade() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupReplicationInstanceResult) bool { return v.AutoMinorVersionUpgrade }).(pulumi.BoolOutput)
}

// The EC2 Availability Zone that the replication instance will be created in.
func (o LookupReplicationInstanceResultOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationInstanceResult) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// The engine version number of the replication instance.
func (o LookupReplicationInstanceResultOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationInstanceResult) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupReplicationInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) for the KMS key used to encrypt the connection parameters.
func (o LookupReplicationInstanceResultOutput) KmsKeyArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationInstanceResult) string { return v.KmsKeyArn }).(pulumi.StringOutput)
}

// Specifies if the replication instance is a multi-az deployment.
func (o LookupReplicationInstanceResultOutput) MultiAz() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupReplicationInstanceResult) bool { return v.MultiAz }).(pulumi.BoolOutput)
}

// The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).
func (o LookupReplicationInstanceResultOutput) PreferredMaintenanceWindow() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationInstanceResult) string { return v.PreferredMaintenanceWindow }).(pulumi.StringOutput)
}

// Specifies the accessibility options for the replication instance. A value of true represents an instance with a public IP address. A value of false represents an instance with a private IP address.
func (o LookupReplicationInstanceResultOutput) PubliclyAccessible() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupReplicationInstanceResult) bool { return v.PubliclyAccessible }).(pulumi.BoolOutput)
}

// The Amazon Resource Name (ARN) of the replication instance.
func (o LookupReplicationInstanceResultOutput) ReplicationInstanceArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationInstanceResult) string { return v.ReplicationInstanceArn }).(pulumi.StringOutput)
}

// The compute and memory capacity of the replication instance as specified by the replication instance class. See [AWS DMS User Guide](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.Types.html) for information on instance classes.
func (o LookupReplicationInstanceResultOutput) ReplicationInstanceClass() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationInstanceResult) string { return v.ReplicationInstanceClass }).(pulumi.StringOutput)
}

func (o LookupReplicationInstanceResultOutput) ReplicationInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationInstanceResult) string { return v.ReplicationInstanceId }).(pulumi.StringOutput)
}

// A list of the private IP addresses of the replication instance.
func (o LookupReplicationInstanceResultOutput) ReplicationInstancePrivateIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupReplicationInstanceResult) []string { return v.ReplicationInstancePrivateIps }).(pulumi.StringArrayOutput)
}

// A list of the public IP addresses of the replication instance.
func (o LookupReplicationInstanceResultOutput) ReplicationInstancePublicIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupReplicationInstanceResult) []string { return v.ReplicationInstancePublicIps }).(pulumi.StringArrayOutput)
}

// A subnet group to associate with the replication instance.
func (o LookupReplicationInstanceResultOutput) ReplicationSubnetGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReplicationInstanceResult) string { return v.ReplicationSubnetGroupId }).(pulumi.StringOutput)
}

func (o LookupReplicationInstanceResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupReplicationInstanceResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// A set of VPC security group IDs that are used with the replication instance.
func (o LookupReplicationInstanceResultOutput) VpcSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupReplicationInstanceResult) []string { return v.VpcSecurityGroupIds }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupReplicationInstanceResultOutput{})
}
