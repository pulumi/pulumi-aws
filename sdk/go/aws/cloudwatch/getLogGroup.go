// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudwatch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupLogGroup(ctx *pulumi.Context, args *LookupLogGroupArgs, opts ...pulumi.InvokeOption) (*LookupLogGroupResult, error) {
	var rv LookupLogGroupResult
	err := ctx.Invoke("aws:cloudwatch/getLogGroup:getLogGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLogGroup.
type LookupLogGroupArgs struct {
	Name string            `pulumi:"name"`
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getLogGroup.
type LookupLogGroupResult struct {
	Arn          string `pulumi:"arn"`
	CreationTime int    `pulumi:"creationTime"`
	// The provider-assigned unique ID for this managed resource.
	Id              string            `pulumi:"id"`
	KmsKeyId        string            `pulumi:"kmsKeyId"`
	Name            string            `pulumi:"name"`
	RetentionInDays int               `pulumi:"retentionInDays"`
	Tags            map[string]string `pulumi:"tags"`
}

func LookupLogGroupOutput(ctx *pulumi.Context, args LookupLogGroupOutputArgs, opts ...pulumi.InvokeOption) LookupLogGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLogGroupResult, error) {
			args := v.(LookupLogGroupArgs)
			r, err := LookupLogGroup(ctx, &args, opts...)
			var s LookupLogGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupLogGroupResultOutput)
}

// A collection of arguments for invoking getLogGroup.
type LookupLogGroupOutputArgs struct {
	Name pulumi.StringInput    `pulumi:"name"`
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupLogGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLogGroupArgs)(nil)).Elem()
}

// A collection of values returned by getLogGroup.
type LookupLogGroupResultOutput struct{ *pulumi.OutputState }

func (LookupLogGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLogGroupResult)(nil)).Elem()
}

func (o LookupLogGroupResultOutput) ToLookupLogGroupResultOutput() LookupLogGroupResultOutput {
	return o
}

func (o LookupLogGroupResultOutput) ToLookupLogGroupResultOutputWithContext(ctx context.Context) LookupLogGroupResultOutput {
	return o
}

func (o LookupLogGroupResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogGroupResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupLogGroupResultOutput) CreationTime() pulumi.IntOutput {
	return o.ApplyT(func(v LookupLogGroupResult) int { return v.CreationTime }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupLogGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupLogGroupResultOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogGroupResult) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

func (o LookupLogGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLogGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupLogGroupResultOutput) RetentionInDays() pulumi.IntOutput {
	return o.ApplyT(func(v LookupLogGroupResult) int { return v.RetentionInDays }).(pulumi.IntOutput)
}

func (o LookupLogGroupResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupLogGroupResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLogGroupResultOutput{})
}
