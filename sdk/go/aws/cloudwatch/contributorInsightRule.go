// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudwatch

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS CloudWatch Contributor Insight Rule.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/cloudwatch"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudwatch.NewContributorInsightRule(ctx, "test", &cloudwatch.ContributorInsightRuleArgs{
//				RuleName:       pulumi.String("testing"),
//				RuleState:      pulumi.String("ENABLED"),
//				RuleDefinition: pulumi.String("{\"Schema\":{\"Name\":\"CloudWatchLogRule\",\"Version\":1},\"AggregateOn\":\"Count\",\"Contribution\":{\"Filters\":[{\"In\":[\"some-keyword\"],\"Match\":\"$.message\"}],\"Keys\":[\"$.country\"]},\"LogFormat\":\"JSON\",\"LogGroupNames\":[\"/aws/lambda/api-prod\"]}"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import CloudWatch Contributor Insight Rule using the `rule_name`. For example:
//
// ```sh
// $ pulumi import aws:cloudwatch/contributorInsightRule:ContributorInsightRule example contributor_insight_rule-name
// ```
type ContributorInsightRule struct {
	pulumi.CustomResourceState

	// ARN of the Contributor Insight Rule.
	ResourceArn pulumi.StringOutput `pulumi:"resourceArn"`
	// Definition of the rule, as a JSON object. For details on the valid syntax, see [Contributor Insights Rule Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights-RuleSyntax.html).
	RuleDefinition pulumi.StringOutput `pulumi:"ruleDefinition"`
	// Unique name of the rule.
	//
	// The following arguments are optional:
	RuleName pulumi.StringOutput `pulumi:"ruleName"`
	// State of the rule. Valid values are `ENABLED` and `DISABLED`.
	RuleState pulumi.StringPtrOutput `pulumi:"ruleState"`
	Tags      pulumi.StringMapOutput `pulumi:"tags"`
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
}

// NewContributorInsightRule registers a new resource with the given unique name, arguments, and options.
func NewContributorInsightRule(ctx *pulumi.Context,
	name string, args *ContributorInsightRuleArgs, opts ...pulumi.ResourceOption) (*ContributorInsightRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RuleDefinition == nil {
		return nil, errors.New("invalid value for required argument 'RuleDefinition'")
	}
	if args.RuleName == nil {
		return nil, errors.New("invalid value for required argument 'RuleName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ContributorInsightRule
	err := ctx.RegisterResource("aws:cloudwatch/contributorInsightRule:ContributorInsightRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContributorInsightRule gets an existing ContributorInsightRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContributorInsightRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContributorInsightRuleState, opts ...pulumi.ResourceOption) (*ContributorInsightRule, error) {
	var resource ContributorInsightRule
	err := ctx.ReadResource("aws:cloudwatch/contributorInsightRule:ContributorInsightRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContributorInsightRule resources.
type contributorInsightRuleState struct {
	// ARN of the Contributor Insight Rule.
	ResourceArn *string `pulumi:"resourceArn"`
	// Definition of the rule, as a JSON object. For details on the valid syntax, see [Contributor Insights Rule Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights-RuleSyntax.html).
	RuleDefinition *string `pulumi:"ruleDefinition"`
	// Unique name of the rule.
	//
	// The following arguments are optional:
	RuleName *string `pulumi:"ruleName"`
	// State of the rule. Valid values are `ENABLED` and `DISABLED`.
	RuleState *string           `pulumi:"ruleState"`
	Tags      map[string]string `pulumi:"tags"`
	// Deprecated: Please use `tags` instead.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type ContributorInsightRuleState struct {
	// ARN of the Contributor Insight Rule.
	ResourceArn pulumi.StringPtrInput
	// Definition of the rule, as a JSON object. For details on the valid syntax, see [Contributor Insights Rule Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights-RuleSyntax.html).
	RuleDefinition pulumi.StringPtrInput
	// Unique name of the rule.
	//
	// The following arguments are optional:
	RuleName pulumi.StringPtrInput
	// State of the rule. Valid values are `ENABLED` and `DISABLED`.
	RuleState pulumi.StringPtrInput
	Tags      pulumi.StringMapInput
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapInput
}

func (ContributorInsightRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*contributorInsightRuleState)(nil)).Elem()
}

type contributorInsightRuleArgs struct {
	// Definition of the rule, as a JSON object. For details on the valid syntax, see [Contributor Insights Rule Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights-RuleSyntax.html).
	RuleDefinition string `pulumi:"ruleDefinition"`
	// Unique name of the rule.
	//
	// The following arguments are optional:
	RuleName string `pulumi:"ruleName"`
	// State of the rule. Valid values are `ENABLED` and `DISABLED`.
	RuleState *string           `pulumi:"ruleState"`
	Tags      map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ContributorInsightRule resource.
type ContributorInsightRuleArgs struct {
	// Definition of the rule, as a JSON object. For details on the valid syntax, see [Contributor Insights Rule Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights-RuleSyntax.html).
	RuleDefinition pulumi.StringInput
	// Unique name of the rule.
	//
	// The following arguments are optional:
	RuleName pulumi.StringInput
	// State of the rule. Valid values are `ENABLED` and `DISABLED`.
	RuleState pulumi.StringPtrInput
	Tags      pulumi.StringMapInput
}

func (ContributorInsightRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*contributorInsightRuleArgs)(nil)).Elem()
}

type ContributorInsightRuleInput interface {
	pulumi.Input

	ToContributorInsightRuleOutput() ContributorInsightRuleOutput
	ToContributorInsightRuleOutputWithContext(ctx context.Context) ContributorInsightRuleOutput
}

func (*ContributorInsightRule) ElementType() reflect.Type {
	return reflect.TypeOf((**ContributorInsightRule)(nil)).Elem()
}

func (i *ContributorInsightRule) ToContributorInsightRuleOutput() ContributorInsightRuleOutput {
	return i.ToContributorInsightRuleOutputWithContext(context.Background())
}

func (i *ContributorInsightRule) ToContributorInsightRuleOutputWithContext(ctx context.Context) ContributorInsightRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContributorInsightRuleOutput)
}

// ContributorInsightRuleArrayInput is an input type that accepts ContributorInsightRuleArray and ContributorInsightRuleArrayOutput values.
// You can construct a concrete instance of `ContributorInsightRuleArrayInput` via:
//
//	ContributorInsightRuleArray{ ContributorInsightRuleArgs{...} }
type ContributorInsightRuleArrayInput interface {
	pulumi.Input

	ToContributorInsightRuleArrayOutput() ContributorInsightRuleArrayOutput
	ToContributorInsightRuleArrayOutputWithContext(context.Context) ContributorInsightRuleArrayOutput
}

type ContributorInsightRuleArray []ContributorInsightRuleInput

func (ContributorInsightRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ContributorInsightRule)(nil)).Elem()
}

func (i ContributorInsightRuleArray) ToContributorInsightRuleArrayOutput() ContributorInsightRuleArrayOutput {
	return i.ToContributorInsightRuleArrayOutputWithContext(context.Background())
}

func (i ContributorInsightRuleArray) ToContributorInsightRuleArrayOutputWithContext(ctx context.Context) ContributorInsightRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContributorInsightRuleArrayOutput)
}

// ContributorInsightRuleMapInput is an input type that accepts ContributorInsightRuleMap and ContributorInsightRuleMapOutput values.
// You can construct a concrete instance of `ContributorInsightRuleMapInput` via:
//
//	ContributorInsightRuleMap{ "key": ContributorInsightRuleArgs{...} }
type ContributorInsightRuleMapInput interface {
	pulumi.Input

	ToContributorInsightRuleMapOutput() ContributorInsightRuleMapOutput
	ToContributorInsightRuleMapOutputWithContext(context.Context) ContributorInsightRuleMapOutput
}

type ContributorInsightRuleMap map[string]ContributorInsightRuleInput

func (ContributorInsightRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ContributorInsightRule)(nil)).Elem()
}

func (i ContributorInsightRuleMap) ToContributorInsightRuleMapOutput() ContributorInsightRuleMapOutput {
	return i.ToContributorInsightRuleMapOutputWithContext(context.Background())
}

func (i ContributorInsightRuleMap) ToContributorInsightRuleMapOutputWithContext(ctx context.Context) ContributorInsightRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContributorInsightRuleMapOutput)
}

type ContributorInsightRuleOutput struct{ *pulumi.OutputState }

func (ContributorInsightRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContributorInsightRule)(nil)).Elem()
}

func (o ContributorInsightRuleOutput) ToContributorInsightRuleOutput() ContributorInsightRuleOutput {
	return o
}

func (o ContributorInsightRuleOutput) ToContributorInsightRuleOutputWithContext(ctx context.Context) ContributorInsightRuleOutput {
	return o
}

// ARN of the Contributor Insight Rule.
func (o ContributorInsightRuleOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ContributorInsightRule) pulumi.StringOutput { return v.ResourceArn }).(pulumi.StringOutput)
}

// Definition of the rule, as a JSON object. For details on the valid syntax, see [Contributor Insights Rule Syntax](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ContributorInsights-RuleSyntax.html).
func (o ContributorInsightRuleOutput) RuleDefinition() pulumi.StringOutput {
	return o.ApplyT(func(v *ContributorInsightRule) pulumi.StringOutput { return v.RuleDefinition }).(pulumi.StringOutput)
}

// Unique name of the rule.
//
// The following arguments are optional:
func (o ContributorInsightRuleOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v *ContributorInsightRule) pulumi.StringOutput { return v.RuleName }).(pulumi.StringOutput)
}

// State of the rule. Valid values are `ENABLED` and `DISABLED`.
func (o ContributorInsightRuleOutput) RuleState() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ContributorInsightRule) pulumi.StringPtrOutput { return v.RuleState }).(pulumi.StringPtrOutput)
}

func (o ContributorInsightRuleOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ContributorInsightRule) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Deprecated: Please use `tags` instead.
func (o ContributorInsightRuleOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ContributorInsightRule) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type ContributorInsightRuleArrayOutput struct{ *pulumi.OutputState }

func (ContributorInsightRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ContributorInsightRule)(nil)).Elem()
}

func (o ContributorInsightRuleArrayOutput) ToContributorInsightRuleArrayOutput() ContributorInsightRuleArrayOutput {
	return o
}

func (o ContributorInsightRuleArrayOutput) ToContributorInsightRuleArrayOutputWithContext(ctx context.Context) ContributorInsightRuleArrayOutput {
	return o
}

func (o ContributorInsightRuleArrayOutput) Index(i pulumi.IntInput) ContributorInsightRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ContributorInsightRule {
		return vs[0].([]*ContributorInsightRule)[vs[1].(int)]
	}).(ContributorInsightRuleOutput)
}

type ContributorInsightRuleMapOutput struct{ *pulumi.OutputState }

func (ContributorInsightRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ContributorInsightRule)(nil)).Elem()
}

func (o ContributorInsightRuleMapOutput) ToContributorInsightRuleMapOutput() ContributorInsightRuleMapOutput {
	return o
}

func (o ContributorInsightRuleMapOutput) ToContributorInsightRuleMapOutputWithContext(ctx context.Context) ContributorInsightRuleMapOutput {
	return o
}

func (o ContributorInsightRuleMapOutput) MapIndex(k pulumi.StringInput) ContributorInsightRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ContributorInsightRule {
		return vs[0].(map[string]*ContributorInsightRule)[vs[1].(string)]
	}).(ContributorInsightRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ContributorInsightRuleInput)(nil)).Elem(), &ContributorInsightRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContributorInsightRuleArrayInput)(nil)).Elem(), ContributorInsightRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContributorInsightRuleMapInput)(nil)).Elem(), ContributorInsightRuleMap{})
	pulumi.RegisterOutputType(ContributorInsightRuleOutput{})
	pulumi.RegisterOutputType(ContributorInsightRuleArrayOutput{})
	pulumi.RegisterOutputType(ContributorInsightRuleMapOutput{})
}
