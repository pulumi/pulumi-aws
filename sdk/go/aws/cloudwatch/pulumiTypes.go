// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudwatch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type CompositeAlarmActionsSuppressor struct {
	// Can be an AlarmName or an Amazon Resource Name (ARN) from an existing alarm.
	Alarm string `pulumi:"alarm"`
	// The maximum time in seconds that the composite alarm waits after suppressor alarm goes out of the `ALARM` state. After this time, the composite alarm performs its actions.
	ExtensionPeriod int `pulumi:"extensionPeriod"`
	// The maximum time in seconds that the composite alarm waits for the suppressor alarm to go into the `ALARM` state. After this time, the composite alarm performs its actions.
	WaitPeriod int `pulumi:"waitPeriod"`
}

// CompositeAlarmActionsSuppressorInput is an input type that accepts CompositeAlarmActionsSuppressorArgs and CompositeAlarmActionsSuppressorOutput values.
// You can construct a concrete instance of `CompositeAlarmActionsSuppressorInput` via:
//
//	CompositeAlarmActionsSuppressorArgs{...}
type CompositeAlarmActionsSuppressorInput interface {
	pulumi.Input

	ToCompositeAlarmActionsSuppressorOutput() CompositeAlarmActionsSuppressorOutput
	ToCompositeAlarmActionsSuppressorOutputWithContext(context.Context) CompositeAlarmActionsSuppressorOutput
}

type CompositeAlarmActionsSuppressorArgs struct {
	// Can be an AlarmName or an Amazon Resource Name (ARN) from an existing alarm.
	Alarm pulumi.StringInput `pulumi:"alarm"`
	// The maximum time in seconds that the composite alarm waits after suppressor alarm goes out of the `ALARM` state. After this time, the composite alarm performs its actions.
	ExtensionPeriod pulumi.IntInput `pulumi:"extensionPeriod"`
	// The maximum time in seconds that the composite alarm waits for the suppressor alarm to go into the `ALARM` state. After this time, the composite alarm performs its actions.
	WaitPeriod pulumi.IntInput `pulumi:"waitPeriod"`
}

func (CompositeAlarmActionsSuppressorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CompositeAlarmActionsSuppressor)(nil)).Elem()
}

func (i CompositeAlarmActionsSuppressorArgs) ToCompositeAlarmActionsSuppressorOutput() CompositeAlarmActionsSuppressorOutput {
	return i.ToCompositeAlarmActionsSuppressorOutputWithContext(context.Background())
}

func (i CompositeAlarmActionsSuppressorArgs) ToCompositeAlarmActionsSuppressorOutputWithContext(ctx context.Context) CompositeAlarmActionsSuppressorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompositeAlarmActionsSuppressorOutput)
}

func (i CompositeAlarmActionsSuppressorArgs) ToCompositeAlarmActionsSuppressorPtrOutput() CompositeAlarmActionsSuppressorPtrOutput {
	return i.ToCompositeAlarmActionsSuppressorPtrOutputWithContext(context.Background())
}

func (i CompositeAlarmActionsSuppressorArgs) ToCompositeAlarmActionsSuppressorPtrOutputWithContext(ctx context.Context) CompositeAlarmActionsSuppressorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompositeAlarmActionsSuppressorOutput).ToCompositeAlarmActionsSuppressorPtrOutputWithContext(ctx)
}

// CompositeAlarmActionsSuppressorPtrInput is an input type that accepts CompositeAlarmActionsSuppressorArgs, CompositeAlarmActionsSuppressorPtr and CompositeAlarmActionsSuppressorPtrOutput values.
// You can construct a concrete instance of `CompositeAlarmActionsSuppressorPtrInput` via:
//
//	        CompositeAlarmActionsSuppressorArgs{...}
//
//	or:
//
//	        nil
type CompositeAlarmActionsSuppressorPtrInput interface {
	pulumi.Input

	ToCompositeAlarmActionsSuppressorPtrOutput() CompositeAlarmActionsSuppressorPtrOutput
	ToCompositeAlarmActionsSuppressorPtrOutputWithContext(context.Context) CompositeAlarmActionsSuppressorPtrOutput
}

type compositeAlarmActionsSuppressorPtrType CompositeAlarmActionsSuppressorArgs

func CompositeAlarmActionsSuppressorPtr(v *CompositeAlarmActionsSuppressorArgs) CompositeAlarmActionsSuppressorPtrInput {
	return (*compositeAlarmActionsSuppressorPtrType)(v)
}

func (*compositeAlarmActionsSuppressorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CompositeAlarmActionsSuppressor)(nil)).Elem()
}

func (i *compositeAlarmActionsSuppressorPtrType) ToCompositeAlarmActionsSuppressorPtrOutput() CompositeAlarmActionsSuppressorPtrOutput {
	return i.ToCompositeAlarmActionsSuppressorPtrOutputWithContext(context.Background())
}

func (i *compositeAlarmActionsSuppressorPtrType) ToCompositeAlarmActionsSuppressorPtrOutputWithContext(ctx context.Context) CompositeAlarmActionsSuppressorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CompositeAlarmActionsSuppressorPtrOutput)
}

type CompositeAlarmActionsSuppressorOutput struct{ *pulumi.OutputState }

func (CompositeAlarmActionsSuppressorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CompositeAlarmActionsSuppressor)(nil)).Elem()
}

func (o CompositeAlarmActionsSuppressorOutput) ToCompositeAlarmActionsSuppressorOutput() CompositeAlarmActionsSuppressorOutput {
	return o
}

func (o CompositeAlarmActionsSuppressorOutput) ToCompositeAlarmActionsSuppressorOutputWithContext(ctx context.Context) CompositeAlarmActionsSuppressorOutput {
	return o
}

func (o CompositeAlarmActionsSuppressorOutput) ToCompositeAlarmActionsSuppressorPtrOutput() CompositeAlarmActionsSuppressorPtrOutput {
	return o.ToCompositeAlarmActionsSuppressorPtrOutputWithContext(context.Background())
}

func (o CompositeAlarmActionsSuppressorOutput) ToCompositeAlarmActionsSuppressorPtrOutputWithContext(ctx context.Context) CompositeAlarmActionsSuppressorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CompositeAlarmActionsSuppressor) *CompositeAlarmActionsSuppressor {
		return &v
	}).(CompositeAlarmActionsSuppressorPtrOutput)
}

// Can be an AlarmName or an Amazon Resource Name (ARN) from an existing alarm.
func (o CompositeAlarmActionsSuppressorOutput) Alarm() pulumi.StringOutput {
	return o.ApplyT(func(v CompositeAlarmActionsSuppressor) string { return v.Alarm }).(pulumi.StringOutput)
}

// The maximum time in seconds that the composite alarm waits after suppressor alarm goes out of the `ALARM` state. After this time, the composite alarm performs its actions.
func (o CompositeAlarmActionsSuppressorOutput) ExtensionPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v CompositeAlarmActionsSuppressor) int { return v.ExtensionPeriod }).(pulumi.IntOutput)
}

// The maximum time in seconds that the composite alarm waits for the suppressor alarm to go into the `ALARM` state. After this time, the composite alarm performs its actions.
func (o CompositeAlarmActionsSuppressorOutput) WaitPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v CompositeAlarmActionsSuppressor) int { return v.WaitPeriod }).(pulumi.IntOutput)
}

type CompositeAlarmActionsSuppressorPtrOutput struct{ *pulumi.OutputState }

func (CompositeAlarmActionsSuppressorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CompositeAlarmActionsSuppressor)(nil)).Elem()
}

func (o CompositeAlarmActionsSuppressorPtrOutput) ToCompositeAlarmActionsSuppressorPtrOutput() CompositeAlarmActionsSuppressorPtrOutput {
	return o
}

func (o CompositeAlarmActionsSuppressorPtrOutput) ToCompositeAlarmActionsSuppressorPtrOutputWithContext(ctx context.Context) CompositeAlarmActionsSuppressorPtrOutput {
	return o
}

func (o CompositeAlarmActionsSuppressorPtrOutput) Elem() CompositeAlarmActionsSuppressorOutput {
	return o.ApplyT(func(v *CompositeAlarmActionsSuppressor) CompositeAlarmActionsSuppressor {
		if v != nil {
			return *v
		}
		var ret CompositeAlarmActionsSuppressor
		return ret
	}).(CompositeAlarmActionsSuppressorOutput)
}

// Can be an AlarmName or an Amazon Resource Name (ARN) from an existing alarm.
func (o CompositeAlarmActionsSuppressorPtrOutput) Alarm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CompositeAlarmActionsSuppressor) *string {
		if v == nil {
			return nil
		}
		return &v.Alarm
	}).(pulumi.StringPtrOutput)
}

// The maximum time in seconds that the composite alarm waits after suppressor alarm goes out of the `ALARM` state. After this time, the composite alarm performs its actions.
func (o CompositeAlarmActionsSuppressorPtrOutput) ExtensionPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CompositeAlarmActionsSuppressor) *int {
		if v == nil {
			return nil
		}
		return &v.ExtensionPeriod
	}).(pulumi.IntPtrOutput)
}

// The maximum time in seconds that the composite alarm waits for the suppressor alarm to go into the `ALARM` state. After this time, the composite alarm performs its actions.
func (o CompositeAlarmActionsSuppressorPtrOutput) WaitPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CompositeAlarmActionsSuppressor) *int {
		if v == nil {
			return nil
		}
		return &v.WaitPeriod
	}).(pulumi.IntPtrOutput)
}

type EventConnectionAuthParameters struct {
	// Parameters used for API_KEY authorization. An API key to include in the header for each authentication request. A maximum of 1 are allowed. Conflicts with `basic` and `oauth`. Documented below.
	ApiKey *EventConnectionAuthParametersApiKey `pulumi:"apiKey"`
	// Parameters used for BASIC authorization. A maximum of 1 are allowed. Conflicts with `apiKey` and `oauth`. Documented below.
	Basic *EventConnectionAuthParametersBasic `pulumi:"basic"`
	// Invocation Http Parameters are additional credentials used to sign each Invocation of the ApiDestination created from this Connection. If the ApiDestination Rule Target has additional HttpParameters, the values will be merged together, with the Connection Invocation Http Parameters taking precedence. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.
	InvocationHttpParameters *EventConnectionAuthParametersInvocationHttpParameters `pulumi:"invocationHttpParameters"`
	// Parameters used for OAUTH_CLIENT_CREDENTIALS authorization. A maximum of 1 are allowed. Conflicts with `basic` and `apiKey`. Documented below.
	Oauth *EventConnectionAuthParametersOauth `pulumi:"oauth"`
}

// EventConnectionAuthParametersInput is an input type that accepts EventConnectionAuthParametersArgs and EventConnectionAuthParametersOutput values.
// You can construct a concrete instance of `EventConnectionAuthParametersInput` via:
//
//	EventConnectionAuthParametersArgs{...}
type EventConnectionAuthParametersInput interface {
	pulumi.Input

	ToEventConnectionAuthParametersOutput() EventConnectionAuthParametersOutput
	ToEventConnectionAuthParametersOutputWithContext(context.Context) EventConnectionAuthParametersOutput
}

type EventConnectionAuthParametersArgs struct {
	// Parameters used for API_KEY authorization. An API key to include in the header for each authentication request. A maximum of 1 are allowed. Conflicts with `basic` and `oauth`. Documented below.
	ApiKey EventConnectionAuthParametersApiKeyPtrInput `pulumi:"apiKey"`
	// Parameters used for BASIC authorization. A maximum of 1 are allowed. Conflicts with `apiKey` and `oauth`. Documented below.
	Basic EventConnectionAuthParametersBasicPtrInput `pulumi:"basic"`
	// Invocation Http Parameters are additional credentials used to sign each Invocation of the ApiDestination created from this Connection. If the ApiDestination Rule Target has additional HttpParameters, the values will be merged together, with the Connection Invocation Http Parameters taking precedence. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.
	InvocationHttpParameters EventConnectionAuthParametersInvocationHttpParametersPtrInput `pulumi:"invocationHttpParameters"`
	// Parameters used for OAUTH_CLIENT_CREDENTIALS authorization. A maximum of 1 are allowed. Conflicts with `basic` and `apiKey`. Documented below.
	Oauth EventConnectionAuthParametersOauthPtrInput `pulumi:"oauth"`
}

func (EventConnectionAuthParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnectionAuthParameters)(nil)).Elem()
}

func (i EventConnectionAuthParametersArgs) ToEventConnectionAuthParametersOutput() EventConnectionAuthParametersOutput {
	return i.ToEventConnectionAuthParametersOutputWithContext(context.Background())
}

func (i EventConnectionAuthParametersArgs) ToEventConnectionAuthParametersOutputWithContext(ctx context.Context) EventConnectionAuthParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersOutput)
}

func (i EventConnectionAuthParametersArgs) ToEventConnectionAuthParametersPtrOutput() EventConnectionAuthParametersPtrOutput {
	return i.ToEventConnectionAuthParametersPtrOutputWithContext(context.Background())
}

func (i EventConnectionAuthParametersArgs) ToEventConnectionAuthParametersPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersOutput).ToEventConnectionAuthParametersPtrOutputWithContext(ctx)
}

// EventConnectionAuthParametersPtrInput is an input type that accepts EventConnectionAuthParametersArgs, EventConnectionAuthParametersPtr and EventConnectionAuthParametersPtrOutput values.
// You can construct a concrete instance of `EventConnectionAuthParametersPtrInput` via:
//
//	        EventConnectionAuthParametersArgs{...}
//
//	or:
//
//	        nil
type EventConnectionAuthParametersPtrInput interface {
	pulumi.Input

	ToEventConnectionAuthParametersPtrOutput() EventConnectionAuthParametersPtrOutput
	ToEventConnectionAuthParametersPtrOutputWithContext(context.Context) EventConnectionAuthParametersPtrOutput
}

type eventConnectionAuthParametersPtrType EventConnectionAuthParametersArgs

func EventConnectionAuthParametersPtr(v *EventConnectionAuthParametersArgs) EventConnectionAuthParametersPtrInput {
	return (*eventConnectionAuthParametersPtrType)(v)
}

func (*eventConnectionAuthParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventConnectionAuthParameters)(nil)).Elem()
}

func (i *eventConnectionAuthParametersPtrType) ToEventConnectionAuthParametersPtrOutput() EventConnectionAuthParametersPtrOutput {
	return i.ToEventConnectionAuthParametersPtrOutputWithContext(context.Background())
}

func (i *eventConnectionAuthParametersPtrType) ToEventConnectionAuthParametersPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersPtrOutput)
}

type EventConnectionAuthParametersOutput struct{ *pulumi.OutputState }

func (EventConnectionAuthParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnectionAuthParameters)(nil)).Elem()
}

func (o EventConnectionAuthParametersOutput) ToEventConnectionAuthParametersOutput() EventConnectionAuthParametersOutput {
	return o
}

func (o EventConnectionAuthParametersOutput) ToEventConnectionAuthParametersOutputWithContext(ctx context.Context) EventConnectionAuthParametersOutput {
	return o
}

func (o EventConnectionAuthParametersOutput) ToEventConnectionAuthParametersPtrOutput() EventConnectionAuthParametersPtrOutput {
	return o.ToEventConnectionAuthParametersPtrOutputWithContext(context.Background())
}

func (o EventConnectionAuthParametersOutput) ToEventConnectionAuthParametersPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventConnectionAuthParameters) *EventConnectionAuthParameters {
		return &v
	}).(EventConnectionAuthParametersPtrOutput)
}

// Parameters used for API_KEY authorization. An API key to include in the header for each authentication request. A maximum of 1 are allowed. Conflicts with `basic` and `oauth`. Documented below.
func (o EventConnectionAuthParametersOutput) ApiKey() EventConnectionAuthParametersApiKeyPtrOutput {
	return o.ApplyT(func(v EventConnectionAuthParameters) *EventConnectionAuthParametersApiKey { return v.ApiKey }).(EventConnectionAuthParametersApiKeyPtrOutput)
}

// Parameters used for BASIC authorization. A maximum of 1 are allowed. Conflicts with `apiKey` and `oauth`. Documented below.
func (o EventConnectionAuthParametersOutput) Basic() EventConnectionAuthParametersBasicPtrOutput {
	return o.ApplyT(func(v EventConnectionAuthParameters) *EventConnectionAuthParametersBasic { return v.Basic }).(EventConnectionAuthParametersBasicPtrOutput)
}

// Invocation Http Parameters are additional credentials used to sign each Invocation of the ApiDestination created from this Connection. If the ApiDestination Rule Target has additional HttpParameters, the values will be merged together, with the Connection Invocation Http Parameters taking precedence. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.
func (o EventConnectionAuthParametersOutput) InvocationHttpParameters() EventConnectionAuthParametersInvocationHttpParametersPtrOutput {
	return o.ApplyT(func(v EventConnectionAuthParameters) *EventConnectionAuthParametersInvocationHttpParameters {
		return v.InvocationHttpParameters
	}).(EventConnectionAuthParametersInvocationHttpParametersPtrOutput)
}

// Parameters used for OAUTH_CLIENT_CREDENTIALS authorization. A maximum of 1 are allowed. Conflicts with `basic` and `apiKey`. Documented below.
func (o EventConnectionAuthParametersOutput) Oauth() EventConnectionAuthParametersOauthPtrOutput {
	return o.ApplyT(func(v EventConnectionAuthParameters) *EventConnectionAuthParametersOauth { return v.Oauth }).(EventConnectionAuthParametersOauthPtrOutput)
}

type EventConnectionAuthParametersPtrOutput struct{ *pulumi.OutputState }

func (EventConnectionAuthParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventConnectionAuthParameters)(nil)).Elem()
}

func (o EventConnectionAuthParametersPtrOutput) ToEventConnectionAuthParametersPtrOutput() EventConnectionAuthParametersPtrOutput {
	return o
}

func (o EventConnectionAuthParametersPtrOutput) ToEventConnectionAuthParametersPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersPtrOutput {
	return o
}

func (o EventConnectionAuthParametersPtrOutput) Elem() EventConnectionAuthParametersOutput {
	return o.ApplyT(func(v *EventConnectionAuthParameters) EventConnectionAuthParameters {
		if v != nil {
			return *v
		}
		var ret EventConnectionAuthParameters
		return ret
	}).(EventConnectionAuthParametersOutput)
}

// Parameters used for API_KEY authorization. An API key to include in the header for each authentication request. A maximum of 1 are allowed. Conflicts with `basic` and `oauth`. Documented below.
func (o EventConnectionAuthParametersPtrOutput) ApiKey() EventConnectionAuthParametersApiKeyPtrOutput {
	return o.ApplyT(func(v *EventConnectionAuthParameters) *EventConnectionAuthParametersApiKey {
		if v == nil {
			return nil
		}
		return v.ApiKey
	}).(EventConnectionAuthParametersApiKeyPtrOutput)
}

// Parameters used for BASIC authorization. A maximum of 1 are allowed. Conflicts with `apiKey` and `oauth`. Documented below.
func (o EventConnectionAuthParametersPtrOutput) Basic() EventConnectionAuthParametersBasicPtrOutput {
	return o.ApplyT(func(v *EventConnectionAuthParameters) *EventConnectionAuthParametersBasic {
		if v == nil {
			return nil
		}
		return v.Basic
	}).(EventConnectionAuthParametersBasicPtrOutput)
}

// Invocation Http Parameters are additional credentials used to sign each Invocation of the ApiDestination created from this Connection. If the ApiDestination Rule Target has additional HttpParameters, the values will be merged together, with the Connection Invocation Http Parameters taking precedence. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.
func (o EventConnectionAuthParametersPtrOutput) InvocationHttpParameters() EventConnectionAuthParametersInvocationHttpParametersPtrOutput {
	return o.ApplyT(func(v *EventConnectionAuthParameters) *EventConnectionAuthParametersInvocationHttpParameters {
		if v == nil {
			return nil
		}
		return v.InvocationHttpParameters
	}).(EventConnectionAuthParametersInvocationHttpParametersPtrOutput)
}

// Parameters used for OAUTH_CLIENT_CREDENTIALS authorization. A maximum of 1 are allowed. Conflicts with `basic` and `apiKey`. Documented below.
func (o EventConnectionAuthParametersPtrOutput) Oauth() EventConnectionAuthParametersOauthPtrOutput {
	return o.ApplyT(func(v *EventConnectionAuthParameters) *EventConnectionAuthParametersOauth {
		if v == nil {
			return nil
		}
		return v.Oauth
	}).(EventConnectionAuthParametersOauthPtrOutput)
}

type EventConnectionAuthParametersApiKey struct {
	// Header Name.
	Key string `pulumi:"key"`
	// Header Value. Created and stored in AWS Secrets Manager.
	Value string `pulumi:"value"`
}

// EventConnectionAuthParametersApiKeyInput is an input type that accepts EventConnectionAuthParametersApiKeyArgs and EventConnectionAuthParametersApiKeyOutput values.
// You can construct a concrete instance of `EventConnectionAuthParametersApiKeyInput` via:
//
//	EventConnectionAuthParametersApiKeyArgs{...}
type EventConnectionAuthParametersApiKeyInput interface {
	pulumi.Input

	ToEventConnectionAuthParametersApiKeyOutput() EventConnectionAuthParametersApiKeyOutput
	ToEventConnectionAuthParametersApiKeyOutputWithContext(context.Context) EventConnectionAuthParametersApiKeyOutput
}

type EventConnectionAuthParametersApiKeyArgs struct {
	// Header Name.
	Key pulumi.StringInput `pulumi:"key"`
	// Header Value. Created and stored in AWS Secrets Manager.
	Value pulumi.StringInput `pulumi:"value"`
}

func (EventConnectionAuthParametersApiKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnectionAuthParametersApiKey)(nil)).Elem()
}

func (i EventConnectionAuthParametersApiKeyArgs) ToEventConnectionAuthParametersApiKeyOutput() EventConnectionAuthParametersApiKeyOutput {
	return i.ToEventConnectionAuthParametersApiKeyOutputWithContext(context.Background())
}

func (i EventConnectionAuthParametersApiKeyArgs) ToEventConnectionAuthParametersApiKeyOutputWithContext(ctx context.Context) EventConnectionAuthParametersApiKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersApiKeyOutput)
}

func (i EventConnectionAuthParametersApiKeyArgs) ToEventConnectionAuthParametersApiKeyPtrOutput() EventConnectionAuthParametersApiKeyPtrOutput {
	return i.ToEventConnectionAuthParametersApiKeyPtrOutputWithContext(context.Background())
}

func (i EventConnectionAuthParametersApiKeyArgs) ToEventConnectionAuthParametersApiKeyPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersApiKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersApiKeyOutput).ToEventConnectionAuthParametersApiKeyPtrOutputWithContext(ctx)
}

// EventConnectionAuthParametersApiKeyPtrInput is an input type that accepts EventConnectionAuthParametersApiKeyArgs, EventConnectionAuthParametersApiKeyPtr and EventConnectionAuthParametersApiKeyPtrOutput values.
// You can construct a concrete instance of `EventConnectionAuthParametersApiKeyPtrInput` via:
//
//	        EventConnectionAuthParametersApiKeyArgs{...}
//
//	or:
//
//	        nil
type EventConnectionAuthParametersApiKeyPtrInput interface {
	pulumi.Input

	ToEventConnectionAuthParametersApiKeyPtrOutput() EventConnectionAuthParametersApiKeyPtrOutput
	ToEventConnectionAuthParametersApiKeyPtrOutputWithContext(context.Context) EventConnectionAuthParametersApiKeyPtrOutput
}

type eventConnectionAuthParametersApiKeyPtrType EventConnectionAuthParametersApiKeyArgs

func EventConnectionAuthParametersApiKeyPtr(v *EventConnectionAuthParametersApiKeyArgs) EventConnectionAuthParametersApiKeyPtrInput {
	return (*eventConnectionAuthParametersApiKeyPtrType)(v)
}

func (*eventConnectionAuthParametersApiKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventConnectionAuthParametersApiKey)(nil)).Elem()
}

func (i *eventConnectionAuthParametersApiKeyPtrType) ToEventConnectionAuthParametersApiKeyPtrOutput() EventConnectionAuthParametersApiKeyPtrOutput {
	return i.ToEventConnectionAuthParametersApiKeyPtrOutputWithContext(context.Background())
}

func (i *eventConnectionAuthParametersApiKeyPtrType) ToEventConnectionAuthParametersApiKeyPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersApiKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersApiKeyPtrOutput)
}

type EventConnectionAuthParametersApiKeyOutput struct{ *pulumi.OutputState }

func (EventConnectionAuthParametersApiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnectionAuthParametersApiKey)(nil)).Elem()
}

func (o EventConnectionAuthParametersApiKeyOutput) ToEventConnectionAuthParametersApiKeyOutput() EventConnectionAuthParametersApiKeyOutput {
	return o
}

func (o EventConnectionAuthParametersApiKeyOutput) ToEventConnectionAuthParametersApiKeyOutputWithContext(ctx context.Context) EventConnectionAuthParametersApiKeyOutput {
	return o
}

func (o EventConnectionAuthParametersApiKeyOutput) ToEventConnectionAuthParametersApiKeyPtrOutput() EventConnectionAuthParametersApiKeyPtrOutput {
	return o.ToEventConnectionAuthParametersApiKeyPtrOutputWithContext(context.Background())
}

func (o EventConnectionAuthParametersApiKeyOutput) ToEventConnectionAuthParametersApiKeyPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersApiKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventConnectionAuthParametersApiKey) *EventConnectionAuthParametersApiKey {
		return &v
	}).(EventConnectionAuthParametersApiKeyPtrOutput)
}

// Header Name.
func (o EventConnectionAuthParametersApiKeyOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersApiKey) string { return v.Key }).(pulumi.StringOutput)
}

// Header Value. Created and stored in AWS Secrets Manager.
func (o EventConnectionAuthParametersApiKeyOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersApiKey) string { return v.Value }).(pulumi.StringOutput)
}

type EventConnectionAuthParametersApiKeyPtrOutput struct{ *pulumi.OutputState }

func (EventConnectionAuthParametersApiKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventConnectionAuthParametersApiKey)(nil)).Elem()
}

func (o EventConnectionAuthParametersApiKeyPtrOutput) ToEventConnectionAuthParametersApiKeyPtrOutput() EventConnectionAuthParametersApiKeyPtrOutput {
	return o
}

func (o EventConnectionAuthParametersApiKeyPtrOutput) ToEventConnectionAuthParametersApiKeyPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersApiKeyPtrOutput {
	return o
}

func (o EventConnectionAuthParametersApiKeyPtrOutput) Elem() EventConnectionAuthParametersApiKeyOutput {
	return o.ApplyT(func(v *EventConnectionAuthParametersApiKey) EventConnectionAuthParametersApiKey {
		if v != nil {
			return *v
		}
		var ret EventConnectionAuthParametersApiKey
		return ret
	}).(EventConnectionAuthParametersApiKeyOutput)
}

// Header Name.
func (o EventConnectionAuthParametersApiKeyPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventConnectionAuthParametersApiKey) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Header Value. Created and stored in AWS Secrets Manager.
func (o EventConnectionAuthParametersApiKeyPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventConnectionAuthParametersApiKey) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type EventConnectionAuthParametersBasic struct {
	// A password for the authorization. Created and stored in AWS Secrets Manager.
	Password string `pulumi:"password"`
	// A username for the authorization.
	Username string `pulumi:"username"`
}

// EventConnectionAuthParametersBasicInput is an input type that accepts EventConnectionAuthParametersBasicArgs and EventConnectionAuthParametersBasicOutput values.
// You can construct a concrete instance of `EventConnectionAuthParametersBasicInput` via:
//
//	EventConnectionAuthParametersBasicArgs{...}
type EventConnectionAuthParametersBasicInput interface {
	pulumi.Input

	ToEventConnectionAuthParametersBasicOutput() EventConnectionAuthParametersBasicOutput
	ToEventConnectionAuthParametersBasicOutputWithContext(context.Context) EventConnectionAuthParametersBasicOutput
}

type EventConnectionAuthParametersBasicArgs struct {
	// A password for the authorization. Created and stored in AWS Secrets Manager.
	Password pulumi.StringInput `pulumi:"password"`
	// A username for the authorization.
	Username pulumi.StringInput `pulumi:"username"`
}

func (EventConnectionAuthParametersBasicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnectionAuthParametersBasic)(nil)).Elem()
}

func (i EventConnectionAuthParametersBasicArgs) ToEventConnectionAuthParametersBasicOutput() EventConnectionAuthParametersBasicOutput {
	return i.ToEventConnectionAuthParametersBasicOutputWithContext(context.Background())
}

func (i EventConnectionAuthParametersBasicArgs) ToEventConnectionAuthParametersBasicOutputWithContext(ctx context.Context) EventConnectionAuthParametersBasicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersBasicOutput)
}

func (i EventConnectionAuthParametersBasicArgs) ToEventConnectionAuthParametersBasicPtrOutput() EventConnectionAuthParametersBasicPtrOutput {
	return i.ToEventConnectionAuthParametersBasicPtrOutputWithContext(context.Background())
}

func (i EventConnectionAuthParametersBasicArgs) ToEventConnectionAuthParametersBasicPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersBasicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersBasicOutput).ToEventConnectionAuthParametersBasicPtrOutputWithContext(ctx)
}

// EventConnectionAuthParametersBasicPtrInput is an input type that accepts EventConnectionAuthParametersBasicArgs, EventConnectionAuthParametersBasicPtr and EventConnectionAuthParametersBasicPtrOutput values.
// You can construct a concrete instance of `EventConnectionAuthParametersBasicPtrInput` via:
//
//	        EventConnectionAuthParametersBasicArgs{...}
//
//	or:
//
//	        nil
type EventConnectionAuthParametersBasicPtrInput interface {
	pulumi.Input

	ToEventConnectionAuthParametersBasicPtrOutput() EventConnectionAuthParametersBasicPtrOutput
	ToEventConnectionAuthParametersBasicPtrOutputWithContext(context.Context) EventConnectionAuthParametersBasicPtrOutput
}

type eventConnectionAuthParametersBasicPtrType EventConnectionAuthParametersBasicArgs

func EventConnectionAuthParametersBasicPtr(v *EventConnectionAuthParametersBasicArgs) EventConnectionAuthParametersBasicPtrInput {
	return (*eventConnectionAuthParametersBasicPtrType)(v)
}

func (*eventConnectionAuthParametersBasicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventConnectionAuthParametersBasic)(nil)).Elem()
}

func (i *eventConnectionAuthParametersBasicPtrType) ToEventConnectionAuthParametersBasicPtrOutput() EventConnectionAuthParametersBasicPtrOutput {
	return i.ToEventConnectionAuthParametersBasicPtrOutputWithContext(context.Background())
}

func (i *eventConnectionAuthParametersBasicPtrType) ToEventConnectionAuthParametersBasicPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersBasicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersBasicPtrOutput)
}

type EventConnectionAuthParametersBasicOutput struct{ *pulumi.OutputState }

func (EventConnectionAuthParametersBasicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnectionAuthParametersBasic)(nil)).Elem()
}

func (o EventConnectionAuthParametersBasicOutput) ToEventConnectionAuthParametersBasicOutput() EventConnectionAuthParametersBasicOutput {
	return o
}

func (o EventConnectionAuthParametersBasicOutput) ToEventConnectionAuthParametersBasicOutputWithContext(ctx context.Context) EventConnectionAuthParametersBasicOutput {
	return o
}

func (o EventConnectionAuthParametersBasicOutput) ToEventConnectionAuthParametersBasicPtrOutput() EventConnectionAuthParametersBasicPtrOutput {
	return o.ToEventConnectionAuthParametersBasicPtrOutputWithContext(context.Background())
}

func (o EventConnectionAuthParametersBasicOutput) ToEventConnectionAuthParametersBasicPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersBasicPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventConnectionAuthParametersBasic) *EventConnectionAuthParametersBasic {
		return &v
	}).(EventConnectionAuthParametersBasicPtrOutput)
}

// A password for the authorization. Created and stored in AWS Secrets Manager.
func (o EventConnectionAuthParametersBasicOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersBasic) string { return v.Password }).(pulumi.StringOutput)
}

// A username for the authorization.
func (o EventConnectionAuthParametersBasicOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersBasic) string { return v.Username }).(pulumi.StringOutput)
}

type EventConnectionAuthParametersBasicPtrOutput struct{ *pulumi.OutputState }

func (EventConnectionAuthParametersBasicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventConnectionAuthParametersBasic)(nil)).Elem()
}

func (o EventConnectionAuthParametersBasicPtrOutput) ToEventConnectionAuthParametersBasicPtrOutput() EventConnectionAuthParametersBasicPtrOutput {
	return o
}

func (o EventConnectionAuthParametersBasicPtrOutput) ToEventConnectionAuthParametersBasicPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersBasicPtrOutput {
	return o
}

func (o EventConnectionAuthParametersBasicPtrOutput) Elem() EventConnectionAuthParametersBasicOutput {
	return o.ApplyT(func(v *EventConnectionAuthParametersBasic) EventConnectionAuthParametersBasic {
		if v != nil {
			return *v
		}
		var ret EventConnectionAuthParametersBasic
		return ret
	}).(EventConnectionAuthParametersBasicOutput)
}

// A password for the authorization. Created and stored in AWS Secrets Manager.
func (o EventConnectionAuthParametersBasicPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventConnectionAuthParametersBasic) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// A username for the authorization.
func (o EventConnectionAuthParametersBasicPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventConnectionAuthParametersBasic) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type EventConnectionAuthParametersInvocationHttpParameters struct {
	// Contains additional body string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
	Bodies []EventConnectionAuthParametersInvocationHttpParametersBody `pulumi:"bodies"`
	// Contains additional header parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
	Headers []EventConnectionAuthParametersInvocationHttpParametersHeader `pulumi:"headers"`
	// Contains additional query string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
	QueryStrings []EventConnectionAuthParametersInvocationHttpParametersQueryString `pulumi:"queryStrings"`
}

// EventConnectionAuthParametersInvocationHttpParametersInput is an input type that accepts EventConnectionAuthParametersInvocationHttpParametersArgs and EventConnectionAuthParametersInvocationHttpParametersOutput values.
// You can construct a concrete instance of `EventConnectionAuthParametersInvocationHttpParametersInput` via:
//
//	EventConnectionAuthParametersInvocationHttpParametersArgs{...}
type EventConnectionAuthParametersInvocationHttpParametersInput interface {
	pulumi.Input

	ToEventConnectionAuthParametersInvocationHttpParametersOutput() EventConnectionAuthParametersInvocationHttpParametersOutput
	ToEventConnectionAuthParametersInvocationHttpParametersOutputWithContext(context.Context) EventConnectionAuthParametersInvocationHttpParametersOutput
}

type EventConnectionAuthParametersInvocationHttpParametersArgs struct {
	// Contains additional body string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
	Bodies EventConnectionAuthParametersInvocationHttpParametersBodyArrayInput `pulumi:"bodies"`
	// Contains additional header parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
	Headers EventConnectionAuthParametersInvocationHttpParametersHeaderArrayInput `pulumi:"headers"`
	// Contains additional query string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
	QueryStrings EventConnectionAuthParametersInvocationHttpParametersQueryStringArrayInput `pulumi:"queryStrings"`
}

func (EventConnectionAuthParametersInvocationHttpParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnectionAuthParametersInvocationHttpParameters)(nil)).Elem()
}

func (i EventConnectionAuthParametersInvocationHttpParametersArgs) ToEventConnectionAuthParametersInvocationHttpParametersOutput() EventConnectionAuthParametersInvocationHttpParametersOutput {
	return i.ToEventConnectionAuthParametersInvocationHttpParametersOutputWithContext(context.Background())
}

func (i EventConnectionAuthParametersInvocationHttpParametersArgs) ToEventConnectionAuthParametersInvocationHttpParametersOutputWithContext(ctx context.Context) EventConnectionAuthParametersInvocationHttpParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersInvocationHttpParametersOutput)
}

func (i EventConnectionAuthParametersInvocationHttpParametersArgs) ToEventConnectionAuthParametersInvocationHttpParametersPtrOutput() EventConnectionAuthParametersInvocationHttpParametersPtrOutput {
	return i.ToEventConnectionAuthParametersInvocationHttpParametersPtrOutputWithContext(context.Background())
}

func (i EventConnectionAuthParametersInvocationHttpParametersArgs) ToEventConnectionAuthParametersInvocationHttpParametersPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersInvocationHttpParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersInvocationHttpParametersOutput).ToEventConnectionAuthParametersInvocationHttpParametersPtrOutputWithContext(ctx)
}

// EventConnectionAuthParametersInvocationHttpParametersPtrInput is an input type that accepts EventConnectionAuthParametersInvocationHttpParametersArgs, EventConnectionAuthParametersInvocationHttpParametersPtr and EventConnectionAuthParametersInvocationHttpParametersPtrOutput values.
// You can construct a concrete instance of `EventConnectionAuthParametersInvocationHttpParametersPtrInput` via:
//
//	        EventConnectionAuthParametersInvocationHttpParametersArgs{...}
//
//	or:
//
//	        nil
type EventConnectionAuthParametersInvocationHttpParametersPtrInput interface {
	pulumi.Input

	ToEventConnectionAuthParametersInvocationHttpParametersPtrOutput() EventConnectionAuthParametersInvocationHttpParametersPtrOutput
	ToEventConnectionAuthParametersInvocationHttpParametersPtrOutputWithContext(context.Context) EventConnectionAuthParametersInvocationHttpParametersPtrOutput
}

type eventConnectionAuthParametersInvocationHttpParametersPtrType EventConnectionAuthParametersInvocationHttpParametersArgs

func EventConnectionAuthParametersInvocationHttpParametersPtr(v *EventConnectionAuthParametersInvocationHttpParametersArgs) EventConnectionAuthParametersInvocationHttpParametersPtrInput {
	return (*eventConnectionAuthParametersInvocationHttpParametersPtrType)(v)
}

func (*eventConnectionAuthParametersInvocationHttpParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventConnectionAuthParametersInvocationHttpParameters)(nil)).Elem()
}

func (i *eventConnectionAuthParametersInvocationHttpParametersPtrType) ToEventConnectionAuthParametersInvocationHttpParametersPtrOutput() EventConnectionAuthParametersInvocationHttpParametersPtrOutput {
	return i.ToEventConnectionAuthParametersInvocationHttpParametersPtrOutputWithContext(context.Background())
}

func (i *eventConnectionAuthParametersInvocationHttpParametersPtrType) ToEventConnectionAuthParametersInvocationHttpParametersPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersInvocationHttpParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersInvocationHttpParametersPtrOutput)
}

type EventConnectionAuthParametersInvocationHttpParametersOutput struct{ *pulumi.OutputState }

func (EventConnectionAuthParametersInvocationHttpParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnectionAuthParametersInvocationHttpParameters)(nil)).Elem()
}

func (o EventConnectionAuthParametersInvocationHttpParametersOutput) ToEventConnectionAuthParametersInvocationHttpParametersOutput() EventConnectionAuthParametersInvocationHttpParametersOutput {
	return o
}

func (o EventConnectionAuthParametersInvocationHttpParametersOutput) ToEventConnectionAuthParametersInvocationHttpParametersOutputWithContext(ctx context.Context) EventConnectionAuthParametersInvocationHttpParametersOutput {
	return o
}

func (o EventConnectionAuthParametersInvocationHttpParametersOutput) ToEventConnectionAuthParametersInvocationHttpParametersPtrOutput() EventConnectionAuthParametersInvocationHttpParametersPtrOutput {
	return o.ToEventConnectionAuthParametersInvocationHttpParametersPtrOutputWithContext(context.Background())
}

func (o EventConnectionAuthParametersInvocationHttpParametersOutput) ToEventConnectionAuthParametersInvocationHttpParametersPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersInvocationHttpParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventConnectionAuthParametersInvocationHttpParameters) *EventConnectionAuthParametersInvocationHttpParameters {
		return &v
	}).(EventConnectionAuthParametersInvocationHttpParametersPtrOutput)
}

// Contains additional body string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
func (o EventConnectionAuthParametersInvocationHttpParametersOutput) Bodies() EventConnectionAuthParametersInvocationHttpParametersBodyArrayOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersInvocationHttpParameters) []EventConnectionAuthParametersInvocationHttpParametersBody {
		return v.Bodies
	}).(EventConnectionAuthParametersInvocationHttpParametersBodyArrayOutput)
}

// Contains additional header parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
func (o EventConnectionAuthParametersInvocationHttpParametersOutput) Headers() EventConnectionAuthParametersInvocationHttpParametersHeaderArrayOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersInvocationHttpParameters) []EventConnectionAuthParametersInvocationHttpParametersHeader {
		return v.Headers
	}).(EventConnectionAuthParametersInvocationHttpParametersHeaderArrayOutput)
}

// Contains additional query string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
func (o EventConnectionAuthParametersInvocationHttpParametersOutput) QueryStrings() EventConnectionAuthParametersInvocationHttpParametersQueryStringArrayOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersInvocationHttpParameters) []EventConnectionAuthParametersInvocationHttpParametersQueryString {
		return v.QueryStrings
	}).(EventConnectionAuthParametersInvocationHttpParametersQueryStringArrayOutput)
}

type EventConnectionAuthParametersInvocationHttpParametersPtrOutput struct{ *pulumi.OutputState }

func (EventConnectionAuthParametersInvocationHttpParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventConnectionAuthParametersInvocationHttpParameters)(nil)).Elem()
}

func (o EventConnectionAuthParametersInvocationHttpParametersPtrOutput) ToEventConnectionAuthParametersInvocationHttpParametersPtrOutput() EventConnectionAuthParametersInvocationHttpParametersPtrOutput {
	return o
}

func (o EventConnectionAuthParametersInvocationHttpParametersPtrOutput) ToEventConnectionAuthParametersInvocationHttpParametersPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersInvocationHttpParametersPtrOutput {
	return o
}

func (o EventConnectionAuthParametersInvocationHttpParametersPtrOutput) Elem() EventConnectionAuthParametersInvocationHttpParametersOutput {
	return o.ApplyT(func(v *EventConnectionAuthParametersInvocationHttpParameters) EventConnectionAuthParametersInvocationHttpParameters {
		if v != nil {
			return *v
		}
		var ret EventConnectionAuthParametersInvocationHttpParameters
		return ret
	}).(EventConnectionAuthParametersInvocationHttpParametersOutput)
}

// Contains additional body string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
func (o EventConnectionAuthParametersInvocationHttpParametersPtrOutput) Bodies() EventConnectionAuthParametersInvocationHttpParametersBodyArrayOutput {
	return o.ApplyT(func(v *EventConnectionAuthParametersInvocationHttpParameters) []EventConnectionAuthParametersInvocationHttpParametersBody {
		if v == nil {
			return nil
		}
		return v.Bodies
	}).(EventConnectionAuthParametersInvocationHttpParametersBodyArrayOutput)
}

// Contains additional header parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
func (o EventConnectionAuthParametersInvocationHttpParametersPtrOutput) Headers() EventConnectionAuthParametersInvocationHttpParametersHeaderArrayOutput {
	return o.ApplyT(func(v *EventConnectionAuthParametersInvocationHttpParameters) []EventConnectionAuthParametersInvocationHttpParametersHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(EventConnectionAuthParametersInvocationHttpParametersHeaderArrayOutput)
}

// Contains additional query string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
func (o EventConnectionAuthParametersInvocationHttpParametersPtrOutput) QueryStrings() EventConnectionAuthParametersInvocationHttpParametersQueryStringArrayOutput {
	return o.ApplyT(func(v *EventConnectionAuthParametersInvocationHttpParameters) []EventConnectionAuthParametersInvocationHttpParametersQueryString {
		if v == nil {
			return nil
		}
		return v.QueryStrings
	}).(EventConnectionAuthParametersInvocationHttpParametersQueryStringArrayOutput)
}

type EventConnectionAuthParametersInvocationHttpParametersBody struct {
	// Specified whether the value is secret.
	IsValueSecret *bool `pulumi:"isValueSecret"`
	// Header Name.
	Key *string `pulumi:"key"`
	// Header Value. Created and stored in AWS Secrets Manager.
	Value *string `pulumi:"value"`
}

// EventConnectionAuthParametersInvocationHttpParametersBodyInput is an input type that accepts EventConnectionAuthParametersInvocationHttpParametersBodyArgs and EventConnectionAuthParametersInvocationHttpParametersBodyOutput values.
// You can construct a concrete instance of `EventConnectionAuthParametersInvocationHttpParametersBodyInput` via:
//
//	EventConnectionAuthParametersInvocationHttpParametersBodyArgs{...}
type EventConnectionAuthParametersInvocationHttpParametersBodyInput interface {
	pulumi.Input

	ToEventConnectionAuthParametersInvocationHttpParametersBodyOutput() EventConnectionAuthParametersInvocationHttpParametersBodyOutput
	ToEventConnectionAuthParametersInvocationHttpParametersBodyOutputWithContext(context.Context) EventConnectionAuthParametersInvocationHttpParametersBodyOutput
}

type EventConnectionAuthParametersInvocationHttpParametersBodyArgs struct {
	// Specified whether the value is secret.
	IsValueSecret pulumi.BoolPtrInput `pulumi:"isValueSecret"`
	// Header Name.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Header Value. Created and stored in AWS Secrets Manager.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (EventConnectionAuthParametersInvocationHttpParametersBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnectionAuthParametersInvocationHttpParametersBody)(nil)).Elem()
}

func (i EventConnectionAuthParametersInvocationHttpParametersBodyArgs) ToEventConnectionAuthParametersInvocationHttpParametersBodyOutput() EventConnectionAuthParametersInvocationHttpParametersBodyOutput {
	return i.ToEventConnectionAuthParametersInvocationHttpParametersBodyOutputWithContext(context.Background())
}

func (i EventConnectionAuthParametersInvocationHttpParametersBodyArgs) ToEventConnectionAuthParametersInvocationHttpParametersBodyOutputWithContext(ctx context.Context) EventConnectionAuthParametersInvocationHttpParametersBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersInvocationHttpParametersBodyOutput)
}

// EventConnectionAuthParametersInvocationHttpParametersBodyArrayInput is an input type that accepts EventConnectionAuthParametersInvocationHttpParametersBodyArray and EventConnectionAuthParametersInvocationHttpParametersBodyArrayOutput values.
// You can construct a concrete instance of `EventConnectionAuthParametersInvocationHttpParametersBodyArrayInput` via:
//
//	EventConnectionAuthParametersInvocationHttpParametersBodyArray{ EventConnectionAuthParametersInvocationHttpParametersBodyArgs{...} }
type EventConnectionAuthParametersInvocationHttpParametersBodyArrayInput interface {
	pulumi.Input

	ToEventConnectionAuthParametersInvocationHttpParametersBodyArrayOutput() EventConnectionAuthParametersInvocationHttpParametersBodyArrayOutput
	ToEventConnectionAuthParametersInvocationHttpParametersBodyArrayOutputWithContext(context.Context) EventConnectionAuthParametersInvocationHttpParametersBodyArrayOutput
}

type EventConnectionAuthParametersInvocationHttpParametersBodyArray []EventConnectionAuthParametersInvocationHttpParametersBodyInput

func (EventConnectionAuthParametersInvocationHttpParametersBodyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventConnectionAuthParametersInvocationHttpParametersBody)(nil)).Elem()
}

func (i EventConnectionAuthParametersInvocationHttpParametersBodyArray) ToEventConnectionAuthParametersInvocationHttpParametersBodyArrayOutput() EventConnectionAuthParametersInvocationHttpParametersBodyArrayOutput {
	return i.ToEventConnectionAuthParametersInvocationHttpParametersBodyArrayOutputWithContext(context.Background())
}

func (i EventConnectionAuthParametersInvocationHttpParametersBodyArray) ToEventConnectionAuthParametersInvocationHttpParametersBodyArrayOutputWithContext(ctx context.Context) EventConnectionAuthParametersInvocationHttpParametersBodyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersInvocationHttpParametersBodyArrayOutput)
}

type EventConnectionAuthParametersInvocationHttpParametersBodyOutput struct{ *pulumi.OutputState }

func (EventConnectionAuthParametersInvocationHttpParametersBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnectionAuthParametersInvocationHttpParametersBody)(nil)).Elem()
}

func (o EventConnectionAuthParametersInvocationHttpParametersBodyOutput) ToEventConnectionAuthParametersInvocationHttpParametersBodyOutput() EventConnectionAuthParametersInvocationHttpParametersBodyOutput {
	return o
}

func (o EventConnectionAuthParametersInvocationHttpParametersBodyOutput) ToEventConnectionAuthParametersInvocationHttpParametersBodyOutputWithContext(ctx context.Context) EventConnectionAuthParametersInvocationHttpParametersBodyOutput {
	return o
}

// Specified whether the value is secret.
func (o EventConnectionAuthParametersInvocationHttpParametersBodyOutput) IsValueSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersInvocationHttpParametersBody) *bool { return v.IsValueSecret }).(pulumi.BoolPtrOutput)
}

// Header Name.
func (o EventConnectionAuthParametersInvocationHttpParametersBodyOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersInvocationHttpParametersBody) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Header Value. Created and stored in AWS Secrets Manager.
func (o EventConnectionAuthParametersInvocationHttpParametersBodyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersInvocationHttpParametersBody) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EventConnectionAuthParametersInvocationHttpParametersBodyArrayOutput struct{ *pulumi.OutputState }

func (EventConnectionAuthParametersInvocationHttpParametersBodyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventConnectionAuthParametersInvocationHttpParametersBody)(nil)).Elem()
}

func (o EventConnectionAuthParametersInvocationHttpParametersBodyArrayOutput) ToEventConnectionAuthParametersInvocationHttpParametersBodyArrayOutput() EventConnectionAuthParametersInvocationHttpParametersBodyArrayOutput {
	return o
}

func (o EventConnectionAuthParametersInvocationHttpParametersBodyArrayOutput) ToEventConnectionAuthParametersInvocationHttpParametersBodyArrayOutputWithContext(ctx context.Context) EventConnectionAuthParametersInvocationHttpParametersBodyArrayOutput {
	return o
}

func (o EventConnectionAuthParametersInvocationHttpParametersBodyArrayOutput) Index(i pulumi.IntInput) EventConnectionAuthParametersInvocationHttpParametersBodyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventConnectionAuthParametersInvocationHttpParametersBody {
		return vs[0].([]EventConnectionAuthParametersInvocationHttpParametersBody)[vs[1].(int)]
	}).(EventConnectionAuthParametersInvocationHttpParametersBodyOutput)
}

type EventConnectionAuthParametersInvocationHttpParametersHeader struct {
	// Specified whether the value is secret.
	IsValueSecret *bool `pulumi:"isValueSecret"`
	// Header Name.
	Key *string `pulumi:"key"`
	// Header Value. Created and stored in AWS Secrets Manager.
	Value *string `pulumi:"value"`
}

// EventConnectionAuthParametersInvocationHttpParametersHeaderInput is an input type that accepts EventConnectionAuthParametersInvocationHttpParametersHeaderArgs and EventConnectionAuthParametersInvocationHttpParametersHeaderOutput values.
// You can construct a concrete instance of `EventConnectionAuthParametersInvocationHttpParametersHeaderInput` via:
//
//	EventConnectionAuthParametersInvocationHttpParametersHeaderArgs{...}
type EventConnectionAuthParametersInvocationHttpParametersHeaderInput interface {
	pulumi.Input

	ToEventConnectionAuthParametersInvocationHttpParametersHeaderOutput() EventConnectionAuthParametersInvocationHttpParametersHeaderOutput
	ToEventConnectionAuthParametersInvocationHttpParametersHeaderOutputWithContext(context.Context) EventConnectionAuthParametersInvocationHttpParametersHeaderOutput
}

type EventConnectionAuthParametersInvocationHttpParametersHeaderArgs struct {
	// Specified whether the value is secret.
	IsValueSecret pulumi.BoolPtrInput `pulumi:"isValueSecret"`
	// Header Name.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Header Value. Created and stored in AWS Secrets Manager.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (EventConnectionAuthParametersInvocationHttpParametersHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnectionAuthParametersInvocationHttpParametersHeader)(nil)).Elem()
}

func (i EventConnectionAuthParametersInvocationHttpParametersHeaderArgs) ToEventConnectionAuthParametersInvocationHttpParametersHeaderOutput() EventConnectionAuthParametersInvocationHttpParametersHeaderOutput {
	return i.ToEventConnectionAuthParametersInvocationHttpParametersHeaderOutputWithContext(context.Background())
}

func (i EventConnectionAuthParametersInvocationHttpParametersHeaderArgs) ToEventConnectionAuthParametersInvocationHttpParametersHeaderOutputWithContext(ctx context.Context) EventConnectionAuthParametersInvocationHttpParametersHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersInvocationHttpParametersHeaderOutput)
}

// EventConnectionAuthParametersInvocationHttpParametersHeaderArrayInput is an input type that accepts EventConnectionAuthParametersInvocationHttpParametersHeaderArray and EventConnectionAuthParametersInvocationHttpParametersHeaderArrayOutput values.
// You can construct a concrete instance of `EventConnectionAuthParametersInvocationHttpParametersHeaderArrayInput` via:
//
//	EventConnectionAuthParametersInvocationHttpParametersHeaderArray{ EventConnectionAuthParametersInvocationHttpParametersHeaderArgs{...} }
type EventConnectionAuthParametersInvocationHttpParametersHeaderArrayInput interface {
	pulumi.Input

	ToEventConnectionAuthParametersInvocationHttpParametersHeaderArrayOutput() EventConnectionAuthParametersInvocationHttpParametersHeaderArrayOutput
	ToEventConnectionAuthParametersInvocationHttpParametersHeaderArrayOutputWithContext(context.Context) EventConnectionAuthParametersInvocationHttpParametersHeaderArrayOutput
}

type EventConnectionAuthParametersInvocationHttpParametersHeaderArray []EventConnectionAuthParametersInvocationHttpParametersHeaderInput

func (EventConnectionAuthParametersInvocationHttpParametersHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventConnectionAuthParametersInvocationHttpParametersHeader)(nil)).Elem()
}

func (i EventConnectionAuthParametersInvocationHttpParametersHeaderArray) ToEventConnectionAuthParametersInvocationHttpParametersHeaderArrayOutput() EventConnectionAuthParametersInvocationHttpParametersHeaderArrayOutput {
	return i.ToEventConnectionAuthParametersInvocationHttpParametersHeaderArrayOutputWithContext(context.Background())
}

func (i EventConnectionAuthParametersInvocationHttpParametersHeaderArray) ToEventConnectionAuthParametersInvocationHttpParametersHeaderArrayOutputWithContext(ctx context.Context) EventConnectionAuthParametersInvocationHttpParametersHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersInvocationHttpParametersHeaderArrayOutput)
}

type EventConnectionAuthParametersInvocationHttpParametersHeaderOutput struct{ *pulumi.OutputState }

func (EventConnectionAuthParametersInvocationHttpParametersHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnectionAuthParametersInvocationHttpParametersHeader)(nil)).Elem()
}

func (o EventConnectionAuthParametersInvocationHttpParametersHeaderOutput) ToEventConnectionAuthParametersInvocationHttpParametersHeaderOutput() EventConnectionAuthParametersInvocationHttpParametersHeaderOutput {
	return o
}

func (o EventConnectionAuthParametersInvocationHttpParametersHeaderOutput) ToEventConnectionAuthParametersInvocationHttpParametersHeaderOutputWithContext(ctx context.Context) EventConnectionAuthParametersInvocationHttpParametersHeaderOutput {
	return o
}

// Specified whether the value is secret.
func (o EventConnectionAuthParametersInvocationHttpParametersHeaderOutput) IsValueSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersInvocationHttpParametersHeader) *bool { return v.IsValueSecret }).(pulumi.BoolPtrOutput)
}

// Header Name.
func (o EventConnectionAuthParametersInvocationHttpParametersHeaderOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersInvocationHttpParametersHeader) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Header Value. Created and stored in AWS Secrets Manager.
func (o EventConnectionAuthParametersInvocationHttpParametersHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersInvocationHttpParametersHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EventConnectionAuthParametersInvocationHttpParametersHeaderArrayOutput struct{ *pulumi.OutputState }

func (EventConnectionAuthParametersInvocationHttpParametersHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventConnectionAuthParametersInvocationHttpParametersHeader)(nil)).Elem()
}

func (o EventConnectionAuthParametersInvocationHttpParametersHeaderArrayOutput) ToEventConnectionAuthParametersInvocationHttpParametersHeaderArrayOutput() EventConnectionAuthParametersInvocationHttpParametersHeaderArrayOutput {
	return o
}

func (o EventConnectionAuthParametersInvocationHttpParametersHeaderArrayOutput) ToEventConnectionAuthParametersInvocationHttpParametersHeaderArrayOutputWithContext(ctx context.Context) EventConnectionAuthParametersInvocationHttpParametersHeaderArrayOutput {
	return o
}

func (o EventConnectionAuthParametersInvocationHttpParametersHeaderArrayOutput) Index(i pulumi.IntInput) EventConnectionAuthParametersInvocationHttpParametersHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventConnectionAuthParametersInvocationHttpParametersHeader {
		return vs[0].([]EventConnectionAuthParametersInvocationHttpParametersHeader)[vs[1].(int)]
	}).(EventConnectionAuthParametersInvocationHttpParametersHeaderOutput)
}

type EventConnectionAuthParametersInvocationHttpParametersQueryString struct {
	// Specified whether the value is secret.
	IsValueSecret *bool `pulumi:"isValueSecret"`
	// Header Name.
	Key *string `pulumi:"key"`
	// Header Value. Created and stored in AWS Secrets Manager.
	Value *string `pulumi:"value"`
}

// EventConnectionAuthParametersInvocationHttpParametersQueryStringInput is an input type that accepts EventConnectionAuthParametersInvocationHttpParametersQueryStringArgs and EventConnectionAuthParametersInvocationHttpParametersQueryStringOutput values.
// You can construct a concrete instance of `EventConnectionAuthParametersInvocationHttpParametersQueryStringInput` via:
//
//	EventConnectionAuthParametersInvocationHttpParametersQueryStringArgs{...}
type EventConnectionAuthParametersInvocationHttpParametersQueryStringInput interface {
	pulumi.Input

	ToEventConnectionAuthParametersInvocationHttpParametersQueryStringOutput() EventConnectionAuthParametersInvocationHttpParametersQueryStringOutput
	ToEventConnectionAuthParametersInvocationHttpParametersQueryStringOutputWithContext(context.Context) EventConnectionAuthParametersInvocationHttpParametersQueryStringOutput
}

type EventConnectionAuthParametersInvocationHttpParametersQueryStringArgs struct {
	// Specified whether the value is secret.
	IsValueSecret pulumi.BoolPtrInput `pulumi:"isValueSecret"`
	// Header Name.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Header Value. Created and stored in AWS Secrets Manager.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (EventConnectionAuthParametersInvocationHttpParametersQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnectionAuthParametersInvocationHttpParametersQueryString)(nil)).Elem()
}

func (i EventConnectionAuthParametersInvocationHttpParametersQueryStringArgs) ToEventConnectionAuthParametersInvocationHttpParametersQueryStringOutput() EventConnectionAuthParametersInvocationHttpParametersQueryStringOutput {
	return i.ToEventConnectionAuthParametersInvocationHttpParametersQueryStringOutputWithContext(context.Background())
}

func (i EventConnectionAuthParametersInvocationHttpParametersQueryStringArgs) ToEventConnectionAuthParametersInvocationHttpParametersQueryStringOutputWithContext(ctx context.Context) EventConnectionAuthParametersInvocationHttpParametersQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersInvocationHttpParametersQueryStringOutput)
}

// EventConnectionAuthParametersInvocationHttpParametersQueryStringArrayInput is an input type that accepts EventConnectionAuthParametersInvocationHttpParametersQueryStringArray and EventConnectionAuthParametersInvocationHttpParametersQueryStringArrayOutput values.
// You can construct a concrete instance of `EventConnectionAuthParametersInvocationHttpParametersQueryStringArrayInput` via:
//
//	EventConnectionAuthParametersInvocationHttpParametersQueryStringArray{ EventConnectionAuthParametersInvocationHttpParametersQueryStringArgs{...} }
type EventConnectionAuthParametersInvocationHttpParametersQueryStringArrayInput interface {
	pulumi.Input

	ToEventConnectionAuthParametersInvocationHttpParametersQueryStringArrayOutput() EventConnectionAuthParametersInvocationHttpParametersQueryStringArrayOutput
	ToEventConnectionAuthParametersInvocationHttpParametersQueryStringArrayOutputWithContext(context.Context) EventConnectionAuthParametersInvocationHttpParametersQueryStringArrayOutput
}

type EventConnectionAuthParametersInvocationHttpParametersQueryStringArray []EventConnectionAuthParametersInvocationHttpParametersQueryStringInput

func (EventConnectionAuthParametersInvocationHttpParametersQueryStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventConnectionAuthParametersInvocationHttpParametersQueryString)(nil)).Elem()
}

func (i EventConnectionAuthParametersInvocationHttpParametersQueryStringArray) ToEventConnectionAuthParametersInvocationHttpParametersQueryStringArrayOutput() EventConnectionAuthParametersInvocationHttpParametersQueryStringArrayOutput {
	return i.ToEventConnectionAuthParametersInvocationHttpParametersQueryStringArrayOutputWithContext(context.Background())
}

func (i EventConnectionAuthParametersInvocationHttpParametersQueryStringArray) ToEventConnectionAuthParametersInvocationHttpParametersQueryStringArrayOutputWithContext(ctx context.Context) EventConnectionAuthParametersInvocationHttpParametersQueryStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersInvocationHttpParametersQueryStringArrayOutput)
}

type EventConnectionAuthParametersInvocationHttpParametersQueryStringOutput struct{ *pulumi.OutputState }

func (EventConnectionAuthParametersInvocationHttpParametersQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnectionAuthParametersInvocationHttpParametersQueryString)(nil)).Elem()
}

func (o EventConnectionAuthParametersInvocationHttpParametersQueryStringOutput) ToEventConnectionAuthParametersInvocationHttpParametersQueryStringOutput() EventConnectionAuthParametersInvocationHttpParametersQueryStringOutput {
	return o
}

func (o EventConnectionAuthParametersInvocationHttpParametersQueryStringOutput) ToEventConnectionAuthParametersInvocationHttpParametersQueryStringOutputWithContext(ctx context.Context) EventConnectionAuthParametersInvocationHttpParametersQueryStringOutput {
	return o
}

// Specified whether the value is secret.
func (o EventConnectionAuthParametersInvocationHttpParametersQueryStringOutput) IsValueSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersInvocationHttpParametersQueryString) *bool { return v.IsValueSecret }).(pulumi.BoolPtrOutput)
}

// Header Name.
func (o EventConnectionAuthParametersInvocationHttpParametersQueryStringOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersInvocationHttpParametersQueryString) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Header Value. Created and stored in AWS Secrets Manager.
func (o EventConnectionAuthParametersInvocationHttpParametersQueryStringOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersInvocationHttpParametersQueryString) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EventConnectionAuthParametersInvocationHttpParametersQueryStringArrayOutput struct{ *pulumi.OutputState }

func (EventConnectionAuthParametersInvocationHttpParametersQueryStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventConnectionAuthParametersInvocationHttpParametersQueryString)(nil)).Elem()
}

func (o EventConnectionAuthParametersInvocationHttpParametersQueryStringArrayOutput) ToEventConnectionAuthParametersInvocationHttpParametersQueryStringArrayOutput() EventConnectionAuthParametersInvocationHttpParametersQueryStringArrayOutput {
	return o
}

func (o EventConnectionAuthParametersInvocationHttpParametersQueryStringArrayOutput) ToEventConnectionAuthParametersInvocationHttpParametersQueryStringArrayOutputWithContext(ctx context.Context) EventConnectionAuthParametersInvocationHttpParametersQueryStringArrayOutput {
	return o
}

func (o EventConnectionAuthParametersInvocationHttpParametersQueryStringArrayOutput) Index(i pulumi.IntInput) EventConnectionAuthParametersInvocationHttpParametersQueryStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventConnectionAuthParametersInvocationHttpParametersQueryString {
		return vs[0].([]EventConnectionAuthParametersInvocationHttpParametersQueryString)[vs[1].(int)]
	}).(EventConnectionAuthParametersInvocationHttpParametersQueryStringOutput)
}

type EventConnectionAuthParametersOauth struct {
	// The URL to the authorization endpoint.
	AuthorizationEndpoint string `pulumi:"authorizationEndpoint"`
	// Contains the client parameters for OAuth authorization. Contains the following two parameters.
	ClientParameters *EventConnectionAuthParametersOauthClientParameters `pulumi:"clientParameters"`
	// A password for the authorization. Created and stored in AWS Secrets Manager.
	HttpMethod string `pulumi:"httpMethod"`
	// OAuth Http Parameters are additional credentials used to sign the request to the authorization endpoint to exchange the OAuth Client information for an access token. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.
	OauthHttpParameters EventConnectionAuthParametersOauthOauthHttpParameters `pulumi:"oauthHttpParameters"`
}

// EventConnectionAuthParametersOauthInput is an input type that accepts EventConnectionAuthParametersOauthArgs and EventConnectionAuthParametersOauthOutput values.
// You can construct a concrete instance of `EventConnectionAuthParametersOauthInput` via:
//
//	EventConnectionAuthParametersOauthArgs{...}
type EventConnectionAuthParametersOauthInput interface {
	pulumi.Input

	ToEventConnectionAuthParametersOauthOutput() EventConnectionAuthParametersOauthOutput
	ToEventConnectionAuthParametersOauthOutputWithContext(context.Context) EventConnectionAuthParametersOauthOutput
}

type EventConnectionAuthParametersOauthArgs struct {
	// The URL to the authorization endpoint.
	AuthorizationEndpoint pulumi.StringInput `pulumi:"authorizationEndpoint"`
	// Contains the client parameters for OAuth authorization. Contains the following two parameters.
	ClientParameters EventConnectionAuthParametersOauthClientParametersPtrInput `pulumi:"clientParameters"`
	// A password for the authorization. Created and stored in AWS Secrets Manager.
	HttpMethod pulumi.StringInput `pulumi:"httpMethod"`
	// OAuth Http Parameters are additional credentials used to sign the request to the authorization endpoint to exchange the OAuth Client information for an access token. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.
	OauthHttpParameters EventConnectionAuthParametersOauthOauthHttpParametersInput `pulumi:"oauthHttpParameters"`
}

func (EventConnectionAuthParametersOauthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnectionAuthParametersOauth)(nil)).Elem()
}

func (i EventConnectionAuthParametersOauthArgs) ToEventConnectionAuthParametersOauthOutput() EventConnectionAuthParametersOauthOutput {
	return i.ToEventConnectionAuthParametersOauthOutputWithContext(context.Background())
}

func (i EventConnectionAuthParametersOauthArgs) ToEventConnectionAuthParametersOauthOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersOauthOutput)
}

func (i EventConnectionAuthParametersOauthArgs) ToEventConnectionAuthParametersOauthPtrOutput() EventConnectionAuthParametersOauthPtrOutput {
	return i.ToEventConnectionAuthParametersOauthPtrOutputWithContext(context.Background())
}

func (i EventConnectionAuthParametersOauthArgs) ToEventConnectionAuthParametersOauthPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersOauthOutput).ToEventConnectionAuthParametersOauthPtrOutputWithContext(ctx)
}

// EventConnectionAuthParametersOauthPtrInput is an input type that accepts EventConnectionAuthParametersOauthArgs, EventConnectionAuthParametersOauthPtr and EventConnectionAuthParametersOauthPtrOutput values.
// You can construct a concrete instance of `EventConnectionAuthParametersOauthPtrInput` via:
//
//	        EventConnectionAuthParametersOauthArgs{...}
//
//	or:
//
//	        nil
type EventConnectionAuthParametersOauthPtrInput interface {
	pulumi.Input

	ToEventConnectionAuthParametersOauthPtrOutput() EventConnectionAuthParametersOauthPtrOutput
	ToEventConnectionAuthParametersOauthPtrOutputWithContext(context.Context) EventConnectionAuthParametersOauthPtrOutput
}

type eventConnectionAuthParametersOauthPtrType EventConnectionAuthParametersOauthArgs

func EventConnectionAuthParametersOauthPtr(v *EventConnectionAuthParametersOauthArgs) EventConnectionAuthParametersOauthPtrInput {
	return (*eventConnectionAuthParametersOauthPtrType)(v)
}

func (*eventConnectionAuthParametersOauthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventConnectionAuthParametersOauth)(nil)).Elem()
}

func (i *eventConnectionAuthParametersOauthPtrType) ToEventConnectionAuthParametersOauthPtrOutput() EventConnectionAuthParametersOauthPtrOutput {
	return i.ToEventConnectionAuthParametersOauthPtrOutputWithContext(context.Background())
}

func (i *eventConnectionAuthParametersOauthPtrType) ToEventConnectionAuthParametersOauthPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersOauthPtrOutput)
}

type EventConnectionAuthParametersOauthOutput struct{ *pulumi.OutputState }

func (EventConnectionAuthParametersOauthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnectionAuthParametersOauth)(nil)).Elem()
}

func (o EventConnectionAuthParametersOauthOutput) ToEventConnectionAuthParametersOauthOutput() EventConnectionAuthParametersOauthOutput {
	return o
}

func (o EventConnectionAuthParametersOauthOutput) ToEventConnectionAuthParametersOauthOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthOutput {
	return o
}

func (o EventConnectionAuthParametersOauthOutput) ToEventConnectionAuthParametersOauthPtrOutput() EventConnectionAuthParametersOauthPtrOutput {
	return o.ToEventConnectionAuthParametersOauthPtrOutputWithContext(context.Background())
}

func (o EventConnectionAuthParametersOauthOutput) ToEventConnectionAuthParametersOauthPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventConnectionAuthParametersOauth) *EventConnectionAuthParametersOauth {
		return &v
	}).(EventConnectionAuthParametersOauthPtrOutput)
}

// The URL to the authorization endpoint.
func (o EventConnectionAuthParametersOauthOutput) AuthorizationEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersOauth) string { return v.AuthorizationEndpoint }).(pulumi.StringOutput)
}

// Contains the client parameters for OAuth authorization. Contains the following two parameters.
func (o EventConnectionAuthParametersOauthOutput) ClientParameters() EventConnectionAuthParametersOauthClientParametersPtrOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersOauth) *EventConnectionAuthParametersOauthClientParameters {
		return v.ClientParameters
	}).(EventConnectionAuthParametersOauthClientParametersPtrOutput)
}

// A password for the authorization. Created and stored in AWS Secrets Manager.
func (o EventConnectionAuthParametersOauthOutput) HttpMethod() pulumi.StringOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersOauth) string { return v.HttpMethod }).(pulumi.StringOutput)
}

// OAuth Http Parameters are additional credentials used to sign the request to the authorization endpoint to exchange the OAuth Client information for an access token. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.
func (o EventConnectionAuthParametersOauthOutput) OauthHttpParameters() EventConnectionAuthParametersOauthOauthHttpParametersOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersOauth) EventConnectionAuthParametersOauthOauthHttpParameters {
		return v.OauthHttpParameters
	}).(EventConnectionAuthParametersOauthOauthHttpParametersOutput)
}

type EventConnectionAuthParametersOauthPtrOutput struct{ *pulumi.OutputState }

func (EventConnectionAuthParametersOauthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventConnectionAuthParametersOauth)(nil)).Elem()
}

func (o EventConnectionAuthParametersOauthPtrOutput) ToEventConnectionAuthParametersOauthPtrOutput() EventConnectionAuthParametersOauthPtrOutput {
	return o
}

func (o EventConnectionAuthParametersOauthPtrOutput) ToEventConnectionAuthParametersOauthPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthPtrOutput {
	return o
}

func (o EventConnectionAuthParametersOauthPtrOutput) Elem() EventConnectionAuthParametersOauthOutput {
	return o.ApplyT(func(v *EventConnectionAuthParametersOauth) EventConnectionAuthParametersOauth {
		if v != nil {
			return *v
		}
		var ret EventConnectionAuthParametersOauth
		return ret
	}).(EventConnectionAuthParametersOauthOutput)
}

// The URL to the authorization endpoint.
func (o EventConnectionAuthParametersOauthPtrOutput) AuthorizationEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventConnectionAuthParametersOauth) *string {
		if v == nil {
			return nil
		}
		return &v.AuthorizationEndpoint
	}).(pulumi.StringPtrOutput)
}

// Contains the client parameters for OAuth authorization. Contains the following two parameters.
func (o EventConnectionAuthParametersOauthPtrOutput) ClientParameters() EventConnectionAuthParametersOauthClientParametersPtrOutput {
	return o.ApplyT(func(v *EventConnectionAuthParametersOauth) *EventConnectionAuthParametersOauthClientParameters {
		if v == nil {
			return nil
		}
		return v.ClientParameters
	}).(EventConnectionAuthParametersOauthClientParametersPtrOutput)
}

// A password for the authorization. Created and stored in AWS Secrets Manager.
func (o EventConnectionAuthParametersOauthPtrOutput) HttpMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventConnectionAuthParametersOauth) *string {
		if v == nil {
			return nil
		}
		return &v.HttpMethod
	}).(pulumi.StringPtrOutput)
}

// OAuth Http Parameters are additional credentials used to sign the request to the authorization endpoint to exchange the OAuth Client information for an access token. Secret values are stored and managed by AWS Secrets Manager. A maximum of 1 are allowed. Documented below.
func (o EventConnectionAuthParametersOauthPtrOutput) OauthHttpParameters() EventConnectionAuthParametersOauthOauthHttpParametersPtrOutput {
	return o.ApplyT(func(v *EventConnectionAuthParametersOauth) *EventConnectionAuthParametersOauthOauthHttpParameters {
		if v == nil {
			return nil
		}
		return &v.OauthHttpParameters
	}).(EventConnectionAuthParametersOauthOauthHttpParametersPtrOutput)
}

type EventConnectionAuthParametersOauthClientParameters struct {
	// The client ID for the credentials to use for authorization. Created and stored in AWS Secrets Manager.
	ClientId string `pulumi:"clientId"`
	// The client secret for the credentials to use for authorization. Created and stored in AWS Secrets Manager.
	ClientSecret string `pulumi:"clientSecret"`
}

// EventConnectionAuthParametersOauthClientParametersInput is an input type that accepts EventConnectionAuthParametersOauthClientParametersArgs and EventConnectionAuthParametersOauthClientParametersOutput values.
// You can construct a concrete instance of `EventConnectionAuthParametersOauthClientParametersInput` via:
//
//	EventConnectionAuthParametersOauthClientParametersArgs{...}
type EventConnectionAuthParametersOauthClientParametersInput interface {
	pulumi.Input

	ToEventConnectionAuthParametersOauthClientParametersOutput() EventConnectionAuthParametersOauthClientParametersOutput
	ToEventConnectionAuthParametersOauthClientParametersOutputWithContext(context.Context) EventConnectionAuthParametersOauthClientParametersOutput
}

type EventConnectionAuthParametersOauthClientParametersArgs struct {
	// The client ID for the credentials to use for authorization. Created and stored in AWS Secrets Manager.
	ClientId pulumi.StringInput `pulumi:"clientId"`
	// The client secret for the credentials to use for authorization. Created and stored in AWS Secrets Manager.
	ClientSecret pulumi.StringInput `pulumi:"clientSecret"`
}

func (EventConnectionAuthParametersOauthClientParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnectionAuthParametersOauthClientParameters)(nil)).Elem()
}

func (i EventConnectionAuthParametersOauthClientParametersArgs) ToEventConnectionAuthParametersOauthClientParametersOutput() EventConnectionAuthParametersOauthClientParametersOutput {
	return i.ToEventConnectionAuthParametersOauthClientParametersOutputWithContext(context.Background())
}

func (i EventConnectionAuthParametersOauthClientParametersArgs) ToEventConnectionAuthParametersOauthClientParametersOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthClientParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersOauthClientParametersOutput)
}

func (i EventConnectionAuthParametersOauthClientParametersArgs) ToEventConnectionAuthParametersOauthClientParametersPtrOutput() EventConnectionAuthParametersOauthClientParametersPtrOutput {
	return i.ToEventConnectionAuthParametersOauthClientParametersPtrOutputWithContext(context.Background())
}

func (i EventConnectionAuthParametersOauthClientParametersArgs) ToEventConnectionAuthParametersOauthClientParametersPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthClientParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersOauthClientParametersOutput).ToEventConnectionAuthParametersOauthClientParametersPtrOutputWithContext(ctx)
}

// EventConnectionAuthParametersOauthClientParametersPtrInput is an input type that accepts EventConnectionAuthParametersOauthClientParametersArgs, EventConnectionAuthParametersOauthClientParametersPtr and EventConnectionAuthParametersOauthClientParametersPtrOutput values.
// You can construct a concrete instance of `EventConnectionAuthParametersOauthClientParametersPtrInput` via:
//
//	        EventConnectionAuthParametersOauthClientParametersArgs{...}
//
//	or:
//
//	        nil
type EventConnectionAuthParametersOauthClientParametersPtrInput interface {
	pulumi.Input

	ToEventConnectionAuthParametersOauthClientParametersPtrOutput() EventConnectionAuthParametersOauthClientParametersPtrOutput
	ToEventConnectionAuthParametersOauthClientParametersPtrOutputWithContext(context.Context) EventConnectionAuthParametersOauthClientParametersPtrOutput
}

type eventConnectionAuthParametersOauthClientParametersPtrType EventConnectionAuthParametersOauthClientParametersArgs

func EventConnectionAuthParametersOauthClientParametersPtr(v *EventConnectionAuthParametersOauthClientParametersArgs) EventConnectionAuthParametersOauthClientParametersPtrInput {
	return (*eventConnectionAuthParametersOauthClientParametersPtrType)(v)
}

func (*eventConnectionAuthParametersOauthClientParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventConnectionAuthParametersOauthClientParameters)(nil)).Elem()
}

func (i *eventConnectionAuthParametersOauthClientParametersPtrType) ToEventConnectionAuthParametersOauthClientParametersPtrOutput() EventConnectionAuthParametersOauthClientParametersPtrOutput {
	return i.ToEventConnectionAuthParametersOauthClientParametersPtrOutputWithContext(context.Background())
}

func (i *eventConnectionAuthParametersOauthClientParametersPtrType) ToEventConnectionAuthParametersOauthClientParametersPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthClientParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersOauthClientParametersPtrOutput)
}

type EventConnectionAuthParametersOauthClientParametersOutput struct{ *pulumi.OutputState }

func (EventConnectionAuthParametersOauthClientParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnectionAuthParametersOauthClientParameters)(nil)).Elem()
}

func (o EventConnectionAuthParametersOauthClientParametersOutput) ToEventConnectionAuthParametersOauthClientParametersOutput() EventConnectionAuthParametersOauthClientParametersOutput {
	return o
}

func (o EventConnectionAuthParametersOauthClientParametersOutput) ToEventConnectionAuthParametersOauthClientParametersOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthClientParametersOutput {
	return o
}

func (o EventConnectionAuthParametersOauthClientParametersOutput) ToEventConnectionAuthParametersOauthClientParametersPtrOutput() EventConnectionAuthParametersOauthClientParametersPtrOutput {
	return o.ToEventConnectionAuthParametersOauthClientParametersPtrOutputWithContext(context.Background())
}

func (o EventConnectionAuthParametersOauthClientParametersOutput) ToEventConnectionAuthParametersOauthClientParametersPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthClientParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventConnectionAuthParametersOauthClientParameters) *EventConnectionAuthParametersOauthClientParameters {
		return &v
	}).(EventConnectionAuthParametersOauthClientParametersPtrOutput)
}

// The client ID for the credentials to use for authorization. Created and stored in AWS Secrets Manager.
func (o EventConnectionAuthParametersOauthClientParametersOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersOauthClientParameters) string { return v.ClientId }).(pulumi.StringOutput)
}

// The client secret for the credentials to use for authorization. Created and stored in AWS Secrets Manager.
func (o EventConnectionAuthParametersOauthClientParametersOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersOauthClientParameters) string { return v.ClientSecret }).(pulumi.StringOutput)
}

type EventConnectionAuthParametersOauthClientParametersPtrOutput struct{ *pulumi.OutputState }

func (EventConnectionAuthParametersOauthClientParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventConnectionAuthParametersOauthClientParameters)(nil)).Elem()
}

func (o EventConnectionAuthParametersOauthClientParametersPtrOutput) ToEventConnectionAuthParametersOauthClientParametersPtrOutput() EventConnectionAuthParametersOauthClientParametersPtrOutput {
	return o
}

func (o EventConnectionAuthParametersOauthClientParametersPtrOutput) ToEventConnectionAuthParametersOauthClientParametersPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthClientParametersPtrOutput {
	return o
}

func (o EventConnectionAuthParametersOauthClientParametersPtrOutput) Elem() EventConnectionAuthParametersOauthClientParametersOutput {
	return o.ApplyT(func(v *EventConnectionAuthParametersOauthClientParameters) EventConnectionAuthParametersOauthClientParameters {
		if v != nil {
			return *v
		}
		var ret EventConnectionAuthParametersOauthClientParameters
		return ret
	}).(EventConnectionAuthParametersOauthClientParametersOutput)
}

// The client ID for the credentials to use for authorization. Created and stored in AWS Secrets Manager.
func (o EventConnectionAuthParametersOauthClientParametersPtrOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventConnectionAuthParametersOauthClientParameters) *string {
		if v == nil {
			return nil
		}
		return &v.ClientId
	}).(pulumi.StringPtrOutput)
}

// The client secret for the credentials to use for authorization. Created and stored in AWS Secrets Manager.
func (o EventConnectionAuthParametersOauthClientParametersPtrOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventConnectionAuthParametersOauthClientParameters) *string {
		if v == nil {
			return nil
		}
		return &v.ClientSecret
	}).(pulumi.StringPtrOutput)
}

type EventConnectionAuthParametersOauthOauthHttpParameters struct {
	// Contains additional body string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
	Bodies []EventConnectionAuthParametersOauthOauthHttpParametersBody `pulumi:"bodies"`
	// Contains additional header parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
	Headers []EventConnectionAuthParametersOauthOauthHttpParametersHeader `pulumi:"headers"`
	// Contains additional query string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
	QueryStrings []EventConnectionAuthParametersOauthOauthHttpParametersQueryString `pulumi:"queryStrings"`
}

// EventConnectionAuthParametersOauthOauthHttpParametersInput is an input type that accepts EventConnectionAuthParametersOauthOauthHttpParametersArgs and EventConnectionAuthParametersOauthOauthHttpParametersOutput values.
// You can construct a concrete instance of `EventConnectionAuthParametersOauthOauthHttpParametersInput` via:
//
//	EventConnectionAuthParametersOauthOauthHttpParametersArgs{...}
type EventConnectionAuthParametersOauthOauthHttpParametersInput interface {
	pulumi.Input

	ToEventConnectionAuthParametersOauthOauthHttpParametersOutput() EventConnectionAuthParametersOauthOauthHttpParametersOutput
	ToEventConnectionAuthParametersOauthOauthHttpParametersOutputWithContext(context.Context) EventConnectionAuthParametersOauthOauthHttpParametersOutput
}

type EventConnectionAuthParametersOauthOauthHttpParametersArgs struct {
	// Contains additional body string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
	Bodies EventConnectionAuthParametersOauthOauthHttpParametersBodyArrayInput `pulumi:"bodies"`
	// Contains additional header parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
	Headers EventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayInput `pulumi:"headers"`
	// Contains additional query string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
	QueryStrings EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayInput `pulumi:"queryStrings"`
}

func (EventConnectionAuthParametersOauthOauthHttpParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnectionAuthParametersOauthOauthHttpParameters)(nil)).Elem()
}

func (i EventConnectionAuthParametersOauthOauthHttpParametersArgs) ToEventConnectionAuthParametersOauthOauthHttpParametersOutput() EventConnectionAuthParametersOauthOauthHttpParametersOutput {
	return i.ToEventConnectionAuthParametersOauthOauthHttpParametersOutputWithContext(context.Background())
}

func (i EventConnectionAuthParametersOauthOauthHttpParametersArgs) ToEventConnectionAuthParametersOauthOauthHttpParametersOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthOauthHttpParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersOauthOauthHttpParametersOutput)
}

func (i EventConnectionAuthParametersOauthOauthHttpParametersArgs) ToEventConnectionAuthParametersOauthOauthHttpParametersPtrOutput() EventConnectionAuthParametersOauthOauthHttpParametersPtrOutput {
	return i.ToEventConnectionAuthParametersOauthOauthHttpParametersPtrOutputWithContext(context.Background())
}

func (i EventConnectionAuthParametersOauthOauthHttpParametersArgs) ToEventConnectionAuthParametersOauthOauthHttpParametersPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthOauthHttpParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersOauthOauthHttpParametersOutput).ToEventConnectionAuthParametersOauthOauthHttpParametersPtrOutputWithContext(ctx)
}

// EventConnectionAuthParametersOauthOauthHttpParametersPtrInput is an input type that accepts EventConnectionAuthParametersOauthOauthHttpParametersArgs, EventConnectionAuthParametersOauthOauthHttpParametersPtr and EventConnectionAuthParametersOauthOauthHttpParametersPtrOutput values.
// You can construct a concrete instance of `EventConnectionAuthParametersOauthOauthHttpParametersPtrInput` via:
//
//	        EventConnectionAuthParametersOauthOauthHttpParametersArgs{...}
//
//	or:
//
//	        nil
type EventConnectionAuthParametersOauthOauthHttpParametersPtrInput interface {
	pulumi.Input

	ToEventConnectionAuthParametersOauthOauthHttpParametersPtrOutput() EventConnectionAuthParametersOauthOauthHttpParametersPtrOutput
	ToEventConnectionAuthParametersOauthOauthHttpParametersPtrOutputWithContext(context.Context) EventConnectionAuthParametersOauthOauthHttpParametersPtrOutput
}

type eventConnectionAuthParametersOauthOauthHttpParametersPtrType EventConnectionAuthParametersOauthOauthHttpParametersArgs

func EventConnectionAuthParametersOauthOauthHttpParametersPtr(v *EventConnectionAuthParametersOauthOauthHttpParametersArgs) EventConnectionAuthParametersOauthOauthHttpParametersPtrInput {
	return (*eventConnectionAuthParametersOauthOauthHttpParametersPtrType)(v)
}

func (*eventConnectionAuthParametersOauthOauthHttpParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventConnectionAuthParametersOauthOauthHttpParameters)(nil)).Elem()
}

func (i *eventConnectionAuthParametersOauthOauthHttpParametersPtrType) ToEventConnectionAuthParametersOauthOauthHttpParametersPtrOutput() EventConnectionAuthParametersOauthOauthHttpParametersPtrOutput {
	return i.ToEventConnectionAuthParametersOauthOauthHttpParametersPtrOutputWithContext(context.Background())
}

func (i *eventConnectionAuthParametersOauthOauthHttpParametersPtrType) ToEventConnectionAuthParametersOauthOauthHttpParametersPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthOauthHttpParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersOauthOauthHttpParametersPtrOutput)
}

type EventConnectionAuthParametersOauthOauthHttpParametersOutput struct{ *pulumi.OutputState }

func (EventConnectionAuthParametersOauthOauthHttpParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnectionAuthParametersOauthOauthHttpParameters)(nil)).Elem()
}

func (o EventConnectionAuthParametersOauthOauthHttpParametersOutput) ToEventConnectionAuthParametersOauthOauthHttpParametersOutput() EventConnectionAuthParametersOauthOauthHttpParametersOutput {
	return o
}

func (o EventConnectionAuthParametersOauthOauthHttpParametersOutput) ToEventConnectionAuthParametersOauthOauthHttpParametersOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthOauthHttpParametersOutput {
	return o
}

func (o EventConnectionAuthParametersOauthOauthHttpParametersOutput) ToEventConnectionAuthParametersOauthOauthHttpParametersPtrOutput() EventConnectionAuthParametersOauthOauthHttpParametersPtrOutput {
	return o.ToEventConnectionAuthParametersOauthOauthHttpParametersPtrOutputWithContext(context.Background())
}

func (o EventConnectionAuthParametersOauthOauthHttpParametersOutput) ToEventConnectionAuthParametersOauthOauthHttpParametersPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthOauthHttpParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventConnectionAuthParametersOauthOauthHttpParameters) *EventConnectionAuthParametersOauthOauthHttpParameters {
		return &v
	}).(EventConnectionAuthParametersOauthOauthHttpParametersPtrOutput)
}

// Contains additional body string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
func (o EventConnectionAuthParametersOauthOauthHttpParametersOutput) Bodies() EventConnectionAuthParametersOauthOauthHttpParametersBodyArrayOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersOauthOauthHttpParameters) []EventConnectionAuthParametersOauthOauthHttpParametersBody {
		return v.Bodies
	}).(EventConnectionAuthParametersOauthOauthHttpParametersBodyArrayOutput)
}

// Contains additional header parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
func (o EventConnectionAuthParametersOauthOauthHttpParametersOutput) Headers() EventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersOauthOauthHttpParameters) []EventConnectionAuthParametersOauthOauthHttpParametersHeader {
		return v.Headers
	}).(EventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayOutput)
}

// Contains additional query string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
func (o EventConnectionAuthParametersOauthOauthHttpParametersOutput) QueryStrings() EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersOauthOauthHttpParameters) []EventConnectionAuthParametersOauthOauthHttpParametersQueryString {
		return v.QueryStrings
	}).(EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayOutput)
}

type EventConnectionAuthParametersOauthOauthHttpParametersPtrOutput struct{ *pulumi.OutputState }

func (EventConnectionAuthParametersOauthOauthHttpParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventConnectionAuthParametersOauthOauthHttpParameters)(nil)).Elem()
}

func (o EventConnectionAuthParametersOauthOauthHttpParametersPtrOutput) ToEventConnectionAuthParametersOauthOauthHttpParametersPtrOutput() EventConnectionAuthParametersOauthOauthHttpParametersPtrOutput {
	return o
}

func (o EventConnectionAuthParametersOauthOauthHttpParametersPtrOutput) ToEventConnectionAuthParametersOauthOauthHttpParametersPtrOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthOauthHttpParametersPtrOutput {
	return o
}

func (o EventConnectionAuthParametersOauthOauthHttpParametersPtrOutput) Elem() EventConnectionAuthParametersOauthOauthHttpParametersOutput {
	return o.ApplyT(func(v *EventConnectionAuthParametersOauthOauthHttpParameters) EventConnectionAuthParametersOauthOauthHttpParameters {
		if v != nil {
			return *v
		}
		var ret EventConnectionAuthParametersOauthOauthHttpParameters
		return ret
	}).(EventConnectionAuthParametersOauthOauthHttpParametersOutput)
}

// Contains additional body string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
func (o EventConnectionAuthParametersOauthOauthHttpParametersPtrOutput) Bodies() EventConnectionAuthParametersOauthOauthHttpParametersBodyArrayOutput {
	return o.ApplyT(func(v *EventConnectionAuthParametersOauthOauthHttpParameters) []EventConnectionAuthParametersOauthOauthHttpParametersBody {
		if v == nil {
			return nil
		}
		return v.Bodies
	}).(EventConnectionAuthParametersOauthOauthHttpParametersBodyArrayOutput)
}

// Contains additional header parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
func (o EventConnectionAuthParametersOauthOauthHttpParametersPtrOutput) Headers() EventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayOutput {
	return o.ApplyT(func(v *EventConnectionAuthParametersOauthOauthHttpParameters) []EventConnectionAuthParametersOauthOauthHttpParametersHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(EventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayOutput)
}

// Contains additional query string parameters for the connection. You can include up to 100 additional body string parameters per request. Each additional parameter counts towards the event payload size, which cannot exceed 64 KB. Each parameter can contain the following:
func (o EventConnectionAuthParametersOauthOauthHttpParametersPtrOutput) QueryStrings() EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayOutput {
	return o.ApplyT(func(v *EventConnectionAuthParametersOauthOauthHttpParameters) []EventConnectionAuthParametersOauthOauthHttpParametersQueryString {
		if v == nil {
			return nil
		}
		return v.QueryStrings
	}).(EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayOutput)
}

type EventConnectionAuthParametersOauthOauthHttpParametersBody struct {
	// Specified whether the value is secret.
	IsValueSecret *bool `pulumi:"isValueSecret"`
	// Header Name.
	Key *string `pulumi:"key"`
	// Header Value. Created and stored in AWS Secrets Manager.
	Value *string `pulumi:"value"`
}

// EventConnectionAuthParametersOauthOauthHttpParametersBodyInput is an input type that accepts EventConnectionAuthParametersOauthOauthHttpParametersBodyArgs and EventConnectionAuthParametersOauthOauthHttpParametersBodyOutput values.
// You can construct a concrete instance of `EventConnectionAuthParametersOauthOauthHttpParametersBodyInput` via:
//
//	EventConnectionAuthParametersOauthOauthHttpParametersBodyArgs{...}
type EventConnectionAuthParametersOauthOauthHttpParametersBodyInput interface {
	pulumi.Input

	ToEventConnectionAuthParametersOauthOauthHttpParametersBodyOutput() EventConnectionAuthParametersOauthOauthHttpParametersBodyOutput
	ToEventConnectionAuthParametersOauthOauthHttpParametersBodyOutputWithContext(context.Context) EventConnectionAuthParametersOauthOauthHttpParametersBodyOutput
}

type EventConnectionAuthParametersOauthOauthHttpParametersBodyArgs struct {
	// Specified whether the value is secret.
	IsValueSecret pulumi.BoolPtrInput `pulumi:"isValueSecret"`
	// Header Name.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Header Value. Created and stored in AWS Secrets Manager.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (EventConnectionAuthParametersOauthOauthHttpParametersBodyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnectionAuthParametersOauthOauthHttpParametersBody)(nil)).Elem()
}

func (i EventConnectionAuthParametersOauthOauthHttpParametersBodyArgs) ToEventConnectionAuthParametersOauthOauthHttpParametersBodyOutput() EventConnectionAuthParametersOauthOauthHttpParametersBodyOutput {
	return i.ToEventConnectionAuthParametersOauthOauthHttpParametersBodyOutputWithContext(context.Background())
}

func (i EventConnectionAuthParametersOauthOauthHttpParametersBodyArgs) ToEventConnectionAuthParametersOauthOauthHttpParametersBodyOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthOauthHttpParametersBodyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersOauthOauthHttpParametersBodyOutput)
}

// EventConnectionAuthParametersOauthOauthHttpParametersBodyArrayInput is an input type that accepts EventConnectionAuthParametersOauthOauthHttpParametersBodyArray and EventConnectionAuthParametersOauthOauthHttpParametersBodyArrayOutput values.
// You can construct a concrete instance of `EventConnectionAuthParametersOauthOauthHttpParametersBodyArrayInput` via:
//
//	EventConnectionAuthParametersOauthOauthHttpParametersBodyArray{ EventConnectionAuthParametersOauthOauthHttpParametersBodyArgs{...} }
type EventConnectionAuthParametersOauthOauthHttpParametersBodyArrayInput interface {
	pulumi.Input

	ToEventConnectionAuthParametersOauthOauthHttpParametersBodyArrayOutput() EventConnectionAuthParametersOauthOauthHttpParametersBodyArrayOutput
	ToEventConnectionAuthParametersOauthOauthHttpParametersBodyArrayOutputWithContext(context.Context) EventConnectionAuthParametersOauthOauthHttpParametersBodyArrayOutput
}

type EventConnectionAuthParametersOauthOauthHttpParametersBodyArray []EventConnectionAuthParametersOauthOauthHttpParametersBodyInput

func (EventConnectionAuthParametersOauthOauthHttpParametersBodyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventConnectionAuthParametersOauthOauthHttpParametersBody)(nil)).Elem()
}

func (i EventConnectionAuthParametersOauthOauthHttpParametersBodyArray) ToEventConnectionAuthParametersOauthOauthHttpParametersBodyArrayOutput() EventConnectionAuthParametersOauthOauthHttpParametersBodyArrayOutput {
	return i.ToEventConnectionAuthParametersOauthOauthHttpParametersBodyArrayOutputWithContext(context.Background())
}

func (i EventConnectionAuthParametersOauthOauthHttpParametersBodyArray) ToEventConnectionAuthParametersOauthOauthHttpParametersBodyArrayOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthOauthHttpParametersBodyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersOauthOauthHttpParametersBodyArrayOutput)
}

type EventConnectionAuthParametersOauthOauthHttpParametersBodyOutput struct{ *pulumi.OutputState }

func (EventConnectionAuthParametersOauthOauthHttpParametersBodyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnectionAuthParametersOauthOauthHttpParametersBody)(nil)).Elem()
}

func (o EventConnectionAuthParametersOauthOauthHttpParametersBodyOutput) ToEventConnectionAuthParametersOauthOauthHttpParametersBodyOutput() EventConnectionAuthParametersOauthOauthHttpParametersBodyOutput {
	return o
}

func (o EventConnectionAuthParametersOauthOauthHttpParametersBodyOutput) ToEventConnectionAuthParametersOauthOauthHttpParametersBodyOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthOauthHttpParametersBodyOutput {
	return o
}

// Specified whether the value is secret.
func (o EventConnectionAuthParametersOauthOauthHttpParametersBodyOutput) IsValueSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersOauthOauthHttpParametersBody) *bool { return v.IsValueSecret }).(pulumi.BoolPtrOutput)
}

// Header Name.
func (o EventConnectionAuthParametersOauthOauthHttpParametersBodyOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersOauthOauthHttpParametersBody) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Header Value. Created and stored in AWS Secrets Manager.
func (o EventConnectionAuthParametersOauthOauthHttpParametersBodyOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersOauthOauthHttpParametersBody) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EventConnectionAuthParametersOauthOauthHttpParametersBodyArrayOutput struct{ *pulumi.OutputState }

func (EventConnectionAuthParametersOauthOauthHttpParametersBodyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventConnectionAuthParametersOauthOauthHttpParametersBody)(nil)).Elem()
}

func (o EventConnectionAuthParametersOauthOauthHttpParametersBodyArrayOutput) ToEventConnectionAuthParametersOauthOauthHttpParametersBodyArrayOutput() EventConnectionAuthParametersOauthOauthHttpParametersBodyArrayOutput {
	return o
}

func (o EventConnectionAuthParametersOauthOauthHttpParametersBodyArrayOutput) ToEventConnectionAuthParametersOauthOauthHttpParametersBodyArrayOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthOauthHttpParametersBodyArrayOutput {
	return o
}

func (o EventConnectionAuthParametersOauthOauthHttpParametersBodyArrayOutput) Index(i pulumi.IntInput) EventConnectionAuthParametersOauthOauthHttpParametersBodyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventConnectionAuthParametersOauthOauthHttpParametersBody {
		return vs[0].([]EventConnectionAuthParametersOauthOauthHttpParametersBody)[vs[1].(int)]
	}).(EventConnectionAuthParametersOauthOauthHttpParametersBodyOutput)
}

type EventConnectionAuthParametersOauthOauthHttpParametersHeader struct {
	// Specified whether the value is secret.
	IsValueSecret *bool `pulumi:"isValueSecret"`
	// Header Name.
	Key *string `pulumi:"key"`
	// Header Value. Created and stored in AWS Secrets Manager.
	Value *string `pulumi:"value"`
}

// EventConnectionAuthParametersOauthOauthHttpParametersHeaderInput is an input type that accepts EventConnectionAuthParametersOauthOauthHttpParametersHeaderArgs and EventConnectionAuthParametersOauthOauthHttpParametersHeaderOutput values.
// You can construct a concrete instance of `EventConnectionAuthParametersOauthOauthHttpParametersHeaderInput` via:
//
//	EventConnectionAuthParametersOauthOauthHttpParametersHeaderArgs{...}
type EventConnectionAuthParametersOauthOauthHttpParametersHeaderInput interface {
	pulumi.Input

	ToEventConnectionAuthParametersOauthOauthHttpParametersHeaderOutput() EventConnectionAuthParametersOauthOauthHttpParametersHeaderOutput
	ToEventConnectionAuthParametersOauthOauthHttpParametersHeaderOutputWithContext(context.Context) EventConnectionAuthParametersOauthOauthHttpParametersHeaderOutput
}

type EventConnectionAuthParametersOauthOauthHttpParametersHeaderArgs struct {
	// Specified whether the value is secret.
	IsValueSecret pulumi.BoolPtrInput `pulumi:"isValueSecret"`
	// Header Name.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Header Value. Created and stored in AWS Secrets Manager.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (EventConnectionAuthParametersOauthOauthHttpParametersHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnectionAuthParametersOauthOauthHttpParametersHeader)(nil)).Elem()
}

func (i EventConnectionAuthParametersOauthOauthHttpParametersHeaderArgs) ToEventConnectionAuthParametersOauthOauthHttpParametersHeaderOutput() EventConnectionAuthParametersOauthOauthHttpParametersHeaderOutput {
	return i.ToEventConnectionAuthParametersOauthOauthHttpParametersHeaderOutputWithContext(context.Background())
}

func (i EventConnectionAuthParametersOauthOauthHttpParametersHeaderArgs) ToEventConnectionAuthParametersOauthOauthHttpParametersHeaderOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthOauthHttpParametersHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersOauthOauthHttpParametersHeaderOutput)
}

// EventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayInput is an input type that accepts EventConnectionAuthParametersOauthOauthHttpParametersHeaderArray and EventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayOutput values.
// You can construct a concrete instance of `EventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayInput` via:
//
//	EventConnectionAuthParametersOauthOauthHttpParametersHeaderArray{ EventConnectionAuthParametersOauthOauthHttpParametersHeaderArgs{...} }
type EventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayInput interface {
	pulumi.Input

	ToEventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayOutput() EventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayOutput
	ToEventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayOutputWithContext(context.Context) EventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayOutput
}

type EventConnectionAuthParametersOauthOauthHttpParametersHeaderArray []EventConnectionAuthParametersOauthOauthHttpParametersHeaderInput

func (EventConnectionAuthParametersOauthOauthHttpParametersHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventConnectionAuthParametersOauthOauthHttpParametersHeader)(nil)).Elem()
}

func (i EventConnectionAuthParametersOauthOauthHttpParametersHeaderArray) ToEventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayOutput() EventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayOutput {
	return i.ToEventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayOutputWithContext(context.Background())
}

func (i EventConnectionAuthParametersOauthOauthHttpParametersHeaderArray) ToEventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayOutput)
}

type EventConnectionAuthParametersOauthOauthHttpParametersHeaderOutput struct{ *pulumi.OutputState }

func (EventConnectionAuthParametersOauthOauthHttpParametersHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnectionAuthParametersOauthOauthHttpParametersHeader)(nil)).Elem()
}

func (o EventConnectionAuthParametersOauthOauthHttpParametersHeaderOutput) ToEventConnectionAuthParametersOauthOauthHttpParametersHeaderOutput() EventConnectionAuthParametersOauthOauthHttpParametersHeaderOutput {
	return o
}

func (o EventConnectionAuthParametersOauthOauthHttpParametersHeaderOutput) ToEventConnectionAuthParametersOauthOauthHttpParametersHeaderOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthOauthHttpParametersHeaderOutput {
	return o
}

// Specified whether the value is secret.
func (o EventConnectionAuthParametersOauthOauthHttpParametersHeaderOutput) IsValueSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersOauthOauthHttpParametersHeader) *bool { return v.IsValueSecret }).(pulumi.BoolPtrOutput)
}

// Header Name.
func (o EventConnectionAuthParametersOauthOauthHttpParametersHeaderOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersOauthOauthHttpParametersHeader) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Header Value. Created and stored in AWS Secrets Manager.
func (o EventConnectionAuthParametersOauthOauthHttpParametersHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersOauthOauthHttpParametersHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayOutput struct{ *pulumi.OutputState }

func (EventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventConnectionAuthParametersOauthOauthHttpParametersHeader)(nil)).Elem()
}

func (o EventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayOutput) ToEventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayOutput() EventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayOutput {
	return o
}

func (o EventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayOutput) ToEventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayOutput {
	return o
}

func (o EventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayOutput) Index(i pulumi.IntInput) EventConnectionAuthParametersOauthOauthHttpParametersHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventConnectionAuthParametersOauthOauthHttpParametersHeader {
		return vs[0].([]EventConnectionAuthParametersOauthOauthHttpParametersHeader)[vs[1].(int)]
	}).(EventConnectionAuthParametersOauthOauthHttpParametersHeaderOutput)
}

type EventConnectionAuthParametersOauthOauthHttpParametersQueryString struct {
	// Specified whether the value is secret.
	IsValueSecret *bool `pulumi:"isValueSecret"`
	// Header Name.
	Key *string `pulumi:"key"`
	// Header Value. Created and stored in AWS Secrets Manager.
	Value *string `pulumi:"value"`
}

// EventConnectionAuthParametersOauthOauthHttpParametersQueryStringInput is an input type that accepts EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArgs and EventConnectionAuthParametersOauthOauthHttpParametersQueryStringOutput values.
// You can construct a concrete instance of `EventConnectionAuthParametersOauthOauthHttpParametersQueryStringInput` via:
//
//	EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArgs{...}
type EventConnectionAuthParametersOauthOauthHttpParametersQueryStringInput interface {
	pulumi.Input

	ToEventConnectionAuthParametersOauthOauthHttpParametersQueryStringOutput() EventConnectionAuthParametersOauthOauthHttpParametersQueryStringOutput
	ToEventConnectionAuthParametersOauthOauthHttpParametersQueryStringOutputWithContext(context.Context) EventConnectionAuthParametersOauthOauthHttpParametersQueryStringOutput
}

type EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArgs struct {
	// Specified whether the value is secret.
	IsValueSecret pulumi.BoolPtrInput `pulumi:"isValueSecret"`
	// Header Name.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// Header Value. Created and stored in AWS Secrets Manager.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnectionAuthParametersOauthOauthHttpParametersQueryString)(nil)).Elem()
}

func (i EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArgs) ToEventConnectionAuthParametersOauthOauthHttpParametersQueryStringOutput() EventConnectionAuthParametersOauthOauthHttpParametersQueryStringOutput {
	return i.ToEventConnectionAuthParametersOauthOauthHttpParametersQueryStringOutputWithContext(context.Background())
}

func (i EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArgs) ToEventConnectionAuthParametersOauthOauthHttpParametersQueryStringOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthOauthHttpParametersQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersOauthOauthHttpParametersQueryStringOutput)
}

// EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayInput is an input type that accepts EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArray and EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayOutput values.
// You can construct a concrete instance of `EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayInput` via:
//
//	EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArray{ EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArgs{...} }
type EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayInput interface {
	pulumi.Input

	ToEventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayOutput() EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayOutput
	ToEventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayOutputWithContext(context.Context) EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayOutput
}

type EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArray []EventConnectionAuthParametersOauthOauthHttpParametersQueryStringInput

func (EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventConnectionAuthParametersOauthOauthHttpParametersQueryString)(nil)).Elem()
}

func (i EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArray) ToEventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayOutput() EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayOutput {
	return i.ToEventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayOutputWithContext(context.Background())
}

func (i EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArray) ToEventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayOutput)
}

type EventConnectionAuthParametersOauthOauthHttpParametersQueryStringOutput struct{ *pulumi.OutputState }

func (EventConnectionAuthParametersOauthOauthHttpParametersQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventConnectionAuthParametersOauthOauthHttpParametersQueryString)(nil)).Elem()
}

func (o EventConnectionAuthParametersOauthOauthHttpParametersQueryStringOutput) ToEventConnectionAuthParametersOauthOauthHttpParametersQueryStringOutput() EventConnectionAuthParametersOauthOauthHttpParametersQueryStringOutput {
	return o
}

func (o EventConnectionAuthParametersOauthOauthHttpParametersQueryStringOutput) ToEventConnectionAuthParametersOauthOauthHttpParametersQueryStringOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthOauthHttpParametersQueryStringOutput {
	return o
}

// Specified whether the value is secret.
func (o EventConnectionAuthParametersOauthOauthHttpParametersQueryStringOutput) IsValueSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersOauthOauthHttpParametersQueryString) *bool { return v.IsValueSecret }).(pulumi.BoolPtrOutput)
}

// Header Name.
func (o EventConnectionAuthParametersOauthOauthHttpParametersQueryStringOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersOauthOauthHttpParametersQueryString) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// Header Value. Created and stored in AWS Secrets Manager.
func (o EventConnectionAuthParametersOauthOauthHttpParametersQueryStringOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventConnectionAuthParametersOauthOauthHttpParametersQueryString) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayOutput struct{ *pulumi.OutputState }

func (EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventConnectionAuthParametersOauthOauthHttpParametersQueryString)(nil)).Elem()
}

func (o EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayOutput) ToEventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayOutput() EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayOutput {
	return o
}

func (o EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayOutput) ToEventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayOutputWithContext(ctx context.Context) EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayOutput {
	return o
}

func (o EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayOutput) Index(i pulumi.IntInput) EventConnectionAuthParametersOauthOauthHttpParametersQueryStringOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventConnectionAuthParametersOauthOauthHttpParametersQueryString {
		return vs[0].([]EventConnectionAuthParametersOauthOauthHttpParametersQueryString)[vs[1].(int)]
	}).(EventConnectionAuthParametersOauthOauthHttpParametersQueryStringOutput)
}

type EventEndpointEventBus struct {
	// The ARN of the event bus the endpoint is associated with.
	EventBusArn string `pulumi:"eventBusArn"`
}

// EventEndpointEventBusInput is an input type that accepts EventEndpointEventBusArgs and EventEndpointEventBusOutput values.
// You can construct a concrete instance of `EventEndpointEventBusInput` via:
//
//	EventEndpointEventBusArgs{...}
type EventEndpointEventBusInput interface {
	pulumi.Input

	ToEventEndpointEventBusOutput() EventEndpointEventBusOutput
	ToEventEndpointEventBusOutputWithContext(context.Context) EventEndpointEventBusOutput
}

type EventEndpointEventBusArgs struct {
	// The ARN of the event bus the endpoint is associated with.
	EventBusArn pulumi.StringInput `pulumi:"eventBusArn"`
}

func (EventEndpointEventBusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventEndpointEventBus)(nil)).Elem()
}

func (i EventEndpointEventBusArgs) ToEventEndpointEventBusOutput() EventEndpointEventBusOutput {
	return i.ToEventEndpointEventBusOutputWithContext(context.Background())
}

func (i EventEndpointEventBusArgs) ToEventEndpointEventBusOutputWithContext(ctx context.Context) EventEndpointEventBusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventEndpointEventBusOutput)
}

// EventEndpointEventBusArrayInput is an input type that accepts EventEndpointEventBusArray and EventEndpointEventBusArrayOutput values.
// You can construct a concrete instance of `EventEndpointEventBusArrayInput` via:
//
//	EventEndpointEventBusArray{ EventEndpointEventBusArgs{...} }
type EventEndpointEventBusArrayInput interface {
	pulumi.Input

	ToEventEndpointEventBusArrayOutput() EventEndpointEventBusArrayOutput
	ToEventEndpointEventBusArrayOutputWithContext(context.Context) EventEndpointEventBusArrayOutput
}

type EventEndpointEventBusArray []EventEndpointEventBusInput

func (EventEndpointEventBusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventEndpointEventBus)(nil)).Elem()
}

func (i EventEndpointEventBusArray) ToEventEndpointEventBusArrayOutput() EventEndpointEventBusArrayOutput {
	return i.ToEventEndpointEventBusArrayOutputWithContext(context.Background())
}

func (i EventEndpointEventBusArray) ToEventEndpointEventBusArrayOutputWithContext(ctx context.Context) EventEndpointEventBusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventEndpointEventBusArrayOutput)
}

type EventEndpointEventBusOutput struct{ *pulumi.OutputState }

func (EventEndpointEventBusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventEndpointEventBus)(nil)).Elem()
}

func (o EventEndpointEventBusOutput) ToEventEndpointEventBusOutput() EventEndpointEventBusOutput {
	return o
}

func (o EventEndpointEventBusOutput) ToEventEndpointEventBusOutputWithContext(ctx context.Context) EventEndpointEventBusOutput {
	return o
}

// The ARN of the event bus the endpoint is associated with.
func (o EventEndpointEventBusOutput) EventBusArn() pulumi.StringOutput {
	return o.ApplyT(func(v EventEndpointEventBus) string { return v.EventBusArn }).(pulumi.StringOutput)
}

type EventEndpointEventBusArrayOutput struct{ *pulumi.OutputState }

func (EventEndpointEventBusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventEndpointEventBus)(nil)).Elem()
}

func (o EventEndpointEventBusArrayOutput) ToEventEndpointEventBusArrayOutput() EventEndpointEventBusArrayOutput {
	return o
}

func (o EventEndpointEventBusArrayOutput) ToEventEndpointEventBusArrayOutputWithContext(ctx context.Context) EventEndpointEventBusArrayOutput {
	return o
}

func (o EventEndpointEventBusArrayOutput) Index(i pulumi.IntInput) EventEndpointEventBusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventEndpointEventBus {
		return vs[0].([]EventEndpointEventBus)[vs[1].(int)]
	}).(EventEndpointEventBusOutput)
}

type EventEndpointReplicationConfig struct {
	// The state of event replication. Valid values: `ENABLED`, `DISABLED`. The default state is `ENABLED`, which means you must supply a `roleArn`. If you don't have a `roleArn` or you don't want event replication enabled, set `state` to `DISABLED`.
	State *string `pulumi:"state"`
}

// EventEndpointReplicationConfigInput is an input type that accepts EventEndpointReplicationConfigArgs and EventEndpointReplicationConfigOutput values.
// You can construct a concrete instance of `EventEndpointReplicationConfigInput` via:
//
//	EventEndpointReplicationConfigArgs{...}
type EventEndpointReplicationConfigInput interface {
	pulumi.Input

	ToEventEndpointReplicationConfigOutput() EventEndpointReplicationConfigOutput
	ToEventEndpointReplicationConfigOutputWithContext(context.Context) EventEndpointReplicationConfigOutput
}

type EventEndpointReplicationConfigArgs struct {
	// The state of event replication. Valid values: `ENABLED`, `DISABLED`. The default state is `ENABLED`, which means you must supply a `roleArn`. If you don't have a `roleArn` or you don't want event replication enabled, set `state` to `DISABLED`.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (EventEndpointReplicationConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventEndpointReplicationConfig)(nil)).Elem()
}

func (i EventEndpointReplicationConfigArgs) ToEventEndpointReplicationConfigOutput() EventEndpointReplicationConfigOutput {
	return i.ToEventEndpointReplicationConfigOutputWithContext(context.Background())
}

func (i EventEndpointReplicationConfigArgs) ToEventEndpointReplicationConfigOutputWithContext(ctx context.Context) EventEndpointReplicationConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventEndpointReplicationConfigOutput)
}

func (i EventEndpointReplicationConfigArgs) ToEventEndpointReplicationConfigPtrOutput() EventEndpointReplicationConfigPtrOutput {
	return i.ToEventEndpointReplicationConfigPtrOutputWithContext(context.Background())
}

func (i EventEndpointReplicationConfigArgs) ToEventEndpointReplicationConfigPtrOutputWithContext(ctx context.Context) EventEndpointReplicationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventEndpointReplicationConfigOutput).ToEventEndpointReplicationConfigPtrOutputWithContext(ctx)
}

// EventEndpointReplicationConfigPtrInput is an input type that accepts EventEndpointReplicationConfigArgs, EventEndpointReplicationConfigPtr and EventEndpointReplicationConfigPtrOutput values.
// You can construct a concrete instance of `EventEndpointReplicationConfigPtrInput` via:
//
//	        EventEndpointReplicationConfigArgs{...}
//
//	or:
//
//	        nil
type EventEndpointReplicationConfigPtrInput interface {
	pulumi.Input

	ToEventEndpointReplicationConfigPtrOutput() EventEndpointReplicationConfigPtrOutput
	ToEventEndpointReplicationConfigPtrOutputWithContext(context.Context) EventEndpointReplicationConfigPtrOutput
}

type eventEndpointReplicationConfigPtrType EventEndpointReplicationConfigArgs

func EventEndpointReplicationConfigPtr(v *EventEndpointReplicationConfigArgs) EventEndpointReplicationConfigPtrInput {
	return (*eventEndpointReplicationConfigPtrType)(v)
}

func (*eventEndpointReplicationConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventEndpointReplicationConfig)(nil)).Elem()
}

func (i *eventEndpointReplicationConfigPtrType) ToEventEndpointReplicationConfigPtrOutput() EventEndpointReplicationConfigPtrOutput {
	return i.ToEventEndpointReplicationConfigPtrOutputWithContext(context.Background())
}

func (i *eventEndpointReplicationConfigPtrType) ToEventEndpointReplicationConfigPtrOutputWithContext(ctx context.Context) EventEndpointReplicationConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventEndpointReplicationConfigPtrOutput)
}

type EventEndpointReplicationConfigOutput struct{ *pulumi.OutputState }

func (EventEndpointReplicationConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventEndpointReplicationConfig)(nil)).Elem()
}

func (o EventEndpointReplicationConfigOutput) ToEventEndpointReplicationConfigOutput() EventEndpointReplicationConfigOutput {
	return o
}

func (o EventEndpointReplicationConfigOutput) ToEventEndpointReplicationConfigOutputWithContext(ctx context.Context) EventEndpointReplicationConfigOutput {
	return o
}

func (o EventEndpointReplicationConfigOutput) ToEventEndpointReplicationConfigPtrOutput() EventEndpointReplicationConfigPtrOutput {
	return o.ToEventEndpointReplicationConfigPtrOutputWithContext(context.Background())
}

func (o EventEndpointReplicationConfigOutput) ToEventEndpointReplicationConfigPtrOutputWithContext(ctx context.Context) EventEndpointReplicationConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventEndpointReplicationConfig) *EventEndpointReplicationConfig {
		return &v
	}).(EventEndpointReplicationConfigPtrOutput)
}

// The state of event replication. Valid values: `ENABLED`, `DISABLED`. The default state is `ENABLED`, which means you must supply a `roleArn`. If you don't have a `roleArn` or you don't want event replication enabled, set `state` to `DISABLED`.
func (o EventEndpointReplicationConfigOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventEndpointReplicationConfig) *string { return v.State }).(pulumi.StringPtrOutput)
}

type EventEndpointReplicationConfigPtrOutput struct{ *pulumi.OutputState }

func (EventEndpointReplicationConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventEndpointReplicationConfig)(nil)).Elem()
}

func (o EventEndpointReplicationConfigPtrOutput) ToEventEndpointReplicationConfigPtrOutput() EventEndpointReplicationConfigPtrOutput {
	return o
}

func (o EventEndpointReplicationConfigPtrOutput) ToEventEndpointReplicationConfigPtrOutputWithContext(ctx context.Context) EventEndpointReplicationConfigPtrOutput {
	return o
}

func (o EventEndpointReplicationConfigPtrOutput) Elem() EventEndpointReplicationConfigOutput {
	return o.ApplyT(func(v *EventEndpointReplicationConfig) EventEndpointReplicationConfig {
		if v != nil {
			return *v
		}
		var ret EventEndpointReplicationConfig
		return ret
	}).(EventEndpointReplicationConfigOutput)
}

// The state of event replication. Valid values: `ENABLED`, `DISABLED`. The default state is `ENABLED`, which means you must supply a `roleArn`. If you don't have a `roleArn` or you don't want event replication enabled, set `state` to `DISABLED`.
func (o EventEndpointReplicationConfigPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventEndpointReplicationConfig) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

type EventEndpointRoutingConfig struct {
	// Parameters used for failover. This includes what triggers failover and what happens when it's triggered. Documented below.
	FailoverConfig EventEndpointRoutingConfigFailoverConfig `pulumi:"failoverConfig"`
}

// EventEndpointRoutingConfigInput is an input type that accepts EventEndpointRoutingConfigArgs and EventEndpointRoutingConfigOutput values.
// You can construct a concrete instance of `EventEndpointRoutingConfigInput` via:
//
//	EventEndpointRoutingConfigArgs{...}
type EventEndpointRoutingConfigInput interface {
	pulumi.Input

	ToEventEndpointRoutingConfigOutput() EventEndpointRoutingConfigOutput
	ToEventEndpointRoutingConfigOutputWithContext(context.Context) EventEndpointRoutingConfigOutput
}

type EventEndpointRoutingConfigArgs struct {
	// Parameters used for failover. This includes what triggers failover and what happens when it's triggered. Documented below.
	FailoverConfig EventEndpointRoutingConfigFailoverConfigInput `pulumi:"failoverConfig"`
}

func (EventEndpointRoutingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventEndpointRoutingConfig)(nil)).Elem()
}

func (i EventEndpointRoutingConfigArgs) ToEventEndpointRoutingConfigOutput() EventEndpointRoutingConfigOutput {
	return i.ToEventEndpointRoutingConfigOutputWithContext(context.Background())
}

func (i EventEndpointRoutingConfigArgs) ToEventEndpointRoutingConfigOutputWithContext(ctx context.Context) EventEndpointRoutingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventEndpointRoutingConfigOutput)
}

func (i EventEndpointRoutingConfigArgs) ToEventEndpointRoutingConfigPtrOutput() EventEndpointRoutingConfigPtrOutput {
	return i.ToEventEndpointRoutingConfigPtrOutputWithContext(context.Background())
}

func (i EventEndpointRoutingConfigArgs) ToEventEndpointRoutingConfigPtrOutputWithContext(ctx context.Context) EventEndpointRoutingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventEndpointRoutingConfigOutput).ToEventEndpointRoutingConfigPtrOutputWithContext(ctx)
}

// EventEndpointRoutingConfigPtrInput is an input type that accepts EventEndpointRoutingConfigArgs, EventEndpointRoutingConfigPtr and EventEndpointRoutingConfigPtrOutput values.
// You can construct a concrete instance of `EventEndpointRoutingConfigPtrInput` via:
//
//	        EventEndpointRoutingConfigArgs{...}
//
//	or:
//
//	        nil
type EventEndpointRoutingConfigPtrInput interface {
	pulumi.Input

	ToEventEndpointRoutingConfigPtrOutput() EventEndpointRoutingConfigPtrOutput
	ToEventEndpointRoutingConfigPtrOutputWithContext(context.Context) EventEndpointRoutingConfigPtrOutput
}

type eventEndpointRoutingConfigPtrType EventEndpointRoutingConfigArgs

func EventEndpointRoutingConfigPtr(v *EventEndpointRoutingConfigArgs) EventEndpointRoutingConfigPtrInput {
	return (*eventEndpointRoutingConfigPtrType)(v)
}

func (*eventEndpointRoutingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventEndpointRoutingConfig)(nil)).Elem()
}

func (i *eventEndpointRoutingConfigPtrType) ToEventEndpointRoutingConfigPtrOutput() EventEndpointRoutingConfigPtrOutput {
	return i.ToEventEndpointRoutingConfigPtrOutputWithContext(context.Background())
}

func (i *eventEndpointRoutingConfigPtrType) ToEventEndpointRoutingConfigPtrOutputWithContext(ctx context.Context) EventEndpointRoutingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventEndpointRoutingConfigPtrOutput)
}

type EventEndpointRoutingConfigOutput struct{ *pulumi.OutputState }

func (EventEndpointRoutingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventEndpointRoutingConfig)(nil)).Elem()
}

func (o EventEndpointRoutingConfigOutput) ToEventEndpointRoutingConfigOutput() EventEndpointRoutingConfigOutput {
	return o
}

func (o EventEndpointRoutingConfigOutput) ToEventEndpointRoutingConfigOutputWithContext(ctx context.Context) EventEndpointRoutingConfigOutput {
	return o
}

func (o EventEndpointRoutingConfigOutput) ToEventEndpointRoutingConfigPtrOutput() EventEndpointRoutingConfigPtrOutput {
	return o.ToEventEndpointRoutingConfigPtrOutputWithContext(context.Background())
}

func (o EventEndpointRoutingConfigOutput) ToEventEndpointRoutingConfigPtrOutputWithContext(ctx context.Context) EventEndpointRoutingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventEndpointRoutingConfig) *EventEndpointRoutingConfig {
		return &v
	}).(EventEndpointRoutingConfigPtrOutput)
}

// Parameters used for failover. This includes what triggers failover and what happens when it's triggered. Documented below.
func (o EventEndpointRoutingConfigOutput) FailoverConfig() EventEndpointRoutingConfigFailoverConfigOutput {
	return o.ApplyT(func(v EventEndpointRoutingConfig) EventEndpointRoutingConfigFailoverConfig { return v.FailoverConfig }).(EventEndpointRoutingConfigFailoverConfigOutput)
}

type EventEndpointRoutingConfigPtrOutput struct{ *pulumi.OutputState }

func (EventEndpointRoutingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventEndpointRoutingConfig)(nil)).Elem()
}

func (o EventEndpointRoutingConfigPtrOutput) ToEventEndpointRoutingConfigPtrOutput() EventEndpointRoutingConfigPtrOutput {
	return o
}

func (o EventEndpointRoutingConfigPtrOutput) ToEventEndpointRoutingConfigPtrOutputWithContext(ctx context.Context) EventEndpointRoutingConfigPtrOutput {
	return o
}

func (o EventEndpointRoutingConfigPtrOutput) Elem() EventEndpointRoutingConfigOutput {
	return o.ApplyT(func(v *EventEndpointRoutingConfig) EventEndpointRoutingConfig {
		if v != nil {
			return *v
		}
		var ret EventEndpointRoutingConfig
		return ret
	}).(EventEndpointRoutingConfigOutput)
}

// Parameters used for failover. This includes what triggers failover and what happens when it's triggered. Documented below.
func (o EventEndpointRoutingConfigPtrOutput) FailoverConfig() EventEndpointRoutingConfigFailoverConfigPtrOutput {
	return o.ApplyT(func(v *EventEndpointRoutingConfig) *EventEndpointRoutingConfigFailoverConfig {
		if v == nil {
			return nil
		}
		return &v.FailoverConfig
	}).(EventEndpointRoutingConfigFailoverConfigPtrOutput)
}

type EventEndpointRoutingConfigFailoverConfig struct {
	// Parameters used for the primary Region. Documented below.
	Primary EventEndpointRoutingConfigFailoverConfigPrimary `pulumi:"primary"`
	// Parameters used for the secondary Region, the Region that events are routed to when failover is triggered or event replication is enabled. Documented below.
	Secondary EventEndpointRoutingConfigFailoverConfigSecondary `pulumi:"secondary"`
}

// EventEndpointRoutingConfigFailoverConfigInput is an input type that accepts EventEndpointRoutingConfigFailoverConfigArgs and EventEndpointRoutingConfigFailoverConfigOutput values.
// You can construct a concrete instance of `EventEndpointRoutingConfigFailoverConfigInput` via:
//
//	EventEndpointRoutingConfigFailoverConfigArgs{...}
type EventEndpointRoutingConfigFailoverConfigInput interface {
	pulumi.Input

	ToEventEndpointRoutingConfigFailoverConfigOutput() EventEndpointRoutingConfigFailoverConfigOutput
	ToEventEndpointRoutingConfigFailoverConfigOutputWithContext(context.Context) EventEndpointRoutingConfigFailoverConfigOutput
}

type EventEndpointRoutingConfigFailoverConfigArgs struct {
	// Parameters used for the primary Region. Documented below.
	Primary EventEndpointRoutingConfigFailoverConfigPrimaryInput `pulumi:"primary"`
	// Parameters used for the secondary Region, the Region that events are routed to when failover is triggered or event replication is enabled. Documented below.
	Secondary EventEndpointRoutingConfigFailoverConfigSecondaryInput `pulumi:"secondary"`
}

func (EventEndpointRoutingConfigFailoverConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventEndpointRoutingConfigFailoverConfig)(nil)).Elem()
}

func (i EventEndpointRoutingConfigFailoverConfigArgs) ToEventEndpointRoutingConfigFailoverConfigOutput() EventEndpointRoutingConfigFailoverConfigOutput {
	return i.ToEventEndpointRoutingConfigFailoverConfigOutputWithContext(context.Background())
}

func (i EventEndpointRoutingConfigFailoverConfigArgs) ToEventEndpointRoutingConfigFailoverConfigOutputWithContext(ctx context.Context) EventEndpointRoutingConfigFailoverConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventEndpointRoutingConfigFailoverConfigOutput)
}

func (i EventEndpointRoutingConfigFailoverConfigArgs) ToEventEndpointRoutingConfigFailoverConfigPtrOutput() EventEndpointRoutingConfigFailoverConfigPtrOutput {
	return i.ToEventEndpointRoutingConfigFailoverConfigPtrOutputWithContext(context.Background())
}

func (i EventEndpointRoutingConfigFailoverConfigArgs) ToEventEndpointRoutingConfigFailoverConfigPtrOutputWithContext(ctx context.Context) EventEndpointRoutingConfigFailoverConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventEndpointRoutingConfigFailoverConfigOutput).ToEventEndpointRoutingConfigFailoverConfigPtrOutputWithContext(ctx)
}

// EventEndpointRoutingConfigFailoverConfigPtrInput is an input type that accepts EventEndpointRoutingConfigFailoverConfigArgs, EventEndpointRoutingConfigFailoverConfigPtr and EventEndpointRoutingConfigFailoverConfigPtrOutput values.
// You can construct a concrete instance of `EventEndpointRoutingConfigFailoverConfigPtrInput` via:
//
//	        EventEndpointRoutingConfigFailoverConfigArgs{...}
//
//	or:
//
//	        nil
type EventEndpointRoutingConfigFailoverConfigPtrInput interface {
	pulumi.Input

	ToEventEndpointRoutingConfigFailoverConfigPtrOutput() EventEndpointRoutingConfigFailoverConfigPtrOutput
	ToEventEndpointRoutingConfigFailoverConfigPtrOutputWithContext(context.Context) EventEndpointRoutingConfigFailoverConfigPtrOutput
}

type eventEndpointRoutingConfigFailoverConfigPtrType EventEndpointRoutingConfigFailoverConfigArgs

func EventEndpointRoutingConfigFailoverConfigPtr(v *EventEndpointRoutingConfigFailoverConfigArgs) EventEndpointRoutingConfigFailoverConfigPtrInput {
	return (*eventEndpointRoutingConfigFailoverConfigPtrType)(v)
}

func (*eventEndpointRoutingConfigFailoverConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventEndpointRoutingConfigFailoverConfig)(nil)).Elem()
}

func (i *eventEndpointRoutingConfigFailoverConfigPtrType) ToEventEndpointRoutingConfigFailoverConfigPtrOutput() EventEndpointRoutingConfigFailoverConfigPtrOutput {
	return i.ToEventEndpointRoutingConfigFailoverConfigPtrOutputWithContext(context.Background())
}

func (i *eventEndpointRoutingConfigFailoverConfigPtrType) ToEventEndpointRoutingConfigFailoverConfigPtrOutputWithContext(ctx context.Context) EventEndpointRoutingConfigFailoverConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventEndpointRoutingConfigFailoverConfigPtrOutput)
}

type EventEndpointRoutingConfigFailoverConfigOutput struct{ *pulumi.OutputState }

func (EventEndpointRoutingConfigFailoverConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventEndpointRoutingConfigFailoverConfig)(nil)).Elem()
}

func (o EventEndpointRoutingConfigFailoverConfigOutput) ToEventEndpointRoutingConfigFailoverConfigOutput() EventEndpointRoutingConfigFailoverConfigOutput {
	return o
}

func (o EventEndpointRoutingConfigFailoverConfigOutput) ToEventEndpointRoutingConfigFailoverConfigOutputWithContext(ctx context.Context) EventEndpointRoutingConfigFailoverConfigOutput {
	return o
}

func (o EventEndpointRoutingConfigFailoverConfigOutput) ToEventEndpointRoutingConfigFailoverConfigPtrOutput() EventEndpointRoutingConfigFailoverConfigPtrOutput {
	return o.ToEventEndpointRoutingConfigFailoverConfigPtrOutputWithContext(context.Background())
}

func (o EventEndpointRoutingConfigFailoverConfigOutput) ToEventEndpointRoutingConfigFailoverConfigPtrOutputWithContext(ctx context.Context) EventEndpointRoutingConfigFailoverConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventEndpointRoutingConfigFailoverConfig) *EventEndpointRoutingConfigFailoverConfig {
		return &v
	}).(EventEndpointRoutingConfigFailoverConfigPtrOutput)
}

// Parameters used for the primary Region. Documented below.
func (o EventEndpointRoutingConfigFailoverConfigOutput) Primary() EventEndpointRoutingConfigFailoverConfigPrimaryOutput {
	return o.ApplyT(func(v EventEndpointRoutingConfigFailoverConfig) EventEndpointRoutingConfigFailoverConfigPrimary {
		return v.Primary
	}).(EventEndpointRoutingConfigFailoverConfigPrimaryOutput)
}

// Parameters used for the secondary Region, the Region that events are routed to when failover is triggered or event replication is enabled. Documented below.
func (o EventEndpointRoutingConfigFailoverConfigOutput) Secondary() EventEndpointRoutingConfigFailoverConfigSecondaryOutput {
	return o.ApplyT(func(v EventEndpointRoutingConfigFailoverConfig) EventEndpointRoutingConfigFailoverConfigSecondary {
		return v.Secondary
	}).(EventEndpointRoutingConfigFailoverConfigSecondaryOutput)
}

type EventEndpointRoutingConfigFailoverConfigPtrOutput struct{ *pulumi.OutputState }

func (EventEndpointRoutingConfigFailoverConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventEndpointRoutingConfigFailoverConfig)(nil)).Elem()
}

func (o EventEndpointRoutingConfigFailoverConfigPtrOutput) ToEventEndpointRoutingConfigFailoverConfigPtrOutput() EventEndpointRoutingConfigFailoverConfigPtrOutput {
	return o
}

func (o EventEndpointRoutingConfigFailoverConfigPtrOutput) ToEventEndpointRoutingConfigFailoverConfigPtrOutputWithContext(ctx context.Context) EventEndpointRoutingConfigFailoverConfigPtrOutput {
	return o
}

func (o EventEndpointRoutingConfigFailoverConfigPtrOutput) Elem() EventEndpointRoutingConfigFailoverConfigOutput {
	return o.ApplyT(func(v *EventEndpointRoutingConfigFailoverConfig) EventEndpointRoutingConfigFailoverConfig {
		if v != nil {
			return *v
		}
		var ret EventEndpointRoutingConfigFailoverConfig
		return ret
	}).(EventEndpointRoutingConfigFailoverConfigOutput)
}

// Parameters used for the primary Region. Documented below.
func (o EventEndpointRoutingConfigFailoverConfigPtrOutput) Primary() EventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput {
	return o.ApplyT(func(v *EventEndpointRoutingConfigFailoverConfig) *EventEndpointRoutingConfigFailoverConfigPrimary {
		if v == nil {
			return nil
		}
		return &v.Primary
	}).(EventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput)
}

// Parameters used for the secondary Region, the Region that events are routed to when failover is triggered or event replication is enabled. Documented below.
func (o EventEndpointRoutingConfigFailoverConfigPtrOutput) Secondary() EventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput {
	return o.ApplyT(func(v *EventEndpointRoutingConfigFailoverConfig) *EventEndpointRoutingConfigFailoverConfigSecondary {
		if v == nil {
			return nil
		}
		return &v.Secondary
	}).(EventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput)
}

type EventEndpointRoutingConfigFailoverConfigPrimary struct {
	// The ARN of the health check used by the endpoint to determine whether failover is triggered.
	HealthCheck *string `pulumi:"healthCheck"`
}

// EventEndpointRoutingConfigFailoverConfigPrimaryInput is an input type that accepts EventEndpointRoutingConfigFailoverConfigPrimaryArgs and EventEndpointRoutingConfigFailoverConfigPrimaryOutput values.
// You can construct a concrete instance of `EventEndpointRoutingConfigFailoverConfigPrimaryInput` via:
//
//	EventEndpointRoutingConfigFailoverConfigPrimaryArgs{...}
type EventEndpointRoutingConfigFailoverConfigPrimaryInput interface {
	pulumi.Input

	ToEventEndpointRoutingConfigFailoverConfigPrimaryOutput() EventEndpointRoutingConfigFailoverConfigPrimaryOutput
	ToEventEndpointRoutingConfigFailoverConfigPrimaryOutputWithContext(context.Context) EventEndpointRoutingConfigFailoverConfigPrimaryOutput
}

type EventEndpointRoutingConfigFailoverConfigPrimaryArgs struct {
	// The ARN of the health check used by the endpoint to determine whether failover is triggered.
	HealthCheck pulumi.StringPtrInput `pulumi:"healthCheck"`
}

func (EventEndpointRoutingConfigFailoverConfigPrimaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventEndpointRoutingConfigFailoverConfigPrimary)(nil)).Elem()
}

func (i EventEndpointRoutingConfigFailoverConfigPrimaryArgs) ToEventEndpointRoutingConfigFailoverConfigPrimaryOutput() EventEndpointRoutingConfigFailoverConfigPrimaryOutput {
	return i.ToEventEndpointRoutingConfigFailoverConfigPrimaryOutputWithContext(context.Background())
}

func (i EventEndpointRoutingConfigFailoverConfigPrimaryArgs) ToEventEndpointRoutingConfigFailoverConfigPrimaryOutputWithContext(ctx context.Context) EventEndpointRoutingConfigFailoverConfigPrimaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventEndpointRoutingConfigFailoverConfigPrimaryOutput)
}

func (i EventEndpointRoutingConfigFailoverConfigPrimaryArgs) ToEventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput() EventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput {
	return i.ToEventEndpointRoutingConfigFailoverConfigPrimaryPtrOutputWithContext(context.Background())
}

func (i EventEndpointRoutingConfigFailoverConfigPrimaryArgs) ToEventEndpointRoutingConfigFailoverConfigPrimaryPtrOutputWithContext(ctx context.Context) EventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventEndpointRoutingConfigFailoverConfigPrimaryOutput).ToEventEndpointRoutingConfigFailoverConfigPrimaryPtrOutputWithContext(ctx)
}

// EventEndpointRoutingConfigFailoverConfigPrimaryPtrInput is an input type that accepts EventEndpointRoutingConfigFailoverConfigPrimaryArgs, EventEndpointRoutingConfigFailoverConfigPrimaryPtr and EventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput values.
// You can construct a concrete instance of `EventEndpointRoutingConfigFailoverConfigPrimaryPtrInput` via:
//
//	        EventEndpointRoutingConfigFailoverConfigPrimaryArgs{...}
//
//	or:
//
//	        nil
type EventEndpointRoutingConfigFailoverConfigPrimaryPtrInput interface {
	pulumi.Input

	ToEventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput() EventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput
	ToEventEndpointRoutingConfigFailoverConfigPrimaryPtrOutputWithContext(context.Context) EventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput
}

type eventEndpointRoutingConfigFailoverConfigPrimaryPtrType EventEndpointRoutingConfigFailoverConfigPrimaryArgs

func EventEndpointRoutingConfigFailoverConfigPrimaryPtr(v *EventEndpointRoutingConfigFailoverConfigPrimaryArgs) EventEndpointRoutingConfigFailoverConfigPrimaryPtrInput {
	return (*eventEndpointRoutingConfigFailoverConfigPrimaryPtrType)(v)
}

func (*eventEndpointRoutingConfigFailoverConfigPrimaryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventEndpointRoutingConfigFailoverConfigPrimary)(nil)).Elem()
}

func (i *eventEndpointRoutingConfigFailoverConfigPrimaryPtrType) ToEventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput() EventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput {
	return i.ToEventEndpointRoutingConfigFailoverConfigPrimaryPtrOutputWithContext(context.Background())
}

func (i *eventEndpointRoutingConfigFailoverConfigPrimaryPtrType) ToEventEndpointRoutingConfigFailoverConfigPrimaryPtrOutputWithContext(ctx context.Context) EventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput)
}

type EventEndpointRoutingConfigFailoverConfigPrimaryOutput struct{ *pulumi.OutputState }

func (EventEndpointRoutingConfigFailoverConfigPrimaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventEndpointRoutingConfigFailoverConfigPrimary)(nil)).Elem()
}

func (o EventEndpointRoutingConfigFailoverConfigPrimaryOutput) ToEventEndpointRoutingConfigFailoverConfigPrimaryOutput() EventEndpointRoutingConfigFailoverConfigPrimaryOutput {
	return o
}

func (o EventEndpointRoutingConfigFailoverConfigPrimaryOutput) ToEventEndpointRoutingConfigFailoverConfigPrimaryOutputWithContext(ctx context.Context) EventEndpointRoutingConfigFailoverConfigPrimaryOutput {
	return o
}

func (o EventEndpointRoutingConfigFailoverConfigPrimaryOutput) ToEventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput() EventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput {
	return o.ToEventEndpointRoutingConfigFailoverConfigPrimaryPtrOutputWithContext(context.Background())
}

func (o EventEndpointRoutingConfigFailoverConfigPrimaryOutput) ToEventEndpointRoutingConfigFailoverConfigPrimaryPtrOutputWithContext(ctx context.Context) EventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventEndpointRoutingConfigFailoverConfigPrimary) *EventEndpointRoutingConfigFailoverConfigPrimary {
		return &v
	}).(EventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput)
}

// The ARN of the health check used by the endpoint to determine whether failover is triggered.
func (o EventEndpointRoutingConfigFailoverConfigPrimaryOutput) HealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventEndpointRoutingConfigFailoverConfigPrimary) *string { return v.HealthCheck }).(pulumi.StringPtrOutput)
}

type EventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput struct{ *pulumi.OutputState }

func (EventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventEndpointRoutingConfigFailoverConfigPrimary)(nil)).Elem()
}

func (o EventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput) ToEventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput() EventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput {
	return o
}

func (o EventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput) ToEventEndpointRoutingConfigFailoverConfigPrimaryPtrOutputWithContext(ctx context.Context) EventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput {
	return o
}

func (o EventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput) Elem() EventEndpointRoutingConfigFailoverConfigPrimaryOutput {
	return o.ApplyT(func(v *EventEndpointRoutingConfigFailoverConfigPrimary) EventEndpointRoutingConfigFailoverConfigPrimary {
		if v != nil {
			return *v
		}
		var ret EventEndpointRoutingConfigFailoverConfigPrimary
		return ret
	}).(EventEndpointRoutingConfigFailoverConfigPrimaryOutput)
}

// The ARN of the health check used by the endpoint to determine whether failover is triggered.
func (o EventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput) HealthCheck() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventEndpointRoutingConfigFailoverConfigPrimary) *string {
		if v == nil {
			return nil
		}
		return v.HealthCheck
	}).(pulumi.StringPtrOutput)
}

type EventEndpointRoutingConfigFailoverConfigSecondary struct {
	// The name of the secondary Region.
	Route *string `pulumi:"route"`
}

// EventEndpointRoutingConfigFailoverConfigSecondaryInput is an input type that accepts EventEndpointRoutingConfigFailoverConfigSecondaryArgs and EventEndpointRoutingConfigFailoverConfigSecondaryOutput values.
// You can construct a concrete instance of `EventEndpointRoutingConfigFailoverConfigSecondaryInput` via:
//
//	EventEndpointRoutingConfigFailoverConfigSecondaryArgs{...}
type EventEndpointRoutingConfigFailoverConfigSecondaryInput interface {
	pulumi.Input

	ToEventEndpointRoutingConfigFailoverConfigSecondaryOutput() EventEndpointRoutingConfigFailoverConfigSecondaryOutput
	ToEventEndpointRoutingConfigFailoverConfigSecondaryOutputWithContext(context.Context) EventEndpointRoutingConfigFailoverConfigSecondaryOutput
}

type EventEndpointRoutingConfigFailoverConfigSecondaryArgs struct {
	// The name of the secondary Region.
	Route pulumi.StringPtrInput `pulumi:"route"`
}

func (EventEndpointRoutingConfigFailoverConfigSecondaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventEndpointRoutingConfigFailoverConfigSecondary)(nil)).Elem()
}

func (i EventEndpointRoutingConfigFailoverConfigSecondaryArgs) ToEventEndpointRoutingConfigFailoverConfigSecondaryOutput() EventEndpointRoutingConfigFailoverConfigSecondaryOutput {
	return i.ToEventEndpointRoutingConfigFailoverConfigSecondaryOutputWithContext(context.Background())
}

func (i EventEndpointRoutingConfigFailoverConfigSecondaryArgs) ToEventEndpointRoutingConfigFailoverConfigSecondaryOutputWithContext(ctx context.Context) EventEndpointRoutingConfigFailoverConfigSecondaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventEndpointRoutingConfigFailoverConfigSecondaryOutput)
}

func (i EventEndpointRoutingConfigFailoverConfigSecondaryArgs) ToEventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput() EventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput {
	return i.ToEventEndpointRoutingConfigFailoverConfigSecondaryPtrOutputWithContext(context.Background())
}

func (i EventEndpointRoutingConfigFailoverConfigSecondaryArgs) ToEventEndpointRoutingConfigFailoverConfigSecondaryPtrOutputWithContext(ctx context.Context) EventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventEndpointRoutingConfigFailoverConfigSecondaryOutput).ToEventEndpointRoutingConfigFailoverConfigSecondaryPtrOutputWithContext(ctx)
}

// EventEndpointRoutingConfigFailoverConfigSecondaryPtrInput is an input type that accepts EventEndpointRoutingConfigFailoverConfigSecondaryArgs, EventEndpointRoutingConfigFailoverConfigSecondaryPtr and EventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput values.
// You can construct a concrete instance of `EventEndpointRoutingConfigFailoverConfigSecondaryPtrInput` via:
//
//	        EventEndpointRoutingConfigFailoverConfigSecondaryArgs{...}
//
//	or:
//
//	        nil
type EventEndpointRoutingConfigFailoverConfigSecondaryPtrInput interface {
	pulumi.Input

	ToEventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput() EventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput
	ToEventEndpointRoutingConfigFailoverConfigSecondaryPtrOutputWithContext(context.Context) EventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput
}

type eventEndpointRoutingConfigFailoverConfigSecondaryPtrType EventEndpointRoutingConfigFailoverConfigSecondaryArgs

func EventEndpointRoutingConfigFailoverConfigSecondaryPtr(v *EventEndpointRoutingConfigFailoverConfigSecondaryArgs) EventEndpointRoutingConfigFailoverConfigSecondaryPtrInput {
	return (*eventEndpointRoutingConfigFailoverConfigSecondaryPtrType)(v)
}

func (*eventEndpointRoutingConfigFailoverConfigSecondaryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventEndpointRoutingConfigFailoverConfigSecondary)(nil)).Elem()
}

func (i *eventEndpointRoutingConfigFailoverConfigSecondaryPtrType) ToEventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput() EventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput {
	return i.ToEventEndpointRoutingConfigFailoverConfigSecondaryPtrOutputWithContext(context.Background())
}

func (i *eventEndpointRoutingConfigFailoverConfigSecondaryPtrType) ToEventEndpointRoutingConfigFailoverConfigSecondaryPtrOutputWithContext(ctx context.Context) EventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput)
}

type EventEndpointRoutingConfigFailoverConfigSecondaryOutput struct{ *pulumi.OutputState }

func (EventEndpointRoutingConfigFailoverConfigSecondaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventEndpointRoutingConfigFailoverConfigSecondary)(nil)).Elem()
}

func (o EventEndpointRoutingConfigFailoverConfigSecondaryOutput) ToEventEndpointRoutingConfigFailoverConfigSecondaryOutput() EventEndpointRoutingConfigFailoverConfigSecondaryOutput {
	return o
}

func (o EventEndpointRoutingConfigFailoverConfigSecondaryOutput) ToEventEndpointRoutingConfigFailoverConfigSecondaryOutputWithContext(ctx context.Context) EventEndpointRoutingConfigFailoverConfigSecondaryOutput {
	return o
}

func (o EventEndpointRoutingConfigFailoverConfigSecondaryOutput) ToEventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput() EventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput {
	return o.ToEventEndpointRoutingConfigFailoverConfigSecondaryPtrOutputWithContext(context.Background())
}

func (o EventEndpointRoutingConfigFailoverConfigSecondaryOutput) ToEventEndpointRoutingConfigFailoverConfigSecondaryPtrOutputWithContext(ctx context.Context) EventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventEndpointRoutingConfigFailoverConfigSecondary) *EventEndpointRoutingConfigFailoverConfigSecondary {
		return &v
	}).(EventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput)
}

// The name of the secondary Region.
func (o EventEndpointRoutingConfigFailoverConfigSecondaryOutput) Route() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventEndpointRoutingConfigFailoverConfigSecondary) *string { return v.Route }).(pulumi.StringPtrOutput)
}

type EventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput struct{ *pulumi.OutputState }

func (EventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventEndpointRoutingConfigFailoverConfigSecondary)(nil)).Elem()
}

func (o EventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput) ToEventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput() EventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput {
	return o
}

func (o EventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput) ToEventEndpointRoutingConfigFailoverConfigSecondaryPtrOutputWithContext(ctx context.Context) EventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput {
	return o
}

func (o EventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput) Elem() EventEndpointRoutingConfigFailoverConfigSecondaryOutput {
	return o.ApplyT(func(v *EventEndpointRoutingConfigFailoverConfigSecondary) EventEndpointRoutingConfigFailoverConfigSecondary {
		if v != nil {
			return *v
		}
		var ret EventEndpointRoutingConfigFailoverConfigSecondary
		return ret
	}).(EventEndpointRoutingConfigFailoverConfigSecondaryOutput)
}

// The name of the secondary Region.
func (o EventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput) Route() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventEndpointRoutingConfigFailoverConfigSecondary) *string {
		if v == nil {
			return nil
		}
		return v.Route
	}).(pulumi.StringPtrOutput)
}

type EventPermissionCondition struct {
	// Key for the condition. Valid values: `aws:PrincipalOrgID`.
	Key string `pulumi:"key"`
	// Type of condition. Value values: `StringEquals`.
	Type string `pulumi:"type"`
	// Value for the key.
	Value string `pulumi:"value"`
}

// EventPermissionConditionInput is an input type that accepts EventPermissionConditionArgs and EventPermissionConditionOutput values.
// You can construct a concrete instance of `EventPermissionConditionInput` via:
//
//	EventPermissionConditionArgs{...}
type EventPermissionConditionInput interface {
	pulumi.Input

	ToEventPermissionConditionOutput() EventPermissionConditionOutput
	ToEventPermissionConditionOutputWithContext(context.Context) EventPermissionConditionOutput
}

type EventPermissionConditionArgs struct {
	// Key for the condition. Valid values: `aws:PrincipalOrgID`.
	Key pulumi.StringInput `pulumi:"key"`
	// Type of condition. Value values: `StringEquals`.
	Type pulumi.StringInput `pulumi:"type"`
	// Value for the key.
	Value pulumi.StringInput `pulumi:"value"`
}

func (EventPermissionConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventPermissionCondition)(nil)).Elem()
}

func (i EventPermissionConditionArgs) ToEventPermissionConditionOutput() EventPermissionConditionOutput {
	return i.ToEventPermissionConditionOutputWithContext(context.Background())
}

func (i EventPermissionConditionArgs) ToEventPermissionConditionOutputWithContext(ctx context.Context) EventPermissionConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventPermissionConditionOutput)
}

func (i EventPermissionConditionArgs) ToEventPermissionConditionPtrOutput() EventPermissionConditionPtrOutput {
	return i.ToEventPermissionConditionPtrOutputWithContext(context.Background())
}

func (i EventPermissionConditionArgs) ToEventPermissionConditionPtrOutputWithContext(ctx context.Context) EventPermissionConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventPermissionConditionOutput).ToEventPermissionConditionPtrOutputWithContext(ctx)
}

// EventPermissionConditionPtrInput is an input type that accepts EventPermissionConditionArgs, EventPermissionConditionPtr and EventPermissionConditionPtrOutput values.
// You can construct a concrete instance of `EventPermissionConditionPtrInput` via:
//
//	        EventPermissionConditionArgs{...}
//
//	or:
//
//	        nil
type EventPermissionConditionPtrInput interface {
	pulumi.Input

	ToEventPermissionConditionPtrOutput() EventPermissionConditionPtrOutput
	ToEventPermissionConditionPtrOutputWithContext(context.Context) EventPermissionConditionPtrOutput
}

type eventPermissionConditionPtrType EventPermissionConditionArgs

func EventPermissionConditionPtr(v *EventPermissionConditionArgs) EventPermissionConditionPtrInput {
	return (*eventPermissionConditionPtrType)(v)
}

func (*eventPermissionConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventPermissionCondition)(nil)).Elem()
}

func (i *eventPermissionConditionPtrType) ToEventPermissionConditionPtrOutput() EventPermissionConditionPtrOutput {
	return i.ToEventPermissionConditionPtrOutputWithContext(context.Background())
}

func (i *eventPermissionConditionPtrType) ToEventPermissionConditionPtrOutputWithContext(ctx context.Context) EventPermissionConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventPermissionConditionPtrOutput)
}

type EventPermissionConditionOutput struct{ *pulumi.OutputState }

func (EventPermissionConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventPermissionCondition)(nil)).Elem()
}

func (o EventPermissionConditionOutput) ToEventPermissionConditionOutput() EventPermissionConditionOutput {
	return o
}

func (o EventPermissionConditionOutput) ToEventPermissionConditionOutputWithContext(ctx context.Context) EventPermissionConditionOutput {
	return o
}

func (o EventPermissionConditionOutput) ToEventPermissionConditionPtrOutput() EventPermissionConditionPtrOutput {
	return o.ToEventPermissionConditionPtrOutputWithContext(context.Background())
}

func (o EventPermissionConditionOutput) ToEventPermissionConditionPtrOutputWithContext(ctx context.Context) EventPermissionConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventPermissionCondition) *EventPermissionCondition {
		return &v
	}).(EventPermissionConditionPtrOutput)
}

// Key for the condition. Valid values: `aws:PrincipalOrgID`.
func (o EventPermissionConditionOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v EventPermissionCondition) string { return v.Key }).(pulumi.StringOutput)
}

// Type of condition. Value values: `StringEquals`.
func (o EventPermissionConditionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EventPermissionCondition) string { return v.Type }).(pulumi.StringOutput)
}

// Value for the key.
func (o EventPermissionConditionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v EventPermissionCondition) string { return v.Value }).(pulumi.StringOutput)
}

type EventPermissionConditionPtrOutput struct{ *pulumi.OutputState }

func (EventPermissionConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventPermissionCondition)(nil)).Elem()
}

func (o EventPermissionConditionPtrOutput) ToEventPermissionConditionPtrOutput() EventPermissionConditionPtrOutput {
	return o
}

func (o EventPermissionConditionPtrOutput) ToEventPermissionConditionPtrOutputWithContext(ctx context.Context) EventPermissionConditionPtrOutput {
	return o
}

func (o EventPermissionConditionPtrOutput) Elem() EventPermissionConditionOutput {
	return o.ApplyT(func(v *EventPermissionCondition) EventPermissionCondition {
		if v != nil {
			return *v
		}
		var ret EventPermissionCondition
		return ret
	}).(EventPermissionConditionOutput)
}

// Key for the condition. Valid values: `aws:PrincipalOrgID`.
func (o EventPermissionConditionPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventPermissionCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// Type of condition. Value values: `StringEquals`.
func (o EventPermissionConditionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventPermissionCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

// Value for the key.
func (o EventPermissionConditionPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventPermissionCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type EventTargetBatchTarget struct {
	// The size of the array, if this is an array batch job. Valid values are integers between 2 and 10,000.
	ArraySize *int `pulumi:"arraySize"`
	// The number of times to attempt to retry, if the job fails. Valid values are 1 to 10.
	JobAttempts *int `pulumi:"jobAttempts"`
	// The ARN or name of the job definition to use if the event target is an AWS Batch job. This job definition must already exist.
	JobDefinition string `pulumi:"jobDefinition"`
	// The name to use for this execution of the job, if the target is an AWS Batch job.
	JobName string `pulumi:"jobName"`
}

// EventTargetBatchTargetInput is an input type that accepts EventTargetBatchTargetArgs and EventTargetBatchTargetOutput values.
// You can construct a concrete instance of `EventTargetBatchTargetInput` via:
//
//	EventTargetBatchTargetArgs{...}
type EventTargetBatchTargetInput interface {
	pulumi.Input

	ToEventTargetBatchTargetOutput() EventTargetBatchTargetOutput
	ToEventTargetBatchTargetOutputWithContext(context.Context) EventTargetBatchTargetOutput
}

type EventTargetBatchTargetArgs struct {
	// The size of the array, if this is an array batch job. Valid values are integers between 2 and 10,000.
	ArraySize pulumi.IntPtrInput `pulumi:"arraySize"`
	// The number of times to attempt to retry, if the job fails. Valid values are 1 to 10.
	JobAttempts pulumi.IntPtrInput `pulumi:"jobAttempts"`
	// The ARN or name of the job definition to use if the event target is an AWS Batch job. This job definition must already exist.
	JobDefinition pulumi.StringInput `pulumi:"jobDefinition"`
	// The name to use for this execution of the job, if the target is an AWS Batch job.
	JobName pulumi.StringInput `pulumi:"jobName"`
}

func (EventTargetBatchTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetBatchTarget)(nil)).Elem()
}

func (i EventTargetBatchTargetArgs) ToEventTargetBatchTargetOutput() EventTargetBatchTargetOutput {
	return i.ToEventTargetBatchTargetOutputWithContext(context.Background())
}

func (i EventTargetBatchTargetArgs) ToEventTargetBatchTargetOutputWithContext(ctx context.Context) EventTargetBatchTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetBatchTargetOutput)
}

func (i EventTargetBatchTargetArgs) ToEventTargetBatchTargetPtrOutput() EventTargetBatchTargetPtrOutput {
	return i.ToEventTargetBatchTargetPtrOutputWithContext(context.Background())
}

func (i EventTargetBatchTargetArgs) ToEventTargetBatchTargetPtrOutputWithContext(ctx context.Context) EventTargetBatchTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetBatchTargetOutput).ToEventTargetBatchTargetPtrOutputWithContext(ctx)
}

// EventTargetBatchTargetPtrInput is an input type that accepts EventTargetBatchTargetArgs, EventTargetBatchTargetPtr and EventTargetBatchTargetPtrOutput values.
// You can construct a concrete instance of `EventTargetBatchTargetPtrInput` via:
//
//	        EventTargetBatchTargetArgs{...}
//
//	or:
//
//	        nil
type EventTargetBatchTargetPtrInput interface {
	pulumi.Input

	ToEventTargetBatchTargetPtrOutput() EventTargetBatchTargetPtrOutput
	ToEventTargetBatchTargetPtrOutputWithContext(context.Context) EventTargetBatchTargetPtrOutput
}

type eventTargetBatchTargetPtrType EventTargetBatchTargetArgs

func EventTargetBatchTargetPtr(v *EventTargetBatchTargetArgs) EventTargetBatchTargetPtrInput {
	return (*eventTargetBatchTargetPtrType)(v)
}

func (*eventTargetBatchTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTargetBatchTarget)(nil)).Elem()
}

func (i *eventTargetBatchTargetPtrType) ToEventTargetBatchTargetPtrOutput() EventTargetBatchTargetPtrOutput {
	return i.ToEventTargetBatchTargetPtrOutputWithContext(context.Background())
}

func (i *eventTargetBatchTargetPtrType) ToEventTargetBatchTargetPtrOutputWithContext(ctx context.Context) EventTargetBatchTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetBatchTargetPtrOutput)
}

type EventTargetBatchTargetOutput struct{ *pulumi.OutputState }

func (EventTargetBatchTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetBatchTarget)(nil)).Elem()
}

func (o EventTargetBatchTargetOutput) ToEventTargetBatchTargetOutput() EventTargetBatchTargetOutput {
	return o
}

func (o EventTargetBatchTargetOutput) ToEventTargetBatchTargetOutputWithContext(ctx context.Context) EventTargetBatchTargetOutput {
	return o
}

func (o EventTargetBatchTargetOutput) ToEventTargetBatchTargetPtrOutput() EventTargetBatchTargetPtrOutput {
	return o.ToEventTargetBatchTargetPtrOutputWithContext(context.Background())
}

func (o EventTargetBatchTargetOutput) ToEventTargetBatchTargetPtrOutputWithContext(ctx context.Context) EventTargetBatchTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventTargetBatchTarget) *EventTargetBatchTarget {
		return &v
	}).(EventTargetBatchTargetPtrOutput)
}

// The size of the array, if this is an array batch job. Valid values are integers between 2 and 10,000.
func (o EventTargetBatchTargetOutput) ArraySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EventTargetBatchTarget) *int { return v.ArraySize }).(pulumi.IntPtrOutput)
}

// The number of times to attempt to retry, if the job fails. Valid values are 1 to 10.
func (o EventTargetBatchTargetOutput) JobAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EventTargetBatchTarget) *int { return v.JobAttempts }).(pulumi.IntPtrOutput)
}

// The ARN or name of the job definition to use if the event target is an AWS Batch job. This job definition must already exist.
func (o EventTargetBatchTargetOutput) JobDefinition() pulumi.StringOutput {
	return o.ApplyT(func(v EventTargetBatchTarget) string { return v.JobDefinition }).(pulumi.StringOutput)
}

// The name to use for this execution of the job, if the target is an AWS Batch job.
func (o EventTargetBatchTargetOutput) JobName() pulumi.StringOutput {
	return o.ApplyT(func(v EventTargetBatchTarget) string { return v.JobName }).(pulumi.StringOutput)
}

type EventTargetBatchTargetPtrOutput struct{ *pulumi.OutputState }

func (EventTargetBatchTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTargetBatchTarget)(nil)).Elem()
}

func (o EventTargetBatchTargetPtrOutput) ToEventTargetBatchTargetPtrOutput() EventTargetBatchTargetPtrOutput {
	return o
}

func (o EventTargetBatchTargetPtrOutput) ToEventTargetBatchTargetPtrOutputWithContext(ctx context.Context) EventTargetBatchTargetPtrOutput {
	return o
}

func (o EventTargetBatchTargetPtrOutput) Elem() EventTargetBatchTargetOutput {
	return o.ApplyT(func(v *EventTargetBatchTarget) EventTargetBatchTarget {
		if v != nil {
			return *v
		}
		var ret EventTargetBatchTarget
		return ret
	}).(EventTargetBatchTargetOutput)
}

// The size of the array, if this is an array batch job. Valid values are integers between 2 and 10,000.
func (o EventTargetBatchTargetPtrOutput) ArraySize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EventTargetBatchTarget) *int {
		if v == nil {
			return nil
		}
		return v.ArraySize
	}).(pulumi.IntPtrOutput)
}

// The number of times to attempt to retry, if the job fails. Valid values are 1 to 10.
func (o EventTargetBatchTargetPtrOutput) JobAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EventTargetBatchTarget) *int {
		if v == nil {
			return nil
		}
		return v.JobAttempts
	}).(pulumi.IntPtrOutput)
}

// The ARN or name of the job definition to use if the event target is an AWS Batch job. This job definition must already exist.
func (o EventTargetBatchTargetPtrOutput) JobDefinition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventTargetBatchTarget) *string {
		if v == nil {
			return nil
		}
		return &v.JobDefinition
	}).(pulumi.StringPtrOutput)
}

// The name to use for this execution of the job, if the target is an AWS Batch job.
func (o EventTargetBatchTargetPtrOutput) JobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventTargetBatchTarget) *string {
		if v == nil {
			return nil
		}
		return &v.JobName
	}).(pulumi.StringPtrOutput)
}

type EventTargetDeadLetterConfig struct {
	// ARN of the SQS queue specified as the target for the dead-letter queue.
	Arn *string `pulumi:"arn"`
}

// EventTargetDeadLetterConfigInput is an input type that accepts EventTargetDeadLetterConfigArgs and EventTargetDeadLetterConfigOutput values.
// You can construct a concrete instance of `EventTargetDeadLetterConfigInput` via:
//
//	EventTargetDeadLetterConfigArgs{...}
type EventTargetDeadLetterConfigInput interface {
	pulumi.Input

	ToEventTargetDeadLetterConfigOutput() EventTargetDeadLetterConfigOutput
	ToEventTargetDeadLetterConfigOutputWithContext(context.Context) EventTargetDeadLetterConfigOutput
}

type EventTargetDeadLetterConfigArgs struct {
	// ARN of the SQS queue specified as the target for the dead-letter queue.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
}

func (EventTargetDeadLetterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetDeadLetterConfig)(nil)).Elem()
}

func (i EventTargetDeadLetterConfigArgs) ToEventTargetDeadLetterConfigOutput() EventTargetDeadLetterConfigOutput {
	return i.ToEventTargetDeadLetterConfigOutputWithContext(context.Background())
}

func (i EventTargetDeadLetterConfigArgs) ToEventTargetDeadLetterConfigOutputWithContext(ctx context.Context) EventTargetDeadLetterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetDeadLetterConfigOutput)
}

func (i EventTargetDeadLetterConfigArgs) ToEventTargetDeadLetterConfigPtrOutput() EventTargetDeadLetterConfigPtrOutput {
	return i.ToEventTargetDeadLetterConfigPtrOutputWithContext(context.Background())
}

func (i EventTargetDeadLetterConfigArgs) ToEventTargetDeadLetterConfigPtrOutputWithContext(ctx context.Context) EventTargetDeadLetterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetDeadLetterConfigOutput).ToEventTargetDeadLetterConfigPtrOutputWithContext(ctx)
}

// EventTargetDeadLetterConfigPtrInput is an input type that accepts EventTargetDeadLetterConfigArgs, EventTargetDeadLetterConfigPtr and EventTargetDeadLetterConfigPtrOutput values.
// You can construct a concrete instance of `EventTargetDeadLetterConfigPtrInput` via:
//
//	        EventTargetDeadLetterConfigArgs{...}
//
//	or:
//
//	        nil
type EventTargetDeadLetterConfigPtrInput interface {
	pulumi.Input

	ToEventTargetDeadLetterConfigPtrOutput() EventTargetDeadLetterConfigPtrOutput
	ToEventTargetDeadLetterConfigPtrOutputWithContext(context.Context) EventTargetDeadLetterConfigPtrOutput
}

type eventTargetDeadLetterConfigPtrType EventTargetDeadLetterConfigArgs

func EventTargetDeadLetterConfigPtr(v *EventTargetDeadLetterConfigArgs) EventTargetDeadLetterConfigPtrInput {
	return (*eventTargetDeadLetterConfigPtrType)(v)
}

func (*eventTargetDeadLetterConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTargetDeadLetterConfig)(nil)).Elem()
}

func (i *eventTargetDeadLetterConfigPtrType) ToEventTargetDeadLetterConfigPtrOutput() EventTargetDeadLetterConfigPtrOutput {
	return i.ToEventTargetDeadLetterConfigPtrOutputWithContext(context.Background())
}

func (i *eventTargetDeadLetterConfigPtrType) ToEventTargetDeadLetterConfigPtrOutputWithContext(ctx context.Context) EventTargetDeadLetterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetDeadLetterConfigPtrOutput)
}

type EventTargetDeadLetterConfigOutput struct{ *pulumi.OutputState }

func (EventTargetDeadLetterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetDeadLetterConfig)(nil)).Elem()
}

func (o EventTargetDeadLetterConfigOutput) ToEventTargetDeadLetterConfigOutput() EventTargetDeadLetterConfigOutput {
	return o
}

func (o EventTargetDeadLetterConfigOutput) ToEventTargetDeadLetterConfigOutputWithContext(ctx context.Context) EventTargetDeadLetterConfigOutput {
	return o
}

func (o EventTargetDeadLetterConfigOutput) ToEventTargetDeadLetterConfigPtrOutput() EventTargetDeadLetterConfigPtrOutput {
	return o.ToEventTargetDeadLetterConfigPtrOutputWithContext(context.Background())
}

func (o EventTargetDeadLetterConfigOutput) ToEventTargetDeadLetterConfigPtrOutputWithContext(ctx context.Context) EventTargetDeadLetterConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventTargetDeadLetterConfig) *EventTargetDeadLetterConfig {
		return &v
	}).(EventTargetDeadLetterConfigPtrOutput)
}

// ARN of the SQS queue specified as the target for the dead-letter queue.
func (o EventTargetDeadLetterConfigOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventTargetDeadLetterConfig) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

type EventTargetDeadLetterConfigPtrOutput struct{ *pulumi.OutputState }

func (EventTargetDeadLetterConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTargetDeadLetterConfig)(nil)).Elem()
}

func (o EventTargetDeadLetterConfigPtrOutput) ToEventTargetDeadLetterConfigPtrOutput() EventTargetDeadLetterConfigPtrOutput {
	return o
}

func (o EventTargetDeadLetterConfigPtrOutput) ToEventTargetDeadLetterConfigPtrOutputWithContext(ctx context.Context) EventTargetDeadLetterConfigPtrOutput {
	return o
}

func (o EventTargetDeadLetterConfigPtrOutput) Elem() EventTargetDeadLetterConfigOutput {
	return o.ApplyT(func(v *EventTargetDeadLetterConfig) EventTargetDeadLetterConfig {
		if v != nil {
			return *v
		}
		var ret EventTargetDeadLetterConfig
		return ret
	}).(EventTargetDeadLetterConfigOutput)
}

// ARN of the SQS queue specified as the target for the dead-letter queue.
func (o EventTargetDeadLetterConfigPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventTargetDeadLetterConfig) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

type EventTargetEcsTarget struct {
	// The capacity provider strategy to use for the task. If a `capacityProviderStrategy` specified, the `launchType` parameter must be omitted. If no `capacityProviderStrategy` or `launchType` is specified, the default capacity provider strategy for the cluster is used. Can be one or more. See below.
	CapacityProviderStrategies []EventTargetEcsTargetCapacityProviderStrategy `pulumi:"capacityProviderStrategies"`
	// Specifies whether to enable Amazon ECS managed tags for the task.
	EnableEcsManagedTags *bool `pulumi:"enableEcsManagedTags"`
	// Whether or not to enable the execute command functionality for the containers in this task. If true, this enables execute command functionality on all containers in the task.
	EnableExecuteCommand *bool `pulumi:"enableExecuteCommand"`
	// Specifies an ECS task group for the task. The maximum length is 255 characters.
	Group *string `pulumi:"group"`
	// Specifies the launch type on which your task is running. The launch type that you specify here must match one of the launch type (compatibilities) of the target task. Valid values include: `EC2`, `EXTERNAL`, or `FARGATE`.
	LaunchType *string `pulumi:"launchType"`
	// Use this if the ECS task uses the awsvpc network mode. This specifies the VPC subnets and security groups associated with the task, and whether a public IP address is to be used. Required if `launchType` is `FARGATE` because the awsvpc mode is required for Fargate tasks.
	NetworkConfiguration *EventTargetEcsTargetNetworkConfiguration `pulumi:"networkConfiguration"`
	// An array of placement strategy objects to use for the task. You can specify a maximum of five strategy rules per task.
	OrderedPlacementStrategies []EventTargetEcsTargetOrderedPlacementStrategy `pulumi:"orderedPlacementStrategies"`
	// An array of placement constraint objects to use for the task. You can specify up to 10 constraints per task (including constraints in the task definition and those specified at runtime). See Below.
	PlacementConstraints []EventTargetEcsTargetPlacementConstraint `pulumi:"placementConstraints"`
	// Specifies the platform version for the task. Specify only the numeric portion of the platform version, such as `1.1.0`. This is used only if LaunchType is FARGATE. For more information about valid platform versions, see [AWS Fargate Platform Versions](http://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html).
	PlatformVersion *string `pulumi:"platformVersion"`
	// Specifies whether to propagate the tags from the task definition to the task. If no value is specified, the tags are not propagated. Tags can only be propagated to the task during task creation. The only valid value is: `TASK_DEFINITION`.
	PropagateTags *string `pulumi:"propagateTags"`
	// A map of tags to assign to ecs resources.
	Tags map[string]string `pulumi:"tags"`
	// The number of tasks to create based on the TaskDefinition. Defaults to `1`.
	TaskCount *int `pulumi:"taskCount"`
	// The ARN of the task definition to use if the event target is an Amazon ECS cluster.
	TaskDefinitionArn string `pulumi:"taskDefinitionArn"`
}

// EventTargetEcsTargetInput is an input type that accepts EventTargetEcsTargetArgs and EventTargetEcsTargetOutput values.
// You can construct a concrete instance of `EventTargetEcsTargetInput` via:
//
//	EventTargetEcsTargetArgs{...}
type EventTargetEcsTargetInput interface {
	pulumi.Input

	ToEventTargetEcsTargetOutput() EventTargetEcsTargetOutput
	ToEventTargetEcsTargetOutputWithContext(context.Context) EventTargetEcsTargetOutput
}

type EventTargetEcsTargetArgs struct {
	// The capacity provider strategy to use for the task. If a `capacityProviderStrategy` specified, the `launchType` parameter must be omitted. If no `capacityProviderStrategy` or `launchType` is specified, the default capacity provider strategy for the cluster is used. Can be one or more. See below.
	CapacityProviderStrategies EventTargetEcsTargetCapacityProviderStrategyArrayInput `pulumi:"capacityProviderStrategies"`
	// Specifies whether to enable Amazon ECS managed tags for the task.
	EnableEcsManagedTags pulumi.BoolPtrInput `pulumi:"enableEcsManagedTags"`
	// Whether or not to enable the execute command functionality for the containers in this task. If true, this enables execute command functionality on all containers in the task.
	EnableExecuteCommand pulumi.BoolPtrInput `pulumi:"enableExecuteCommand"`
	// Specifies an ECS task group for the task. The maximum length is 255 characters.
	Group pulumi.StringPtrInput `pulumi:"group"`
	// Specifies the launch type on which your task is running. The launch type that you specify here must match one of the launch type (compatibilities) of the target task. Valid values include: `EC2`, `EXTERNAL`, or `FARGATE`.
	LaunchType pulumi.StringPtrInput `pulumi:"launchType"`
	// Use this if the ECS task uses the awsvpc network mode. This specifies the VPC subnets and security groups associated with the task, and whether a public IP address is to be used. Required if `launchType` is `FARGATE` because the awsvpc mode is required for Fargate tasks.
	NetworkConfiguration EventTargetEcsTargetNetworkConfigurationPtrInput `pulumi:"networkConfiguration"`
	// An array of placement strategy objects to use for the task. You can specify a maximum of five strategy rules per task.
	OrderedPlacementStrategies EventTargetEcsTargetOrderedPlacementStrategyArrayInput `pulumi:"orderedPlacementStrategies"`
	// An array of placement constraint objects to use for the task. You can specify up to 10 constraints per task (including constraints in the task definition and those specified at runtime). See Below.
	PlacementConstraints EventTargetEcsTargetPlacementConstraintArrayInput `pulumi:"placementConstraints"`
	// Specifies the platform version for the task. Specify only the numeric portion of the platform version, such as `1.1.0`. This is used only if LaunchType is FARGATE. For more information about valid platform versions, see [AWS Fargate Platform Versions](http://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html).
	PlatformVersion pulumi.StringPtrInput `pulumi:"platformVersion"`
	// Specifies whether to propagate the tags from the task definition to the task. If no value is specified, the tags are not propagated. Tags can only be propagated to the task during task creation. The only valid value is: `TASK_DEFINITION`.
	PropagateTags pulumi.StringPtrInput `pulumi:"propagateTags"`
	// A map of tags to assign to ecs resources.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// The number of tasks to create based on the TaskDefinition. Defaults to `1`.
	TaskCount pulumi.IntPtrInput `pulumi:"taskCount"`
	// The ARN of the task definition to use if the event target is an Amazon ECS cluster.
	TaskDefinitionArn pulumi.StringInput `pulumi:"taskDefinitionArn"`
}

func (EventTargetEcsTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetEcsTarget)(nil)).Elem()
}

func (i EventTargetEcsTargetArgs) ToEventTargetEcsTargetOutput() EventTargetEcsTargetOutput {
	return i.ToEventTargetEcsTargetOutputWithContext(context.Background())
}

func (i EventTargetEcsTargetArgs) ToEventTargetEcsTargetOutputWithContext(ctx context.Context) EventTargetEcsTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetEcsTargetOutput)
}

func (i EventTargetEcsTargetArgs) ToEventTargetEcsTargetPtrOutput() EventTargetEcsTargetPtrOutput {
	return i.ToEventTargetEcsTargetPtrOutputWithContext(context.Background())
}

func (i EventTargetEcsTargetArgs) ToEventTargetEcsTargetPtrOutputWithContext(ctx context.Context) EventTargetEcsTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetEcsTargetOutput).ToEventTargetEcsTargetPtrOutputWithContext(ctx)
}

// EventTargetEcsTargetPtrInput is an input type that accepts EventTargetEcsTargetArgs, EventTargetEcsTargetPtr and EventTargetEcsTargetPtrOutput values.
// You can construct a concrete instance of `EventTargetEcsTargetPtrInput` via:
//
//	        EventTargetEcsTargetArgs{...}
//
//	or:
//
//	        nil
type EventTargetEcsTargetPtrInput interface {
	pulumi.Input

	ToEventTargetEcsTargetPtrOutput() EventTargetEcsTargetPtrOutput
	ToEventTargetEcsTargetPtrOutputWithContext(context.Context) EventTargetEcsTargetPtrOutput
}

type eventTargetEcsTargetPtrType EventTargetEcsTargetArgs

func EventTargetEcsTargetPtr(v *EventTargetEcsTargetArgs) EventTargetEcsTargetPtrInput {
	return (*eventTargetEcsTargetPtrType)(v)
}

func (*eventTargetEcsTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTargetEcsTarget)(nil)).Elem()
}

func (i *eventTargetEcsTargetPtrType) ToEventTargetEcsTargetPtrOutput() EventTargetEcsTargetPtrOutput {
	return i.ToEventTargetEcsTargetPtrOutputWithContext(context.Background())
}

func (i *eventTargetEcsTargetPtrType) ToEventTargetEcsTargetPtrOutputWithContext(ctx context.Context) EventTargetEcsTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetEcsTargetPtrOutput)
}

type EventTargetEcsTargetOutput struct{ *pulumi.OutputState }

func (EventTargetEcsTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetEcsTarget)(nil)).Elem()
}

func (o EventTargetEcsTargetOutput) ToEventTargetEcsTargetOutput() EventTargetEcsTargetOutput {
	return o
}

func (o EventTargetEcsTargetOutput) ToEventTargetEcsTargetOutputWithContext(ctx context.Context) EventTargetEcsTargetOutput {
	return o
}

func (o EventTargetEcsTargetOutput) ToEventTargetEcsTargetPtrOutput() EventTargetEcsTargetPtrOutput {
	return o.ToEventTargetEcsTargetPtrOutputWithContext(context.Background())
}

func (o EventTargetEcsTargetOutput) ToEventTargetEcsTargetPtrOutputWithContext(ctx context.Context) EventTargetEcsTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventTargetEcsTarget) *EventTargetEcsTarget {
		return &v
	}).(EventTargetEcsTargetPtrOutput)
}

// The capacity provider strategy to use for the task. If a `capacityProviderStrategy` specified, the `launchType` parameter must be omitted. If no `capacityProviderStrategy` or `launchType` is specified, the default capacity provider strategy for the cluster is used. Can be one or more. See below.
func (o EventTargetEcsTargetOutput) CapacityProviderStrategies() EventTargetEcsTargetCapacityProviderStrategyArrayOutput {
	return o.ApplyT(func(v EventTargetEcsTarget) []EventTargetEcsTargetCapacityProviderStrategy {
		return v.CapacityProviderStrategies
	}).(EventTargetEcsTargetCapacityProviderStrategyArrayOutput)
}

// Specifies whether to enable Amazon ECS managed tags for the task.
func (o EventTargetEcsTargetOutput) EnableEcsManagedTags() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EventTargetEcsTarget) *bool { return v.EnableEcsManagedTags }).(pulumi.BoolPtrOutput)
}

// Whether or not to enable the execute command functionality for the containers in this task. If true, this enables execute command functionality on all containers in the task.
func (o EventTargetEcsTargetOutput) EnableExecuteCommand() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EventTargetEcsTarget) *bool { return v.EnableExecuteCommand }).(pulumi.BoolPtrOutput)
}

// Specifies an ECS task group for the task. The maximum length is 255 characters.
func (o EventTargetEcsTargetOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventTargetEcsTarget) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// Specifies the launch type on which your task is running. The launch type that you specify here must match one of the launch type (compatibilities) of the target task. Valid values include: `EC2`, `EXTERNAL`, or `FARGATE`.
func (o EventTargetEcsTargetOutput) LaunchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventTargetEcsTarget) *string { return v.LaunchType }).(pulumi.StringPtrOutput)
}

// Use this if the ECS task uses the awsvpc network mode. This specifies the VPC subnets and security groups associated with the task, and whether a public IP address is to be used. Required if `launchType` is `FARGATE` because the awsvpc mode is required for Fargate tasks.
func (o EventTargetEcsTargetOutput) NetworkConfiguration() EventTargetEcsTargetNetworkConfigurationPtrOutput {
	return o.ApplyT(func(v EventTargetEcsTarget) *EventTargetEcsTargetNetworkConfiguration { return v.NetworkConfiguration }).(EventTargetEcsTargetNetworkConfigurationPtrOutput)
}

// An array of placement strategy objects to use for the task. You can specify a maximum of five strategy rules per task.
func (o EventTargetEcsTargetOutput) OrderedPlacementStrategies() EventTargetEcsTargetOrderedPlacementStrategyArrayOutput {
	return o.ApplyT(func(v EventTargetEcsTarget) []EventTargetEcsTargetOrderedPlacementStrategy {
		return v.OrderedPlacementStrategies
	}).(EventTargetEcsTargetOrderedPlacementStrategyArrayOutput)
}

// An array of placement constraint objects to use for the task. You can specify up to 10 constraints per task (including constraints in the task definition and those specified at runtime). See Below.
func (o EventTargetEcsTargetOutput) PlacementConstraints() EventTargetEcsTargetPlacementConstraintArrayOutput {
	return o.ApplyT(func(v EventTargetEcsTarget) []EventTargetEcsTargetPlacementConstraint { return v.PlacementConstraints }).(EventTargetEcsTargetPlacementConstraintArrayOutput)
}

// Specifies the platform version for the task. Specify only the numeric portion of the platform version, such as `1.1.0`. This is used only if LaunchType is FARGATE. For more information about valid platform versions, see [AWS Fargate Platform Versions](http://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html).
func (o EventTargetEcsTargetOutput) PlatformVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventTargetEcsTarget) *string { return v.PlatformVersion }).(pulumi.StringPtrOutput)
}

// Specifies whether to propagate the tags from the task definition to the task. If no value is specified, the tags are not propagated. Tags can only be propagated to the task during task creation. The only valid value is: `TASK_DEFINITION`.
func (o EventTargetEcsTargetOutput) PropagateTags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventTargetEcsTarget) *string { return v.PropagateTags }).(pulumi.StringPtrOutput)
}

// A map of tags to assign to ecs resources.
func (o EventTargetEcsTargetOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v EventTargetEcsTarget) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The number of tasks to create based on the TaskDefinition. Defaults to `1`.
func (o EventTargetEcsTargetOutput) TaskCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EventTargetEcsTarget) *int { return v.TaskCount }).(pulumi.IntPtrOutput)
}

// The ARN of the task definition to use if the event target is an Amazon ECS cluster.
func (o EventTargetEcsTargetOutput) TaskDefinitionArn() pulumi.StringOutput {
	return o.ApplyT(func(v EventTargetEcsTarget) string { return v.TaskDefinitionArn }).(pulumi.StringOutput)
}

type EventTargetEcsTargetPtrOutput struct{ *pulumi.OutputState }

func (EventTargetEcsTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTargetEcsTarget)(nil)).Elem()
}

func (o EventTargetEcsTargetPtrOutput) ToEventTargetEcsTargetPtrOutput() EventTargetEcsTargetPtrOutput {
	return o
}

func (o EventTargetEcsTargetPtrOutput) ToEventTargetEcsTargetPtrOutputWithContext(ctx context.Context) EventTargetEcsTargetPtrOutput {
	return o
}

func (o EventTargetEcsTargetPtrOutput) Elem() EventTargetEcsTargetOutput {
	return o.ApplyT(func(v *EventTargetEcsTarget) EventTargetEcsTarget {
		if v != nil {
			return *v
		}
		var ret EventTargetEcsTarget
		return ret
	}).(EventTargetEcsTargetOutput)
}

// The capacity provider strategy to use for the task. If a `capacityProviderStrategy` specified, the `launchType` parameter must be omitted. If no `capacityProviderStrategy` or `launchType` is specified, the default capacity provider strategy for the cluster is used. Can be one or more. See below.
func (o EventTargetEcsTargetPtrOutput) CapacityProviderStrategies() EventTargetEcsTargetCapacityProviderStrategyArrayOutput {
	return o.ApplyT(func(v *EventTargetEcsTarget) []EventTargetEcsTargetCapacityProviderStrategy {
		if v == nil {
			return nil
		}
		return v.CapacityProviderStrategies
	}).(EventTargetEcsTargetCapacityProviderStrategyArrayOutput)
}

// Specifies whether to enable Amazon ECS managed tags for the task.
func (o EventTargetEcsTargetPtrOutput) EnableEcsManagedTags() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EventTargetEcsTarget) *bool {
		if v == nil {
			return nil
		}
		return v.EnableEcsManagedTags
	}).(pulumi.BoolPtrOutput)
}

// Whether or not to enable the execute command functionality for the containers in this task. If true, this enables execute command functionality on all containers in the task.
func (o EventTargetEcsTargetPtrOutput) EnableExecuteCommand() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EventTargetEcsTarget) *bool {
		if v == nil {
			return nil
		}
		return v.EnableExecuteCommand
	}).(pulumi.BoolPtrOutput)
}

// Specifies an ECS task group for the task. The maximum length is 255 characters.
func (o EventTargetEcsTargetPtrOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventTargetEcsTarget) *string {
		if v == nil {
			return nil
		}
		return v.Group
	}).(pulumi.StringPtrOutput)
}

// Specifies the launch type on which your task is running. The launch type that you specify here must match one of the launch type (compatibilities) of the target task. Valid values include: `EC2`, `EXTERNAL`, or `FARGATE`.
func (o EventTargetEcsTargetPtrOutput) LaunchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventTargetEcsTarget) *string {
		if v == nil {
			return nil
		}
		return v.LaunchType
	}).(pulumi.StringPtrOutput)
}

// Use this if the ECS task uses the awsvpc network mode. This specifies the VPC subnets and security groups associated with the task, and whether a public IP address is to be used. Required if `launchType` is `FARGATE` because the awsvpc mode is required for Fargate tasks.
func (o EventTargetEcsTargetPtrOutput) NetworkConfiguration() EventTargetEcsTargetNetworkConfigurationPtrOutput {
	return o.ApplyT(func(v *EventTargetEcsTarget) *EventTargetEcsTargetNetworkConfiguration {
		if v == nil {
			return nil
		}
		return v.NetworkConfiguration
	}).(EventTargetEcsTargetNetworkConfigurationPtrOutput)
}

// An array of placement strategy objects to use for the task. You can specify a maximum of five strategy rules per task.
func (o EventTargetEcsTargetPtrOutput) OrderedPlacementStrategies() EventTargetEcsTargetOrderedPlacementStrategyArrayOutput {
	return o.ApplyT(func(v *EventTargetEcsTarget) []EventTargetEcsTargetOrderedPlacementStrategy {
		if v == nil {
			return nil
		}
		return v.OrderedPlacementStrategies
	}).(EventTargetEcsTargetOrderedPlacementStrategyArrayOutput)
}

// An array of placement constraint objects to use for the task. You can specify up to 10 constraints per task (including constraints in the task definition and those specified at runtime). See Below.
func (o EventTargetEcsTargetPtrOutput) PlacementConstraints() EventTargetEcsTargetPlacementConstraintArrayOutput {
	return o.ApplyT(func(v *EventTargetEcsTarget) []EventTargetEcsTargetPlacementConstraint {
		if v == nil {
			return nil
		}
		return v.PlacementConstraints
	}).(EventTargetEcsTargetPlacementConstraintArrayOutput)
}

// Specifies the platform version for the task. Specify only the numeric portion of the platform version, such as `1.1.0`. This is used only if LaunchType is FARGATE. For more information about valid platform versions, see [AWS Fargate Platform Versions](http://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html).
func (o EventTargetEcsTargetPtrOutput) PlatformVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventTargetEcsTarget) *string {
		if v == nil {
			return nil
		}
		return v.PlatformVersion
	}).(pulumi.StringPtrOutput)
}

// Specifies whether to propagate the tags from the task definition to the task. If no value is specified, the tags are not propagated. Tags can only be propagated to the task during task creation. The only valid value is: `TASK_DEFINITION`.
func (o EventTargetEcsTargetPtrOutput) PropagateTags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventTargetEcsTarget) *string {
		if v == nil {
			return nil
		}
		return v.PropagateTags
	}).(pulumi.StringPtrOutput)
}

// A map of tags to assign to ecs resources.
func (o EventTargetEcsTargetPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EventTargetEcsTarget) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

// The number of tasks to create based on the TaskDefinition. Defaults to `1`.
func (o EventTargetEcsTargetPtrOutput) TaskCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EventTargetEcsTarget) *int {
		if v == nil {
			return nil
		}
		return v.TaskCount
	}).(pulumi.IntPtrOutput)
}

// The ARN of the task definition to use if the event target is an Amazon ECS cluster.
func (o EventTargetEcsTargetPtrOutput) TaskDefinitionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventTargetEcsTarget) *string {
		if v == nil {
			return nil
		}
		return &v.TaskDefinitionArn
	}).(pulumi.StringPtrOutput)
}

type EventTargetEcsTargetCapacityProviderStrategy struct {
	// The base value designates how many tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a base defined. Defaults to `0`.
	Base *int `pulumi:"base"`
	// Short name of the capacity provider.
	CapacityProvider string `pulumi:"capacityProvider"`
	// The weight value designates the relative percentage of the total number of tasks launched that should use the specified capacity provider. The weight value is taken into consideration after the base value, if defined, is satisfied.
	Weight *int `pulumi:"weight"`
}

// EventTargetEcsTargetCapacityProviderStrategyInput is an input type that accepts EventTargetEcsTargetCapacityProviderStrategyArgs and EventTargetEcsTargetCapacityProviderStrategyOutput values.
// You can construct a concrete instance of `EventTargetEcsTargetCapacityProviderStrategyInput` via:
//
//	EventTargetEcsTargetCapacityProviderStrategyArgs{...}
type EventTargetEcsTargetCapacityProviderStrategyInput interface {
	pulumi.Input

	ToEventTargetEcsTargetCapacityProviderStrategyOutput() EventTargetEcsTargetCapacityProviderStrategyOutput
	ToEventTargetEcsTargetCapacityProviderStrategyOutputWithContext(context.Context) EventTargetEcsTargetCapacityProviderStrategyOutput
}

type EventTargetEcsTargetCapacityProviderStrategyArgs struct {
	// The base value designates how many tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a base defined. Defaults to `0`.
	Base pulumi.IntPtrInput `pulumi:"base"`
	// Short name of the capacity provider.
	CapacityProvider pulumi.StringInput `pulumi:"capacityProvider"`
	// The weight value designates the relative percentage of the total number of tasks launched that should use the specified capacity provider. The weight value is taken into consideration after the base value, if defined, is satisfied.
	Weight pulumi.IntPtrInput `pulumi:"weight"`
}

func (EventTargetEcsTargetCapacityProviderStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetEcsTargetCapacityProviderStrategy)(nil)).Elem()
}

func (i EventTargetEcsTargetCapacityProviderStrategyArgs) ToEventTargetEcsTargetCapacityProviderStrategyOutput() EventTargetEcsTargetCapacityProviderStrategyOutput {
	return i.ToEventTargetEcsTargetCapacityProviderStrategyOutputWithContext(context.Background())
}

func (i EventTargetEcsTargetCapacityProviderStrategyArgs) ToEventTargetEcsTargetCapacityProviderStrategyOutputWithContext(ctx context.Context) EventTargetEcsTargetCapacityProviderStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetEcsTargetCapacityProviderStrategyOutput)
}

// EventTargetEcsTargetCapacityProviderStrategyArrayInput is an input type that accepts EventTargetEcsTargetCapacityProviderStrategyArray and EventTargetEcsTargetCapacityProviderStrategyArrayOutput values.
// You can construct a concrete instance of `EventTargetEcsTargetCapacityProviderStrategyArrayInput` via:
//
//	EventTargetEcsTargetCapacityProviderStrategyArray{ EventTargetEcsTargetCapacityProviderStrategyArgs{...} }
type EventTargetEcsTargetCapacityProviderStrategyArrayInput interface {
	pulumi.Input

	ToEventTargetEcsTargetCapacityProviderStrategyArrayOutput() EventTargetEcsTargetCapacityProviderStrategyArrayOutput
	ToEventTargetEcsTargetCapacityProviderStrategyArrayOutputWithContext(context.Context) EventTargetEcsTargetCapacityProviderStrategyArrayOutput
}

type EventTargetEcsTargetCapacityProviderStrategyArray []EventTargetEcsTargetCapacityProviderStrategyInput

func (EventTargetEcsTargetCapacityProviderStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventTargetEcsTargetCapacityProviderStrategy)(nil)).Elem()
}

func (i EventTargetEcsTargetCapacityProviderStrategyArray) ToEventTargetEcsTargetCapacityProviderStrategyArrayOutput() EventTargetEcsTargetCapacityProviderStrategyArrayOutput {
	return i.ToEventTargetEcsTargetCapacityProviderStrategyArrayOutputWithContext(context.Background())
}

func (i EventTargetEcsTargetCapacityProviderStrategyArray) ToEventTargetEcsTargetCapacityProviderStrategyArrayOutputWithContext(ctx context.Context) EventTargetEcsTargetCapacityProviderStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetEcsTargetCapacityProviderStrategyArrayOutput)
}

type EventTargetEcsTargetCapacityProviderStrategyOutput struct{ *pulumi.OutputState }

func (EventTargetEcsTargetCapacityProviderStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetEcsTargetCapacityProviderStrategy)(nil)).Elem()
}

func (o EventTargetEcsTargetCapacityProviderStrategyOutput) ToEventTargetEcsTargetCapacityProviderStrategyOutput() EventTargetEcsTargetCapacityProviderStrategyOutput {
	return o
}

func (o EventTargetEcsTargetCapacityProviderStrategyOutput) ToEventTargetEcsTargetCapacityProviderStrategyOutputWithContext(ctx context.Context) EventTargetEcsTargetCapacityProviderStrategyOutput {
	return o
}

// The base value designates how many tasks, at a minimum, to run on the specified capacity provider. Only one capacity provider in a capacity provider strategy can have a base defined. Defaults to `0`.
func (o EventTargetEcsTargetCapacityProviderStrategyOutput) Base() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EventTargetEcsTargetCapacityProviderStrategy) *int { return v.Base }).(pulumi.IntPtrOutput)
}

// Short name of the capacity provider.
func (o EventTargetEcsTargetCapacityProviderStrategyOutput) CapacityProvider() pulumi.StringOutput {
	return o.ApplyT(func(v EventTargetEcsTargetCapacityProviderStrategy) string { return v.CapacityProvider }).(pulumi.StringOutput)
}

// The weight value designates the relative percentage of the total number of tasks launched that should use the specified capacity provider. The weight value is taken into consideration after the base value, if defined, is satisfied.
func (o EventTargetEcsTargetCapacityProviderStrategyOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EventTargetEcsTargetCapacityProviderStrategy) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type EventTargetEcsTargetCapacityProviderStrategyArrayOutput struct{ *pulumi.OutputState }

func (EventTargetEcsTargetCapacityProviderStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventTargetEcsTargetCapacityProviderStrategy)(nil)).Elem()
}

func (o EventTargetEcsTargetCapacityProviderStrategyArrayOutput) ToEventTargetEcsTargetCapacityProviderStrategyArrayOutput() EventTargetEcsTargetCapacityProviderStrategyArrayOutput {
	return o
}

func (o EventTargetEcsTargetCapacityProviderStrategyArrayOutput) ToEventTargetEcsTargetCapacityProviderStrategyArrayOutputWithContext(ctx context.Context) EventTargetEcsTargetCapacityProviderStrategyArrayOutput {
	return o
}

func (o EventTargetEcsTargetCapacityProviderStrategyArrayOutput) Index(i pulumi.IntInput) EventTargetEcsTargetCapacityProviderStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventTargetEcsTargetCapacityProviderStrategy {
		return vs[0].([]EventTargetEcsTargetCapacityProviderStrategy)[vs[1].(int)]
	}).(EventTargetEcsTargetCapacityProviderStrategyOutput)
}

type EventTargetEcsTargetNetworkConfiguration struct {
	// Assign a public IP address to the ENI (Fargate launch type only). Valid values are `true` or `false`. Defaults to `false`.
	//
	// For more information, see [Task Networking](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html)
	AssignPublicIp *bool `pulumi:"assignPublicIp"`
	// The security groups associated with the task or service. If you do not specify a security group, the default security group for the VPC is used.
	SecurityGroups []string `pulumi:"securityGroups"`
	// The subnets associated with the task or service.
	Subnets []string `pulumi:"subnets"`
}

// EventTargetEcsTargetNetworkConfigurationInput is an input type that accepts EventTargetEcsTargetNetworkConfigurationArgs and EventTargetEcsTargetNetworkConfigurationOutput values.
// You can construct a concrete instance of `EventTargetEcsTargetNetworkConfigurationInput` via:
//
//	EventTargetEcsTargetNetworkConfigurationArgs{...}
type EventTargetEcsTargetNetworkConfigurationInput interface {
	pulumi.Input

	ToEventTargetEcsTargetNetworkConfigurationOutput() EventTargetEcsTargetNetworkConfigurationOutput
	ToEventTargetEcsTargetNetworkConfigurationOutputWithContext(context.Context) EventTargetEcsTargetNetworkConfigurationOutput
}

type EventTargetEcsTargetNetworkConfigurationArgs struct {
	// Assign a public IP address to the ENI (Fargate launch type only). Valid values are `true` or `false`. Defaults to `false`.
	//
	// For more information, see [Task Networking](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html)
	AssignPublicIp pulumi.BoolPtrInput `pulumi:"assignPublicIp"`
	// The security groups associated with the task or service. If you do not specify a security group, the default security group for the VPC is used.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// The subnets associated with the task or service.
	Subnets pulumi.StringArrayInput `pulumi:"subnets"`
}

func (EventTargetEcsTargetNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetEcsTargetNetworkConfiguration)(nil)).Elem()
}

func (i EventTargetEcsTargetNetworkConfigurationArgs) ToEventTargetEcsTargetNetworkConfigurationOutput() EventTargetEcsTargetNetworkConfigurationOutput {
	return i.ToEventTargetEcsTargetNetworkConfigurationOutputWithContext(context.Background())
}

func (i EventTargetEcsTargetNetworkConfigurationArgs) ToEventTargetEcsTargetNetworkConfigurationOutputWithContext(ctx context.Context) EventTargetEcsTargetNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetEcsTargetNetworkConfigurationOutput)
}

func (i EventTargetEcsTargetNetworkConfigurationArgs) ToEventTargetEcsTargetNetworkConfigurationPtrOutput() EventTargetEcsTargetNetworkConfigurationPtrOutput {
	return i.ToEventTargetEcsTargetNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i EventTargetEcsTargetNetworkConfigurationArgs) ToEventTargetEcsTargetNetworkConfigurationPtrOutputWithContext(ctx context.Context) EventTargetEcsTargetNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetEcsTargetNetworkConfigurationOutput).ToEventTargetEcsTargetNetworkConfigurationPtrOutputWithContext(ctx)
}

// EventTargetEcsTargetNetworkConfigurationPtrInput is an input type that accepts EventTargetEcsTargetNetworkConfigurationArgs, EventTargetEcsTargetNetworkConfigurationPtr and EventTargetEcsTargetNetworkConfigurationPtrOutput values.
// You can construct a concrete instance of `EventTargetEcsTargetNetworkConfigurationPtrInput` via:
//
//	        EventTargetEcsTargetNetworkConfigurationArgs{...}
//
//	or:
//
//	        nil
type EventTargetEcsTargetNetworkConfigurationPtrInput interface {
	pulumi.Input

	ToEventTargetEcsTargetNetworkConfigurationPtrOutput() EventTargetEcsTargetNetworkConfigurationPtrOutput
	ToEventTargetEcsTargetNetworkConfigurationPtrOutputWithContext(context.Context) EventTargetEcsTargetNetworkConfigurationPtrOutput
}

type eventTargetEcsTargetNetworkConfigurationPtrType EventTargetEcsTargetNetworkConfigurationArgs

func EventTargetEcsTargetNetworkConfigurationPtr(v *EventTargetEcsTargetNetworkConfigurationArgs) EventTargetEcsTargetNetworkConfigurationPtrInput {
	return (*eventTargetEcsTargetNetworkConfigurationPtrType)(v)
}

func (*eventTargetEcsTargetNetworkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTargetEcsTargetNetworkConfiguration)(nil)).Elem()
}

func (i *eventTargetEcsTargetNetworkConfigurationPtrType) ToEventTargetEcsTargetNetworkConfigurationPtrOutput() EventTargetEcsTargetNetworkConfigurationPtrOutput {
	return i.ToEventTargetEcsTargetNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i *eventTargetEcsTargetNetworkConfigurationPtrType) ToEventTargetEcsTargetNetworkConfigurationPtrOutputWithContext(ctx context.Context) EventTargetEcsTargetNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetEcsTargetNetworkConfigurationPtrOutput)
}

type EventTargetEcsTargetNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (EventTargetEcsTargetNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetEcsTargetNetworkConfiguration)(nil)).Elem()
}

func (o EventTargetEcsTargetNetworkConfigurationOutput) ToEventTargetEcsTargetNetworkConfigurationOutput() EventTargetEcsTargetNetworkConfigurationOutput {
	return o
}

func (o EventTargetEcsTargetNetworkConfigurationOutput) ToEventTargetEcsTargetNetworkConfigurationOutputWithContext(ctx context.Context) EventTargetEcsTargetNetworkConfigurationOutput {
	return o
}

func (o EventTargetEcsTargetNetworkConfigurationOutput) ToEventTargetEcsTargetNetworkConfigurationPtrOutput() EventTargetEcsTargetNetworkConfigurationPtrOutput {
	return o.ToEventTargetEcsTargetNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (o EventTargetEcsTargetNetworkConfigurationOutput) ToEventTargetEcsTargetNetworkConfigurationPtrOutputWithContext(ctx context.Context) EventTargetEcsTargetNetworkConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventTargetEcsTargetNetworkConfiguration) *EventTargetEcsTargetNetworkConfiguration {
		return &v
	}).(EventTargetEcsTargetNetworkConfigurationPtrOutput)
}

// Assign a public IP address to the ENI (Fargate launch type only). Valid values are `true` or `false`. Defaults to `false`.
//
// For more information, see [Task Networking](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html)
func (o EventTargetEcsTargetNetworkConfigurationOutput) AssignPublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EventTargetEcsTargetNetworkConfiguration) *bool { return v.AssignPublicIp }).(pulumi.BoolPtrOutput)
}

// The security groups associated with the task or service. If you do not specify a security group, the default security group for the VPC is used.
func (o EventTargetEcsTargetNetworkConfigurationOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EventTargetEcsTargetNetworkConfiguration) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// The subnets associated with the task or service.
func (o EventTargetEcsTargetNetworkConfigurationOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EventTargetEcsTargetNetworkConfiguration) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

type EventTargetEcsTargetNetworkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (EventTargetEcsTargetNetworkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTargetEcsTargetNetworkConfiguration)(nil)).Elem()
}

func (o EventTargetEcsTargetNetworkConfigurationPtrOutput) ToEventTargetEcsTargetNetworkConfigurationPtrOutput() EventTargetEcsTargetNetworkConfigurationPtrOutput {
	return o
}

func (o EventTargetEcsTargetNetworkConfigurationPtrOutput) ToEventTargetEcsTargetNetworkConfigurationPtrOutputWithContext(ctx context.Context) EventTargetEcsTargetNetworkConfigurationPtrOutput {
	return o
}

func (o EventTargetEcsTargetNetworkConfigurationPtrOutput) Elem() EventTargetEcsTargetNetworkConfigurationOutput {
	return o.ApplyT(func(v *EventTargetEcsTargetNetworkConfiguration) EventTargetEcsTargetNetworkConfiguration {
		if v != nil {
			return *v
		}
		var ret EventTargetEcsTargetNetworkConfiguration
		return ret
	}).(EventTargetEcsTargetNetworkConfigurationOutput)
}

// Assign a public IP address to the ENI (Fargate launch type only). Valid values are `true` or `false`. Defaults to `false`.
//
// For more information, see [Task Networking](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-networking.html)
func (o EventTargetEcsTargetNetworkConfigurationPtrOutput) AssignPublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EventTargetEcsTargetNetworkConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.AssignPublicIp
	}).(pulumi.BoolPtrOutput)
}

// The security groups associated with the task or service. If you do not specify a security group, the default security group for the VPC is used.
func (o EventTargetEcsTargetNetworkConfigurationPtrOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EventTargetEcsTargetNetworkConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroups
	}).(pulumi.StringArrayOutput)
}

// The subnets associated with the task or service.
func (o EventTargetEcsTargetNetworkConfigurationPtrOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EventTargetEcsTargetNetworkConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(pulumi.StringArrayOutput)
}

type EventTargetEcsTargetOrderedPlacementStrategy struct {
	// The field to apply the placement strategy against. For the `spread` placement strategy, valid values are `instanceId` (or `host`, which has the same effect), or any platform or custom attribute that is applied to a container instance, such as `attribute:ecs.availability-zone`. For the `binpack` placement strategy, valid values are `cpu` and `memory`. For the `random` placement strategy, this field is not used. For more information, see [Amazon ECS task placement strategies](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html).
	Field *string `pulumi:"field"`
	// Type of placement strategy. The only valid values at this time are `binpack`, `random` and `spread`.
	Type string `pulumi:"type"`
}

// EventTargetEcsTargetOrderedPlacementStrategyInput is an input type that accepts EventTargetEcsTargetOrderedPlacementStrategyArgs and EventTargetEcsTargetOrderedPlacementStrategyOutput values.
// You can construct a concrete instance of `EventTargetEcsTargetOrderedPlacementStrategyInput` via:
//
//	EventTargetEcsTargetOrderedPlacementStrategyArgs{...}
type EventTargetEcsTargetOrderedPlacementStrategyInput interface {
	pulumi.Input

	ToEventTargetEcsTargetOrderedPlacementStrategyOutput() EventTargetEcsTargetOrderedPlacementStrategyOutput
	ToEventTargetEcsTargetOrderedPlacementStrategyOutputWithContext(context.Context) EventTargetEcsTargetOrderedPlacementStrategyOutput
}

type EventTargetEcsTargetOrderedPlacementStrategyArgs struct {
	// The field to apply the placement strategy against. For the `spread` placement strategy, valid values are `instanceId` (or `host`, which has the same effect), or any platform or custom attribute that is applied to a container instance, such as `attribute:ecs.availability-zone`. For the `binpack` placement strategy, valid values are `cpu` and `memory`. For the `random` placement strategy, this field is not used. For more information, see [Amazon ECS task placement strategies](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html).
	Field pulumi.StringPtrInput `pulumi:"field"`
	// Type of placement strategy. The only valid values at this time are `binpack`, `random` and `spread`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (EventTargetEcsTargetOrderedPlacementStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetEcsTargetOrderedPlacementStrategy)(nil)).Elem()
}

func (i EventTargetEcsTargetOrderedPlacementStrategyArgs) ToEventTargetEcsTargetOrderedPlacementStrategyOutput() EventTargetEcsTargetOrderedPlacementStrategyOutput {
	return i.ToEventTargetEcsTargetOrderedPlacementStrategyOutputWithContext(context.Background())
}

func (i EventTargetEcsTargetOrderedPlacementStrategyArgs) ToEventTargetEcsTargetOrderedPlacementStrategyOutputWithContext(ctx context.Context) EventTargetEcsTargetOrderedPlacementStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetEcsTargetOrderedPlacementStrategyOutput)
}

// EventTargetEcsTargetOrderedPlacementStrategyArrayInput is an input type that accepts EventTargetEcsTargetOrderedPlacementStrategyArray and EventTargetEcsTargetOrderedPlacementStrategyArrayOutput values.
// You can construct a concrete instance of `EventTargetEcsTargetOrderedPlacementStrategyArrayInput` via:
//
//	EventTargetEcsTargetOrderedPlacementStrategyArray{ EventTargetEcsTargetOrderedPlacementStrategyArgs{...} }
type EventTargetEcsTargetOrderedPlacementStrategyArrayInput interface {
	pulumi.Input

	ToEventTargetEcsTargetOrderedPlacementStrategyArrayOutput() EventTargetEcsTargetOrderedPlacementStrategyArrayOutput
	ToEventTargetEcsTargetOrderedPlacementStrategyArrayOutputWithContext(context.Context) EventTargetEcsTargetOrderedPlacementStrategyArrayOutput
}

type EventTargetEcsTargetOrderedPlacementStrategyArray []EventTargetEcsTargetOrderedPlacementStrategyInput

func (EventTargetEcsTargetOrderedPlacementStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventTargetEcsTargetOrderedPlacementStrategy)(nil)).Elem()
}

func (i EventTargetEcsTargetOrderedPlacementStrategyArray) ToEventTargetEcsTargetOrderedPlacementStrategyArrayOutput() EventTargetEcsTargetOrderedPlacementStrategyArrayOutput {
	return i.ToEventTargetEcsTargetOrderedPlacementStrategyArrayOutputWithContext(context.Background())
}

func (i EventTargetEcsTargetOrderedPlacementStrategyArray) ToEventTargetEcsTargetOrderedPlacementStrategyArrayOutputWithContext(ctx context.Context) EventTargetEcsTargetOrderedPlacementStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetEcsTargetOrderedPlacementStrategyArrayOutput)
}

type EventTargetEcsTargetOrderedPlacementStrategyOutput struct{ *pulumi.OutputState }

func (EventTargetEcsTargetOrderedPlacementStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetEcsTargetOrderedPlacementStrategy)(nil)).Elem()
}

func (o EventTargetEcsTargetOrderedPlacementStrategyOutput) ToEventTargetEcsTargetOrderedPlacementStrategyOutput() EventTargetEcsTargetOrderedPlacementStrategyOutput {
	return o
}

func (o EventTargetEcsTargetOrderedPlacementStrategyOutput) ToEventTargetEcsTargetOrderedPlacementStrategyOutputWithContext(ctx context.Context) EventTargetEcsTargetOrderedPlacementStrategyOutput {
	return o
}

// The field to apply the placement strategy against. For the `spread` placement strategy, valid values are `instanceId` (or `host`, which has the same effect), or any platform or custom attribute that is applied to a container instance, such as `attribute:ecs.availability-zone`. For the `binpack` placement strategy, valid values are `cpu` and `memory`. For the `random` placement strategy, this field is not used. For more information, see [Amazon ECS task placement strategies](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement-strategies.html).
func (o EventTargetEcsTargetOrderedPlacementStrategyOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventTargetEcsTargetOrderedPlacementStrategy) *string { return v.Field }).(pulumi.StringPtrOutput)
}

// Type of placement strategy. The only valid values at this time are `binpack`, `random` and `spread`.
func (o EventTargetEcsTargetOrderedPlacementStrategyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EventTargetEcsTargetOrderedPlacementStrategy) string { return v.Type }).(pulumi.StringOutput)
}

type EventTargetEcsTargetOrderedPlacementStrategyArrayOutput struct{ *pulumi.OutputState }

func (EventTargetEcsTargetOrderedPlacementStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventTargetEcsTargetOrderedPlacementStrategy)(nil)).Elem()
}

func (o EventTargetEcsTargetOrderedPlacementStrategyArrayOutput) ToEventTargetEcsTargetOrderedPlacementStrategyArrayOutput() EventTargetEcsTargetOrderedPlacementStrategyArrayOutput {
	return o
}

func (o EventTargetEcsTargetOrderedPlacementStrategyArrayOutput) ToEventTargetEcsTargetOrderedPlacementStrategyArrayOutputWithContext(ctx context.Context) EventTargetEcsTargetOrderedPlacementStrategyArrayOutput {
	return o
}

func (o EventTargetEcsTargetOrderedPlacementStrategyArrayOutput) Index(i pulumi.IntInput) EventTargetEcsTargetOrderedPlacementStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventTargetEcsTargetOrderedPlacementStrategy {
		return vs[0].([]EventTargetEcsTargetOrderedPlacementStrategy)[vs[1].(int)]
	}).(EventTargetEcsTargetOrderedPlacementStrategyOutput)
}

type EventTargetEcsTargetPlacementConstraint struct {
	// Cluster Query Language expression to apply to the constraint. Does not need to be specified for the `distinctInstance` type. For more information, see [Cluster Query Language in the Amazon EC2 Container Service Developer Guide](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html).
	Expression *string `pulumi:"expression"`
	// Type of constraint. The only valid values at this time are `memberOf` and `distinctInstance`.
	Type string `pulumi:"type"`
}

// EventTargetEcsTargetPlacementConstraintInput is an input type that accepts EventTargetEcsTargetPlacementConstraintArgs and EventTargetEcsTargetPlacementConstraintOutput values.
// You can construct a concrete instance of `EventTargetEcsTargetPlacementConstraintInput` via:
//
//	EventTargetEcsTargetPlacementConstraintArgs{...}
type EventTargetEcsTargetPlacementConstraintInput interface {
	pulumi.Input

	ToEventTargetEcsTargetPlacementConstraintOutput() EventTargetEcsTargetPlacementConstraintOutput
	ToEventTargetEcsTargetPlacementConstraintOutputWithContext(context.Context) EventTargetEcsTargetPlacementConstraintOutput
}

type EventTargetEcsTargetPlacementConstraintArgs struct {
	// Cluster Query Language expression to apply to the constraint. Does not need to be specified for the `distinctInstance` type. For more information, see [Cluster Query Language in the Amazon EC2 Container Service Developer Guide](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html).
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// Type of constraint. The only valid values at this time are `memberOf` and `distinctInstance`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (EventTargetEcsTargetPlacementConstraintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetEcsTargetPlacementConstraint)(nil)).Elem()
}

func (i EventTargetEcsTargetPlacementConstraintArgs) ToEventTargetEcsTargetPlacementConstraintOutput() EventTargetEcsTargetPlacementConstraintOutput {
	return i.ToEventTargetEcsTargetPlacementConstraintOutputWithContext(context.Background())
}

func (i EventTargetEcsTargetPlacementConstraintArgs) ToEventTargetEcsTargetPlacementConstraintOutputWithContext(ctx context.Context) EventTargetEcsTargetPlacementConstraintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetEcsTargetPlacementConstraintOutput)
}

// EventTargetEcsTargetPlacementConstraintArrayInput is an input type that accepts EventTargetEcsTargetPlacementConstraintArray and EventTargetEcsTargetPlacementConstraintArrayOutput values.
// You can construct a concrete instance of `EventTargetEcsTargetPlacementConstraintArrayInput` via:
//
//	EventTargetEcsTargetPlacementConstraintArray{ EventTargetEcsTargetPlacementConstraintArgs{...} }
type EventTargetEcsTargetPlacementConstraintArrayInput interface {
	pulumi.Input

	ToEventTargetEcsTargetPlacementConstraintArrayOutput() EventTargetEcsTargetPlacementConstraintArrayOutput
	ToEventTargetEcsTargetPlacementConstraintArrayOutputWithContext(context.Context) EventTargetEcsTargetPlacementConstraintArrayOutput
}

type EventTargetEcsTargetPlacementConstraintArray []EventTargetEcsTargetPlacementConstraintInput

func (EventTargetEcsTargetPlacementConstraintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventTargetEcsTargetPlacementConstraint)(nil)).Elem()
}

func (i EventTargetEcsTargetPlacementConstraintArray) ToEventTargetEcsTargetPlacementConstraintArrayOutput() EventTargetEcsTargetPlacementConstraintArrayOutput {
	return i.ToEventTargetEcsTargetPlacementConstraintArrayOutputWithContext(context.Background())
}

func (i EventTargetEcsTargetPlacementConstraintArray) ToEventTargetEcsTargetPlacementConstraintArrayOutputWithContext(ctx context.Context) EventTargetEcsTargetPlacementConstraintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetEcsTargetPlacementConstraintArrayOutput)
}

type EventTargetEcsTargetPlacementConstraintOutput struct{ *pulumi.OutputState }

func (EventTargetEcsTargetPlacementConstraintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetEcsTargetPlacementConstraint)(nil)).Elem()
}

func (o EventTargetEcsTargetPlacementConstraintOutput) ToEventTargetEcsTargetPlacementConstraintOutput() EventTargetEcsTargetPlacementConstraintOutput {
	return o
}

func (o EventTargetEcsTargetPlacementConstraintOutput) ToEventTargetEcsTargetPlacementConstraintOutputWithContext(ctx context.Context) EventTargetEcsTargetPlacementConstraintOutput {
	return o
}

// Cluster Query Language expression to apply to the constraint. Does not need to be specified for the `distinctInstance` type. For more information, see [Cluster Query Language in the Amazon EC2 Container Service Developer Guide](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html).
func (o EventTargetEcsTargetPlacementConstraintOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventTargetEcsTargetPlacementConstraint) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// Type of constraint. The only valid values at this time are `memberOf` and `distinctInstance`.
func (o EventTargetEcsTargetPlacementConstraintOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EventTargetEcsTargetPlacementConstraint) string { return v.Type }).(pulumi.StringOutput)
}

type EventTargetEcsTargetPlacementConstraintArrayOutput struct{ *pulumi.OutputState }

func (EventTargetEcsTargetPlacementConstraintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventTargetEcsTargetPlacementConstraint)(nil)).Elem()
}

func (o EventTargetEcsTargetPlacementConstraintArrayOutput) ToEventTargetEcsTargetPlacementConstraintArrayOutput() EventTargetEcsTargetPlacementConstraintArrayOutput {
	return o
}

func (o EventTargetEcsTargetPlacementConstraintArrayOutput) ToEventTargetEcsTargetPlacementConstraintArrayOutputWithContext(ctx context.Context) EventTargetEcsTargetPlacementConstraintArrayOutput {
	return o
}

func (o EventTargetEcsTargetPlacementConstraintArrayOutput) Index(i pulumi.IntInput) EventTargetEcsTargetPlacementConstraintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventTargetEcsTargetPlacementConstraint {
		return vs[0].([]EventTargetEcsTargetPlacementConstraint)[vs[1].(int)]
	}).(EventTargetEcsTargetPlacementConstraintOutput)
}

type EventTargetHttpTarget struct {
	// Enables you to specify HTTP headers to add to the request.
	HeaderParameters map[string]string `pulumi:"headerParameters"`
	// The list of values that correspond sequentially to any path variables in your endpoint ARN (for example `arn:aws:execute-api:us-east-1:123456:myapi/*/POST/pets/*`).
	PathParameterValues []string `pulumi:"pathParameterValues"`
	// Represents keys/values of query string parameters that are appended to the invoked endpoint.
	QueryStringParameters map[string]string `pulumi:"queryStringParameters"`
}

// EventTargetHttpTargetInput is an input type that accepts EventTargetHttpTargetArgs and EventTargetHttpTargetOutput values.
// You can construct a concrete instance of `EventTargetHttpTargetInput` via:
//
//	EventTargetHttpTargetArgs{...}
type EventTargetHttpTargetInput interface {
	pulumi.Input

	ToEventTargetHttpTargetOutput() EventTargetHttpTargetOutput
	ToEventTargetHttpTargetOutputWithContext(context.Context) EventTargetHttpTargetOutput
}

type EventTargetHttpTargetArgs struct {
	// Enables you to specify HTTP headers to add to the request.
	HeaderParameters pulumi.StringMapInput `pulumi:"headerParameters"`
	// The list of values that correspond sequentially to any path variables in your endpoint ARN (for example `arn:aws:execute-api:us-east-1:123456:myapi/*/POST/pets/*`).
	PathParameterValues pulumi.StringArrayInput `pulumi:"pathParameterValues"`
	// Represents keys/values of query string parameters that are appended to the invoked endpoint.
	QueryStringParameters pulumi.StringMapInput `pulumi:"queryStringParameters"`
}

func (EventTargetHttpTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetHttpTarget)(nil)).Elem()
}

func (i EventTargetHttpTargetArgs) ToEventTargetHttpTargetOutput() EventTargetHttpTargetOutput {
	return i.ToEventTargetHttpTargetOutputWithContext(context.Background())
}

func (i EventTargetHttpTargetArgs) ToEventTargetHttpTargetOutputWithContext(ctx context.Context) EventTargetHttpTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetHttpTargetOutput)
}

func (i EventTargetHttpTargetArgs) ToEventTargetHttpTargetPtrOutput() EventTargetHttpTargetPtrOutput {
	return i.ToEventTargetHttpTargetPtrOutputWithContext(context.Background())
}

func (i EventTargetHttpTargetArgs) ToEventTargetHttpTargetPtrOutputWithContext(ctx context.Context) EventTargetHttpTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetHttpTargetOutput).ToEventTargetHttpTargetPtrOutputWithContext(ctx)
}

// EventTargetHttpTargetPtrInput is an input type that accepts EventTargetHttpTargetArgs, EventTargetHttpTargetPtr and EventTargetHttpTargetPtrOutput values.
// You can construct a concrete instance of `EventTargetHttpTargetPtrInput` via:
//
//	        EventTargetHttpTargetArgs{...}
//
//	or:
//
//	        nil
type EventTargetHttpTargetPtrInput interface {
	pulumi.Input

	ToEventTargetHttpTargetPtrOutput() EventTargetHttpTargetPtrOutput
	ToEventTargetHttpTargetPtrOutputWithContext(context.Context) EventTargetHttpTargetPtrOutput
}

type eventTargetHttpTargetPtrType EventTargetHttpTargetArgs

func EventTargetHttpTargetPtr(v *EventTargetHttpTargetArgs) EventTargetHttpTargetPtrInput {
	return (*eventTargetHttpTargetPtrType)(v)
}

func (*eventTargetHttpTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTargetHttpTarget)(nil)).Elem()
}

func (i *eventTargetHttpTargetPtrType) ToEventTargetHttpTargetPtrOutput() EventTargetHttpTargetPtrOutput {
	return i.ToEventTargetHttpTargetPtrOutputWithContext(context.Background())
}

func (i *eventTargetHttpTargetPtrType) ToEventTargetHttpTargetPtrOutputWithContext(ctx context.Context) EventTargetHttpTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetHttpTargetPtrOutput)
}

type EventTargetHttpTargetOutput struct{ *pulumi.OutputState }

func (EventTargetHttpTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetHttpTarget)(nil)).Elem()
}

func (o EventTargetHttpTargetOutput) ToEventTargetHttpTargetOutput() EventTargetHttpTargetOutput {
	return o
}

func (o EventTargetHttpTargetOutput) ToEventTargetHttpTargetOutputWithContext(ctx context.Context) EventTargetHttpTargetOutput {
	return o
}

func (o EventTargetHttpTargetOutput) ToEventTargetHttpTargetPtrOutput() EventTargetHttpTargetPtrOutput {
	return o.ToEventTargetHttpTargetPtrOutputWithContext(context.Background())
}

func (o EventTargetHttpTargetOutput) ToEventTargetHttpTargetPtrOutputWithContext(ctx context.Context) EventTargetHttpTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventTargetHttpTarget) *EventTargetHttpTarget {
		return &v
	}).(EventTargetHttpTargetPtrOutput)
}

// Enables you to specify HTTP headers to add to the request.
func (o EventTargetHttpTargetOutput) HeaderParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v EventTargetHttpTarget) map[string]string { return v.HeaderParameters }).(pulumi.StringMapOutput)
}

// The list of values that correspond sequentially to any path variables in your endpoint ARN (for example `arn:aws:execute-api:us-east-1:123456:myapi/*/POST/pets/*`).
func (o EventTargetHttpTargetOutput) PathParameterValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EventTargetHttpTarget) []string { return v.PathParameterValues }).(pulumi.StringArrayOutput)
}

// Represents keys/values of query string parameters that are appended to the invoked endpoint.
func (o EventTargetHttpTargetOutput) QueryStringParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v EventTargetHttpTarget) map[string]string { return v.QueryStringParameters }).(pulumi.StringMapOutput)
}

type EventTargetHttpTargetPtrOutput struct{ *pulumi.OutputState }

func (EventTargetHttpTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTargetHttpTarget)(nil)).Elem()
}

func (o EventTargetHttpTargetPtrOutput) ToEventTargetHttpTargetPtrOutput() EventTargetHttpTargetPtrOutput {
	return o
}

func (o EventTargetHttpTargetPtrOutput) ToEventTargetHttpTargetPtrOutputWithContext(ctx context.Context) EventTargetHttpTargetPtrOutput {
	return o
}

func (o EventTargetHttpTargetPtrOutput) Elem() EventTargetHttpTargetOutput {
	return o.ApplyT(func(v *EventTargetHttpTarget) EventTargetHttpTarget {
		if v != nil {
			return *v
		}
		var ret EventTargetHttpTarget
		return ret
	}).(EventTargetHttpTargetOutput)
}

// Enables you to specify HTTP headers to add to the request.
func (o EventTargetHttpTargetPtrOutput) HeaderParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EventTargetHttpTarget) map[string]string {
		if v == nil {
			return nil
		}
		return v.HeaderParameters
	}).(pulumi.StringMapOutput)
}

// The list of values that correspond sequentially to any path variables in your endpoint ARN (for example `arn:aws:execute-api:us-east-1:123456:myapi/*/POST/pets/*`).
func (o EventTargetHttpTargetPtrOutput) PathParameterValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *EventTargetHttpTarget) []string {
		if v == nil {
			return nil
		}
		return v.PathParameterValues
	}).(pulumi.StringArrayOutput)
}

// Represents keys/values of query string parameters that are appended to the invoked endpoint.
func (o EventTargetHttpTargetPtrOutput) QueryStringParameters() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EventTargetHttpTarget) map[string]string {
		if v == nil {
			return nil
		}
		return v.QueryStringParameters
	}).(pulumi.StringMapOutput)
}

type EventTargetInputTransformer struct {
	// Key value pairs specified in the form of JSONPath (for example, time = $.time)
	// * You can have as many as 100 key-value pairs.
	// * You must use JSON dot notation, not bracket notation.
	// * The keys can't start with "AWS".
	InputPaths map[string]string `pulumi:"inputPaths"`
	// Template to customize data sent to the target. Must be valid JSON. To send a string value, the string value must include double quotes.
	InputTemplate string `pulumi:"inputTemplate"`
}

// EventTargetInputTransformerInput is an input type that accepts EventTargetInputTransformerArgs and EventTargetInputTransformerOutput values.
// You can construct a concrete instance of `EventTargetInputTransformerInput` via:
//
//	EventTargetInputTransformerArgs{...}
type EventTargetInputTransformerInput interface {
	pulumi.Input

	ToEventTargetInputTransformerOutput() EventTargetInputTransformerOutput
	ToEventTargetInputTransformerOutputWithContext(context.Context) EventTargetInputTransformerOutput
}

type EventTargetInputTransformerArgs struct {
	// Key value pairs specified in the form of JSONPath (for example, time = $.time)
	// * You can have as many as 100 key-value pairs.
	// * You must use JSON dot notation, not bracket notation.
	// * The keys can't start with "AWS".
	InputPaths pulumi.StringMapInput `pulumi:"inputPaths"`
	// Template to customize data sent to the target. Must be valid JSON. To send a string value, the string value must include double quotes.
	InputTemplate pulumi.StringInput `pulumi:"inputTemplate"`
}

func (EventTargetInputTransformerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetInputTransformer)(nil)).Elem()
}

func (i EventTargetInputTransformerArgs) ToEventTargetInputTransformerOutput() EventTargetInputTransformerOutput {
	return i.ToEventTargetInputTransformerOutputWithContext(context.Background())
}

func (i EventTargetInputTransformerArgs) ToEventTargetInputTransformerOutputWithContext(ctx context.Context) EventTargetInputTransformerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetInputTransformerOutput)
}

func (i EventTargetInputTransformerArgs) ToEventTargetInputTransformerPtrOutput() EventTargetInputTransformerPtrOutput {
	return i.ToEventTargetInputTransformerPtrOutputWithContext(context.Background())
}

func (i EventTargetInputTransformerArgs) ToEventTargetInputTransformerPtrOutputWithContext(ctx context.Context) EventTargetInputTransformerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetInputTransformerOutput).ToEventTargetInputTransformerPtrOutputWithContext(ctx)
}

// EventTargetInputTransformerPtrInput is an input type that accepts EventTargetInputTransformerArgs, EventTargetInputTransformerPtr and EventTargetInputTransformerPtrOutput values.
// You can construct a concrete instance of `EventTargetInputTransformerPtrInput` via:
//
//	        EventTargetInputTransformerArgs{...}
//
//	or:
//
//	        nil
type EventTargetInputTransformerPtrInput interface {
	pulumi.Input

	ToEventTargetInputTransformerPtrOutput() EventTargetInputTransformerPtrOutput
	ToEventTargetInputTransformerPtrOutputWithContext(context.Context) EventTargetInputTransformerPtrOutput
}

type eventTargetInputTransformerPtrType EventTargetInputTransformerArgs

func EventTargetInputTransformerPtr(v *EventTargetInputTransformerArgs) EventTargetInputTransformerPtrInput {
	return (*eventTargetInputTransformerPtrType)(v)
}

func (*eventTargetInputTransformerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTargetInputTransformer)(nil)).Elem()
}

func (i *eventTargetInputTransformerPtrType) ToEventTargetInputTransformerPtrOutput() EventTargetInputTransformerPtrOutput {
	return i.ToEventTargetInputTransformerPtrOutputWithContext(context.Background())
}

func (i *eventTargetInputTransformerPtrType) ToEventTargetInputTransformerPtrOutputWithContext(ctx context.Context) EventTargetInputTransformerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetInputTransformerPtrOutput)
}

type EventTargetInputTransformerOutput struct{ *pulumi.OutputState }

func (EventTargetInputTransformerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetInputTransformer)(nil)).Elem()
}

func (o EventTargetInputTransformerOutput) ToEventTargetInputTransformerOutput() EventTargetInputTransformerOutput {
	return o
}

func (o EventTargetInputTransformerOutput) ToEventTargetInputTransformerOutputWithContext(ctx context.Context) EventTargetInputTransformerOutput {
	return o
}

func (o EventTargetInputTransformerOutput) ToEventTargetInputTransformerPtrOutput() EventTargetInputTransformerPtrOutput {
	return o.ToEventTargetInputTransformerPtrOutputWithContext(context.Background())
}

func (o EventTargetInputTransformerOutput) ToEventTargetInputTransformerPtrOutputWithContext(ctx context.Context) EventTargetInputTransformerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventTargetInputTransformer) *EventTargetInputTransformer {
		return &v
	}).(EventTargetInputTransformerPtrOutput)
}

// Key value pairs specified in the form of JSONPath (for example, time = $.time)
// * You can have as many as 100 key-value pairs.
// * You must use JSON dot notation, not bracket notation.
// * The keys can't start with "AWS".
func (o EventTargetInputTransformerOutput) InputPaths() pulumi.StringMapOutput {
	return o.ApplyT(func(v EventTargetInputTransformer) map[string]string { return v.InputPaths }).(pulumi.StringMapOutput)
}

// Template to customize data sent to the target. Must be valid JSON. To send a string value, the string value must include double quotes.
func (o EventTargetInputTransformerOutput) InputTemplate() pulumi.StringOutput {
	return o.ApplyT(func(v EventTargetInputTransformer) string { return v.InputTemplate }).(pulumi.StringOutput)
}

type EventTargetInputTransformerPtrOutput struct{ *pulumi.OutputState }

func (EventTargetInputTransformerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTargetInputTransformer)(nil)).Elem()
}

func (o EventTargetInputTransformerPtrOutput) ToEventTargetInputTransformerPtrOutput() EventTargetInputTransformerPtrOutput {
	return o
}

func (o EventTargetInputTransformerPtrOutput) ToEventTargetInputTransformerPtrOutputWithContext(ctx context.Context) EventTargetInputTransformerPtrOutput {
	return o
}

func (o EventTargetInputTransformerPtrOutput) Elem() EventTargetInputTransformerOutput {
	return o.ApplyT(func(v *EventTargetInputTransformer) EventTargetInputTransformer {
		if v != nil {
			return *v
		}
		var ret EventTargetInputTransformer
		return ret
	}).(EventTargetInputTransformerOutput)
}

// Key value pairs specified in the form of JSONPath (for example, time = $.time)
// * You can have as many as 100 key-value pairs.
// * You must use JSON dot notation, not bracket notation.
// * The keys can't start with "AWS".
func (o EventTargetInputTransformerPtrOutput) InputPaths() pulumi.StringMapOutput {
	return o.ApplyT(func(v *EventTargetInputTransformer) map[string]string {
		if v == nil {
			return nil
		}
		return v.InputPaths
	}).(pulumi.StringMapOutput)
}

// Template to customize data sent to the target. Must be valid JSON. To send a string value, the string value must include double quotes.
func (o EventTargetInputTransformerPtrOutput) InputTemplate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventTargetInputTransformer) *string {
		if v == nil {
			return nil
		}
		return &v.InputTemplate
	}).(pulumi.StringPtrOutput)
}

type EventTargetKinesisTarget struct {
	// The JSON path to be extracted from the event and used as the partition key.
	PartitionKeyPath *string `pulumi:"partitionKeyPath"`
}

// EventTargetKinesisTargetInput is an input type that accepts EventTargetKinesisTargetArgs and EventTargetKinesisTargetOutput values.
// You can construct a concrete instance of `EventTargetKinesisTargetInput` via:
//
//	EventTargetKinesisTargetArgs{...}
type EventTargetKinesisTargetInput interface {
	pulumi.Input

	ToEventTargetKinesisTargetOutput() EventTargetKinesisTargetOutput
	ToEventTargetKinesisTargetOutputWithContext(context.Context) EventTargetKinesisTargetOutput
}

type EventTargetKinesisTargetArgs struct {
	// The JSON path to be extracted from the event and used as the partition key.
	PartitionKeyPath pulumi.StringPtrInput `pulumi:"partitionKeyPath"`
}

func (EventTargetKinesisTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetKinesisTarget)(nil)).Elem()
}

func (i EventTargetKinesisTargetArgs) ToEventTargetKinesisTargetOutput() EventTargetKinesisTargetOutput {
	return i.ToEventTargetKinesisTargetOutputWithContext(context.Background())
}

func (i EventTargetKinesisTargetArgs) ToEventTargetKinesisTargetOutputWithContext(ctx context.Context) EventTargetKinesisTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetKinesisTargetOutput)
}

func (i EventTargetKinesisTargetArgs) ToEventTargetKinesisTargetPtrOutput() EventTargetKinesisTargetPtrOutput {
	return i.ToEventTargetKinesisTargetPtrOutputWithContext(context.Background())
}

func (i EventTargetKinesisTargetArgs) ToEventTargetKinesisTargetPtrOutputWithContext(ctx context.Context) EventTargetKinesisTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetKinesisTargetOutput).ToEventTargetKinesisTargetPtrOutputWithContext(ctx)
}

// EventTargetKinesisTargetPtrInput is an input type that accepts EventTargetKinesisTargetArgs, EventTargetKinesisTargetPtr and EventTargetKinesisTargetPtrOutput values.
// You can construct a concrete instance of `EventTargetKinesisTargetPtrInput` via:
//
//	        EventTargetKinesisTargetArgs{...}
//
//	or:
//
//	        nil
type EventTargetKinesisTargetPtrInput interface {
	pulumi.Input

	ToEventTargetKinesisTargetPtrOutput() EventTargetKinesisTargetPtrOutput
	ToEventTargetKinesisTargetPtrOutputWithContext(context.Context) EventTargetKinesisTargetPtrOutput
}

type eventTargetKinesisTargetPtrType EventTargetKinesisTargetArgs

func EventTargetKinesisTargetPtr(v *EventTargetKinesisTargetArgs) EventTargetKinesisTargetPtrInput {
	return (*eventTargetKinesisTargetPtrType)(v)
}

func (*eventTargetKinesisTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTargetKinesisTarget)(nil)).Elem()
}

func (i *eventTargetKinesisTargetPtrType) ToEventTargetKinesisTargetPtrOutput() EventTargetKinesisTargetPtrOutput {
	return i.ToEventTargetKinesisTargetPtrOutputWithContext(context.Background())
}

func (i *eventTargetKinesisTargetPtrType) ToEventTargetKinesisTargetPtrOutputWithContext(ctx context.Context) EventTargetKinesisTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetKinesisTargetPtrOutput)
}

type EventTargetKinesisTargetOutput struct{ *pulumi.OutputState }

func (EventTargetKinesisTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetKinesisTarget)(nil)).Elem()
}

func (o EventTargetKinesisTargetOutput) ToEventTargetKinesisTargetOutput() EventTargetKinesisTargetOutput {
	return o
}

func (o EventTargetKinesisTargetOutput) ToEventTargetKinesisTargetOutputWithContext(ctx context.Context) EventTargetKinesisTargetOutput {
	return o
}

func (o EventTargetKinesisTargetOutput) ToEventTargetKinesisTargetPtrOutput() EventTargetKinesisTargetPtrOutput {
	return o.ToEventTargetKinesisTargetPtrOutputWithContext(context.Background())
}

func (o EventTargetKinesisTargetOutput) ToEventTargetKinesisTargetPtrOutputWithContext(ctx context.Context) EventTargetKinesisTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventTargetKinesisTarget) *EventTargetKinesisTarget {
		return &v
	}).(EventTargetKinesisTargetPtrOutput)
}

// The JSON path to be extracted from the event and used as the partition key.
func (o EventTargetKinesisTargetOutput) PartitionKeyPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventTargetKinesisTarget) *string { return v.PartitionKeyPath }).(pulumi.StringPtrOutput)
}

type EventTargetKinesisTargetPtrOutput struct{ *pulumi.OutputState }

func (EventTargetKinesisTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTargetKinesisTarget)(nil)).Elem()
}

func (o EventTargetKinesisTargetPtrOutput) ToEventTargetKinesisTargetPtrOutput() EventTargetKinesisTargetPtrOutput {
	return o
}

func (o EventTargetKinesisTargetPtrOutput) ToEventTargetKinesisTargetPtrOutputWithContext(ctx context.Context) EventTargetKinesisTargetPtrOutput {
	return o
}

func (o EventTargetKinesisTargetPtrOutput) Elem() EventTargetKinesisTargetOutput {
	return o.ApplyT(func(v *EventTargetKinesisTarget) EventTargetKinesisTarget {
		if v != nil {
			return *v
		}
		var ret EventTargetKinesisTarget
		return ret
	}).(EventTargetKinesisTargetOutput)
}

// The JSON path to be extracted from the event and used as the partition key.
func (o EventTargetKinesisTargetPtrOutput) PartitionKeyPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventTargetKinesisTarget) *string {
		if v == nil {
			return nil
		}
		return v.PartitionKeyPath
	}).(pulumi.StringPtrOutput)
}

type EventTargetRedshiftTarget struct {
	// The name of the database.
	Database string `pulumi:"database"`
	// The database user name.
	DbUser *string `pulumi:"dbUser"`
	// The name or ARN of the secret that enables access to the database.
	SecretsManagerArn *string `pulumi:"secretsManagerArn"`
	// The SQL statement text to run.
	Sql *string `pulumi:"sql"`
	// The name of the SQL statement.
	StatementName *string `pulumi:"statementName"`
	// Indicates whether to send an event back to EventBridge after the SQL statement runs.
	WithEvent *bool `pulumi:"withEvent"`
}

// EventTargetRedshiftTargetInput is an input type that accepts EventTargetRedshiftTargetArgs and EventTargetRedshiftTargetOutput values.
// You can construct a concrete instance of `EventTargetRedshiftTargetInput` via:
//
//	EventTargetRedshiftTargetArgs{...}
type EventTargetRedshiftTargetInput interface {
	pulumi.Input

	ToEventTargetRedshiftTargetOutput() EventTargetRedshiftTargetOutput
	ToEventTargetRedshiftTargetOutputWithContext(context.Context) EventTargetRedshiftTargetOutput
}

type EventTargetRedshiftTargetArgs struct {
	// The name of the database.
	Database pulumi.StringInput `pulumi:"database"`
	// The database user name.
	DbUser pulumi.StringPtrInput `pulumi:"dbUser"`
	// The name or ARN of the secret that enables access to the database.
	SecretsManagerArn pulumi.StringPtrInput `pulumi:"secretsManagerArn"`
	// The SQL statement text to run.
	Sql pulumi.StringPtrInput `pulumi:"sql"`
	// The name of the SQL statement.
	StatementName pulumi.StringPtrInput `pulumi:"statementName"`
	// Indicates whether to send an event back to EventBridge after the SQL statement runs.
	WithEvent pulumi.BoolPtrInput `pulumi:"withEvent"`
}

func (EventTargetRedshiftTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetRedshiftTarget)(nil)).Elem()
}

func (i EventTargetRedshiftTargetArgs) ToEventTargetRedshiftTargetOutput() EventTargetRedshiftTargetOutput {
	return i.ToEventTargetRedshiftTargetOutputWithContext(context.Background())
}

func (i EventTargetRedshiftTargetArgs) ToEventTargetRedshiftTargetOutputWithContext(ctx context.Context) EventTargetRedshiftTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetRedshiftTargetOutput)
}

func (i EventTargetRedshiftTargetArgs) ToEventTargetRedshiftTargetPtrOutput() EventTargetRedshiftTargetPtrOutput {
	return i.ToEventTargetRedshiftTargetPtrOutputWithContext(context.Background())
}

func (i EventTargetRedshiftTargetArgs) ToEventTargetRedshiftTargetPtrOutputWithContext(ctx context.Context) EventTargetRedshiftTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetRedshiftTargetOutput).ToEventTargetRedshiftTargetPtrOutputWithContext(ctx)
}

// EventTargetRedshiftTargetPtrInput is an input type that accepts EventTargetRedshiftTargetArgs, EventTargetRedshiftTargetPtr and EventTargetRedshiftTargetPtrOutput values.
// You can construct a concrete instance of `EventTargetRedshiftTargetPtrInput` via:
//
//	        EventTargetRedshiftTargetArgs{...}
//
//	or:
//
//	        nil
type EventTargetRedshiftTargetPtrInput interface {
	pulumi.Input

	ToEventTargetRedshiftTargetPtrOutput() EventTargetRedshiftTargetPtrOutput
	ToEventTargetRedshiftTargetPtrOutputWithContext(context.Context) EventTargetRedshiftTargetPtrOutput
}

type eventTargetRedshiftTargetPtrType EventTargetRedshiftTargetArgs

func EventTargetRedshiftTargetPtr(v *EventTargetRedshiftTargetArgs) EventTargetRedshiftTargetPtrInput {
	return (*eventTargetRedshiftTargetPtrType)(v)
}

func (*eventTargetRedshiftTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTargetRedshiftTarget)(nil)).Elem()
}

func (i *eventTargetRedshiftTargetPtrType) ToEventTargetRedshiftTargetPtrOutput() EventTargetRedshiftTargetPtrOutput {
	return i.ToEventTargetRedshiftTargetPtrOutputWithContext(context.Background())
}

func (i *eventTargetRedshiftTargetPtrType) ToEventTargetRedshiftTargetPtrOutputWithContext(ctx context.Context) EventTargetRedshiftTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetRedshiftTargetPtrOutput)
}

type EventTargetRedshiftTargetOutput struct{ *pulumi.OutputState }

func (EventTargetRedshiftTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetRedshiftTarget)(nil)).Elem()
}

func (o EventTargetRedshiftTargetOutput) ToEventTargetRedshiftTargetOutput() EventTargetRedshiftTargetOutput {
	return o
}

func (o EventTargetRedshiftTargetOutput) ToEventTargetRedshiftTargetOutputWithContext(ctx context.Context) EventTargetRedshiftTargetOutput {
	return o
}

func (o EventTargetRedshiftTargetOutput) ToEventTargetRedshiftTargetPtrOutput() EventTargetRedshiftTargetPtrOutput {
	return o.ToEventTargetRedshiftTargetPtrOutputWithContext(context.Background())
}

func (o EventTargetRedshiftTargetOutput) ToEventTargetRedshiftTargetPtrOutputWithContext(ctx context.Context) EventTargetRedshiftTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventTargetRedshiftTarget) *EventTargetRedshiftTarget {
		return &v
	}).(EventTargetRedshiftTargetPtrOutput)
}

// The name of the database.
func (o EventTargetRedshiftTargetOutput) Database() pulumi.StringOutput {
	return o.ApplyT(func(v EventTargetRedshiftTarget) string { return v.Database }).(pulumi.StringOutput)
}

// The database user name.
func (o EventTargetRedshiftTargetOutput) DbUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventTargetRedshiftTarget) *string { return v.DbUser }).(pulumi.StringPtrOutput)
}

// The name or ARN of the secret that enables access to the database.
func (o EventTargetRedshiftTargetOutput) SecretsManagerArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventTargetRedshiftTarget) *string { return v.SecretsManagerArn }).(pulumi.StringPtrOutput)
}

// The SQL statement text to run.
func (o EventTargetRedshiftTargetOutput) Sql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventTargetRedshiftTarget) *string { return v.Sql }).(pulumi.StringPtrOutput)
}

// The name of the SQL statement.
func (o EventTargetRedshiftTargetOutput) StatementName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventTargetRedshiftTarget) *string { return v.StatementName }).(pulumi.StringPtrOutput)
}

// Indicates whether to send an event back to EventBridge after the SQL statement runs.
func (o EventTargetRedshiftTargetOutput) WithEvent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v EventTargetRedshiftTarget) *bool { return v.WithEvent }).(pulumi.BoolPtrOutput)
}

type EventTargetRedshiftTargetPtrOutput struct{ *pulumi.OutputState }

func (EventTargetRedshiftTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTargetRedshiftTarget)(nil)).Elem()
}

func (o EventTargetRedshiftTargetPtrOutput) ToEventTargetRedshiftTargetPtrOutput() EventTargetRedshiftTargetPtrOutput {
	return o
}

func (o EventTargetRedshiftTargetPtrOutput) ToEventTargetRedshiftTargetPtrOutputWithContext(ctx context.Context) EventTargetRedshiftTargetPtrOutput {
	return o
}

func (o EventTargetRedshiftTargetPtrOutput) Elem() EventTargetRedshiftTargetOutput {
	return o.ApplyT(func(v *EventTargetRedshiftTarget) EventTargetRedshiftTarget {
		if v != nil {
			return *v
		}
		var ret EventTargetRedshiftTarget
		return ret
	}).(EventTargetRedshiftTargetOutput)
}

// The name of the database.
func (o EventTargetRedshiftTargetPtrOutput) Database() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventTargetRedshiftTarget) *string {
		if v == nil {
			return nil
		}
		return &v.Database
	}).(pulumi.StringPtrOutput)
}

// The database user name.
func (o EventTargetRedshiftTargetPtrOutput) DbUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventTargetRedshiftTarget) *string {
		if v == nil {
			return nil
		}
		return v.DbUser
	}).(pulumi.StringPtrOutput)
}

// The name or ARN of the secret that enables access to the database.
func (o EventTargetRedshiftTargetPtrOutput) SecretsManagerArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventTargetRedshiftTarget) *string {
		if v == nil {
			return nil
		}
		return v.SecretsManagerArn
	}).(pulumi.StringPtrOutput)
}

// The SQL statement text to run.
func (o EventTargetRedshiftTargetPtrOutput) Sql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventTargetRedshiftTarget) *string {
		if v == nil {
			return nil
		}
		return v.Sql
	}).(pulumi.StringPtrOutput)
}

// The name of the SQL statement.
func (o EventTargetRedshiftTargetPtrOutput) StatementName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventTargetRedshiftTarget) *string {
		if v == nil {
			return nil
		}
		return v.StatementName
	}).(pulumi.StringPtrOutput)
}

// Indicates whether to send an event back to EventBridge after the SQL statement runs.
func (o EventTargetRedshiftTargetPtrOutput) WithEvent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *EventTargetRedshiftTarget) *bool {
		if v == nil {
			return nil
		}
		return v.WithEvent
	}).(pulumi.BoolPtrOutput)
}

type EventTargetRetryPolicy struct {
	// The age in seconds to continue to make retry attempts.
	MaximumEventAgeInSeconds *int `pulumi:"maximumEventAgeInSeconds"`
	// maximum number of retry attempts to make before the request fails
	MaximumRetryAttempts *int `pulumi:"maximumRetryAttempts"`
}

// EventTargetRetryPolicyInput is an input type that accepts EventTargetRetryPolicyArgs and EventTargetRetryPolicyOutput values.
// You can construct a concrete instance of `EventTargetRetryPolicyInput` via:
//
//	EventTargetRetryPolicyArgs{...}
type EventTargetRetryPolicyInput interface {
	pulumi.Input

	ToEventTargetRetryPolicyOutput() EventTargetRetryPolicyOutput
	ToEventTargetRetryPolicyOutputWithContext(context.Context) EventTargetRetryPolicyOutput
}

type EventTargetRetryPolicyArgs struct {
	// The age in seconds to continue to make retry attempts.
	MaximumEventAgeInSeconds pulumi.IntPtrInput `pulumi:"maximumEventAgeInSeconds"`
	// maximum number of retry attempts to make before the request fails
	MaximumRetryAttempts pulumi.IntPtrInput `pulumi:"maximumRetryAttempts"`
}

func (EventTargetRetryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetRetryPolicy)(nil)).Elem()
}

func (i EventTargetRetryPolicyArgs) ToEventTargetRetryPolicyOutput() EventTargetRetryPolicyOutput {
	return i.ToEventTargetRetryPolicyOutputWithContext(context.Background())
}

func (i EventTargetRetryPolicyArgs) ToEventTargetRetryPolicyOutputWithContext(ctx context.Context) EventTargetRetryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetRetryPolicyOutput)
}

func (i EventTargetRetryPolicyArgs) ToEventTargetRetryPolicyPtrOutput() EventTargetRetryPolicyPtrOutput {
	return i.ToEventTargetRetryPolicyPtrOutputWithContext(context.Background())
}

func (i EventTargetRetryPolicyArgs) ToEventTargetRetryPolicyPtrOutputWithContext(ctx context.Context) EventTargetRetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetRetryPolicyOutput).ToEventTargetRetryPolicyPtrOutputWithContext(ctx)
}

// EventTargetRetryPolicyPtrInput is an input type that accepts EventTargetRetryPolicyArgs, EventTargetRetryPolicyPtr and EventTargetRetryPolicyPtrOutput values.
// You can construct a concrete instance of `EventTargetRetryPolicyPtrInput` via:
//
//	        EventTargetRetryPolicyArgs{...}
//
//	or:
//
//	        nil
type EventTargetRetryPolicyPtrInput interface {
	pulumi.Input

	ToEventTargetRetryPolicyPtrOutput() EventTargetRetryPolicyPtrOutput
	ToEventTargetRetryPolicyPtrOutputWithContext(context.Context) EventTargetRetryPolicyPtrOutput
}

type eventTargetRetryPolicyPtrType EventTargetRetryPolicyArgs

func EventTargetRetryPolicyPtr(v *EventTargetRetryPolicyArgs) EventTargetRetryPolicyPtrInput {
	return (*eventTargetRetryPolicyPtrType)(v)
}

func (*eventTargetRetryPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTargetRetryPolicy)(nil)).Elem()
}

func (i *eventTargetRetryPolicyPtrType) ToEventTargetRetryPolicyPtrOutput() EventTargetRetryPolicyPtrOutput {
	return i.ToEventTargetRetryPolicyPtrOutputWithContext(context.Background())
}

func (i *eventTargetRetryPolicyPtrType) ToEventTargetRetryPolicyPtrOutputWithContext(ctx context.Context) EventTargetRetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetRetryPolicyPtrOutput)
}

type EventTargetRetryPolicyOutput struct{ *pulumi.OutputState }

func (EventTargetRetryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetRetryPolicy)(nil)).Elem()
}

func (o EventTargetRetryPolicyOutput) ToEventTargetRetryPolicyOutput() EventTargetRetryPolicyOutput {
	return o
}

func (o EventTargetRetryPolicyOutput) ToEventTargetRetryPolicyOutputWithContext(ctx context.Context) EventTargetRetryPolicyOutput {
	return o
}

func (o EventTargetRetryPolicyOutput) ToEventTargetRetryPolicyPtrOutput() EventTargetRetryPolicyPtrOutput {
	return o.ToEventTargetRetryPolicyPtrOutputWithContext(context.Background())
}

func (o EventTargetRetryPolicyOutput) ToEventTargetRetryPolicyPtrOutputWithContext(ctx context.Context) EventTargetRetryPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventTargetRetryPolicy) *EventTargetRetryPolicy {
		return &v
	}).(EventTargetRetryPolicyPtrOutput)
}

// The age in seconds to continue to make retry attempts.
func (o EventTargetRetryPolicyOutput) MaximumEventAgeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EventTargetRetryPolicy) *int { return v.MaximumEventAgeInSeconds }).(pulumi.IntPtrOutput)
}

// maximum number of retry attempts to make before the request fails
func (o EventTargetRetryPolicyOutput) MaximumRetryAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EventTargetRetryPolicy) *int { return v.MaximumRetryAttempts }).(pulumi.IntPtrOutput)
}

type EventTargetRetryPolicyPtrOutput struct{ *pulumi.OutputState }

func (EventTargetRetryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTargetRetryPolicy)(nil)).Elem()
}

func (o EventTargetRetryPolicyPtrOutput) ToEventTargetRetryPolicyPtrOutput() EventTargetRetryPolicyPtrOutput {
	return o
}

func (o EventTargetRetryPolicyPtrOutput) ToEventTargetRetryPolicyPtrOutputWithContext(ctx context.Context) EventTargetRetryPolicyPtrOutput {
	return o
}

func (o EventTargetRetryPolicyPtrOutput) Elem() EventTargetRetryPolicyOutput {
	return o.ApplyT(func(v *EventTargetRetryPolicy) EventTargetRetryPolicy {
		if v != nil {
			return *v
		}
		var ret EventTargetRetryPolicy
		return ret
	}).(EventTargetRetryPolicyOutput)
}

// The age in seconds to continue to make retry attempts.
func (o EventTargetRetryPolicyPtrOutput) MaximumEventAgeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EventTargetRetryPolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaximumEventAgeInSeconds
	}).(pulumi.IntPtrOutput)
}

// maximum number of retry attempts to make before the request fails
func (o EventTargetRetryPolicyPtrOutput) MaximumRetryAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EventTargetRetryPolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaximumRetryAttempts
	}).(pulumi.IntPtrOutput)
}

type EventTargetRunCommandTarget struct {
	// Can be either `tag:tag-key` or `InstanceIds`.
	Key string `pulumi:"key"`
	// If Key is `tag:tag-key`, Values is a list of tag values. If Key is `InstanceIds`, Values is a list of Amazon EC2 instance IDs.
	Values []string `pulumi:"values"`
}

// EventTargetRunCommandTargetInput is an input type that accepts EventTargetRunCommandTargetArgs and EventTargetRunCommandTargetOutput values.
// You can construct a concrete instance of `EventTargetRunCommandTargetInput` via:
//
//	EventTargetRunCommandTargetArgs{...}
type EventTargetRunCommandTargetInput interface {
	pulumi.Input

	ToEventTargetRunCommandTargetOutput() EventTargetRunCommandTargetOutput
	ToEventTargetRunCommandTargetOutputWithContext(context.Context) EventTargetRunCommandTargetOutput
}

type EventTargetRunCommandTargetArgs struct {
	// Can be either `tag:tag-key` or `InstanceIds`.
	Key pulumi.StringInput `pulumi:"key"`
	// If Key is `tag:tag-key`, Values is a list of tag values. If Key is `InstanceIds`, Values is a list of Amazon EC2 instance IDs.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (EventTargetRunCommandTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetRunCommandTarget)(nil)).Elem()
}

func (i EventTargetRunCommandTargetArgs) ToEventTargetRunCommandTargetOutput() EventTargetRunCommandTargetOutput {
	return i.ToEventTargetRunCommandTargetOutputWithContext(context.Background())
}

func (i EventTargetRunCommandTargetArgs) ToEventTargetRunCommandTargetOutputWithContext(ctx context.Context) EventTargetRunCommandTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetRunCommandTargetOutput)
}

// EventTargetRunCommandTargetArrayInput is an input type that accepts EventTargetRunCommandTargetArray and EventTargetRunCommandTargetArrayOutput values.
// You can construct a concrete instance of `EventTargetRunCommandTargetArrayInput` via:
//
//	EventTargetRunCommandTargetArray{ EventTargetRunCommandTargetArgs{...} }
type EventTargetRunCommandTargetArrayInput interface {
	pulumi.Input

	ToEventTargetRunCommandTargetArrayOutput() EventTargetRunCommandTargetArrayOutput
	ToEventTargetRunCommandTargetArrayOutputWithContext(context.Context) EventTargetRunCommandTargetArrayOutput
}

type EventTargetRunCommandTargetArray []EventTargetRunCommandTargetInput

func (EventTargetRunCommandTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventTargetRunCommandTarget)(nil)).Elem()
}

func (i EventTargetRunCommandTargetArray) ToEventTargetRunCommandTargetArrayOutput() EventTargetRunCommandTargetArrayOutput {
	return i.ToEventTargetRunCommandTargetArrayOutputWithContext(context.Background())
}

func (i EventTargetRunCommandTargetArray) ToEventTargetRunCommandTargetArrayOutputWithContext(ctx context.Context) EventTargetRunCommandTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetRunCommandTargetArrayOutput)
}

type EventTargetRunCommandTargetOutput struct{ *pulumi.OutputState }

func (EventTargetRunCommandTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetRunCommandTarget)(nil)).Elem()
}

func (o EventTargetRunCommandTargetOutput) ToEventTargetRunCommandTargetOutput() EventTargetRunCommandTargetOutput {
	return o
}

func (o EventTargetRunCommandTargetOutput) ToEventTargetRunCommandTargetOutputWithContext(ctx context.Context) EventTargetRunCommandTargetOutput {
	return o
}

// Can be either `tag:tag-key` or `InstanceIds`.
func (o EventTargetRunCommandTargetOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v EventTargetRunCommandTarget) string { return v.Key }).(pulumi.StringOutput)
}

// If Key is `tag:tag-key`, Values is a list of tag values. If Key is `InstanceIds`, Values is a list of Amazon EC2 instance IDs.
func (o EventTargetRunCommandTargetOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v EventTargetRunCommandTarget) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type EventTargetRunCommandTargetArrayOutput struct{ *pulumi.OutputState }

func (EventTargetRunCommandTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventTargetRunCommandTarget)(nil)).Elem()
}

func (o EventTargetRunCommandTargetArrayOutput) ToEventTargetRunCommandTargetArrayOutput() EventTargetRunCommandTargetArrayOutput {
	return o
}

func (o EventTargetRunCommandTargetArrayOutput) ToEventTargetRunCommandTargetArrayOutputWithContext(ctx context.Context) EventTargetRunCommandTargetArrayOutput {
	return o
}

func (o EventTargetRunCommandTargetArrayOutput) Index(i pulumi.IntInput) EventTargetRunCommandTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventTargetRunCommandTarget {
		return vs[0].([]EventTargetRunCommandTarget)[vs[1].(int)]
	}).(EventTargetRunCommandTargetOutput)
}

type EventTargetSagemakerPipelineTarget struct {
	// List of Parameter names and values for SageMaker Model Building Pipeline execution.
	PipelineParameterLists []EventTargetSagemakerPipelineTargetPipelineParameterList `pulumi:"pipelineParameterLists"`
}

// EventTargetSagemakerPipelineTargetInput is an input type that accepts EventTargetSagemakerPipelineTargetArgs and EventTargetSagemakerPipelineTargetOutput values.
// You can construct a concrete instance of `EventTargetSagemakerPipelineTargetInput` via:
//
//	EventTargetSagemakerPipelineTargetArgs{...}
type EventTargetSagemakerPipelineTargetInput interface {
	pulumi.Input

	ToEventTargetSagemakerPipelineTargetOutput() EventTargetSagemakerPipelineTargetOutput
	ToEventTargetSagemakerPipelineTargetOutputWithContext(context.Context) EventTargetSagemakerPipelineTargetOutput
}

type EventTargetSagemakerPipelineTargetArgs struct {
	// List of Parameter names and values for SageMaker Model Building Pipeline execution.
	PipelineParameterLists EventTargetSagemakerPipelineTargetPipelineParameterListArrayInput `pulumi:"pipelineParameterLists"`
}

func (EventTargetSagemakerPipelineTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetSagemakerPipelineTarget)(nil)).Elem()
}

func (i EventTargetSagemakerPipelineTargetArgs) ToEventTargetSagemakerPipelineTargetOutput() EventTargetSagemakerPipelineTargetOutput {
	return i.ToEventTargetSagemakerPipelineTargetOutputWithContext(context.Background())
}

func (i EventTargetSagemakerPipelineTargetArgs) ToEventTargetSagemakerPipelineTargetOutputWithContext(ctx context.Context) EventTargetSagemakerPipelineTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetSagemakerPipelineTargetOutput)
}

func (i EventTargetSagemakerPipelineTargetArgs) ToEventTargetSagemakerPipelineTargetPtrOutput() EventTargetSagemakerPipelineTargetPtrOutput {
	return i.ToEventTargetSagemakerPipelineTargetPtrOutputWithContext(context.Background())
}

func (i EventTargetSagemakerPipelineTargetArgs) ToEventTargetSagemakerPipelineTargetPtrOutputWithContext(ctx context.Context) EventTargetSagemakerPipelineTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetSagemakerPipelineTargetOutput).ToEventTargetSagemakerPipelineTargetPtrOutputWithContext(ctx)
}

// EventTargetSagemakerPipelineTargetPtrInput is an input type that accepts EventTargetSagemakerPipelineTargetArgs, EventTargetSagemakerPipelineTargetPtr and EventTargetSagemakerPipelineTargetPtrOutput values.
// You can construct a concrete instance of `EventTargetSagemakerPipelineTargetPtrInput` via:
//
//	        EventTargetSagemakerPipelineTargetArgs{...}
//
//	or:
//
//	        nil
type EventTargetSagemakerPipelineTargetPtrInput interface {
	pulumi.Input

	ToEventTargetSagemakerPipelineTargetPtrOutput() EventTargetSagemakerPipelineTargetPtrOutput
	ToEventTargetSagemakerPipelineTargetPtrOutputWithContext(context.Context) EventTargetSagemakerPipelineTargetPtrOutput
}

type eventTargetSagemakerPipelineTargetPtrType EventTargetSagemakerPipelineTargetArgs

func EventTargetSagemakerPipelineTargetPtr(v *EventTargetSagemakerPipelineTargetArgs) EventTargetSagemakerPipelineTargetPtrInput {
	return (*eventTargetSagemakerPipelineTargetPtrType)(v)
}

func (*eventTargetSagemakerPipelineTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTargetSagemakerPipelineTarget)(nil)).Elem()
}

func (i *eventTargetSagemakerPipelineTargetPtrType) ToEventTargetSagemakerPipelineTargetPtrOutput() EventTargetSagemakerPipelineTargetPtrOutput {
	return i.ToEventTargetSagemakerPipelineTargetPtrOutputWithContext(context.Background())
}

func (i *eventTargetSagemakerPipelineTargetPtrType) ToEventTargetSagemakerPipelineTargetPtrOutputWithContext(ctx context.Context) EventTargetSagemakerPipelineTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetSagemakerPipelineTargetPtrOutput)
}

type EventTargetSagemakerPipelineTargetOutput struct{ *pulumi.OutputState }

func (EventTargetSagemakerPipelineTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetSagemakerPipelineTarget)(nil)).Elem()
}

func (o EventTargetSagemakerPipelineTargetOutput) ToEventTargetSagemakerPipelineTargetOutput() EventTargetSagemakerPipelineTargetOutput {
	return o
}

func (o EventTargetSagemakerPipelineTargetOutput) ToEventTargetSagemakerPipelineTargetOutputWithContext(ctx context.Context) EventTargetSagemakerPipelineTargetOutput {
	return o
}

func (o EventTargetSagemakerPipelineTargetOutput) ToEventTargetSagemakerPipelineTargetPtrOutput() EventTargetSagemakerPipelineTargetPtrOutput {
	return o.ToEventTargetSagemakerPipelineTargetPtrOutputWithContext(context.Background())
}

func (o EventTargetSagemakerPipelineTargetOutput) ToEventTargetSagemakerPipelineTargetPtrOutputWithContext(ctx context.Context) EventTargetSagemakerPipelineTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventTargetSagemakerPipelineTarget) *EventTargetSagemakerPipelineTarget {
		return &v
	}).(EventTargetSagemakerPipelineTargetPtrOutput)
}

// List of Parameter names and values for SageMaker Model Building Pipeline execution.
func (o EventTargetSagemakerPipelineTargetOutput) PipelineParameterLists() EventTargetSagemakerPipelineTargetPipelineParameterListArrayOutput {
	return o.ApplyT(func(v EventTargetSagemakerPipelineTarget) []EventTargetSagemakerPipelineTargetPipelineParameterList {
		return v.PipelineParameterLists
	}).(EventTargetSagemakerPipelineTargetPipelineParameterListArrayOutput)
}

type EventTargetSagemakerPipelineTargetPtrOutput struct{ *pulumi.OutputState }

func (EventTargetSagemakerPipelineTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTargetSagemakerPipelineTarget)(nil)).Elem()
}

func (o EventTargetSagemakerPipelineTargetPtrOutput) ToEventTargetSagemakerPipelineTargetPtrOutput() EventTargetSagemakerPipelineTargetPtrOutput {
	return o
}

func (o EventTargetSagemakerPipelineTargetPtrOutput) ToEventTargetSagemakerPipelineTargetPtrOutputWithContext(ctx context.Context) EventTargetSagemakerPipelineTargetPtrOutput {
	return o
}

func (o EventTargetSagemakerPipelineTargetPtrOutput) Elem() EventTargetSagemakerPipelineTargetOutput {
	return o.ApplyT(func(v *EventTargetSagemakerPipelineTarget) EventTargetSagemakerPipelineTarget {
		if v != nil {
			return *v
		}
		var ret EventTargetSagemakerPipelineTarget
		return ret
	}).(EventTargetSagemakerPipelineTargetOutput)
}

// List of Parameter names and values for SageMaker Model Building Pipeline execution.
func (o EventTargetSagemakerPipelineTargetPtrOutput) PipelineParameterLists() EventTargetSagemakerPipelineTargetPipelineParameterListArrayOutput {
	return o.ApplyT(func(v *EventTargetSagemakerPipelineTarget) []EventTargetSagemakerPipelineTargetPipelineParameterList {
		if v == nil {
			return nil
		}
		return v.PipelineParameterLists
	}).(EventTargetSagemakerPipelineTargetPipelineParameterListArrayOutput)
}

type EventTargetSagemakerPipelineTargetPipelineParameterList struct {
	// Name of parameter to start execution of a SageMaker Model Building Pipeline.
	Name string `pulumi:"name"`
	// Value of parameter to start execution of a SageMaker Model Building Pipeline.
	Value string `pulumi:"value"`
}

// EventTargetSagemakerPipelineTargetPipelineParameterListInput is an input type that accepts EventTargetSagemakerPipelineTargetPipelineParameterListArgs and EventTargetSagemakerPipelineTargetPipelineParameterListOutput values.
// You can construct a concrete instance of `EventTargetSagemakerPipelineTargetPipelineParameterListInput` via:
//
//	EventTargetSagemakerPipelineTargetPipelineParameterListArgs{...}
type EventTargetSagemakerPipelineTargetPipelineParameterListInput interface {
	pulumi.Input

	ToEventTargetSagemakerPipelineTargetPipelineParameterListOutput() EventTargetSagemakerPipelineTargetPipelineParameterListOutput
	ToEventTargetSagemakerPipelineTargetPipelineParameterListOutputWithContext(context.Context) EventTargetSagemakerPipelineTargetPipelineParameterListOutput
}

type EventTargetSagemakerPipelineTargetPipelineParameterListArgs struct {
	// Name of parameter to start execution of a SageMaker Model Building Pipeline.
	Name pulumi.StringInput `pulumi:"name"`
	// Value of parameter to start execution of a SageMaker Model Building Pipeline.
	Value pulumi.StringInput `pulumi:"value"`
}

func (EventTargetSagemakerPipelineTargetPipelineParameterListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetSagemakerPipelineTargetPipelineParameterList)(nil)).Elem()
}

func (i EventTargetSagemakerPipelineTargetPipelineParameterListArgs) ToEventTargetSagemakerPipelineTargetPipelineParameterListOutput() EventTargetSagemakerPipelineTargetPipelineParameterListOutput {
	return i.ToEventTargetSagemakerPipelineTargetPipelineParameterListOutputWithContext(context.Background())
}

func (i EventTargetSagemakerPipelineTargetPipelineParameterListArgs) ToEventTargetSagemakerPipelineTargetPipelineParameterListOutputWithContext(ctx context.Context) EventTargetSagemakerPipelineTargetPipelineParameterListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetSagemakerPipelineTargetPipelineParameterListOutput)
}

// EventTargetSagemakerPipelineTargetPipelineParameterListArrayInput is an input type that accepts EventTargetSagemakerPipelineTargetPipelineParameterListArray and EventTargetSagemakerPipelineTargetPipelineParameterListArrayOutput values.
// You can construct a concrete instance of `EventTargetSagemakerPipelineTargetPipelineParameterListArrayInput` via:
//
//	EventTargetSagemakerPipelineTargetPipelineParameterListArray{ EventTargetSagemakerPipelineTargetPipelineParameterListArgs{...} }
type EventTargetSagemakerPipelineTargetPipelineParameterListArrayInput interface {
	pulumi.Input

	ToEventTargetSagemakerPipelineTargetPipelineParameterListArrayOutput() EventTargetSagemakerPipelineTargetPipelineParameterListArrayOutput
	ToEventTargetSagemakerPipelineTargetPipelineParameterListArrayOutputWithContext(context.Context) EventTargetSagemakerPipelineTargetPipelineParameterListArrayOutput
}

type EventTargetSagemakerPipelineTargetPipelineParameterListArray []EventTargetSagemakerPipelineTargetPipelineParameterListInput

func (EventTargetSagemakerPipelineTargetPipelineParameterListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventTargetSagemakerPipelineTargetPipelineParameterList)(nil)).Elem()
}

func (i EventTargetSagemakerPipelineTargetPipelineParameterListArray) ToEventTargetSagemakerPipelineTargetPipelineParameterListArrayOutput() EventTargetSagemakerPipelineTargetPipelineParameterListArrayOutput {
	return i.ToEventTargetSagemakerPipelineTargetPipelineParameterListArrayOutputWithContext(context.Background())
}

func (i EventTargetSagemakerPipelineTargetPipelineParameterListArray) ToEventTargetSagemakerPipelineTargetPipelineParameterListArrayOutputWithContext(ctx context.Context) EventTargetSagemakerPipelineTargetPipelineParameterListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetSagemakerPipelineTargetPipelineParameterListArrayOutput)
}

type EventTargetSagemakerPipelineTargetPipelineParameterListOutput struct{ *pulumi.OutputState }

func (EventTargetSagemakerPipelineTargetPipelineParameterListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetSagemakerPipelineTargetPipelineParameterList)(nil)).Elem()
}

func (o EventTargetSagemakerPipelineTargetPipelineParameterListOutput) ToEventTargetSagemakerPipelineTargetPipelineParameterListOutput() EventTargetSagemakerPipelineTargetPipelineParameterListOutput {
	return o
}

func (o EventTargetSagemakerPipelineTargetPipelineParameterListOutput) ToEventTargetSagemakerPipelineTargetPipelineParameterListOutputWithContext(ctx context.Context) EventTargetSagemakerPipelineTargetPipelineParameterListOutput {
	return o
}

// Name of parameter to start execution of a SageMaker Model Building Pipeline.
func (o EventTargetSagemakerPipelineTargetPipelineParameterListOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v EventTargetSagemakerPipelineTargetPipelineParameterList) string { return v.Name }).(pulumi.StringOutput)
}

// Value of parameter to start execution of a SageMaker Model Building Pipeline.
func (o EventTargetSagemakerPipelineTargetPipelineParameterListOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v EventTargetSagemakerPipelineTargetPipelineParameterList) string { return v.Value }).(pulumi.StringOutput)
}

type EventTargetSagemakerPipelineTargetPipelineParameterListArrayOutput struct{ *pulumi.OutputState }

func (EventTargetSagemakerPipelineTargetPipelineParameterListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventTargetSagemakerPipelineTargetPipelineParameterList)(nil)).Elem()
}

func (o EventTargetSagemakerPipelineTargetPipelineParameterListArrayOutput) ToEventTargetSagemakerPipelineTargetPipelineParameterListArrayOutput() EventTargetSagemakerPipelineTargetPipelineParameterListArrayOutput {
	return o
}

func (o EventTargetSagemakerPipelineTargetPipelineParameterListArrayOutput) ToEventTargetSagemakerPipelineTargetPipelineParameterListArrayOutputWithContext(ctx context.Context) EventTargetSagemakerPipelineTargetPipelineParameterListArrayOutput {
	return o
}

func (o EventTargetSagemakerPipelineTargetPipelineParameterListArrayOutput) Index(i pulumi.IntInput) EventTargetSagemakerPipelineTargetPipelineParameterListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventTargetSagemakerPipelineTargetPipelineParameterList {
		return vs[0].([]EventTargetSagemakerPipelineTargetPipelineParameterList)[vs[1].(int)]
	}).(EventTargetSagemakerPipelineTargetPipelineParameterListOutput)
}

type EventTargetSqsTarget struct {
	// The FIFO message group ID to use as the target.
	MessageGroupId *string `pulumi:"messageGroupId"`
}

// EventTargetSqsTargetInput is an input type that accepts EventTargetSqsTargetArgs and EventTargetSqsTargetOutput values.
// You can construct a concrete instance of `EventTargetSqsTargetInput` via:
//
//	EventTargetSqsTargetArgs{...}
type EventTargetSqsTargetInput interface {
	pulumi.Input

	ToEventTargetSqsTargetOutput() EventTargetSqsTargetOutput
	ToEventTargetSqsTargetOutputWithContext(context.Context) EventTargetSqsTargetOutput
}

type EventTargetSqsTargetArgs struct {
	// The FIFO message group ID to use as the target.
	MessageGroupId pulumi.StringPtrInput `pulumi:"messageGroupId"`
}

func (EventTargetSqsTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetSqsTarget)(nil)).Elem()
}

func (i EventTargetSqsTargetArgs) ToEventTargetSqsTargetOutput() EventTargetSqsTargetOutput {
	return i.ToEventTargetSqsTargetOutputWithContext(context.Background())
}

func (i EventTargetSqsTargetArgs) ToEventTargetSqsTargetOutputWithContext(ctx context.Context) EventTargetSqsTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetSqsTargetOutput)
}

func (i EventTargetSqsTargetArgs) ToEventTargetSqsTargetPtrOutput() EventTargetSqsTargetPtrOutput {
	return i.ToEventTargetSqsTargetPtrOutputWithContext(context.Background())
}

func (i EventTargetSqsTargetArgs) ToEventTargetSqsTargetPtrOutputWithContext(ctx context.Context) EventTargetSqsTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetSqsTargetOutput).ToEventTargetSqsTargetPtrOutputWithContext(ctx)
}

// EventTargetSqsTargetPtrInput is an input type that accepts EventTargetSqsTargetArgs, EventTargetSqsTargetPtr and EventTargetSqsTargetPtrOutput values.
// You can construct a concrete instance of `EventTargetSqsTargetPtrInput` via:
//
//	        EventTargetSqsTargetArgs{...}
//
//	or:
//
//	        nil
type EventTargetSqsTargetPtrInput interface {
	pulumi.Input

	ToEventTargetSqsTargetPtrOutput() EventTargetSqsTargetPtrOutput
	ToEventTargetSqsTargetPtrOutputWithContext(context.Context) EventTargetSqsTargetPtrOutput
}

type eventTargetSqsTargetPtrType EventTargetSqsTargetArgs

func EventTargetSqsTargetPtr(v *EventTargetSqsTargetArgs) EventTargetSqsTargetPtrInput {
	return (*eventTargetSqsTargetPtrType)(v)
}

func (*eventTargetSqsTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTargetSqsTarget)(nil)).Elem()
}

func (i *eventTargetSqsTargetPtrType) ToEventTargetSqsTargetPtrOutput() EventTargetSqsTargetPtrOutput {
	return i.ToEventTargetSqsTargetPtrOutputWithContext(context.Background())
}

func (i *eventTargetSqsTargetPtrType) ToEventTargetSqsTargetPtrOutputWithContext(ctx context.Context) EventTargetSqsTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventTargetSqsTargetPtrOutput)
}

type EventTargetSqsTargetOutput struct{ *pulumi.OutputState }

func (EventTargetSqsTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventTargetSqsTarget)(nil)).Elem()
}

func (o EventTargetSqsTargetOutput) ToEventTargetSqsTargetOutput() EventTargetSqsTargetOutput {
	return o
}

func (o EventTargetSqsTargetOutput) ToEventTargetSqsTargetOutputWithContext(ctx context.Context) EventTargetSqsTargetOutput {
	return o
}

func (o EventTargetSqsTargetOutput) ToEventTargetSqsTargetPtrOutput() EventTargetSqsTargetPtrOutput {
	return o.ToEventTargetSqsTargetPtrOutputWithContext(context.Background())
}

func (o EventTargetSqsTargetOutput) ToEventTargetSqsTargetPtrOutputWithContext(ctx context.Context) EventTargetSqsTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EventTargetSqsTarget) *EventTargetSqsTarget {
		return &v
	}).(EventTargetSqsTargetPtrOutput)
}

// The FIFO message group ID to use as the target.
func (o EventTargetSqsTargetOutput) MessageGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventTargetSqsTarget) *string { return v.MessageGroupId }).(pulumi.StringPtrOutput)
}

type EventTargetSqsTargetPtrOutput struct{ *pulumi.OutputState }

func (EventTargetSqsTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventTargetSqsTarget)(nil)).Elem()
}

func (o EventTargetSqsTargetPtrOutput) ToEventTargetSqsTargetPtrOutput() EventTargetSqsTargetPtrOutput {
	return o
}

func (o EventTargetSqsTargetPtrOutput) ToEventTargetSqsTargetPtrOutputWithContext(ctx context.Context) EventTargetSqsTargetPtrOutput {
	return o
}

func (o EventTargetSqsTargetPtrOutput) Elem() EventTargetSqsTargetOutput {
	return o.ApplyT(func(v *EventTargetSqsTarget) EventTargetSqsTarget {
		if v != nil {
			return *v
		}
		var ret EventTargetSqsTarget
		return ret
	}).(EventTargetSqsTargetOutput)
}

// The FIFO message group ID to use as the target.
func (o EventTargetSqsTargetPtrOutput) MessageGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EventTargetSqsTarget) *string {
		if v == nil {
			return nil
		}
		return v.MessageGroupId
	}).(pulumi.StringPtrOutput)
}

type InternetMonitorHealthEventsConfig struct {
	// The health event threshold percentage set for availability scores.
	AvailabilityScoreThreshold *float64 `pulumi:"availabilityScoreThreshold"`
	// The health event threshold percentage set for performance scores.
	PerformanceScoreThreshold *float64 `pulumi:"performanceScoreThreshold"`
}

// InternetMonitorHealthEventsConfigInput is an input type that accepts InternetMonitorHealthEventsConfigArgs and InternetMonitorHealthEventsConfigOutput values.
// You can construct a concrete instance of `InternetMonitorHealthEventsConfigInput` via:
//
//	InternetMonitorHealthEventsConfigArgs{...}
type InternetMonitorHealthEventsConfigInput interface {
	pulumi.Input

	ToInternetMonitorHealthEventsConfigOutput() InternetMonitorHealthEventsConfigOutput
	ToInternetMonitorHealthEventsConfigOutputWithContext(context.Context) InternetMonitorHealthEventsConfigOutput
}

type InternetMonitorHealthEventsConfigArgs struct {
	// The health event threshold percentage set for availability scores.
	AvailabilityScoreThreshold pulumi.Float64PtrInput `pulumi:"availabilityScoreThreshold"`
	// The health event threshold percentage set for performance scores.
	PerformanceScoreThreshold pulumi.Float64PtrInput `pulumi:"performanceScoreThreshold"`
}

func (InternetMonitorHealthEventsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetMonitorHealthEventsConfig)(nil)).Elem()
}

func (i InternetMonitorHealthEventsConfigArgs) ToInternetMonitorHealthEventsConfigOutput() InternetMonitorHealthEventsConfigOutput {
	return i.ToInternetMonitorHealthEventsConfigOutputWithContext(context.Background())
}

func (i InternetMonitorHealthEventsConfigArgs) ToInternetMonitorHealthEventsConfigOutputWithContext(ctx context.Context) InternetMonitorHealthEventsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetMonitorHealthEventsConfigOutput)
}

func (i InternetMonitorHealthEventsConfigArgs) ToInternetMonitorHealthEventsConfigPtrOutput() InternetMonitorHealthEventsConfigPtrOutput {
	return i.ToInternetMonitorHealthEventsConfigPtrOutputWithContext(context.Background())
}

func (i InternetMonitorHealthEventsConfigArgs) ToInternetMonitorHealthEventsConfigPtrOutputWithContext(ctx context.Context) InternetMonitorHealthEventsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetMonitorHealthEventsConfigOutput).ToInternetMonitorHealthEventsConfigPtrOutputWithContext(ctx)
}

// InternetMonitorHealthEventsConfigPtrInput is an input type that accepts InternetMonitorHealthEventsConfigArgs, InternetMonitorHealthEventsConfigPtr and InternetMonitorHealthEventsConfigPtrOutput values.
// You can construct a concrete instance of `InternetMonitorHealthEventsConfigPtrInput` via:
//
//	        InternetMonitorHealthEventsConfigArgs{...}
//
//	or:
//
//	        nil
type InternetMonitorHealthEventsConfigPtrInput interface {
	pulumi.Input

	ToInternetMonitorHealthEventsConfigPtrOutput() InternetMonitorHealthEventsConfigPtrOutput
	ToInternetMonitorHealthEventsConfigPtrOutputWithContext(context.Context) InternetMonitorHealthEventsConfigPtrOutput
}

type internetMonitorHealthEventsConfigPtrType InternetMonitorHealthEventsConfigArgs

func InternetMonitorHealthEventsConfigPtr(v *InternetMonitorHealthEventsConfigArgs) InternetMonitorHealthEventsConfigPtrInput {
	return (*internetMonitorHealthEventsConfigPtrType)(v)
}

func (*internetMonitorHealthEventsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InternetMonitorHealthEventsConfig)(nil)).Elem()
}

func (i *internetMonitorHealthEventsConfigPtrType) ToInternetMonitorHealthEventsConfigPtrOutput() InternetMonitorHealthEventsConfigPtrOutput {
	return i.ToInternetMonitorHealthEventsConfigPtrOutputWithContext(context.Background())
}

func (i *internetMonitorHealthEventsConfigPtrType) ToInternetMonitorHealthEventsConfigPtrOutputWithContext(ctx context.Context) InternetMonitorHealthEventsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetMonitorHealthEventsConfigPtrOutput)
}

type InternetMonitorHealthEventsConfigOutput struct{ *pulumi.OutputState }

func (InternetMonitorHealthEventsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetMonitorHealthEventsConfig)(nil)).Elem()
}

func (o InternetMonitorHealthEventsConfigOutput) ToInternetMonitorHealthEventsConfigOutput() InternetMonitorHealthEventsConfigOutput {
	return o
}

func (o InternetMonitorHealthEventsConfigOutput) ToInternetMonitorHealthEventsConfigOutputWithContext(ctx context.Context) InternetMonitorHealthEventsConfigOutput {
	return o
}

func (o InternetMonitorHealthEventsConfigOutput) ToInternetMonitorHealthEventsConfigPtrOutput() InternetMonitorHealthEventsConfigPtrOutput {
	return o.ToInternetMonitorHealthEventsConfigPtrOutputWithContext(context.Background())
}

func (o InternetMonitorHealthEventsConfigOutput) ToInternetMonitorHealthEventsConfigPtrOutputWithContext(ctx context.Context) InternetMonitorHealthEventsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InternetMonitorHealthEventsConfig) *InternetMonitorHealthEventsConfig {
		return &v
	}).(InternetMonitorHealthEventsConfigPtrOutput)
}

// The health event threshold percentage set for availability scores.
func (o InternetMonitorHealthEventsConfigOutput) AvailabilityScoreThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InternetMonitorHealthEventsConfig) *float64 { return v.AvailabilityScoreThreshold }).(pulumi.Float64PtrOutput)
}

// The health event threshold percentage set for performance scores.
func (o InternetMonitorHealthEventsConfigOutput) PerformanceScoreThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v InternetMonitorHealthEventsConfig) *float64 { return v.PerformanceScoreThreshold }).(pulumi.Float64PtrOutput)
}

type InternetMonitorHealthEventsConfigPtrOutput struct{ *pulumi.OutputState }

func (InternetMonitorHealthEventsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InternetMonitorHealthEventsConfig)(nil)).Elem()
}

func (o InternetMonitorHealthEventsConfigPtrOutput) ToInternetMonitorHealthEventsConfigPtrOutput() InternetMonitorHealthEventsConfigPtrOutput {
	return o
}

func (o InternetMonitorHealthEventsConfigPtrOutput) ToInternetMonitorHealthEventsConfigPtrOutputWithContext(ctx context.Context) InternetMonitorHealthEventsConfigPtrOutput {
	return o
}

func (o InternetMonitorHealthEventsConfigPtrOutput) Elem() InternetMonitorHealthEventsConfigOutput {
	return o.ApplyT(func(v *InternetMonitorHealthEventsConfig) InternetMonitorHealthEventsConfig {
		if v != nil {
			return *v
		}
		var ret InternetMonitorHealthEventsConfig
		return ret
	}).(InternetMonitorHealthEventsConfigOutput)
}

// The health event threshold percentage set for availability scores.
func (o InternetMonitorHealthEventsConfigPtrOutput) AvailabilityScoreThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InternetMonitorHealthEventsConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.AvailabilityScoreThreshold
	}).(pulumi.Float64PtrOutput)
}

// The health event threshold percentage set for performance scores.
func (o InternetMonitorHealthEventsConfigPtrOutput) PerformanceScoreThreshold() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *InternetMonitorHealthEventsConfig) *float64 {
		if v == nil {
			return nil
		}
		return v.PerformanceScoreThreshold
	}).(pulumi.Float64PtrOutput)
}

type InternetMonitorInternetMeasurementsLogDelivery struct {
	S3Config *InternetMonitorInternetMeasurementsLogDeliveryS3Config `pulumi:"s3Config"`
}

// InternetMonitorInternetMeasurementsLogDeliveryInput is an input type that accepts InternetMonitorInternetMeasurementsLogDeliveryArgs and InternetMonitorInternetMeasurementsLogDeliveryOutput values.
// You can construct a concrete instance of `InternetMonitorInternetMeasurementsLogDeliveryInput` via:
//
//	InternetMonitorInternetMeasurementsLogDeliveryArgs{...}
type InternetMonitorInternetMeasurementsLogDeliveryInput interface {
	pulumi.Input

	ToInternetMonitorInternetMeasurementsLogDeliveryOutput() InternetMonitorInternetMeasurementsLogDeliveryOutput
	ToInternetMonitorInternetMeasurementsLogDeliveryOutputWithContext(context.Context) InternetMonitorInternetMeasurementsLogDeliveryOutput
}

type InternetMonitorInternetMeasurementsLogDeliveryArgs struct {
	S3Config InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrInput `pulumi:"s3Config"`
}

func (InternetMonitorInternetMeasurementsLogDeliveryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetMonitorInternetMeasurementsLogDelivery)(nil)).Elem()
}

func (i InternetMonitorInternetMeasurementsLogDeliveryArgs) ToInternetMonitorInternetMeasurementsLogDeliveryOutput() InternetMonitorInternetMeasurementsLogDeliveryOutput {
	return i.ToInternetMonitorInternetMeasurementsLogDeliveryOutputWithContext(context.Background())
}

func (i InternetMonitorInternetMeasurementsLogDeliveryArgs) ToInternetMonitorInternetMeasurementsLogDeliveryOutputWithContext(ctx context.Context) InternetMonitorInternetMeasurementsLogDeliveryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetMonitorInternetMeasurementsLogDeliveryOutput)
}

func (i InternetMonitorInternetMeasurementsLogDeliveryArgs) ToInternetMonitorInternetMeasurementsLogDeliveryPtrOutput() InternetMonitorInternetMeasurementsLogDeliveryPtrOutput {
	return i.ToInternetMonitorInternetMeasurementsLogDeliveryPtrOutputWithContext(context.Background())
}

func (i InternetMonitorInternetMeasurementsLogDeliveryArgs) ToInternetMonitorInternetMeasurementsLogDeliveryPtrOutputWithContext(ctx context.Context) InternetMonitorInternetMeasurementsLogDeliveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetMonitorInternetMeasurementsLogDeliveryOutput).ToInternetMonitorInternetMeasurementsLogDeliveryPtrOutputWithContext(ctx)
}

// InternetMonitorInternetMeasurementsLogDeliveryPtrInput is an input type that accepts InternetMonitorInternetMeasurementsLogDeliveryArgs, InternetMonitorInternetMeasurementsLogDeliveryPtr and InternetMonitorInternetMeasurementsLogDeliveryPtrOutput values.
// You can construct a concrete instance of `InternetMonitorInternetMeasurementsLogDeliveryPtrInput` via:
//
//	        InternetMonitorInternetMeasurementsLogDeliveryArgs{...}
//
//	or:
//
//	        nil
type InternetMonitorInternetMeasurementsLogDeliveryPtrInput interface {
	pulumi.Input

	ToInternetMonitorInternetMeasurementsLogDeliveryPtrOutput() InternetMonitorInternetMeasurementsLogDeliveryPtrOutput
	ToInternetMonitorInternetMeasurementsLogDeliveryPtrOutputWithContext(context.Context) InternetMonitorInternetMeasurementsLogDeliveryPtrOutput
}

type internetMonitorInternetMeasurementsLogDeliveryPtrType InternetMonitorInternetMeasurementsLogDeliveryArgs

func InternetMonitorInternetMeasurementsLogDeliveryPtr(v *InternetMonitorInternetMeasurementsLogDeliveryArgs) InternetMonitorInternetMeasurementsLogDeliveryPtrInput {
	return (*internetMonitorInternetMeasurementsLogDeliveryPtrType)(v)
}

func (*internetMonitorInternetMeasurementsLogDeliveryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InternetMonitorInternetMeasurementsLogDelivery)(nil)).Elem()
}

func (i *internetMonitorInternetMeasurementsLogDeliveryPtrType) ToInternetMonitorInternetMeasurementsLogDeliveryPtrOutput() InternetMonitorInternetMeasurementsLogDeliveryPtrOutput {
	return i.ToInternetMonitorInternetMeasurementsLogDeliveryPtrOutputWithContext(context.Background())
}

func (i *internetMonitorInternetMeasurementsLogDeliveryPtrType) ToInternetMonitorInternetMeasurementsLogDeliveryPtrOutputWithContext(ctx context.Context) InternetMonitorInternetMeasurementsLogDeliveryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetMonitorInternetMeasurementsLogDeliveryPtrOutput)
}

type InternetMonitorInternetMeasurementsLogDeliveryOutput struct{ *pulumi.OutputState }

func (InternetMonitorInternetMeasurementsLogDeliveryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetMonitorInternetMeasurementsLogDelivery)(nil)).Elem()
}

func (o InternetMonitorInternetMeasurementsLogDeliveryOutput) ToInternetMonitorInternetMeasurementsLogDeliveryOutput() InternetMonitorInternetMeasurementsLogDeliveryOutput {
	return o
}

func (o InternetMonitorInternetMeasurementsLogDeliveryOutput) ToInternetMonitorInternetMeasurementsLogDeliveryOutputWithContext(ctx context.Context) InternetMonitorInternetMeasurementsLogDeliveryOutput {
	return o
}

func (o InternetMonitorInternetMeasurementsLogDeliveryOutput) ToInternetMonitorInternetMeasurementsLogDeliveryPtrOutput() InternetMonitorInternetMeasurementsLogDeliveryPtrOutput {
	return o.ToInternetMonitorInternetMeasurementsLogDeliveryPtrOutputWithContext(context.Background())
}

func (o InternetMonitorInternetMeasurementsLogDeliveryOutput) ToInternetMonitorInternetMeasurementsLogDeliveryPtrOutputWithContext(ctx context.Context) InternetMonitorInternetMeasurementsLogDeliveryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InternetMonitorInternetMeasurementsLogDelivery) *InternetMonitorInternetMeasurementsLogDelivery {
		return &v
	}).(InternetMonitorInternetMeasurementsLogDeliveryPtrOutput)
}

func (o InternetMonitorInternetMeasurementsLogDeliveryOutput) S3Config() InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput {
	return o.ApplyT(func(v InternetMonitorInternetMeasurementsLogDelivery) *InternetMonitorInternetMeasurementsLogDeliveryS3Config {
		return v.S3Config
	}).(InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput)
}

type InternetMonitorInternetMeasurementsLogDeliveryPtrOutput struct{ *pulumi.OutputState }

func (InternetMonitorInternetMeasurementsLogDeliveryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InternetMonitorInternetMeasurementsLogDelivery)(nil)).Elem()
}

func (o InternetMonitorInternetMeasurementsLogDeliveryPtrOutput) ToInternetMonitorInternetMeasurementsLogDeliveryPtrOutput() InternetMonitorInternetMeasurementsLogDeliveryPtrOutput {
	return o
}

func (o InternetMonitorInternetMeasurementsLogDeliveryPtrOutput) ToInternetMonitorInternetMeasurementsLogDeliveryPtrOutputWithContext(ctx context.Context) InternetMonitorInternetMeasurementsLogDeliveryPtrOutput {
	return o
}

func (o InternetMonitorInternetMeasurementsLogDeliveryPtrOutput) Elem() InternetMonitorInternetMeasurementsLogDeliveryOutput {
	return o.ApplyT(func(v *InternetMonitorInternetMeasurementsLogDelivery) InternetMonitorInternetMeasurementsLogDelivery {
		if v != nil {
			return *v
		}
		var ret InternetMonitorInternetMeasurementsLogDelivery
		return ret
	}).(InternetMonitorInternetMeasurementsLogDeliveryOutput)
}

func (o InternetMonitorInternetMeasurementsLogDeliveryPtrOutput) S3Config() InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput {
	return o.ApplyT(func(v *InternetMonitorInternetMeasurementsLogDelivery) *InternetMonitorInternetMeasurementsLogDeliveryS3Config {
		if v == nil {
			return nil
		}
		return v.S3Config
	}).(InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput)
}

type InternetMonitorInternetMeasurementsLogDeliveryS3Config struct {
	BucketName        string  `pulumi:"bucketName"`
	BucketPrefix      *string `pulumi:"bucketPrefix"`
	LogDeliveryStatus *string `pulumi:"logDeliveryStatus"`
}

// InternetMonitorInternetMeasurementsLogDeliveryS3ConfigInput is an input type that accepts InternetMonitorInternetMeasurementsLogDeliveryS3ConfigArgs and InternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutput values.
// You can construct a concrete instance of `InternetMonitorInternetMeasurementsLogDeliveryS3ConfigInput` via:
//
//	InternetMonitorInternetMeasurementsLogDeliveryS3ConfigArgs{...}
type InternetMonitorInternetMeasurementsLogDeliveryS3ConfigInput interface {
	pulumi.Input

	ToInternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutput() InternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutput
	ToInternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutputWithContext(context.Context) InternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutput
}

type InternetMonitorInternetMeasurementsLogDeliveryS3ConfigArgs struct {
	BucketName        pulumi.StringInput    `pulumi:"bucketName"`
	BucketPrefix      pulumi.StringPtrInput `pulumi:"bucketPrefix"`
	LogDeliveryStatus pulumi.StringPtrInput `pulumi:"logDeliveryStatus"`
}

func (InternetMonitorInternetMeasurementsLogDeliveryS3ConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetMonitorInternetMeasurementsLogDeliveryS3Config)(nil)).Elem()
}

func (i InternetMonitorInternetMeasurementsLogDeliveryS3ConfigArgs) ToInternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutput() InternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutput {
	return i.ToInternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutputWithContext(context.Background())
}

func (i InternetMonitorInternetMeasurementsLogDeliveryS3ConfigArgs) ToInternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutputWithContext(ctx context.Context) InternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutput)
}

func (i InternetMonitorInternetMeasurementsLogDeliveryS3ConfigArgs) ToInternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput() InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput {
	return i.ToInternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutputWithContext(context.Background())
}

func (i InternetMonitorInternetMeasurementsLogDeliveryS3ConfigArgs) ToInternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutputWithContext(ctx context.Context) InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutput).ToInternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutputWithContext(ctx)
}

// InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrInput is an input type that accepts InternetMonitorInternetMeasurementsLogDeliveryS3ConfigArgs, InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtr and InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput values.
// You can construct a concrete instance of `InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrInput` via:
//
//	        InternetMonitorInternetMeasurementsLogDeliveryS3ConfigArgs{...}
//
//	or:
//
//	        nil
type InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrInput interface {
	pulumi.Input

	ToInternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput() InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput
	ToInternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutputWithContext(context.Context) InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput
}

type internetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrType InternetMonitorInternetMeasurementsLogDeliveryS3ConfigArgs

func InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtr(v *InternetMonitorInternetMeasurementsLogDeliveryS3ConfigArgs) InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrInput {
	return (*internetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrType)(v)
}

func (*internetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InternetMonitorInternetMeasurementsLogDeliveryS3Config)(nil)).Elem()
}

func (i *internetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrType) ToInternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput() InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput {
	return i.ToInternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutputWithContext(context.Background())
}

func (i *internetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrType) ToInternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutputWithContext(ctx context.Context) InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput)
}

type InternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutput struct{ *pulumi.OutputState }

func (InternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InternetMonitorInternetMeasurementsLogDeliveryS3Config)(nil)).Elem()
}

func (o InternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutput) ToInternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutput() InternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutput {
	return o
}

func (o InternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutput) ToInternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutputWithContext(ctx context.Context) InternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutput {
	return o
}

func (o InternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutput) ToInternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput() InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput {
	return o.ToInternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutputWithContext(context.Background())
}

func (o InternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutput) ToInternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutputWithContext(ctx context.Context) InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InternetMonitorInternetMeasurementsLogDeliveryS3Config) *InternetMonitorInternetMeasurementsLogDeliveryS3Config {
		return &v
	}).(InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput)
}

func (o InternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v InternetMonitorInternetMeasurementsLogDeliveryS3Config) string { return v.BucketName }).(pulumi.StringOutput)
}

func (o InternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InternetMonitorInternetMeasurementsLogDeliveryS3Config) *string { return v.BucketPrefix }).(pulumi.StringPtrOutput)
}

func (o InternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutput) LogDeliveryStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InternetMonitorInternetMeasurementsLogDeliveryS3Config) *string { return v.LogDeliveryStatus }).(pulumi.StringPtrOutput)
}

type InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput struct{ *pulumi.OutputState }

func (InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InternetMonitorInternetMeasurementsLogDeliveryS3Config)(nil)).Elem()
}

func (o InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput) ToInternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput() InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput {
	return o
}

func (o InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput) ToInternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutputWithContext(ctx context.Context) InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput {
	return o
}

func (o InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput) Elem() InternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutput {
	return o.ApplyT(func(v *InternetMonitorInternetMeasurementsLogDeliveryS3Config) InternetMonitorInternetMeasurementsLogDeliveryS3Config {
		if v != nil {
			return *v
		}
		var ret InternetMonitorInternetMeasurementsLogDeliveryS3Config
		return ret
	}).(InternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutput)
}

func (o InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InternetMonitorInternetMeasurementsLogDeliveryS3Config) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

func (o InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InternetMonitorInternetMeasurementsLogDeliveryS3Config) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

func (o InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput) LogDeliveryStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InternetMonitorInternetMeasurementsLogDeliveryS3Config) *string {
		if v == nil {
			return nil
		}
		return v.LogDeliveryStatus
	}).(pulumi.StringPtrOutput)
}

type LogMetricFilterMetricTransformation struct {
	// The value to emit when a filter pattern does not match a log event. Conflicts with `dimensions`.
	DefaultValue *string `pulumi:"defaultValue"`
	// Map of fields to use as dimensions for the metric. Up to 3 dimensions are allowed. Conflicts with `defaultValue`.
	Dimensions map[string]string `pulumi:"dimensions"`
	// The name of the CloudWatch metric to which the monitored log information should be published (e.g., `ErrorCount`)
	Name string `pulumi:"name"`
	// The destination namespace of the CloudWatch metric.
	Namespace string `pulumi:"namespace"`
	// The unit to assign to the metric. If you omit this, the unit is set as `None`.
	Unit *string `pulumi:"unit"`
	// What to publish to the metric. For example, if you're counting the occurrences of a particular term like "Error", the value will be "1" for each occurrence. If you're counting the bytes transferred the published value will be the value in the log event.
	Value string `pulumi:"value"`
}

// LogMetricFilterMetricTransformationInput is an input type that accepts LogMetricFilterMetricTransformationArgs and LogMetricFilterMetricTransformationOutput values.
// You can construct a concrete instance of `LogMetricFilterMetricTransformationInput` via:
//
//	LogMetricFilterMetricTransformationArgs{...}
type LogMetricFilterMetricTransformationInput interface {
	pulumi.Input

	ToLogMetricFilterMetricTransformationOutput() LogMetricFilterMetricTransformationOutput
	ToLogMetricFilterMetricTransformationOutputWithContext(context.Context) LogMetricFilterMetricTransformationOutput
}

type LogMetricFilterMetricTransformationArgs struct {
	// The value to emit when a filter pattern does not match a log event. Conflicts with `dimensions`.
	DefaultValue pulumi.StringPtrInput `pulumi:"defaultValue"`
	// Map of fields to use as dimensions for the metric. Up to 3 dimensions are allowed. Conflicts with `defaultValue`.
	Dimensions pulumi.StringMapInput `pulumi:"dimensions"`
	// The name of the CloudWatch metric to which the monitored log information should be published (e.g., `ErrorCount`)
	Name pulumi.StringInput `pulumi:"name"`
	// The destination namespace of the CloudWatch metric.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The unit to assign to the metric. If you omit this, the unit is set as `None`.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
	// What to publish to the metric. For example, if you're counting the occurrences of a particular term like "Error", the value will be "1" for each occurrence. If you're counting the bytes transferred the published value will be the value in the log event.
	Value pulumi.StringInput `pulumi:"value"`
}

func (LogMetricFilterMetricTransformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LogMetricFilterMetricTransformation)(nil)).Elem()
}

func (i LogMetricFilterMetricTransformationArgs) ToLogMetricFilterMetricTransformationOutput() LogMetricFilterMetricTransformationOutput {
	return i.ToLogMetricFilterMetricTransformationOutputWithContext(context.Background())
}

func (i LogMetricFilterMetricTransformationArgs) ToLogMetricFilterMetricTransformationOutputWithContext(ctx context.Context) LogMetricFilterMetricTransformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogMetricFilterMetricTransformationOutput)
}

func (i LogMetricFilterMetricTransformationArgs) ToLogMetricFilterMetricTransformationPtrOutput() LogMetricFilterMetricTransformationPtrOutput {
	return i.ToLogMetricFilterMetricTransformationPtrOutputWithContext(context.Background())
}

func (i LogMetricFilterMetricTransformationArgs) ToLogMetricFilterMetricTransformationPtrOutputWithContext(ctx context.Context) LogMetricFilterMetricTransformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogMetricFilterMetricTransformationOutput).ToLogMetricFilterMetricTransformationPtrOutputWithContext(ctx)
}

// LogMetricFilterMetricTransformationPtrInput is an input type that accepts LogMetricFilterMetricTransformationArgs, LogMetricFilterMetricTransformationPtr and LogMetricFilterMetricTransformationPtrOutput values.
// You can construct a concrete instance of `LogMetricFilterMetricTransformationPtrInput` via:
//
//	        LogMetricFilterMetricTransformationArgs{...}
//
//	or:
//
//	        nil
type LogMetricFilterMetricTransformationPtrInput interface {
	pulumi.Input

	ToLogMetricFilterMetricTransformationPtrOutput() LogMetricFilterMetricTransformationPtrOutput
	ToLogMetricFilterMetricTransformationPtrOutputWithContext(context.Context) LogMetricFilterMetricTransformationPtrOutput
}

type logMetricFilterMetricTransformationPtrType LogMetricFilterMetricTransformationArgs

func LogMetricFilterMetricTransformationPtr(v *LogMetricFilterMetricTransformationArgs) LogMetricFilterMetricTransformationPtrInput {
	return (*logMetricFilterMetricTransformationPtrType)(v)
}

func (*logMetricFilterMetricTransformationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LogMetricFilterMetricTransformation)(nil)).Elem()
}

func (i *logMetricFilterMetricTransformationPtrType) ToLogMetricFilterMetricTransformationPtrOutput() LogMetricFilterMetricTransformationPtrOutput {
	return i.ToLogMetricFilterMetricTransformationPtrOutputWithContext(context.Background())
}

func (i *logMetricFilterMetricTransformationPtrType) ToLogMetricFilterMetricTransformationPtrOutputWithContext(ctx context.Context) LogMetricFilterMetricTransformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LogMetricFilterMetricTransformationPtrOutput)
}

type LogMetricFilterMetricTransformationOutput struct{ *pulumi.OutputState }

func (LogMetricFilterMetricTransformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LogMetricFilterMetricTransformation)(nil)).Elem()
}

func (o LogMetricFilterMetricTransformationOutput) ToLogMetricFilterMetricTransformationOutput() LogMetricFilterMetricTransformationOutput {
	return o
}

func (o LogMetricFilterMetricTransformationOutput) ToLogMetricFilterMetricTransformationOutputWithContext(ctx context.Context) LogMetricFilterMetricTransformationOutput {
	return o
}

func (o LogMetricFilterMetricTransformationOutput) ToLogMetricFilterMetricTransformationPtrOutput() LogMetricFilterMetricTransformationPtrOutput {
	return o.ToLogMetricFilterMetricTransformationPtrOutputWithContext(context.Background())
}

func (o LogMetricFilterMetricTransformationOutput) ToLogMetricFilterMetricTransformationPtrOutputWithContext(ctx context.Context) LogMetricFilterMetricTransformationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LogMetricFilterMetricTransformation) *LogMetricFilterMetricTransformation {
		return &v
	}).(LogMetricFilterMetricTransformationPtrOutput)
}

// The value to emit when a filter pattern does not match a log event. Conflicts with `dimensions`.
func (o LogMetricFilterMetricTransformationOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogMetricFilterMetricTransformation) *string { return v.DefaultValue }).(pulumi.StringPtrOutput)
}

// Map of fields to use as dimensions for the metric. Up to 3 dimensions are allowed. Conflicts with `defaultValue`.
func (o LogMetricFilterMetricTransformationOutput) Dimensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v LogMetricFilterMetricTransformation) map[string]string { return v.Dimensions }).(pulumi.StringMapOutput)
}

// The name of the CloudWatch metric to which the monitored log information should be published (e.g., `ErrorCount`)
func (o LogMetricFilterMetricTransformationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LogMetricFilterMetricTransformation) string { return v.Name }).(pulumi.StringOutput)
}

// The destination namespace of the CloudWatch metric.
func (o LogMetricFilterMetricTransformationOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v LogMetricFilterMetricTransformation) string { return v.Namespace }).(pulumi.StringOutput)
}

// The unit to assign to the metric. If you omit this, the unit is set as `None`.
func (o LogMetricFilterMetricTransformationOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LogMetricFilterMetricTransformation) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

// What to publish to the metric. For example, if you're counting the occurrences of a particular term like "Error", the value will be "1" for each occurrence. If you're counting the bytes transferred the published value will be the value in the log event.
func (o LogMetricFilterMetricTransformationOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v LogMetricFilterMetricTransformation) string { return v.Value }).(pulumi.StringOutput)
}

type LogMetricFilterMetricTransformationPtrOutput struct{ *pulumi.OutputState }

func (LogMetricFilterMetricTransformationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LogMetricFilterMetricTransformation)(nil)).Elem()
}

func (o LogMetricFilterMetricTransformationPtrOutput) ToLogMetricFilterMetricTransformationPtrOutput() LogMetricFilterMetricTransformationPtrOutput {
	return o
}

func (o LogMetricFilterMetricTransformationPtrOutput) ToLogMetricFilterMetricTransformationPtrOutputWithContext(ctx context.Context) LogMetricFilterMetricTransformationPtrOutput {
	return o
}

func (o LogMetricFilterMetricTransformationPtrOutput) Elem() LogMetricFilterMetricTransformationOutput {
	return o.ApplyT(func(v *LogMetricFilterMetricTransformation) LogMetricFilterMetricTransformation {
		if v != nil {
			return *v
		}
		var ret LogMetricFilterMetricTransformation
		return ret
	}).(LogMetricFilterMetricTransformationOutput)
}

// The value to emit when a filter pattern does not match a log event. Conflicts with `dimensions`.
func (o LogMetricFilterMetricTransformationPtrOutput) DefaultValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogMetricFilterMetricTransformation) *string {
		if v == nil {
			return nil
		}
		return v.DefaultValue
	}).(pulumi.StringPtrOutput)
}

// Map of fields to use as dimensions for the metric. Up to 3 dimensions are allowed. Conflicts with `defaultValue`.
func (o LogMetricFilterMetricTransformationPtrOutput) Dimensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LogMetricFilterMetricTransformation) map[string]string {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(pulumi.StringMapOutput)
}

// The name of the CloudWatch metric to which the monitored log information should be published (e.g., `ErrorCount`)
func (o LogMetricFilterMetricTransformationPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogMetricFilterMetricTransformation) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The destination namespace of the CloudWatch metric.
func (o LogMetricFilterMetricTransformationPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogMetricFilterMetricTransformation) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

// The unit to assign to the metric. If you omit this, the unit is set as `None`.
func (o LogMetricFilterMetricTransformationPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogMetricFilterMetricTransformation) *string {
		if v == nil {
			return nil
		}
		return v.Unit
	}).(pulumi.StringPtrOutput)
}

// What to publish to the metric. For example, if you're counting the occurrences of a particular term like "Error", the value will be "1" for each occurrence. If you're counting the bytes transferred the published value will be the value in the log event.
func (o LogMetricFilterMetricTransformationPtrOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LogMetricFilterMetricTransformation) *string {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.StringPtrOutput)
}

type MetricAlarmMetricQuery struct {
	// The ID of the account where the metrics are located, if this is a cross-account alarm.
	AccountId *string `pulumi:"accountId"`
	// The math expression to be performed on the returned data, if this object is performing a math expression. This expression can use the id of the other metrics to refer to those metrics, and can also use the id of other expressions to use the result of those expressions. For more information about metric math expressions, see Metric Math Syntax and Functions in the [Amazon CloudWatch User Guide](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax).
	Expression *string `pulumi:"expression"`
	// A short name used to tie this object to the results in the response. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscore. The first character must be a lowercase letter.
	Id string `pulumi:"id"`
	// A human-readable label for this metric or expression. This is especially useful if this is an expression, so that you know what the value represents.
	Label *string `pulumi:"label"`
	// The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data.
	Metric *MetricAlarmMetricQueryMetric `pulumi:"metric"`
	// Granularity in seconds of returned data points.
	// For metrics with regular resolution, valid values are any multiple of `60`.
	// For high-resolution metrics, valid values are `1`, `5`, `10`, `30`, or any multiple of `60`.
	Period *int `pulumi:"period"`
	// Specify exactly one `metricQuery` to be `true` to use that `metricQuery` result as the alarm.
	//
	// > **NOTE:**  You must specify either `metric` or `expression`. Not both.
	ReturnData *bool `pulumi:"returnData"`
}

// MetricAlarmMetricQueryInput is an input type that accepts MetricAlarmMetricQueryArgs and MetricAlarmMetricQueryOutput values.
// You can construct a concrete instance of `MetricAlarmMetricQueryInput` via:
//
//	MetricAlarmMetricQueryArgs{...}
type MetricAlarmMetricQueryInput interface {
	pulumi.Input

	ToMetricAlarmMetricQueryOutput() MetricAlarmMetricQueryOutput
	ToMetricAlarmMetricQueryOutputWithContext(context.Context) MetricAlarmMetricQueryOutput
}

type MetricAlarmMetricQueryArgs struct {
	// The ID of the account where the metrics are located, if this is a cross-account alarm.
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// The math expression to be performed on the returned data, if this object is performing a math expression. This expression can use the id of the other metrics to refer to those metrics, and can also use the id of other expressions to use the result of those expressions. For more information about metric math expressions, see Metric Math Syntax and Functions in the [Amazon CloudWatch User Guide](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax).
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// A short name used to tie this object to the results in the response. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscore. The first character must be a lowercase letter.
	Id pulumi.StringInput `pulumi:"id"`
	// A human-readable label for this metric or expression. This is especially useful if this is an expression, so that you know what the value represents.
	Label pulumi.StringPtrInput `pulumi:"label"`
	// The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data.
	Metric MetricAlarmMetricQueryMetricPtrInput `pulumi:"metric"`
	// Granularity in seconds of returned data points.
	// For metrics with regular resolution, valid values are any multiple of `60`.
	// For high-resolution metrics, valid values are `1`, `5`, `10`, `30`, or any multiple of `60`.
	Period pulumi.IntPtrInput `pulumi:"period"`
	// Specify exactly one `metricQuery` to be `true` to use that `metricQuery` result as the alarm.
	//
	// > **NOTE:**  You must specify either `metric` or `expression`. Not both.
	ReturnData pulumi.BoolPtrInput `pulumi:"returnData"`
}

func (MetricAlarmMetricQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricAlarmMetricQuery)(nil)).Elem()
}

func (i MetricAlarmMetricQueryArgs) ToMetricAlarmMetricQueryOutput() MetricAlarmMetricQueryOutput {
	return i.ToMetricAlarmMetricQueryOutputWithContext(context.Background())
}

func (i MetricAlarmMetricQueryArgs) ToMetricAlarmMetricQueryOutputWithContext(ctx context.Context) MetricAlarmMetricQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricAlarmMetricQueryOutput)
}

// MetricAlarmMetricQueryArrayInput is an input type that accepts MetricAlarmMetricQueryArray and MetricAlarmMetricQueryArrayOutput values.
// You can construct a concrete instance of `MetricAlarmMetricQueryArrayInput` via:
//
//	MetricAlarmMetricQueryArray{ MetricAlarmMetricQueryArgs{...} }
type MetricAlarmMetricQueryArrayInput interface {
	pulumi.Input

	ToMetricAlarmMetricQueryArrayOutput() MetricAlarmMetricQueryArrayOutput
	ToMetricAlarmMetricQueryArrayOutputWithContext(context.Context) MetricAlarmMetricQueryArrayOutput
}

type MetricAlarmMetricQueryArray []MetricAlarmMetricQueryInput

func (MetricAlarmMetricQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricAlarmMetricQuery)(nil)).Elem()
}

func (i MetricAlarmMetricQueryArray) ToMetricAlarmMetricQueryArrayOutput() MetricAlarmMetricQueryArrayOutput {
	return i.ToMetricAlarmMetricQueryArrayOutputWithContext(context.Background())
}

func (i MetricAlarmMetricQueryArray) ToMetricAlarmMetricQueryArrayOutputWithContext(ctx context.Context) MetricAlarmMetricQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricAlarmMetricQueryArrayOutput)
}

type MetricAlarmMetricQueryOutput struct{ *pulumi.OutputState }

func (MetricAlarmMetricQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricAlarmMetricQuery)(nil)).Elem()
}

func (o MetricAlarmMetricQueryOutput) ToMetricAlarmMetricQueryOutput() MetricAlarmMetricQueryOutput {
	return o
}

func (o MetricAlarmMetricQueryOutput) ToMetricAlarmMetricQueryOutputWithContext(ctx context.Context) MetricAlarmMetricQueryOutput {
	return o
}

// The ID of the account where the metrics are located, if this is a cross-account alarm.
func (o MetricAlarmMetricQueryOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricAlarmMetricQuery) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// The math expression to be performed on the returned data, if this object is performing a math expression. This expression can use the id of the other metrics to refer to those metrics, and can also use the id of other expressions to use the result of those expressions. For more information about metric math expressions, see Metric Math Syntax and Functions in the [Amazon CloudWatch User Guide](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/using-metric-math.html#metric-math-syntax).
func (o MetricAlarmMetricQueryOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricAlarmMetricQuery) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// A short name used to tie this object to the results in the response. If you are performing math expressions on this set of data, this name represents that data and can serve as a variable in the mathematical expression. The valid characters are letters, numbers, and underscore. The first character must be a lowercase letter.
func (o MetricAlarmMetricQueryOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v MetricAlarmMetricQuery) string { return v.Id }).(pulumi.StringOutput)
}

// A human-readable label for this metric or expression. This is especially useful if this is an expression, so that you know what the value represents.
func (o MetricAlarmMetricQueryOutput) Label() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricAlarmMetricQuery) *string { return v.Label }).(pulumi.StringPtrOutput)
}

// The metric to be returned, along with statistics, period, and units. Use this parameter only if this object is retrieving a metric and not performing a math expression on returned data.
func (o MetricAlarmMetricQueryOutput) Metric() MetricAlarmMetricQueryMetricPtrOutput {
	return o.ApplyT(func(v MetricAlarmMetricQuery) *MetricAlarmMetricQueryMetric { return v.Metric }).(MetricAlarmMetricQueryMetricPtrOutput)
}

// Granularity in seconds of returned data points.
// For metrics with regular resolution, valid values are any multiple of `60`.
// For high-resolution metrics, valid values are `1`, `5`, `10`, `30`, or any multiple of `60`.
func (o MetricAlarmMetricQueryOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v MetricAlarmMetricQuery) *int { return v.Period }).(pulumi.IntPtrOutput)
}

// Specify exactly one `metricQuery` to be `true` to use that `metricQuery` result as the alarm.
//
// > **NOTE:**  You must specify either `metric` or `expression`. Not both.
func (o MetricAlarmMetricQueryOutput) ReturnData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v MetricAlarmMetricQuery) *bool { return v.ReturnData }).(pulumi.BoolPtrOutput)
}

type MetricAlarmMetricQueryArrayOutput struct{ *pulumi.OutputState }

func (MetricAlarmMetricQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricAlarmMetricQuery)(nil)).Elem()
}

func (o MetricAlarmMetricQueryArrayOutput) ToMetricAlarmMetricQueryArrayOutput() MetricAlarmMetricQueryArrayOutput {
	return o
}

func (o MetricAlarmMetricQueryArrayOutput) ToMetricAlarmMetricQueryArrayOutputWithContext(ctx context.Context) MetricAlarmMetricQueryArrayOutput {
	return o
}

func (o MetricAlarmMetricQueryArrayOutput) Index(i pulumi.IntInput) MetricAlarmMetricQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetricAlarmMetricQuery {
		return vs[0].([]MetricAlarmMetricQuery)[vs[1].(int)]
	}).(MetricAlarmMetricQueryOutput)
}

type MetricAlarmMetricQueryMetric struct {
	// The dimensions for this metric.  For the list of available dimensions see the AWS documentation [here](http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
	Dimensions map[string]string `pulumi:"dimensions"`
	// The name for this metric.
	// See docs for [supported metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
	MetricName string `pulumi:"metricName"`
	// The namespace for this metric. See docs for the [list of namespaces](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/aws-namespaces.html).
	// See docs for [supported metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
	Namespace *string `pulumi:"namespace"`
	// Granularity in seconds of returned data points.
	// For metrics with regular resolution, valid values are any multiple of `60`.
	// For high-resolution metrics, valid values are `1`, `5`, `10`, `30`, or any multiple of `60`.
	Period int `pulumi:"period"`
	// The statistic to apply to this metric.
	// See docs for [supported statistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Statistics-definitions.html).
	Stat string `pulumi:"stat"`
	// The unit for this metric.
	Unit *string `pulumi:"unit"`
}

// MetricAlarmMetricQueryMetricInput is an input type that accepts MetricAlarmMetricQueryMetricArgs and MetricAlarmMetricQueryMetricOutput values.
// You can construct a concrete instance of `MetricAlarmMetricQueryMetricInput` via:
//
//	MetricAlarmMetricQueryMetricArgs{...}
type MetricAlarmMetricQueryMetricInput interface {
	pulumi.Input

	ToMetricAlarmMetricQueryMetricOutput() MetricAlarmMetricQueryMetricOutput
	ToMetricAlarmMetricQueryMetricOutputWithContext(context.Context) MetricAlarmMetricQueryMetricOutput
}

type MetricAlarmMetricQueryMetricArgs struct {
	// The dimensions for this metric.  For the list of available dimensions see the AWS documentation [here](http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
	Dimensions pulumi.StringMapInput `pulumi:"dimensions"`
	// The name for this metric.
	// See docs for [supported metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// The namespace for this metric. See docs for the [list of namespaces](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/aws-namespaces.html).
	// See docs for [supported metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Granularity in seconds of returned data points.
	// For metrics with regular resolution, valid values are any multiple of `60`.
	// For high-resolution metrics, valid values are `1`, `5`, `10`, `30`, or any multiple of `60`.
	Period pulumi.IntInput `pulumi:"period"`
	// The statistic to apply to this metric.
	// See docs for [supported statistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Statistics-definitions.html).
	Stat pulumi.StringInput `pulumi:"stat"`
	// The unit for this metric.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (MetricAlarmMetricQueryMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricAlarmMetricQueryMetric)(nil)).Elem()
}

func (i MetricAlarmMetricQueryMetricArgs) ToMetricAlarmMetricQueryMetricOutput() MetricAlarmMetricQueryMetricOutput {
	return i.ToMetricAlarmMetricQueryMetricOutputWithContext(context.Background())
}

func (i MetricAlarmMetricQueryMetricArgs) ToMetricAlarmMetricQueryMetricOutputWithContext(ctx context.Context) MetricAlarmMetricQueryMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricAlarmMetricQueryMetricOutput)
}

func (i MetricAlarmMetricQueryMetricArgs) ToMetricAlarmMetricQueryMetricPtrOutput() MetricAlarmMetricQueryMetricPtrOutput {
	return i.ToMetricAlarmMetricQueryMetricPtrOutputWithContext(context.Background())
}

func (i MetricAlarmMetricQueryMetricArgs) ToMetricAlarmMetricQueryMetricPtrOutputWithContext(ctx context.Context) MetricAlarmMetricQueryMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricAlarmMetricQueryMetricOutput).ToMetricAlarmMetricQueryMetricPtrOutputWithContext(ctx)
}

// MetricAlarmMetricQueryMetricPtrInput is an input type that accepts MetricAlarmMetricQueryMetricArgs, MetricAlarmMetricQueryMetricPtr and MetricAlarmMetricQueryMetricPtrOutput values.
// You can construct a concrete instance of `MetricAlarmMetricQueryMetricPtrInput` via:
//
//	        MetricAlarmMetricQueryMetricArgs{...}
//
//	or:
//
//	        nil
type MetricAlarmMetricQueryMetricPtrInput interface {
	pulumi.Input

	ToMetricAlarmMetricQueryMetricPtrOutput() MetricAlarmMetricQueryMetricPtrOutput
	ToMetricAlarmMetricQueryMetricPtrOutputWithContext(context.Context) MetricAlarmMetricQueryMetricPtrOutput
}

type metricAlarmMetricQueryMetricPtrType MetricAlarmMetricQueryMetricArgs

func MetricAlarmMetricQueryMetricPtr(v *MetricAlarmMetricQueryMetricArgs) MetricAlarmMetricQueryMetricPtrInput {
	return (*metricAlarmMetricQueryMetricPtrType)(v)
}

func (*metricAlarmMetricQueryMetricPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricAlarmMetricQueryMetric)(nil)).Elem()
}

func (i *metricAlarmMetricQueryMetricPtrType) ToMetricAlarmMetricQueryMetricPtrOutput() MetricAlarmMetricQueryMetricPtrOutput {
	return i.ToMetricAlarmMetricQueryMetricPtrOutputWithContext(context.Background())
}

func (i *metricAlarmMetricQueryMetricPtrType) ToMetricAlarmMetricQueryMetricPtrOutputWithContext(ctx context.Context) MetricAlarmMetricQueryMetricPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricAlarmMetricQueryMetricPtrOutput)
}

type MetricAlarmMetricQueryMetricOutput struct{ *pulumi.OutputState }

func (MetricAlarmMetricQueryMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricAlarmMetricQueryMetric)(nil)).Elem()
}

func (o MetricAlarmMetricQueryMetricOutput) ToMetricAlarmMetricQueryMetricOutput() MetricAlarmMetricQueryMetricOutput {
	return o
}

func (o MetricAlarmMetricQueryMetricOutput) ToMetricAlarmMetricQueryMetricOutputWithContext(ctx context.Context) MetricAlarmMetricQueryMetricOutput {
	return o
}

func (o MetricAlarmMetricQueryMetricOutput) ToMetricAlarmMetricQueryMetricPtrOutput() MetricAlarmMetricQueryMetricPtrOutput {
	return o.ToMetricAlarmMetricQueryMetricPtrOutputWithContext(context.Background())
}

func (o MetricAlarmMetricQueryMetricOutput) ToMetricAlarmMetricQueryMetricPtrOutputWithContext(ctx context.Context) MetricAlarmMetricQueryMetricPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MetricAlarmMetricQueryMetric) *MetricAlarmMetricQueryMetric {
		return &v
	}).(MetricAlarmMetricQueryMetricPtrOutput)
}

// The dimensions for this metric.  For the list of available dimensions see the AWS documentation [here](http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
func (o MetricAlarmMetricQueryMetricOutput) Dimensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v MetricAlarmMetricQueryMetric) map[string]string { return v.Dimensions }).(pulumi.StringMapOutput)
}

// The name for this metric.
// See docs for [supported metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
func (o MetricAlarmMetricQueryMetricOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v MetricAlarmMetricQueryMetric) string { return v.MetricName }).(pulumi.StringOutput)
}

// The namespace for this metric. See docs for the [list of namespaces](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/aws-namespaces.html).
// See docs for [supported metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
func (o MetricAlarmMetricQueryMetricOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricAlarmMetricQueryMetric) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Granularity in seconds of returned data points.
// For metrics with regular resolution, valid values are any multiple of `60`.
// For high-resolution metrics, valid values are `1`, `5`, `10`, `30`, or any multiple of `60`.
func (o MetricAlarmMetricQueryMetricOutput) Period() pulumi.IntOutput {
	return o.ApplyT(func(v MetricAlarmMetricQueryMetric) int { return v.Period }).(pulumi.IntOutput)
}

// The statistic to apply to this metric.
// See docs for [supported statistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Statistics-definitions.html).
func (o MetricAlarmMetricQueryMetricOutput) Stat() pulumi.StringOutput {
	return o.ApplyT(func(v MetricAlarmMetricQueryMetric) string { return v.Stat }).(pulumi.StringOutput)
}

// The unit for this metric.
func (o MetricAlarmMetricQueryMetricOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v MetricAlarmMetricQueryMetric) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type MetricAlarmMetricQueryMetricPtrOutput struct{ *pulumi.OutputState }

func (MetricAlarmMetricQueryMetricPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MetricAlarmMetricQueryMetric)(nil)).Elem()
}

func (o MetricAlarmMetricQueryMetricPtrOutput) ToMetricAlarmMetricQueryMetricPtrOutput() MetricAlarmMetricQueryMetricPtrOutput {
	return o
}

func (o MetricAlarmMetricQueryMetricPtrOutput) ToMetricAlarmMetricQueryMetricPtrOutputWithContext(ctx context.Context) MetricAlarmMetricQueryMetricPtrOutput {
	return o
}

func (o MetricAlarmMetricQueryMetricPtrOutput) Elem() MetricAlarmMetricQueryMetricOutput {
	return o.ApplyT(func(v *MetricAlarmMetricQueryMetric) MetricAlarmMetricQueryMetric {
		if v != nil {
			return *v
		}
		var ret MetricAlarmMetricQueryMetric
		return ret
	}).(MetricAlarmMetricQueryMetricOutput)
}

// The dimensions for this metric.  For the list of available dimensions see the AWS documentation [here](http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
func (o MetricAlarmMetricQueryMetricPtrOutput) Dimensions() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MetricAlarmMetricQueryMetric) map[string]string {
		if v == nil {
			return nil
		}
		return v.Dimensions
	}).(pulumi.StringMapOutput)
}

// The name for this metric.
// See docs for [supported metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
func (o MetricAlarmMetricQueryMetricPtrOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricAlarmMetricQueryMetric) *string {
		if v == nil {
			return nil
		}
		return &v.MetricName
	}).(pulumi.StringPtrOutput)
}

// The namespace for this metric. See docs for the [list of namespaces](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/aws-namespaces.html).
// See docs for [supported metrics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CW_Support_For_AWS.html).
func (o MetricAlarmMetricQueryMetricPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricAlarmMetricQueryMetric) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// Granularity in seconds of returned data points.
// For metrics with regular resolution, valid values are any multiple of `60`.
// For high-resolution metrics, valid values are `1`, `5`, `10`, `30`, or any multiple of `60`.
func (o MetricAlarmMetricQueryMetricPtrOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *MetricAlarmMetricQueryMetric) *int {
		if v == nil {
			return nil
		}
		return &v.Period
	}).(pulumi.IntPtrOutput)
}

// The statistic to apply to this metric.
// See docs for [supported statistics](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Statistics-definitions.html).
func (o MetricAlarmMetricQueryMetricPtrOutput) Stat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricAlarmMetricQueryMetric) *string {
		if v == nil {
			return nil
		}
		return &v.Stat
	}).(pulumi.StringPtrOutput)
}

// The unit for this metric.
func (o MetricAlarmMetricQueryMetricPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MetricAlarmMetricQueryMetric) *string {
		if v == nil {
			return nil
		}
		return v.Unit
	}).(pulumi.StringPtrOutput)
}

type MetricStreamExcludeFilter struct {
	// An array that defines the metrics you want to exclude for this metric namespace
	MetricNames []string `pulumi:"metricNames"`
	// Name of the metric namespace in the filter.
	Namespace string `pulumi:"namespace"`
}

// MetricStreamExcludeFilterInput is an input type that accepts MetricStreamExcludeFilterArgs and MetricStreamExcludeFilterOutput values.
// You can construct a concrete instance of `MetricStreamExcludeFilterInput` via:
//
//	MetricStreamExcludeFilterArgs{...}
type MetricStreamExcludeFilterInput interface {
	pulumi.Input

	ToMetricStreamExcludeFilterOutput() MetricStreamExcludeFilterOutput
	ToMetricStreamExcludeFilterOutputWithContext(context.Context) MetricStreamExcludeFilterOutput
}

type MetricStreamExcludeFilterArgs struct {
	// An array that defines the metrics you want to exclude for this metric namespace
	MetricNames pulumi.StringArrayInput `pulumi:"metricNames"`
	// Name of the metric namespace in the filter.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (MetricStreamExcludeFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricStreamExcludeFilter)(nil)).Elem()
}

func (i MetricStreamExcludeFilterArgs) ToMetricStreamExcludeFilterOutput() MetricStreamExcludeFilterOutput {
	return i.ToMetricStreamExcludeFilterOutputWithContext(context.Background())
}

func (i MetricStreamExcludeFilterArgs) ToMetricStreamExcludeFilterOutputWithContext(ctx context.Context) MetricStreamExcludeFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricStreamExcludeFilterOutput)
}

// MetricStreamExcludeFilterArrayInput is an input type that accepts MetricStreamExcludeFilterArray and MetricStreamExcludeFilterArrayOutput values.
// You can construct a concrete instance of `MetricStreamExcludeFilterArrayInput` via:
//
//	MetricStreamExcludeFilterArray{ MetricStreamExcludeFilterArgs{...} }
type MetricStreamExcludeFilterArrayInput interface {
	pulumi.Input

	ToMetricStreamExcludeFilterArrayOutput() MetricStreamExcludeFilterArrayOutput
	ToMetricStreamExcludeFilterArrayOutputWithContext(context.Context) MetricStreamExcludeFilterArrayOutput
}

type MetricStreamExcludeFilterArray []MetricStreamExcludeFilterInput

func (MetricStreamExcludeFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricStreamExcludeFilter)(nil)).Elem()
}

func (i MetricStreamExcludeFilterArray) ToMetricStreamExcludeFilterArrayOutput() MetricStreamExcludeFilterArrayOutput {
	return i.ToMetricStreamExcludeFilterArrayOutputWithContext(context.Background())
}

func (i MetricStreamExcludeFilterArray) ToMetricStreamExcludeFilterArrayOutputWithContext(ctx context.Context) MetricStreamExcludeFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricStreamExcludeFilterArrayOutput)
}

type MetricStreamExcludeFilterOutput struct{ *pulumi.OutputState }

func (MetricStreamExcludeFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricStreamExcludeFilter)(nil)).Elem()
}

func (o MetricStreamExcludeFilterOutput) ToMetricStreamExcludeFilterOutput() MetricStreamExcludeFilterOutput {
	return o
}

func (o MetricStreamExcludeFilterOutput) ToMetricStreamExcludeFilterOutputWithContext(ctx context.Context) MetricStreamExcludeFilterOutput {
	return o
}

// An array that defines the metrics you want to exclude for this metric namespace
func (o MetricStreamExcludeFilterOutput) MetricNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MetricStreamExcludeFilter) []string { return v.MetricNames }).(pulumi.StringArrayOutput)
}

// Name of the metric namespace in the filter.
func (o MetricStreamExcludeFilterOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v MetricStreamExcludeFilter) string { return v.Namespace }).(pulumi.StringOutput)
}

type MetricStreamExcludeFilterArrayOutput struct{ *pulumi.OutputState }

func (MetricStreamExcludeFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricStreamExcludeFilter)(nil)).Elem()
}

func (o MetricStreamExcludeFilterArrayOutput) ToMetricStreamExcludeFilterArrayOutput() MetricStreamExcludeFilterArrayOutput {
	return o
}

func (o MetricStreamExcludeFilterArrayOutput) ToMetricStreamExcludeFilterArrayOutputWithContext(ctx context.Context) MetricStreamExcludeFilterArrayOutput {
	return o
}

func (o MetricStreamExcludeFilterArrayOutput) Index(i pulumi.IntInput) MetricStreamExcludeFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetricStreamExcludeFilter {
		return vs[0].([]MetricStreamExcludeFilter)[vs[1].(int)]
	}).(MetricStreamExcludeFilterOutput)
}

type MetricStreamIncludeFilter struct {
	// An array that defines the metrics you want to include for this metric namespace
	MetricNames []string `pulumi:"metricNames"`
	// Name of the metric namespace in the filter.
	Namespace string `pulumi:"namespace"`
}

// MetricStreamIncludeFilterInput is an input type that accepts MetricStreamIncludeFilterArgs and MetricStreamIncludeFilterOutput values.
// You can construct a concrete instance of `MetricStreamIncludeFilterInput` via:
//
//	MetricStreamIncludeFilterArgs{...}
type MetricStreamIncludeFilterInput interface {
	pulumi.Input

	ToMetricStreamIncludeFilterOutput() MetricStreamIncludeFilterOutput
	ToMetricStreamIncludeFilterOutputWithContext(context.Context) MetricStreamIncludeFilterOutput
}

type MetricStreamIncludeFilterArgs struct {
	// An array that defines the metrics you want to include for this metric namespace
	MetricNames pulumi.StringArrayInput `pulumi:"metricNames"`
	// Name of the metric namespace in the filter.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (MetricStreamIncludeFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricStreamIncludeFilter)(nil)).Elem()
}

func (i MetricStreamIncludeFilterArgs) ToMetricStreamIncludeFilterOutput() MetricStreamIncludeFilterOutput {
	return i.ToMetricStreamIncludeFilterOutputWithContext(context.Background())
}

func (i MetricStreamIncludeFilterArgs) ToMetricStreamIncludeFilterOutputWithContext(ctx context.Context) MetricStreamIncludeFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricStreamIncludeFilterOutput)
}

// MetricStreamIncludeFilterArrayInput is an input type that accepts MetricStreamIncludeFilterArray and MetricStreamIncludeFilterArrayOutput values.
// You can construct a concrete instance of `MetricStreamIncludeFilterArrayInput` via:
//
//	MetricStreamIncludeFilterArray{ MetricStreamIncludeFilterArgs{...} }
type MetricStreamIncludeFilterArrayInput interface {
	pulumi.Input

	ToMetricStreamIncludeFilterArrayOutput() MetricStreamIncludeFilterArrayOutput
	ToMetricStreamIncludeFilterArrayOutputWithContext(context.Context) MetricStreamIncludeFilterArrayOutput
}

type MetricStreamIncludeFilterArray []MetricStreamIncludeFilterInput

func (MetricStreamIncludeFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricStreamIncludeFilter)(nil)).Elem()
}

func (i MetricStreamIncludeFilterArray) ToMetricStreamIncludeFilterArrayOutput() MetricStreamIncludeFilterArrayOutput {
	return i.ToMetricStreamIncludeFilterArrayOutputWithContext(context.Background())
}

func (i MetricStreamIncludeFilterArray) ToMetricStreamIncludeFilterArrayOutputWithContext(ctx context.Context) MetricStreamIncludeFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricStreamIncludeFilterArrayOutput)
}

type MetricStreamIncludeFilterOutput struct{ *pulumi.OutputState }

func (MetricStreamIncludeFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricStreamIncludeFilter)(nil)).Elem()
}

func (o MetricStreamIncludeFilterOutput) ToMetricStreamIncludeFilterOutput() MetricStreamIncludeFilterOutput {
	return o
}

func (o MetricStreamIncludeFilterOutput) ToMetricStreamIncludeFilterOutputWithContext(ctx context.Context) MetricStreamIncludeFilterOutput {
	return o
}

// An array that defines the metrics you want to include for this metric namespace
func (o MetricStreamIncludeFilterOutput) MetricNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MetricStreamIncludeFilter) []string { return v.MetricNames }).(pulumi.StringArrayOutput)
}

// Name of the metric namespace in the filter.
func (o MetricStreamIncludeFilterOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v MetricStreamIncludeFilter) string { return v.Namespace }).(pulumi.StringOutput)
}

type MetricStreamIncludeFilterArrayOutput struct{ *pulumi.OutputState }

func (MetricStreamIncludeFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricStreamIncludeFilter)(nil)).Elem()
}

func (o MetricStreamIncludeFilterArrayOutput) ToMetricStreamIncludeFilterArrayOutput() MetricStreamIncludeFilterArrayOutput {
	return o
}

func (o MetricStreamIncludeFilterArrayOutput) ToMetricStreamIncludeFilterArrayOutputWithContext(ctx context.Context) MetricStreamIncludeFilterArrayOutput {
	return o
}

func (o MetricStreamIncludeFilterArrayOutput) Index(i pulumi.IntInput) MetricStreamIncludeFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetricStreamIncludeFilter {
		return vs[0].([]MetricStreamIncludeFilter)[vs[1].(int)]
	}).(MetricStreamIncludeFilterOutput)
}

type MetricStreamStatisticsConfiguration struct {
	// The additional statistics to stream for the metrics listed in `includeMetrics`.
	AdditionalStatistics []string `pulumi:"additionalStatistics"`
	// An array that defines the metrics that are to have additional statistics streamed. See details below.
	IncludeMetrics []MetricStreamStatisticsConfigurationIncludeMetric `pulumi:"includeMetrics"`
}

// MetricStreamStatisticsConfigurationInput is an input type that accepts MetricStreamStatisticsConfigurationArgs and MetricStreamStatisticsConfigurationOutput values.
// You can construct a concrete instance of `MetricStreamStatisticsConfigurationInput` via:
//
//	MetricStreamStatisticsConfigurationArgs{...}
type MetricStreamStatisticsConfigurationInput interface {
	pulumi.Input

	ToMetricStreamStatisticsConfigurationOutput() MetricStreamStatisticsConfigurationOutput
	ToMetricStreamStatisticsConfigurationOutputWithContext(context.Context) MetricStreamStatisticsConfigurationOutput
}

type MetricStreamStatisticsConfigurationArgs struct {
	// The additional statistics to stream for the metrics listed in `includeMetrics`.
	AdditionalStatistics pulumi.StringArrayInput `pulumi:"additionalStatistics"`
	// An array that defines the metrics that are to have additional statistics streamed. See details below.
	IncludeMetrics MetricStreamStatisticsConfigurationIncludeMetricArrayInput `pulumi:"includeMetrics"`
}

func (MetricStreamStatisticsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricStreamStatisticsConfiguration)(nil)).Elem()
}

func (i MetricStreamStatisticsConfigurationArgs) ToMetricStreamStatisticsConfigurationOutput() MetricStreamStatisticsConfigurationOutput {
	return i.ToMetricStreamStatisticsConfigurationOutputWithContext(context.Background())
}

func (i MetricStreamStatisticsConfigurationArgs) ToMetricStreamStatisticsConfigurationOutputWithContext(ctx context.Context) MetricStreamStatisticsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricStreamStatisticsConfigurationOutput)
}

// MetricStreamStatisticsConfigurationArrayInput is an input type that accepts MetricStreamStatisticsConfigurationArray and MetricStreamStatisticsConfigurationArrayOutput values.
// You can construct a concrete instance of `MetricStreamStatisticsConfigurationArrayInput` via:
//
//	MetricStreamStatisticsConfigurationArray{ MetricStreamStatisticsConfigurationArgs{...} }
type MetricStreamStatisticsConfigurationArrayInput interface {
	pulumi.Input

	ToMetricStreamStatisticsConfigurationArrayOutput() MetricStreamStatisticsConfigurationArrayOutput
	ToMetricStreamStatisticsConfigurationArrayOutputWithContext(context.Context) MetricStreamStatisticsConfigurationArrayOutput
}

type MetricStreamStatisticsConfigurationArray []MetricStreamStatisticsConfigurationInput

func (MetricStreamStatisticsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricStreamStatisticsConfiguration)(nil)).Elem()
}

func (i MetricStreamStatisticsConfigurationArray) ToMetricStreamStatisticsConfigurationArrayOutput() MetricStreamStatisticsConfigurationArrayOutput {
	return i.ToMetricStreamStatisticsConfigurationArrayOutputWithContext(context.Background())
}

func (i MetricStreamStatisticsConfigurationArray) ToMetricStreamStatisticsConfigurationArrayOutputWithContext(ctx context.Context) MetricStreamStatisticsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricStreamStatisticsConfigurationArrayOutput)
}

type MetricStreamStatisticsConfigurationOutput struct{ *pulumi.OutputState }

func (MetricStreamStatisticsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricStreamStatisticsConfiguration)(nil)).Elem()
}

func (o MetricStreamStatisticsConfigurationOutput) ToMetricStreamStatisticsConfigurationOutput() MetricStreamStatisticsConfigurationOutput {
	return o
}

func (o MetricStreamStatisticsConfigurationOutput) ToMetricStreamStatisticsConfigurationOutputWithContext(ctx context.Context) MetricStreamStatisticsConfigurationOutput {
	return o
}

// The additional statistics to stream for the metrics listed in `includeMetrics`.
func (o MetricStreamStatisticsConfigurationOutput) AdditionalStatistics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MetricStreamStatisticsConfiguration) []string { return v.AdditionalStatistics }).(pulumi.StringArrayOutput)
}

// An array that defines the metrics that are to have additional statistics streamed. See details below.
func (o MetricStreamStatisticsConfigurationOutput) IncludeMetrics() MetricStreamStatisticsConfigurationIncludeMetricArrayOutput {
	return o.ApplyT(func(v MetricStreamStatisticsConfiguration) []MetricStreamStatisticsConfigurationIncludeMetric {
		return v.IncludeMetrics
	}).(MetricStreamStatisticsConfigurationIncludeMetricArrayOutput)
}

type MetricStreamStatisticsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (MetricStreamStatisticsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricStreamStatisticsConfiguration)(nil)).Elem()
}

func (o MetricStreamStatisticsConfigurationArrayOutput) ToMetricStreamStatisticsConfigurationArrayOutput() MetricStreamStatisticsConfigurationArrayOutput {
	return o
}

func (o MetricStreamStatisticsConfigurationArrayOutput) ToMetricStreamStatisticsConfigurationArrayOutputWithContext(ctx context.Context) MetricStreamStatisticsConfigurationArrayOutput {
	return o
}

func (o MetricStreamStatisticsConfigurationArrayOutput) Index(i pulumi.IntInput) MetricStreamStatisticsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetricStreamStatisticsConfiguration {
		return vs[0].([]MetricStreamStatisticsConfiguration)[vs[1].(int)]
	}).(MetricStreamStatisticsConfigurationOutput)
}

type MetricStreamStatisticsConfigurationIncludeMetric struct {
	// The name of the metric.
	MetricName string `pulumi:"metricName"`
	// Name of the metric namespace in the filter.
	Namespace string `pulumi:"namespace"`
}

// MetricStreamStatisticsConfigurationIncludeMetricInput is an input type that accepts MetricStreamStatisticsConfigurationIncludeMetricArgs and MetricStreamStatisticsConfigurationIncludeMetricOutput values.
// You can construct a concrete instance of `MetricStreamStatisticsConfigurationIncludeMetricInput` via:
//
//	MetricStreamStatisticsConfigurationIncludeMetricArgs{...}
type MetricStreamStatisticsConfigurationIncludeMetricInput interface {
	pulumi.Input

	ToMetricStreamStatisticsConfigurationIncludeMetricOutput() MetricStreamStatisticsConfigurationIncludeMetricOutput
	ToMetricStreamStatisticsConfigurationIncludeMetricOutputWithContext(context.Context) MetricStreamStatisticsConfigurationIncludeMetricOutput
}

type MetricStreamStatisticsConfigurationIncludeMetricArgs struct {
	// The name of the metric.
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// Name of the metric namespace in the filter.
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (MetricStreamStatisticsConfigurationIncludeMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricStreamStatisticsConfigurationIncludeMetric)(nil)).Elem()
}

func (i MetricStreamStatisticsConfigurationIncludeMetricArgs) ToMetricStreamStatisticsConfigurationIncludeMetricOutput() MetricStreamStatisticsConfigurationIncludeMetricOutput {
	return i.ToMetricStreamStatisticsConfigurationIncludeMetricOutputWithContext(context.Background())
}

func (i MetricStreamStatisticsConfigurationIncludeMetricArgs) ToMetricStreamStatisticsConfigurationIncludeMetricOutputWithContext(ctx context.Context) MetricStreamStatisticsConfigurationIncludeMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricStreamStatisticsConfigurationIncludeMetricOutput)
}

// MetricStreamStatisticsConfigurationIncludeMetricArrayInput is an input type that accepts MetricStreamStatisticsConfigurationIncludeMetricArray and MetricStreamStatisticsConfigurationIncludeMetricArrayOutput values.
// You can construct a concrete instance of `MetricStreamStatisticsConfigurationIncludeMetricArrayInput` via:
//
//	MetricStreamStatisticsConfigurationIncludeMetricArray{ MetricStreamStatisticsConfigurationIncludeMetricArgs{...} }
type MetricStreamStatisticsConfigurationIncludeMetricArrayInput interface {
	pulumi.Input

	ToMetricStreamStatisticsConfigurationIncludeMetricArrayOutput() MetricStreamStatisticsConfigurationIncludeMetricArrayOutput
	ToMetricStreamStatisticsConfigurationIncludeMetricArrayOutputWithContext(context.Context) MetricStreamStatisticsConfigurationIncludeMetricArrayOutput
}

type MetricStreamStatisticsConfigurationIncludeMetricArray []MetricStreamStatisticsConfigurationIncludeMetricInput

func (MetricStreamStatisticsConfigurationIncludeMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricStreamStatisticsConfigurationIncludeMetric)(nil)).Elem()
}

func (i MetricStreamStatisticsConfigurationIncludeMetricArray) ToMetricStreamStatisticsConfigurationIncludeMetricArrayOutput() MetricStreamStatisticsConfigurationIncludeMetricArrayOutput {
	return i.ToMetricStreamStatisticsConfigurationIncludeMetricArrayOutputWithContext(context.Background())
}

func (i MetricStreamStatisticsConfigurationIncludeMetricArray) ToMetricStreamStatisticsConfigurationIncludeMetricArrayOutputWithContext(ctx context.Context) MetricStreamStatisticsConfigurationIncludeMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricStreamStatisticsConfigurationIncludeMetricArrayOutput)
}

type MetricStreamStatisticsConfigurationIncludeMetricOutput struct{ *pulumi.OutputState }

func (MetricStreamStatisticsConfigurationIncludeMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricStreamStatisticsConfigurationIncludeMetric)(nil)).Elem()
}

func (o MetricStreamStatisticsConfigurationIncludeMetricOutput) ToMetricStreamStatisticsConfigurationIncludeMetricOutput() MetricStreamStatisticsConfigurationIncludeMetricOutput {
	return o
}

func (o MetricStreamStatisticsConfigurationIncludeMetricOutput) ToMetricStreamStatisticsConfigurationIncludeMetricOutputWithContext(ctx context.Context) MetricStreamStatisticsConfigurationIncludeMetricOutput {
	return o
}

// The name of the metric.
func (o MetricStreamStatisticsConfigurationIncludeMetricOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v MetricStreamStatisticsConfigurationIncludeMetric) string { return v.MetricName }).(pulumi.StringOutput)
}

// Name of the metric namespace in the filter.
func (o MetricStreamStatisticsConfigurationIncludeMetricOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v MetricStreamStatisticsConfigurationIncludeMetric) string { return v.Namespace }).(pulumi.StringOutput)
}

type MetricStreamStatisticsConfigurationIncludeMetricArrayOutput struct{ *pulumi.OutputState }

func (MetricStreamStatisticsConfigurationIncludeMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MetricStreamStatisticsConfigurationIncludeMetric)(nil)).Elem()
}

func (o MetricStreamStatisticsConfigurationIncludeMetricArrayOutput) ToMetricStreamStatisticsConfigurationIncludeMetricArrayOutput() MetricStreamStatisticsConfigurationIncludeMetricArrayOutput {
	return o
}

func (o MetricStreamStatisticsConfigurationIncludeMetricArrayOutput) ToMetricStreamStatisticsConfigurationIncludeMetricArrayOutputWithContext(ctx context.Context) MetricStreamStatisticsConfigurationIncludeMetricArrayOutput {
	return o
}

func (o MetricStreamStatisticsConfigurationIncludeMetricArrayOutput) Index(i pulumi.IntInput) MetricStreamStatisticsConfigurationIncludeMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MetricStreamStatisticsConfigurationIncludeMetric {
		return vs[0].([]MetricStreamStatisticsConfigurationIncludeMetric)[vs[1].(int)]
	}).(MetricStreamStatisticsConfigurationIncludeMetricOutput)
}

type GetLogDataProtectionPolicyDocumentStatement struct {
	// Set of at least 1 sensitive data identifiers that you want to mask. Read more in [Types of data that you can protect](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/protect-sensitive-log-data-types.html).
	DataIdentifiers []string `pulumi:"dataIdentifiers"`
	// Configures the data protection operation applied by this statement.
	Operation GetLogDataProtectionPolicyDocumentStatementOperation `pulumi:"operation"`
	// Name of this statement.
	Sid *string `pulumi:"sid"`
}

// GetLogDataProtectionPolicyDocumentStatementInput is an input type that accepts GetLogDataProtectionPolicyDocumentStatementArgs and GetLogDataProtectionPolicyDocumentStatementOutput values.
// You can construct a concrete instance of `GetLogDataProtectionPolicyDocumentStatementInput` via:
//
//	GetLogDataProtectionPolicyDocumentStatementArgs{...}
type GetLogDataProtectionPolicyDocumentStatementInput interface {
	pulumi.Input

	ToGetLogDataProtectionPolicyDocumentStatementOutput() GetLogDataProtectionPolicyDocumentStatementOutput
	ToGetLogDataProtectionPolicyDocumentStatementOutputWithContext(context.Context) GetLogDataProtectionPolicyDocumentStatementOutput
}

type GetLogDataProtectionPolicyDocumentStatementArgs struct {
	// Set of at least 1 sensitive data identifiers that you want to mask. Read more in [Types of data that you can protect](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/protect-sensitive-log-data-types.html).
	DataIdentifiers pulumi.StringArrayInput `pulumi:"dataIdentifiers"`
	// Configures the data protection operation applied by this statement.
	Operation GetLogDataProtectionPolicyDocumentStatementOperationInput `pulumi:"operation"`
	// Name of this statement.
	Sid pulumi.StringPtrInput `pulumi:"sid"`
}

func (GetLogDataProtectionPolicyDocumentStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatement)(nil)).Elem()
}

func (i GetLogDataProtectionPolicyDocumentStatementArgs) ToGetLogDataProtectionPolicyDocumentStatementOutput() GetLogDataProtectionPolicyDocumentStatementOutput {
	return i.ToGetLogDataProtectionPolicyDocumentStatementOutputWithContext(context.Background())
}

func (i GetLogDataProtectionPolicyDocumentStatementArgs) ToGetLogDataProtectionPolicyDocumentStatementOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogDataProtectionPolicyDocumentStatementOutput)
}

// GetLogDataProtectionPolicyDocumentStatementArrayInput is an input type that accepts GetLogDataProtectionPolicyDocumentStatementArray and GetLogDataProtectionPolicyDocumentStatementArrayOutput values.
// You can construct a concrete instance of `GetLogDataProtectionPolicyDocumentStatementArrayInput` via:
//
//	GetLogDataProtectionPolicyDocumentStatementArray{ GetLogDataProtectionPolicyDocumentStatementArgs{...} }
type GetLogDataProtectionPolicyDocumentStatementArrayInput interface {
	pulumi.Input

	ToGetLogDataProtectionPolicyDocumentStatementArrayOutput() GetLogDataProtectionPolicyDocumentStatementArrayOutput
	ToGetLogDataProtectionPolicyDocumentStatementArrayOutputWithContext(context.Context) GetLogDataProtectionPolicyDocumentStatementArrayOutput
}

type GetLogDataProtectionPolicyDocumentStatementArray []GetLogDataProtectionPolicyDocumentStatementInput

func (GetLogDataProtectionPolicyDocumentStatementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogDataProtectionPolicyDocumentStatement)(nil)).Elem()
}

func (i GetLogDataProtectionPolicyDocumentStatementArray) ToGetLogDataProtectionPolicyDocumentStatementArrayOutput() GetLogDataProtectionPolicyDocumentStatementArrayOutput {
	return i.ToGetLogDataProtectionPolicyDocumentStatementArrayOutputWithContext(context.Background())
}

func (i GetLogDataProtectionPolicyDocumentStatementArray) ToGetLogDataProtectionPolicyDocumentStatementArrayOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogDataProtectionPolicyDocumentStatementArrayOutput)
}

type GetLogDataProtectionPolicyDocumentStatementOutput struct{ *pulumi.OutputState }

func (GetLogDataProtectionPolicyDocumentStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatement)(nil)).Elem()
}

func (o GetLogDataProtectionPolicyDocumentStatementOutput) ToGetLogDataProtectionPolicyDocumentStatementOutput() GetLogDataProtectionPolicyDocumentStatementOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOutput) ToGetLogDataProtectionPolicyDocumentStatementOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOutput {
	return o
}

// Set of at least 1 sensitive data identifiers that you want to mask. Read more in [Types of data that you can protect](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/protect-sensitive-log-data-types.html).
func (o GetLogDataProtectionPolicyDocumentStatementOutput) DataIdentifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLogDataProtectionPolicyDocumentStatement) []string { return v.DataIdentifiers }).(pulumi.StringArrayOutput)
}

// Configures the data protection operation applied by this statement.
func (o GetLogDataProtectionPolicyDocumentStatementOutput) Operation() GetLogDataProtectionPolicyDocumentStatementOperationOutput {
	return o.ApplyT(func(v GetLogDataProtectionPolicyDocumentStatement) GetLogDataProtectionPolicyDocumentStatementOperation {
		return v.Operation
	}).(GetLogDataProtectionPolicyDocumentStatementOperationOutput)
}

// Name of this statement.
func (o GetLogDataProtectionPolicyDocumentStatementOutput) Sid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLogDataProtectionPolicyDocumentStatement) *string { return v.Sid }).(pulumi.StringPtrOutput)
}

type GetLogDataProtectionPolicyDocumentStatementArrayOutput struct{ *pulumi.OutputState }

func (GetLogDataProtectionPolicyDocumentStatementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLogDataProtectionPolicyDocumentStatement)(nil)).Elem()
}

func (o GetLogDataProtectionPolicyDocumentStatementArrayOutput) ToGetLogDataProtectionPolicyDocumentStatementArrayOutput() GetLogDataProtectionPolicyDocumentStatementArrayOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementArrayOutput) ToGetLogDataProtectionPolicyDocumentStatementArrayOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementArrayOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementArrayOutput) Index(i pulumi.IntInput) GetLogDataProtectionPolicyDocumentStatementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLogDataProtectionPolicyDocumentStatement {
		return vs[0].([]GetLogDataProtectionPolicyDocumentStatement)[vs[1].(int)]
	}).(GetLogDataProtectionPolicyDocumentStatementOutput)
}

type GetLogDataProtectionPolicyDocumentStatementOperation struct {
	// Configures the detection of sensitive data.
	Audit *GetLogDataProtectionPolicyDocumentStatementOperationAudit `pulumi:"audit"`
	// Configures the masking of sensitive data.
	//
	// > Every policy statement must specify exactly one operation.
	Deidentify *GetLogDataProtectionPolicyDocumentStatementOperationDeidentify `pulumi:"deidentify"`
}

// GetLogDataProtectionPolicyDocumentStatementOperationInput is an input type that accepts GetLogDataProtectionPolicyDocumentStatementOperationArgs and GetLogDataProtectionPolicyDocumentStatementOperationOutput values.
// You can construct a concrete instance of `GetLogDataProtectionPolicyDocumentStatementOperationInput` via:
//
//	GetLogDataProtectionPolicyDocumentStatementOperationArgs{...}
type GetLogDataProtectionPolicyDocumentStatementOperationInput interface {
	pulumi.Input

	ToGetLogDataProtectionPolicyDocumentStatementOperationOutput() GetLogDataProtectionPolicyDocumentStatementOperationOutput
	ToGetLogDataProtectionPolicyDocumentStatementOperationOutputWithContext(context.Context) GetLogDataProtectionPolicyDocumentStatementOperationOutput
}

type GetLogDataProtectionPolicyDocumentStatementOperationArgs struct {
	// Configures the detection of sensitive data.
	Audit GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrInput `pulumi:"audit"`
	// Configures the masking of sensitive data.
	//
	// > Every policy statement must specify exactly one operation.
	Deidentify GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrInput `pulumi:"deidentify"`
}

func (GetLogDataProtectionPolicyDocumentStatementOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperation)(nil)).Elem()
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationArgs) ToGetLogDataProtectionPolicyDocumentStatementOperationOutput() GetLogDataProtectionPolicyDocumentStatementOperationOutput {
	return i.ToGetLogDataProtectionPolicyDocumentStatementOperationOutputWithContext(context.Background())
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationArgs) ToGetLogDataProtectionPolicyDocumentStatementOperationOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogDataProtectionPolicyDocumentStatementOperationOutput)
}

type GetLogDataProtectionPolicyDocumentStatementOperationOutput struct{ *pulumi.OutputState }

func (GetLogDataProtectionPolicyDocumentStatementOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperation)(nil)).Elem()
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationOutput() GetLogDataProtectionPolicyDocumentStatementOperationOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationOutput {
	return o
}

// Configures the detection of sensitive data.
func (o GetLogDataProtectionPolicyDocumentStatementOperationOutput) Audit() GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput {
	return o.ApplyT(func(v GetLogDataProtectionPolicyDocumentStatementOperation) *GetLogDataProtectionPolicyDocumentStatementOperationAudit {
		return v.Audit
	}).(GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput)
}

// Configures the masking of sensitive data.
//
// > Every policy statement must specify exactly one operation.
func (o GetLogDataProtectionPolicyDocumentStatementOperationOutput) Deidentify() GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput {
	return o.ApplyT(func(v GetLogDataProtectionPolicyDocumentStatementOperation) *GetLogDataProtectionPolicyDocumentStatementOperationDeidentify {
		return v.Deidentify
	}).(GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput)
}

type GetLogDataProtectionPolicyDocumentStatementOperationAudit struct {
	// Configures destinations to send audit findings to.
	FindingsDestination GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination `pulumi:"findingsDestination"`
}

// GetLogDataProtectionPolicyDocumentStatementOperationAuditInput is an input type that accepts GetLogDataProtectionPolicyDocumentStatementOperationAuditArgs and GetLogDataProtectionPolicyDocumentStatementOperationAuditOutput values.
// You can construct a concrete instance of `GetLogDataProtectionPolicyDocumentStatementOperationAuditInput` via:
//
//	GetLogDataProtectionPolicyDocumentStatementOperationAuditArgs{...}
type GetLogDataProtectionPolicyDocumentStatementOperationAuditInput interface {
	pulumi.Input

	ToGetLogDataProtectionPolicyDocumentStatementOperationAuditOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditOutput
	ToGetLogDataProtectionPolicyDocumentStatementOperationAuditOutputWithContext(context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditOutput
}

type GetLogDataProtectionPolicyDocumentStatementOperationAuditArgs struct {
	// Configures destinations to send audit findings to.
	FindingsDestination GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationInput `pulumi:"findingsDestination"`
}

func (GetLogDataProtectionPolicyDocumentStatementOperationAuditArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationAudit)(nil)).Elem()
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationAuditArgs) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditOutput {
	return i.ToGetLogDataProtectionPolicyDocumentStatementOperationAuditOutputWithContext(context.Background())
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationAuditArgs) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogDataProtectionPolicyDocumentStatementOperationAuditOutput)
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationAuditArgs) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput {
	return i.ToGetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutputWithContext(context.Background())
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationAuditArgs) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogDataProtectionPolicyDocumentStatementOperationAuditOutput).ToGetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutputWithContext(ctx)
}

// GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrInput is an input type that accepts GetLogDataProtectionPolicyDocumentStatementOperationAuditArgs, GetLogDataProtectionPolicyDocumentStatementOperationAuditPtr and GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput values.
// You can construct a concrete instance of `GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrInput` via:
//
//	        GetLogDataProtectionPolicyDocumentStatementOperationAuditArgs{...}
//
//	or:
//
//	        nil
type GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrInput interface {
	pulumi.Input

	ToGetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput
	ToGetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutputWithContext(context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput
}

type getLogDataProtectionPolicyDocumentStatementOperationAuditPtrType GetLogDataProtectionPolicyDocumentStatementOperationAuditArgs

func GetLogDataProtectionPolicyDocumentStatementOperationAuditPtr(v *GetLogDataProtectionPolicyDocumentStatementOperationAuditArgs) GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrInput {
	return (*getLogDataProtectionPolicyDocumentStatementOperationAuditPtrType)(v)
}

func (*getLogDataProtectionPolicyDocumentStatementOperationAuditPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetLogDataProtectionPolicyDocumentStatementOperationAudit)(nil)).Elem()
}

func (i *getLogDataProtectionPolicyDocumentStatementOperationAuditPtrType) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput {
	return i.ToGetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutputWithContext(context.Background())
}

func (i *getLogDataProtectionPolicyDocumentStatementOperationAuditPtrType) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput)
}

type GetLogDataProtectionPolicyDocumentStatementOperationAuditOutput struct{ *pulumi.OutputState }

func (GetLogDataProtectionPolicyDocumentStatementOperationAuditOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationAudit)(nil)).Elem()
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput {
	return o.ToGetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutputWithContext(context.Background())
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetLogDataProtectionPolicyDocumentStatementOperationAudit) *GetLogDataProtectionPolicyDocumentStatementOperationAudit {
		return &v
	}).(GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput)
}

// Configures destinations to send audit findings to.
func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditOutput) FindingsDestination() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutput {
	return o.ApplyT(func(v GetLogDataProtectionPolicyDocumentStatementOperationAudit) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination {
		return v.FindingsDestination
	}).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutput)
}

type GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput struct{ *pulumi.OutputState }

func (GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetLogDataProtectionPolicyDocumentStatementOperationAudit)(nil)).Elem()
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput) Elem() GetLogDataProtectionPolicyDocumentStatementOperationAuditOutput {
	return o.ApplyT(func(v *GetLogDataProtectionPolicyDocumentStatementOperationAudit) GetLogDataProtectionPolicyDocumentStatementOperationAudit {
		if v != nil {
			return *v
		}
		var ret GetLogDataProtectionPolicyDocumentStatementOperationAudit
		return ret
	}).(GetLogDataProtectionPolicyDocumentStatementOperationAuditOutput)
}

// Configures destinations to send audit findings to.
func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput) FindingsDestination() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput {
	return o.ApplyT(func(v *GetLogDataProtectionPolicyDocumentStatementOperationAudit) *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination {
		if v == nil {
			return nil
		}
		return &v.FindingsDestination
	}).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput)
}

type GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination struct {
	// Configures CloudWatch Logs as a findings destination.
	CloudwatchLogs *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs `pulumi:"cloudwatchLogs"`
	// Configures Kinesis Firehose as a findings destination.
	Firehose *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehose `pulumi:"firehose"`
	// Configures S3 as a findings destination.
	S3 *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3 `pulumi:"s3"`
}

// GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationInput is an input type that accepts GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationArgs and GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutput values.
// You can construct a concrete instance of `GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationInput` via:
//
//	GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationArgs{...}
type GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationInput interface {
	pulumi.Input

	ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutput
	ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutputWithContext(context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutput
}

type GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationArgs struct {
	// Configures CloudWatch Logs as a findings destination.
	CloudwatchLogs GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrInput `pulumi:"cloudwatchLogs"`
	// Configures Kinesis Firehose as a findings destination.
	Firehose GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrInput `pulumi:"firehose"`
	// Configures S3 as a findings destination.
	S3 GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrInput `pulumi:"s3"`
}

func (GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination)(nil)).Elem()
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationArgs) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutput {
	return i.ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutputWithContext(context.Background())
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationArgs) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutput)
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationArgs) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput {
	return i.ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutputWithContext(context.Background())
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationArgs) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutput).ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutputWithContext(ctx)
}

// GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrInput is an input type that accepts GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationArgs, GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtr and GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput values.
// You can construct a concrete instance of `GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrInput` via:
//
//	        GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationArgs{...}
//
//	or:
//
//	        nil
type GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrInput interface {
	pulumi.Input

	ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput
	ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutputWithContext(context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput
}

type getLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrType GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationArgs

func GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtr(v *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationArgs) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrInput {
	return (*getLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrType)(v)
}

func (*getLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination)(nil)).Elem()
}

func (i *getLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrType) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput {
	return i.ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutputWithContext(context.Background())
}

func (i *getLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrType) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput)
}

type GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutput struct{ *pulumi.OutputState }

func (GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination)(nil)).Elem()
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput {
	return o.ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutputWithContext(context.Background())
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination) *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination {
		return &v
	}).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput)
}

// Configures CloudWatch Logs as a findings destination.
func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutput) CloudwatchLogs() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput {
	return o.ApplyT(func(v GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination) *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs {
		return v.CloudwatchLogs
	}).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput)
}

// Configures Kinesis Firehose as a findings destination.
func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutput) Firehose() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput {
	return o.ApplyT(func(v GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination) *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehose {
		return v.Firehose
	}).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput)
}

// Configures S3 as a findings destination.
func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutput) S3() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput {
	return o.ApplyT(func(v GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination) *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3 {
		return v.S3
	}).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput)
}

type GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput struct{ *pulumi.OutputState }

func (GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination)(nil)).Elem()
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput) Elem() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutput {
	return o.ApplyT(func(v *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination {
		if v != nil {
			return *v
		}
		var ret GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination
		return ret
	}).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutput)
}

// Configures CloudWatch Logs as a findings destination.
func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput) CloudwatchLogs() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput {
	return o.ApplyT(func(v *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination) *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs {
		if v == nil {
			return nil
		}
		return v.CloudwatchLogs
	}).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput)
}

// Configures Kinesis Firehose as a findings destination.
func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput) Firehose() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput {
	return o.ApplyT(func(v *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination) *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehose {
		if v == nil {
			return nil
		}
		return v.Firehose
	}).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput)
}

// Configures S3 as a findings destination.
func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput) S3() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput {
	return o.ApplyT(func(v *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestination) *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3 {
		if v == nil {
			return nil
		}
		return v.S3
	}).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput)
}

type GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs struct {
	// Name of the CloudWatch Log Group to send findings to.
	LogGroup string `pulumi:"logGroup"`
}

// GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsInput is an input type that accepts GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsArgs and GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsOutput values.
// You can construct a concrete instance of `GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsInput` via:
//
//	GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsArgs{...}
type GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsInput interface {
	pulumi.Input

	ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsOutput
	ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsOutputWithContext(context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsOutput
}

type GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsArgs struct {
	// Name of the CloudWatch Log Group to send findings to.
	LogGroup pulumi.StringInput `pulumi:"logGroup"`
}

func (GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs)(nil)).Elem()
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsArgs) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsOutput {
	return i.ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsOutputWithContext(context.Background())
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsArgs) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsOutput)
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsArgs) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput {
	return i.ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutputWithContext(context.Background())
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsArgs) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsOutput).ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutputWithContext(ctx)
}

// GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrInput is an input type that accepts GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsArgs, GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtr and GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput values.
// You can construct a concrete instance of `GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrInput` via:
//
//	        GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsArgs{...}
//
//	or:
//
//	        nil
type GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrInput interface {
	pulumi.Input

	ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput
	ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutputWithContext(context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput
}

type getLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrType GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsArgs

func GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtr(v *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsArgs) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrInput {
	return (*getLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrType)(v)
}

func (*getLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs)(nil)).Elem()
}

func (i *getLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrType) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput {
	return i.ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutputWithContext(context.Background())
}

func (i *getLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrType) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput)
}

type GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsOutput struct{ *pulumi.OutputState }

func (GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs)(nil)).Elem()
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput {
	return o.ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutputWithContext(context.Background())
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs) *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs {
		return &v
	}).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput)
}

// Name of the CloudWatch Log Group to send findings to.
func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsOutput) LogGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs) string {
		return v.LogGroup
	}).(pulumi.StringOutput)
}

type GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput struct{ *pulumi.OutputState }

func (GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs)(nil)).Elem()
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput) Elem() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsOutput {
	return o.ApplyT(func(v *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs {
		if v != nil {
			return *v
		}
		var ret GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs
		return ret
	}).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsOutput)
}

// Name of the CloudWatch Log Group to send findings to.
func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput) LogGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogs) *string {
		if v == nil {
			return nil
		}
		return &v.LogGroup
	}).(pulumi.StringPtrOutput)
}

type GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehose struct {
	// Name of the Kinesis Firehose Delivery Stream to send findings to.
	DeliveryStream string `pulumi:"deliveryStream"`
}

// GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseInput is an input type that accepts GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseArgs and GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseOutput values.
// You can construct a concrete instance of `GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseInput` via:
//
//	GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseArgs{...}
type GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseInput interface {
	pulumi.Input

	ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseOutput
	ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseOutputWithContext(context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseOutput
}

type GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseArgs struct {
	// Name of the Kinesis Firehose Delivery Stream to send findings to.
	DeliveryStream pulumi.StringInput `pulumi:"deliveryStream"`
}

func (GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehose)(nil)).Elem()
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseArgs) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseOutput {
	return i.ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseOutputWithContext(context.Background())
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseArgs) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseOutput)
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseArgs) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput {
	return i.ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutputWithContext(context.Background())
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseArgs) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseOutput).ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutputWithContext(ctx)
}

// GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrInput is an input type that accepts GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseArgs, GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtr and GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput values.
// You can construct a concrete instance of `GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrInput` via:
//
//	        GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseArgs{...}
//
//	or:
//
//	        nil
type GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrInput interface {
	pulumi.Input

	ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput
	ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutputWithContext(context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput
}

type getLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrType GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseArgs

func GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtr(v *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseArgs) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrInput {
	return (*getLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrType)(v)
}

func (*getLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehose)(nil)).Elem()
}

func (i *getLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrType) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput {
	return i.ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutputWithContext(context.Background())
}

func (i *getLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrType) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput)
}

type GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseOutput struct{ *pulumi.OutputState }

func (GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehose)(nil)).Elem()
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput {
	return o.ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutputWithContext(context.Background())
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehose) *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehose {
		return &v
	}).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput)
}

// Name of the Kinesis Firehose Delivery Stream to send findings to.
func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseOutput) DeliveryStream() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehose) string {
		return v.DeliveryStream
	}).(pulumi.StringOutput)
}

type GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput struct{ *pulumi.OutputState }

func (GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehose)(nil)).Elem()
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput) Elem() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseOutput {
	return o.ApplyT(func(v *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehose) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehose {
		if v != nil {
			return *v
		}
		var ret GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehose
		return ret
	}).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseOutput)
}

// Name of the Kinesis Firehose Delivery Stream to send findings to.
func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput) DeliveryStream() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehose) *string {
		if v == nil {
			return nil
		}
		return &v.DeliveryStream
	}).(pulumi.StringPtrOutput)
}

type GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3 struct {
	// Name of the S3 Bucket to send findings to.
	Bucket string `pulumi:"bucket"`
}

// GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Input is an input type that accepts GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Args and GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Output values.
// You can construct a concrete instance of `GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Input` via:
//
//	GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Args{...}
type GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Input interface {
	pulumi.Input

	ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Output() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Output
	ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3OutputWithContext(context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Output
}

type GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Args struct {
	// Name of the S3 Bucket to send findings to.
	Bucket pulumi.StringInput `pulumi:"bucket"`
}

func (GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3)(nil)).Elem()
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Args) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Output() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Output {
	return i.ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3OutputWithContext(context.Background())
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Args) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3OutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Output)
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Args) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput {
	return i.ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutputWithContext(context.Background())
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Args) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Output).ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutputWithContext(ctx)
}

// GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrInput is an input type that accepts GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Args, GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Ptr and GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput values.
// You can construct a concrete instance of `GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrInput` via:
//
//	        GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Args{...}
//
//	or:
//
//	        nil
type GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrInput interface {
	pulumi.Input

	ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput
	ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutputWithContext(context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput
}

type getLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrType GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Args

func GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Ptr(v *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Args) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrInput {
	return (*getLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrType)(v)
}

func (*getLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3)(nil)).Elem()
}

func (i *getLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrType) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput {
	return i.ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutputWithContext(context.Background())
}

func (i *getLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrType) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput)
}

type GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Output struct{ *pulumi.OutputState }

func (GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3)(nil)).Elem()
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Output) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Output() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Output {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Output) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3OutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Output {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Output) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput {
	return o.ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutputWithContext(context.Background())
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Output) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3) *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3 {
		return &v
	}).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput)
}

// Name of the S3 Bucket to send findings to.
func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Output) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3) string {
		return v.Bucket
	}).(pulumi.StringOutput)
}

type GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput struct{ *pulumi.OutputState }

func (GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3)(nil)).Elem()
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput) Elem() GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Output {
	return o.ApplyT(func(v *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3) GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3 {
		if v != nil {
			return *v
		}
		var ret GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3
		return ret
	}).(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Output)
}

// Name of the S3 Bucket to send findings to.
func (o GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

type GetLogDataProtectionPolicyDocumentStatementOperationDeidentify struct {
	// An empty object that configures masking.
	MaskConfig GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfig `pulumi:"maskConfig"`
}

// GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyInput is an input type that accepts GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyArgs and GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyOutput values.
// You can construct a concrete instance of `GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyInput` via:
//
//	GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyArgs{...}
type GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyInput interface {
	pulumi.Input

	ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyOutput() GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyOutput
	ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyOutputWithContext(context.Context) GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyOutput
}

type GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyArgs struct {
	// An empty object that configures masking.
	MaskConfig GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigInput `pulumi:"maskConfig"`
}

func (GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationDeidentify)(nil)).Elem()
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyArgs) ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyOutput() GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyOutput {
	return i.ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyOutputWithContext(context.Background())
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyArgs) ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyOutput)
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyArgs) ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput {
	return i.ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutputWithContext(context.Background())
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyArgs) ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyOutput).ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutputWithContext(ctx)
}

// GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrInput is an input type that accepts GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyArgs, GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtr and GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput values.
// You can construct a concrete instance of `GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrInput` via:
//
//	        GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyArgs{...}
//
//	or:
//
//	        nil
type GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrInput interface {
	pulumi.Input

	ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput
	ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutputWithContext(context.Context) GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput
}

type getLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrType GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyArgs

func GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtr(v *GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyArgs) GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrInput {
	return (*getLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrType)(v)
}

func (*getLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetLogDataProtectionPolicyDocumentStatementOperationDeidentify)(nil)).Elem()
}

func (i *getLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrType) ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput {
	return i.ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutputWithContext(context.Background())
}

func (i *getLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrType) ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput)
}

type GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyOutput struct{ *pulumi.OutputState }

func (GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationDeidentify)(nil)).Elem()
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyOutput() GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput {
	return o.ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutputWithContext(context.Background())
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetLogDataProtectionPolicyDocumentStatementOperationDeidentify) *GetLogDataProtectionPolicyDocumentStatementOperationDeidentify {
		return &v
	}).(GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput)
}

// An empty object that configures masking.
func (o GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyOutput) MaskConfig() GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutput {
	return o.ApplyT(func(v GetLogDataProtectionPolicyDocumentStatementOperationDeidentify) GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfig {
		return v.MaskConfig
	}).(GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutput)
}

type GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput struct{ *pulumi.OutputState }

func (GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetLogDataProtectionPolicyDocumentStatementOperationDeidentify)(nil)).Elem()
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput) Elem() GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyOutput {
	return o.ApplyT(func(v *GetLogDataProtectionPolicyDocumentStatementOperationDeidentify) GetLogDataProtectionPolicyDocumentStatementOperationDeidentify {
		if v != nil {
			return *v
		}
		var ret GetLogDataProtectionPolicyDocumentStatementOperationDeidentify
		return ret
	}).(GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyOutput)
}

// An empty object that configures masking.
func (o GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput) MaskConfig() GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutput {
	return o.ApplyT(func(v *GetLogDataProtectionPolicyDocumentStatementOperationDeidentify) *GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfig {
		if v == nil {
			return nil
		}
		return &v.MaskConfig
	}).(GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutput)
}

type GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfig struct {
}

// GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigInput is an input type that accepts GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigArgs and GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutput values.
// You can construct a concrete instance of `GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigInput` via:
//
//	GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigArgs{...}
type GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigInput interface {
	pulumi.Input

	ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutput() GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutput
	ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutputWithContext(context.Context) GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutput
}

type GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigArgs struct {
}

func (GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfig)(nil)).Elem()
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigArgs) ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutput() GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutput {
	return i.ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutputWithContext(context.Background())
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigArgs) ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutput)
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigArgs) ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutput {
	return i.ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutputWithContext(context.Background())
}

func (i GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigArgs) ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutput).ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutputWithContext(ctx)
}

// GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrInput is an input type that accepts GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigArgs, GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtr and GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutput values.
// You can construct a concrete instance of `GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrInput` via:
//
//	        GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigArgs{...}
//
//	or:
//
//	        nil
type GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrInput interface {
	pulumi.Input

	ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutput
	ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutputWithContext(context.Context) GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutput
}

type getLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrType GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigArgs

func GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtr(v *GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigArgs) GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrInput {
	return (*getLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrType)(v)
}

func (*getLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfig)(nil)).Elem()
}

func (i *getLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrType) ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutput {
	return i.ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutputWithContext(context.Background())
}

func (i *getLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrType) ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutput)
}

type GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutput struct{ *pulumi.OutputState }

func (GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfig)(nil)).Elem()
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutput() GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutput {
	return o.ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutputWithContext(context.Background())
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfig) *GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfig {
		return &v
	}).(GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutput)
}

type GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutput struct{ *pulumi.OutputState }

func (GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfig)(nil)).Elem()
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutput() GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutput) ToGetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutputWithContext(ctx context.Context) GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutput {
	return o
}

func (o GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutput) Elem() GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutput {
	return o.ApplyT(func(v *GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfig) GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfig {
		if v != nil {
			return *v
		}
		var ret GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfig
		return ret
	}).(GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CompositeAlarmActionsSuppressorInput)(nil)).Elem(), CompositeAlarmActionsSuppressorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CompositeAlarmActionsSuppressorPtrInput)(nil)).Elem(), CompositeAlarmActionsSuppressorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventConnectionAuthParametersInput)(nil)).Elem(), EventConnectionAuthParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventConnectionAuthParametersPtrInput)(nil)).Elem(), EventConnectionAuthParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventConnectionAuthParametersApiKeyInput)(nil)).Elem(), EventConnectionAuthParametersApiKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventConnectionAuthParametersApiKeyPtrInput)(nil)).Elem(), EventConnectionAuthParametersApiKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventConnectionAuthParametersBasicInput)(nil)).Elem(), EventConnectionAuthParametersBasicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventConnectionAuthParametersBasicPtrInput)(nil)).Elem(), EventConnectionAuthParametersBasicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventConnectionAuthParametersInvocationHttpParametersInput)(nil)).Elem(), EventConnectionAuthParametersInvocationHttpParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventConnectionAuthParametersInvocationHttpParametersPtrInput)(nil)).Elem(), EventConnectionAuthParametersInvocationHttpParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventConnectionAuthParametersInvocationHttpParametersBodyInput)(nil)).Elem(), EventConnectionAuthParametersInvocationHttpParametersBodyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventConnectionAuthParametersInvocationHttpParametersBodyArrayInput)(nil)).Elem(), EventConnectionAuthParametersInvocationHttpParametersBodyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventConnectionAuthParametersInvocationHttpParametersHeaderInput)(nil)).Elem(), EventConnectionAuthParametersInvocationHttpParametersHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventConnectionAuthParametersInvocationHttpParametersHeaderArrayInput)(nil)).Elem(), EventConnectionAuthParametersInvocationHttpParametersHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventConnectionAuthParametersInvocationHttpParametersQueryStringInput)(nil)).Elem(), EventConnectionAuthParametersInvocationHttpParametersQueryStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventConnectionAuthParametersInvocationHttpParametersQueryStringArrayInput)(nil)).Elem(), EventConnectionAuthParametersInvocationHttpParametersQueryStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventConnectionAuthParametersOauthInput)(nil)).Elem(), EventConnectionAuthParametersOauthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventConnectionAuthParametersOauthPtrInput)(nil)).Elem(), EventConnectionAuthParametersOauthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventConnectionAuthParametersOauthClientParametersInput)(nil)).Elem(), EventConnectionAuthParametersOauthClientParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventConnectionAuthParametersOauthClientParametersPtrInput)(nil)).Elem(), EventConnectionAuthParametersOauthClientParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventConnectionAuthParametersOauthOauthHttpParametersInput)(nil)).Elem(), EventConnectionAuthParametersOauthOauthHttpParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventConnectionAuthParametersOauthOauthHttpParametersPtrInput)(nil)).Elem(), EventConnectionAuthParametersOauthOauthHttpParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventConnectionAuthParametersOauthOauthHttpParametersBodyInput)(nil)).Elem(), EventConnectionAuthParametersOauthOauthHttpParametersBodyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventConnectionAuthParametersOauthOauthHttpParametersBodyArrayInput)(nil)).Elem(), EventConnectionAuthParametersOauthOauthHttpParametersBodyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventConnectionAuthParametersOauthOauthHttpParametersHeaderInput)(nil)).Elem(), EventConnectionAuthParametersOauthOauthHttpParametersHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayInput)(nil)).Elem(), EventConnectionAuthParametersOauthOauthHttpParametersHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventConnectionAuthParametersOauthOauthHttpParametersQueryStringInput)(nil)).Elem(), EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayInput)(nil)).Elem(), EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventEndpointEventBusInput)(nil)).Elem(), EventEndpointEventBusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventEndpointEventBusArrayInput)(nil)).Elem(), EventEndpointEventBusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventEndpointReplicationConfigInput)(nil)).Elem(), EventEndpointReplicationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventEndpointReplicationConfigPtrInput)(nil)).Elem(), EventEndpointReplicationConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventEndpointRoutingConfigInput)(nil)).Elem(), EventEndpointRoutingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventEndpointRoutingConfigPtrInput)(nil)).Elem(), EventEndpointRoutingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventEndpointRoutingConfigFailoverConfigInput)(nil)).Elem(), EventEndpointRoutingConfigFailoverConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventEndpointRoutingConfigFailoverConfigPtrInput)(nil)).Elem(), EventEndpointRoutingConfigFailoverConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventEndpointRoutingConfigFailoverConfigPrimaryInput)(nil)).Elem(), EventEndpointRoutingConfigFailoverConfigPrimaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventEndpointRoutingConfigFailoverConfigPrimaryPtrInput)(nil)).Elem(), EventEndpointRoutingConfigFailoverConfigPrimaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventEndpointRoutingConfigFailoverConfigSecondaryInput)(nil)).Elem(), EventEndpointRoutingConfigFailoverConfigSecondaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventEndpointRoutingConfigFailoverConfigSecondaryPtrInput)(nil)).Elem(), EventEndpointRoutingConfigFailoverConfigSecondaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventPermissionConditionInput)(nil)).Elem(), EventPermissionConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventPermissionConditionPtrInput)(nil)).Elem(), EventPermissionConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetBatchTargetInput)(nil)).Elem(), EventTargetBatchTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetBatchTargetPtrInput)(nil)).Elem(), EventTargetBatchTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetDeadLetterConfigInput)(nil)).Elem(), EventTargetDeadLetterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetDeadLetterConfigPtrInput)(nil)).Elem(), EventTargetDeadLetterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetEcsTargetInput)(nil)).Elem(), EventTargetEcsTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetEcsTargetPtrInput)(nil)).Elem(), EventTargetEcsTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetEcsTargetCapacityProviderStrategyInput)(nil)).Elem(), EventTargetEcsTargetCapacityProviderStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetEcsTargetCapacityProviderStrategyArrayInput)(nil)).Elem(), EventTargetEcsTargetCapacityProviderStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetEcsTargetNetworkConfigurationInput)(nil)).Elem(), EventTargetEcsTargetNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetEcsTargetNetworkConfigurationPtrInput)(nil)).Elem(), EventTargetEcsTargetNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetEcsTargetOrderedPlacementStrategyInput)(nil)).Elem(), EventTargetEcsTargetOrderedPlacementStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetEcsTargetOrderedPlacementStrategyArrayInput)(nil)).Elem(), EventTargetEcsTargetOrderedPlacementStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetEcsTargetPlacementConstraintInput)(nil)).Elem(), EventTargetEcsTargetPlacementConstraintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetEcsTargetPlacementConstraintArrayInput)(nil)).Elem(), EventTargetEcsTargetPlacementConstraintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetHttpTargetInput)(nil)).Elem(), EventTargetHttpTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetHttpTargetPtrInput)(nil)).Elem(), EventTargetHttpTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetInputTransformerInput)(nil)).Elem(), EventTargetInputTransformerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetInputTransformerPtrInput)(nil)).Elem(), EventTargetInputTransformerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetKinesisTargetInput)(nil)).Elem(), EventTargetKinesisTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetKinesisTargetPtrInput)(nil)).Elem(), EventTargetKinesisTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetRedshiftTargetInput)(nil)).Elem(), EventTargetRedshiftTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetRedshiftTargetPtrInput)(nil)).Elem(), EventTargetRedshiftTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetRetryPolicyInput)(nil)).Elem(), EventTargetRetryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetRetryPolicyPtrInput)(nil)).Elem(), EventTargetRetryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetRunCommandTargetInput)(nil)).Elem(), EventTargetRunCommandTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetRunCommandTargetArrayInput)(nil)).Elem(), EventTargetRunCommandTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetSagemakerPipelineTargetInput)(nil)).Elem(), EventTargetSagemakerPipelineTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetSagemakerPipelineTargetPtrInput)(nil)).Elem(), EventTargetSagemakerPipelineTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetSagemakerPipelineTargetPipelineParameterListInput)(nil)).Elem(), EventTargetSagemakerPipelineTargetPipelineParameterListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetSagemakerPipelineTargetPipelineParameterListArrayInput)(nil)).Elem(), EventTargetSagemakerPipelineTargetPipelineParameterListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetSqsTargetInput)(nil)).Elem(), EventTargetSqsTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventTargetSqsTargetPtrInput)(nil)).Elem(), EventTargetSqsTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetMonitorHealthEventsConfigInput)(nil)).Elem(), InternetMonitorHealthEventsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetMonitorHealthEventsConfigPtrInput)(nil)).Elem(), InternetMonitorHealthEventsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetMonitorInternetMeasurementsLogDeliveryInput)(nil)).Elem(), InternetMonitorInternetMeasurementsLogDeliveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetMonitorInternetMeasurementsLogDeliveryPtrInput)(nil)).Elem(), InternetMonitorInternetMeasurementsLogDeliveryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetMonitorInternetMeasurementsLogDeliveryS3ConfigInput)(nil)).Elem(), InternetMonitorInternetMeasurementsLogDeliveryS3ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrInput)(nil)).Elem(), InternetMonitorInternetMeasurementsLogDeliveryS3ConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogMetricFilterMetricTransformationInput)(nil)).Elem(), LogMetricFilterMetricTransformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LogMetricFilterMetricTransformationPtrInput)(nil)).Elem(), LogMetricFilterMetricTransformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricAlarmMetricQueryInput)(nil)).Elem(), MetricAlarmMetricQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricAlarmMetricQueryArrayInput)(nil)).Elem(), MetricAlarmMetricQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricAlarmMetricQueryMetricInput)(nil)).Elem(), MetricAlarmMetricQueryMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricAlarmMetricQueryMetricPtrInput)(nil)).Elem(), MetricAlarmMetricQueryMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricStreamExcludeFilterInput)(nil)).Elem(), MetricStreamExcludeFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricStreamExcludeFilterArrayInput)(nil)).Elem(), MetricStreamExcludeFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricStreamIncludeFilterInput)(nil)).Elem(), MetricStreamIncludeFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricStreamIncludeFilterArrayInput)(nil)).Elem(), MetricStreamIncludeFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricStreamStatisticsConfigurationInput)(nil)).Elem(), MetricStreamStatisticsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricStreamStatisticsConfigurationArrayInput)(nil)).Elem(), MetricStreamStatisticsConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricStreamStatisticsConfigurationIncludeMetricInput)(nil)).Elem(), MetricStreamStatisticsConfigurationIncludeMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MetricStreamStatisticsConfigurationIncludeMetricArrayInput)(nil)).Elem(), MetricStreamStatisticsConfigurationIncludeMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementInput)(nil)).Elem(), GetLogDataProtectionPolicyDocumentStatementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementArrayInput)(nil)).Elem(), GetLogDataProtectionPolicyDocumentStatementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationInput)(nil)).Elem(), GetLogDataProtectionPolicyDocumentStatementOperationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationAuditInput)(nil)).Elem(), GetLogDataProtectionPolicyDocumentStatementOperationAuditArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrInput)(nil)).Elem(), GetLogDataProtectionPolicyDocumentStatementOperationAuditArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationInput)(nil)).Elem(), GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrInput)(nil)).Elem(), GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsInput)(nil)).Elem(), GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrInput)(nil)).Elem(), GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseInput)(nil)).Elem(), GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrInput)(nil)).Elem(), GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Input)(nil)).Elem(), GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrInput)(nil)).Elem(), GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyInput)(nil)).Elem(), GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrInput)(nil)).Elem(), GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigInput)(nil)).Elem(), GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrInput)(nil)).Elem(), GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigArgs{})
	pulumi.RegisterOutputType(CompositeAlarmActionsSuppressorOutput{})
	pulumi.RegisterOutputType(CompositeAlarmActionsSuppressorPtrOutput{})
	pulumi.RegisterOutputType(EventConnectionAuthParametersOutput{})
	pulumi.RegisterOutputType(EventConnectionAuthParametersPtrOutput{})
	pulumi.RegisterOutputType(EventConnectionAuthParametersApiKeyOutput{})
	pulumi.RegisterOutputType(EventConnectionAuthParametersApiKeyPtrOutput{})
	pulumi.RegisterOutputType(EventConnectionAuthParametersBasicOutput{})
	pulumi.RegisterOutputType(EventConnectionAuthParametersBasicPtrOutput{})
	pulumi.RegisterOutputType(EventConnectionAuthParametersInvocationHttpParametersOutput{})
	pulumi.RegisterOutputType(EventConnectionAuthParametersInvocationHttpParametersPtrOutput{})
	pulumi.RegisterOutputType(EventConnectionAuthParametersInvocationHttpParametersBodyOutput{})
	pulumi.RegisterOutputType(EventConnectionAuthParametersInvocationHttpParametersBodyArrayOutput{})
	pulumi.RegisterOutputType(EventConnectionAuthParametersInvocationHttpParametersHeaderOutput{})
	pulumi.RegisterOutputType(EventConnectionAuthParametersInvocationHttpParametersHeaderArrayOutput{})
	pulumi.RegisterOutputType(EventConnectionAuthParametersInvocationHttpParametersQueryStringOutput{})
	pulumi.RegisterOutputType(EventConnectionAuthParametersInvocationHttpParametersQueryStringArrayOutput{})
	pulumi.RegisterOutputType(EventConnectionAuthParametersOauthOutput{})
	pulumi.RegisterOutputType(EventConnectionAuthParametersOauthPtrOutput{})
	pulumi.RegisterOutputType(EventConnectionAuthParametersOauthClientParametersOutput{})
	pulumi.RegisterOutputType(EventConnectionAuthParametersOauthClientParametersPtrOutput{})
	pulumi.RegisterOutputType(EventConnectionAuthParametersOauthOauthHttpParametersOutput{})
	pulumi.RegisterOutputType(EventConnectionAuthParametersOauthOauthHttpParametersPtrOutput{})
	pulumi.RegisterOutputType(EventConnectionAuthParametersOauthOauthHttpParametersBodyOutput{})
	pulumi.RegisterOutputType(EventConnectionAuthParametersOauthOauthHttpParametersBodyArrayOutput{})
	pulumi.RegisterOutputType(EventConnectionAuthParametersOauthOauthHttpParametersHeaderOutput{})
	pulumi.RegisterOutputType(EventConnectionAuthParametersOauthOauthHttpParametersHeaderArrayOutput{})
	pulumi.RegisterOutputType(EventConnectionAuthParametersOauthOauthHttpParametersQueryStringOutput{})
	pulumi.RegisterOutputType(EventConnectionAuthParametersOauthOauthHttpParametersQueryStringArrayOutput{})
	pulumi.RegisterOutputType(EventEndpointEventBusOutput{})
	pulumi.RegisterOutputType(EventEndpointEventBusArrayOutput{})
	pulumi.RegisterOutputType(EventEndpointReplicationConfigOutput{})
	pulumi.RegisterOutputType(EventEndpointReplicationConfigPtrOutput{})
	pulumi.RegisterOutputType(EventEndpointRoutingConfigOutput{})
	pulumi.RegisterOutputType(EventEndpointRoutingConfigPtrOutput{})
	pulumi.RegisterOutputType(EventEndpointRoutingConfigFailoverConfigOutput{})
	pulumi.RegisterOutputType(EventEndpointRoutingConfigFailoverConfigPtrOutput{})
	pulumi.RegisterOutputType(EventEndpointRoutingConfigFailoverConfigPrimaryOutput{})
	pulumi.RegisterOutputType(EventEndpointRoutingConfigFailoverConfigPrimaryPtrOutput{})
	pulumi.RegisterOutputType(EventEndpointRoutingConfigFailoverConfigSecondaryOutput{})
	pulumi.RegisterOutputType(EventEndpointRoutingConfigFailoverConfigSecondaryPtrOutput{})
	pulumi.RegisterOutputType(EventPermissionConditionOutput{})
	pulumi.RegisterOutputType(EventPermissionConditionPtrOutput{})
	pulumi.RegisterOutputType(EventTargetBatchTargetOutput{})
	pulumi.RegisterOutputType(EventTargetBatchTargetPtrOutput{})
	pulumi.RegisterOutputType(EventTargetDeadLetterConfigOutput{})
	pulumi.RegisterOutputType(EventTargetDeadLetterConfigPtrOutput{})
	pulumi.RegisterOutputType(EventTargetEcsTargetOutput{})
	pulumi.RegisterOutputType(EventTargetEcsTargetPtrOutput{})
	pulumi.RegisterOutputType(EventTargetEcsTargetCapacityProviderStrategyOutput{})
	pulumi.RegisterOutputType(EventTargetEcsTargetCapacityProviderStrategyArrayOutput{})
	pulumi.RegisterOutputType(EventTargetEcsTargetNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(EventTargetEcsTargetNetworkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(EventTargetEcsTargetOrderedPlacementStrategyOutput{})
	pulumi.RegisterOutputType(EventTargetEcsTargetOrderedPlacementStrategyArrayOutput{})
	pulumi.RegisterOutputType(EventTargetEcsTargetPlacementConstraintOutput{})
	pulumi.RegisterOutputType(EventTargetEcsTargetPlacementConstraintArrayOutput{})
	pulumi.RegisterOutputType(EventTargetHttpTargetOutput{})
	pulumi.RegisterOutputType(EventTargetHttpTargetPtrOutput{})
	pulumi.RegisterOutputType(EventTargetInputTransformerOutput{})
	pulumi.RegisterOutputType(EventTargetInputTransformerPtrOutput{})
	pulumi.RegisterOutputType(EventTargetKinesisTargetOutput{})
	pulumi.RegisterOutputType(EventTargetKinesisTargetPtrOutput{})
	pulumi.RegisterOutputType(EventTargetRedshiftTargetOutput{})
	pulumi.RegisterOutputType(EventTargetRedshiftTargetPtrOutput{})
	pulumi.RegisterOutputType(EventTargetRetryPolicyOutput{})
	pulumi.RegisterOutputType(EventTargetRetryPolicyPtrOutput{})
	pulumi.RegisterOutputType(EventTargetRunCommandTargetOutput{})
	pulumi.RegisterOutputType(EventTargetRunCommandTargetArrayOutput{})
	pulumi.RegisterOutputType(EventTargetSagemakerPipelineTargetOutput{})
	pulumi.RegisterOutputType(EventTargetSagemakerPipelineTargetPtrOutput{})
	pulumi.RegisterOutputType(EventTargetSagemakerPipelineTargetPipelineParameterListOutput{})
	pulumi.RegisterOutputType(EventTargetSagemakerPipelineTargetPipelineParameterListArrayOutput{})
	pulumi.RegisterOutputType(EventTargetSqsTargetOutput{})
	pulumi.RegisterOutputType(EventTargetSqsTargetPtrOutput{})
	pulumi.RegisterOutputType(InternetMonitorHealthEventsConfigOutput{})
	pulumi.RegisterOutputType(InternetMonitorHealthEventsConfigPtrOutput{})
	pulumi.RegisterOutputType(InternetMonitorInternetMeasurementsLogDeliveryOutput{})
	pulumi.RegisterOutputType(InternetMonitorInternetMeasurementsLogDeliveryPtrOutput{})
	pulumi.RegisterOutputType(InternetMonitorInternetMeasurementsLogDeliveryS3ConfigOutput{})
	pulumi.RegisterOutputType(InternetMonitorInternetMeasurementsLogDeliveryS3ConfigPtrOutput{})
	pulumi.RegisterOutputType(LogMetricFilterMetricTransformationOutput{})
	pulumi.RegisterOutputType(LogMetricFilterMetricTransformationPtrOutput{})
	pulumi.RegisterOutputType(MetricAlarmMetricQueryOutput{})
	pulumi.RegisterOutputType(MetricAlarmMetricQueryArrayOutput{})
	pulumi.RegisterOutputType(MetricAlarmMetricQueryMetricOutput{})
	pulumi.RegisterOutputType(MetricAlarmMetricQueryMetricPtrOutput{})
	pulumi.RegisterOutputType(MetricStreamExcludeFilterOutput{})
	pulumi.RegisterOutputType(MetricStreamExcludeFilterArrayOutput{})
	pulumi.RegisterOutputType(MetricStreamIncludeFilterOutput{})
	pulumi.RegisterOutputType(MetricStreamIncludeFilterArrayOutput{})
	pulumi.RegisterOutputType(MetricStreamStatisticsConfigurationOutput{})
	pulumi.RegisterOutputType(MetricStreamStatisticsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(MetricStreamStatisticsConfigurationIncludeMetricOutput{})
	pulumi.RegisterOutputType(MetricStreamStatisticsConfigurationIncludeMetricArrayOutput{})
	pulumi.RegisterOutputType(GetLogDataProtectionPolicyDocumentStatementOutput{})
	pulumi.RegisterOutputType(GetLogDataProtectionPolicyDocumentStatementArrayOutput{})
	pulumi.RegisterOutputType(GetLogDataProtectionPolicyDocumentStatementOperationOutput{})
	pulumi.RegisterOutputType(GetLogDataProtectionPolicyDocumentStatementOperationAuditOutput{})
	pulumi.RegisterOutputType(GetLogDataProtectionPolicyDocumentStatementOperationAuditPtrOutput{})
	pulumi.RegisterOutputType(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationOutput{})
	pulumi.RegisterOutputType(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationPtrOutput{})
	pulumi.RegisterOutputType(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsOutput{})
	pulumi.RegisterOutputType(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationCloudwatchLogsPtrOutput{})
	pulumi.RegisterOutputType(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehoseOutput{})
	pulumi.RegisterOutputType(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationFirehosePtrOutput{})
	pulumi.RegisterOutputType(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3Output{})
	pulumi.RegisterOutputType(GetLogDataProtectionPolicyDocumentStatementOperationAuditFindingsDestinationS3PtrOutput{})
	pulumi.RegisterOutputType(GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyOutput{})
	pulumi.RegisterOutputType(GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyPtrOutput{})
	pulumi.RegisterOutputType(GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigOutput{})
	pulumi.RegisterOutputType(GetLogDataProtectionPolicyDocumentStatementOperationDeidentifyMaskConfigPtrOutput{})
}
