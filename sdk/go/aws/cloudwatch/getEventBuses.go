// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudwatch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for managing an AWS EventBridge Event Buses.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/cloudwatch"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudwatch.GetEventBuses(ctx, &cloudwatch.GetEventBusesArgs{
//				NamePrefix: pulumi.StringRef("test"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetEventBuses(ctx *pulumi.Context, args *GetEventBusesArgs, opts ...pulumi.InvokeOption) (*GetEventBusesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEventBusesResult
	err := ctx.Invoke("aws:cloudwatch/getEventBuses:getEventBuses", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEventBuses.
type GetEventBusesArgs struct {
	// Specifying this limits the results to only those event buses with names that start with the specified prefix.
	NamePrefix *string `pulumi:"namePrefix"`
}

// A collection of values returned by getEventBuses.
type GetEventBusesResult struct {
	// This list of event buses.
	EventBuses []GetEventBusesEventBus `pulumi:"eventBuses"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	NamePrefix *string `pulumi:"namePrefix"`
}

func GetEventBusesOutput(ctx *pulumi.Context, args GetEventBusesOutputArgs, opts ...pulumi.InvokeOption) GetEventBusesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetEventBusesResultOutput, error) {
			args := v.(GetEventBusesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws:cloudwatch/getEventBuses:getEventBuses", args, GetEventBusesResultOutput{}, options).(GetEventBusesResultOutput), nil
		}).(GetEventBusesResultOutput)
}

// A collection of arguments for invoking getEventBuses.
type GetEventBusesOutputArgs struct {
	// Specifying this limits the results to only those event buses with names that start with the specified prefix.
	NamePrefix pulumi.StringPtrInput `pulumi:"namePrefix"`
}

func (GetEventBusesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventBusesArgs)(nil)).Elem()
}

// A collection of values returned by getEventBuses.
type GetEventBusesResultOutput struct{ *pulumi.OutputState }

func (GetEventBusesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventBusesResult)(nil)).Elem()
}

func (o GetEventBusesResultOutput) ToGetEventBusesResultOutput() GetEventBusesResultOutput {
	return o
}

func (o GetEventBusesResultOutput) ToGetEventBusesResultOutputWithContext(ctx context.Context) GetEventBusesResultOutput {
	return o
}

// This list of event buses.
func (o GetEventBusesResultOutput) EventBuses() GetEventBusesEventBusArrayOutput {
	return o.ApplyT(func(v GetEventBusesResult) []GetEventBusesEventBus { return v.EventBuses }).(GetEventBusesEventBusArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEventBusesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventBusesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEventBusesResultOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEventBusesResult) *string { return v.NamePrefix }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEventBusesResultOutput{})
}
