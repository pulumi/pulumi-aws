// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudwatch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve information about an EventBridge connection.
//
// > **Note:** EventBridge was formerly known as CloudWatch Events. The functionality is identical.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/cloudwatch"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cloudwatch.LookupEventConnection(ctx, &cloudwatch.LookupEventConnectionArgs{
//				Name: "test",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func LookupEventConnection(ctx *pulumi.Context, args *LookupEventConnectionArgs, opts ...pulumi.InvokeOption) (*LookupEventConnectionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEventConnectionResult
	err := ctx.Invoke("aws:cloudwatch/getEventConnection:getEventConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEventConnection.
type LookupEventConnectionArgs struct {
	// Name of the connection.
	Name string `pulumi:"name"`
}

// A collection of values returned by getEventConnection.
type LookupEventConnectionResult struct {
	// ARN (Amazon Resource Name) for the connection.
	Arn string `pulumi:"arn"`
	// Type of authorization to use to connect. One of `API_KEY`,`BASIC`,`OAUTH_CLIENT_CREDENTIALS`.
	AuthorizationType string `pulumi:"authorizationType"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Name of the connection.
	Name string `pulumi:"name"`
	// ARN (Amazon Resource Name) for the secret created from the authorization parameters specified for the connection.
	SecretArn string `pulumi:"secretArn"`
}

func LookupEventConnectionOutput(ctx *pulumi.Context, args LookupEventConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupEventConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupEventConnectionResult, error) {
			args := v.(LookupEventConnectionArgs)
			r, err := LookupEventConnection(ctx, &args, opts...)
			var s LookupEventConnectionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupEventConnectionResultOutput)
}

// A collection of arguments for invoking getEventConnection.
type LookupEventConnectionOutputArgs struct {
	// Name of the connection.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupEventConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEventConnectionArgs)(nil)).Elem()
}

// A collection of values returned by getEventConnection.
type LookupEventConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupEventConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEventConnectionResult)(nil)).Elem()
}

func (o LookupEventConnectionResultOutput) ToLookupEventConnectionResultOutput() LookupEventConnectionResultOutput {
	return o
}

func (o LookupEventConnectionResultOutput) ToLookupEventConnectionResultOutputWithContext(ctx context.Context) LookupEventConnectionResultOutput {
	return o
}

// ARN (Amazon Resource Name) for the connection.
func (o LookupEventConnectionResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEventConnectionResult) string { return v.Arn }).(pulumi.StringOutput)
}

// Type of authorization to use to connect. One of `API_KEY`,`BASIC`,`OAUTH_CLIENT_CREDENTIALS`.
func (o LookupEventConnectionResultOutput) AuthorizationType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEventConnectionResult) string { return v.AuthorizationType }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupEventConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEventConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the connection.
func (o LookupEventConnectionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEventConnectionResult) string { return v.Name }).(pulumi.StringOutput)
}

// ARN (Amazon Resource Name) for the secret created from the authorization parameters specified for the connection.
func (o LookupEventConnectionResultOutput) SecretArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEventConnectionResult) string { return v.SecretArn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEventConnectionResultOutput{})
}
