// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudwatch

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a CloudWatch Log Stream resource.
type LogStream struct {
	s *pulumi.ResourceState
}

// NewLogStream registers a new resource with the given unique name, arguments, and options.
func NewLogStream(ctx *pulumi.Context,
	name string, args *LogStreamArgs, opts ...pulumi.ResourceOpt) (*LogStream, error) {
	if args == nil || args.LogGroupName == nil {
		return nil, errors.New("missing required argument 'LogGroupName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["logGroupName"] = nil
		inputs["name"] = nil
	} else {
		inputs["logGroupName"] = args.LogGroupName
		inputs["name"] = args.Name
	}
	inputs["arn"] = nil
	s, err := ctx.RegisterResource("aws:cloudwatch/logStream:LogStream", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &LogStream{s: s}, nil
}

// GetLogStream gets an existing LogStream resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLogStream(ctx *pulumi.Context,
	name string, id pulumi.ID, state *LogStreamState, opts ...pulumi.ResourceOpt) (*LogStream, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["logGroupName"] = state.LogGroupName
		inputs["name"] = state.Name
	}
	s, err := ctx.ReadResource("aws:cloudwatch/logStream:LogStream", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &LogStream{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *LogStream) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *LogStream) ID() *pulumi.IDOutput {
	return r.s.ID
}

// The Amazon Resource Name (ARN) specifying the log stream.
func (r *LogStream) Arn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["arn"])
}

// The name of the log group under which the log stream is to be created.
func (r *LogStream) LogGroupName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["logGroupName"])
}

// The name of the log stream. Must not be longer than 512 characters and must not contain `:`
func (r *LogStream) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// Input properties used for looking up and filtering LogStream resources.
type LogStreamState struct {
	// The Amazon Resource Name (ARN) specifying the log stream.
	Arn interface{}
	// The name of the log group under which the log stream is to be created.
	LogGroupName interface{}
	// The name of the log stream. Must not be longer than 512 characters and must not contain `:`
	Name interface{}
}

// The set of arguments for constructing a LogStream resource.
type LogStreamArgs struct {
	// The name of the log group under which the log stream is to be created.
	LogGroupName interface{}
	// The name of the log stream. Must not be longer than 512 characters and must not contain `:`
	Name interface{}
}
