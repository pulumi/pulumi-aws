// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudwatch

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a CloudWatch Event Rule resource.
type EventRule struct {
	s *pulumi.ResourceState
}

// NewEventRule registers a new resource with the given unique name, arguments, and options.
func NewEventRule(ctx *pulumi.Context,
	name string, args *EventRuleArgs, opts ...pulumi.ResourceOpt) (*EventRule, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["description"] = nil
		inputs["eventPattern"] = nil
		inputs["isEnabled"] = nil
		inputs["name"] = nil
		inputs["namePrefix"] = nil
		inputs["roleArn"] = nil
		inputs["scheduleExpression"] = nil
	} else {
		inputs["description"] = args.Description
		inputs["eventPattern"] = args.EventPattern
		inputs["isEnabled"] = args.IsEnabled
		inputs["name"] = args.Name
		inputs["namePrefix"] = args.NamePrefix
		inputs["roleArn"] = args.RoleArn
		inputs["scheduleExpression"] = args.ScheduleExpression
	}
	inputs["arn"] = nil
	s, err := ctx.RegisterResource("aws:cloudwatch/eventRule:EventRule", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &EventRule{s: s}, nil
}

// GetEventRule gets an existing EventRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEventRule(ctx *pulumi.Context,
	name string, id pulumi.ID, state *EventRuleState, opts ...pulumi.ResourceOpt) (*EventRule, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["description"] = state.Description
		inputs["eventPattern"] = state.EventPattern
		inputs["isEnabled"] = state.IsEnabled
		inputs["name"] = state.Name
		inputs["namePrefix"] = state.NamePrefix
		inputs["roleArn"] = state.RoleArn
		inputs["scheduleExpression"] = state.ScheduleExpression
	}
	s, err := ctx.ReadResource("aws:cloudwatch/eventRule:EventRule", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &EventRule{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *EventRule) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *EventRule) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The Amazon Resource Name (ARN) of the rule.
func (r *EventRule) Arn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["arn"])
}

// The description of the rule.
func (r *EventRule) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

// Event pattern
// described a JSON object.
// See full documentation of [CloudWatch Events and Event Patterns](http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CloudWatchEventsandEventPatterns.html) for details.
func (r *EventRule) EventPattern() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["eventPattern"])
}

// Whether the rule should be enabled (defaults to `true`).
func (r *EventRule) IsEnabled() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["isEnabled"])
}

// The rule's name. By default generated by Terraform.
func (r *EventRule) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The rule's name. Conflicts with `name`.
func (r *EventRule) NamePrefix() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["namePrefix"])
}

// The Amazon Resource Name (ARN) associated with the role that is used for target invocation.
func (r *EventRule) RoleArn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["roleArn"])
}

// The scheduling expression.
// For example, `cron(0 20 * * ? *)` or `rate(5 minutes)`.
func (r *EventRule) ScheduleExpression() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["scheduleExpression"])
}

// Input properties used for looking up and filtering EventRule resources.
type EventRuleState struct {
	// The Amazon Resource Name (ARN) of the rule.
	Arn interface{}
	// The description of the rule.
	Description interface{}
	// Event pattern
	// described a JSON object.
	// See full documentation of [CloudWatch Events and Event Patterns](http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CloudWatchEventsandEventPatterns.html) for details.
	EventPattern interface{}
	// Whether the rule should be enabled (defaults to `true`).
	IsEnabled interface{}
	// The rule's name. By default generated by Terraform.
	Name interface{}
	// The rule's name. Conflicts with `name`.
	NamePrefix interface{}
	// The Amazon Resource Name (ARN) associated with the role that is used for target invocation.
	RoleArn interface{}
	// The scheduling expression.
	// For example, `cron(0 20 * * ? *)` or `rate(5 minutes)`.
	ScheduleExpression interface{}
}

// The set of arguments for constructing a EventRule resource.
type EventRuleArgs struct {
	// The description of the rule.
	Description interface{}
	// Event pattern
	// described a JSON object.
	// See full documentation of [CloudWatch Events and Event Patterns](http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/CloudWatchEventsandEventPatterns.html) for details.
	EventPattern interface{}
	// Whether the rule should be enabled (defaults to `true`).
	IsEnabled interface{}
	// The rule's name. By default generated by Terraform.
	Name interface{}
	// The rule's name. Conflicts with `name`.
	NamePrefix interface{}
	// The Amazon Resource Name (ARN) associated with the role that is used for target invocation.
	RoleArn interface{}
	// The scheduling expression.
	// For example, `cron(0 20 * * ? *)` or `rate(5 minutes)`.
	ScheduleExpression interface{}
}
