// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudwatch

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS CloudWatch Contributor Managed Insight Rule.
//
// ## Example Usage
//
// ## Import
//
// Using `pulumi import`, import CloudWatch Contributor Managed Insight Rule using the `resource_arn`. For example:
//
// ```sh
// $ pulumi import aws:cloudwatch/contributorManagedInsightRule:ContributorManagedInsightRule example contributor_managed_insight_rule-id-12345678
// ```
type ContributorManagedInsightRule struct {
	pulumi.CustomResourceState

	// ARN of the Contributor Managed Insight Rule.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// ARN of an Amazon Web Services resource that has managed Contributor Insights rules.
	ResourceArn pulumi.StringOutput    `pulumi:"resourceArn"`
	RuleName    pulumi.StringOutput    `pulumi:"ruleName"`
	State       pulumi.StringOutput    `pulumi:"state"`
	Tags        pulumi.StringMapOutput `pulumi:"tags"`
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
	// Template name for the managed Contributor Insights rule, as returned by ListManagedInsightRules.
	//
	// The following arguments are optional:
	TemplateName pulumi.StringOutput `pulumi:"templateName"`
}

// NewContributorManagedInsightRule registers a new resource with the given unique name, arguments, and options.
func NewContributorManagedInsightRule(ctx *pulumi.Context,
	name string, args *ContributorManagedInsightRuleArgs, opts ...pulumi.ResourceOption) (*ContributorManagedInsightRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceArn == nil {
		return nil, errors.New("invalid value for required argument 'ResourceArn'")
	}
	if args.TemplateName == nil {
		return nil, errors.New("invalid value for required argument 'TemplateName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ContributorManagedInsightRule
	err := ctx.RegisterResource("aws:cloudwatch/contributorManagedInsightRule:ContributorManagedInsightRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetContributorManagedInsightRule gets an existing ContributorManagedInsightRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetContributorManagedInsightRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ContributorManagedInsightRuleState, opts ...pulumi.ResourceOption) (*ContributorManagedInsightRule, error) {
	var resource ContributorManagedInsightRule
	err := ctx.ReadResource("aws:cloudwatch/contributorManagedInsightRule:ContributorManagedInsightRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ContributorManagedInsightRule resources.
type contributorManagedInsightRuleState struct {
	// ARN of the Contributor Managed Insight Rule.
	Arn *string `pulumi:"arn"`
	// ARN of an Amazon Web Services resource that has managed Contributor Insights rules.
	ResourceArn *string           `pulumi:"resourceArn"`
	RuleName    *string           `pulumi:"ruleName"`
	State       *string           `pulumi:"state"`
	Tags        map[string]string `pulumi:"tags"`
	// Deprecated: Please use `tags` instead.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Template name for the managed Contributor Insights rule, as returned by ListManagedInsightRules.
	//
	// The following arguments are optional:
	TemplateName *string `pulumi:"templateName"`
}

type ContributorManagedInsightRuleState struct {
	// ARN of the Contributor Managed Insight Rule.
	Arn pulumi.StringPtrInput
	// ARN of an Amazon Web Services resource that has managed Contributor Insights rules.
	ResourceArn pulumi.StringPtrInput
	RuleName    pulumi.StringPtrInput
	State       pulumi.StringPtrInput
	Tags        pulumi.StringMapInput
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapInput
	// Template name for the managed Contributor Insights rule, as returned by ListManagedInsightRules.
	//
	// The following arguments are optional:
	TemplateName pulumi.StringPtrInput
}

func (ContributorManagedInsightRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*contributorManagedInsightRuleState)(nil)).Elem()
}

type contributorManagedInsightRuleArgs struct {
	// ARN of an Amazon Web Services resource that has managed Contributor Insights rules.
	ResourceArn string            `pulumi:"resourceArn"`
	State       *string           `pulumi:"state"`
	Tags        map[string]string `pulumi:"tags"`
	// Template name for the managed Contributor Insights rule, as returned by ListManagedInsightRules.
	//
	// The following arguments are optional:
	TemplateName string `pulumi:"templateName"`
}

// The set of arguments for constructing a ContributorManagedInsightRule resource.
type ContributorManagedInsightRuleArgs struct {
	// ARN of an Amazon Web Services resource that has managed Contributor Insights rules.
	ResourceArn pulumi.StringInput
	State       pulumi.StringPtrInput
	Tags        pulumi.StringMapInput
	// Template name for the managed Contributor Insights rule, as returned by ListManagedInsightRules.
	//
	// The following arguments are optional:
	TemplateName pulumi.StringInput
}

func (ContributorManagedInsightRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*contributorManagedInsightRuleArgs)(nil)).Elem()
}

type ContributorManagedInsightRuleInput interface {
	pulumi.Input

	ToContributorManagedInsightRuleOutput() ContributorManagedInsightRuleOutput
	ToContributorManagedInsightRuleOutputWithContext(ctx context.Context) ContributorManagedInsightRuleOutput
}

func (*ContributorManagedInsightRule) ElementType() reflect.Type {
	return reflect.TypeOf((**ContributorManagedInsightRule)(nil)).Elem()
}

func (i *ContributorManagedInsightRule) ToContributorManagedInsightRuleOutput() ContributorManagedInsightRuleOutput {
	return i.ToContributorManagedInsightRuleOutputWithContext(context.Background())
}

func (i *ContributorManagedInsightRule) ToContributorManagedInsightRuleOutputWithContext(ctx context.Context) ContributorManagedInsightRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContributorManagedInsightRuleOutput)
}

// ContributorManagedInsightRuleArrayInput is an input type that accepts ContributorManagedInsightRuleArray and ContributorManagedInsightRuleArrayOutput values.
// You can construct a concrete instance of `ContributorManagedInsightRuleArrayInput` via:
//
//	ContributorManagedInsightRuleArray{ ContributorManagedInsightRuleArgs{...} }
type ContributorManagedInsightRuleArrayInput interface {
	pulumi.Input

	ToContributorManagedInsightRuleArrayOutput() ContributorManagedInsightRuleArrayOutput
	ToContributorManagedInsightRuleArrayOutputWithContext(context.Context) ContributorManagedInsightRuleArrayOutput
}

type ContributorManagedInsightRuleArray []ContributorManagedInsightRuleInput

func (ContributorManagedInsightRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ContributorManagedInsightRule)(nil)).Elem()
}

func (i ContributorManagedInsightRuleArray) ToContributorManagedInsightRuleArrayOutput() ContributorManagedInsightRuleArrayOutput {
	return i.ToContributorManagedInsightRuleArrayOutputWithContext(context.Background())
}

func (i ContributorManagedInsightRuleArray) ToContributorManagedInsightRuleArrayOutputWithContext(ctx context.Context) ContributorManagedInsightRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContributorManagedInsightRuleArrayOutput)
}

// ContributorManagedInsightRuleMapInput is an input type that accepts ContributorManagedInsightRuleMap and ContributorManagedInsightRuleMapOutput values.
// You can construct a concrete instance of `ContributorManagedInsightRuleMapInput` via:
//
//	ContributorManagedInsightRuleMap{ "key": ContributorManagedInsightRuleArgs{...} }
type ContributorManagedInsightRuleMapInput interface {
	pulumi.Input

	ToContributorManagedInsightRuleMapOutput() ContributorManagedInsightRuleMapOutput
	ToContributorManagedInsightRuleMapOutputWithContext(context.Context) ContributorManagedInsightRuleMapOutput
}

type ContributorManagedInsightRuleMap map[string]ContributorManagedInsightRuleInput

func (ContributorManagedInsightRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ContributorManagedInsightRule)(nil)).Elem()
}

func (i ContributorManagedInsightRuleMap) ToContributorManagedInsightRuleMapOutput() ContributorManagedInsightRuleMapOutput {
	return i.ToContributorManagedInsightRuleMapOutputWithContext(context.Background())
}

func (i ContributorManagedInsightRuleMap) ToContributorManagedInsightRuleMapOutputWithContext(ctx context.Context) ContributorManagedInsightRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ContributorManagedInsightRuleMapOutput)
}

type ContributorManagedInsightRuleOutput struct{ *pulumi.OutputState }

func (ContributorManagedInsightRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ContributorManagedInsightRule)(nil)).Elem()
}

func (o ContributorManagedInsightRuleOutput) ToContributorManagedInsightRuleOutput() ContributorManagedInsightRuleOutput {
	return o
}

func (o ContributorManagedInsightRuleOutput) ToContributorManagedInsightRuleOutputWithContext(ctx context.Context) ContributorManagedInsightRuleOutput {
	return o
}

// ARN of the Contributor Managed Insight Rule.
func (o ContributorManagedInsightRuleOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ContributorManagedInsightRule) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// ARN of an Amazon Web Services resource that has managed Contributor Insights rules.
func (o ContributorManagedInsightRuleOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ContributorManagedInsightRule) pulumi.StringOutput { return v.ResourceArn }).(pulumi.StringOutput)
}

func (o ContributorManagedInsightRuleOutput) RuleName() pulumi.StringOutput {
	return o.ApplyT(func(v *ContributorManagedInsightRule) pulumi.StringOutput { return v.RuleName }).(pulumi.StringOutput)
}

func (o ContributorManagedInsightRuleOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ContributorManagedInsightRule) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

func (o ContributorManagedInsightRuleOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ContributorManagedInsightRule) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Deprecated: Please use `tags` instead.
func (o ContributorManagedInsightRuleOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ContributorManagedInsightRule) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

// Template name for the managed Contributor Insights rule, as returned by ListManagedInsightRules.
//
// The following arguments are optional:
func (o ContributorManagedInsightRuleOutput) TemplateName() pulumi.StringOutput {
	return o.ApplyT(func(v *ContributorManagedInsightRule) pulumi.StringOutput { return v.TemplateName }).(pulumi.StringOutput)
}

type ContributorManagedInsightRuleArrayOutput struct{ *pulumi.OutputState }

func (ContributorManagedInsightRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ContributorManagedInsightRule)(nil)).Elem()
}

func (o ContributorManagedInsightRuleArrayOutput) ToContributorManagedInsightRuleArrayOutput() ContributorManagedInsightRuleArrayOutput {
	return o
}

func (o ContributorManagedInsightRuleArrayOutput) ToContributorManagedInsightRuleArrayOutputWithContext(ctx context.Context) ContributorManagedInsightRuleArrayOutput {
	return o
}

func (o ContributorManagedInsightRuleArrayOutput) Index(i pulumi.IntInput) ContributorManagedInsightRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ContributorManagedInsightRule {
		return vs[0].([]*ContributorManagedInsightRule)[vs[1].(int)]
	}).(ContributorManagedInsightRuleOutput)
}

type ContributorManagedInsightRuleMapOutput struct{ *pulumi.OutputState }

func (ContributorManagedInsightRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ContributorManagedInsightRule)(nil)).Elem()
}

func (o ContributorManagedInsightRuleMapOutput) ToContributorManagedInsightRuleMapOutput() ContributorManagedInsightRuleMapOutput {
	return o
}

func (o ContributorManagedInsightRuleMapOutput) ToContributorManagedInsightRuleMapOutputWithContext(ctx context.Context) ContributorManagedInsightRuleMapOutput {
	return o
}

func (o ContributorManagedInsightRuleMapOutput) MapIndex(k pulumi.StringInput) ContributorManagedInsightRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ContributorManagedInsightRule {
		return vs[0].(map[string]*ContributorManagedInsightRule)[vs[1].(string)]
	}).(ContributorManagedInsightRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ContributorManagedInsightRuleInput)(nil)).Elem(), &ContributorManagedInsightRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContributorManagedInsightRuleArrayInput)(nil)).Elem(), ContributorManagedInsightRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ContributorManagedInsightRuleMapInput)(nil)).Elem(), ContributorManagedInsightRuleMap{})
	pulumi.RegisterOutputType(ContributorManagedInsightRuleOutput{})
	pulumi.RegisterOutputType(ContributorManagedInsightRuleArrayOutput{})
	pulumi.RegisterOutputType(ContributorManagedInsightRuleMapOutput{})
}
