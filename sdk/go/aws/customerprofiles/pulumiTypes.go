// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package customerprofiles

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DomainMatching struct {
	// A block that specifies the configuration about the auto-merging process. Documented below.
	AutoMerging *DomainMatchingAutoMerging `pulumi:"autoMerging"`
	// The flag that enables the matching process of duplicate profiles.
	Enabled bool `pulumi:"enabled"`
	// A block that specifies the configuration for exporting Identity Resolution results. Documented below.
	ExportingConfig *DomainMatchingExportingConfig `pulumi:"exportingConfig"`
	// A block that specifies the day and time when you want to start the Identity Resolution Job every week. Documented below.
	JobSchedule *DomainMatchingJobSchedule `pulumi:"jobSchedule"`
}

// DomainMatchingInput is an input type that accepts DomainMatchingArgs and DomainMatchingOutput values.
// You can construct a concrete instance of `DomainMatchingInput` via:
//
//	DomainMatchingArgs{...}
type DomainMatchingInput interface {
	pulumi.Input

	ToDomainMatchingOutput() DomainMatchingOutput
	ToDomainMatchingOutputWithContext(context.Context) DomainMatchingOutput
}

type DomainMatchingArgs struct {
	// A block that specifies the configuration about the auto-merging process. Documented below.
	AutoMerging DomainMatchingAutoMergingPtrInput `pulumi:"autoMerging"`
	// The flag that enables the matching process of duplicate profiles.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// A block that specifies the configuration for exporting Identity Resolution results. Documented below.
	ExportingConfig DomainMatchingExportingConfigPtrInput `pulumi:"exportingConfig"`
	// A block that specifies the day and time when you want to start the Identity Resolution Job every week. Documented below.
	JobSchedule DomainMatchingJobSchedulePtrInput `pulumi:"jobSchedule"`
}

func (DomainMatchingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMatching)(nil)).Elem()
}

func (i DomainMatchingArgs) ToDomainMatchingOutput() DomainMatchingOutput {
	return i.ToDomainMatchingOutputWithContext(context.Background())
}

func (i DomainMatchingArgs) ToDomainMatchingOutputWithContext(ctx context.Context) DomainMatchingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMatchingOutput)
}

func (i DomainMatchingArgs) ToDomainMatchingPtrOutput() DomainMatchingPtrOutput {
	return i.ToDomainMatchingPtrOutputWithContext(context.Background())
}

func (i DomainMatchingArgs) ToDomainMatchingPtrOutputWithContext(ctx context.Context) DomainMatchingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMatchingOutput).ToDomainMatchingPtrOutputWithContext(ctx)
}

// DomainMatchingPtrInput is an input type that accepts DomainMatchingArgs, DomainMatchingPtr and DomainMatchingPtrOutput values.
// You can construct a concrete instance of `DomainMatchingPtrInput` via:
//
//	        DomainMatchingArgs{...}
//
//	or:
//
//	        nil
type DomainMatchingPtrInput interface {
	pulumi.Input

	ToDomainMatchingPtrOutput() DomainMatchingPtrOutput
	ToDomainMatchingPtrOutputWithContext(context.Context) DomainMatchingPtrOutput
}

type domainMatchingPtrType DomainMatchingArgs

func DomainMatchingPtr(v *DomainMatchingArgs) DomainMatchingPtrInput {
	return (*domainMatchingPtrType)(v)
}

func (*domainMatchingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMatching)(nil)).Elem()
}

func (i *domainMatchingPtrType) ToDomainMatchingPtrOutput() DomainMatchingPtrOutput {
	return i.ToDomainMatchingPtrOutputWithContext(context.Background())
}

func (i *domainMatchingPtrType) ToDomainMatchingPtrOutputWithContext(ctx context.Context) DomainMatchingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMatchingPtrOutput)
}

type DomainMatchingOutput struct{ *pulumi.OutputState }

func (DomainMatchingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMatching)(nil)).Elem()
}

func (o DomainMatchingOutput) ToDomainMatchingOutput() DomainMatchingOutput {
	return o
}

func (o DomainMatchingOutput) ToDomainMatchingOutputWithContext(ctx context.Context) DomainMatchingOutput {
	return o
}

func (o DomainMatchingOutput) ToDomainMatchingPtrOutput() DomainMatchingPtrOutput {
	return o.ToDomainMatchingPtrOutputWithContext(context.Background())
}

func (o DomainMatchingOutput) ToDomainMatchingPtrOutputWithContext(ctx context.Context) DomainMatchingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainMatching) *DomainMatching {
		return &v
	}).(DomainMatchingPtrOutput)
}

// A block that specifies the configuration about the auto-merging process. Documented below.
func (o DomainMatchingOutput) AutoMerging() DomainMatchingAutoMergingPtrOutput {
	return o.ApplyT(func(v DomainMatching) *DomainMatchingAutoMerging { return v.AutoMerging }).(DomainMatchingAutoMergingPtrOutput)
}

// The flag that enables the matching process of duplicate profiles.
func (o DomainMatchingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DomainMatching) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// A block that specifies the configuration for exporting Identity Resolution results. Documented below.
func (o DomainMatchingOutput) ExportingConfig() DomainMatchingExportingConfigPtrOutput {
	return o.ApplyT(func(v DomainMatching) *DomainMatchingExportingConfig { return v.ExportingConfig }).(DomainMatchingExportingConfigPtrOutput)
}

// A block that specifies the day and time when you want to start the Identity Resolution Job every week. Documented below.
func (o DomainMatchingOutput) JobSchedule() DomainMatchingJobSchedulePtrOutput {
	return o.ApplyT(func(v DomainMatching) *DomainMatchingJobSchedule { return v.JobSchedule }).(DomainMatchingJobSchedulePtrOutput)
}

type DomainMatchingPtrOutput struct{ *pulumi.OutputState }

func (DomainMatchingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMatching)(nil)).Elem()
}

func (o DomainMatchingPtrOutput) ToDomainMatchingPtrOutput() DomainMatchingPtrOutput {
	return o
}

func (o DomainMatchingPtrOutput) ToDomainMatchingPtrOutputWithContext(ctx context.Context) DomainMatchingPtrOutput {
	return o
}

func (o DomainMatchingPtrOutput) Elem() DomainMatchingOutput {
	return o.ApplyT(func(v *DomainMatching) DomainMatching {
		if v != nil {
			return *v
		}
		var ret DomainMatching
		return ret
	}).(DomainMatchingOutput)
}

// A block that specifies the configuration about the auto-merging process. Documented below.
func (o DomainMatchingPtrOutput) AutoMerging() DomainMatchingAutoMergingPtrOutput {
	return o.ApplyT(func(v *DomainMatching) *DomainMatchingAutoMerging {
		if v == nil {
			return nil
		}
		return v.AutoMerging
	}).(DomainMatchingAutoMergingPtrOutput)
}

// The flag that enables the matching process of duplicate profiles.
func (o DomainMatchingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainMatching) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// A block that specifies the configuration for exporting Identity Resolution results. Documented below.
func (o DomainMatchingPtrOutput) ExportingConfig() DomainMatchingExportingConfigPtrOutput {
	return o.ApplyT(func(v *DomainMatching) *DomainMatchingExportingConfig {
		if v == nil {
			return nil
		}
		return v.ExportingConfig
	}).(DomainMatchingExportingConfigPtrOutput)
}

// A block that specifies the day and time when you want to start the Identity Resolution Job every week. Documented below.
func (o DomainMatchingPtrOutput) JobSchedule() DomainMatchingJobSchedulePtrOutput {
	return o.ApplyT(func(v *DomainMatching) *DomainMatchingJobSchedule {
		if v == nil {
			return nil
		}
		return v.JobSchedule
	}).(DomainMatchingJobSchedulePtrOutput)
}

type DomainMatchingAutoMerging struct {
	// A block that specifies how the auto-merging process should resolve conflicts between different profiles. Documented below.
	ConflictResolution *DomainMatchingAutoMergingConflictResolution `pulumi:"conflictResolution"`
	// A block that specifies a list of matching attributes that represent matching criteria. If two profiles meet at least one of the requirements in the matching attributes list, they will be merged. Documented below.
	// * ` minAllowedConfidenceScoreForMerging  ` - (Optional) A number between 0 and 1 that represents the minimum confidence score required for profiles within a matching group to be merged during the auto-merge process. A higher score means higher similarity required to merge profiles.
	Consolidation *DomainMatchingAutoMergingConsolidation `pulumi:"consolidation"`
	// The flag that enables the auto-merging of duplicate profiles.
	Enabled                             bool     `pulumi:"enabled"`
	MinAllowedConfidenceScoreForMerging *float64 `pulumi:"minAllowedConfidenceScoreForMerging"`
}

// DomainMatchingAutoMergingInput is an input type that accepts DomainMatchingAutoMergingArgs and DomainMatchingAutoMergingOutput values.
// You can construct a concrete instance of `DomainMatchingAutoMergingInput` via:
//
//	DomainMatchingAutoMergingArgs{...}
type DomainMatchingAutoMergingInput interface {
	pulumi.Input

	ToDomainMatchingAutoMergingOutput() DomainMatchingAutoMergingOutput
	ToDomainMatchingAutoMergingOutputWithContext(context.Context) DomainMatchingAutoMergingOutput
}

type DomainMatchingAutoMergingArgs struct {
	// A block that specifies how the auto-merging process should resolve conflicts between different profiles. Documented below.
	ConflictResolution DomainMatchingAutoMergingConflictResolutionPtrInput `pulumi:"conflictResolution"`
	// A block that specifies a list of matching attributes that represent matching criteria. If two profiles meet at least one of the requirements in the matching attributes list, they will be merged. Documented below.
	// * ` minAllowedConfidenceScoreForMerging  ` - (Optional) A number between 0 and 1 that represents the minimum confidence score required for profiles within a matching group to be merged during the auto-merge process. A higher score means higher similarity required to merge profiles.
	Consolidation DomainMatchingAutoMergingConsolidationPtrInput `pulumi:"consolidation"`
	// The flag that enables the auto-merging of duplicate profiles.
	Enabled                             pulumi.BoolInput       `pulumi:"enabled"`
	MinAllowedConfidenceScoreForMerging pulumi.Float64PtrInput `pulumi:"minAllowedConfidenceScoreForMerging"`
}

func (DomainMatchingAutoMergingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMatchingAutoMerging)(nil)).Elem()
}

func (i DomainMatchingAutoMergingArgs) ToDomainMatchingAutoMergingOutput() DomainMatchingAutoMergingOutput {
	return i.ToDomainMatchingAutoMergingOutputWithContext(context.Background())
}

func (i DomainMatchingAutoMergingArgs) ToDomainMatchingAutoMergingOutputWithContext(ctx context.Context) DomainMatchingAutoMergingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMatchingAutoMergingOutput)
}

func (i DomainMatchingAutoMergingArgs) ToDomainMatchingAutoMergingPtrOutput() DomainMatchingAutoMergingPtrOutput {
	return i.ToDomainMatchingAutoMergingPtrOutputWithContext(context.Background())
}

func (i DomainMatchingAutoMergingArgs) ToDomainMatchingAutoMergingPtrOutputWithContext(ctx context.Context) DomainMatchingAutoMergingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMatchingAutoMergingOutput).ToDomainMatchingAutoMergingPtrOutputWithContext(ctx)
}

// DomainMatchingAutoMergingPtrInput is an input type that accepts DomainMatchingAutoMergingArgs, DomainMatchingAutoMergingPtr and DomainMatchingAutoMergingPtrOutput values.
// You can construct a concrete instance of `DomainMatchingAutoMergingPtrInput` via:
//
//	        DomainMatchingAutoMergingArgs{...}
//
//	or:
//
//	        nil
type DomainMatchingAutoMergingPtrInput interface {
	pulumi.Input

	ToDomainMatchingAutoMergingPtrOutput() DomainMatchingAutoMergingPtrOutput
	ToDomainMatchingAutoMergingPtrOutputWithContext(context.Context) DomainMatchingAutoMergingPtrOutput
}

type domainMatchingAutoMergingPtrType DomainMatchingAutoMergingArgs

func DomainMatchingAutoMergingPtr(v *DomainMatchingAutoMergingArgs) DomainMatchingAutoMergingPtrInput {
	return (*domainMatchingAutoMergingPtrType)(v)
}

func (*domainMatchingAutoMergingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMatchingAutoMerging)(nil)).Elem()
}

func (i *domainMatchingAutoMergingPtrType) ToDomainMatchingAutoMergingPtrOutput() DomainMatchingAutoMergingPtrOutput {
	return i.ToDomainMatchingAutoMergingPtrOutputWithContext(context.Background())
}

func (i *domainMatchingAutoMergingPtrType) ToDomainMatchingAutoMergingPtrOutputWithContext(ctx context.Context) DomainMatchingAutoMergingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMatchingAutoMergingPtrOutput)
}

type DomainMatchingAutoMergingOutput struct{ *pulumi.OutputState }

func (DomainMatchingAutoMergingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMatchingAutoMerging)(nil)).Elem()
}

func (o DomainMatchingAutoMergingOutput) ToDomainMatchingAutoMergingOutput() DomainMatchingAutoMergingOutput {
	return o
}

func (o DomainMatchingAutoMergingOutput) ToDomainMatchingAutoMergingOutputWithContext(ctx context.Context) DomainMatchingAutoMergingOutput {
	return o
}

func (o DomainMatchingAutoMergingOutput) ToDomainMatchingAutoMergingPtrOutput() DomainMatchingAutoMergingPtrOutput {
	return o.ToDomainMatchingAutoMergingPtrOutputWithContext(context.Background())
}

func (o DomainMatchingAutoMergingOutput) ToDomainMatchingAutoMergingPtrOutputWithContext(ctx context.Context) DomainMatchingAutoMergingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainMatchingAutoMerging) *DomainMatchingAutoMerging {
		return &v
	}).(DomainMatchingAutoMergingPtrOutput)
}

// A block that specifies how the auto-merging process should resolve conflicts between different profiles. Documented below.
func (o DomainMatchingAutoMergingOutput) ConflictResolution() DomainMatchingAutoMergingConflictResolutionPtrOutput {
	return o.ApplyT(func(v DomainMatchingAutoMerging) *DomainMatchingAutoMergingConflictResolution {
		return v.ConflictResolution
	}).(DomainMatchingAutoMergingConflictResolutionPtrOutput)
}

// A block that specifies a list of matching attributes that represent matching criteria. If two profiles meet at least one of the requirements in the matching attributes list, they will be merged. Documented below.
// * ` minAllowedConfidenceScoreForMerging  ` - (Optional) A number between 0 and 1 that represents the minimum confidence score required for profiles within a matching group to be merged during the auto-merge process. A higher score means higher similarity required to merge profiles.
func (o DomainMatchingAutoMergingOutput) Consolidation() DomainMatchingAutoMergingConsolidationPtrOutput {
	return o.ApplyT(func(v DomainMatchingAutoMerging) *DomainMatchingAutoMergingConsolidation { return v.Consolidation }).(DomainMatchingAutoMergingConsolidationPtrOutput)
}

// The flag that enables the auto-merging of duplicate profiles.
func (o DomainMatchingAutoMergingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DomainMatchingAutoMerging) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func (o DomainMatchingAutoMergingOutput) MinAllowedConfidenceScoreForMerging() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v DomainMatchingAutoMerging) *float64 { return v.MinAllowedConfidenceScoreForMerging }).(pulumi.Float64PtrOutput)
}

type DomainMatchingAutoMergingPtrOutput struct{ *pulumi.OutputState }

func (DomainMatchingAutoMergingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMatchingAutoMerging)(nil)).Elem()
}

func (o DomainMatchingAutoMergingPtrOutput) ToDomainMatchingAutoMergingPtrOutput() DomainMatchingAutoMergingPtrOutput {
	return o
}

func (o DomainMatchingAutoMergingPtrOutput) ToDomainMatchingAutoMergingPtrOutputWithContext(ctx context.Context) DomainMatchingAutoMergingPtrOutput {
	return o
}

func (o DomainMatchingAutoMergingPtrOutput) Elem() DomainMatchingAutoMergingOutput {
	return o.ApplyT(func(v *DomainMatchingAutoMerging) DomainMatchingAutoMerging {
		if v != nil {
			return *v
		}
		var ret DomainMatchingAutoMerging
		return ret
	}).(DomainMatchingAutoMergingOutput)
}

// A block that specifies how the auto-merging process should resolve conflicts between different profiles. Documented below.
func (o DomainMatchingAutoMergingPtrOutput) ConflictResolution() DomainMatchingAutoMergingConflictResolutionPtrOutput {
	return o.ApplyT(func(v *DomainMatchingAutoMerging) *DomainMatchingAutoMergingConflictResolution {
		if v == nil {
			return nil
		}
		return v.ConflictResolution
	}).(DomainMatchingAutoMergingConflictResolutionPtrOutput)
}

// A block that specifies a list of matching attributes that represent matching criteria. If two profiles meet at least one of the requirements in the matching attributes list, they will be merged. Documented below.
// * ` minAllowedConfidenceScoreForMerging  ` - (Optional) A number between 0 and 1 that represents the minimum confidence score required for profiles within a matching group to be merged during the auto-merge process. A higher score means higher similarity required to merge profiles.
func (o DomainMatchingAutoMergingPtrOutput) Consolidation() DomainMatchingAutoMergingConsolidationPtrOutput {
	return o.ApplyT(func(v *DomainMatchingAutoMerging) *DomainMatchingAutoMergingConsolidation {
		if v == nil {
			return nil
		}
		return v.Consolidation
	}).(DomainMatchingAutoMergingConsolidationPtrOutput)
}

// The flag that enables the auto-merging of duplicate profiles.
func (o DomainMatchingAutoMergingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainMatchingAutoMerging) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o DomainMatchingAutoMergingPtrOutput) MinAllowedConfidenceScoreForMerging() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *DomainMatchingAutoMerging) *float64 {
		if v == nil {
			return nil
		}
		return v.MinAllowedConfidenceScoreForMerging
	}).(pulumi.Float64PtrOutput)
}

type DomainMatchingAutoMergingConflictResolution struct {
	// How the auto-merging process should resolve conflicts between different profiles. Valid values are `RECENCY` and `SOURCE`
	ConflictResolvingModel string `pulumi:"conflictResolvingModel"`
	// The `ObjectType` name that is used to resolve profile merging conflicts when choosing `SOURCE` as the `ConflictResolvingModel`.
	SourceName *string `pulumi:"sourceName"`
}

// DomainMatchingAutoMergingConflictResolutionInput is an input type that accepts DomainMatchingAutoMergingConflictResolutionArgs and DomainMatchingAutoMergingConflictResolutionOutput values.
// You can construct a concrete instance of `DomainMatchingAutoMergingConflictResolutionInput` via:
//
//	DomainMatchingAutoMergingConflictResolutionArgs{...}
type DomainMatchingAutoMergingConflictResolutionInput interface {
	pulumi.Input

	ToDomainMatchingAutoMergingConflictResolutionOutput() DomainMatchingAutoMergingConflictResolutionOutput
	ToDomainMatchingAutoMergingConflictResolutionOutputWithContext(context.Context) DomainMatchingAutoMergingConflictResolutionOutput
}

type DomainMatchingAutoMergingConflictResolutionArgs struct {
	// How the auto-merging process should resolve conflicts between different profiles. Valid values are `RECENCY` and `SOURCE`
	ConflictResolvingModel pulumi.StringInput `pulumi:"conflictResolvingModel"`
	// The `ObjectType` name that is used to resolve profile merging conflicts when choosing `SOURCE` as the `ConflictResolvingModel`.
	SourceName pulumi.StringPtrInput `pulumi:"sourceName"`
}

func (DomainMatchingAutoMergingConflictResolutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMatchingAutoMergingConflictResolution)(nil)).Elem()
}

func (i DomainMatchingAutoMergingConflictResolutionArgs) ToDomainMatchingAutoMergingConflictResolutionOutput() DomainMatchingAutoMergingConflictResolutionOutput {
	return i.ToDomainMatchingAutoMergingConflictResolutionOutputWithContext(context.Background())
}

func (i DomainMatchingAutoMergingConflictResolutionArgs) ToDomainMatchingAutoMergingConflictResolutionOutputWithContext(ctx context.Context) DomainMatchingAutoMergingConflictResolutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMatchingAutoMergingConflictResolutionOutput)
}

func (i DomainMatchingAutoMergingConflictResolutionArgs) ToDomainMatchingAutoMergingConflictResolutionPtrOutput() DomainMatchingAutoMergingConflictResolutionPtrOutput {
	return i.ToDomainMatchingAutoMergingConflictResolutionPtrOutputWithContext(context.Background())
}

func (i DomainMatchingAutoMergingConflictResolutionArgs) ToDomainMatchingAutoMergingConflictResolutionPtrOutputWithContext(ctx context.Context) DomainMatchingAutoMergingConflictResolutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMatchingAutoMergingConflictResolutionOutput).ToDomainMatchingAutoMergingConflictResolutionPtrOutputWithContext(ctx)
}

// DomainMatchingAutoMergingConflictResolutionPtrInput is an input type that accepts DomainMatchingAutoMergingConflictResolutionArgs, DomainMatchingAutoMergingConflictResolutionPtr and DomainMatchingAutoMergingConflictResolutionPtrOutput values.
// You can construct a concrete instance of `DomainMatchingAutoMergingConflictResolutionPtrInput` via:
//
//	        DomainMatchingAutoMergingConflictResolutionArgs{...}
//
//	or:
//
//	        nil
type DomainMatchingAutoMergingConflictResolutionPtrInput interface {
	pulumi.Input

	ToDomainMatchingAutoMergingConflictResolutionPtrOutput() DomainMatchingAutoMergingConflictResolutionPtrOutput
	ToDomainMatchingAutoMergingConflictResolutionPtrOutputWithContext(context.Context) DomainMatchingAutoMergingConflictResolutionPtrOutput
}

type domainMatchingAutoMergingConflictResolutionPtrType DomainMatchingAutoMergingConflictResolutionArgs

func DomainMatchingAutoMergingConflictResolutionPtr(v *DomainMatchingAutoMergingConflictResolutionArgs) DomainMatchingAutoMergingConflictResolutionPtrInput {
	return (*domainMatchingAutoMergingConflictResolutionPtrType)(v)
}

func (*domainMatchingAutoMergingConflictResolutionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMatchingAutoMergingConflictResolution)(nil)).Elem()
}

func (i *domainMatchingAutoMergingConflictResolutionPtrType) ToDomainMatchingAutoMergingConflictResolutionPtrOutput() DomainMatchingAutoMergingConflictResolutionPtrOutput {
	return i.ToDomainMatchingAutoMergingConflictResolutionPtrOutputWithContext(context.Background())
}

func (i *domainMatchingAutoMergingConflictResolutionPtrType) ToDomainMatchingAutoMergingConflictResolutionPtrOutputWithContext(ctx context.Context) DomainMatchingAutoMergingConflictResolutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMatchingAutoMergingConflictResolutionPtrOutput)
}

type DomainMatchingAutoMergingConflictResolutionOutput struct{ *pulumi.OutputState }

func (DomainMatchingAutoMergingConflictResolutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMatchingAutoMergingConflictResolution)(nil)).Elem()
}

func (o DomainMatchingAutoMergingConflictResolutionOutput) ToDomainMatchingAutoMergingConflictResolutionOutput() DomainMatchingAutoMergingConflictResolutionOutput {
	return o
}

func (o DomainMatchingAutoMergingConflictResolutionOutput) ToDomainMatchingAutoMergingConflictResolutionOutputWithContext(ctx context.Context) DomainMatchingAutoMergingConflictResolutionOutput {
	return o
}

func (o DomainMatchingAutoMergingConflictResolutionOutput) ToDomainMatchingAutoMergingConflictResolutionPtrOutput() DomainMatchingAutoMergingConflictResolutionPtrOutput {
	return o.ToDomainMatchingAutoMergingConflictResolutionPtrOutputWithContext(context.Background())
}

func (o DomainMatchingAutoMergingConflictResolutionOutput) ToDomainMatchingAutoMergingConflictResolutionPtrOutputWithContext(ctx context.Context) DomainMatchingAutoMergingConflictResolutionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainMatchingAutoMergingConflictResolution) *DomainMatchingAutoMergingConflictResolution {
		return &v
	}).(DomainMatchingAutoMergingConflictResolutionPtrOutput)
}

// How the auto-merging process should resolve conflicts between different profiles. Valid values are `RECENCY` and `SOURCE`
func (o DomainMatchingAutoMergingConflictResolutionOutput) ConflictResolvingModel() pulumi.StringOutput {
	return o.ApplyT(func(v DomainMatchingAutoMergingConflictResolution) string { return v.ConflictResolvingModel }).(pulumi.StringOutput)
}

// The `ObjectType` name that is used to resolve profile merging conflicts when choosing `SOURCE` as the `ConflictResolvingModel`.
func (o DomainMatchingAutoMergingConflictResolutionOutput) SourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainMatchingAutoMergingConflictResolution) *string { return v.SourceName }).(pulumi.StringPtrOutput)
}

type DomainMatchingAutoMergingConflictResolutionPtrOutput struct{ *pulumi.OutputState }

func (DomainMatchingAutoMergingConflictResolutionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMatchingAutoMergingConflictResolution)(nil)).Elem()
}

func (o DomainMatchingAutoMergingConflictResolutionPtrOutput) ToDomainMatchingAutoMergingConflictResolutionPtrOutput() DomainMatchingAutoMergingConflictResolutionPtrOutput {
	return o
}

func (o DomainMatchingAutoMergingConflictResolutionPtrOutput) ToDomainMatchingAutoMergingConflictResolutionPtrOutputWithContext(ctx context.Context) DomainMatchingAutoMergingConflictResolutionPtrOutput {
	return o
}

func (o DomainMatchingAutoMergingConflictResolutionPtrOutput) Elem() DomainMatchingAutoMergingConflictResolutionOutput {
	return o.ApplyT(func(v *DomainMatchingAutoMergingConflictResolution) DomainMatchingAutoMergingConflictResolution {
		if v != nil {
			return *v
		}
		var ret DomainMatchingAutoMergingConflictResolution
		return ret
	}).(DomainMatchingAutoMergingConflictResolutionOutput)
}

// How the auto-merging process should resolve conflicts between different profiles. Valid values are `RECENCY` and `SOURCE`
func (o DomainMatchingAutoMergingConflictResolutionPtrOutput) ConflictResolvingModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainMatchingAutoMergingConflictResolution) *string {
		if v == nil {
			return nil
		}
		return &v.ConflictResolvingModel
	}).(pulumi.StringPtrOutput)
}

// The `ObjectType` name that is used to resolve profile merging conflicts when choosing `SOURCE` as the `ConflictResolvingModel`.
func (o DomainMatchingAutoMergingConflictResolutionPtrOutput) SourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainMatchingAutoMergingConflictResolution) *string {
		if v == nil {
			return nil
		}
		return v.SourceName
	}).(pulumi.StringPtrOutput)
}

type DomainMatchingAutoMergingConsolidation struct {
	// A list of matching criteria.
	MatchingAttributesLists [][]string `pulumi:"matchingAttributesLists"`
}

// DomainMatchingAutoMergingConsolidationInput is an input type that accepts DomainMatchingAutoMergingConsolidationArgs and DomainMatchingAutoMergingConsolidationOutput values.
// You can construct a concrete instance of `DomainMatchingAutoMergingConsolidationInput` via:
//
//	DomainMatchingAutoMergingConsolidationArgs{...}
type DomainMatchingAutoMergingConsolidationInput interface {
	pulumi.Input

	ToDomainMatchingAutoMergingConsolidationOutput() DomainMatchingAutoMergingConsolidationOutput
	ToDomainMatchingAutoMergingConsolidationOutputWithContext(context.Context) DomainMatchingAutoMergingConsolidationOutput
}

type DomainMatchingAutoMergingConsolidationArgs struct {
	// A list of matching criteria.
	MatchingAttributesLists pulumi.StringArrayArrayInput `pulumi:"matchingAttributesLists"`
}

func (DomainMatchingAutoMergingConsolidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMatchingAutoMergingConsolidation)(nil)).Elem()
}

func (i DomainMatchingAutoMergingConsolidationArgs) ToDomainMatchingAutoMergingConsolidationOutput() DomainMatchingAutoMergingConsolidationOutput {
	return i.ToDomainMatchingAutoMergingConsolidationOutputWithContext(context.Background())
}

func (i DomainMatchingAutoMergingConsolidationArgs) ToDomainMatchingAutoMergingConsolidationOutputWithContext(ctx context.Context) DomainMatchingAutoMergingConsolidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMatchingAutoMergingConsolidationOutput)
}

func (i DomainMatchingAutoMergingConsolidationArgs) ToDomainMatchingAutoMergingConsolidationPtrOutput() DomainMatchingAutoMergingConsolidationPtrOutput {
	return i.ToDomainMatchingAutoMergingConsolidationPtrOutputWithContext(context.Background())
}

func (i DomainMatchingAutoMergingConsolidationArgs) ToDomainMatchingAutoMergingConsolidationPtrOutputWithContext(ctx context.Context) DomainMatchingAutoMergingConsolidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMatchingAutoMergingConsolidationOutput).ToDomainMatchingAutoMergingConsolidationPtrOutputWithContext(ctx)
}

// DomainMatchingAutoMergingConsolidationPtrInput is an input type that accepts DomainMatchingAutoMergingConsolidationArgs, DomainMatchingAutoMergingConsolidationPtr and DomainMatchingAutoMergingConsolidationPtrOutput values.
// You can construct a concrete instance of `DomainMatchingAutoMergingConsolidationPtrInput` via:
//
//	        DomainMatchingAutoMergingConsolidationArgs{...}
//
//	or:
//
//	        nil
type DomainMatchingAutoMergingConsolidationPtrInput interface {
	pulumi.Input

	ToDomainMatchingAutoMergingConsolidationPtrOutput() DomainMatchingAutoMergingConsolidationPtrOutput
	ToDomainMatchingAutoMergingConsolidationPtrOutputWithContext(context.Context) DomainMatchingAutoMergingConsolidationPtrOutput
}

type domainMatchingAutoMergingConsolidationPtrType DomainMatchingAutoMergingConsolidationArgs

func DomainMatchingAutoMergingConsolidationPtr(v *DomainMatchingAutoMergingConsolidationArgs) DomainMatchingAutoMergingConsolidationPtrInput {
	return (*domainMatchingAutoMergingConsolidationPtrType)(v)
}

func (*domainMatchingAutoMergingConsolidationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMatchingAutoMergingConsolidation)(nil)).Elem()
}

func (i *domainMatchingAutoMergingConsolidationPtrType) ToDomainMatchingAutoMergingConsolidationPtrOutput() DomainMatchingAutoMergingConsolidationPtrOutput {
	return i.ToDomainMatchingAutoMergingConsolidationPtrOutputWithContext(context.Background())
}

func (i *domainMatchingAutoMergingConsolidationPtrType) ToDomainMatchingAutoMergingConsolidationPtrOutputWithContext(ctx context.Context) DomainMatchingAutoMergingConsolidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMatchingAutoMergingConsolidationPtrOutput)
}

type DomainMatchingAutoMergingConsolidationOutput struct{ *pulumi.OutputState }

func (DomainMatchingAutoMergingConsolidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMatchingAutoMergingConsolidation)(nil)).Elem()
}

func (o DomainMatchingAutoMergingConsolidationOutput) ToDomainMatchingAutoMergingConsolidationOutput() DomainMatchingAutoMergingConsolidationOutput {
	return o
}

func (o DomainMatchingAutoMergingConsolidationOutput) ToDomainMatchingAutoMergingConsolidationOutputWithContext(ctx context.Context) DomainMatchingAutoMergingConsolidationOutput {
	return o
}

func (o DomainMatchingAutoMergingConsolidationOutput) ToDomainMatchingAutoMergingConsolidationPtrOutput() DomainMatchingAutoMergingConsolidationPtrOutput {
	return o.ToDomainMatchingAutoMergingConsolidationPtrOutputWithContext(context.Background())
}

func (o DomainMatchingAutoMergingConsolidationOutput) ToDomainMatchingAutoMergingConsolidationPtrOutputWithContext(ctx context.Context) DomainMatchingAutoMergingConsolidationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainMatchingAutoMergingConsolidation) *DomainMatchingAutoMergingConsolidation {
		return &v
	}).(DomainMatchingAutoMergingConsolidationPtrOutput)
}

// A list of matching criteria.
func (o DomainMatchingAutoMergingConsolidationOutput) MatchingAttributesLists() pulumi.StringArrayArrayOutput {
	return o.ApplyT(func(v DomainMatchingAutoMergingConsolidation) [][]string { return v.MatchingAttributesLists }).(pulumi.StringArrayArrayOutput)
}

type DomainMatchingAutoMergingConsolidationPtrOutput struct{ *pulumi.OutputState }

func (DomainMatchingAutoMergingConsolidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMatchingAutoMergingConsolidation)(nil)).Elem()
}

func (o DomainMatchingAutoMergingConsolidationPtrOutput) ToDomainMatchingAutoMergingConsolidationPtrOutput() DomainMatchingAutoMergingConsolidationPtrOutput {
	return o
}

func (o DomainMatchingAutoMergingConsolidationPtrOutput) ToDomainMatchingAutoMergingConsolidationPtrOutputWithContext(ctx context.Context) DomainMatchingAutoMergingConsolidationPtrOutput {
	return o
}

func (o DomainMatchingAutoMergingConsolidationPtrOutput) Elem() DomainMatchingAutoMergingConsolidationOutput {
	return o.ApplyT(func(v *DomainMatchingAutoMergingConsolidation) DomainMatchingAutoMergingConsolidation {
		if v != nil {
			return *v
		}
		var ret DomainMatchingAutoMergingConsolidation
		return ret
	}).(DomainMatchingAutoMergingConsolidationOutput)
}

// A list of matching criteria.
func (o DomainMatchingAutoMergingConsolidationPtrOutput) MatchingAttributesLists() pulumi.StringArrayArrayOutput {
	return o.ApplyT(func(v *DomainMatchingAutoMergingConsolidation) [][]string {
		if v == nil {
			return nil
		}
		return v.MatchingAttributesLists
	}).(pulumi.StringArrayArrayOutput)
}

type DomainMatchingExportingConfig struct {
	S3Exporting *DomainMatchingExportingConfigS3Exporting `pulumi:"s3Exporting"`
}

// DomainMatchingExportingConfigInput is an input type that accepts DomainMatchingExportingConfigArgs and DomainMatchingExportingConfigOutput values.
// You can construct a concrete instance of `DomainMatchingExportingConfigInput` via:
//
//	DomainMatchingExportingConfigArgs{...}
type DomainMatchingExportingConfigInput interface {
	pulumi.Input

	ToDomainMatchingExportingConfigOutput() DomainMatchingExportingConfigOutput
	ToDomainMatchingExportingConfigOutputWithContext(context.Context) DomainMatchingExportingConfigOutput
}

type DomainMatchingExportingConfigArgs struct {
	S3Exporting DomainMatchingExportingConfigS3ExportingPtrInput `pulumi:"s3Exporting"`
}

func (DomainMatchingExportingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMatchingExportingConfig)(nil)).Elem()
}

func (i DomainMatchingExportingConfigArgs) ToDomainMatchingExportingConfigOutput() DomainMatchingExportingConfigOutput {
	return i.ToDomainMatchingExportingConfigOutputWithContext(context.Background())
}

func (i DomainMatchingExportingConfigArgs) ToDomainMatchingExportingConfigOutputWithContext(ctx context.Context) DomainMatchingExportingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMatchingExportingConfigOutput)
}

func (i DomainMatchingExportingConfigArgs) ToDomainMatchingExportingConfigPtrOutput() DomainMatchingExportingConfigPtrOutput {
	return i.ToDomainMatchingExportingConfigPtrOutputWithContext(context.Background())
}

func (i DomainMatchingExportingConfigArgs) ToDomainMatchingExportingConfigPtrOutputWithContext(ctx context.Context) DomainMatchingExportingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMatchingExportingConfigOutput).ToDomainMatchingExportingConfigPtrOutputWithContext(ctx)
}

// DomainMatchingExportingConfigPtrInput is an input type that accepts DomainMatchingExportingConfigArgs, DomainMatchingExportingConfigPtr and DomainMatchingExportingConfigPtrOutput values.
// You can construct a concrete instance of `DomainMatchingExportingConfigPtrInput` via:
//
//	        DomainMatchingExportingConfigArgs{...}
//
//	or:
//
//	        nil
type DomainMatchingExportingConfigPtrInput interface {
	pulumi.Input

	ToDomainMatchingExportingConfigPtrOutput() DomainMatchingExportingConfigPtrOutput
	ToDomainMatchingExportingConfigPtrOutputWithContext(context.Context) DomainMatchingExportingConfigPtrOutput
}

type domainMatchingExportingConfigPtrType DomainMatchingExportingConfigArgs

func DomainMatchingExportingConfigPtr(v *DomainMatchingExportingConfigArgs) DomainMatchingExportingConfigPtrInput {
	return (*domainMatchingExportingConfigPtrType)(v)
}

func (*domainMatchingExportingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMatchingExportingConfig)(nil)).Elem()
}

func (i *domainMatchingExportingConfigPtrType) ToDomainMatchingExportingConfigPtrOutput() DomainMatchingExportingConfigPtrOutput {
	return i.ToDomainMatchingExportingConfigPtrOutputWithContext(context.Background())
}

func (i *domainMatchingExportingConfigPtrType) ToDomainMatchingExportingConfigPtrOutputWithContext(ctx context.Context) DomainMatchingExportingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMatchingExportingConfigPtrOutput)
}

type DomainMatchingExportingConfigOutput struct{ *pulumi.OutputState }

func (DomainMatchingExportingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMatchingExportingConfig)(nil)).Elem()
}

func (o DomainMatchingExportingConfigOutput) ToDomainMatchingExportingConfigOutput() DomainMatchingExportingConfigOutput {
	return o
}

func (o DomainMatchingExportingConfigOutput) ToDomainMatchingExportingConfigOutputWithContext(ctx context.Context) DomainMatchingExportingConfigOutput {
	return o
}

func (o DomainMatchingExportingConfigOutput) ToDomainMatchingExportingConfigPtrOutput() DomainMatchingExportingConfigPtrOutput {
	return o.ToDomainMatchingExportingConfigPtrOutputWithContext(context.Background())
}

func (o DomainMatchingExportingConfigOutput) ToDomainMatchingExportingConfigPtrOutputWithContext(ctx context.Context) DomainMatchingExportingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainMatchingExportingConfig) *DomainMatchingExportingConfig {
		return &v
	}).(DomainMatchingExportingConfigPtrOutput)
}

func (o DomainMatchingExportingConfigOutput) S3Exporting() DomainMatchingExportingConfigS3ExportingPtrOutput {
	return o.ApplyT(func(v DomainMatchingExportingConfig) *DomainMatchingExportingConfigS3Exporting { return v.S3Exporting }).(DomainMatchingExportingConfigS3ExportingPtrOutput)
}

type DomainMatchingExportingConfigPtrOutput struct{ *pulumi.OutputState }

func (DomainMatchingExportingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMatchingExportingConfig)(nil)).Elem()
}

func (o DomainMatchingExportingConfigPtrOutput) ToDomainMatchingExportingConfigPtrOutput() DomainMatchingExportingConfigPtrOutput {
	return o
}

func (o DomainMatchingExportingConfigPtrOutput) ToDomainMatchingExportingConfigPtrOutputWithContext(ctx context.Context) DomainMatchingExportingConfigPtrOutput {
	return o
}

func (o DomainMatchingExportingConfigPtrOutput) Elem() DomainMatchingExportingConfigOutput {
	return o.ApplyT(func(v *DomainMatchingExportingConfig) DomainMatchingExportingConfig {
		if v != nil {
			return *v
		}
		var ret DomainMatchingExportingConfig
		return ret
	}).(DomainMatchingExportingConfigOutput)
}

func (o DomainMatchingExportingConfigPtrOutput) S3Exporting() DomainMatchingExportingConfigS3ExportingPtrOutput {
	return o.ApplyT(func(v *DomainMatchingExportingConfig) *DomainMatchingExportingConfigS3Exporting {
		if v == nil {
			return nil
		}
		return v.S3Exporting
	}).(DomainMatchingExportingConfigS3ExportingPtrOutput)
}

type DomainMatchingExportingConfigS3Exporting struct {
	// The name of the S3 bucket where Identity Resolution Jobs write result files.
	S3BucketName string `pulumi:"s3BucketName"`
	// The S3 key name of the location where Identity Resolution Jobs write result files.
	S3KeyName *string `pulumi:"s3KeyName"`
}

// DomainMatchingExportingConfigS3ExportingInput is an input type that accepts DomainMatchingExportingConfigS3ExportingArgs and DomainMatchingExportingConfigS3ExportingOutput values.
// You can construct a concrete instance of `DomainMatchingExportingConfigS3ExportingInput` via:
//
//	DomainMatchingExportingConfigS3ExportingArgs{...}
type DomainMatchingExportingConfigS3ExportingInput interface {
	pulumi.Input

	ToDomainMatchingExportingConfigS3ExportingOutput() DomainMatchingExportingConfigS3ExportingOutput
	ToDomainMatchingExportingConfigS3ExportingOutputWithContext(context.Context) DomainMatchingExportingConfigS3ExportingOutput
}

type DomainMatchingExportingConfigS3ExportingArgs struct {
	// The name of the S3 bucket where Identity Resolution Jobs write result files.
	S3BucketName pulumi.StringInput `pulumi:"s3BucketName"`
	// The S3 key name of the location where Identity Resolution Jobs write result files.
	S3KeyName pulumi.StringPtrInput `pulumi:"s3KeyName"`
}

func (DomainMatchingExportingConfigS3ExportingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMatchingExportingConfigS3Exporting)(nil)).Elem()
}

func (i DomainMatchingExportingConfigS3ExportingArgs) ToDomainMatchingExportingConfigS3ExportingOutput() DomainMatchingExportingConfigS3ExportingOutput {
	return i.ToDomainMatchingExportingConfigS3ExportingOutputWithContext(context.Background())
}

func (i DomainMatchingExportingConfigS3ExportingArgs) ToDomainMatchingExportingConfigS3ExportingOutputWithContext(ctx context.Context) DomainMatchingExportingConfigS3ExportingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMatchingExportingConfigS3ExportingOutput)
}

func (i DomainMatchingExportingConfigS3ExportingArgs) ToDomainMatchingExportingConfigS3ExportingPtrOutput() DomainMatchingExportingConfigS3ExportingPtrOutput {
	return i.ToDomainMatchingExportingConfigS3ExportingPtrOutputWithContext(context.Background())
}

func (i DomainMatchingExportingConfigS3ExportingArgs) ToDomainMatchingExportingConfigS3ExportingPtrOutputWithContext(ctx context.Context) DomainMatchingExportingConfigS3ExportingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMatchingExportingConfigS3ExportingOutput).ToDomainMatchingExportingConfigS3ExportingPtrOutputWithContext(ctx)
}

// DomainMatchingExportingConfigS3ExportingPtrInput is an input type that accepts DomainMatchingExportingConfigS3ExportingArgs, DomainMatchingExportingConfigS3ExportingPtr and DomainMatchingExportingConfigS3ExportingPtrOutput values.
// You can construct a concrete instance of `DomainMatchingExportingConfigS3ExportingPtrInput` via:
//
//	        DomainMatchingExportingConfigS3ExportingArgs{...}
//
//	or:
//
//	        nil
type DomainMatchingExportingConfigS3ExportingPtrInput interface {
	pulumi.Input

	ToDomainMatchingExportingConfigS3ExportingPtrOutput() DomainMatchingExportingConfigS3ExportingPtrOutput
	ToDomainMatchingExportingConfigS3ExportingPtrOutputWithContext(context.Context) DomainMatchingExportingConfigS3ExportingPtrOutput
}

type domainMatchingExportingConfigS3ExportingPtrType DomainMatchingExportingConfigS3ExportingArgs

func DomainMatchingExportingConfigS3ExportingPtr(v *DomainMatchingExportingConfigS3ExportingArgs) DomainMatchingExportingConfigS3ExportingPtrInput {
	return (*domainMatchingExportingConfigS3ExportingPtrType)(v)
}

func (*domainMatchingExportingConfigS3ExportingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMatchingExportingConfigS3Exporting)(nil)).Elem()
}

func (i *domainMatchingExportingConfigS3ExportingPtrType) ToDomainMatchingExportingConfigS3ExportingPtrOutput() DomainMatchingExportingConfigS3ExportingPtrOutput {
	return i.ToDomainMatchingExportingConfigS3ExportingPtrOutputWithContext(context.Background())
}

func (i *domainMatchingExportingConfigS3ExportingPtrType) ToDomainMatchingExportingConfigS3ExportingPtrOutputWithContext(ctx context.Context) DomainMatchingExportingConfigS3ExportingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMatchingExportingConfigS3ExportingPtrOutput)
}

type DomainMatchingExportingConfigS3ExportingOutput struct{ *pulumi.OutputState }

func (DomainMatchingExportingConfigS3ExportingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMatchingExportingConfigS3Exporting)(nil)).Elem()
}

func (o DomainMatchingExportingConfigS3ExportingOutput) ToDomainMatchingExportingConfigS3ExportingOutput() DomainMatchingExportingConfigS3ExportingOutput {
	return o
}

func (o DomainMatchingExportingConfigS3ExportingOutput) ToDomainMatchingExportingConfigS3ExportingOutputWithContext(ctx context.Context) DomainMatchingExportingConfigS3ExportingOutput {
	return o
}

func (o DomainMatchingExportingConfigS3ExportingOutput) ToDomainMatchingExportingConfigS3ExportingPtrOutput() DomainMatchingExportingConfigS3ExportingPtrOutput {
	return o.ToDomainMatchingExportingConfigS3ExportingPtrOutputWithContext(context.Background())
}

func (o DomainMatchingExportingConfigS3ExportingOutput) ToDomainMatchingExportingConfigS3ExportingPtrOutputWithContext(ctx context.Context) DomainMatchingExportingConfigS3ExportingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainMatchingExportingConfigS3Exporting) *DomainMatchingExportingConfigS3Exporting {
		return &v
	}).(DomainMatchingExportingConfigS3ExportingPtrOutput)
}

// The name of the S3 bucket where Identity Resolution Jobs write result files.
func (o DomainMatchingExportingConfigS3ExportingOutput) S3BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v DomainMatchingExportingConfigS3Exporting) string { return v.S3BucketName }).(pulumi.StringOutput)
}

// The S3 key name of the location where Identity Resolution Jobs write result files.
func (o DomainMatchingExportingConfigS3ExportingOutput) S3KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainMatchingExportingConfigS3Exporting) *string { return v.S3KeyName }).(pulumi.StringPtrOutput)
}

type DomainMatchingExportingConfigS3ExportingPtrOutput struct{ *pulumi.OutputState }

func (DomainMatchingExportingConfigS3ExportingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMatchingExportingConfigS3Exporting)(nil)).Elem()
}

func (o DomainMatchingExportingConfigS3ExportingPtrOutput) ToDomainMatchingExportingConfigS3ExportingPtrOutput() DomainMatchingExportingConfigS3ExportingPtrOutput {
	return o
}

func (o DomainMatchingExportingConfigS3ExportingPtrOutput) ToDomainMatchingExportingConfigS3ExportingPtrOutputWithContext(ctx context.Context) DomainMatchingExportingConfigS3ExportingPtrOutput {
	return o
}

func (o DomainMatchingExportingConfigS3ExportingPtrOutput) Elem() DomainMatchingExportingConfigS3ExportingOutput {
	return o.ApplyT(func(v *DomainMatchingExportingConfigS3Exporting) DomainMatchingExportingConfigS3Exporting {
		if v != nil {
			return *v
		}
		var ret DomainMatchingExportingConfigS3Exporting
		return ret
	}).(DomainMatchingExportingConfigS3ExportingOutput)
}

// The name of the S3 bucket where Identity Resolution Jobs write result files.
func (o DomainMatchingExportingConfigS3ExportingPtrOutput) S3BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainMatchingExportingConfigS3Exporting) *string {
		if v == nil {
			return nil
		}
		return &v.S3BucketName
	}).(pulumi.StringPtrOutput)
}

// The S3 key name of the location where Identity Resolution Jobs write result files.
func (o DomainMatchingExportingConfigS3ExportingPtrOutput) S3KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainMatchingExportingConfigS3Exporting) *string {
		if v == nil {
			return nil
		}
		return v.S3KeyName
	}).(pulumi.StringPtrOutput)
}

type DomainMatchingJobSchedule struct {
	// The day when the Identity Resolution Job should run every week.
	DayOfTheWeek string `pulumi:"dayOfTheWeek"`
	// The time when the Identity Resolution Job should run every week.
	Time string `pulumi:"time"`
}

// DomainMatchingJobScheduleInput is an input type that accepts DomainMatchingJobScheduleArgs and DomainMatchingJobScheduleOutput values.
// You can construct a concrete instance of `DomainMatchingJobScheduleInput` via:
//
//	DomainMatchingJobScheduleArgs{...}
type DomainMatchingJobScheduleInput interface {
	pulumi.Input

	ToDomainMatchingJobScheduleOutput() DomainMatchingJobScheduleOutput
	ToDomainMatchingJobScheduleOutputWithContext(context.Context) DomainMatchingJobScheduleOutput
}

type DomainMatchingJobScheduleArgs struct {
	// The day when the Identity Resolution Job should run every week.
	DayOfTheWeek pulumi.StringInput `pulumi:"dayOfTheWeek"`
	// The time when the Identity Resolution Job should run every week.
	Time pulumi.StringInput `pulumi:"time"`
}

func (DomainMatchingJobScheduleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMatchingJobSchedule)(nil)).Elem()
}

func (i DomainMatchingJobScheduleArgs) ToDomainMatchingJobScheduleOutput() DomainMatchingJobScheduleOutput {
	return i.ToDomainMatchingJobScheduleOutputWithContext(context.Background())
}

func (i DomainMatchingJobScheduleArgs) ToDomainMatchingJobScheduleOutputWithContext(ctx context.Context) DomainMatchingJobScheduleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMatchingJobScheduleOutput)
}

func (i DomainMatchingJobScheduleArgs) ToDomainMatchingJobSchedulePtrOutput() DomainMatchingJobSchedulePtrOutput {
	return i.ToDomainMatchingJobSchedulePtrOutputWithContext(context.Background())
}

func (i DomainMatchingJobScheduleArgs) ToDomainMatchingJobSchedulePtrOutputWithContext(ctx context.Context) DomainMatchingJobSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMatchingJobScheduleOutput).ToDomainMatchingJobSchedulePtrOutputWithContext(ctx)
}

// DomainMatchingJobSchedulePtrInput is an input type that accepts DomainMatchingJobScheduleArgs, DomainMatchingJobSchedulePtr and DomainMatchingJobSchedulePtrOutput values.
// You can construct a concrete instance of `DomainMatchingJobSchedulePtrInput` via:
//
//	        DomainMatchingJobScheduleArgs{...}
//
//	or:
//
//	        nil
type DomainMatchingJobSchedulePtrInput interface {
	pulumi.Input

	ToDomainMatchingJobSchedulePtrOutput() DomainMatchingJobSchedulePtrOutput
	ToDomainMatchingJobSchedulePtrOutputWithContext(context.Context) DomainMatchingJobSchedulePtrOutput
}

type domainMatchingJobSchedulePtrType DomainMatchingJobScheduleArgs

func DomainMatchingJobSchedulePtr(v *DomainMatchingJobScheduleArgs) DomainMatchingJobSchedulePtrInput {
	return (*domainMatchingJobSchedulePtrType)(v)
}

func (*domainMatchingJobSchedulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMatchingJobSchedule)(nil)).Elem()
}

func (i *domainMatchingJobSchedulePtrType) ToDomainMatchingJobSchedulePtrOutput() DomainMatchingJobSchedulePtrOutput {
	return i.ToDomainMatchingJobSchedulePtrOutputWithContext(context.Background())
}

func (i *domainMatchingJobSchedulePtrType) ToDomainMatchingJobSchedulePtrOutputWithContext(ctx context.Context) DomainMatchingJobSchedulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMatchingJobSchedulePtrOutput)
}

type DomainMatchingJobScheduleOutput struct{ *pulumi.OutputState }

func (DomainMatchingJobScheduleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainMatchingJobSchedule)(nil)).Elem()
}

func (o DomainMatchingJobScheduleOutput) ToDomainMatchingJobScheduleOutput() DomainMatchingJobScheduleOutput {
	return o
}

func (o DomainMatchingJobScheduleOutput) ToDomainMatchingJobScheduleOutputWithContext(ctx context.Context) DomainMatchingJobScheduleOutput {
	return o
}

func (o DomainMatchingJobScheduleOutput) ToDomainMatchingJobSchedulePtrOutput() DomainMatchingJobSchedulePtrOutput {
	return o.ToDomainMatchingJobSchedulePtrOutputWithContext(context.Background())
}

func (o DomainMatchingJobScheduleOutput) ToDomainMatchingJobSchedulePtrOutputWithContext(ctx context.Context) DomainMatchingJobSchedulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainMatchingJobSchedule) *DomainMatchingJobSchedule {
		return &v
	}).(DomainMatchingJobSchedulePtrOutput)
}

// The day when the Identity Resolution Job should run every week.
func (o DomainMatchingJobScheduleOutput) DayOfTheWeek() pulumi.StringOutput {
	return o.ApplyT(func(v DomainMatchingJobSchedule) string { return v.DayOfTheWeek }).(pulumi.StringOutput)
}

// The time when the Identity Resolution Job should run every week.
func (o DomainMatchingJobScheduleOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v DomainMatchingJobSchedule) string { return v.Time }).(pulumi.StringOutput)
}

type DomainMatchingJobSchedulePtrOutput struct{ *pulumi.OutputState }

func (DomainMatchingJobSchedulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainMatchingJobSchedule)(nil)).Elem()
}

func (o DomainMatchingJobSchedulePtrOutput) ToDomainMatchingJobSchedulePtrOutput() DomainMatchingJobSchedulePtrOutput {
	return o
}

func (o DomainMatchingJobSchedulePtrOutput) ToDomainMatchingJobSchedulePtrOutputWithContext(ctx context.Context) DomainMatchingJobSchedulePtrOutput {
	return o
}

func (o DomainMatchingJobSchedulePtrOutput) Elem() DomainMatchingJobScheduleOutput {
	return o.ApplyT(func(v *DomainMatchingJobSchedule) DomainMatchingJobSchedule {
		if v != nil {
			return *v
		}
		var ret DomainMatchingJobSchedule
		return ret
	}).(DomainMatchingJobScheduleOutput)
}

// The day when the Identity Resolution Job should run every week.
func (o DomainMatchingJobSchedulePtrOutput) DayOfTheWeek() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainMatchingJobSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.DayOfTheWeek
	}).(pulumi.StringPtrOutput)
}

// The time when the Identity Resolution Job should run every week.
func (o DomainMatchingJobSchedulePtrOutput) Time() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainMatchingJobSchedule) *string {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(pulumi.StringPtrOutput)
}

type DomainRuleBasedMatching struct {
	// A block that configures information about the `AttributeTypesSelector` where the rule-based identity resolution uses to match profiles. Documented below.
	AttributeTypesSelector *DomainRuleBasedMatchingAttributeTypesSelector `pulumi:"attributeTypesSelector"`
	// A block that specifies how the auto-merging process should resolve conflicts between different profiles. Documented below.
	ConflictResolution *DomainRuleBasedMatchingConflictResolution `pulumi:"conflictResolution"`
	// The flag that enables the rule-based matching process of duplicate profiles.
	Enabled bool `pulumi:"enabled"`
	// A block that specifies the configuration for exporting Identity Resolution results. Documented below.
	ExportingConfig *DomainRuleBasedMatchingExportingConfig `pulumi:"exportingConfig"`
	// A block that configures how the rule-based matching process should match profiles. You can have up to 15 `rule` in the `natchingRules`. Documented below.
	MatchingRules []DomainRuleBasedMatchingMatchingRule `pulumi:"matchingRules"`
	// Indicates the maximum allowed rule level for matching.
	MaxAllowedRuleLevelForMatching *int `pulumi:"maxAllowedRuleLevelForMatching"`
	// Indicates the maximum allowed rule level for merging.
	MaxAllowedRuleLevelForMerging *int    `pulumi:"maxAllowedRuleLevelForMerging"`
	Status                        *string `pulumi:"status"`
}

// DomainRuleBasedMatchingInput is an input type that accepts DomainRuleBasedMatchingArgs and DomainRuleBasedMatchingOutput values.
// You can construct a concrete instance of `DomainRuleBasedMatchingInput` via:
//
//	DomainRuleBasedMatchingArgs{...}
type DomainRuleBasedMatchingInput interface {
	pulumi.Input

	ToDomainRuleBasedMatchingOutput() DomainRuleBasedMatchingOutput
	ToDomainRuleBasedMatchingOutputWithContext(context.Context) DomainRuleBasedMatchingOutput
}

type DomainRuleBasedMatchingArgs struct {
	// A block that configures information about the `AttributeTypesSelector` where the rule-based identity resolution uses to match profiles. Documented below.
	AttributeTypesSelector DomainRuleBasedMatchingAttributeTypesSelectorPtrInput `pulumi:"attributeTypesSelector"`
	// A block that specifies how the auto-merging process should resolve conflicts between different profiles. Documented below.
	ConflictResolution DomainRuleBasedMatchingConflictResolutionPtrInput `pulumi:"conflictResolution"`
	// The flag that enables the rule-based matching process of duplicate profiles.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// A block that specifies the configuration for exporting Identity Resolution results. Documented below.
	ExportingConfig DomainRuleBasedMatchingExportingConfigPtrInput `pulumi:"exportingConfig"`
	// A block that configures how the rule-based matching process should match profiles. You can have up to 15 `rule` in the `natchingRules`. Documented below.
	MatchingRules DomainRuleBasedMatchingMatchingRuleArrayInput `pulumi:"matchingRules"`
	// Indicates the maximum allowed rule level for matching.
	MaxAllowedRuleLevelForMatching pulumi.IntPtrInput `pulumi:"maxAllowedRuleLevelForMatching"`
	// Indicates the maximum allowed rule level for merging.
	MaxAllowedRuleLevelForMerging pulumi.IntPtrInput    `pulumi:"maxAllowedRuleLevelForMerging"`
	Status                        pulumi.StringPtrInput `pulumi:"status"`
}

func (DomainRuleBasedMatchingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRuleBasedMatching)(nil)).Elem()
}

func (i DomainRuleBasedMatchingArgs) ToDomainRuleBasedMatchingOutput() DomainRuleBasedMatchingOutput {
	return i.ToDomainRuleBasedMatchingOutputWithContext(context.Background())
}

func (i DomainRuleBasedMatchingArgs) ToDomainRuleBasedMatchingOutputWithContext(ctx context.Context) DomainRuleBasedMatchingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRuleBasedMatchingOutput)
}

func (i DomainRuleBasedMatchingArgs) ToDomainRuleBasedMatchingPtrOutput() DomainRuleBasedMatchingPtrOutput {
	return i.ToDomainRuleBasedMatchingPtrOutputWithContext(context.Background())
}

func (i DomainRuleBasedMatchingArgs) ToDomainRuleBasedMatchingPtrOutputWithContext(ctx context.Context) DomainRuleBasedMatchingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRuleBasedMatchingOutput).ToDomainRuleBasedMatchingPtrOutputWithContext(ctx)
}

// DomainRuleBasedMatchingPtrInput is an input type that accepts DomainRuleBasedMatchingArgs, DomainRuleBasedMatchingPtr and DomainRuleBasedMatchingPtrOutput values.
// You can construct a concrete instance of `DomainRuleBasedMatchingPtrInput` via:
//
//	        DomainRuleBasedMatchingArgs{...}
//
//	or:
//
//	        nil
type DomainRuleBasedMatchingPtrInput interface {
	pulumi.Input

	ToDomainRuleBasedMatchingPtrOutput() DomainRuleBasedMatchingPtrOutput
	ToDomainRuleBasedMatchingPtrOutputWithContext(context.Context) DomainRuleBasedMatchingPtrOutput
}

type domainRuleBasedMatchingPtrType DomainRuleBasedMatchingArgs

func DomainRuleBasedMatchingPtr(v *DomainRuleBasedMatchingArgs) DomainRuleBasedMatchingPtrInput {
	return (*domainRuleBasedMatchingPtrType)(v)
}

func (*domainRuleBasedMatchingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRuleBasedMatching)(nil)).Elem()
}

func (i *domainRuleBasedMatchingPtrType) ToDomainRuleBasedMatchingPtrOutput() DomainRuleBasedMatchingPtrOutput {
	return i.ToDomainRuleBasedMatchingPtrOutputWithContext(context.Background())
}

func (i *domainRuleBasedMatchingPtrType) ToDomainRuleBasedMatchingPtrOutputWithContext(ctx context.Context) DomainRuleBasedMatchingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRuleBasedMatchingPtrOutput)
}

type DomainRuleBasedMatchingOutput struct{ *pulumi.OutputState }

func (DomainRuleBasedMatchingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRuleBasedMatching)(nil)).Elem()
}

func (o DomainRuleBasedMatchingOutput) ToDomainRuleBasedMatchingOutput() DomainRuleBasedMatchingOutput {
	return o
}

func (o DomainRuleBasedMatchingOutput) ToDomainRuleBasedMatchingOutputWithContext(ctx context.Context) DomainRuleBasedMatchingOutput {
	return o
}

func (o DomainRuleBasedMatchingOutput) ToDomainRuleBasedMatchingPtrOutput() DomainRuleBasedMatchingPtrOutput {
	return o.ToDomainRuleBasedMatchingPtrOutputWithContext(context.Background())
}

func (o DomainRuleBasedMatchingOutput) ToDomainRuleBasedMatchingPtrOutputWithContext(ctx context.Context) DomainRuleBasedMatchingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainRuleBasedMatching) *DomainRuleBasedMatching {
		return &v
	}).(DomainRuleBasedMatchingPtrOutput)
}

// A block that configures information about the `AttributeTypesSelector` where the rule-based identity resolution uses to match profiles. Documented below.
func (o DomainRuleBasedMatchingOutput) AttributeTypesSelector() DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput {
	return o.ApplyT(func(v DomainRuleBasedMatching) *DomainRuleBasedMatchingAttributeTypesSelector {
		return v.AttributeTypesSelector
	}).(DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput)
}

// A block that specifies how the auto-merging process should resolve conflicts between different profiles. Documented below.
func (o DomainRuleBasedMatchingOutput) ConflictResolution() DomainRuleBasedMatchingConflictResolutionPtrOutput {
	return o.ApplyT(func(v DomainRuleBasedMatching) *DomainRuleBasedMatchingConflictResolution {
		return v.ConflictResolution
	}).(DomainRuleBasedMatchingConflictResolutionPtrOutput)
}

// The flag that enables the rule-based matching process of duplicate profiles.
func (o DomainRuleBasedMatchingOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v DomainRuleBasedMatching) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// A block that specifies the configuration for exporting Identity Resolution results. Documented below.
func (o DomainRuleBasedMatchingOutput) ExportingConfig() DomainRuleBasedMatchingExportingConfigPtrOutput {
	return o.ApplyT(func(v DomainRuleBasedMatching) *DomainRuleBasedMatchingExportingConfig { return v.ExportingConfig }).(DomainRuleBasedMatchingExportingConfigPtrOutput)
}

// A block that configures how the rule-based matching process should match profiles. You can have up to 15 `rule` in the `natchingRules`. Documented below.
func (o DomainRuleBasedMatchingOutput) MatchingRules() DomainRuleBasedMatchingMatchingRuleArrayOutput {
	return o.ApplyT(func(v DomainRuleBasedMatching) []DomainRuleBasedMatchingMatchingRule { return v.MatchingRules }).(DomainRuleBasedMatchingMatchingRuleArrayOutput)
}

// Indicates the maximum allowed rule level for matching.
func (o DomainRuleBasedMatchingOutput) MaxAllowedRuleLevelForMatching() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainRuleBasedMatching) *int { return v.MaxAllowedRuleLevelForMatching }).(pulumi.IntPtrOutput)
}

// Indicates the maximum allowed rule level for merging.
func (o DomainRuleBasedMatchingOutput) MaxAllowedRuleLevelForMerging() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DomainRuleBasedMatching) *int { return v.MaxAllowedRuleLevelForMerging }).(pulumi.IntPtrOutput)
}

func (o DomainRuleBasedMatchingOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainRuleBasedMatching) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type DomainRuleBasedMatchingPtrOutput struct{ *pulumi.OutputState }

func (DomainRuleBasedMatchingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRuleBasedMatching)(nil)).Elem()
}

func (o DomainRuleBasedMatchingPtrOutput) ToDomainRuleBasedMatchingPtrOutput() DomainRuleBasedMatchingPtrOutput {
	return o
}

func (o DomainRuleBasedMatchingPtrOutput) ToDomainRuleBasedMatchingPtrOutputWithContext(ctx context.Context) DomainRuleBasedMatchingPtrOutput {
	return o
}

func (o DomainRuleBasedMatchingPtrOutput) Elem() DomainRuleBasedMatchingOutput {
	return o.ApplyT(func(v *DomainRuleBasedMatching) DomainRuleBasedMatching {
		if v != nil {
			return *v
		}
		var ret DomainRuleBasedMatching
		return ret
	}).(DomainRuleBasedMatchingOutput)
}

// A block that configures information about the `AttributeTypesSelector` where the rule-based identity resolution uses to match profiles. Documented below.
func (o DomainRuleBasedMatchingPtrOutput) AttributeTypesSelector() DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput {
	return o.ApplyT(func(v *DomainRuleBasedMatching) *DomainRuleBasedMatchingAttributeTypesSelector {
		if v == nil {
			return nil
		}
		return v.AttributeTypesSelector
	}).(DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput)
}

// A block that specifies how the auto-merging process should resolve conflicts between different profiles. Documented below.
func (o DomainRuleBasedMatchingPtrOutput) ConflictResolution() DomainRuleBasedMatchingConflictResolutionPtrOutput {
	return o.ApplyT(func(v *DomainRuleBasedMatching) *DomainRuleBasedMatchingConflictResolution {
		if v == nil {
			return nil
		}
		return v.ConflictResolution
	}).(DomainRuleBasedMatchingConflictResolutionPtrOutput)
}

// The flag that enables the rule-based matching process of duplicate profiles.
func (o DomainRuleBasedMatchingPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DomainRuleBasedMatching) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// A block that specifies the configuration for exporting Identity Resolution results. Documented below.
func (o DomainRuleBasedMatchingPtrOutput) ExportingConfig() DomainRuleBasedMatchingExportingConfigPtrOutput {
	return o.ApplyT(func(v *DomainRuleBasedMatching) *DomainRuleBasedMatchingExportingConfig {
		if v == nil {
			return nil
		}
		return v.ExportingConfig
	}).(DomainRuleBasedMatchingExportingConfigPtrOutput)
}

// A block that configures how the rule-based matching process should match profiles. You can have up to 15 `rule` in the `natchingRules`. Documented below.
func (o DomainRuleBasedMatchingPtrOutput) MatchingRules() DomainRuleBasedMatchingMatchingRuleArrayOutput {
	return o.ApplyT(func(v *DomainRuleBasedMatching) []DomainRuleBasedMatchingMatchingRule {
		if v == nil {
			return nil
		}
		return v.MatchingRules
	}).(DomainRuleBasedMatchingMatchingRuleArrayOutput)
}

// Indicates the maximum allowed rule level for matching.
func (o DomainRuleBasedMatchingPtrOutput) MaxAllowedRuleLevelForMatching() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainRuleBasedMatching) *int {
		if v == nil {
			return nil
		}
		return v.MaxAllowedRuleLevelForMatching
	}).(pulumi.IntPtrOutput)
}

// Indicates the maximum allowed rule level for merging.
func (o DomainRuleBasedMatchingPtrOutput) MaxAllowedRuleLevelForMerging() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DomainRuleBasedMatching) *int {
		if v == nil {
			return nil
		}
		return v.MaxAllowedRuleLevelForMerging
	}).(pulumi.IntPtrOutput)
}

func (o DomainRuleBasedMatchingPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainRuleBasedMatching) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type DomainRuleBasedMatchingAttributeTypesSelector struct {
	// The `Address` type. You can choose from `Address`, `BusinessAddress`, `MaillingAddress`, and `ShippingAddress`.
	Addresses []string `pulumi:"addresses"`
	// Configures the `AttributeMatchingModel`, you can either choose `ONE_TO_ONE` or `MANY_TO_MANY`.
	AttributeMatchingModel string `pulumi:"attributeMatchingModel"`
	// The `Email` type. You can choose from `EmailAddress`, `BusinessEmailAddress` and `PersonalEmailAddress`.
	EmailAddresses []string `pulumi:"emailAddresses"`
	// The `PhoneNumber` type. You can choose from `PhoneNumber`, `HomePhoneNumber`, and `MobilePhoneNumber`.
	PhoneNumbers []string `pulumi:"phoneNumbers"`
}

// DomainRuleBasedMatchingAttributeTypesSelectorInput is an input type that accepts DomainRuleBasedMatchingAttributeTypesSelectorArgs and DomainRuleBasedMatchingAttributeTypesSelectorOutput values.
// You can construct a concrete instance of `DomainRuleBasedMatchingAttributeTypesSelectorInput` via:
//
//	DomainRuleBasedMatchingAttributeTypesSelectorArgs{...}
type DomainRuleBasedMatchingAttributeTypesSelectorInput interface {
	pulumi.Input

	ToDomainRuleBasedMatchingAttributeTypesSelectorOutput() DomainRuleBasedMatchingAttributeTypesSelectorOutput
	ToDomainRuleBasedMatchingAttributeTypesSelectorOutputWithContext(context.Context) DomainRuleBasedMatchingAttributeTypesSelectorOutput
}

type DomainRuleBasedMatchingAttributeTypesSelectorArgs struct {
	// The `Address` type. You can choose from `Address`, `BusinessAddress`, `MaillingAddress`, and `ShippingAddress`.
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
	// Configures the `AttributeMatchingModel`, you can either choose `ONE_TO_ONE` or `MANY_TO_MANY`.
	AttributeMatchingModel pulumi.StringInput `pulumi:"attributeMatchingModel"`
	// The `Email` type. You can choose from `EmailAddress`, `BusinessEmailAddress` and `PersonalEmailAddress`.
	EmailAddresses pulumi.StringArrayInput `pulumi:"emailAddresses"`
	// The `PhoneNumber` type. You can choose from `PhoneNumber`, `HomePhoneNumber`, and `MobilePhoneNumber`.
	PhoneNumbers pulumi.StringArrayInput `pulumi:"phoneNumbers"`
}

func (DomainRuleBasedMatchingAttributeTypesSelectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRuleBasedMatchingAttributeTypesSelector)(nil)).Elem()
}

func (i DomainRuleBasedMatchingAttributeTypesSelectorArgs) ToDomainRuleBasedMatchingAttributeTypesSelectorOutput() DomainRuleBasedMatchingAttributeTypesSelectorOutput {
	return i.ToDomainRuleBasedMatchingAttributeTypesSelectorOutputWithContext(context.Background())
}

func (i DomainRuleBasedMatchingAttributeTypesSelectorArgs) ToDomainRuleBasedMatchingAttributeTypesSelectorOutputWithContext(ctx context.Context) DomainRuleBasedMatchingAttributeTypesSelectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRuleBasedMatchingAttributeTypesSelectorOutput)
}

func (i DomainRuleBasedMatchingAttributeTypesSelectorArgs) ToDomainRuleBasedMatchingAttributeTypesSelectorPtrOutput() DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput {
	return i.ToDomainRuleBasedMatchingAttributeTypesSelectorPtrOutputWithContext(context.Background())
}

func (i DomainRuleBasedMatchingAttributeTypesSelectorArgs) ToDomainRuleBasedMatchingAttributeTypesSelectorPtrOutputWithContext(ctx context.Context) DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRuleBasedMatchingAttributeTypesSelectorOutput).ToDomainRuleBasedMatchingAttributeTypesSelectorPtrOutputWithContext(ctx)
}

// DomainRuleBasedMatchingAttributeTypesSelectorPtrInput is an input type that accepts DomainRuleBasedMatchingAttributeTypesSelectorArgs, DomainRuleBasedMatchingAttributeTypesSelectorPtr and DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput values.
// You can construct a concrete instance of `DomainRuleBasedMatchingAttributeTypesSelectorPtrInput` via:
//
//	        DomainRuleBasedMatchingAttributeTypesSelectorArgs{...}
//
//	or:
//
//	        nil
type DomainRuleBasedMatchingAttributeTypesSelectorPtrInput interface {
	pulumi.Input

	ToDomainRuleBasedMatchingAttributeTypesSelectorPtrOutput() DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput
	ToDomainRuleBasedMatchingAttributeTypesSelectorPtrOutputWithContext(context.Context) DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput
}

type domainRuleBasedMatchingAttributeTypesSelectorPtrType DomainRuleBasedMatchingAttributeTypesSelectorArgs

func DomainRuleBasedMatchingAttributeTypesSelectorPtr(v *DomainRuleBasedMatchingAttributeTypesSelectorArgs) DomainRuleBasedMatchingAttributeTypesSelectorPtrInput {
	return (*domainRuleBasedMatchingAttributeTypesSelectorPtrType)(v)
}

func (*domainRuleBasedMatchingAttributeTypesSelectorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRuleBasedMatchingAttributeTypesSelector)(nil)).Elem()
}

func (i *domainRuleBasedMatchingAttributeTypesSelectorPtrType) ToDomainRuleBasedMatchingAttributeTypesSelectorPtrOutput() DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput {
	return i.ToDomainRuleBasedMatchingAttributeTypesSelectorPtrOutputWithContext(context.Background())
}

func (i *domainRuleBasedMatchingAttributeTypesSelectorPtrType) ToDomainRuleBasedMatchingAttributeTypesSelectorPtrOutputWithContext(ctx context.Context) DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput)
}

type DomainRuleBasedMatchingAttributeTypesSelectorOutput struct{ *pulumi.OutputState }

func (DomainRuleBasedMatchingAttributeTypesSelectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRuleBasedMatchingAttributeTypesSelector)(nil)).Elem()
}

func (o DomainRuleBasedMatchingAttributeTypesSelectorOutput) ToDomainRuleBasedMatchingAttributeTypesSelectorOutput() DomainRuleBasedMatchingAttributeTypesSelectorOutput {
	return o
}

func (o DomainRuleBasedMatchingAttributeTypesSelectorOutput) ToDomainRuleBasedMatchingAttributeTypesSelectorOutputWithContext(ctx context.Context) DomainRuleBasedMatchingAttributeTypesSelectorOutput {
	return o
}

func (o DomainRuleBasedMatchingAttributeTypesSelectorOutput) ToDomainRuleBasedMatchingAttributeTypesSelectorPtrOutput() DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput {
	return o.ToDomainRuleBasedMatchingAttributeTypesSelectorPtrOutputWithContext(context.Background())
}

func (o DomainRuleBasedMatchingAttributeTypesSelectorOutput) ToDomainRuleBasedMatchingAttributeTypesSelectorPtrOutputWithContext(ctx context.Context) DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainRuleBasedMatchingAttributeTypesSelector) *DomainRuleBasedMatchingAttributeTypesSelector {
		return &v
	}).(DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput)
}

// The `Address` type. You can choose from `Address`, `BusinessAddress`, `MaillingAddress`, and `ShippingAddress`.
func (o DomainRuleBasedMatchingAttributeTypesSelectorOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainRuleBasedMatchingAttributeTypesSelector) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

// Configures the `AttributeMatchingModel`, you can either choose `ONE_TO_ONE` or `MANY_TO_MANY`.
func (o DomainRuleBasedMatchingAttributeTypesSelectorOutput) AttributeMatchingModel() pulumi.StringOutput {
	return o.ApplyT(func(v DomainRuleBasedMatchingAttributeTypesSelector) string { return v.AttributeMatchingModel }).(pulumi.StringOutput)
}

// The `Email` type. You can choose from `EmailAddress`, `BusinessEmailAddress` and `PersonalEmailAddress`.
func (o DomainRuleBasedMatchingAttributeTypesSelectorOutput) EmailAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainRuleBasedMatchingAttributeTypesSelector) []string { return v.EmailAddresses }).(pulumi.StringArrayOutput)
}

// The `PhoneNumber` type. You can choose from `PhoneNumber`, `HomePhoneNumber`, and `MobilePhoneNumber`.
func (o DomainRuleBasedMatchingAttributeTypesSelectorOutput) PhoneNumbers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainRuleBasedMatchingAttributeTypesSelector) []string { return v.PhoneNumbers }).(pulumi.StringArrayOutput)
}

type DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput struct{ *pulumi.OutputState }

func (DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRuleBasedMatchingAttributeTypesSelector)(nil)).Elem()
}

func (o DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput) ToDomainRuleBasedMatchingAttributeTypesSelectorPtrOutput() DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput {
	return o
}

func (o DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput) ToDomainRuleBasedMatchingAttributeTypesSelectorPtrOutputWithContext(ctx context.Context) DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput {
	return o
}

func (o DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput) Elem() DomainRuleBasedMatchingAttributeTypesSelectorOutput {
	return o.ApplyT(func(v *DomainRuleBasedMatchingAttributeTypesSelector) DomainRuleBasedMatchingAttributeTypesSelector {
		if v != nil {
			return *v
		}
		var ret DomainRuleBasedMatchingAttributeTypesSelector
		return ret
	}).(DomainRuleBasedMatchingAttributeTypesSelectorOutput)
}

// The `Address` type. You can choose from `Address`, `BusinessAddress`, `MaillingAddress`, and `ShippingAddress`.
func (o DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainRuleBasedMatchingAttributeTypesSelector) []string {
		if v == nil {
			return nil
		}
		return v.Addresses
	}).(pulumi.StringArrayOutput)
}

// Configures the `AttributeMatchingModel`, you can either choose `ONE_TO_ONE` or `MANY_TO_MANY`.
func (o DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput) AttributeMatchingModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainRuleBasedMatchingAttributeTypesSelector) *string {
		if v == nil {
			return nil
		}
		return &v.AttributeMatchingModel
	}).(pulumi.StringPtrOutput)
}

// The `Email` type. You can choose from `EmailAddress`, `BusinessEmailAddress` and `PersonalEmailAddress`.
func (o DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput) EmailAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainRuleBasedMatchingAttributeTypesSelector) []string {
		if v == nil {
			return nil
		}
		return v.EmailAddresses
	}).(pulumi.StringArrayOutput)
}

// The `PhoneNumber` type. You can choose from `PhoneNumber`, `HomePhoneNumber`, and `MobilePhoneNumber`.
func (o DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput) PhoneNumbers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DomainRuleBasedMatchingAttributeTypesSelector) []string {
		if v == nil {
			return nil
		}
		return v.PhoneNumbers
	}).(pulumi.StringArrayOutput)
}

type DomainRuleBasedMatchingConflictResolution struct {
	// How the auto-merging process should resolve conflicts between different profiles. Valid values are `RECENCY` and `SOURCE`
	ConflictResolvingModel string `pulumi:"conflictResolvingModel"`
	// The `ObjectType` name that is used to resolve profile merging conflicts when choosing `SOURCE` as the `ConflictResolvingModel`.
	SourceName *string `pulumi:"sourceName"`
}

// DomainRuleBasedMatchingConflictResolutionInput is an input type that accepts DomainRuleBasedMatchingConflictResolutionArgs and DomainRuleBasedMatchingConflictResolutionOutput values.
// You can construct a concrete instance of `DomainRuleBasedMatchingConflictResolutionInput` via:
//
//	DomainRuleBasedMatchingConflictResolutionArgs{...}
type DomainRuleBasedMatchingConflictResolutionInput interface {
	pulumi.Input

	ToDomainRuleBasedMatchingConflictResolutionOutput() DomainRuleBasedMatchingConflictResolutionOutput
	ToDomainRuleBasedMatchingConflictResolutionOutputWithContext(context.Context) DomainRuleBasedMatchingConflictResolutionOutput
}

type DomainRuleBasedMatchingConflictResolutionArgs struct {
	// How the auto-merging process should resolve conflicts between different profiles. Valid values are `RECENCY` and `SOURCE`
	ConflictResolvingModel pulumi.StringInput `pulumi:"conflictResolvingModel"`
	// The `ObjectType` name that is used to resolve profile merging conflicts when choosing `SOURCE` as the `ConflictResolvingModel`.
	SourceName pulumi.StringPtrInput `pulumi:"sourceName"`
}

func (DomainRuleBasedMatchingConflictResolutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRuleBasedMatchingConflictResolution)(nil)).Elem()
}

func (i DomainRuleBasedMatchingConflictResolutionArgs) ToDomainRuleBasedMatchingConflictResolutionOutput() DomainRuleBasedMatchingConflictResolutionOutput {
	return i.ToDomainRuleBasedMatchingConflictResolutionOutputWithContext(context.Background())
}

func (i DomainRuleBasedMatchingConflictResolutionArgs) ToDomainRuleBasedMatchingConflictResolutionOutputWithContext(ctx context.Context) DomainRuleBasedMatchingConflictResolutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRuleBasedMatchingConflictResolutionOutput)
}

func (i DomainRuleBasedMatchingConflictResolutionArgs) ToDomainRuleBasedMatchingConflictResolutionPtrOutput() DomainRuleBasedMatchingConflictResolutionPtrOutput {
	return i.ToDomainRuleBasedMatchingConflictResolutionPtrOutputWithContext(context.Background())
}

func (i DomainRuleBasedMatchingConflictResolutionArgs) ToDomainRuleBasedMatchingConflictResolutionPtrOutputWithContext(ctx context.Context) DomainRuleBasedMatchingConflictResolutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRuleBasedMatchingConflictResolutionOutput).ToDomainRuleBasedMatchingConflictResolutionPtrOutputWithContext(ctx)
}

// DomainRuleBasedMatchingConflictResolutionPtrInput is an input type that accepts DomainRuleBasedMatchingConflictResolutionArgs, DomainRuleBasedMatchingConflictResolutionPtr and DomainRuleBasedMatchingConflictResolutionPtrOutput values.
// You can construct a concrete instance of `DomainRuleBasedMatchingConflictResolutionPtrInput` via:
//
//	        DomainRuleBasedMatchingConflictResolutionArgs{...}
//
//	or:
//
//	        nil
type DomainRuleBasedMatchingConflictResolutionPtrInput interface {
	pulumi.Input

	ToDomainRuleBasedMatchingConflictResolutionPtrOutput() DomainRuleBasedMatchingConflictResolutionPtrOutput
	ToDomainRuleBasedMatchingConflictResolutionPtrOutputWithContext(context.Context) DomainRuleBasedMatchingConflictResolutionPtrOutput
}

type domainRuleBasedMatchingConflictResolutionPtrType DomainRuleBasedMatchingConflictResolutionArgs

func DomainRuleBasedMatchingConflictResolutionPtr(v *DomainRuleBasedMatchingConflictResolutionArgs) DomainRuleBasedMatchingConflictResolutionPtrInput {
	return (*domainRuleBasedMatchingConflictResolutionPtrType)(v)
}

func (*domainRuleBasedMatchingConflictResolutionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRuleBasedMatchingConflictResolution)(nil)).Elem()
}

func (i *domainRuleBasedMatchingConflictResolutionPtrType) ToDomainRuleBasedMatchingConflictResolutionPtrOutput() DomainRuleBasedMatchingConflictResolutionPtrOutput {
	return i.ToDomainRuleBasedMatchingConflictResolutionPtrOutputWithContext(context.Background())
}

func (i *domainRuleBasedMatchingConflictResolutionPtrType) ToDomainRuleBasedMatchingConflictResolutionPtrOutputWithContext(ctx context.Context) DomainRuleBasedMatchingConflictResolutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRuleBasedMatchingConflictResolutionPtrOutput)
}

type DomainRuleBasedMatchingConflictResolutionOutput struct{ *pulumi.OutputState }

func (DomainRuleBasedMatchingConflictResolutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRuleBasedMatchingConflictResolution)(nil)).Elem()
}

func (o DomainRuleBasedMatchingConflictResolutionOutput) ToDomainRuleBasedMatchingConflictResolutionOutput() DomainRuleBasedMatchingConflictResolutionOutput {
	return o
}

func (o DomainRuleBasedMatchingConflictResolutionOutput) ToDomainRuleBasedMatchingConflictResolutionOutputWithContext(ctx context.Context) DomainRuleBasedMatchingConflictResolutionOutput {
	return o
}

func (o DomainRuleBasedMatchingConflictResolutionOutput) ToDomainRuleBasedMatchingConflictResolutionPtrOutput() DomainRuleBasedMatchingConflictResolutionPtrOutput {
	return o.ToDomainRuleBasedMatchingConflictResolutionPtrOutputWithContext(context.Background())
}

func (o DomainRuleBasedMatchingConflictResolutionOutput) ToDomainRuleBasedMatchingConflictResolutionPtrOutputWithContext(ctx context.Context) DomainRuleBasedMatchingConflictResolutionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainRuleBasedMatchingConflictResolution) *DomainRuleBasedMatchingConflictResolution {
		return &v
	}).(DomainRuleBasedMatchingConflictResolutionPtrOutput)
}

// How the auto-merging process should resolve conflicts between different profiles. Valid values are `RECENCY` and `SOURCE`
func (o DomainRuleBasedMatchingConflictResolutionOutput) ConflictResolvingModel() pulumi.StringOutput {
	return o.ApplyT(func(v DomainRuleBasedMatchingConflictResolution) string { return v.ConflictResolvingModel }).(pulumi.StringOutput)
}

// The `ObjectType` name that is used to resolve profile merging conflicts when choosing `SOURCE` as the `ConflictResolvingModel`.
func (o DomainRuleBasedMatchingConflictResolutionOutput) SourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainRuleBasedMatchingConflictResolution) *string { return v.SourceName }).(pulumi.StringPtrOutput)
}

type DomainRuleBasedMatchingConflictResolutionPtrOutput struct{ *pulumi.OutputState }

func (DomainRuleBasedMatchingConflictResolutionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRuleBasedMatchingConflictResolution)(nil)).Elem()
}

func (o DomainRuleBasedMatchingConflictResolutionPtrOutput) ToDomainRuleBasedMatchingConflictResolutionPtrOutput() DomainRuleBasedMatchingConflictResolutionPtrOutput {
	return o
}

func (o DomainRuleBasedMatchingConflictResolutionPtrOutput) ToDomainRuleBasedMatchingConflictResolutionPtrOutputWithContext(ctx context.Context) DomainRuleBasedMatchingConflictResolutionPtrOutput {
	return o
}

func (o DomainRuleBasedMatchingConflictResolutionPtrOutput) Elem() DomainRuleBasedMatchingConflictResolutionOutput {
	return o.ApplyT(func(v *DomainRuleBasedMatchingConflictResolution) DomainRuleBasedMatchingConflictResolution {
		if v != nil {
			return *v
		}
		var ret DomainRuleBasedMatchingConflictResolution
		return ret
	}).(DomainRuleBasedMatchingConflictResolutionOutput)
}

// How the auto-merging process should resolve conflicts between different profiles. Valid values are `RECENCY` and `SOURCE`
func (o DomainRuleBasedMatchingConflictResolutionPtrOutput) ConflictResolvingModel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainRuleBasedMatchingConflictResolution) *string {
		if v == nil {
			return nil
		}
		return &v.ConflictResolvingModel
	}).(pulumi.StringPtrOutput)
}

// The `ObjectType` name that is used to resolve profile merging conflicts when choosing `SOURCE` as the `ConflictResolvingModel`.
func (o DomainRuleBasedMatchingConflictResolutionPtrOutput) SourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainRuleBasedMatchingConflictResolution) *string {
		if v == nil {
			return nil
		}
		return v.SourceName
	}).(pulumi.StringPtrOutput)
}

type DomainRuleBasedMatchingExportingConfig struct {
	S3Exporting *DomainRuleBasedMatchingExportingConfigS3Exporting `pulumi:"s3Exporting"`
}

// DomainRuleBasedMatchingExportingConfigInput is an input type that accepts DomainRuleBasedMatchingExportingConfigArgs and DomainRuleBasedMatchingExportingConfigOutput values.
// You can construct a concrete instance of `DomainRuleBasedMatchingExportingConfigInput` via:
//
//	DomainRuleBasedMatchingExportingConfigArgs{...}
type DomainRuleBasedMatchingExportingConfigInput interface {
	pulumi.Input

	ToDomainRuleBasedMatchingExportingConfigOutput() DomainRuleBasedMatchingExportingConfigOutput
	ToDomainRuleBasedMatchingExportingConfigOutputWithContext(context.Context) DomainRuleBasedMatchingExportingConfigOutput
}

type DomainRuleBasedMatchingExportingConfigArgs struct {
	S3Exporting DomainRuleBasedMatchingExportingConfigS3ExportingPtrInput `pulumi:"s3Exporting"`
}

func (DomainRuleBasedMatchingExportingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRuleBasedMatchingExportingConfig)(nil)).Elem()
}

func (i DomainRuleBasedMatchingExportingConfigArgs) ToDomainRuleBasedMatchingExportingConfigOutput() DomainRuleBasedMatchingExportingConfigOutput {
	return i.ToDomainRuleBasedMatchingExportingConfigOutputWithContext(context.Background())
}

func (i DomainRuleBasedMatchingExportingConfigArgs) ToDomainRuleBasedMatchingExportingConfigOutputWithContext(ctx context.Context) DomainRuleBasedMatchingExportingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRuleBasedMatchingExportingConfigOutput)
}

func (i DomainRuleBasedMatchingExportingConfigArgs) ToDomainRuleBasedMatchingExportingConfigPtrOutput() DomainRuleBasedMatchingExportingConfigPtrOutput {
	return i.ToDomainRuleBasedMatchingExportingConfigPtrOutputWithContext(context.Background())
}

func (i DomainRuleBasedMatchingExportingConfigArgs) ToDomainRuleBasedMatchingExportingConfigPtrOutputWithContext(ctx context.Context) DomainRuleBasedMatchingExportingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRuleBasedMatchingExportingConfigOutput).ToDomainRuleBasedMatchingExportingConfigPtrOutputWithContext(ctx)
}

// DomainRuleBasedMatchingExportingConfigPtrInput is an input type that accepts DomainRuleBasedMatchingExportingConfigArgs, DomainRuleBasedMatchingExportingConfigPtr and DomainRuleBasedMatchingExportingConfigPtrOutput values.
// You can construct a concrete instance of `DomainRuleBasedMatchingExportingConfigPtrInput` via:
//
//	        DomainRuleBasedMatchingExportingConfigArgs{...}
//
//	or:
//
//	        nil
type DomainRuleBasedMatchingExportingConfigPtrInput interface {
	pulumi.Input

	ToDomainRuleBasedMatchingExportingConfigPtrOutput() DomainRuleBasedMatchingExportingConfigPtrOutput
	ToDomainRuleBasedMatchingExportingConfigPtrOutputWithContext(context.Context) DomainRuleBasedMatchingExportingConfigPtrOutput
}

type domainRuleBasedMatchingExportingConfigPtrType DomainRuleBasedMatchingExportingConfigArgs

func DomainRuleBasedMatchingExportingConfigPtr(v *DomainRuleBasedMatchingExportingConfigArgs) DomainRuleBasedMatchingExportingConfigPtrInput {
	return (*domainRuleBasedMatchingExportingConfigPtrType)(v)
}

func (*domainRuleBasedMatchingExportingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRuleBasedMatchingExportingConfig)(nil)).Elem()
}

func (i *domainRuleBasedMatchingExportingConfigPtrType) ToDomainRuleBasedMatchingExportingConfigPtrOutput() DomainRuleBasedMatchingExportingConfigPtrOutput {
	return i.ToDomainRuleBasedMatchingExportingConfigPtrOutputWithContext(context.Background())
}

func (i *domainRuleBasedMatchingExportingConfigPtrType) ToDomainRuleBasedMatchingExportingConfigPtrOutputWithContext(ctx context.Context) DomainRuleBasedMatchingExportingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRuleBasedMatchingExportingConfigPtrOutput)
}

type DomainRuleBasedMatchingExportingConfigOutput struct{ *pulumi.OutputState }

func (DomainRuleBasedMatchingExportingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRuleBasedMatchingExportingConfig)(nil)).Elem()
}

func (o DomainRuleBasedMatchingExportingConfigOutput) ToDomainRuleBasedMatchingExportingConfigOutput() DomainRuleBasedMatchingExportingConfigOutput {
	return o
}

func (o DomainRuleBasedMatchingExportingConfigOutput) ToDomainRuleBasedMatchingExportingConfigOutputWithContext(ctx context.Context) DomainRuleBasedMatchingExportingConfigOutput {
	return o
}

func (o DomainRuleBasedMatchingExportingConfigOutput) ToDomainRuleBasedMatchingExportingConfigPtrOutput() DomainRuleBasedMatchingExportingConfigPtrOutput {
	return o.ToDomainRuleBasedMatchingExportingConfigPtrOutputWithContext(context.Background())
}

func (o DomainRuleBasedMatchingExportingConfigOutput) ToDomainRuleBasedMatchingExportingConfigPtrOutputWithContext(ctx context.Context) DomainRuleBasedMatchingExportingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainRuleBasedMatchingExportingConfig) *DomainRuleBasedMatchingExportingConfig {
		return &v
	}).(DomainRuleBasedMatchingExportingConfigPtrOutput)
}

func (o DomainRuleBasedMatchingExportingConfigOutput) S3Exporting() DomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput {
	return o.ApplyT(func(v DomainRuleBasedMatchingExportingConfig) *DomainRuleBasedMatchingExportingConfigS3Exporting {
		return v.S3Exporting
	}).(DomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput)
}

type DomainRuleBasedMatchingExportingConfigPtrOutput struct{ *pulumi.OutputState }

func (DomainRuleBasedMatchingExportingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRuleBasedMatchingExportingConfig)(nil)).Elem()
}

func (o DomainRuleBasedMatchingExportingConfigPtrOutput) ToDomainRuleBasedMatchingExportingConfigPtrOutput() DomainRuleBasedMatchingExportingConfigPtrOutput {
	return o
}

func (o DomainRuleBasedMatchingExportingConfigPtrOutput) ToDomainRuleBasedMatchingExportingConfigPtrOutputWithContext(ctx context.Context) DomainRuleBasedMatchingExportingConfigPtrOutput {
	return o
}

func (o DomainRuleBasedMatchingExportingConfigPtrOutput) Elem() DomainRuleBasedMatchingExportingConfigOutput {
	return o.ApplyT(func(v *DomainRuleBasedMatchingExportingConfig) DomainRuleBasedMatchingExportingConfig {
		if v != nil {
			return *v
		}
		var ret DomainRuleBasedMatchingExportingConfig
		return ret
	}).(DomainRuleBasedMatchingExportingConfigOutput)
}

func (o DomainRuleBasedMatchingExportingConfigPtrOutput) S3Exporting() DomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput {
	return o.ApplyT(func(v *DomainRuleBasedMatchingExportingConfig) *DomainRuleBasedMatchingExportingConfigS3Exporting {
		if v == nil {
			return nil
		}
		return v.S3Exporting
	}).(DomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput)
}

type DomainRuleBasedMatchingExportingConfigS3Exporting struct {
	// The name of the S3 bucket where Identity Resolution Jobs write result files.
	S3BucketName string `pulumi:"s3BucketName"`
	// The S3 key name of the location where Identity Resolution Jobs write result files.
	S3KeyName *string `pulumi:"s3KeyName"`
}

// DomainRuleBasedMatchingExportingConfigS3ExportingInput is an input type that accepts DomainRuleBasedMatchingExportingConfigS3ExportingArgs and DomainRuleBasedMatchingExportingConfigS3ExportingOutput values.
// You can construct a concrete instance of `DomainRuleBasedMatchingExportingConfigS3ExportingInput` via:
//
//	DomainRuleBasedMatchingExportingConfigS3ExportingArgs{...}
type DomainRuleBasedMatchingExportingConfigS3ExportingInput interface {
	pulumi.Input

	ToDomainRuleBasedMatchingExportingConfigS3ExportingOutput() DomainRuleBasedMatchingExportingConfigS3ExportingOutput
	ToDomainRuleBasedMatchingExportingConfigS3ExportingOutputWithContext(context.Context) DomainRuleBasedMatchingExportingConfigS3ExportingOutput
}

type DomainRuleBasedMatchingExportingConfigS3ExportingArgs struct {
	// The name of the S3 bucket where Identity Resolution Jobs write result files.
	S3BucketName pulumi.StringInput `pulumi:"s3BucketName"`
	// The S3 key name of the location where Identity Resolution Jobs write result files.
	S3KeyName pulumi.StringPtrInput `pulumi:"s3KeyName"`
}

func (DomainRuleBasedMatchingExportingConfigS3ExportingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRuleBasedMatchingExportingConfigS3Exporting)(nil)).Elem()
}

func (i DomainRuleBasedMatchingExportingConfigS3ExportingArgs) ToDomainRuleBasedMatchingExportingConfigS3ExportingOutput() DomainRuleBasedMatchingExportingConfigS3ExportingOutput {
	return i.ToDomainRuleBasedMatchingExportingConfigS3ExportingOutputWithContext(context.Background())
}

func (i DomainRuleBasedMatchingExportingConfigS3ExportingArgs) ToDomainRuleBasedMatchingExportingConfigS3ExportingOutputWithContext(ctx context.Context) DomainRuleBasedMatchingExportingConfigS3ExportingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRuleBasedMatchingExportingConfigS3ExportingOutput)
}

func (i DomainRuleBasedMatchingExportingConfigS3ExportingArgs) ToDomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput() DomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput {
	return i.ToDomainRuleBasedMatchingExportingConfigS3ExportingPtrOutputWithContext(context.Background())
}

func (i DomainRuleBasedMatchingExportingConfigS3ExportingArgs) ToDomainRuleBasedMatchingExportingConfigS3ExportingPtrOutputWithContext(ctx context.Context) DomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRuleBasedMatchingExportingConfigS3ExportingOutput).ToDomainRuleBasedMatchingExportingConfigS3ExportingPtrOutputWithContext(ctx)
}

// DomainRuleBasedMatchingExportingConfigS3ExportingPtrInput is an input type that accepts DomainRuleBasedMatchingExportingConfigS3ExportingArgs, DomainRuleBasedMatchingExportingConfigS3ExportingPtr and DomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput values.
// You can construct a concrete instance of `DomainRuleBasedMatchingExportingConfigS3ExportingPtrInput` via:
//
//	        DomainRuleBasedMatchingExportingConfigS3ExportingArgs{...}
//
//	or:
//
//	        nil
type DomainRuleBasedMatchingExportingConfigS3ExportingPtrInput interface {
	pulumi.Input

	ToDomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput() DomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput
	ToDomainRuleBasedMatchingExportingConfigS3ExportingPtrOutputWithContext(context.Context) DomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput
}

type domainRuleBasedMatchingExportingConfigS3ExportingPtrType DomainRuleBasedMatchingExportingConfigS3ExportingArgs

func DomainRuleBasedMatchingExportingConfigS3ExportingPtr(v *DomainRuleBasedMatchingExportingConfigS3ExportingArgs) DomainRuleBasedMatchingExportingConfigS3ExportingPtrInput {
	return (*domainRuleBasedMatchingExportingConfigS3ExportingPtrType)(v)
}

func (*domainRuleBasedMatchingExportingConfigS3ExportingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRuleBasedMatchingExportingConfigS3Exporting)(nil)).Elem()
}

func (i *domainRuleBasedMatchingExportingConfigS3ExportingPtrType) ToDomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput() DomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput {
	return i.ToDomainRuleBasedMatchingExportingConfigS3ExportingPtrOutputWithContext(context.Background())
}

func (i *domainRuleBasedMatchingExportingConfigS3ExportingPtrType) ToDomainRuleBasedMatchingExportingConfigS3ExportingPtrOutputWithContext(ctx context.Context) DomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput)
}

type DomainRuleBasedMatchingExportingConfigS3ExportingOutput struct{ *pulumi.OutputState }

func (DomainRuleBasedMatchingExportingConfigS3ExportingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRuleBasedMatchingExportingConfigS3Exporting)(nil)).Elem()
}

func (o DomainRuleBasedMatchingExportingConfigS3ExportingOutput) ToDomainRuleBasedMatchingExportingConfigS3ExportingOutput() DomainRuleBasedMatchingExportingConfigS3ExportingOutput {
	return o
}

func (o DomainRuleBasedMatchingExportingConfigS3ExportingOutput) ToDomainRuleBasedMatchingExportingConfigS3ExportingOutputWithContext(ctx context.Context) DomainRuleBasedMatchingExportingConfigS3ExportingOutput {
	return o
}

func (o DomainRuleBasedMatchingExportingConfigS3ExportingOutput) ToDomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput() DomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput {
	return o.ToDomainRuleBasedMatchingExportingConfigS3ExportingPtrOutputWithContext(context.Background())
}

func (o DomainRuleBasedMatchingExportingConfigS3ExportingOutput) ToDomainRuleBasedMatchingExportingConfigS3ExportingPtrOutputWithContext(ctx context.Context) DomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DomainRuleBasedMatchingExportingConfigS3Exporting) *DomainRuleBasedMatchingExportingConfigS3Exporting {
		return &v
	}).(DomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput)
}

// The name of the S3 bucket where Identity Resolution Jobs write result files.
func (o DomainRuleBasedMatchingExportingConfigS3ExportingOutput) S3BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v DomainRuleBasedMatchingExportingConfigS3Exporting) string { return v.S3BucketName }).(pulumi.StringOutput)
}

// The S3 key name of the location where Identity Resolution Jobs write result files.
func (o DomainRuleBasedMatchingExportingConfigS3ExportingOutput) S3KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainRuleBasedMatchingExportingConfigS3Exporting) *string { return v.S3KeyName }).(pulumi.StringPtrOutput)
}

type DomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput struct{ *pulumi.OutputState }

func (DomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainRuleBasedMatchingExportingConfigS3Exporting)(nil)).Elem()
}

func (o DomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput) ToDomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput() DomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput {
	return o
}

func (o DomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput) ToDomainRuleBasedMatchingExportingConfigS3ExportingPtrOutputWithContext(ctx context.Context) DomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput {
	return o
}

func (o DomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput) Elem() DomainRuleBasedMatchingExportingConfigS3ExportingOutput {
	return o.ApplyT(func(v *DomainRuleBasedMatchingExportingConfigS3Exporting) DomainRuleBasedMatchingExportingConfigS3Exporting {
		if v != nil {
			return *v
		}
		var ret DomainRuleBasedMatchingExportingConfigS3Exporting
		return ret
	}).(DomainRuleBasedMatchingExportingConfigS3ExportingOutput)
}

// The name of the S3 bucket where Identity Resolution Jobs write result files.
func (o DomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput) S3BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainRuleBasedMatchingExportingConfigS3Exporting) *string {
		if v == nil {
			return nil
		}
		return &v.S3BucketName
	}).(pulumi.StringPtrOutput)
}

// The S3 key name of the location where Identity Resolution Jobs write result files.
func (o DomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput) S3KeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainRuleBasedMatchingExportingConfigS3Exporting) *string {
		if v == nil {
			return nil
		}
		return v.S3KeyName
	}).(pulumi.StringPtrOutput)
}

type DomainRuleBasedMatchingMatchingRule struct {
	// A single rule level of the `matchRules`. Configures how the rule-based matching process should match profiles.
	Rules []string `pulumi:"rules"`
}

// DomainRuleBasedMatchingMatchingRuleInput is an input type that accepts DomainRuleBasedMatchingMatchingRuleArgs and DomainRuleBasedMatchingMatchingRuleOutput values.
// You can construct a concrete instance of `DomainRuleBasedMatchingMatchingRuleInput` via:
//
//	DomainRuleBasedMatchingMatchingRuleArgs{...}
type DomainRuleBasedMatchingMatchingRuleInput interface {
	pulumi.Input

	ToDomainRuleBasedMatchingMatchingRuleOutput() DomainRuleBasedMatchingMatchingRuleOutput
	ToDomainRuleBasedMatchingMatchingRuleOutputWithContext(context.Context) DomainRuleBasedMatchingMatchingRuleOutput
}

type DomainRuleBasedMatchingMatchingRuleArgs struct {
	// A single rule level of the `matchRules`. Configures how the rule-based matching process should match profiles.
	Rules pulumi.StringArrayInput `pulumi:"rules"`
}

func (DomainRuleBasedMatchingMatchingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRuleBasedMatchingMatchingRule)(nil)).Elem()
}

func (i DomainRuleBasedMatchingMatchingRuleArgs) ToDomainRuleBasedMatchingMatchingRuleOutput() DomainRuleBasedMatchingMatchingRuleOutput {
	return i.ToDomainRuleBasedMatchingMatchingRuleOutputWithContext(context.Background())
}

func (i DomainRuleBasedMatchingMatchingRuleArgs) ToDomainRuleBasedMatchingMatchingRuleOutputWithContext(ctx context.Context) DomainRuleBasedMatchingMatchingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRuleBasedMatchingMatchingRuleOutput)
}

// DomainRuleBasedMatchingMatchingRuleArrayInput is an input type that accepts DomainRuleBasedMatchingMatchingRuleArray and DomainRuleBasedMatchingMatchingRuleArrayOutput values.
// You can construct a concrete instance of `DomainRuleBasedMatchingMatchingRuleArrayInput` via:
//
//	DomainRuleBasedMatchingMatchingRuleArray{ DomainRuleBasedMatchingMatchingRuleArgs{...} }
type DomainRuleBasedMatchingMatchingRuleArrayInput interface {
	pulumi.Input

	ToDomainRuleBasedMatchingMatchingRuleArrayOutput() DomainRuleBasedMatchingMatchingRuleArrayOutput
	ToDomainRuleBasedMatchingMatchingRuleArrayOutputWithContext(context.Context) DomainRuleBasedMatchingMatchingRuleArrayOutput
}

type DomainRuleBasedMatchingMatchingRuleArray []DomainRuleBasedMatchingMatchingRuleInput

func (DomainRuleBasedMatchingMatchingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainRuleBasedMatchingMatchingRule)(nil)).Elem()
}

func (i DomainRuleBasedMatchingMatchingRuleArray) ToDomainRuleBasedMatchingMatchingRuleArrayOutput() DomainRuleBasedMatchingMatchingRuleArrayOutput {
	return i.ToDomainRuleBasedMatchingMatchingRuleArrayOutputWithContext(context.Background())
}

func (i DomainRuleBasedMatchingMatchingRuleArray) ToDomainRuleBasedMatchingMatchingRuleArrayOutputWithContext(ctx context.Context) DomainRuleBasedMatchingMatchingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainRuleBasedMatchingMatchingRuleArrayOutput)
}

type DomainRuleBasedMatchingMatchingRuleOutput struct{ *pulumi.OutputState }

func (DomainRuleBasedMatchingMatchingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainRuleBasedMatchingMatchingRule)(nil)).Elem()
}

func (o DomainRuleBasedMatchingMatchingRuleOutput) ToDomainRuleBasedMatchingMatchingRuleOutput() DomainRuleBasedMatchingMatchingRuleOutput {
	return o
}

func (o DomainRuleBasedMatchingMatchingRuleOutput) ToDomainRuleBasedMatchingMatchingRuleOutputWithContext(ctx context.Context) DomainRuleBasedMatchingMatchingRuleOutput {
	return o
}

// A single rule level of the `matchRules`. Configures how the rule-based matching process should match profiles.
func (o DomainRuleBasedMatchingMatchingRuleOutput) Rules() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DomainRuleBasedMatchingMatchingRule) []string { return v.Rules }).(pulumi.StringArrayOutput)
}

type DomainRuleBasedMatchingMatchingRuleArrayOutput struct{ *pulumi.OutputState }

func (DomainRuleBasedMatchingMatchingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DomainRuleBasedMatchingMatchingRule)(nil)).Elem()
}

func (o DomainRuleBasedMatchingMatchingRuleArrayOutput) ToDomainRuleBasedMatchingMatchingRuleArrayOutput() DomainRuleBasedMatchingMatchingRuleArrayOutput {
	return o
}

func (o DomainRuleBasedMatchingMatchingRuleArrayOutput) ToDomainRuleBasedMatchingMatchingRuleArrayOutputWithContext(ctx context.Context) DomainRuleBasedMatchingMatchingRuleArrayOutput {
	return o
}

func (o DomainRuleBasedMatchingMatchingRuleArrayOutput) Index(i pulumi.IntInput) DomainRuleBasedMatchingMatchingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DomainRuleBasedMatchingMatchingRule {
		return vs[0].([]DomainRuleBasedMatchingMatchingRule)[vs[1].(int)]
	}).(DomainRuleBasedMatchingMatchingRuleOutput)
}

type ProfileAddress struct {
	// The first line of a customer address.
	Address1 *string `pulumi:"address1"`
	// The second line of a customer address.
	Address2 *string `pulumi:"address2"`
	// The third line of a customer address.
	Address3 *string `pulumi:"address3"`
	// The fourth line of a customer address.
	Address4 *string `pulumi:"address4"`
	// The city in which a customer lives.
	City *string `pulumi:"city"`
	// The country in which a customer lives.
	Country *string `pulumi:"country"`
	// The county in which a customer lives.
	County *string `pulumi:"county"`
	// The postal code of a customer address.
	PostalCode *string `pulumi:"postalCode"`
	// The province in which a customer lives.
	Province *string `pulumi:"province"`
	// The state in which a customer lives.
	State *string `pulumi:"state"`
}

// ProfileAddressInput is an input type that accepts ProfileAddressArgs and ProfileAddressOutput values.
// You can construct a concrete instance of `ProfileAddressInput` via:
//
//	ProfileAddressArgs{...}
type ProfileAddressInput interface {
	pulumi.Input

	ToProfileAddressOutput() ProfileAddressOutput
	ToProfileAddressOutputWithContext(context.Context) ProfileAddressOutput
}

type ProfileAddressArgs struct {
	// The first line of a customer address.
	Address1 pulumi.StringPtrInput `pulumi:"address1"`
	// The second line of a customer address.
	Address2 pulumi.StringPtrInput `pulumi:"address2"`
	// The third line of a customer address.
	Address3 pulumi.StringPtrInput `pulumi:"address3"`
	// The fourth line of a customer address.
	Address4 pulumi.StringPtrInput `pulumi:"address4"`
	// The city in which a customer lives.
	City pulumi.StringPtrInput `pulumi:"city"`
	// The country in which a customer lives.
	Country pulumi.StringPtrInput `pulumi:"country"`
	// The county in which a customer lives.
	County pulumi.StringPtrInput `pulumi:"county"`
	// The postal code of a customer address.
	PostalCode pulumi.StringPtrInput `pulumi:"postalCode"`
	// The province in which a customer lives.
	Province pulumi.StringPtrInput `pulumi:"province"`
	// The state in which a customer lives.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (ProfileAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileAddress)(nil)).Elem()
}

func (i ProfileAddressArgs) ToProfileAddressOutput() ProfileAddressOutput {
	return i.ToProfileAddressOutputWithContext(context.Background())
}

func (i ProfileAddressArgs) ToProfileAddressOutputWithContext(ctx context.Context) ProfileAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileAddressOutput)
}

func (i ProfileAddressArgs) ToProfileAddressPtrOutput() ProfileAddressPtrOutput {
	return i.ToProfileAddressPtrOutputWithContext(context.Background())
}

func (i ProfileAddressArgs) ToProfileAddressPtrOutputWithContext(ctx context.Context) ProfileAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileAddressOutput).ToProfileAddressPtrOutputWithContext(ctx)
}

// ProfileAddressPtrInput is an input type that accepts ProfileAddressArgs, ProfileAddressPtr and ProfileAddressPtrOutput values.
// You can construct a concrete instance of `ProfileAddressPtrInput` via:
//
//	        ProfileAddressArgs{...}
//
//	or:
//
//	        nil
type ProfileAddressPtrInput interface {
	pulumi.Input

	ToProfileAddressPtrOutput() ProfileAddressPtrOutput
	ToProfileAddressPtrOutputWithContext(context.Context) ProfileAddressPtrOutput
}

type profileAddressPtrType ProfileAddressArgs

func ProfileAddressPtr(v *ProfileAddressArgs) ProfileAddressPtrInput {
	return (*profileAddressPtrType)(v)
}

func (*profileAddressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileAddress)(nil)).Elem()
}

func (i *profileAddressPtrType) ToProfileAddressPtrOutput() ProfileAddressPtrOutput {
	return i.ToProfileAddressPtrOutputWithContext(context.Background())
}

func (i *profileAddressPtrType) ToProfileAddressPtrOutputWithContext(ctx context.Context) ProfileAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileAddressPtrOutput)
}

type ProfileAddressOutput struct{ *pulumi.OutputState }

func (ProfileAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileAddress)(nil)).Elem()
}

func (o ProfileAddressOutput) ToProfileAddressOutput() ProfileAddressOutput {
	return o
}

func (o ProfileAddressOutput) ToProfileAddressOutputWithContext(ctx context.Context) ProfileAddressOutput {
	return o
}

func (o ProfileAddressOutput) ToProfileAddressPtrOutput() ProfileAddressPtrOutput {
	return o.ToProfileAddressPtrOutputWithContext(context.Background())
}

func (o ProfileAddressOutput) ToProfileAddressPtrOutputWithContext(ctx context.Context) ProfileAddressPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileAddress) *ProfileAddress {
		return &v
	}).(ProfileAddressPtrOutput)
}

// The first line of a customer address.
func (o ProfileAddressOutput) Address1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileAddress) *string { return v.Address1 }).(pulumi.StringPtrOutput)
}

// The second line of a customer address.
func (o ProfileAddressOutput) Address2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileAddress) *string { return v.Address2 }).(pulumi.StringPtrOutput)
}

// The third line of a customer address.
func (o ProfileAddressOutput) Address3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileAddress) *string { return v.Address3 }).(pulumi.StringPtrOutput)
}

// The fourth line of a customer address.
func (o ProfileAddressOutput) Address4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileAddress) *string { return v.Address4 }).(pulumi.StringPtrOutput)
}

// The city in which a customer lives.
func (o ProfileAddressOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileAddress) *string { return v.City }).(pulumi.StringPtrOutput)
}

// The country in which a customer lives.
func (o ProfileAddressOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileAddress) *string { return v.Country }).(pulumi.StringPtrOutput)
}

// The county in which a customer lives.
func (o ProfileAddressOutput) County() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileAddress) *string { return v.County }).(pulumi.StringPtrOutput)
}

// The postal code of a customer address.
func (o ProfileAddressOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileAddress) *string { return v.PostalCode }).(pulumi.StringPtrOutput)
}

// The province in which a customer lives.
func (o ProfileAddressOutput) Province() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileAddress) *string { return v.Province }).(pulumi.StringPtrOutput)
}

// The state in which a customer lives.
func (o ProfileAddressOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileAddress) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ProfileAddressPtrOutput struct{ *pulumi.OutputState }

func (ProfileAddressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileAddress)(nil)).Elem()
}

func (o ProfileAddressPtrOutput) ToProfileAddressPtrOutput() ProfileAddressPtrOutput {
	return o
}

func (o ProfileAddressPtrOutput) ToProfileAddressPtrOutputWithContext(ctx context.Context) ProfileAddressPtrOutput {
	return o
}

func (o ProfileAddressPtrOutput) Elem() ProfileAddressOutput {
	return o.ApplyT(func(v *ProfileAddress) ProfileAddress {
		if v != nil {
			return *v
		}
		var ret ProfileAddress
		return ret
	}).(ProfileAddressOutput)
}

// The first line of a customer address.
func (o ProfileAddressPtrOutput) Address1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileAddress) *string {
		if v == nil {
			return nil
		}
		return v.Address1
	}).(pulumi.StringPtrOutput)
}

// The second line of a customer address.
func (o ProfileAddressPtrOutput) Address2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileAddress) *string {
		if v == nil {
			return nil
		}
		return v.Address2
	}).(pulumi.StringPtrOutput)
}

// The third line of a customer address.
func (o ProfileAddressPtrOutput) Address3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileAddress) *string {
		if v == nil {
			return nil
		}
		return v.Address3
	}).(pulumi.StringPtrOutput)
}

// The fourth line of a customer address.
func (o ProfileAddressPtrOutput) Address4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileAddress) *string {
		if v == nil {
			return nil
		}
		return v.Address4
	}).(pulumi.StringPtrOutput)
}

// The city in which a customer lives.
func (o ProfileAddressPtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileAddress) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

// The country in which a customer lives.
func (o ProfileAddressPtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileAddress) *string {
		if v == nil {
			return nil
		}
		return v.Country
	}).(pulumi.StringPtrOutput)
}

// The county in which a customer lives.
func (o ProfileAddressPtrOutput) County() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileAddress) *string {
		if v == nil {
			return nil
		}
		return v.County
	}).(pulumi.StringPtrOutput)
}

// The postal code of a customer address.
func (o ProfileAddressPtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileAddress) *string {
		if v == nil {
			return nil
		}
		return v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// The province in which a customer lives.
func (o ProfileAddressPtrOutput) Province() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileAddress) *string {
		if v == nil {
			return nil
		}
		return v.Province
	}).(pulumi.StringPtrOutput)
}

// The state in which a customer lives.
func (o ProfileAddressPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileAddress) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

type ProfileBillingAddress struct {
	// The first line of a customer address.
	Address1 *string `pulumi:"address1"`
	// The second line of a customer address.
	Address2 *string `pulumi:"address2"`
	// The third line of a customer address.
	Address3 *string `pulumi:"address3"`
	// The fourth line of a customer address.
	Address4 *string `pulumi:"address4"`
	// The city in which a customer lives.
	City *string `pulumi:"city"`
	// The country in which a customer lives.
	Country *string `pulumi:"country"`
	// The county in which a customer lives.
	County *string `pulumi:"county"`
	// The postal code of a customer address.
	PostalCode *string `pulumi:"postalCode"`
	// The province in which a customer lives.
	Province *string `pulumi:"province"`
	// The state in which a customer lives.
	State *string `pulumi:"state"`
}

// ProfileBillingAddressInput is an input type that accepts ProfileBillingAddressArgs and ProfileBillingAddressOutput values.
// You can construct a concrete instance of `ProfileBillingAddressInput` via:
//
//	ProfileBillingAddressArgs{...}
type ProfileBillingAddressInput interface {
	pulumi.Input

	ToProfileBillingAddressOutput() ProfileBillingAddressOutput
	ToProfileBillingAddressOutputWithContext(context.Context) ProfileBillingAddressOutput
}

type ProfileBillingAddressArgs struct {
	// The first line of a customer address.
	Address1 pulumi.StringPtrInput `pulumi:"address1"`
	// The second line of a customer address.
	Address2 pulumi.StringPtrInput `pulumi:"address2"`
	// The third line of a customer address.
	Address3 pulumi.StringPtrInput `pulumi:"address3"`
	// The fourth line of a customer address.
	Address4 pulumi.StringPtrInput `pulumi:"address4"`
	// The city in which a customer lives.
	City pulumi.StringPtrInput `pulumi:"city"`
	// The country in which a customer lives.
	Country pulumi.StringPtrInput `pulumi:"country"`
	// The county in which a customer lives.
	County pulumi.StringPtrInput `pulumi:"county"`
	// The postal code of a customer address.
	PostalCode pulumi.StringPtrInput `pulumi:"postalCode"`
	// The province in which a customer lives.
	Province pulumi.StringPtrInput `pulumi:"province"`
	// The state in which a customer lives.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (ProfileBillingAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileBillingAddress)(nil)).Elem()
}

func (i ProfileBillingAddressArgs) ToProfileBillingAddressOutput() ProfileBillingAddressOutput {
	return i.ToProfileBillingAddressOutputWithContext(context.Background())
}

func (i ProfileBillingAddressArgs) ToProfileBillingAddressOutputWithContext(ctx context.Context) ProfileBillingAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileBillingAddressOutput)
}

func (i ProfileBillingAddressArgs) ToProfileBillingAddressPtrOutput() ProfileBillingAddressPtrOutput {
	return i.ToProfileBillingAddressPtrOutputWithContext(context.Background())
}

func (i ProfileBillingAddressArgs) ToProfileBillingAddressPtrOutputWithContext(ctx context.Context) ProfileBillingAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileBillingAddressOutput).ToProfileBillingAddressPtrOutputWithContext(ctx)
}

// ProfileBillingAddressPtrInput is an input type that accepts ProfileBillingAddressArgs, ProfileBillingAddressPtr and ProfileBillingAddressPtrOutput values.
// You can construct a concrete instance of `ProfileBillingAddressPtrInput` via:
//
//	        ProfileBillingAddressArgs{...}
//
//	or:
//
//	        nil
type ProfileBillingAddressPtrInput interface {
	pulumi.Input

	ToProfileBillingAddressPtrOutput() ProfileBillingAddressPtrOutput
	ToProfileBillingAddressPtrOutputWithContext(context.Context) ProfileBillingAddressPtrOutput
}

type profileBillingAddressPtrType ProfileBillingAddressArgs

func ProfileBillingAddressPtr(v *ProfileBillingAddressArgs) ProfileBillingAddressPtrInput {
	return (*profileBillingAddressPtrType)(v)
}

func (*profileBillingAddressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileBillingAddress)(nil)).Elem()
}

func (i *profileBillingAddressPtrType) ToProfileBillingAddressPtrOutput() ProfileBillingAddressPtrOutput {
	return i.ToProfileBillingAddressPtrOutputWithContext(context.Background())
}

func (i *profileBillingAddressPtrType) ToProfileBillingAddressPtrOutputWithContext(ctx context.Context) ProfileBillingAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileBillingAddressPtrOutput)
}

type ProfileBillingAddressOutput struct{ *pulumi.OutputState }

func (ProfileBillingAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileBillingAddress)(nil)).Elem()
}

func (o ProfileBillingAddressOutput) ToProfileBillingAddressOutput() ProfileBillingAddressOutput {
	return o
}

func (o ProfileBillingAddressOutput) ToProfileBillingAddressOutputWithContext(ctx context.Context) ProfileBillingAddressOutput {
	return o
}

func (o ProfileBillingAddressOutput) ToProfileBillingAddressPtrOutput() ProfileBillingAddressPtrOutput {
	return o.ToProfileBillingAddressPtrOutputWithContext(context.Background())
}

func (o ProfileBillingAddressOutput) ToProfileBillingAddressPtrOutputWithContext(ctx context.Context) ProfileBillingAddressPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileBillingAddress) *ProfileBillingAddress {
		return &v
	}).(ProfileBillingAddressPtrOutput)
}

// The first line of a customer address.
func (o ProfileBillingAddressOutput) Address1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileBillingAddress) *string { return v.Address1 }).(pulumi.StringPtrOutput)
}

// The second line of a customer address.
func (o ProfileBillingAddressOutput) Address2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileBillingAddress) *string { return v.Address2 }).(pulumi.StringPtrOutput)
}

// The third line of a customer address.
func (o ProfileBillingAddressOutput) Address3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileBillingAddress) *string { return v.Address3 }).(pulumi.StringPtrOutput)
}

// The fourth line of a customer address.
func (o ProfileBillingAddressOutput) Address4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileBillingAddress) *string { return v.Address4 }).(pulumi.StringPtrOutput)
}

// The city in which a customer lives.
func (o ProfileBillingAddressOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileBillingAddress) *string { return v.City }).(pulumi.StringPtrOutput)
}

// The country in which a customer lives.
func (o ProfileBillingAddressOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileBillingAddress) *string { return v.Country }).(pulumi.StringPtrOutput)
}

// The county in which a customer lives.
func (o ProfileBillingAddressOutput) County() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileBillingAddress) *string { return v.County }).(pulumi.StringPtrOutput)
}

// The postal code of a customer address.
func (o ProfileBillingAddressOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileBillingAddress) *string { return v.PostalCode }).(pulumi.StringPtrOutput)
}

// The province in which a customer lives.
func (o ProfileBillingAddressOutput) Province() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileBillingAddress) *string { return v.Province }).(pulumi.StringPtrOutput)
}

// The state in which a customer lives.
func (o ProfileBillingAddressOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileBillingAddress) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ProfileBillingAddressPtrOutput struct{ *pulumi.OutputState }

func (ProfileBillingAddressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileBillingAddress)(nil)).Elem()
}

func (o ProfileBillingAddressPtrOutput) ToProfileBillingAddressPtrOutput() ProfileBillingAddressPtrOutput {
	return o
}

func (o ProfileBillingAddressPtrOutput) ToProfileBillingAddressPtrOutputWithContext(ctx context.Context) ProfileBillingAddressPtrOutput {
	return o
}

func (o ProfileBillingAddressPtrOutput) Elem() ProfileBillingAddressOutput {
	return o.ApplyT(func(v *ProfileBillingAddress) ProfileBillingAddress {
		if v != nil {
			return *v
		}
		var ret ProfileBillingAddress
		return ret
	}).(ProfileBillingAddressOutput)
}

// The first line of a customer address.
func (o ProfileBillingAddressPtrOutput) Address1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileBillingAddress) *string {
		if v == nil {
			return nil
		}
		return v.Address1
	}).(pulumi.StringPtrOutput)
}

// The second line of a customer address.
func (o ProfileBillingAddressPtrOutput) Address2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileBillingAddress) *string {
		if v == nil {
			return nil
		}
		return v.Address2
	}).(pulumi.StringPtrOutput)
}

// The third line of a customer address.
func (o ProfileBillingAddressPtrOutput) Address3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileBillingAddress) *string {
		if v == nil {
			return nil
		}
		return v.Address3
	}).(pulumi.StringPtrOutput)
}

// The fourth line of a customer address.
func (o ProfileBillingAddressPtrOutput) Address4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileBillingAddress) *string {
		if v == nil {
			return nil
		}
		return v.Address4
	}).(pulumi.StringPtrOutput)
}

// The city in which a customer lives.
func (o ProfileBillingAddressPtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileBillingAddress) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

// The country in which a customer lives.
func (o ProfileBillingAddressPtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileBillingAddress) *string {
		if v == nil {
			return nil
		}
		return v.Country
	}).(pulumi.StringPtrOutput)
}

// The county in which a customer lives.
func (o ProfileBillingAddressPtrOutput) County() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileBillingAddress) *string {
		if v == nil {
			return nil
		}
		return v.County
	}).(pulumi.StringPtrOutput)
}

// The postal code of a customer address.
func (o ProfileBillingAddressPtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileBillingAddress) *string {
		if v == nil {
			return nil
		}
		return v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// The province in which a customer lives.
func (o ProfileBillingAddressPtrOutput) Province() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileBillingAddress) *string {
		if v == nil {
			return nil
		}
		return v.Province
	}).(pulumi.StringPtrOutput)
}

// The state in which a customer lives.
func (o ProfileBillingAddressPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileBillingAddress) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

type ProfileMailingAddress struct {
	// The first line of a customer address.
	Address1 *string `pulumi:"address1"`
	// The second line of a customer address.
	Address2 *string `pulumi:"address2"`
	// The third line of a customer address.
	Address3 *string `pulumi:"address3"`
	// The fourth line of a customer address.
	Address4 *string `pulumi:"address4"`
	// The city in which a customer lives.
	City *string `pulumi:"city"`
	// The country in which a customer lives.
	Country *string `pulumi:"country"`
	// The county in which a customer lives.
	County *string `pulumi:"county"`
	// The postal code of a customer address.
	PostalCode *string `pulumi:"postalCode"`
	// The province in which a customer lives.
	Province *string `pulumi:"province"`
	// The state in which a customer lives.
	State *string `pulumi:"state"`
}

// ProfileMailingAddressInput is an input type that accepts ProfileMailingAddressArgs and ProfileMailingAddressOutput values.
// You can construct a concrete instance of `ProfileMailingAddressInput` via:
//
//	ProfileMailingAddressArgs{...}
type ProfileMailingAddressInput interface {
	pulumi.Input

	ToProfileMailingAddressOutput() ProfileMailingAddressOutput
	ToProfileMailingAddressOutputWithContext(context.Context) ProfileMailingAddressOutput
}

type ProfileMailingAddressArgs struct {
	// The first line of a customer address.
	Address1 pulumi.StringPtrInput `pulumi:"address1"`
	// The second line of a customer address.
	Address2 pulumi.StringPtrInput `pulumi:"address2"`
	// The third line of a customer address.
	Address3 pulumi.StringPtrInput `pulumi:"address3"`
	// The fourth line of a customer address.
	Address4 pulumi.StringPtrInput `pulumi:"address4"`
	// The city in which a customer lives.
	City pulumi.StringPtrInput `pulumi:"city"`
	// The country in which a customer lives.
	Country pulumi.StringPtrInput `pulumi:"country"`
	// The county in which a customer lives.
	County pulumi.StringPtrInput `pulumi:"county"`
	// The postal code of a customer address.
	PostalCode pulumi.StringPtrInput `pulumi:"postalCode"`
	// The province in which a customer lives.
	Province pulumi.StringPtrInput `pulumi:"province"`
	// The state in which a customer lives.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (ProfileMailingAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileMailingAddress)(nil)).Elem()
}

func (i ProfileMailingAddressArgs) ToProfileMailingAddressOutput() ProfileMailingAddressOutput {
	return i.ToProfileMailingAddressOutputWithContext(context.Background())
}

func (i ProfileMailingAddressArgs) ToProfileMailingAddressOutputWithContext(ctx context.Context) ProfileMailingAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileMailingAddressOutput)
}

func (i ProfileMailingAddressArgs) ToProfileMailingAddressPtrOutput() ProfileMailingAddressPtrOutput {
	return i.ToProfileMailingAddressPtrOutputWithContext(context.Background())
}

func (i ProfileMailingAddressArgs) ToProfileMailingAddressPtrOutputWithContext(ctx context.Context) ProfileMailingAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileMailingAddressOutput).ToProfileMailingAddressPtrOutputWithContext(ctx)
}

// ProfileMailingAddressPtrInput is an input type that accepts ProfileMailingAddressArgs, ProfileMailingAddressPtr and ProfileMailingAddressPtrOutput values.
// You can construct a concrete instance of `ProfileMailingAddressPtrInput` via:
//
//	        ProfileMailingAddressArgs{...}
//
//	or:
//
//	        nil
type ProfileMailingAddressPtrInput interface {
	pulumi.Input

	ToProfileMailingAddressPtrOutput() ProfileMailingAddressPtrOutput
	ToProfileMailingAddressPtrOutputWithContext(context.Context) ProfileMailingAddressPtrOutput
}

type profileMailingAddressPtrType ProfileMailingAddressArgs

func ProfileMailingAddressPtr(v *ProfileMailingAddressArgs) ProfileMailingAddressPtrInput {
	return (*profileMailingAddressPtrType)(v)
}

func (*profileMailingAddressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileMailingAddress)(nil)).Elem()
}

func (i *profileMailingAddressPtrType) ToProfileMailingAddressPtrOutput() ProfileMailingAddressPtrOutput {
	return i.ToProfileMailingAddressPtrOutputWithContext(context.Background())
}

func (i *profileMailingAddressPtrType) ToProfileMailingAddressPtrOutputWithContext(ctx context.Context) ProfileMailingAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileMailingAddressPtrOutput)
}

type ProfileMailingAddressOutput struct{ *pulumi.OutputState }

func (ProfileMailingAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileMailingAddress)(nil)).Elem()
}

func (o ProfileMailingAddressOutput) ToProfileMailingAddressOutput() ProfileMailingAddressOutput {
	return o
}

func (o ProfileMailingAddressOutput) ToProfileMailingAddressOutputWithContext(ctx context.Context) ProfileMailingAddressOutput {
	return o
}

func (o ProfileMailingAddressOutput) ToProfileMailingAddressPtrOutput() ProfileMailingAddressPtrOutput {
	return o.ToProfileMailingAddressPtrOutputWithContext(context.Background())
}

func (o ProfileMailingAddressOutput) ToProfileMailingAddressPtrOutputWithContext(ctx context.Context) ProfileMailingAddressPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileMailingAddress) *ProfileMailingAddress {
		return &v
	}).(ProfileMailingAddressPtrOutput)
}

// The first line of a customer address.
func (o ProfileMailingAddressOutput) Address1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileMailingAddress) *string { return v.Address1 }).(pulumi.StringPtrOutput)
}

// The second line of a customer address.
func (o ProfileMailingAddressOutput) Address2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileMailingAddress) *string { return v.Address2 }).(pulumi.StringPtrOutput)
}

// The third line of a customer address.
func (o ProfileMailingAddressOutput) Address3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileMailingAddress) *string { return v.Address3 }).(pulumi.StringPtrOutput)
}

// The fourth line of a customer address.
func (o ProfileMailingAddressOutput) Address4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileMailingAddress) *string { return v.Address4 }).(pulumi.StringPtrOutput)
}

// The city in which a customer lives.
func (o ProfileMailingAddressOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileMailingAddress) *string { return v.City }).(pulumi.StringPtrOutput)
}

// The country in which a customer lives.
func (o ProfileMailingAddressOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileMailingAddress) *string { return v.Country }).(pulumi.StringPtrOutput)
}

// The county in which a customer lives.
func (o ProfileMailingAddressOutput) County() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileMailingAddress) *string { return v.County }).(pulumi.StringPtrOutput)
}

// The postal code of a customer address.
func (o ProfileMailingAddressOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileMailingAddress) *string { return v.PostalCode }).(pulumi.StringPtrOutput)
}

// The province in which a customer lives.
func (o ProfileMailingAddressOutput) Province() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileMailingAddress) *string { return v.Province }).(pulumi.StringPtrOutput)
}

// The state in which a customer lives.
func (o ProfileMailingAddressOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileMailingAddress) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ProfileMailingAddressPtrOutput struct{ *pulumi.OutputState }

func (ProfileMailingAddressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileMailingAddress)(nil)).Elem()
}

func (o ProfileMailingAddressPtrOutput) ToProfileMailingAddressPtrOutput() ProfileMailingAddressPtrOutput {
	return o
}

func (o ProfileMailingAddressPtrOutput) ToProfileMailingAddressPtrOutputWithContext(ctx context.Context) ProfileMailingAddressPtrOutput {
	return o
}

func (o ProfileMailingAddressPtrOutput) Elem() ProfileMailingAddressOutput {
	return o.ApplyT(func(v *ProfileMailingAddress) ProfileMailingAddress {
		if v != nil {
			return *v
		}
		var ret ProfileMailingAddress
		return ret
	}).(ProfileMailingAddressOutput)
}

// The first line of a customer address.
func (o ProfileMailingAddressPtrOutput) Address1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileMailingAddress) *string {
		if v == nil {
			return nil
		}
		return v.Address1
	}).(pulumi.StringPtrOutput)
}

// The second line of a customer address.
func (o ProfileMailingAddressPtrOutput) Address2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileMailingAddress) *string {
		if v == nil {
			return nil
		}
		return v.Address2
	}).(pulumi.StringPtrOutput)
}

// The third line of a customer address.
func (o ProfileMailingAddressPtrOutput) Address3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileMailingAddress) *string {
		if v == nil {
			return nil
		}
		return v.Address3
	}).(pulumi.StringPtrOutput)
}

// The fourth line of a customer address.
func (o ProfileMailingAddressPtrOutput) Address4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileMailingAddress) *string {
		if v == nil {
			return nil
		}
		return v.Address4
	}).(pulumi.StringPtrOutput)
}

// The city in which a customer lives.
func (o ProfileMailingAddressPtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileMailingAddress) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

// The country in which a customer lives.
func (o ProfileMailingAddressPtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileMailingAddress) *string {
		if v == nil {
			return nil
		}
		return v.Country
	}).(pulumi.StringPtrOutput)
}

// The county in which a customer lives.
func (o ProfileMailingAddressPtrOutput) County() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileMailingAddress) *string {
		if v == nil {
			return nil
		}
		return v.County
	}).(pulumi.StringPtrOutput)
}

// The postal code of a customer address.
func (o ProfileMailingAddressPtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileMailingAddress) *string {
		if v == nil {
			return nil
		}
		return v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// The province in which a customer lives.
func (o ProfileMailingAddressPtrOutput) Province() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileMailingAddress) *string {
		if v == nil {
			return nil
		}
		return v.Province
	}).(pulumi.StringPtrOutput)
}

// The state in which a customer lives.
func (o ProfileMailingAddressPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileMailingAddress) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

type ProfileShippingAddress struct {
	// The first line of a customer address.
	Address1 *string `pulumi:"address1"`
	// The second line of a customer address.
	Address2 *string `pulumi:"address2"`
	// The third line of a customer address.
	Address3 *string `pulumi:"address3"`
	// The fourth line of a customer address.
	Address4 *string `pulumi:"address4"`
	// The city in which a customer lives.
	City *string `pulumi:"city"`
	// The country in which a customer lives.
	Country *string `pulumi:"country"`
	// The county in which a customer lives.
	County *string `pulumi:"county"`
	// The postal code of a customer address.
	PostalCode *string `pulumi:"postalCode"`
	// The province in which a customer lives.
	Province *string `pulumi:"province"`
	// The state in which a customer lives.
	State *string `pulumi:"state"`
}

// ProfileShippingAddressInput is an input type that accepts ProfileShippingAddressArgs and ProfileShippingAddressOutput values.
// You can construct a concrete instance of `ProfileShippingAddressInput` via:
//
//	ProfileShippingAddressArgs{...}
type ProfileShippingAddressInput interface {
	pulumi.Input

	ToProfileShippingAddressOutput() ProfileShippingAddressOutput
	ToProfileShippingAddressOutputWithContext(context.Context) ProfileShippingAddressOutput
}

type ProfileShippingAddressArgs struct {
	// The first line of a customer address.
	Address1 pulumi.StringPtrInput `pulumi:"address1"`
	// The second line of a customer address.
	Address2 pulumi.StringPtrInput `pulumi:"address2"`
	// The third line of a customer address.
	Address3 pulumi.StringPtrInput `pulumi:"address3"`
	// The fourth line of a customer address.
	Address4 pulumi.StringPtrInput `pulumi:"address4"`
	// The city in which a customer lives.
	City pulumi.StringPtrInput `pulumi:"city"`
	// The country in which a customer lives.
	Country pulumi.StringPtrInput `pulumi:"country"`
	// The county in which a customer lives.
	County pulumi.StringPtrInput `pulumi:"county"`
	// The postal code of a customer address.
	PostalCode pulumi.StringPtrInput `pulumi:"postalCode"`
	// The province in which a customer lives.
	Province pulumi.StringPtrInput `pulumi:"province"`
	// The state in which a customer lives.
	State pulumi.StringPtrInput `pulumi:"state"`
}

func (ProfileShippingAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileShippingAddress)(nil)).Elem()
}

func (i ProfileShippingAddressArgs) ToProfileShippingAddressOutput() ProfileShippingAddressOutput {
	return i.ToProfileShippingAddressOutputWithContext(context.Background())
}

func (i ProfileShippingAddressArgs) ToProfileShippingAddressOutputWithContext(ctx context.Context) ProfileShippingAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileShippingAddressOutput)
}

func (i ProfileShippingAddressArgs) ToProfileShippingAddressPtrOutput() ProfileShippingAddressPtrOutput {
	return i.ToProfileShippingAddressPtrOutputWithContext(context.Background())
}

func (i ProfileShippingAddressArgs) ToProfileShippingAddressPtrOutputWithContext(ctx context.Context) ProfileShippingAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileShippingAddressOutput).ToProfileShippingAddressPtrOutputWithContext(ctx)
}

// ProfileShippingAddressPtrInput is an input type that accepts ProfileShippingAddressArgs, ProfileShippingAddressPtr and ProfileShippingAddressPtrOutput values.
// You can construct a concrete instance of `ProfileShippingAddressPtrInput` via:
//
//	        ProfileShippingAddressArgs{...}
//
//	or:
//
//	        nil
type ProfileShippingAddressPtrInput interface {
	pulumi.Input

	ToProfileShippingAddressPtrOutput() ProfileShippingAddressPtrOutput
	ToProfileShippingAddressPtrOutputWithContext(context.Context) ProfileShippingAddressPtrOutput
}

type profileShippingAddressPtrType ProfileShippingAddressArgs

func ProfileShippingAddressPtr(v *ProfileShippingAddressArgs) ProfileShippingAddressPtrInput {
	return (*profileShippingAddressPtrType)(v)
}

func (*profileShippingAddressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileShippingAddress)(nil)).Elem()
}

func (i *profileShippingAddressPtrType) ToProfileShippingAddressPtrOutput() ProfileShippingAddressPtrOutput {
	return i.ToProfileShippingAddressPtrOutputWithContext(context.Background())
}

func (i *profileShippingAddressPtrType) ToProfileShippingAddressPtrOutputWithContext(ctx context.Context) ProfileShippingAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileShippingAddressPtrOutput)
}

type ProfileShippingAddressOutput struct{ *pulumi.OutputState }

func (ProfileShippingAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProfileShippingAddress)(nil)).Elem()
}

func (o ProfileShippingAddressOutput) ToProfileShippingAddressOutput() ProfileShippingAddressOutput {
	return o
}

func (o ProfileShippingAddressOutput) ToProfileShippingAddressOutputWithContext(ctx context.Context) ProfileShippingAddressOutput {
	return o
}

func (o ProfileShippingAddressOutput) ToProfileShippingAddressPtrOutput() ProfileShippingAddressPtrOutput {
	return o.ToProfileShippingAddressPtrOutputWithContext(context.Background())
}

func (o ProfileShippingAddressOutput) ToProfileShippingAddressPtrOutputWithContext(ctx context.Context) ProfileShippingAddressPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProfileShippingAddress) *ProfileShippingAddress {
		return &v
	}).(ProfileShippingAddressPtrOutput)
}

// The first line of a customer address.
func (o ProfileShippingAddressOutput) Address1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileShippingAddress) *string { return v.Address1 }).(pulumi.StringPtrOutput)
}

// The second line of a customer address.
func (o ProfileShippingAddressOutput) Address2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileShippingAddress) *string { return v.Address2 }).(pulumi.StringPtrOutput)
}

// The third line of a customer address.
func (o ProfileShippingAddressOutput) Address3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileShippingAddress) *string { return v.Address3 }).(pulumi.StringPtrOutput)
}

// The fourth line of a customer address.
func (o ProfileShippingAddressOutput) Address4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileShippingAddress) *string { return v.Address4 }).(pulumi.StringPtrOutput)
}

// The city in which a customer lives.
func (o ProfileShippingAddressOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileShippingAddress) *string { return v.City }).(pulumi.StringPtrOutput)
}

// The country in which a customer lives.
func (o ProfileShippingAddressOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileShippingAddress) *string { return v.Country }).(pulumi.StringPtrOutput)
}

// The county in which a customer lives.
func (o ProfileShippingAddressOutput) County() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileShippingAddress) *string { return v.County }).(pulumi.StringPtrOutput)
}

// The postal code of a customer address.
func (o ProfileShippingAddressOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileShippingAddress) *string { return v.PostalCode }).(pulumi.StringPtrOutput)
}

// The province in which a customer lives.
func (o ProfileShippingAddressOutput) Province() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileShippingAddress) *string { return v.Province }).(pulumi.StringPtrOutput)
}

// The state in which a customer lives.
func (o ProfileShippingAddressOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProfileShippingAddress) *string { return v.State }).(pulumi.StringPtrOutput)
}

type ProfileShippingAddressPtrOutput struct{ *pulumi.OutputState }

func (ProfileShippingAddressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileShippingAddress)(nil)).Elem()
}

func (o ProfileShippingAddressPtrOutput) ToProfileShippingAddressPtrOutput() ProfileShippingAddressPtrOutput {
	return o
}

func (o ProfileShippingAddressPtrOutput) ToProfileShippingAddressPtrOutputWithContext(ctx context.Context) ProfileShippingAddressPtrOutput {
	return o
}

func (o ProfileShippingAddressPtrOutput) Elem() ProfileShippingAddressOutput {
	return o.ApplyT(func(v *ProfileShippingAddress) ProfileShippingAddress {
		if v != nil {
			return *v
		}
		var ret ProfileShippingAddress
		return ret
	}).(ProfileShippingAddressOutput)
}

// The first line of a customer address.
func (o ProfileShippingAddressPtrOutput) Address1() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.Address1
	}).(pulumi.StringPtrOutput)
}

// The second line of a customer address.
func (o ProfileShippingAddressPtrOutput) Address2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.Address2
	}).(pulumi.StringPtrOutput)
}

// The third line of a customer address.
func (o ProfileShippingAddressPtrOutput) Address3() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.Address3
	}).(pulumi.StringPtrOutput)
}

// The fourth line of a customer address.
func (o ProfileShippingAddressPtrOutput) Address4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.Address4
	}).(pulumi.StringPtrOutput)
}

// The city in which a customer lives.
func (o ProfileShippingAddressPtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.City
	}).(pulumi.StringPtrOutput)
}

// The country in which a customer lives.
func (o ProfileShippingAddressPtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.Country
	}).(pulumi.StringPtrOutput)
}

// The county in which a customer lives.
func (o ProfileShippingAddressPtrOutput) County() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.County
	}).(pulumi.StringPtrOutput)
}

// The postal code of a customer address.
func (o ProfileShippingAddressPtrOutput) PostalCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.PostalCode
	}).(pulumi.StringPtrOutput)
}

// The province in which a customer lives.
func (o ProfileShippingAddressPtrOutput) Province() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.Province
	}).(pulumi.StringPtrOutput)
}

// The state in which a customer lives.
func (o ProfileShippingAddressPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProfileShippingAddress) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMatchingInput)(nil)).Elem(), DomainMatchingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMatchingPtrInput)(nil)).Elem(), DomainMatchingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMatchingAutoMergingInput)(nil)).Elem(), DomainMatchingAutoMergingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMatchingAutoMergingPtrInput)(nil)).Elem(), DomainMatchingAutoMergingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMatchingAutoMergingConflictResolutionInput)(nil)).Elem(), DomainMatchingAutoMergingConflictResolutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMatchingAutoMergingConflictResolutionPtrInput)(nil)).Elem(), DomainMatchingAutoMergingConflictResolutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMatchingAutoMergingConsolidationInput)(nil)).Elem(), DomainMatchingAutoMergingConsolidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMatchingAutoMergingConsolidationPtrInput)(nil)).Elem(), DomainMatchingAutoMergingConsolidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMatchingExportingConfigInput)(nil)).Elem(), DomainMatchingExportingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMatchingExportingConfigPtrInput)(nil)).Elem(), DomainMatchingExportingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMatchingExportingConfigS3ExportingInput)(nil)).Elem(), DomainMatchingExportingConfigS3ExportingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMatchingExportingConfigS3ExportingPtrInput)(nil)).Elem(), DomainMatchingExportingConfigS3ExportingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMatchingJobScheduleInput)(nil)).Elem(), DomainMatchingJobScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMatchingJobSchedulePtrInput)(nil)).Elem(), DomainMatchingJobScheduleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRuleBasedMatchingInput)(nil)).Elem(), DomainRuleBasedMatchingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRuleBasedMatchingPtrInput)(nil)).Elem(), DomainRuleBasedMatchingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRuleBasedMatchingAttributeTypesSelectorInput)(nil)).Elem(), DomainRuleBasedMatchingAttributeTypesSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRuleBasedMatchingAttributeTypesSelectorPtrInput)(nil)).Elem(), DomainRuleBasedMatchingAttributeTypesSelectorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRuleBasedMatchingConflictResolutionInput)(nil)).Elem(), DomainRuleBasedMatchingConflictResolutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRuleBasedMatchingConflictResolutionPtrInput)(nil)).Elem(), DomainRuleBasedMatchingConflictResolutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRuleBasedMatchingExportingConfigInput)(nil)).Elem(), DomainRuleBasedMatchingExportingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRuleBasedMatchingExportingConfigPtrInput)(nil)).Elem(), DomainRuleBasedMatchingExportingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRuleBasedMatchingExportingConfigS3ExportingInput)(nil)).Elem(), DomainRuleBasedMatchingExportingConfigS3ExportingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRuleBasedMatchingExportingConfigS3ExportingPtrInput)(nil)).Elem(), DomainRuleBasedMatchingExportingConfigS3ExportingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRuleBasedMatchingMatchingRuleInput)(nil)).Elem(), DomainRuleBasedMatchingMatchingRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainRuleBasedMatchingMatchingRuleArrayInput)(nil)).Elem(), DomainRuleBasedMatchingMatchingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileAddressInput)(nil)).Elem(), ProfileAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileAddressPtrInput)(nil)).Elem(), ProfileAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileBillingAddressInput)(nil)).Elem(), ProfileBillingAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileBillingAddressPtrInput)(nil)).Elem(), ProfileBillingAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileMailingAddressInput)(nil)).Elem(), ProfileMailingAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileMailingAddressPtrInput)(nil)).Elem(), ProfileMailingAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileShippingAddressInput)(nil)).Elem(), ProfileShippingAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileShippingAddressPtrInput)(nil)).Elem(), ProfileShippingAddressArgs{})
	pulumi.RegisterOutputType(DomainMatchingOutput{})
	pulumi.RegisterOutputType(DomainMatchingPtrOutput{})
	pulumi.RegisterOutputType(DomainMatchingAutoMergingOutput{})
	pulumi.RegisterOutputType(DomainMatchingAutoMergingPtrOutput{})
	pulumi.RegisterOutputType(DomainMatchingAutoMergingConflictResolutionOutput{})
	pulumi.RegisterOutputType(DomainMatchingAutoMergingConflictResolutionPtrOutput{})
	pulumi.RegisterOutputType(DomainMatchingAutoMergingConsolidationOutput{})
	pulumi.RegisterOutputType(DomainMatchingAutoMergingConsolidationPtrOutput{})
	pulumi.RegisterOutputType(DomainMatchingExportingConfigOutput{})
	pulumi.RegisterOutputType(DomainMatchingExportingConfigPtrOutput{})
	pulumi.RegisterOutputType(DomainMatchingExportingConfigS3ExportingOutput{})
	pulumi.RegisterOutputType(DomainMatchingExportingConfigS3ExportingPtrOutput{})
	pulumi.RegisterOutputType(DomainMatchingJobScheduleOutput{})
	pulumi.RegisterOutputType(DomainMatchingJobSchedulePtrOutput{})
	pulumi.RegisterOutputType(DomainRuleBasedMatchingOutput{})
	pulumi.RegisterOutputType(DomainRuleBasedMatchingPtrOutput{})
	pulumi.RegisterOutputType(DomainRuleBasedMatchingAttributeTypesSelectorOutput{})
	pulumi.RegisterOutputType(DomainRuleBasedMatchingAttributeTypesSelectorPtrOutput{})
	pulumi.RegisterOutputType(DomainRuleBasedMatchingConflictResolutionOutput{})
	pulumi.RegisterOutputType(DomainRuleBasedMatchingConflictResolutionPtrOutput{})
	pulumi.RegisterOutputType(DomainRuleBasedMatchingExportingConfigOutput{})
	pulumi.RegisterOutputType(DomainRuleBasedMatchingExportingConfigPtrOutput{})
	pulumi.RegisterOutputType(DomainRuleBasedMatchingExportingConfigS3ExportingOutput{})
	pulumi.RegisterOutputType(DomainRuleBasedMatchingExportingConfigS3ExportingPtrOutput{})
	pulumi.RegisterOutputType(DomainRuleBasedMatchingMatchingRuleOutput{})
	pulumi.RegisterOutputType(DomainRuleBasedMatchingMatchingRuleArrayOutput{})
	pulumi.RegisterOutputType(ProfileAddressOutput{})
	pulumi.RegisterOutputType(ProfileAddressPtrOutput{})
	pulumi.RegisterOutputType(ProfileBillingAddressOutput{})
	pulumi.RegisterOutputType(ProfileBillingAddressPtrOutput{})
	pulumi.RegisterOutputType(ProfileMailingAddressOutput{})
	pulumi.RegisterOutputType(ProfileMailingAddressPtrOutput{})
	pulumi.RegisterOutputType(ProfileShippingAddressOutput{})
	pulumi.RegisterOutputType(ProfileShippingAddressPtrOutput{})
}
