// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an AWS Network Firewall Firewall Transit Gateway Attachment Accepter.
//
// When a cross-account (requester's AWS account differs from the accepter's AWS account) requester creates a Network Firewall with Transit Gateway ID using `networkfirewall.Firewall`. Then an EC2 Transit Gateway VPC Attachment resource is automatically created in the accepter's account.
// The accepter can use the `networkfirewall.FirewallTransitGatewayAttachmentAccepter` resource to "adopt" its side of the connection into management.
//
// > **NOTE:** If the `transitGatewayId` argument in the `networkfirewall.Firewall` resource is used to attach a firewall to a transit gateway in a cross-account setup (where **Auto accept shared attachments** is disabled), the resource will be considered created when the transit gateway attachment is in the *Pending Acceptance* state and the firewall is in the *Provisioning* status. At this point, you can use the `networkfirewall.FirewallTransitGatewayAttachmentAccepter` resource to finalize the network firewall deployment. Once the transit gateway attachment reaches the *Available* state, the firewall status *Ready*.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/networkfirewall"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := networkfirewall.NewFirewallTransitGatewayAttachmentAccepter(ctx, "example", &networkfirewall.FirewallTransitGatewayAttachmentAccepterArgs{
//				TransitGatewayAttachmentId: pulumi.Any(exampleAwsNetworkfirewallFirewall.FirewallStatus[0].TransitGatewayAttachmentSyncState[0].AttachmentId),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// A full example of how to create a Transit Gateway in one AWS account, share it with a second AWS account, and create Network Firewall in the second account to the Transit Gateway via the `networkfirewall.Firewall` and `networkfirewall.FirewallTransitGatewayAttachmentAccepter` resources can be found in the `./examples/network-firewall-cross-account-transit-gateway` directory within the Github Repository
//
// ## Import
//
// Using `pulumi import`, import Network Firewall Firewall Transit Gateway Attachment Accepter using the `transit_gateway_attachment_id`. For example:
//
// ```sh
// $ pulumi import aws:networkfirewall/firewallTransitGatewayAttachmentAccepter:FirewallTransitGatewayAttachmentAccepter example tgw-attach-0c3b7e9570eee089c
// ```
type FirewallTransitGatewayAttachmentAccepter struct {
	pulumi.CustomResourceState

	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region   pulumi.StringOutput                                       `pulumi:"region"`
	Timeouts FirewallTransitGatewayAttachmentAccepterTimeoutsPtrOutput `pulumi:"timeouts"`
	// The unique identifier of the transit gateway attachment to accept. This ID is returned in the response when creating a transit gateway-attached firewall.
	TransitGatewayAttachmentId pulumi.StringOutput `pulumi:"transitGatewayAttachmentId"`
}

// NewFirewallTransitGatewayAttachmentAccepter registers a new resource with the given unique name, arguments, and options.
func NewFirewallTransitGatewayAttachmentAccepter(ctx *pulumi.Context,
	name string, args *FirewallTransitGatewayAttachmentAccepterArgs, opts ...pulumi.ResourceOption) (*FirewallTransitGatewayAttachmentAccepter, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.TransitGatewayAttachmentId == nil {
		return nil, errors.New("invalid value for required argument 'TransitGatewayAttachmentId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FirewallTransitGatewayAttachmentAccepter
	err := ctx.RegisterResource("aws:networkfirewall/firewallTransitGatewayAttachmentAccepter:FirewallTransitGatewayAttachmentAccepter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFirewallTransitGatewayAttachmentAccepter gets an existing FirewallTransitGatewayAttachmentAccepter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewallTransitGatewayAttachmentAccepter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FirewallTransitGatewayAttachmentAccepterState, opts ...pulumi.ResourceOption) (*FirewallTransitGatewayAttachmentAccepter, error) {
	var resource FirewallTransitGatewayAttachmentAccepter
	err := ctx.ReadResource("aws:networkfirewall/firewallTransitGatewayAttachmentAccepter:FirewallTransitGatewayAttachmentAccepter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FirewallTransitGatewayAttachmentAccepter resources.
type firewallTransitGatewayAttachmentAccepterState struct {
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region   *string                                           `pulumi:"region"`
	Timeouts *FirewallTransitGatewayAttachmentAccepterTimeouts `pulumi:"timeouts"`
	// The unique identifier of the transit gateway attachment to accept. This ID is returned in the response when creating a transit gateway-attached firewall.
	TransitGatewayAttachmentId *string `pulumi:"transitGatewayAttachmentId"`
}

type FirewallTransitGatewayAttachmentAccepterState struct {
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region   pulumi.StringPtrInput
	Timeouts FirewallTransitGatewayAttachmentAccepterTimeoutsPtrInput
	// The unique identifier of the transit gateway attachment to accept. This ID is returned in the response when creating a transit gateway-attached firewall.
	TransitGatewayAttachmentId pulumi.StringPtrInput
}

func (FirewallTransitGatewayAttachmentAccepterState) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallTransitGatewayAttachmentAccepterState)(nil)).Elem()
}

type firewallTransitGatewayAttachmentAccepterArgs struct {
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region   *string                                           `pulumi:"region"`
	Timeouts *FirewallTransitGatewayAttachmentAccepterTimeouts `pulumi:"timeouts"`
	// The unique identifier of the transit gateway attachment to accept. This ID is returned in the response when creating a transit gateway-attached firewall.
	TransitGatewayAttachmentId string `pulumi:"transitGatewayAttachmentId"`
}

// The set of arguments for constructing a FirewallTransitGatewayAttachmentAccepter resource.
type FirewallTransitGatewayAttachmentAccepterArgs struct {
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region   pulumi.StringPtrInput
	Timeouts FirewallTransitGatewayAttachmentAccepterTimeoutsPtrInput
	// The unique identifier of the transit gateway attachment to accept. This ID is returned in the response when creating a transit gateway-attached firewall.
	TransitGatewayAttachmentId pulumi.StringInput
}

func (FirewallTransitGatewayAttachmentAccepterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*firewallTransitGatewayAttachmentAccepterArgs)(nil)).Elem()
}

type FirewallTransitGatewayAttachmentAccepterInput interface {
	pulumi.Input

	ToFirewallTransitGatewayAttachmentAccepterOutput() FirewallTransitGatewayAttachmentAccepterOutput
	ToFirewallTransitGatewayAttachmentAccepterOutputWithContext(ctx context.Context) FirewallTransitGatewayAttachmentAccepterOutput
}

func (*FirewallTransitGatewayAttachmentAccepter) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallTransitGatewayAttachmentAccepter)(nil)).Elem()
}

func (i *FirewallTransitGatewayAttachmentAccepter) ToFirewallTransitGatewayAttachmentAccepterOutput() FirewallTransitGatewayAttachmentAccepterOutput {
	return i.ToFirewallTransitGatewayAttachmentAccepterOutputWithContext(context.Background())
}

func (i *FirewallTransitGatewayAttachmentAccepter) ToFirewallTransitGatewayAttachmentAccepterOutputWithContext(ctx context.Context) FirewallTransitGatewayAttachmentAccepterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallTransitGatewayAttachmentAccepterOutput)
}

// FirewallTransitGatewayAttachmentAccepterArrayInput is an input type that accepts FirewallTransitGatewayAttachmentAccepterArray and FirewallTransitGatewayAttachmentAccepterArrayOutput values.
// You can construct a concrete instance of `FirewallTransitGatewayAttachmentAccepterArrayInput` via:
//
//	FirewallTransitGatewayAttachmentAccepterArray{ FirewallTransitGatewayAttachmentAccepterArgs{...} }
type FirewallTransitGatewayAttachmentAccepterArrayInput interface {
	pulumi.Input

	ToFirewallTransitGatewayAttachmentAccepterArrayOutput() FirewallTransitGatewayAttachmentAccepterArrayOutput
	ToFirewallTransitGatewayAttachmentAccepterArrayOutputWithContext(context.Context) FirewallTransitGatewayAttachmentAccepterArrayOutput
}

type FirewallTransitGatewayAttachmentAccepterArray []FirewallTransitGatewayAttachmentAccepterInput

func (FirewallTransitGatewayAttachmentAccepterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallTransitGatewayAttachmentAccepter)(nil)).Elem()
}

func (i FirewallTransitGatewayAttachmentAccepterArray) ToFirewallTransitGatewayAttachmentAccepterArrayOutput() FirewallTransitGatewayAttachmentAccepterArrayOutput {
	return i.ToFirewallTransitGatewayAttachmentAccepterArrayOutputWithContext(context.Background())
}

func (i FirewallTransitGatewayAttachmentAccepterArray) ToFirewallTransitGatewayAttachmentAccepterArrayOutputWithContext(ctx context.Context) FirewallTransitGatewayAttachmentAccepterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallTransitGatewayAttachmentAccepterArrayOutput)
}

// FirewallTransitGatewayAttachmentAccepterMapInput is an input type that accepts FirewallTransitGatewayAttachmentAccepterMap and FirewallTransitGatewayAttachmentAccepterMapOutput values.
// You can construct a concrete instance of `FirewallTransitGatewayAttachmentAccepterMapInput` via:
//
//	FirewallTransitGatewayAttachmentAccepterMap{ "key": FirewallTransitGatewayAttachmentAccepterArgs{...} }
type FirewallTransitGatewayAttachmentAccepterMapInput interface {
	pulumi.Input

	ToFirewallTransitGatewayAttachmentAccepterMapOutput() FirewallTransitGatewayAttachmentAccepterMapOutput
	ToFirewallTransitGatewayAttachmentAccepterMapOutputWithContext(context.Context) FirewallTransitGatewayAttachmentAccepterMapOutput
}

type FirewallTransitGatewayAttachmentAccepterMap map[string]FirewallTransitGatewayAttachmentAccepterInput

func (FirewallTransitGatewayAttachmentAccepterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallTransitGatewayAttachmentAccepter)(nil)).Elem()
}

func (i FirewallTransitGatewayAttachmentAccepterMap) ToFirewallTransitGatewayAttachmentAccepterMapOutput() FirewallTransitGatewayAttachmentAccepterMapOutput {
	return i.ToFirewallTransitGatewayAttachmentAccepterMapOutputWithContext(context.Background())
}

func (i FirewallTransitGatewayAttachmentAccepterMap) ToFirewallTransitGatewayAttachmentAccepterMapOutputWithContext(ctx context.Context) FirewallTransitGatewayAttachmentAccepterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallTransitGatewayAttachmentAccepterMapOutput)
}

type FirewallTransitGatewayAttachmentAccepterOutput struct{ *pulumi.OutputState }

func (FirewallTransitGatewayAttachmentAccepterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FirewallTransitGatewayAttachmentAccepter)(nil)).Elem()
}

func (o FirewallTransitGatewayAttachmentAccepterOutput) ToFirewallTransitGatewayAttachmentAccepterOutput() FirewallTransitGatewayAttachmentAccepterOutput {
	return o
}

func (o FirewallTransitGatewayAttachmentAccepterOutput) ToFirewallTransitGatewayAttachmentAccepterOutputWithContext(ctx context.Context) FirewallTransitGatewayAttachmentAccepterOutput {
	return o
}

// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
func (o FirewallTransitGatewayAttachmentAccepterOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallTransitGatewayAttachmentAccepter) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o FirewallTransitGatewayAttachmentAccepterOutput) Timeouts() FirewallTransitGatewayAttachmentAccepterTimeoutsPtrOutput {
	return o.ApplyT(func(v *FirewallTransitGatewayAttachmentAccepter) FirewallTransitGatewayAttachmentAccepterTimeoutsPtrOutput {
		return v.Timeouts
	}).(FirewallTransitGatewayAttachmentAccepterTimeoutsPtrOutput)
}

// The unique identifier of the transit gateway attachment to accept. This ID is returned in the response when creating a transit gateway-attached firewall.
func (o FirewallTransitGatewayAttachmentAccepterOutput) TransitGatewayAttachmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *FirewallTransitGatewayAttachmentAccepter) pulumi.StringOutput {
		return v.TransitGatewayAttachmentId
	}).(pulumi.StringOutput)
}

type FirewallTransitGatewayAttachmentAccepterArrayOutput struct{ *pulumi.OutputState }

func (FirewallTransitGatewayAttachmentAccepterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FirewallTransitGatewayAttachmentAccepter)(nil)).Elem()
}

func (o FirewallTransitGatewayAttachmentAccepterArrayOutput) ToFirewallTransitGatewayAttachmentAccepterArrayOutput() FirewallTransitGatewayAttachmentAccepterArrayOutput {
	return o
}

func (o FirewallTransitGatewayAttachmentAccepterArrayOutput) ToFirewallTransitGatewayAttachmentAccepterArrayOutputWithContext(ctx context.Context) FirewallTransitGatewayAttachmentAccepterArrayOutput {
	return o
}

func (o FirewallTransitGatewayAttachmentAccepterArrayOutput) Index(i pulumi.IntInput) FirewallTransitGatewayAttachmentAccepterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FirewallTransitGatewayAttachmentAccepter {
		return vs[0].([]*FirewallTransitGatewayAttachmentAccepter)[vs[1].(int)]
	}).(FirewallTransitGatewayAttachmentAccepterOutput)
}

type FirewallTransitGatewayAttachmentAccepterMapOutput struct{ *pulumi.OutputState }

func (FirewallTransitGatewayAttachmentAccepterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FirewallTransitGatewayAttachmentAccepter)(nil)).Elem()
}

func (o FirewallTransitGatewayAttachmentAccepterMapOutput) ToFirewallTransitGatewayAttachmentAccepterMapOutput() FirewallTransitGatewayAttachmentAccepterMapOutput {
	return o
}

func (o FirewallTransitGatewayAttachmentAccepterMapOutput) ToFirewallTransitGatewayAttachmentAccepterMapOutputWithContext(ctx context.Context) FirewallTransitGatewayAttachmentAccepterMapOutput {
	return o
}

func (o FirewallTransitGatewayAttachmentAccepterMapOutput) MapIndex(k pulumi.StringInput) FirewallTransitGatewayAttachmentAccepterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FirewallTransitGatewayAttachmentAccepter {
		return vs[0].(map[string]*FirewallTransitGatewayAttachmentAccepter)[vs[1].(string)]
	}).(FirewallTransitGatewayAttachmentAccepterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallTransitGatewayAttachmentAccepterInput)(nil)).Elem(), &FirewallTransitGatewayAttachmentAccepter{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallTransitGatewayAttachmentAccepterArrayInput)(nil)).Elem(), FirewallTransitGatewayAttachmentAccepterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallTransitGatewayAttachmentAccepterMapInput)(nil)).Elem(), FirewallTransitGatewayAttachmentAccepterMap{})
	pulumi.RegisterOutputType(FirewallTransitGatewayAttachmentAccepterOutput{})
	pulumi.RegisterOutputType(FirewallTransitGatewayAttachmentAccepterArrayOutput{})
	pulumi.RegisterOutputType(FirewallTransitGatewayAttachmentAccepterMapOutput{})
}
