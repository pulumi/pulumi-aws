// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides an AWS Network Firewall Logging Configuration Resource
//
// ## Example Usage
// ### Logging to S3
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v3/go/aws/networkfirewall"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := networkfirewall.NewLoggingConfiguration(ctx, "example", &networkfirewall.LoggingConfigurationArgs{
// 			FirewallArn: pulumi.Any(aws_networkfirewall_firewall.Example.Arn),
// 			LoggingConfiguration: &networkfirewall.LoggingConfigurationLoggingConfigurationArgs{
// 				LogDestinationConfigs: networkfirewall.LoggingConfigurationLoggingConfigurationLogDestinationConfigArray{
// 					&networkfirewall.LoggingConfigurationLoggingConfigurationLogDestinationConfigArgs{
// 						LogDestination: pulumi.StringMap{
// 							"bucketName": pulumi.Any(aws_s3_bucket.Example.Bucket),
// 							"prefix":     pulumi.String("/example"),
// 						},
// 						LogDestinationType: pulumi.String("S3"),
// 						LogType:            pulumi.String("FLOW"),
// 					},
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ### Logging to CloudWatch
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v3/go/aws/networkfirewall"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := networkfirewall.NewLoggingConfiguration(ctx, "example", &networkfirewall.LoggingConfigurationArgs{
// 			FirewallArn: pulumi.Any(aws_networkfirewall_firewall.Example.Arn),
// 			LoggingConfiguration: &networkfirewall.LoggingConfigurationLoggingConfigurationArgs{
// 				LogDestinationConfigs: networkfirewall.LoggingConfigurationLoggingConfigurationLogDestinationConfigArray{
// 					&networkfirewall.LoggingConfigurationLoggingConfigurationLogDestinationConfigArgs{
// 						LogDestination: pulumi.StringMap{
// 							"logGroup": pulumi.Any(aws_cloudwatch_log_group.Example.Name),
// 						},
// 						LogDestinationType: pulumi.String("CloudWatchLogs"),
// 						LogType:            pulumi.String("ALERT"),
// 					},
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ### Logging to Kinesis Data Firehose
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v3/go/aws/networkfirewall"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := networkfirewall.NewLoggingConfiguration(ctx, "example", &networkfirewall.LoggingConfigurationArgs{
// 			FirewallArn: pulumi.Any(aws_networkfirewall_firewall.Example.Arn),
// 			LoggingConfiguration: &networkfirewall.LoggingConfigurationLoggingConfigurationArgs{
// 				LogDestinationConfigs: networkfirewall.LoggingConfigurationLoggingConfigurationLogDestinationConfigArray{
// 					&networkfirewall.LoggingConfigurationLoggingConfigurationLogDestinationConfigArgs{
// 						LogDestination: pulumi.StringMap{
// 							"deliveryStream": pulumi.Any(aws_kinesis_firehose_delivery_stream.Example.Name),
// 						},
// 						LogDestinationType: pulumi.String("KinesisDataFirehose"),
// 						LogType:            pulumi.String("ALERT"),
// 					},
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Network Firewall Logging Configurations can be imported using the `firewall_arn` e.g
//
// ```sh
//  $ pulumi import aws:networkfirewall/loggingConfiguration:LoggingConfiguration example arn:aws:network-firewall:us-west-1:123456789012:firewall/example
// ```
type LoggingConfiguration struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) of the Network Firewall firewall.
	FirewallArn pulumi.StringOutput `pulumi:"firewallArn"`
	// A configuration block describing how AWS Network Firewall performs logging for a firewall. See Logging Configuration below for details.
	LoggingConfiguration LoggingConfigurationLoggingConfigurationOutput `pulumi:"loggingConfiguration"`
}

// NewLoggingConfiguration registers a new resource with the given unique name, arguments, and options.
func NewLoggingConfiguration(ctx *pulumi.Context,
	name string, args *LoggingConfigurationArgs, opts ...pulumi.ResourceOption) (*LoggingConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FirewallArn == nil {
		return nil, errors.New("invalid value for required argument 'FirewallArn'")
	}
	if args.LoggingConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'LoggingConfiguration'")
	}
	var resource LoggingConfiguration
	err := ctx.RegisterResource("aws:networkfirewall/loggingConfiguration:LoggingConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLoggingConfiguration gets an existing LoggingConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLoggingConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LoggingConfigurationState, opts ...pulumi.ResourceOption) (*LoggingConfiguration, error) {
	var resource LoggingConfiguration
	err := ctx.ReadResource("aws:networkfirewall/loggingConfiguration:LoggingConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LoggingConfiguration resources.
type loggingConfigurationState struct {
	// The Amazon Resource Name (ARN) of the Network Firewall firewall.
	FirewallArn *string `pulumi:"firewallArn"`
	// A configuration block describing how AWS Network Firewall performs logging for a firewall. See Logging Configuration below for details.
	LoggingConfiguration *LoggingConfigurationLoggingConfiguration `pulumi:"loggingConfiguration"`
}

type LoggingConfigurationState struct {
	// The Amazon Resource Name (ARN) of the Network Firewall firewall.
	FirewallArn pulumi.StringPtrInput
	// A configuration block describing how AWS Network Firewall performs logging for a firewall. See Logging Configuration below for details.
	LoggingConfiguration LoggingConfigurationLoggingConfigurationPtrInput
}

func (LoggingConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*loggingConfigurationState)(nil)).Elem()
}

type loggingConfigurationArgs struct {
	// The Amazon Resource Name (ARN) of the Network Firewall firewall.
	FirewallArn string `pulumi:"firewallArn"`
	// A configuration block describing how AWS Network Firewall performs logging for a firewall. See Logging Configuration below for details.
	LoggingConfiguration LoggingConfigurationLoggingConfiguration `pulumi:"loggingConfiguration"`
}

// The set of arguments for constructing a LoggingConfiguration resource.
type LoggingConfigurationArgs struct {
	// The Amazon Resource Name (ARN) of the Network Firewall firewall.
	FirewallArn pulumi.StringInput
	// A configuration block describing how AWS Network Firewall performs logging for a firewall. See Logging Configuration below for details.
	LoggingConfiguration LoggingConfigurationLoggingConfigurationInput
}

func (LoggingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*loggingConfigurationArgs)(nil)).Elem()
}

type LoggingConfigurationInput interface {
	pulumi.Input

	ToLoggingConfigurationOutput() LoggingConfigurationOutput
	ToLoggingConfigurationOutputWithContext(ctx context.Context) LoggingConfigurationOutput
}

func (LoggingConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfiguration)(nil)).Elem()
}

func (i LoggingConfiguration) ToLoggingConfigurationOutput() LoggingConfigurationOutput {
	return i.ToLoggingConfigurationOutputWithContext(context.Background())
}

func (i LoggingConfiguration) ToLoggingConfigurationOutputWithContext(ctx context.Context) LoggingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoggingConfigurationOutput)
}

type LoggingConfigurationOutput struct {
	*pulumi.OutputState
}

func (LoggingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoggingConfigurationOutput)(nil)).Elem()
}

func (o LoggingConfigurationOutput) ToLoggingConfigurationOutput() LoggingConfigurationOutput {
	return o
}

func (o LoggingConfigurationOutput) ToLoggingConfigurationOutputWithContext(ctx context.Context) LoggingConfigurationOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(LoggingConfigurationOutput{})
}
