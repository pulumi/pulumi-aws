// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a firewall endpoint for an AWS Network Firewall firewall.
//
// Use `networkfirewall.VpcEndpointAssociation` to establish new firewall endpoints in any Availability Zone where the firewall is already being used. The first use of a firewall in an Availability Zone must be defined by `networkfirewall.Firewall` resource and `subnetMapping` argument.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/networkfirewall"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := networkfirewall.NewVpcEndpointAssociation(ctx, "example", &networkfirewall.VpcEndpointAssociationArgs{
//				FirewallArn: pulumi.Any(exampleAwsNetworkfirewallFirewall.Arn),
//				VpcId:       pulumi.Any(exampleAwsVpc.Id),
//				SubnetMapping: &networkfirewall.VpcEndpointAssociationSubnetMappingArgs{
//					SubnetId: pulumi.Any(exampleTwo.Id),
//				},
//				Tags: pulumi.StringMap{
//					"Name": pulumi.String("example endpoint"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import Network Firewall VPC Endpoint Association using the `vpc_endpoint_association_arn`. For example:
//
// ```sh
// $ pulumi import aws:networkfirewall/vpcEndpointAssociation:VpcEndpointAssociation example arn:aws:network-firewall:us-west-1:123456789012:vpc-endpoint-association/example
// ```
type VpcEndpointAssociation struct {
	pulumi.CustomResourceState

	// A description of the VPC endpoint association.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The Amazon Resource Name (ARN) that identifies the firewall.
	FirewallArn pulumi.StringOutput `pulumi:"firewallArn"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringOutput `pulumi:"region"`
	// The ID for a subnet that's used in an association with a firewall. See Subnet Mapping below for details.
	SubnetMapping VpcEndpointAssociationSubnetMappingPtrOutput `pulumi:"subnetMapping"`
	// Map of resource tags to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll  pulumi.StringMapOutput                  `pulumi:"tagsAll"`
	Timeouts VpcEndpointAssociationTimeoutsPtrOutput `pulumi:"timeouts"`
	// ARN of the VPC Endpoint Association.
	VpcEndpointAssociationArn pulumi.StringOutput `pulumi:"vpcEndpointAssociationArn"`
	// The unique identifier of the VPC endpoint association.
	VpcEndpointAssociationId pulumi.StringOutput `pulumi:"vpcEndpointAssociationId"`
	// Nested list of information about the current status of the VPC Endpoint Association.
	VpcEndpointAssociationStatuses VpcEndpointAssociationVpcEndpointAssociationStatusArrayOutput `pulumi:"vpcEndpointAssociationStatuses"`
	// The unique identifier of the VPC for the endpoint association.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewVpcEndpointAssociation registers a new resource with the given unique name, arguments, and options.
func NewVpcEndpointAssociation(ctx *pulumi.Context,
	name string, args *VpcEndpointAssociationArgs, opts ...pulumi.ResourceOption) (*VpcEndpointAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FirewallArn == nil {
		return nil, errors.New("invalid value for required argument 'FirewallArn'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource VpcEndpointAssociation
	err := ctx.RegisterResource("aws:networkfirewall/vpcEndpointAssociation:VpcEndpointAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVpcEndpointAssociation gets an existing VpcEndpointAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVpcEndpointAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VpcEndpointAssociationState, opts ...pulumi.ResourceOption) (*VpcEndpointAssociation, error) {
	var resource VpcEndpointAssociation
	err := ctx.ReadResource("aws:networkfirewall/vpcEndpointAssociation:VpcEndpointAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VpcEndpointAssociation resources.
type vpcEndpointAssociationState struct {
	// A description of the VPC endpoint association.
	Description *string `pulumi:"description"`
	// The Amazon Resource Name (ARN) that identifies the firewall.
	FirewallArn *string `pulumi:"firewallArn"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// The ID for a subnet that's used in an association with a firewall. See Subnet Mapping below for details.
	SubnetMapping *VpcEndpointAssociationSubnetMapping `pulumi:"subnetMapping"`
	// Map of resource tags to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll  map[string]string               `pulumi:"tagsAll"`
	Timeouts *VpcEndpointAssociationTimeouts `pulumi:"timeouts"`
	// ARN of the VPC Endpoint Association.
	VpcEndpointAssociationArn *string `pulumi:"vpcEndpointAssociationArn"`
	// The unique identifier of the VPC endpoint association.
	VpcEndpointAssociationId *string `pulumi:"vpcEndpointAssociationId"`
	// Nested list of information about the current status of the VPC Endpoint Association.
	VpcEndpointAssociationStatuses []VpcEndpointAssociationVpcEndpointAssociationStatus `pulumi:"vpcEndpointAssociationStatuses"`
	// The unique identifier of the VPC for the endpoint association.
	VpcId *string `pulumi:"vpcId"`
}

type VpcEndpointAssociationState struct {
	// A description of the VPC endpoint association.
	Description pulumi.StringPtrInput
	// The Amazon Resource Name (ARN) that identifies the firewall.
	FirewallArn pulumi.StringPtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// The ID for a subnet that's used in an association with a firewall. See Subnet Mapping below for details.
	SubnetMapping VpcEndpointAssociationSubnetMappingPtrInput
	// Map of resource tags to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll  pulumi.StringMapInput
	Timeouts VpcEndpointAssociationTimeoutsPtrInput
	// ARN of the VPC Endpoint Association.
	VpcEndpointAssociationArn pulumi.StringPtrInput
	// The unique identifier of the VPC endpoint association.
	VpcEndpointAssociationId pulumi.StringPtrInput
	// Nested list of information about the current status of the VPC Endpoint Association.
	VpcEndpointAssociationStatuses VpcEndpointAssociationVpcEndpointAssociationStatusArrayInput
	// The unique identifier of the VPC for the endpoint association.
	VpcId pulumi.StringPtrInput
}

func (VpcEndpointAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcEndpointAssociationState)(nil)).Elem()
}

type vpcEndpointAssociationArgs struct {
	// A description of the VPC endpoint association.
	Description *string `pulumi:"description"`
	// The Amazon Resource Name (ARN) that identifies the firewall.
	FirewallArn string `pulumi:"firewallArn"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// The ID for a subnet that's used in an association with a firewall. See Subnet Mapping below for details.
	SubnetMapping *VpcEndpointAssociationSubnetMapping `pulumi:"subnetMapping"`
	// Map of resource tags to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     map[string]string               `pulumi:"tags"`
	Timeouts *VpcEndpointAssociationTimeouts `pulumi:"timeouts"`
	// The unique identifier of the VPC for the endpoint association.
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a VpcEndpointAssociation resource.
type VpcEndpointAssociationArgs struct {
	// A description of the VPC endpoint association.
	Description pulumi.StringPtrInput
	// The Amazon Resource Name (ARN) that identifies the firewall.
	FirewallArn pulumi.StringInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// The ID for a subnet that's used in an association with a firewall. See Subnet Mapping below for details.
	SubnetMapping VpcEndpointAssociationSubnetMappingPtrInput
	// Map of resource tags to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags     pulumi.StringMapInput
	Timeouts VpcEndpointAssociationTimeoutsPtrInput
	// The unique identifier of the VPC for the endpoint association.
	VpcId pulumi.StringInput
}

func (VpcEndpointAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcEndpointAssociationArgs)(nil)).Elem()
}

type VpcEndpointAssociationInput interface {
	pulumi.Input

	ToVpcEndpointAssociationOutput() VpcEndpointAssociationOutput
	ToVpcEndpointAssociationOutputWithContext(ctx context.Context) VpcEndpointAssociationOutput
}

func (*VpcEndpointAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcEndpointAssociation)(nil)).Elem()
}

func (i *VpcEndpointAssociation) ToVpcEndpointAssociationOutput() VpcEndpointAssociationOutput {
	return i.ToVpcEndpointAssociationOutputWithContext(context.Background())
}

func (i *VpcEndpointAssociation) ToVpcEndpointAssociationOutputWithContext(ctx context.Context) VpcEndpointAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointAssociationOutput)
}

// VpcEndpointAssociationArrayInput is an input type that accepts VpcEndpointAssociationArray and VpcEndpointAssociationArrayOutput values.
// You can construct a concrete instance of `VpcEndpointAssociationArrayInput` via:
//
//	VpcEndpointAssociationArray{ VpcEndpointAssociationArgs{...} }
type VpcEndpointAssociationArrayInput interface {
	pulumi.Input

	ToVpcEndpointAssociationArrayOutput() VpcEndpointAssociationArrayOutput
	ToVpcEndpointAssociationArrayOutputWithContext(context.Context) VpcEndpointAssociationArrayOutput
}

type VpcEndpointAssociationArray []VpcEndpointAssociationInput

func (VpcEndpointAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcEndpointAssociation)(nil)).Elem()
}

func (i VpcEndpointAssociationArray) ToVpcEndpointAssociationArrayOutput() VpcEndpointAssociationArrayOutput {
	return i.ToVpcEndpointAssociationArrayOutputWithContext(context.Background())
}

func (i VpcEndpointAssociationArray) ToVpcEndpointAssociationArrayOutputWithContext(ctx context.Context) VpcEndpointAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointAssociationArrayOutput)
}

// VpcEndpointAssociationMapInput is an input type that accepts VpcEndpointAssociationMap and VpcEndpointAssociationMapOutput values.
// You can construct a concrete instance of `VpcEndpointAssociationMapInput` via:
//
//	VpcEndpointAssociationMap{ "key": VpcEndpointAssociationArgs{...} }
type VpcEndpointAssociationMapInput interface {
	pulumi.Input

	ToVpcEndpointAssociationMapOutput() VpcEndpointAssociationMapOutput
	ToVpcEndpointAssociationMapOutputWithContext(context.Context) VpcEndpointAssociationMapOutput
}

type VpcEndpointAssociationMap map[string]VpcEndpointAssociationInput

func (VpcEndpointAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcEndpointAssociation)(nil)).Elem()
}

func (i VpcEndpointAssociationMap) ToVpcEndpointAssociationMapOutput() VpcEndpointAssociationMapOutput {
	return i.ToVpcEndpointAssociationMapOutputWithContext(context.Background())
}

func (i VpcEndpointAssociationMap) ToVpcEndpointAssociationMapOutputWithContext(ctx context.Context) VpcEndpointAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VpcEndpointAssociationMapOutput)
}

type VpcEndpointAssociationOutput struct{ *pulumi.OutputState }

func (VpcEndpointAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VpcEndpointAssociation)(nil)).Elem()
}

func (o VpcEndpointAssociationOutput) ToVpcEndpointAssociationOutput() VpcEndpointAssociationOutput {
	return o
}

func (o VpcEndpointAssociationOutput) ToVpcEndpointAssociationOutputWithContext(ctx context.Context) VpcEndpointAssociationOutput {
	return o
}

// A description of the VPC endpoint association.
func (o VpcEndpointAssociationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VpcEndpointAssociation) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) that identifies the firewall.
func (o VpcEndpointAssociationOutput) FirewallArn() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpointAssociation) pulumi.StringOutput { return v.FirewallArn }).(pulumi.StringOutput)
}

// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
func (o VpcEndpointAssociationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpointAssociation) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The ID for a subnet that's used in an association with a firewall. See Subnet Mapping below for details.
func (o VpcEndpointAssociationOutput) SubnetMapping() VpcEndpointAssociationSubnetMappingPtrOutput {
	return o.ApplyT(func(v *VpcEndpointAssociation) VpcEndpointAssociationSubnetMappingPtrOutput { return v.SubnetMapping }).(VpcEndpointAssociationSubnetMappingPtrOutput)
}

// Map of resource tags to associate with the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o VpcEndpointAssociationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VpcEndpointAssociation) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o VpcEndpointAssociationOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VpcEndpointAssociation) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o VpcEndpointAssociationOutput) Timeouts() VpcEndpointAssociationTimeoutsPtrOutput {
	return o.ApplyT(func(v *VpcEndpointAssociation) VpcEndpointAssociationTimeoutsPtrOutput { return v.Timeouts }).(VpcEndpointAssociationTimeoutsPtrOutput)
}

// ARN of the VPC Endpoint Association.
func (o VpcEndpointAssociationOutput) VpcEndpointAssociationArn() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpointAssociation) pulumi.StringOutput { return v.VpcEndpointAssociationArn }).(pulumi.StringOutput)
}

// The unique identifier of the VPC endpoint association.
func (o VpcEndpointAssociationOutput) VpcEndpointAssociationId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpointAssociation) pulumi.StringOutput { return v.VpcEndpointAssociationId }).(pulumi.StringOutput)
}

// Nested list of information about the current status of the VPC Endpoint Association.
func (o VpcEndpointAssociationOutput) VpcEndpointAssociationStatuses() VpcEndpointAssociationVpcEndpointAssociationStatusArrayOutput {
	return o.ApplyT(func(v *VpcEndpointAssociation) VpcEndpointAssociationVpcEndpointAssociationStatusArrayOutput {
		return v.VpcEndpointAssociationStatuses
	}).(VpcEndpointAssociationVpcEndpointAssociationStatusArrayOutput)
}

// The unique identifier of the VPC for the endpoint association.
func (o VpcEndpointAssociationOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *VpcEndpointAssociation) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type VpcEndpointAssociationArrayOutput struct{ *pulumi.OutputState }

func (VpcEndpointAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VpcEndpointAssociation)(nil)).Elem()
}

func (o VpcEndpointAssociationArrayOutput) ToVpcEndpointAssociationArrayOutput() VpcEndpointAssociationArrayOutput {
	return o
}

func (o VpcEndpointAssociationArrayOutput) ToVpcEndpointAssociationArrayOutputWithContext(ctx context.Context) VpcEndpointAssociationArrayOutput {
	return o
}

func (o VpcEndpointAssociationArrayOutput) Index(i pulumi.IntInput) VpcEndpointAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VpcEndpointAssociation {
		return vs[0].([]*VpcEndpointAssociation)[vs[1].(int)]
	}).(VpcEndpointAssociationOutput)
}

type VpcEndpointAssociationMapOutput struct{ *pulumi.OutputState }

func (VpcEndpointAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VpcEndpointAssociation)(nil)).Elem()
}

func (o VpcEndpointAssociationMapOutput) ToVpcEndpointAssociationMapOutput() VpcEndpointAssociationMapOutput {
	return o
}

func (o VpcEndpointAssociationMapOutput) ToVpcEndpointAssociationMapOutputWithContext(ctx context.Context) VpcEndpointAssociationMapOutput {
	return o
}

func (o VpcEndpointAssociationMapOutput) MapIndex(k pulumi.StringInput) VpcEndpointAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VpcEndpointAssociation {
		return vs[0].(map[string]*VpcEndpointAssociation)[vs[1].(string)]
	}).(VpcEndpointAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointAssociationInput)(nil)).Elem(), &VpcEndpointAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointAssociationArrayInput)(nil)).Elem(), VpcEndpointAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VpcEndpointAssociationMapInput)(nil)).Elem(), VpcEndpointAssociationMap{})
	pulumi.RegisterOutputType(VpcEndpointAssociationOutput{})
	pulumi.RegisterOutputType(VpcEndpointAssociationArrayOutput{})
	pulumi.RegisterOutputType(VpcEndpointAssociationMapOutput{})
}
