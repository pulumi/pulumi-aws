// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS Network Firewall TLS Inspection Configuration.
//
// ## Example Usage
//
// > **NOTE:** You must configure either inbound inspection, outbound inspection, or both.
//
// ### Basic inbound/ingress inspection
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/networkfirewall"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := networkfirewall.NewTlsInspectionConfiguration(ctx, "example", &networkfirewall.TlsInspectionConfigurationArgs{
//				Name:        pulumi.String("example"),
//				Description: pulumi.String("example"),
//				EncryptionConfigurations: networkfirewall.TlsInspectionConfigurationEncryptionConfigurationArray{
//					&networkfirewall.TlsInspectionConfigurationEncryptionConfigurationArgs{
//						KeyId: pulumi.String("AWS_OWNED_KMS_KEY"),
//						Type:  pulumi.String("AWS_OWNED_KMS_KEY"),
//					},
//				},
//				TlsInspectionConfiguration: &networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationArgs{
//					ServerCertificateConfiguration: &networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationArgs{
//						ServerCertificates: networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationServerCertificateArray{
//							&networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationServerCertificateArgs{
//								ResourceArn: pulumi.Any(example1.Arn),
//							},
//						},
//						Scopes: networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeArray{
//							&networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeArgs{
//								Protocols: pulumi.IntArray{
//									pulumi.Int(6),
//								},
//								DestinationPorts: networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeDestinationPortArray{
//									&networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeDestinationPortArgs{
//										FromPort: pulumi.Int(443),
//										ToPort:   pulumi.Int(443),
//									},
//								},
//								Destinations: networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeDestinationArray{
//									&networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeDestinationArgs{
//										AddressDefinition: pulumi.String("0.0.0.0/0"),
//									},
//								},
//								SourcePorts: networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeSourcePortArray{
//									&networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeSourcePortArgs{
//										FromPort: pulumi.Int(0),
//										ToPort:   pulumi.Int(65535),
//									},
//								},
//								Sources: networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeSourceArray{
//									&networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeSourceArgs{
//										AddressDefinition: pulumi.String("0.0.0.0/0"),
//									},
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Basic outbound/engress inspection
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/networkfirewall"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := networkfirewall.NewTlsInspectionConfiguration(ctx, "example", &networkfirewall.TlsInspectionConfigurationArgs{
//				Name:        pulumi.String("example"),
//				Description: pulumi.String("example"),
//				EncryptionConfigurations: networkfirewall.TlsInspectionConfigurationEncryptionConfigurationArray{
//					&networkfirewall.TlsInspectionConfigurationEncryptionConfigurationArgs{
//						KeyId: pulumi.String("AWS_OWNED_KMS_KEY"),
//						Type:  pulumi.String("AWS_OWNED_KMS_KEY"),
//					},
//				},
//				TlsInspectionConfiguration: &networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationArgs{
//					ServerCertificateConfiguration: &networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationArgs{
//						CertificateAuthorityArn: pulumi.Any(example1.Arn),
//						CheckCertificateRevocationStatus: &networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationCheckCertificateRevocationStatusArgs{
//							RevokedStatusAction: pulumi.String("REJECT"),
//							UnknownStatusAction: pulumi.String("PASS"),
//						},
//						Scopes: networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeArray{
//							&networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeArgs{
//								Protocols: pulumi.IntArray{
//									pulumi.Int(6),
//								},
//								DestinationPorts: networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeDestinationPortArray{
//									&networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeDestinationPortArgs{
//										FromPort: pulumi.Int(443),
//										ToPort:   pulumi.Int(443),
//									},
//								},
//								Destinations: networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeDestinationArray{
//									&networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeDestinationArgs{
//										AddressDefinition: pulumi.String("0.0.0.0/0"),
//									},
//								},
//								SourcePorts: networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeSourcePortArray{
//									&networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeSourcePortArgs{
//										FromPort: pulumi.Int(0),
//										ToPort:   pulumi.Int(65535),
//									},
//								},
//								Sources: networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeSourceArray{
//									&networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeSourceArgs{
//										AddressDefinition: pulumi.String("0.0.0.0/0"),
//									},
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Inbound with encryption configuration
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/kms"
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/networkfirewall"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := kms.NewKey(ctx, "example", &kms.KeyArgs{
//				Description:          pulumi.String("example"),
//				DeletionWindowInDays: pulumi.Int(7),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = networkfirewall.NewTlsInspectionConfiguration(ctx, "example", &networkfirewall.TlsInspectionConfigurationArgs{
//				Name:        pulumi.String("example"),
//				Description: pulumi.String("example"),
//				EncryptionConfigurations: networkfirewall.TlsInspectionConfigurationEncryptionConfigurationArray{
//					&networkfirewall.TlsInspectionConfigurationEncryptionConfigurationArgs{
//						KeyId: example.Arn,
//						Type:  pulumi.String("CUSTOMER_KMS"),
//					},
//				},
//				TlsInspectionConfiguration: &networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationArgs{
//					ServerCertificateConfiguration: &networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationArgs{
//						ServerCertificates: networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationServerCertificateArray{
//							&networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationServerCertificateArgs{
//								ResourceArn: pulumi.Any(example1.Arn),
//							},
//						},
//						Scopes: networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeArray{
//							&networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeArgs{
//								Protocols: pulumi.IntArray{
//									pulumi.Int(6),
//								},
//								DestinationPorts: networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeDestinationPortArray{
//									&networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeDestinationPortArgs{
//										FromPort: pulumi.Int(443),
//										ToPort:   pulumi.Int(443),
//									},
//								},
//								Destinations: networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeDestinationArray{
//									&networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeDestinationArgs{
//										AddressDefinition: pulumi.String("0.0.0.0/0"),
//									},
//								},
//								SourcePorts: networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeSourcePortArray{
//									&networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeSourcePortArgs{
//										FromPort: pulumi.Int(0),
//										ToPort:   pulumi.Int(65535),
//									},
//								},
//								Sources: networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeSourceArray{
//									&networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeSourceArgs{
//										AddressDefinition: pulumi.String("0.0.0.0/0"),
//									},
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Combined inbound and outbound
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/networkfirewall"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := networkfirewall.NewTlsInspectionConfiguration(ctx, "example", &networkfirewall.TlsInspectionConfigurationArgs{
//				Name:        pulumi.String("example"),
//				Description: pulumi.String("example"),
//				EncryptionConfigurations: networkfirewall.TlsInspectionConfigurationEncryptionConfigurationArray{
//					&networkfirewall.TlsInspectionConfigurationEncryptionConfigurationArgs{
//						KeyId: pulumi.String("AWS_OWNED_KMS_KEY"),
//						Type:  pulumi.String("AWS_OWNED_KMS_KEY"),
//					},
//				},
//				TlsInspectionConfiguration: &networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationArgs{
//					ServerCertificateConfiguration: &networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationArgs{
//						CertificateAuthorityArn: pulumi.Any(example1.Arn),
//						CheckCertificateRevocationStatus: &networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationCheckCertificateRevocationStatusArgs{
//							RevokedStatusAction: pulumi.String("REJECT"),
//							UnknownStatusAction: pulumi.String("PASS"),
//						},
//						ServerCertificates: networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationServerCertificateArray{
//							&networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationServerCertificateArgs{
//								ResourceArn: pulumi.Any(example2.Arn),
//							},
//						},
//						Scopes: networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeArray{
//							&networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeArgs{
//								Protocols: pulumi.IntArray{
//									pulumi.Int(6),
//								},
//								DestinationPorts: networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeDestinationPortArray{
//									&networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeDestinationPortArgs{
//										FromPort: pulumi.Int(443),
//										ToPort:   pulumi.Int(443),
//									},
//								},
//								Destinations: networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeDestinationArray{
//									&networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeDestinationArgs{
//										AddressDefinition: pulumi.String("0.0.0.0/0"),
//									},
//								},
//								SourcePorts: networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeSourcePortArray{
//									&networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeSourcePortArgs{
//										FromPort: pulumi.Int(0),
//										ToPort:   pulumi.Int(65535),
//									},
//								},
//								Sources: networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeSourceArray{
//									&networkfirewall.TlsInspectionConfigurationTlsInspectionConfigurationServerCertificateConfigurationScopeSourceArgs{
//										AddressDefinition: pulumi.String("0.0.0.0/0"),
//									},
//								},
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import Network Firewall TLS Inspection Configuration using the `arn`. For example:
//
// ```sh
// $ pulumi import aws:networkfirewall/tlsInspectionConfiguration:TlsInspectionConfiguration example arn:aws:network-firewall::<region>:<account_id>:tls-configuration/example
// ```
type TlsInspectionConfiguration struct {
	pulumi.CustomResourceState

	// ARN of the TLS Inspection Configuration.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Certificate Manager certificate block. See Certificate Authority below for details.
	CertificateAuthorities TlsInspectionConfigurationCertificateAuthorityArrayOutput `pulumi:"certificateAuthorities"`
	// List of certificate blocks describing certificates associated with the TLS inspection configuration. See Certificates below for details.
	Certificates TlsInspectionConfigurationCertificateArrayOutput `pulumi:"certificates"`
	// Description of the TLS inspection configuration.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Encryption configuration block. Detailed below.
	EncryptionConfigurations TlsInspectionConfigurationEncryptionConfigurationArrayOutput `pulumi:"encryptionConfigurations"`
	// Descriptive name of the TLS inspection configuration.
	Name pulumi.StringOutput `pulumi:"name"`
	// Number of firewall policies that use this TLS inspection configuration.
	NumberOfAssociations pulumi.IntOutput       `pulumi:"numberOfAssociations"`
	Tags                 pulumi.StringMapOutput `pulumi:"tags"`
	// Deprecated: Please use `tags` instead.
	TagsAll  pulumi.StringMapOutput                      `pulumi:"tagsAll"`
	Timeouts TlsInspectionConfigurationTimeoutsPtrOutput `pulumi:"timeouts"`
	// TLS inspection configuration block. Detailed below.
	//
	// The following arguments are optional:
	TlsInspectionConfiguration TlsInspectionConfigurationTlsInspectionConfigurationPtrOutput `pulumi:"tlsInspectionConfiguration"`
	// A unique identifier for the TLS inspection configuration.
	TlsInspectionConfigurationId pulumi.StringOutput `pulumi:"tlsInspectionConfigurationId"`
	// String token used when updating the rule group.
	UpdateToken pulumi.StringOutput `pulumi:"updateToken"`
}

// NewTlsInspectionConfiguration registers a new resource with the given unique name, arguments, and options.
func NewTlsInspectionConfiguration(ctx *pulumi.Context,
	name string, args *TlsInspectionConfigurationArgs, opts ...pulumi.ResourceOption) (*TlsInspectionConfiguration, error) {
	if args == nil {
		args = &TlsInspectionConfigurationArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TlsInspectionConfiguration
	err := ctx.RegisterResource("aws:networkfirewall/tlsInspectionConfiguration:TlsInspectionConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTlsInspectionConfiguration gets an existing TlsInspectionConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTlsInspectionConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TlsInspectionConfigurationState, opts ...pulumi.ResourceOption) (*TlsInspectionConfiguration, error) {
	var resource TlsInspectionConfiguration
	err := ctx.ReadResource("aws:networkfirewall/tlsInspectionConfiguration:TlsInspectionConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TlsInspectionConfiguration resources.
type tlsInspectionConfigurationState struct {
	// ARN of the TLS Inspection Configuration.
	Arn *string `pulumi:"arn"`
	// Certificate Manager certificate block. See Certificate Authority below for details.
	CertificateAuthorities []TlsInspectionConfigurationCertificateAuthority `pulumi:"certificateAuthorities"`
	// List of certificate blocks describing certificates associated with the TLS inspection configuration. See Certificates below for details.
	Certificates []TlsInspectionConfigurationCertificate `pulumi:"certificates"`
	// Description of the TLS inspection configuration.
	Description *string `pulumi:"description"`
	// Encryption configuration block. Detailed below.
	EncryptionConfigurations []TlsInspectionConfigurationEncryptionConfiguration `pulumi:"encryptionConfigurations"`
	// Descriptive name of the TLS inspection configuration.
	Name *string `pulumi:"name"`
	// Number of firewall policies that use this TLS inspection configuration.
	NumberOfAssociations *int              `pulumi:"numberOfAssociations"`
	Tags                 map[string]string `pulumi:"tags"`
	// Deprecated: Please use `tags` instead.
	TagsAll  map[string]string                   `pulumi:"tagsAll"`
	Timeouts *TlsInspectionConfigurationTimeouts `pulumi:"timeouts"`
	// TLS inspection configuration block. Detailed below.
	//
	// The following arguments are optional:
	TlsInspectionConfiguration *TlsInspectionConfigurationTlsInspectionConfiguration `pulumi:"tlsInspectionConfiguration"`
	// A unique identifier for the TLS inspection configuration.
	TlsInspectionConfigurationId *string `pulumi:"tlsInspectionConfigurationId"`
	// String token used when updating the rule group.
	UpdateToken *string `pulumi:"updateToken"`
}

type TlsInspectionConfigurationState struct {
	// ARN of the TLS Inspection Configuration.
	Arn pulumi.StringPtrInput
	// Certificate Manager certificate block. See Certificate Authority below for details.
	CertificateAuthorities TlsInspectionConfigurationCertificateAuthorityArrayInput
	// List of certificate blocks describing certificates associated with the TLS inspection configuration. See Certificates below for details.
	Certificates TlsInspectionConfigurationCertificateArrayInput
	// Description of the TLS inspection configuration.
	Description pulumi.StringPtrInput
	// Encryption configuration block. Detailed below.
	EncryptionConfigurations TlsInspectionConfigurationEncryptionConfigurationArrayInput
	// Descriptive name of the TLS inspection configuration.
	Name pulumi.StringPtrInput
	// Number of firewall policies that use this TLS inspection configuration.
	NumberOfAssociations pulumi.IntPtrInput
	Tags                 pulumi.StringMapInput
	// Deprecated: Please use `tags` instead.
	TagsAll  pulumi.StringMapInput
	Timeouts TlsInspectionConfigurationTimeoutsPtrInput
	// TLS inspection configuration block. Detailed below.
	//
	// The following arguments are optional:
	TlsInspectionConfiguration TlsInspectionConfigurationTlsInspectionConfigurationPtrInput
	// A unique identifier for the TLS inspection configuration.
	TlsInspectionConfigurationId pulumi.StringPtrInput
	// String token used when updating the rule group.
	UpdateToken pulumi.StringPtrInput
}

func (TlsInspectionConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*tlsInspectionConfigurationState)(nil)).Elem()
}

type tlsInspectionConfigurationArgs struct {
	// Description of the TLS inspection configuration.
	Description *string `pulumi:"description"`
	// Encryption configuration block. Detailed below.
	EncryptionConfigurations []TlsInspectionConfigurationEncryptionConfiguration `pulumi:"encryptionConfigurations"`
	// Descriptive name of the TLS inspection configuration.
	Name     *string                             `pulumi:"name"`
	Tags     map[string]string                   `pulumi:"tags"`
	Timeouts *TlsInspectionConfigurationTimeouts `pulumi:"timeouts"`
	// TLS inspection configuration block. Detailed below.
	//
	// The following arguments are optional:
	TlsInspectionConfiguration *TlsInspectionConfigurationTlsInspectionConfiguration `pulumi:"tlsInspectionConfiguration"`
}

// The set of arguments for constructing a TlsInspectionConfiguration resource.
type TlsInspectionConfigurationArgs struct {
	// Description of the TLS inspection configuration.
	Description pulumi.StringPtrInput
	// Encryption configuration block. Detailed below.
	EncryptionConfigurations TlsInspectionConfigurationEncryptionConfigurationArrayInput
	// Descriptive name of the TLS inspection configuration.
	Name     pulumi.StringPtrInput
	Tags     pulumi.StringMapInput
	Timeouts TlsInspectionConfigurationTimeoutsPtrInput
	// TLS inspection configuration block. Detailed below.
	//
	// The following arguments are optional:
	TlsInspectionConfiguration TlsInspectionConfigurationTlsInspectionConfigurationPtrInput
}

func (TlsInspectionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tlsInspectionConfigurationArgs)(nil)).Elem()
}

type TlsInspectionConfigurationInput interface {
	pulumi.Input

	ToTlsInspectionConfigurationOutput() TlsInspectionConfigurationOutput
	ToTlsInspectionConfigurationOutputWithContext(ctx context.Context) TlsInspectionConfigurationOutput
}

func (*TlsInspectionConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**TlsInspectionConfiguration)(nil)).Elem()
}

func (i *TlsInspectionConfiguration) ToTlsInspectionConfigurationOutput() TlsInspectionConfigurationOutput {
	return i.ToTlsInspectionConfigurationOutputWithContext(context.Background())
}

func (i *TlsInspectionConfiguration) ToTlsInspectionConfigurationOutputWithContext(ctx context.Context) TlsInspectionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsInspectionConfigurationOutput)
}

// TlsInspectionConfigurationArrayInput is an input type that accepts TlsInspectionConfigurationArray and TlsInspectionConfigurationArrayOutput values.
// You can construct a concrete instance of `TlsInspectionConfigurationArrayInput` via:
//
//	TlsInspectionConfigurationArray{ TlsInspectionConfigurationArgs{...} }
type TlsInspectionConfigurationArrayInput interface {
	pulumi.Input

	ToTlsInspectionConfigurationArrayOutput() TlsInspectionConfigurationArrayOutput
	ToTlsInspectionConfigurationArrayOutputWithContext(context.Context) TlsInspectionConfigurationArrayOutput
}

type TlsInspectionConfigurationArray []TlsInspectionConfigurationInput

func (TlsInspectionConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TlsInspectionConfiguration)(nil)).Elem()
}

func (i TlsInspectionConfigurationArray) ToTlsInspectionConfigurationArrayOutput() TlsInspectionConfigurationArrayOutput {
	return i.ToTlsInspectionConfigurationArrayOutputWithContext(context.Background())
}

func (i TlsInspectionConfigurationArray) ToTlsInspectionConfigurationArrayOutputWithContext(ctx context.Context) TlsInspectionConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsInspectionConfigurationArrayOutput)
}

// TlsInspectionConfigurationMapInput is an input type that accepts TlsInspectionConfigurationMap and TlsInspectionConfigurationMapOutput values.
// You can construct a concrete instance of `TlsInspectionConfigurationMapInput` via:
//
//	TlsInspectionConfigurationMap{ "key": TlsInspectionConfigurationArgs{...} }
type TlsInspectionConfigurationMapInput interface {
	pulumi.Input

	ToTlsInspectionConfigurationMapOutput() TlsInspectionConfigurationMapOutput
	ToTlsInspectionConfigurationMapOutputWithContext(context.Context) TlsInspectionConfigurationMapOutput
}

type TlsInspectionConfigurationMap map[string]TlsInspectionConfigurationInput

func (TlsInspectionConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TlsInspectionConfiguration)(nil)).Elem()
}

func (i TlsInspectionConfigurationMap) ToTlsInspectionConfigurationMapOutput() TlsInspectionConfigurationMapOutput {
	return i.ToTlsInspectionConfigurationMapOutputWithContext(context.Background())
}

func (i TlsInspectionConfigurationMap) ToTlsInspectionConfigurationMapOutputWithContext(ctx context.Context) TlsInspectionConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TlsInspectionConfigurationMapOutput)
}

type TlsInspectionConfigurationOutput struct{ *pulumi.OutputState }

func (TlsInspectionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TlsInspectionConfiguration)(nil)).Elem()
}

func (o TlsInspectionConfigurationOutput) ToTlsInspectionConfigurationOutput() TlsInspectionConfigurationOutput {
	return o
}

func (o TlsInspectionConfigurationOutput) ToTlsInspectionConfigurationOutputWithContext(ctx context.Context) TlsInspectionConfigurationOutput {
	return o
}

// ARN of the TLS Inspection Configuration.
func (o TlsInspectionConfigurationOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *TlsInspectionConfiguration) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Certificate Manager certificate block. See Certificate Authority below for details.
func (o TlsInspectionConfigurationOutput) CertificateAuthorities() TlsInspectionConfigurationCertificateAuthorityArrayOutput {
	return o.ApplyT(func(v *TlsInspectionConfiguration) TlsInspectionConfigurationCertificateAuthorityArrayOutput {
		return v.CertificateAuthorities
	}).(TlsInspectionConfigurationCertificateAuthorityArrayOutput)
}

// List of certificate blocks describing certificates associated with the TLS inspection configuration. See Certificates below for details.
func (o TlsInspectionConfigurationOutput) Certificates() TlsInspectionConfigurationCertificateArrayOutput {
	return o.ApplyT(func(v *TlsInspectionConfiguration) TlsInspectionConfigurationCertificateArrayOutput {
		return v.Certificates
	}).(TlsInspectionConfigurationCertificateArrayOutput)
}

// Description of the TLS inspection configuration.
func (o TlsInspectionConfigurationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TlsInspectionConfiguration) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Encryption configuration block. Detailed below.
func (o TlsInspectionConfigurationOutput) EncryptionConfigurations() TlsInspectionConfigurationEncryptionConfigurationArrayOutput {
	return o.ApplyT(func(v *TlsInspectionConfiguration) TlsInspectionConfigurationEncryptionConfigurationArrayOutput {
		return v.EncryptionConfigurations
	}).(TlsInspectionConfigurationEncryptionConfigurationArrayOutput)
}

// Descriptive name of the TLS inspection configuration.
func (o TlsInspectionConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TlsInspectionConfiguration) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Number of firewall policies that use this TLS inspection configuration.
func (o TlsInspectionConfigurationOutput) NumberOfAssociations() pulumi.IntOutput {
	return o.ApplyT(func(v *TlsInspectionConfiguration) pulumi.IntOutput { return v.NumberOfAssociations }).(pulumi.IntOutput)
}

func (o TlsInspectionConfigurationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TlsInspectionConfiguration) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Deprecated: Please use `tags` instead.
func (o TlsInspectionConfigurationOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TlsInspectionConfiguration) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o TlsInspectionConfigurationOutput) Timeouts() TlsInspectionConfigurationTimeoutsPtrOutput {
	return o.ApplyT(func(v *TlsInspectionConfiguration) TlsInspectionConfigurationTimeoutsPtrOutput { return v.Timeouts }).(TlsInspectionConfigurationTimeoutsPtrOutput)
}

// TLS inspection configuration block. Detailed below.
//
// The following arguments are optional:
func (o TlsInspectionConfigurationOutput) TlsInspectionConfiguration() TlsInspectionConfigurationTlsInspectionConfigurationPtrOutput {
	return o.ApplyT(func(v *TlsInspectionConfiguration) TlsInspectionConfigurationTlsInspectionConfigurationPtrOutput {
		return v.TlsInspectionConfiguration
	}).(TlsInspectionConfigurationTlsInspectionConfigurationPtrOutput)
}

// A unique identifier for the TLS inspection configuration.
func (o TlsInspectionConfigurationOutput) TlsInspectionConfigurationId() pulumi.StringOutput {
	return o.ApplyT(func(v *TlsInspectionConfiguration) pulumi.StringOutput { return v.TlsInspectionConfigurationId }).(pulumi.StringOutput)
}

// String token used when updating the rule group.
func (o TlsInspectionConfigurationOutput) UpdateToken() pulumi.StringOutput {
	return o.ApplyT(func(v *TlsInspectionConfiguration) pulumi.StringOutput { return v.UpdateToken }).(pulumi.StringOutput)
}

type TlsInspectionConfigurationArrayOutput struct{ *pulumi.OutputState }

func (TlsInspectionConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TlsInspectionConfiguration)(nil)).Elem()
}

func (o TlsInspectionConfigurationArrayOutput) ToTlsInspectionConfigurationArrayOutput() TlsInspectionConfigurationArrayOutput {
	return o
}

func (o TlsInspectionConfigurationArrayOutput) ToTlsInspectionConfigurationArrayOutputWithContext(ctx context.Context) TlsInspectionConfigurationArrayOutput {
	return o
}

func (o TlsInspectionConfigurationArrayOutput) Index(i pulumi.IntInput) TlsInspectionConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TlsInspectionConfiguration {
		return vs[0].([]*TlsInspectionConfiguration)[vs[1].(int)]
	}).(TlsInspectionConfigurationOutput)
}

type TlsInspectionConfigurationMapOutput struct{ *pulumi.OutputState }

func (TlsInspectionConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TlsInspectionConfiguration)(nil)).Elem()
}

func (o TlsInspectionConfigurationMapOutput) ToTlsInspectionConfigurationMapOutput() TlsInspectionConfigurationMapOutput {
	return o
}

func (o TlsInspectionConfigurationMapOutput) ToTlsInspectionConfigurationMapOutputWithContext(ctx context.Context) TlsInspectionConfigurationMapOutput {
	return o
}

func (o TlsInspectionConfigurationMapOutput) MapIndex(k pulumi.StringInput) TlsInspectionConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TlsInspectionConfiguration {
		return vs[0].(map[string]*TlsInspectionConfiguration)[vs[1].(string)]
	}).(TlsInspectionConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TlsInspectionConfigurationInput)(nil)).Elem(), &TlsInspectionConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*TlsInspectionConfigurationArrayInput)(nil)).Elem(), TlsInspectionConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TlsInspectionConfigurationMapInput)(nil)).Elem(), TlsInspectionConfigurationMap{})
	pulumi.RegisterOutputType(TlsInspectionConfigurationOutput{})
	pulumi.RegisterOutputType(TlsInspectionConfigurationArrayOutput{})
	pulumi.RegisterOutputType(TlsInspectionConfigurationMapOutput{})
}
