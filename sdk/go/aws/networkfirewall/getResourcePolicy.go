// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkfirewall

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieve information about a Network Firewall resource policy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/networkfirewall"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := networkfirewall.LookupResourcePolicy(ctx, &networkfirewall.LookupResourcePolicyArgs{
//				ResourceArn: resourcePolicyArn,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupResourcePolicy(ctx *pulumi.Context, args *LookupResourcePolicyArgs, opts ...pulumi.InvokeOption) (*LookupResourcePolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupResourcePolicyResult
	err := ctx.Invoke("aws:networkfirewall/getResourcePolicy:getResourcePolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResourcePolicy.
type LookupResourcePolicyArgs struct {
	// The Amazon Resource Name (ARN) that identifies the resource policy.
	ResourceArn string `pulumi:"resourceArn"`
}

// A collection of values returned by getResourcePolicy.
type LookupResourcePolicyResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The [policy][1] for the resource.
	Policy      string `pulumi:"policy"`
	ResourceArn string `pulumi:"resourceArn"`
}

func LookupResourcePolicyOutput(ctx *pulumi.Context, args LookupResourcePolicyOutputArgs, opts ...pulumi.InvokeOption) LookupResourcePolicyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupResourcePolicyResultOutput, error) {
			args := v.(LookupResourcePolicyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws:networkfirewall/getResourcePolicy:getResourcePolicy", args, LookupResourcePolicyResultOutput{}, options).(LookupResourcePolicyResultOutput), nil
		}).(LookupResourcePolicyResultOutput)
}

// A collection of arguments for invoking getResourcePolicy.
type LookupResourcePolicyOutputArgs struct {
	// The Amazon Resource Name (ARN) that identifies the resource policy.
	ResourceArn pulumi.StringInput `pulumi:"resourceArn"`
}

func (LookupResourcePolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourcePolicyArgs)(nil)).Elem()
}

// A collection of values returned by getResourcePolicy.
type LookupResourcePolicyResultOutput struct{ *pulumi.OutputState }

func (LookupResourcePolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourcePolicyResult)(nil)).Elem()
}

func (o LookupResourcePolicyResultOutput) ToLookupResourcePolicyResultOutput() LookupResourcePolicyResultOutput {
	return o
}

func (o LookupResourcePolicyResultOutput) ToLookupResourcePolicyResultOutputWithContext(ctx context.Context) LookupResourcePolicyResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupResourcePolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourcePolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// The [policy][1] for the resource.
func (o LookupResourcePolicyResultOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourcePolicyResult) string { return v.Policy }).(pulumi.StringOutput)
}

func (o LookupResourcePolicyResultOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourcePolicyResult) string { return v.ResourceArn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupResourcePolicyResultOutput{})
}
