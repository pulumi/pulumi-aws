// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scheduler

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ScheduleFlexibleTimeWindow struct {
	MaximumWindowInMinutes *int   `pulumi:"maximumWindowInMinutes"`
	Mode                   string `pulumi:"mode"`
}

// ScheduleFlexibleTimeWindowInput is an input type that accepts ScheduleFlexibleTimeWindowArgs and ScheduleFlexibleTimeWindowOutput values.
// You can construct a concrete instance of `ScheduleFlexibleTimeWindowInput` via:
//
//	ScheduleFlexibleTimeWindowArgs{...}
type ScheduleFlexibleTimeWindowInput interface {
	pulumi.Input

	ToScheduleFlexibleTimeWindowOutput() ScheduleFlexibleTimeWindowOutput
	ToScheduleFlexibleTimeWindowOutputWithContext(context.Context) ScheduleFlexibleTimeWindowOutput
}

type ScheduleFlexibleTimeWindowArgs struct {
	MaximumWindowInMinutes pulumi.IntPtrInput `pulumi:"maximumWindowInMinutes"`
	Mode                   pulumi.StringInput `pulumi:"mode"`
}

func (ScheduleFlexibleTimeWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleFlexibleTimeWindow)(nil)).Elem()
}

func (i ScheduleFlexibleTimeWindowArgs) ToScheduleFlexibleTimeWindowOutput() ScheduleFlexibleTimeWindowOutput {
	return i.ToScheduleFlexibleTimeWindowOutputWithContext(context.Background())
}

func (i ScheduleFlexibleTimeWindowArgs) ToScheduleFlexibleTimeWindowOutputWithContext(ctx context.Context) ScheduleFlexibleTimeWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleFlexibleTimeWindowOutput)
}

func (i ScheduleFlexibleTimeWindowArgs) ToScheduleFlexibleTimeWindowPtrOutput() ScheduleFlexibleTimeWindowPtrOutput {
	return i.ToScheduleFlexibleTimeWindowPtrOutputWithContext(context.Background())
}

func (i ScheduleFlexibleTimeWindowArgs) ToScheduleFlexibleTimeWindowPtrOutputWithContext(ctx context.Context) ScheduleFlexibleTimeWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleFlexibleTimeWindowOutput).ToScheduleFlexibleTimeWindowPtrOutputWithContext(ctx)
}

// ScheduleFlexibleTimeWindowPtrInput is an input type that accepts ScheduleFlexibleTimeWindowArgs, ScheduleFlexibleTimeWindowPtr and ScheduleFlexibleTimeWindowPtrOutput values.
// You can construct a concrete instance of `ScheduleFlexibleTimeWindowPtrInput` via:
//
//	        ScheduleFlexibleTimeWindowArgs{...}
//
//	or:
//
//	        nil
type ScheduleFlexibleTimeWindowPtrInput interface {
	pulumi.Input

	ToScheduleFlexibleTimeWindowPtrOutput() ScheduleFlexibleTimeWindowPtrOutput
	ToScheduleFlexibleTimeWindowPtrOutputWithContext(context.Context) ScheduleFlexibleTimeWindowPtrOutput
}

type scheduleFlexibleTimeWindowPtrType ScheduleFlexibleTimeWindowArgs

func ScheduleFlexibleTimeWindowPtr(v *ScheduleFlexibleTimeWindowArgs) ScheduleFlexibleTimeWindowPtrInput {
	return (*scheduleFlexibleTimeWindowPtrType)(v)
}

func (*scheduleFlexibleTimeWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleFlexibleTimeWindow)(nil)).Elem()
}

func (i *scheduleFlexibleTimeWindowPtrType) ToScheduleFlexibleTimeWindowPtrOutput() ScheduleFlexibleTimeWindowPtrOutput {
	return i.ToScheduleFlexibleTimeWindowPtrOutputWithContext(context.Background())
}

func (i *scheduleFlexibleTimeWindowPtrType) ToScheduleFlexibleTimeWindowPtrOutputWithContext(ctx context.Context) ScheduleFlexibleTimeWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleFlexibleTimeWindowPtrOutput)
}

type ScheduleFlexibleTimeWindowOutput struct{ *pulumi.OutputState }

func (ScheduleFlexibleTimeWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleFlexibleTimeWindow)(nil)).Elem()
}

func (o ScheduleFlexibleTimeWindowOutput) ToScheduleFlexibleTimeWindowOutput() ScheduleFlexibleTimeWindowOutput {
	return o
}

func (o ScheduleFlexibleTimeWindowOutput) ToScheduleFlexibleTimeWindowOutputWithContext(ctx context.Context) ScheduleFlexibleTimeWindowOutput {
	return o
}

func (o ScheduleFlexibleTimeWindowOutput) ToScheduleFlexibleTimeWindowPtrOutput() ScheduleFlexibleTimeWindowPtrOutput {
	return o.ToScheduleFlexibleTimeWindowPtrOutputWithContext(context.Background())
}

func (o ScheduleFlexibleTimeWindowOutput) ToScheduleFlexibleTimeWindowPtrOutputWithContext(ctx context.Context) ScheduleFlexibleTimeWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduleFlexibleTimeWindow) *ScheduleFlexibleTimeWindow {
		return &v
	}).(ScheduleFlexibleTimeWindowPtrOutput)
}

func (o ScheduleFlexibleTimeWindowOutput) MaximumWindowInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduleFlexibleTimeWindow) *int { return v.MaximumWindowInMinutes }).(pulumi.IntPtrOutput)
}

func (o ScheduleFlexibleTimeWindowOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleFlexibleTimeWindow) string { return v.Mode }).(pulumi.StringOutput)
}

type ScheduleFlexibleTimeWindowPtrOutput struct{ *pulumi.OutputState }

func (ScheduleFlexibleTimeWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleFlexibleTimeWindow)(nil)).Elem()
}

func (o ScheduleFlexibleTimeWindowPtrOutput) ToScheduleFlexibleTimeWindowPtrOutput() ScheduleFlexibleTimeWindowPtrOutput {
	return o
}

func (o ScheduleFlexibleTimeWindowPtrOutput) ToScheduleFlexibleTimeWindowPtrOutputWithContext(ctx context.Context) ScheduleFlexibleTimeWindowPtrOutput {
	return o
}

func (o ScheduleFlexibleTimeWindowPtrOutput) Elem() ScheduleFlexibleTimeWindowOutput {
	return o.ApplyT(func(v *ScheduleFlexibleTimeWindow) ScheduleFlexibleTimeWindow {
		if v != nil {
			return *v
		}
		var ret ScheduleFlexibleTimeWindow
		return ret
	}).(ScheduleFlexibleTimeWindowOutput)
}

func (o ScheduleFlexibleTimeWindowPtrOutput) MaximumWindowInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScheduleFlexibleTimeWindow) *int {
		if v == nil {
			return nil
		}
		return v.MaximumWindowInMinutes
	}).(pulumi.IntPtrOutput)
}

func (o ScheduleFlexibleTimeWindowPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleFlexibleTimeWindow) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

type ScheduleTarget struct {
	Arn                         string                                     `pulumi:"arn"`
	DeadLetterConfig            *ScheduleTargetDeadLetterConfig            `pulumi:"deadLetterConfig"`
	EcsParameters               *ScheduleTargetEcsParameters               `pulumi:"ecsParameters"`
	EventbridgeParameters       *ScheduleTargetEventbridgeParameters       `pulumi:"eventbridgeParameters"`
	Input                       *string                                    `pulumi:"input"`
	KinesisParameters           *ScheduleTargetKinesisParameters           `pulumi:"kinesisParameters"`
	RetryPolicy                 *ScheduleTargetRetryPolicy                 `pulumi:"retryPolicy"`
	RoleArn                     string                                     `pulumi:"roleArn"`
	SagemakerPipelineParameters *ScheduleTargetSagemakerPipelineParameters `pulumi:"sagemakerPipelineParameters"`
	SqsParameters               *ScheduleTargetSqsParameters               `pulumi:"sqsParameters"`
}

// ScheduleTargetInput is an input type that accepts ScheduleTargetArgs and ScheduleTargetOutput values.
// You can construct a concrete instance of `ScheduleTargetInput` via:
//
//	ScheduleTargetArgs{...}
type ScheduleTargetInput interface {
	pulumi.Input

	ToScheduleTargetOutput() ScheduleTargetOutput
	ToScheduleTargetOutputWithContext(context.Context) ScheduleTargetOutput
}

type ScheduleTargetArgs struct {
	Arn                         pulumi.StringInput                                `pulumi:"arn"`
	DeadLetterConfig            ScheduleTargetDeadLetterConfigPtrInput            `pulumi:"deadLetterConfig"`
	EcsParameters               ScheduleTargetEcsParametersPtrInput               `pulumi:"ecsParameters"`
	EventbridgeParameters       ScheduleTargetEventbridgeParametersPtrInput       `pulumi:"eventbridgeParameters"`
	Input                       pulumi.StringPtrInput                             `pulumi:"input"`
	KinesisParameters           ScheduleTargetKinesisParametersPtrInput           `pulumi:"kinesisParameters"`
	RetryPolicy                 ScheduleTargetRetryPolicyPtrInput                 `pulumi:"retryPolicy"`
	RoleArn                     pulumi.StringInput                                `pulumi:"roleArn"`
	SagemakerPipelineParameters ScheduleTargetSagemakerPipelineParametersPtrInput `pulumi:"sagemakerPipelineParameters"`
	SqsParameters               ScheduleTargetSqsParametersPtrInput               `pulumi:"sqsParameters"`
}

func (ScheduleTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTarget)(nil)).Elem()
}

func (i ScheduleTargetArgs) ToScheduleTargetOutput() ScheduleTargetOutput {
	return i.ToScheduleTargetOutputWithContext(context.Background())
}

func (i ScheduleTargetArgs) ToScheduleTargetOutputWithContext(ctx context.Context) ScheduleTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetOutput)
}

func (i ScheduleTargetArgs) ToScheduleTargetPtrOutput() ScheduleTargetPtrOutput {
	return i.ToScheduleTargetPtrOutputWithContext(context.Background())
}

func (i ScheduleTargetArgs) ToScheduleTargetPtrOutputWithContext(ctx context.Context) ScheduleTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetOutput).ToScheduleTargetPtrOutputWithContext(ctx)
}

// ScheduleTargetPtrInput is an input type that accepts ScheduleTargetArgs, ScheduleTargetPtr and ScheduleTargetPtrOutput values.
// You can construct a concrete instance of `ScheduleTargetPtrInput` via:
//
//	        ScheduleTargetArgs{...}
//
//	or:
//
//	        nil
type ScheduleTargetPtrInput interface {
	pulumi.Input

	ToScheduleTargetPtrOutput() ScheduleTargetPtrOutput
	ToScheduleTargetPtrOutputWithContext(context.Context) ScheduleTargetPtrOutput
}

type scheduleTargetPtrType ScheduleTargetArgs

func ScheduleTargetPtr(v *ScheduleTargetArgs) ScheduleTargetPtrInput {
	return (*scheduleTargetPtrType)(v)
}

func (*scheduleTargetPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleTarget)(nil)).Elem()
}

func (i *scheduleTargetPtrType) ToScheduleTargetPtrOutput() ScheduleTargetPtrOutput {
	return i.ToScheduleTargetPtrOutputWithContext(context.Background())
}

func (i *scheduleTargetPtrType) ToScheduleTargetPtrOutputWithContext(ctx context.Context) ScheduleTargetPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetPtrOutput)
}

type ScheduleTargetOutput struct{ *pulumi.OutputState }

func (ScheduleTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTarget)(nil)).Elem()
}

func (o ScheduleTargetOutput) ToScheduleTargetOutput() ScheduleTargetOutput {
	return o
}

func (o ScheduleTargetOutput) ToScheduleTargetOutputWithContext(ctx context.Context) ScheduleTargetOutput {
	return o
}

func (o ScheduleTargetOutput) ToScheduleTargetPtrOutput() ScheduleTargetPtrOutput {
	return o.ToScheduleTargetPtrOutputWithContext(context.Background())
}

func (o ScheduleTargetOutput) ToScheduleTargetPtrOutputWithContext(ctx context.Context) ScheduleTargetPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduleTarget) *ScheduleTarget {
		return &v
	}).(ScheduleTargetPtrOutput)
}

func (o ScheduleTargetOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleTarget) string { return v.Arn }).(pulumi.StringOutput)
}

func (o ScheduleTargetOutput) DeadLetterConfig() ScheduleTargetDeadLetterConfigPtrOutput {
	return o.ApplyT(func(v ScheduleTarget) *ScheduleTargetDeadLetterConfig { return v.DeadLetterConfig }).(ScheduleTargetDeadLetterConfigPtrOutput)
}

func (o ScheduleTargetOutput) EcsParameters() ScheduleTargetEcsParametersPtrOutput {
	return o.ApplyT(func(v ScheduleTarget) *ScheduleTargetEcsParameters { return v.EcsParameters }).(ScheduleTargetEcsParametersPtrOutput)
}

func (o ScheduleTargetOutput) EventbridgeParameters() ScheduleTargetEventbridgeParametersPtrOutput {
	return o.ApplyT(func(v ScheduleTarget) *ScheduleTargetEventbridgeParameters { return v.EventbridgeParameters }).(ScheduleTargetEventbridgeParametersPtrOutput)
}

func (o ScheduleTargetOutput) Input() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleTarget) *string { return v.Input }).(pulumi.StringPtrOutput)
}

func (o ScheduleTargetOutput) KinesisParameters() ScheduleTargetKinesisParametersPtrOutput {
	return o.ApplyT(func(v ScheduleTarget) *ScheduleTargetKinesisParameters { return v.KinesisParameters }).(ScheduleTargetKinesisParametersPtrOutput)
}

func (o ScheduleTargetOutput) RetryPolicy() ScheduleTargetRetryPolicyPtrOutput {
	return o.ApplyT(func(v ScheduleTarget) *ScheduleTargetRetryPolicy { return v.RetryPolicy }).(ScheduleTargetRetryPolicyPtrOutput)
}

func (o ScheduleTargetOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleTarget) string { return v.RoleArn }).(pulumi.StringOutput)
}

func (o ScheduleTargetOutput) SagemakerPipelineParameters() ScheduleTargetSagemakerPipelineParametersPtrOutput {
	return o.ApplyT(func(v ScheduleTarget) *ScheduleTargetSagemakerPipelineParameters {
		return v.SagemakerPipelineParameters
	}).(ScheduleTargetSagemakerPipelineParametersPtrOutput)
}

func (o ScheduleTargetOutput) SqsParameters() ScheduleTargetSqsParametersPtrOutput {
	return o.ApplyT(func(v ScheduleTarget) *ScheduleTargetSqsParameters { return v.SqsParameters }).(ScheduleTargetSqsParametersPtrOutput)
}

type ScheduleTargetPtrOutput struct{ *pulumi.OutputState }

func (ScheduleTargetPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleTarget)(nil)).Elem()
}

func (o ScheduleTargetPtrOutput) ToScheduleTargetPtrOutput() ScheduleTargetPtrOutput {
	return o
}

func (o ScheduleTargetPtrOutput) ToScheduleTargetPtrOutputWithContext(ctx context.Context) ScheduleTargetPtrOutput {
	return o
}

func (o ScheduleTargetPtrOutput) Elem() ScheduleTargetOutput {
	return o.ApplyT(func(v *ScheduleTarget) ScheduleTarget {
		if v != nil {
			return *v
		}
		var ret ScheduleTarget
		return ret
	}).(ScheduleTargetOutput)
}

func (o ScheduleTargetPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleTarget) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

func (o ScheduleTargetPtrOutput) DeadLetterConfig() ScheduleTargetDeadLetterConfigPtrOutput {
	return o.ApplyT(func(v *ScheduleTarget) *ScheduleTargetDeadLetterConfig {
		if v == nil {
			return nil
		}
		return v.DeadLetterConfig
	}).(ScheduleTargetDeadLetterConfigPtrOutput)
}

func (o ScheduleTargetPtrOutput) EcsParameters() ScheduleTargetEcsParametersPtrOutput {
	return o.ApplyT(func(v *ScheduleTarget) *ScheduleTargetEcsParameters {
		if v == nil {
			return nil
		}
		return v.EcsParameters
	}).(ScheduleTargetEcsParametersPtrOutput)
}

func (o ScheduleTargetPtrOutput) EventbridgeParameters() ScheduleTargetEventbridgeParametersPtrOutput {
	return o.ApplyT(func(v *ScheduleTarget) *ScheduleTargetEventbridgeParameters {
		if v == nil {
			return nil
		}
		return v.EventbridgeParameters
	}).(ScheduleTargetEventbridgeParametersPtrOutput)
}

func (o ScheduleTargetPtrOutput) Input() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleTarget) *string {
		if v == nil {
			return nil
		}
		return v.Input
	}).(pulumi.StringPtrOutput)
}

func (o ScheduleTargetPtrOutput) KinesisParameters() ScheduleTargetKinesisParametersPtrOutput {
	return o.ApplyT(func(v *ScheduleTarget) *ScheduleTargetKinesisParameters {
		if v == nil {
			return nil
		}
		return v.KinesisParameters
	}).(ScheduleTargetKinesisParametersPtrOutput)
}

func (o ScheduleTargetPtrOutput) RetryPolicy() ScheduleTargetRetryPolicyPtrOutput {
	return o.ApplyT(func(v *ScheduleTarget) *ScheduleTargetRetryPolicy {
		if v == nil {
			return nil
		}
		return v.RetryPolicy
	}).(ScheduleTargetRetryPolicyPtrOutput)
}

func (o ScheduleTargetPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleTarget) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

func (o ScheduleTargetPtrOutput) SagemakerPipelineParameters() ScheduleTargetSagemakerPipelineParametersPtrOutput {
	return o.ApplyT(func(v *ScheduleTarget) *ScheduleTargetSagemakerPipelineParameters {
		if v == nil {
			return nil
		}
		return v.SagemakerPipelineParameters
	}).(ScheduleTargetSagemakerPipelineParametersPtrOutput)
}

func (o ScheduleTargetPtrOutput) SqsParameters() ScheduleTargetSqsParametersPtrOutput {
	return o.ApplyT(func(v *ScheduleTarget) *ScheduleTargetSqsParameters {
		if v == nil {
			return nil
		}
		return v.SqsParameters
	}).(ScheduleTargetSqsParametersPtrOutput)
}

type ScheduleTargetDeadLetterConfig struct {
	Arn *string `pulumi:"arn"`
}

// ScheduleTargetDeadLetterConfigInput is an input type that accepts ScheduleTargetDeadLetterConfigArgs and ScheduleTargetDeadLetterConfigOutput values.
// You can construct a concrete instance of `ScheduleTargetDeadLetterConfigInput` via:
//
//	ScheduleTargetDeadLetterConfigArgs{...}
type ScheduleTargetDeadLetterConfigInput interface {
	pulumi.Input

	ToScheduleTargetDeadLetterConfigOutput() ScheduleTargetDeadLetterConfigOutput
	ToScheduleTargetDeadLetterConfigOutputWithContext(context.Context) ScheduleTargetDeadLetterConfigOutput
}

type ScheduleTargetDeadLetterConfigArgs struct {
	Arn pulumi.StringPtrInput `pulumi:"arn"`
}

func (ScheduleTargetDeadLetterConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTargetDeadLetterConfig)(nil)).Elem()
}

func (i ScheduleTargetDeadLetterConfigArgs) ToScheduleTargetDeadLetterConfigOutput() ScheduleTargetDeadLetterConfigOutput {
	return i.ToScheduleTargetDeadLetterConfigOutputWithContext(context.Background())
}

func (i ScheduleTargetDeadLetterConfigArgs) ToScheduleTargetDeadLetterConfigOutputWithContext(ctx context.Context) ScheduleTargetDeadLetterConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetDeadLetterConfigOutput)
}

func (i ScheduleTargetDeadLetterConfigArgs) ToScheduleTargetDeadLetterConfigPtrOutput() ScheduleTargetDeadLetterConfigPtrOutput {
	return i.ToScheduleTargetDeadLetterConfigPtrOutputWithContext(context.Background())
}

func (i ScheduleTargetDeadLetterConfigArgs) ToScheduleTargetDeadLetterConfigPtrOutputWithContext(ctx context.Context) ScheduleTargetDeadLetterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetDeadLetterConfigOutput).ToScheduleTargetDeadLetterConfigPtrOutputWithContext(ctx)
}

// ScheduleTargetDeadLetterConfigPtrInput is an input type that accepts ScheduleTargetDeadLetterConfigArgs, ScheduleTargetDeadLetterConfigPtr and ScheduleTargetDeadLetterConfigPtrOutput values.
// You can construct a concrete instance of `ScheduleTargetDeadLetterConfigPtrInput` via:
//
//	        ScheduleTargetDeadLetterConfigArgs{...}
//
//	or:
//
//	        nil
type ScheduleTargetDeadLetterConfigPtrInput interface {
	pulumi.Input

	ToScheduleTargetDeadLetterConfigPtrOutput() ScheduleTargetDeadLetterConfigPtrOutput
	ToScheduleTargetDeadLetterConfigPtrOutputWithContext(context.Context) ScheduleTargetDeadLetterConfigPtrOutput
}

type scheduleTargetDeadLetterConfigPtrType ScheduleTargetDeadLetterConfigArgs

func ScheduleTargetDeadLetterConfigPtr(v *ScheduleTargetDeadLetterConfigArgs) ScheduleTargetDeadLetterConfigPtrInput {
	return (*scheduleTargetDeadLetterConfigPtrType)(v)
}

func (*scheduleTargetDeadLetterConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleTargetDeadLetterConfig)(nil)).Elem()
}

func (i *scheduleTargetDeadLetterConfigPtrType) ToScheduleTargetDeadLetterConfigPtrOutput() ScheduleTargetDeadLetterConfigPtrOutput {
	return i.ToScheduleTargetDeadLetterConfigPtrOutputWithContext(context.Background())
}

func (i *scheduleTargetDeadLetterConfigPtrType) ToScheduleTargetDeadLetterConfigPtrOutputWithContext(ctx context.Context) ScheduleTargetDeadLetterConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetDeadLetterConfigPtrOutput)
}

type ScheduleTargetDeadLetterConfigOutput struct{ *pulumi.OutputState }

func (ScheduleTargetDeadLetterConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTargetDeadLetterConfig)(nil)).Elem()
}

func (o ScheduleTargetDeadLetterConfigOutput) ToScheduleTargetDeadLetterConfigOutput() ScheduleTargetDeadLetterConfigOutput {
	return o
}

func (o ScheduleTargetDeadLetterConfigOutput) ToScheduleTargetDeadLetterConfigOutputWithContext(ctx context.Context) ScheduleTargetDeadLetterConfigOutput {
	return o
}

func (o ScheduleTargetDeadLetterConfigOutput) ToScheduleTargetDeadLetterConfigPtrOutput() ScheduleTargetDeadLetterConfigPtrOutput {
	return o.ToScheduleTargetDeadLetterConfigPtrOutputWithContext(context.Background())
}

func (o ScheduleTargetDeadLetterConfigOutput) ToScheduleTargetDeadLetterConfigPtrOutputWithContext(ctx context.Context) ScheduleTargetDeadLetterConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduleTargetDeadLetterConfig) *ScheduleTargetDeadLetterConfig {
		return &v
	}).(ScheduleTargetDeadLetterConfigPtrOutput)
}

func (o ScheduleTargetDeadLetterConfigOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleTargetDeadLetterConfig) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

type ScheduleTargetDeadLetterConfigPtrOutput struct{ *pulumi.OutputState }

func (ScheduleTargetDeadLetterConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleTargetDeadLetterConfig)(nil)).Elem()
}

func (o ScheduleTargetDeadLetterConfigPtrOutput) ToScheduleTargetDeadLetterConfigPtrOutput() ScheduleTargetDeadLetterConfigPtrOutput {
	return o
}

func (o ScheduleTargetDeadLetterConfigPtrOutput) ToScheduleTargetDeadLetterConfigPtrOutputWithContext(ctx context.Context) ScheduleTargetDeadLetterConfigPtrOutput {
	return o
}

func (o ScheduleTargetDeadLetterConfigPtrOutput) Elem() ScheduleTargetDeadLetterConfigOutput {
	return o.ApplyT(func(v *ScheduleTargetDeadLetterConfig) ScheduleTargetDeadLetterConfig {
		if v != nil {
			return *v
		}
		var ret ScheduleTargetDeadLetterConfig
		return ret
	}).(ScheduleTargetDeadLetterConfigOutput)
}

func (o ScheduleTargetDeadLetterConfigPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleTargetDeadLetterConfig) *string {
		if v == nil {
			return nil
		}
		return v.Arn
	}).(pulumi.StringPtrOutput)
}

type ScheduleTargetEcsParameters struct {
	CapacityProviderStrategies []ScheduleTargetEcsParametersCapacityProviderStrategy `pulumi:"capacityProviderStrategies"`
	EnableEcsManagedTags       *bool                                                 `pulumi:"enableEcsManagedTags"`
	EnableExecuteCommand       *bool                                                 `pulumi:"enableExecuteCommand"`
	Group                      *string                                               `pulumi:"group"`
	LaunchType                 *string                                               `pulumi:"launchType"`
	NetworkConfiguration       *ScheduleTargetEcsParametersNetworkConfiguration      `pulumi:"networkConfiguration"`
	PlacementConstraints       []ScheduleTargetEcsParametersPlacementConstraint      `pulumi:"placementConstraints"`
	PlacementStrategies        []ScheduleTargetEcsParametersPlacementStrategy        `pulumi:"placementStrategies"`
	PlatformVersion            *string                                               `pulumi:"platformVersion"`
	PropagateTags              *string                                               `pulumi:"propagateTags"`
	ReferenceId                *string                                               `pulumi:"referenceId"`
	Tags                       map[string]string                                     `pulumi:"tags"`
	TaskCount                  *int                                                  `pulumi:"taskCount"`
	TaskDefinitionArn          string                                                `pulumi:"taskDefinitionArn"`
}

// ScheduleTargetEcsParametersInput is an input type that accepts ScheduleTargetEcsParametersArgs and ScheduleTargetEcsParametersOutput values.
// You can construct a concrete instance of `ScheduleTargetEcsParametersInput` via:
//
//	ScheduleTargetEcsParametersArgs{...}
type ScheduleTargetEcsParametersInput interface {
	pulumi.Input

	ToScheduleTargetEcsParametersOutput() ScheduleTargetEcsParametersOutput
	ToScheduleTargetEcsParametersOutputWithContext(context.Context) ScheduleTargetEcsParametersOutput
}

type ScheduleTargetEcsParametersArgs struct {
	CapacityProviderStrategies ScheduleTargetEcsParametersCapacityProviderStrategyArrayInput `pulumi:"capacityProviderStrategies"`
	EnableEcsManagedTags       pulumi.BoolPtrInput                                           `pulumi:"enableEcsManagedTags"`
	EnableExecuteCommand       pulumi.BoolPtrInput                                           `pulumi:"enableExecuteCommand"`
	Group                      pulumi.StringPtrInput                                         `pulumi:"group"`
	LaunchType                 pulumi.StringPtrInput                                         `pulumi:"launchType"`
	NetworkConfiguration       ScheduleTargetEcsParametersNetworkConfigurationPtrInput       `pulumi:"networkConfiguration"`
	PlacementConstraints       ScheduleTargetEcsParametersPlacementConstraintArrayInput      `pulumi:"placementConstraints"`
	PlacementStrategies        ScheduleTargetEcsParametersPlacementStrategyArrayInput        `pulumi:"placementStrategies"`
	PlatformVersion            pulumi.StringPtrInput                                         `pulumi:"platformVersion"`
	PropagateTags              pulumi.StringPtrInput                                         `pulumi:"propagateTags"`
	ReferenceId                pulumi.StringPtrInput                                         `pulumi:"referenceId"`
	Tags                       pulumi.StringMapInput                                         `pulumi:"tags"`
	TaskCount                  pulumi.IntPtrInput                                            `pulumi:"taskCount"`
	TaskDefinitionArn          pulumi.StringInput                                            `pulumi:"taskDefinitionArn"`
}

func (ScheduleTargetEcsParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTargetEcsParameters)(nil)).Elem()
}

func (i ScheduleTargetEcsParametersArgs) ToScheduleTargetEcsParametersOutput() ScheduleTargetEcsParametersOutput {
	return i.ToScheduleTargetEcsParametersOutputWithContext(context.Background())
}

func (i ScheduleTargetEcsParametersArgs) ToScheduleTargetEcsParametersOutputWithContext(ctx context.Context) ScheduleTargetEcsParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetEcsParametersOutput)
}

func (i ScheduleTargetEcsParametersArgs) ToScheduleTargetEcsParametersPtrOutput() ScheduleTargetEcsParametersPtrOutput {
	return i.ToScheduleTargetEcsParametersPtrOutputWithContext(context.Background())
}

func (i ScheduleTargetEcsParametersArgs) ToScheduleTargetEcsParametersPtrOutputWithContext(ctx context.Context) ScheduleTargetEcsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetEcsParametersOutput).ToScheduleTargetEcsParametersPtrOutputWithContext(ctx)
}

// ScheduleTargetEcsParametersPtrInput is an input type that accepts ScheduleTargetEcsParametersArgs, ScheduleTargetEcsParametersPtr and ScheduleTargetEcsParametersPtrOutput values.
// You can construct a concrete instance of `ScheduleTargetEcsParametersPtrInput` via:
//
//	        ScheduleTargetEcsParametersArgs{...}
//
//	or:
//
//	        nil
type ScheduleTargetEcsParametersPtrInput interface {
	pulumi.Input

	ToScheduleTargetEcsParametersPtrOutput() ScheduleTargetEcsParametersPtrOutput
	ToScheduleTargetEcsParametersPtrOutputWithContext(context.Context) ScheduleTargetEcsParametersPtrOutput
}

type scheduleTargetEcsParametersPtrType ScheduleTargetEcsParametersArgs

func ScheduleTargetEcsParametersPtr(v *ScheduleTargetEcsParametersArgs) ScheduleTargetEcsParametersPtrInput {
	return (*scheduleTargetEcsParametersPtrType)(v)
}

func (*scheduleTargetEcsParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleTargetEcsParameters)(nil)).Elem()
}

func (i *scheduleTargetEcsParametersPtrType) ToScheduleTargetEcsParametersPtrOutput() ScheduleTargetEcsParametersPtrOutput {
	return i.ToScheduleTargetEcsParametersPtrOutputWithContext(context.Background())
}

func (i *scheduleTargetEcsParametersPtrType) ToScheduleTargetEcsParametersPtrOutputWithContext(ctx context.Context) ScheduleTargetEcsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetEcsParametersPtrOutput)
}

type ScheduleTargetEcsParametersOutput struct{ *pulumi.OutputState }

func (ScheduleTargetEcsParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTargetEcsParameters)(nil)).Elem()
}

func (o ScheduleTargetEcsParametersOutput) ToScheduleTargetEcsParametersOutput() ScheduleTargetEcsParametersOutput {
	return o
}

func (o ScheduleTargetEcsParametersOutput) ToScheduleTargetEcsParametersOutputWithContext(ctx context.Context) ScheduleTargetEcsParametersOutput {
	return o
}

func (o ScheduleTargetEcsParametersOutput) ToScheduleTargetEcsParametersPtrOutput() ScheduleTargetEcsParametersPtrOutput {
	return o.ToScheduleTargetEcsParametersPtrOutputWithContext(context.Background())
}

func (o ScheduleTargetEcsParametersOutput) ToScheduleTargetEcsParametersPtrOutputWithContext(ctx context.Context) ScheduleTargetEcsParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduleTargetEcsParameters) *ScheduleTargetEcsParameters {
		return &v
	}).(ScheduleTargetEcsParametersPtrOutput)
}

func (o ScheduleTargetEcsParametersOutput) CapacityProviderStrategies() ScheduleTargetEcsParametersCapacityProviderStrategyArrayOutput {
	return o.ApplyT(func(v ScheduleTargetEcsParameters) []ScheduleTargetEcsParametersCapacityProviderStrategy {
		return v.CapacityProviderStrategies
	}).(ScheduleTargetEcsParametersCapacityProviderStrategyArrayOutput)
}

func (o ScheduleTargetEcsParametersOutput) EnableEcsManagedTags() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScheduleTargetEcsParameters) *bool { return v.EnableEcsManagedTags }).(pulumi.BoolPtrOutput)
}

func (o ScheduleTargetEcsParametersOutput) EnableExecuteCommand() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScheduleTargetEcsParameters) *bool { return v.EnableExecuteCommand }).(pulumi.BoolPtrOutput)
}

func (o ScheduleTargetEcsParametersOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleTargetEcsParameters) *string { return v.Group }).(pulumi.StringPtrOutput)
}

func (o ScheduleTargetEcsParametersOutput) LaunchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleTargetEcsParameters) *string { return v.LaunchType }).(pulumi.StringPtrOutput)
}

func (o ScheduleTargetEcsParametersOutput) NetworkConfiguration() ScheduleTargetEcsParametersNetworkConfigurationPtrOutput {
	return o.ApplyT(func(v ScheduleTargetEcsParameters) *ScheduleTargetEcsParametersNetworkConfiguration {
		return v.NetworkConfiguration
	}).(ScheduleTargetEcsParametersNetworkConfigurationPtrOutput)
}

func (o ScheduleTargetEcsParametersOutput) PlacementConstraints() ScheduleTargetEcsParametersPlacementConstraintArrayOutput {
	return o.ApplyT(func(v ScheduleTargetEcsParameters) []ScheduleTargetEcsParametersPlacementConstraint {
		return v.PlacementConstraints
	}).(ScheduleTargetEcsParametersPlacementConstraintArrayOutput)
}

func (o ScheduleTargetEcsParametersOutput) PlacementStrategies() ScheduleTargetEcsParametersPlacementStrategyArrayOutput {
	return o.ApplyT(func(v ScheduleTargetEcsParameters) []ScheduleTargetEcsParametersPlacementStrategy {
		return v.PlacementStrategies
	}).(ScheduleTargetEcsParametersPlacementStrategyArrayOutput)
}

func (o ScheduleTargetEcsParametersOutput) PlatformVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleTargetEcsParameters) *string { return v.PlatformVersion }).(pulumi.StringPtrOutput)
}

func (o ScheduleTargetEcsParametersOutput) PropagateTags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleTargetEcsParameters) *string { return v.PropagateTags }).(pulumi.StringPtrOutput)
}

func (o ScheduleTargetEcsParametersOutput) ReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleTargetEcsParameters) *string { return v.ReferenceId }).(pulumi.StringPtrOutput)
}

func (o ScheduleTargetEcsParametersOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v ScheduleTargetEcsParameters) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o ScheduleTargetEcsParametersOutput) TaskCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduleTargetEcsParameters) *int { return v.TaskCount }).(pulumi.IntPtrOutput)
}

func (o ScheduleTargetEcsParametersOutput) TaskDefinitionArn() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleTargetEcsParameters) string { return v.TaskDefinitionArn }).(pulumi.StringOutput)
}

type ScheduleTargetEcsParametersPtrOutput struct{ *pulumi.OutputState }

func (ScheduleTargetEcsParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleTargetEcsParameters)(nil)).Elem()
}

func (o ScheduleTargetEcsParametersPtrOutput) ToScheduleTargetEcsParametersPtrOutput() ScheduleTargetEcsParametersPtrOutput {
	return o
}

func (o ScheduleTargetEcsParametersPtrOutput) ToScheduleTargetEcsParametersPtrOutputWithContext(ctx context.Context) ScheduleTargetEcsParametersPtrOutput {
	return o
}

func (o ScheduleTargetEcsParametersPtrOutput) Elem() ScheduleTargetEcsParametersOutput {
	return o.ApplyT(func(v *ScheduleTargetEcsParameters) ScheduleTargetEcsParameters {
		if v != nil {
			return *v
		}
		var ret ScheduleTargetEcsParameters
		return ret
	}).(ScheduleTargetEcsParametersOutput)
}

func (o ScheduleTargetEcsParametersPtrOutput) CapacityProviderStrategies() ScheduleTargetEcsParametersCapacityProviderStrategyArrayOutput {
	return o.ApplyT(func(v *ScheduleTargetEcsParameters) []ScheduleTargetEcsParametersCapacityProviderStrategy {
		if v == nil {
			return nil
		}
		return v.CapacityProviderStrategies
	}).(ScheduleTargetEcsParametersCapacityProviderStrategyArrayOutput)
}

func (o ScheduleTargetEcsParametersPtrOutput) EnableEcsManagedTags() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScheduleTargetEcsParameters) *bool {
		if v == nil {
			return nil
		}
		return v.EnableEcsManagedTags
	}).(pulumi.BoolPtrOutput)
}

func (o ScheduleTargetEcsParametersPtrOutput) EnableExecuteCommand() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScheduleTargetEcsParameters) *bool {
		if v == nil {
			return nil
		}
		return v.EnableExecuteCommand
	}).(pulumi.BoolPtrOutput)
}

func (o ScheduleTargetEcsParametersPtrOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleTargetEcsParameters) *string {
		if v == nil {
			return nil
		}
		return v.Group
	}).(pulumi.StringPtrOutput)
}

func (o ScheduleTargetEcsParametersPtrOutput) LaunchType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleTargetEcsParameters) *string {
		if v == nil {
			return nil
		}
		return v.LaunchType
	}).(pulumi.StringPtrOutput)
}

func (o ScheduleTargetEcsParametersPtrOutput) NetworkConfiguration() ScheduleTargetEcsParametersNetworkConfigurationPtrOutput {
	return o.ApplyT(func(v *ScheduleTargetEcsParameters) *ScheduleTargetEcsParametersNetworkConfiguration {
		if v == nil {
			return nil
		}
		return v.NetworkConfiguration
	}).(ScheduleTargetEcsParametersNetworkConfigurationPtrOutput)
}

func (o ScheduleTargetEcsParametersPtrOutput) PlacementConstraints() ScheduleTargetEcsParametersPlacementConstraintArrayOutput {
	return o.ApplyT(func(v *ScheduleTargetEcsParameters) []ScheduleTargetEcsParametersPlacementConstraint {
		if v == nil {
			return nil
		}
		return v.PlacementConstraints
	}).(ScheduleTargetEcsParametersPlacementConstraintArrayOutput)
}

func (o ScheduleTargetEcsParametersPtrOutput) PlacementStrategies() ScheduleTargetEcsParametersPlacementStrategyArrayOutput {
	return o.ApplyT(func(v *ScheduleTargetEcsParameters) []ScheduleTargetEcsParametersPlacementStrategy {
		if v == nil {
			return nil
		}
		return v.PlacementStrategies
	}).(ScheduleTargetEcsParametersPlacementStrategyArrayOutput)
}

func (o ScheduleTargetEcsParametersPtrOutput) PlatformVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleTargetEcsParameters) *string {
		if v == nil {
			return nil
		}
		return v.PlatformVersion
	}).(pulumi.StringPtrOutput)
}

func (o ScheduleTargetEcsParametersPtrOutput) PropagateTags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleTargetEcsParameters) *string {
		if v == nil {
			return nil
		}
		return v.PropagateTags
	}).(pulumi.StringPtrOutput)
}

func (o ScheduleTargetEcsParametersPtrOutput) ReferenceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleTargetEcsParameters) *string {
		if v == nil {
			return nil
		}
		return v.ReferenceId
	}).(pulumi.StringPtrOutput)
}

func (o ScheduleTargetEcsParametersPtrOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ScheduleTargetEcsParameters) map[string]string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringMapOutput)
}

func (o ScheduleTargetEcsParametersPtrOutput) TaskCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScheduleTargetEcsParameters) *int {
		if v == nil {
			return nil
		}
		return v.TaskCount
	}).(pulumi.IntPtrOutput)
}

func (o ScheduleTargetEcsParametersPtrOutput) TaskDefinitionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleTargetEcsParameters) *string {
		if v == nil {
			return nil
		}
		return &v.TaskDefinitionArn
	}).(pulumi.StringPtrOutput)
}

type ScheduleTargetEcsParametersCapacityProviderStrategy struct {
	Base             *int   `pulumi:"base"`
	CapacityProvider string `pulumi:"capacityProvider"`
	Weight           *int   `pulumi:"weight"`
}

// ScheduleTargetEcsParametersCapacityProviderStrategyInput is an input type that accepts ScheduleTargetEcsParametersCapacityProviderStrategyArgs and ScheduleTargetEcsParametersCapacityProviderStrategyOutput values.
// You can construct a concrete instance of `ScheduleTargetEcsParametersCapacityProviderStrategyInput` via:
//
//	ScheduleTargetEcsParametersCapacityProviderStrategyArgs{...}
type ScheduleTargetEcsParametersCapacityProviderStrategyInput interface {
	pulumi.Input

	ToScheduleTargetEcsParametersCapacityProviderStrategyOutput() ScheduleTargetEcsParametersCapacityProviderStrategyOutput
	ToScheduleTargetEcsParametersCapacityProviderStrategyOutputWithContext(context.Context) ScheduleTargetEcsParametersCapacityProviderStrategyOutput
}

type ScheduleTargetEcsParametersCapacityProviderStrategyArgs struct {
	Base             pulumi.IntPtrInput `pulumi:"base"`
	CapacityProvider pulumi.StringInput `pulumi:"capacityProvider"`
	Weight           pulumi.IntPtrInput `pulumi:"weight"`
}

func (ScheduleTargetEcsParametersCapacityProviderStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTargetEcsParametersCapacityProviderStrategy)(nil)).Elem()
}

func (i ScheduleTargetEcsParametersCapacityProviderStrategyArgs) ToScheduleTargetEcsParametersCapacityProviderStrategyOutput() ScheduleTargetEcsParametersCapacityProviderStrategyOutput {
	return i.ToScheduleTargetEcsParametersCapacityProviderStrategyOutputWithContext(context.Background())
}

func (i ScheduleTargetEcsParametersCapacityProviderStrategyArgs) ToScheduleTargetEcsParametersCapacityProviderStrategyOutputWithContext(ctx context.Context) ScheduleTargetEcsParametersCapacityProviderStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetEcsParametersCapacityProviderStrategyOutput)
}

// ScheduleTargetEcsParametersCapacityProviderStrategyArrayInput is an input type that accepts ScheduleTargetEcsParametersCapacityProviderStrategyArray and ScheduleTargetEcsParametersCapacityProviderStrategyArrayOutput values.
// You can construct a concrete instance of `ScheduleTargetEcsParametersCapacityProviderStrategyArrayInput` via:
//
//	ScheduleTargetEcsParametersCapacityProviderStrategyArray{ ScheduleTargetEcsParametersCapacityProviderStrategyArgs{...} }
type ScheduleTargetEcsParametersCapacityProviderStrategyArrayInput interface {
	pulumi.Input

	ToScheduleTargetEcsParametersCapacityProviderStrategyArrayOutput() ScheduleTargetEcsParametersCapacityProviderStrategyArrayOutput
	ToScheduleTargetEcsParametersCapacityProviderStrategyArrayOutputWithContext(context.Context) ScheduleTargetEcsParametersCapacityProviderStrategyArrayOutput
}

type ScheduleTargetEcsParametersCapacityProviderStrategyArray []ScheduleTargetEcsParametersCapacityProviderStrategyInput

func (ScheduleTargetEcsParametersCapacityProviderStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduleTargetEcsParametersCapacityProviderStrategy)(nil)).Elem()
}

func (i ScheduleTargetEcsParametersCapacityProviderStrategyArray) ToScheduleTargetEcsParametersCapacityProviderStrategyArrayOutput() ScheduleTargetEcsParametersCapacityProviderStrategyArrayOutput {
	return i.ToScheduleTargetEcsParametersCapacityProviderStrategyArrayOutputWithContext(context.Background())
}

func (i ScheduleTargetEcsParametersCapacityProviderStrategyArray) ToScheduleTargetEcsParametersCapacityProviderStrategyArrayOutputWithContext(ctx context.Context) ScheduleTargetEcsParametersCapacityProviderStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetEcsParametersCapacityProviderStrategyArrayOutput)
}

type ScheduleTargetEcsParametersCapacityProviderStrategyOutput struct{ *pulumi.OutputState }

func (ScheduleTargetEcsParametersCapacityProviderStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTargetEcsParametersCapacityProviderStrategy)(nil)).Elem()
}

func (o ScheduleTargetEcsParametersCapacityProviderStrategyOutput) ToScheduleTargetEcsParametersCapacityProviderStrategyOutput() ScheduleTargetEcsParametersCapacityProviderStrategyOutput {
	return o
}

func (o ScheduleTargetEcsParametersCapacityProviderStrategyOutput) ToScheduleTargetEcsParametersCapacityProviderStrategyOutputWithContext(ctx context.Context) ScheduleTargetEcsParametersCapacityProviderStrategyOutput {
	return o
}

func (o ScheduleTargetEcsParametersCapacityProviderStrategyOutput) Base() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduleTargetEcsParametersCapacityProviderStrategy) *int { return v.Base }).(pulumi.IntPtrOutput)
}

func (o ScheduleTargetEcsParametersCapacityProviderStrategyOutput) CapacityProvider() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleTargetEcsParametersCapacityProviderStrategy) string { return v.CapacityProvider }).(pulumi.StringOutput)
}

func (o ScheduleTargetEcsParametersCapacityProviderStrategyOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduleTargetEcsParametersCapacityProviderStrategy) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type ScheduleTargetEcsParametersCapacityProviderStrategyArrayOutput struct{ *pulumi.OutputState }

func (ScheduleTargetEcsParametersCapacityProviderStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduleTargetEcsParametersCapacityProviderStrategy)(nil)).Elem()
}

func (o ScheduleTargetEcsParametersCapacityProviderStrategyArrayOutput) ToScheduleTargetEcsParametersCapacityProviderStrategyArrayOutput() ScheduleTargetEcsParametersCapacityProviderStrategyArrayOutput {
	return o
}

func (o ScheduleTargetEcsParametersCapacityProviderStrategyArrayOutput) ToScheduleTargetEcsParametersCapacityProviderStrategyArrayOutputWithContext(ctx context.Context) ScheduleTargetEcsParametersCapacityProviderStrategyArrayOutput {
	return o
}

func (o ScheduleTargetEcsParametersCapacityProviderStrategyArrayOutput) Index(i pulumi.IntInput) ScheduleTargetEcsParametersCapacityProviderStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduleTargetEcsParametersCapacityProviderStrategy {
		return vs[0].([]ScheduleTargetEcsParametersCapacityProviderStrategy)[vs[1].(int)]
	}).(ScheduleTargetEcsParametersCapacityProviderStrategyOutput)
}

type ScheduleTargetEcsParametersNetworkConfiguration struct {
	AssignPublicIp *bool    `pulumi:"assignPublicIp"`
	SecurityGroups []string `pulumi:"securityGroups"`
	Subnets        []string `pulumi:"subnets"`
}

// ScheduleTargetEcsParametersNetworkConfigurationInput is an input type that accepts ScheduleTargetEcsParametersNetworkConfigurationArgs and ScheduleTargetEcsParametersNetworkConfigurationOutput values.
// You can construct a concrete instance of `ScheduleTargetEcsParametersNetworkConfigurationInput` via:
//
//	ScheduleTargetEcsParametersNetworkConfigurationArgs{...}
type ScheduleTargetEcsParametersNetworkConfigurationInput interface {
	pulumi.Input

	ToScheduleTargetEcsParametersNetworkConfigurationOutput() ScheduleTargetEcsParametersNetworkConfigurationOutput
	ToScheduleTargetEcsParametersNetworkConfigurationOutputWithContext(context.Context) ScheduleTargetEcsParametersNetworkConfigurationOutput
}

type ScheduleTargetEcsParametersNetworkConfigurationArgs struct {
	AssignPublicIp pulumi.BoolPtrInput     `pulumi:"assignPublicIp"`
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	Subnets        pulumi.StringArrayInput `pulumi:"subnets"`
}

func (ScheduleTargetEcsParametersNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTargetEcsParametersNetworkConfiguration)(nil)).Elem()
}

func (i ScheduleTargetEcsParametersNetworkConfigurationArgs) ToScheduleTargetEcsParametersNetworkConfigurationOutput() ScheduleTargetEcsParametersNetworkConfigurationOutput {
	return i.ToScheduleTargetEcsParametersNetworkConfigurationOutputWithContext(context.Background())
}

func (i ScheduleTargetEcsParametersNetworkConfigurationArgs) ToScheduleTargetEcsParametersNetworkConfigurationOutputWithContext(ctx context.Context) ScheduleTargetEcsParametersNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetEcsParametersNetworkConfigurationOutput)
}

func (i ScheduleTargetEcsParametersNetworkConfigurationArgs) ToScheduleTargetEcsParametersNetworkConfigurationPtrOutput() ScheduleTargetEcsParametersNetworkConfigurationPtrOutput {
	return i.ToScheduleTargetEcsParametersNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i ScheduleTargetEcsParametersNetworkConfigurationArgs) ToScheduleTargetEcsParametersNetworkConfigurationPtrOutputWithContext(ctx context.Context) ScheduleTargetEcsParametersNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetEcsParametersNetworkConfigurationOutput).ToScheduleTargetEcsParametersNetworkConfigurationPtrOutputWithContext(ctx)
}

// ScheduleTargetEcsParametersNetworkConfigurationPtrInput is an input type that accepts ScheduleTargetEcsParametersNetworkConfigurationArgs, ScheduleTargetEcsParametersNetworkConfigurationPtr and ScheduleTargetEcsParametersNetworkConfigurationPtrOutput values.
// You can construct a concrete instance of `ScheduleTargetEcsParametersNetworkConfigurationPtrInput` via:
//
//	        ScheduleTargetEcsParametersNetworkConfigurationArgs{...}
//
//	or:
//
//	        nil
type ScheduleTargetEcsParametersNetworkConfigurationPtrInput interface {
	pulumi.Input

	ToScheduleTargetEcsParametersNetworkConfigurationPtrOutput() ScheduleTargetEcsParametersNetworkConfigurationPtrOutput
	ToScheduleTargetEcsParametersNetworkConfigurationPtrOutputWithContext(context.Context) ScheduleTargetEcsParametersNetworkConfigurationPtrOutput
}

type scheduleTargetEcsParametersNetworkConfigurationPtrType ScheduleTargetEcsParametersNetworkConfigurationArgs

func ScheduleTargetEcsParametersNetworkConfigurationPtr(v *ScheduleTargetEcsParametersNetworkConfigurationArgs) ScheduleTargetEcsParametersNetworkConfigurationPtrInput {
	return (*scheduleTargetEcsParametersNetworkConfigurationPtrType)(v)
}

func (*scheduleTargetEcsParametersNetworkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleTargetEcsParametersNetworkConfiguration)(nil)).Elem()
}

func (i *scheduleTargetEcsParametersNetworkConfigurationPtrType) ToScheduleTargetEcsParametersNetworkConfigurationPtrOutput() ScheduleTargetEcsParametersNetworkConfigurationPtrOutput {
	return i.ToScheduleTargetEcsParametersNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i *scheduleTargetEcsParametersNetworkConfigurationPtrType) ToScheduleTargetEcsParametersNetworkConfigurationPtrOutputWithContext(ctx context.Context) ScheduleTargetEcsParametersNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetEcsParametersNetworkConfigurationPtrOutput)
}

type ScheduleTargetEcsParametersNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (ScheduleTargetEcsParametersNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTargetEcsParametersNetworkConfiguration)(nil)).Elem()
}

func (o ScheduleTargetEcsParametersNetworkConfigurationOutput) ToScheduleTargetEcsParametersNetworkConfigurationOutput() ScheduleTargetEcsParametersNetworkConfigurationOutput {
	return o
}

func (o ScheduleTargetEcsParametersNetworkConfigurationOutput) ToScheduleTargetEcsParametersNetworkConfigurationOutputWithContext(ctx context.Context) ScheduleTargetEcsParametersNetworkConfigurationOutput {
	return o
}

func (o ScheduleTargetEcsParametersNetworkConfigurationOutput) ToScheduleTargetEcsParametersNetworkConfigurationPtrOutput() ScheduleTargetEcsParametersNetworkConfigurationPtrOutput {
	return o.ToScheduleTargetEcsParametersNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (o ScheduleTargetEcsParametersNetworkConfigurationOutput) ToScheduleTargetEcsParametersNetworkConfigurationPtrOutputWithContext(ctx context.Context) ScheduleTargetEcsParametersNetworkConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduleTargetEcsParametersNetworkConfiguration) *ScheduleTargetEcsParametersNetworkConfiguration {
		return &v
	}).(ScheduleTargetEcsParametersNetworkConfigurationPtrOutput)
}

func (o ScheduleTargetEcsParametersNetworkConfigurationOutput) AssignPublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScheduleTargetEcsParametersNetworkConfiguration) *bool { return v.AssignPublicIp }).(pulumi.BoolPtrOutput)
}

func (o ScheduleTargetEcsParametersNetworkConfigurationOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScheduleTargetEcsParametersNetworkConfiguration) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o ScheduleTargetEcsParametersNetworkConfigurationOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScheduleTargetEcsParametersNetworkConfiguration) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

type ScheduleTargetEcsParametersNetworkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ScheduleTargetEcsParametersNetworkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleTargetEcsParametersNetworkConfiguration)(nil)).Elem()
}

func (o ScheduleTargetEcsParametersNetworkConfigurationPtrOutput) ToScheduleTargetEcsParametersNetworkConfigurationPtrOutput() ScheduleTargetEcsParametersNetworkConfigurationPtrOutput {
	return o
}

func (o ScheduleTargetEcsParametersNetworkConfigurationPtrOutput) ToScheduleTargetEcsParametersNetworkConfigurationPtrOutputWithContext(ctx context.Context) ScheduleTargetEcsParametersNetworkConfigurationPtrOutput {
	return o
}

func (o ScheduleTargetEcsParametersNetworkConfigurationPtrOutput) Elem() ScheduleTargetEcsParametersNetworkConfigurationOutput {
	return o.ApplyT(func(v *ScheduleTargetEcsParametersNetworkConfiguration) ScheduleTargetEcsParametersNetworkConfiguration {
		if v != nil {
			return *v
		}
		var ret ScheduleTargetEcsParametersNetworkConfiguration
		return ret
	}).(ScheduleTargetEcsParametersNetworkConfigurationOutput)
}

func (o ScheduleTargetEcsParametersNetworkConfigurationPtrOutput) AssignPublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ScheduleTargetEcsParametersNetworkConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.AssignPublicIp
	}).(pulumi.BoolPtrOutput)
}

func (o ScheduleTargetEcsParametersNetworkConfigurationPtrOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScheduleTargetEcsParametersNetworkConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroups
	}).(pulumi.StringArrayOutput)
}

func (o ScheduleTargetEcsParametersNetworkConfigurationPtrOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScheduleTargetEcsParametersNetworkConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(pulumi.StringArrayOutput)
}

type ScheduleTargetEcsParametersPlacementConstraint struct {
	Expression *string `pulumi:"expression"`
	Type       string  `pulumi:"type"`
}

// ScheduleTargetEcsParametersPlacementConstraintInput is an input type that accepts ScheduleTargetEcsParametersPlacementConstraintArgs and ScheduleTargetEcsParametersPlacementConstraintOutput values.
// You can construct a concrete instance of `ScheduleTargetEcsParametersPlacementConstraintInput` via:
//
//	ScheduleTargetEcsParametersPlacementConstraintArgs{...}
type ScheduleTargetEcsParametersPlacementConstraintInput interface {
	pulumi.Input

	ToScheduleTargetEcsParametersPlacementConstraintOutput() ScheduleTargetEcsParametersPlacementConstraintOutput
	ToScheduleTargetEcsParametersPlacementConstraintOutputWithContext(context.Context) ScheduleTargetEcsParametersPlacementConstraintOutput
}

type ScheduleTargetEcsParametersPlacementConstraintArgs struct {
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	Type       pulumi.StringInput    `pulumi:"type"`
}

func (ScheduleTargetEcsParametersPlacementConstraintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTargetEcsParametersPlacementConstraint)(nil)).Elem()
}

func (i ScheduleTargetEcsParametersPlacementConstraintArgs) ToScheduleTargetEcsParametersPlacementConstraintOutput() ScheduleTargetEcsParametersPlacementConstraintOutput {
	return i.ToScheduleTargetEcsParametersPlacementConstraintOutputWithContext(context.Background())
}

func (i ScheduleTargetEcsParametersPlacementConstraintArgs) ToScheduleTargetEcsParametersPlacementConstraintOutputWithContext(ctx context.Context) ScheduleTargetEcsParametersPlacementConstraintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetEcsParametersPlacementConstraintOutput)
}

// ScheduleTargetEcsParametersPlacementConstraintArrayInput is an input type that accepts ScheduleTargetEcsParametersPlacementConstraintArray and ScheduleTargetEcsParametersPlacementConstraintArrayOutput values.
// You can construct a concrete instance of `ScheduleTargetEcsParametersPlacementConstraintArrayInput` via:
//
//	ScheduleTargetEcsParametersPlacementConstraintArray{ ScheduleTargetEcsParametersPlacementConstraintArgs{...} }
type ScheduleTargetEcsParametersPlacementConstraintArrayInput interface {
	pulumi.Input

	ToScheduleTargetEcsParametersPlacementConstraintArrayOutput() ScheduleTargetEcsParametersPlacementConstraintArrayOutput
	ToScheduleTargetEcsParametersPlacementConstraintArrayOutputWithContext(context.Context) ScheduleTargetEcsParametersPlacementConstraintArrayOutput
}

type ScheduleTargetEcsParametersPlacementConstraintArray []ScheduleTargetEcsParametersPlacementConstraintInput

func (ScheduleTargetEcsParametersPlacementConstraintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduleTargetEcsParametersPlacementConstraint)(nil)).Elem()
}

func (i ScheduleTargetEcsParametersPlacementConstraintArray) ToScheduleTargetEcsParametersPlacementConstraintArrayOutput() ScheduleTargetEcsParametersPlacementConstraintArrayOutput {
	return i.ToScheduleTargetEcsParametersPlacementConstraintArrayOutputWithContext(context.Background())
}

func (i ScheduleTargetEcsParametersPlacementConstraintArray) ToScheduleTargetEcsParametersPlacementConstraintArrayOutputWithContext(ctx context.Context) ScheduleTargetEcsParametersPlacementConstraintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetEcsParametersPlacementConstraintArrayOutput)
}

type ScheduleTargetEcsParametersPlacementConstraintOutput struct{ *pulumi.OutputState }

func (ScheduleTargetEcsParametersPlacementConstraintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTargetEcsParametersPlacementConstraint)(nil)).Elem()
}

func (o ScheduleTargetEcsParametersPlacementConstraintOutput) ToScheduleTargetEcsParametersPlacementConstraintOutput() ScheduleTargetEcsParametersPlacementConstraintOutput {
	return o
}

func (o ScheduleTargetEcsParametersPlacementConstraintOutput) ToScheduleTargetEcsParametersPlacementConstraintOutputWithContext(ctx context.Context) ScheduleTargetEcsParametersPlacementConstraintOutput {
	return o
}

func (o ScheduleTargetEcsParametersPlacementConstraintOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleTargetEcsParametersPlacementConstraint) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

func (o ScheduleTargetEcsParametersPlacementConstraintOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleTargetEcsParametersPlacementConstraint) string { return v.Type }).(pulumi.StringOutput)
}

type ScheduleTargetEcsParametersPlacementConstraintArrayOutput struct{ *pulumi.OutputState }

func (ScheduleTargetEcsParametersPlacementConstraintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduleTargetEcsParametersPlacementConstraint)(nil)).Elem()
}

func (o ScheduleTargetEcsParametersPlacementConstraintArrayOutput) ToScheduleTargetEcsParametersPlacementConstraintArrayOutput() ScheduleTargetEcsParametersPlacementConstraintArrayOutput {
	return o
}

func (o ScheduleTargetEcsParametersPlacementConstraintArrayOutput) ToScheduleTargetEcsParametersPlacementConstraintArrayOutputWithContext(ctx context.Context) ScheduleTargetEcsParametersPlacementConstraintArrayOutput {
	return o
}

func (o ScheduleTargetEcsParametersPlacementConstraintArrayOutput) Index(i pulumi.IntInput) ScheduleTargetEcsParametersPlacementConstraintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduleTargetEcsParametersPlacementConstraint {
		return vs[0].([]ScheduleTargetEcsParametersPlacementConstraint)[vs[1].(int)]
	}).(ScheduleTargetEcsParametersPlacementConstraintOutput)
}

type ScheduleTargetEcsParametersPlacementStrategy struct {
	Field *string `pulumi:"field"`
	Type  string  `pulumi:"type"`
}

// ScheduleTargetEcsParametersPlacementStrategyInput is an input type that accepts ScheduleTargetEcsParametersPlacementStrategyArgs and ScheduleTargetEcsParametersPlacementStrategyOutput values.
// You can construct a concrete instance of `ScheduleTargetEcsParametersPlacementStrategyInput` via:
//
//	ScheduleTargetEcsParametersPlacementStrategyArgs{...}
type ScheduleTargetEcsParametersPlacementStrategyInput interface {
	pulumi.Input

	ToScheduleTargetEcsParametersPlacementStrategyOutput() ScheduleTargetEcsParametersPlacementStrategyOutput
	ToScheduleTargetEcsParametersPlacementStrategyOutputWithContext(context.Context) ScheduleTargetEcsParametersPlacementStrategyOutput
}

type ScheduleTargetEcsParametersPlacementStrategyArgs struct {
	Field pulumi.StringPtrInput `pulumi:"field"`
	Type  pulumi.StringInput    `pulumi:"type"`
}

func (ScheduleTargetEcsParametersPlacementStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTargetEcsParametersPlacementStrategy)(nil)).Elem()
}

func (i ScheduleTargetEcsParametersPlacementStrategyArgs) ToScheduleTargetEcsParametersPlacementStrategyOutput() ScheduleTargetEcsParametersPlacementStrategyOutput {
	return i.ToScheduleTargetEcsParametersPlacementStrategyOutputWithContext(context.Background())
}

func (i ScheduleTargetEcsParametersPlacementStrategyArgs) ToScheduleTargetEcsParametersPlacementStrategyOutputWithContext(ctx context.Context) ScheduleTargetEcsParametersPlacementStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetEcsParametersPlacementStrategyOutput)
}

// ScheduleTargetEcsParametersPlacementStrategyArrayInput is an input type that accepts ScheduleTargetEcsParametersPlacementStrategyArray and ScheduleTargetEcsParametersPlacementStrategyArrayOutput values.
// You can construct a concrete instance of `ScheduleTargetEcsParametersPlacementStrategyArrayInput` via:
//
//	ScheduleTargetEcsParametersPlacementStrategyArray{ ScheduleTargetEcsParametersPlacementStrategyArgs{...} }
type ScheduleTargetEcsParametersPlacementStrategyArrayInput interface {
	pulumi.Input

	ToScheduleTargetEcsParametersPlacementStrategyArrayOutput() ScheduleTargetEcsParametersPlacementStrategyArrayOutput
	ToScheduleTargetEcsParametersPlacementStrategyArrayOutputWithContext(context.Context) ScheduleTargetEcsParametersPlacementStrategyArrayOutput
}

type ScheduleTargetEcsParametersPlacementStrategyArray []ScheduleTargetEcsParametersPlacementStrategyInput

func (ScheduleTargetEcsParametersPlacementStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduleTargetEcsParametersPlacementStrategy)(nil)).Elem()
}

func (i ScheduleTargetEcsParametersPlacementStrategyArray) ToScheduleTargetEcsParametersPlacementStrategyArrayOutput() ScheduleTargetEcsParametersPlacementStrategyArrayOutput {
	return i.ToScheduleTargetEcsParametersPlacementStrategyArrayOutputWithContext(context.Background())
}

func (i ScheduleTargetEcsParametersPlacementStrategyArray) ToScheduleTargetEcsParametersPlacementStrategyArrayOutputWithContext(ctx context.Context) ScheduleTargetEcsParametersPlacementStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetEcsParametersPlacementStrategyArrayOutput)
}

type ScheduleTargetEcsParametersPlacementStrategyOutput struct{ *pulumi.OutputState }

func (ScheduleTargetEcsParametersPlacementStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTargetEcsParametersPlacementStrategy)(nil)).Elem()
}

func (o ScheduleTargetEcsParametersPlacementStrategyOutput) ToScheduleTargetEcsParametersPlacementStrategyOutput() ScheduleTargetEcsParametersPlacementStrategyOutput {
	return o
}

func (o ScheduleTargetEcsParametersPlacementStrategyOutput) ToScheduleTargetEcsParametersPlacementStrategyOutputWithContext(ctx context.Context) ScheduleTargetEcsParametersPlacementStrategyOutput {
	return o
}

func (o ScheduleTargetEcsParametersPlacementStrategyOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleTargetEcsParametersPlacementStrategy) *string { return v.Field }).(pulumi.StringPtrOutput)
}

func (o ScheduleTargetEcsParametersPlacementStrategyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleTargetEcsParametersPlacementStrategy) string { return v.Type }).(pulumi.StringOutput)
}

type ScheduleTargetEcsParametersPlacementStrategyArrayOutput struct{ *pulumi.OutputState }

func (ScheduleTargetEcsParametersPlacementStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduleTargetEcsParametersPlacementStrategy)(nil)).Elem()
}

func (o ScheduleTargetEcsParametersPlacementStrategyArrayOutput) ToScheduleTargetEcsParametersPlacementStrategyArrayOutput() ScheduleTargetEcsParametersPlacementStrategyArrayOutput {
	return o
}

func (o ScheduleTargetEcsParametersPlacementStrategyArrayOutput) ToScheduleTargetEcsParametersPlacementStrategyArrayOutputWithContext(ctx context.Context) ScheduleTargetEcsParametersPlacementStrategyArrayOutput {
	return o
}

func (o ScheduleTargetEcsParametersPlacementStrategyArrayOutput) Index(i pulumi.IntInput) ScheduleTargetEcsParametersPlacementStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduleTargetEcsParametersPlacementStrategy {
		return vs[0].([]ScheduleTargetEcsParametersPlacementStrategy)[vs[1].(int)]
	}).(ScheduleTargetEcsParametersPlacementStrategyOutput)
}

type ScheduleTargetEventbridgeParameters struct {
	DetailType string `pulumi:"detailType"`
	Source     string `pulumi:"source"`
}

// ScheduleTargetEventbridgeParametersInput is an input type that accepts ScheduleTargetEventbridgeParametersArgs and ScheduleTargetEventbridgeParametersOutput values.
// You can construct a concrete instance of `ScheduleTargetEventbridgeParametersInput` via:
//
//	ScheduleTargetEventbridgeParametersArgs{...}
type ScheduleTargetEventbridgeParametersInput interface {
	pulumi.Input

	ToScheduleTargetEventbridgeParametersOutput() ScheduleTargetEventbridgeParametersOutput
	ToScheduleTargetEventbridgeParametersOutputWithContext(context.Context) ScheduleTargetEventbridgeParametersOutput
}

type ScheduleTargetEventbridgeParametersArgs struct {
	DetailType pulumi.StringInput `pulumi:"detailType"`
	Source     pulumi.StringInput `pulumi:"source"`
}

func (ScheduleTargetEventbridgeParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTargetEventbridgeParameters)(nil)).Elem()
}

func (i ScheduleTargetEventbridgeParametersArgs) ToScheduleTargetEventbridgeParametersOutput() ScheduleTargetEventbridgeParametersOutput {
	return i.ToScheduleTargetEventbridgeParametersOutputWithContext(context.Background())
}

func (i ScheduleTargetEventbridgeParametersArgs) ToScheduleTargetEventbridgeParametersOutputWithContext(ctx context.Context) ScheduleTargetEventbridgeParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetEventbridgeParametersOutput)
}

func (i ScheduleTargetEventbridgeParametersArgs) ToScheduleTargetEventbridgeParametersPtrOutput() ScheduleTargetEventbridgeParametersPtrOutput {
	return i.ToScheduleTargetEventbridgeParametersPtrOutputWithContext(context.Background())
}

func (i ScheduleTargetEventbridgeParametersArgs) ToScheduleTargetEventbridgeParametersPtrOutputWithContext(ctx context.Context) ScheduleTargetEventbridgeParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetEventbridgeParametersOutput).ToScheduleTargetEventbridgeParametersPtrOutputWithContext(ctx)
}

// ScheduleTargetEventbridgeParametersPtrInput is an input type that accepts ScheduleTargetEventbridgeParametersArgs, ScheduleTargetEventbridgeParametersPtr and ScheduleTargetEventbridgeParametersPtrOutput values.
// You can construct a concrete instance of `ScheduleTargetEventbridgeParametersPtrInput` via:
//
//	        ScheduleTargetEventbridgeParametersArgs{...}
//
//	or:
//
//	        nil
type ScheduleTargetEventbridgeParametersPtrInput interface {
	pulumi.Input

	ToScheduleTargetEventbridgeParametersPtrOutput() ScheduleTargetEventbridgeParametersPtrOutput
	ToScheduleTargetEventbridgeParametersPtrOutputWithContext(context.Context) ScheduleTargetEventbridgeParametersPtrOutput
}

type scheduleTargetEventbridgeParametersPtrType ScheduleTargetEventbridgeParametersArgs

func ScheduleTargetEventbridgeParametersPtr(v *ScheduleTargetEventbridgeParametersArgs) ScheduleTargetEventbridgeParametersPtrInput {
	return (*scheduleTargetEventbridgeParametersPtrType)(v)
}

func (*scheduleTargetEventbridgeParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleTargetEventbridgeParameters)(nil)).Elem()
}

func (i *scheduleTargetEventbridgeParametersPtrType) ToScheduleTargetEventbridgeParametersPtrOutput() ScheduleTargetEventbridgeParametersPtrOutput {
	return i.ToScheduleTargetEventbridgeParametersPtrOutputWithContext(context.Background())
}

func (i *scheduleTargetEventbridgeParametersPtrType) ToScheduleTargetEventbridgeParametersPtrOutputWithContext(ctx context.Context) ScheduleTargetEventbridgeParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetEventbridgeParametersPtrOutput)
}

type ScheduleTargetEventbridgeParametersOutput struct{ *pulumi.OutputState }

func (ScheduleTargetEventbridgeParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTargetEventbridgeParameters)(nil)).Elem()
}

func (o ScheduleTargetEventbridgeParametersOutput) ToScheduleTargetEventbridgeParametersOutput() ScheduleTargetEventbridgeParametersOutput {
	return o
}

func (o ScheduleTargetEventbridgeParametersOutput) ToScheduleTargetEventbridgeParametersOutputWithContext(ctx context.Context) ScheduleTargetEventbridgeParametersOutput {
	return o
}

func (o ScheduleTargetEventbridgeParametersOutput) ToScheduleTargetEventbridgeParametersPtrOutput() ScheduleTargetEventbridgeParametersPtrOutput {
	return o.ToScheduleTargetEventbridgeParametersPtrOutputWithContext(context.Background())
}

func (o ScheduleTargetEventbridgeParametersOutput) ToScheduleTargetEventbridgeParametersPtrOutputWithContext(ctx context.Context) ScheduleTargetEventbridgeParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduleTargetEventbridgeParameters) *ScheduleTargetEventbridgeParameters {
		return &v
	}).(ScheduleTargetEventbridgeParametersPtrOutput)
}

func (o ScheduleTargetEventbridgeParametersOutput) DetailType() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleTargetEventbridgeParameters) string { return v.DetailType }).(pulumi.StringOutput)
}

func (o ScheduleTargetEventbridgeParametersOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleTargetEventbridgeParameters) string { return v.Source }).(pulumi.StringOutput)
}

type ScheduleTargetEventbridgeParametersPtrOutput struct{ *pulumi.OutputState }

func (ScheduleTargetEventbridgeParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleTargetEventbridgeParameters)(nil)).Elem()
}

func (o ScheduleTargetEventbridgeParametersPtrOutput) ToScheduleTargetEventbridgeParametersPtrOutput() ScheduleTargetEventbridgeParametersPtrOutput {
	return o
}

func (o ScheduleTargetEventbridgeParametersPtrOutput) ToScheduleTargetEventbridgeParametersPtrOutputWithContext(ctx context.Context) ScheduleTargetEventbridgeParametersPtrOutput {
	return o
}

func (o ScheduleTargetEventbridgeParametersPtrOutput) Elem() ScheduleTargetEventbridgeParametersOutput {
	return o.ApplyT(func(v *ScheduleTargetEventbridgeParameters) ScheduleTargetEventbridgeParameters {
		if v != nil {
			return *v
		}
		var ret ScheduleTargetEventbridgeParameters
		return ret
	}).(ScheduleTargetEventbridgeParametersOutput)
}

func (o ScheduleTargetEventbridgeParametersPtrOutput) DetailType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleTargetEventbridgeParameters) *string {
		if v == nil {
			return nil
		}
		return &v.DetailType
	}).(pulumi.StringPtrOutput)
}

func (o ScheduleTargetEventbridgeParametersPtrOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleTargetEventbridgeParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Source
	}).(pulumi.StringPtrOutput)
}

type ScheduleTargetKinesisParameters struct {
	PartitionKey string `pulumi:"partitionKey"`
}

// ScheduleTargetKinesisParametersInput is an input type that accepts ScheduleTargetKinesisParametersArgs and ScheduleTargetKinesisParametersOutput values.
// You can construct a concrete instance of `ScheduleTargetKinesisParametersInput` via:
//
//	ScheduleTargetKinesisParametersArgs{...}
type ScheduleTargetKinesisParametersInput interface {
	pulumi.Input

	ToScheduleTargetKinesisParametersOutput() ScheduleTargetKinesisParametersOutput
	ToScheduleTargetKinesisParametersOutputWithContext(context.Context) ScheduleTargetKinesisParametersOutput
}

type ScheduleTargetKinesisParametersArgs struct {
	PartitionKey pulumi.StringInput `pulumi:"partitionKey"`
}

func (ScheduleTargetKinesisParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTargetKinesisParameters)(nil)).Elem()
}

func (i ScheduleTargetKinesisParametersArgs) ToScheduleTargetKinesisParametersOutput() ScheduleTargetKinesisParametersOutput {
	return i.ToScheduleTargetKinesisParametersOutputWithContext(context.Background())
}

func (i ScheduleTargetKinesisParametersArgs) ToScheduleTargetKinesisParametersOutputWithContext(ctx context.Context) ScheduleTargetKinesisParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetKinesisParametersOutput)
}

func (i ScheduleTargetKinesisParametersArgs) ToScheduleTargetKinesisParametersPtrOutput() ScheduleTargetKinesisParametersPtrOutput {
	return i.ToScheduleTargetKinesisParametersPtrOutputWithContext(context.Background())
}

func (i ScheduleTargetKinesisParametersArgs) ToScheduleTargetKinesisParametersPtrOutputWithContext(ctx context.Context) ScheduleTargetKinesisParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetKinesisParametersOutput).ToScheduleTargetKinesisParametersPtrOutputWithContext(ctx)
}

// ScheduleTargetKinesisParametersPtrInput is an input type that accepts ScheduleTargetKinesisParametersArgs, ScheduleTargetKinesisParametersPtr and ScheduleTargetKinesisParametersPtrOutput values.
// You can construct a concrete instance of `ScheduleTargetKinesisParametersPtrInput` via:
//
//	        ScheduleTargetKinesisParametersArgs{...}
//
//	or:
//
//	        nil
type ScheduleTargetKinesisParametersPtrInput interface {
	pulumi.Input

	ToScheduleTargetKinesisParametersPtrOutput() ScheduleTargetKinesisParametersPtrOutput
	ToScheduleTargetKinesisParametersPtrOutputWithContext(context.Context) ScheduleTargetKinesisParametersPtrOutput
}

type scheduleTargetKinesisParametersPtrType ScheduleTargetKinesisParametersArgs

func ScheduleTargetKinesisParametersPtr(v *ScheduleTargetKinesisParametersArgs) ScheduleTargetKinesisParametersPtrInput {
	return (*scheduleTargetKinesisParametersPtrType)(v)
}

func (*scheduleTargetKinesisParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleTargetKinesisParameters)(nil)).Elem()
}

func (i *scheduleTargetKinesisParametersPtrType) ToScheduleTargetKinesisParametersPtrOutput() ScheduleTargetKinesisParametersPtrOutput {
	return i.ToScheduleTargetKinesisParametersPtrOutputWithContext(context.Background())
}

func (i *scheduleTargetKinesisParametersPtrType) ToScheduleTargetKinesisParametersPtrOutputWithContext(ctx context.Context) ScheduleTargetKinesisParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetKinesisParametersPtrOutput)
}

type ScheduleTargetKinesisParametersOutput struct{ *pulumi.OutputState }

func (ScheduleTargetKinesisParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTargetKinesisParameters)(nil)).Elem()
}

func (o ScheduleTargetKinesisParametersOutput) ToScheduleTargetKinesisParametersOutput() ScheduleTargetKinesisParametersOutput {
	return o
}

func (o ScheduleTargetKinesisParametersOutput) ToScheduleTargetKinesisParametersOutputWithContext(ctx context.Context) ScheduleTargetKinesisParametersOutput {
	return o
}

func (o ScheduleTargetKinesisParametersOutput) ToScheduleTargetKinesisParametersPtrOutput() ScheduleTargetKinesisParametersPtrOutput {
	return o.ToScheduleTargetKinesisParametersPtrOutputWithContext(context.Background())
}

func (o ScheduleTargetKinesisParametersOutput) ToScheduleTargetKinesisParametersPtrOutputWithContext(ctx context.Context) ScheduleTargetKinesisParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduleTargetKinesisParameters) *ScheduleTargetKinesisParameters {
		return &v
	}).(ScheduleTargetKinesisParametersPtrOutput)
}

func (o ScheduleTargetKinesisParametersOutput) PartitionKey() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleTargetKinesisParameters) string { return v.PartitionKey }).(pulumi.StringOutput)
}

type ScheduleTargetKinesisParametersPtrOutput struct{ *pulumi.OutputState }

func (ScheduleTargetKinesisParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleTargetKinesisParameters)(nil)).Elem()
}

func (o ScheduleTargetKinesisParametersPtrOutput) ToScheduleTargetKinesisParametersPtrOutput() ScheduleTargetKinesisParametersPtrOutput {
	return o
}

func (o ScheduleTargetKinesisParametersPtrOutput) ToScheduleTargetKinesisParametersPtrOutputWithContext(ctx context.Context) ScheduleTargetKinesisParametersPtrOutput {
	return o
}

func (o ScheduleTargetKinesisParametersPtrOutput) Elem() ScheduleTargetKinesisParametersOutput {
	return o.ApplyT(func(v *ScheduleTargetKinesisParameters) ScheduleTargetKinesisParameters {
		if v != nil {
			return *v
		}
		var ret ScheduleTargetKinesisParameters
		return ret
	}).(ScheduleTargetKinesisParametersOutput)
}

func (o ScheduleTargetKinesisParametersPtrOutput) PartitionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleTargetKinesisParameters) *string {
		if v == nil {
			return nil
		}
		return &v.PartitionKey
	}).(pulumi.StringPtrOutput)
}

type ScheduleTargetRetryPolicy struct {
	MaximumEventAgeInSeconds *int `pulumi:"maximumEventAgeInSeconds"`
	MaximumRetryAttempts     *int `pulumi:"maximumRetryAttempts"`
}

// ScheduleTargetRetryPolicyInput is an input type that accepts ScheduleTargetRetryPolicyArgs and ScheduleTargetRetryPolicyOutput values.
// You can construct a concrete instance of `ScheduleTargetRetryPolicyInput` via:
//
//	ScheduleTargetRetryPolicyArgs{...}
type ScheduleTargetRetryPolicyInput interface {
	pulumi.Input

	ToScheduleTargetRetryPolicyOutput() ScheduleTargetRetryPolicyOutput
	ToScheduleTargetRetryPolicyOutputWithContext(context.Context) ScheduleTargetRetryPolicyOutput
}

type ScheduleTargetRetryPolicyArgs struct {
	MaximumEventAgeInSeconds pulumi.IntPtrInput `pulumi:"maximumEventAgeInSeconds"`
	MaximumRetryAttempts     pulumi.IntPtrInput `pulumi:"maximumRetryAttempts"`
}

func (ScheduleTargetRetryPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTargetRetryPolicy)(nil)).Elem()
}

func (i ScheduleTargetRetryPolicyArgs) ToScheduleTargetRetryPolicyOutput() ScheduleTargetRetryPolicyOutput {
	return i.ToScheduleTargetRetryPolicyOutputWithContext(context.Background())
}

func (i ScheduleTargetRetryPolicyArgs) ToScheduleTargetRetryPolicyOutputWithContext(ctx context.Context) ScheduleTargetRetryPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetRetryPolicyOutput)
}

func (i ScheduleTargetRetryPolicyArgs) ToScheduleTargetRetryPolicyPtrOutput() ScheduleTargetRetryPolicyPtrOutput {
	return i.ToScheduleTargetRetryPolicyPtrOutputWithContext(context.Background())
}

func (i ScheduleTargetRetryPolicyArgs) ToScheduleTargetRetryPolicyPtrOutputWithContext(ctx context.Context) ScheduleTargetRetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetRetryPolicyOutput).ToScheduleTargetRetryPolicyPtrOutputWithContext(ctx)
}

// ScheduleTargetRetryPolicyPtrInput is an input type that accepts ScheduleTargetRetryPolicyArgs, ScheduleTargetRetryPolicyPtr and ScheduleTargetRetryPolicyPtrOutput values.
// You can construct a concrete instance of `ScheduleTargetRetryPolicyPtrInput` via:
//
//	        ScheduleTargetRetryPolicyArgs{...}
//
//	or:
//
//	        nil
type ScheduleTargetRetryPolicyPtrInput interface {
	pulumi.Input

	ToScheduleTargetRetryPolicyPtrOutput() ScheduleTargetRetryPolicyPtrOutput
	ToScheduleTargetRetryPolicyPtrOutputWithContext(context.Context) ScheduleTargetRetryPolicyPtrOutput
}

type scheduleTargetRetryPolicyPtrType ScheduleTargetRetryPolicyArgs

func ScheduleTargetRetryPolicyPtr(v *ScheduleTargetRetryPolicyArgs) ScheduleTargetRetryPolicyPtrInput {
	return (*scheduleTargetRetryPolicyPtrType)(v)
}

func (*scheduleTargetRetryPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleTargetRetryPolicy)(nil)).Elem()
}

func (i *scheduleTargetRetryPolicyPtrType) ToScheduleTargetRetryPolicyPtrOutput() ScheduleTargetRetryPolicyPtrOutput {
	return i.ToScheduleTargetRetryPolicyPtrOutputWithContext(context.Background())
}

func (i *scheduleTargetRetryPolicyPtrType) ToScheduleTargetRetryPolicyPtrOutputWithContext(ctx context.Context) ScheduleTargetRetryPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetRetryPolicyPtrOutput)
}

type ScheduleTargetRetryPolicyOutput struct{ *pulumi.OutputState }

func (ScheduleTargetRetryPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTargetRetryPolicy)(nil)).Elem()
}

func (o ScheduleTargetRetryPolicyOutput) ToScheduleTargetRetryPolicyOutput() ScheduleTargetRetryPolicyOutput {
	return o
}

func (o ScheduleTargetRetryPolicyOutput) ToScheduleTargetRetryPolicyOutputWithContext(ctx context.Context) ScheduleTargetRetryPolicyOutput {
	return o
}

func (o ScheduleTargetRetryPolicyOutput) ToScheduleTargetRetryPolicyPtrOutput() ScheduleTargetRetryPolicyPtrOutput {
	return o.ToScheduleTargetRetryPolicyPtrOutputWithContext(context.Background())
}

func (o ScheduleTargetRetryPolicyOutput) ToScheduleTargetRetryPolicyPtrOutputWithContext(ctx context.Context) ScheduleTargetRetryPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduleTargetRetryPolicy) *ScheduleTargetRetryPolicy {
		return &v
	}).(ScheduleTargetRetryPolicyPtrOutput)
}

func (o ScheduleTargetRetryPolicyOutput) MaximumEventAgeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduleTargetRetryPolicy) *int { return v.MaximumEventAgeInSeconds }).(pulumi.IntPtrOutput)
}

func (o ScheduleTargetRetryPolicyOutput) MaximumRetryAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduleTargetRetryPolicy) *int { return v.MaximumRetryAttempts }).(pulumi.IntPtrOutput)
}

type ScheduleTargetRetryPolicyPtrOutput struct{ *pulumi.OutputState }

func (ScheduleTargetRetryPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleTargetRetryPolicy)(nil)).Elem()
}

func (o ScheduleTargetRetryPolicyPtrOutput) ToScheduleTargetRetryPolicyPtrOutput() ScheduleTargetRetryPolicyPtrOutput {
	return o
}

func (o ScheduleTargetRetryPolicyPtrOutput) ToScheduleTargetRetryPolicyPtrOutputWithContext(ctx context.Context) ScheduleTargetRetryPolicyPtrOutput {
	return o
}

func (o ScheduleTargetRetryPolicyPtrOutput) Elem() ScheduleTargetRetryPolicyOutput {
	return o.ApplyT(func(v *ScheduleTargetRetryPolicy) ScheduleTargetRetryPolicy {
		if v != nil {
			return *v
		}
		var ret ScheduleTargetRetryPolicy
		return ret
	}).(ScheduleTargetRetryPolicyOutput)
}

func (o ScheduleTargetRetryPolicyPtrOutput) MaximumEventAgeInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScheduleTargetRetryPolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaximumEventAgeInSeconds
	}).(pulumi.IntPtrOutput)
}

func (o ScheduleTargetRetryPolicyPtrOutput) MaximumRetryAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScheduleTargetRetryPolicy) *int {
		if v == nil {
			return nil
		}
		return v.MaximumRetryAttempts
	}).(pulumi.IntPtrOutput)
}

type ScheduleTargetSagemakerPipelineParameters struct {
	PipelineParameters []ScheduleTargetSagemakerPipelineParametersPipelineParameter `pulumi:"pipelineParameters"`
}

// ScheduleTargetSagemakerPipelineParametersInput is an input type that accepts ScheduleTargetSagemakerPipelineParametersArgs and ScheduleTargetSagemakerPipelineParametersOutput values.
// You can construct a concrete instance of `ScheduleTargetSagemakerPipelineParametersInput` via:
//
//	ScheduleTargetSagemakerPipelineParametersArgs{...}
type ScheduleTargetSagemakerPipelineParametersInput interface {
	pulumi.Input

	ToScheduleTargetSagemakerPipelineParametersOutput() ScheduleTargetSagemakerPipelineParametersOutput
	ToScheduleTargetSagemakerPipelineParametersOutputWithContext(context.Context) ScheduleTargetSagemakerPipelineParametersOutput
}

type ScheduleTargetSagemakerPipelineParametersArgs struct {
	PipelineParameters ScheduleTargetSagemakerPipelineParametersPipelineParameterArrayInput `pulumi:"pipelineParameters"`
}

func (ScheduleTargetSagemakerPipelineParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTargetSagemakerPipelineParameters)(nil)).Elem()
}

func (i ScheduleTargetSagemakerPipelineParametersArgs) ToScheduleTargetSagemakerPipelineParametersOutput() ScheduleTargetSagemakerPipelineParametersOutput {
	return i.ToScheduleTargetSagemakerPipelineParametersOutputWithContext(context.Background())
}

func (i ScheduleTargetSagemakerPipelineParametersArgs) ToScheduleTargetSagemakerPipelineParametersOutputWithContext(ctx context.Context) ScheduleTargetSagemakerPipelineParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetSagemakerPipelineParametersOutput)
}

func (i ScheduleTargetSagemakerPipelineParametersArgs) ToScheduleTargetSagemakerPipelineParametersPtrOutput() ScheduleTargetSagemakerPipelineParametersPtrOutput {
	return i.ToScheduleTargetSagemakerPipelineParametersPtrOutputWithContext(context.Background())
}

func (i ScheduleTargetSagemakerPipelineParametersArgs) ToScheduleTargetSagemakerPipelineParametersPtrOutputWithContext(ctx context.Context) ScheduleTargetSagemakerPipelineParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetSagemakerPipelineParametersOutput).ToScheduleTargetSagemakerPipelineParametersPtrOutputWithContext(ctx)
}

// ScheduleTargetSagemakerPipelineParametersPtrInput is an input type that accepts ScheduleTargetSagemakerPipelineParametersArgs, ScheduleTargetSagemakerPipelineParametersPtr and ScheduleTargetSagemakerPipelineParametersPtrOutput values.
// You can construct a concrete instance of `ScheduleTargetSagemakerPipelineParametersPtrInput` via:
//
//	        ScheduleTargetSagemakerPipelineParametersArgs{...}
//
//	or:
//
//	        nil
type ScheduleTargetSagemakerPipelineParametersPtrInput interface {
	pulumi.Input

	ToScheduleTargetSagemakerPipelineParametersPtrOutput() ScheduleTargetSagemakerPipelineParametersPtrOutput
	ToScheduleTargetSagemakerPipelineParametersPtrOutputWithContext(context.Context) ScheduleTargetSagemakerPipelineParametersPtrOutput
}

type scheduleTargetSagemakerPipelineParametersPtrType ScheduleTargetSagemakerPipelineParametersArgs

func ScheduleTargetSagemakerPipelineParametersPtr(v *ScheduleTargetSagemakerPipelineParametersArgs) ScheduleTargetSagemakerPipelineParametersPtrInput {
	return (*scheduleTargetSagemakerPipelineParametersPtrType)(v)
}

func (*scheduleTargetSagemakerPipelineParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleTargetSagemakerPipelineParameters)(nil)).Elem()
}

func (i *scheduleTargetSagemakerPipelineParametersPtrType) ToScheduleTargetSagemakerPipelineParametersPtrOutput() ScheduleTargetSagemakerPipelineParametersPtrOutput {
	return i.ToScheduleTargetSagemakerPipelineParametersPtrOutputWithContext(context.Background())
}

func (i *scheduleTargetSagemakerPipelineParametersPtrType) ToScheduleTargetSagemakerPipelineParametersPtrOutputWithContext(ctx context.Context) ScheduleTargetSagemakerPipelineParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetSagemakerPipelineParametersPtrOutput)
}

type ScheduleTargetSagemakerPipelineParametersOutput struct{ *pulumi.OutputState }

func (ScheduleTargetSagemakerPipelineParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTargetSagemakerPipelineParameters)(nil)).Elem()
}

func (o ScheduleTargetSagemakerPipelineParametersOutput) ToScheduleTargetSagemakerPipelineParametersOutput() ScheduleTargetSagemakerPipelineParametersOutput {
	return o
}

func (o ScheduleTargetSagemakerPipelineParametersOutput) ToScheduleTargetSagemakerPipelineParametersOutputWithContext(ctx context.Context) ScheduleTargetSagemakerPipelineParametersOutput {
	return o
}

func (o ScheduleTargetSagemakerPipelineParametersOutput) ToScheduleTargetSagemakerPipelineParametersPtrOutput() ScheduleTargetSagemakerPipelineParametersPtrOutput {
	return o.ToScheduleTargetSagemakerPipelineParametersPtrOutputWithContext(context.Background())
}

func (o ScheduleTargetSagemakerPipelineParametersOutput) ToScheduleTargetSagemakerPipelineParametersPtrOutputWithContext(ctx context.Context) ScheduleTargetSagemakerPipelineParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduleTargetSagemakerPipelineParameters) *ScheduleTargetSagemakerPipelineParameters {
		return &v
	}).(ScheduleTargetSagemakerPipelineParametersPtrOutput)
}

func (o ScheduleTargetSagemakerPipelineParametersOutput) PipelineParameters() ScheduleTargetSagemakerPipelineParametersPipelineParameterArrayOutput {
	return o.ApplyT(func(v ScheduleTargetSagemakerPipelineParameters) []ScheduleTargetSagemakerPipelineParametersPipelineParameter {
		return v.PipelineParameters
	}).(ScheduleTargetSagemakerPipelineParametersPipelineParameterArrayOutput)
}

type ScheduleTargetSagemakerPipelineParametersPtrOutput struct{ *pulumi.OutputState }

func (ScheduleTargetSagemakerPipelineParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleTargetSagemakerPipelineParameters)(nil)).Elem()
}

func (o ScheduleTargetSagemakerPipelineParametersPtrOutput) ToScheduleTargetSagemakerPipelineParametersPtrOutput() ScheduleTargetSagemakerPipelineParametersPtrOutput {
	return o
}

func (o ScheduleTargetSagemakerPipelineParametersPtrOutput) ToScheduleTargetSagemakerPipelineParametersPtrOutputWithContext(ctx context.Context) ScheduleTargetSagemakerPipelineParametersPtrOutput {
	return o
}

func (o ScheduleTargetSagemakerPipelineParametersPtrOutput) Elem() ScheduleTargetSagemakerPipelineParametersOutput {
	return o.ApplyT(func(v *ScheduleTargetSagemakerPipelineParameters) ScheduleTargetSagemakerPipelineParameters {
		if v != nil {
			return *v
		}
		var ret ScheduleTargetSagemakerPipelineParameters
		return ret
	}).(ScheduleTargetSagemakerPipelineParametersOutput)
}

func (o ScheduleTargetSagemakerPipelineParametersPtrOutput) PipelineParameters() ScheduleTargetSagemakerPipelineParametersPipelineParameterArrayOutput {
	return o.ApplyT(func(v *ScheduleTargetSagemakerPipelineParameters) []ScheduleTargetSagemakerPipelineParametersPipelineParameter {
		if v == nil {
			return nil
		}
		return v.PipelineParameters
	}).(ScheduleTargetSagemakerPipelineParametersPipelineParameterArrayOutput)
}

type ScheduleTargetSagemakerPipelineParametersPipelineParameter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// ScheduleTargetSagemakerPipelineParametersPipelineParameterInput is an input type that accepts ScheduleTargetSagemakerPipelineParametersPipelineParameterArgs and ScheduleTargetSagemakerPipelineParametersPipelineParameterOutput values.
// You can construct a concrete instance of `ScheduleTargetSagemakerPipelineParametersPipelineParameterInput` via:
//
//	ScheduleTargetSagemakerPipelineParametersPipelineParameterArgs{...}
type ScheduleTargetSagemakerPipelineParametersPipelineParameterInput interface {
	pulumi.Input

	ToScheduleTargetSagemakerPipelineParametersPipelineParameterOutput() ScheduleTargetSagemakerPipelineParametersPipelineParameterOutput
	ToScheduleTargetSagemakerPipelineParametersPipelineParameterOutputWithContext(context.Context) ScheduleTargetSagemakerPipelineParametersPipelineParameterOutput
}

type ScheduleTargetSagemakerPipelineParametersPipelineParameterArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ScheduleTargetSagemakerPipelineParametersPipelineParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTargetSagemakerPipelineParametersPipelineParameter)(nil)).Elem()
}

func (i ScheduleTargetSagemakerPipelineParametersPipelineParameterArgs) ToScheduleTargetSagemakerPipelineParametersPipelineParameterOutput() ScheduleTargetSagemakerPipelineParametersPipelineParameterOutput {
	return i.ToScheduleTargetSagemakerPipelineParametersPipelineParameterOutputWithContext(context.Background())
}

func (i ScheduleTargetSagemakerPipelineParametersPipelineParameterArgs) ToScheduleTargetSagemakerPipelineParametersPipelineParameterOutputWithContext(ctx context.Context) ScheduleTargetSagemakerPipelineParametersPipelineParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetSagemakerPipelineParametersPipelineParameterOutput)
}

// ScheduleTargetSagemakerPipelineParametersPipelineParameterArrayInput is an input type that accepts ScheduleTargetSagemakerPipelineParametersPipelineParameterArray and ScheduleTargetSagemakerPipelineParametersPipelineParameterArrayOutput values.
// You can construct a concrete instance of `ScheduleTargetSagemakerPipelineParametersPipelineParameterArrayInput` via:
//
//	ScheduleTargetSagemakerPipelineParametersPipelineParameterArray{ ScheduleTargetSagemakerPipelineParametersPipelineParameterArgs{...} }
type ScheduleTargetSagemakerPipelineParametersPipelineParameterArrayInput interface {
	pulumi.Input

	ToScheduleTargetSagemakerPipelineParametersPipelineParameterArrayOutput() ScheduleTargetSagemakerPipelineParametersPipelineParameterArrayOutput
	ToScheduleTargetSagemakerPipelineParametersPipelineParameterArrayOutputWithContext(context.Context) ScheduleTargetSagemakerPipelineParametersPipelineParameterArrayOutput
}

type ScheduleTargetSagemakerPipelineParametersPipelineParameterArray []ScheduleTargetSagemakerPipelineParametersPipelineParameterInput

func (ScheduleTargetSagemakerPipelineParametersPipelineParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduleTargetSagemakerPipelineParametersPipelineParameter)(nil)).Elem()
}

func (i ScheduleTargetSagemakerPipelineParametersPipelineParameterArray) ToScheduleTargetSagemakerPipelineParametersPipelineParameterArrayOutput() ScheduleTargetSagemakerPipelineParametersPipelineParameterArrayOutput {
	return i.ToScheduleTargetSagemakerPipelineParametersPipelineParameterArrayOutputWithContext(context.Background())
}

func (i ScheduleTargetSagemakerPipelineParametersPipelineParameterArray) ToScheduleTargetSagemakerPipelineParametersPipelineParameterArrayOutputWithContext(ctx context.Context) ScheduleTargetSagemakerPipelineParametersPipelineParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetSagemakerPipelineParametersPipelineParameterArrayOutput)
}

type ScheduleTargetSagemakerPipelineParametersPipelineParameterOutput struct{ *pulumi.OutputState }

func (ScheduleTargetSagemakerPipelineParametersPipelineParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTargetSagemakerPipelineParametersPipelineParameter)(nil)).Elem()
}

func (o ScheduleTargetSagemakerPipelineParametersPipelineParameterOutput) ToScheduleTargetSagemakerPipelineParametersPipelineParameterOutput() ScheduleTargetSagemakerPipelineParametersPipelineParameterOutput {
	return o
}

func (o ScheduleTargetSagemakerPipelineParametersPipelineParameterOutput) ToScheduleTargetSagemakerPipelineParametersPipelineParameterOutputWithContext(ctx context.Context) ScheduleTargetSagemakerPipelineParametersPipelineParameterOutput {
	return o
}

func (o ScheduleTargetSagemakerPipelineParametersPipelineParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleTargetSagemakerPipelineParametersPipelineParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o ScheduleTargetSagemakerPipelineParametersPipelineParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduleTargetSagemakerPipelineParametersPipelineParameter) string { return v.Value }).(pulumi.StringOutput)
}

type ScheduleTargetSagemakerPipelineParametersPipelineParameterArrayOutput struct{ *pulumi.OutputState }

func (ScheduleTargetSagemakerPipelineParametersPipelineParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduleTargetSagemakerPipelineParametersPipelineParameter)(nil)).Elem()
}

func (o ScheduleTargetSagemakerPipelineParametersPipelineParameterArrayOutput) ToScheduleTargetSagemakerPipelineParametersPipelineParameterArrayOutput() ScheduleTargetSagemakerPipelineParametersPipelineParameterArrayOutput {
	return o
}

func (o ScheduleTargetSagemakerPipelineParametersPipelineParameterArrayOutput) ToScheduleTargetSagemakerPipelineParametersPipelineParameterArrayOutputWithContext(ctx context.Context) ScheduleTargetSagemakerPipelineParametersPipelineParameterArrayOutput {
	return o
}

func (o ScheduleTargetSagemakerPipelineParametersPipelineParameterArrayOutput) Index(i pulumi.IntInput) ScheduleTargetSagemakerPipelineParametersPipelineParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduleTargetSagemakerPipelineParametersPipelineParameter {
		return vs[0].([]ScheduleTargetSagemakerPipelineParametersPipelineParameter)[vs[1].(int)]
	}).(ScheduleTargetSagemakerPipelineParametersPipelineParameterOutput)
}

type ScheduleTargetSqsParameters struct {
	MessageGroupId *string `pulumi:"messageGroupId"`
}

// ScheduleTargetSqsParametersInput is an input type that accepts ScheduleTargetSqsParametersArgs and ScheduleTargetSqsParametersOutput values.
// You can construct a concrete instance of `ScheduleTargetSqsParametersInput` via:
//
//	ScheduleTargetSqsParametersArgs{...}
type ScheduleTargetSqsParametersInput interface {
	pulumi.Input

	ToScheduleTargetSqsParametersOutput() ScheduleTargetSqsParametersOutput
	ToScheduleTargetSqsParametersOutputWithContext(context.Context) ScheduleTargetSqsParametersOutput
}

type ScheduleTargetSqsParametersArgs struct {
	MessageGroupId pulumi.StringPtrInput `pulumi:"messageGroupId"`
}

func (ScheduleTargetSqsParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTargetSqsParameters)(nil)).Elem()
}

func (i ScheduleTargetSqsParametersArgs) ToScheduleTargetSqsParametersOutput() ScheduleTargetSqsParametersOutput {
	return i.ToScheduleTargetSqsParametersOutputWithContext(context.Background())
}

func (i ScheduleTargetSqsParametersArgs) ToScheduleTargetSqsParametersOutputWithContext(ctx context.Context) ScheduleTargetSqsParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetSqsParametersOutput)
}

func (i ScheduleTargetSqsParametersArgs) ToScheduleTargetSqsParametersPtrOutput() ScheduleTargetSqsParametersPtrOutput {
	return i.ToScheduleTargetSqsParametersPtrOutputWithContext(context.Background())
}

func (i ScheduleTargetSqsParametersArgs) ToScheduleTargetSqsParametersPtrOutputWithContext(ctx context.Context) ScheduleTargetSqsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetSqsParametersOutput).ToScheduleTargetSqsParametersPtrOutputWithContext(ctx)
}

// ScheduleTargetSqsParametersPtrInput is an input type that accepts ScheduleTargetSqsParametersArgs, ScheduleTargetSqsParametersPtr and ScheduleTargetSqsParametersPtrOutput values.
// You can construct a concrete instance of `ScheduleTargetSqsParametersPtrInput` via:
//
//	        ScheduleTargetSqsParametersArgs{...}
//
//	or:
//
//	        nil
type ScheduleTargetSqsParametersPtrInput interface {
	pulumi.Input

	ToScheduleTargetSqsParametersPtrOutput() ScheduleTargetSqsParametersPtrOutput
	ToScheduleTargetSqsParametersPtrOutputWithContext(context.Context) ScheduleTargetSqsParametersPtrOutput
}

type scheduleTargetSqsParametersPtrType ScheduleTargetSqsParametersArgs

func ScheduleTargetSqsParametersPtr(v *ScheduleTargetSqsParametersArgs) ScheduleTargetSqsParametersPtrInput {
	return (*scheduleTargetSqsParametersPtrType)(v)
}

func (*scheduleTargetSqsParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleTargetSqsParameters)(nil)).Elem()
}

func (i *scheduleTargetSqsParametersPtrType) ToScheduleTargetSqsParametersPtrOutput() ScheduleTargetSqsParametersPtrOutput {
	return i.ToScheduleTargetSqsParametersPtrOutputWithContext(context.Background())
}

func (i *scheduleTargetSqsParametersPtrType) ToScheduleTargetSqsParametersPtrOutputWithContext(ctx context.Context) ScheduleTargetSqsParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduleTargetSqsParametersPtrOutput)
}

type ScheduleTargetSqsParametersOutput struct{ *pulumi.OutputState }

func (ScheduleTargetSqsParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduleTargetSqsParameters)(nil)).Elem()
}

func (o ScheduleTargetSqsParametersOutput) ToScheduleTargetSqsParametersOutput() ScheduleTargetSqsParametersOutput {
	return o
}

func (o ScheduleTargetSqsParametersOutput) ToScheduleTargetSqsParametersOutputWithContext(ctx context.Context) ScheduleTargetSqsParametersOutput {
	return o
}

func (o ScheduleTargetSqsParametersOutput) ToScheduleTargetSqsParametersPtrOutput() ScheduleTargetSqsParametersPtrOutput {
	return o.ToScheduleTargetSqsParametersPtrOutputWithContext(context.Background())
}

func (o ScheduleTargetSqsParametersOutput) ToScheduleTargetSqsParametersPtrOutputWithContext(ctx context.Context) ScheduleTargetSqsParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduleTargetSqsParameters) *ScheduleTargetSqsParameters {
		return &v
	}).(ScheduleTargetSqsParametersPtrOutput)
}

func (o ScheduleTargetSqsParametersOutput) MessageGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduleTargetSqsParameters) *string { return v.MessageGroupId }).(pulumi.StringPtrOutput)
}

type ScheduleTargetSqsParametersPtrOutput struct{ *pulumi.OutputState }

func (ScheduleTargetSqsParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduleTargetSqsParameters)(nil)).Elem()
}

func (o ScheduleTargetSqsParametersPtrOutput) ToScheduleTargetSqsParametersPtrOutput() ScheduleTargetSqsParametersPtrOutput {
	return o
}

func (o ScheduleTargetSqsParametersPtrOutput) ToScheduleTargetSqsParametersPtrOutputWithContext(ctx context.Context) ScheduleTargetSqsParametersPtrOutput {
	return o
}

func (o ScheduleTargetSqsParametersPtrOutput) Elem() ScheduleTargetSqsParametersOutput {
	return o.ApplyT(func(v *ScheduleTargetSqsParameters) ScheduleTargetSqsParameters {
		if v != nil {
			return *v
		}
		var ret ScheduleTargetSqsParameters
		return ret
	}).(ScheduleTargetSqsParametersOutput)
}

func (o ScheduleTargetSqsParametersPtrOutput) MessageGroupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduleTargetSqsParameters) *string {
		if v == nil {
			return nil
		}
		return v.MessageGroupId
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleFlexibleTimeWindowInput)(nil)).Elem(), ScheduleFlexibleTimeWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleFlexibleTimeWindowPtrInput)(nil)).Elem(), ScheduleFlexibleTimeWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleTargetInput)(nil)).Elem(), ScheduleTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleTargetPtrInput)(nil)).Elem(), ScheduleTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleTargetDeadLetterConfigInput)(nil)).Elem(), ScheduleTargetDeadLetterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleTargetDeadLetterConfigPtrInput)(nil)).Elem(), ScheduleTargetDeadLetterConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleTargetEcsParametersInput)(nil)).Elem(), ScheduleTargetEcsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleTargetEcsParametersPtrInput)(nil)).Elem(), ScheduleTargetEcsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleTargetEcsParametersCapacityProviderStrategyInput)(nil)).Elem(), ScheduleTargetEcsParametersCapacityProviderStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleTargetEcsParametersCapacityProviderStrategyArrayInput)(nil)).Elem(), ScheduleTargetEcsParametersCapacityProviderStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleTargetEcsParametersNetworkConfigurationInput)(nil)).Elem(), ScheduleTargetEcsParametersNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleTargetEcsParametersNetworkConfigurationPtrInput)(nil)).Elem(), ScheduleTargetEcsParametersNetworkConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleTargetEcsParametersPlacementConstraintInput)(nil)).Elem(), ScheduleTargetEcsParametersPlacementConstraintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleTargetEcsParametersPlacementConstraintArrayInput)(nil)).Elem(), ScheduleTargetEcsParametersPlacementConstraintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleTargetEcsParametersPlacementStrategyInput)(nil)).Elem(), ScheduleTargetEcsParametersPlacementStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleTargetEcsParametersPlacementStrategyArrayInput)(nil)).Elem(), ScheduleTargetEcsParametersPlacementStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleTargetEventbridgeParametersInput)(nil)).Elem(), ScheduleTargetEventbridgeParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleTargetEventbridgeParametersPtrInput)(nil)).Elem(), ScheduleTargetEventbridgeParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleTargetKinesisParametersInput)(nil)).Elem(), ScheduleTargetKinesisParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleTargetKinesisParametersPtrInput)(nil)).Elem(), ScheduleTargetKinesisParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleTargetRetryPolicyInput)(nil)).Elem(), ScheduleTargetRetryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleTargetRetryPolicyPtrInput)(nil)).Elem(), ScheduleTargetRetryPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleTargetSagemakerPipelineParametersInput)(nil)).Elem(), ScheduleTargetSagemakerPipelineParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleTargetSagemakerPipelineParametersPtrInput)(nil)).Elem(), ScheduleTargetSagemakerPipelineParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleTargetSagemakerPipelineParametersPipelineParameterInput)(nil)).Elem(), ScheduleTargetSagemakerPipelineParametersPipelineParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleTargetSagemakerPipelineParametersPipelineParameterArrayInput)(nil)).Elem(), ScheduleTargetSagemakerPipelineParametersPipelineParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleTargetSqsParametersInput)(nil)).Elem(), ScheduleTargetSqsParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduleTargetSqsParametersPtrInput)(nil)).Elem(), ScheduleTargetSqsParametersArgs{})
	pulumi.RegisterOutputType(ScheduleFlexibleTimeWindowOutput{})
	pulumi.RegisterOutputType(ScheduleFlexibleTimeWindowPtrOutput{})
	pulumi.RegisterOutputType(ScheduleTargetOutput{})
	pulumi.RegisterOutputType(ScheduleTargetPtrOutput{})
	pulumi.RegisterOutputType(ScheduleTargetDeadLetterConfigOutput{})
	pulumi.RegisterOutputType(ScheduleTargetDeadLetterConfigPtrOutput{})
	pulumi.RegisterOutputType(ScheduleTargetEcsParametersOutput{})
	pulumi.RegisterOutputType(ScheduleTargetEcsParametersPtrOutput{})
	pulumi.RegisterOutputType(ScheduleTargetEcsParametersCapacityProviderStrategyOutput{})
	pulumi.RegisterOutputType(ScheduleTargetEcsParametersCapacityProviderStrategyArrayOutput{})
	pulumi.RegisterOutputType(ScheduleTargetEcsParametersNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(ScheduleTargetEcsParametersNetworkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ScheduleTargetEcsParametersPlacementConstraintOutput{})
	pulumi.RegisterOutputType(ScheduleTargetEcsParametersPlacementConstraintArrayOutput{})
	pulumi.RegisterOutputType(ScheduleTargetEcsParametersPlacementStrategyOutput{})
	pulumi.RegisterOutputType(ScheduleTargetEcsParametersPlacementStrategyArrayOutput{})
	pulumi.RegisterOutputType(ScheduleTargetEventbridgeParametersOutput{})
	pulumi.RegisterOutputType(ScheduleTargetEventbridgeParametersPtrOutput{})
	pulumi.RegisterOutputType(ScheduleTargetKinesisParametersOutput{})
	pulumi.RegisterOutputType(ScheduleTargetKinesisParametersPtrOutput{})
	pulumi.RegisterOutputType(ScheduleTargetRetryPolicyOutput{})
	pulumi.RegisterOutputType(ScheduleTargetRetryPolicyPtrOutput{})
	pulumi.RegisterOutputType(ScheduleTargetSagemakerPipelineParametersOutput{})
	pulumi.RegisterOutputType(ScheduleTargetSagemakerPipelineParametersPtrOutput{})
	pulumi.RegisterOutputType(ScheduleTargetSagemakerPipelineParametersPipelineParameterOutput{})
	pulumi.RegisterOutputType(ScheduleTargetSagemakerPipelineParametersPipelineParameterArrayOutput{})
	pulumi.RegisterOutputType(ScheduleTargetSqsParametersOutput{})
	pulumi.RegisterOutputType(ScheduleTargetSqsParametersPtrOutput{})
}
