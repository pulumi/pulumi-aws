// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2clientvpn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type EndpointAuthenticationOptions struct {
	// The ID of the Active Directory to be used for authentication if type is `directory-service-authentication`.
	ActiveDirectoryId *string `pulumi:"activeDirectoryId"`
	// The ARN of the client certificate. The certificate must be signed by a certificate authority (CA) and it must be provisioned in AWS Certificate Manager (ACM). Only necessary when type is set to `certificate-authentication`.
	RootCertificateChainArn *string `pulumi:"rootCertificateChainArn"`
	// The type of client authentication to be used. Specify `certificate-authentication` to use certificate-based authentication, or `directory-service-authentication` to use Active Directory authentication.
	Type string `pulumi:"type"`
}

// EndpointAuthenticationOptionsInput is an input type that accepts EndpointAuthenticationOptionsArgs and EndpointAuthenticationOptionsOutput values.
// You can construct a concrete instance of `EndpointAuthenticationOptionsInput` via:
//
// 		 EndpointAuthenticationOptionsArgs{...}
//
type EndpointAuthenticationOptionsInput interface {
	pulumi.Input

	ToEndpointAuthenticationOptionsOutput() EndpointAuthenticationOptionsOutput
	ToEndpointAuthenticationOptionsOutputWithContext(context.Context) EndpointAuthenticationOptionsOutput
}

type EndpointAuthenticationOptionsArgs struct {
	// The ID of the Active Directory to be used for authentication if type is `directory-service-authentication`.
	ActiveDirectoryId pulumi.StringPtrInput `pulumi:"activeDirectoryId"`
	// The ARN of the client certificate. The certificate must be signed by a certificate authority (CA) and it must be provisioned in AWS Certificate Manager (ACM). Only necessary when type is set to `certificate-authentication`.
	RootCertificateChainArn pulumi.StringPtrInput `pulumi:"rootCertificateChainArn"`
	// The type of client authentication to be used. Specify `certificate-authentication` to use certificate-based authentication, or `directory-service-authentication` to use Active Directory authentication.
	Type pulumi.StringInput `pulumi:"type"`
}

func (EndpointAuthenticationOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointAuthenticationOptions)(nil)).Elem()
}

func (i EndpointAuthenticationOptionsArgs) ToEndpointAuthenticationOptionsOutput() EndpointAuthenticationOptionsOutput {
	return i.ToEndpointAuthenticationOptionsOutputWithContext(context.Background())
}

func (i EndpointAuthenticationOptionsArgs) ToEndpointAuthenticationOptionsOutputWithContext(ctx context.Context) EndpointAuthenticationOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointAuthenticationOptionsOutput)
}

func (i EndpointAuthenticationOptionsArgs) ToEndpointAuthenticationOptionsPtrOutput() EndpointAuthenticationOptionsPtrOutput {
	return i.ToEndpointAuthenticationOptionsPtrOutputWithContext(context.Background())
}

func (i EndpointAuthenticationOptionsArgs) ToEndpointAuthenticationOptionsPtrOutputWithContext(ctx context.Context) EndpointAuthenticationOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointAuthenticationOptionsOutput).ToEndpointAuthenticationOptionsPtrOutputWithContext(ctx)
}

// EndpointAuthenticationOptionsPtrInput is an input type that accepts EndpointAuthenticationOptionsArgs, EndpointAuthenticationOptionsPtr and EndpointAuthenticationOptionsPtrOutput values.
// You can construct a concrete instance of `EndpointAuthenticationOptionsPtrInput` via:
//
// 		 EndpointAuthenticationOptionsArgs{...}
//
//  or:
//
// 		 nil
//
type EndpointAuthenticationOptionsPtrInput interface {
	pulumi.Input

	ToEndpointAuthenticationOptionsPtrOutput() EndpointAuthenticationOptionsPtrOutput
	ToEndpointAuthenticationOptionsPtrOutputWithContext(context.Context) EndpointAuthenticationOptionsPtrOutput
}

type endpointAuthenticationOptionsPtrType EndpointAuthenticationOptionsArgs

func EndpointAuthenticationOptionsPtr(v *EndpointAuthenticationOptionsArgs) EndpointAuthenticationOptionsPtrInput {
	return (*endpointAuthenticationOptionsPtrType)(v)
}

func (*endpointAuthenticationOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointAuthenticationOptions)(nil)).Elem()
}

func (i *endpointAuthenticationOptionsPtrType) ToEndpointAuthenticationOptionsPtrOutput() EndpointAuthenticationOptionsPtrOutput {
	return i.ToEndpointAuthenticationOptionsPtrOutputWithContext(context.Background())
}

func (i *endpointAuthenticationOptionsPtrType) ToEndpointAuthenticationOptionsPtrOutputWithContext(ctx context.Context) EndpointAuthenticationOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointAuthenticationOptionsPtrOutput)
}

type EndpointAuthenticationOptionsOutput struct{ *pulumi.OutputState }

func (EndpointAuthenticationOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointAuthenticationOptions)(nil)).Elem()
}

func (o EndpointAuthenticationOptionsOutput) ToEndpointAuthenticationOptionsOutput() EndpointAuthenticationOptionsOutput {
	return o
}

func (o EndpointAuthenticationOptionsOutput) ToEndpointAuthenticationOptionsOutputWithContext(ctx context.Context) EndpointAuthenticationOptionsOutput {
	return o
}

func (o EndpointAuthenticationOptionsOutput) ToEndpointAuthenticationOptionsPtrOutput() EndpointAuthenticationOptionsPtrOutput {
	return o.ToEndpointAuthenticationOptionsPtrOutputWithContext(context.Background())
}

func (o EndpointAuthenticationOptionsOutput) ToEndpointAuthenticationOptionsPtrOutputWithContext(ctx context.Context) EndpointAuthenticationOptionsPtrOutput {
	return o.ApplyT(func(v EndpointAuthenticationOptions) *EndpointAuthenticationOptions {
		return &v
	}).(EndpointAuthenticationOptionsPtrOutput)
}

// The ID of the Active Directory to be used for authentication if type is `directory-service-authentication`.
func (o EndpointAuthenticationOptionsOutput) ActiveDirectoryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointAuthenticationOptions) *string { return v.ActiveDirectoryId }).(pulumi.StringPtrOutput)
}

// The ARN of the client certificate. The certificate must be signed by a certificate authority (CA) and it must be provisioned in AWS Certificate Manager (ACM). Only necessary when type is set to `certificate-authentication`.
func (o EndpointAuthenticationOptionsOutput) RootCertificateChainArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointAuthenticationOptions) *string { return v.RootCertificateChainArn }).(pulumi.StringPtrOutput)
}

// The type of client authentication to be used. Specify `certificate-authentication` to use certificate-based authentication, or `directory-service-authentication` to use Active Directory authentication.
func (o EndpointAuthenticationOptionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointAuthenticationOptions) string { return v.Type }).(pulumi.StringOutput)
}

type EndpointAuthenticationOptionsPtrOutput struct{ *pulumi.OutputState }

func (EndpointAuthenticationOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointAuthenticationOptions)(nil)).Elem()
}

func (o EndpointAuthenticationOptionsPtrOutput) ToEndpointAuthenticationOptionsPtrOutput() EndpointAuthenticationOptionsPtrOutput {
	return o
}

func (o EndpointAuthenticationOptionsPtrOutput) ToEndpointAuthenticationOptionsPtrOutputWithContext(ctx context.Context) EndpointAuthenticationOptionsPtrOutput {
	return o
}

func (o EndpointAuthenticationOptionsPtrOutput) Elem() EndpointAuthenticationOptionsOutput {
	return o.ApplyT(func(v *EndpointAuthenticationOptions) EndpointAuthenticationOptions { return *v }).(EndpointAuthenticationOptionsOutput)
}

// The ID of the Active Directory to be used for authentication if type is `directory-service-authentication`.
func (o EndpointAuthenticationOptionsPtrOutput) ActiveDirectoryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointAuthenticationOptions) *string { return v.ActiveDirectoryId }).(pulumi.StringPtrOutput)
}

// The ARN of the client certificate. The certificate must be signed by a certificate authority (CA) and it must be provisioned in AWS Certificate Manager (ACM). Only necessary when type is set to `certificate-authentication`.
func (o EndpointAuthenticationOptionsPtrOutput) RootCertificateChainArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointAuthenticationOptions) *string { return v.RootCertificateChainArn }).(pulumi.StringPtrOutput)
}

// The type of client authentication to be used. Specify `certificate-authentication` to use certificate-based authentication, or `directory-service-authentication` to use Active Directory authentication.
func (o EndpointAuthenticationOptionsPtrOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v EndpointAuthenticationOptions) string { return v.Type }).(pulumi.StringOutput)
}

type EndpointConnectionLogOptions struct {
	// The name of the CloudWatch Logs log group.
	CloudwatchLogGroup *string `pulumi:"cloudwatchLogGroup"`
	// The name of the CloudWatch Logs log stream to which the connection data is published.
	CloudwatchLogStream *string `pulumi:"cloudwatchLogStream"`
	// Indicates whether connection logging is enabled.
	Enabled bool `pulumi:"enabled"`
}

// EndpointConnectionLogOptionsInput is an input type that accepts EndpointConnectionLogOptionsArgs and EndpointConnectionLogOptionsOutput values.
// You can construct a concrete instance of `EndpointConnectionLogOptionsInput` via:
//
// 		 EndpointConnectionLogOptionsArgs{...}
//
type EndpointConnectionLogOptionsInput interface {
	pulumi.Input

	ToEndpointConnectionLogOptionsOutput() EndpointConnectionLogOptionsOutput
	ToEndpointConnectionLogOptionsOutputWithContext(context.Context) EndpointConnectionLogOptionsOutput
}

type EndpointConnectionLogOptionsArgs struct {
	// The name of the CloudWatch Logs log group.
	CloudwatchLogGroup pulumi.StringPtrInput `pulumi:"cloudwatchLogGroup"`
	// The name of the CloudWatch Logs log stream to which the connection data is published.
	CloudwatchLogStream pulumi.StringPtrInput `pulumi:"cloudwatchLogStream"`
	// Indicates whether connection logging is enabled.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (EndpointConnectionLogOptionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConnectionLogOptions)(nil)).Elem()
}

func (i EndpointConnectionLogOptionsArgs) ToEndpointConnectionLogOptionsOutput() EndpointConnectionLogOptionsOutput {
	return i.ToEndpointConnectionLogOptionsOutputWithContext(context.Background())
}

func (i EndpointConnectionLogOptionsArgs) ToEndpointConnectionLogOptionsOutputWithContext(ctx context.Context) EndpointConnectionLogOptionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConnectionLogOptionsOutput)
}

func (i EndpointConnectionLogOptionsArgs) ToEndpointConnectionLogOptionsPtrOutput() EndpointConnectionLogOptionsPtrOutput {
	return i.ToEndpointConnectionLogOptionsPtrOutputWithContext(context.Background())
}

func (i EndpointConnectionLogOptionsArgs) ToEndpointConnectionLogOptionsPtrOutputWithContext(ctx context.Context) EndpointConnectionLogOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConnectionLogOptionsOutput).ToEndpointConnectionLogOptionsPtrOutputWithContext(ctx)
}

// EndpointConnectionLogOptionsPtrInput is an input type that accepts EndpointConnectionLogOptionsArgs, EndpointConnectionLogOptionsPtr and EndpointConnectionLogOptionsPtrOutput values.
// You can construct a concrete instance of `EndpointConnectionLogOptionsPtrInput` via:
//
// 		 EndpointConnectionLogOptionsArgs{...}
//
//  or:
//
// 		 nil
//
type EndpointConnectionLogOptionsPtrInput interface {
	pulumi.Input

	ToEndpointConnectionLogOptionsPtrOutput() EndpointConnectionLogOptionsPtrOutput
	ToEndpointConnectionLogOptionsPtrOutputWithContext(context.Context) EndpointConnectionLogOptionsPtrOutput
}

type endpointConnectionLogOptionsPtrType EndpointConnectionLogOptionsArgs

func EndpointConnectionLogOptionsPtr(v *EndpointConnectionLogOptionsArgs) EndpointConnectionLogOptionsPtrInput {
	return (*endpointConnectionLogOptionsPtrType)(v)
}

func (*endpointConnectionLogOptionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConnectionLogOptions)(nil)).Elem()
}

func (i *endpointConnectionLogOptionsPtrType) ToEndpointConnectionLogOptionsPtrOutput() EndpointConnectionLogOptionsPtrOutput {
	return i.ToEndpointConnectionLogOptionsPtrOutputWithContext(context.Background())
}

func (i *endpointConnectionLogOptionsPtrType) ToEndpointConnectionLogOptionsPtrOutputWithContext(ctx context.Context) EndpointConnectionLogOptionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointConnectionLogOptionsPtrOutput)
}

type EndpointConnectionLogOptionsOutput struct{ *pulumi.OutputState }

func (EndpointConnectionLogOptionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EndpointConnectionLogOptions)(nil)).Elem()
}

func (o EndpointConnectionLogOptionsOutput) ToEndpointConnectionLogOptionsOutput() EndpointConnectionLogOptionsOutput {
	return o
}

func (o EndpointConnectionLogOptionsOutput) ToEndpointConnectionLogOptionsOutputWithContext(ctx context.Context) EndpointConnectionLogOptionsOutput {
	return o
}

func (o EndpointConnectionLogOptionsOutput) ToEndpointConnectionLogOptionsPtrOutput() EndpointConnectionLogOptionsPtrOutput {
	return o.ToEndpointConnectionLogOptionsPtrOutputWithContext(context.Background())
}

func (o EndpointConnectionLogOptionsOutput) ToEndpointConnectionLogOptionsPtrOutputWithContext(ctx context.Context) EndpointConnectionLogOptionsPtrOutput {
	return o.ApplyT(func(v EndpointConnectionLogOptions) *EndpointConnectionLogOptions {
		return &v
	}).(EndpointConnectionLogOptionsPtrOutput)
}

// The name of the CloudWatch Logs log group.
func (o EndpointConnectionLogOptionsOutput) CloudwatchLogGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConnectionLogOptions) *string { return v.CloudwatchLogGroup }).(pulumi.StringPtrOutput)
}

// The name of the CloudWatch Logs log stream to which the connection data is published.
func (o EndpointConnectionLogOptionsOutput) CloudwatchLogStream() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConnectionLogOptions) *string { return v.CloudwatchLogStream }).(pulumi.StringPtrOutput)
}

// Indicates whether connection logging is enabled.
func (o EndpointConnectionLogOptionsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v EndpointConnectionLogOptions) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type EndpointConnectionLogOptionsPtrOutput struct{ *pulumi.OutputState }

func (EndpointConnectionLogOptionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EndpointConnectionLogOptions)(nil)).Elem()
}

func (o EndpointConnectionLogOptionsPtrOutput) ToEndpointConnectionLogOptionsPtrOutput() EndpointConnectionLogOptionsPtrOutput {
	return o
}

func (o EndpointConnectionLogOptionsPtrOutput) ToEndpointConnectionLogOptionsPtrOutputWithContext(ctx context.Context) EndpointConnectionLogOptionsPtrOutput {
	return o
}

func (o EndpointConnectionLogOptionsPtrOutput) Elem() EndpointConnectionLogOptionsOutput {
	return o.ApplyT(func(v *EndpointConnectionLogOptions) EndpointConnectionLogOptions { return *v }).(EndpointConnectionLogOptionsOutput)
}

// The name of the CloudWatch Logs log group.
func (o EndpointConnectionLogOptionsPtrOutput) CloudwatchLogGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConnectionLogOptions) *string { return v.CloudwatchLogGroup }).(pulumi.StringPtrOutput)
}

// The name of the CloudWatch Logs log stream to which the connection data is published.
func (o EndpointConnectionLogOptionsPtrOutput) CloudwatchLogStream() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EndpointConnectionLogOptions) *string { return v.CloudwatchLogStream }).(pulumi.StringPtrOutput)
}

// Indicates whether connection logging is enabled.
func (o EndpointConnectionLogOptionsPtrOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v EndpointConnectionLogOptions) bool { return v.Enabled }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(EndpointAuthenticationOptionsOutput{})
	pulumi.RegisterOutputType(EndpointAuthenticationOptionsPtrOutput{})
	pulumi.RegisterOutputType(EndpointConnectionLogOptionsOutput{})
	pulumi.RegisterOutputType(EndpointConnectionLogOptionsPtrOutput{})
}
