// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2clientvpn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupEndpoint(ctx *pulumi.Context, args *LookupEndpointArgs, opts ...pulumi.InvokeOption) (*LookupEndpointResult, error) {
	var rv LookupEndpointResult
	err := ctx.Invoke("aws:ec2clientvpn/getEndpoint:getEndpoint", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEndpoint.
type LookupEndpointArgs struct {
	ClientVpnEndpointId *string             `pulumi:"clientVpnEndpointId"`
	Filters             []GetEndpointFilter `pulumi:"filters"`
	Tags                map[string]string   `pulumi:"tags"`
}

// A collection of values returned by getEndpoint.
type LookupEndpointResult struct {
	Arn                      string                               `pulumi:"arn"`
	AuthenticationOptions    []GetEndpointAuthenticationOption    `pulumi:"authenticationOptions"`
	ClientCidrBlock          string                               `pulumi:"clientCidrBlock"`
	ClientConnectOptions     []GetEndpointClientConnectOption     `pulumi:"clientConnectOptions"`
	ClientLoginBannerOptions []GetEndpointClientLoginBannerOption `pulumi:"clientLoginBannerOptions"`
	ClientVpnEndpointId      string                               `pulumi:"clientVpnEndpointId"`
	ConnectionLogOptions     []GetEndpointConnectionLogOption     `pulumi:"connectionLogOptions"`
	Description              string                               `pulumi:"description"`
	DnsName                  string                               `pulumi:"dnsName"`
	DnsServers               []string                             `pulumi:"dnsServers"`
	Filters                  []GetEndpointFilter                  `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id                   string            `pulumi:"id"`
	SecurityGroupIds     []string          `pulumi:"securityGroupIds"`
	SelfServicePortal    string            `pulumi:"selfServicePortal"`
	ServerCertificateArn string            `pulumi:"serverCertificateArn"`
	SessionTimeoutHours  int               `pulumi:"sessionTimeoutHours"`
	SplitTunnel          bool              `pulumi:"splitTunnel"`
	Tags                 map[string]string `pulumi:"tags"`
	TransportProtocol    string            `pulumi:"transportProtocol"`
	VpcId                string            `pulumi:"vpcId"`
	VpnPort              int               `pulumi:"vpnPort"`
}

func LookupEndpointOutput(ctx *pulumi.Context, args LookupEndpointOutputArgs, opts ...pulumi.InvokeOption) LookupEndpointResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupEndpointResult, error) {
			args := v.(LookupEndpointArgs)
			r, err := LookupEndpoint(ctx, &args, opts...)
			var s LookupEndpointResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupEndpointResultOutput)
}

// A collection of arguments for invoking getEndpoint.
type LookupEndpointOutputArgs struct {
	ClientVpnEndpointId pulumi.StringPtrInput       `pulumi:"clientVpnEndpointId"`
	Filters             GetEndpointFilterArrayInput `pulumi:"filters"`
	Tags                pulumi.StringMapInput       `pulumi:"tags"`
}

func (LookupEndpointOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEndpointArgs)(nil)).Elem()
}

// A collection of values returned by getEndpoint.
type LookupEndpointResultOutput struct{ *pulumi.OutputState }

func (LookupEndpointResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEndpointResult)(nil)).Elem()
}

func (o LookupEndpointResultOutput) ToLookupEndpointResultOutput() LookupEndpointResultOutput {
	return o
}

func (o LookupEndpointResultOutput) ToLookupEndpointResultOutputWithContext(ctx context.Context) LookupEndpointResultOutput {
	return o
}

func (o LookupEndpointResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEndpointResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupEndpointResultOutput) AuthenticationOptions() GetEndpointAuthenticationOptionArrayOutput {
	return o.ApplyT(func(v LookupEndpointResult) []GetEndpointAuthenticationOption { return v.AuthenticationOptions }).(GetEndpointAuthenticationOptionArrayOutput)
}

func (o LookupEndpointResultOutput) ClientCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEndpointResult) string { return v.ClientCidrBlock }).(pulumi.StringOutput)
}

func (o LookupEndpointResultOutput) ClientConnectOptions() GetEndpointClientConnectOptionArrayOutput {
	return o.ApplyT(func(v LookupEndpointResult) []GetEndpointClientConnectOption { return v.ClientConnectOptions }).(GetEndpointClientConnectOptionArrayOutput)
}

func (o LookupEndpointResultOutput) ClientLoginBannerOptions() GetEndpointClientLoginBannerOptionArrayOutput {
	return o.ApplyT(func(v LookupEndpointResult) []GetEndpointClientLoginBannerOption { return v.ClientLoginBannerOptions }).(GetEndpointClientLoginBannerOptionArrayOutput)
}

func (o LookupEndpointResultOutput) ClientVpnEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEndpointResult) string { return v.ClientVpnEndpointId }).(pulumi.StringOutput)
}

func (o LookupEndpointResultOutput) ConnectionLogOptions() GetEndpointConnectionLogOptionArrayOutput {
	return o.ApplyT(func(v LookupEndpointResult) []GetEndpointConnectionLogOption { return v.ConnectionLogOptions }).(GetEndpointConnectionLogOptionArrayOutput)
}

func (o LookupEndpointResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEndpointResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupEndpointResultOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEndpointResult) string { return v.DnsName }).(pulumi.StringOutput)
}

func (o LookupEndpointResultOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupEndpointResult) []string { return v.DnsServers }).(pulumi.StringArrayOutput)
}

func (o LookupEndpointResultOutput) Filters() GetEndpointFilterArrayOutput {
	return o.ApplyT(func(v LookupEndpointResult) []GetEndpointFilter { return v.Filters }).(GetEndpointFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupEndpointResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEndpointResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupEndpointResultOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupEndpointResult) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o LookupEndpointResultOutput) SelfServicePortal() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEndpointResult) string { return v.SelfServicePortal }).(pulumi.StringOutput)
}

func (o LookupEndpointResultOutput) ServerCertificateArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEndpointResult) string { return v.ServerCertificateArn }).(pulumi.StringOutput)
}

func (o LookupEndpointResultOutput) SessionTimeoutHours() pulumi.IntOutput {
	return o.ApplyT(func(v LookupEndpointResult) int { return v.SessionTimeoutHours }).(pulumi.IntOutput)
}

func (o LookupEndpointResultOutput) SplitTunnel() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupEndpointResult) bool { return v.SplitTunnel }).(pulumi.BoolOutput)
}

func (o LookupEndpointResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupEndpointResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupEndpointResultOutput) TransportProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEndpointResult) string { return v.TransportProtocol }).(pulumi.StringOutput)
}

func (o LookupEndpointResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEndpointResult) string { return v.VpcId }).(pulumi.StringOutput)
}

func (o LookupEndpointResultOutput) VpnPort() pulumi.IntOutput {
	return o.ApplyT(func(v LookupEndpointResult) int { return v.VpnPort }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEndpointResultOutput{})
}
