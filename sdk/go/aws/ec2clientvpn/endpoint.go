// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ec2clientvpn

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Endpoint struct {
	pulumi.CustomResourceState

	Arn                      pulumi.StringOutput                     `pulumi:"arn"`
	AuthenticationOptions    EndpointAuthenticationOptionArrayOutput `pulumi:"authenticationOptions"`
	ClientCidrBlock          pulumi.StringOutput                     `pulumi:"clientCidrBlock"`
	ClientConnectOptions     EndpointClientConnectOptionsOutput      `pulumi:"clientConnectOptions"`
	ClientLoginBannerOptions EndpointClientLoginBannerOptionsOutput  `pulumi:"clientLoginBannerOptions"`
	ConnectionLogOptions     EndpointConnectionLogOptionsOutput      `pulumi:"connectionLogOptions"`
	Description              pulumi.StringPtrOutput                  `pulumi:"description"`
	DnsName                  pulumi.StringOutput                     `pulumi:"dnsName"`
	DnsServers               pulumi.StringArrayOutput                `pulumi:"dnsServers"`
	SecurityGroupIds         pulumi.StringArrayOutput                `pulumi:"securityGroupIds"`
	SelfServicePortal        pulumi.StringPtrOutput                  `pulumi:"selfServicePortal"`
	ServerCertificateArn     pulumi.StringOutput                     `pulumi:"serverCertificateArn"`
	SessionTimeoutHours      pulumi.IntPtrOutput                     `pulumi:"sessionTimeoutHours"`
	SplitTunnel              pulumi.BoolPtrOutput                    `pulumi:"splitTunnel"`
	// Deprecated: This attribute has been deprecated.
	Status            pulumi.StringOutput    `pulumi:"status"`
	Tags              pulumi.StringMapOutput `pulumi:"tags"`
	TagsAll           pulumi.StringMapOutput `pulumi:"tagsAll"`
	TransportProtocol pulumi.StringPtrOutput `pulumi:"transportProtocol"`
	VpcId             pulumi.StringOutput    `pulumi:"vpcId"`
	VpnPort           pulumi.IntPtrOutput    `pulumi:"vpnPort"`
}

// NewEndpoint registers a new resource with the given unique name, arguments, and options.
func NewEndpoint(ctx *pulumi.Context,
	name string, args *EndpointArgs, opts ...pulumi.ResourceOption) (*Endpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AuthenticationOptions == nil {
		return nil, errors.New("invalid value for required argument 'AuthenticationOptions'")
	}
	if args.ClientCidrBlock == nil {
		return nil, errors.New("invalid value for required argument 'ClientCidrBlock'")
	}
	if args.ConnectionLogOptions == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionLogOptions'")
	}
	if args.ServerCertificateArn == nil {
		return nil, errors.New("invalid value for required argument 'ServerCertificateArn'")
	}
	var resource Endpoint
	err := ctx.RegisterResource("aws:ec2clientvpn/endpoint:Endpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEndpoint gets an existing Endpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EndpointState, opts ...pulumi.ResourceOption) (*Endpoint, error) {
	var resource Endpoint
	err := ctx.ReadResource("aws:ec2clientvpn/endpoint:Endpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Endpoint resources.
type endpointState struct {
	Arn                      *string                           `pulumi:"arn"`
	AuthenticationOptions    []EndpointAuthenticationOption    `pulumi:"authenticationOptions"`
	ClientCidrBlock          *string                           `pulumi:"clientCidrBlock"`
	ClientConnectOptions     *EndpointClientConnectOptions     `pulumi:"clientConnectOptions"`
	ClientLoginBannerOptions *EndpointClientLoginBannerOptions `pulumi:"clientLoginBannerOptions"`
	ConnectionLogOptions     *EndpointConnectionLogOptions     `pulumi:"connectionLogOptions"`
	Description              *string                           `pulumi:"description"`
	DnsName                  *string                           `pulumi:"dnsName"`
	DnsServers               []string                          `pulumi:"dnsServers"`
	SecurityGroupIds         []string                          `pulumi:"securityGroupIds"`
	SelfServicePortal        *string                           `pulumi:"selfServicePortal"`
	ServerCertificateArn     *string                           `pulumi:"serverCertificateArn"`
	SessionTimeoutHours      *int                              `pulumi:"sessionTimeoutHours"`
	SplitTunnel              *bool                             `pulumi:"splitTunnel"`
	// Deprecated: This attribute has been deprecated.
	Status            *string           `pulumi:"status"`
	Tags              map[string]string `pulumi:"tags"`
	TagsAll           map[string]string `pulumi:"tagsAll"`
	TransportProtocol *string           `pulumi:"transportProtocol"`
	VpcId             *string           `pulumi:"vpcId"`
	VpnPort           *int              `pulumi:"vpnPort"`
}

type EndpointState struct {
	Arn                      pulumi.StringPtrInput
	AuthenticationOptions    EndpointAuthenticationOptionArrayInput
	ClientCidrBlock          pulumi.StringPtrInput
	ClientConnectOptions     EndpointClientConnectOptionsPtrInput
	ClientLoginBannerOptions EndpointClientLoginBannerOptionsPtrInput
	ConnectionLogOptions     EndpointConnectionLogOptionsPtrInput
	Description              pulumi.StringPtrInput
	DnsName                  pulumi.StringPtrInput
	DnsServers               pulumi.StringArrayInput
	SecurityGroupIds         pulumi.StringArrayInput
	SelfServicePortal        pulumi.StringPtrInput
	ServerCertificateArn     pulumi.StringPtrInput
	SessionTimeoutHours      pulumi.IntPtrInput
	SplitTunnel              pulumi.BoolPtrInput
	// Deprecated: This attribute has been deprecated.
	Status            pulumi.StringPtrInput
	Tags              pulumi.StringMapInput
	TagsAll           pulumi.StringMapInput
	TransportProtocol pulumi.StringPtrInput
	VpcId             pulumi.StringPtrInput
	VpnPort           pulumi.IntPtrInput
}

func (EndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointState)(nil)).Elem()
}

type endpointArgs struct {
	AuthenticationOptions    []EndpointAuthenticationOption    `pulumi:"authenticationOptions"`
	ClientCidrBlock          string                            `pulumi:"clientCidrBlock"`
	ClientConnectOptions     *EndpointClientConnectOptions     `pulumi:"clientConnectOptions"`
	ClientLoginBannerOptions *EndpointClientLoginBannerOptions `pulumi:"clientLoginBannerOptions"`
	ConnectionLogOptions     EndpointConnectionLogOptions      `pulumi:"connectionLogOptions"`
	Description              *string                           `pulumi:"description"`
	DnsServers               []string                          `pulumi:"dnsServers"`
	SecurityGroupIds         []string                          `pulumi:"securityGroupIds"`
	SelfServicePortal        *string                           `pulumi:"selfServicePortal"`
	ServerCertificateArn     string                            `pulumi:"serverCertificateArn"`
	SessionTimeoutHours      *int                              `pulumi:"sessionTimeoutHours"`
	SplitTunnel              *bool                             `pulumi:"splitTunnel"`
	Tags                     map[string]string                 `pulumi:"tags"`
	TransportProtocol        *string                           `pulumi:"transportProtocol"`
	VpcId                    *string                           `pulumi:"vpcId"`
	VpnPort                  *int                              `pulumi:"vpnPort"`
}

// The set of arguments for constructing a Endpoint resource.
type EndpointArgs struct {
	AuthenticationOptions    EndpointAuthenticationOptionArrayInput
	ClientCidrBlock          pulumi.StringInput
	ClientConnectOptions     EndpointClientConnectOptionsPtrInput
	ClientLoginBannerOptions EndpointClientLoginBannerOptionsPtrInput
	ConnectionLogOptions     EndpointConnectionLogOptionsInput
	Description              pulumi.StringPtrInput
	DnsServers               pulumi.StringArrayInput
	SecurityGroupIds         pulumi.StringArrayInput
	SelfServicePortal        pulumi.StringPtrInput
	ServerCertificateArn     pulumi.StringInput
	SessionTimeoutHours      pulumi.IntPtrInput
	SplitTunnel              pulumi.BoolPtrInput
	Tags                     pulumi.StringMapInput
	TransportProtocol        pulumi.StringPtrInput
	VpcId                    pulumi.StringPtrInput
	VpnPort                  pulumi.IntPtrInput
}

func (EndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*endpointArgs)(nil)).Elem()
}

type EndpointInput interface {
	pulumi.Input

	ToEndpointOutput() EndpointOutput
	ToEndpointOutputWithContext(ctx context.Context) EndpointOutput
}

func (*Endpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**Endpoint)(nil)).Elem()
}

func (i *Endpoint) ToEndpointOutput() EndpointOutput {
	return i.ToEndpointOutputWithContext(context.Background())
}

func (i *Endpoint) ToEndpointOutputWithContext(ctx context.Context) EndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointOutput)
}

// EndpointArrayInput is an input type that accepts EndpointArray and EndpointArrayOutput values.
// You can construct a concrete instance of `EndpointArrayInput` via:
//
//	EndpointArray{ EndpointArgs{...} }
type EndpointArrayInput interface {
	pulumi.Input

	ToEndpointArrayOutput() EndpointArrayOutput
	ToEndpointArrayOutputWithContext(context.Context) EndpointArrayOutput
}

type EndpointArray []EndpointInput

func (EndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Endpoint)(nil)).Elem()
}

func (i EndpointArray) ToEndpointArrayOutput() EndpointArrayOutput {
	return i.ToEndpointArrayOutputWithContext(context.Background())
}

func (i EndpointArray) ToEndpointArrayOutputWithContext(ctx context.Context) EndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointArrayOutput)
}

// EndpointMapInput is an input type that accepts EndpointMap and EndpointMapOutput values.
// You can construct a concrete instance of `EndpointMapInput` via:
//
//	EndpointMap{ "key": EndpointArgs{...} }
type EndpointMapInput interface {
	pulumi.Input

	ToEndpointMapOutput() EndpointMapOutput
	ToEndpointMapOutputWithContext(context.Context) EndpointMapOutput
}

type EndpointMap map[string]EndpointInput

func (EndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Endpoint)(nil)).Elem()
}

func (i EndpointMap) ToEndpointMapOutput() EndpointMapOutput {
	return i.ToEndpointMapOutputWithContext(context.Background())
}

func (i EndpointMap) ToEndpointMapOutputWithContext(ctx context.Context) EndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EndpointMapOutput)
}

type EndpointOutput struct{ *pulumi.OutputState }

func (EndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Endpoint)(nil)).Elem()
}

func (o EndpointOutput) ToEndpointOutput() EndpointOutput {
	return o
}

func (o EndpointOutput) ToEndpointOutputWithContext(ctx context.Context) EndpointOutput {
	return o
}

func (o EndpointOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o EndpointOutput) AuthenticationOptions() EndpointAuthenticationOptionArrayOutput {
	return o.ApplyT(func(v *Endpoint) EndpointAuthenticationOptionArrayOutput { return v.AuthenticationOptions }).(EndpointAuthenticationOptionArrayOutput)
}

func (o EndpointOutput) ClientCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.StringOutput { return v.ClientCidrBlock }).(pulumi.StringOutput)
}

func (o EndpointOutput) ClientConnectOptions() EndpointClientConnectOptionsOutput {
	return o.ApplyT(func(v *Endpoint) EndpointClientConnectOptionsOutput { return v.ClientConnectOptions }).(EndpointClientConnectOptionsOutput)
}

func (o EndpointOutput) ClientLoginBannerOptions() EndpointClientLoginBannerOptionsOutput {
	return o.ApplyT(func(v *Endpoint) EndpointClientLoginBannerOptionsOutput { return v.ClientLoginBannerOptions }).(EndpointClientLoginBannerOptionsOutput)
}

func (o EndpointOutput) ConnectionLogOptions() EndpointConnectionLogOptionsOutput {
	return o.ApplyT(func(v *Endpoint) EndpointConnectionLogOptionsOutput { return v.ConnectionLogOptions }).(EndpointConnectionLogOptionsOutput)
}

func (o EndpointOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o EndpointOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.StringOutput { return v.DnsName }).(pulumi.StringOutput)
}

func (o EndpointOutput) DnsServers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.StringArrayOutput { return v.DnsServers }).(pulumi.StringArrayOutput)
}

func (o EndpointOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o EndpointOutput) SelfServicePortal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.StringPtrOutput { return v.SelfServicePortal }).(pulumi.StringPtrOutput)
}

func (o EndpointOutput) ServerCertificateArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.StringOutput { return v.ServerCertificateArn }).(pulumi.StringOutput)
}

func (o EndpointOutput) SessionTimeoutHours() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.IntPtrOutput { return v.SessionTimeoutHours }).(pulumi.IntPtrOutput)
}

func (o EndpointOutput) SplitTunnel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.BoolPtrOutput { return v.SplitTunnel }).(pulumi.BoolPtrOutput)
}

// Deprecated: This attribute has been deprecated.
func (o EndpointOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o EndpointOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o EndpointOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o EndpointOutput) TransportProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.StringPtrOutput { return v.TransportProtocol }).(pulumi.StringPtrOutput)
}

func (o EndpointOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

func (o EndpointOutput) VpnPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Endpoint) pulumi.IntPtrOutput { return v.VpnPort }).(pulumi.IntPtrOutput)
}

type EndpointArrayOutput struct{ *pulumi.OutputState }

func (EndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Endpoint)(nil)).Elem()
}

func (o EndpointArrayOutput) ToEndpointArrayOutput() EndpointArrayOutput {
	return o
}

func (o EndpointArrayOutput) ToEndpointArrayOutputWithContext(ctx context.Context) EndpointArrayOutput {
	return o
}

func (o EndpointArrayOutput) Index(i pulumi.IntInput) EndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Endpoint {
		return vs[0].([]*Endpoint)[vs[1].(int)]
	}).(EndpointOutput)
}

type EndpointMapOutput struct{ *pulumi.OutputState }

func (EndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Endpoint)(nil)).Elem()
}

func (o EndpointMapOutput) ToEndpointMapOutput() EndpointMapOutput {
	return o
}

func (o EndpointMapOutput) ToEndpointMapOutputWithContext(ctx context.Context) EndpointMapOutput {
	return o
}

func (o EndpointMapOutput) MapIndex(k pulumi.StringInput) EndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Endpoint {
		return vs[0].(map[string]*Endpoint)[vs[1].(string)]
	}).(EndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointInput)(nil)).Elem(), &Endpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointArrayInput)(nil)).Elem(), EndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EndpointMapInput)(nil)).Elem(), EndpointMap{})
	pulumi.RegisterOutputType(EndpointOutput{})
	pulumi.RegisterOutputType(EndpointArrayOutput{})
	pulumi.RegisterOutputType(EndpointMapOutput{})
}
