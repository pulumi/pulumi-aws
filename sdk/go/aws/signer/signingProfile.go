// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package signer

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SigningProfile struct {
	pulumi.CustomResourceState

	Arn                     pulumi.StringOutput                         `pulumi:"arn"`
	Name                    pulumi.StringOutput                         `pulumi:"name"`
	NamePrefix              pulumi.StringPtrOutput                      `pulumi:"namePrefix"`
	PlatformDisplayName     pulumi.StringOutput                         `pulumi:"platformDisplayName"`
	PlatformId              pulumi.StringOutput                         `pulumi:"platformId"`
	RevocationRecords       SigningProfileRevocationRecordArrayOutput   `pulumi:"revocationRecords"`
	SignatureValidityPeriod SigningProfileSignatureValidityPeriodOutput `pulumi:"signatureValidityPeriod"`
	Status                  pulumi.StringOutput                         `pulumi:"status"`
	Tags                    pulumi.StringMapOutput                      `pulumi:"tags"`
	TagsAll                 pulumi.StringMapOutput                      `pulumi:"tagsAll"`
	Version                 pulumi.StringOutput                         `pulumi:"version"`
	VersionArn              pulumi.StringOutput                         `pulumi:"versionArn"`
}

// NewSigningProfile registers a new resource with the given unique name, arguments, and options.
func NewSigningProfile(ctx *pulumi.Context,
	name string, args *SigningProfileArgs, opts ...pulumi.ResourceOption) (*SigningProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PlatformId == nil {
		return nil, errors.New("invalid value for required argument 'PlatformId'")
	}
	var resource SigningProfile
	err := ctx.RegisterResource("aws:signer/signingProfile:SigningProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSigningProfile gets an existing SigningProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSigningProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SigningProfileState, opts ...pulumi.ResourceOption) (*SigningProfile, error) {
	var resource SigningProfile
	err := ctx.ReadResource("aws:signer/signingProfile:SigningProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SigningProfile resources.
type signingProfileState struct {
	Arn                     *string                                `pulumi:"arn"`
	Name                    *string                                `pulumi:"name"`
	NamePrefix              *string                                `pulumi:"namePrefix"`
	PlatformDisplayName     *string                                `pulumi:"platformDisplayName"`
	PlatformId              *string                                `pulumi:"platformId"`
	RevocationRecords       []SigningProfileRevocationRecord       `pulumi:"revocationRecords"`
	SignatureValidityPeriod *SigningProfileSignatureValidityPeriod `pulumi:"signatureValidityPeriod"`
	Status                  *string                                `pulumi:"status"`
	Tags                    map[string]string                      `pulumi:"tags"`
	TagsAll                 map[string]string                      `pulumi:"tagsAll"`
	Version                 *string                                `pulumi:"version"`
	VersionArn              *string                                `pulumi:"versionArn"`
}

type SigningProfileState struct {
	Arn                     pulumi.StringPtrInput
	Name                    pulumi.StringPtrInput
	NamePrefix              pulumi.StringPtrInput
	PlatformDisplayName     pulumi.StringPtrInput
	PlatformId              pulumi.StringPtrInput
	RevocationRecords       SigningProfileRevocationRecordArrayInput
	SignatureValidityPeriod SigningProfileSignatureValidityPeriodPtrInput
	Status                  pulumi.StringPtrInput
	Tags                    pulumi.StringMapInput
	TagsAll                 pulumi.StringMapInput
	Version                 pulumi.StringPtrInput
	VersionArn              pulumi.StringPtrInput
}

func (SigningProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*signingProfileState)(nil)).Elem()
}

type signingProfileArgs struct {
	Name                    *string                                `pulumi:"name"`
	NamePrefix              *string                                `pulumi:"namePrefix"`
	PlatformId              string                                 `pulumi:"platformId"`
	SignatureValidityPeriod *SigningProfileSignatureValidityPeriod `pulumi:"signatureValidityPeriod"`
	Tags                    map[string]string                      `pulumi:"tags"`
}

// The set of arguments for constructing a SigningProfile resource.
type SigningProfileArgs struct {
	Name                    pulumi.StringPtrInput
	NamePrefix              pulumi.StringPtrInput
	PlatformId              pulumi.StringInput
	SignatureValidityPeriod SigningProfileSignatureValidityPeriodPtrInput
	Tags                    pulumi.StringMapInput
}

func (SigningProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*signingProfileArgs)(nil)).Elem()
}

type SigningProfileInput interface {
	pulumi.Input

	ToSigningProfileOutput() SigningProfileOutput
	ToSigningProfileOutputWithContext(ctx context.Context) SigningProfileOutput
}

func (*SigningProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**SigningProfile)(nil)).Elem()
}

func (i *SigningProfile) ToSigningProfileOutput() SigningProfileOutput {
	return i.ToSigningProfileOutputWithContext(context.Background())
}

func (i *SigningProfile) ToSigningProfileOutputWithContext(ctx context.Context) SigningProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SigningProfileOutput)
}

// SigningProfileArrayInput is an input type that accepts SigningProfileArray and SigningProfileArrayOutput values.
// You can construct a concrete instance of `SigningProfileArrayInput` via:
//
//	SigningProfileArray{ SigningProfileArgs{...} }
type SigningProfileArrayInput interface {
	pulumi.Input

	ToSigningProfileArrayOutput() SigningProfileArrayOutput
	ToSigningProfileArrayOutputWithContext(context.Context) SigningProfileArrayOutput
}

type SigningProfileArray []SigningProfileInput

func (SigningProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SigningProfile)(nil)).Elem()
}

func (i SigningProfileArray) ToSigningProfileArrayOutput() SigningProfileArrayOutput {
	return i.ToSigningProfileArrayOutputWithContext(context.Background())
}

func (i SigningProfileArray) ToSigningProfileArrayOutputWithContext(ctx context.Context) SigningProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SigningProfileArrayOutput)
}

// SigningProfileMapInput is an input type that accepts SigningProfileMap and SigningProfileMapOutput values.
// You can construct a concrete instance of `SigningProfileMapInput` via:
//
//	SigningProfileMap{ "key": SigningProfileArgs{...} }
type SigningProfileMapInput interface {
	pulumi.Input

	ToSigningProfileMapOutput() SigningProfileMapOutput
	ToSigningProfileMapOutputWithContext(context.Context) SigningProfileMapOutput
}

type SigningProfileMap map[string]SigningProfileInput

func (SigningProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SigningProfile)(nil)).Elem()
}

func (i SigningProfileMap) ToSigningProfileMapOutput() SigningProfileMapOutput {
	return i.ToSigningProfileMapOutputWithContext(context.Background())
}

func (i SigningProfileMap) ToSigningProfileMapOutputWithContext(ctx context.Context) SigningProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SigningProfileMapOutput)
}

type SigningProfileOutput struct{ *pulumi.OutputState }

func (SigningProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SigningProfile)(nil)).Elem()
}

func (o SigningProfileOutput) ToSigningProfileOutput() SigningProfileOutput {
	return o
}

func (o SigningProfileOutput) ToSigningProfileOutputWithContext(ctx context.Context) SigningProfileOutput {
	return o
}

func (o SigningProfileOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *SigningProfile) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o SigningProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SigningProfile) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o SigningProfileOutput) NamePrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SigningProfile) pulumi.StringPtrOutput { return v.NamePrefix }).(pulumi.StringPtrOutput)
}

func (o SigningProfileOutput) PlatformDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *SigningProfile) pulumi.StringOutput { return v.PlatformDisplayName }).(pulumi.StringOutput)
}

func (o SigningProfileOutput) PlatformId() pulumi.StringOutput {
	return o.ApplyT(func(v *SigningProfile) pulumi.StringOutput { return v.PlatformId }).(pulumi.StringOutput)
}

func (o SigningProfileOutput) RevocationRecords() SigningProfileRevocationRecordArrayOutput {
	return o.ApplyT(func(v *SigningProfile) SigningProfileRevocationRecordArrayOutput { return v.RevocationRecords }).(SigningProfileRevocationRecordArrayOutput)
}

func (o SigningProfileOutput) SignatureValidityPeriod() SigningProfileSignatureValidityPeriodOutput {
	return o.ApplyT(func(v *SigningProfile) SigningProfileSignatureValidityPeriodOutput { return v.SignatureValidityPeriod }).(SigningProfileSignatureValidityPeriodOutput)
}

func (o SigningProfileOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SigningProfile) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o SigningProfileOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SigningProfile) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o SigningProfileOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SigningProfile) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o SigningProfileOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *SigningProfile) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

func (o SigningProfileOutput) VersionArn() pulumi.StringOutput {
	return o.ApplyT(func(v *SigningProfile) pulumi.StringOutput { return v.VersionArn }).(pulumi.StringOutput)
}

type SigningProfileArrayOutput struct{ *pulumi.OutputState }

func (SigningProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SigningProfile)(nil)).Elem()
}

func (o SigningProfileArrayOutput) ToSigningProfileArrayOutput() SigningProfileArrayOutput {
	return o
}

func (o SigningProfileArrayOutput) ToSigningProfileArrayOutputWithContext(ctx context.Context) SigningProfileArrayOutput {
	return o
}

func (o SigningProfileArrayOutput) Index(i pulumi.IntInput) SigningProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SigningProfile {
		return vs[0].([]*SigningProfile)[vs[1].(int)]
	}).(SigningProfileOutput)
}

type SigningProfileMapOutput struct{ *pulumi.OutputState }

func (SigningProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SigningProfile)(nil)).Elem()
}

func (o SigningProfileMapOutput) ToSigningProfileMapOutput() SigningProfileMapOutput {
	return o
}

func (o SigningProfileMapOutput) ToSigningProfileMapOutputWithContext(ctx context.Context) SigningProfileMapOutput {
	return o
}

func (o SigningProfileMapOutput) MapIndex(k pulumi.StringInput) SigningProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SigningProfile {
		return vs[0].(map[string]*SigningProfile)[vs[1].(string)]
	}).(SigningProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SigningProfileInput)(nil)).Elem(), &SigningProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*SigningProfileArrayInput)(nil)).Elem(), SigningProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SigningProfileMapInput)(nil)).Elem(), SigningProfileMap{})
	pulumi.RegisterOutputType(SigningProfileOutput{})
	pulumi.RegisterOutputType(SigningProfileArrayOutput{})
	pulumi.RegisterOutputType(SigningProfileMapOutput{})
}
