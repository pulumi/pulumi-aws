// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package signer

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Creates a Signer Signing Job.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v3/go/aws/signer"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		testSp, err := signer.NewSigningProfile(ctx, "testSp", &signer.SigningProfileArgs{
// 			PlatformId: pulumi.String("AWSLambda-SHA384-ECDSA"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = signer.NewSigningJob(ctx, "buildSigningJob", &signer.SigningJobArgs{
// 			ProfileName: testSp.Name,
// 			Source: &signer.SigningJobSourceArgs{
// 				S3: &signer.SigningJobSourceS3Args{
// 					Bucket:  pulumi.String("s3-bucket-name"),
// 					Key:     pulumi.String("object-to-be-signed.zip"),
// 					Version: pulumi.String("jADjFYYYEXAMPLETszPjOmCMFDzd9dN1"),
// 				},
// 			},
// 			Destination: &signer.SigningJobDestinationArgs{
// 				S3: &signer.SigningJobDestinationS3Args{
// 					Bucket: pulumi.String("s3-bucket-name"),
// 					Prefix: pulumi.String("signed/"),
// 				},
// 			},
// 			IgnoreSigningJobFailure: pulumi.Bool(true),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// Signer signing jobs can be imported using the `job_id`, e.g.
//
// ```sh
//  $ pulumi import aws:signer/signingJob:SigningJob test_signer_signing_job 9ed7e5c3-b8d4-4da0-8459-44e0b068f7ee
// ```
type SigningJob struct {
	pulumi.CustomResourceState

	// Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the signing job was completed.
	CompletedAt pulumi.StringOutput `pulumi:"completedAt"`
	// Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the signing job was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The S3 bucket in which to save your signed object. See Destination below for details.
	Destination SigningJobDestinationOutput `pulumi:"destination"`
	// Set this argument to `true` to ignore signing job failures and retrieve failed status and reason. Default `false`.
	IgnoreSigningJobFailure pulumi.BoolPtrOutput `pulumi:"ignoreSigningJobFailure"`
	// The ID of the signing job on output.
	JobId pulumi.StringOutput `pulumi:"jobId"`
	// The IAM entity that initiated the signing job.
	JobInvoker pulumi.StringOutput `pulumi:"jobInvoker"`
	// The AWS account ID of the job owner.
	JobOwner pulumi.StringOutput `pulumi:"jobOwner"`
	// A human-readable name for the signing platform associated with the signing job.
	PlatformDisplayName pulumi.StringOutput `pulumi:"platformDisplayName"`
	// The platform to which your signed code image will be distributed.
	PlatformId pulumi.StringOutput `pulumi:"platformId"`
	// The name of the profile to initiate the signing operation.
	ProfileName pulumi.StringOutput `pulumi:"profileName"`
	// The version of the signing profile used to initiate the signing job.
	ProfileVersion pulumi.StringOutput `pulumi:"profileVersion"`
	// The IAM principal that requested the signing job.
	RequestedBy pulumi.StringOutput `pulumi:"requestedBy"`
	// A revocation record if the signature generated by the signing job has been revoked. Contains a timestamp and the ID of the IAM entity that revoked the signature.
	RevocationRecords SigningJobRevocationRecordArrayOutput `pulumi:"revocationRecords"`
	// The time when the signature of a signing job expires.
	SignatureExpiresAt pulumi.StringOutput `pulumi:"signatureExpiresAt"`
	// Name of the S3 bucket where the signed code image is saved by code signing.
	SignedObjects SigningJobSignedObjectArrayOutput `pulumi:"signedObjects"`
	// The S3 bucket that contains the object to sign. See Source below for details.
	Source SigningJobSourceOutput `pulumi:"source"`
	// Status of the signing job.
	Status pulumi.StringOutput `pulumi:"status"`
	// String value that contains the status reason.
	StatusReason pulumi.StringOutput `pulumi:"statusReason"`
}

// NewSigningJob registers a new resource with the given unique name, arguments, and options.
func NewSigningJob(ctx *pulumi.Context,
	name string, args *SigningJobArgs, opts ...pulumi.ResourceOption) (*SigningJob, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Destination == nil {
		return nil, errors.New("invalid value for required argument 'Destination'")
	}
	if args.ProfileName == nil {
		return nil, errors.New("invalid value for required argument 'ProfileName'")
	}
	if args.Source == nil {
		return nil, errors.New("invalid value for required argument 'Source'")
	}
	var resource SigningJob
	err := ctx.RegisterResource("aws:signer/signingJob:SigningJob", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSigningJob gets an existing SigningJob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSigningJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SigningJobState, opts ...pulumi.ResourceOption) (*SigningJob, error) {
	var resource SigningJob
	err := ctx.ReadResource("aws:signer/signingJob:SigningJob", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SigningJob resources.
type signingJobState struct {
	// Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the signing job was completed.
	CompletedAt *string `pulumi:"completedAt"`
	// Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the signing job was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The S3 bucket in which to save your signed object. See Destination below for details.
	Destination *SigningJobDestination `pulumi:"destination"`
	// Set this argument to `true` to ignore signing job failures and retrieve failed status and reason. Default `false`.
	IgnoreSigningJobFailure *bool `pulumi:"ignoreSigningJobFailure"`
	// The ID of the signing job on output.
	JobId *string `pulumi:"jobId"`
	// The IAM entity that initiated the signing job.
	JobInvoker *string `pulumi:"jobInvoker"`
	// The AWS account ID of the job owner.
	JobOwner *string `pulumi:"jobOwner"`
	// A human-readable name for the signing platform associated with the signing job.
	PlatformDisplayName *string `pulumi:"platformDisplayName"`
	// The platform to which your signed code image will be distributed.
	PlatformId *string `pulumi:"platformId"`
	// The name of the profile to initiate the signing operation.
	ProfileName *string `pulumi:"profileName"`
	// The version of the signing profile used to initiate the signing job.
	ProfileVersion *string `pulumi:"profileVersion"`
	// The IAM principal that requested the signing job.
	RequestedBy *string `pulumi:"requestedBy"`
	// A revocation record if the signature generated by the signing job has been revoked. Contains a timestamp and the ID of the IAM entity that revoked the signature.
	RevocationRecords []SigningJobRevocationRecord `pulumi:"revocationRecords"`
	// The time when the signature of a signing job expires.
	SignatureExpiresAt *string `pulumi:"signatureExpiresAt"`
	// Name of the S3 bucket where the signed code image is saved by code signing.
	SignedObjects []SigningJobSignedObject `pulumi:"signedObjects"`
	// The S3 bucket that contains the object to sign. See Source below for details.
	Source *SigningJobSource `pulumi:"source"`
	// Status of the signing job.
	Status *string `pulumi:"status"`
	// String value that contains the status reason.
	StatusReason *string `pulumi:"statusReason"`
}

type SigningJobState struct {
	// Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the signing job was completed.
	CompletedAt pulumi.StringPtrInput
	// Date and time in [RFC3339 format](https://tools.ietf.org/html/rfc3339#section-5.8) that the signing job was created.
	CreatedAt pulumi.StringPtrInput
	// The S3 bucket in which to save your signed object. See Destination below for details.
	Destination SigningJobDestinationPtrInput
	// Set this argument to `true` to ignore signing job failures and retrieve failed status and reason. Default `false`.
	IgnoreSigningJobFailure pulumi.BoolPtrInput
	// The ID of the signing job on output.
	JobId pulumi.StringPtrInput
	// The IAM entity that initiated the signing job.
	JobInvoker pulumi.StringPtrInput
	// The AWS account ID of the job owner.
	JobOwner pulumi.StringPtrInput
	// A human-readable name for the signing platform associated with the signing job.
	PlatformDisplayName pulumi.StringPtrInput
	// The platform to which your signed code image will be distributed.
	PlatformId pulumi.StringPtrInput
	// The name of the profile to initiate the signing operation.
	ProfileName pulumi.StringPtrInput
	// The version of the signing profile used to initiate the signing job.
	ProfileVersion pulumi.StringPtrInput
	// The IAM principal that requested the signing job.
	RequestedBy pulumi.StringPtrInput
	// A revocation record if the signature generated by the signing job has been revoked. Contains a timestamp and the ID of the IAM entity that revoked the signature.
	RevocationRecords SigningJobRevocationRecordArrayInput
	// The time when the signature of a signing job expires.
	SignatureExpiresAt pulumi.StringPtrInput
	// Name of the S3 bucket where the signed code image is saved by code signing.
	SignedObjects SigningJobSignedObjectArrayInput
	// The S3 bucket that contains the object to sign. See Source below for details.
	Source SigningJobSourcePtrInput
	// Status of the signing job.
	Status pulumi.StringPtrInput
	// String value that contains the status reason.
	StatusReason pulumi.StringPtrInput
}

func (SigningJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*signingJobState)(nil)).Elem()
}

type signingJobArgs struct {
	// The S3 bucket in which to save your signed object. See Destination below for details.
	Destination SigningJobDestination `pulumi:"destination"`
	// Set this argument to `true` to ignore signing job failures and retrieve failed status and reason. Default `false`.
	IgnoreSigningJobFailure *bool `pulumi:"ignoreSigningJobFailure"`
	// The name of the profile to initiate the signing operation.
	ProfileName string `pulumi:"profileName"`
	// The S3 bucket that contains the object to sign. See Source below for details.
	Source SigningJobSource `pulumi:"source"`
}

// The set of arguments for constructing a SigningJob resource.
type SigningJobArgs struct {
	// The S3 bucket in which to save your signed object. See Destination below for details.
	Destination SigningJobDestinationInput
	// Set this argument to `true` to ignore signing job failures and retrieve failed status and reason. Default `false`.
	IgnoreSigningJobFailure pulumi.BoolPtrInput
	// The name of the profile to initiate the signing operation.
	ProfileName pulumi.StringInput
	// The S3 bucket that contains the object to sign. See Source below for details.
	Source SigningJobSourceInput
}

func (SigningJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*signingJobArgs)(nil)).Elem()
}

type SigningJobInput interface {
	pulumi.Input

	ToSigningJobOutput() SigningJobOutput
	ToSigningJobOutputWithContext(ctx context.Context) SigningJobOutput
}

func (SigningJob) ElementType() reflect.Type {
	return reflect.TypeOf((*SigningJob)(nil)).Elem()
}

func (i SigningJob) ToSigningJobOutput() SigningJobOutput {
	return i.ToSigningJobOutputWithContext(context.Background())
}

func (i SigningJob) ToSigningJobOutputWithContext(ctx context.Context) SigningJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SigningJobOutput)
}

type SigningJobOutput struct {
	*pulumi.OutputState
}

func (SigningJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SigningJobOutput)(nil)).Elem()
}

func (o SigningJobOutput) ToSigningJobOutput() SigningJobOutput {
	return o
}

func (o SigningJobOutput) ToSigningJobOutputWithContext(ctx context.Context) SigningJobOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(SigningJobOutput{})
}
