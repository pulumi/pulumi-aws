// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package signer

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SigningJob struct {
	pulumi.CustomResourceState

	CompletedAt             pulumi.StringOutput                   `pulumi:"completedAt"`
	CreatedAt               pulumi.StringOutput                   `pulumi:"createdAt"`
	Destination             SigningJobDestinationOutput           `pulumi:"destination"`
	IgnoreSigningJobFailure pulumi.BoolPtrOutput                  `pulumi:"ignoreSigningJobFailure"`
	JobId                   pulumi.StringOutput                   `pulumi:"jobId"`
	JobInvoker              pulumi.StringOutput                   `pulumi:"jobInvoker"`
	JobOwner                pulumi.StringOutput                   `pulumi:"jobOwner"`
	PlatformDisplayName     pulumi.StringOutput                   `pulumi:"platformDisplayName"`
	PlatformId              pulumi.StringOutput                   `pulumi:"platformId"`
	ProfileName             pulumi.StringOutput                   `pulumi:"profileName"`
	ProfileVersion          pulumi.StringOutput                   `pulumi:"profileVersion"`
	RequestedBy             pulumi.StringOutput                   `pulumi:"requestedBy"`
	RevocationRecords       SigningJobRevocationRecordArrayOutput `pulumi:"revocationRecords"`
	SignatureExpiresAt      pulumi.StringOutput                   `pulumi:"signatureExpiresAt"`
	SignedObjects           SigningJobSignedObjectArrayOutput     `pulumi:"signedObjects"`
	Source                  SigningJobSourceOutput                `pulumi:"source"`
	Status                  pulumi.StringOutput                   `pulumi:"status"`
	StatusReason            pulumi.StringOutput                   `pulumi:"statusReason"`
}

// NewSigningJob registers a new resource with the given unique name, arguments, and options.
func NewSigningJob(ctx *pulumi.Context,
	name string, args *SigningJobArgs, opts ...pulumi.ResourceOption) (*SigningJob, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Destination == nil {
		return nil, errors.New("invalid value for required argument 'Destination'")
	}
	if args.ProfileName == nil {
		return nil, errors.New("invalid value for required argument 'ProfileName'")
	}
	if args.Source == nil {
		return nil, errors.New("invalid value for required argument 'Source'")
	}
	var resource SigningJob
	err := ctx.RegisterResource("aws:signer/signingJob:SigningJob", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSigningJob gets an existing SigningJob resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSigningJob(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SigningJobState, opts ...pulumi.ResourceOption) (*SigningJob, error) {
	var resource SigningJob
	err := ctx.ReadResource("aws:signer/signingJob:SigningJob", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SigningJob resources.
type signingJobState struct {
	CompletedAt             *string                      `pulumi:"completedAt"`
	CreatedAt               *string                      `pulumi:"createdAt"`
	Destination             *SigningJobDestination       `pulumi:"destination"`
	IgnoreSigningJobFailure *bool                        `pulumi:"ignoreSigningJobFailure"`
	JobId                   *string                      `pulumi:"jobId"`
	JobInvoker              *string                      `pulumi:"jobInvoker"`
	JobOwner                *string                      `pulumi:"jobOwner"`
	PlatformDisplayName     *string                      `pulumi:"platformDisplayName"`
	PlatformId              *string                      `pulumi:"platformId"`
	ProfileName             *string                      `pulumi:"profileName"`
	ProfileVersion          *string                      `pulumi:"profileVersion"`
	RequestedBy             *string                      `pulumi:"requestedBy"`
	RevocationRecords       []SigningJobRevocationRecord `pulumi:"revocationRecords"`
	SignatureExpiresAt      *string                      `pulumi:"signatureExpiresAt"`
	SignedObjects           []SigningJobSignedObject     `pulumi:"signedObjects"`
	Source                  *SigningJobSource            `pulumi:"source"`
	Status                  *string                      `pulumi:"status"`
	StatusReason            *string                      `pulumi:"statusReason"`
}

type SigningJobState struct {
	CompletedAt             pulumi.StringPtrInput
	CreatedAt               pulumi.StringPtrInput
	Destination             SigningJobDestinationPtrInput
	IgnoreSigningJobFailure pulumi.BoolPtrInput
	JobId                   pulumi.StringPtrInput
	JobInvoker              pulumi.StringPtrInput
	JobOwner                pulumi.StringPtrInput
	PlatformDisplayName     pulumi.StringPtrInput
	PlatformId              pulumi.StringPtrInput
	ProfileName             pulumi.StringPtrInput
	ProfileVersion          pulumi.StringPtrInput
	RequestedBy             pulumi.StringPtrInput
	RevocationRecords       SigningJobRevocationRecordArrayInput
	SignatureExpiresAt      pulumi.StringPtrInput
	SignedObjects           SigningJobSignedObjectArrayInput
	Source                  SigningJobSourcePtrInput
	Status                  pulumi.StringPtrInput
	StatusReason            pulumi.StringPtrInput
}

func (SigningJobState) ElementType() reflect.Type {
	return reflect.TypeOf((*signingJobState)(nil)).Elem()
}

type signingJobArgs struct {
	Destination             SigningJobDestination `pulumi:"destination"`
	IgnoreSigningJobFailure *bool                 `pulumi:"ignoreSigningJobFailure"`
	ProfileName             string                `pulumi:"profileName"`
	Source                  SigningJobSource      `pulumi:"source"`
}

// The set of arguments for constructing a SigningJob resource.
type SigningJobArgs struct {
	Destination             SigningJobDestinationInput
	IgnoreSigningJobFailure pulumi.BoolPtrInput
	ProfileName             pulumi.StringInput
	Source                  SigningJobSourceInput
}

func (SigningJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*signingJobArgs)(nil)).Elem()
}

type SigningJobInput interface {
	pulumi.Input

	ToSigningJobOutput() SigningJobOutput
	ToSigningJobOutputWithContext(ctx context.Context) SigningJobOutput
}

func (*SigningJob) ElementType() reflect.Type {
	return reflect.TypeOf((**SigningJob)(nil)).Elem()
}

func (i *SigningJob) ToSigningJobOutput() SigningJobOutput {
	return i.ToSigningJobOutputWithContext(context.Background())
}

func (i *SigningJob) ToSigningJobOutputWithContext(ctx context.Context) SigningJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SigningJobOutput)
}

// SigningJobArrayInput is an input type that accepts SigningJobArray and SigningJobArrayOutput values.
// You can construct a concrete instance of `SigningJobArrayInput` via:
//
//	SigningJobArray{ SigningJobArgs{...} }
type SigningJobArrayInput interface {
	pulumi.Input

	ToSigningJobArrayOutput() SigningJobArrayOutput
	ToSigningJobArrayOutputWithContext(context.Context) SigningJobArrayOutput
}

type SigningJobArray []SigningJobInput

func (SigningJobArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SigningJob)(nil)).Elem()
}

func (i SigningJobArray) ToSigningJobArrayOutput() SigningJobArrayOutput {
	return i.ToSigningJobArrayOutputWithContext(context.Background())
}

func (i SigningJobArray) ToSigningJobArrayOutputWithContext(ctx context.Context) SigningJobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SigningJobArrayOutput)
}

// SigningJobMapInput is an input type that accepts SigningJobMap and SigningJobMapOutput values.
// You can construct a concrete instance of `SigningJobMapInput` via:
//
//	SigningJobMap{ "key": SigningJobArgs{...} }
type SigningJobMapInput interface {
	pulumi.Input

	ToSigningJobMapOutput() SigningJobMapOutput
	ToSigningJobMapOutputWithContext(context.Context) SigningJobMapOutput
}

type SigningJobMap map[string]SigningJobInput

func (SigningJobMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SigningJob)(nil)).Elem()
}

func (i SigningJobMap) ToSigningJobMapOutput() SigningJobMapOutput {
	return i.ToSigningJobMapOutputWithContext(context.Background())
}

func (i SigningJobMap) ToSigningJobMapOutputWithContext(ctx context.Context) SigningJobMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SigningJobMapOutput)
}

type SigningJobOutput struct{ *pulumi.OutputState }

func (SigningJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SigningJob)(nil)).Elem()
}

func (o SigningJobOutput) ToSigningJobOutput() SigningJobOutput {
	return o
}

func (o SigningJobOutput) ToSigningJobOutputWithContext(ctx context.Context) SigningJobOutput {
	return o
}

func (o SigningJobOutput) CompletedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *SigningJob) pulumi.StringOutput { return v.CompletedAt }).(pulumi.StringOutput)
}

func (o SigningJobOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *SigningJob) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o SigningJobOutput) Destination() SigningJobDestinationOutput {
	return o.ApplyT(func(v *SigningJob) SigningJobDestinationOutput { return v.Destination }).(SigningJobDestinationOutput)
}

func (o SigningJobOutput) IgnoreSigningJobFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SigningJob) pulumi.BoolPtrOutput { return v.IgnoreSigningJobFailure }).(pulumi.BoolPtrOutput)
}

func (o SigningJobOutput) JobId() pulumi.StringOutput {
	return o.ApplyT(func(v *SigningJob) pulumi.StringOutput { return v.JobId }).(pulumi.StringOutput)
}

func (o SigningJobOutput) JobInvoker() pulumi.StringOutput {
	return o.ApplyT(func(v *SigningJob) pulumi.StringOutput { return v.JobInvoker }).(pulumi.StringOutput)
}

func (o SigningJobOutput) JobOwner() pulumi.StringOutput {
	return o.ApplyT(func(v *SigningJob) pulumi.StringOutput { return v.JobOwner }).(pulumi.StringOutput)
}

func (o SigningJobOutput) PlatformDisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *SigningJob) pulumi.StringOutput { return v.PlatformDisplayName }).(pulumi.StringOutput)
}

func (o SigningJobOutput) PlatformId() pulumi.StringOutput {
	return o.ApplyT(func(v *SigningJob) pulumi.StringOutput { return v.PlatformId }).(pulumi.StringOutput)
}

func (o SigningJobOutput) ProfileName() pulumi.StringOutput {
	return o.ApplyT(func(v *SigningJob) pulumi.StringOutput { return v.ProfileName }).(pulumi.StringOutput)
}

func (o SigningJobOutput) ProfileVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *SigningJob) pulumi.StringOutput { return v.ProfileVersion }).(pulumi.StringOutput)
}

func (o SigningJobOutput) RequestedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *SigningJob) pulumi.StringOutput { return v.RequestedBy }).(pulumi.StringOutput)
}

func (o SigningJobOutput) RevocationRecords() SigningJobRevocationRecordArrayOutput {
	return o.ApplyT(func(v *SigningJob) SigningJobRevocationRecordArrayOutput { return v.RevocationRecords }).(SigningJobRevocationRecordArrayOutput)
}

func (o SigningJobOutput) SignatureExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v *SigningJob) pulumi.StringOutput { return v.SignatureExpiresAt }).(pulumi.StringOutput)
}

func (o SigningJobOutput) SignedObjects() SigningJobSignedObjectArrayOutput {
	return o.ApplyT(func(v *SigningJob) SigningJobSignedObjectArrayOutput { return v.SignedObjects }).(SigningJobSignedObjectArrayOutput)
}

func (o SigningJobOutput) Source() SigningJobSourceOutput {
	return o.ApplyT(func(v *SigningJob) SigningJobSourceOutput { return v.Source }).(SigningJobSourceOutput)
}

func (o SigningJobOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *SigningJob) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o SigningJobOutput) StatusReason() pulumi.StringOutput {
	return o.ApplyT(func(v *SigningJob) pulumi.StringOutput { return v.StatusReason }).(pulumi.StringOutput)
}

type SigningJobArrayOutput struct{ *pulumi.OutputState }

func (SigningJobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SigningJob)(nil)).Elem()
}

func (o SigningJobArrayOutput) ToSigningJobArrayOutput() SigningJobArrayOutput {
	return o
}

func (o SigningJobArrayOutput) ToSigningJobArrayOutputWithContext(ctx context.Context) SigningJobArrayOutput {
	return o
}

func (o SigningJobArrayOutput) Index(i pulumi.IntInput) SigningJobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SigningJob {
		return vs[0].([]*SigningJob)[vs[1].(int)]
	}).(SigningJobOutput)
}

type SigningJobMapOutput struct{ *pulumi.OutputState }

func (SigningJobMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SigningJob)(nil)).Elem()
}

func (o SigningJobMapOutput) ToSigningJobMapOutput() SigningJobMapOutput {
	return o
}

func (o SigningJobMapOutput) ToSigningJobMapOutputWithContext(ctx context.Context) SigningJobMapOutput {
	return o
}

func (o SigningJobMapOutput) MapIndex(k pulumi.StringInput) SigningJobOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SigningJob {
		return vs[0].(map[string]*SigningJob)[vs[1].(string)]
	}).(SigningJobOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SigningJobInput)(nil)).Elem(), &SigningJob{})
	pulumi.RegisterInputType(reflect.TypeOf((*SigningJobArrayInput)(nil)).Elem(), SigningJobArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SigningJobMapInput)(nil)).Elem(), SigningJobMap{})
	pulumi.RegisterOutputType(SigningJobOutput{})
	pulumi.RegisterOutputType(SigningJobArrayOutput{})
	pulumi.RegisterOutputType(SigningJobMapOutput{})
}
