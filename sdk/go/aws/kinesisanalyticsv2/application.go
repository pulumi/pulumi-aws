// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kinesisanalyticsv2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Kinesis Analytics v2 Application.
// This resource can be used to manage both Kinesis Data Analytics for SQL applications and Kinesis Data Analytics for Apache Flink applications.
//
// > **Note:** Kinesis Data Analytics for SQL applications created using this resource cannot currently be viewed in the AWS Console. To manage Kinesis Data Analytics for SQL applications that can also be viewed in the AWS Console, use the `kinesis.AnalyticsApplication`resource.
//
// ## Example Usage
// ### Apache Flink Application
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/kinesisanalyticsv2"
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/s3"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		exampleBucket, err := s3.NewBucket(ctx, "exampleBucket", nil)
// 		if err != nil {
// 			return err
// 		}
// 		exampleBucketObject, err := s3.NewBucketObject(ctx, "exampleBucketObject", &s3.BucketObjectArgs{
// 			Bucket: exampleBucket.Bucket,
// 			Key:    pulumi.String("example-flink-application"),
// 			Source: pulumi.NewFileAsset("flink-app.jar"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = kinesisanalyticsv2.NewApplication(ctx, "exampleApplication", &kinesisanalyticsv2.ApplicationArgs{
// 			RuntimeEnvironment:   pulumi.String("FLINK-1_8"),
// 			ServiceExecutionRole: pulumi.Any(aws_iam_role.Example.Arn),
// 			ApplicationConfiguration: &kinesisanalyticsv2.ApplicationApplicationConfigurationArgs{
// 				ApplicationCodeConfiguration: &kinesisanalyticsv2.ApplicationApplicationConfigurationApplicationCodeConfigurationArgs{
// 					CodeContent: &kinesisanalyticsv2.ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentArgs{
// 						S3ContentLocation: &kinesisanalyticsv2.ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationArgs{
// 							BucketArn: exampleBucket.Arn,
// 							FileKey:   exampleBucketObject.Key,
// 						},
// 					},
// 					CodeContentType: pulumi.String("ZIPFILE"),
// 				},
// 				EnvironmentProperties: &kinesisanalyticsv2.ApplicationApplicationConfigurationEnvironmentPropertiesArgs{
// 					PropertyGroups: kinesisanalyticsv2.ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupArray{
// 						&kinesisanalyticsv2.ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupArgs{
// 							PropertyGroupId: pulumi.String("PROPERTY-GROUP-1"),
// 							PropertyMap: pulumi.StringMap{
// 								"Key1": pulumi.String("Value1"),
// 							},
// 						},
// 						&kinesisanalyticsv2.ApplicationApplicationConfigurationEnvironmentPropertiesPropertyGroupArgs{
// 							PropertyGroupId: pulumi.String("PROPERTY-GROUP-2"),
// 							PropertyMap: pulumi.StringMap{
// 								"KeyA": pulumi.String("ValueA"),
// 								"KeyB": pulumi.String("ValueB"),
// 							},
// 						},
// 					},
// 				},
// 				FlinkApplicationConfiguration: &kinesisanalyticsv2.ApplicationApplicationConfigurationFlinkApplicationConfigurationArgs{
// 					CheckpointConfiguration: &kinesisanalyticsv2.ApplicationApplicationConfigurationFlinkApplicationConfigurationCheckpointConfigurationArgs{
// 						ConfigurationType: pulumi.String("DEFAULT"),
// 					},
// 					MonitoringConfiguration: &kinesisanalyticsv2.ApplicationApplicationConfigurationFlinkApplicationConfigurationMonitoringConfigurationArgs{
// 						ConfigurationType: pulumi.String("CUSTOM"),
// 						LogLevel:          pulumi.String("DEBUG"),
// 						MetricsLevel:      pulumi.String("TASK"),
// 					},
// 					ParallelismConfiguration: &kinesisanalyticsv2.ApplicationApplicationConfigurationFlinkApplicationConfigurationParallelismConfigurationArgs{
// 						AutoScalingEnabled: pulumi.Bool(true),
// 						ConfigurationType:  pulumi.String("CUSTOM"),
// 						Parallelism:        pulumi.Int(10),
// 						ParallelismPerKpu:  pulumi.Int(4),
// 					},
// 				},
// 			},
// 			Tags: pulumi.StringMap{
// 				"Environment": pulumi.String("test"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ### SQL Application
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/cloudwatch"
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/kinesisanalyticsv2"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		exampleLogGroup, err := cloudwatch.NewLogGroup(ctx, "exampleLogGroup", nil)
// 		if err != nil {
// 			return err
// 		}
// 		exampleLogStream, err := cloudwatch.NewLogStream(ctx, "exampleLogStream", &cloudwatch.LogStreamArgs{
// 			LogGroupName: exampleLogGroup.Name,
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = kinesisanalyticsv2.NewApplication(ctx, "exampleApplication", &kinesisanalyticsv2.ApplicationArgs{
// 			RuntimeEnvironment:   pulumi.String("SQL-1.0"),
// 			ServiceExecutionRole: pulumi.Any(aws_iam_role.Example.Arn),
// 			ApplicationConfiguration: &kinesisanalyticsv2.ApplicationApplicationConfigurationArgs{
// 				ApplicationCodeConfiguration: &kinesisanalyticsv2.ApplicationApplicationConfigurationApplicationCodeConfigurationArgs{
// 					CodeContent: &kinesisanalyticsv2.ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentArgs{
// 						TextContent: pulumi.String("SELECT 1;\n"),
// 					},
// 					CodeContentType: pulumi.String("PLAINTEXT"),
// 				},
// 				SqlApplicationConfiguration: &kinesisanalyticsv2.ApplicationApplicationConfigurationSqlApplicationConfigurationArgs{
// 					Input: &kinesisanalyticsv2.ApplicationApplicationConfigurationSqlApplicationConfigurationInputArgs{
// 						NamePrefix: pulumi.String("PREFIX_1"),
// 						InputParallelism: &kinesisanalyticsv2.ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputParallelismArgs{
// 							Count: pulumi.Int(3),
// 						},
// 						InputSchema: &kinesisanalyticsv2.ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaArgs{
// 							RecordColumns: kinesisanalyticsv2.ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnArray{
// 								&kinesisanalyticsv2.ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnArgs{
// 									Name:    pulumi.String("COLUMN_1"),
// 									SqlType: pulumi.String("VARCHAR(8)"),
// 									Mapping: pulumi.String("MAPPING-1"),
// 								},
// 								&kinesisanalyticsv2.ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordColumnArgs{
// 									Name:    pulumi.String("COLUMN_2"),
// 									SqlType: pulumi.String("DOUBLE"),
// 								},
// 							},
// 							RecordEncoding: pulumi.String("UTF-8"),
// 							RecordFormat: &kinesisanalyticsv2.ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatArgs{
// 								RecordFormatType: pulumi.String("CSV"),
// 								MappingParameters: &kinesisanalyticsv2.ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersArgs{
// 									CsvMappingParameters: &kinesisanalyticsv2.ApplicationApplicationConfigurationSqlApplicationConfigurationInputInputSchemaRecordFormatMappingParametersCsvMappingParametersArgs{
// 										RecordColumnDelimiter: pulumi.String(","),
// 										RecordRowDelimiter:    pulumi.String("\n"),
// 									},
// 								},
// 							},
// 						},
// 						KinesisStreamsInput: &kinesisanalyticsv2.ApplicationApplicationConfigurationSqlApplicationConfigurationInputKinesisStreamsInputArgs{
// 							ResourceArn: pulumi.Any(aws_kinesis_stream.Example.Arn),
// 						},
// 					},
// 					Outputs: kinesisanalyticsv2.ApplicationApplicationConfigurationSqlApplicationConfigurationOutputArray{
// 						&kinesisanalyticsv2.ApplicationApplicationConfigurationSqlApplicationConfigurationOutputArgs{
// 							Name: pulumi.String("OUTPUT_1"),
// 							DestinationSchema: &kinesisanalyticsv2.ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaArgs{
// 								RecordFormatType: pulumi.String("JSON"),
// 							},
// 							LambdaOutput: &kinesisanalyticsv2.ApplicationApplicationConfigurationSqlApplicationConfigurationOutputLambdaOutputArgs{
// 								ResourceArn: pulumi.Any(aws_lambda_function.Example.Arn),
// 							},
// 						},
// 						&kinesisanalyticsv2.ApplicationApplicationConfigurationSqlApplicationConfigurationOutputArgs{
// 							Name: pulumi.String("OUTPUT_2"),
// 							DestinationSchema: &kinesisanalyticsv2.ApplicationApplicationConfigurationSqlApplicationConfigurationOutputDestinationSchemaArgs{
// 								RecordFormatType: pulumi.String("CSV"),
// 							},
// 							KinesisFirehoseOutput: &kinesisanalyticsv2.ApplicationApplicationConfigurationSqlApplicationConfigurationOutputKinesisFirehoseOutputArgs{
// 								ResourceArn: pulumi.Any(aws_kinesis_firehose_delivery_stream.Example.Arn),
// 							},
// 						},
// 					},
// 					ReferenceDataSource: &kinesisanalyticsv2.ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceArgs{
// 						TableName: pulumi.String("TABLE-1"),
// 						ReferenceSchema: &kinesisanalyticsv2.ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaArgs{
// 							RecordColumns: kinesisanalyticsv2.ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnArray{
// 								&kinesisanalyticsv2.ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordColumnArgs{
// 									Name:    pulumi.String("COLUMN_1"),
// 									SqlType: pulumi.String("INTEGER"),
// 								},
// 							},
// 							RecordFormat: &kinesisanalyticsv2.ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatArgs{
// 								RecordFormatType: pulumi.String("JSON"),
// 								MappingParameters: &kinesisanalyticsv2.ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersArgs{
// 									JsonMappingParameters: &kinesisanalyticsv2.ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceReferenceSchemaRecordFormatMappingParametersJsonMappingParametersArgs{
// 										RecordRowPath: pulumi.String("$"),
// 									},
// 								},
// 							},
// 						},
// 						S3ReferenceDataSource: &kinesisanalyticsv2.ApplicationApplicationConfigurationSqlApplicationConfigurationReferenceDataSourceS3ReferenceDataSourceArgs{
// 							BucketArn: pulumi.Any(aws_s3_bucket.Example.Arn),
// 							FileKey:   pulumi.String("KEY-1"),
// 						},
// 					},
// 				},
// 			},
// 			CloudwatchLoggingOptions: &kinesisanalyticsv2.ApplicationCloudwatchLoggingOptionsArgs{
// 				LogStreamArn: exampleLogStream.Arn,
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ### VPC Configuration
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/kinesisanalyticsv2"
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/s3"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		exampleBucket, err := s3.NewBucket(ctx, "exampleBucket", nil)
// 		if err != nil {
// 			return err
// 		}
// 		exampleBucketObject, err := s3.NewBucketObject(ctx, "exampleBucketObject", &s3.BucketObjectArgs{
// 			Bucket: exampleBucket.Bucket,
// 			Key:    pulumi.String("example-flink-application"),
// 			Source: pulumi.NewFileAsset("flink-app.jar"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = kinesisanalyticsv2.NewApplication(ctx, "exampleApplication", &kinesisanalyticsv2.ApplicationArgs{
// 			RuntimeEnvironment:   pulumi.String("FLINK-1_8"),
// 			ServiceExecutionRole: pulumi.Any(aws_iam_role.Example.Arn),
// 			ApplicationConfiguration: &kinesisanalyticsv2.ApplicationApplicationConfigurationArgs{
// 				ApplicationCodeConfiguration: &kinesisanalyticsv2.ApplicationApplicationConfigurationApplicationCodeConfigurationArgs{
// 					CodeContent: &kinesisanalyticsv2.ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentArgs{
// 						S3ContentLocation: &kinesisanalyticsv2.ApplicationApplicationConfigurationApplicationCodeConfigurationCodeContentS3ContentLocationArgs{
// 							BucketArn: exampleBucket.Arn,
// 							FileKey:   exampleBucketObject.Key,
// 						},
// 					},
// 					CodeContentType: pulumi.String("ZIPFILE"),
// 				},
// 				VpcConfiguration: &kinesisanalyticsv2.ApplicationApplicationConfigurationVpcConfigurationArgs{
// 					SecurityGroupIds: pulumi.StringArray{
// 						pulumi.Any(aws_security_group.Example[0].Id),
// 						pulumi.Any(aws_security_group.Example[1].Id),
// 					},
// 					SubnetIds: pulumi.StringArray{
// 						pulumi.Any(aws_subnet.Example.Id),
// 					},
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// `aws_kinesisanalyticsv2_application` can be imported by using the application ARN, e.g.
//
// ```sh
//  $ pulumi import aws:kinesisanalyticsv2/application:Application example arn:aws:kinesisanalytics:us-west-2:123456789012:application/example-sql-application
// ```
type Application struct {
	pulumi.CustomResourceState

	// The application's configuration
	ApplicationConfiguration ApplicationApplicationConfigurationOutput `pulumi:"applicationConfiguration"`
	// The ARN of the application.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// A CloudWatch log stream to monitor application configuration errors.
	CloudwatchLoggingOptions ApplicationCloudwatchLoggingOptionsPtrOutput `pulumi:"cloudwatchLoggingOptions"`
	// The current timestamp when the application was created.
	CreateTimestamp pulumi.StringOutput `pulumi:"createTimestamp"`
	// A summary description of the application.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Whether to force stop an unresponsive Flink-based application.
	ForceStop pulumi.BoolPtrOutput `pulumi:"forceStop"`
	// The current timestamp when the application was last updated.
	LastUpdateTimestamp pulumi.StringOutput `pulumi:"lastUpdateTimestamp"`
	// The name of the application.
	Name pulumi.StringOutput `pulumi:"name"`
	// The runtime environment for the application. Valid values: `SQL-1_0`, `FLINK-1_6`, `FLINK-1_8`, `FLINK-1_11`.
	RuntimeEnvironment pulumi.StringOutput `pulumi:"runtimeEnvironment"`
	// The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.
	ServiceExecutionRole pulumi.StringOutput `pulumi:"serviceExecutionRole"`
	// Whether to start or stop the application.
	StartApplication pulumi.BoolPtrOutput `pulumi:"startApplication"`
	// The status of the application.
	Status  pulumi.StringOutput    `pulumi:"status"`
	Tags    pulumi.StringMapOutput `pulumi:"tags"`
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
	// The current application version. Kinesis Data Analytics updates the `versionId` each time the application is updated.
	VersionId pulumi.IntOutput `pulumi:"versionId"`
}

// NewApplication registers a new resource with the given unique name, arguments, and options.
func NewApplication(ctx *pulumi.Context,
	name string, args *ApplicationArgs, opts ...pulumi.ResourceOption) (*Application, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RuntimeEnvironment == nil {
		return nil, errors.New("invalid value for required argument 'RuntimeEnvironment'")
	}
	if args.ServiceExecutionRole == nil {
		return nil, errors.New("invalid value for required argument 'ServiceExecutionRole'")
	}
	var resource Application
	err := ctx.RegisterResource("aws:kinesisanalyticsv2/application:Application", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplication gets an existing Application resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationState, opts ...pulumi.ResourceOption) (*Application, error) {
	var resource Application
	err := ctx.ReadResource("aws:kinesisanalyticsv2/application:Application", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Application resources.
type applicationState struct {
	// The application's configuration
	ApplicationConfiguration *ApplicationApplicationConfiguration `pulumi:"applicationConfiguration"`
	// The ARN of the application.
	Arn *string `pulumi:"arn"`
	// A CloudWatch log stream to monitor application configuration errors.
	CloudwatchLoggingOptions *ApplicationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// The current timestamp when the application was created.
	CreateTimestamp *string `pulumi:"createTimestamp"`
	// A summary description of the application.
	Description *string `pulumi:"description"`
	// Whether to force stop an unresponsive Flink-based application.
	ForceStop *bool `pulumi:"forceStop"`
	// The current timestamp when the application was last updated.
	LastUpdateTimestamp *string `pulumi:"lastUpdateTimestamp"`
	// The name of the application.
	Name *string `pulumi:"name"`
	// The runtime environment for the application. Valid values: `SQL-1_0`, `FLINK-1_6`, `FLINK-1_8`, `FLINK-1_11`.
	RuntimeEnvironment *string `pulumi:"runtimeEnvironment"`
	// The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.
	ServiceExecutionRole *string `pulumi:"serviceExecutionRole"`
	// Whether to start or stop the application.
	StartApplication *bool `pulumi:"startApplication"`
	// The status of the application.
	Status  *string           `pulumi:"status"`
	Tags    map[string]string `pulumi:"tags"`
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The current application version. Kinesis Data Analytics updates the `versionId` each time the application is updated.
	VersionId *int `pulumi:"versionId"`
}

type ApplicationState struct {
	// The application's configuration
	ApplicationConfiguration ApplicationApplicationConfigurationPtrInput
	// The ARN of the application.
	Arn pulumi.StringPtrInput
	// A CloudWatch log stream to monitor application configuration errors.
	CloudwatchLoggingOptions ApplicationCloudwatchLoggingOptionsPtrInput
	// The current timestamp when the application was created.
	CreateTimestamp pulumi.StringPtrInput
	// A summary description of the application.
	Description pulumi.StringPtrInput
	// Whether to force stop an unresponsive Flink-based application.
	ForceStop pulumi.BoolPtrInput
	// The current timestamp when the application was last updated.
	LastUpdateTimestamp pulumi.StringPtrInput
	// The name of the application.
	Name pulumi.StringPtrInput
	// The runtime environment for the application. Valid values: `SQL-1_0`, `FLINK-1_6`, `FLINK-1_8`, `FLINK-1_11`.
	RuntimeEnvironment pulumi.StringPtrInput
	// The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.
	ServiceExecutionRole pulumi.StringPtrInput
	// Whether to start or stop the application.
	StartApplication pulumi.BoolPtrInput
	// The status of the application.
	Status  pulumi.StringPtrInput
	Tags    pulumi.StringMapInput
	TagsAll pulumi.StringMapInput
	// The current application version. Kinesis Data Analytics updates the `versionId` each time the application is updated.
	VersionId pulumi.IntPtrInput
}

func (ApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationState)(nil)).Elem()
}

type applicationArgs struct {
	// The application's configuration
	ApplicationConfiguration *ApplicationApplicationConfiguration `pulumi:"applicationConfiguration"`
	// A CloudWatch log stream to monitor application configuration errors.
	CloudwatchLoggingOptions *ApplicationCloudwatchLoggingOptions `pulumi:"cloudwatchLoggingOptions"`
	// A summary description of the application.
	Description *string `pulumi:"description"`
	// Whether to force stop an unresponsive Flink-based application.
	ForceStop *bool `pulumi:"forceStop"`
	// The name of the application.
	Name *string `pulumi:"name"`
	// The runtime environment for the application. Valid values: `SQL-1_0`, `FLINK-1_6`, `FLINK-1_8`, `FLINK-1_11`.
	RuntimeEnvironment string `pulumi:"runtimeEnvironment"`
	// The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.
	ServiceExecutionRole string `pulumi:"serviceExecutionRole"`
	// Whether to start or stop the application.
	StartApplication *bool             `pulumi:"startApplication"`
	Tags             map[string]string `pulumi:"tags"`
	TagsAll          map[string]string `pulumi:"tagsAll"`
}

// The set of arguments for constructing a Application resource.
type ApplicationArgs struct {
	// The application's configuration
	ApplicationConfiguration ApplicationApplicationConfigurationPtrInput
	// A CloudWatch log stream to monitor application configuration errors.
	CloudwatchLoggingOptions ApplicationCloudwatchLoggingOptionsPtrInput
	// A summary description of the application.
	Description pulumi.StringPtrInput
	// Whether to force stop an unresponsive Flink-based application.
	ForceStop pulumi.BoolPtrInput
	// The name of the application.
	Name pulumi.StringPtrInput
	// The runtime environment for the application. Valid values: `SQL-1_0`, `FLINK-1_6`, `FLINK-1_8`, `FLINK-1_11`.
	RuntimeEnvironment pulumi.StringInput
	// The ARN of the IAM role used by the application to access Kinesis data streams, Kinesis Data Firehose delivery streams, Amazon S3 objects, and other external resources.
	ServiceExecutionRole pulumi.StringInput
	// Whether to start or stop the application.
	StartApplication pulumi.BoolPtrInput
	Tags             pulumi.StringMapInput
	TagsAll          pulumi.StringMapInput
}

func (ApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationArgs)(nil)).Elem()
}

type ApplicationInput interface {
	pulumi.Input

	ToApplicationOutput() ApplicationOutput
	ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput
}

func (*Application) ElementType() reflect.Type {
	return reflect.TypeOf((*Application)(nil))
}

func (i *Application) ToApplicationOutput() ApplicationOutput {
	return i.ToApplicationOutputWithContext(context.Background())
}

func (i *Application) ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationOutput)
}

func (i *Application) ToApplicationPtrOutput() ApplicationPtrOutput {
	return i.ToApplicationPtrOutputWithContext(context.Background())
}

func (i *Application) ToApplicationPtrOutputWithContext(ctx context.Context) ApplicationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPtrOutput)
}

type ApplicationPtrInput interface {
	pulumi.Input

	ToApplicationPtrOutput() ApplicationPtrOutput
	ToApplicationPtrOutputWithContext(ctx context.Context) ApplicationPtrOutput
}

type applicationPtrType ApplicationArgs

func (*applicationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Application)(nil))
}

func (i *applicationPtrType) ToApplicationPtrOutput() ApplicationPtrOutput {
	return i.ToApplicationPtrOutputWithContext(context.Background())
}

func (i *applicationPtrType) ToApplicationPtrOutputWithContext(ctx context.Context) ApplicationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationPtrOutput)
}

// ApplicationArrayInput is an input type that accepts ApplicationArray and ApplicationArrayOutput values.
// You can construct a concrete instance of `ApplicationArrayInput` via:
//
//          ApplicationArray{ ApplicationArgs{...} }
type ApplicationArrayInput interface {
	pulumi.Input

	ToApplicationArrayOutput() ApplicationArrayOutput
	ToApplicationArrayOutputWithContext(context.Context) ApplicationArrayOutput
}

type ApplicationArray []ApplicationInput

func (ApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*Application)(nil))
}

func (i ApplicationArray) ToApplicationArrayOutput() ApplicationArrayOutput {
	return i.ToApplicationArrayOutputWithContext(context.Background())
}

func (i ApplicationArray) ToApplicationArrayOutputWithContext(ctx context.Context) ApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationArrayOutput)
}

// ApplicationMapInput is an input type that accepts ApplicationMap and ApplicationMapOutput values.
// You can construct a concrete instance of `ApplicationMapInput` via:
//
//          ApplicationMap{ "key": ApplicationArgs{...} }
type ApplicationMapInput interface {
	pulumi.Input

	ToApplicationMapOutput() ApplicationMapOutput
	ToApplicationMapOutputWithContext(context.Context) ApplicationMapOutput
}

type ApplicationMap map[string]ApplicationInput

func (ApplicationMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*Application)(nil))
}

func (i ApplicationMap) ToApplicationMapOutput() ApplicationMapOutput {
	return i.ToApplicationMapOutputWithContext(context.Background())
}

func (i ApplicationMap) ToApplicationMapOutputWithContext(ctx context.Context) ApplicationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationMapOutput)
}

type ApplicationOutput struct {
	*pulumi.OutputState
}

func (ApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Application)(nil))
}

func (o ApplicationOutput) ToApplicationOutput() ApplicationOutput {
	return o
}

func (o ApplicationOutput) ToApplicationOutputWithContext(ctx context.Context) ApplicationOutput {
	return o
}

func (o ApplicationOutput) ToApplicationPtrOutput() ApplicationPtrOutput {
	return o.ToApplicationPtrOutputWithContext(context.Background())
}

func (o ApplicationOutput) ToApplicationPtrOutputWithContext(ctx context.Context) ApplicationPtrOutput {
	return o.ApplyT(func(v Application) *Application {
		return &v
	}).(ApplicationPtrOutput)
}

type ApplicationPtrOutput struct {
	*pulumi.OutputState
}

func (ApplicationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Application)(nil))
}

func (o ApplicationPtrOutput) ToApplicationPtrOutput() ApplicationPtrOutput {
	return o
}

func (o ApplicationPtrOutput) ToApplicationPtrOutputWithContext(ctx context.Context) ApplicationPtrOutput {
	return o
}

type ApplicationArrayOutput struct{ *pulumi.OutputState }

func (ApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Application)(nil))
}

func (o ApplicationArrayOutput) ToApplicationArrayOutput() ApplicationArrayOutput {
	return o
}

func (o ApplicationArrayOutput) ToApplicationArrayOutputWithContext(ctx context.Context) ApplicationArrayOutput {
	return o
}

func (o ApplicationArrayOutput) Index(i pulumi.IntInput) ApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Application {
		return vs[0].([]Application)[vs[1].(int)]
	}).(ApplicationOutput)
}

type ApplicationMapOutput struct{ *pulumi.OutputState }

func (ApplicationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]Application)(nil))
}

func (o ApplicationMapOutput) ToApplicationMapOutput() ApplicationMapOutput {
	return o
}

func (o ApplicationMapOutput) ToApplicationMapOutputWithContext(ctx context.Context) ApplicationMapOutput {
	return o
}

func (o ApplicationMapOutput) MapIndex(k pulumi.StringInput) ApplicationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) Application {
		return vs[0].(map[string]Application)[vs[1].(string)]
	}).(ApplicationOutput)
}

func init() {
	pulumi.RegisterOutputType(ApplicationOutput{})
	pulumi.RegisterOutputType(ApplicationPtrOutput{})
	pulumi.RegisterOutputType(ApplicationArrayOutput{})
	pulumi.RegisterOutputType(ApplicationMapOutput{})
}
