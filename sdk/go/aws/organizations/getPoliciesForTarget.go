// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for managing an AWS Organizations Policies For Target.
//
// ## Example Usage
func GetPoliciesForTarget(ctx *pulumi.Context, args *GetPoliciesForTargetArgs, opts ...pulumi.InvokeOption) (*GetPoliciesForTargetResult, error) {
	var rv GetPoliciesForTargetResult
	err := ctx.Invoke("aws:organizations/getPoliciesForTarget:getPoliciesForTarget", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPoliciesForTarget.
type GetPoliciesForTargetArgs struct {
	// Must supply one of the 4 different policy filters for a target (SERVICE_CONTROL_POLICY | TAG_POLICY | BACKUP_POLICY | AISERVICES_OPT_OUT_POLICY)
	Filter string `pulumi:"filter"`
	// The root (string that begins with "r-" followed by 4-32 lowercase letters or digits), account (12 digit string), or Organizational Unit (string starting with "ou-" followed by 4-32 lowercase letters or digits. This string is followed by a second "-" dash and from 8-32 additional lowercase letters or digits.)
	TargetId string `pulumi:"targetId"`
}

// A collection of values returned by getPoliciesForTarget.
type GetPoliciesForTargetResult struct {
	Filter string `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of all the policy ids found.
	Ids      []string `pulumi:"ids"`
	TargetId string   `pulumi:"targetId"`
}

func GetPoliciesForTargetOutput(ctx *pulumi.Context, args GetPoliciesForTargetOutputArgs, opts ...pulumi.InvokeOption) GetPoliciesForTargetResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPoliciesForTargetResult, error) {
			args := v.(GetPoliciesForTargetArgs)
			r, err := GetPoliciesForTarget(ctx, &args, opts...)
			var s GetPoliciesForTargetResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPoliciesForTargetResultOutput)
}

// A collection of arguments for invoking getPoliciesForTarget.
type GetPoliciesForTargetOutputArgs struct {
	// Must supply one of the 4 different policy filters for a target (SERVICE_CONTROL_POLICY | TAG_POLICY | BACKUP_POLICY | AISERVICES_OPT_OUT_POLICY)
	Filter pulumi.StringInput `pulumi:"filter"`
	// The root (string that begins with "r-" followed by 4-32 lowercase letters or digits), account (12 digit string), or Organizational Unit (string starting with "ou-" followed by 4-32 lowercase letters or digits. This string is followed by a second "-" dash and from 8-32 additional lowercase letters or digits.)
	TargetId pulumi.StringInput `pulumi:"targetId"`
}

func (GetPoliciesForTargetOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesForTargetArgs)(nil)).Elem()
}

// A collection of values returned by getPoliciesForTarget.
type GetPoliciesForTargetResultOutput struct{ *pulumi.OutputState }

func (GetPoliciesForTargetResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPoliciesForTargetResult)(nil)).Elem()
}

func (o GetPoliciesForTargetResultOutput) ToGetPoliciesForTargetResultOutput() GetPoliciesForTargetResultOutput {
	return o
}

func (o GetPoliciesForTargetResultOutput) ToGetPoliciesForTargetResultOutputWithContext(ctx context.Context) GetPoliciesForTargetResultOutput {
	return o
}

func (o GetPoliciesForTargetResultOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesForTargetResult) string { return v.Filter }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPoliciesForTargetResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesForTargetResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of all the policy ids found.
func (o GetPoliciesForTargetResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPoliciesForTargetResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetPoliciesForTargetResultOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPoliciesForTargetResult) string { return v.TargetId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPoliciesForTargetResultOutput{})
}
