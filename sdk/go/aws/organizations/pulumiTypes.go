// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type OrganizationAccount struct {
	// ARN of the root
	Arn *string `pulumi:"arn"`
	// Email of the account
	Email *string `pulumi:"email"`
	// Identifier of the root
	Id *string `pulumi:"id"`
	// The name of the policy type
	Name *string `pulumi:"name"`
	// The status of the policy type as it relates to the associated root
	Status *string `pulumi:"status"`
}

// OrganizationAccountInput is an input type that accepts OrganizationAccountArgs and OrganizationAccountOutput values.
// You can construct a concrete instance of `OrganizationAccountInput` via:
//
//	OrganizationAccountArgs{...}
type OrganizationAccountInput interface {
	pulumi.Input

	ToOrganizationAccountOutput() OrganizationAccountOutput
	ToOrganizationAccountOutputWithContext(context.Context) OrganizationAccountOutput
}

type OrganizationAccountArgs struct {
	// ARN of the root
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// Email of the account
	Email pulumi.StringPtrInput `pulumi:"email"`
	// Identifier of the root
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the policy type
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The status of the policy type as it relates to the associated root
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (OrganizationAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationAccount)(nil)).Elem()
}

func (i OrganizationAccountArgs) ToOrganizationAccountOutput() OrganizationAccountOutput {
	return i.ToOrganizationAccountOutputWithContext(context.Background())
}

func (i OrganizationAccountArgs) ToOrganizationAccountOutputWithContext(ctx context.Context) OrganizationAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationAccountOutput)
}

func (i OrganizationAccountArgs) ToOutput(ctx context.Context) pulumix.Output[OrganizationAccount] {
	return pulumix.Output[OrganizationAccount]{
		OutputState: i.ToOrganizationAccountOutputWithContext(ctx).OutputState,
	}
}

// OrganizationAccountArrayInput is an input type that accepts OrganizationAccountArray and OrganizationAccountArrayOutput values.
// You can construct a concrete instance of `OrganizationAccountArrayInput` via:
//
//	OrganizationAccountArray{ OrganizationAccountArgs{...} }
type OrganizationAccountArrayInput interface {
	pulumi.Input

	ToOrganizationAccountArrayOutput() OrganizationAccountArrayOutput
	ToOrganizationAccountArrayOutputWithContext(context.Context) OrganizationAccountArrayOutput
}

type OrganizationAccountArray []OrganizationAccountInput

func (OrganizationAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationAccount)(nil)).Elem()
}

func (i OrganizationAccountArray) ToOrganizationAccountArrayOutput() OrganizationAccountArrayOutput {
	return i.ToOrganizationAccountArrayOutputWithContext(context.Background())
}

func (i OrganizationAccountArray) ToOrganizationAccountArrayOutputWithContext(ctx context.Context) OrganizationAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationAccountArrayOutput)
}

func (i OrganizationAccountArray) ToOutput(ctx context.Context) pulumix.Output[[]OrganizationAccount] {
	return pulumix.Output[[]OrganizationAccount]{
		OutputState: i.ToOrganizationAccountArrayOutputWithContext(ctx).OutputState,
	}
}

type OrganizationAccountOutput struct{ *pulumi.OutputState }

func (OrganizationAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationAccount)(nil)).Elem()
}

func (o OrganizationAccountOutput) ToOrganizationAccountOutput() OrganizationAccountOutput {
	return o
}

func (o OrganizationAccountOutput) ToOrganizationAccountOutputWithContext(ctx context.Context) OrganizationAccountOutput {
	return o
}

func (o OrganizationAccountOutput) ToOutput(ctx context.Context) pulumix.Output[OrganizationAccount] {
	return pulumix.Output[OrganizationAccount]{
		OutputState: o.OutputState,
	}
}

// ARN of the root
func (o OrganizationAccountOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationAccount) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Email of the account
func (o OrganizationAccountOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationAccount) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Identifier of the root
func (o OrganizationAccountOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationAccount) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the policy type
func (o OrganizationAccountOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationAccount) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The status of the policy type as it relates to the associated root
func (o OrganizationAccountOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationAccount) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type OrganizationAccountArrayOutput struct{ *pulumi.OutputState }

func (OrganizationAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationAccount)(nil)).Elem()
}

func (o OrganizationAccountArrayOutput) ToOrganizationAccountArrayOutput() OrganizationAccountArrayOutput {
	return o
}

func (o OrganizationAccountArrayOutput) ToOrganizationAccountArrayOutputWithContext(ctx context.Context) OrganizationAccountArrayOutput {
	return o
}

func (o OrganizationAccountArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OrganizationAccount] {
	return pulumix.Output[[]OrganizationAccount]{
		OutputState: o.OutputState,
	}
}

func (o OrganizationAccountArrayOutput) Index(i pulumi.IntInput) OrganizationAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationAccount {
		return vs[0].([]OrganizationAccount)[vs[1].(int)]
	}).(OrganizationAccountOutput)
}

type OrganizationNonMasterAccount struct {
	// ARN of the root
	Arn *string `pulumi:"arn"`
	// Email of the account
	Email *string `pulumi:"email"`
	// Identifier of the root
	Id *string `pulumi:"id"`
	// The name of the policy type
	Name *string `pulumi:"name"`
	// The status of the policy type as it relates to the associated root
	Status *string `pulumi:"status"`
}

// OrganizationNonMasterAccountInput is an input type that accepts OrganizationNonMasterAccountArgs and OrganizationNonMasterAccountOutput values.
// You can construct a concrete instance of `OrganizationNonMasterAccountInput` via:
//
//	OrganizationNonMasterAccountArgs{...}
type OrganizationNonMasterAccountInput interface {
	pulumi.Input

	ToOrganizationNonMasterAccountOutput() OrganizationNonMasterAccountOutput
	ToOrganizationNonMasterAccountOutputWithContext(context.Context) OrganizationNonMasterAccountOutput
}

type OrganizationNonMasterAccountArgs struct {
	// ARN of the root
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// Email of the account
	Email pulumi.StringPtrInput `pulumi:"email"`
	// Identifier of the root
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the policy type
	Name pulumi.StringPtrInput `pulumi:"name"`
	// The status of the policy type as it relates to the associated root
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (OrganizationNonMasterAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationNonMasterAccount)(nil)).Elem()
}

func (i OrganizationNonMasterAccountArgs) ToOrganizationNonMasterAccountOutput() OrganizationNonMasterAccountOutput {
	return i.ToOrganizationNonMasterAccountOutputWithContext(context.Background())
}

func (i OrganizationNonMasterAccountArgs) ToOrganizationNonMasterAccountOutputWithContext(ctx context.Context) OrganizationNonMasterAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationNonMasterAccountOutput)
}

func (i OrganizationNonMasterAccountArgs) ToOutput(ctx context.Context) pulumix.Output[OrganizationNonMasterAccount] {
	return pulumix.Output[OrganizationNonMasterAccount]{
		OutputState: i.ToOrganizationNonMasterAccountOutputWithContext(ctx).OutputState,
	}
}

// OrganizationNonMasterAccountArrayInput is an input type that accepts OrganizationNonMasterAccountArray and OrganizationNonMasterAccountArrayOutput values.
// You can construct a concrete instance of `OrganizationNonMasterAccountArrayInput` via:
//
//	OrganizationNonMasterAccountArray{ OrganizationNonMasterAccountArgs{...} }
type OrganizationNonMasterAccountArrayInput interface {
	pulumi.Input

	ToOrganizationNonMasterAccountArrayOutput() OrganizationNonMasterAccountArrayOutput
	ToOrganizationNonMasterAccountArrayOutputWithContext(context.Context) OrganizationNonMasterAccountArrayOutput
}

type OrganizationNonMasterAccountArray []OrganizationNonMasterAccountInput

func (OrganizationNonMasterAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationNonMasterAccount)(nil)).Elem()
}

func (i OrganizationNonMasterAccountArray) ToOrganizationNonMasterAccountArrayOutput() OrganizationNonMasterAccountArrayOutput {
	return i.ToOrganizationNonMasterAccountArrayOutputWithContext(context.Background())
}

func (i OrganizationNonMasterAccountArray) ToOrganizationNonMasterAccountArrayOutputWithContext(ctx context.Context) OrganizationNonMasterAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationNonMasterAccountArrayOutput)
}

func (i OrganizationNonMasterAccountArray) ToOutput(ctx context.Context) pulumix.Output[[]OrganizationNonMasterAccount] {
	return pulumix.Output[[]OrganizationNonMasterAccount]{
		OutputState: i.ToOrganizationNonMasterAccountArrayOutputWithContext(ctx).OutputState,
	}
}

type OrganizationNonMasterAccountOutput struct{ *pulumi.OutputState }

func (OrganizationNonMasterAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationNonMasterAccount)(nil)).Elem()
}

func (o OrganizationNonMasterAccountOutput) ToOrganizationNonMasterAccountOutput() OrganizationNonMasterAccountOutput {
	return o
}

func (o OrganizationNonMasterAccountOutput) ToOrganizationNonMasterAccountOutputWithContext(ctx context.Context) OrganizationNonMasterAccountOutput {
	return o
}

func (o OrganizationNonMasterAccountOutput) ToOutput(ctx context.Context) pulumix.Output[OrganizationNonMasterAccount] {
	return pulumix.Output[OrganizationNonMasterAccount]{
		OutputState: o.OutputState,
	}
}

// ARN of the root
func (o OrganizationNonMasterAccountOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationNonMasterAccount) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Email of the account
func (o OrganizationNonMasterAccountOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationNonMasterAccount) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Identifier of the root
func (o OrganizationNonMasterAccountOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationNonMasterAccount) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the policy type
func (o OrganizationNonMasterAccountOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationNonMasterAccount) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The status of the policy type as it relates to the associated root
func (o OrganizationNonMasterAccountOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationNonMasterAccount) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type OrganizationNonMasterAccountArrayOutput struct{ *pulumi.OutputState }

func (OrganizationNonMasterAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationNonMasterAccount)(nil)).Elem()
}

func (o OrganizationNonMasterAccountArrayOutput) ToOrganizationNonMasterAccountArrayOutput() OrganizationNonMasterAccountArrayOutput {
	return o
}

func (o OrganizationNonMasterAccountArrayOutput) ToOrganizationNonMasterAccountArrayOutputWithContext(ctx context.Context) OrganizationNonMasterAccountArrayOutput {
	return o
}

func (o OrganizationNonMasterAccountArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OrganizationNonMasterAccount] {
	return pulumix.Output[[]OrganizationNonMasterAccount]{
		OutputState: o.OutputState,
	}
}

func (o OrganizationNonMasterAccountArrayOutput) Index(i pulumi.IntInput) OrganizationNonMasterAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationNonMasterAccount {
		return vs[0].([]OrganizationNonMasterAccount)[vs[1].(int)]
	}).(OrganizationNonMasterAccountOutput)
}

type OrganizationRoot struct {
	// ARN of the root
	Arn *string `pulumi:"arn"`
	// Identifier of the root
	Id *string `pulumi:"id"`
	// The name of the policy type
	Name *string `pulumi:"name"`
	// List of policy types enabled for this root. All elements have these attributes:
	PolicyTypes []OrganizationRootPolicyType `pulumi:"policyTypes"`
}

// OrganizationRootInput is an input type that accepts OrganizationRootArgs and OrganizationRootOutput values.
// You can construct a concrete instance of `OrganizationRootInput` via:
//
//	OrganizationRootArgs{...}
type OrganizationRootInput interface {
	pulumi.Input

	ToOrganizationRootOutput() OrganizationRootOutput
	ToOrganizationRootOutputWithContext(context.Context) OrganizationRootOutput
}

type OrganizationRootArgs struct {
	// ARN of the root
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// Identifier of the root
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the policy type
	Name pulumi.StringPtrInput `pulumi:"name"`
	// List of policy types enabled for this root. All elements have these attributes:
	PolicyTypes OrganizationRootPolicyTypeArrayInput `pulumi:"policyTypes"`
}

func (OrganizationRootArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationRoot)(nil)).Elem()
}

func (i OrganizationRootArgs) ToOrganizationRootOutput() OrganizationRootOutput {
	return i.ToOrganizationRootOutputWithContext(context.Background())
}

func (i OrganizationRootArgs) ToOrganizationRootOutputWithContext(ctx context.Context) OrganizationRootOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationRootOutput)
}

func (i OrganizationRootArgs) ToOutput(ctx context.Context) pulumix.Output[OrganizationRoot] {
	return pulumix.Output[OrganizationRoot]{
		OutputState: i.ToOrganizationRootOutputWithContext(ctx).OutputState,
	}
}

// OrganizationRootArrayInput is an input type that accepts OrganizationRootArray and OrganizationRootArrayOutput values.
// You can construct a concrete instance of `OrganizationRootArrayInput` via:
//
//	OrganizationRootArray{ OrganizationRootArgs{...} }
type OrganizationRootArrayInput interface {
	pulumi.Input

	ToOrganizationRootArrayOutput() OrganizationRootArrayOutput
	ToOrganizationRootArrayOutputWithContext(context.Context) OrganizationRootArrayOutput
}

type OrganizationRootArray []OrganizationRootInput

func (OrganizationRootArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationRoot)(nil)).Elem()
}

func (i OrganizationRootArray) ToOrganizationRootArrayOutput() OrganizationRootArrayOutput {
	return i.ToOrganizationRootArrayOutputWithContext(context.Background())
}

func (i OrganizationRootArray) ToOrganizationRootArrayOutputWithContext(ctx context.Context) OrganizationRootArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationRootArrayOutput)
}

func (i OrganizationRootArray) ToOutput(ctx context.Context) pulumix.Output[[]OrganizationRoot] {
	return pulumix.Output[[]OrganizationRoot]{
		OutputState: i.ToOrganizationRootArrayOutputWithContext(ctx).OutputState,
	}
}

type OrganizationRootOutput struct{ *pulumi.OutputState }

func (OrganizationRootOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationRoot)(nil)).Elem()
}

func (o OrganizationRootOutput) ToOrganizationRootOutput() OrganizationRootOutput {
	return o
}

func (o OrganizationRootOutput) ToOrganizationRootOutputWithContext(ctx context.Context) OrganizationRootOutput {
	return o
}

func (o OrganizationRootOutput) ToOutput(ctx context.Context) pulumix.Output[OrganizationRoot] {
	return pulumix.Output[OrganizationRoot]{
		OutputState: o.OutputState,
	}
}

// ARN of the root
func (o OrganizationRootOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationRoot) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Identifier of the root
func (o OrganizationRootOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationRoot) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the policy type
func (o OrganizationRootOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationRoot) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of policy types enabled for this root. All elements have these attributes:
func (o OrganizationRootOutput) PolicyTypes() OrganizationRootPolicyTypeArrayOutput {
	return o.ApplyT(func(v OrganizationRoot) []OrganizationRootPolicyType { return v.PolicyTypes }).(OrganizationRootPolicyTypeArrayOutput)
}

type OrganizationRootArrayOutput struct{ *pulumi.OutputState }

func (OrganizationRootArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationRoot)(nil)).Elem()
}

func (o OrganizationRootArrayOutput) ToOrganizationRootArrayOutput() OrganizationRootArrayOutput {
	return o
}

func (o OrganizationRootArrayOutput) ToOrganizationRootArrayOutputWithContext(ctx context.Context) OrganizationRootArrayOutput {
	return o
}

func (o OrganizationRootArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OrganizationRoot] {
	return pulumix.Output[[]OrganizationRoot]{
		OutputState: o.OutputState,
	}
}

func (o OrganizationRootArrayOutput) Index(i pulumi.IntInput) OrganizationRootOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationRoot {
		return vs[0].([]OrganizationRoot)[vs[1].(int)]
	}).(OrganizationRootOutput)
}

type OrganizationRootPolicyType struct {
	// The status of the policy type as it relates to the associated root
	Status *string `pulumi:"status"`
	Type   *string `pulumi:"type"`
}

// OrganizationRootPolicyTypeInput is an input type that accepts OrganizationRootPolicyTypeArgs and OrganizationRootPolicyTypeOutput values.
// You can construct a concrete instance of `OrganizationRootPolicyTypeInput` via:
//
//	OrganizationRootPolicyTypeArgs{...}
type OrganizationRootPolicyTypeInput interface {
	pulumi.Input

	ToOrganizationRootPolicyTypeOutput() OrganizationRootPolicyTypeOutput
	ToOrganizationRootPolicyTypeOutputWithContext(context.Context) OrganizationRootPolicyTypeOutput
}

type OrganizationRootPolicyTypeArgs struct {
	// The status of the policy type as it relates to the associated root
	Status pulumi.StringPtrInput `pulumi:"status"`
	Type   pulumi.StringPtrInput `pulumi:"type"`
}

func (OrganizationRootPolicyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationRootPolicyType)(nil)).Elem()
}

func (i OrganizationRootPolicyTypeArgs) ToOrganizationRootPolicyTypeOutput() OrganizationRootPolicyTypeOutput {
	return i.ToOrganizationRootPolicyTypeOutputWithContext(context.Background())
}

func (i OrganizationRootPolicyTypeArgs) ToOrganizationRootPolicyTypeOutputWithContext(ctx context.Context) OrganizationRootPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationRootPolicyTypeOutput)
}

func (i OrganizationRootPolicyTypeArgs) ToOutput(ctx context.Context) pulumix.Output[OrganizationRootPolicyType] {
	return pulumix.Output[OrganizationRootPolicyType]{
		OutputState: i.ToOrganizationRootPolicyTypeOutputWithContext(ctx).OutputState,
	}
}

// OrganizationRootPolicyTypeArrayInput is an input type that accepts OrganizationRootPolicyTypeArray and OrganizationRootPolicyTypeArrayOutput values.
// You can construct a concrete instance of `OrganizationRootPolicyTypeArrayInput` via:
//
//	OrganizationRootPolicyTypeArray{ OrganizationRootPolicyTypeArgs{...} }
type OrganizationRootPolicyTypeArrayInput interface {
	pulumi.Input

	ToOrganizationRootPolicyTypeArrayOutput() OrganizationRootPolicyTypeArrayOutput
	ToOrganizationRootPolicyTypeArrayOutputWithContext(context.Context) OrganizationRootPolicyTypeArrayOutput
}

type OrganizationRootPolicyTypeArray []OrganizationRootPolicyTypeInput

func (OrganizationRootPolicyTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationRootPolicyType)(nil)).Elem()
}

func (i OrganizationRootPolicyTypeArray) ToOrganizationRootPolicyTypeArrayOutput() OrganizationRootPolicyTypeArrayOutput {
	return i.ToOrganizationRootPolicyTypeArrayOutputWithContext(context.Background())
}

func (i OrganizationRootPolicyTypeArray) ToOrganizationRootPolicyTypeArrayOutputWithContext(ctx context.Context) OrganizationRootPolicyTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationRootPolicyTypeArrayOutput)
}

func (i OrganizationRootPolicyTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]OrganizationRootPolicyType] {
	return pulumix.Output[[]OrganizationRootPolicyType]{
		OutputState: i.ToOrganizationRootPolicyTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type OrganizationRootPolicyTypeOutput struct{ *pulumi.OutputState }

func (OrganizationRootPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationRootPolicyType)(nil)).Elem()
}

func (o OrganizationRootPolicyTypeOutput) ToOrganizationRootPolicyTypeOutput() OrganizationRootPolicyTypeOutput {
	return o
}

func (o OrganizationRootPolicyTypeOutput) ToOrganizationRootPolicyTypeOutputWithContext(ctx context.Context) OrganizationRootPolicyTypeOutput {
	return o
}

func (o OrganizationRootPolicyTypeOutput) ToOutput(ctx context.Context) pulumix.Output[OrganizationRootPolicyType] {
	return pulumix.Output[OrganizationRootPolicyType]{
		OutputState: o.OutputState,
	}
}

// The status of the policy type as it relates to the associated root
func (o OrganizationRootPolicyTypeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationRootPolicyType) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o OrganizationRootPolicyTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationRootPolicyType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type OrganizationRootPolicyTypeArrayOutput struct{ *pulumi.OutputState }

func (OrganizationRootPolicyTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationRootPolicyType)(nil)).Elem()
}

func (o OrganizationRootPolicyTypeArrayOutput) ToOrganizationRootPolicyTypeArrayOutput() OrganizationRootPolicyTypeArrayOutput {
	return o
}

func (o OrganizationRootPolicyTypeArrayOutput) ToOrganizationRootPolicyTypeArrayOutputWithContext(ctx context.Context) OrganizationRootPolicyTypeArrayOutput {
	return o
}

func (o OrganizationRootPolicyTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OrganizationRootPolicyType] {
	return pulumix.Output[[]OrganizationRootPolicyType]{
		OutputState: o.OutputState,
	}
}

func (o OrganizationRootPolicyTypeArrayOutput) Index(i pulumi.IntInput) OrganizationRootPolicyTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationRootPolicyType {
		return vs[0].([]OrganizationRootPolicyType)[vs[1].(int)]
	}).(OrganizationRootPolicyTypeOutput)
}

type OrganizationalUnitAccount struct {
	// ARN of the organizational unit
	Arn *string `pulumi:"arn"`
	// Email of the account
	Email *string `pulumi:"email"`
	// Identifier of the organization unit
	Id *string `pulumi:"id"`
	// The name for the organizational unit
	Name *string `pulumi:"name"`
}

// OrganizationalUnitAccountInput is an input type that accepts OrganizationalUnitAccountArgs and OrganizationalUnitAccountOutput values.
// You can construct a concrete instance of `OrganizationalUnitAccountInput` via:
//
//	OrganizationalUnitAccountArgs{...}
type OrganizationalUnitAccountInput interface {
	pulumi.Input

	ToOrganizationalUnitAccountOutput() OrganizationalUnitAccountOutput
	ToOrganizationalUnitAccountOutputWithContext(context.Context) OrganizationalUnitAccountOutput
}

type OrganizationalUnitAccountArgs struct {
	// ARN of the organizational unit
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// Email of the account
	Email pulumi.StringPtrInput `pulumi:"email"`
	// Identifier of the organization unit
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name for the organizational unit
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (OrganizationalUnitAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationalUnitAccount)(nil)).Elem()
}

func (i OrganizationalUnitAccountArgs) ToOrganizationalUnitAccountOutput() OrganizationalUnitAccountOutput {
	return i.ToOrganizationalUnitAccountOutputWithContext(context.Background())
}

func (i OrganizationalUnitAccountArgs) ToOrganizationalUnitAccountOutputWithContext(ctx context.Context) OrganizationalUnitAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationalUnitAccountOutput)
}

func (i OrganizationalUnitAccountArgs) ToOutput(ctx context.Context) pulumix.Output[OrganizationalUnitAccount] {
	return pulumix.Output[OrganizationalUnitAccount]{
		OutputState: i.ToOrganizationalUnitAccountOutputWithContext(ctx).OutputState,
	}
}

// OrganizationalUnitAccountArrayInput is an input type that accepts OrganizationalUnitAccountArray and OrganizationalUnitAccountArrayOutput values.
// You can construct a concrete instance of `OrganizationalUnitAccountArrayInput` via:
//
//	OrganizationalUnitAccountArray{ OrganizationalUnitAccountArgs{...} }
type OrganizationalUnitAccountArrayInput interface {
	pulumi.Input

	ToOrganizationalUnitAccountArrayOutput() OrganizationalUnitAccountArrayOutput
	ToOrganizationalUnitAccountArrayOutputWithContext(context.Context) OrganizationalUnitAccountArrayOutput
}

type OrganizationalUnitAccountArray []OrganizationalUnitAccountInput

func (OrganizationalUnitAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationalUnitAccount)(nil)).Elem()
}

func (i OrganizationalUnitAccountArray) ToOrganizationalUnitAccountArrayOutput() OrganizationalUnitAccountArrayOutput {
	return i.ToOrganizationalUnitAccountArrayOutputWithContext(context.Background())
}

func (i OrganizationalUnitAccountArray) ToOrganizationalUnitAccountArrayOutputWithContext(ctx context.Context) OrganizationalUnitAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationalUnitAccountArrayOutput)
}

func (i OrganizationalUnitAccountArray) ToOutput(ctx context.Context) pulumix.Output[[]OrganizationalUnitAccount] {
	return pulumix.Output[[]OrganizationalUnitAccount]{
		OutputState: i.ToOrganizationalUnitAccountArrayOutputWithContext(ctx).OutputState,
	}
}

type OrganizationalUnitAccountOutput struct{ *pulumi.OutputState }

func (OrganizationalUnitAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationalUnitAccount)(nil)).Elem()
}

func (o OrganizationalUnitAccountOutput) ToOrganizationalUnitAccountOutput() OrganizationalUnitAccountOutput {
	return o
}

func (o OrganizationalUnitAccountOutput) ToOrganizationalUnitAccountOutputWithContext(ctx context.Context) OrganizationalUnitAccountOutput {
	return o
}

func (o OrganizationalUnitAccountOutput) ToOutput(ctx context.Context) pulumix.Output[OrganizationalUnitAccount] {
	return pulumix.Output[OrganizationalUnitAccount]{
		OutputState: o.OutputState,
	}
}

// ARN of the organizational unit
func (o OrganizationalUnitAccountOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationalUnitAccount) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Email of the account
func (o OrganizationalUnitAccountOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationalUnitAccount) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Identifier of the organization unit
func (o OrganizationalUnitAccountOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationalUnitAccount) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name for the organizational unit
func (o OrganizationalUnitAccountOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationalUnitAccount) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type OrganizationalUnitAccountArrayOutput struct{ *pulumi.OutputState }

func (OrganizationalUnitAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationalUnitAccount)(nil)).Elem()
}

func (o OrganizationalUnitAccountArrayOutput) ToOrganizationalUnitAccountArrayOutput() OrganizationalUnitAccountArrayOutput {
	return o
}

func (o OrganizationalUnitAccountArrayOutput) ToOrganizationalUnitAccountArrayOutputWithContext(ctx context.Context) OrganizationalUnitAccountArrayOutput {
	return o
}

func (o OrganizationalUnitAccountArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OrganizationalUnitAccount] {
	return pulumix.Output[[]OrganizationalUnitAccount]{
		OutputState: o.OutputState,
	}
}

func (o OrganizationalUnitAccountArrayOutput) Index(i pulumi.IntInput) OrganizationalUnitAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationalUnitAccount {
		return vs[0].([]OrganizationalUnitAccount)[vs[1].(int)]
	}).(OrganizationalUnitAccountOutput)
}

type GetDelegatedAdministratorsDelegatedAdministrator struct {
	// The ARN of the delegated administrator's account.
	Arn string `pulumi:"arn"`
	// The date when the account was made a delegated administrator.
	DelegationEnabledDate string `pulumi:"delegationEnabledDate"`
	// The email address that is associated with the delegated administrator's AWS account.
	Email string `pulumi:"email"`
	// The unique identifier (ID) of the delegated administrator's account.
	Id string `pulumi:"id"`
	// The method by which the delegated administrator's account joined the organization.
	JoinedMethod string `pulumi:"joinedMethod"`
	// The date when the delegated administrator's account became a part of the organization.
	JoinedTimestamp string `pulumi:"joinedTimestamp"`
	// The friendly name of the delegated administrator's account.
	Name string `pulumi:"name"`
	// The status of the delegated administrator's account in the organization.
	Status string `pulumi:"status"`
}

// GetDelegatedAdministratorsDelegatedAdministratorInput is an input type that accepts GetDelegatedAdministratorsDelegatedAdministratorArgs and GetDelegatedAdministratorsDelegatedAdministratorOutput values.
// You can construct a concrete instance of `GetDelegatedAdministratorsDelegatedAdministratorInput` via:
//
//	GetDelegatedAdministratorsDelegatedAdministratorArgs{...}
type GetDelegatedAdministratorsDelegatedAdministratorInput interface {
	pulumi.Input

	ToGetDelegatedAdministratorsDelegatedAdministratorOutput() GetDelegatedAdministratorsDelegatedAdministratorOutput
	ToGetDelegatedAdministratorsDelegatedAdministratorOutputWithContext(context.Context) GetDelegatedAdministratorsDelegatedAdministratorOutput
}

type GetDelegatedAdministratorsDelegatedAdministratorArgs struct {
	// The ARN of the delegated administrator's account.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The date when the account was made a delegated administrator.
	DelegationEnabledDate pulumi.StringInput `pulumi:"delegationEnabledDate"`
	// The email address that is associated with the delegated administrator's AWS account.
	Email pulumi.StringInput `pulumi:"email"`
	// The unique identifier (ID) of the delegated administrator's account.
	Id pulumi.StringInput `pulumi:"id"`
	// The method by which the delegated administrator's account joined the organization.
	JoinedMethod pulumi.StringInput `pulumi:"joinedMethod"`
	// The date when the delegated administrator's account became a part of the organization.
	JoinedTimestamp pulumi.StringInput `pulumi:"joinedTimestamp"`
	// The friendly name of the delegated administrator's account.
	Name pulumi.StringInput `pulumi:"name"`
	// The status of the delegated administrator's account in the organization.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetDelegatedAdministratorsDelegatedAdministratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDelegatedAdministratorsDelegatedAdministrator)(nil)).Elem()
}

func (i GetDelegatedAdministratorsDelegatedAdministratorArgs) ToGetDelegatedAdministratorsDelegatedAdministratorOutput() GetDelegatedAdministratorsDelegatedAdministratorOutput {
	return i.ToGetDelegatedAdministratorsDelegatedAdministratorOutputWithContext(context.Background())
}

func (i GetDelegatedAdministratorsDelegatedAdministratorArgs) ToGetDelegatedAdministratorsDelegatedAdministratorOutputWithContext(ctx context.Context) GetDelegatedAdministratorsDelegatedAdministratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDelegatedAdministratorsDelegatedAdministratorOutput)
}

func (i GetDelegatedAdministratorsDelegatedAdministratorArgs) ToOutput(ctx context.Context) pulumix.Output[GetDelegatedAdministratorsDelegatedAdministrator] {
	return pulumix.Output[GetDelegatedAdministratorsDelegatedAdministrator]{
		OutputState: i.ToGetDelegatedAdministratorsDelegatedAdministratorOutputWithContext(ctx).OutputState,
	}
}

// GetDelegatedAdministratorsDelegatedAdministratorArrayInput is an input type that accepts GetDelegatedAdministratorsDelegatedAdministratorArray and GetDelegatedAdministratorsDelegatedAdministratorArrayOutput values.
// You can construct a concrete instance of `GetDelegatedAdministratorsDelegatedAdministratorArrayInput` via:
//
//	GetDelegatedAdministratorsDelegatedAdministratorArray{ GetDelegatedAdministratorsDelegatedAdministratorArgs{...} }
type GetDelegatedAdministratorsDelegatedAdministratorArrayInput interface {
	pulumi.Input

	ToGetDelegatedAdministratorsDelegatedAdministratorArrayOutput() GetDelegatedAdministratorsDelegatedAdministratorArrayOutput
	ToGetDelegatedAdministratorsDelegatedAdministratorArrayOutputWithContext(context.Context) GetDelegatedAdministratorsDelegatedAdministratorArrayOutput
}

type GetDelegatedAdministratorsDelegatedAdministratorArray []GetDelegatedAdministratorsDelegatedAdministratorInput

func (GetDelegatedAdministratorsDelegatedAdministratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDelegatedAdministratorsDelegatedAdministrator)(nil)).Elem()
}

func (i GetDelegatedAdministratorsDelegatedAdministratorArray) ToGetDelegatedAdministratorsDelegatedAdministratorArrayOutput() GetDelegatedAdministratorsDelegatedAdministratorArrayOutput {
	return i.ToGetDelegatedAdministratorsDelegatedAdministratorArrayOutputWithContext(context.Background())
}

func (i GetDelegatedAdministratorsDelegatedAdministratorArray) ToGetDelegatedAdministratorsDelegatedAdministratorArrayOutputWithContext(ctx context.Context) GetDelegatedAdministratorsDelegatedAdministratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDelegatedAdministratorsDelegatedAdministratorArrayOutput)
}

func (i GetDelegatedAdministratorsDelegatedAdministratorArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDelegatedAdministratorsDelegatedAdministrator] {
	return pulumix.Output[[]GetDelegatedAdministratorsDelegatedAdministrator]{
		OutputState: i.ToGetDelegatedAdministratorsDelegatedAdministratorArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDelegatedAdministratorsDelegatedAdministratorOutput struct{ *pulumi.OutputState }

func (GetDelegatedAdministratorsDelegatedAdministratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDelegatedAdministratorsDelegatedAdministrator)(nil)).Elem()
}

func (o GetDelegatedAdministratorsDelegatedAdministratorOutput) ToGetDelegatedAdministratorsDelegatedAdministratorOutput() GetDelegatedAdministratorsDelegatedAdministratorOutput {
	return o
}

func (o GetDelegatedAdministratorsDelegatedAdministratorOutput) ToGetDelegatedAdministratorsDelegatedAdministratorOutputWithContext(ctx context.Context) GetDelegatedAdministratorsDelegatedAdministratorOutput {
	return o
}

func (o GetDelegatedAdministratorsDelegatedAdministratorOutput) ToOutput(ctx context.Context) pulumix.Output[GetDelegatedAdministratorsDelegatedAdministrator] {
	return pulumix.Output[GetDelegatedAdministratorsDelegatedAdministrator]{
		OutputState: o.OutputState,
	}
}

// The ARN of the delegated administrator's account.
func (o GetDelegatedAdministratorsDelegatedAdministratorOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedAdministratorsDelegatedAdministrator) string { return v.Arn }).(pulumi.StringOutput)
}

// The date when the account was made a delegated administrator.
func (o GetDelegatedAdministratorsDelegatedAdministratorOutput) DelegationEnabledDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedAdministratorsDelegatedAdministrator) string { return v.DelegationEnabledDate }).(pulumi.StringOutput)
}

// The email address that is associated with the delegated administrator's AWS account.
func (o GetDelegatedAdministratorsDelegatedAdministratorOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedAdministratorsDelegatedAdministrator) string { return v.Email }).(pulumi.StringOutput)
}

// The unique identifier (ID) of the delegated administrator's account.
func (o GetDelegatedAdministratorsDelegatedAdministratorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedAdministratorsDelegatedAdministrator) string { return v.Id }).(pulumi.StringOutput)
}

// The method by which the delegated administrator's account joined the organization.
func (o GetDelegatedAdministratorsDelegatedAdministratorOutput) JoinedMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedAdministratorsDelegatedAdministrator) string { return v.JoinedMethod }).(pulumi.StringOutput)
}

// The date when the delegated administrator's account became a part of the organization.
func (o GetDelegatedAdministratorsDelegatedAdministratorOutput) JoinedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedAdministratorsDelegatedAdministrator) string { return v.JoinedTimestamp }).(pulumi.StringOutput)
}

// The friendly name of the delegated administrator's account.
func (o GetDelegatedAdministratorsDelegatedAdministratorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedAdministratorsDelegatedAdministrator) string { return v.Name }).(pulumi.StringOutput)
}

// The status of the delegated administrator's account in the organization.
func (o GetDelegatedAdministratorsDelegatedAdministratorOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedAdministratorsDelegatedAdministrator) string { return v.Status }).(pulumi.StringOutput)
}

type GetDelegatedAdministratorsDelegatedAdministratorArrayOutput struct{ *pulumi.OutputState }

func (GetDelegatedAdministratorsDelegatedAdministratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDelegatedAdministratorsDelegatedAdministrator)(nil)).Elem()
}

func (o GetDelegatedAdministratorsDelegatedAdministratorArrayOutput) ToGetDelegatedAdministratorsDelegatedAdministratorArrayOutput() GetDelegatedAdministratorsDelegatedAdministratorArrayOutput {
	return o
}

func (o GetDelegatedAdministratorsDelegatedAdministratorArrayOutput) ToGetDelegatedAdministratorsDelegatedAdministratorArrayOutputWithContext(ctx context.Context) GetDelegatedAdministratorsDelegatedAdministratorArrayOutput {
	return o
}

func (o GetDelegatedAdministratorsDelegatedAdministratorArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDelegatedAdministratorsDelegatedAdministrator] {
	return pulumix.Output[[]GetDelegatedAdministratorsDelegatedAdministrator]{
		OutputState: o.OutputState,
	}
}

func (o GetDelegatedAdministratorsDelegatedAdministratorArrayOutput) Index(i pulumi.IntInput) GetDelegatedAdministratorsDelegatedAdministratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDelegatedAdministratorsDelegatedAdministrator {
		return vs[0].([]GetDelegatedAdministratorsDelegatedAdministrator)[vs[1].(int)]
	}).(GetDelegatedAdministratorsDelegatedAdministratorOutput)
}

type GetDelegatedServicesDelegatedService struct {
	// The date that the account became a delegated administrator for this service.
	DelegationEnabledDate string `pulumi:"delegationEnabledDate"`
	// The name of an AWS service that can request an operation for the specified service.
	ServicePrincipal string `pulumi:"servicePrincipal"`
}

// GetDelegatedServicesDelegatedServiceInput is an input type that accepts GetDelegatedServicesDelegatedServiceArgs and GetDelegatedServicesDelegatedServiceOutput values.
// You can construct a concrete instance of `GetDelegatedServicesDelegatedServiceInput` via:
//
//	GetDelegatedServicesDelegatedServiceArgs{...}
type GetDelegatedServicesDelegatedServiceInput interface {
	pulumi.Input

	ToGetDelegatedServicesDelegatedServiceOutput() GetDelegatedServicesDelegatedServiceOutput
	ToGetDelegatedServicesDelegatedServiceOutputWithContext(context.Context) GetDelegatedServicesDelegatedServiceOutput
}

type GetDelegatedServicesDelegatedServiceArgs struct {
	// The date that the account became a delegated administrator for this service.
	DelegationEnabledDate pulumi.StringInput `pulumi:"delegationEnabledDate"`
	// The name of an AWS service that can request an operation for the specified service.
	ServicePrincipal pulumi.StringInput `pulumi:"servicePrincipal"`
}

func (GetDelegatedServicesDelegatedServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDelegatedServicesDelegatedService)(nil)).Elem()
}

func (i GetDelegatedServicesDelegatedServiceArgs) ToGetDelegatedServicesDelegatedServiceOutput() GetDelegatedServicesDelegatedServiceOutput {
	return i.ToGetDelegatedServicesDelegatedServiceOutputWithContext(context.Background())
}

func (i GetDelegatedServicesDelegatedServiceArgs) ToGetDelegatedServicesDelegatedServiceOutputWithContext(ctx context.Context) GetDelegatedServicesDelegatedServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDelegatedServicesDelegatedServiceOutput)
}

func (i GetDelegatedServicesDelegatedServiceArgs) ToOutput(ctx context.Context) pulumix.Output[GetDelegatedServicesDelegatedService] {
	return pulumix.Output[GetDelegatedServicesDelegatedService]{
		OutputState: i.ToGetDelegatedServicesDelegatedServiceOutputWithContext(ctx).OutputState,
	}
}

// GetDelegatedServicesDelegatedServiceArrayInput is an input type that accepts GetDelegatedServicesDelegatedServiceArray and GetDelegatedServicesDelegatedServiceArrayOutput values.
// You can construct a concrete instance of `GetDelegatedServicesDelegatedServiceArrayInput` via:
//
//	GetDelegatedServicesDelegatedServiceArray{ GetDelegatedServicesDelegatedServiceArgs{...} }
type GetDelegatedServicesDelegatedServiceArrayInput interface {
	pulumi.Input

	ToGetDelegatedServicesDelegatedServiceArrayOutput() GetDelegatedServicesDelegatedServiceArrayOutput
	ToGetDelegatedServicesDelegatedServiceArrayOutputWithContext(context.Context) GetDelegatedServicesDelegatedServiceArrayOutput
}

type GetDelegatedServicesDelegatedServiceArray []GetDelegatedServicesDelegatedServiceInput

func (GetDelegatedServicesDelegatedServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDelegatedServicesDelegatedService)(nil)).Elem()
}

func (i GetDelegatedServicesDelegatedServiceArray) ToGetDelegatedServicesDelegatedServiceArrayOutput() GetDelegatedServicesDelegatedServiceArrayOutput {
	return i.ToGetDelegatedServicesDelegatedServiceArrayOutputWithContext(context.Background())
}

func (i GetDelegatedServicesDelegatedServiceArray) ToGetDelegatedServicesDelegatedServiceArrayOutputWithContext(ctx context.Context) GetDelegatedServicesDelegatedServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDelegatedServicesDelegatedServiceArrayOutput)
}

func (i GetDelegatedServicesDelegatedServiceArray) ToOutput(ctx context.Context) pulumix.Output[[]GetDelegatedServicesDelegatedService] {
	return pulumix.Output[[]GetDelegatedServicesDelegatedService]{
		OutputState: i.ToGetDelegatedServicesDelegatedServiceArrayOutputWithContext(ctx).OutputState,
	}
}

type GetDelegatedServicesDelegatedServiceOutput struct{ *pulumi.OutputState }

func (GetDelegatedServicesDelegatedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDelegatedServicesDelegatedService)(nil)).Elem()
}

func (o GetDelegatedServicesDelegatedServiceOutput) ToGetDelegatedServicesDelegatedServiceOutput() GetDelegatedServicesDelegatedServiceOutput {
	return o
}

func (o GetDelegatedServicesDelegatedServiceOutput) ToGetDelegatedServicesDelegatedServiceOutputWithContext(ctx context.Context) GetDelegatedServicesDelegatedServiceOutput {
	return o
}

func (o GetDelegatedServicesDelegatedServiceOutput) ToOutput(ctx context.Context) pulumix.Output[GetDelegatedServicesDelegatedService] {
	return pulumix.Output[GetDelegatedServicesDelegatedService]{
		OutputState: o.OutputState,
	}
}

// The date that the account became a delegated administrator for this service.
func (o GetDelegatedServicesDelegatedServiceOutput) DelegationEnabledDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedServicesDelegatedService) string { return v.DelegationEnabledDate }).(pulumi.StringOutput)
}

// The name of an AWS service that can request an operation for the specified service.
func (o GetDelegatedServicesDelegatedServiceOutput) ServicePrincipal() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedServicesDelegatedService) string { return v.ServicePrincipal }).(pulumi.StringOutput)
}

type GetDelegatedServicesDelegatedServiceArrayOutput struct{ *pulumi.OutputState }

func (GetDelegatedServicesDelegatedServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDelegatedServicesDelegatedService)(nil)).Elem()
}

func (o GetDelegatedServicesDelegatedServiceArrayOutput) ToGetDelegatedServicesDelegatedServiceArrayOutput() GetDelegatedServicesDelegatedServiceArrayOutput {
	return o
}

func (o GetDelegatedServicesDelegatedServiceArrayOutput) ToGetDelegatedServicesDelegatedServiceArrayOutputWithContext(ctx context.Context) GetDelegatedServicesDelegatedServiceArrayOutput {
	return o
}

func (o GetDelegatedServicesDelegatedServiceArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetDelegatedServicesDelegatedService] {
	return pulumix.Output[[]GetDelegatedServicesDelegatedService]{
		OutputState: o.OutputState,
	}
}

func (o GetDelegatedServicesDelegatedServiceArrayOutput) Index(i pulumi.IntInput) GetDelegatedServicesDelegatedServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDelegatedServicesDelegatedService {
		return vs[0].([]GetDelegatedServicesDelegatedService)[vs[1].(int)]
	}).(GetDelegatedServicesDelegatedServiceOutput)
}

type GetOrganizationAccount struct {
	// ARN of the root
	Arn string `pulumi:"arn"`
	// Email of the account
	Email string `pulumi:"email"`
	// Identifier of the root
	Id string `pulumi:"id"`
	// The name of the policy type
	Name string `pulumi:"name"`
	// The status of the policy type as it relates to the associated root
	Status string `pulumi:"status"`
}

// GetOrganizationAccountInput is an input type that accepts GetOrganizationAccountArgs and GetOrganizationAccountOutput values.
// You can construct a concrete instance of `GetOrganizationAccountInput` via:
//
//	GetOrganizationAccountArgs{...}
type GetOrganizationAccountInput interface {
	pulumi.Input

	ToGetOrganizationAccountOutput() GetOrganizationAccountOutput
	ToGetOrganizationAccountOutputWithContext(context.Context) GetOrganizationAccountOutput
}

type GetOrganizationAccountArgs struct {
	// ARN of the root
	Arn pulumi.StringInput `pulumi:"arn"`
	// Email of the account
	Email pulumi.StringInput `pulumi:"email"`
	// Identifier of the root
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the policy type
	Name pulumi.StringInput `pulumi:"name"`
	// The status of the policy type as it relates to the associated root
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetOrganizationAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationAccount)(nil)).Elem()
}

func (i GetOrganizationAccountArgs) ToGetOrganizationAccountOutput() GetOrganizationAccountOutput {
	return i.ToGetOrganizationAccountOutputWithContext(context.Background())
}

func (i GetOrganizationAccountArgs) ToGetOrganizationAccountOutputWithContext(ctx context.Context) GetOrganizationAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationAccountOutput)
}

func (i GetOrganizationAccountArgs) ToOutput(ctx context.Context) pulumix.Output[GetOrganizationAccount] {
	return pulumix.Output[GetOrganizationAccount]{
		OutputState: i.ToGetOrganizationAccountOutputWithContext(ctx).OutputState,
	}
}

// GetOrganizationAccountArrayInput is an input type that accepts GetOrganizationAccountArray and GetOrganizationAccountArrayOutput values.
// You can construct a concrete instance of `GetOrganizationAccountArrayInput` via:
//
//	GetOrganizationAccountArray{ GetOrganizationAccountArgs{...} }
type GetOrganizationAccountArrayInput interface {
	pulumi.Input

	ToGetOrganizationAccountArrayOutput() GetOrganizationAccountArrayOutput
	ToGetOrganizationAccountArrayOutputWithContext(context.Context) GetOrganizationAccountArrayOutput
}

type GetOrganizationAccountArray []GetOrganizationAccountInput

func (GetOrganizationAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationAccount)(nil)).Elem()
}

func (i GetOrganizationAccountArray) ToGetOrganizationAccountArrayOutput() GetOrganizationAccountArrayOutput {
	return i.ToGetOrganizationAccountArrayOutputWithContext(context.Background())
}

func (i GetOrganizationAccountArray) ToGetOrganizationAccountArrayOutputWithContext(ctx context.Context) GetOrganizationAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationAccountArrayOutput)
}

func (i GetOrganizationAccountArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOrganizationAccount] {
	return pulumix.Output[[]GetOrganizationAccount]{
		OutputState: i.ToGetOrganizationAccountArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOrganizationAccountOutput struct{ *pulumi.OutputState }

func (GetOrganizationAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationAccount)(nil)).Elem()
}

func (o GetOrganizationAccountOutput) ToGetOrganizationAccountOutput() GetOrganizationAccountOutput {
	return o
}

func (o GetOrganizationAccountOutput) ToGetOrganizationAccountOutputWithContext(ctx context.Context) GetOrganizationAccountOutput {
	return o
}

func (o GetOrganizationAccountOutput) ToOutput(ctx context.Context) pulumix.Output[GetOrganizationAccount] {
	return pulumix.Output[GetOrganizationAccount]{
		OutputState: o.OutputState,
	}
}

// ARN of the root
func (o GetOrganizationAccountOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationAccount) string { return v.Arn }).(pulumi.StringOutput)
}

// Email of the account
func (o GetOrganizationAccountOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationAccount) string { return v.Email }).(pulumi.StringOutput)
}

// Identifier of the root
func (o GetOrganizationAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationAccount) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the policy type
func (o GetOrganizationAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationAccount) string { return v.Name }).(pulumi.StringOutput)
}

// The status of the policy type as it relates to the associated root
func (o GetOrganizationAccountOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationAccount) string { return v.Status }).(pulumi.StringOutput)
}

type GetOrganizationAccountArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationAccount)(nil)).Elem()
}

func (o GetOrganizationAccountArrayOutput) ToGetOrganizationAccountArrayOutput() GetOrganizationAccountArrayOutput {
	return o
}

func (o GetOrganizationAccountArrayOutput) ToGetOrganizationAccountArrayOutputWithContext(ctx context.Context) GetOrganizationAccountArrayOutput {
	return o
}

func (o GetOrganizationAccountArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOrganizationAccount] {
	return pulumix.Output[[]GetOrganizationAccount]{
		OutputState: o.OutputState,
	}
}

func (o GetOrganizationAccountArrayOutput) Index(i pulumi.IntInput) GetOrganizationAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationAccount {
		return vs[0].([]GetOrganizationAccount)[vs[1].(int)]
	}).(GetOrganizationAccountOutput)
}

type GetOrganizationNonMasterAccount struct {
	// ARN of the root
	Arn string `pulumi:"arn"`
	// Email of the account
	Email string `pulumi:"email"`
	// Identifier of the root
	Id string `pulumi:"id"`
	// The name of the policy type
	Name string `pulumi:"name"`
	// The status of the policy type as it relates to the associated root
	Status string `pulumi:"status"`
}

// GetOrganizationNonMasterAccountInput is an input type that accepts GetOrganizationNonMasterAccountArgs and GetOrganizationNonMasterAccountOutput values.
// You can construct a concrete instance of `GetOrganizationNonMasterAccountInput` via:
//
//	GetOrganizationNonMasterAccountArgs{...}
type GetOrganizationNonMasterAccountInput interface {
	pulumi.Input

	ToGetOrganizationNonMasterAccountOutput() GetOrganizationNonMasterAccountOutput
	ToGetOrganizationNonMasterAccountOutputWithContext(context.Context) GetOrganizationNonMasterAccountOutput
}

type GetOrganizationNonMasterAccountArgs struct {
	// ARN of the root
	Arn pulumi.StringInput `pulumi:"arn"`
	// Email of the account
	Email pulumi.StringInput `pulumi:"email"`
	// Identifier of the root
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the policy type
	Name pulumi.StringInput `pulumi:"name"`
	// The status of the policy type as it relates to the associated root
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetOrganizationNonMasterAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationNonMasterAccount)(nil)).Elem()
}

func (i GetOrganizationNonMasterAccountArgs) ToGetOrganizationNonMasterAccountOutput() GetOrganizationNonMasterAccountOutput {
	return i.ToGetOrganizationNonMasterAccountOutputWithContext(context.Background())
}

func (i GetOrganizationNonMasterAccountArgs) ToGetOrganizationNonMasterAccountOutputWithContext(ctx context.Context) GetOrganizationNonMasterAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationNonMasterAccountOutput)
}

func (i GetOrganizationNonMasterAccountArgs) ToOutput(ctx context.Context) pulumix.Output[GetOrganizationNonMasterAccount] {
	return pulumix.Output[GetOrganizationNonMasterAccount]{
		OutputState: i.ToGetOrganizationNonMasterAccountOutputWithContext(ctx).OutputState,
	}
}

// GetOrganizationNonMasterAccountArrayInput is an input type that accepts GetOrganizationNonMasterAccountArray and GetOrganizationNonMasterAccountArrayOutput values.
// You can construct a concrete instance of `GetOrganizationNonMasterAccountArrayInput` via:
//
//	GetOrganizationNonMasterAccountArray{ GetOrganizationNonMasterAccountArgs{...} }
type GetOrganizationNonMasterAccountArrayInput interface {
	pulumi.Input

	ToGetOrganizationNonMasterAccountArrayOutput() GetOrganizationNonMasterAccountArrayOutput
	ToGetOrganizationNonMasterAccountArrayOutputWithContext(context.Context) GetOrganizationNonMasterAccountArrayOutput
}

type GetOrganizationNonMasterAccountArray []GetOrganizationNonMasterAccountInput

func (GetOrganizationNonMasterAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationNonMasterAccount)(nil)).Elem()
}

func (i GetOrganizationNonMasterAccountArray) ToGetOrganizationNonMasterAccountArrayOutput() GetOrganizationNonMasterAccountArrayOutput {
	return i.ToGetOrganizationNonMasterAccountArrayOutputWithContext(context.Background())
}

func (i GetOrganizationNonMasterAccountArray) ToGetOrganizationNonMasterAccountArrayOutputWithContext(ctx context.Context) GetOrganizationNonMasterAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationNonMasterAccountArrayOutput)
}

func (i GetOrganizationNonMasterAccountArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOrganizationNonMasterAccount] {
	return pulumix.Output[[]GetOrganizationNonMasterAccount]{
		OutputState: i.ToGetOrganizationNonMasterAccountArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOrganizationNonMasterAccountOutput struct{ *pulumi.OutputState }

func (GetOrganizationNonMasterAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationNonMasterAccount)(nil)).Elem()
}

func (o GetOrganizationNonMasterAccountOutput) ToGetOrganizationNonMasterAccountOutput() GetOrganizationNonMasterAccountOutput {
	return o
}

func (o GetOrganizationNonMasterAccountOutput) ToGetOrganizationNonMasterAccountOutputWithContext(ctx context.Context) GetOrganizationNonMasterAccountOutput {
	return o
}

func (o GetOrganizationNonMasterAccountOutput) ToOutput(ctx context.Context) pulumix.Output[GetOrganizationNonMasterAccount] {
	return pulumix.Output[GetOrganizationNonMasterAccount]{
		OutputState: o.OutputState,
	}
}

// ARN of the root
func (o GetOrganizationNonMasterAccountOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationNonMasterAccount) string { return v.Arn }).(pulumi.StringOutput)
}

// Email of the account
func (o GetOrganizationNonMasterAccountOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationNonMasterAccount) string { return v.Email }).(pulumi.StringOutput)
}

// Identifier of the root
func (o GetOrganizationNonMasterAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationNonMasterAccount) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the policy type
func (o GetOrganizationNonMasterAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationNonMasterAccount) string { return v.Name }).(pulumi.StringOutput)
}

// The status of the policy type as it relates to the associated root
func (o GetOrganizationNonMasterAccountOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationNonMasterAccount) string { return v.Status }).(pulumi.StringOutput)
}

type GetOrganizationNonMasterAccountArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationNonMasterAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationNonMasterAccount)(nil)).Elem()
}

func (o GetOrganizationNonMasterAccountArrayOutput) ToGetOrganizationNonMasterAccountArrayOutput() GetOrganizationNonMasterAccountArrayOutput {
	return o
}

func (o GetOrganizationNonMasterAccountArrayOutput) ToGetOrganizationNonMasterAccountArrayOutputWithContext(ctx context.Context) GetOrganizationNonMasterAccountArrayOutput {
	return o
}

func (o GetOrganizationNonMasterAccountArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOrganizationNonMasterAccount] {
	return pulumix.Output[[]GetOrganizationNonMasterAccount]{
		OutputState: o.OutputState,
	}
}

func (o GetOrganizationNonMasterAccountArrayOutput) Index(i pulumi.IntInput) GetOrganizationNonMasterAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationNonMasterAccount {
		return vs[0].([]GetOrganizationNonMasterAccount)[vs[1].(int)]
	}).(GetOrganizationNonMasterAccountOutput)
}

type GetOrganizationRoot struct {
	// ARN of the root
	Arn string `pulumi:"arn"`
	// Identifier of the root
	Id string `pulumi:"id"`
	// The name of the policy type
	Name string `pulumi:"name"`
	// List of policy types enabled for this root. All elements have these attributes:
	PolicyTypes []GetOrganizationRootPolicyType `pulumi:"policyTypes"`
}

// GetOrganizationRootInput is an input type that accepts GetOrganizationRootArgs and GetOrganizationRootOutput values.
// You can construct a concrete instance of `GetOrganizationRootInput` via:
//
//	GetOrganizationRootArgs{...}
type GetOrganizationRootInput interface {
	pulumi.Input

	ToGetOrganizationRootOutput() GetOrganizationRootOutput
	ToGetOrganizationRootOutputWithContext(context.Context) GetOrganizationRootOutput
}

type GetOrganizationRootArgs struct {
	// ARN of the root
	Arn pulumi.StringInput `pulumi:"arn"`
	// Identifier of the root
	Id pulumi.StringInput `pulumi:"id"`
	// The name of the policy type
	Name pulumi.StringInput `pulumi:"name"`
	// List of policy types enabled for this root. All elements have these attributes:
	PolicyTypes GetOrganizationRootPolicyTypeArrayInput `pulumi:"policyTypes"`
}

func (GetOrganizationRootArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationRoot)(nil)).Elem()
}

func (i GetOrganizationRootArgs) ToGetOrganizationRootOutput() GetOrganizationRootOutput {
	return i.ToGetOrganizationRootOutputWithContext(context.Background())
}

func (i GetOrganizationRootArgs) ToGetOrganizationRootOutputWithContext(ctx context.Context) GetOrganizationRootOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationRootOutput)
}

func (i GetOrganizationRootArgs) ToOutput(ctx context.Context) pulumix.Output[GetOrganizationRoot] {
	return pulumix.Output[GetOrganizationRoot]{
		OutputState: i.ToGetOrganizationRootOutputWithContext(ctx).OutputState,
	}
}

// GetOrganizationRootArrayInput is an input type that accepts GetOrganizationRootArray and GetOrganizationRootArrayOutput values.
// You can construct a concrete instance of `GetOrganizationRootArrayInput` via:
//
//	GetOrganizationRootArray{ GetOrganizationRootArgs{...} }
type GetOrganizationRootArrayInput interface {
	pulumi.Input

	ToGetOrganizationRootArrayOutput() GetOrganizationRootArrayOutput
	ToGetOrganizationRootArrayOutputWithContext(context.Context) GetOrganizationRootArrayOutput
}

type GetOrganizationRootArray []GetOrganizationRootInput

func (GetOrganizationRootArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationRoot)(nil)).Elem()
}

func (i GetOrganizationRootArray) ToGetOrganizationRootArrayOutput() GetOrganizationRootArrayOutput {
	return i.ToGetOrganizationRootArrayOutputWithContext(context.Background())
}

func (i GetOrganizationRootArray) ToGetOrganizationRootArrayOutputWithContext(ctx context.Context) GetOrganizationRootArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationRootArrayOutput)
}

func (i GetOrganizationRootArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOrganizationRoot] {
	return pulumix.Output[[]GetOrganizationRoot]{
		OutputState: i.ToGetOrganizationRootArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOrganizationRootOutput struct{ *pulumi.OutputState }

func (GetOrganizationRootOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationRoot)(nil)).Elem()
}

func (o GetOrganizationRootOutput) ToGetOrganizationRootOutput() GetOrganizationRootOutput {
	return o
}

func (o GetOrganizationRootOutput) ToGetOrganizationRootOutputWithContext(ctx context.Context) GetOrganizationRootOutput {
	return o
}

func (o GetOrganizationRootOutput) ToOutput(ctx context.Context) pulumix.Output[GetOrganizationRoot] {
	return pulumix.Output[GetOrganizationRoot]{
		OutputState: o.OutputState,
	}
}

// ARN of the root
func (o GetOrganizationRootOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationRoot) string { return v.Arn }).(pulumi.StringOutput)
}

// Identifier of the root
func (o GetOrganizationRootOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationRoot) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the policy type
func (o GetOrganizationRootOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationRoot) string { return v.Name }).(pulumi.StringOutput)
}

// List of policy types enabled for this root. All elements have these attributes:
func (o GetOrganizationRootOutput) PolicyTypes() GetOrganizationRootPolicyTypeArrayOutput {
	return o.ApplyT(func(v GetOrganizationRoot) []GetOrganizationRootPolicyType { return v.PolicyTypes }).(GetOrganizationRootPolicyTypeArrayOutput)
}

type GetOrganizationRootArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationRootArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationRoot)(nil)).Elem()
}

func (o GetOrganizationRootArrayOutput) ToGetOrganizationRootArrayOutput() GetOrganizationRootArrayOutput {
	return o
}

func (o GetOrganizationRootArrayOutput) ToGetOrganizationRootArrayOutputWithContext(ctx context.Context) GetOrganizationRootArrayOutput {
	return o
}

func (o GetOrganizationRootArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOrganizationRoot] {
	return pulumix.Output[[]GetOrganizationRoot]{
		OutputState: o.OutputState,
	}
}

func (o GetOrganizationRootArrayOutput) Index(i pulumi.IntInput) GetOrganizationRootOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationRoot {
		return vs[0].([]GetOrganizationRoot)[vs[1].(int)]
	}).(GetOrganizationRootOutput)
}

type GetOrganizationRootPolicyType struct {
	// The status of the policy type as it relates to the associated root
	Status string `pulumi:"status"`
	Type   string `pulumi:"type"`
}

// GetOrganizationRootPolicyTypeInput is an input type that accepts GetOrganizationRootPolicyTypeArgs and GetOrganizationRootPolicyTypeOutput values.
// You can construct a concrete instance of `GetOrganizationRootPolicyTypeInput` via:
//
//	GetOrganizationRootPolicyTypeArgs{...}
type GetOrganizationRootPolicyTypeInput interface {
	pulumi.Input

	ToGetOrganizationRootPolicyTypeOutput() GetOrganizationRootPolicyTypeOutput
	ToGetOrganizationRootPolicyTypeOutputWithContext(context.Context) GetOrganizationRootPolicyTypeOutput
}

type GetOrganizationRootPolicyTypeArgs struct {
	// The status of the policy type as it relates to the associated root
	Status pulumi.StringInput `pulumi:"status"`
	Type   pulumi.StringInput `pulumi:"type"`
}

func (GetOrganizationRootPolicyTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationRootPolicyType)(nil)).Elem()
}

func (i GetOrganizationRootPolicyTypeArgs) ToGetOrganizationRootPolicyTypeOutput() GetOrganizationRootPolicyTypeOutput {
	return i.ToGetOrganizationRootPolicyTypeOutputWithContext(context.Background())
}

func (i GetOrganizationRootPolicyTypeArgs) ToGetOrganizationRootPolicyTypeOutputWithContext(ctx context.Context) GetOrganizationRootPolicyTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationRootPolicyTypeOutput)
}

func (i GetOrganizationRootPolicyTypeArgs) ToOutput(ctx context.Context) pulumix.Output[GetOrganizationRootPolicyType] {
	return pulumix.Output[GetOrganizationRootPolicyType]{
		OutputState: i.ToGetOrganizationRootPolicyTypeOutputWithContext(ctx).OutputState,
	}
}

// GetOrganizationRootPolicyTypeArrayInput is an input type that accepts GetOrganizationRootPolicyTypeArray and GetOrganizationRootPolicyTypeArrayOutput values.
// You can construct a concrete instance of `GetOrganizationRootPolicyTypeArrayInput` via:
//
//	GetOrganizationRootPolicyTypeArray{ GetOrganizationRootPolicyTypeArgs{...} }
type GetOrganizationRootPolicyTypeArrayInput interface {
	pulumi.Input

	ToGetOrganizationRootPolicyTypeArrayOutput() GetOrganizationRootPolicyTypeArrayOutput
	ToGetOrganizationRootPolicyTypeArrayOutputWithContext(context.Context) GetOrganizationRootPolicyTypeArrayOutput
}

type GetOrganizationRootPolicyTypeArray []GetOrganizationRootPolicyTypeInput

func (GetOrganizationRootPolicyTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationRootPolicyType)(nil)).Elem()
}

func (i GetOrganizationRootPolicyTypeArray) ToGetOrganizationRootPolicyTypeArrayOutput() GetOrganizationRootPolicyTypeArrayOutput {
	return i.ToGetOrganizationRootPolicyTypeArrayOutputWithContext(context.Background())
}

func (i GetOrganizationRootPolicyTypeArray) ToGetOrganizationRootPolicyTypeArrayOutputWithContext(ctx context.Context) GetOrganizationRootPolicyTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationRootPolicyTypeArrayOutput)
}

func (i GetOrganizationRootPolicyTypeArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOrganizationRootPolicyType] {
	return pulumix.Output[[]GetOrganizationRootPolicyType]{
		OutputState: i.ToGetOrganizationRootPolicyTypeArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOrganizationRootPolicyTypeOutput struct{ *pulumi.OutputState }

func (GetOrganizationRootPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationRootPolicyType)(nil)).Elem()
}

func (o GetOrganizationRootPolicyTypeOutput) ToGetOrganizationRootPolicyTypeOutput() GetOrganizationRootPolicyTypeOutput {
	return o
}

func (o GetOrganizationRootPolicyTypeOutput) ToGetOrganizationRootPolicyTypeOutputWithContext(ctx context.Context) GetOrganizationRootPolicyTypeOutput {
	return o
}

func (o GetOrganizationRootPolicyTypeOutput) ToOutput(ctx context.Context) pulumix.Output[GetOrganizationRootPolicyType] {
	return pulumix.Output[GetOrganizationRootPolicyType]{
		OutputState: o.OutputState,
	}
}

// The status of the policy type as it relates to the associated root
func (o GetOrganizationRootPolicyTypeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationRootPolicyType) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetOrganizationRootPolicyTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationRootPolicyType) string { return v.Type }).(pulumi.StringOutput)
}

type GetOrganizationRootPolicyTypeArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationRootPolicyTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationRootPolicyType)(nil)).Elem()
}

func (o GetOrganizationRootPolicyTypeArrayOutput) ToGetOrganizationRootPolicyTypeArrayOutput() GetOrganizationRootPolicyTypeArrayOutput {
	return o
}

func (o GetOrganizationRootPolicyTypeArrayOutput) ToGetOrganizationRootPolicyTypeArrayOutputWithContext(ctx context.Context) GetOrganizationRootPolicyTypeArrayOutput {
	return o
}

func (o GetOrganizationRootPolicyTypeArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOrganizationRootPolicyType] {
	return pulumix.Output[[]GetOrganizationRootPolicyType]{
		OutputState: o.OutputState,
	}
}

func (o GetOrganizationRootPolicyTypeArrayOutput) Index(i pulumi.IntInput) GetOrganizationRootPolicyTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationRootPolicyType {
		return vs[0].([]GetOrganizationRootPolicyType)[vs[1].(int)]
	}).(GetOrganizationRootPolicyTypeOutput)
}

type GetOrganizationalUnitChildAccountsAccount struct {
	// The Amazon Resource Name (ARN) of the account.
	Arn string `pulumi:"arn"`
	// The email address associated with the AWS account.
	Email string `pulumi:"email"`
	// Parent identifier of the organizational units.
	Id string `pulumi:"id"`
	// The friendly name of the account.
	Name string `pulumi:"name"`
	// The status of the account in the organization.
	Status string `pulumi:"status"`
}

// GetOrganizationalUnitChildAccountsAccountInput is an input type that accepts GetOrganizationalUnitChildAccountsAccountArgs and GetOrganizationalUnitChildAccountsAccountOutput values.
// You can construct a concrete instance of `GetOrganizationalUnitChildAccountsAccountInput` via:
//
//	GetOrganizationalUnitChildAccountsAccountArgs{...}
type GetOrganizationalUnitChildAccountsAccountInput interface {
	pulumi.Input

	ToGetOrganizationalUnitChildAccountsAccountOutput() GetOrganizationalUnitChildAccountsAccountOutput
	ToGetOrganizationalUnitChildAccountsAccountOutputWithContext(context.Context) GetOrganizationalUnitChildAccountsAccountOutput
}

type GetOrganizationalUnitChildAccountsAccountArgs struct {
	// The Amazon Resource Name (ARN) of the account.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The email address associated with the AWS account.
	Email pulumi.StringInput `pulumi:"email"`
	// Parent identifier of the organizational units.
	Id pulumi.StringInput `pulumi:"id"`
	// The friendly name of the account.
	Name pulumi.StringInput `pulumi:"name"`
	// The status of the account in the organization.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetOrganizationalUnitChildAccountsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationalUnitChildAccountsAccount)(nil)).Elem()
}

func (i GetOrganizationalUnitChildAccountsAccountArgs) ToGetOrganizationalUnitChildAccountsAccountOutput() GetOrganizationalUnitChildAccountsAccountOutput {
	return i.ToGetOrganizationalUnitChildAccountsAccountOutputWithContext(context.Background())
}

func (i GetOrganizationalUnitChildAccountsAccountArgs) ToGetOrganizationalUnitChildAccountsAccountOutputWithContext(ctx context.Context) GetOrganizationalUnitChildAccountsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationalUnitChildAccountsAccountOutput)
}

func (i GetOrganizationalUnitChildAccountsAccountArgs) ToOutput(ctx context.Context) pulumix.Output[GetOrganizationalUnitChildAccountsAccount] {
	return pulumix.Output[GetOrganizationalUnitChildAccountsAccount]{
		OutputState: i.ToGetOrganizationalUnitChildAccountsAccountOutputWithContext(ctx).OutputState,
	}
}

// GetOrganizationalUnitChildAccountsAccountArrayInput is an input type that accepts GetOrganizationalUnitChildAccountsAccountArray and GetOrganizationalUnitChildAccountsAccountArrayOutput values.
// You can construct a concrete instance of `GetOrganizationalUnitChildAccountsAccountArrayInput` via:
//
//	GetOrganizationalUnitChildAccountsAccountArray{ GetOrganizationalUnitChildAccountsAccountArgs{...} }
type GetOrganizationalUnitChildAccountsAccountArrayInput interface {
	pulumi.Input

	ToGetOrganizationalUnitChildAccountsAccountArrayOutput() GetOrganizationalUnitChildAccountsAccountArrayOutput
	ToGetOrganizationalUnitChildAccountsAccountArrayOutputWithContext(context.Context) GetOrganizationalUnitChildAccountsAccountArrayOutput
}

type GetOrganizationalUnitChildAccountsAccountArray []GetOrganizationalUnitChildAccountsAccountInput

func (GetOrganizationalUnitChildAccountsAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationalUnitChildAccountsAccount)(nil)).Elem()
}

func (i GetOrganizationalUnitChildAccountsAccountArray) ToGetOrganizationalUnitChildAccountsAccountArrayOutput() GetOrganizationalUnitChildAccountsAccountArrayOutput {
	return i.ToGetOrganizationalUnitChildAccountsAccountArrayOutputWithContext(context.Background())
}

func (i GetOrganizationalUnitChildAccountsAccountArray) ToGetOrganizationalUnitChildAccountsAccountArrayOutputWithContext(ctx context.Context) GetOrganizationalUnitChildAccountsAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationalUnitChildAccountsAccountArrayOutput)
}

func (i GetOrganizationalUnitChildAccountsAccountArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOrganizationalUnitChildAccountsAccount] {
	return pulumix.Output[[]GetOrganizationalUnitChildAccountsAccount]{
		OutputState: i.ToGetOrganizationalUnitChildAccountsAccountArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOrganizationalUnitChildAccountsAccountOutput struct{ *pulumi.OutputState }

func (GetOrganizationalUnitChildAccountsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationalUnitChildAccountsAccount)(nil)).Elem()
}

func (o GetOrganizationalUnitChildAccountsAccountOutput) ToGetOrganizationalUnitChildAccountsAccountOutput() GetOrganizationalUnitChildAccountsAccountOutput {
	return o
}

func (o GetOrganizationalUnitChildAccountsAccountOutput) ToGetOrganizationalUnitChildAccountsAccountOutputWithContext(ctx context.Context) GetOrganizationalUnitChildAccountsAccountOutput {
	return o
}

func (o GetOrganizationalUnitChildAccountsAccountOutput) ToOutput(ctx context.Context) pulumix.Output[GetOrganizationalUnitChildAccountsAccount] {
	return pulumix.Output[GetOrganizationalUnitChildAccountsAccount]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the account.
func (o GetOrganizationalUnitChildAccountsAccountOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationalUnitChildAccountsAccount) string { return v.Arn }).(pulumi.StringOutput)
}

// The email address associated with the AWS account.
func (o GetOrganizationalUnitChildAccountsAccountOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationalUnitChildAccountsAccount) string { return v.Email }).(pulumi.StringOutput)
}

// Parent identifier of the organizational units.
func (o GetOrganizationalUnitChildAccountsAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationalUnitChildAccountsAccount) string { return v.Id }).(pulumi.StringOutput)
}

// The friendly name of the account.
func (o GetOrganizationalUnitChildAccountsAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationalUnitChildAccountsAccount) string { return v.Name }).(pulumi.StringOutput)
}

// The status of the account in the organization.
func (o GetOrganizationalUnitChildAccountsAccountOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationalUnitChildAccountsAccount) string { return v.Status }).(pulumi.StringOutput)
}

type GetOrganizationalUnitChildAccountsAccountArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationalUnitChildAccountsAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationalUnitChildAccountsAccount)(nil)).Elem()
}

func (o GetOrganizationalUnitChildAccountsAccountArrayOutput) ToGetOrganizationalUnitChildAccountsAccountArrayOutput() GetOrganizationalUnitChildAccountsAccountArrayOutput {
	return o
}

func (o GetOrganizationalUnitChildAccountsAccountArrayOutput) ToGetOrganizationalUnitChildAccountsAccountArrayOutputWithContext(ctx context.Context) GetOrganizationalUnitChildAccountsAccountArrayOutput {
	return o
}

func (o GetOrganizationalUnitChildAccountsAccountArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOrganizationalUnitChildAccountsAccount] {
	return pulumix.Output[[]GetOrganizationalUnitChildAccountsAccount]{
		OutputState: o.OutputState,
	}
}

func (o GetOrganizationalUnitChildAccountsAccountArrayOutput) Index(i pulumi.IntInput) GetOrganizationalUnitChildAccountsAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationalUnitChildAccountsAccount {
		return vs[0].([]GetOrganizationalUnitChildAccountsAccount)[vs[1].(int)]
	}).(GetOrganizationalUnitChildAccountsAccountOutput)
}

type GetOrganizationalUnitDescendantAccountsAccount struct {
	// The Amazon Resource Name (ARN) of the account.
	Arn string `pulumi:"arn"`
	// The email address associated with the AWS account.
	Email string `pulumi:"email"`
	// Parent identifier of the organizational units.
	Id string `pulumi:"id"`
	// The friendly name of the account.
	Name string `pulumi:"name"`
	// The status of the account in the organization.
	Status string `pulumi:"status"`
}

// GetOrganizationalUnitDescendantAccountsAccountInput is an input type that accepts GetOrganizationalUnitDescendantAccountsAccountArgs and GetOrganizationalUnitDescendantAccountsAccountOutput values.
// You can construct a concrete instance of `GetOrganizationalUnitDescendantAccountsAccountInput` via:
//
//	GetOrganizationalUnitDescendantAccountsAccountArgs{...}
type GetOrganizationalUnitDescendantAccountsAccountInput interface {
	pulumi.Input

	ToGetOrganizationalUnitDescendantAccountsAccountOutput() GetOrganizationalUnitDescendantAccountsAccountOutput
	ToGetOrganizationalUnitDescendantAccountsAccountOutputWithContext(context.Context) GetOrganizationalUnitDescendantAccountsAccountOutput
}

type GetOrganizationalUnitDescendantAccountsAccountArgs struct {
	// The Amazon Resource Name (ARN) of the account.
	Arn pulumi.StringInput `pulumi:"arn"`
	// The email address associated with the AWS account.
	Email pulumi.StringInput `pulumi:"email"`
	// Parent identifier of the organizational units.
	Id pulumi.StringInput `pulumi:"id"`
	// The friendly name of the account.
	Name pulumi.StringInput `pulumi:"name"`
	// The status of the account in the organization.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetOrganizationalUnitDescendantAccountsAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationalUnitDescendantAccountsAccount)(nil)).Elem()
}

func (i GetOrganizationalUnitDescendantAccountsAccountArgs) ToGetOrganizationalUnitDescendantAccountsAccountOutput() GetOrganizationalUnitDescendantAccountsAccountOutput {
	return i.ToGetOrganizationalUnitDescendantAccountsAccountOutputWithContext(context.Background())
}

func (i GetOrganizationalUnitDescendantAccountsAccountArgs) ToGetOrganizationalUnitDescendantAccountsAccountOutputWithContext(ctx context.Context) GetOrganizationalUnitDescendantAccountsAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationalUnitDescendantAccountsAccountOutput)
}

func (i GetOrganizationalUnitDescendantAccountsAccountArgs) ToOutput(ctx context.Context) pulumix.Output[GetOrganizationalUnitDescendantAccountsAccount] {
	return pulumix.Output[GetOrganizationalUnitDescendantAccountsAccount]{
		OutputState: i.ToGetOrganizationalUnitDescendantAccountsAccountOutputWithContext(ctx).OutputState,
	}
}

// GetOrganizationalUnitDescendantAccountsAccountArrayInput is an input type that accepts GetOrganizationalUnitDescendantAccountsAccountArray and GetOrganizationalUnitDescendantAccountsAccountArrayOutput values.
// You can construct a concrete instance of `GetOrganizationalUnitDescendantAccountsAccountArrayInput` via:
//
//	GetOrganizationalUnitDescendantAccountsAccountArray{ GetOrganizationalUnitDescendantAccountsAccountArgs{...} }
type GetOrganizationalUnitDescendantAccountsAccountArrayInput interface {
	pulumi.Input

	ToGetOrganizationalUnitDescendantAccountsAccountArrayOutput() GetOrganizationalUnitDescendantAccountsAccountArrayOutput
	ToGetOrganizationalUnitDescendantAccountsAccountArrayOutputWithContext(context.Context) GetOrganizationalUnitDescendantAccountsAccountArrayOutput
}

type GetOrganizationalUnitDescendantAccountsAccountArray []GetOrganizationalUnitDescendantAccountsAccountInput

func (GetOrganizationalUnitDescendantAccountsAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationalUnitDescendantAccountsAccount)(nil)).Elem()
}

func (i GetOrganizationalUnitDescendantAccountsAccountArray) ToGetOrganizationalUnitDescendantAccountsAccountArrayOutput() GetOrganizationalUnitDescendantAccountsAccountArrayOutput {
	return i.ToGetOrganizationalUnitDescendantAccountsAccountArrayOutputWithContext(context.Background())
}

func (i GetOrganizationalUnitDescendantAccountsAccountArray) ToGetOrganizationalUnitDescendantAccountsAccountArrayOutputWithContext(ctx context.Context) GetOrganizationalUnitDescendantAccountsAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationalUnitDescendantAccountsAccountArrayOutput)
}

func (i GetOrganizationalUnitDescendantAccountsAccountArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOrganizationalUnitDescendantAccountsAccount] {
	return pulumix.Output[[]GetOrganizationalUnitDescendantAccountsAccount]{
		OutputState: i.ToGetOrganizationalUnitDescendantAccountsAccountArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOrganizationalUnitDescendantAccountsAccountOutput struct{ *pulumi.OutputState }

func (GetOrganizationalUnitDescendantAccountsAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationalUnitDescendantAccountsAccount)(nil)).Elem()
}

func (o GetOrganizationalUnitDescendantAccountsAccountOutput) ToGetOrganizationalUnitDescendantAccountsAccountOutput() GetOrganizationalUnitDescendantAccountsAccountOutput {
	return o
}

func (o GetOrganizationalUnitDescendantAccountsAccountOutput) ToGetOrganizationalUnitDescendantAccountsAccountOutputWithContext(ctx context.Context) GetOrganizationalUnitDescendantAccountsAccountOutput {
	return o
}

func (o GetOrganizationalUnitDescendantAccountsAccountOutput) ToOutput(ctx context.Context) pulumix.Output[GetOrganizationalUnitDescendantAccountsAccount] {
	return pulumix.Output[GetOrganizationalUnitDescendantAccountsAccount]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) of the account.
func (o GetOrganizationalUnitDescendantAccountsAccountOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationalUnitDescendantAccountsAccount) string { return v.Arn }).(pulumi.StringOutput)
}

// The email address associated with the AWS account.
func (o GetOrganizationalUnitDescendantAccountsAccountOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationalUnitDescendantAccountsAccount) string { return v.Email }).(pulumi.StringOutput)
}

// Parent identifier of the organizational units.
func (o GetOrganizationalUnitDescendantAccountsAccountOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationalUnitDescendantAccountsAccount) string { return v.Id }).(pulumi.StringOutput)
}

// The friendly name of the account.
func (o GetOrganizationalUnitDescendantAccountsAccountOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationalUnitDescendantAccountsAccount) string { return v.Name }).(pulumi.StringOutput)
}

// The status of the account in the organization.
func (o GetOrganizationalUnitDescendantAccountsAccountOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationalUnitDescendantAccountsAccount) string { return v.Status }).(pulumi.StringOutput)
}

type GetOrganizationalUnitDescendantAccountsAccountArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationalUnitDescendantAccountsAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationalUnitDescendantAccountsAccount)(nil)).Elem()
}

func (o GetOrganizationalUnitDescendantAccountsAccountArrayOutput) ToGetOrganizationalUnitDescendantAccountsAccountArrayOutput() GetOrganizationalUnitDescendantAccountsAccountArrayOutput {
	return o
}

func (o GetOrganizationalUnitDescendantAccountsAccountArrayOutput) ToGetOrganizationalUnitDescendantAccountsAccountArrayOutputWithContext(ctx context.Context) GetOrganizationalUnitDescendantAccountsAccountArrayOutput {
	return o
}

func (o GetOrganizationalUnitDescendantAccountsAccountArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOrganizationalUnitDescendantAccountsAccount] {
	return pulumix.Output[[]GetOrganizationalUnitDescendantAccountsAccount]{
		OutputState: o.OutputState,
	}
}

func (o GetOrganizationalUnitDescendantAccountsAccountArrayOutput) Index(i pulumi.IntInput) GetOrganizationalUnitDescendantAccountsAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationalUnitDescendantAccountsAccount {
		return vs[0].([]GetOrganizationalUnitDescendantAccountsAccount)[vs[1].(int)]
	}).(GetOrganizationalUnitDescendantAccountsAccountOutput)
}

type GetOrganizationalUnitsChild struct {
	// ARN of the organizational unit
	Arn string `pulumi:"arn"`
	// Parent identifier of the organizational units.
	Id string `pulumi:"id"`
	// Name of the organizational unit
	Name string `pulumi:"name"`
}

// GetOrganizationalUnitsChildInput is an input type that accepts GetOrganizationalUnitsChildArgs and GetOrganizationalUnitsChildOutput values.
// You can construct a concrete instance of `GetOrganizationalUnitsChildInput` via:
//
//	GetOrganizationalUnitsChildArgs{...}
type GetOrganizationalUnitsChildInput interface {
	pulumi.Input

	ToGetOrganizationalUnitsChildOutput() GetOrganizationalUnitsChildOutput
	ToGetOrganizationalUnitsChildOutputWithContext(context.Context) GetOrganizationalUnitsChildOutput
}

type GetOrganizationalUnitsChildArgs struct {
	// ARN of the organizational unit
	Arn pulumi.StringInput `pulumi:"arn"`
	// Parent identifier of the organizational units.
	Id pulumi.StringInput `pulumi:"id"`
	// Name of the organizational unit
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetOrganizationalUnitsChildArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationalUnitsChild)(nil)).Elem()
}

func (i GetOrganizationalUnitsChildArgs) ToGetOrganizationalUnitsChildOutput() GetOrganizationalUnitsChildOutput {
	return i.ToGetOrganizationalUnitsChildOutputWithContext(context.Background())
}

func (i GetOrganizationalUnitsChildArgs) ToGetOrganizationalUnitsChildOutputWithContext(ctx context.Context) GetOrganizationalUnitsChildOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationalUnitsChildOutput)
}

func (i GetOrganizationalUnitsChildArgs) ToOutput(ctx context.Context) pulumix.Output[GetOrganizationalUnitsChild] {
	return pulumix.Output[GetOrganizationalUnitsChild]{
		OutputState: i.ToGetOrganizationalUnitsChildOutputWithContext(ctx).OutputState,
	}
}

// GetOrganizationalUnitsChildArrayInput is an input type that accepts GetOrganizationalUnitsChildArray and GetOrganizationalUnitsChildArrayOutput values.
// You can construct a concrete instance of `GetOrganizationalUnitsChildArrayInput` via:
//
//	GetOrganizationalUnitsChildArray{ GetOrganizationalUnitsChildArgs{...} }
type GetOrganizationalUnitsChildArrayInput interface {
	pulumi.Input

	ToGetOrganizationalUnitsChildArrayOutput() GetOrganizationalUnitsChildArrayOutput
	ToGetOrganizationalUnitsChildArrayOutputWithContext(context.Context) GetOrganizationalUnitsChildArrayOutput
}

type GetOrganizationalUnitsChildArray []GetOrganizationalUnitsChildInput

func (GetOrganizationalUnitsChildArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationalUnitsChild)(nil)).Elem()
}

func (i GetOrganizationalUnitsChildArray) ToGetOrganizationalUnitsChildArrayOutput() GetOrganizationalUnitsChildArrayOutput {
	return i.ToGetOrganizationalUnitsChildArrayOutputWithContext(context.Background())
}

func (i GetOrganizationalUnitsChildArray) ToGetOrganizationalUnitsChildArrayOutputWithContext(ctx context.Context) GetOrganizationalUnitsChildArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationalUnitsChildArrayOutput)
}

func (i GetOrganizationalUnitsChildArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOrganizationalUnitsChild] {
	return pulumix.Output[[]GetOrganizationalUnitsChild]{
		OutputState: i.ToGetOrganizationalUnitsChildArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOrganizationalUnitsChildOutput struct{ *pulumi.OutputState }

func (GetOrganizationalUnitsChildOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationalUnitsChild)(nil)).Elem()
}

func (o GetOrganizationalUnitsChildOutput) ToGetOrganizationalUnitsChildOutput() GetOrganizationalUnitsChildOutput {
	return o
}

func (o GetOrganizationalUnitsChildOutput) ToGetOrganizationalUnitsChildOutputWithContext(ctx context.Context) GetOrganizationalUnitsChildOutput {
	return o
}

func (o GetOrganizationalUnitsChildOutput) ToOutput(ctx context.Context) pulumix.Output[GetOrganizationalUnitsChild] {
	return pulumix.Output[GetOrganizationalUnitsChild]{
		OutputState: o.OutputState,
	}
}

// ARN of the organizational unit
func (o GetOrganizationalUnitsChildOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationalUnitsChild) string { return v.Arn }).(pulumi.StringOutput)
}

// Parent identifier of the organizational units.
func (o GetOrganizationalUnitsChildOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationalUnitsChild) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the organizational unit
func (o GetOrganizationalUnitsChildOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationalUnitsChild) string { return v.Name }).(pulumi.StringOutput)
}

type GetOrganizationalUnitsChildArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationalUnitsChildArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationalUnitsChild)(nil)).Elem()
}

func (o GetOrganizationalUnitsChildArrayOutput) ToGetOrganizationalUnitsChildArrayOutput() GetOrganizationalUnitsChildArrayOutput {
	return o
}

func (o GetOrganizationalUnitsChildArrayOutput) ToGetOrganizationalUnitsChildArrayOutputWithContext(ctx context.Context) GetOrganizationalUnitsChildArrayOutput {
	return o
}

func (o GetOrganizationalUnitsChildArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOrganizationalUnitsChild] {
	return pulumix.Output[[]GetOrganizationalUnitsChild]{
		OutputState: o.OutputState,
	}
}

func (o GetOrganizationalUnitsChildArrayOutput) Index(i pulumi.IntInput) GetOrganizationalUnitsChildOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationalUnitsChild {
		return vs[0].([]GetOrganizationalUnitsChild)[vs[1].(int)]
	}).(GetOrganizationalUnitsChildOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationAccountInput)(nil)).Elem(), OrganizationAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationAccountArrayInput)(nil)).Elem(), OrganizationAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationNonMasterAccountInput)(nil)).Elem(), OrganizationNonMasterAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationNonMasterAccountArrayInput)(nil)).Elem(), OrganizationNonMasterAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationRootInput)(nil)).Elem(), OrganizationRootArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationRootArrayInput)(nil)).Elem(), OrganizationRootArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationRootPolicyTypeInput)(nil)).Elem(), OrganizationRootPolicyTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationRootPolicyTypeArrayInput)(nil)).Elem(), OrganizationRootPolicyTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationalUnitAccountInput)(nil)).Elem(), OrganizationalUnitAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationalUnitAccountArrayInput)(nil)).Elem(), OrganizationalUnitAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDelegatedAdministratorsDelegatedAdministratorInput)(nil)).Elem(), GetDelegatedAdministratorsDelegatedAdministratorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDelegatedAdministratorsDelegatedAdministratorArrayInput)(nil)).Elem(), GetDelegatedAdministratorsDelegatedAdministratorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDelegatedServicesDelegatedServiceInput)(nil)).Elem(), GetDelegatedServicesDelegatedServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDelegatedServicesDelegatedServiceArrayInput)(nil)).Elem(), GetDelegatedServicesDelegatedServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationAccountInput)(nil)).Elem(), GetOrganizationAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationAccountArrayInput)(nil)).Elem(), GetOrganizationAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationNonMasterAccountInput)(nil)).Elem(), GetOrganizationNonMasterAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationNonMasterAccountArrayInput)(nil)).Elem(), GetOrganizationNonMasterAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationRootInput)(nil)).Elem(), GetOrganizationRootArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationRootArrayInput)(nil)).Elem(), GetOrganizationRootArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationRootPolicyTypeInput)(nil)).Elem(), GetOrganizationRootPolicyTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationRootPolicyTypeArrayInput)(nil)).Elem(), GetOrganizationRootPolicyTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationalUnitChildAccountsAccountInput)(nil)).Elem(), GetOrganizationalUnitChildAccountsAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationalUnitChildAccountsAccountArrayInput)(nil)).Elem(), GetOrganizationalUnitChildAccountsAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationalUnitDescendantAccountsAccountInput)(nil)).Elem(), GetOrganizationalUnitDescendantAccountsAccountArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationalUnitDescendantAccountsAccountArrayInput)(nil)).Elem(), GetOrganizationalUnitDescendantAccountsAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationalUnitsChildInput)(nil)).Elem(), GetOrganizationalUnitsChildArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationalUnitsChildArrayInput)(nil)).Elem(), GetOrganizationalUnitsChildArray{})
	pulumi.RegisterOutputType(OrganizationAccountOutput{})
	pulumi.RegisterOutputType(OrganizationAccountArrayOutput{})
	pulumi.RegisterOutputType(OrganizationNonMasterAccountOutput{})
	pulumi.RegisterOutputType(OrganizationNonMasterAccountArrayOutput{})
	pulumi.RegisterOutputType(OrganizationRootOutput{})
	pulumi.RegisterOutputType(OrganizationRootArrayOutput{})
	pulumi.RegisterOutputType(OrganizationRootPolicyTypeOutput{})
	pulumi.RegisterOutputType(OrganizationRootPolicyTypeArrayOutput{})
	pulumi.RegisterOutputType(OrganizationalUnitAccountOutput{})
	pulumi.RegisterOutputType(OrganizationalUnitAccountArrayOutput{})
	pulumi.RegisterOutputType(GetDelegatedAdministratorsDelegatedAdministratorOutput{})
	pulumi.RegisterOutputType(GetDelegatedAdministratorsDelegatedAdministratorArrayOutput{})
	pulumi.RegisterOutputType(GetDelegatedServicesDelegatedServiceOutput{})
	pulumi.RegisterOutputType(GetDelegatedServicesDelegatedServiceArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationAccountOutput{})
	pulumi.RegisterOutputType(GetOrganizationAccountArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationNonMasterAccountOutput{})
	pulumi.RegisterOutputType(GetOrganizationNonMasterAccountArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationRootOutput{})
	pulumi.RegisterOutputType(GetOrganizationRootArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationRootPolicyTypeOutput{})
	pulumi.RegisterOutputType(GetOrganizationRootPolicyTypeArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationalUnitChildAccountsAccountOutput{})
	pulumi.RegisterOutputType(GetOrganizationalUnitChildAccountsAccountArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationalUnitDescendantAccountsAccountOutput{})
	pulumi.RegisterOutputType(GetOrganizationalUnitDescendantAccountsAccountArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationalUnitsChildOutput{})
	pulumi.RegisterOutputType(GetOrganizationalUnitsChildArrayOutput{})
}
