// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type OrganizationAccount struct {
	// ARN of the root
	Arn *string `pulumi:"arn"`
	// Email of the account
	Email *string `pulumi:"email"`
	// Identifier of the root
	Id *string `pulumi:"id"`
	// The name of the policy type
	Name *string `pulumi:"name"`
	// The status of the policy type as it relates to the associated root
	Status *string `pulumi:"status"`
}

type OrganizationAccountOutput struct{ *pulumi.OutputState }

func (OrganizationAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationAccount)(nil)).Elem()
}

func (o OrganizationAccountOutput) ToOrganizationAccountOutput() OrganizationAccountOutput {
	return o
}

func (o OrganizationAccountOutput) ToOrganizationAccountOutputWithContext(ctx context.Context) OrganizationAccountOutput {
	return o
}

// ARN of the root
func (o OrganizationAccountOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationAccount) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Email of the account
func (o OrganizationAccountOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationAccount) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Identifier of the root
func (o OrganizationAccountOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationAccount) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the policy type
func (o OrganizationAccountOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationAccount) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The status of the policy type as it relates to the associated root
func (o OrganizationAccountOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationAccount) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type OrganizationAccountArrayOutput struct{ *pulumi.OutputState }

func (OrganizationAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationAccount)(nil)).Elem()
}

func (o OrganizationAccountArrayOutput) ToOrganizationAccountArrayOutput() OrganizationAccountArrayOutput {
	return o
}

func (o OrganizationAccountArrayOutput) ToOrganizationAccountArrayOutputWithContext(ctx context.Context) OrganizationAccountArrayOutput {
	return o
}

func (o OrganizationAccountArrayOutput) Index(i pulumi.IntInput) OrganizationAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationAccount {
		return vs[0].([]OrganizationAccount)[vs[1].(int)]
	}).(OrganizationAccountOutput)
}

type OrganizationNonMasterAccount struct {
	// ARN of the root
	Arn *string `pulumi:"arn"`
	// Email of the account
	Email *string `pulumi:"email"`
	// Identifier of the root
	Id *string `pulumi:"id"`
	// The name of the policy type
	Name *string `pulumi:"name"`
	// The status of the policy type as it relates to the associated root
	Status *string `pulumi:"status"`
}

type OrganizationNonMasterAccountOutput struct{ *pulumi.OutputState }

func (OrganizationNonMasterAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationNonMasterAccount)(nil)).Elem()
}

func (o OrganizationNonMasterAccountOutput) ToOrganizationNonMasterAccountOutput() OrganizationNonMasterAccountOutput {
	return o
}

func (o OrganizationNonMasterAccountOutput) ToOrganizationNonMasterAccountOutputWithContext(ctx context.Context) OrganizationNonMasterAccountOutput {
	return o
}

// ARN of the root
func (o OrganizationNonMasterAccountOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationNonMasterAccount) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Email of the account
func (o OrganizationNonMasterAccountOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationNonMasterAccount) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Identifier of the root
func (o OrganizationNonMasterAccountOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationNonMasterAccount) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the policy type
func (o OrganizationNonMasterAccountOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationNonMasterAccount) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// The status of the policy type as it relates to the associated root
func (o OrganizationNonMasterAccountOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationNonMasterAccount) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type OrganizationNonMasterAccountArrayOutput struct{ *pulumi.OutputState }

func (OrganizationNonMasterAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationNonMasterAccount)(nil)).Elem()
}

func (o OrganizationNonMasterAccountArrayOutput) ToOrganizationNonMasterAccountArrayOutput() OrganizationNonMasterAccountArrayOutput {
	return o
}

func (o OrganizationNonMasterAccountArrayOutput) ToOrganizationNonMasterAccountArrayOutputWithContext(ctx context.Context) OrganizationNonMasterAccountArrayOutput {
	return o
}

func (o OrganizationNonMasterAccountArrayOutput) Index(i pulumi.IntInput) OrganizationNonMasterAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationNonMasterAccount {
		return vs[0].([]OrganizationNonMasterAccount)[vs[1].(int)]
	}).(OrganizationNonMasterAccountOutput)
}

type OrganizationRoot struct {
	// ARN of the root
	Arn *string `pulumi:"arn"`
	// Identifier of the root
	Id *string `pulumi:"id"`
	// The name of the policy type
	Name *string `pulumi:"name"`
	// List of policy types enabled for this root. All elements have these attributes:
	PolicyTypes []OrganizationRootPolicyType `pulumi:"policyTypes"`
}

type OrganizationRootOutput struct{ *pulumi.OutputState }

func (OrganizationRootOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationRoot)(nil)).Elem()
}

func (o OrganizationRootOutput) ToOrganizationRootOutput() OrganizationRootOutput {
	return o
}

func (o OrganizationRootOutput) ToOrganizationRootOutputWithContext(ctx context.Context) OrganizationRootOutput {
	return o
}

// ARN of the root
func (o OrganizationRootOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationRoot) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Identifier of the root
func (o OrganizationRootOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationRoot) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the policy type
func (o OrganizationRootOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationRoot) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// List of policy types enabled for this root. All elements have these attributes:
func (o OrganizationRootOutput) PolicyTypes() OrganizationRootPolicyTypeArrayOutput {
	return o.ApplyT(func(v OrganizationRoot) []OrganizationRootPolicyType { return v.PolicyTypes }).(OrganizationRootPolicyTypeArrayOutput)
}

type OrganizationRootArrayOutput struct{ *pulumi.OutputState }

func (OrganizationRootArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationRoot)(nil)).Elem()
}

func (o OrganizationRootArrayOutput) ToOrganizationRootArrayOutput() OrganizationRootArrayOutput {
	return o
}

func (o OrganizationRootArrayOutput) ToOrganizationRootArrayOutputWithContext(ctx context.Context) OrganizationRootArrayOutput {
	return o
}

func (o OrganizationRootArrayOutput) Index(i pulumi.IntInput) OrganizationRootOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationRoot {
		return vs[0].([]OrganizationRoot)[vs[1].(int)]
	}).(OrganizationRootOutput)
}

type OrganizationRootPolicyType struct {
	// The status of the policy type as it relates to the associated root
	Status *string `pulumi:"status"`
	Type   *string `pulumi:"type"`
}

type OrganizationRootPolicyTypeOutput struct{ *pulumi.OutputState }

func (OrganizationRootPolicyTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationRootPolicyType)(nil)).Elem()
}

func (o OrganizationRootPolicyTypeOutput) ToOrganizationRootPolicyTypeOutput() OrganizationRootPolicyTypeOutput {
	return o
}

func (o OrganizationRootPolicyTypeOutput) ToOrganizationRootPolicyTypeOutputWithContext(ctx context.Context) OrganizationRootPolicyTypeOutput {
	return o
}

// The status of the policy type as it relates to the associated root
func (o OrganizationRootPolicyTypeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationRootPolicyType) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o OrganizationRootPolicyTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationRootPolicyType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type OrganizationRootPolicyTypeArrayOutput struct{ *pulumi.OutputState }

func (OrganizationRootPolicyTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationRootPolicyType)(nil)).Elem()
}

func (o OrganizationRootPolicyTypeArrayOutput) ToOrganizationRootPolicyTypeArrayOutput() OrganizationRootPolicyTypeArrayOutput {
	return o
}

func (o OrganizationRootPolicyTypeArrayOutput) ToOrganizationRootPolicyTypeArrayOutputWithContext(ctx context.Context) OrganizationRootPolicyTypeArrayOutput {
	return o
}

func (o OrganizationRootPolicyTypeArrayOutput) Index(i pulumi.IntInput) OrganizationRootPolicyTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationRootPolicyType {
		return vs[0].([]OrganizationRootPolicyType)[vs[1].(int)]
	}).(OrganizationRootPolicyTypeOutput)
}

type OrganizationalUnitAccount struct {
	// ARN of the organizational unit
	Arn *string `pulumi:"arn"`
	// Email of the account
	Email *string `pulumi:"email"`
	// Identifier of the organization unit
	Id *string `pulumi:"id"`
	// The name for the organizational unit
	Name *string `pulumi:"name"`
}

type OrganizationalUnitAccountOutput struct{ *pulumi.OutputState }

func (OrganizationalUnitAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationalUnitAccount)(nil)).Elem()
}

func (o OrganizationalUnitAccountOutput) ToOrganizationalUnitAccountOutput() OrganizationalUnitAccountOutput {
	return o
}

func (o OrganizationalUnitAccountOutput) ToOrganizationalUnitAccountOutputWithContext(ctx context.Context) OrganizationalUnitAccountOutput {
	return o
}

// ARN of the organizational unit
func (o OrganizationalUnitAccountOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationalUnitAccount) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Email of the account
func (o OrganizationalUnitAccountOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationalUnitAccount) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// Identifier of the organization unit
func (o OrganizationalUnitAccountOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationalUnitAccount) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name for the organizational unit
func (o OrganizationalUnitAccountOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationalUnitAccount) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type OrganizationalUnitAccountArrayOutput struct{ *pulumi.OutputState }

func (OrganizationalUnitAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationalUnitAccount)(nil)).Elem()
}

func (o OrganizationalUnitAccountArrayOutput) ToOrganizationalUnitAccountArrayOutput() OrganizationalUnitAccountArrayOutput {
	return o
}

func (o OrganizationalUnitAccountArrayOutput) ToOrganizationalUnitAccountArrayOutputWithContext(ctx context.Context) OrganizationalUnitAccountArrayOutput {
	return o
}

func (o OrganizationalUnitAccountArrayOutput) Index(i pulumi.IntInput) OrganizationalUnitAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationalUnitAccount {
		return vs[0].([]OrganizationalUnitAccount)[vs[1].(int)]
	}).(OrganizationalUnitAccountOutput)
}

type GetDelegatedAdministratorsDelegatedAdministrator struct {
	// The Amazon Resource Name (ARN) of the delegated administrator's account.
	Arn string `pulumi:"arn"`
	// The date when the account was made a delegated administrator.
	DelegationEnabledDate string `pulumi:"delegationEnabledDate"`
	// The email address that is associated with the delegated administrator's AWS account.
	Email string `pulumi:"email"`
	// The unique identifier (ID) of the delegated administrator's account.
	Id string `pulumi:"id"`
	// The method by which the delegated administrator's account joined the organization.
	JoinedMethod string `pulumi:"joinedMethod"`
	// The date when the delegated administrator's account became a part of the organization.
	JoinedTimestamp string `pulumi:"joinedTimestamp"`
	// The friendly name of the delegated administrator's account.
	Name string `pulumi:"name"`
	// The status of the delegated administrator's account in the organization.
	Status string `pulumi:"status"`
}

type GetDelegatedAdministratorsDelegatedAdministratorOutput struct{ *pulumi.OutputState }

func (GetDelegatedAdministratorsDelegatedAdministratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDelegatedAdministratorsDelegatedAdministrator)(nil)).Elem()
}

func (o GetDelegatedAdministratorsDelegatedAdministratorOutput) ToGetDelegatedAdministratorsDelegatedAdministratorOutput() GetDelegatedAdministratorsDelegatedAdministratorOutput {
	return o
}

func (o GetDelegatedAdministratorsDelegatedAdministratorOutput) ToGetDelegatedAdministratorsDelegatedAdministratorOutputWithContext(ctx context.Context) GetDelegatedAdministratorsDelegatedAdministratorOutput {
	return o
}

// The Amazon Resource Name (ARN) of the delegated administrator's account.
func (o GetDelegatedAdministratorsDelegatedAdministratorOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedAdministratorsDelegatedAdministrator) string { return v.Arn }).(pulumi.StringOutput)
}

// The date when the account was made a delegated administrator.
func (o GetDelegatedAdministratorsDelegatedAdministratorOutput) DelegationEnabledDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedAdministratorsDelegatedAdministrator) string { return v.DelegationEnabledDate }).(pulumi.StringOutput)
}

// The email address that is associated with the delegated administrator's AWS account.
func (o GetDelegatedAdministratorsDelegatedAdministratorOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedAdministratorsDelegatedAdministrator) string { return v.Email }).(pulumi.StringOutput)
}

// The unique identifier (ID) of the delegated administrator's account.
func (o GetDelegatedAdministratorsDelegatedAdministratorOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedAdministratorsDelegatedAdministrator) string { return v.Id }).(pulumi.StringOutput)
}

// The method by which the delegated administrator's account joined the organization.
func (o GetDelegatedAdministratorsDelegatedAdministratorOutput) JoinedMethod() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedAdministratorsDelegatedAdministrator) string { return v.JoinedMethod }).(pulumi.StringOutput)
}

// The date when the delegated administrator's account became a part of the organization.
func (o GetDelegatedAdministratorsDelegatedAdministratorOutput) JoinedTimestamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedAdministratorsDelegatedAdministrator) string { return v.JoinedTimestamp }).(pulumi.StringOutput)
}

// The friendly name of the delegated administrator's account.
func (o GetDelegatedAdministratorsDelegatedAdministratorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedAdministratorsDelegatedAdministrator) string { return v.Name }).(pulumi.StringOutput)
}

// The status of the delegated administrator's account in the organization.
func (o GetDelegatedAdministratorsDelegatedAdministratorOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedAdministratorsDelegatedAdministrator) string { return v.Status }).(pulumi.StringOutput)
}

type GetDelegatedAdministratorsDelegatedAdministratorArrayOutput struct{ *pulumi.OutputState }

func (GetDelegatedAdministratorsDelegatedAdministratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDelegatedAdministratorsDelegatedAdministrator)(nil)).Elem()
}

func (o GetDelegatedAdministratorsDelegatedAdministratorArrayOutput) ToGetDelegatedAdministratorsDelegatedAdministratorArrayOutput() GetDelegatedAdministratorsDelegatedAdministratorArrayOutput {
	return o
}

func (o GetDelegatedAdministratorsDelegatedAdministratorArrayOutput) ToGetDelegatedAdministratorsDelegatedAdministratorArrayOutputWithContext(ctx context.Context) GetDelegatedAdministratorsDelegatedAdministratorArrayOutput {
	return o
}

func (o GetDelegatedAdministratorsDelegatedAdministratorArrayOutput) Index(i pulumi.IntInput) GetDelegatedAdministratorsDelegatedAdministratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDelegatedAdministratorsDelegatedAdministrator {
		return vs[0].([]GetDelegatedAdministratorsDelegatedAdministrator)[vs[1].(int)]
	}).(GetDelegatedAdministratorsDelegatedAdministratorOutput)
}

type GetDelegatedServicesDelegatedService struct {
	// The date that the account became a delegated administrator for this service.
	DelegationEnabledDate string `pulumi:"delegationEnabledDate"`
	// The name of an AWS service that can request an operation for the specified service.
	ServicePrincipal string `pulumi:"servicePrincipal"`
}

type GetDelegatedServicesDelegatedServiceOutput struct{ *pulumi.OutputState }

func (GetDelegatedServicesDelegatedServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDelegatedServicesDelegatedService)(nil)).Elem()
}

func (o GetDelegatedServicesDelegatedServiceOutput) ToGetDelegatedServicesDelegatedServiceOutput() GetDelegatedServicesDelegatedServiceOutput {
	return o
}

func (o GetDelegatedServicesDelegatedServiceOutput) ToGetDelegatedServicesDelegatedServiceOutputWithContext(ctx context.Context) GetDelegatedServicesDelegatedServiceOutput {
	return o
}

// The date that the account became a delegated administrator for this service.
func (o GetDelegatedServicesDelegatedServiceOutput) DelegationEnabledDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedServicesDelegatedService) string { return v.DelegationEnabledDate }).(pulumi.StringOutput)
}

// The name of an AWS service that can request an operation for the specified service.
func (o GetDelegatedServicesDelegatedServiceOutput) ServicePrincipal() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedServicesDelegatedService) string { return v.ServicePrincipal }).(pulumi.StringOutput)
}

type GetDelegatedServicesDelegatedServiceArrayOutput struct{ *pulumi.OutputState }

func (GetDelegatedServicesDelegatedServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDelegatedServicesDelegatedService)(nil)).Elem()
}

func (o GetDelegatedServicesDelegatedServiceArrayOutput) ToGetDelegatedServicesDelegatedServiceArrayOutput() GetDelegatedServicesDelegatedServiceArrayOutput {
	return o
}

func (o GetDelegatedServicesDelegatedServiceArrayOutput) ToGetDelegatedServicesDelegatedServiceArrayOutputWithContext(ctx context.Context) GetDelegatedServicesDelegatedServiceArrayOutput {
	return o
}

func (o GetDelegatedServicesDelegatedServiceArrayOutput) Index(i pulumi.IntInput) GetDelegatedServicesDelegatedServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDelegatedServicesDelegatedService {
		return vs[0].([]GetDelegatedServicesDelegatedService)[vs[1].(int)]
	}).(GetDelegatedServicesDelegatedServiceOutput)
}

type GetOrganizationAccount struct {
	// ARN of the root
	Arn string `pulumi:"arn"`
	// Email of the account
	Email string `pulumi:"email"`
	// Identifier of the root
	Id string `pulumi:"id"`
	// The name of the policy type
	Name string `pulumi:"name"`
	// The status of the policy type as it relates to the associated root
	Status string `pulumi:"status"`
}

type GetOrganizationNonMasterAccount struct {
	// ARN of the root
	Arn string `pulumi:"arn"`
	// Email of the account
	Email string `pulumi:"email"`
	// Identifier of the root
	Id string `pulumi:"id"`
	// The name of the policy type
	Name string `pulumi:"name"`
	// The status of the policy type as it relates to the associated root
	Status string `pulumi:"status"`
}

type GetOrganizationRoot struct {
	// ARN of the root
	Arn string `pulumi:"arn"`
	// Identifier of the root
	Id string `pulumi:"id"`
	// The name of the policy type
	Name string `pulumi:"name"`
	// List of policy types enabled for this root. All elements have these attributes:
	PolicyTypes []GetOrganizationRootPolicyType `pulumi:"policyTypes"`
}

type GetOrganizationRootPolicyType struct {
	// The status of the policy type as it relates to the associated root
	Status string `pulumi:"status"`
	Type   string `pulumi:"type"`
}

type GetOrganizationalUnitsChildren struct {
	// ARN of the organizational unit
	Arn string `pulumi:"arn"`
	// Parent identifier of the organizational units.
	Id string `pulumi:"id"`
	// Name of the organizational unit
	Name string `pulumi:"name"`
}

type GetOrganizationalUnitsChildrenOutput struct{ *pulumi.OutputState }

func (GetOrganizationalUnitsChildrenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationalUnitsChildren)(nil)).Elem()
}

func (o GetOrganizationalUnitsChildrenOutput) ToGetOrganizationalUnitsChildrenOutput() GetOrganizationalUnitsChildrenOutput {
	return o
}

func (o GetOrganizationalUnitsChildrenOutput) ToGetOrganizationalUnitsChildrenOutputWithContext(ctx context.Context) GetOrganizationalUnitsChildrenOutput {
	return o
}

// ARN of the organizational unit
func (o GetOrganizationalUnitsChildrenOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationalUnitsChildren) string { return v.Arn }).(pulumi.StringOutput)
}

// Parent identifier of the organizational units.
func (o GetOrganizationalUnitsChildrenOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationalUnitsChildren) string { return v.Id }).(pulumi.StringOutput)
}

// Name of the organizational unit
func (o GetOrganizationalUnitsChildrenOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationalUnitsChildren) string { return v.Name }).(pulumi.StringOutput)
}

type GetOrganizationalUnitsChildrenArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationalUnitsChildrenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationalUnitsChildren)(nil)).Elem()
}

func (o GetOrganizationalUnitsChildrenArrayOutput) ToGetOrganizationalUnitsChildrenArrayOutput() GetOrganizationalUnitsChildrenArrayOutput {
	return o
}

func (o GetOrganizationalUnitsChildrenArrayOutput) ToGetOrganizationalUnitsChildrenArrayOutputWithContext(ctx context.Context) GetOrganizationalUnitsChildrenArrayOutput {
	return o
}

func (o GetOrganizationalUnitsChildrenArrayOutput) Index(i pulumi.IntInput) GetOrganizationalUnitsChildrenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationalUnitsChildren {
		return vs[0].([]GetOrganizationalUnitsChildren)[vs[1].(int)]
	}).(GetOrganizationalUnitsChildrenOutput)
}

func init() {
	pulumi.RegisterOutputType(OrganizationAccountOutput{})
	pulumi.RegisterOutputType(OrganizationAccountArrayOutput{})
	pulumi.RegisterOutputType(OrganizationNonMasterAccountOutput{})
	pulumi.RegisterOutputType(OrganizationNonMasterAccountArrayOutput{})
	pulumi.RegisterOutputType(OrganizationRootOutput{})
	pulumi.RegisterOutputType(OrganizationRootArrayOutput{})
	pulumi.RegisterOutputType(OrganizationRootPolicyTypeOutput{})
	pulumi.RegisterOutputType(OrganizationRootPolicyTypeArrayOutput{})
	pulumi.RegisterOutputType(OrganizationalUnitAccountOutput{})
	pulumi.RegisterOutputType(OrganizationalUnitAccountArrayOutput{})
	pulumi.RegisterOutputType(GetDelegatedAdministratorsDelegatedAdministratorOutput{})
	pulumi.RegisterOutputType(GetDelegatedAdministratorsDelegatedAdministratorArrayOutput{})
	pulumi.RegisterOutputType(GetDelegatedServicesDelegatedServiceOutput{})
	pulumi.RegisterOutputType(GetDelegatedServicesDelegatedServiceArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationalUnitsChildrenOutput{})
	pulumi.RegisterOutputType(GetOrganizationalUnitsChildrenArrayOutput{})
}
