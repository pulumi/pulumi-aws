// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organizations

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Get a list of AWS accounts that are designated as delegated administrators in this organization
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := organizations.GetDelegatedAdministrators(ctx, &organizations.GetDelegatedAdministratorsArgs{
//				ServicePrincipal: pulumi.StringRef("SERVICE PRINCIPAL"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetDelegatedAdministrators(ctx *pulumi.Context, args *GetDelegatedAdministratorsArgs, opts ...pulumi.InvokeOption) (*GetDelegatedAdministratorsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDelegatedAdministratorsResult
	err := ctx.Invoke("aws:organizations/getDelegatedAdministrators:getDelegatedAdministrators", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDelegatedAdministrators.
type GetDelegatedAdministratorsArgs struct {
	// Specifies a service principal name. If specified, then the operation lists the delegated administrators only for the specified service. If you don't specify a service principal, the operation lists all delegated administrators for all services in your organization.
	ServicePrincipal *string `pulumi:"servicePrincipal"`
}

// A collection of values returned by getDelegatedAdministrators.
type GetDelegatedAdministratorsResult struct {
	// The list of delegated administrators in your organization, which have the following attributes:
	DelegatedAdministrators []GetDelegatedAdministratorsDelegatedAdministrator `pulumi:"delegatedAdministrators"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	ServicePrincipal *string `pulumi:"servicePrincipal"`
}

func GetDelegatedAdministratorsOutput(ctx *pulumi.Context, args GetDelegatedAdministratorsOutputArgs, opts ...pulumi.InvokeOption) GetDelegatedAdministratorsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDelegatedAdministratorsResult, error) {
			args := v.(GetDelegatedAdministratorsArgs)
			r, err := GetDelegatedAdministrators(ctx, &args, opts...)
			var s GetDelegatedAdministratorsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDelegatedAdministratorsResultOutput)
}

// A collection of arguments for invoking getDelegatedAdministrators.
type GetDelegatedAdministratorsOutputArgs struct {
	// Specifies a service principal name. If specified, then the operation lists the delegated administrators only for the specified service. If you don't specify a service principal, the operation lists all delegated administrators for all services in your organization.
	ServicePrincipal pulumi.StringPtrInput `pulumi:"servicePrincipal"`
}

func (GetDelegatedAdministratorsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDelegatedAdministratorsArgs)(nil)).Elem()
}

// A collection of values returned by getDelegatedAdministrators.
type GetDelegatedAdministratorsResultOutput struct{ *pulumi.OutputState }

func (GetDelegatedAdministratorsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDelegatedAdministratorsResult)(nil)).Elem()
}

func (o GetDelegatedAdministratorsResultOutput) ToGetDelegatedAdministratorsResultOutput() GetDelegatedAdministratorsResultOutput {
	return o
}

func (o GetDelegatedAdministratorsResultOutput) ToGetDelegatedAdministratorsResultOutputWithContext(ctx context.Context) GetDelegatedAdministratorsResultOutput {
	return o
}

func (o GetDelegatedAdministratorsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetDelegatedAdministratorsResult] {
	return pulumix.Output[GetDelegatedAdministratorsResult]{
		OutputState: o.OutputState,
	}
}

// The list of delegated administrators in your organization, which have the following attributes:
func (o GetDelegatedAdministratorsResultOutput) DelegatedAdministrators() GetDelegatedAdministratorsDelegatedAdministratorArrayOutput {
	return o.ApplyT(func(v GetDelegatedAdministratorsResult) []GetDelegatedAdministratorsDelegatedAdministrator {
		return v.DelegatedAdministrators
	}).(GetDelegatedAdministratorsDelegatedAdministratorArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDelegatedAdministratorsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDelegatedAdministratorsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDelegatedAdministratorsResultOutput) ServicePrincipal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDelegatedAdministratorsResult) *string { return v.ServicePrincipal }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDelegatedAdministratorsResultOutput{})
}
