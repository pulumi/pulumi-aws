// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datasync

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type LocationHdfs struct {
	pulumi.CustomResourceState

	AgentArns          pulumi.StringArrayOutput              `pulumi:"agentArns"`
	Arn                pulumi.StringOutput                   `pulumi:"arn"`
	AuthenticationType pulumi.StringPtrOutput                `pulumi:"authenticationType"`
	BlockSize          pulumi.IntPtrOutput                   `pulumi:"blockSize"`
	KerberosKeytab     pulumi.StringPtrOutput                `pulumi:"kerberosKeytab"`
	KerberosKrb5Conf   pulumi.StringPtrOutput                `pulumi:"kerberosKrb5Conf"`
	KerberosPrincipal  pulumi.StringPtrOutput                `pulumi:"kerberosPrincipal"`
	KmsKeyProviderUri  pulumi.StringPtrOutput                `pulumi:"kmsKeyProviderUri"`
	NameNodes          LocationHdfsNameNodeArrayOutput       `pulumi:"nameNodes"`
	QopConfiguration   LocationHdfsQopConfigurationPtrOutput `pulumi:"qopConfiguration"`
	ReplicationFactor  pulumi.IntPtrOutput                   `pulumi:"replicationFactor"`
	SimpleUser         pulumi.StringPtrOutput                `pulumi:"simpleUser"`
	Subdirectory       pulumi.StringPtrOutput                `pulumi:"subdirectory"`
	Tags               pulumi.StringMapOutput                `pulumi:"tags"`
	TagsAll            pulumi.StringMapOutput                `pulumi:"tagsAll"`
	Uri                pulumi.StringOutput                   `pulumi:"uri"`
}

// NewLocationHdfs registers a new resource with the given unique name, arguments, and options.
func NewLocationHdfs(ctx *pulumi.Context,
	name string, args *LocationHdfsArgs, opts ...pulumi.ResourceOption) (*LocationHdfs, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AgentArns == nil {
		return nil, errors.New("invalid value for required argument 'AgentArns'")
	}
	if args.NameNodes == nil {
		return nil, errors.New("invalid value for required argument 'NameNodes'")
	}
	var resource LocationHdfs
	err := ctx.RegisterResource("aws:datasync/locationHdfs:LocationHdfs", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetLocationHdfs gets an existing LocationHdfs resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetLocationHdfs(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *LocationHdfsState, opts ...pulumi.ResourceOption) (*LocationHdfs, error) {
	var resource LocationHdfs
	err := ctx.ReadResource("aws:datasync/locationHdfs:LocationHdfs", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering LocationHdfs resources.
type locationHdfsState struct {
	AgentArns          []string                      `pulumi:"agentArns"`
	Arn                *string                       `pulumi:"arn"`
	AuthenticationType *string                       `pulumi:"authenticationType"`
	BlockSize          *int                          `pulumi:"blockSize"`
	KerberosKeytab     *string                       `pulumi:"kerberosKeytab"`
	KerberosKrb5Conf   *string                       `pulumi:"kerberosKrb5Conf"`
	KerberosPrincipal  *string                       `pulumi:"kerberosPrincipal"`
	KmsKeyProviderUri  *string                       `pulumi:"kmsKeyProviderUri"`
	NameNodes          []LocationHdfsNameNode        `pulumi:"nameNodes"`
	QopConfiguration   *LocationHdfsQopConfiguration `pulumi:"qopConfiguration"`
	ReplicationFactor  *int                          `pulumi:"replicationFactor"`
	SimpleUser         *string                       `pulumi:"simpleUser"`
	Subdirectory       *string                       `pulumi:"subdirectory"`
	Tags               map[string]string             `pulumi:"tags"`
	TagsAll            map[string]string             `pulumi:"tagsAll"`
	Uri                *string                       `pulumi:"uri"`
}

type LocationHdfsState struct {
	AgentArns          pulumi.StringArrayInput
	Arn                pulumi.StringPtrInput
	AuthenticationType pulumi.StringPtrInput
	BlockSize          pulumi.IntPtrInput
	KerberosKeytab     pulumi.StringPtrInput
	KerberosKrb5Conf   pulumi.StringPtrInput
	KerberosPrincipal  pulumi.StringPtrInput
	KmsKeyProviderUri  pulumi.StringPtrInput
	NameNodes          LocationHdfsNameNodeArrayInput
	QopConfiguration   LocationHdfsQopConfigurationPtrInput
	ReplicationFactor  pulumi.IntPtrInput
	SimpleUser         pulumi.StringPtrInput
	Subdirectory       pulumi.StringPtrInput
	Tags               pulumi.StringMapInput
	TagsAll            pulumi.StringMapInput
	Uri                pulumi.StringPtrInput
}

func (LocationHdfsState) ElementType() reflect.Type {
	return reflect.TypeOf((*locationHdfsState)(nil)).Elem()
}

type locationHdfsArgs struct {
	AgentArns          []string                      `pulumi:"agentArns"`
	AuthenticationType *string                       `pulumi:"authenticationType"`
	BlockSize          *int                          `pulumi:"blockSize"`
	KerberosKeytab     *string                       `pulumi:"kerberosKeytab"`
	KerberosKrb5Conf   *string                       `pulumi:"kerberosKrb5Conf"`
	KerberosPrincipal  *string                       `pulumi:"kerberosPrincipal"`
	KmsKeyProviderUri  *string                       `pulumi:"kmsKeyProviderUri"`
	NameNodes          []LocationHdfsNameNode        `pulumi:"nameNodes"`
	QopConfiguration   *LocationHdfsQopConfiguration `pulumi:"qopConfiguration"`
	ReplicationFactor  *int                          `pulumi:"replicationFactor"`
	SimpleUser         *string                       `pulumi:"simpleUser"`
	Subdirectory       *string                       `pulumi:"subdirectory"`
	Tags               map[string]string             `pulumi:"tags"`
}

// The set of arguments for constructing a LocationHdfs resource.
type LocationHdfsArgs struct {
	AgentArns          pulumi.StringArrayInput
	AuthenticationType pulumi.StringPtrInput
	BlockSize          pulumi.IntPtrInput
	KerberosKeytab     pulumi.StringPtrInput
	KerberosKrb5Conf   pulumi.StringPtrInput
	KerberosPrincipal  pulumi.StringPtrInput
	KmsKeyProviderUri  pulumi.StringPtrInput
	NameNodes          LocationHdfsNameNodeArrayInput
	QopConfiguration   LocationHdfsQopConfigurationPtrInput
	ReplicationFactor  pulumi.IntPtrInput
	SimpleUser         pulumi.StringPtrInput
	Subdirectory       pulumi.StringPtrInput
	Tags               pulumi.StringMapInput
}

func (LocationHdfsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*locationHdfsArgs)(nil)).Elem()
}

type LocationHdfsInput interface {
	pulumi.Input

	ToLocationHdfsOutput() LocationHdfsOutput
	ToLocationHdfsOutputWithContext(ctx context.Context) LocationHdfsOutput
}

func (*LocationHdfs) ElementType() reflect.Type {
	return reflect.TypeOf((**LocationHdfs)(nil)).Elem()
}

func (i *LocationHdfs) ToLocationHdfsOutput() LocationHdfsOutput {
	return i.ToLocationHdfsOutputWithContext(context.Background())
}

func (i *LocationHdfs) ToLocationHdfsOutputWithContext(ctx context.Context) LocationHdfsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocationHdfsOutput)
}

// LocationHdfsArrayInput is an input type that accepts LocationHdfsArray and LocationHdfsArrayOutput values.
// You can construct a concrete instance of `LocationHdfsArrayInput` via:
//
//	LocationHdfsArray{ LocationHdfsArgs{...} }
type LocationHdfsArrayInput interface {
	pulumi.Input

	ToLocationHdfsArrayOutput() LocationHdfsArrayOutput
	ToLocationHdfsArrayOutputWithContext(context.Context) LocationHdfsArrayOutput
}

type LocationHdfsArray []LocationHdfsInput

func (LocationHdfsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LocationHdfs)(nil)).Elem()
}

func (i LocationHdfsArray) ToLocationHdfsArrayOutput() LocationHdfsArrayOutput {
	return i.ToLocationHdfsArrayOutputWithContext(context.Background())
}

func (i LocationHdfsArray) ToLocationHdfsArrayOutputWithContext(ctx context.Context) LocationHdfsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocationHdfsArrayOutput)
}

// LocationHdfsMapInput is an input type that accepts LocationHdfsMap and LocationHdfsMapOutput values.
// You can construct a concrete instance of `LocationHdfsMapInput` via:
//
//	LocationHdfsMap{ "key": LocationHdfsArgs{...} }
type LocationHdfsMapInput interface {
	pulumi.Input

	ToLocationHdfsMapOutput() LocationHdfsMapOutput
	ToLocationHdfsMapOutputWithContext(context.Context) LocationHdfsMapOutput
}

type LocationHdfsMap map[string]LocationHdfsInput

func (LocationHdfsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LocationHdfs)(nil)).Elem()
}

func (i LocationHdfsMap) ToLocationHdfsMapOutput() LocationHdfsMapOutput {
	return i.ToLocationHdfsMapOutputWithContext(context.Background())
}

func (i LocationHdfsMap) ToLocationHdfsMapOutputWithContext(ctx context.Context) LocationHdfsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LocationHdfsMapOutput)
}

type LocationHdfsOutput struct{ *pulumi.OutputState }

func (LocationHdfsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LocationHdfs)(nil)).Elem()
}

func (o LocationHdfsOutput) ToLocationHdfsOutput() LocationHdfsOutput {
	return o
}

func (o LocationHdfsOutput) ToLocationHdfsOutputWithContext(ctx context.Context) LocationHdfsOutput {
	return o
}

func (o LocationHdfsOutput) AgentArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LocationHdfs) pulumi.StringArrayOutput { return v.AgentArns }).(pulumi.StringArrayOutput)
}

func (o LocationHdfsOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *LocationHdfs) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o LocationHdfsOutput) AuthenticationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocationHdfs) pulumi.StringPtrOutput { return v.AuthenticationType }).(pulumi.StringPtrOutput)
}

func (o LocationHdfsOutput) BlockSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LocationHdfs) pulumi.IntPtrOutput { return v.BlockSize }).(pulumi.IntPtrOutput)
}

func (o LocationHdfsOutput) KerberosKeytab() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocationHdfs) pulumi.StringPtrOutput { return v.KerberosKeytab }).(pulumi.StringPtrOutput)
}

func (o LocationHdfsOutput) KerberosKrb5Conf() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocationHdfs) pulumi.StringPtrOutput { return v.KerberosKrb5Conf }).(pulumi.StringPtrOutput)
}

func (o LocationHdfsOutput) KerberosPrincipal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocationHdfs) pulumi.StringPtrOutput { return v.KerberosPrincipal }).(pulumi.StringPtrOutput)
}

func (o LocationHdfsOutput) KmsKeyProviderUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocationHdfs) pulumi.StringPtrOutput { return v.KmsKeyProviderUri }).(pulumi.StringPtrOutput)
}

func (o LocationHdfsOutput) NameNodes() LocationHdfsNameNodeArrayOutput {
	return o.ApplyT(func(v *LocationHdfs) LocationHdfsNameNodeArrayOutput { return v.NameNodes }).(LocationHdfsNameNodeArrayOutput)
}

func (o LocationHdfsOutput) QopConfiguration() LocationHdfsQopConfigurationPtrOutput {
	return o.ApplyT(func(v *LocationHdfs) LocationHdfsQopConfigurationPtrOutput { return v.QopConfiguration }).(LocationHdfsQopConfigurationPtrOutput)
}

func (o LocationHdfsOutput) ReplicationFactor() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LocationHdfs) pulumi.IntPtrOutput { return v.ReplicationFactor }).(pulumi.IntPtrOutput)
}

func (o LocationHdfsOutput) SimpleUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocationHdfs) pulumi.StringPtrOutput { return v.SimpleUser }).(pulumi.StringPtrOutput)
}

func (o LocationHdfsOutput) Subdirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LocationHdfs) pulumi.StringPtrOutput { return v.Subdirectory }).(pulumi.StringPtrOutput)
}

func (o LocationHdfsOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LocationHdfs) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LocationHdfsOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *LocationHdfs) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o LocationHdfsOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v *LocationHdfs) pulumi.StringOutput { return v.Uri }).(pulumi.StringOutput)
}

type LocationHdfsArrayOutput struct{ *pulumi.OutputState }

func (LocationHdfsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*LocationHdfs)(nil)).Elem()
}

func (o LocationHdfsArrayOutput) ToLocationHdfsArrayOutput() LocationHdfsArrayOutput {
	return o
}

func (o LocationHdfsArrayOutput) ToLocationHdfsArrayOutputWithContext(ctx context.Context) LocationHdfsArrayOutput {
	return o
}

func (o LocationHdfsArrayOutput) Index(i pulumi.IntInput) LocationHdfsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *LocationHdfs {
		return vs[0].([]*LocationHdfs)[vs[1].(int)]
	}).(LocationHdfsOutput)
}

type LocationHdfsMapOutput struct{ *pulumi.OutputState }

func (LocationHdfsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*LocationHdfs)(nil)).Elem()
}

func (o LocationHdfsMapOutput) ToLocationHdfsMapOutput() LocationHdfsMapOutput {
	return o
}

func (o LocationHdfsMapOutput) ToLocationHdfsMapOutputWithContext(ctx context.Context) LocationHdfsMapOutput {
	return o
}

func (o LocationHdfsMapOutput) MapIndex(k pulumi.StringInput) LocationHdfsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *LocationHdfs {
		return vs[0].(map[string]*LocationHdfs)[vs[1].(string)]
	}).(LocationHdfsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*LocationHdfsInput)(nil)).Elem(), &LocationHdfs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocationHdfsArrayInput)(nil)).Elem(), LocationHdfsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LocationHdfsMapInput)(nil)).Elem(), LocationHdfsMap{})
	pulumi.RegisterOutputType(LocationHdfsOutput{})
	pulumi.RegisterOutputType(LocationHdfsArrayOutput{})
	pulumi.RegisterOutputType(LocationHdfsMapOutput{})
}
