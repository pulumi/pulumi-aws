// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securitylake

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AwsLogSourceSource struct {
	// Specify the AWS account information where you want to enable Security Lake.
	Accounts []string `pulumi:"accounts"`
	// Specify the Regions where you want to enable Security Lake.
	Regions []string `pulumi:"regions"`
	// The name for a AWS source. This must be a Regionally unique value. Valid values: `ROUTE53`, `VPC_FLOW`, `SH_FINDINGS`, `CLOUD_TRAIL_MGMT`, `LAMBDA_EXECUTION`, `S3_DATA`.
	SourceName string `pulumi:"sourceName"`
	// The version for a AWS source. This must be a Regionally unique value.
	SourceVersion *string `pulumi:"sourceVersion"`
}

// AwsLogSourceSourceInput is an input type that accepts AwsLogSourceSourceArgs and AwsLogSourceSourceOutput values.
// You can construct a concrete instance of `AwsLogSourceSourceInput` via:
//
//	AwsLogSourceSourceArgs{...}
type AwsLogSourceSourceInput interface {
	pulumi.Input

	ToAwsLogSourceSourceOutput() AwsLogSourceSourceOutput
	ToAwsLogSourceSourceOutputWithContext(context.Context) AwsLogSourceSourceOutput
}

type AwsLogSourceSourceArgs struct {
	// Specify the AWS account information where you want to enable Security Lake.
	Accounts pulumi.StringArrayInput `pulumi:"accounts"`
	// Specify the Regions where you want to enable Security Lake.
	Regions pulumi.StringArrayInput `pulumi:"regions"`
	// The name for a AWS source. This must be a Regionally unique value. Valid values: `ROUTE53`, `VPC_FLOW`, `SH_FINDINGS`, `CLOUD_TRAIL_MGMT`, `LAMBDA_EXECUTION`, `S3_DATA`.
	SourceName pulumi.StringInput `pulumi:"sourceName"`
	// The version for a AWS source. This must be a Regionally unique value.
	SourceVersion pulumi.StringPtrInput `pulumi:"sourceVersion"`
}

func (AwsLogSourceSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsLogSourceSource)(nil)).Elem()
}

func (i AwsLogSourceSourceArgs) ToAwsLogSourceSourceOutput() AwsLogSourceSourceOutput {
	return i.ToAwsLogSourceSourceOutputWithContext(context.Background())
}

func (i AwsLogSourceSourceArgs) ToAwsLogSourceSourceOutputWithContext(ctx context.Context) AwsLogSourceSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsLogSourceSourceOutput)
}

func (i AwsLogSourceSourceArgs) ToAwsLogSourceSourcePtrOutput() AwsLogSourceSourcePtrOutput {
	return i.ToAwsLogSourceSourcePtrOutputWithContext(context.Background())
}

func (i AwsLogSourceSourceArgs) ToAwsLogSourceSourcePtrOutputWithContext(ctx context.Context) AwsLogSourceSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsLogSourceSourceOutput).ToAwsLogSourceSourcePtrOutputWithContext(ctx)
}

// AwsLogSourceSourcePtrInput is an input type that accepts AwsLogSourceSourceArgs, AwsLogSourceSourcePtr and AwsLogSourceSourcePtrOutput values.
// You can construct a concrete instance of `AwsLogSourceSourcePtrInput` via:
//
//	        AwsLogSourceSourceArgs{...}
//
//	or:
//
//	        nil
type AwsLogSourceSourcePtrInput interface {
	pulumi.Input

	ToAwsLogSourceSourcePtrOutput() AwsLogSourceSourcePtrOutput
	ToAwsLogSourceSourcePtrOutputWithContext(context.Context) AwsLogSourceSourcePtrOutput
}

type awsLogSourceSourcePtrType AwsLogSourceSourceArgs

func AwsLogSourceSourcePtr(v *AwsLogSourceSourceArgs) AwsLogSourceSourcePtrInput {
	return (*awsLogSourceSourcePtrType)(v)
}

func (*awsLogSourceSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsLogSourceSource)(nil)).Elem()
}

func (i *awsLogSourceSourcePtrType) ToAwsLogSourceSourcePtrOutput() AwsLogSourceSourcePtrOutput {
	return i.ToAwsLogSourceSourcePtrOutputWithContext(context.Background())
}

func (i *awsLogSourceSourcePtrType) ToAwsLogSourceSourcePtrOutputWithContext(ctx context.Context) AwsLogSourceSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AwsLogSourceSourcePtrOutput)
}

type AwsLogSourceSourceOutput struct{ *pulumi.OutputState }

func (AwsLogSourceSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AwsLogSourceSource)(nil)).Elem()
}

func (o AwsLogSourceSourceOutput) ToAwsLogSourceSourceOutput() AwsLogSourceSourceOutput {
	return o
}

func (o AwsLogSourceSourceOutput) ToAwsLogSourceSourceOutputWithContext(ctx context.Context) AwsLogSourceSourceOutput {
	return o
}

func (o AwsLogSourceSourceOutput) ToAwsLogSourceSourcePtrOutput() AwsLogSourceSourcePtrOutput {
	return o.ToAwsLogSourceSourcePtrOutputWithContext(context.Background())
}

func (o AwsLogSourceSourceOutput) ToAwsLogSourceSourcePtrOutputWithContext(ctx context.Context) AwsLogSourceSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AwsLogSourceSource) *AwsLogSourceSource {
		return &v
	}).(AwsLogSourceSourcePtrOutput)
}

// Specify the AWS account information where you want to enable Security Lake.
func (o AwsLogSourceSourceOutput) Accounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsLogSourceSource) []string { return v.Accounts }).(pulumi.StringArrayOutput)
}

// Specify the Regions where you want to enable Security Lake.
func (o AwsLogSourceSourceOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AwsLogSourceSource) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

// The name for a AWS source. This must be a Regionally unique value. Valid values: `ROUTE53`, `VPC_FLOW`, `SH_FINDINGS`, `CLOUD_TRAIL_MGMT`, `LAMBDA_EXECUTION`, `S3_DATA`.
func (o AwsLogSourceSourceOutput) SourceName() pulumi.StringOutput {
	return o.ApplyT(func(v AwsLogSourceSource) string { return v.SourceName }).(pulumi.StringOutput)
}

// The version for a AWS source. This must be a Regionally unique value.
func (o AwsLogSourceSourceOutput) SourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AwsLogSourceSource) *string { return v.SourceVersion }).(pulumi.StringPtrOutput)
}

type AwsLogSourceSourcePtrOutput struct{ *pulumi.OutputState }

func (AwsLogSourceSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AwsLogSourceSource)(nil)).Elem()
}

func (o AwsLogSourceSourcePtrOutput) ToAwsLogSourceSourcePtrOutput() AwsLogSourceSourcePtrOutput {
	return o
}

func (o AwsLogSourceSourcePtrOutput) ToAwsLogSourceSourcePtrOutputWithContext(ctx context.Context) AwsLogSourceSourcePtrOutput {
	return o
}

func (o AwsLogSourceSourcePtrOutput) Elem() AwsLogSourceSourceOutput {
	return o.ApplyT(func(v *AwsLogSourceSource) AwsLogSourceSource {
		if v != nil {
			return *v
		}
		var ret AwsLogSourceSource
		return ret
	}).(AwsLogSourceSourceOutput)
}

// Specify the AWS account information where you want to enable Security Lake.
func (o AwsLogSourceSourcePtrOutput) Accounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsLogSourceSource) []string {
		if v == nil {
			return nil
		}
		return v.Accounts
	}).(pulumi.StringArrayOutput)
}

// Specify the Regions where you want to enable Security Lake.
func (o AwsLogSourceSourcePtrOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AwsLogSourceSource) []string {
		if v == nil {
			return nil
		}
		return v.Regions
	}).(pulumi.StringArrayOutput)
}

// The name for a AWS source. This must be a Regionally unique value. Valid values: `ROUTE53`, `VPC_FLOW`, `SH_FINDINGS`, `CLOUD_TRAIL_MGMT`, `LAMBDA_EXECUTION`, `S3_DATA`.
func (o AwsLogSourceSourcePtrOutput) SourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsLogSourceSource) *string {
		if v == nil {
			return nil
		}
		return &v.SourceName
	}).(pulumi.StringPtrOutput)
}

// The version for a AWS source. This must be a Regionally unique value.
func (o AwsLogSourceSourcePtrOutput) SourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AwsLogSourceSource) *string {
		if v == nil {
			return nil
		}
		return v.SourceVersion
	}).(pulumi.StringPtrOutput)
}

type CustomLogSourceAttribute struct {
	// The ARN of the AWS Glue crawler.
	CrawlerArn string `pulumi:"crawlerArn"`
	// The ARN of the AWS Glue database where results are written.
	DatabaseArn string `pulumi:"databaseArn"`
	// The ARN of the AWS Glue table.
	TableArn string `pulumi:"tableArn"`
}

// CustomLogSourceAttributeInput is an input type that accepts CustomLogSourceAttributeArgs and CustomLogSourceAttributeOutput values.
// You can construct a concrete instance of `CustomLogSourceAttributeInput` via:
//
//	CustomLogSourceAttributeArgs{...}
type CustomLogSourceAttributeInput interface {
	pulumi.Input

	ToCustomLogSourceAttributeOutput() CustomLogSourceAttributeOutput
	ToCustomLogSourceAttributeOutputWithContext(context.Context) CustomLogSourceAttributeOutput
}

type CustomLogSourceAttributeArgs struct {
	// The ARN of the AWS Glue crawler.
	CrawlerArn pulumi.StringInput `pulumi:"crawlerArn"`
	// The ARN of the AWS Glue database where results are written.
	DatabaseArn pulumi.StringInput `pulumi:"databaseArn"`
	// The ARN of the AWS Glue table.
	TableArn pulumi.StringInput `pulumi:"tableArn"`
}

func (CustomLogSourceAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomLogSourceAttribute)(nil)).Elem()
}

func (i CustomLogSourceAttributeArgs) ToCustomLogSourceAttributeOutput() CustomLogSourceAttributeOutput {
	return i.ToCustomLogSourceAttributeOutputWithContext(context.Background())
}

func (i CustomLogSourceAttributeArgs) ToCustomLogSourceAttributeOutputWithContext(ctx context.Context) CustomLogSourceAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLogSourceAttributeOutput)
}

// CustomLogSourceAttributeArrayInput is an input type that accepts CustomLogSourceAttributeArray and CustomLogSourceAttributeArrayOutput values.
// You can construct a concrete instance of `CustomLogSourceAttributeArrayInput` via:
//
//	CustomLogSourceAttributeArray{ CustomLogSourceAttributeArgs{...} }
type CustomLogSourceAttributeArrayInput interface {
	pulumi.Input

	ToCustomLogSourceAttributeArrayOutput() CustomLogSourceAttributeArrayOutput
	ToCustomLogSourceAttributeArrayOutputWithContext(context.Context) CustomLogSourceAttributeArrayOutput
}

type CustomLogSourceAttributeArray []CustomLogSourceAttributeInput

func (CustomLogSourceAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomLogSourceAttribute)(nil)).Elem()
}

func (i CustomLogSourceAttributeArray) ToCustomLogSourceAttributeArrayOutput() CustomLogSourceAttributeArrayOutput {
	return i.ToCustomLogSourceAttributeArrayOutputWithContext(context.Background())
}

func (i CustomLogSourceAttributeArray) ToCustomLogSourceAttributeArrayOutputWithContext(ctx context.Context) CustomLogSourceAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLogSourceAttributeArrayOutput)
}

type CustomLogSourceAttributeOutput struct{ *pulumi.OutputState }

func (CustomLogSourceAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomLogSourceAttribute)(nil)).Elem()
}

func (o CustomLogSourceAttributeOutput) ToCustomLogSourceAttributeOutput() CustomLogSourceAttributeOutput {
	return o
}

func (o CustomLogSourceAttributeOutput) ToCustomLogSourceAttributeOutputWithContext(ctx context.Context) CustomLogSourceAttributeOutput {
	return o
}

// The ARN of the AWS Glue crawler.
func (o CustomLogSourceAttributeOutput) CrawlerArn() pulumi.StringOutput {
	return o.ApplyT(func(v CustomLogSourceAttribute) string { return v.CrawlerArn }).(pulumi.StringOutput)
}

// The ARN of the AWS Glue database where results are written.
func (o CustomLogSourceAttributeOutput) DatabaseArn() pulumi.StringOutput {
	return o.ApplyT(func(v CustomLogSourceAttribute) string { return v.DatabaseArn }).(pulumi.StringOutput)
}

// The ARN of the AWS Glue table.
func (o CustomLogSourceAttributeOutput) TableArn() pulumi.StringOutput {
	return o.ApplyT(func(v CustomLogSourceAttribute) string { return v.TableArn }).(pulumi.StringOutput)
}

type CustomLogSourceAttributeArrayOutput struct{ *pulumi.OutputState }

func (CustomLogSourceAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomLogSourceAttribute)(nil)).Elem()
}

func (o CustomLogSourceAttributeArrayOutput) ToCustomLogSourceAttributeArrayOutput() CustomLogSourceAttributeArrayOutput {
	return o
}

func (o CustomLogSourceAttributeArrayOutput) ToCustomLogSourceAttributeArrayOutputWithContext(ctx context.Context) CustomLogSourceAttributeArrayOutput {
	return o
}

func (o CustomLogSourceAttributeArrayOutput) Index(i pulumi.IntInput) CustomLogSourceAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomLogSourceAttribute {
		return vs[0].([]CustomLogSourceAttribute)[vs[1].(int)]
	}).(CustomLogSourceAttributeOutput)
}

type CustomLogSourceConfiguration struct {
	// The configuration for the Glue Crawler for the third-party custom source.
	CrawlerConfiguration *CustomLogSourceConfigurationCrawlerConfiguration `pulumi:"crawlerConfiguration"`
	// The identity of the log provider for the third-party custom source.
	ProviderIdentity *CustomLogSourceConfigurationProviderIdentity `pulumi:"providerIdentity"`
}

// CustomLogSourceConfigurationInput is an input type that accepts CustomLogSourceConfigurationArgs and CustomLogSourceConfigurationOutput values.
// You can construct a concrete instance of `CustomLogSourceConfigurationInput` via:
//
//	CustomLogSourceConfigurationArgs{...}
type CustomLogSourceConfigurationInput interface {
	pulumi.Input

	ToCustomLogSourceConfigurationOutput() CustomLogSourceConfigurationOutput
	ToCustomLogSourceConfigurationOutputWithContext(context.Context) CustomLogSourceConfigurationOutput
}

type CustomLogSourceConfigurationArgs struct {
	// The configuration for the Glue Crawler for the third-party custom source.
	CrawlerConfiguration CustomLogSourceConfigurationCrawlerConfigurationPtrInput `pulumi:"crawlerConfiguration"`
	// The identity of the log provider for the third-party custom source.
	ProviderIdentity CustomLogSourceConfigurationProviderIdentityPtrInput `pulumi:"providerIdentity"`
}

func (CustomLogSourceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomLogSourceConfiguration)(nil)).Elem()
}

func (i CustomLogSourceConfigurationArgs) ToCustomLogSourceConfigurationOutput() CustomLogSourceConfigurationOutput {
	return i.ToCustomLogSourceConfigurationOutputWithContext(context.Background())
}

func (i CustomLogSourceConfigurationArgs) ToCustomLogSourceConfigurationOutputWithContext(ctx context.Context) CustomLogSourceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLogSourceConfigurationOutput)
}

func (i CustomLogSourceConfigurationArgs) ToCustomLogSourceConfigurationPtrOutput() CustomLogSourceConfigurationPtrOutput {
	return i.ToCustomLogSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i CustomLogSourceConfigurationArgs) ToCustomLogSourceConfigurationPtrOutputWithContext(ctx context.Context) CustomLogSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLogSourceConfigurationOutput).ToCustomLogSourceConfigurationPtrOutputWithContext(ctx)
}

// CustomLogSourceConfigurationPtrInput is an input type that accepts CustomLogSourceConfigurationArgs, CustomLogSourceConfigurationPtr and CustomLogSourceConfigurationPtrOutput values.
// You can construct a concrete instance of `CustomLogSourceConfigurationPtrInput` via:
//
//	        CustomLogSourceConfigurationArgs{...}
//
//	or:
//
//	        nil
type CustomLogSourceConfigurationPtrInput interface {
	pulumi.Input

	ToCustomLogSourceConfigurationPtrOutput() CustomLogSourceConfigurationPtrOutput
	ToCustomLogSourceConfigurationPtrOutputWithContext(context.Context) CustomLogSourceConfigurationPtrOutput
}

type customLogSourceConfigurationPtrType CustomLogSourceConfigurationArgs

func CustomLogSourceConfigurationPtr(v *CustomLogSourceConfigurationArgs) CustomLogSourceConfigurationPtrInput {
	return (*customLogSourceConfigurationPtrType)(v)
}

func (*customLogSourceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomLogSourceConfiguration)(nil)).Elem()
}

func (i *customLogSourceConfigurationPtrType) ToCustomLogSourceConfigurationPtrOutput() CustomLogSourceConfigurationPtrOutput {
	return i.ToCustomLogSourceConfigurationPtrOutputWithContext(context.Background())
}

func (i *customLogSourceConfigurationPtrType) ToCustomLogSourceConfigurationPtrOutputWithContext(ctx context.Context) CustomLogSourceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLogSourceConfigurationPtrOutput)
}

type CustomLogSourceConfigurationOutput struct{ *pulumi.OutputState }

func (CustomLogSourceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomLogSourceConfiguration)(nil)).Elem()
}

func (o CustomLogSourceConfigurationOutput) ToCustomLogSourceConfigurationOutput() CustomLogSourceConfigurationOutput {
	return o
}

func (o CustomLogSourceConfigurationOutput) ToCustomLogSourceConfigurationOutputWithContext(ctx context.Context) CustomLogSourceConfigurationOutput {
	return o
}

func (o CustomLogSourceConfigurationOutput) ToCustomLogSourceConfigurationPtrOutput() CustomLogSourceConfigurationPtrOutput {
	return o.ToCustomLogSourceConfigurationPtrOutputWithContext(context.Background())
}

func (o CustomLogSourceConfigurationOutput) ToCustomLogSourceConfigurationPtrOutputWithContext(ctx context.Context) CustomLogSourceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomLogSourceConfiguration) *CustomLogSourceConfiguration {
		return &v
	}).(CustomLogSourceConfigurationPtrOutput)
}

// The configuration for the Glue Crawler for the third-party custom source.
func (o CustomLogSourceConfigurationOutput) CrawlerConfiguration() CustomLogSourceConfigurationCrawlerConfigurationPtrOutput {
	return o.ApplyT(func(v CustomLogSourceConfiguration) *CustomLogSourceConfigurationCrawlerConfiguration {
		return v.CrawlerConfiguration
	}).(CustomLogSourceConfigurationCrawlerConfigurationPtrOutput)
}

// The identity of the log provider for the third-party custom source.
func (o CustomLogSourceConfigurationOutput) ProviderIdentity() CustomLogSourceConfigurationProviderIdentityPtrOutput {
	return o.ApplyT(func(v CustomLogSourceConfiguration) *CustomLogSourceConfigurationProviderIdentity {
		return v.ProviderIdentity
	}).(CustomLogSourceConfigurationProviderIdentityPtrOutput)
}

type CustomLogSourceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (CustomLogSourceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomLogSourceConfiguration)(nil)).Elem()
}

func (o CustomLogSourceConfigurationPtrOutput) ToCustomLogSourceConfigurationPtrOutput() CustomLogSourceConfigurationPtrOutput {
	return o
}

func (o CustomLogSourceConfigurationPtrOutput) ToCustomLogSourceConfigurationPtrOutputWithContext(ctx context.Context) CustomLogSourceConfigurationPtrOutput {
	return o
}

func (o CustomLogSourceConfigurationPtrOutput) Elem() CustomLogSourceConfigurationOutput {
	return o.ApplyT(func(v *CustomLogSourceConfiguration) CustomLogSourceConfiguration {
		if v != nil {
			return *v
		}
		var ret CustomLogSourceConfiguration
		return ret
	}).(CustomLogSourceConfigurationOutput)
}

// The configuration for the Glue Crawler for the third-party custom source.
func (o CustomLogSourceConfigurationPtrOutput) CrawlerConfiguration() CustomLogSourceConfigurationCrawlerConfigurationPtrOutput {
	return o.ApplyT(func(v *CustomLogSourceConfiguration) *CustomLogSourceConfigurationCrawlerConfiguration {
		if v == nil {
			return nil
		}
		return v.CrawlerConfiguration
	}).(CustomLogSourceConfigurationCrawlerConfigurationPtrOutput)
}

// The identity of the log provider for the third-party custom source.
func (o CustomLogSourceConfigurationPtrOutput) ProviderIdentity() CustomLogSourceConfigurationProviderIdentityPtrOutput {
	return o.ApplyT(func(v *CustomLogSourceConfiguration) *CustomLogSourceConfigurationProviderIdentity {
		if v == nil {
			return nil
		}
		return v.ProviderIdentity
	}).(CustomLogSourceConfigurationProviderIdentityPtrOutput)
}

type CustomLogSourceConfigurationCrawlerConfiguration struct {
	// The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role to be used by the AWS Glue crawler.
	RoleArn string `pulumi:"roleArn"`
}

// CustomLogSourceConfigurationCrawlerConfigurationInput is an input type that accepts CustomLogSourceConfigurationCrawlerConfigurationArgs and CustomLogSourceConfigurationCrawlerConfigurationOutput values.
// You can construct a concrete instance of `CustomLogSourceConfigurationCrawlerConfigurationInput` via:
//
//	CustomLogSourceConfigurationCrawlerConfigurationArgs{...}
type CustomLogSourceConfigurationCrawlerConfigurationInput interface {
	pulumi.Input

	ToCustomLogSourceConfigurationCrawlerConfigurationOutput() CustomLogSourceConfigurationCrawlerConfigurationOutput
	ToCustomLogSourceConfigurationCrawlerConfigurationOutputWithContext(context.Context) CustomLogSourceConfigurationCrawlerConfigurationOutput
}

type CustomLogSourceConfigurationCrawlerConfigurationArgs struct {
	// The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role to be used by the AWS Glue crawler.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (CustomLogSourceConfigurationCrawlerConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomLogSourceConfigurationCrawlerConfiguration)(nil)).Elem()
}

func (i CustomLogSourceConfigurationCrawlerConfigurationArgs) ToCustomLogSourceConfigurationCrawlerConfigurationOutput() CustomLogSourceConfigurationCrawlerConfigurationOutput {
	return i.ToCustomLogSourceConfigurationCrawlerConfigurationOutputWithContext(context.Background())
}

func (i CustomLogSourceConfigurationCrawlerConfigurationArgs) ToCustomLogSourceConfigurationCrawlerConfigurationOutputWithContext(ctx context.Context) CustomLogSourceConfigurationCrawlerConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLogSourceConfigurationCrawlerConfigurationOutput)
}

func (i CustomLogSourceConfigurationCrawlerConfigurationArgs) ToCustomLogSourceConfigurationCrawlerConfigurationPtrOutput() CustomLogSourceConfigurationCrawlerConfigurationPtrOutput {
	return i.ToCustomLogSourceConfigurationCrawlerConfigurationPtrOutputWithContext(context.Background())
}

func (i CustomLogSourceConfigurationCrawlerConfigurationArgs) ToCustomLogSourceConfigurationCrawlerConfigurationPtrOutputWithContext(ctx context.Context) CustomLogSourceConfigurationCrawlerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLogSourceConfigurationCrawlerConfigurationOutput).ToCustomLogSourceConfigurationCrawlerConfigurationPtrOutputWithContext(ctx)
}

// CustomLogSourceConfigurationCrawlerConfigurationPtrInput is an input type that accepts CustomLogSourceConfigurationCrawlerConfigurationArgs, CustomLogSourceConfigurationCrawlerConfigurationPtr and CustomLogSourceConfigurationCrawlerConfigurationPtrOutput values.
// You can construct a concrete instance of `CustomLogSourceConfigurationCrawlerConfigurationPtrInput` via:
//
//	        CustomLogSourceConfigurationCrawlerConfigurationArgs{...}
//
//	or:
//
//	        nil
type CustomLogSourceConfigurationCrawlerConfigurationPtrInput interface {
	pulumi.Input

	ToCustomLogSourceConfigurationCrawlerConfigurationPtrOutput() CustomLogSourceConfigurationCrawlerConfigurationPtrOutput
	ToCustomLogSourceConfigurationCrawlerConfigurationPtrOutputWithContext(context.Context) CustomLogSourceConfigurationCrawlerConfigurationPtrOutput
}

type customLogSourceConfigurationCrawlerConfigurationPtrType CustomLogSourceConfigurationCrawlerConfigurationArgs

func CustomLogSourceConfigurationCrawlerConfigurationPtr(v *CustomLogSourceConfigurationCrawlerConfigurationArgs) CustomLogSourceConfigurationCrawlerConfigurationPtrInput {
	return (*customLogSourceConfigurationCrawlerConfigurationPtrType)(v)
}

func (*customLogSourceConfigurationCrawlerConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomLogSourceConfigurationCrawlerConfiguration)(nil)).Elem()
}

func (i *customLogSourceConfigurationCrawlerConfigurationPtrType) ToCustomLogSourceConfigurationCrawlerConfigurationPtrOutput() CustomLogSourceConfigurationCrawlerConfigurationPtrOutput {
	return i.ToCustomLogSourceConfigurationCrawlerConfigurationPtrOutputWithContext(context.Background())
}

func (i *customLogSourceConfigurationCrawlerConfigurationPtrType) ToCustomLogSourceConfigurationCrawlerConfigurationPtrOutputWithContext(ctx context.Context) CustomLogSourceConfigurationCrawlerConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLogSourceConfigurationCrawlerConfigurationPtrOutput)
}

type CustomLogSourceConfigurationCrawlerConfigurationOutput struct{ *pulumi.OutputState }

func (CustomLogSourceConfigurationCrawlerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomLogSourceConfigurationCrawlerConfiguration)(nil)).Elem()
}

func (o CustomLogSourceConfigurationCrawlerConfigurationOutput) ToCustomLogSourceConfigurationCrawlerConfigurationOutput() CustomLogSourceConfigurationCrawlerConfigurationOutput {
	return o
}

func (o CustomLogSourceConfigurationCrawlerConfigurationOutput) ToCustomLogSourceConfigurationCrawlerConfigurationOutputWithContext(ctx context.Context) CustomLogSourceConfigurationCrawlerConfigurationOutput {
	return o
}

func (o CustomLogSourceConfigurationCrawlerConfigurationOutput) ToCustomLogSourceConfigurationCrawlerConfigurationPtrOutput() CustomLogSourceConfigurationCrawlerConfigurationPtrOutput {
	return o.ToCustomLogSourceConfigurationCrawlerConfigurationPtrOutputWithContext(context.Background())
}

func (o CustomLogSourceConfigurationCrawlerConfigurationOutput) ToCustomLogSourceConfigurationCrawlerConfigurationPtrOutputWithContext(ctx context.Context) CustomLogSourceConfigurationCrawlerConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomLogSourceConfigurationCrawlerConfiguration) *CustomLogSourceConfigurationCrawlerConfiguration {
		return &v
	}).(CustomLogSourceConfigurationCrawlerConfigurationPtrOutput)
}

// The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role to be used by the AWS Glue crawler.
func (o CustomLogSourceConfigurationCrawlerConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v CustomLogSourceConfigurationCrawlerConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

type CustomLogSourceConfigurationCrawlerConfigurationPtrOutput struct{ *pulumi.OutputState }

func (CustomLogSourceConfigurationCrawlerConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomLogSourceConfigurationCrawlerConfiguration)(nil)).Elem()
}

func (o CustomLogSourceConfigurationCrawlerConfigurationPtrOutput) ToCustomLogSourceConfigurationCrawlerConfigurationPtrOutput() CustomLogSourceConfigurationCrawlerConfigurationPtrOutput {
	return o
}

func (o CustomLogSourceConfigurationCrawlerConfigurationPtrOutput) ToCustomLogSourceConfigurationCrawlerConfigurationPtrOutputWithContext(ctx context.Context) CustomLogSourceConfigurationCrawlerConfigurationPtrOutput {
	return o
}

func (o CustomLogSourceConfigurationCrawlerConfigurationPtrOutput) Elem() CustomLogSourceConfigurationCrawlerConfigurationOutput {
	return o.ApplyT(func(v *CustomLogSourceConfigurationCrawlerConfiguration) CustomLogSourceConfigurationCrawlerConfiguration {
		if v != nil {
			return *v
		}
		var ret CustomLogSourceConfigurationCrawlerConfiguration
		return ret
	}).(CustomLogSourceConfigurationCrawlerConfigurationOutput)
}

// The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role to be used by the AWS Glue crawler.
func (o CustomLogSourceConfigurationCrawlerConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomLogSourceConfigurationCrawlerConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type CustomLogSourceConfigurationProviderIdentity struct {
	// The external ID used to estalish trust relationship with the AWS identity.
	ExternalId string `pulumi:"externalId"`
	// The AWS identity principal.
	Principal string `pulumi:"principal"`
}

// CustomLogSourceConfigurationProviderIdentityInput is an input type that accepts CustomLogSourceConfigurationProviderIdentityArgs and CustomLogSourceConfigurationProviderIdentityOutput values.
// You can construct a concrete instance of `CustomLogSourceConfigurationProviderIdentityInput` via:
//
//	CustomLogSourceConfigurationProviderIdentityArgs{...}
type CustomLogSourceConfigurationProviderIdentityInput interface {
	pulumi.Input

	ToCustomLogSourceConfigurationProviderIdentityOutput() CustomLogSourceConfigurationProviderIdentityOutput
	ToCustomLogSourceConfigurationProviderIdentityOutputWithContext(context.Context) CustomLogSourceConfigurationProviderIdentityOutput
}

type CustomLogSourceConfigurationProviderIdentityArgs struct {
	// The external ID used to estalish trust relationship with the AWS identity.
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	// The AWS identity principal.
	Principal pulumi.StringInput `pulumi:"principal"`
}

func (CustomLogSourceConfigurationProviderIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomLogSourceConfigurationProviderIdentity)(nil)).Elem()
}

func (i CustomLogSourceConfigurationProviderIdentityArgs) ToCustomLogSourceConfigurationProviderIdentityOutput() CustomLogSourceConfigurationProviderIdentityOutput {
	return i.ToCustomLogSourceConfigurationProviderIdentityOutputWithContext(context.Background())
}

func (i CustomLogSourceConfigurationProviderIdentityArgs) ToCustomLogSourceConfigurationProviderIdentityOutputWithContext(ctx context.Context) CustomLogSourceConfigurationProviderIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLogSourceConfigurationProviderIdentityOutput)
}

func (i CustomLogSourceConfigurationProviderIdentityArgs) ToCustomLogSourceConfigurationProviderIdentityPtrOutput() CustomLogSourceConfigurationProviderIdentityPtrOutput {
	return i.ToCustomLogSourceConfigurationProviderIdentityPtrOutputWithContext(context.Background())
}

func (i CustomLogSourceConfigurationProviderIdentityArgs) ToCustomLogSourceConfigurationProviderIdentityPtrOutputWithContext(ctx context.Context) CustomLogSourceConfigurationProviderIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLogSourceConfigurationProviderIdentityOutput).ToCustomLogSourceConfigurationProviderIdentityPtrOutputWithContext(ctx)
}

// CustomLogSourceConfigurationProviderIdentityPtrInput is an input type that accepts CustomLogSourceConfigurationProviderIdentityArgs, CustomLogSourceConfigurationProviderIdentityPtr and CustomLogSourceConfigurationProviderIdentityPtrOutput values.
// You can construct a concrete instance of `CustomLogSourceConfigurationProviderIdentityPtrInput` via:
//
//	        CustomLogSourceConfigurationProviderIdentityArgs{...}
//
//	or:
//
//	        nil
type CustomLogSourceConfigurationProviderIdentityPtrInput interface {
	pulumi.Input

	ToCustomLogSourceConfigurationProviderIdentityPtrOutput() CustomLogSourceConfigurationProviderIdentityPtrOutput
	ToCustomLogSourceConfigurationProviderIdentityPtrOutputWithContext(context.Context) CustomLogSourceConfigurationProviderIdentityPtrOutput
}

type customLogSourceConfigurationProviderIdentityPtrType CustomLogSourceConfigurationProviderIdentityArgs

func CustomLogSourceConfigurationProviderIdentityPtr(v *CustomLogSourceConfigurationProviderIdentityArgs) CustomLogSourceConfigurationProviderIdentityPtrInput {
	return (*customLogSourceConfigurationProviderIdentityPtrType)(v)
}

func (*customLogSourceConfigurationProviderIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomLogSourceConfigurationProviderIdentity)(nil)).Elem()
}

func (i *customLogSourceConfigurationProviderIdentityPtrType) ToCustomLogSourceConfigurationProviderIdentityPtrOutput() CustomLogSourceConfigurationProviderIdentityPtrOutput {
	return i.ToCustomLogSourceConfigurationProviderIdentityPtrOutputWithContext(context.Background())
}

func (i *customLogSourceConfigurationProviderIdentityPtrType) ToCustomLogSourceConfigurationProviderIdentityPtrOutputWithContext(ctx context.Context) CustomLogSourceConfigurationProviderIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLogSourceConfigurationProviderIdentityPtrOutput)
}

type CustomLogSourceConfigurationProviderIdentityOutput struct{ *pulumi.OutputState }

func (CustomLogSourceConfigurationProviderIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomLogSourceConfigurationProviderIdentity)(nil)).Elem()
}

func (o CustomLogSourceConfigurationProviderIdentityOutput) ToCustomLogSourceConfigurationProviderIdentityOutput() CustomLogSourceConfigurationProviderIdentityOutput {
	return o
}

func (o CustomLogSourceConfigurationProviderIdentityOutput) ToCustomLogSourceConfigurationProviderIdentityOutputWithContext(ctx context.Context) CustomLogSourceConfigurationProviderIdentityOutput {
	return o
}

func (o CustomLogSourceConfigurationProviderIdentityOutput) ToCustomLogSourceConfigurationProviderIdentityPtrOutput() CustomLogSourceConfigurationProviderIdentityPtrOutput {
	return o.ToCustomLogSourceConfigurationProviderIdentityPtrOutputWithContext(context.Background())
}

func (o CustomLogSourceConfigurationProviderIdentityOutput) ToCustomLogSourceConfigurationProviderIdentityPtrOutputWithContext(ctx context.Context) CustomLogSourceConfigurationProviderIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomLogSourceConfigurationProviderIdentity) *CustomLogSourceConfigurationProviderIdentity {
		return &v
	}).(CustomLogSourceConfigurationProviderIdentityPtrOutput)
}

// The external ID used to estalish trust relationship with the AWS identity.
func (o CustomLogSourceConfigurationProviderIdentityOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v CustomLogSourceConfigurationProviderIdentity) string { return v.ExternalId }).(pulumi.StringOutput)
}

// The AWS identity principal.
func (o CustomLogSourceConfigurationProviderIdentityOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v CustomLogSourceConfigurationProviderIdentity) string { return v.Principal }).(pulumi.StringOutput)
}

type CustomLogSourceConfigurationProviderIdentityPtrOutput struct{ *pulumi.OutputState }

func (CustomLogSourceConfigurationProviderIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomLogSourceConfigurationProviderIdentity)(nil)).Elem()
}

func (o CustomLogSourceConfigurationProviderIdentityPtrOutput) ToCustomLogSourceConfigurationProviderIdentityPtrOutput() CustomLogSourceConfigurationProviderIdentityPtrOutput {
	return o
}

func (o CustomLogSourceConfigurationProviderIdentityPtrOutput) ToCustomLogSourceConfigurationProviderIdentityPtrOutputWithContext(ctx context.Context) CustomLogSourceConfigurationProviderIdentityPtrOutput {
	return o
}

func (o CustomLogSourceConfigurationProviderIdentityPtrOutput) Elem() CustomLogSourceConfigurationProviderIdentityOutput {
	return o.ApplyT(func(v *CustomLogSourceConfigurationProviderIdentity) CustomLogSourceConfigurationProviderIdentity {
		if v != nil {
			return *v
		}
		var ret CustomLogSourceConfigurationProviderIdentity
		return ret
	}).(CustomLogSourceConfigurationProviderIdentityOutput)
}

// The external ID used to estalish trust relationship with the AWS identity.
func (o CustomLogSourceConfigurationProviderIdentityPtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomLogSourceConfigurationProviderIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.ExternalId
	}).(pulumi.StringPtrOutput)
}

// The AWS identity principal.
func (o CustomLogSourceConfigurationProviderIdentityPtrOutput) Principal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomLogSourceConfigurationProviderIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Principal
	}).(pulumi.StringPtrOutput)
}

type CustomLogSourceProviderDetail struct {
	// The location of the partition in the Amazon S3 bucket for Security Lake.
	Location string `pulumi:"location"`
	// The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role to be used by the AWS Glue crawler.
	RoleArn string `pulumi:"roleArn"`
}

// CustomLogSourceProviderDetailInput is an input type that accepts CustomLogSourceProviderDetailArgs and CustomLogSourceProviderDetailOutput values.
// You can construct a concrete instance of `CustomLogSourceProviderDetailInput` via:
//
//	CustomLogSourceProviderDetailArgs{...}
type CustomLogSourceProviderDetailInput interface {
	pulumi.Input

	ToCustomLogSourceProviderDetailOutput() CustomLogSourceProviderDetailOutput
	ToCustomLogSourceProviderDetailOutputWithContext(context.Context) CustomLogSourceProviderDetailOutput
}

type CustomLogSourceProviderDetailArgs struct {
	// The location of the partition in the Amazon S3 bucket for Security Lake.
	Location pulumi.StringInput `pulumi:"location"`
	// The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role to be used by the AWS Glue crawler.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (CustomLogSourceProviderDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomLogSourceProviderDetail)(nil)).Elem()
}

func (i CustomLogSourceProviderDetailArgs) ToCustomLogSourceProviderDetailOutput() CustomLogSourceProviderDetailOutput {
	return i.ToCustomLogSourceProviderDetailOutputWithContext(context.Background())
}

func (i CustomLogSourceProviderDetailArgs) ToCustomLogSourceProviderDetailOutputWithContext(ctx context.Context) CustomLogSourceProviderDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLogSourceProviderDetailOutput)
}

// CustomLogSourceProviderDetailArrayInput is an input type that accepts CustomLogSourceProviderDetailArray and CustomLogSourceProviderDetailArrayOutput values.
// You can construct a concrete instance of `CustomLogSourceProviderDetailArrayInput` via:
//
//	CustomLogSourceProviderDetailArray{ CustomLogSourceProviderDetailArgs{...} }
type CustomLogSourceProviderDetailArrayInput interface {
	pulumi.Input

	ToCustomLogSourceProviderDetailArrayOutput() CustomLogSourceProviderDetailArrayOutput
	ToCustomLogSourceProviderDetailArrayOutputWithContext(context.Context) CustomLogSourceProviderDetailArrayOutput
}

type CustomLogSourceProviderDetailArray []CustomLogSourceProviderDetailInput

func (CustomLogSourceProviderDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomLogSourceProviderDetail)(nil)).Elem()
}

func (i CustomLogSourceProviderDetailArray) ToCustomLogSourceProviderDetailArrayOutput() CustomLogSourceProviderDetailArrayOutput {
	return i.ToCustomLogSourceProviderDetailArrayOutputWithContext(context.Background())
}

func (i CustomLogSourceProviderDetailArray) ToCustomLogSourceProviderDetailArrayOutputWithContext(ctx context.Context) CustomLogSourceProviderDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomLogSourceProviderDetailArrayOutput)
}

type CustomLogSourceProviderDetailOutput struct{ *pulumi.OutputState }

func (CustomLogSourceProviderDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomLogSourceProviderDetail)(nil)).Elem()
}

func (o CustomLogSourceProviderDetailOutput) ToCustomLogSourceProviderDetailOutput() CustomLogSourceProviderDetailOutput {
	return o
}

func (o CustomLogSourceProviderDetailOutput) ToCustomLogSourceProviderDetailOutputWithContext(ctx context.Context) CustomLogSourceProviderDetailOutput {
	return o
}

// The location of the partition in the Amazon S3 bucket for Security Lake.
func (o CustomLogSourceProviderDetailOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v CustomLogSourceProviderDetail) string { return v.Location }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role to be used by the AWS Glue crawler.
func (o CustomLogSourceProviderDetailOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v CustomLogSourceProviderDetail) string { return v.RoleArn }).(pulumi.StringOutput)
}

type CustomLogSourceProviderDetailArrayOutput struct{ *pulumi.OutputState }

func (CustomLogSourceProviderDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomLogSourceProviderDetail)(nil)).Elem()
}

func (o CustomLogSourceProviderDetailArrayOutput) ToCustomLogSourceProviderDetailArrayOutput() CustomLogSourceProviderDetailArrayOutput {
	return o
}

func (o CustomLogSourceProviderDetailArrayOutput) ToCustomLogSourceProviderDetailArrayOutputWithContext(ctx context.Context) CustomLogSourceProviderDetailArrayOutput {
	return o
}

func (o CustomLogSourceProviderDetailArrayOutput) Index(i pulumi.IntInput) CustomLogSourceProviderDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomLogSourceProviderDetail {
		return vs[0].([]CustomLogSourceProviderDetail)[vs[1].(int)]
	}).(CustomLogSourceProviderDetailOutput)
}

type DataLakeConfiguration struct {
	// Provides encryption details of Amazon Security Lake object.
	EncryptionConfigurations []DataLakeConfigurationEncryptionConfiguration `pulumi:"encryptionConfigurations"`
	// Provides lifecycle details of Amazon Security Lake object.
	LifecycleConfiguration *DataLakeConfigurationLifecycleConfiguration `pulumi:"lifecycleConfiguration"`
	// The AWS Regions where Security Lake is automatically enabled.
	Region string `pulumi:"region"`
	// Provides replication details of Amazon Security Lake object.
	ReplicationConfiguration *DataLakeConfigurationReplicationConfiguration `pulumi:"replicationConfiguration"`
}

// DataLakeConfigurationInput is an input type that accepts DataLakeConfigurationArgs and DataLakeConfigurationOutput values.
// You can construct a concrete instance of `DataLakeConfigurationInput` via:
//
//	DataLakeConfigurationArgs{...}
type DataLakeConfigurationInput interface {
	pulumi.Input

	ToDataLakeConfigurationOutput() DataLakeConfigurationOutput
	ToDataLakeConfigurationOutputWithContext(context.Context) DataLakeConfigurationOutput
}

type DataLakeConfigurationArgs struct {
	// Provides encryption details of Amazon Security Lake object.
	EncryptionConfigurations DataLakeConfigurationEncryptionConfigurationArrayInput `pulumi:"encryptionConfigurations"`
	// Provides lifecycle details of Amazon Security Lake object.
	LifecycleConfiguration DataLakeConfigurationLifecycleConfigurationPtrInput `pulumi:"lifecycleConfiguration"`
	// The AWS Regions where Security Lake is automatically enabled.
	Region pulumi.StringInput `pulumi:"region"`
	// Provides replication details of Amazon Security Lake object.
	ReplicationConfiguration DataLakeConfigurationReplicationConfigurationPtrInput `pulumi:"replicationConfiguration"`
}

func (DataLakeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeConfiguration)(nil)).Elem()
}

func (i DataLakeConfigurationArgs) ToDataLakeConfigurationOutput() DataLakeConfigurationOutput {
	return i.ToDataLakeConfigurationOutputWithContext(context.Background())
}

func (i DataLakeConfigurationArgs) ToDataLakeConfigurationOutputWithContext(ctx context.Context) DataLakeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationOutput)
}

func (i DataLakeConfigurationArgs) ToDataLakeConfigurationPtrOutput() DataLakeConfigurationPtrOutput {
	return i.ToDataLakeConfigurationPtrOutputWithContext(context.Background())
}

func (i DataLakeConfigurationArgs) ToDataLakeConfigurationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationOutput).ToDataLakeConfigurationPtrOutputWithContext(ctx)
}

// DataLakeConfigurationPtrInput is an input type that accepts DataLakeConfigurationArgs, DataLakeConfigurationPtr and DataLakeConfigurationPtrOutput values.
// You can construct a concrete instance of `DataLakeConfigurationPtrInput` via:
//
//	        DataLakeConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataLakeConfigurationPtrInput interface {
	pulumi.Input

	ToDataLakeConfigurationPtrOutput() DataLakeConfigurationPtrOutput
	ToDataLakeConfigurationPtrOutputWithContext(context.Context) DataLakeConfigurationPtrOutput
}

type dataLakeConfigurationPtrType DataLakeConfigurationArgs

func DataLakeConfigurationPtr(v *DataLakeConfigurationArgs) DataLakeConfigurationPtrInput {
	return (*dataLakeConfigurationPtrType)(v)
}

func (*dataLakeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeConfiguration)(nil)).Elem()
}

func (i *dataLakeConfigurationPtrType) ToDataLakeConfigurationPtrOutput() DataLakeConfigurationPtrOutput {
	return i.ToDataLakeConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataLakeConfigurationPtrType) ToDataLakeConfigurationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationPtrOutput)
}

type DataLakeConfigurationOutput struct{ *pulumi.OutputState }

func (DataLakeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeConfiguration)(nil)).Elem()
}

func (o DataLakeConfigurationOutput) ToDataLakeConfigurationOutput() DataLakeConfigurationOutput {
	return o
}

func (o DataLakeConfigurationOutput) ToDataLakeConfigurationOutputWithContext(ctx context.Context) DataLakeConfigurationOutput {
	return o
}

func (o DataLakeConfigurationOutput) ToDataLakeConfigurationPtrOutput() DataLakeConfigurationPtrOutput {
	return o.ToDataLakeConfigurationPtrOutputWithContext(context.Background())
}

func (o DataLakeConfigurationOutput) ToDataLakeConfigurationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataLakeConfiguration) *DataLakeConfiguration {
		return &v
	}).(DataLakeConfigurationPtrOutput)
}

// Provides encryption details of Amazon Security Lake object.
func (o DataLakeConfigurationOutput) EncryptionConfigurations() DataLakeConfigurationEncryptionConfigurationArrayOutput {
	return o.ApplyT(func(v DataLakeConfiguration) []DataLakeConfigurationEncryptionConfiguration {
		return v.EncryptionConfigurations
	}).(DataLakeConfigurationEncryptionConfigurationArrayOutput)
}

// Provides lifecycle details of Amazon Security Lake object.
func (o DataLakeConfigurationOutput) LifecycleConfiguration() DataLakeConfigurationLifecycleConfigurationPtrOutput {
	return o.ApplyT(func(v DataLakeConfiguration) *DataLakeConfigurationLifecycleConfiguration {
		return v.LifecycleConfiguration
	}).(DataLakeConfigurationLifecycleConfigurationPtrOutput)
}

// The AWS Regions where Security Lake is automatically enabled.
func (o DataLakeConfigurationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeConfiguration) string { return v.Region }).(pulumi.StringOutput)
}

// Provides replication details of Amazon Security Lake object.
func (o DataLakeConfigurationOutput) ReplicationConfiguration() DataLakeConfigurationReplicationConfigurationPtrOutput {
	return o.ApplyT(func(v DataLakeConfiguration) *DataLakeConfigurationReplicationConfiguration {
		return v.ReplicationConfiguration
	}).(DataLakeConfigurationReplicationConfigurationPtrOutput)
}

type DataLakeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataLakeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeConfiguration)(nil)).Elem()
}

func (o DataLakeConfigurationPtrOutput) ToDataLakeConfigurationPtrOutput() DataLakeConfigurationPtrOutput {
	return o
}

func (o DataLakeConfigurationPtrOutput) ToDataLakeConfigurationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationPtrOutput {
	return o
}

func (o DataLakeConfigurationPtrOutput) Elem() DataLakeConfigurationOutput {
	return o.ApplyT(func(v *DataLakeConfiguration) DataLakeConfiguration {
		if v != nil {
			return *v
		}
		var ret DataLakeConfiguration
		return ret
	}).(DataLakeConfigurationOutput)
}

// Provides encryption details of Amazon Security Lake object.
func (o DataLakeConfigurationPtrOutput) EncryptionConfigurations() DataLakeConfigurationEncryptionConfigurationArrayOutput {
	return o.ApplyT(func(v *DataLakeConfiguration) []DataLakeConfigurationEncryptionConfiguration {
		if v == nil {
			return nil
		}
		return v.EncryptionConfigurations
	}).(DataLakeConfigurationEncryptionConfigurationArrayOutput)
}

// Provides lifecycle details of Amazon Security Lake object.
func (o DataLakeConfigurationPtrOutput) LifecycleConfiguration() DataLakeConfigurationLifecycleConfigurationPtrOutput {
	return o.ApplyT(func(v *DataLakeConfiguration) *DataLakeConfigurationLifecycleConfiguration {
		if v == nil {
			return nil
		}
		return v.LifecycleConfiguration
	}).(DataLakeConfigurationLifecycleConfigurationPtrOutput)
}

// The AWS Regions where Security Lake is automatically enabled.
func (o DataLakeConfigurationPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

// Provides replication details of Amazon Security Lake object.
func (o DataLakeConfigurationPtrOutput) ReplicationConfiguration() DataLakeConfigurationReplicationConfigurationPtrOutput {
	return o.ApplyT(func(v *DataLakeConfiguration) *DataLakeConfigurationReplicationConfiguration {
		if v == nil {
			return nil
		}
		return v.ReplicationConfiguration
	}).(DataLakeConfigurationReplicationConfigurationPtrOutput)
}

type DataLakeConfigurationEncryptionConfiguration struct {
	// The id of KMS encryption key used by Amazon Security Lake to encrypt the Security Lake object.
	KmsKeyId string `pulumi:"kmsKeyId"`
}

// DataLakeConfigurationEncryptionConfigurationInput is an input type that accepts DataLakeConfigurationEncryptionConfigurationArgs and DataLakeConfigurationEncryptionConfigurationOutput values.
// You can construct a concrete instance of `DataLakeConfigurationEncryptionConfigurationInput` via:
//
//	DataLakeConfigurationEncryptionConfigurationArgs{...}
type DataLakeConfigurationEncryptionConfigurationInput interface {
	pulumi.Input

	ToDataLakeConfigurationEncryptionConfigurationOutput() DataLakeConfigurationEncryptionConfigurationOutput
	ToDataLakeConfigurationEncryptionConfigurationOutputWithContext(context.Context) DataLakeConfigurationEncryptionConfigurationOutput
}

type DataLakeConfigurationEncryptionConfigurationArgs struct {
	// The id of KMS encryption key used by Amazon Security Lake to encrypt the Security Lake object.
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
}

func (DataLakeConfigurationEncryptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeConfigurationEncryptionConfiguration)(nil)).Elem()
}

func (i DataLakeConfigurationEncryptionConfigurationArgs) ToDataLakeConfigurationEncryptionConfigurationOutput() DataLakeConfigurationEncryptionConfigurationOutput {
	return i.ToDataLakeConfigurationEncryptionConfigurationOutputWithContext(context.Background())
}

func (i DataLakeConfigurationEncryptionConfigurationArgs) ToDataLakeConfigurationEncryptionConfigurationOutputWithContext(ctx context.Context) DataLakeConfigurationEncryptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationEncryptionConfigurationOutput)
}

// DataLakeConfigurationEncryptionConfigurationArrayInput is an input type that accepts DataLakeConfigurationEncryptionConfigurationArray and DataLakeConfigurationEncryptionConfigurationArrayOutput values.
// You can construct a concrete instance of `DataLakeConfigurationEncryptionConfigurationArrayInput` via:
//
//	DataLakeConfigurationEncryptionConfigurationArray{ DataLakeConfigurationEncryptionConfigurationArgs{...} }
type DataLakeConfigurationEncryptionConfigurationArrayInput interface {
	pulumi.Input

	ToDataLakeConfigurationEncryptionConfigurationArrayOutput() DataLakeConfigurationEncryptionConfigurationArrayOutput
	ToDataLakeConfigurationEncryptionConfigurationArrayOutputWithContext(context.Context) DataLakeConfigurationEncryptionConfigurationArrayOutput
}

type DataLakeConfigurationEncryptionConfigurationArray []DataLakeConfigurationEncryptionConfigurationInput

func (DataLakeConfigurationEncryptionConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeConfigurationEncryptionConfiguration)(nil)).Elem()
}

func (i DataLakeConfigurationEncryptionConfigurationArray) ToDataLakeConfigurationEncryptionConfigurationArrayOutput() DataLakeConfigurationEncryptionConfigurationArrayOutput {
	return i.ToDataLakeConfigurationEncryptionConfigurationArrayOutputWithContext(context.Background())
}

func (i DataLakeConfigurationEncryptionConfigurationArray) ToDataLakeConfigurationEncryptionConfigurationArrayOutputWithContext(ctx context.Context) DataLakeConfigurationEncryptionConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationEncryptionConfigurationArrayOutput)
}

type DataLakeConfigurationEncryptionConfigurationOutput struct{ *pulumi.OutputState }

func (DataLakeConfigurationEncryptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeConfigurationEncryptionConfiguration)(nil)).Elem()
}

func (o DataLakeConfigurationEncryptionConfigurationOutput) ToDataLakeConfigurationEncryptionConfigurationOutput() DataLakeConfigurationEncryptionConfigurationOutput {
	return o
}

func (o DataLakeConfigurationEncryptionConfigurationOutput) ToDataLakeConfigurationEncryptionConfigurationOutputWithContext(ctx context.Context) DataLakeConfigurationEncryptionConfigurationOutput {
	return o
}

// The id of KMS encryption key used by Amazon Security Lake to encrypt the Security Lake object.
func (o DataLakeConfigurationEncryptionConfigurationOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeConfigurationEncryptionConfiguration) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

type DataLakeConfigurationEncryptionConfigurationArrayOutput struct{ *pulumi.OutputState }

func (DataLakeConfigurationEncryptionConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeConfigurationEncryptionConfiguration)(nil)).Elem()
}

func (o DataLakeConfigurationEncryptionConfigurationArrayOutput) ToDataLakeConfigurationEncryptionConfigurationArrayOutput() DataLakeConfigurationEncryptionConfigurationArrayOutput {
	return o
}

func (o DataLakeConfigurationEncryptionConfigurationArrayOutput) ToDataLakeConfigurationEncryptionConfigurationArrayOutputWithContext(ctx context.Context) DataLakeConfigurationEncryptionConfigurationArrayOutput {
	return o
}

func (o DataLakeConfigurationEncryptionConfigurationArrayOutput) Index(i pulumi.IntInput) DataLakeConfigurationEncryptionConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataLakeConfigurationEncryptionConfiguration {
		return vs[0].([]DataLakeConfigurationEncryptionConfiguration)[vs[1].(int)]
	}).(DataLakeConfigurationEncryptionConfigurationOutput)
}

type DataLakeConfigurationLifecycleConfiguration struct {
	// Provides data expiration details of Amazon Security Lake object.
	Expiration *DataLakeConfigurationLifecycleConfigurationExpiration `pulumi:"expiration"`
	// Provides data storage transition details of Amazon Security Lake object.
	Transitions []DataLakeConfigurationLifecycleConfigurationTransition `pulumi:"transitions"`
}

// DataLakeConfigurationLifecycleConfigurationInput is an input type that accepts DataLakeConfigurationLifecycleConfigurationArgs and DataLakeConfigurationLifecycleConfigurationOutput values.
// You can construct a concrete instance of `DataLakeConfigurationLifecycleConfigurationInput` via:
//
//	DataLakeConfigurationLifecycleConfigurationArgs{...}
type DataLakeConfigurationLifecycleConfigurationInput interface {
	pulumi.Input

	ToDataLakeConfigurationLifecycleConfigurationOutput() DataLakeConfigurationLifecycleConfigurationOutput
	ToDataLakeConfigurationLifecycleConfigurationOutputWithContext(context.Context) DataLakeConfigurationLifecycleConfigurationOutput
}

type DataLakeConfigurationLifecycleConfigurationArgs struct {
	// Provides data expiration details of Amazon Security Lake object.
	Expiration DataLakeConfigurationLifecycleConfigurationExpirationPtrInput `pulumi:"expiration"`
	// Provides data storage transition details of Amazon Security Lake object.
	Transitions DataLakeConfigurationLifecycleConfigurationTransitionArrayInput `pulumi:"transitions"`
}

func (DataLakeConfigurationLifecycleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeConfigurationLifecycleConfiguration)(nil)).Elem()
}

func (i DataLakeConfigurationLifecycleConfigurationArgs) ToDataLakeConfigurationLifecycleConfigurationOutput() DataLakeConfigurationLifecycleConfigurationOutput {
	return i.ToDataLakeConfigurationLifecycleConfigurationOutputWithContext(context.Background())
}

func (i DataLakeConfigurationLifecycleConfigurationArgs) ToDataLakeConfigurationLifecycleConfigurationOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationLifecycleConfigurationOutput)
}

func (i DataLakeConfigurationLifecycleConfigurationArgs) ToDataLakeConfigurationLifecycleConfigurationPtrOutput() DataLakeConfigurationLifecycleConfigurationPtrOutput {
	return i.ToDataLakeConfigurationLifecycleConfigurationPtrOutputWithContext(context.Background())
}

func (i DataLakeConfigurationLifecycleConfigurationArgs) ToDataLakeConfigurationLifecycleConfigurationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationLifecycleConfigurationOutput).ToDataLakeConfigurationLifecycleConfigurationPtrOutputWithContext(ctx)
}

// DataLakeConfigurationLifecycleConfigurationPtrInput is an input type that accepts DataLakeConfigurationLifecycleConfigurationArgs, DataLakeConfigurationLifecycleConfigurationPtr and DataLakeConfigurationLifecycleConfigurationPtrOutput values.
// You can construct a concrete instance of `DataLakeConfigurationLifecycleConfigurationPtrInput` via:
//
//	        DataLakeConfigurationLifecycleConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataLakeConfigurationLifecycleConfigurationPtrInput interface {
	pulumi.Input

	ToDataLakeConfigurationLifecycleConfigurationPtrOutput() DataLakeConfigurationLifecycleConfigurationPtrOutput
	ToDataLakeConfigurationLifecycleConfigurationPtrOutputWithContext(context.Context) DataLakeConfigurationLifecycleConfigurationPtrOutput
}

type dataLakeConfigurationLifecycleConfigurationPtrType DataLakeConfigurationLifecycleConfigurationArgs

func DataLakeConfigurationLifecycleConfigurationPtr(v *DataLakeConfigurationLifecycleConfigurationArgs) DataLakeConfigurationLifecycleConfigurationPtrInput {
	return (*dataLakeConfigurationLifecycleConfigurationPtrType)(v)
}

func (*dataLakeConfigurationLifecycleConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeConfigurationLifecycleConfiguration)(nil)).Elem()
}

func (i *dataLakeConfigurationLifecycleConfigurationPtrType) ToDataLakeConfigurationLifecycleConfigurationPtrOutput() DataLakeConfigurationLifecycleConfigurationPtrOutput {
	return i.ToDataLakeConfigurationLifecycleConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataLakeConfigurationLifecycleConfigurationPtrType) ToDataLakeConfigurationLifecycleConfigurationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationLifecycleConfigurationPtrOutput)
}

type DataLakeConfigurationLifecycleConfigurationOutput struct{ *pulumi.OutputState }

func (DataLakeConfigurationLifecycleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeConfigurationLifecycleConfiguration)(nil)).Elem()
}

func (o DataLakeConfigurationLifecycleConfigurationOutput) ToDataLakeConfigurationLifecycleConfigurationOutput() DataLakeConfigurationLifecycleConfigurationOutput {
	return o
}

func (o DataLakeConfigurationLifecycleConfigurationOutput) ToDataLakeConfigurationLifecycleConfigurationOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationOutput {
	return o
}

func (o DataLakeConfigurationLifecycleConfigurationOutput) ToDataLakeConfigurationLifecycleConfigurationPtrOutput() DataLakeConfigurationLifecycleConfigurationPtrOutput {
	return o.ToDataLakeConfigurationLifecycleConfigurationPtrOutputWithContext(context.Background())
}

func (o DataLakeConfigurationLifecycleConfigurationOutput) ToDataLakeConfigurationLifecycleConfigurationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataLakeConfigurationLifecycleConfiguration) *DataLakeConfigurationLifecycleConfiguration {
		return &v
	}).(DataLakeConfigurationLifecycleConfigurationPtrOutput)
}

// Provides data expiration details of Amazon Security Lake object.
func (o DataLakeConfigurationLifecycleConfigurationOutput) Expiration() DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput {
	return o.ApplyT(func(v DataLakeConfigurationLifecycleConfiguration) *DataLakeConfigurationLifecycleConfigurationExpiration {
		return v.Expiration
	}).(DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput)
}

// Provides data storage transition details of Amazon Security Lake object.
func (o DataLakeConfigurationLifecycleConfigurationOutput) Transitions() DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput {
	return o.ApplyT(func(v DataLakeConfigurationLifecycleConfiguration) []DataLakeConfigurationLifecycleConfigurationTransition {
		return v.Transitions
	}).(DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput)
}

type DataLakeConfigurationLifecycleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataLakeConfigurationLifecycleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeConfigurationLifecycleConfiguration)(nil)).Elem()
}

func (o DataLakeConfigurationLifecycleConfigurationPtrOutput) ToDataLakeConfigurationLifecycleConfigurationPtrOutput() DataLakeConfigurationLifecycleConfigurationPtrOutput {
	return o
}

func (o DataLakeConfigurationLifecycleConfigurationPtrOutput) ToDataLakeConfigurationLifecycleConfigurationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationPtrOutput {
	return o
}

func (o DataLakeConfigurationLifecycleConfigurationPtrOutput) Elem() DataLakeConfigurationLifecycleConfigurationOutput {
	return o.ApplyT(func(v *DataLakeConfigurationLifecycleConfiguration) DataLakeConfigurationLifecycleConfiguration {
		if v != nil {
			return *v
		}
		var ret DataLakeConfigurationLifecycleConfiguration
		return ret
	}).(DataLakeConfigurationLifecycleConfigurationOutput)
}

// Provides data expiration details of Amazon Security Lake object.
func (o DataLakeConfigurationLifecycleConfigurationPtrOutput) Expiration() DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput {
	return o.ApplyT(func(v *DataLakeConfigurationLifecycleConfiguration) *DataLakeConfigurationLifecycleConfigurationExpiration {
		if v == nil {
			return nil
		}
		return v.Expiration
	}).(DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput)
}

// Provides data storage transition details of Amazon Security Lake object.
func (o DataLakeConfigurationLifecycleConfigurationPtrOutput) Transitions() DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput {
	return o.ApplyT(func(v *DataLakeConfigurationLifecycleConfiguration) []DataLakeConfigurationLifecycleConfigurationTransition {
		if v == nil {
			return nil
		}
		return v.Transitions
	}).(DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput)
}

type DataLakeConfigurationLifecycleConfigurationExpiration struct {
	// Number of days before data transition to a different S3 Storage Class in the Amazon Security Lake object.
	Days *int `pulumi:"days"`
}

// DataLakeConfigurationLifecycleConfigurationExpirationInput is an input type that accepts DataLakeConfigurationLifecycleConfigurationExpirationArgs and DataLakeConfigurationLifecycleConfigurationExpirationOutput values.
// You can construct a concrete instance of `DataLakeConfigurationLifecycleConfigurationExpirationInput` via:
//
//	DataLakeConfigurationLifecycleConfigurationExpirationArgs{...}
type DataLakeConfigurationLifecycleConfigurationExpirationInput interface {
	pulumi.Input

	ToDataLakeConfigurationLifecycleConfigurationExpirationOutput() DataLakeConfigurationLifecycleConfigurationExpirationOutput
	ToDataLakeConfigurationLifecycleConfigurationExpirationOutputWithContext(context.Context) DataLakeConfigurationLifecycleConfigurationExpirationOutput
}

type DataLakeConfigurationLifecycleConfigurationExpirationArgs struct {
	// Number of days before data transition to a different S3 Storage Class in the Amazon Security Lake object.
	Days pulumi.IntPtrInput `pulumi:"days"`
}

func (DataLakeConfigurationLifecycleConfigurationExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeConfigurationLifecycleConfigurationExpiration)(nil)).Elem()
}

func (i DataLakeConfigurationLifecycleConfigurationExpirationArgs) ToDataLakeConfigurationLifecycleConfigurationExpirationOutput() DataLakeConfigurationLifecycleConfigurationExpirationOutput {
	return i.ToDataLakeConfigurationLifecycleConfigurationExpirationOutputWithContext(context.Background())
}

func (i DataLakeConfigurationLifecycleConfigurationExpirationArgs) ToDataLakeConfigurationLifecycleConfigurationExpirationOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationLifecycleConfigurationExpirationOutput)
}

func (i DataLakeConfigurationLifecycleConfigurationExpirationArgs) ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutput() DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput {
	return i.ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutputWithContext(context.Background())
}

func (i DataLakeConfigurationLifecycleConfigurationExpirationArgs) ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationLifecycleConfigurationExpirationOutput).ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutputWithContext(ctx)
}

// DataLakeConfigurationLifecycleConfigurationExpirationPtrInput is an input type that accepts DataLakeConfigurationLifecycleConfigurationExpirationArgs, DataLakeConfigurationLifecycleConfigurationExpirationPtr and DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput values.
// You can construct a concrete instance of `DataLakeConfigurationLifecycleConfigurationExpirationPtrInput` via:
//
//	        DataLakeConfigurationLifecycleConfigurationExpirationArgs{...}
//
//	or:
//
//	        nil
type DataLakeConfigurationLifecycleConfigurationExpirationPtrInput interface {
	pulumi.Input

	ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutput() DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput
	ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutputWithContext(context.Context) DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput
}

type dataLakeConfigurationLifecycleConfigurationExpirationPtrType DataLakeConfigurationLifecycleConfigurationExpirationArgs

func DataLakeConfigurationLifecycleConfigurationExpirationPtr(v *DataLakeConfigurationLifecycleConfigurationExpirationArgs) DataLakeConfigurationLifecycleConfigurationExpirationPtrInput {
	return (*dataLakeConfigurationLifecycleConfigurationExpirationPtrType)(v)
}

func (*dataLakeConfigurationLifecycleConfigurationExpirationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeConfigurationLifecycleConfigurationExpiration)(nil)).Elem()
}

func (i *dataLakeConfigurationLifecycleConfigurationExpirationPtrType) ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutput() DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput {
	return i.ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutputWithContext(context.Background())
}

func (i *dataLakeConfigurationLifecycleConfigurationExpirationPtrType) ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput)
}

type DataLakeConfigurationLifecycleConfigurationExpirationOutput struct{ *pulumi.OutputState }

func (DataLakeConfigurationLifecycleConfigurationExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeConfigurationLifecycleConfigurationExpiration)(nil)).Elem()
}

func (o DataLakeConfigurationLifecycleConfigurationExpirationOutput) ToDataLakeConfigurationLifecycleConfigurationExpirationOutput() DataLakeConfigurationLifecycleConfigurationExpirationOutput {
	return o
}

func (o DataLakeConfigurationLifecycleConfigurationExpirationOutput) ToDataLakeConfigurationLifecycleConfigurationExpirationOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationExpirationOutput {
	return o
}

func (o DataLakeConfigurationLifecycleConfigurationExpirationOutput) ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutput() DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput {
	return o.ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutputWithContext(context.Background())
}

func (o DataLakeConfigurationLifecycleConfigurationExpirationOutput) ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataLakeConfigurationLifecycleConfigurationExpiration) *DataLakeConfigurationLifecycleConfigurationExpiration {
		return &v
	}).(DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput)
}

// Number of days before data transition to a different S3 Storage Class in the Amazon Security Lake object.
func (o DataLakeConfigurationLifecycleConfigurationExpirationOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataLakeConfigurationLifecycleConfigurationExpiration) *int { return v.Days }).(pulumi.IntPtrOutput)
}

type DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput struct{ *pulumi.OutputState }

func (DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeConfigurationLifecycleConfigurationExpiration)(nil)).Elem()
}

func (o DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput) ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutput() DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput {
	return o
}

func (o DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput) ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput {
	return o
}

func (o DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput) Elem() DataLakeConfigurationLifecycleConfigurationExpirationOutput {
	return o.ApplyT(func(v *DataLakeConfigurationLifecycleConfigurationExpiration) DataLakeConfigurationLifecycleConfigurationExpiration {
		if v != nil {
			return *v
		}
		var ret DataLakeConfigurationLifecycleConfigurationExpiration
		return ret
	}).(DataLakeConfigurationLifecycleConfigurationExpirationOutput)
}

// Number of days before data transition to a different S3 Storage Class in the Amazon Security Lake object.
func (o DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataLakeConfigurationLifecycleConfigurationExpiration) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

type DataLakeConfigurationLifecycleConfigurationTransition struct {
	// Number of days before data transition to a different S3 Storage Class in the Amazon Security Lake object.
	Days *int `pulumi:"days"`
	// The range of storage classes that you can choose from based on the data access, resiliency, and cost requirements of your workloads.
	StorageClass *string `pulumi:"storageClass"`
}

// DataLakeConfigurationLifecycleConfigurationTransitionInput is an input type that accepts DataLakeConfigurationLifecycleConfigurationTransitionArgs and DataLakeConfigurationLifecycleConfigurationTransitionOutput values.
// You can construct a concrete instance of `DataLakeConfigurationLifecycleConfigurationTransitionInput` via:
//
//	DataLakeConfigurationLifecycleConfigurationTransitionArgs{...}
type DataLakeConfigurationLifecycleConfigurationTransitionInput interface {
	pulumi.Input

	ToDataLakeConfigurationLifecycleConfigurationTransitionOutput() DataLakeConfigurationLifecycleConfigurationTransitionOutput
	ToDataLakeConfigurationLifecycleConfigurationTransitionOutputWithContext(context.Context) DataLakeConfigurationLifecycleConfigurationTransitionOutput
}

type DataLakeConfigurationLifecycleConfigurationTransitionArgs struct {
	// Number of days before data transition to a different S3 Storage Class in the Amazon Security Lake object.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// The range of storage classes that you can choose from based on the data access, resiliency, and cost requirements of your workloads.
	StorageClass pulumi.StringPtrInput `pulumi:"storageClass"`
}

func (DataLakeConfigurationLifecycleConfigurationTransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeConfigurationLifecycleConfigurationTransition)(nil)).Elem()
}

func (i DataLakeConfigurationLifecycleConfigurationTransitionArgs) ToDataLakeConfigurationLifecycleConfigurationTransitionOutput() DataLakeConfigurationLifecycleConfigurationTransitionOutput {
	return i.ToDataLakeConfigurationLifecycleConfigurationTransitionOutputWithContext(context.Background())
}

func (i DataLakeConfigurationLifecycleConfigurationTransitionArgs) ToDataLakeConfigurationLifecycleConfigurationTransitionOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationTransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationLifecycleConfigurationTransitionOutput)
}

// DataLakeConfigurationLifecycleConfigurationTransitionArrayInput is an input type that accepts DataLakeConfigurationLifecycleConfigurationTransitionArray and DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput values.
// You can construct a concrete instance of `DataLakeConfigurationLifecycleConfigurationTransitionArrayInput` via:
//
//	DataLakeConfigurationLifecycleConfigurationTransitionArray{ DataLakeConfigurationLifecycleConfigurationTransitionArgs{...} }
type DataLakeConfigurationLifecycleConfigurationTransitionArrayInput interface {
	pulumi.Input

	ToDataLakeConfigurationLifecycleConfigurationTransitionArrayOutput() DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput
	ToDataLakeConfigurationLifecycleConfigurationTransitionArrayOutputWithContext(context.Context) DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput
}

type DataLakeConfigurationLifecycleConfigurationTransitionArray []DataLakeConfigurationLifecycleConfigurationTransitionInput

func (DataLakeConfigurationLifecycleConfigurationTransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeConfigurationLifecycleConfigurationTransition)(nil)).Elem()
}

func (i DataLakeConfigurationLifecycleConfigurationTransitionArray) ToDataLakeConfigurationLifecycleConfigurationTransitionArrayOutput() DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput {
	return i.ToDataLakeConfigurationLifecycleConfigurationTransitionArrayOutputWithContext(context.Background())
}

func (i DataLakeConfigurationLifecycleConfigurationTransitionArray) ToDataLakeConfigurationLifecycleConfigurationTransitionArrayOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput)
}

type DataLakeConfigurationLifecycleConfigurationTransitionOutput struct{ *pulumi.OutputState }

func (DataLakeConfigurationLifecycleConfigurationTransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeConfigurationLifecycleConfigurationTransition)(nil)).Elem()
}

func (o DataLakeConfigurationLifecycleConfigurationTransitionOutput) ToDataLakeConfigurationLifecycleConfigurationTransitionOutput() DataLakeConfigurationLifecycleConfigurationTransitionOutput {
	return o
}

func (o DataLakeConfigurationLifecycleConfigurationTransitionOutput) ToDataLakeConfigurationLifecycleConfigurationTransitionOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationTransitionOutput {
	return o
}

// Number of days before data transition to a different S3 Storage Class in the Amazon Security Lake object.
func (o DataLakeConfigurationLifecycleConfigurationTransitionOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataLakeConfigurationLifecycleConfigurationTransition) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// The range of storage classes that you can choose from based on the data access, resiliency, and cost requirements of your workloads.
func (o DataLakeConfigurationLifecycleConfigurationTransitionOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeConfigurationLifecycleConfigurationTransition) *string { return v.StorageClass }).(pulumi.StringPtrOutput)
}

type DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput struct{ *pulumi.OutputState }

func (DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeConfigurationLifecycleConfigurationTransition)(nil)).Elem()
}

func (o DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput) ToDataLakeConfigurationLifecycleConfigurationTransitionArrayOutput() DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput {
	return o
}

func (o DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput) ToDataLakeConfigurationLifecycleConfigurationTransitionArrayOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput {
	return o
}

func (o DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput) Index(i pulumi.IntInput) DataLakeConfigurationLifecycleConfigurationTransitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataLakeConfigurationLifecycleConfigurationTransition {
		return vs[0].([]DataLakeConfigurationLifecycleConfigurationTransition)[vs[1].(int)]
	}).(DataLakeConfigurationLifecycleConfigurationTransitionOutput)
}

type DataLakeConfigurationReplicationConfiguration struct {
	// Replication enables automatic, asynchronous copying of objects across Amazon S3 buckets. Amazon S3 buckets that are configured for object replication can be owned by the same AWS account or by different accounts. You can replicate objects to a single destination bucket or to multiple destination buckets. The destination buckets can be in different AWS Regions or within the same Region as the source bucket.
	Regions []string `pulumi:"regions"`
	// Replication settings for the Amazon S3 buckets. This parameter uses the AWS Identity and Access Management (IAM) role you created that is managed by Security Lake, to ensure the replication setting is correct.
	RoleArn *string `pulumi:"roleArn"`
}

// DataLakeConfigurationReplicationConfigurationInput is an input type that accepts DataLakeConfigurationReplicationConfigurationArgs and DataLakeConfigurationReplicationConfigurationOutput values.
// You can construct a concrete instance of `DataLakeConfigurationReplicationConfigurationInput` via:
//
//	DataLakeConfigurationReplicationConfigurationArgs{...}
type DataLakeConfigurationReplicationConfigurationInput interface {
	pulumi.Input

	ToDataLakeConfigurationReplicationConfigurationOutput() DataLakeConfigurationReplicationConfigurationOutput
	ToDataLakeConfigurationReplicationConfigurationOutputWithContext(context.Context) DataLakeConfigurationReplicationConfigurationOutput
}

type DataLakeConfigurationReplicationConfigurationArgs struct {
	// Replication enables automatic, asynchronous copying of objects across Amazon S3 buckets. Amazon S3 buckets that are configured for object replication can be owned by the same AWS account or by different accounts. You can replicate objects to a single destination bucket or to multiple destination buckets. The destination buckets can be in different AWS Regions or within the same Region as the source bucket.
	Regions pulumi.StringArrayInput `pulumi:"regions"`
	// Replication settings for the Amazon S3 buckets. This parameter uses the AWS Identity and Access Management (IAM) role you created that is managed by Security Lake, to ensure the replication setting is correct.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
}

func (DataLakeConfigurationReplicationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeConfigurationReplicationConfiguration)(nil)).Elem()
}

func (i DataLakeConfigurationReplicationConfigurationArgs) ToDataLakeConfigurationReplicationConfigurationOutput() DataLakeConfigurationReplicationConfigurationOutput {
	return i.ToDataLakeConfigurationReplicationConfigurationOutputWithContext(context.Background())
}

func (i DataLakeConfigurationReplicationConfigurationArgs) ToDataLakeConfigurationReplicationConfigurationOutputWithContext(ctx context.Context) DataLakeConfigurationReplicationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationReplicationConfigurationOutput)
}

func (i DataLakeConfigurationReplicationConfigurationArgs) ToDataLakeConfigurationReplicationConfigurationPtrOutput() DataLakeConfigurationReplicationConfigurationPtrOutput {
	return i.ToDataLakeConfigurationReplicationConfigurationPtrOutputWithContext(context.Background())
}

func (i DataLakeConfigurationReplicationConfigurationArgs) ToDataLakeConfigurationReplicationConfigurationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationReplicationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationReplicationConfigurationOutput).ToDataLakeConfigurationReplicationConfigurationPtrOutputWithContext(ctx)
}

// DataLakeConfigurationReplicationConfigurationPtrInput is an input type that accepts DataLakeConfigurationReplicationConfigurationArgs, DataLakeConfigurationReplicationConfigurationPtr and DataLakeConfigurationReplicationConfigurationPtrOutput values.
// You can construct a concrete instance of `DataLakeConfigurationReplicationConfigurationPtrInput` via:
//
//	        DataLakeConfigurationReplicationConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataLakeConfigurationReplicationConfigurationPtrInput interface {
	pulumi.Input

	ToDataLakeConfigurationReplicationConfigurationPtrOutput() DataLakeConfigurationReplicationConfigurationPtrOutput
	ToDataLakeConfigurationReplicationConfigurationPtrOutputWithContext(context.Context) DataLakeConfigurationReplicationConfigurationPtrOutput
}

type dataLakeConfigurationReplicationConfigurationPtrType DataLakeConfigurationReplicationConfigurationArgs

func DataLakeConfigurationReplicationConfigurationPtr(v *DataLakeConfigurationReplicationConfigurationArgs) DataLakeConfigurationReplicationConfigurationPtrInput {
	return (*dataLakeConfigurationReplicationConfigurationPtrType)(v)
}

func (*dataLakeConfigurationReplicationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeConfigurationReplicationConfiguration)(nil)).Elem()
}

func (i *dataLakeConfigurationReplicationConfigurationPtrType) ToDataLakeConfigurationReplicationConfigurationPtrOutput() DataLakeConfigurationReplicationConfigurationPtrOutput {
	return i.ToDataLakeConfigurationReplicationConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataLakeConfigurationReplicationConfigurationPtrType) ToDataLakeConfigurationReplicationConfigurationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationReplicationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationReplicationConfigurationPtrOutput)
}

type DataLakeConfigurationReplicationConfigurationOutput struct{ *pulumi.OutputState }

func (DataLakeConfigurationReplicationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeConfigurationReplicationConfiguration)(nil)).Elem()
}

func (o DataLakeConfigurationReplicationConfigurationOutput) ToDataLakeConfigurationReplicationConfigurationOutput() DataLakeConfigurationReplicationConfigurationOutput {
	return o
}

func (o DataLakeConfigurationReplicationConfigurationOutput) ToDataLakeConfigurationReplicationConfigurationOutputWithContext(ctx context.Context) DataLakeConfigurationReplicationConfigurationOutput {
	return o
}

func (o DataLakeConfigurationReplicationConfigurationOutput) ToDataLakeConfigurationReplicationConfigurationPtrOutput() DataLakeConfigurationReplicationConfigurationPtrOutput {
	return o.ToDataLakeConfigurationReplicationConfigurationPtrOutputWithContext(context.Background())
}

func (o DataLakeConfigurationReplicationConfigurationOutput) ToDataLakeConfigurationReplicationConfigurationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationReplicationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataLakeConfigurationReplicationConfiguration) *DataLakeConfigurationReplicationConfiguration {
		return &v
	}).(DataLakeConfigurationReplicationConfigurationPtrOutput)
}

// Replication enables automatic, asynchronous copying of objects across Amazon S3 buckets. Amazon S3 buckets that are configured for object replication can be owned by the same AWS account or by different accounts. You can replicate objects to a single destination bucket or to multiple destination buckets. The destination buckets can be in different AWS Regions or within the same Region as the source bucket.
func (o DataLakeConfigurationReplicationConfigurationOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataLakeConfigurationReplicationConfiguration) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

// Replication settings for the Amazon S3 buckets. This parameter uses the AWS Identity and Access Management (IAM) role you created that is managed by Security Lake, to ensure the replication setting is correct.
func (o DataLakeConfigurationReplicationConfigurationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeConfigurationReplicationConfiguration) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

type DataLakeConfigurationReplicationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataLakeConfigurationReplicationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeConfigurationReplicationConfiguration)(nil)).Elem()
}

func (o DataLakeConfigurationReplicationConfigurationPtrOutput) ToDataLakeConfigurationReplicationConfigurationPtrOutput() DataLakeConfigurationReplicationConfigurationPtrOutput {
	return o
}

func (o DataLakeConfigurationReplicationConfigurationPtrOutput) ToDataLakeConfigurationReplicationConfigurationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationReplicationConfigurationPtrOutput {
	return o
}

func (o DataLakeConfigurationReplicationConfigurationPtrOutput) Elem() DataLakeConfigurationReplicationConfigurationOutput {
	return o.ApplyT(func(v *DataLakeConfigurationReplicationConfiguration) DataLakeConfigurationReplicationConfiguration {
		if v != nil {
			return *v
		}
		var ret DataLakeConfigurationReplicationConfiguration
		return ret
	}).(DataLakeConfigurationReplicationConfigurationOutput)
}

// Replication enables automatic, asynchronous copying of objects across Amazon S3 buckets. Amazon S3 buckets that are configured for object replication can be owned by the same AWS account or by different accounts. You can replicate objects to a single destination bucket or to multiple destination buckets. The destination buckets can be in different AWS Regions or within the same Region as the source bucket.
func (o DataLakeConfigurationReplicationConfigurationPtrOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataLakeConfigurationReplicationConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.Regions
	}).(pulumi.StringArrayOutput)
}

// Replication settings for the Amazon S3 buckets. This parameter uses the AWS Identity and Access Management (IAM) role you created that is managed by Security Lake, to ensure the replication setting is correct.
func (o DataLakeConfigurationReplicationConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeConfigurationReplicationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type DataLakeTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// DataLakeTimeoutsInput is an input type that accepts DataLakeTimeoutsArgs and DataLakeTimeoutsOutput values.
// You can construct a concrete instance of `DataLakeTimeoutsInput` via:
//
//	DataLakeTimeoutsArgs{...}
type DataLakeTimeoutsInput interface {
	pulumi.Input

	ToDataLakeTimeoutsOutput() DataLakeTimeoutsOutput
	ToDataLakeTimeoutsOutputWithContext(context.Context) DataLakeTimeoutsOutput
}

type DataLakeTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (DataLakeTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeTimeouts)(nil)).Elem()
}

func (i DataLakeTimeoutsArgs) ToDataLakeTimeoutsOutput() DataLakeTimeoutsOutput {
	return i.ToDataLakeTimeoutsOutputWithContext(context.Background())
}

func (i DataLakeTimeoutsArgs) ToDataLakeTimeoutsOutputWithContext(ctx context.Context) DataLakeTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeTimeoutsOutput)
}

func (i DataLakeTimeoutsArgs) ToDataLakeTimeoutsPtrOutput() DataLakeTimeoutsPtrOutput {
	return i.ToDataLakeTimeoutsPtrOutputWithContext(context.Background())
}

func (i DataLakeTimeoutsArgs) ToDataLakeTimeoutsPtrOutputWithContext(ctx context.Context) DataLakeTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeTimeoutsOutput).ToDataLakeTimeoutsPtrOutputWithContext(ctx)
}

// DataLakeTimeoutsPtrInput is an input type that accepts DataLakeTimeoutsArgs, DataLakeTimeoutsPtr and DataLakeTimeoutsPtrOutput values.
// You can construct a concrete instance of `DataLakeTimeoutsPtrInput` via:
//
//	        DataLakeTimeoutsArgs{...}
//
//	or:
//
//	        nil
type DataLakeTimeoutsPtrInput interface {
	pulumi.Input

	ToDataLakeTimeoutsPtrOutput() DataLakeTimeoutsPtrOutput
	ToDataLakeTimeoutsPtrOutputWithContext(context.Context) DataLakeTimeoutsPtrOutput
}

type dataLakeTimeoutsPtrType DataLakeTimeoutsArgs

func DataLakeTimeoutsPtr(v *DataLakeTimeoutsArgs) DataLakeTimeoutsPtrInput {
	return (*dataLakeTimeoutsPtrType)(v)
}

func (*dataLakeTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeTimeouts)(nil)).Elem()
}

func (i *dataLakeTimeoutsPtrType) ToDataLakeTimeoutsPtrOutput() DataLakeTimeoutsPtrOutput {
	return i.ToDataLakeTimeoutsPtrOutputWithContext(context.Background())
}

func (i *dataLakeTimeoutsPtrType) ToDataLakeTimeoutsPtrOutputWithContext(ctx context.Context) DataLakeTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeTimeoutsPtrOutput)
}

type DataLakeTimeoutsOutput struct{ *pulumi.OutputState }

func (DataLakeTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeTimeouts)(nil)).Elem()
}

func (o DataLakeTimeoutsOutput) ToDataLakeTimeoutsOutput() DataLakeTimeoutsOutput {
	return o
}

func (o DataLakeTimeoutsOutput) ToDataLakeTimeoutsOutputWithContext(ctx context.Context) DataLakeTimeoutsOutput {
	return o
}

func (o DataLakeTimeoutsOutput) ToDataLakeTimeoutsPtrOutput() DataLakeTimeoutsPtrOutput {
	return o.ToDataLakeTimeoutsPtrOutputWithContext(context.Background())
}

func (o DataLakeTimeoutsOutput) ToDataLakeTimeoutsPtrOutputWithContext(ctx context.Context) DataLakeTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataLakeTimeouts) *DataLakeTimeouts {
		return &v
	}).(DataLakeTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DataLakeTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o DataLakeTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DataLakeTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type DataLakeTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (DataLakeTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeTimeouts)(nil)).Elem()
}

func (o DataLakeTimeoutsPtrOutput) ToDataLakeTimeoutsPtrOutput() DataLakeTimeoutsPtrOutput {
	return o
}

func (o DataLakeTimeoutsPtrOutput) ToDataLakeTimeoutsPtrOutputWithContext(ctx context.Context) DataLakeTimeoutsPtrOutput {
	return o
}

func (o DataLakeTimeoutsPtrOutput) Elem() DataLakeTimeoutsOutput {
	return o.ApplyT(func(v *DataLakeTimeouts) DataLakeTimeouts {
		if v != nil {
			return *v
		}
		var ret DataLakeTimeouts
		return ret
	}).(DataLakeTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DataLakeTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o DataLakeTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DataLakeTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type SubscriberNotificationConfiguration struct {
	// The configurations for HTTPS subscriber notification.
	HttpsNotificationConfiguration *SubscriberNotificationConfigurationHttpsNotificationConfiguration `pulumi:"httpsNotificationConfiguration"`
	// The configurations for SQS subscriber notification.
	SqsNotificationConfiguration *SubscriberNotificationConfigurationSqsNotificationConfiguration `pulumi:"sqsNotificationConfiguration"`
}

// SubscriberNotificationConfigurationInput is an input type that accepts SubscriberNotificationConfigurationArgs and SubscriberNotificationConfigurationOutput values.
// You can construct a concrete instance of `SubscriberNotificationConfigurationInput` via:
//
//	SubscriberNotificationConfigurationArgs{...}
type SubscriberNotificationConfigurationInput interface {
	pulumi.Input

	ToSubscriberNotificationConfigurationOutput() SubscriberNotificationConfigurationOutput
	ToSubscriberNotificationConfigurationOutputWithContext(context.Context) SubscriberNotificationConfigurationOutput
}

type SubscriberNotificationConfigurationArgs struct {
	// The configurations for HTTPS subscriber notification.
	HttpsNotificationConfiguration SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrInput `pulumi:"httpsNotificationConfiguration"`
	// The configurations for SQS subscriber notification.
	SqsNotificationConfiguration SubscriberNotificationConfigurationSqsNotificationConfigurationPtrInput `pulumi:"sqsNotificationConfiguration"`
}

func (SubscriberNotificationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriberNotificationConfiguration)(nil)).Elem()
}

func (i SubscriberNotificationConfigurationArgs) ToSubscriberNotificationConfigurationOutput() SubscriberNotificationConfigurationOutput {
	return i.ToSubscriberNotificationConfigurationOutputWithContext(context.Background())
}

func (i SubscriberNotificationConfigurationArgs) ToSubscriberNotificationConfigurationOutputWithContext(ctx context.Context) SubscriberNotificationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberNotificationConfigurationOutput)
}

func (i SubscriberNotificationConfigurationArgs) ToSubscriberNotificationConfigurationPtrOutput() SubscriberNotificationConfigurationPtrOutput {
	return i.ToSubscriberNotificationConfigurationPtrOutputWithContext(context.Background())
}

func (i SubscriberNotificationConfigurationArgs) ToSubscriberNotificationConfigurationPtrOutputWithContext(ctx context.Context) SubscriberNotificationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberNotificationConfigurationOutput).ToSubscriberNotificationConfigurationPtrOutputWithContext(ctx)
}

// SubscriberNotificationConfigurationPtrInput is an input type that accepts SubscriberNotificationConfigurationArgs, SubscriberNotificationConfigurationPtr and SubscriberNotificationConfigurationPtrOutput values.
// You can construct a concrete instance of `SubscriberNotificationConfigurationPtrInput` via:
//
//	        SubscriberNotificationConfigurationArgs{...}
//
//	or:
//
//	        nil
type SubscriberNotificationConfigurationPtrInput interface {
	pulumi.Input

	ToSubscriberNotificationConfigurationPtrOutput() SubscriberNotificationConfigurationPtrOutput
	ToSubscriberNotificationConfigurationPtrOutputWithContext(context.Context) SubscriberNotificationConfigurationPtrOutput
}

type subscriberNotificationConfigurationPtrType SubscriberNotificationConfigurationArgs

func SubscriberNotificationConfigurationPtr(v *SubscriberNotificationConfigurationArgs) SubscriberNotificationConfigurationPtrInput {
	return (*subscriberNotificationConfigurationPtrType)(v)
}

func (*subscriberNotificationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriberNotificationConfiguration)(nil)).Elem()
}

func (i *subscriberNotificationConfigurationPtrType) ToSubscriberNotificationConfigurationPtrOutput() SubscriberNotificationConfigurationPtrOutput {
	return i.ToSubscriberNotificationConfigurationPtrOutputWithContext(context.Background())
}

func (i *subscriberNotificationConfigurationPtrType) ToSubscriberNotificationConfigurationPtrOutputWithContext(ctx context.Context) SubscriberNotificationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberNotificationConfigurationPtrOutput)
}

type SubscriberNotificationConfigurationOutput struct{ *pulumi.OutputState }

func (SubscriberNotificationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriberNotificationConfiguration)(nil)).Elem()
}

func (o SubscriberNotificationConfigurationOutput) ToSubscriberNotificationConfigurationOutput() SubscriberNotificationConfigurationOutput {
	return o
}

func (o SubscriberNotificationConfigurationOutput) ToSubscriberNotificationConfigurationOutputWithContext(ctx context.Context) SubscriberNotificationConfigurationOutput {
	return o
}

func (o SubscriberNotificationConfigurationOutput) ToSubscriberNotificationConfigurationPtrOutput() SubscriberNotificationConfigurationPtrOutput {
	return o.ToSubscriberNotificationConfigurationPtrOutputWithContext(context.Background())
}

func (o SubscriberNotificationConfigurationOutput) ToSubscriberNotificationConfigurationPtrOutputWithContext(ctx context.Context) SubscriberNotificationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriberNotificationConfiguration) *SubscriberNotificationConfiguration {
		return &v
	}).(SubscriberNotificationConfigurationPtrOutput)
}

// The configurations for HTTPS subscriber notification.
func (o SubscriberNotificationConfigurationOutput) HttpsNotificationConfiguration() SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput {
	return o.ApplyT(func(v SubscriberNotificationConfiguration) *SubscriberNotificationConfigurationHttpsNotificationConfiguration {
		return v.HttpsNotificationConfiguration
	}).(SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput)
}

// The configurations for SQS subscriber notification.
func (o SubscriberNotificationConfigurationOutput) SqsNotificationConfiguration() SubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput {
	return o.ApplyT(func(v SubscriberNotificationConfiguration) *SubscriberNotificationConfigurationSqsNotificationConfiguration {
		return v.SqsNotificationConfiguration
	}).(SubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput)
}

type SubscriberNotificationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (SubscriberNotificationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriberNotificationConfiguration)(nil)).Elem()
}

func (o SubscriberNotificationConfigurationPtrOutput) ToSubscriberNotificationConfigurationPtrOutput() SubscriberNotificationConfigurationPtrOutput {
	return o
}

func (o SubscriberNotificationConfigurationPtrOutput) ToSubscriberNotificationConfigurationPtrOutputWithContext(ctx context.Context) SubscriberNotificationConfigurationPtrOutput {
	return o
}

func (o SubscriberNotificationConfigurationPtrOutput) Elem() SubscriberNotificationConfigurationOutput {
	return o.ApplyT(func(v *SubscriberNotificationConfiguration) SubscriberNotificationConfiguration {
		if v != nil {
			return *v
		}
		var ret SubscriberNotificationConfiguration
		return ret
	}).(SubscriberNotificationConfigurationOutput)
}

// The configurations for HTTPS subscriber notification.
func (o SubscriberNotificationConfigurationPtrOutput) HttpsNotificationConfiguration() SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput {
	return o.ApplyT(func(v *SubscriberNotificationConfiguration) *SubscriberNotificationConfigurationHttpsNotificationConfiguration {
		if v == nil {
			return nil
		}
		return v.HttpsNotificationConfiguration
	}).(SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput)
}

// The configurations for SQS subscriber notification.
func (o SubscriberNotificationConfigurationPtrOutput) SqsNotificationConfiguration() SubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput {
	return o.ApplyT(func(v *SubscriberNotificationConfiguration) *SubscriberNotificationConfigurationSqsNotificationConfiguration {
		if v == nil {
			return nil
		}
		return v.SqsNotificationConfiguration
	}).(SubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput)
}

type SubscriberNotificationConfigurationHttpsNotificationConfiguration struct {
	// The key name for the notification subscription.
	AuthorizationApiKeyName *string `pulumi:"authorizationApiKeyName"`
	// The key value for the notification subscription.
	AuthorizationApiKeyValue *string `pulumi:"authorizationApiKeyValue"`
	// The subscription endpoint in Security Lake. If you prefer notification with an HTTPs endpoint, populate this field.
	Endpoint *string `pulumi:"endpoint"`
	// The HTTPS method used for the notification subscription.
	HttpMethod *string `pulumi:"httpMethod"`
	// The Amazon Resource Name (ARN) of the EventBridge API destinations IAM role that you created. For more information about ARNs and how to use them in policies, see Managing data access and AWS Managed Policies in the Amazon Security Lake User Guide.
	TargetRoleArn *string `pulumi:"targetRoleArn"`
}

// SubscriberNotificationConfigurationHttpsNotificationConfigurationInput is an input type that accepts SubscriberNotificationConfigurationHttpsNotificationConfigurationArgs and SubscriberNotificationConfigurationHttpsNotificationConfigurationOutput values.
// You can construct a concrete instance of `SubscriberNotificationConfigurationHttpsNotificationConfigurationInput` via:
//
//	SubscriberNotificationConfigurationHttpsNotificationConfigurationArgs{...}
type SubscriberNotificationConfigurationHttpsNotificationConfigurationInput interface {
	pulumi.Input

	ToSubscriberNotificationConfigurationHttpsNotificationConfigurationOutput() SubscriberNotificationConfigurationHttpsNotificationConfigurationOutput
	ToSubscriberNotificationConfigurationHttpsNotificationConfigurationOutputWithContext(context.Context) SubscriberNotificationConfigurationHttpsNotificationConfigurationOutput
}

type SubscriberNotificationConfigurationHttpsNotificationConfigurationArgs struct {
	// The key name for the notification subscription.
	AuthorizationApiKeyName pulumi.StringPtrInput `pulumi:"authorizationApiKeyName"`
	// The key value for the notification subscription.
	AuthorizationApiKeyValue pulumi.StringPtrInput `pulumi:"authorizationApiKeyValue"`
	// The subscription endpoint in Security Lake. If you prefer notification with an HTTPs endpoint, populate this field.
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
	// The HTTPS method used for the notification subscription.
	HttpMethod pulumi.StringPtrInput `pulumi:"httpMethod"`
	// The Amazon Resource Name (ARN) of the EventBridge API destinations IAM role that you created. For more information about ARNs and how to use them in policies, see Managing data access and AWS Managed Policies in the Amazon Security Lake User Guide.
	TargetRoleArn pulumi.StringPtrInput `pulumi:"targetRoleArn"`
}

func (SubscriberNotificationConfigurationHttpsNotificationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriberNotificationConfigurationHttpsNotificationConfiguration)(nil)).Elem()
}

func (i SubscriberNotificationConfigurationHttpsNotificationConfigurationArgs) ToSubscriberNotificationConfigurationHttpsNotificationConfigurationOutput() SubscriberNotificationConfigurationHttpsNotificationConfigurationOutput {
	return i.ToSubscriberNotificationConfigurationHttpsNotificationConfigurationOutputWithContext(context.Background())
}

func (i SubscriberNotificationConfigurationHttpsNotificationConfigurationArgs) ToSubscriberNotificationConfigurationHttpsNotificationConfigurationOutputWithContext(ctx context.Context) SubscriberNotificationConfigurationHttpsNotificationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberNotificationConfigurationHttpsNotificationConfigurationOutput)
}

func (i SubscriberNotificationConfigurationHttpsNotificationConfigurationArgs) ToSubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput() SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput {
	return i.ToSubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutputWithContext(context.Background())
}

func (i SubscriberNotificationConfigurationHttpsNotificationConfigurationArgs) ToSubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutputWithContext(ctx context.Context) SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberNotificationConfigurationHttpsNotificationConfigurationOutput).ToSubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutputWithContext(ctx)
}

// SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrInput is an input type that accepts SubscriberNotificationConfigurationHttpsNotificationConfigurationArgs, SubscriberNotificationConfigurationHttpsNotificationConfigurationPtr and SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput values.
// You can construct a concrete instance of `SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrInput` via:
//
//	        SubscriberNotificationConfigurationHttpsNotificationConfigurationArgs{...}
//
//	or:
//
//	        nil
type SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrInput interface {
	pulumi.Input

	ToSubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput() SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput
	ToSubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutputWithContext(context.Context) SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput
}

type subscriberNotificationConfigurationHttpsNotificationConfigurationPtrType SubscriberNotificationConfigurationHttpsNotificationConfigurationArgs

func SubscriberNotificationConfigurationHttpsNotificationConfigurationPtr(v *SubscriberNotificationConfigurationHttpsNotificationConfigurationArgs) SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrInput {
	return (*subscriberNotificationConfigurationHttpsNotificationConfigurationPtrType)(v)
}

func (*subscriberNotificationConfigurationHttpsNotificationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriberNotificationConfigurationHttpsNotificationConfiguration)(nil)).Elem()
}

func (i *subscriberNotificationConfigurationHttpsNotificationConfigurationPtrType) ToSubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput() SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput {
	return i.ToSubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutputWithContext(context.Background())
}

func (i *subscriberNotificationConfigurationHttpsNotificationConfigurationPtrType) ToSubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutputWithContext(ctx context.Context) SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput)
}

type SubscriberNotificationConfigurationHttpsNotificationConfigurationOutput struct{ *pulumi.OutputState }

func (SubscriberNotificationConfigurationHttpsNotificationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriberNotificationConfigurationHttpsNotificationConfiguration)(nil)).Elem()
}

func (o SubscriberNotificationConfigurationHttpsNotificationConfigurationOutput) ToSubscriberNotificationConfigurationHttpsNotificationConfigurationOutput() SubscriberNotificationConfigurationHttpsNotificationConfigurationOutput {
	return o
}

func (o SubscriberNotificationConfigurationHttpsNotificationConfigurationOutput) ToSubscriberNotificationConfigurationHttpsNotificationConfigurationOutputWithContext(ctx context.Context) SubscriberNotificationConfigurationHttpsNotificationConfigurationOutput {
	return o
}

func (o SubscriberNotificationConfigurationHttpsNotificationConfigurationOutput) ToSubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput() SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput {
	return o.ToSubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutputWithContext(context.Background())
}

func (o SubscriberNotificationConfigurationHttpsNotificationConfigurationOutput) ToSubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutputWithContext(ctx context.Context) SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriberNotificationConfigurationHttpsNotificationConfiguration) *SubscriberNotificationConfigurationHttpsNotificationConfiguration {
		return &v
	}).(SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput)
}

// The key name for the notification subscription.
func (o SubscriberNotificationConfigurationHttpsNotificationConfigurationOutput) AuthorizationApiKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriberNotificationConfigurationHttpsNotificationConfiguration) *string {
		return v.AuthorizationApiKeyName
	}).(pulumi.StringPtrOutput)
}

// The key value for the notification subscription.
func (o SubscriberNotificationConfigurationHttpsNotificationConfigurationOutput) AuthorizationApiKeyValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriberNotificationConfigurationHttpsNotificationConfiguration) *string {
		return v.AuthorizationApiKeyValue
	}).(pulumi.StringPtrOutput)
}

// The subscription endpoint in Security Lake. If you prefer notification with an HTTPs endpoint, populate this field.
func (o SubscriberNotificationConfigurationHttpsNotificationConfigurationOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriberNotificationConfigurationHttpsNotificationConfiguration) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// The HTTPS method used for the notification subscription.
func (o SubscriberNotificationConfigurationHttpsNotificationConfigurationOutput) HttpMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriberNotificationConfigurationHttpsNotificationConfiguration) *string { return v.HttpMethod }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the EventBridge API destinations IAM role that you created. For more information about ARNs and how to use them in policies, see Managing data access and AWS Managed Policies in the Amazon Security Lake User Guide.
func (o SubscriberNotificationConfigurationHttpsNotificationConfigurationOutput) TargetRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriberNotificationConfigurationHttpsNotificationConfiguration) *string {
		return v.TargetRoleArn
	}).(pulumi.StringPtrOutput)
}

type SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriberNotificationConfigurationHttpsNotificationConfiguration)(nil)).Elem()
}

func (o SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput) ToSubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput() SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput {
	return o
}

func (o SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput) ToSubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutputWithContext(ctx context.Context) SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput {
	return o
}

func (o SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput) Elem() SubscriberNotificationConfigurationHttpsNotificationConfigurationOutput {
	return o.ApplyT(func(v *SubscriberNotificationConfigurationHttpsNotificationConfiguration) SubscriberNotificationConfigurationHttpsNotificationConfiguration {
		if v != nil {
			return *v
		}
		var ret SubscriberNotificationConfigurationHttpsNotificationConfiguration
		return ret
	}).(SubscriberNotificationConfigurationHttpsNotificationConfigurationOutput)
}

// The key name for the notification subscription.
func (o SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput) AuthorizationApiKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriberNotificationConfigurationHttpsNotificationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationApiKeyName
	}).(pulumi.StringPtrOutput)
}

// The key value for the notification subscription.
func (o SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput) AuthorizationApiKeyValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriberNotificationConfigurationHttpsNotificationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AuthorizationApiKeyValue
	}).(pulumi.StringPtrOutput)
}

// The subscription endpoint in Security Lake. If you prefer notification with an HTTPs endpoint, populate this field.
func (o SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriberNotificationConfigurationHttpsNotificationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

// The HTTPS method used for the notification subscription.
func (o SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput) HttpMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriberNotificationConfigurationHttpsNotificationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.HttpMethod
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the EventBridge API destinations IAM role that you created. For more information about ARNs and how to use them in policies, see Managing data access and AWS Managed Policies in the Amazon Security Lake User Guide.
func (o SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput) TargetRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriberNotificationConfigurationHttpsNotificationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.TargetRoleArn
	}).(pulumi.StringPtrOutput)
}

type SubscriberNotificationConfigurationSqsNotificationConfiguration struct {
}

// SubscriberNotificationConfigurationSqsNotificationConfigurationInput is an input type that accepts SubscriberNotificationConfigurationSqsNotificationConfigurationArgs and SubscriberNotificationConfigurationSqsNotificationConfigurationOutput values.
// You can construct a concrete instance of `SubscriberNotificationConfigurationSqsNotificationConfigurationInput` via:
//
//	SubscriberNotificationConfigurationSqsNotificationConfigurationArgs{...}
type SubscriberNotificationConfigurationSqsNotificationConfigurationInput interface {
	pulumi.Input

	ToSubscriberNotificationConfigurationSqsNotificationConfigurationOutput() SubscriberNotificationConfigurationSqsNotificationConfigurationOutput
	ToSubscriberNotificationConfigurationSqsNotificationConfigurationOutputWithContext(context.Context) SubscriberNotificationConfigurationSqsNotificationConfigurationOutput
}

type SubscriberNotificationConfigurationSqsNotificationConfigurationArgs struct {
}

func (SubscriberNotificationConfigurationSqsNotificationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriberNotificationConfigurationSqsNotificationConfiguration)(nil)).Elem()
}

func (i SubscriberNotificationConfigurationSqsNotificationConfigurationArgs) ToSubscriberNotificationConfigurationSqsNotificationConfigurationOutput() SubscriberNotificationConfigurationSqsNotificationConfigurationOutput {
	return i.ToSubscriberNotificationConfigurationSqsNotificationConfigurationOutputWithContext(context.Background())
}

func (i SubscriberNotificationConfigurationSqsNotificationConfigurationArgs) ToSubscriberNotificationConfigurationSqsNotificationConfigurationOutputWithContext(ctx context.Context) SubscriberNotificationConfigurationSqsNotificationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberNotificationConfigurationSqsNotificationConfigurationOutput)
}

func (i SubscriberNotificationConfigurationSqsNotificationConfigurationArgs) ToSubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput() SubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput {
	return i.ToSubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutputWithContext(context.Background())
}

func (i SubscriberNotificationConfigurationSqsNotificationConfigurationArgs) ToSubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutputWithContext(ctx context.Context) SubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberNotificationConfigurationSqsNotificationConfigurationOutput).ToSubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutputWithContext(ctx)
}

// SubscriberNotificationConfigurationSqsNotificationConfigurationPtrInput is an input type that accepts SubscriberNotificationConfigurationSqsNotificationConfigurationArgs, SubscriberNotificationConfigurationSqsNotificationConfigurationPtr and SubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput values.
// You can construct a concrete instance of `SubscriberNotificationConfigurationSqsNotificationConfigurationPtrInput` via:
//
//	        SubscriberNotificationConfigurationSqsNotificationConfigurationArgs{...}
//
//	or:
//
//	        nil
type SubscriberNotificationConfigurationSqsNotificationConfigurationPtrInput interface {
	pulumi.Input

	ToSubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput() SubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput
	ToSubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutputWithContext(context.Context) SubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput
}

type subscriberNotificationConfigurationSqsNotificationConfigurationPtrType SubscriberNotificationConfigurationSqsNotificationConfigurationArgs

func SubscriberNotificationConfigurationSqsNotificationConfigurationPtr(v *SubscriberNotificationConfigurationSqsNotificationConfigurationArgs) SubscriberNotificationConfigurationSqsNotificationConfigurationPtrInput {
	return (*subscriberNotificationConfigurationSqsNotificationConfigurationPtrType)(v)
}

func (*subscriberNotificationConfigurationSqsNotificationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriberNotificationConfigurationSqsNotificationConfiguration)(nil)).Elem()
}

func (i *subscriberNotificationConfigurationSqsNotificationConfigurationPtrType) ToSubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput() SubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput {
	return i.ToSubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutputWithContext(context.Background())
}

func (i *subscriberNotificationConfigurationSqsNotificationConfigurationPtrType) ToSubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutputWithContext(ctx context.Context) SubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput)
}

type SubscriberNotificationConfigurationSqsNotificationConfigurationOutput struct{ *pulumi.OutputState }

func (SubscriberNotificationConfigurationSqsNotificationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriberNotificationConfigurationSqsNotificationConfiguration)(nil)).Elem()
}

func (o SubscriberNotificationConfigurationSqsNotificationConfigurationOutput) ToSubscriberNotificationConfigurationSqsNotificationConfigurationOutput() SubscriberNotificationConfigurationSqsNotificationConfigurationOutput {
	return o
}

func (o SubscriberNotificationConfigurationSqsNotificationConfigurationOutput) ToSubscriberNotificationConfigurationSqsNotificationConfigurationOutputWithContext(ctx context.Context) SubscriberNotificationConfigurationSqsNotificationConfigurationOutput {
	return o
}

func (o SubscriberNotificationConfigurationSqsNotificationConfigurationOutput) ToSubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput() SubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput {
	return o.ToSubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutputWithContext(context.Background())
}

func (o SubscriberNotificationConfigurationSqsNotificationConfigurationOutput) ToSubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutputWithContext(ctx context.Context) SubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriberNotificationConfigurationSqsNotificationConfiguration) *SubscriberNotificationConfigurationSqsNotificationConfiguration {
		return &v
	}).(SubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput)
}

type SubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (SubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriberNotificationConfigurationSqsNotificationConfiguration)(nil)).Elem()
}

func (o SubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput) ToSubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput() SubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput {
	return o
}

func (o SubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput) ToSubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutputWithContext(ctx context.Context) SubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput {
	return o
}

func (o SubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput) Elem() SubscriberNotificationConfigurationSqsNotificationConfigurationOutput {
	return o.ApplyT(func(v *SubscriberNotificationConfigurationSqsNotificationConfiguration) SubscriberNotificationConfigurationSqsNotificationConfiguration {
		if v != nil {
			return *v
		}
		var ret SubscriberNotificationConfigurationSqsNotificationConfiguration
		return ret
	}).(SubscriberNotificationConfigurationSqsNotificationConfigurationOutput)
}

type SubscriberSource struct {
	// Amazon Security Lake supports log and event collection for natively supported AWS services.
	AwsLogSourceResource *SubscriberSourceAwsLogSourceResource `pulumi:"awsLogSourceResource"`
	// Amazon Security Lake supports custom source types.
	CustomLogSourceResource *SubscriberSourceCustomLogSourceResource `pulumi:"customLogSourceResource"`
}

// SubscriberSourceInput is an input type that accepts SubscriberSourceArgs and SubscriberSourceOutput values.
// You can construct a concrete instance of `SubscriberSourceInput` via:
//
//	SubscriberSourceArgs{...}
type SubscriberSourceInput interface {
	pulumi.Input

	ToSubscriberSourceOutput() SubscriberSourceOutput
	ToSubscriberSourceOutputWithContext(context.Context) SubscriberSourceOutput
}

type SubscriberSourceArgs struct {
	// Amazon Security Lake supports log and event collection for natively supported AWS services.
	AwsLogSourceResource SubscriberSourceAwsLogSourceResourcePtrInput `pulumi:"awsLogSourceResource"`
	// Amazon Security Lake supports custom source types.
	CustomLogSourceResource SubscriberSourceCustomLogSourceResourcePtrInput `pulumi:"customLogSourceResource"`
}

func (SubscriberSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriberSource)(nil)).Elem()
}

func (i SubscriberSourceArgs) ToSubscriberSourceOutput() SubscriberSourceOutput {
	return i.ToSubscriberSourceOutputWithContext(context.Background())
}

func (i SubscriberSourceArgs) ToSubscriberSourceOutputWithContext(ctx context.Context) SubscriberSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberSourceOutput)
}

func (i SubscriberSourceArgs) ToSubscriberSourcePtrOutput() SubscriberSourcePtrOutput {
	return i.ToSubscriberSourcePtrOutputWithContext(context.Background())
}

func (i SubscriberSourceArgs) ToSubscriberSourcePtrOutputWithContext(ctx context.Context) SubscriberSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberSourceOutput).ToSubscriberSourcePtrOutputWithContext(ctx)
}

// SubscriberSourcePtrInput is an input type that accepts SubscriberSourceArgs, SubscriberSourcePtr and SubscriberSourcePtrOutput values.
// You can construct a concrete instance of `SubscriberSourcePtrInput` via:
//
//	        SubscriberSourceArgs{...}
//
//	or:
//
//	        nil
type SubscriberSourcePtrInput interface {
	pulumi.Input

	ToSubscriberSourcePtrOutput() SubscriberSourcePtrOutput
	ToSubscriberSourcePtrOutputWithContext(context.Context) SubscriberSourcePtrOutput
}

type subscriberSourcePtrType SubscriberSourceArgs

func SubscriberSourcePtr(v *SubscriberSourceArgs) SubscriberSourcePtrInput {
	return (*subscriberSourcePtrType)(v)
}

func (*subscriberSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriberSource)(nil)).Elem()
}

func (i *subscriberSourcePtrType) ToSubscriberSourcePtrOutput() SubscriberSourcePtrOutput {
	return i.ToSubscriberSourcePtrOutputWithContext(context.Background())
}

func (i *subscriberSourcePtrType) ToSubscriberSourcePtrOutputWithContext(ctx context.Context) SubscriberSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberSourcePtrOutput)
}

type SubscriberSourceOutput struct{ *pulumi.OutputState }

func (SubscriberSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriberSource)(nil)).Elem()
}

func (o SubscriberSourceOutput) ToSubscriberSourceOutput() SubscriberSourceOutput {
	return o
}

func (o SubscriberSourceOutput) ToSubscriberSourceOutputWithContext(ctx context.Context) SubscriberSourceOutput {
	return o
}

func (o SubscriberSourceOutput) ToSubscriberSourcePtrOutput() SubscriberSourcePtrOutput {
	return o.ToSubscriberSourcePtrOutputWithContext(context.Background())
}

func (o SubscriberSourceOutput) ToSubscriberSourcePtrOutputWithContext(ctx context.Context) SubscriberSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriberSource) *SubscriberSource {
		return &v
	}).(SubscriberSourcePtrOutput)
}

// Amazon Security Lake supports log and event collection for natively supported AWS services.
func (o SubscriberSourceOutput) AwsLogSourceResource() SubscriberSourceAwsLogSourceResourcePtrOutput {
	return o.ApplyT(func(v SubscriberSource) *SubscriberSourceAwsLogSourceResource { return v.AwsLogSourceResource }).(SubscriberSourceAwsLogSourceResourcePtrOutput)
}

// Amazon Security Lake supports custom source types.
func (o SubscriberSourceOutput) CustomLogSourceResource() SubscriberSourceCustomLogSourceResourcePtrOutput {
	return o.ApplyT(func(v SubscriberSource) *SubscriberSourceCustomLogSourceResource { return v.CustomLogSourceResource }).(SubscriberSourceCustomLogSourceResourcePtrOutput)
}

type SubscriberSourcePtrOutput struct{ *pulumi.OutputState }

func (SubscriberSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriberSource)(nil)).Elem()
}

func (o SubscriberSourcePtrOutput) ToSubscriberSourcePtrOutput() SubscriberSourcePtrOutput {
	return o
}

func (o SubscriberSourcePtrOutput) ToSubscriberSourcePtrOutputWithContext(ctx context.Context) SubscriberSourcePtrOutput {
	return o
}

func (o SubscriberSourcePtrOutput) Elem() SubscriberSourceOutput {
	return o.ApplyT(func(v *SubscriberSource) SubscriberSource {
		if v != nil {
			return *v
		}
		var ret SubscriberSource
		return ret
	}).(SubscriberSourceOutput)
}

// Amazon Security Lake supports log and event collection for natively supported AWS services.
func (o SubscriberSourcePtrOutput) AwsLogSourceResource() SubscriberSourceAwsLogSourceResourcePtrOutput {
	return o.ApplyT(func(v *SubscriberSource) *SubscriberSourceAwsLogSourceResource {
		if v == nil {
			return nil
		}
		return v.AwsLogSourceResource
	}).(SubscriberSourceAwsLogSourceResourcePtrOutput)
}

// Amazon Security Lake supports custom source types.
func (o SubscriberSourcePtrOutput) CustomLogSourceResource() SubscriberSourceCustomLogSourceResourcePtrOutput {
	return o.ApplyT(func(v *SubscriberSource) *SubscriberSourceCustomLogSourceResource {
		if v == nil {
			return nil
		}
		return v.CustomLogSourceResource
	}).(SubscriberSourceCustomLogSourceResourcePtrOutput)
}

type SubscriberSourceAwsLogSourceResource struct {
	// The name for a third-party custom source. This must be a Regionally unique value.
	SourceName *string `pulumi:"sourceName"`
	// The version for a third-party custom source. This must be a Regionally unique value.
	SourceVersion *string `pulumi:"sourceVersion"`
}

// SubscriberSourceAwsLogSourceResourceInput is an input type that accepts SubscriberSourceAwsLogSourceResourceArgs and SubscriberSourceAwsLogSourceResourceOutput values.
// You can construct a concrete instance of `SubscriberSourceAwsLogSourceResourceInput` via:
//
//	SubscriberSourceAwsLogSourceResourceArgs{...}
type SubscriberSourceAwsLogSourceResourceInput interface {
	pulumi.Input

	ToSubscriberSourceAwsLogSourceResourceOutput() SubscriberSourceAwsLogSourceResourceOutput
	ToSubscriberSourceAwsLogSourceResourceOutputWithContext(context.Context) SubscriberSourceAwsLogSourceResourceOutput
}

type SubscriberSourceAwsLogSourceResourceArgs struct {
	// The name for a third-party custom source. This must be a Regionally unique value.
	SourceName pulumi.StringPtrInput `pulumi:"sourceName"`
	// The version for a third-party custom source. This must be a Regionally unique value.
	SourceVersion pulumi.StringPtrInput `pulumi:"sourceVersion"`
}

func (SubscriberSourceAwsLogSourceResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriberSourceAwsLogSourceResource)(nil)).Elem()
}

func (i SubscriberSourceAwsLogSourceResourceArgs) ToSubscriberSourceAwsLogSourceResourceOutput() SubscriberSourceAwsLogSourceResourceOutput {
	return i.ToSubscriberSourceAwsLogSourceResourceOutputWithContext(context.Background())
}

func (i SubscriberSourceAwsLogSourceResourceArgs) ToSubscriberSourceAwsLogSourceResourceOutputWithContext(ctx context.Context) SubscriberSourceAwsLogSourceResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberSourceAwsLogSourceResourceOutput)
}

func (i SubscriberSourceAwsLogSourceResourceArgs) ToSubscriberSourceAwsLogSourceResourcePtrOutput() SubscriberSourceAwsLogSourceResourcePtrOutput {
	return i.ToSubscriberSourceAwsLogSourceResourcePtrOutputWithContext(context.Background())
}

func (i SubscriberSourceAwsLogSourceResourceArgs) ToSubscriberSourceAwsLogSourceResourcePtrOutputWithContext(ctx context.Context) SubscriberSourceAwsLogSourceResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberSourceAwsLogSourceResourceOutput).ToSubscriberSourceAwsLogSourceResourcePtrOutputWithContext(ctx)
}

// SubscriberSourceAwsLogSourceResourcePtrInput is an input type that accepts SubscriberSourceAwsLogSourceResourceArgs, SubscriberSourceAwsLogSourceResourcePtr and SubscriberSourceAwsLogSourceResourcePtrOutput values.
// You can construct a concrete instance of `SubscriberSourceAwsLogSourceResourcePtrInput` via:
//
//	        SubscriberSourceAwsLogSourceResourceArgs{...}
//
//	or:
//
//	        nil
type SubscriberSourceAwsLogSourceResourcePtrInput interface {
	pulumi.Input

	ToSubscriberSourceAwsLogSourceResourcePtrOutput() SubscriberSourceAwsLogSourceResourcePtrOutput
	ToSubscriberSourceAwsLogSourceResourcePtrOutputWithContext(context.Context) SubscriberSourceAwsLogSourceResourcePtrOutput
}

type subscriberSourceAwsLogSourceResourcePtrType SubscriberSourceAwsLogSourceResourceArgs

func SubscriberSourceAwsLogSourceResourcePtr(v *SubscriberSourceAwsLogSourceResourceArgs) SubscriberSourceAwsLogSourceResourcePtrInput {
	return (*subscriberSourceAwsLogSourceResourcePtrType)(v)
}

func (*subscriberSourceAwsLogSourceResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriberSourceAwsLogSourceResource)(nil)).Elem()
}

func (i *subscriberSourceAwsLogSourceResourcePtrType) ToSubscriberSourceAwsLogSourceResourcePtrOutput() SubscriberSourceAwsLogSourceResourcePtrOutput {
	return i.ToSubscriberSourceAwsLogSourceResourcePtrOutputWithContext(context.Background())
}

func (i *subscriberSourceAwsLogSourceResourcePtrType) ToSubscriberSourceAwsLogSourceResourcePtrOutputWithContext(ctx context.Context) SubscriberSourceAwsLogSourceResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberSourceAwsLogSourceResourcePtrOutput)
}

type SubscriberSourceAwsLogSourceResourceOutput struct{ *pulumi.OutputState }

func (SubscriberSourceAwsLogSourceResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriberSourceAwsLogSourceResource)(nil)).Elem()
}

func (o SubscriberSourceAwsLogSourceResourceOutput) ToSubscriberSourceAwsLogSourceResourceOutput() SubscriberSourceAwsLogSourceResourceOutput {
	return o
}

func (o SubscriberSourceAwsLogSourceResourceOutput) ToSubscriberSourceAwsLogSourceResourceOutputWithContext(ctx context.Context) SubscriberSourceAwsLogSourceResourceOutput {
	return o
}

func (o SubscriberSourceAwsLogSourceResourceOutput) ToSubscriberSourceAwsLogSourceResourcePtrOutput() SubscriberSourceAwsLogSourceResourcePtrOutput {
	return o.ToSubscriberSourceAwsLogSourceResourcePtrOutputWithContext(context.Background())
}

func (o SubscriberSourceAwsLogSourceResourceOutput) ToSubscriberSourceAwsLogSourceResourcePtrOutputWithContext(ctx context.Context) SubscriberSourceAwsLogSourceResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriberSourceAwsLogSourceResource) *SubscriberSourceAwsLogSourceResource {
		return &v
	}).(SubscriberSourceAwsLogSourceResourcePtrOutput)
}

// The name for a third-party custom source. This must be a Regionally unique value.
func (o SubscriberSourceAwsLogSourceResourceOutput) SourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriberSourceAwsLogSourceResource) *string { return v.SourceName }).(pulumi.StringPtrOutput)
}

// The version for a third-party custom source. This must be a Regionally unique value.
func (o SubscriberSourceAwsLogSourceResourceOutput) SourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriberSourceAwsLogSourceResource) *string { return v.SourceVersion }).(pulumi.StringPtrOutput)
}

type SubscriberSourceAwsLogSourceResourcePtrOutput struct{ *pulumi.OutputState }

func (SubscriberSourceAwsLogSourceResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriberSourceAwsLogSourceResource)(nil)).Elem()
}

func (o SubscriberSourceAwsLogSourceResourcePtrOutput) ToSubscriberSourceAwsLogSourceResourcePtrOutput() SubscriberSourceAwsLogSourceResourcePtrOutput {
	return o
}

func (o SubscriberSourceAwsLogSourceResourcePtrOutput) ToSubscriberSourceAwsLogSourceResourcePtrOutputWithContext(ctx context.Context) SubscriberSourceAwsLogSourceResourcePtrOutput {
	return o
}

func (o SubscriberSourceAwsLogSourceResourcePtrOutput) Elem() SubscriberSourceAwsLogSourceResourceOutput {
	return o.ApplyT(func(v *SubscriberSourceAwsLogSourceResource) SubscriberSourceAwsLogSourceResource {
		if v != nil {
			return *v
		}
		var ret SubscriberSourceAwsLogSourceResource
		return ret
	}).(SubscriberSourceAwsLogSourceResourceOutput)
}

// The name for a third-party custom source. This must be a Regionally unique value.
func (o SubscriberSourceAwsLogSourceResourcePtrOutput) SourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriberSourceAwsLogSourceResource) *string {
		if v == nil {
			return nil
		}
		return v.SourceName
	}).(pulumi.StringPtrOutput)
}

// The version for a third-party custom source. This must be a Regionally unique value.
func (o SubscriberSourceAwsLogSourceResourcePtrOutput) SourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriberSourceAwsLogSourceResource) *string {
		if v == nil {
			return nil
		}
		return v.SourceVersion
	}).(pulumi.StringPtrOutput)
}

type SubscriberSourceCustomLogSourceResource struct {
	// The attributes of a third-party custom source.
	Attributes []SubscriberSourceCustomLogSourceResourceAttribute `pulumi:"attributes"`
	Providers  []SubscriberSourceCustomLogSourceResourceProvider  `pulumi:"providers"`
	// The name for a third-party custom source. This must be a Regionally unique value.
	SourceName *string `pulumi:"sourceName"`
	// The version for a third-party custom source. This must be a Regionally unique value.
	SourceVersion *string `pulumi:"sourceVersion"`
}

// SubscriberSourceCustomLogSourceResourceInput is an input type that accepts SubscriberSourceCustomLogSourceResourceArgs and SubscriberSourceCustomLogSourceResourceOutput values.
// You can construct a concrete instance of `SubscriberSourceCustomLogSourceResourceInput` via:
//
//	SubscriberSourceCustomLogSourceResourceArgs{...}
type SubscriberSourceCustomLogSourceResourceInput interface {
	pulumi.Input

	ToSubscriberSourceCustomLogSourceResourceOutput() SubscriberSourceCustomLogSourceResourceOutput
	ToSubscriberSourceCustomLogSourceResourceOutputWithContext(context.Context) SubscriberSourceCustomLogSourceResourceOutput
}

type SubscriberSourceCustomLogSourceResourceArgs struct {
	// The attributes of a third-party custom source.
	Attributes SubscriberSourceCustomLogSourceResourceAttributeArrayInput `pulumi:"attributes"`
	Providers  SubscriberSourceCustomLogSourceResourceProviderArrayInput  `pulumi:"providers"`
	// The name for a third-party custom source. This must be a Regionally unique value.
	SourceName pulumi.StringPtrInput `pulumi:"sourceName"`
	// The version for a third-party custom source. This must be a Regionally unique value.
	SourceVersion pulumi.StringPtrInput `pulumi:"sourceVersion"`
}

func (SubscriberSourceCustomLogSourceResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriberSourceCustomLogSourceResource)(nil)).Elem()
}

func (i SubscriberSourceCustomLogSourceResourceArgs) ToSubscriberSourceCustomLogSourceResourceOutput() SubscriberSourceCustomLogSourceResourceOutput {
	return i.ToSubscriberSourceCustomLogSourceResourceOutputWithContext(context.Background())
}

func (i SubscriberSourceCustomLogSourceResourceArgs) ToSubscriberSourceCustomLogSourceResourceOutputWithContext(ctx context.Context) SubscriberSourceCustomLogSourceResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberSourceCustomLogSourceResourceOutput)
}

func (i SubscriberSourceCustomLogSourceResourceArgs) ToSubscriberSourceCustomLogSourceResourcePtrOutput() SubscriberSourceCustomLogSourceResourcePtrOutput {
	return i.ToSubscriberSourceCustomLogSourceResourcePtrOutputWithContext(context.Background())
}

func (i SubscriberSourceCustomLogSourceResourceArgs) ToSubscriberSourceCustomLogSourceResourcePtrOutputWithContext(ctx context.Context) SubscriberSourceCustomLogSourceResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberSourceCustomLogSourceResourceOutput).ToSubscriberSourceCustomLogSourceResourcePtrOutputWithContext(ctx)
}

// SubscriberSourceCustomLogSourceResourcePtrInput is an input type that accepts SubscriberSourceCustomLogSourceResourceArgs, SubscriberSourceCustomLogSourceResourcePtr and SubscriberSourceCustomLogSourceResourcePtrOutput values.
// You can construct a concrete instance of `SubscriberSourceCustomLogSourceResourcePtrInput` via:
//
//	        SubscriberSourceCustomLogSourceResourceArgs{...}
//
//	or:
//
//	        nil
type SubscriberSourceCustomLogSourceResourcePtrInput interface {
	pulumi.Input

	ToSubscriberSourceCustomLogSourceResourcePtrOutput() SubscriberSourceCustomLogSourceResourcePtrOutput
	ToSubscriberSourceCustomLogSourceResourcePtrOutputWithContext(context.Context) SubscriberSourceCustomLogSourceResourcePtrOutput
}

type subscriberSourceCustomLogSourceResourcePtrType SubscriberSourceCustomLogSourceResourceArgs

func SubscriberSourceCustomLogSourceResourcePtr(v *SubscriberSourceCustomLogSourceResourceArgs) SubscriberSourceCustomLogSourceResourcePtrInput {
	return (*subscriberSourceCustomLogSourceResourcePtrType)(v)
}

func (*subscriberSourceCustomLogSourceResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriberSourceCustomLogSourceResource)(nil)).Elem()
}

func (i *subscriberSourceCustomLogSourceResourcePtrType) ToSubscriberSourceCustomLogSourceResourcePtrOutput() SubscriberSourceCustomLogSourceResourcePtrOutput {
	return i.ToSubscriberSourceCustomLogSourceResourcePtrOutputWithContext(context.Background())
}

func (i *subscriberSourceCustomLogSourceResourcePtrType) ToSubscriberSourceCustomLogSourceResourcePtrOutputWithContext(ctx context.Context) SubscriberSourceCustomLogSourceResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberSourceCustomLogSourceResourcePtrOutput)
}

type SubscriberSourceCustomLogSourceResourceOutput struct{ *pulumi.OutputState }

func (SubscriberSourceCustomLogSourceResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriberSourceCustomLogSourceResource)(nil)).Elem()
}

func (o SubscriberSourceCustomLogSourceResourceOutput) ToSubscriberSourceCustomLogSourceResourceOutput() SubscriberSourceCustomLogSourceResourceOutput {
	return o
}

func (o SubscriberSourceCustomLogSourceResourceOutput) ToSubscriberSourceCustomLogSourceResourceOutputWithContext(ctx context.Context) SubscriberSourceCustomLogSourceResourceOutput {
	return o
}

func (o SubscriberSourceCustomLogSourceResourceOutput) ToSubscriberSourceCustomLogSourceResourcePtrOutput() SubscriberSourceCustomLogSourceResourcePtrOutput {
	return o.ToSubscriberSourceCustomLogSourceResourcePtrOutputWithContext(context.Background())
}

func (o SubscriberSourceCustomLogSourceResourceOutput) ToSubscriberSourceCustomLogSourceResourcePtrOutputWithContext(ctx context.Context) SubscriberSourceCustomLogSourceResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriberSourceCustomLogSourceResource) *SubscriberSourceCustomLogSourceResource {
		return &v
	}).(SubscriberSourceCustomLogSourceResourcePtrOutput)
}

// The attributes of a third-party custom source.
func (o SubscriberSourceCustomLogSourceResourceOutput) Attributes() SubscriberSourceCustomLogSourceResourceAttributeArrayOutput {
	return o.ApplyT(func(v SubscriberSourceCustomLogSourceResource) []SubscriberSourceCustomLogSourceResourceAttribute {
		return v.Attributes
	}).(SubscriberSourceCustomLogSourceResourceAttributeArrayOutput)
}

func (o SubscriberSourceCustomLogSourceResourceOutput) Providers() SubscriberSourceCustomLogSourceResourceProviderArrayOutput {
	return o.ApplyT(func(v SubscriberSourceCustomLogSourceResource) []SubscriberSourceCustomLogSourceResourceProvider {
		return v.Providers
	}).(SubscriberSourceCustomLogSourceResourceProviderArrayOutput)
}

// The name for a third-party custom source. This must be a Regionally unique value.
func (o SubscriberSourceCustomLogSourceResourceOutput) SourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriberSourceCustomLogSourceResource) *string { return v.SourceName }).(pulumi.StringPtrOutput)
}

// The version for a third-party custom source. This must be a Regionally unique value.
func (o SubscriberSourceCustomLogSourceResourceOutput) SourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriberSourceCustomLogSourceResource) *string { return v.SourceVersion }).(pulumi.StringPtrOutput)
}

type SubscriberSourceCustomLogSourceResourcePtrOutput struct{ *pulumi.OutputState }

func (SubscriberSourceCustomLogSourceResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriberSourceCustomLogSourceResource)(nil)).Elem()
}

func (o SubscriberSourceCustomLogSourceResourcePtrOutput) ToSubscriberSourceCustomLogSourceResourcePtrOutput() SubscriberSourceCustomLogSourceResourcePtrOutput {
	return o
}

func (o SubscriberSourceCustomLogSourceResourcePtrOutput) ToSubscriberSourceCustomLogSourceResourcePtrOutputWithContext(ctx context.Context) SubscriberSourceCustomLogSourceResourcePtrOutput {
	return o
}

func (o SubscriberSourceCustomLogSourceResourcePtrOutput) Elem() SubscriberSourceCustomLogSourceResourceOutput {
	return o.ApplyT(func(v *SubscriberSourceCustomLogSourceResource) SubscriberSourceCustomLogSourceResource {
		if v != nil {
			return *v
		}
		var ret SubscriberSourceCustomLogSourceResource
		return ret
	}).(SubscriberSourceCustomLogSourceResourceOutput)
}

// The attributes of a third-party custom source.
func (o SubscriberSourceCustomLogSourceResourcePtrOutput) Attributes() SubscriberSourceCustomLogSourceResourceAttributeArrayOutput {
	return o.ApplyT(func(v *SubscriberSourceCustomLogSourceResource) []SubscriberSourceCustomLogSourceResourceAttribute {
		if v == nil {
			return nil
		}
		return v.Attributes
	}).(SubscriberSourceCustomLogSourceResourceAttributeArrayOutput)
}

func (o SubscriberSourceCustomLogSourceResourcePtrOutput) Providers() SubscriberSourceCustomLogSourceResourceProviderArrayOutput {
	return o.ApplyT(func(v *SubscriberSourceCustomLogSourceResource) []SubscriberSourceCustomLogSourceResourceProvider {
		if v == nil {
			return nil
		}
		return v.Providers
	}).(SubscriberSourceCustomLogSourceResourceProviderArrayOutput)
}

// The name for a third-party custom source. This must be a Regionally unique value.
func (o SubscriberSourceCustomLogSourceResourcePtrOutput) SourceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriberSourceCustomLogSourceResource) *string {
		if v == nil {
			return nil
		}
		return v.SourceName
	}).(pulumi.StringPtrOutput)
}

// The version for a third-party custom source. This must be a Regionally unique value.
func (o SubscriberSourceCustomLogSourceResourcePtrOutput) SourceVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriberSourceCustomLogSourceResource) *string {
		if v == nil {
			return nil
		}
		return v.SourceVersion
	}).(pulumi.StringPtrOutput)
}

type SubscriberSourceCustomLogSourceResourceAttribute struct {
	// The ARN of the AWS Glue crawler.
	CrawlerArn string `pulumi:"crawlerArn"`
	// The ARN of the AWS Glue database where results are written.
	DatabaseArn string `pulumi:"databaseArn"`
	// The ARN of the AWS Glue table.
	TableArn string `pulumi:"tableArn"`
}

// SubscriberSourceCustomLogSourceResourceAttributeInput is an input type that accepts SubscriberSourceCustomLogSourceResourceAttributeArgs and SubscriberSourceCustomLogSourceResourceAttributeOutput values.
// You can construct a concrete instance of `SubscriberSourceCustomLogSourceResourceAttributeInput` via:
//
//	SubscriberSourceCustomLogSourceResourceAttributeArgs{...}
type SubscriberSourceCustomLogSourceResourceAttributeInput interface {
	pulumi.Input

	ToSubscriberSourceCustomLogSourceResourceAttributeOutput() SubscriberSourceCustomLogSourceResourceAttributeOutput
	ToSubscriberSourceCustomLogSourceResourceAttributeOutputWithContext(context.Context) SubscriberSourceCustomLogSourceResourceAttributeOutput
}

type SubscriberSourceCustomLogSourceResourceAttributeArgs struct {
	// The ARN of the AWS Glue crawler.
	CrawlerArn pulumi.StringInput `pulumi:"crawlerArn"`
	// The ARN of the AWS Glue database where results are written.
	DatabaseArn pulumi.StringInput `pulumi:"databaseArn"`
	// The ARN of the AWS Glue table.
	TableArn pulumi.StringInput `pulumi:"tableArn"`
}

func (SubscriberSourceCustomLogSourceResourceAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriberSourceCustomLogSourceResourceAttribute)(nil)).Elem()
}

func (i SubscriberSourceCustomLogSourceResourceAttributeArgs) ToSubscriberSourceCustomLogSourceResourceAttributeOutput() SubscriberSourceCustomLogSourceResourceAttributeOutput {
	return i.ToSubscriberSourceCustomLogSourceResourceAttributeOutputWithContext(context.Background())
}

func (i SubscriberSourceCustomLogSourceResourceAttributeArgs) ToSubscriberSourceCustomLogSourceResourceAttributeOutputWithContext(ctx context.Context) SubscriberSourceCustomLogSourceResourceAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberSourceCustomLogSourceResourceAttributeOutput)
}

// SubscriberSourceCustomLogSourceResourceAttributeArrayInput is an input type that accepts SubscriberSourceCustomLogSourceResourceAttributeArray and SubscriberSourceCustomLogSourceResourceAttributeArrayOutput values.
// You can construct a concrete instance of `SubscriberSourceCustomLogSourceResourceAttributeArrayInput` via:
//
//	SubscriberSourceCustomLogSourceResourceAttributeArray{ SubscriberSourceCustomLogSourceResourceAttributeArgs{...} }
type SubscriberSourceCustomLogSourceResourceAttributeArrayInput interface {
	pulumi.Input

	ToSubscriberSourceCustomLogSourceResourceAttributeArrayOutput() SubscriberSourceCustomLogSourceResourceAttributeArrayOutput
	ToSubscriberSourceCustomLogSourceResourceAttributeArrayOutputWithContext(context.Context) SubscriberSourceCustomLogSourceResourceAttributeArrayOutput
}

type SubscriberSourceCustomLogSourceResourceAttributeArray []SubscriberSourceCustomLogSourceResourceAttributeInput

func (SubscriberSourceCustomLogSourceResourceAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriberSourceCustomLogSourceResourceAttribute)(nil)).Elem()
}

func (i SubscriberSourceCustomLogSourceResourceAttributeArray) ToSubscriberSourceCustomLogSourceResourceAttributeArrayOutput() SubscriberSourceCustomLogSourceResourceAttributeArrayOutput {
	return i.ToSubscriberSourceCustomLogSourceResourceAttributeArrayOutputWithContext(context.Background())
}

func (i SubscriberSourceCustomLogSourceResourceAttributeArray) ToSubscriberSourceCustomLogSourceResourceAttributeArrayOutputWithContext(ctx context.Context) SubscriberSourceCustomLogSourceResourceAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberSourceCustomLogSourceResourceAttributeArrayOutput)
}

type SubscriberSourceCustomLogSourceResourceAttributeOutput struct{ *pulumi.OutputState }

func (SubscriberSourceCustomLogSourceResourceAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriberSourceCustomLogSourceResourceAttribute)(nil)).Elem()
}

func (o SubscriberSourceCustomLogSourceResourceAttributeOutput) ToSubscriberSourceCustomLogSourceResourceAttributeOutput() SubscriberSourceCustomLogSourceResourceAttributeOutput {
	return o
}

func (o SubscriberSourceCustomLogSourceResourceAttributeOutput) ToSubscriberSourceCustomLogSourceResourceAttributeOutputWithContext(ctx context.Context) SubscriberSourceCustomLogSourceResourceAttributeOutput {
	return o
}

// The ARN of the AWS Glue crawler.
func (o SubscriberSourceCustomLogSourceResourceAttributeOutput) CrawlerArn() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriberSourceCustomLogSourceResourceAttribute) string { return v.CrawlerArn }).(pulumi.StringOutput)
}

// The ARN of the AWS Glue database where results are written.
func (o SubscriberSourceCustomLogSourceResourceAttributeOutput) DatabaseArn() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriberSourceCustomLogSourceResourceAttribute) string { return v.DatabaseArn }).(pulumi.StringOutput)
}

// The ARN of the AWS Glue table.
func (o SubscriberSourceCustomLogSourceResourceAttributeOutput) TableArn() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriberSourceCustomLogSourceResourceAttribute) string { return v.TableArn }).(pulumi.StringOutput)
}

type SubscriberSourceCustomLogSourceResourceAttributeArrayOutput struct{ *pulumi.OutputState }

func (SubscriberSourceCustomLogSourceResourceAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriberSourceCustomLogSourceResourceAttribute)(nil)).Elem()
}

func (o SubscriberSourceCustomLogSourceResourceAttributeArrayOutput) ToSubscriberSourceCustomLogSourceResourceAttributeArrayOutput() SubscriberSourceCustomLogSourceResourceAttributeArrayOutput {
	return o
}

func (o SubscriberSourceCustomLogSourceResourceAttributeArrayOutput) ToSubscriberSourceCustomLogSourceResourceAttributeArrayOutputWithContext(ctx context.Context) SubscriberSourceCustomLogSourceResourceAttributeArrayOutput {
	return o
}

func (o SubscriberSourceCustomLogSourceResourceAttributeArrayOutput) Index(i pulumi.IntInput) SubscriberSourceCustomLogSourceResourceAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriberSourceCustomLogSourceResourceAttribute {
		return vs[0].([]SubscriberSourceCustomLogSourceResourceAttribute)[vs[1].(int)]
	}).(SubscriberSourceCustomLogSourceResourceAttributeOutput)
}

type SubscriberSourceCustomLogSourceResourceProvider struct {
	// The location of the partition in the Amazon S3 bucket for Security Lake.
	Location string `pulumi:"location"`
	// The ARN of the IAM role to be used by the entity putting logs into your custom source partition.
	RoleArn string `pulumi:"roleArn"`
}

// SubscriberSourceCustomLogSourceResourceProviderInput is an input type that accepts SubscriberSourceCustomLogSourceResourceProviderArgs and SubscriberSourceCustomLogSourceResourceProviderOutput values.
// You can construct a concrete instance of `SubscriberSourceCustomLogSourceResourceProviderInput` via:
//
//	SubscriberSourceCustomLogSourceResourceProviderArgs{...}
type SubscriberSourceCustomLogSourceResourceProviderInput interface {
	pulumi.Input

	ToSubscriberSourceCustomLogSourceResourceProviderOutput() SubscriberSourceCustomLogSourceResourceProviderOutput
	ToSubscriberSourceCustomLogSourceResourceProviderOutputWithContext(context.Context) SubscriberSourceCustomLogSourceResourceProviderOutput
}

type SubscriberSourceCustomLogSourceResourceProviderArgs struct {
	// The location of the partition in the Amazon S3 bucket for Security Lake.
	Location pulumi.StringInput `pulumi:"location"`
	// The ARN of the IAM role to be used by the entity putting logs into your custom source partition.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (SubscriberSourceCustomLogSourceResourceProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriberSourceCustomLogSourceResourceProvider)(nil)).Elem()
}

func (i SubscriberSourceCustomLogSourceResourceProviderArgs) ToSubscriberSourceCustomLogSourceResourceProviderOutput() SubscriberSourceCustomLogSourceResourceProviderOutput {
	return i.ToSubscriberSourceCustomLogSourceResourceProviderOutputWithContext(context.Background())
}

func (i SubscriberSourceCustomLogSourceResourceProviderArgs) ToSubscriberSourceCustomLogSourceResourceProviderOutputWithContext(ctx context.Context) SubscriberSourceCustomLogSourceResourceProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberSourceCustomLogSourceResourceProviderOutput)
}

// SubscriberSourceCustomLogSourceResourceProviderArrayInput is an input type that accepts SubscriberSourceCustomLogSourceResourceProviderArray and SubscriberSourceCustomLogSourceResourceProviderArrayOutput values.
// You can construct a concrete instance of `SubscriberSourceCustomLogSourceResourceProviderArrayInput` via:
//
//	SubscriberSourceCustomLogSourceResourceProviderArray{ SubscriberSourceCustomLogSourceResourceProviderArgs{...} }
type SubscriberSourceCustomLogSourceResourceProviderArrayInput interface {
	pulumi.Input

	ToSubscriberSourceCustomLogSourceResourceProviderArrayOutput() SubscriberSourceCustomLogSourceResourceProviderArrayOutput
	ToSubscriberSourceCustomLogSourceResourceProviderArrayOutputWithContext(context.Context) SubscriberSourceCustomLogSourceResourceProviderArrayOutput
}

type SubscriberSourceCustomLogSourceResourceProviderArray []SubscriberSourceCustomLogSourceResourceProviderInput

func (SubscriberSourceCustomLogSourceResourceProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriberSourceCustomLogSourceResourceProvider)(nil)).Elem()
}

func (i SubscriberSourceCustomLogSourceResourceProviderArray) ToSubscriberSourceCustomLogSourceResourceProviderArrayOutput() SubscriberSourceCustomLogSourceResourceProviderArrayOutput {
	return i.ToSubscriberSourceCustomLogSourceResourceProviderArrayOutputWithContext(context.Background())
}

func (i SubscriberSourceCustomLogSourceResourceProviderArray) ToSubscriberSourceCustomLogSourceResourceProviderArrayOutputWithContext(ctx context.Context) SubscriberSourceCustomLogSourceResourceProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberSourceCustomLogSourceResourceProviderArrayOutput)
}

type SubscriberSourceCustomLogSourceResourceProviderOutput struct{ *pulumi.OutputState }

func (SubscriberSourceCustomLogSourceResourceProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriberSourceCustomLogSourceResourceProvider)(nil)).Elem()
}

func (o SubscriberSourceCustomLogSourceResourceProviderOutput) ToSubscriberSourceCustomLogSourceResourceProviderOutput() SubscriberSourceCustomLogSourceResourceProviderOutput {
	return o
}

func (o SubscriberSourceCustomLogSourceResourceProviderOutput) ToSubscriberSourceCustomLogSourceResourceProviderOutputWithContext(ctx context.Context) SubscriberSourceCustomLogSourceResourceProviderOutput {
	return o
}

// The location of the partition in the Amazon S3 bucket for Security Lake.
func (o SubscriberSourceCustomLogSourceResourceProviderOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriberSourceCustomLogSourceResourceProvider) string { return v.Location }).(pulumi.StringOutput)
}

// The ARN of the IAM role to be used by the entity putting logs into your custom source partition.
func (o SubscriberSourceCustomLogSourceResourceProviderOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriberSourceCustomLogSourceResourceProvider) string { return v.RoleArn }).(pulumi.StringOutput)
}

type SubscriberSourceCustomLogSourceResourceProviderArrayOutput struct{ *pulumi.OutputState }

func (SubscriberSourceCustomLogSourceResourceProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SubscriberSourceCustomLogSourceResourceProvider)(nil)).Elem()
}

func (o SubscriberSourceCustomLogSourceResourceProviderArrayOutput) ToSubscriberSourceCustomLogSourceResourceProviderArrayOutput() SubscriberSourceCustomLogSourceResourceProviderArrayOutput {
	return o
}

func (o SubscriberSourceCustomLogSourceResourceProviderArrayOutput) ToSubscriberSourceCustomLogSourceResourceProviderArrayOutputWithContext(ctx context.Context) SubscriberSourceCustomLogSourceResourceProviderArrayOutput {
	return o
}

func (o SubscriberSourceCustomLogSourceResourceProviderArrayOutput) Index(i pulumi.IntInput) SubscriberSourceCustomLogSourceResourceProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SubscriberSourceCustomLogSourceResourceProvider {
		return vs[0].([]SubscriberSourceCustomLogSourceResourceProvider)[vs[1].(int)]
	}).(SubscriberSourceCustomLogSourceResourceProviderOutput)
}

type SubscriberSubscriberIdentity struct {
	// The AWS Regions where Security Lake is automatically enabled.
	ExternalId string `pulumi:"externalId"`
	// Provides encryption details of Amazon Security Lake object.
	Principal string `pulumi:"principal"`
}

// SubscriberSubscriberIdentityInput is an input type that accepts SubscriberSubscriberIdentityArgs and SubscriberSubscriberIdentityOutput values.
// You can construct a concrete instance of `SubscriberSubscriberIdentityInput` via:
//
//	SubscriberSubscriberIdentityArgs{...}
type SubscriberSubscriberIdentityInput interface {
	pulumi.Input

	ToSubscriberSubscriberIdentityOutput() SubscriberSubscriberIdentityOutput
	ToSubscriberSubscriberIdentityOutputWithContext(context.Context) SubscriberSubscriberIdentityOutput
}

type SubscriberSubscriberIdentityArgs struct {
	// The AWS Regions where Security Lake is automatically enabled.
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	// Provides encryption details of Amazon Security Lake object.
	Principal pulumi.StringInput `pulumi:"principal"`
}

func (SubscriberSubscriberIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriberSubscriberIdentity)(nil)).Elem()
}

func (i SubscriberSubscriberIdentityArgs) ToSubscriberSubscriberIdentityOutput() SubscriberSubscriberIdentityOutput {
	return i.ToSubscriberSubscriberIdentityOutputWithContext(context.Background())
}

func (i SubscriberSubscriberIdentityArgs) ToSubscriberSubscriberIdentityOutputWithContext(ctx context.Context) SubscriberSubscriberIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberSubscriberIdentityOutput)
}

func (i SubscriberSubscriberIdentityArgs) ToSubscriberSubscriberIdentityPtrOutput() SubscriberSubscriberIdentityPtrOutput {
	return i.ToSubscriberSubscriberIdentityPtrOutputWithContext(context.Background())
}

func (i SubscriberSubscriberIdentityArgs) ToSubscriberSubscriberIdentityPtrOutputWithContext(ctx context.Context) SubscriberSubscriberIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberSubscriberIdentityOutput).ToSubscriberSubscriberIdentityPtrOutputWithContext(ctx)
}

// SubscriberSubscriberIdentityPtrInput is an input type that accepts SubscriberSubscriberIdentityArgs, SubscriberSubscriberIdentityPtr and SubscriberSubscriberIdentityPtrOutput values.
// You can construct a concrete instance of `SubscriberSubscriberIdentityPtrInput` via:
//
//	        SubscriberSubscriberIdentityArgs{...}
//
//	or:
//
//	        nil
type SubscriberSubscriberIdentityPtrInput interface {
	pulumi.Input

	ToSubscriberSubscriberIdentityPtrOutput() SubscriberSubscriberIdentityPtrOutput
	ToSubscriberSubscriberIdentityPtrOutputWithContext(context.Context) SubscriberSubscriberIdentityPtrOutput
}

type subscriberSubscriberIdentityPtrType SubscriberSubscriberIdentityArgs

func SubscriberSubscriberIdentityPtr(v *SubscriberSubscriberIdentityArgs) SubscriberSubscriberIdentityPtrInput {
	return (*subscriberSubscriberIdentityPtrType)(v)
}

func (*subscriberSubscriberIdentityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriberSubscriberIdentity)(nil)).Elem()
}

func (i *subscriberSubscriberIdentityPtrType) ToSubscriberSubscriberIdentityPtrOutput() SubscriberSubscriberIdentityPtrOutput {
	return i.ToSubscriberSubscriberIdentityPtrOutputWithContext(context.Background())
}

func (i *subscriberSubscriberIdentityPtrType) ToSubscriberSubscriberIdentityPtrOutputWithContext(ctx context.Context) SubscriberSubscriberIdentityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberSubscriberIdentityPtrOutput)
}

type SubscriberSubscriberIdentityOutput struct{ *pulumi.OutputState }

func (SubscriberSubscriberIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriberSubscriberIdentity)(nil)).Elem()
}

func (o SubscriberSubscriberIdentityOutput) ToSubscriberSubscriberIdentityOutput() SubscriberSubscriberIdentityOutput {
	return o
}

func (o SubscriberSubscriberIdentityOutput) ToSubscriberSubscriberIdentityOutputWithContext(ctx context.Context) SubscriberSubscriberIdentityOutput {
	return o
}

func (o SubscriberSubscriberIdentityOutput) ToSubscriberSubscriberIdentityPtrOutput() SubscriberSubscriberIdentityPtrOutput {
	return o.ToSubscriberSubscriberIdentityPtrOutputWithContext(context.Background())
}

func (o SubscriberSubscriberIdentityOutput) ToSubscriberSubscriberIdentityPtrOutputWithContext(ctx context.Context) SubscriberSubscriberIdentityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriberSubscriberIdentity) *SubscriberSubscriberIdentity {
		return &v
	}).(SubscriberSubscriberIdentityPtrOutput)
}

// The AWS Regions where Security Lake is automatically enabled.
func (o SubscriberSubscriberIdentityOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriberSubscriberIdentity) string { return v.ExternalId }).(pulumi.StringOutput)
}

// Provides encryption details of Amazon Security Lake object.
func (o SubscriberSubscriberIdentityOutput) Principal() pulumi.StringOutput {
	return o.ApplyT(func(v SubscriberSubscriberIdentity) string { return v.Principal }).(pulumi.StringOutput)
}

type SubscriberSubscriberIdentityPtrOutput struct{ *pulumi.OutputState }

func (SubscriberSubscriberIdentityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriberSubscriberIdentity)(nil)).Elem()
}

func (o SubscriberSubscriberIdentityPtrOutput) ToSubscriberSubscriberIdentityPtrOutput() SubscriberSubscriberIdentityPtrOutput {
	return o
}

func (o SubscriberSubscriberIdentityPtrOutput) ToSubscriberSubscriberIdentityPtrOutputWithContext(ctx context.Context) SubscriberSubscriberIdentityPtrOutput {
	return o
}

func (o SubscriberSubscriberIdentityPtrOutput) Elem() SubscriberSubscriberIdentityOutput {
	return o.ApplyT(func(v *SubscriberSubscriberIdentity) SubscriberSubscriberIdentity {
		if v != nil {
			return *v
		}
		var ret SubscriberSubscriberIdentity
		return ret
	}).(SubscriberSubscriberIdentityOutput)
}

// The AWS Regions where Security Lake is automatically enabled.
func (o SubscriberSubscriberIdentityPtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriberSubscriberIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.ExternalId
	}).(pulumi.StringPtrOutput)
}

// Provides encryption details of Amazon Security Lake object.
func (o SubscriberSubscriberIdentityPtrOutput) Principal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriberSubscriberIdentity) *string {
		if v == nil {
			return nil
		}
		return &v.Principal
	}).(pulumi.StringPtrOutput)
}

type SubscriberTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// SubscriberTimeoutsInput is an input type that accepts SubscriberTimeoutsArgs and SubscriberTimeoutsOutput values.
// You can construct a concrete instance of `SubscriberTimeoutsInput` via:
//
//	SubscriberTimeoutsArgs{...}
type SubscriberTimeoutsInput interface {
	pulumi.Input

	ToSubscriberTimeoutsOutput() SubscriberTimeoutsOutput
	ToSubscriberTimeoutsOutputWithContext(context.Context) SubscriberTimeoutsOutput
}

type SubscriberTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (SubscriberTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriberTimeouts)(nil)).Elem()
}

func (i SubscriberTimeoutsArgs) ToSubscriberTimeoutsOutput() SubscriberTimeoutsOutput {
	return i.ToSubscriberTimeoutsOutputWithContext(context.Background())
}

func (i SubscriberTimeoutsArgs) ToSubscriberTimeoutsOutputWithContext(ctx context.Context) SubscriberTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberTimeoutsOutput)
}

func (i SubscriberTimeoutsArgs) ToSubscriberTimeoutsPtrOutput() SubscriberTimeoutsPtrOutput {
	return i.ToSubscriberTimeoutsPtrOutputWithContext(context.Background())
}

func (i SubscriberTimeoutsArgs) ToSubscriberTimeoutsPtrOutputWithContext(ctx context.Context) SubscriberTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberTimeoutsOutput).ToSubscriberTimeoutsPtrOutputWithContext(ctx)
}

// SubscriberTimeoutsPtrInput is an input type that accepts SubscriberTimeoutsArgs, SubscriberTimeoutsPtr and SubscriberTimeoutsPtrOutput values.
// You can construct a concrete instance of `SubscriberTimeoutsPtrInput` via:
//
//	        SubscriberTimeoutsArgs{...}
//
//	or:
//
//	        nil
type SubscriberTimeoutsPtrInput interface {
	pulumi.Input

	ToSubscriberTimeoutsPtrOutput() SubscriberTimeoutsPtrOutput
	ToSubscriberTimeoutsPtrOutputWithContext(context.Context) SubscriberTimeoutsPtrOutput
}

type subscriberTimeoutsPtrType SubscriberTimeoutsArgs

func SubscriberTimeoutsPtr(v *SubscriberTimeoutsArgs) SubscriberTimeoutsPtrInput {
	return (*subscriberTimeoutsPtrType)(v)
}

func (*subscriberTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriberTimeouts)(nil)).Elem()
}

func (i *subscriberTimeoutsPtrType) ToSubscriberTimeoutsPtrOutput() SubscriberTimeoutsPtrOutput {
	return i.ToSubscriberTimeoutsPtrOutputWithContext(context.Background())
}

func (i *subscriberTimeoutsPtrType) ToSubscriberTimeoutsPtrOutputWithContext(ctx context.Context) SubscriberTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SubscriberTimeoutsPtrOutput)
}

type SubscriberTimeoutsOutput struct{ *pulumi.OutputState }

func (SubscriberTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SubscriberTimeouts)(nil)).Elem()
}

func (o SubscriberTimeoutsOutput) ToSubscriberTimeoutsOutput() SubscriberTimeoutsOutput {
	return o
}

func (o SubscriberTimeoutsOutput) ToSubscriberTimeoutsOutputWithContext(ctx context.Context) SubscriberTimeoutsOutput {
	return o
}

func (o SubscriberTimeoutsOutput) ToSubscriberTimeoutsPtrOutput() SubscriberTimeoutsPtrOutput {
	return o.ToSubscriberTimeoutsPtrOutputWithContext(context.Background())
}

func (o SubscriberTimeoutsOutput) ToSubscriberTimeoutsPtrOutputWithContext(ctx context.Context) SubscriberTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SubscriberTimeouts) *SubscriberTimeouts {
		return &v
	}).(SubscriberTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o SubscriberTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriberTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o SubscriberTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriberTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o SubscriberTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SubscriberTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type SubscriberTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (SubscriberTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SubscriberTimeouts)(nil)).Elem()
}

func (o SubscriberTimeoutsPtrOutput) ToSubscriberTimeoutsPtrOutput() SubscriberTimeoutsPtrOutput {
	return o
}

func (o SubscriberTimeoutsPtrOutput) ToSubscriberTimeoutsPtrOutputWithContext(ctx context.Context) SubscriberTimeoutsPtrOutput {
	return o
}

func (o SubscriberTimeoutsPtrOutput) Elem() SubscriberTimeoutsOutput {
	return o.ApplyT(func(v *SubscriberTimeouts) SubscriberTimeouts {
		if v != nil {
			return *v
		}
		var ret SubscriberTimeouts
		return ret
	}).(SubscriberTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o SubscriberTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriberTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o SubscriberTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriberTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o SubscriberTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SubscriberTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AwsLogSourceSourceInput)(nil)).Elem(), AwsLogSourceSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AwsLogSourceSourcePtrInput)(nil)).Elem(), AwsLogSourceSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomLogSourceAttributeInput)(nil)).Elem(), CustomLogSourceAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomLogSourceAttributeArrayInput)(nil)).Elem(), CustomLogSourceAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomLogSourceConfigurationInput)(nil)).Elem(), CustomLogSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomLogSourceConfigurationPtrInput)(nil)).Elem(), CustomLogSourceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomLogSourceConfigurationCrawlerConfigurationInput)(nil)).Elem(), CustomLogSourceConfigurationCrawlerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomLogSourceConfigurationCrawlerConfigurationPtrInput)(nil)).Elem(), CustomLogSourceConfigurationCrawlerConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomLogSourceConfigurationProviderIdentityInput)(nil)).Elem(), CustomLogSourceConfigurationProviderIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomLogSourceConfigurationProviderIdentityPtrInput)(nil)).Elem(), CustomLogSourceConfigurationProviderIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomLogSourceProviderDetailInput)(nil)).Elem(), CustomLogSourceProviderDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomLogSourceProviderDetailArrayInput)(nil)).Elem(), CustomLogSourceProviderDetailArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeConfigurationInput)(nil)).Elem(), DataLakeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeConfigurationPtrInput)(nil)).Elem(), DataLakeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeConfigurationEncryptionConfigurationInput)(nil)).Elem(), DataLakeConfigurationEncryptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeConfigurationEncryptionConfigurationArrayInput)(nil)).Elem(), DataLakeConfigurationEncryptionConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeConfigurationLifecycleConfigurationInput)(nil)).Elem(), DataLakeConfigurationLifecycleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeConfigurationLifecycleConfigurationPtrInput)(nil)).Elem(), DataLakeConfigurationLifecycleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeConfigurationLifecycleConfigurationExpirationInput)(nil)).Elem(), DataLakeConfigurationLifecycleConfigurationExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeConfigurationLifecycleConfigurationExpirationPtrInput)(nil)).Elem(), DataLakeConfigurationLifecycleConfigurationExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeConfigurationLifecycleConfigurationTransitionInput)(nil)).Elem(), DataLakeConfigurationLifecycleConfigurationTransitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeConfigurationLifecycleConfigurationTransitionArrayInput)(nil)).Elem(), DataLakeConfigurationLifecycleConfigurationTransitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeConfigurationReplicationConfigurationInput)(nil)).Elem(), DataLakeConfigurationReplicationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeConfigurationReplicationConfigurationPtrInput)(nil)).Elem(), DataLakeConfigurationReplicationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeTimeoutsInput)(nil)).Elem(), DataLakeTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeTimeoutsPtrInput)(nil)).Elem(), DataLakeTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriberNotificationConfigurationInput)(nil)).Elem(), SubscriberNotificationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriberNotificationConfigurationPtrInput)(nil)).Elem(), SubscriberNotificationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriberNotificationConfigurationHttpsNotificationConfigurationInput)(nil)).Elem(), SubscriberNotificationConfigurationHttpsNotificationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrInput)(nil)).Elem(), SubscriberNotificationConfigurationHttpsNotificationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriberNotificationConfigurationSqsNotificationConfigurationInput)(nil)).Elem(), SubscriberNotificationConfigurationSqsNotificationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriberNotificationConfigurationSqsNotificationConfigurationPtrInput)(nil)).Elem(), SubscriberNotificationConfigurationSqsNotificationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriberSourceInput)(nil)).Elem(), SubscriberSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriberSourcePtrInput)(nil)).Elem(), SubscriberSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriberSourceAwsLogSourceResourceInput)(nil)).Elem(), SubscriberSourceAwsLogSourceResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriberSourceAwsLogSourceResourcePtrInput)(nil)).Elem(), SubscriberSourceAwsLogSourceResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriberSourceCustomLogSourceResourceInput)(nil)).Elem(), SubscriberSourceCustomLogSourceResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriberSourceCustomLogSourceResourcePtrInput)(nil)).Elem(), SubscriberSourceCustomLogSourceResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriberSourceCustomLogSourceResourceAttributeInput)(nil)).Elem(), SubscriberSourceCustomLogSourceResourceAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriberSourceCustomLogSourceResourceAttributeArrayInput)(nil)).Elem(), SubscriberSourceCustomLogSourceResourceAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriberSourceCustomLogSourceResourceProviderInput)(nil)).Elem(), SubscriberSourceCustomLogSourceResourceProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriberSourceCustomLogSourceResourceProviderArrayInput)(nil)).Elem(), SubscriberSourceCustomLogSourceResourceProviderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriberSubscriberIdentityInput)(nil)).Elem(), SubscriberSubscriberIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriberSubscriberIdentityPtrInput)(nil)).Elem(), SubscriberSubscriberIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriberTimeoutsInput)(nil)).Elem(), SubscriberTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SubscriberTimeoutsPtrInput)(nil)).Elem(), SubscriberTimeoutsArgs{})
	pulumi.RegisterOutputType(AwsLogSourceSourceOutput{})
	pulumi.RegisterOutputType(AwsLogSourceSourcePtrOutput{})
	pulumi.RegisterOutputType(CustomLogSourceAttributeOutput{})
	pulumi.RegisterOutputType(CustomLogSourceAttributeArrayOutput{})
	pulumi.RegisterOutputType(CustomLogSourceConfigurationOutput{})
	pulumi.RegisterOutputType(CustomLogSourceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(CustomLogSourceConfigurationCrawlerConfigurationOutput{})
	pulumi.RegisterOutputType(CustomLogSourceConfigurationCrawlerConfigurationPtrOutput{})
	pulumi.RegisterOutputType(CustomLogSourceConfigurationProviderIdentityOutput{})
	pulumi.RegisterOutputType(CustomLogSourceConfigurationProviderIdentityPtrOutput{})
	pulumi.RegisterOutputType(CustomLogSourceProviderDetailOutput{})
	pulumi.RegisterOutputType(CustomLogSourceProviderDetailArrayOutput{})
	pulumi.RegisterOutputType(DataLakeConfigurationOutput{})
	pulumi.RegisterOutputType(DataLakeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataLakeConfigurationEncryptionConfigurationOutput{})
	pulumi.RegisterOutputType(DataLakeConfigurationEncryptionConfigurationArrayOutput{})
	pulumi.RegisterOutputType(DataLakeConfigurationLifecycleConfigurationOutput{})
	pulumi.RegisterOutputType(DataLakeConfigurationLifecycleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataLakeConfigurationLifecycleConfigurationExpirationOutput{})
	pulumi.RegisterOutputType(DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput{})
	pulumi.RegisterOutputType(DataLakeConfigurationLifecycleConfigurationTransitionOutput{})
	pulumi.RegisterOutputType(DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput{})
	pulumi.RegisterOutputType(DataLakeConfigurationReplicationConfigurationOutput{})
	pulumi.RegisterOutputType(DataLakeConfigurationReplicationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataLakeTimeoutsOutput{})
	pulumi.RegisterOutputType(DataLakeTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(SubscriberNotificationConfigurationOutput{})
	pulumi.RegisterOutputType(SubscriberNotificationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(SubscriberNotificationConfigurationHttpsNotificationConfigurationOutput{})
	pulumi.RegisterOutputType(SubscriberNotificationConfigurationHttpsNotificationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(SubscriberNotificationConfigurationSqsNotificationConfigurationOutput{})
	pulumi.RegisterOutputType(SubscriberNotificationConfigurationSqsNotificationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(SubscriberSourceOutput{})
	pulumi.RegisterOutputType(SubscriberSourcePtrOutput{})
	pulumi.RegisterOutputType(SubscriberSourceAwsLogSourceResourceOutput{})
	pulumi.RegisterOutputType(SubscriberSourceAwsLogSourceResourcePtrOutput{})
	pulumi.RegisterOutputType(SubscriberSourceCustomLogSourceResourceOutput{})
	pulumi.RegisterOutputType(SubscriberSourceCustomLogSourceResourcePtrOutput{})
	pulumi.RegisterOutputType(SubscriberSourceCustomLogSourceResourceAttributeOutput{})
	pulumi.RegisterOutputType(SubscriberSourceCustomLogSourceResourceAttributeArrayOutput{})
	pulumi.RegisterOutputType(SubscriberSourceCustomLogSourceResourceProviderOutput{})
	pulumi.RegisterOutputType(SubscriberSourceCustomLogSourceResourceProviderArrayOutput{})
	pulumi.RegisterOutputType(SubscriberSubscriberIdentityOutput{})
	pulumi.RegisterOutputType(SubscriberSubscriberIdentityPtrOutput{})
	pulumi.RegisterOutputType(SubscriberTimeoutsOutput{})
	pulumi.RegisterOutputType(SubscriberTimeoutsPtrOutput{})
}
