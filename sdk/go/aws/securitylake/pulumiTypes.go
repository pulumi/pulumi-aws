// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package securitylake

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DataLakeConfiguration struct {
	// Provides encryption details of Amazon Security Lake object.
	EncryptionConfigurations []map[string]interface{} `pulumi:"encryptionConfigurations"`
	// Provides lifecycle details of Amazon Security Lake object.
	LifecycleConfiguration *DataLakeConfigurationLifecycleConfiguration `pulumi:"lifecycleConfiguration"`
	// The AWS Regions where Security Lake is automatically enabled.
	Region string `pulumi:"region"`
	// Provides replication details of Amazon Security Lake object.
	ReplicationConfiguration *DataLakeConfigurationReplicationConfiguration `pulumi:"replicationConfiguration"`
}

// DataLakeConfigurationInput is an input type that accepts DataLakeConfigurationArgs and DataLakeConfigurationOutput values.
// You can construct a concrete instance of `DataLakeConfigurationInput` via:
//
//	DataLakeConfigurationArgs{...}
type DataLakeConfigurationInput interface {
	pulumi.Input

	ToDataLakeConfigurationOutput() DataLakeConfigurationOutput
	ToDataLakeConfigurationOutputWithContext(context.Context) DataLakeConfigurationOutput
}

type DataLakeConfigurationArgs struct {
	// Provides encryption details of Amazon Security Lake object.
	EncryptionConfigurations pulumi.MapArrayInput `pulumi:"encryptionConfigurations"`
	// Provides lifecycle details of Amazon Security Lake object.
	LifecycleConfiguration DataLakeConfigurationLifecycleConfigurationPtrInput `pulumi:"lifecycleConfiguration"`
	// The AWS Regions where Security Lake is automatically enabled.
	Region pulumi.StringInput `pulumi:"region"`
	// Provides replication details of Amazon Security Lake object.
	ReplicationConfiguration DataLakeConfigurationReplicationConfigurationPtrInput `pulumi:"replicationConfiguration"`
}

func (DataLakeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeConfiguration)(nil)).Elem()
}

func (i DataLakeConfigurationArgs) ToDataLakeConfigurationOutput() DataLakeConfigurationOutput {
	return i.ToDataLakeConfigurationOutputWithContext(context.Background())
}

func (i DataLakeConfigurationArgs) ToDataLakeConfigurationOutputWithContext(ctx context.Context) DataLakeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationOutput)
}

func (i DataLakeConfigurationArgs) ToDataLakeConfigurationPtrOutput() DataLakeConfigurationPtrOutput {
	return i.ToDataLakeConfigurationPtrOutputWithContext(context.Background())
}

func (i DataLakeConfigurationArgs) ToDataLakeConfigurationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationOutput).ToDataLakeConfigurationPtrOutputWithContext(ctx)
}

// DataLakeConfigurationPtrInput is an input type that accepts DataLakeConfigurationArgs, DataLakeConfigurationPtr and DataLakeConfigurationPtrOutput values.
// You can construct a concrete instance of `DataLakeConfigurationPtrInput` via:
//
//	        DataLakeConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataLakeConfigurationPtrInput interface {
	pulumi.Input

	ToDataLakeConfigurationPtrOutput() DataLakeConfigurationPtrOutput
	ToDataLakeConfigurationPtrOutputWithContext(context.Context) DataLakeConfigurationPtrOutput
}

type dataLakeConfigurationPtrType DataLakeConfigurationArgs

func DataLakeConfigurationPtr(v *DataLakeConfigurationArgs) DataLakeConfigurationPtrInput {
	return (*dataLakeConfigurationPtrType)(v)
}

func (*dataLakeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeConfiguration)(nil)).Elem()
}

func (i *dataLakeConfigurationPtrType) ToDataLakeConfigurationPtrOutput() DataLakeConfigurationPtrOutput {
	return i.ToDataLakeConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataLakeConfigurationPtrType) ToDataLakeConfigurationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationPtrOutput)
}

type DataLakeConfigurationOutput struct{ *pulumi.OutputState }

func (DataLakeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeConfiguration)(nil)).Elem()
}

func (o DataLakeConfigurationOutput) ToDataLakeConfigurationOutput() DataLakeConfigurationOutput {
	return o
}

func (o DataLakeConfigurationOutput) ToDataLakeConfigurationOutputWithContext(ctx context.Context) DataLakeConfigurationOutput {
	return o
}

func (o DataLakeConfigurationOutput) ToDataLakeConfigurationPtrOutput() DataLakeConfigurationPtrOutput {
	return o.ToDataLakeConfigurationPtrOutputWithContext(context.Background())
}

func (o DataLakeConfigurationOutput) ToDataLakeConfigurationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataLakeConfiguration) *DataLakeConfiguration {
		return &v
	}).(DataLakeConfigurationPtrOutput)
}

// Provides encryption details of Amazon Security Lake object.
func (o DataLakeConfigurationOutput) EncryptionConfigurations() pulumi.MapArrayOutput {
	return o.ApplyT(func(v DataLakeConfiguration) []map[string]interface{} { return v.EncryptionConfigurations }).(pulumi.MapArrayOutput)
}

// Provides lifecycle details of Amazon Security Lake object.
func (o DataLakeConfigurationOutput) LifecycleConfiguration() DataLakeConfigurationLifecycleConfigurationPtrOutput {
	return o.ApplyT(func(v DataLakeConfiguration) *DataLakeConfigurationLifecycleConfiguration {
		return v.LifecycleConfiguration
	}).(DataLakeConfigurationLifecycleConfigurationPtrOutput)
}

// The AWS Regions where Security Lake is automatically enabled.
func (o DataLakeConfigurationOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v DataLakeConfiguration) string { return v.Region }).(pulumi.StringOutput)
}

// Provides replication details of Amazon Security Lake object.
func (o DataLakeConfigurationOutput) ReplicationConfiguration() DataLakeConfigurationReplicationConfigurationPtrOutput {
	return o.ApplyT(func(v DataLakeConfiguration) *DataLakeConfigurationReplicationConfiguration {
		return v.ReplicationConfiguration
	}).(DataLakeConfigurationReplicationConfigurationPtrOutput)
}

type DataLakeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataLakeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeConfiguration)(nil)).Elem()
}

func (o DataLakeConfigurationPtrOutput) ToDataLakeConfigurationPtrOutput() DataLakeConfigurationPtrOutput {
	return o
}

func (o DataLakeConfigurationPtrOutput) ToDataLakeConfigurationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationPtrOutput {
	return o
}

func (o DataLakeConfigurationPtrOutput) Elem() DataLakeConfigurationOutput {
	return o.ApplyT(func(v *DataLakeConfiguration) DataLakeConfiguration {
		if v != nil {
			return *v
		}
		var ret DataLakeConfiguration
		return ret
	}).(DataLakeConfigurationOutput)
}

// Provides encryption details of Amazon Security Lake object.
func (o DataLakeConfigurationPtrOutput) EncryptionConfigurations() pulumi.MapArrayOutput {
	return o.ApplyT(func(v *DataLakeConfiguration) []map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.EncryptionConfigurations
	}).(pulumi.MapArrayOutput)
}

// Provides lifecycle details of Amazon Security Lake object.
func (o DataLakeConfigurationPtrOutput) LifecycleConfiguration() DataLakeConfigurationLifecycleConfigurationPtrOutput {
	return o.ApplyT(func(v *DataLakeConfiguration) *DataLakeConfigurationLifecycleConfiguration {
		if v == nil {
			return nil
		}
		return v.LifecycleConfiguration
	}).(DataLakeConfigurationLifecycleConfigurationPtrOutput)
}

// The AWS Regions where Security Lake is automatically enabled.
func (o DataLakeConfigurationPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

// Provides replication details of Amazon Security Lake object.
func (o DataLakeConfigurationPtrOutput) ReplicationConfiguration() DataLakeConfigurationReplicationConfigurationPtrOutput {
	return o.ApplyT(func(v *DataLakeConfiguration) *DataLakeConfigurationReplicationConfiguration {
		if v == nil {
			return nil
		}
		return v.ReplicationConfiguration
	}).(DataLakeConfigurationReplicationConfigurationPtrOutput)
}

type DataLakeConfigurationLifecycleConfiguration struct {
	// Provides data expiration details of Amazon Security Lake object.
	Expiration *DataLakeConfigurationLifecycleConfigurationExpiration `pulumi:"expiration"`
	// Provides data storage transition details of Amazon Security Lake object.
	Transitions []DataLakeConfigurationLifecycleConfigurationTransition `pulumi:"transitions"`
}

// DataLakeConfigurationLifecycleConfigurationInput is an input type that accepts DataLakeConfigurationLifecycleConfigurationArgs and DataLakeConfigurationLifecycleConfigurationOutput values.
// You can construct a concrete instance of `DataLakeConfigurationLifecycleConfigurationInput` via:
//
//	DataLakeConfigurationLifecycleConfigurationArgs{...}
type DataLakeConfigurationLifecycleConfigurationInput interface {
	pulumi.Input

	ToDataLakeConfigurationLifecycleConfigurationOutput() DataLakeConfigurationLifecycleConfigurationOutput
	ToDataLakeConfigurationLifecycleConfigurationOutputWithContext(context.Context) DataLakeConfigurationLifecycleConfigurationOutput
}

type DataLakeConfigurationLifecycleConfigurationArgs struct {
	// Provides data expiration details of Amazon Security Lake object.
	Expiration DataLakeConfigurationLifecycleConfigurationExpirationPtrInput `pulumi:"expiration"`
	// Provides data storage transition details of Amazon Security Lake object.
	Transitions DataLakeConfigurationLifecycleConfigurationTransitionArrayInput `pulumi:"transitions"`
}

func (DataLakeConfigurationLifecycleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeConfigurationLifecycleConfiguration)(nil)).Elem()
}

func (i DataLakeConfigurationLifecycleConfigurationArgs) ToDataLakeConfigurationLifecycleConfigurationOutput() DataLakeConfigurationLifecycleConfigurationOutput {
	return i.ToDataLakeConfigurationLifecycleConfigurationOutputWithContext(context.Background())
}

func (i DataLakeConfigurationLifecycleConfigurationArgs) ToDataLakeConfigurationLifecycleConfigurationOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationLifecycleConfigurationOutput)
}

func (i DataLakeConfigurationLifecycleConfigurationArgs) ToDataLakeConfigurationLifecycleConfigurationPtrOutput() DataLakeConfigurationLifecycleConfigurationPtrOutput {
	return i.ToDataLakeConfigurationLifecycleConfigurationPtrOutputWithContext(context.Background())
}

func (i DataLakeConfigurationLifecycleConfigurationArgs) ToDataLakeConfigurationLifecycleConfigurationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationLifecycleConfigurationOutput).ToDataLakeConfigurationLifecycleConfigurationPtrOutputWithContext(ctx)
}

// DataLakeConfigurationLifecycleConfigurationPtrInput is an input type that accepts DataLakeConfigurationLifecycleConfigurationArgs, DataLakeConfigurationLifecycleConfigurationPtr and DataLakeConfigurationLifecycleConfigurationPtrOutput values.
// You can construct a concrete instance of `DataLakeConfigurationLifecycleConfigurationPtrInput` via:
//
//	        DataLakeConfigurationLifecycleConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataLakeConfigurationLifecycleConfigurationPtrInput interface {
	pulumi.Input

	ToDataLakeConfigurationLifecycleConfigurationPtrOutput() DataLakeConfigurationLifecycleConfigurationPtrOutput
	ToDataLakeConfigurationLifecycleConfigurationPtrOutputWithContext(context.Context) DataLakeConfigurationLifecycleConfigurationPtrOutput
}

type dataLakeConfigurationLifecycleConfigurationPtrType DataLakeConfigurationLifecycleConfigurationArgs

func DataLakeConfigurationLifecycleConfigurationPtr(v *DataLakeConfigurationLifecycleConfigurationArgs) DataLakeConfigurationLifecycleConfigurationPtrInput {
	return (*dataLakeConfigurationLifecycleConfigurationPtrType)(v)
}

func (*dataLakeConfigurationLifecycleConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeConfigurationLifecycleConfiguration)(nil)).Elem()
}

func (i *dataLakeConfigurationLifecycleConfigurationPtrType) ToDataLakeConfigurationLifecycleConfigurationPtrOutput() DataLakeConfigurationLifecycleConfigurationPtrOutput {
	return i.ToDataLakeConfigurationLifecycleConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataLakeConfigurationLifecycleConfigurationPtrType) ToDataLakeConfigurationLifecycleConfigurationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationLifecycleConfigurationPtrOutput)
}

type DataLakeConfigurationLifecycleConfigurationOutput struct{ *pulumi.OutputState }

func (DataLakeConfigurationLifecycleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeConfigurationLifecycleConfiguration)(nil)).Elem()
}

func (o DataLakeConfigurationLifecycleConfigurationOutput) ToDataLakeConfigurationLifecycleConfigurationOutput() DataLakeConfigurationLifecycleConfigurationOutput {
	return o
}

func (o DataLakeConfigurationLifecycleConfigurationOutput) ToDataLakeConfigurationLifecycleConfigurationOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationOutput {
	return o
}

func (o DataLakeConfigurationLifecycleConfigurationOutput) ToDataLakeConfigurationLifecycleConfigurationPtrOutput() DataLakeConfigurationLifecycleConfigurationPtrOutput {
	return o.ToDataLakeConfigurationLifecycleConfigurationPtrOutputWithContext(context.Background())
}

func (o DataLakeConfigurationLifecycleConfigurationOutput) ToDataLakeConfigurationLifecycleConfigurationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataLakeConfigurationLifecycleConfiguration) *DataLakeConfigurationLifecycleConfiguration {
		return &v
	}).(DataLakeConfigurationLifecycleConfigurationPtrOutput)
}

// Provides data expiration details of Amazon Security Lake object.
func (o DataLakeConfigurationLifecycleConfigurationOutput) Expiration() DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput {
	return o.ApplyT(func(v DataLakeConfigurationLifecycleConfiguration) *DataLakeConfigurationLifecycleConfigurationExpiration {
		return v.Expiration
	}).(DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput)
}

// Provides data storage transition details of Amazon Security Lake object.
func (o DataLakeConfigurationLifecycleConfigurationOutput) Transitions() DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput {
	return o.ApplyT(func(v DataLakeConfigurationLifecycleConfiguration) []DataLakeConfigurationLifecycleConfigurationTransition {
		return v.Transitions
	}).(DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput)
}

type DataLakeConfigurationLifecycleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataLakeConfigurationLifecycleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeConfigurationLifecycleConfiguration)(nil)).Elem()
}

func (o DataLakeConfigurationLifecycleConfigurationPtrOutput) ToDataLakeConfigurationLifecycleConfigurationPtrOutput() DataLakeConfigurationLifecycleConfigurationPtrOutput {
	return o
}

func (o DataLakeConfigurationLifecycleConfigurationPtrOutput) ToDataLakeConfigurationLifecycleConfigurationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationPtrOutput {
	return o
}

func (o DataLakeConfigurationLifecycleConfigurationPtrOutput) Elem() DataLakeConfigurationLifecycleConfigurationOutput {
	return o.ApplyT(func(v *DataLakeConfigurationLifecycleConfiguration) DataLakeConfigurationLifecycleConfiguration {
		if v != nil {
			return *v
		}
		var ret DataLakeConfigurationLifecycleConfiguration
		return ret
	}).(DataLakeConfigurationLifecycleConfigurationOutput)
}

// Provides data expiration details of Amazon Security Lake object.
func (o DataLakeConfigurationLifecycleConfigurationPtrOutput) Expiration() DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput {
	return o.ApplyT(func(v *DataLakeConfigurationLifecycleConfiguration) *DataLakeConfigurationLifecycleConfigurationExpiration {
		if v == nil {
			return nil
		}
		return v.Expiration
	}).(DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput)
}

// Provides data storage transition details of Amazon Security Lake object.
func (o DataLakeConfigurationLifecycleConfigurationPtrOutput) Transitions() DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput {
	return o.ApplyT(func(v *DataLakeConfigurationLifecycleConfiguration) []DataLakeConfigurationLifecycleConfigurationTransition {
		if v == nil {
			return nil
		}
		return v.Transitions
	}).(DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput)
}

type DataLakeConfigurationLifecycleConfigurationExpiration struct {
	// Number of days before data transition to a different S3 Storage Class in the Amazon Security Lake object.
	Days *int `pulumi:"days"`
}

// DataLakeConfigurationLifecycleConfigurationExpirationInput is an input type that accepts DataLakeConfigurationLifecycleConfigurationExpirationArgs and DataLakeConfigurationLifecycleConfigurationExpirationOutput values.
// You can construct a concrete instance of `DataLakeConfigurationLifecycleConfigurationExpirationInput` via:
//
//	DataLakeConfigurationLifecycleConfigurationExpirationArgs{...}
type DataLakeConfigurationLifecycleConfigurationExpirationInput interface {
	pulumi.Input

	ToDataLakeConfigurationLifecycleConfigurationExpirationOutput() DataLakeConfigurationLifecycleConfigurationExpirationOutput
	ToDataLakeConfigurationLifecycleConfigurationExpirationOutputWithContext(context.Context) DataLakeConfigurationLifecycleConfigurationExpirationOutput
}

type DataLakeConfigurationLifecycleConfigurationExpirationArgs struct {
	// Number of days before data transition to a different S3 Storage Class in the Amazon Security Lake object.
	Days pulumi.IntPtrInput `pulumi:"days"`
}

func (DataLakeConfigurationLifecycleConfigurationExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeConfigurationLifecycleConfigurationExpiration)(nil)).Elem()
}

func (i DataLakeConfigurationLifecycleConfigurationExpirationArgs) ToDataLakeConfigurationLifecycleConfigurationExpirationOutput() DataLakeConfigurationLifecycleConfigurationExpirationOutput {
	return i.ToDataLakeConfigurationLifecycleConfigurationExpirationOutputWithContext(context.Background())
}

func (i DataLakeConfigurationLifecycleConfigurationExpirationArgs) ToDataLakeConfigurationLifecycleConfigurationExpirationOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationLifecycleConfigurationExpirationOutput)
}

func (i DataLakeConfigurationLifecycleConfigurationExpirationArgs) ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutput() DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput {
	return i.ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutputWithContext(context.Background())
}

func (i DataLakeConfigurationLifecycleConfigurationExpirationArgs) ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationLifecycleConfigurationExpirationOutput).ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutputWithContext(ctx)
}

// DataLakeConfigurationLifecycleConfigurationExpirationPtrInput is an input type that accepts DataLakeConfigurationLifecycleConfigurationExpirationArgs, DataLakeConfigurationLifecycleConfigurationExpirationPtr and DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput values.
// You can construct a concrete instance of `DataLakeConfigurationLifecycleConfigurationExpirationPtrInput` via:
//
//	        DataLakeConfigurationLifecycleConfigurationExpirationArgs{...}
//
//	or:
//
//	        nil
type DataLakeConfigurationLifecycleConfigurationExpirationPtrInput interface {
	pulumi.Input

	ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutput() DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput
	ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutputWithContext(context.Context) DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput
}

type dataLakeConfigurationLifecycleConfigurationExpirationPtrType DataLakeConfigurationLifecycleConfigurationExpirationArgs

func DataLakeConfigurationLifecycleConfigurationExpirationPtr(v *DataLakeConfigurationLifecycleConfigurationExpirationArgs) DataLakeConfigurationLifecycleConfigurationExpirationPtrInput {
	return (*dataLakeConfigurationLifecycleConfigurationExpirationPtrType)(v)
}

func (*dataLakeConfigurationLifecycleConfigurationExpirationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeConfigurationLifecycleConfigurationExpiration)(nil)).Elem()
}

func (i *dataLakeConfigurationLifecycleConfigurationExpirationPtrType) ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutput() DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput {
	return i.ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutputWithContext(context.Background())
}

func (i *dataLakeConfigurationLifecycleConfigurationExpirationPtrType) ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput)
}

type DataLakeConfigurationLifecycleConfigurationExpirationOutput struct{ *pulumi.OutputState }

func (DataLakeConfigurationLifecycleConfigurationExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeConfigurationLifecycleConfigurationExpiration)(nil)).Elem()
}

func (o DataLakeConfigurationLifecycleConfigurationExpirationOutput) ToDataLakeConfigurationLifecycleConfigurationExpirationOutput() DataLakeConfigurationLifecycleConfigurationExpirationOutput {
	return o
}

func (o DataLakeConfigurationLifecycleConfigurationExpirationOutput) ToDataLakeConfigurationLifecycleConfigurationExpirationOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationExpirationOutput {
	return o
}

func (o DataLakeConfigurationLifecycleConfigurationExpirationOutput) ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutput() DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput {
	return o.ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutputWithContext(context.Background())
}

func (o DataLakeConfigurationLifecycleConfigurationExpirationOutput) ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataLakeConfigurationLifecycleConfigurationExpiration) *DataLakeConfigurationLifecycleConfigurationExpiration {
		return &v
	}).(DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput)
}

// Number of days before data transition to a different S3 Storage Class in the Amazon Security Lake object.
func (o DataLakeConfigurationLifecycleConfigurationExpirationOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataLakeConfigurationLifecycleConfigurationExpiration) *int { return v.Days }).(pulumi.IntPtrOutput)
}

type DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput struct{ *pulumi.OutputState }

func (DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeConfigurationLifecycleConfigurationExpiration)(nil)).Elem()
}

func (o DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput) ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutput() DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput {
	return o
}

func (o DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput) ToDataLakeConfigurationLifecycleConfigurationExpirationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput {
	return o
}

func (o DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput) Elem() DataLakeConfigurationLifecycleConfigurationExpirationOutput {
	return o.ApplyT(func(v *DataLakeConfigurationLifecycleConfigurationExpiration) DataLakeConfigurationLifecycleConfigurationExpiration {
		if v != nil {
			return *v
		}
		var ret DataLakeConfigurationLifecycleConfigurationExpiration
		return ret
	}).(DataLakeConfigurationLifecycleConfigurationExpirationOutput)
}

// Number of days before data transition to a different S3 Storage Class in the Amazon Security Lake object.
func (o DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DataLakeConfigurationLifecycleConfigurationExpiration) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

type DataLakeConfigurationLifecycleConfigurationTransition struct {
	// Number of days before data transition to a different S3 Storage Class in the Amazon Security Lake object.
	Days *int `pulumi:"days"`
	// The range of storage classes that you can choose from based on the data access, resiliency, and cost requirements of your workloads.
	StorageClass *string `pulumi:"storageClass"`
}

// DataLakeConfigurationLifecycleConfigurationTransitionInput is an input type that accepts DataLakeConfigurationLifecycleConfigurationTransitionArgs and DataLakeConfigurationLifecycleConfigurationTransitionOutput values.
// You can construct a concrete instance of `DataLakeConfigurationLifecycleConfigurationTransitionInput` via:
//
//	DataLakeConfigurationLifecycleConfigurationTransitionArgs{...}
type DataLakeConfigurationLifecycleConfigurationTransitionInput interface {
	pulumi.Input

	ToDataLakeConfigurationLifecycleConfigurationTransitionOutput() DataLakeConfigurationLifecycleConfigurationTransitionOutput
	ToDataLakeConfigurationLifecycleConfigurationTransitionOutputWithContext(context.Context) DataLakeConfigurationLifecycleConfigurationTransitionOutput
}

type DataLakeConfigurationLifecycleConfigurationTransitionArgs struct {
	// Number of days before data transition to a different S3 Storage Class in the Amazon Security Lake object.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// The range of storage classes that you can choose from based on the data access, resiliency, and cost requirements of your workloads.
	StorageClass pulumi.StringPtrInput `pulumi:"storageClass"`
}

func (DataLakeConfigurationLifecycleConfigurationTransitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeConfigurationLifecycleConfigurationTransition)(nil)).Elem()
}

func (i DataLakeConfigurationLifecycleConfigurationTransitionArgs) ToDataLakeConfigurationLifecycleConfigurationTransitionOutput() DataLakeConfigurationLifecycleConfigurationTransitionOutput {
	return i.ToDataLakeConfigurationLifecycleConfigurationTransitionOutputWithContext(context.Background())
}

func (i DataLakeConfigurationLifecycleConfigurationTransitionArgs) ToDataLakeConfigurationLifecycleConfigurationTransitionOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationTransitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationLifecycleConfigurationTransitionOutput)
}

// DataLakeConfigurationLifecycleConfigurationTransitionArrayInput is an input type that accepts DataLakeConfigurationLifecycleConfigurationTransitionArray and DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput values.
// You can construct a concrete instance of `DataLakeConfigurationLifecycleConfigurationTransitionArrayInput` via:
//
//	DataLakeConfigurationLifecycleConfigurationTransitionArray{ DataLakeConfigurationLifecycleConfigurationTransitionArgs{...} }
type DataLakeConfigurationLifecycleConfigurationTransitionArrayInput interface {
	pulumi.Input

	ToDataLakeConfigurationLifecycleConfigurationTransitionArrayOutput() DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput
	ToDataLakeConfigurationLifecycleConfigurationTransitionArrayOutputWithContext(context.Context) DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput
}

type DataLakeConfigurationLifecycleConfigurationTransitionArray []DataLakeConfigurationLifecycleConfigurationTransitionInput

func (DataLakeConfigurationLifecycleConfigurationTransitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeConfigurationLifecycleConfigurationTransition)(nil)).Elem()
}

func (i DataLakeConfigurationLifecycleConfigurationTransitionArray) ToDataLakeConfigurationLifecycleConfigurationTransitionArrayOutput() DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput {
	return i.ToDataLakeConfigurationLifecycleConfigurationTransitionArrayOutputWithContext(context.Background())
}

func (i DataLakeConfigurationLifecycleConfigurationTransitionArray) ToDataLakeConfigurationLifecycleConfigurationTransitionArrayOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput)
}

type DataLakeConfigurationLifecycleConfigurationTransitionOutput struct{ *pulumi.OutputState }

func (DataLakeConfigurationLifecycleConfigurationTransitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeConfigurationLifecycleConfigurationTransition)(nil)).Elem()
}

func (o DataLakeConfigurationLifecycleConfigurationTransitionOutput) ToDataLakeConfigurationLifecycleConfigurationTransitionOutput() DataLakeConfigurationLifecycleConfigurationTransitionOutput {
	return o
}

func (o DataLakeConfigurationLifecycleConfigurationTransitionOutput) ToDataLakeConfigurationLifecycleConfigurationTransitionOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationTransitionOutput {
	return o
}

// Number of days before data transition to a different S3 Storage Class in the Amazon Security Lake object.
func (o DataLakeConfigurationLifecycleConfigurationTransitionOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DataLakeConfigurationLifecycleConfigurationTransition) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// The range of storage classes that you can choose from based on the data access, resiliency, and cost requirements of your workloads.
func (o DataLakeConfigurationLifecycleConfigurationTransitionOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeConfigurationLifecycleConfigurationTransition) *string { return v.StorageClass }).(pulumi.StringPtrOutput)
}

type DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput struct{ *pulumi.OutputState }

func (DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataLakeConfigurationLifecycleConfigurationTransition)(nil)).Elem()
}

func (o DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput) ToDataLakeConfigurationLifecycleConfigurationTransitionArrayOutput() DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput {
	return o
}

func (o DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput) ToDataLakeConfigurationLifecycleConfigurationTransitionArrayOutputWithContext(ctx context.Context) DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput {
	return o
}

func (o DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput) Index(i pulumi.IntInput) DataLakeConfigurationLifecycleConfigurationTransitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataLakeConfigurationLifecycleConfigurationTransition {
		return vs[0].([]DataLakeConfigurationLifecycleConfigurationTransition)[vs[1].(int)]
	}).(DataLakeConfigurationLifecycleConfigurationTransitionOutput)
}

type DataLakeConfigurationReplicationConfiguration struct {
	// Replication enables automatic, asynchronous copying of objects across Amazon S3 buckets. Amazon S3 buckets that are configured for object replication can be owned by the same AWS account or by different accounts. You can replicate objects to a single destination bucket or to multiple destination buckets. The destination buckets can be in different AWS Regions or within the same Region as the source bucket.
	Regions []string `pulumi:"regions"`
	// Replication settings for the Amazon S3 buckets. This parameter uses the AWS Identity and Access Management (IAM) role you created that is managed by Security Lake, to ensure the replication setting is correct.
	RoleArn *string `pulumi:"roleArn"`
}

// DataLakeConfigurationReplicationConfigurationInput is an input type that accepts DataLakeConfigurationReplicationConfigurationArgs and DataLakeConfigurationReplicationConfigurationOutput values.
// You can construct a concrete instance of `DataLakeConfigurationReplicationConfigurationInput` via:
//
//	DataLakeConfigurationReplicationConfigurationArgs{...}
type DataLakeConfigurationReplicationConfigurationInput interface {
	pulumi.Input

	ToDataLakeConfigurationReplicationConfigurationOutput() DataLakeConfigurationReplicationConfigurationOutput
	ToDataLakeConfigurationReplicationConfigurationOutputWithContext(context.Context) DataLakeConfigurationReplicationConfigurationOutput
}

type DataLakeConfigurationReplicationConfigurationArgs struct {
	// Replication enables automatic, asynchronous copying of objects across Amazon S3 buckets. Amazon S3 buckets that are configured for object replication can be owned by the same AWS account or by different accounts. You can replicate objects to a single destination bucket or to multiple destination buckets. The destination buckets can be in different AWS Regions or within the same Region as the source bucket.
	Regions pulumi.StringArrayInput `pulumi:"regions"`
	// Replication settings for the Amazon S3 buckets. This parameter uses the AWS Identity and Access Management (IAM) role you created that is managed by Security Lake, to ensure the replication setting is correct.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
}

func (DataLakeConfigurationReplicationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeConfigurationReplicationConfiguration)(nil)).Elem()
}

func (i DataLakeConfigurationReplicationConfigurationArgs) ToDataLakeConfigurationReplicationConfigurationOutput() DataLakeConfigurationReplicationConfigurationOutput {
	return i.ToDataLakeConfigurationReplicationConfigurationOutputWithContext(context.Background())
}

func (i DataLakeConfigurationReplicationConfigurationArgs) ToDataLakeConfigurationReplicationConfigurationOutputWithContext(ctx context.Context) DataLakeConfigurationReplicationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationReplicationConfigurationOutput)
}

func (i DataLakeConfigurationReplicationConfigurationArgs) ToDataLakeConfigurationReplicationConfigurationPtrOutput() DataLakeConfigurationReplicationConfigurationPtrOutput {
	return i.ToDataLakeConfigurationReplicationConfigurationPtrOutputWithContext(context.Background())
}

func (i DataLakeConfigurationReplicationConfigurationArgs) ToDataLakeConfigurationReplicationConfigurationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationReplicationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationReplicationConfigurationOutput).ToDataLakeConfigurationReplicationConfigurationPtrOutputWithContext(ctx)
}

// DataLakeConfigurationReplicationConfigurationPtrInput is an input type that accepts DataLakeConfigurationReplicationConfigurationArgs, DataLakeConfigurationReplicationConfigurationPtr and DataLakeConfigurationReplicationConfigurationPtrOutput values.
// You can construct a concrete instance of `DataLakeConfigurationReplicationConfigurationPtrInput` via:
//
//	        DataLakeConfigurationReplicationConfigurationArgs{...}
//
//	or:
//
//	        nil
type DataLakeConfigurationReplicationConfigurationPtrInput interface {
	pulumi.Input

	ToDataLakeConfigurationReplicationConfigurationPtrOutput() DataLakeConfigurationReplicationConfigurationPtrOutput
	ToDataLakeConfigurationReplicationConfigurationPtrOutputWithContext(context.Context) DataLakeConfigurationReplicationConfigurationPtrOutput
}

type dataLakeConfigurationReplicationConfigurationPtrType DataLakeConfigurationReplicationConfigurationArgs

func DataLakeConfigurationReplicationConfigurationPtr(v *DataLakeConfigurationReplicationConfigurationArgs) DataLakeConfigurationReplicationConfigurationPtrInput {
	return (*dataLakeConfigurationReplicationConfigurationPtrType)(v)
}

func (*dataLakeConfigurationReplicationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeConfigurationReplicationConfiguration)(nil)).Elem()
}

func (i *dataLakeConfigurationReplicationConfigurationPtrType) ToDataLakeConfigurationReplicationConfigurationPtrOutput() DataLakeConfigurationReplicationConfigurationPtrOutput {
	return i.ToDataLakeConfigurationReplicationConfigurationPtrOutputWithContext(context.Background())
}

func (i *dataLakeConfigurationReplicationConfigurationPtrType) ToDataLakeConfigurationReplicationConfigurationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationReplicationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeConfigurationReplicationConfigurationPtrOutput)
}

type DataLakeConfigurationReplicationConfigurationOutput struct{ *pulumi.OutputState }

func (DataLakeConfigurationReplicationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeConfigurationReplicationConfiguration)(nil)).Elem()
}

func (o DataLakeConfigurationReplicationConfigurationOutput) ToDataLakeConfigurationReplicationConfigurationOutput() DataLakeConfigurationReplicationConfigurationOutput {
	return o
}

func (o DataLakeConfigurationReplicationConfigurationOutput) ToDataLakeConfigurationReplicationConfigurationOutputWithContext(ctx context.Context) DataLakeConfigurationReplicationConfigurationOutput {
	return o
}

func (o DataLakeConfigurationReplicationConfigurationOutput) ToDataLakeConfigurationReplicationConfigurationPtrOutput() DataLakeConfigurationReplicationConfigurationPtrOutput {
	return o.ToDataLakeConfigurationReplicationConfigurationPtrOutputWithContext(context.Background())
}

func (o DataLakeConfigurationReplicationConfigurationOutput) ToDataLakeConfigurationReplicationConfigurationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationReplicationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataLakeConfigurationReplicationConfiguration) *DataLakeConfigurationReplicationConfiguration {
		return &v
	}).(DataLakeConfigurationReplicationConfigurationPtrOutput)
}

// Replication enables automatic, asynchronous copying of objects across Amazon S3 buckets. Amazon S3 buckets that are configured for object replication can be owned by the same AWS account or by different accounts. You can replicate objects to a single destination bucket or to multiple destination buckets. The destination buckets can be in different AWS Regions or within the same Region as the source bucket.
func (o DataLakeConfigurationReplicationConfigurationOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataLakeConfigurationReplicationConfiguration) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

// Replication settings for the Amazon S3 buckets. This parameter uses the AWS Identity and Access Management (IAM) role you created that is managed by Security Lake, to ensure the replication setting is correct.
func (o DataLakeConfigurationReplicationConfigurationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeConfigurationReplicationConfiguration) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

type DataLakeConfigurationReplicationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DataLakeConfigurationReplicationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeConfigurationReplicationConfiguration)(nil)).Elem()
}

func (o DataLakeConfigurationReplicationConfigurationPtrOutput) ToDataLakeConfigurationReplicationConfigurationPtrOutput() DataLakeConfigurationReplicationConfigurationPtrOutput {
	return o
}

func (o DataLakeConfigurationReplicationConfigurationPtrOutput) ToDataLakeConfigurationReplicationConfigurationPtrOutputWithContext(ctx context.Context) DataLakeConfigurationReplicationConfigurationPtrOutput {
	return o
}

func (o DataLakeConfigurationReplicationConfigurationPtrOutput) Elem() DataLakeConfigurationReplicationConfigurationOutput {
	return o.ApplyT(func(v *DataLakeConfigurationReplicationConfiguration) DataLakeConfigurationReplicationConfiguration {
		if v != nil {
			return *v
		}
		var ret DataLakeConfigurationReplicationConfiguration
		return ret
	}).(DataLakeConfigurationReplicationConfigurationOutput)
}

// Replication enables automatic, asynchronous copying of objects across Amazon S3 buckets. Amazon S3 buckets that are configured for object replication can be owned by the same AWS account or by different accounts. You can replicate objects to a single destination bucket or to multiple destination buckets. The destination buckets can be in different AWS Regions or within the same Region as the source bucket.
func (o DataLakeConfigurationReplicationConfigurationPtrOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataLakeConfigurationReplicationConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.Regions
	}).(pulumi.StringArrayOutput)
}

// Replication settings for the Amazon S3 buckets. This parameter uses the AWS Identity and Access Management (IAM) role you created that is managed by Security Lake, to ensure the replication setting is correct.
func (o DataLakeConfigurationReplicationConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeConfigurationReplicationConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type DataLakeTimeouts struct {
	Create *string `pulumi:"create"`
	Delete *string `pulumi:"delete"`
	Update *string `pulumi:"update"`
}

// DataLakeTimeoutsInput is an input type that accepts DataLakeTimeoutsArgs and DataLakeTimeoutsOutput values.
// You can construct a concrete instance of `DataLakeTimeoutsInput` via:
//
//	DataLakeTimeoutsArgs{...}
type DataLakeTimeoutsInput interface {
	pulumi.Input

	ToDataLakeTimeoutsOutput() DataLakeTimeoutsOutput
	ToDataLakeTimeoutsOutputWithContext(context.Context) DataLakeTimeoutsOutput
}

type DataLakeTimeoutsArgs struct {
	Create pulumi.StringPtrInput `pulumi:"create"`
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (DataLakeTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeTimeouts)(nil)).Elem()
}

func (i DataLakeTimeoutsArgs) ToDataLakeTimeoutsOutput() DataLakeTimeoutsOutput {
	return i.ToDataLakeTimeoutsOutputWithContext(context.Background())
}

func (i DataLakeTimeoutsArgs) ToDataLakeTimeoutsOutputWithContext(ctx context.Context) DataLakeTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeTimeoutsOutput)
}

func (i DataLakeTimeoutsArgs) ToDataLakeTimeoutsPtrOutput() DataLakeTimeoutsPtrOutput {
	return i.ToDataLakeTimeoutsPtrOutputWithContext(context.Background())
}

func (i DataLakeTimeoutsArgs) ToDataLakeTimeoutsPtrOutputWithContext(ctx context.Context) DataLakeTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeTimeoutsOutput).ToDataLakeTimeoutsPtrOutputWithContext(ctx)
}

// DataLakeTimeoutsPtrInput is an input type that accepts DataLakeTimeoutsArgs, DataLakeTimeoutsPtr and DataLakeTimeoutsPtrOutput values.
// You can construct a concrete instance of `DataLakeTimeoutsPtrInput` via:
//
//	        DataLakeTimeoutsArgs{...}
//
//	or:
//
//	        nil
type DataLakeTimeoutsPtrInput interface {
	pulumi.Input

	ToDataLakeTimeoutsPtrOutput() DataLakeTimeoutsPtrOutput
	ToDataLakeTimeoutsPtrOutputWithContext(context.Context) DataLakeTimeoutsPtrOutput
}

type dataLakeTimeoutsPtrType DataLakeTimeoutsArgs

func DataLakeTimeoutsPtr(v *DataLakeTimeoutsArgs) DataLakeTimeoutsPtrInput {
	return (*dataLakeTimeoutsPtrType)(v)
}

func (*dataLakeTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeTimeouts)(nil)).Elem()
}

func (i *dataLakeTimeoutsPtrType) ToDataLakeTimeoutsPtrOutput() DataLakeTimeoutsPtrOutput {
	return i.ToDataLakeTimeoutsPtrOutputWithContext(context.Background())
}

func (i *dataLakeTimeoutsPtrType) ToDataLakeTimeoutsPtrOutputWithContext(ctx context.Context) DataLakeTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeTimeoutsPtrOutput)
}

type DataLakeTimeoutsOutput struct{ *pulumi.OutputState }

func (DataLakeTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataLakeTimeouts)(nil)).Elem()
}

func (o DataLakeTimeoutsOutput) ToDataLakeTimeoutsOutput() DataLakeTimeoutsOutput {
	return o
}

func (o DataLakeTimeoutsOutput) ToDataLakeTimeoutsOutputWithContext(ctx context.Context) DataLakeTimeoutsOutput {
	return o
}

func (o DataLakeTimeoutsOutput) ToDataLakeTimeoutsPtrOutput() DataLakeTimeoutsPtrOutput {
	return o.ToDataLakeTimeoutsPtrOutputWithContext(context.Background())
}

func (o DataLakeTimeoutsOutput) ToDataLakeTimeoutsPtrOutputWithContext(ctx context.Context) DataLakeTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataLakeTimeouts) *DataLakeTimeouts {
		return &v
	}).(DataLakeTimeoutsPtrOutput)
}

func (o DataLakeTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

func (o DataLakeTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

func (o DataLakeTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataLakeTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type DataLakeTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (DataLakeTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeTimeouts)(nil)).Elem()
}

func (o DataLakeTimeoutsPtrOutput) ToDataLakeTimeoutsPtrOutput() DataLakeTimeoutsPtrOutput {
	return o
}

func (o DataLakeTimeoutsPtrOutput) ToDataLakeTimeoutsPtrOutputWithContext(ctx context.Context) DataLakeTimeoutsPtrOutput {
	return o
}

func (o DataLakeTimeoutsPtrOutput) Elem() DataLakeTimeoutsOutput {
	return o.ApplyT(func(v *DataLakeTimeouts) DataLakeTimeouts {
		if v != nil {
			return *v
		}
		var ret DataLakeTimeouts
		return ret
	}).(DataLakeTimeoutsOutput)
}

func (o DataLakeTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

func (o DataLakeTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

func (o DataLakeTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeConfigurationInput)(nil)).Elem(), DataLakeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeConfigurationPtrInput)(nil)).Elem(), DataLakeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeConfigurationLifecycleConfigurationInput)(nil)).Elem(), DataLakeConfigurationLifecycleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeConfigurationLifecycleConfigurationPtrInput)(nil)).Elem(), DataLakeConfigurationLifecycleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeConfigurationLifecycleConfigurationExpirationInput)(nil)).Elem(), DataLakeConfigurationLifecycleConfigurationExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeConfigurationLifecycleConfigurationExpirationPtrInput)(nil)).Elem(), DataLakeConfigurationLifecycleConfigurationExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeConfigurationLifecycleConfigurationTransitionInput)(nil)).Elem(), DataLakeConfigurationLifecycleConfigurationTransitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeConfigurationLifecycleConfigurationTransitionArrayInput)(nil)).Elem(), DataLakeConfigurationLifecycleConfigurationTransitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeConfigurationReplicationConfigurationInput)(nil)).Elem(), DataLakeConfigurationReplicationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeConfigurationReplicationConfigurationPtrInput)(nil)).Elem(), DataLakeConfigurationReplicationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeTimeoutsInput)(nil)).Elem(), DataLakeTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeTimeoutsPtrInput)(nil)).Elem(), DataLakeTimeoutsArgs{})
	pulumi.RegisterOutputType(DataLakeConfigurationOutput{})
	pulumi.RegisterOutputType(DataLakeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataLakeConfigurationLifecycleConfigurationOutput{})
	pulumi.RegisterOutputType(DataLakeConfigurationLifecycleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataLakeConfigurationLifecycleConfigurationExpirationOutput{})
	pulumi.RegisterOutputType(DataLakeConfigurationLifecycleConfigurationExpirationPtrOutput{})
	pulumi.RegisterOutputType(DataLakeConfigurationLifecycleConfigurationTransitionOutput{})
	pulumi.RegisterOutputType(DataLakeConfigurationLifecycleConfigurationTransitionArrayOutput{})
	pulumi.RegisterOutputType(DataLakeConfigurationReplicationConfigurationOutput{})
	pulumi.RegisterOutputType(DataLakeConfigurationReplicationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DataLakeTimeoutsOutput{})
	pulumi.RegisterOutputType(DataLakeTimeoutsPtrOutput{})
}
