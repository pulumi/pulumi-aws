// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redshiftdata

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type StatementParameter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// StatementParameterInput is an input type that accepts StatementParameterArgs and StatementParameterOutput values.
// You can construct a concrete instance of `StatementParameterInput` via:
//
//          StatementParameterArgs{...}
type StatementParameterInput interface {
	pulumi.Input

	ToStatementParameterOutput() StatementParameterOutput
	ToStatementParameterOutputWithContext(context.Context) StatementParameterOutput
}

type StatementParameterArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (StatementParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StatementParameter)(nil)).Elem()
}

func (i StatementParameterArgs) ToStatementParameterOutput() StatementParameterOutput {
	return i.ToStatementParameterOutputWithContext(context.Background())
}

func (i StatementParameterArgs) ToStatementParameterOutputWithContext(ctx context.Context) StatementParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatementParameterOutput)
}

// StatementParameterArrayInput is an input type that accepts StatementParameterArray and StatementParameterArrayOutput values.
// You can construct a concrete instance of `StatementParameterArrayInput` via:
//
//          StatementParameterArray{ StatementParameterArgs{...} }
type StatementParameterArrayInput interface {
	pulumi.Input

	ToStatementParameterArrayOutput() StatementParameterArrayOutput
	ToStatementParameterArrayOutputWithContext(context.Context) StatementParameterArrayOutput
}

type StatementParameterArray []StatementParameterInput

func (StatementParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatementParameter)(nil)).Elem()
}

func (i StatementParameterArray) ToStatementParameterArrayOutput() StatementParameterArrayOutput {
	return i.ToStatementParameterArrayOutputWithContext(context.Background())
}

func (i StatementParameterArray) ToStatementParameterArrayOutputWithContext(ctx context.Context) StatementParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StatementParameterArrayOutput)
}

type StatementParameterOutput struct{ *pulumi.OutputState }

func (StatementParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StatementParameter)(nil)).Elem()
}

func (o StatementParameterOutput) ToStatementParameterOutput() StatementParameterOutput {
	return o
}

func (o StatementParameterOutput) ToStatementParameterOutputWithContext(ctx context.Context) StatementParameterOutput {
	return o
}

func (o StatementParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v StatementParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o StatementParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v StatementParameter) string { return v.Value }).(pulumi.StringOutput)
}

type StatementParameterArrayOutput struct{ *pulumi.OutputState }

func (StatementParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StatementParameter)(nil)).Elem()
}

func (o StatementParameterArrayOutput) ToStatementParameterArrayOutput() StatementParameterArrayOutput {
	return o
}

func (o StatementParameterArrayOutput) ToStatementParameterArrayOutputWithContext(ctx context.Context) StatementParameterArrayOutput {
	return o
}

func (o StatementParameterArrayOutput) Index(i pulumi.IntInput) StatementParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StatementParameter {
		return vs[0].([]StatementParameter)[vs[1].(int)]
	}).(StatementParameterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StatementParameterInput)(nil)).Elem(), StatementParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StatementParameterArrayInput)(nil)).Elem(), StatementParameterArray{})
	pulumi.RegisterOutputType(StatementParameterOutput{})
	pulumi.RegisterOutputType(StatementParameterArrayOutput{})
}
