// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package acm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupCertificate(ctx *pulumi.Context, args *LookupCertificateArgs, opts ...pulumi.InvokeOption) (*LookupCertificateResult, error) {
	var rv LookupCertificateResult
	err := ctx.Invoke("aws:acm/getCertificate:getCertificate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCertificate.
type LookupCertificateArgs struct {
	Domain     string            `pulumi:"domain"`
	KeyTypes   []string          `pulumi:"keyTypes"`
	MostRecent *bool             `pulumi:"mostRecent"`
	Statuses   []string          `pulumi:"statuses"`
	Tags       map[string]string `pulumi:"tags"`
	Types      []string          `pulumi:"types"`
}

// A collection of values returned by getCertificate.
type LookupCertificateResult struct {
	Arn              string `pulumi:"arn"`
	Certificate      string `pulumi:"certificate"`
	CertificateChain string `pulumi:"certificateChain"`
	Domain           string `pulumi:"domain"`
	// The provider-assigned unique ID for this managed resource.
	Id         string            `pulumi:"id"`
	KeyTypes   []string          `pulumi:"keyTypes"`
	MostRecent *bool             `pulumi:"mostRecent"`
	Status     string            `pulumi:"status"`
	Statuses   []string          `pulumi:"statuses"`
	Tags       map[string]string `pulumi:"tags"`
	Types      []string          `pulumi:"types"`
}

func LookupCertificateOutput(ctx *pulumi.Context, args LookupCertificateOutputArgs, opts ...pulumi.InvokeOption) LookupCertificateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCertificateResult, error) {
			args := v.(LookupCertificateArgs)
			r, err := LookupCertificate(ctx, &args, opts...)
			var s LookupCertificateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCertificateResultOutput)
}

// A collection of arguments for invoking getCertificate.
type LookupCertificateOutputArgs struct {
	Domain     pulumi.StringInput      `pulumi:"domain"`
	KeyTypes   pulumi.StringArrayInput `pulumi:"keyTypes"`
	MostRecent pulumi.BoolPtrInput     `pulumi:"mostRecent"`
	Statuses   pulumi.StringArrayInput `pulumi:"statuses"`
	Tags       pulumi.StringMapInput   `pulumi:"tags"`
	Types      pulumi.StringArrayInput `pulumi:"types"`
}

func (LookupCertificateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCertificateArgs)(nil)).Elem()
}

// A collection of values returned by getCertificate.
type LookupCertificateResultOutput struct{ *pulumi.OutputState }

func (LookupCertificateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCertificateResult)(nil)).Elem()
}

func (o LookupCertificateResultOutput) ToLookupCertificateResultOutput() LookupCertificateResultOutput {
	return o
}

func (o LookupCertificateResultOutput) ToLookupCertificateResultOutputWithContext(ctx context.Context) LookupCertificateResultOutput {
	return o
}

func (o LookupCertificateResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCertificateResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupCertificateResultOutput) Certificate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCertificateResult) string { return v.Certificate }).(pulumi.StringOutput)
}

func (o LookupCertificateResultOutput) CertificateChain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCertificateResult) string { return v.CertificateChain }).(pulumi.StringOutput)
}

func (o LookupCertificateResultOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCertificateResult) string { return v.Domain }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCertificateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCertificateResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupCertificateResultOutput) KeyTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCertificateResult) []string { return v.KeyTypes }).(pulumi.StringArrayOutput)
}

func (o LookupCertificateResultOutput) MostRecent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupCertificateResult) *bool { return v.MostRecent }).(pulumi.BoolPtrOutput)
}

func (o LookupCertificateResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCertificateResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupCertificateResultOutput) Statuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCertificateResult) []string { return v.Statuses }).(pulumi.StringArrayOutput)
}

func (o LookupCertificateResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupCertificateResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupCertificateResultOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupCertificateResult) []string { return v.Types }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCertificateResultOutput{})
}
