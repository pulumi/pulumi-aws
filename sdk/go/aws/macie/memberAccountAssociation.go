// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package macie

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// > **NOTE:** This resource interacts with [Amazon Macie Classic](https://docs.aws.amazon.com/macie/latest/userguide/what-is-macie.html). Macie Classic cannot be activated in new accounts. See the [FAQ](https://aws.amazon.com/macie/classic-faqs/) for more details.
//
// Associates an AWS account with Amazon Macie as a member account.
//
// > **NOTE:** Before using Amazon Macie for the first time it must be enabled manually. Instructions are [here](https://docs.aws.amazon.com/macie/latest/userguide/macie-setting-up.html#macie-setting-up-enable).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/macie"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := macie.NewMemberAccountAssociation(ctx, "example", &macie.MemberAccountAssociationArgs{
// 			MemberAccountId: pulumi.String("123456789012"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type MemberAccountAssociation struct {
	pulumi.CustomResourceState

	// The ID of the AWS account that you want to associate with Amazon Macie as a member account.
	MemberAccountId pulumi.StringOutput `pulumi:"memberAccountId"`
}

// NewMemberAccountAssociation registers a new resource with the given unique name, arguments, and options.
func NewMemberAccountAssociation(ctx *pulumi.Context,
	name string, args *MemberAccountAssociationArgs, opts ...pulumi.ResourceOption) (*MemberAccountAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MemberAccountId == nil {
		return nil, errors.New("invalid value for required argument 'MemberAccountId'")
	}
	var resource MemberAccountAssociation
	err := ctx.RegisterResource("aws:macie/memberAccountAssociation:MemberAccountAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMemberAccountAssociation gets an existing MemberAccountAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMemberAccountAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MemberAccountAssociationState, opts ...pulumi.ResourceOption) (*MemberAccountAssociation, error) {
	var resource MemberAccountAssociation
	err := ctx.ReadResource("aws:macie/memberAccountAssociation:MemberAccountAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MemberAccountAssociation resources.
type memberAccountAssociationState struct {
	// The ID of the AWS account that you want to associate with Amazon Macie as a member account.
	MemberAccountId *string `pulumi:"memberAccountId"`
}

type MemberAccountAssociationState struct {
	// The ID of the AWS account that you want to associate with Amazon Macie as a member account.
	MemberAccountId pulumi.StringPtrInput
}

func (MemberAccountAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*memberAccountAssociationState)(nil)).Elem()
}

type memberAccountAssociationArgs struct {
	// The ID of the AWS account that you want to associate with Amazon Macie as a member account.
	MemberAccountId string `pulumi:"memberAccountId"`
}

// The set of arguments for constructing a MemberAccountAssociation resource.
type MemberAccountAssociationArgs struct {
	// The ID of the AWS account that you want to associate with Amazon Macie as a member account.
	MemberAccountId pulumi.StringInput
}

func (MemberAccountAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*memberAccountAssociationArgs)(nil)).Elem()
}

type MemberAccountAssociationInput interface {
	pulumi.Input

	ToMemberAccountAssociationOutput() MemberAccountAssociationOutput
	ToMemberAccountAssociationOutputWithContext(ctx context.Context) MemberAccountAssociationOutput
}

func (*MemberAccountAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((*MemberAccountAssociation)(nil))
}

func (i *MemberAccountAssociation) ToMemberAccountAssociationOutput() MemberAccountAssociationOutput {
	return i.ToMemberAccountAssociationOutputWithContext(context.Background())
}

func (i *MemberAccountAssociation) ToMemberAccountAssociationOutputWithContext(ctx context.Context) MemberAccountAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemberAccountAssociationOutput)
}

func (i *MemberAccountAssociation) ToMemberAccountAssociationPtrOutput() MemberAccountAssociationPtrOutput {
	return i.ToMemberAccountAssociationPtrOutputWithContext(context.Background())
}

func (i *MemberAccountAssociation) ToMemberAccountAssociationPtrOutputWithContext(ctx context.Context) MemberAccountAssociationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemberAccountAssociationPtrOutput)
}

type MemberAccountAssociationPtrInput interface {
	pulumi.Input

	ToMemberAccountAssociationPtrOutput() MemberAccountAssociationPtrOutput
	ToMemberAccountAssociationPtrOutputWithContext(ctx context.Context) MemberAccountAssociationPtrOutput
}

type memberAccountAssociationPtrType MemberAccountAssociationArgs

func (*memberAccountAssociationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MemberAccountAssociation)(nil))
}

func (i *memberAccountAssociationPtrType) ToMemberAccountAssociationPtrOutput() MemberAccountAssociationPtrOutput {
	return i.ToMemberAccountAssociationPtrOutputWithContext(context.Background())
}

func (i *memberAccountAssociationPtrType) ToMemberAccountAssociationPtrOutputWithContext(ctx context.Context) MemberAccountAssociationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemberAccountAssociationPtrOutput)
}

// MemberAccountAssociationArrayInput is an input type that accepts MemberAccountAssociationArray and MemberAccountAssociationArrayOutput values.
// You can construct a concrete instance of `MemberAccountAssociationArrayInput` via:
//
//          MemberAccountAssociationArray{ MemberAccountAssociationArgs{...} }
type MemberAccountAssociationArrayInput interface {
	pulumi.Input

	ToMemberAccountAssociationArrayOutput() MemberAccountAssociationArrayOutput
	ToMemberAccountAssociationArrayOutputWithContext(context.Context) MemberAccountAssociationArrayOutput
}

type MemberAccountAssociationArray []MemberAccountAssociationInput

func (MemberAccountAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MemberAccountAssociation)(nil)).Elem()
}

func (i MemberAccountAssociationArray) ToMemberAccountAssociationArrayOutput() MemberAccountAssociationArrayOutput {
	return i.ToMemberAccountAssociationArrayOutputWithContext(context.Background())
}

func (i MemberAccountAssociationArray) ToMemberAccountAssociationArrayOutputWithContext(ctx context.Context) MemberAccountAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemberAccountAssociationArrayOutput)
}

// MemberAccountAssociationMapInput is an input type that accepts MemberAccountAssociationMap and MemberAccountAssociationMapOutput values.
// You can construct a concrete instance of `MemberAccountAssociationMapInput` via:
//
//          MemberAccountAssociationMap{ "key": MemberAccountAssociationArgs{...} }
type MemberAccountAssociationMapInput interface {
	pulumi.Input

	ToMemberAccountAssociationMapOutput() MemberAccountAssociationMapOutput
	ToMemberAccountAssociationMapOutputWithContext(context.Context) MemberAccountAssociationMapOutput
}

type MemberAccountAssociationMap map[string]MemberAccountAssociationInput

func (MemberAccountAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MemberAccountAssociation)(nil)).Elem()
}

func (i MemberAccountAssociationMap) ToMemberAccountAssociationMapOutput() MemberAccountAssociationMapOutput {
	return i.ToMemberAccountAssociationMapOutputWithContext(context.Background())
}

func (i MemberAccountAssociationMap) ToMemberAccountAssociationMapOutputWithContext(ctx context.Context) MemberAccountAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemberAccountAssociationMapOutput)
}

type MemberAccountAssociationOutput struct {
	*pulumi.OutputState
}

func (MemberAccountAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MemberAccountAssociation)(nil))
}

func (o MemberAccountAssociationOutput) ToMemberAccountAssociationOutput() MemberAccountAssociationOutput {
	return o
}

func (o MemberAccountAssociationOutput) ToMemberAccountAssociationOutputWithContext(ctx context.Context) MemberAccountAssociationOutput {
	return o
}

func (o MemberAccountAssociationOutput) ToMemberAccountAssociationPtrOutput() MemberAccountAssociationPtrOutput {
	return o.ToMemberAccountAssociationPtrOutputWithContext(context.Background())
}

func (o MemberAccountAssociationOutput) ToMemberAccountAssociationPtrOutputWithContext(ctx context.Context) MemberAccountAssociationPtrOutput {
	return o.ApplyT(func(v MemberAccountAssociation) *MemberAccountAssociation {
		return &v
	}).(MemberAccountAssociationPtrOutput)
}

type MemberAccountAssociationPtrOutput struct {
	*pulumi.OutputState
}

func (MemberAccountAssociationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MemberAccountAssociation)(nil))
}

func (o MemberAccountAssociationPtrOutput) ToMemberAccountAssociationPtrOutput() MemberAccountAssociationPtrOutput {
	return o
}

func (o MemberAccountAssociationPtrOutput) ToMemberAccountAssociationPtrOutputWithContext(ctx context.Context) MemberAccountAssociationPtrOutput {
	return o
}

type MemberAccountAssociationArrayOutput struct{ *pulumi.OutputState }

func (MemberAccountAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MemberAccountAssociation)(nil))
}

func (o MemberAccountAssociationArrayOutput) ToMemberAccountAssociationArrayOutput() MemberAccountAssociationArrayOutput {
	return o
}

func (o MemberAccountAssociationArrayOutput) ToMemberAccountAssociationArrayOutputWithContext(ctx context.Context) MemberAccountAssociationArrayOutput {
	return o
}

func (o MemberAccountAssociationArrayOutput) Index(i pulumi.IntInput) MemberAccountAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MemberAccountAssociation {
		return vs[0].([]MemberAccountAssociation)[vs[1].(int)]
	}).(MemberAccountAssociationOutput)
}

type MemberAccountAssociationMapOutput struct{ *pulumi.OutputState }

func (MemberAccountAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]MemberAccountAssociation)(nil))
}

func (o MemberAccountAssociationMapOutput) ToMemberAccountAssociationMapOutput() MemberAccountAssociationMapOutput {
	return o
}

func (o MemberAccountAssociationMapOutput) ToMemberAccountAssociationMapOutputWithContext(ctx context.Context) MemberAccountAssociationMapOutput {
	return o
}

func (o MemberAccountAssociationMapOutput) MapIndex(k pulumi.StringInput) MemberAccountAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) MemberAccountAssociation {
		return vs[0].(map[string]MemberAccountAssociation)[vs[1].(string)]
	}).(MemberAccountAssociationOutput)
}

func init() {
	pulumi.RegisterOutputType(MemberAccountAssociationOutput{})
	pulumi.RegisterOutputType(MemberAccountAssociationPtrOutput{})
	pulumi.RegisterOutputType(MemberAccountAssociationArrayOutput{})
	pulumi.RegisterOutputType(MemberAccountAssociationMapOutput{})
}
