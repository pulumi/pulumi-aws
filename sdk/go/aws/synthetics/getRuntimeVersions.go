// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package synthetics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for managing an AWS CloudWatch Synthetics Runtime Versions.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/synthetics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := synthetics.GetRuntimeVersions(ctx, &synthetics.GetRuntimeVersionsArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRuntimeVersions(ctx *pulumi.Context, args *GetRuntimeVersionsArgs, opts ...pulumi.InvokeOption) (*GetRuntimeVersionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRuntimeVersionsResult
	err := ctx.Invoke("aws:synthetics/getRuntimeVersions:getRuntimeVersions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRuntimeVersions.
type GetRuntimeVersionsArgs struct {
	// List of runtime versions. See `runtimeVersions` attribute reference.
	RuntimeVersions []GetRuntimeVersionsRuntimeVersion `pulumi:"runtimeVersions"`
}

// A collection of values returned by getRuntimeVersions.
type GetRuntimeVersionsResult struct {
	// Name of the AWS region from which runtime versions are fetched.
	Id string `pulumi:"id"`
	// List of runtime versions. See `runtimeVersions` attribute reference.
	RuntimeVersions []GetRuntimeVersionsRuntimeVersion `pulumi:"runtimeVersions"`
}

func GetRuntimeVersionsOutput(ctx *pulumi.Context, args GetRuntimeVersionsOutputArgs, opts ...pulumi.InvokeOption) GetRuntimeVersionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRuntimeVersionsResultOutput, error) {
			args := v.(GetRuntimeVersionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws:synthetics/getRuntimeVersions:getRuntimeVersions", args, GetRuntimeVersionsResultOutput{}, options).(GetRuntimeVersionsResultOutput), nil
		}).(GetRuntimeVersionsResultOutput)
}

// A collection of arguments for invoking getRuntimeVersions.
type GetRuntimeVersionsOutputArgs struct {
	// List of runtime versions. See `runtimeVersions` attribute reference.
	RuntimeVersions GetRuntimeVersionsRuntimeVersionArrayInput `pulumi:"runtimeVersions"`
}

func (GetRuntimeVersionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuntimeVersionsArgs)(nil)).Elem()
}

// A collection of values returned by getRuntimeVersions.
type GetRuntimeVersionsResultOutput struct{ *pulumi.OutputState }

func (GetRuntimeVersionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuntimeVersionsResult)(nil)).Elem()
}

func (o GetRuntimeVersionsResultOutput) ToGetRuntimeVersionsResultOutput() GetRuntimeVersionsResultOutput {
	return o
}

func (o GetRuntimeVersionsResultOutput) ToGetRuntimeVersionsResultOutputWithContext(ctx context.Context) GetRuntimeVersionsResultOutput {
	return o
}

// Name of the AWS region from which runtime versions are fetched.
func (o GetRuntimeVersionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuntimeVersionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of runtime versions. See `runtimeVersions` attribute reference.
func (o GetRuntimeVersionsResultOutput) RuntimeVersions() GetRuntimeVersionsRuntimeVersionArrayOutput {
	return o.ApplyT(func(v GetRuntimeVersionsResult) []GetRuntimeVersionsRuntimeVersion { return v.RuntimeVersions }).(GetRuntimeVersionsRuntimeVersionArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRuntimeVersionsResultOutput{})
}
