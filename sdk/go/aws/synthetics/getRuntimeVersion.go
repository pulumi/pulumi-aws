// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package synthetics

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for managing an AWS CloudWatch Synthetics Runtime Version.
//
// ## Example Usage
//
// ### Latest Runtime Version
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/synthetics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := synthetics.GetRuntimeVersion(ctx, &synthetics.GetRuntimeVersionArgs{
//				Prefix: "syn-nodejs-puppeteer",
//				Latest: pulumi.BoolRef(true),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Specific Runtime Version
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/synthetics"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := synthetics.GetRuntimeVersion(ctx, &synthetics.GetRuntimeVersionArgs{
//				Prefix:  "syn-nodejs-puppeteer",
//				Version: pulumi.StringRef("9.0"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetRuntimeVersion(ctx *pulumi.Context, args *GetRuntimeVersionArgs, opts ...pulumi.InvokeOption) (*GetRuntimeVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRuntimeVersionResult
	err := ctx.Invoke("aws:synthetics/getRuntimeVersion:getRuntimeVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRuntimeVersion.
type GetRuntimeVersionArgs struct {
	// Whether the latest version of the runtime should be fetched. Conflicts with `version`. Valid values: `true`.
	Latest *bool `pulumi:"latest"`
	// Name prefix of the runtime version (for example, `syn-nodejs-puppeteer`).
	//
	// The following arguments are optional:
	Prefix string `pulumi:"prefix"`
	// Version of the runtime to be fetched (for example, `9.0`). Conflicts with `latest`.
	Version *string `pulumi:"version"`
}

// A collection of values returned by getRuntimeVersion.
type GetRuntimeVersionResult struct {
	// Date of deprecation if the runtme version is deprecated.
	DeprecationDate string `pulumi:"deprecationDate"`
	// Description of the runtime version, created by Amazon.
	Description string `pulumi:"description"`
	// Name of the runtime version. For a list of valid runtime versions, see [Canary Runtime Versions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html).
	Id     string `pulumi:"id"`
	Latest *bool  `pulumi:"latest"`
	Prefix string `pulumi:"prefix"`
	// Date that the runtime version was released.
	ReleaseDate string  `pulumi:"releaseDate"`
	Version     *string `pulumi:"version"`
	// Name of the runtime version. For a list of valid runtime versions, see [Canary Runtime Versions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html).
	VersionName string `pulumi:"versionName"`
}

func GetRuntimeVersionOutput(ctx *pulumi.Context, args GetRuntimeVersionOutputArgs, opts ...pulumi.InvokeOption) GetRuntimeVersionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRuntimeVersionResultOutput, error) {
			args := v.(GetRuntimeVersionArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetRuntimeVersionResult
			secret, err := ctx.InvokePackageRaw("aws:synthetics/getRuntimeVersion:getRuntimeVersion", args, &rv, "", opts...)
			if err != nil {
				return GetRuntimeVersionResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetRuntimeVersionResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetRuntimeVersionResultOutput), nil
			}
			return output, nil
		}).(GetRuntimeVersionResultOutput)
}

// A collection of arguments for invoking getRuntimeVersion.
type GetRuntimeVersionOutputArgs struct {
	// Whether the latest version of the runtime should be fetched. Conflicts with `version`. Valid values: `true`.
	Latest pulumi.BoolPtrInput `pulumi:"latest"`
	// Name prefix of the runtime version (for example, `syn-nodejs-puppeteer`).
	//
	// The following arguments are optional:
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// Version of the runtime to be fetched (for example, `9.0`). Conflicts with `latest`.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GetRuntimeVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuntimeVersionArgs)(nil)).Elem()
}

// A collection of values returned by getRuntimeVersion.
type GetRuntimeVersionResultOutput struct{ *pulumi.OutputState }

func (GetRuntimeVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuntimeVersionResult)(nil)).Elem()
}

func (o GetRuntimeVersionResultOutput) ToGetRuntimeVersionResultOutput() GetRuntimeVersionResultOutput {
	return o
}

func (o GetRuntimeVersionResultOutput) ToGetRuntimeVersionResultOutputWithContext(ctx context.Context) GetRuntimeVersionResultOutput {
	return o
}

// Date of deprecation if the runtme version is deprecated.
func (o GetRuntimeVersionResultOutput) DeprecationDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuntimeVersionResult) string { return v.DeprecationDate }).(pulumi.StringOutput)
}

// Description of the runtime version, created by Amazon.
func (o GetRuntimeVersionResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuntimeVersionResult) string { return v.Description }).(pulumi.StringOutput)
}

// Name of the runtime version. For a list of valid runtime versions, see [Canary Runtime Versions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html).
func (o GetRuntimeVersionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuntimeVersionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRuntimeVersionResultOutput) Latest() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRuntimeVersionResult) *bool { return v.Latest }).(pulumi.BoolPtrOutput)
}

func (o GetRuntimeVersionResultOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuntimeVersionResult) string { return v.Prefix }).(pulumi.StringOutput)
}

// Date that the runtime version was released.
func (o GetRuntimeVersionResultOutput) ReleaseDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuntimeVersionResult) string { return v.ReleaseDate }).(pulumi.StringOutput)
}

func (o GetRuntimeVersionResultOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRuntimeVersionResult) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// Name of the runtime version. For a list of valid runtime versions, see [Canary Runtime Versions](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/CloudWatch_Synthetics_Canaries_Library.html).
func (o GetRuntimeVersionResultOutput) VersionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuntimeVersionResult) string { return v.VersionName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRuntimeVersionResultOutput{})
}
