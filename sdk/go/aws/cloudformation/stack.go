// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudformation

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a CloudFormation Stack resource.
type Stack struct {
	s *pulumi.ResourceState
}

// NewStack registers a new resource with the given unique name, arguments, and options.
func NewStack(ctx *pulumi.Context,
	name string, args *StackArgs, opts ...pulumi.ResourceOpt) (*Stack, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["capabilities"] = nil
		inputs["disableRollback"] = nil
		inputs["iamRoleArn"] = nil
		inputs["name"] = nil
		inputs["notificationArns"] = nil
		inputs["onFailure"] = nil
		inputs["parameters"] = nil
		inputs["policyBody"] = nil
		inputs["policyUrl"] = nil
		inputs["tags"] = nil
		inputs["templateBody"] = nil
		inputs["templateUrl"] = nil
		inputs["timeoutInMinutes"] = nil
	} else {
		inputs["capabilities"] = args.Capabilities
		inputs["disableRollback"] = args.DisableRollback
		inputs["iamRoleArn"] = args.IamRoleArn
		inputs["name"] = args.Name
		inputs["notificationArns"] = args.NotificationArns
		inputs["onFailure"] = args.OnFailure
		inputs["parameters"] = args.Parameters
		inputs["policyBody"] = args.PolicyBody
		inputs["policyUrl"] = args.PolicyUrl
		inputs["tags"] = args.Tags
		inputs["templateBody"] = args.TemplateBody
		inputs["templateUrl"] = args.TemplateUrl
		inputs["timeoutInMinutes"] = args.TimeoutInMinutes
	}
	inputs["outputs"] = nil
	s, err := ctx.RegisterResource("aws:cloudformation/stack:Stack", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Stack{s: s}, nil
}

// GetStack gets an existing Stack resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStack(ctx *pulumi.Context,
	name string, id pulumi.ID, state *StackState, opts ...pulumi.ResourceOpt) (*Stack, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["capabilities"] = state.Capabilities
		inputs["disableRollback"] = state.DisableRollback
		inputs["iamRoleArn"] = state.IamRoleArn
		inputs["name"] = state.Name
		inputs["notificationArns"] = state.NotificationArns
		inputs["onFailure"] = state.OnFailure
		inputs["outputs"] = state.Outputs
		inputs["parameters"] = state.Parameters
		inputs["policyBody"] = state.PolicyBody
		inputs["policyUrl"] = state.PolicyUrl
		inputs["tags"] = state.Tags
		inputs["templateBody"] = state.TemplateBody
		inputs["templateUrl"] = state.TemplateUrl
		inputs["timeoutInMinutes"] = state.TimeoutInMinutes
	}
	s, err := ctx.ReadResource("aws:cloudformation/stack:Stack", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Stack{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Stack) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Stack) ID() *pulumi.IDOutput {
	return r.s.ID
}

// A list of capabilities.
// Valid values: `CAPABILITY_IAM` or `CAPABILITY_NAMED_IAM`
func (r *Stack) Capabilities() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["capabilities"])
}

// Set to true to disable rollback of the stack if stack creation failed.
// Conflicts with `on_failure`.
func (r *Stack) DisableRollback() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["disableRollback"])
}

// The ARN of an IAM role that AWS CloudFormation assumes to create the stack. If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.
func (r *Stack) IamRoleArn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["iamRoleArn"])
}

// Stack name.
func (r *Stack) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// A list of SNS topic ARNs to publish stack related events.
func (r *Stack) NotificationArns() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["notificationArns"])
}

// Action to be taken if stack creation fails. This must be
// one of: `DO_NOTHING`, `ROLLBACK`, or `DELETE`. Conflicts with `disable_rollback`.
func (r *Stack) OnFailure() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["onFailure"])
}

// A map of outputs from the stack.
func (r *Stack) Outputs() *pulumi.MapOutput {
	return (*pulumi.MapOutput)(r.s.State["outputs"])
}

// A map of Parameter structures that specify input parameters for the stack.
func (r *Stack) Parameters() *pulumi.MapOutput {
	return (*pulumi.MapOutput)(r.s.State["parameters"])
}

// Structure containing the stack policy body.
// Conflicts w/ `policy_url`.
func (r *Stack) PolicyBody() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["policyBody"])
}

// Location of a file containing the stack policy.
// Conflicts w/ `policy_body`.
func (r *Stack) PolicyUrl() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["policyUrl"])
}

// A list of tags to associate with this stack.
func (r *Stack) Tags() *pulumi.MapOutput {
	return (*pulumi.MapOutput)(r.s.State["tags"])
}

// Structure containing the template body (max size: 51,200 bytes).
func (r *Stack) TemplateBody() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["templateBody"])
}

// Location of a file containing the template body (max size: 460,800 bytes).
func (r *Stack) TemplateUrl() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["templateUrl"])
}

// The amount of time that can pass before the stack status becomes `CREATE_FAILED`.
func (r *Stack) TimeoutInMinutes() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["timeoutInMinutes"])
}

// Input properties used for looking up and filtering Stack resources.
type StackState struct {
	// A list of capabilities.
	// Valid values: `CAPABILITY_IAM` or `CAPABILITY_NAMED_IAM`
	Capabilities interface{}
	// Set to true to disable rollback of the stack if stack creation failed.
	// Conflicts with `on_failure`.
	DisableRollback interface{}
	// The ARN of an IAM role that AWS CloudFormation assumes to create the stack. If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.
	IamRoleArn interface{}
	// Stack name.
	Name interface{}
	// A list of SNS topic ARNs to publish stack related events.
	NotificationArns interface{}
	// Action to be taken if stack creation fails. This must be
	// one of: `DO_NOTHING`, `ROLLBACK`, or `DELETE`. Conflicts with `disable_rollback`.
	OnFailure interface{}
	// A map of outputs from the stack.
	Outputs interface{}
	// A map of Parameter structures that specify input parameters for the stack.
	Parameters interface{}
	// Structure containing the stack policy body.
	// Conflicts w/ `policy_url`.
	PolicyBody interface{}
	// Location of a file containing the stack policy.
	// Conflicts w/ `policy_body`.
	PolicyUrl interface{}
	// A list of tags to associate with this stack.
	Tags interface{}
	// Structure containing the template body (max size: 51,200 bytes).
	TemplateBody interface{}
	// Location of a file containing the template body (max size: 460,800 bytes).
	TemplateUrl interface{}
	// The amount of time that can pass before the stack status becomes `CREATE_FAILED`.
	TimeoutInMinutes interface{}
}

// The set of arguments for constructing a Stack resource.
type StackArgs struct {
	// A list of capabilities.
	// Valid values: `CAPABILITY_IAM` or `CAPABILITY_NAMED_IAM`
	Capabilities interface{}
	// Set to true to disable rollback of the stack if stack creation failed.
	// Conflicts with `on_failure`.
	DisableRollback interface{}
	// The ARN of an IAM role that AWS CloudFormation assumes to create the stack. If you don't specify a value, AWS CloudFormation uses the role that was previously associated with the stack. If no role is available, AWS CloudFormation uses a temporary session that is generated from your user credentials.
	IamRoleArn interface{}
	// Stack name.
	Name interface{}
	// A list of SNS topic ARNs to publish stack related events.
	NotificationArns interface{}
	// Action to be taken if stack creation fails. This must be
	// one of: `DO_NOTHING`, `ROLLBACK`, or `DELETE`. Conflicts with `disable_rollback`.
	OnFailure interface{}
	// A map of Parameter structures that specify input parameters for the stack.
	Parameters interface{}
	// Structure containing the stack policy body.
	// Conflicts w/ `policy_url`.
	PolicyBody interface{}
	// Location of a file containing the stack policy.
	// Conflicts w/ `policy_body`.
	PolicyUrl interface{}
	// A list of tags to associate with this stack.
	Tags interface{}
	// Structure containing the template body (max size: 51,200 bytes).
	TemplateBody interface{}
	// Location of a file containing the template body (max size: 460,800 bytes).
	TemplateUrl interface{}
	// The amount of time that can pass before the stack status becomes `CREATE_FAILED`.
	TimeoutInMinutes interface{}
}
