// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudformation

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type StackSetInstance struct {
	pulumi.CustomResourceState

	AccountId            pulumi.StringOutput                           `pulumi:"accountId"`
	CallAs               pulumi.StringPtrOutput                        `pulumi:"callAs"`
	DeploymentTargets    StackSetInstanceDeploymentTargetsPtrOutput    `pulumi:"deploymentTargets"`
	OperationPreferences StackSetInstanceOperationPreferencesPtrOutput `pulumi:"operationPreferences"`
	OrganizationalUnitId pulumi.StringOutput                           `pulumi:"organizationalUnitId"`
	ParameterOverrides   pulumi.StringMapOutput                        `pulumi:"parameterOverrides"`
	Region               pulumi.StringOutput                           `pulumi:"region"`
	RetainStack          pulumi.BoolPtrOutput                          `pulumi:"retainStack"`
	StackId              pulumi.StringOutput                           `pulumi:"stackId"`
	StackSetName         pulumi.StringOutput                           `pulumi:"stackSetName"`
}

// NewStackSetInstance registers a new resource with the given unique name, arguments, and options.
func NewStackSetInstance(ctx *pulumi.Context,
	name string, args *StackSetInstanceArgs, opts ...pulumi.ResourceOption) (*StackSetInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.StackSetName == nil {
		return nil, errors.New("invalid value for required argument 'StackSetName'")
	}
	var resource StackSetInstance
	err := ctx.RegisterResource("aws:cloudformation/stackSetInstance:StackSetInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStackSetInstance gets an existing StackSetInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStackSetInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StackSetInstanceState, opts ...pulumi.ResourceOption) (*StackSetInstance, error) {
	var resource StackSetInstance
	err := ctx.ReadResource("aws:cloudformation/stackSetInstance:StackSetInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StackSetInstance resources.
type stackSetInstanceState struct {
	AccountId            *string                               `pulumi:"accountId"`
	CallAs               *string                               `pulumi:"callAs"`
	DeploymentTargets    *StackSetInstanceDeploymentTargets    `pulumi:"deploymentTargets"`
	OperationPreferences *StackSetInstanceOperationPreferences `pulumi:"operationPreferences"`
	OrganizationalUnitId *string                               `pulumi:"organizationalUnitId"`
	ParameterOverrides   map[string]string                     `pulumi:"parameterOverrides"`
	Region               *string                               `pulumi:"region"`
	RetainStack          *bool                                 `pulumi:"retainStack"`
	StackId              *string                               `pulumi:"stackId"`
	StackSetName         *string                               `pulumi:"stackSetName"`
}

type StackSetInstanceState struct {
	AccountId            pulumi.StringPtrInput
	CallAs               pulumi.StringPtrInput
	DeploymentTargets    StackSetInstanceDeploymentTargetsPtrInput
	OperationPreferences StackSetInstanceOperationPreferencesPtrInput
	OrganizationalUnitId pulumi.StringPtrInput
	ParameterOverrides   pulumi.StringMapInput
	Region               pulumi.StringPtrInput
	RetainStack          pulumi.BoolPtrInput
	StackId              pulumi.StringPtrInput
	StackSetName         pulumi.StringPtrInput
}

func (StackSetInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*stackSetInstanceState)(nil)).Elem()
}

type stackSetInstanceArgs struct {
	AccountId            *string                               `pulumi:"accountId"`
	CallAs               *string                               `pulumi:"callAs"`
	DeploymentTargets    *StackSetInstanceDeploymentTargets    `pulumi:"deploymentTargets"`
	OperationPreferences *StackSetInstanceOperationPreferences `pulumi:"operationPreferences"`
	ParameterOverrides   map[string]string                     `pulumi:"parameterOverrides"`
	Region               *string                               `pulumi:"region"`
	RetainStack          *bool                                 `pulumi:"retainStack"`
	StackSetName         string                                `pulumi:"stackSetName"`
}

// The set of arguments for constructing a StackSetInstance resource.
type StackSetInstanceArgs struct {
	AccountId            pulumi.StringPtrInput
	CallAs               pulumi.StringPtrInput
	DeploymentTargets    StackSetInstanceDeploymentTargetsPtrInput
	OperationPreferences StackSetInstanceOperationPreferencesPtrInput
	ParameterOverrides   pulumi.StringMapInput
	Region               pulumi.StringPtrInput
	RetainStack          pulumi.BoolPtrInput
	StackSetName         pulumi.StringInput
}

func (StackSetInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*stackSetInstanceArgs)(nil)).Elem()
}

type StackSetInstanceInput interface {
	pulumi.Input

	ToStackSetInstanceOutput() StackSetInstanceOutput
	ToStackSetInstanceOutputWithContext(ctx context.Context) StackSetInstanceOutput
}

func (*StackSetInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**StackSetInstance)(nil)).Elem()
}

func (i *StackSetInstance) ToStackSetInstanceOutput() StackSetInstanceOutput {
	return i.ToStackSetInstanceOutputWithContext(context.Background())
}

func (i *StackSetInstance) ToStackSetInstanceOutputWithContext(ctx context.Context) StackSetInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetInstanceOutput)
}

// StackSetInstanceArrayInput is an input type that accepts StackSetInstanceArray and StackSetInstanceArrayOutput values.
// You can construct a concrete instance of `StackSetInstanceArrayInput` via:
//
//	StackSetInstanceArray{ StackSetInstanceArgs{...} }
type StackSetInstanceArrayInput interface {
	pulumi.Input

	ToStackSetInstanceArrayOutput() StackSetInstanceArrayOutput
	ToStackSetInstanceArrayOutputWithContext(context.Context) StackSetInstanceArrayOutput
}

type StackSetInstanceArray []StackSetInstanceInput

func (StackSetInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StackSetInstance)(nil)).Elem()
}

func (i StackSetInstanceArray) ToStackSetInstanceArrayOutput() StackSetInstanceArrayOutput {
	return i.ToStackSetInstanceArrayOutputWithContext(context.Background())
}

func (i StackSetInstanceArray) ToStackSetInstanceArrayOutputWithContext(ctx context.Context) StackSetInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetInstanceArrayOutput)
}

// StackSetInstanceMapInput is an input type that accepts StackSetInstanceMap and StackSetInstanceMapOutput values.
// You can construct a concrete instance of `StackSetInstanceMapInput` via:
//
//	StackSetInstanceMap{ "key": StackSetInstanceArgs{...} }
type StackSetInstanceMapInput interface {
	pulumi.Input

	ToStackSetInstanceMapOutput() StackSetInstanceMapOutput
	ToStackSetInstanceMapOutputWithContext(context.Context) StackSetInstanceMapOutput
}

type StackSetInstanceMap map[string]StackSetInstanceInput

func (StackSetInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StackSetInstance)(nil)).Elem()
}

func (i StackSetInstanceMap) ToStackSetInstanceMapOutput() StackSetInstanceMapOutput {
	return i.ToStackSetInstanceMapOutputWithContext(context.Background())
}

func (i StackSetInstanceMap) ToStackSetInstanceMapOutputWithContext(ctx context.Context) StackSetInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetInstanceMapOutput)
}

type StackSetInstanceOutput struct{ *pulumi.OutputState }

func (StackSetInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StackSetInstance)(nil)).Elem()
}

func (o StackSetInstanceOutput) ToStackSetInstanceOutput() StackSetInstanceOutput {
	return o
}

func (o StackSetInstanceOutput) ToStackSetInstanceOutputWithContext(ctx context.Context) StackSetInstanceOutput {
	return o
}

func (o StackSetInstanceOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *StackSetInstance) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

func (o StackSetInstanceOutput) CallAs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StackSetInstance) pulumi.StringPtrOutput { return v.CallAs }).(pulumi.StringPtrOutput)
}

func (o StackSetInstanceOutput) DeploymentTargets() StackSetInstanceDeploymentTargetsPtrOutput {
	return o.ApplyT(func(v *StackSetInstance) StackSetInstanceDeploymentTargetsPtrOutput { return v.DeploymentTargets }).(StackSetInstanceDeploymentTargetsPtrOutput)
}

func (o StackSetInstanceOutput) OperationPreferences() StackSetInstanceOperationPreferencesPtrOutput {
	return o.ApplyT(func(v *StackSetInstance) StackSetInstanceOperationPreferencesPtrOutput { return v.OperationPreferences }).(StackSetInstanceOperationPreferencesPtrOutput)
}

func (o StackSetInstanceOutput) OrganizationalUnitId() pulumi.StringOutput {
	return o.ApplyT(func(v *StackSetInstance) pulumi.StringOutput { return v.OrganizationalUnitId }).(pulumi.StringOutput)
}

func (o StackSetInstanceOutput) ParameterOverrides() pulumi.StringMapOutput {
	return o.ApplyT(func(v *StackSetInstance) pulumi.StringMapOutput { return v.ParameterOverrides }).(pulumi.StringMapOutput)
}

func (o StackSetInstanceOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *StackSetInstance) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

func (o StackSetInstanceOutput) RetainStack() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StackSetInstance) pulumi.BoolPtrOutput { return v.RetainStack }).(pulumi.BoolPtrOutput)
}

func (o StackSetInstanceOutput) StackId() pulumi.StringOutput {
	return o.ApplyT(func(v *StackSetInstance) pulumi.StringOutput { return v.StackId }).(pulumi.StringOutput)
}

func (o StackSetInstanceOutput) StackSetName() pulumi.StringOutput {
	return o.ApplyT(func(v *StackSetInstance) pulumi.StringOutput { return v.StackSetName }).(pulumi.StringOutput)
}

type StackSetInstanceArrayOutput struct{ *pulumi.OutputState }

func (StackSetInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*StackSetInstance)(nil)).Elem()
}

func (o StackSetInstanceArrayOutput) ToStackSetInstanceArrayOutput() StackSetInstanceArrayOutput {
	return o
}

func (o StackSetInstanceArrayOutput) ToStackSetInstanceArrayOutputWithContext(ctx context.Context) StackSetInstanceArrayOutput {
	return o
}

func (o StackSetInstanceArrayOutput) Index(i pulumi.IntInput) StackSetInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *StackSetInstance {
		return vs[0].([]*StackSetInstance)[vs[1].(int)]
	}).(StackSetInstanceOutput)
}

type StackSetInstanceMapOutput struct{ *pulumi.OutputState }

func (StackSetInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*StackSetInstance)(nil)).Elem()
}

func (o StackSetInstanceMapOutput) ToStackSetInstanceMapOutput() StackSetInstanceMapOutput {
	return o
}

func (o StackSetInstanceMapOutput) ToStackSetInstanceMapOutputWithContext(ctx context.Context) StackSetInstanceMapOutput {
	return o
}

func (o StackSetInstanceMapOutput) MapIndex(k pulumi.StringInput) StackSetInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *StackSetInstance {
		return vs[0].(map[string]*StackSetInstance)[vs[1].(string)]
	}).(StackSetInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*StackSetInstanceInput)(nil)).Elem(), &StackSetInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackSetInstanceArrayInput)(nil)).Elem(), StackSetInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackSetInstanceMapInput)(nil)).Elem(), StackSetInstanceMap{})
	pulumi.RegisterOutputType(StackSetInstanceOutput{})
	pulumi.RegisterOutputType(StackSetInstanceArrayOutput{})
	pulumi.RegisterOutputType(StackSetInstanceMapOutput{})
}
