// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cloudformation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CloudFormationTypeLoggingConfig struct {
	// Name of the CloudWatch Log Group where CloudFormation sends error logging information when invoking the type's handlers.
	LogGroupName string `pulumi:"logGroupName"`
	// Amazon Resource Name (ARN) of the IAM Role CloudFormation assumes when sending error logging information to CloudWatch Logs.
	LogRoleArn string `pulumi:"logRoleArn"`
}

// CloudFormationTypeLoggingConfigInput is an input type that accepts CloudFormationTypeLoggingConfigArgs and CloudFormationTypeLoggingConfigOutput values.
// You can construct a concrete instance of `CloudFormationTypeLoggingConfigInput` via:
//
//	CloudFormationTypeLoggingConfigArgs{...}
type CloudFormationTypeLoggingConfigInput interface {
	pulumi.Input

	ToCloudFormationTypeLoggingConfigOutput() CloudFormationTypeLoggingConfigOutput
	ToCloudFormationTypeLoggingConfigOutputWithContext(context.Context) CloudFormationTypeLoggingConfigOutput
}

type CloudFormationTypeLoggingConfigArgs struct {
	// Name of the CloudWatch Log Group where CloudFormation sends error logging information when invoking the type's handlers.
	LogGroupName pulumi.StringInput `pulumi:"logGroupName"`
	// Amazon Resource Name (ARN) of the IAM Role CloudFormation assumes when sending error logging information to CloudWatch Logs.
	LogRoleArn pulumi.StringInput `pulumi:"logRoleArn"`
}

func (CloudFormationTypeLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudFormationTypeLoggingConfig)(nil)).Elem()
}

func (i CloudFormationTypeLoggingConfigArgs) ToCloudFormationTypeLoggingConfigOutput() CloudFormationTypeLoggingConfigOutput {
	return i.ToCloudFormationTypeLoggingConfigOutputWithContext(context.Background())
}

func (i CloudFormationTypeLoggingConfigArgs) ToCloudFormationTypeLoggingConfigOutputWithContext(ctx context.Context) CloudFormationTypeLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudFormationTypeLoggingConfigOutput)
}

func (i CloudFormationTypeLoggingConfigArgs) ToCloudFormationTypeLoggingConfigPtrOutput() CloudFormationTypeLoggingConfigPtrOutput {
	return i.ToCloudFormationTypeLoggingConfigPtrOutputWithContext(context.Background())
}

func (i CloudFormationTypeLoggingConfigArgs) ToCloudFormationTypeLoggingConfigPtrOutputWithContext(ctx context.Context) CloudFormationTypeLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudFormationTypeLoggingConfigOutput).ToCloudFormationTypeLoggingConfigPtrOutputWithContext(ctx)
}

// CloudFormationTypeLoggingConfigPtrInput is an input type that accepts CloudFormationTypeLoggingConfigArgs, CloudFormationTypeLoggingConfigPtr and CloudFormationTypeLoggingConfigPtrOutput values.
// You can construct a concrete instance of `CloudFormationTypeLoggingConfigPtrInput` via:
//
//	        CloudFormationTypeLoggingConfigArgs{...}
//
//	or:
//
//	        nil
type CloudFormationTypeLoggingConfigPtrInput interface {
	pulumi.Input

	ToCloudFormationTypeLoggingConfigPtrOutput() CloudFormationTypeLoggingConfigPtrOutput
	ToCloudFormationTypeLoggingConfigPtrOutputWithContext(context.Context) CloudFormationTypeLoggingConfigPtrOutput
}

type cloudFormationTypeLoggingConfigPtrType CloudFormationTypeLoggingConfigArgs

func CloudFormationTypeLoggingConfigPtr(v *CloudFormationTypeLoggingConfigArgs) CloudFormationTypeLoggingConfigPtrInput {
	return (*cloudFormationTypeLoggingConfigPtrType)(v)
}

func (*cloudFormationTypeLoggingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudFormationTypeLoggingConfig)(nil)).Elem()
}

func (i *cloudFormationTypeLoggingConfigPtrType) ToCloudFormationTypeLoggingConfigPtrOutput() CloudFormationTypeLoggingConfigPtrOutput {
	return i.ToCloudFormationTypeLoggingConfigPtrOutputWithContext(context.Background())
}

func (i *cloudFormationTypeLoggingConfigPtrType) ToCloudFormationTypeLoggingConfigPtrOutputWithContext(ctx context.Context) CloudFormationTypeLoggingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CloudFormationTypeLoggingConfigPtrOutput)
}

type CloudFormationTypeLoggingConfigOutput struct{ *pulumi.OutputState }

func (CloudFormationTypeLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CloudFormationTypeLoggingConfig)(nil)).Elem()
}

func (o CloudFormationTypeLoggingConfigOutput) ToCloudFormationTypeLoggingConfigOutput() CloudFormationTypeLoggingConfigOutput {
	return o
}

func (o CloudFormationTypeLoggingConfigOutput) ToCloudFormationTypeLoggingConfigOutputWithContext(ctx context.Context) CloudFormationTypeLoggingConfigOutput {
	return o
}

func (o CloudFormationTypeLoggingConfigOutput) ToCloudFormationTypeLoggingConfigPtrOutput() CloudFormationTypeLoggingConfigPtrOutput {
	return o.ToCloudFormationTypeLoggingConfigPtrOutputWithContext(context.Background())
}

func (o CloudFormationTypeLoggingConfigOutput) ToCloudFormationTypeLoggingConfigPtrOutputWithContext(ctx context.Context) CloudFormationTypeLoggingConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CloudFormationTypeLoggingConfig) *CloudFormationTypeLoggingConfig {
		return &v
	}).(CloudFormationTypeLoggingConfigPtrOutput)
}

// Name of the CloudWatch Log Group where CloudFormation sends error logging information when invoking the type's handlers.
func (o CloudFormationTypeLoggingConfigOutput) LogGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v CloudFormationTypeLoggingConfig) string { return v.LogGroupName }).(pulumi.StringOutput)
}

// Amazon Resource Name (ARN) of the IAM Role CloudFormation assumes when sending error logging information to CloudWatch Logs.
func (o CloudFormationTypeLoggingConfigOutput) LogRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v CloudFormationTypeLoggingConfig) string { return v.LogRoleArn }).(pulumi.StringOutput)
}

type CloudFormationTypeLoggingConfigPtrOutput struct{ *pulumi.OutputState }

func (CloudFormationTypeLoggingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CloudFormationTypeLoggingConfig)(nil)).Elem()
}

func (o CloudFormationTypeLoggingConfigPtrOutput) ToCloudFormationTypeLoggingConfigPtrOutput() CloudFormationTypeLoggingConfigPtrOutput {
	return o
}

func (o CloudFormationTypeLoggingConfigPtrOutput) ToCloudFormationTypeLoggingConfigPtrOutputWithContext(ctx context.Context) CloudFormationTypeLoggingConfigPtrOutput {
	return o
}

func (o CloudFormationTypeLoggingConfigPtrOutput) Elem() CloudFormationTypeLoggingConfigOutput {
	return o.ApplyT(func(v *CloudFormationTypeLoggingConfig) CloudFormationTypeLoggingConfig {
		if v != nil {
			return *v
		}
		var ret CloudFormationTypeLoggingConfig
		return ret
	}).(CloudFormationTypeLoggingConfigOutput)
}

// Name of the CloudWatch Log Group where CloudFormation sends error logging information when invoking the type's handlers.
func (o CloudFormationTypeLoggingConfigPtrOutput) LogGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudFormationTypeLoggingConfig) *string {
		if v == nil {
			return nil
		}
		return &v.LogGroupName
	}).(pulumi.StringPtrOutput)
}

// Amazon Resource Name (ARN) of the IAM Role CloudFormation assumes when sending error logging information to CloudWatch Logs.
func (o CloudFormationTypeLoggingConfigPtrOutput) LogRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CloudFormationTypeLoggingConfig) *string {
		if v == nil {
			return nil
		}
		return &v.LogRoleArn
	}).(pulumi.StringPtrOutput)
}

type StackSetAutoDeployment struct {
	// Whether or not auto-deployment is enabled.
	Enabled *bool `pulumi:"enabled"`
	// Whether or not to retain stacks when the account is removed.
	RetainStacksOnAccountRemoval *bool `pulumi:"retainStacksOnAccountRemoval"`
}

// StackSetAutoDeploymentInput is an input type that accepts StackSetAutoDeploymentArgs and StackSetAutoDeploymentOutput values.
// You can construct a concrete instance of `StackSetAutoDeploymentInput` via:
//
//	StackSetAutoDeploymentArgs{...}
type StackSetAutoDeploymentInput interface {
	pulumi.Input

	ToStackSetAutoDeploymentOutput() StackSetAutoDeploymentOutput
	ToStackSetAutoDeploymentOutputWithContext(context.Context) StackSetAutoDeploymentOutput
}

type StackSetAutoDeploymentArgs struct {
	// Whether or not auto-deployment is enabled.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Whether or not to retain stacks when the account is removed.
	RetainStacksOnAccountRemoval pulumi.BoolPtrInput `pulumi:"retainStacksOnAccountRemoval"`
}

func (StackSetAutoDeploymentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackSetAutoDeployment)(nil)).Elem()
}

func (i StackSetAutoDeploymentArgs) ToStackSetAutoDeploymentOutput() StackSetAutoDeploymentOutput {
	return i.ToStackSetAutoDeploymentOutputWithContext(context.Background())
}

func (i StackSetAutoDeploymentArgs) ToStackSetAutoDeploymentOutputWithContext(ctx context.Context) StackSetAutoDeploymentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetAutoDeploymentOutput)
}

func (i StackSetAutoDeploymentArgs) ToStackSetAutoDeploymentPtrOutput() StackSetAutoDeploymentPtrOutput {
	return i.ToStackSetAutoDeploymentPtrOutputWithContext(context.Background())
}

func (i StackSetAutoDeploymentArgs) ToStackSetAutoDeploymentPtrOutputWithContext(ctx context.Context) StackSetAutoDeploymentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetAutoDeploymentOutput).ToStackSetAutoDeploymentPtrOutputWithContext(ctx)
}

// StackSetAutoDeploymentPtrInput is an input type that accepts StackSetAutoDeploymentArgs, StackSetAutoDeploymentPtr and StackSetAutoDeploymentPtrOutput values.
// You can construct a concrete instance of `StackSetAutoDeploymentPtrInput` via:
//
//	        StackSetAutoDeploymentArgs{...}
//
//	or:
//
//	        nil
type StackSetAutoDeploymentPtrInput interface {
	pulumi.Input

	ToStackSetAutoDeploymentPtrOutput() StackSetAutoDeploymentPtrOutput
	ToStackSetAutoDeploymentPtrOutputWithContext(context.Context) StackSetAutoDeploymentPtrOutput
}

type stackSetAutoDeploymentPtrType StackSetAutoDeploymentArgs

func StackSetAutoDeploymentPtr(v *StackSetAutoDeploymentArgs) StackSetAutoDeploymentPtrInput {
	return (*stackSetAutoDeploymentPtrType)(v)
}

func (*stackSetAutoDeploymentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StackSetAutoDeployment)(nil)).Elem()
}

func (i *stackSetAutoDeploymentPtrType) ToStackSetAutoDeploymentPtrOutput() StackSetAutoDeploymentPtrOutput {
	return i.ToStackSetAutoDeploymentPtrOutputWithContext(context.Background())
}

func (i *stackSetAutoDeploymentPtrType) ToStackSetAutoDeploymentPtrOutputWithContext(ctx context.Context) StackSetAutoDeploymentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetAutoDeploymentPtrOutput)
}

type StackSetAutoDeploymentOutput struct{ *pulumi.OutputState }

func (StackSetAutoDeploymentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackSetAutoDeployment)(nil)).Elem()
}

func (o StackSetAutoDeploymentOutput) ToStackSetAutoDeploymentOutput() StackSetAutoDeploymentOutput {
	return o
}

func (o StackSetAutoDeploymentOutput) ToStackSetAutoDeploymentOutputWithContext(ctx context.Context) StackSetAutoDeploymentOutput {
	return o
}

func (o StackSetAutoDeploymentOutput) ToStackSetAutoDeploymentPtrOutput() StackSetAutoDeploymentPtrOutput {
	return o.ToStackSetAutoDeploymentPtrOutputWithContext(context.Background())
}

func (o StackSetAutoDeploymentOutput) ToStackSetAutoDeploymentPtrOutputWithContext(ctx context.Context) StackSetAutoDeploymentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StackSetAutoDeployment) *StackSetAutoDeployment {
		return &v
	}).(StackSetAutoDeploymentPtrOutput)
}

// Whether or not auto-deployment is enabled.
func (o StackSetAutoDeploymentOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StackSetAutoDeployment) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Whether or not to retain stacks when the account is removed.
func (o StackSetAutoDeploymentOutput) RetainStacksOnAccountRemoval() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StackSetAutoDeployment) *bool { return v.RetainStacksOnAccountRemoval }).(pulumi.BoolPtrOutput)
}

type StackSetAutoDeploymentPtrOutput struct{ *pulumi.OutputState }

func (StackSetAutoDeploymentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StackSetAutoDeployment)(nil)).Elem()
}

func (o StackSetAutoDeploymentPtrOutput) ToStackSetAutoDeploymentPtrOutput() StackSetAutoDeploymentPtrOutput {
	return o
}

func (o StackSetAutoDeploymentPtrOutput) ToStackSetAutoDeploymentPtrOutputWithContext(ctx context.Context) StackSetAutoDeploymentPtrOutput {
	return o
}

func (o StackSetAutoDeploymentPtrOutput) Elem() StackSetAutoDeploymentOutput {
	return o.ApplyT(func(v *StackSetAutoDeployment) StackSetAutoDeployment {
		if v != nil {
			return *v
		}
		var ret StackSetAutoDeployment
		return ret
	}).(StackSetAutoDeploymentOutput)
}

// Whether or not auto-deployment is enabled.
func (o StackSetAutoDeploymentPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StackSetAutoDeployment) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Whether or not to retain stacks when the account is removed.
func (o StackSetAutoDeploymentPtrOutput) RetainStacksOnAccountRemoval() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StackSetAutoDeployment) *bool {
		if v == nil {
			return nil
		}
		return v.RetainStacksOnAccountRemoval
	}).(pulumi.BoolPtrOutput)
}

type StackSetInstanceDeploymentTargets struct {
	// The organization root ID or organizational unit (OU) IDs to which StackSets deploys.
	OrganizationalUnitIds []string `pulumi:"organizationalUnitIds"`
}

// StackSetInstanceDeploymentTargetsInput is an input type that accepts StackSetInstanceDeploymentTargetsArgs and StackSetInstanceDeploymentTargetsOutput values.
// You can construct a concrete instance of `StackSetInstanceDeploymentTargetsInput` via:
//
//	StackSetInstanceDeploymentTargetsArgs{...}
type StackSetInstanceDeploymentTargetsInput interface {
	pulumi.Input

	ToStackSetInstanceDeploymentTargetsOutput() StackSetInstanceDeploymentTargetsOutput
	ToStackSetInstanceDeploymentTargetsOutputWithContext(context.Context) StackSetInstanceDeploymentTargetsOutput
}

type StackSetInstanceDeploymentTargetsArgs struct {
	// The organization root ID or organizational unit (OU) IDs to which StackSets deploys.
	OrganizationalUnitIds pulumi.StringArrayInput `pulumi:"organizationalUnitIds"`
}

func (StackSetInstanceDeploymentTargetsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackSetInstanceDeploymentTargets)(nil)).Elem()
}

func (i StackSetInstanceDeploymentTargetsArgs) ToStackSetInstanceDeploymentTargetsOutput() StackSetInstanceDeploymentTargetsOutput {
	return i.ToStackSetInstanceDeploymentTargetsOutputWithContext(context.Background())
}

func (i StackSetInstanceDeploymentTargetsArgs) ToStackSetInstanceDeploymentTargetsOutputWithContext(ctx context.Context) StackSetInstanceDeploymentTargetsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetInstanceDeploymentTargetsOutput)
}

func (i StackSetInstanceDeploymentTargetsArgs) ToStackSetInstanceDeploymentTargetsPtrOutput() StackSetInstanceDeploymentTargetsPtrOutput {
	return i.ToStackSetInstanceDeploymentTargetsPtrOutputWithContext(context.Background())
}

func (i StackSetInstanceDeploymentTargetsArgs) ToStackSetInstanceDeploymentTargetsPtrOutputWithContext(ctx context.Context) StackSetInstanceDeploymentTargetsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetInstanceDeploymentTargetsOutput).ToStackSetInstanceDeploymentTargetsPtrOutputWithContext(ctx)
}

// StackSetInstanceDeploymentTargetsPtrInput is an input type that accepts StackSetInstanceDeploymentTargetsArgs, StackSetInstanceDeploymentTargetsPtr and StackSetInstanceDeploymentTargetsPtrOutput values.
// You can construct a concrete instance of `StackSetInstanceDeploymentTargetsPtrInput` via:
//
//	        StackSetInstanceDeploymentTargetsArgs{...}
//
//	or:
//
//	        nil
type StackSetInstanceDeploymentTargetsPtrInput interface {
	pulumi.Input

	ToStackSetInstanceDeploymentTargetsPtrOutput() StackSetInstanceDeploymentTargetsPtrOutput
	ToStackSetInstanceDeploymentTargetsPtrOutputWithContext(context.Context) StackSetInstanceDeploymentTargetsPtrOutput
}

type stackSetInstanceDeploymentTargetsPtrType StackSetInstanceDeploymentTargetsArgs

func StackSetInstanceDeploymentTargetsPtr(v *StackSetInstanceDeploymentTargetsArgs) StackSetInstanceDeploymentTargetsPtrInput {
	return (*stackSetInstanceDeploymentTargetsPtrType)(v)
}

func (*stackSetInstanceDeploymentTargetsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StackSetInstanceDeploymentTargets)(nil)).Elem()
}

func (i *stackSetInstanceDeploymentTargetsPtrType) ToStackSetInstanceDeploymentTargetsPtrOutput() StackSetInstanceDeploymentTargetsPtrOutput {
	return i.ToStackSetInstanceDeploymentTargetsPtrOutputWithContext(context.Background())
}

func (i *stackSetInstanceDeploymentTargetsPtrType) ToStackSetInstanceDeploymentTargetsPtrOutputWithContext(ctx context.Context) StackSetInstanceDeploymentTargetsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetInstanceDeploymentTargetsPtrOutput)
}

type StackSetInstanceDeploymentTargetsOutput struct{ *pulumi.OutputState }

func (StackSetInstanceDeploymentTargetsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackSetInstanceDeploymentTargets)(nil)).Elem()
}

func (o StackSetInstanceDeploymentTargetsOutput) ToStackSetInstanceDeploymentTargetsOutput() StackSetInstanceDeploymentTargetsOutput {
	return o
}

func (o StackSetInstanceDeploymentTargetsOutput) ToStackSetInstanceDeploymentTargetsOutputWithContext(ctx context.Context) StackSetInstanceDeploymentTargetsOutput {
	return o
}

func (o StackSetInstanceDeploymentTargetsOutput) ToStackSetInstanceDeploymentTargetsPtrOutput() StackSetInstanceDeploymentTargetsPtrOutput {
	return o.ToStackSetInstanceDeploymentTargetsPtrOutputWithContext(context.Background())
}

func (o StackSetInstanceDeploymentTargetsOutput) ToStackSetInstanceDeploymentTargetsPtrOutputWithContext(ctx context.Context) StackSetInstanceDeploymentTargetsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StackSetInstanceDeploymentTargets) *StackSetInstanceDeploymentTargets {
		return &v
	}).(StackSetInstanceDeploymentTargetsPtrOutput)
}

// The organization root ID or organizational unit (OU) IDs to which StackSets deploys.
func (o StackSetInstanceDeploymentTargetsOutput) OrganizationalUnitIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StackSetInstanceDeploymentTargets) []string { return v.OrganizationalUnitIds }).(pulumi.StringArrayOutput)
}

type StackSetInstanceDeploymentTargetsPtrOutput struct{ *pulumi.OutputState }

func (StackSetInstanceDeploymentTargetsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StackSetInstanceDeploymentTargets)(nil)).Elem()
}

func (o StackSetInstanceDeploymentTargetsPtrOutput) ToStackSetInstanceDeploymentTargetsPtrOutput() StackSetInstanceDeploymentTargetsPtrOutput {
	return o
}

func (o StackSetInstanceDeploymentTargetsPtrOutput) ToStackSetInstanceDeploymentTargetsPtrOutputWithContext(ctx context.Context) StackSetInstanceDeploymentTargetsPtrOutput {
	return o
}

func (o StackSetInstanceDeploymentTargetsPtrOutput) Elem() StackSetInstanceDeploymentTargetsOutput {
	return o.ApplyT(func(v *StackSetInstanceDeploymentTargets) StackSetInstanceDeploymentTargets {
		if v != nil {
			return *v
		}
		var ret StackSetInstanceDeploymentTargets
		return ret
	}).(StackSetInstanceDeploymentTargetsOutput)
}

// The organization root ID or organizational unit (OU) IDs to which StackSets deploys.
func (o StackSetInstanceDeploymentTargetsPtrOutput) OrganizationalUnitIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StackSetInstanceDeploymentTargets) []string {
		if v == nil {
			return nil
		}
		return v.OrganizationalUnitIds
	}).(pulumi.StringArrayOutput)
}

type StackSetInstanceOperationPreferences struct {
	// The number of accounts, per Region, for which this operation can fail before AWS CloudFormation stops the operation in that Region.
	FailureToleranceCount *int `pulumi:"failureToleranceCount"`
	// The percentage of accounts, per Region, for which this stack operation can fail before AWS CloudFormation stops the operation in that Region.
	FailureTolerancePercentage *int `pulumi:"failureTolerancePercentage"`
	// The maximum number of accounts in which to perform this operation at one time.
	MaxConcurrentCount *int `pulumi:"maxConcurrentCount"`
	// The maximum percentage of accounts in which to perform this operation at one time.
	MaxConcurrentPercentage *int `pulumi:"maxConcurrentPercentage"`
	// The concurrency type of deploying StackSets operations in Regions, could be in parallel or one Region at a time. Valid values are `SEQUENTIAL` and `PARALLEL`.
	RegionConcurrencyType *string `pulumi:"regionConcurrencyType"`
	// The order of the Regions in where you want to perform the stack operation.
	RegionOrders []string `pulumi:"regionOrders"`
}

// StackSetInstanceOperationPreferencesInput is an input type that accepts StackSetInstanceOperationPreferencesArgs and StackSetInstanceOperationPreferencesOutput values.
// You can construct a concrete instance of `StackSetInstanceOperationPreferencesInput` via:
//
//	StackSetInstanceOperationPreferencesArgs{...}
type StackSetInstanceOperationPreferencesInput interface {
	pulumi.Input

	ToStackSetInstanceOperationPreferencesOutput() StackSetInstanceOperationPreferencesOutput
	ToStackSetInstanceOperationPreferencesOutputWithContext(context.Context) StackSetInstanceOperationPreferencesOutput
}

type StackSetInstanceOperationPreferencesArgs struct {
	// The number of accounts, per Region, for which this operation can fail before AWS CloudFormation stops the operation in that Region.
	FailureToleranceCount pulumi.IntPtrInput `pulumi:"failureToleranceCount"`
	// The percentage of accounts, per Region, for which this stack operation can fail before AWS CloudFormation stops the operation in that Region.
	FailureTolerancePercentage pulumi.IntPtrInput `pulumi:"failureTolerancePercentage"`
	// The maximum number of accounts in which to perform this operation at one time.
	MaxConcurrentCount pulumi.IntPtrInput `pulumi:"maxConcurrentCount"`
	// The maximum percentage of accounts in which to perform this operation at one time.
	MaxConcurrentPercentage pulumi.IntPtrInput `pulumi:"maxConcurrentPercentage"`
	// The concurrency type of deploying StackSets operations in Regions, could be in parallel or one Region at a time. Valid values are `SEQUENTIAL` and `PARALLEL`.
	RegionConcurrencyType pulumi.StringPtrInput `pulumi:"regionConcurrencyType"`
	// The order of the Regions in where you want to perform the stack operation.
	RegionOrders pulumi.StringArrayInput `pulumi:"regionOrders"`
}

func (StackSetInstanceOperationPreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackSetInstanceOperationPreferences)(nil)).Elem()
}

func (i StackSetInstanceOperationPreferencesArgs) ToStackSetInstanceOperationPreferencesOutput() StackSetInstanceOperationPreferencesOutput {
	return i.ToStackSetInstanceOperationPreferencesOutputWithContext(context.Background())
}

func (i StackSetInstanceOperationPreferencesArgs) ToStackSetInstanceOperationPreferencesOutputWithContext(ctx context.Context) StackSetInstanceOperationPreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetInstanceOperationPreferencesOutput)
}

func (i StackSetInstanceOperationPreferencesArgs) ToStackSetInstanceOperationPreferencesPtrOutput() StackSetInstanceOperationPreferencesPtrOutput {
	return i.ToStackSetInstanceOperationPreferencesPtrOutputWithContext(context.Background())
}

func (i StackSetInstanceOperationPreferencesArgs) ToStackSetInstanceOperationPreferencesPtrOutputWithContext(ctx context.Context) StackSetInstanceOperationPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetInstanceOperationPreferencesOutput).ToStackSetInstanceOperationPreferencesPtrOutputWithContext(ctx)
}

// StackSetInstanceOperationPreferencesPtrInput is an input type that accepts StackSetInstanceOperationPreferencesArgs, StackSetInstanceOperationPreferencesPtr and StackSetInstanceOperationPreferencesPtrOutput values.
// You can construct a concrete instance of `StackSetInstanceOperationPreferencesPtrInput` via:
//
//	        StackSetInstanceOperationPreferencesArgs{...}
//
//	or:
//
//	        nil
type StackSetInstanceOperationPreferencesPtrInput interface {
	pulumi.Input

	ToStackSetInstanceOperationPreferencesPtrOutput() StackSetInstanceOperationPreferencesPtrOutput
	ToStackSetInstanceOperationPreferencesPtrOutputWithContext(context.Context) StackSetInstanceOperationPreferencesPtrOutput
}

type stackSetInstanceOperationPreferencesPtrType StackSetInstanceOperationPreferencesArgs

func StackSetInstanceOperationPreferencesPtr(v *StackSetInstanceOperationPreferencesArgs) StackSetInstanceOperationPreferencesPtrInput {
	return (*stackSetInstanceOperationPreferencesPtrType)(v)
}

func (*stackSetInstanceOperationPreferencesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StackSetInstanceOperationPreferences)(nil)).Elem()
}

func (i *stackSetInstanceOperationPreferencesPtrType) ToStackSetInstanceOperationPreferencesPtrOutput() StackSetInstanceOperationPreferencesPtrOutput {
	return i.ToStackSetInstanceOperationPreferencesPtrOutputWithContext(context.Background())
}

func (i *stackSetInstanceOperationPreferencesPtrType) ToStackSetInstanceOperationPreferencesPtrOutputWithContext(ctx context.Context) StackSetInstanceOperationPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetInstanceOperationPreferencesPtrOutput)
}

type StackSetInstanceOperationPreferencesOutput struct{ *pulumi.OutputState }

func (StackSetInstanceOperationPreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackSetInstanceOperationPreferences)(nil)).Elem()
}

func (o StackSetInstanceOperationPreferencesOutput) ToStackSetInstanceOperationPreferencesOutput() StackSetInstanceOperationPreferencesOutput {
	return o
}

func (o StackSetInstanceOperationPreferencesOutput) ToStackSetInstanceOperationPreferencesOutputWithContext(ctx context.Context) StackSetInstanceOperationPreferencesOutput {
	return o
}

func (o StackSetInstanceOperationPreferencesOutput) ToStackSetInstanceOperationPreferencesPtrOutput() StackSetInstanceOperationPreferencesPtrOutput {
	return o.ToStackSetInstanceOperationPreferencesPtrOutputWithContext(context.Background())
}

func (o StackSetInstanceOperationPreferencesOutput) ToStackSetInstanceOperationPreferencesPtrOutputWithContext(ctx context.Context) StackSetInstanceOperationPreferencesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StackSetInstanceOperationPreferences) *StackSetInstanceOperationPreferences {
		return &v
	}).(StackSetInstanceOperationPreferencesPtrOutput)
}

// The number of accounts, per Region, for which this operation can fail before AWS CloudFormation stops the operation in that Region.
func (o StackSetInstanceOperationPreferencesOutput) FailureToleranceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StackSetInstanceOperationPreferences) *int { return v.FailureToleranceCount }).(pulumi.IntPtrOutput)
}

// The percentage of accounts, per Region, for which this stack operation can fail before AWS CloudFormation stops the operation in that Region.
func (o StackSetInstanceOperationPreferencesOutput) FailureTolerancePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StackSetInstanceOperationPreferences) *int { return v.FailureTolerancePercentage }).(pulumi.IntPtrOutput)
}

// The maximum number of accounts in which to perform this operation at one time.
func (o StackSetInstanceOperationPreferencesOutput) MaxConcurrentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StackSetInstanceOperationPreferences) *int { return v.MaxConcurrentCount }).(pulumi.IntPtrOutput)
}

// The maximum percentage of accounts in which to perform this operation at one time.
func (o StackSetInstanceOperationPreferencesOutput) MaxConcurrentPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StackSetInstanceOperationPreferences) *int { return v.MaxConcurrentPercentage }).(pulumi.IntPtrOutput)
}

// The concurrency type of deploying StackSets operations in Regions, could be in parallel or one Region at a time. Valid values are `SEQUENTIAL` and `PARALLEL`.
func (o StackSetInstanceOperationPreferencesOutput) RegionConcurrencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackSetInstanceOperationPreferences) *string { return v.RegionConcurrencyType }).(pulumi.StringPtrOutput)
}

// The order of the Regions in where you want to perform the stack operation.
func (o StackSetInstanceOperationPreferencesOutput) RegionOrders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StackSetInstanceOperationPreferences) []string { return v.RegionOrders }).(pulumi.StringArrayOutput)
}

type StackSetInstanceOperationPreferencesPtrOutput struct{ *pulumi.OutputState }

func (StackSetInstanceOperationPreferencesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StackSetInstanceOperationPreferences)(nil)).Elem()
}

func (o StackSetInstanceOperationPreferencesPtrOutput) ToStackSetInstanceOperationPreferencesPtrOutput() StackSetInstanceOperationPreferencesPtrOutput {
	return o
}

func (o StackSetInstanceOperationPreferencesPtrOutput) ToStackSetInstanceOperationPreferencesPtrOutputWithContext(ctx context.Context) StackSetInstanceOperationPreferencesPtrOutput {
	return o
}

func (o StackSetInstanceOperationPreferencesPtrOutput) Elem() StackSetInstanceOperationPreferencesOutput {
	return o.ApplyT(func(v *StackSetInstanceOperationPreferences) StackSetInstanceOperationPreferences {
		if v != nil {
			return *v
		}
		var ret StackSetInstanceOperationPreferences
		return ret
	}).(StackSetInstanceOperationPreferencesOutput)
}

// The number of accounts, per Region, for which this operation can fail before AWS CloudFormation stops the operation in that Region.
func (o StackSetInstanceOperationPreferencesPtrOutput) FailureToleranceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StackSetInstanceOperationPreferences) *int {
		if v == nil {
			return nil
		}
		return v.FailureToleranceCount
	}).(pulumi.IntPtrOutput)
}

// The percentage of accounts, per Region, for which this stack operation can fail before AWS CloudFormation stops the operation in that Region.
func (o StackSetInstanceOperationPreferencesPtrOutput) FailureTolerancePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StackSetInstanceOperationPreferences) *int {
		if v == nil {
			return nil
		}
		return v.FailureTolerancePercentage
	}).(pulumi.IntPtrOutput)
}

// The maximum number of accounts in which to perform this operation at one time.
func (o StackSetInstanceOperationPreferencesPtrOutput) MaxConcurrentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StackSetInstanceOperationPreferences) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentCount
	}).(pulumi.IntPtrOutput)
}

// The maximum percentage of accounts in which to perform this operation at one time.
func (o StackSetInstanceOperationPreferencesPtrOutput) MaxConcurrentPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StackSetInstanceOperationPreferences) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentPercentage
	}).(pulumi.IntPtrOutput)
}

// The concurrency type of deploying StackSets operations in Regions, could be in parallel or one Region at a time. Valid values are `SEQUENTIAL` and `PARALLEL`.
func (o StackSetInstanceOperationPreferencesPtrOutput) RegionConcurrencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StackSetInstanceOperationPreferences) *string {
		if v == nil {
			return nil
		}
		return v.RegionConcurrencyType
	}).(pulumi.StringPtrOutput)
}

// The order of the Regions in where you want to perform the stack operation.
func (o StackSetInstanceOperationPreferencesPtrOutput) RegionOrders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StackSetInstanceOperationPreferences) []string {
		if v == nil {
			return nil
		}
		return v.RegionOrders
	}).(pulumi.StringArrayOutput)
}

type StackSetOperationPreferences struct {
	// The number of accounts, per Region, for which this operation can fail before AWS CloudFormation stops the operation in that Region.
	FailureToleranceCount *int `pulumi:"failureToleranceCount"`
	// The percentage of accounts, per Region, for which this stack operation can fail before AWS CloudFormation stops the operation in that Region.
	FailureTolerancePercentage *int `pulumi:"failureTolerancePercentage"`
	// The maximum number of accounts in which to perform this operation at one time.
	MaxConcurrentCount *int `pulumi:"maxConcurrentCount"`
	// The maximum percentage of accounts in which to perform this operation at one time.
	MaxConcurrentPercentage *int `pulumi:"maxConcurrentPercentage"`
	// The concurrency type of deploying StackSets operations in Regions, could be in parallel or one Region at a time.
	RegionConcurrencyType *string `pulumi:"regionConcurrencyType"`
	// The order of the Regions in where you want to perform the stack operation.
	RegionOrders []string `pulumi:"regionOrders"`
}

// StackSetOperationPreferencesInput is an input type that accepts StackSetOperationPreferencesArgs and StackSetOperationPreferencesOutput values.
// You can construct a concrete instance of `StackSetOperationPreferencesInput` via:
//
//	StackSetOperationPreferencesArgs{...}
type StackSetOperationPreferencesInput interface {
	pulumi.Input

	ToStackSetOperationPreferencesOutput() StackSetOperationPreferencesOutput
	ToStackSetOperationPreferencesOutputWithContext(context.Context) StackSetOperationPreferencesOutput
}

type StackSetOperationPreferencesArgs struct {
	// The number of accounts, per Region, for which this operation can fail before AWS CloudFormation stops the operation in that Region.
	FailureToleranceCount pulumi.IntPtrInput `pulumi:"failureToleranceCount"`
	// The percentage of accounts, per Region, for which this stack operation can fail before AWS CloudFormation stops the operation in that Region.
	FailureTolerancePercentage pulumi.IntPtrInput `pulumi:"failureTolerancePercentage"`
	// The maximum number of accounts in which to perform this operation at one time.
	MaxConcurrentCount pulumi.IntPtrInput `pulumi:"maxConcurrentCount"`
	// The maximum percentage of accounts in which to perform this operation at one time.
	MaxConcurrentPercentage pulumi.IntPtrInput `pulumi:"maxConcurrentPercentage"`
	// The concurrency type of deploying StackSets operations in Regions, could be in parallel or one Region at a time.
	RegionConcurrencyType pulumi.StringPtrInput `pulumi:"regionConcurrencyType"`
	// The order of the Regions in where you want to perform the stack operation.
	RegionOrders pulumi.StringArrayInput `pulumi:"regionOrders"`
}

func (StackSetOperationPreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackSetOperationPreferences)(nil)).Elem()
}

func (i StackSetOperationPreferencesArgs) ToStackSetOperationPreferencesOutput() StackSetOperationPreferencesOutput {
	return i.ToStackSetOperationPreferencesOutputWithContext(context.Background())
}

func (i StackSetOperationPreferencesArgs) ToStackSetOperationPreferencesOutputWithContext(ctx context.Context) StackSetOperationPreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetOperationPreferencesOutput)
}

func (i StackSetOperationPreferencesArgs) ToStackSetOperationPreferencesPtrOutput() StackSetOperationPreferencesPtrOutput {
	return i.ToStackSetOperationPreferencesPtrOutputWithContext(context.Background())
}

func (i StackSetOperationPreferencesArgs) ToStackSetOperationPreferencesPtrOutputWithContext(ctx context.Context) StackSetOperationPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetOperationPreferencesOutput).ToStackSetOperationPreferencesPtrOutputWithContext(ctx)
}

// StackSetOperationPreferencesPtrInput is an input type that accepts StackSetOperationPreferencesArgs, StackSetOperationPreferencesPtr and StackSetOperationPreferencesPtrOutput values.
// You can construct a concrete instance of `StackSetOperationPreferencesPtrInput` via:
//
//	        StackSetOperationPreferencesArgs{...}
//
//	or:
//
//	        nil
type StackSetOperationPreferencesPtrInput interface {
	pulumi.Input

	ToStackSetOperationPreferencesPtrOutput() StackSetOperationPreferencesPtrOutput
	ToStackSetOperationPreferencesPtrOutputWithContext(context.Context) StackSetOperationPreferencesPtrOutput
}

type stackSetOperationPreferencesPtrType StackSetOperationPreferencesArgs

func StackSetOperationPreferencesPtr(v *StackSetOperationPreferencesArgs) StackSetOperationPreferencesPtrInput {
	return (*stackSetOperationPreferencesPtrType)(v)
}

func (*stackSetOperationPreferencesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StackSetOperationPreferences)(nil)).Elem()
}

func (i *stackSetOperationPreferencesPtrType) ToStackSetOperationPreferencesPtrOutput() StackSetOperationPreferencesPtrOutput {
	return i.ToStackSetOperationPreferencesPtrOutputWithContext(context.Background())
}

func (i *stackSetOperationPreferencesPtrType) ToStackSetOperationPreferencesPtrOutputWithContext(ctx context.Context) StackSetOperationPreferencesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackSetOperationPreferencesPtrOutput)
}

type StackSetOperationPreferencesOutput struct{ *pulumi.OutputState }

func (StackSetOperationPreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackSetOperationPreferences)(nil)).Elem()
}

func (o StackSetOperationPreferencesOutput) ToStackSetOperationPreferencesOutput() StackSetOperationPreferencesOutput {
	return o
}

func (o StackSetOperationPreferencesOutput) ToStackSetOperationPreferencesOutputWithContext(ctx context.Context) StackSetOperationPreferencesOutput {
	return o
}

func (o StackSetOperationPreferencesOutput) ToStackSetOperationPreferencesPtrOutput() StackSetOperationPreferencesPtrOutput {
	return o.ToStackSetOperationPreferencesPtrOutputWithContext(context.Background())
}

func (o StackSetOperationPreferencesOutput) ToStackSetOperationPreferencesPtrOutputWithContext(ctx context.Context) StackSetOperationPreferencesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StackSetOperationPreferences) *StackSetOperationPreferences {
		return &v
	}).(StackSetOperationPreferencesPtrOutput)
}

// The number of accounts, per Region, for which this operation can fail before AWS CloudFormation stops the operation in that Region.
func (o StackSetOperationPreferencesOutput) FailureToleranceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StackSetOperationPreferences) *int { return v.FailureToleranceCount }).(pulumi.IntPtrOutput)
}

// The percentage of accounts, per Region, for which this stack operation can fail before AWS CloudFormation stops the operation in that Region.
func (o StackSetOperationPreferencesOutput) FailureTolerancePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StackSetOperationPreferences) *int { return v.FailureTolerancePercentage }).(pulumi.IntPtrOutput)
}

// The maximum number of accounts in which to perform this operation at one time.
func (o StackSetOperationPreferencesOutput) MaxConcurrentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StackSetOperationPreferences) *int { return v.MaxConcurrentCount }).(pulumi.IntPtrOutput)
}

// The maximum percentage of accounts in which to perform this operation at one time.
func (o StackSetOperationPreferencesOutput) MaxConcurrentPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StackSetOperationPreferences) *int { return v.MaxConcurrentPercentage }).(pulumi.IntPtrOutput)
}

// The concurrency type of deploying StackSets operations in Regions, could be in parallel or one Region at a time.
func (o StackSetOperationPreferencesOutput) RegionConcurrencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackSetOperationPreferences) *string { return v.RegionConcurrencyType }).(pulumi.StringPtrOutput)
}

// The order of the Regions in where you want to perform the stack operation.
func (o StackSetOperationPreferencesOutput) RegionOrders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StackSetOperationPreferences) []string { return v.RegionOrders }).(pulumi.StringArrayOutput)
}

type StackSetOperationPreferencesPtrOutput struct{ *pulumi.OutputState }

func (StackSetOperationPreferencesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StackSetOperationPreferences)(nil)).Elem()
}

func (o StackSetOperationPreferencesPtrOutput) ToStackSetOperationPreferencesPtrOutput() StackSetOperationPreferencesPtrOutput {
	return o
}

func (o StackSetOperationPreferencesPtrOutput) ToStackSetOperationPreferencesPtrOutputWithContext(ctx context.Context) StackSetOperationPreferencesPtrOutput {
	return o
}

func (o StackSetOperationPreferencesPtrOutput) Elem() StackSetOperationPreferencesOutput {
	return o.ApplyT(func(v *StackSetOperationPreferences) StackSetOperationPreferences {
		if v != nil {
			return *v
		}
		var ret StackSetOperationPreferences
		return ret
	}).(StackSetOperationPreferencesOutput)
}

// The number of accounts, per Region, for which this operation can fail before AWS CloudFormation stops the operation in that Region.
func (o StackSetOperationPreferencesPtrOutput) FailureToleranceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StackSetOperationPreferences) *int {
		if v == nil {
			return nil
		}
		return v.FailureToleranceCount
	}).(pulumi.IntPtrOutput)
}

// The percentage of accounts, per Region, for which this stack operation can fail before AWS CloudFormation stops the operation in that Region.
func (o StackSetOperationPreferencesPtrOutput) FailureTolerancePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StackSetOperationPreferences) *int {
		if v == nil {
			return nil
		}
		return v.FailureTolerancePercentage
	}).(pulumi.IntPtrOutput)
}

// The maximum number of accounts in which to perform this operation at one time.
func (o StackSetOperationPreferencesPtrOutput) MaxConcurrentCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StackSetOperationPreferences) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentCount
	}).(pulumi.IntPtrOutput)
}

// The maximum percentage of accounts in which to perform this operation at one time.
func (o StackSetOperationPreferencesPtrOutput) MaxConcurrentPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StackSetOperationPreferences) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentPercentage
	}).(pulumi.IntPtrOutput)
}

// The concurrency type of deploying StackSets operations in Regions, could be in parallel or one Region at a time.
func (o StackSetOperationPreferencesPtrOutput) RegionConcurrencyType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StackSetOperationPreferences) *string {
		if v == nil {
			return nil
		}
		return v.RegionConcurrencyType
	}).(pulumi.StringPtrOutput)
}

// The order of the Regions in where you want to perform the stack operation.
func (o StackSetOperationPreferencesPtrOutput) RegionOrders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *StackSetOperationPreferences) []string {
		if v == nil {
			return nil
		}
		return v.RegionOrders
	}).(pulumi.StringArrayOutput)
}

type GetCloudFormationTypeLoggingConfig struct {
	// Name of the CloudWatch Log Group where CloudFormation sends error logging information when invoking the type's handlers.
	LogGroupName string `pulumi:"logGroupName"`
	// ARN of the IAM Role CloudFormation assumes when sending error logging information to CloudWatch Logs.
	LogRoleArn string `pulumi:"logRoleArn"`
}

// GetCloudFormationTypeLoggingConfigInput is an input type that accepts GetCloudFormationTypeLoggingConfigArgs and GetCloudFormationTypeLoggingConfigOutput values.
// You can construct a concrete instance of `GetCloudFormationTypeLoggingConfigInput` via:
//
//	GetCloudFormationTypeLoggingConfigArgs{...}
type GetCloudFormationTypeLoggingConfigInput interface {
	pulumi.Input

	ToGetCloudFormationTypeLoggingConfigOutput() GetCloudFormationTypeLoggingConfigOutput
	ToGetCloudFormationTypeLoggingConfigOutputWithContext(context.Context) GetCloudFormationTypeLoggingConfigOutput
}

type GetCloudFormationTypeLoggingConfigArgs struct {
	// Name of the CloudWatch Log Group where CloudFormation sends error logging information when invoking the type's handlers.
	LogGroupName pulumi.StringInput `pulumi:"logGroupName"`
	// ARN of the IAM Role CloudFormation assumes when sending error logging information to CloudWatch Logs.
	LogRoleArn pulumi.StringInput `pulumi:"logRoleArn"`
}

func (GetCloudFormationTypeLoggingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudFormationTypeLoggingConfig)(nil)).Elem()
}

func (i GetCloudFormationTypeLoggingConfigArgs) ToGetCloudFormationTypeLoggingConfigOutput() GetCloudFormationTypeLoggingConfigOutput {
	return i.ToGetCloudFormationTypeLoggingConfigOutputWithContext(context.Background())
}

func (i GetCloudFormationTypeLoggingConfigArgs) ToGetCloudFormationTypeLoggingConfigOutputWithContext(ctx context.Context) GetCloudFormationTypeLoggingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudFormationTypeLoggingConfigOutput)
}

// GetCloudFormationTypeLoggingConfigArrayInput is an input type that accepts GetCloudFormationTypeLoggingConfigArray and GetCloudFormationTypeLoggingConfigArrayOutput values.
// You can construct a concrete instance of `GetCloudFormationTypeLoggingConfigArrayInput` via:
//
//	GetCloudFormationTypeLoggingConfigArray{ GetCloudFormationTypeLoggingConfigArgs{...} }
type GetCloudFormationTypeLoggingConfigArrayInput interface {
	pulumi.Input

	ToGetCloudFormationTypeLoggingConfigArrayOutput() GetCloudFormationTypeLoggingConfigArrayOutput
	ToGetCloudFormationTypeLoggingConfigArrayOutputWithContext(context.Context) GetCloudFormationTypeLoggingConfigArrayOutput
}

type GetCloudFormationTypeLoggingConfigArray []GetCloudFormationTypeLoggingConfigInput

func (GetCloudFormationTypeLoggingConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudFormationTypeLoggingConfig)(nil)).Elem()
}

func (i GetCloudFormationTypeLoggingConfigArray) ToGetCloudFormationTypeLoggingConfigArrayOutput() GetCloudFormationTypeLoggingConfigArrayOutput {
	return i.ToGetCloudFormationTypeLoggingConfigArrayOutputWithContext(context.Background())
}

func (i GetCloudFormationTypeLoggingConfigArray) ToGetCloudFormationTypeLoggingConfigArrayOutputWithContext(ctx context.Context) GetCloudFormationTypeLoggingConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCloudFormationTypeLoggingConfigArrayOutput)
}

type GetCloudFormationTypeLoggingConfigOutput struct{ *pulumi.OutputState }

func (GetCloudFormationTypeLoggingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCloudFormationTypeLoggingConfig)(nil)).Elem()
}

func (o GetCloudFormationTypeLoggingConfigOutput) ToGetCloudFormationTypeLoggingConfigOutput() GetCloudFormationTypeLoggingConfigOutput {
	return o
}

func (o GetCloudFormationTypeLoggingConfigOutput) ToGetCloudFormationTypeLoggingConfigOutputWithContext(ctx context.Context) GetCloudFormationTypeLoggingConfigOutput {
	return o
}

// Name of the CloudWatch Log Group where CloudFormation sends error logging information when invoking the type's handlers.
func (o GetCloudFormationTypeLoggingConfigOutput) LogGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudFormationTypeLoggingConfig) string { return v.LogGroupName }).(pulumi.StringOutput)
}

// ARN of the IAM Role CloudFormation assumes when sending error logging information to CloudWatch Logs.
func (o GetCloudFormationTypeLoggingConfigOutput) LogRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetCloudFormationTypeLoggingConfig) string { return v.LogRoleArn }).(pulumi.StringOutput)
}

type GetCloudFormationTypeLoggingConfigArrayOutput struct{ *pulumi.OutputState }

func (GetCloudFormationTypeLoggingConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCloudFormationTypeLoggingConfig)(nil)).Elem()
}

func (o GetCloudFormationTypeLoggingConfigArrayOutput) ToGetCloudFormationTypeLoggingConfigArrayOutput() GetCloudFormationTypeLoggingConfigArrayOutput {
	return o
}

func (o GetCloudFormationTypeLoggingConfigArrayOutput) ToGetCloudFormationTypeLoggingConfigArrayOutputWithContext(ctx context.Context) GetCloudFormationTypeLoggingConfigArrayOutput {
	return o
}

func (o GetCloudFormationTypeLoggingConfigArrayOutput) Index(i pulumi.IntInput) GetCloudFormationTypeLoggingConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCloudFormationTypeLoggingConfig {
		return vs[0].([]GetCloudFormationTypeLoggingConfig)[vs[1].(int)]
	}).(GetCloudFormationTypeLoggingConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CloudFormationTypeLoggingConfigInput)(nil)).Elem(), CloudFormationTypeLoggingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CloudFormationTypeLoggingConfigPtrInput)(nil)).Elem(), CloudFormationTypeLoggingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackSetAutoDeploymentInput)(nil)).Elem(), StackSetAutoDeploymentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackSetAutoDeploymentPtrInput)(nil)).Elem(), StackSetAutoDeploymentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackSetInstanceDeploymentTargetsInput)(nil)).Elem(), StackSetInstanceDeploymentTargetsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackSetInstanceDeploymentTargetsPtrInput)(nil)).Elem(), StackSetInstanceDeploymentTargetsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackSetInstanceOperationPreferencesInput)(nil)).Elem(), StackSetInstanceOperationPreferencesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackSetInstanceOperationPreferencesPtrInput)(nil)).Elem(), StackSetInstanceOperationPreferencesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackSetOperationPreferencesInput)(nil)).Elem(), StackSetOperationPreferencesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*StackSetOperationPreferencesPtrInput)(nil)).Elem(), StackSetOperationPreferencesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudFormationTypeLoggingConfigInput)(nil)).Elem(), GetCloudFormationTypeLoggingConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCloudFormationTypeLoggingConfigArrayInput)(nil)).Elem(), GetCloudFormationTypeLoggingConfigArray{})
	pulumi.RegisterOutputType(CloudFormationTypeLoggingConfigOutput{})
	pulumi.RegisterOutputType(CloudFormationTypeLoggingConfigPtrOutput{})
	pulumi.RegisterOutputType(StackSetAutoDeploymentOutput{})
	pulumi.RegisterOutputType(StackSetAutoDeploymentPtrOutput{})
	pulumi.RegisterOutputType(StackSetInstanceDeploymentTargetsOutput{})
	pulumi.RegisterOutputType(StackSetInstanceDeploymentTargetsPtrOutput{})
	pulumi.RegisterOutputType(StackSetInstanceOperationPreferencesOutput{})
	pulumi.RegisterOutputType(StackSetInstanceOperationPreferencesPtrOutput{})
	pulumi.RegisterOutputType(StackSetOperationPreferencesOutput{})
	pulumi.RegisterOutputType(StackSetOperationPreferencesPtrOutput{})
	pulumi.RegisterOutputType(GetCloudFormationTypeLoggingConfigOutput{})
	pulumi.RegisterOutputType(GetCloudFormationTypeLoggingConfigArrayOutput{})
}
