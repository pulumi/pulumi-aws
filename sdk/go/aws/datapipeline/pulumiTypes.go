// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package datapipeline

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PipelineDefinitionParameterObject struct {
	// Configuration block for attributes of the parameter object. See below
	Attributes []PipelineDefinitionParameterObjectAttribute `pulumi:"attributes"`
	// ID of the parameter value.
	Id string `pulumi:"id"`
}

// PipelineDefinitionParameterObjectInput is an input type that accepts PipelineDefinitionParameterObjectArgs and PipelineDefinitionParameterObjectOutput values.
// You can construct a concrete instance of `PipelineDefinitionParameterObjectInput` via:
//
//          PipelineDefinitionParameterObjectArgs{...}
type PipelineDefinitionParameterObjectInput interface {
	pulumi.Input

	ToPipelineDefinitionParameterObjectOutput() PipelineDefinitionParameterObjectOutput
	ToPipelineDefinitionParameterObjectOutputWithContext(context.Context) PipelineDefinitionParameterObjectOutput
}

type PipelineDefinitionParameterObjectArgs struct {
	// Configuration block for attributes of the parameter object. See below
	Attributes PipelineDefinitionParameterObjectAttributeArrayInput `pulumi:"attributes"`
	// ID of the parameter value.
	Id pulumi.StringInput `pulumi:"id"`
}

func (PipelineDefinitionParameterObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDefinitionParameterObject)(nil)).Elem()
}

func (i PipelineDefinitionParameterObjectArgs) ToPipelineDefinitionParameterObjectOutput() PipelineDefinitionParameterObjectOutput {
	return i.ToPipelineDefinitionParameterObjectOutputWithContext(context.Background())
}

func (i PipelineDefinitionParameterObjectArgs) ToPipelineDefinitionParameterObjectOutputWithContext(ctx context.Context) PipelineDefinitionParameterObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDefinitionParameterObjectOutput)
}

// PipelineDefinitionParameterObjectArrayInput is an input type that accepts PipelineDefinitionParameterObjectArray and PipelineDefinitionParameterObjectArrayOutput values.
// You can construct a concrete instance of `PipelineDefinitionParameterObjectArrayInput` via:
//
//          PipelineDefinitionParameterObjectArray{ PipelineDefinitionParameterObjectArgs{...} }
type PipelineDefinitionParameterObjectArrayInput interface {
	pulumi.Input

	ToPipelineDefinitionParameterObjectArrayOutput() PipelineDefinitionParameterObjectArrayOutput
	ToPipelineDefinitionParameterObjectArrayOutputWithContext(context.Context) PipelineDefinitionParameterObjectArrayOutput
}

type PipelineDefinitionParameterObjectArray []PipelineDefinitionParameterObjectInput

func (PipelineDefinitionParameterObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineDefinitionParameterObject)(nil)).Elem()
}

func (i PipelineDefinitionParameterObjectArray) ToPipelineDefinitionParameterObjectArrayOutput() PipelineDefinitionParameterObjectArrayOutput {
	return i.ToPipelineDefinitionParameterObjectArrayOutputWithContext(context.Background())
}

func (i PipelineDefinitionParameterObjectArray) ToPipelineDefinitionParameterObjectArrayOutputWithContext(ctx context.Context) PipelineDefinitionParameterObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDefinitionParameterObjectArrayOutput)
}

type PipelineDefinitionParameterObjectOutput struct{ *pulumi.OutputState }

func (PipelineDefinitionParameterObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDefinitionParameterObject)(nil)).Elem()
}

func (o PipelineDefinitionParameterObjectOutput) ToPipelineDefinitionParameterObjectOutput() PipelineDefinitionParameterObjectOutput {
	return o
}

func (o PipelineDefinitionParameterObjectOutput) ToPipelineDefinitionParameterObjectOutputWithContext(ctx context.Context) PipelineDefinitionParameterObjectOutput {
	return o
}

// Configuration block for attributes of the parameter object. See below
func (o PipelineDefinitionParameterObjectOutput) Attributes() PipelineDefinitionParameterObjectAttributeArrayOutput {
	return o.ApplyT(func(v PipelineDefinitionParameterObject) []PipelineDefinitionParameterObjectAttribute {
		return v.Attributes
	}).(PipelineDefinitionParameterObjectAttributeArrayOutput)
}

// ID of the parameter value.
func (o PipelineDefinitionParameterObjectOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineDefinitionParameterObject) string { return v.Id }).(pulumi.StringOutput)
}

type PipelineDefinitionParameterObjectArrayOutput struct{ *pulumi.OutputState }

func (PipelineDefinitionParameterObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineDefinitionParameterObject)(nil)).Elem()
}

func (o PipelineDefinitionParameterObjectArrayOutput) ToPipelineDefinitionParameterObjectArrayOutput() PipelineDefinitionParameterObjectArrayOutput {
	return o
}

func (o PipelineDefinitionParameterObjectArrayOutput) ToPipelineDefinitionParameterObjectArrayOutputWithContext(ctx context.Context) PipelineDefinitionParameterObjectArrayOutput {
	return o
}

func (o PipelineDefinitionParameterObjectArrayOutput) Index(i pulumi.IntInput) PipelineDefinitionParameterObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineDefinitionParameterObject {
		return vs[0].([]PipelineDefinitionParameterObject)[vs[1].(int)]
	}).(PipelineDefinitionParameterObjectOutput)
}

type PipelineDefinitionParameterObjectAttribute struct {
	// Field identifier.
	Key string `pulumi:"key"`
	// Field value, expressed as a String.
	StringValue string `pulumi:"stringValue"`
}

// PipelineDefinitionParameterObjectAttributeInput is an input type that accepts PipelineDefinitionParameterObjectAttributeArgs and PipelineDefinitionParameterObjectAttributeOutput values.
// You can construct a concrete instance of `PipelineDefinitionParameterObjectAttributeInput` via:
//
//          PipelineDefinitionParameterObjectAttributeArgs{...}
type PipelineDefinitionParameterObjectAttributeInput interface {
	pulumi.Input

	ToPipelineDefinitionParameterObjectAttributeOutput() PipelineDefinitionParameterObjectAttributeOutput
	ToPipelineDefinitionParameterObjectAttributeOutputWithContext(context.Context) PipelineDefinitionParameterObjectAttributeOutput
}

type PipelineDefinitionParameterObjectAttributeArgs struct {
	// Field identifier.
	Key pulumi.StringInput `pulumi:"key"`
	// Field value, expressed as a String.
	StringValue pulumi.StringInput `pulumi:"stringValue"`
}

func (PipelineDefinitionParameterObjectAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDefinitionParameterObjectAttribute)(nil)).Elem()
}

func (i PipelineDefinitionParameterObjectAttributeArgs) ToPipelineDefinitionParameterObjectAttributeOutput() PipelineDefinitionParameterObjectAttributeOutput {
	return i.ToPipelineDefinitionParameterObjectAttributeOutputWithContext(context.Background())
}

func (i PipelineDefinitionParameterObjectAttributeArgs) ToPipelineDefinitionParameterObjectAttributeOutputWithContext(ctx context.Context) PipelineDefinitionParameterObjectAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDefinitionParameterObjectAttributeOutput)
}

// PipelineDefinitionParameterObjectAttributeArrayInput is an input type that accepts PipelineDefinitionParameterObjectAttributeArray and PipelineDefinitionParameterObjectAttributeArrayOutput values.
// You can construct a concrete instance of `PipelineDefinitionParameterObjectAttributeArrayInput` via:
//
//          PipelineDefinitionParameterObjectAttributeArray{ PipelineDefinitionParameterObjectAttributeArgs{...} }
type PipelineDefinitionParameterObjectAttributeArrayInput interface {
	pulumi.Input

	ToPipelineDefinitionParameterObjectAttributeArrayOutput() PipelineDefinitionParameterObjectAttributeArrayOutput
	ToPipelineDefinitionParameterObjectAttributeArrayOutputWithContext(context.Context) PipelineDefinitionParameterObjectAttributeArrayOutput
}

type PipelineDefinitionParameterObjectAttributeArray []PipelineDefinitionParameterObjectAttributeInput

func (PipelineDefinitionParameterObjectAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineDefinitionParameterObjectAttribute)(nil)).Elem()
}

func (i PipelineDefinitionParameterObjectAttributeArray) ToPipelineDefinitionParameterObjectAttributeArrayOutput() PipelineDefinitionParameterObjectAttributeArrayOutput {
	return i.ToPipelineDefinitionParameterObjectAttributeArrayOutputWithContext(context.Background())
}

func (i PipelineDefinitionParameterObjectAttributeArray) ToPipelineDefinitionParameterObjectAttributeArrayOutputWithContext(ctx context.Context) PipelineDefinitionParameterObjectAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDefinitionParameterObjectAttributeArrayOutput)
}

type PipelineDefinitionParameterObjectAttributeOutput struct{ *pulumi.OutputState }

func (PipelineDefinitionParameterObjectAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDefinitionParameterObjectAttribute)(nil)).Elem()
}

func (o PipelineDefinitionParameterObjectAttributeOutput) ToPipelineDefinitionParameterObjectAttributeOutput() PipelineDefinitionParameterObjectAttributeOutput {
	return o
}

func (o PipelineDefinitionParameterObjectAttributeOutput) ToPipelineDefinitionParameterObjectAttributeOutputWithContext(ctx context.Context) PipelineDefinitionParameterObjectAttributeOutput {
	return o
}

// Field identifier.
func (o PipelineDefinitionParameterObjectAttributeOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineDefinitionParameterObjectAttribute) string { return v.Key }).(pulumi.StringOutput)
}

// Field value, expressed as a String.
func (o PipelineDefinitionParameterObjectAttributeOutput) StringValue() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineDefinitionParameterObjectAttribute) string { return v.StringValue }).(pulumi.StringOutput)
}

type PipelineDefinitionParameterObjectAttributeArrayOutput struct{ *pulumi.OutputState }

func (PipelineDefinitionParameterObjectAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineDefinitionParameterObjectAttribute)(nil)).Elem()
}

func (o PipelineDefinitionParameterObjectAttributeArrayOutput) ToPipelineDefinitionParameterObjectAttributeArrayOutput() PipelineDefinitionParameterObjectAttributeArrayOutput {
	return o
}

func (o PipelineDefinitionParameterObjectAttributeArrayOutput) ToPipelineDefinitionParameterObjectAttributeArrayOutputWithContext(ctx context.Context) PipelineDefinitionParameterObjectAttributeArrayOutput {
	return o
}

func (o PipelineDefinitionParameterObjectAttributeArrayOutput) Index(i pulumi.IntInput) PipelineDefinitionParameterObjectAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineDefinitionParameterObjectAttribute {
		return vs[0].([]PipelineDefinitionParameterObjectAttribute)[vs[1].(int)]
	}).(PipelineDefinitionParameterObjectAttributeOutput)
}

type PipelineDefinitionParameterValue struct {
	// ID of the parameter value.
	Id string `pulumi:"id"`
	// Field value, expressed as a String.
	StringValue string `pulumi:"stringValue"`
}

// PipelineDefinitionParameterValueInput is an input type that accepts PipelineDefinitionParameterValueArgs and PipelineDefinitionParameterValueOutput values.
// You can construct a concrete instance of `PipelineDefinitionParameterValueInput` via:
//
//          PipelineDefinitionParameterValueArgs{...}
type PipelineDefinitionParameterValueInput interface {
	pulumi.Input

	ToPipelineDefinitionParameterValueOutput() PipelineDefinitionParameterValueOutput
	ToPipelineDefinitionParameterValueOutputWithContext(context.Context) PipelineDefinitionParameterValueOutput
}

type PipelineDefinitionParameterValueArgs struct {
	// ID of the parameter value.
	Id pulumi.StringInput `pulumi:"id"`
	// Field value, expressed as a String.
	StringValue pulumi.StringInput `pulumi:"stringValue"`
}

func (PipelineDefinitionParameterValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDefinitionParameterValue)(nil)).Elem()
}

func (i PipelineDefinitionParameterValueArgs) ToPipelineDefinitionParameterValueOutput() PipelineDefinitionParameterValueOutput {
	return i.ToPipelineDefinitionParameterValueOutputWithContext(context.Background())
}

func (i PipelineDefinitionParameterValueArgs) ToPipelineDefinitionParameterValueOutputWithContext(ctx context.Context) PipelineDefinitionParameterValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDefinitionParameterValueOutput)
}

// PipelineDefinitionParameterValueArrayInput is an input type that accepts PipelineDefinitionParameterValueArray and PipelineDefinitionParameterValueArrayOutput values.
// You can construct a concrete instance of `PipelineDefinitionParameterValueArrayInput` via:
//
//          PipelineDefinitionParameterValueArray{ PipelineDefinitionParameterValueArgs{...} }
type PipelineDefinitionParameterValueArrayInput interface {
	pulumi.Input

	ToPipelineDefinitionParameterValueArrayOutput() PipelineDefinitionParameterValueArrayOutput
	ToPipelineDefinitionParameterValueArrayOutputWithContext(context.Context) PipelineDefinitionParameterValueArrayOutput
}

type PipelineDefinitionParameterValueArray []PipelineDefinitionParameterValueInput

func (PipelineDefinitionParameterValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineDefinitionParameterValue)(nil)).Elem()
}

func (i PipelineDefinitionParameterValueArray) ToPipelineDefinitionParameterValueArrayOutput() PipelineDefinitionParameterValueArrayOutput {
	return i.ToPipelineDefinitionParameterValueArrayOutputWithContext(context.Background())
}

func (i PipelineDefinitionParameterValueArray) ToPipelineDefinitionParameterValueArrayOutputWithContext(ctx context.Context) PipelineDefinitionParameterValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDefinitionParameterValueArrayOutput)
}

type PipelineDefinitionParameterValueOutput struct{ *pulumi.OutputState }

func (PipelineDefinitionParameterValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDefinitionParameterValue)(nil)).Elem()
}

func (o PipelineDefinitionParameterValueOutput) ToPipelineDefinitionParameterValueOutput() PipelineDefinitionParameterValueOutput {
	return o
}

func (o PipelineDefinitionParameterValueOutput) ToPipelineDefinitionParameterValueOutputWithContext(ctx context.Context) PipelineDefinitionParameterValueOutput {
	return o
}

// ID of the parameter value.
func (o PipelineDefinitionParameterValueOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineDefinitionParameterValue) string { return v.Id }).(pulumi.StringOutput)
}

// Field value, expressed as a String.
func (o PipelineDefinitionParameterValueOutput) StringValue() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineDefinitionParameterValue) string { return v.StringValue }).(pulumi.StringOutput)
}

type PipelineDefinitionParameterValueArrayOutput struct{ *pulumi.OutputState }

func (PipelineDefinitionParameterValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineDefinitionParameterValue)(nil)).Elem()
}

func (o PipelineDefinitionParameterValueArrayOutput) ToPipelineDefinitionParameterValueArrayOutput() PipelineDefinitionParameterValueArrayOutput {
	return o
}

func (o PipelineDefinitionParameterValueArrayOutput) ToPipelineDefinitionParameterValueArrayOutputWithContext(ctx context.Context) PipelineDefinitionParameterValueArrayOutput {
	return o
}

func (o PipelineDefinitionParameterValueArrayOutput) Index(i pulumi.IntInput) PipelineDefinitionParameterValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineDefinitionParameterValue {
		return vs[0].([]PipelineDefinitionParameterValue)[vs[1].(int)]
	}).(PipelineDefinitionParameterValueOutput)
}

type PipelineDefinitionPipelineObject struct {
	// Configuration block for Key-value pairs that define the properties of the object. See below
	Fields []PipelineDefinitionPipelineObjectField `pulumi:"fields"`
	// ID of the parameter value.
	Id string `pulumi:"id"`
	// ARN of the storage connector.
	Name string `pulumi:"name"`
}

// PipelineDefinitionPipelineObjectInput is an input type that accepts PipelineDefinitionPipelineObjectArgs and PipelineDefinitionPipelineObjectOutput values.
// You can construct a concrete instance of `PipelineDefinitionPipelineObjectInput` via:
//
//          PipelineDefinitionPipelineObjectArgs{...}
type PipelineDefinitionPipelineObjectInput interface {
	pulumi.Input

	ToPipelineDefinitionPipelineObjectOutput() PipelineDefinitionPipelineObjectOutput
	ToPipelineDefinitionPipelineObjectOutputWithContext(context.Context) PipelineDefinitionPipelineObjectOutput
}

type PipelineDefinitionPipelineObjectArgs struct {
	// Configuration block for Key-value pairs that define the properties of the object. See below
	Fields PipelineDefinitionPipelineObjectFieldArrayInput `pulumi:"fields"`
	// ID of the parameter value.
	Id pulumi.StringInput `pulumi:"id"`
	// ARN of the storage connector.
	Name pulumi.StringInput `pulumi:"name"`
}

func (PipelineDefinitionPipelineObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDefinitionPipelineObject)(nil)).Elem()
}

func (i PipelineDefinitionPipelineObjectArgs) ToPipelineDefinitionPipelineObjectOutput() PipelineDefinitionPipelineObjectOutput {
	return i.ToPipelineDefinitionPipelineObjectOutputWithContext(context.Background())
}

func (i PipelineDefinitionPipelineObjectArgs) ToPipelineDefinitionPipelineObjectOutputWithContext(ctx context.Context) PipelineDefinitionPipelineObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDefinitionPipelineObjectOutput)
}

// PipelineDefinitionPipelineObjectArrayInput is an input type that accepts PipelineDefinitionPipelineObjectArray and PipelineDefinitionPipelineObjectArrayOutput values.
// You can construct a concrete instance of `PipelineDefinitionPipelineObjectArrayInput` via:
//
//          PipelineDefinitionPipelineObjectArray{ PipelineDefinitionPipelineObjectArgs{...} }
type PipelineDefinitionPipelineObjectArrayInput interface {
	pulumi.Input

	ToPipelineDefinitionPipelineObjectArrayOutput() PipelineDefinitionPipelineObjectArrayOutput
	ToPipelineDefinitionPipelineObjectArrayOutputWithContext(context.Context) PipelineDefinitionPipelineObjectArrayOutput
}

type PipelineDefinitionPipelineObjectArray []PipelineDefinitionPipelineObjectInput

func (PipelineDefinitionPipelineObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineDefinitionPipelineObject)(nil)).Elem()
}

func (i PipelineDefinitionPipelineObjectArray) ToPipelineDefinitionPipelineObjectArrayOutput() PipelineDefinitionPipelineObjectArrayOutput {
	return i.ToPipelineDefinitionPipelineObjectArrayOutputWithContext(context.Background())
}

func (i PipelineDefinitionPipelineObjectArray) ToPipelineDefinitionPipelineObjectArrayOutputWithContext(ctx context.Context) PipelineDefinitionPipelineObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDefinitionPipelineObjectArrayOutput)
}

type PipelineDefinitionPipelineObjectOutput struct{ *pulumi.OutputState }

func (PipelineDefinitionPipelineObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDefinitionPipelineObject)(nil)).Elem()
}

func (o PipelineDefinitionPipelineObjectOutput) ToPipelineDefinitionPipelineObjectOutput() PipelineDefinitionPipelineObjectOutput {
	return o
}

func (o PipelineDefinitionPipelineObjectOutput) ToPipelineDefinitionPipelineObjectOutputWithContext(ctx context.Context) PipelineDefinitionPipelineObjectOutput {
	return o
}

// Configuration block for Key-value pairs that define the properties of the object. See below
func (o PipelineDefinitionPipelineObjectOutput) Fields() PipelineDefinitionPipelineObjectFieldArrayOutput {
	return o.ApplyT(func(v PipelineDefinitionPipelineObject) []PipelineDefinitionPipelineObjectField { return v.Fields }).(PipelineDefinitionPipelineObjectFieldArrayOutput)
}

// ID of the parameter value.
func (o PipelineDefinitionPipelineObjectOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineDefinitionPipelineObject) string { return v.Id }).(pulumi.StringOutput)
}

// ARN of the storage connector.
func (o PipelineDefinitionPipelineObjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineDefinitionPipelineObject) string { return v.Name }).(pulumi.StringOutput)
}

type PipelineDefinitionPipelineObjectArrayOutput struct{ *pulumi.OutputState }

func (PipelineDefinitionPipelineObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineDefinitionPipelineObject)(nil)).Elem()
}

func (o PipelineDefinitionPipelineObjectArrayOutput) ToPipelineDefinitionPipelineObjectArrayOutput() PipelineDefinitionPipelineObjectArrayOutput {
	return o
}

func (o PipelineDefinitionPipelineObjectArrayOutput) ToPipelineDefinitionPipelineObjectArrayOutputWithContext(ctx context.Context) PipelineDefinitionPipelineObjectArrayOutput {
	return o
}

func (o PipelineDefinitionPipelineObjectArrayOutput) Index(i pulumi.IntInput) PipelineDefinitionPipelineObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineDefinitionPipelineObject {
		return vs[0].([]PipelineDefinitionPipelineObject)[vs[1].(int)]
	}).(PipelineDefinitionPipelineObjectOutput)
}

type PipelineDefinitionPipelineObjectField struct {
	// Field identifier.
	Key string `pulumi:"key"`
	// Field value, expressed as the identifier of another object
	RefValue *string `pulumi:"refValue"`
	// Field value, expressed as a String.
	StringValue *string `pulumi:"stringValue"`
}

// PipelineDefinitionPipelineObjectFieldInput is an input type that accepts PipelineDefinitionPipelineObjectFieldArgs and PipelineDefinitionPipelineObjectFieldOutput values.
// You can construct a concrete instance of `PipelineDefinitionPipelineObjectFieldInput` via:
//
//          PipelineDefinitionPipelineObjectFieldArgs{...}
type PipelineDefinitionPipelineObjectFieldInput interface {
	pulumi.Input

	ToPipelineDefinitionPipelineObjectFieldOutput() PipelineDefinitionPipelineObjectFieldOutput
	ToPipelineDefinitionPipelineObjectFieldOutputWithContext(context.Context) PipelineDefinitionPipelineObjectFieldOutput
}

type PipelineDefinitionPipelineObjectFieldArgs struct {
	// Field identifier.
	Key pulumi.StringInput `pulumi:"key"`
	// Field value, expressed as the identifier of another object
	RefValue pulumi.StringPtrInput `pulumi:"refValue"`
	// Field value, expressed as a String.
	StringValue pulumi.StringPtrInput `pulumi:"stringValue"`
}

func (PipelineDefinitionPipelineObjectFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDefinitionPipelineObjectField)(nil)).Elem()
}

func (i PipelineDefinitionPipelineObjectFieldArgs) ToPipelineDefinitionPipelineObjectFieldOutput() PipelineDefinitionPipelineObjectFieldOutput {
	return i.ToPipelineDefinitionPipelineObjectFieldOutputWithContext(context.Background())
}

func (i PipelineDefinitionPipelineObjectFieldArgs) ToPipelineDefinitionPipelineObjectFieldOutputWithContext(ctx context.Context) PipelineDefinitionPipelineObjectFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDefinitionPipelineObjectFieldOutput)
}

// PipelineDefinitionPipelineObjectFieldArrayInput is an input type that accepts PipelineDefinitionPipelineObjectFieldArray and PipelineDefinitionPipelineObjectFieldArrayOutput values.
// You can construct a concrete instance of `PipelineDefinitionPipelineObjectFieldArrayInput` via:
//
//          PipelineDefinitionPipelineObjectFieldArray{ PipelineDefinitionPipelineObjectFieldArgs{...} }
type PipelineDefinitionPipelineObjectFieldArrayInput interface {
	pulumi.Input

	ToPipelineDefinitionPipelineObjectFieldArrayOutput() PipelineDefinitionPipelineObjectFieldArrayOutput
	ToPipelineDefinitionPipelineObjectFieldArrayOutputWithContext(context.Context) PipelineDefinitionPipelineObjectFieldArrayOutput
}

type PipelineDefinitionPipelineObjectFieldArray []PipelineDefinitionPipelineObjectFieldInput

func (PipelineDefinitionPipelineObjectFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineDefinitionPipelineObjectField)(nil)).Elem()
}

func (i PipelineDefinitionPipelineObjectFieldArray) ToPipelineDefinitionPipelineObjectFieldArrayOutput() PipelineDefinitionPipelineObjectFieldArrayOutput {
	return i.ToPipelineDefinitionPipelineObjectFieldArrayOutputWithContext(context.Background())
}

func (i PipelineDefinitionPipelineObjectFieldArray) ToPipelineDefinitionPipelineObjectFieldArrayOutputWithContext(ctx context.Context) PipelineDefinitionPipelineObjectFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PipelineDefinitionPipelineObjectFieldArrayOutput)
}

type PipelineDefinitionPipelineObjectFieldOutput struct{ *pulumi.OutputState }

func (PipelineDefinitionPipelineObjectFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PipelineDefinitionPipelineObjectField)(nil)).Elem()
}

func (o PipelineDefinitionPipelineObjectFieldOutput) ToPipelineDefinitionPipelineObjectFieldOutput() PipelineDefinitionPipelineObjectFieldOutput {
	return o
}

func (o PipelineDefinitionPipelineObjectFieldOutput) ToPipelineDefinitionPipelineObjectFieldOutputWithContext(ctx context.Context) PipelineDefinitionPipelineObjectFieldOutput {
	return o
}

// Field identifier.
func (o PipelineDefinitionPipelineObjectFieldOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v PipelineDefinitionPipelineObjectField) string { return v.Key }).(pulumi.StringOutput)
}

// Field value, expressed as the identifier of another object
func (o PipelineDefinitionPipelineObjectFieldOutput) RefValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineDefinitionPipelineObjectField) *string { return v.RefValue }).(pulumi.StringPtrOutput)
}

// Field value, expressed as a String.
func (o PipelineDefinitionPipelineObjectFieldOutput) StringValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PipelineDefinitionPipelineObjectField) *string { return v.StringValue }).(pulumi.StringPtrOutput)
}

type PipelineDefinitionPipelineObjectFieldArrayOutput struct{ *pulumi.OutputState }

func (PipelineDefinitionPipelineObjectFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PipelineDefinitionPipelineObjectField)(nil)).Elem()
}

func (o PipelineDefinitionPipelineObjectFieldArrayOutput) ToPipelineDefinitionPipelineObjectFieldArrayOutput() PipelineDefinitionPipelineObjectFieldArrayOutput {
	return o
}

func (o PipelineDefinitionPipelineObjectFieldArrayOutput) ToPipelineDefinitionPipelineObjectFieldArrayOutputWithContext(ctx context.Context) PipelineDefinitionPipelineObjectFieldArrayOutput {
	return o
}

func (o PipelineDefinitionPipelineObjectFieldArrayOutput) Index(i pulumi.IntInput) PipelineDefinitionPipelineObjectFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PipelineDefinitionPipelineObjectField {
		return vs[0].([]PipelineDefinitionPipelineObjectField)[vs[1].(int)]
	}).(PipelineDefinitionPipelineObjectFieldOutput)
}

type GetPipelineDefinitionParameterObject struct {
	Attributes []GetPipelineDefinitionParameterObjectAttribute `pulumi:"attributes"`
	// ID of the object.
	Id string `pulumi:"id"`
}

// GetPipelineDefinitionParameterObjectInput is an input type that accepts GetPipelineDefinitionParameterObjectArgs and GetPipelineDefinitionParameterObjectOutput values.
// You can construct a concrete instance of `GetPipelineDefinitionParameterObjectInput` via:
//
//          GetPipelineDefinitionParameterObjectArgs{...}
type GetPipelineDefinitionParameterObjectInput interface {
	pulumi.Input

	ToGetPipelineDefinitionParameterObjectOutput() GetPipelineDefinitionParameterObjectOutput
	ToGetPipelineDefinitionParameterObjectOutputWithContext(context.Context) GetPipelineDefinitionParameterObjectOutput
}

type GetPipelineDefinitionParameterObjectArgs struct {
	Attributes GetPipelineDefinitionParameterObjectAttributeArrayInput `pulumi:"attributes"`
	// ID of the object.
	Id pulumi.StringInput `pulumi:"id"`
}

func (GetPipelineDefinitionParameterObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineDefinitionParameterObject)(nil)).Elem()
}

func (i GetPipelineDefinitionParameterObjectArgs) ToGetPipelineDefinitionParameterObjectOutput() GetPipelineDefinitionParameterObjectOutput {
	return i.ToGetPipelineDefinitionParameterObjectOutputWithContext(context.Background())
}

func (i GetPipelineDefinitionParameterObjectArgs) ToGetPipelineDefinitionParameterObjectOutputWithContext(ctx context.Context) GetPipelineDefinitionParameterObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineDefinitionParameterObjectOutput)
}

// GetPipelineDefinitionParameterObjectArrayInput is an input type that accepts GetPipelineDefinitionParameterObjectArray and GetPipelineDefinitionParameterObjectArrayOutput values.
// You can construct a concrete instance of `GetPipelineDefinitionParameterObjectArrayInput` via:
//
//          GetPipelineDefinitionParameterObjectArray{ GetPipelineDefinitionParameterObjectArgs{...} }
type GetPipelineDefinitionParameterObjectArrayInput interface {
	pulumi.Input

	ToGetPipelineDefinitionParameterObjectArrayOutput() GetPipelineDefinitionParameterObjectArrayOutput
	ToGetPipelineDefinitionParameterObjectArrayOutputWithContext(context.Context) GetPipelineDefinitionParameterObjectArrayOutput
}

type GetPipelineDefinitionParameterObjectArray []GetPipelineDefinitionParameterObjectInput

func (GetPipelineDefinitionParameterObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPipelineDefinitionParameterObject)(nil)).Elem()
}

func (i GetPipelineDefinitionParameterObjectArray) ToGetPipelineDefinitionParameterObjectArrayOutput() GetPipelineDefinitionParameterObjectArrayOutput {
	return i.ToGetPipelineDefinitionParameterObjectArrayOutputWithContext(context.Background())
}

func (i GetPipelineDefinitionParameterObjectArray) ToGetPipelineDefinitionParameterObjectArrayOutputWithContext(ctx context.Context) GetPipelineDefinitionParameterObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineDefinitionParameterObjectArrayOutput)
}

type GetPipelineDefinitionParameterObjectOutput struct{ *pulumi.OutputState }

func (GetPipelineDefinitionParameterObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineDefinitionParameterObject)(nil)).Elem()
}

func (o GetPipelineDefinitionParameterObjectOutput) ToGetPipelineDefinitionParameterObjectOutput() GetPipelineDefinitionParameterObjectOutput {
	return o
}

func (o GetPipelineDefinitionParameterObjectOutput) ToGetPipelineDefinitionParameterObjectOutputWithContext(ctx context.Context) GetPipelineDefinitionParameterObjectOutput {
	return o
}

func (o GetPipelineDefinitionParameterObjectOutput) Attributes() GetPipelineDefinitionParameterObjectAttributeArrayOutput {
	return o.ApplyT(func(v GetPipelineDefinitionParameterObject) []GetPipelineDefinitionParameterObjectAttribute {
		return v.Attributes
	}).(GetPipelineDefinitionParameterObjectAttributeArrayOutput)
}

// ID of the object.
func (o GetPipelineDefinitionParameterObjectOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineDefinitionParameterObject) string { return v.Id }).(pulumi.StringOutput)
}

type GetPipelineDefinitionParameterObjectArrayOutput struct{ *pulumi.OutputState }

func (GetPipelineDefinitionParameterObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPipelineDefinitionParameterObject)(nil)).Elem()
}

func (o GetPipelineDefinitionParameterObjectArrayOutput) ToGetPipelineDefinitionParameterObjectArrayOutput() GetPipelineDefinitionParameterObjectArrayOutput {
	return o
}

func (o GetPipelineDefinitionParameterObjectArrayOutput) ToGetPipelineDefinitionParameterObjectArrayOutputWithContext(ctx context.Context) GetPipelineDefinitionParameterObjectArrayOutput {
	return o
}

func (o GetPipelineDefinitionParameterObjectArrayOutput) Index(i pulumi.IntInput) GetPipelineDefinitionParameterObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPipelineDefinitionParameterObject {
		return vs[0].([]GetPipelineDefinitionParameterObject)[vs[1].(int)]
	}).(GetPipelineDefinitionParameterObjectOutput)
}

type GetPipelineDefinitionParameterObjectAttribute struct {
	// Field identifier.
	Key string `pulumi:"key"`
	// Field value, expressed as a String.
	StringValue string `pulumi:"stringValue"`
}

// GetPipelineDefinitionParameterObjectAttributeInput is an input type that accepts GetPipelineDefinitionParameterObjectAttributeArgs and GetPipelineDefinitionParameterObjectAttributeOutput values.
// You can construct a concrete instance of `GetPipelineDefinitionParameterObjectAttributeInput` via:
//
//          GetPipelineDefinitionParameterObjectAttributeArgs{...}
type GetPipelineDefinitionParameterObjectAttributeInput interface {
	pulumi.Input

	ToGetPipelineDefinitionParameterObjectAttributeOutput() GetPipelineDefinitionParameterObjectAttributeOutput
	ToGetPipelineDefinitionParameterObjectAttributeOutputWithContext(context.Context) GetPipelineDefinitionParameterObjectAttributeOutput
}

type GetPipelineDefinitionParameterObjectAttributeArgs struct {
	// Field identifier.
	Key pulumi.StringInput `pulumi:"key"`
	// Field value, expressed as a String.
	StringValue pulumi.StringInput `pulumi:"stringValue"`
}

func (GetPipelineDefinitionParameterObjectAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineDefinitionParameterObjectAttribute)(nil)).Elem()
}

func (i GetPipelineDefinitionParameterObjectAttributeArgs) ToGetPipelineDefinitionParameterObjectAttributeOutput() GetPipelineDefinitionParameterObjectAttributeOutput {
	return i.ToGetPipelineDefinitionParameterObjectAttributeOutputWithContext(context.Background())
}

func (i GetPipelineDefinitionParameterObjectAttributeArgs) ToGetPipelineDefinitionParameterObjectAttributeOutputWithContext(ctx context.Context) GetPipelineDefinitionParameterObjectAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineDefinitionParameterObjectAttributeOutput)
}

// GetPipelineDefinitionParameterObjectAttributeArrayInput is an input type that accepts GetPipelineDefinitionParameterObjectAttributeArray and GetPipelineDefinitionParameterObjectAttributeArrayOutput values.
// You can construct a concrete instance of `GetPipelineDefinitionParameterObjectAttributeArrayInput` via:
//
//          GetPipelineDefinitionParameterObjectAttributeArray{ GetPipelineDefinitionParameterObjectAttributeArgs{...} }
type GetPipelineDefinitionParameterObjectAttributeArrayInput interface {
	pulumi.Input

	ToGetPipelineDefinitionParameterObjectAttributeArrayOutput() GetPipelineDefinitionParameterObjectAttributeArrayOutput
	ToGetPipelineDefinitionParameterObjectAttributeArrayOutputWithContext(context.Context) GetPipelineDefinitionParameterObjectAttributeArrayOutput
}

type GetPipelineDefinitionParameterObjectAttributeArray []GetPipelineDefinitionParameterObjectAttributeInput

func (GetPipelineDefinitionParameterObjectAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPipelineDefinitionParameterObjectAttribute)(nil)).Elem()
}

func (i GetPipelineDefinitionParameterObjectAttributeArray) ToGetPipelineDefinitionParameterObjectAttributeArrayOutput() GetPipelineDefinitionParameterObjectAttributeArrayOutput {
	return i.ToGetPipelineDefinitionParameterObjectAttributeArrayOutputWithContext(context.Background())
}

func (i GetPipelineDefinitionParameterObjectAttributeArray) ToGetPipelineDefinitionParameterObjectAttributeArrayOutputWithContext(ctx context.Context) GetPipelineDefinitionParameterObjectAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineDefinitionParameterObjectAttributeArrayOutput)
}

type GetPipelineDefinitionParameterObjectAttributeOutput struct{ *pulumi.OutputState }

func (GetPipelineDefinitionParameterObjectAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineDefinitionParameterObjectAttribute)(nil)).Elem()
}

func (o GetPipelineDefinitionParameterObjectAttributeOutput) ToGetPipelineDefinitionParameterObjectAttributeOutput() GetPipelineDefinitionParameterObjectAttributeOutput {
	return o
}

func (o GetPipelineDefinitionParameterObjectAttributeOutput) ToGetPipelineDefinitionParameterObjectAttributeOutputWithContext(ctx context.Context) GetPipelineDefinitionParameterObjectAttributeOutput {
	return o
}

// Field identifier.
func (o GetPipelineDefinitionParameterObjectAttributeOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineDefinitionParameterObjectAttribute) string { return v.Key }).(pulumi.StringOutput)
}

// Field value, expressed as a String.
func (o GetPipelineDefinitionParameterObjectAttributeOutput) StringValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineDefinitionParameterObjectAttribute) string { return v.StringValue }).(pulumi.StringOutput)
}

type GetPipelineDefinitionParameterObjectAttributeArrayOutput struct{ *pulumi.OutputState }

func (GetPipelineDefinitionParameterObjectAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPipelineDefinitionParameterObjectAttribute)(nil)).Elem()
}

func (o GetPipelineDefinitionParameterObjectAttributeArrayOutput) ToGetPipelineDefinitionParameterObjectAttributeArrayOutput() GetPipelineDefinitionParameterObjectAttributeArrayOutput {
	return o
}

func (o GetPipelineDefinitionParameterObjectAttributeArrayOutput) ToGetPipelineDefinitionParameterObjectAttributeArrayOutputWithContext(ctx context.Context) GetPipelineDefinitionParameterObjectAttributeArrayOutput {
	return o
}

func (o GetPipelineDefinitionParameterObjectAttributeArrayOutput) Index(i pulumi.IntInput) GetPipelineDefinitionParameterObjectAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPipelineDefinitionParameterObjectAttribute {
		return vs[0].([]GetPipelineDefinitionParameterObjectAttribute)[vs[1].(int)]
	}).(GetPipelineDefinitionParameterObjectAttributeOutput)
}

type GetPipelineDefinitionParameterValue struct {
	// ID of the object.
	Id string `pulumi:"id"`
	// Field value, expressed as a String.
	StringValue string `pulumi:"stringValue"`
}

// GetPipelineDefinitionParameterValueInput is an input type that accepts GetPipelineDefinitionParameterValueArgs and GetPipelineDefinitionParameterValueOutput values.
// You can construct a concrete instance of `GetPipelineDefinitionParameterValueInput` via:
//
//          GetPipelineDefinitionParameterValueArgs{...}
type GetPipelineDefinitionParameterValueInput interface {
	pulumi.Input

	ToGetPipelineDefinitionParameterValueOutput() GetPipelineDefinitionParameterValueOutput
	ToGetPipelineDefinitionParameterValueOutputWithContext(context.Context) GetPipelineDefinitionParameterValueOutput
}

type GetPipelineDefinitionParameterValueArgs struct {
	// ID of the object.
	Id pulumi.StringInput `pulumi:"id"`
	// Field value, expressed as a String.
	StringValue pulumi.StringInput `pulumi:"stringValue"`
}

func (GetPipelineDefinitionParameterValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineDefinitionParameterValue)(nil)).Elem()
}

func (i GetPipelineDefinitionParameterValueArgs) ToGetPipelineDefinitionParameterValueOutput() GetPipelineDefinitionParameterValueOutput {
	return i.ToGetPipelineDefinitionParameterValueOutputWithContext(context.Background())
}

func (i GetPipelineDefinitionParameterValueArgs) ToGetPipelineDefinitionParameterValueOutputWithContext(ctx context.Context) GetPipelineDefinitionParameterValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineDefinitionParameterValueOutput)
}

// GetPipelineDefinitionParameterValueArrayInput is an input type that accepts GetPipelineDefinitionParameterValueArray and GetPipelineDefinitionParameterValueArrayOutput values.
// You can construct a concrete instance of `GetPipelineDefinitionParameterValueArrayInput` via:
//
//          GetPipelineDefinitionParameterValueArray{ GetPipelineDefinitionParameterValueArgs{...} }
type GetPipelineDefinitionParameterValueArrayInput interface {
	pulumi.Input

	ToGetPipelineDefinitionParameterValueArrayOutput() GetPipelineDefinitionParameterValueArrayOutput
	ToGetPipelineDefinitionParameterValueArrayOutputWithContext(context.Context) GetPipelineDefinitionParameterValueArrayOutput
}

type GetPipelineDefinitionParameterValueArray []GetPipelineDefinitionParameterValueInput

func (GetPipelineDefinitionParameterValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPipelineDefinitionParameterValue)(nil)).Elem()
}

func (i GetPipelineDefinitionParameterValueArray) ToGetPipelineDefinitionParameterValueArrayOutput() GetPipelineDefinitionParameterValueArrayOutput {
	return i.ToGetPipelineDefinitionParameterValueArrayOutputWithContext(context.Background())
}

func (i GetPipelineDefinitionParameterValueArray) ToGetPipelineDefinitionParameterValueArrayOutputWithContext(ctx context.Context) GetPipelineDefinitionParameterValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineDefinitionParameterValueArrayOutput)
}

type GetPipelineDefinitionParameterValueOutput struct{ *pulumi.OutputState }

func (GetPipelineDefinitionParameterValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineDefinitionParameterValue)(nil)).Elem()
}

func (o GetPipelineDefinitionParameterValueOutput) ToGetPipelineDefinitionParameterValueOutput() GetPipelineDefinitionParameterValueOutput {
	return o
}

func (o GetPipelineDefinitionParameterValueOutput) ToGetPipelineDefinitionParameterValueOutputWithContext(ctx context.Context) GetPipelineDefinitionParameterValueOutput {
	return o
}

// ID of the object.
func (o GetPipelineDefinitionParameterValueOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineDefinitionParameterValue) string { return v.Id }).(pulumi.StringOutput)
}

// Field value, expressed as a String.
func (o GetPipelineDefinitionParameterValueOutput) StringValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineDefinitionParameterValue) string { return v.StringValue }).(pulumi.StringOutput)
}

type GetPipelineDefinitionParameterValueArrayOutput struct{ *pulumi.OutputState }

func (GetPipelineDefinitionParameterValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPipelineDefinitionParameterValue)(nil)).Elem()
}

func (o GetPipelineDefinitionParameterValueArrayOutput) ToGetPipelineDefinitionParameterValueArrayOutput() GetPipelineDefinitionParameterValueArrayOutput {
	return o
}

func (o GetPipelineDefinitionParameterValueArrayOutput) ToGetPipelineDefinitionParameterValueArrayOutputWithContext(ctx context.Context) GetPipelineDefinitionParameterValueArrayOutput {
	return o
}

func (o GetPipelineDefinitionParameterValueArrayOutput) Index(i pulumi.IntInput) GetPipelineDefinitionParameterValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPipelineDefinitionParameterValue {
		return vs[0].([]GetPipelineDefinitionParameterValue)[vs[1].(int)]
	}).(GetPipelineDefinitionParameterValueOutput)
}

type GetPipelineDefinitionPipelineObject struct {
	// Key-value pairs that define the properties of the object. See below
	Fields []GetPipelineDefinitionPipelineObjectField `pulumi:"fields"`
	// ID of the object.
	Id string `pulumi:"id"`
	// ARN of the storage connector.
	Name string `pulumi:"name"`
}

// GetPipelineDefinitionPipelineObjectInput is an input type that accepts GetPipelineDefinitionPipelineObjectArgs and GetPipelineDefinitionPipelineObjectOutput values.
// You can construct a concrete instance of `GetPipelineDefinitionPipelineObjectInput` via:
//
//          GetPipelineDefinitionPipelineObjectArgs{...}
type GetPipelineDefinitionPipelineObjectInput interface {
	pulumi.Input

	ToGetPipelineDefinitionPipelineObjectOutput() GetPipelineDefinitionPipelineObjectOutput
	ToGetPipelineDefinitionPipelineObjectOutputWithContext(context.Context) GetPipelineDefinitionPipelineObjectOutput
}

type GetPipelineDefinitionPipelineObjectArgs struct {
	// Key-value pairs that define the properties of the object. See below
	Fields GetPipelineDefinitionPipelineObjectFieldArrayInput `pulumi:"fields"`
	// ID of the object.
	Id pulumi.StringInput `pulumi:"id"`
	// ARN of the storage connector.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetPipelineDefinitionPipelineObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineDefinitionPipelineObject)(nil)).Elem()
}

func (i GetPipelineDefinitionPipelineObjectArgs) ToGetPipelineDefinitionPipelineObjectOutput() GetPipelineDefinitionPipelineObjectOutput {
	return i.ToGetPipelineDefinitionPipelineObjectOutputWithContext(context.Background())
}

func (i GetPipelineDefinitionPipelineObjectArgs) ToGetPipelineDefinitionPipelineObjectOutputWithContext(ctx context.Context) GetPipelineDefinitionPipelineObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineDefinitionPipelineObjectOutput)
}

// GetPipelineDefinitionPipelineObjectArrayInput is an input type that accepts GetPipelineDefinitionPipelineObjectArray and GetPipelineDefinitionPipelineObjectArrayOutput values.
// You can construct a concrete instance of `GetPipelineDefinitionPipelineObjectArrayInput` via:
//
//          GetPipelineDefinitionPipelineObjectArray{ GetPipelineDefinitionPipelineObjectArgs{...} }
type GetPipelineDefinitionPipelineObjectArrayInput interface {
	pulumi.Input

	ToGetPipelineDefinitionPipelineObjectArrayOutput() GetPipelineDefinitionPipelineObjectArrayOutput
	ToGetPipelineDefinitionPipelineObjectArrayOutputWithContext(context.Context) GetPipelineDefinitionPipelineObjectArrayOutput
}

type GetPipelineDefinitionPipelineObjectArray []GetPipelineDefinitionPipelineObjectInput

func (GetPipelineDefinitionPipelineObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPipelineDefinitionPipelineObject)(nil)).Elem()
}

func (i GetPipelineDefinitionPipelineObjectArray) ToGetPipelineDefinitionPipelineObjectArrayOutput() GetPipelineDefinitionPipelineObjectArrayOutput {
	return i.ToGetPipelineDefinitionPipelineObjectArrayOutputWithContext(context.Background())
}

func (i GetPipelineDefinitionPipelineObjectArray) ToGetPipelineDefinitionPipelineObjectArrayOutputWithContext(ctx context.Context) GetPipelineDefinitionPipelineObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineDefinitionPipelineObjectArrayOutput)
}

type GetPipelineDefinitionPipelineObjectOutput struct{ *pulumi.OutputState }

func (GetPipelineDefinitionPipelineObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineDefinitionPipelineObject)(nil)).Elem()
}

func (o GetPipelineDefinitionPipelineObjectOutput) ToGetPipelineDefinitionPipelineObjectOutput() GetPipelineDefinitionPipelineObjectOutput {
	return o
}

func (o GetPipelineDefinitionPipelineObjectOutput) ToGetPipelineDefinitionPipelineObjectOutputWithContext(ctx context.Context) GetPipelineDefinitionPipelineObjectOutput {
	return o
}

// Key-value pairs that define the properties of the object. See below
func (o GetPipelineDefinitionPipelineObjectOutput) Fields() GetPipelineDefinitionPipelineObjectFieldArrayOutput {
	return o.ApplyT(func(v GetPipelineDefinitionPipelineObject) []GetPipelineDefinitionPipelineObjectField {
		return v.Fields
	}).(GetPipelineDefinitionPipelineObjectFieldArrayOutput)
}

// ID of the object.
func (o GetPipelineDefinitionPipelineObjectOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineDefinitionPipelineObject) string { return v.Id }).(pulumi.StringOutput)
}

// ARN of the storage connector.
func (o GetPipelineDefinitionPipelineObjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineDefinitionPipelineObject) string { return v.Name }).(pulumi.StringOutput)
}

type GetPipelineDefinitionPipelineObjectArrayOutput struct{ *pulumi.OutputState }

func (GetPipelineDefinitionPipelineObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPipelineDefinitionPipelineObject)(nil)).Elem()
}

func (o GetPipelineDefinitionPipelineObjectArrayOutput) ToGetPipelineDefinitionPipelineObjectArrayOutput() GetPipelineDefinitionPipelineObjectArrayOutput {
	return o
}

func (o GetPipelineDefinitionPipelineObjectArrayOutput) ToGetPipelineDefinitionPipelineObjectArrayOutputWithContext(ctx context.Context) GetPipelineDefinitionPipelineObjectArrayOutput {
	return o
}

func (o GetPipelineDefinitionPipelineObjectArrayOutput) Index(i pulumi.IntInput) GetPipelineDefinitionPipelineObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPipelineDefinitionPipelineObject {
		return vs[0].([]GetPipelineDefinitionPipelineObject)[vs[1].(int)]
	}).(GetPipelineDefinitionPipelineObjectOutput)
}

type GetPipelineDefinitionPipelineObjectField struct {
	// Field identifier.
	Key string `pulumi:"key"`
	// Field value, expressed as the identifier of another object
	RefValue string `pulumi:"refValue"`
	// Field value, expressed as a String.
	StringValue string `pulumi:"stringValue"`
}

// GetPipelineDefinitionPipelineObjectFieldInput is an input type that accepts GetPipelineDefinitionPipelineObjectFieldArgs and GetPipelineDefinitionPipelineObjectFieldOutput values.
// You can construct a concrete instance of `GetPipelineDefinitionPipelineObjectFieldInput` via:
//
//          GetPipelineDefinitionPipelineObjectFieldArgs{...}
type GetPipelineDefinitionPipelineObjectFieldInput interface {
	pulumi.Input

	ToGetPipelineDefinitionPipelineObjectFieldOutput() GetPipelineDefinitionPipelineObjectFieldOutput
	ToGetPipelineDefinitionPipelineObjectFieldOutputWithContext(context.Context) GetPipelineDefinitionPipelineObjectFieldOutput
}

type GetPipelineDefinitionPipelineObjectFieldArgs struct {
	// Field identifier.
	Key pulumi.StringInput `pulumi:"key"`
	// Field value, expressed as the identifier of another object
	RefValue pulumi.StringInput `pulumi:"refValue"`
	// Field value, expressed as a String.
	StringValue pulumi.StringInput `pulumi:"stringValue"`
}

func (GetPipelineDefinitionPipelineObjectFieldArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineDefinitionPipelineObjectField)(nil)).Elem()
}

func (i GetPipelineDefinitionPipelineObjectFieldArgs) ToGetPipelineDefinitionPipelineObjectFieldOutput() GetPipelineDefinitionPipelineObjectFieldOutput {
	return i.ToGetPipelineDefinitionPipelineObjectFieldOutputWithContext(context.Background())
}

func (i GetPipelineDefinitionPipelineObjectFieldArgs) ToGetPipelineDefinitionPipelineObjectFieldOutputWithContext(ctx context.Context) GetPipelineDefinitionPipelineObjectFieldOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineDefinitionPipelineObjectFieldOutput)
}

// GetPipelineDefinitionPipelineObjectFieldArrayInput is an input type that accepts GetPipelineDefinitionPipelineObjectFieldArray and GetPipelineDefinitionPipelineObjectFieldArrayOutput values.
// You can construct a concrete instance of `GetPipelineDefinitionPipelineObjectFieldArrayInput` via:
//
//          GetPipelineDefinitionPipelineObjectFieldArray{ GetPipelineDefinitionPipelineObjectFieldArgs{...} }
type GetPipelineDefinitionPipelineObjectFieldArrayInput interface {
	pulumi.Input

	ToGetPipelineDefinitionPipelineObjectFieldArrayOutput() GetPipelineDefinitionPipelineObjectFieldArrayOutput
	ToGetPipelineDefinitionPipelineObjectFieldArrayOutputWithContext(context.Context) GetPipelineDefinitionPipelineObjectFieldArrayOutput
}

type GetPipelineDefinitionPipelineObjectFieldArray []GetPipelineDefinitionPipelineObjectFieldInput

func (GetPipelineDefinitionPipelineObjectFieldArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPipelineDefinitionPipelineObjectField)(nil)).Elem()
}

func (i GetPipelineDefinitionPipelineObjectFieldArray) ToGetPipelineDefinitionPipelineObjectFieldArrayOutput() GetPipelineDefinitionPipelineObjectFieldArrayOutput {
	return i.ToGetPipelineDefinitionPipelineObjectFieldArrayOutputWithContext(context.Background())
}

func (i GetPipelineDefinitionPipelineObjectFieldArray) ToGetPipelineDefinitionPipelineObjectFieldArrayOutputWithContext(ctx context.Context) GetPipelineDefinitionPipelineObjectFieldArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPipelineDefinitionPipelineObjectFieldArrayOutput)
}

type GetPipelineDefinitionPipelineObjectFieldOutput struct{ *pulumi.OutputState }

func (GetPipelineDefinitionPipelineObjectFieldOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPipelineDefinitionPipelineObjectField)(nil)).Elem()
}

func (o GetPipelineDefinitionPipelineObjectFieldOutput) ToGetPipelineDefinitionPipelineObjectFieldOutput() GetPipelineDefinitionPipelineObjectFieldOutput {
	return o
}

func (o GetPipelineDefinitionPipelineObjectFieldOutput) ToGetPipelineDefinitionPipelineObjectFieldOutputWithContext(ctx context.Context) GetPipelineDefinitionPipelineObjectFieldOutput {
	return o
}

// Field identifier.
func (o GetPipelineDefinitionPipelineObjectFieldOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineDefinitionPipelineObjectField) string { return v.Key }).(pulumi.StringOutput)
}

// Field value, expressed as the identifier of another object
func (o GetPipelineDefinitionPipelineObjectFieldOutput) RefValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineDefinitionPipelineObjectField) string { return v.RefValue }).(pulumi.StringOutput)
}

// Field value, expressed as a String.
func (o GetPipelineDefinitionPipelineObjectFieldOutput) StringValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetPipelineDefinitionPipelineObjectField) string { return v.StringValue }).(pulumi.StringOutput)
}

type GetPipelineDefinitionPipelineObjectFieldArrayOutput struct{ *pulumi.OutputState }

func (GetPipelineDefinitionPipelineObjectFieldArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPipelineDefinitionPipelineObjectField)(nil)).Elem()
}

func (o GetPipelineDefinitionPipelineObjectFieldArrayOutput) ToGetPipelineDefinitionPipelineObjectFieldArrayOutput() GetPipelineDefinitionPipelineObjectFieldArrayOutput {
	return o
}

func (o GetPipelineDefinitionPipelineObjectFieldArrayOutput) ToGetPipelineDefinitionPipelineObjectFieldArrayOutputWithContext(ctx context.Context) GetPipelineDefinitionPipelineObjectFieldArrayOutput {
	return o
}

func (o GetPipelineDefinitionPipelineObjectFieldArrayOutput) Index(i pulumi.IntInput) GetPipelineDefinitionPipelineObjectFieldOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPipelineDefinitionPipelineObjectField {
		return vs[0].([]GetPipelineDefinitionPipelineObjectField)[vs[1].(int)]
	}).(GetPipelineDefinitionPipelineObjectFieldOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineDefinitionParameterObjectInput)(nil)).Elem(), PipelineDefinitionParameterObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineDefinitionParameterObjectArrayInput)(nil)).Elem(), PipelineDefinitionParameterObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineDefinitionParameterObjectAttributeInput)(nil)).Elem(), PipelineDefinitionParameterObjectAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineDefinitionParameterObjectAttributeArrayInput)(nil)).Elem(), PipelineDefinitionParameterObjectAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineDefinitionParameterValueInput)(nil)).Elem(), PipelineDefinitionParameterValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineDefinitionParameterValueArrayInput)(nil)).Elem(), PipelineDefinitionParameterValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineDefinitionPipelineObjectInput)(nil)).Elem(), PipelineDefinitionPipelineObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineDefinitionPipelineObjectArrayInput)(nil)).Elem(), PipelineDefinitionPipelineObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineDefinitionPipelineObjectFieldInput)(nil)).Elem(), PipelineDefinitionPipelineObjectFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PipelineDefinitionPipelineObjectFieldArrayInput)(nil)).Elem(), PipelineDefinitionPipelineObjectFieldArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPipelineDefinitionParameterObjectInput)(nil)).Elem(), GetPipelineDefinitionParameterObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPipelineDefinitionParameterObjectArrayInput)(nil)).Elem(), GetPipelineDefinitionParameterObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPipelineDefinitionParameterObjectAttributeInput)(nil)).Elem(), GetPipelineDefinitionParameterObjectAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPipelineDefinitionParameterObjectAttributeArrayInput)(nil)).Elem(), GetPipelineDefinitionParameterObjectAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPipelineDefinitionParameterValueInput)(nil)).Elem(), GetPipelineDefinitionParameterValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPipelineDefinitionParameterValueArrayInput)(nil)).Elem(), GetPipelineDefinitionParameterValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPipelineDefinitionPipelineObjectInput)(nil)).Elem(), GetPipelineDefinitionPipelineObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPipelineDefinitionPipelineObjectArrayInput)(nil)).Elem(), GetPipelineDefinitionPipelineObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPipelineDefinitionPipelineObjectFieldInput)(nil)).Elem(), GetPipelineDefinitionPipelineObjectFieldArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPipelineDefinitionPipelineObjectFieldArrayInput)(nil)).Elem(), GetPipelineDefinitionPipelineObjectFieldArray{})
	pulumi.RegisterOutputType(PipelineDefinitionParameterObjectOutput{})
	pulumi.RegisterOutputType(PipelineDefinitionParameterObjectArrayOutput{})
	pulumi.RegisterOutputType(PipelineDefinitionParameterObjectAttributeOutput{})
	pulumi.RegisterOutputType(PipelineDefinitionParameterObjectAttributeArrayOutput{})
	pulumi.RegisterOutputType(PipelineDefinitionParameterValueOutput{})
	pulumi.RegisterOutputType(PipelineDefinitionParameterValueArrayOutput{})
	pulumi.RegisterOutputType(PipelineDefinitionPipelineObjectOutput{})
	pulumi.RegisterOutputType(PipelineDefinitionPipelineObjectArrayOutput{})
	pulumi.RegisterOutputType(PipelineDefinitionPipelineObjectFieldOutput{})
	pulumi.RegisterOutputType(PipelineDefinitionPipelineObjectFieldArrayOutput{})
	pulumi.RegisterOutputType(GetPipelineDefinitionParameterObjectOutput{})
	pulumi.RegisterOutputType(GetPipelineDefinitionParameterObjectArrayOutput{})
	pulumi.RegisterOutputType(GetPipelineDefinitionParameterObjectAttributeOutput{})
	pulumi.RegisterOutputType(GetPipelineDefinitionParameterObjectAttributeArrayOutput{})
	pulumi.RegisterOutputType(GetPipelineDefinitionParameterValueOutput{})
	pulumi.RegisterOutputType(GetPipelineDefinitionParameterValueArrayOutput{})
	pulumi.RegisterOutputType(GetPipelineDefinitionPipelineObjectOutput{})
	pulumi.RegisterOutputType(GetPipelineDefinitionPipelineObjectArrayOutput{})
	pulumi.RegisterOutputType(GetPipelineDefinitionPipelineObjectFieldOutput{})
	pulumi.RegisterOutputType(GetPipelineDefinitionPipelineObjectFieldArrayOutput{})
}
