// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lakeformation

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ResourceLfTags struct {
	pulumi.CustomResourceState

	CatalogId        pulumi.StringOutput                  `pulumi:"catalogId"`
	Database         ResourceLfTagsDatabaseOutput         `pulumi:"database"`
	LfTags           ResourceLfTagsLfTagArrayOutput       `pulumi:"lfTags"`
	Table            ResourceLfTagsTableOutput            `pulumi:"table"`
	TableWithColumns ResourceLfTagsTableWithColumnsOutput `pulumi:"tableWithColumns"`
}

// NewResourceLfTags registers a new resource with the given unique name, arguments, and options.
func NewResourceLfTags(ctx *pulumi.Context,
	name string, args *ResourceLfTagsArgs, opts ...pulumi.ResourceOption) (*ResourceLfTags, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LfTags == nil {
		return nil, errors.New("invalid value for required argument 'LfTags'")
	}
	var resource ResourceLfTags
	err := ctx.RegisterResource("aws:lakeformation/resourceLfTags:ResourceLfTags", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceLfTags gets an existing ResourceLfTags resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceLfTags(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceLfTagsState, opts ...pulumi.ResourceOption) (*ResourceLfTags, error) {
	var resource ResourceLfTags
	err := ctx.ReadResource("aws:lakeformation/resourceLfTags:ResourceLfTags", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceLfTags resources.
type resourceLfTagsState struct {
	CatalogId        *string                         `pulumi:"catalogId"`
	Database         *ResourceLfTagsDatabase         `pulumi:"database"`
	LfTags           []ResourceLfTagsLfTag           `pulumi:"lfTags"`
	Table            *ResourceLfTagsTable            `pulumi:"table"`
	TableWithColumns *ResourceLfTagsTableWithColumns `pulumi:"tableWithColumns"`
}

type ResourceLfTagsState struct {
	CatalogId        pulumi.StringPtrInput
	Database         ResourceLfTagsDatabasePtrInput
	LfTags           ResourceLfTagsLfTagArrayInput
	Table            ResourceLfTagsTablePtrInput
	TableWithColumns ResourceLfTagsTableWithColumnsPtrInput
}

func (ResourceLfTagsState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceLfTagsState)(nil)).Elem()
}

type resourceLfTagsArgs struct {
	CatalogId        *string                         `pulumi:"catalogId"`
	Database         *ResourceLfTagsDatabase         `pulumi:"database"`
	LfTags           []ResourceLfTagsLfTag           `pulumi:"lfTags"`
	Table            *ResourceLfTagsTable            `pulumi:"table"`
	TableWithColumns *ResourceLfTagsTableWithColumns `pulumi:"tableWithColumns"`
}

// The set of arguments for constructing a ResourceLfTags resource.
type ResourceLfTagsArgs struct {
	CatalogId        pulumi.StringPtrInput
	Database         ResourceLfTagsDatabasePtrInput
	LfTags           ResourceLfTagsLfTagArrayInput
	Table            ResourceLfTagsTablePtrInput
	TableWithColumns ResourceLfTagsTableWithColumnsPtrInput
}

func (ResourceLfTagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceLfTagsArgs)(nil)).Elem()
}

type ResourceLfTagsInput interface {
	pulumi.Input

	ToResourceLfTagsOutput() ResourceLfTagsOutput
	ToResourceLfTagsOutputWithContext(ctx context.Context) ResourceLfTagsOutput
}

func (*ResourceLfTags) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceLfTags)(nil)).Elem()
}

func (i *ResourceLfTags) ToResourceLfTagsOutput() ResourceLfTagsOutput {
	return i.ToResourceLfTagsOutputWithContext(context.Background())
}

func (i *ResourceLfTags) ToResourceLfTagsOutputWithContext(ctx context.Context) ResourceLfTagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceLfTagsOutput)
}

// ResourceLfTagsArrayInput is an input type that accepts ResourceLfTagsArray and ResourceLfTagsArrayOutput values.
// You can construct a concrete instance of `ResourceLfTagsArrayInput` via:
//
//	ResourceLfTagsArray{ ResourceLfTagsArgs{...} }
type ResourceLfTagsArrayInput interface {
	pulumi.Input

	ToResourceLfTagsArrayOutput() ResourceLfTagsArrayOutput
	ToResourceLfTagsArrayOutputWithContext(context.Context) ResourceLfTagsArrayOutput
}

type ResourceLfTagsArray []ResourceLfTagsInput

func (ResourceLfTagsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceLfTags)(nil)).Elem()
}

func (i ResourceLfTagsArray) ToResourceLfTagsArrayOutput() ResourceLfTagsArrayOutput {
	return i.ToResourceLfTagsArrayOutputWithContext(context.Background())
}

func (i ResourceLfTagsArray) ToResourceLfTagsArrayOutputWithContext(ctx context.Context) ResourceLfTagsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceLfTagsArrayOutput)
}

// ResourceLfTagsMapInput is an input type that accepts ResourceLfTagsMap and ResourceLfTagsMapOutput values.
// You can construct a concrete instance of `ResourceLfTagsMapInput` via:
//
//	ResourceLfTagsMap{ "key": ResourceLfTagsArgs{...} }
type ResourceLfTagsMapInput interface {
	pulumi.Input

	ToResourceLfTagsMapOutput() ResourceLfTagsMapOutput
	ToResourceLfTagsMapOutputWithContext(context.Context) ResourceLfTagsMapOutput
}

type ResourceLfTagsMap map[string]ResourceLfTagsInput

func (ResourceLfTagsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceLfTags)(nil)).Elem()
}

func (i ResourceLfTagsMap) ToResourceLfTagsMapOutput() ResourceLfTagsMapOutput {
	return i.ToResourceLfTagsMapOutputWithContext(context.Background())
}

func (i ResourceLfTagsMap) ToResourceLfTagsMapOutputWithContext(ctx context.Context) ResourceLfTagsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceLfTagsMapOutput)
}

type ResourceLfTagsOutput struct{ *pulumi.OutputState }

func (ResourceLfTagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceLfTags)(nil)).Elem()
}

func (o ResourceLfTagsOutput) ToResourceLfTagsOutput() ResourceLfTagsOutput {
	return o
}

func (o ResourceLfTagsOutput) ToResourceLfTagsOutputWithContext(ctx context.Context) ResourceLfTagsOutput {
	return o
}

func (o ResourceLfTagsOutput) CatalogId() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceLfTags) pulumi.StringOutput { return v.CatalogId }).(pulumi.StringOutput)
}

func (o ResourceLfTagsOutput) Database() ResourceLfTagsDatabaseOutput {
	return o.ApplyT(func(v *ResourceLfTags) ResourceLfTagsDatabaseOutput { return v.Database }).(ResourceLfTagsDatabaseOutput)
}

func (o ResourceLfTagsOutput) LfTags() ResourceLfTagsLfTagArrayOutput {
	return o.ApplyT(func(v *ResourceLfTags) ResourceLfTagsLfTagArrayOutput { return v.LfTags }).(ResourceLfTagsLfTagArrayOutput)
}

func (o ResourceLfTagsOutput) Table() ResourceLfTagsTableOutput {
	return o.ApplyT(func(v *ResourceLfTags) ResourceLfTagsTableOutput { return v.Table }).(ResourceLfTagsTableOutput)
}

func (o ResourceLfTagsOutput) TableWithColumns() ResourceLfTagsTableWithColumnsOutput {
	return o.ApplyT(func(v *ResourceLfTags) ResourceLfTagsTableWithColumnsOutput { return v.TableWithColumns }).(ResourceLfTagsTableWithColumnsOutput)
}

type ResourceLfTagsArrayOutput struct{ *pulumi.OutputState }

func (ResourceLfTagsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceLfTags)(nil)).Elem()
}

func (o ResourceLfTagsArrayOutput) ToResourceLfTagsArrayOutput() ResourceLfTagsArrayOutput {
	return o
}

func (o ResourceLfTagsArrayOutput) ToResourceLfTagsArrayOutputWithContext(ctx context.Context) ResourceLfTagsArrayOutput {
	return o
}

func (o ResourceLfTagsArrayOutput) Index(i pulumi.IntInput) ResourceLfTagsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ResourceLfTags {
		return vs[0].([]*ResourceLfTags)[vs[1].(int)]
	}).(ResourceLfTagsOutput)
}

type ResourceLfTagsMapOutput struct{ *pulumi.OutputState }

func (ResourceLfTagsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceLfTags)(nil)).Elem()
}

func (o ResourceLfTagsMapOutput) ToResourceLfTagsMapOutput() ResourceLfTagsMapOutput {
	return o
}

func (o ResourceLfTagsMapOutput) ToResourceLfTagsMapOutputWithContext(ctx context.Context) ResourceLfTagsMapOutput {
	return o
}

func (o ResourceLfTagsMapOutput) MapIndex(k pulumi.StringInput) ResourceLfTagsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ResourceLfTags {
		return vs[0].(map[string]*ResourceLfTags)[vs[1].(string)]
	}).(ResourceLfTagsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceLfTagsInput)(nil)).Elem(), &ResourceLfTags{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceLfTagsArrayInput)(nil)).Elem(), ResourceLfTagsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceLfTagsMapInput)(nil)).Elem(), ResourceLfTagsMap{})
	pulumi.RegisterOutputType(ResourceLfTagsOutput{})
	pulumi.RegisterOutputType(ResourceLfTagsArrayOutput{})
	pulumi.RegisterOutputType(ResourceLfTagsMapOutput{})
}
