// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lakeformation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS Lake Formation Opt In.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/lakeformation"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := lakeformation.NewOptIn(ctx, "example", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import Lake Formation Opt In using the `example_id_arg`. For example:
//
// ```sh
// $ pulumi import aws:lakeformation/optIn:OptIn example opt_in-id-12345678
// ```
type OptIn struct {
	pulumi.CustomResourceState

	// Lake Formation condition, which applies to permissions and opt-ins that contain an expression.
	Conditions OptInConditionArrayOutput `pulumi:"conditions"`
	// Last modified date and time of the record.
	LastModified  pulumi.StringOutput `pulumi:"lastModified"`
	LastUpdatedBy pulumi.StringOutput `pulumi:"lastUpdatedBy"`
	// Lake Formation principal. Supported principals are IAM users or IAM roles. See Principal for more details.
	Principals OptInPrincipalArrayOutput `pulumi:"principals"`
	// Structure for the resource. See Resource for more details.
	ResourceDatas OptInResourceDataArrayOutput `pulumi:"resourceDatas"`
}

// NewOptIn registers a new resource with the given unique name, arguments, and options.
func NewOptIn(ctx *pulumi.Context,
	name string, args *OptInArgs, opts ...pulumi.ResourceOption) (*OptIn, error) {
	if args == nil {
		args = &OptInArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OptIn
	err := ctx.RegisterResource("aws:lakeformation/optIn:OptIn", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOptIn gets an existing OptIn resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOptIn(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OptInState, opts ...pulumi.ResourceOption) (*OptIn, error) {
	var resource OptIn
	err := ctx.ReadResource("aws:lakeformation/optIn:OptIn", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OptIn resources.
type optInState struct {
	// Lake Formation condition, which applies to permissions and opt-ins that contain an expression.
	Conditions []OptInCondition `pulumi:"conditions"`
	// Last modified date and time of the record.
	LastModified  *string `pulumi:"lastModified"`
	LastUpdatedBy *string `pulumi:"lastUpdatedBy"`
	// Lake Formation principal. Supported principals are IAM users or IAM roles. See Principal for more details.
	Principals []OptInPrincipal `pulumi:"principals"`
	// Structure for the resource. See Resource for more details.
	ResourceDatas []OptInResourceData `pulumi:"resourceDatas"`
}

type OptInState struct {
	// Lake Formation condition, which applies to permissions and opt-ins that contain an expression.
	Conditions OptInConditionArrayInput
	// Last modified date and time of the record.
	LastModified  pulumi.StringPtrInput
	LastUpdatedBy pulumi.StringPtrInput
	// Lake Formation principal. Supported principals are IAM users or IAM roles. See Principal for more details.
	Principals OptInPrincipalArrayInput
	// Structure for the resource. See Resource for more details.
	ResourceDatas OptInResourceDataArrayInput
}

func (OptInState) ElementType() reflect.Type {
	return reflect.TypeOf((*optInState)(nil)).Elem()
}

type optInArgs struct {
	// Lake Formation condition, which applies to permissions and opt-ins that contain an expression.
	Conditions []OptInCondition `pulumi:"conditions"`
	// Lake Formation principal. Supported principals are IAM users or IAM roles. See Principal for more details.
	Principals []OptInPrincipal `pulumi:"principals"`
	// Structure for the resource. See Resource for more details.
	ResourceDatas []OptInResourceData `pulumi:"resourceDatas"`
}

// The set of arguments for constructing a OptIn resource.
type OptInArgs struct {
	// Lake Formation condition, which applies to permissions and opt-ins that contain an expression.
	Conditions OptInConditionArrayInput
	// Lake Formation principal. Supported principals are IAM users or IAM roles. See Principal for more details.
	Principals OptInPrincipalArrayInput
	// Structure for the resource. See Resource for more details.
	ResourceDatas OptInResourceDataArrayInput
}

func (OptInArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*optInArgs)(nil)).Elem()
}

type OptInInput interface {
	pulumi.Input

	ToOptInOutput() OptInOutput
	ToOptInOutputWithContext(ctx context.Context) OptInOutput
}

func (*OptIn) ElementType() reflect.Type {
	return reflect.TypeOf((**OptIn)(nil)).Elem()
}

func (i *OptIn) ToOptInOutput() OptInOutput {
	return i.ToOptInOutputWithContext(context.Background())
}

func (i *OptIn) ToOptInOutputWithContext(ctx context.Context) OptInOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptInOutput)
}

// OptInArrayInput is an input type that accepts OptInArray and OptInArrayOutput values.
// You can construct a concrete instance of `OptInArrayInput` via:
//
//	OptInArray{ OptInArgs{...} }
type OptInArrayInput interface {
	pulumi.Input

	ToOptInArrayOutput() OptInArrayOutput
	ToOptInArrayOutputWithContext(context.Context) OptInArrayOutput
}

type OptInArray []OptInInput

func (OptInArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OptIn)(nil)).Elem()
}

func (i OptInArray) ToOptInArrayOutput() OptInArrayOutput {
	return i.ToOptInArrayOutputWithContext(context.Background())
}

func (i OptInArray) ToOptInArrayOutputWithContext(ctx context.Context) OptInArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptInArrayOutput)
}

// OptInMapInput is an input type that accepts OptInMap and OptInMapOutput values.
// You can construct a concrete instance of `OptInMapInput` via:
//
//	OptInMap{ "key": OptInArgs{...} }
type OptInMapInput interface {
	pulumi.Input

	ToOptInMapOutput() OptInMapOutput
	ToOptInMapOutputWithContext(context.Context) OptInMapOutput
}

type OptInMap map[string]OptInInput

func (OptInMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OptIn)(nil)).Elem()
}

func (i OptInMap) ToOptInMapOutput() OptInMapOutput {
	return i.ToOptInMapOutputWithContext(context.Background())
}

func (i OptInMap) ToOptInMapOutputWithContext(ctx context.Context) OptInMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptInMapOutput)
}

type OptInOutput struct{ *pulumi.OutputState }

func (OptInOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OptIn)(nil)).Elem()
}

func (o OptInOutput) ToOptInOutput() OptInOutput {
	return o
}

func (o OptInOutput) ToOptInOutputWithContext(ctx context.Context) OptInOutput {
	return o
}

// Lake Formation condition, which applies to permissions and opt-ins that contain an expression.
func (o OptInOutput) Conditions() OptInConditionArrayOutput {
	return o.ApplyT(func(v *OptIn) OptInConditionArrayOutput { return v.Conditions }).(OptInConditionArrayOutput)
}

// Last modified date and time of the record.
func (o OptInOutput) LastModified() pulumi.StringOutput {
	return o.ApplyT(func(v *OptIn) pulumi.StringOutput { return v.LastModified }).(pulumi.StringOutput)
}

func (o OptInOutput) LastUpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v *OptIn) pulumi.StringOutput { return v.LastUpdatedBy }).(pulumi.StringOutput)
}

// Lake Formation principal. Supported principals are IAM users or IAM roles. See Principal for more details.
func (o OptInOutput) Principals() OptInPrincipalArrayOutput {
	return o.ApplyT(func(v *OptIn) OptInPrincipalArrayOutput { return v.Principals }).(OptInPrincipalArrayOutput)
}

// Structure for the resource. See Resource for more details.
func (o OptInOutput) ResourceDatas() OptInResourceDataArrayOutput {
	return o.ApplyT(func(v *OptIn) OptInResourceDataArrayOutput { return v.ResourceDatas }).(OptInResourceDataArrayOutput)
}

type OptInArrayOutput struct{ *pulumi.OutputState }

func (OptInArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OptIn)(nil)).Elem()
}

func (o OptInArrayOutput) ToOptInArrayOutput() OptInArrayOutput {
	return o
}

func (o OptInArrayOutput) ToOptInArrayOutputWithContext(ctx context.Context) OptInArrayOutput {
	return o
}

func (o OptInArrayOutput) Index(i pulumi.IntInput) OptInOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OptIn {
		return vs[0].([]*OptIn)[vs[1].(int)]
	}).(OptInOutput)
}

type OptInMapOutput struct{ *pulumi.OutputState }

func (OptInMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OptIn)(nil)).Elem()
}

func (o OptInMapOutput) ToOptInMapOutput() OptInMapOutput {
	return o
}

func (o OptInMapOutput) ToOptInMapOutputWithContext(ctx context.Context) OptInMapOutput {
	return o
}

func (o OptInMapOutput) MapIndex(k pulumi.StringInput) OptInOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OptIn {
		return vs[0].(map[string]*OptIn)[vs[1].(string)]
	}).(OptInOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OptInInput)(nil)).Elem(), &OptIn{})
	pulumi.RegisterInputType(reflect.TypeOf((*OptInArrayInput)(nil)).Elem(), OptInArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OptInMapInput)(nil)).Elem(), OptInMap{})
	pulumi.RegisterOutputType(OptInOutput{})
	pulumi.RegisterOutputType(OptInArrayOutput{})
	pulumi.RegisterOutputType(OptInMapOutput{})
}
