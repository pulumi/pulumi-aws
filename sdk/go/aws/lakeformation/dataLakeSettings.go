// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lakeformation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataLakeSettings struct {
	pulumi.CustomResourceState

	Admins                           pulumi.StringArrayOutput                                   `pulumi:"admins"`
	CatalogId                        pulumi.StringPtrOutput                                     `pulumi:"catalogId"`
	CreateDatabaseDefaultPermissions DataLakeSettingsCreateDatabaseDefaultPermissionArrayOutput `pulumi:"createDatabaseDefaultPermissions"`
	CreateTableDefaultPermissions    DataLakeSettingsCreateTableDefaultPermissionArrayOutput    `pulumi:"createTableDefaultPermissions"`
	TrustedResourceOwners            pulumi.StringArrayOutput                                   `pulumi:"trustedResourceOwners"`
}

// NewDataLakeSettings registers a new resource with the given unique name, arguments, and options.
func NewDataLakeSettings(ctx *pulumi.Context,
	name string, args *DataLakeSettingsArgs, opts ...pulumi.ResourceOption) (*DataLakeSettings, error) {
	if args == nil {
		args = &DataLakeSettingsArgs{}
	}

	var resource DataLakeSettings
	err := ctx.RegisterResource("aws:lakeformation/dataLakeSettings:DataLakeSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataLakeSettings gets an existing DataLakeSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataLakeSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataLakeSettingsState, opts ...pulumi.ResourceOption) (*DataLakeSettings, error) {
	var resource DataLakeSettings
	err := ctx.ReadResource("aws:lakeformation/dataLakeSettings:DataLakeSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataLakeSettings resources.
type dataLakeSettingsState struct {
	Admins                           []string                                          `pulumi:"admins"`
	CatalogId                        *string                                           `pulumi:"catalogId"`
	CreateDatabaseDefaultPermissions []DataLakeSettingsCreateDatabaseDefaultPermission `pulumi:"createDatabaseDefaultPermissions"`
	CreateTableDefaultPermissions    []DataLakeSettingsCreateTableDefaultPermission    `pulumi:"createTableDefaultPermissions"`
	TrustedResourceOwners            []string                                          `pulumi:"trustedResourceOwners"`
}

type DataLakeSettingsState struct {
	Admins                           pulumi.StringArrayInput
	CatalogId                        pulumi.StringPtrInput
	CreateDatabaseDefaultPermissions DataLakeSettingsCreateDatabaseDefaultPermissionArrayInput
	CreateTableDefaultPermissions    DataLakeSettingsCreateTableDefaultPermissionArrayInput
	TrustedResourceOwners            pulumi.StringArrayInput
}

func (DataLakeSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataLakeSettingsState)(nil)).Elem()
}

type dataLakeSettingsArgs struct {
	Admins                           []string                                          `pulumi:"admins"`
	CatalogId                        *string                                           `pulumi:"catalogId"`
	CreateDatabaseDefaultPermissions []DataLakeSettingsCreateDatabaseDefaultPermission `pulumi:"createDatabaseDefaultPermissions"`
	CreateTableDefaultPermissions    []DataLakeSettingsCreateTableDefaultPermission    `pulumi:"createTableDefaultPermissions"`
	TrustedResourceOwners            []string                                          `pulumi:"trustedResourceOwners"`
}

// The set of arguments for constructing a DataLakeSettings resource.
type DataLakeSettingsArgs struct {
	Admins                           pulumi.StringArrayInput
	CatalogId                        pulumi.StringPtrInput
	CreateDatabaseDefaultPermissions DataLakeSettingsCreateDatabaseDefaultPermissionArrayInput
	CreateTableDefaultPermissions    DataLakeSettingsCreateTableDefaultPermissionArrayInput
	TrustedResourceOwners            pulumi.StringArrayInput
}

func (DataLakeSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataLakeSettingsArgs)(nil)).Elem()
}

type DataLakeSettingsInput interface {
	pulumi.Input

	ToDataLakeSettingsOutput() DataLakeSettingsOutput
	ToDataLakeSettingsOutputWithContext(ctx context.Context) DataLakeSettingsOutput
}

func (*DataLakeSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeSettings)(nil)).Elem()
}

func (i *DataLakeSettings) ToDataLakeSettingsOutput() DataLakeSettingsOutput {
	return i.ToDataLakeSettingsOutputWithContext(context.Background())
}

func (i *DataLakeSettings) ToDataLakeSettingsOutputWithContext(ctx context.Context) DataLakeSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeSettingsOutput)
}

// DataLakeSettingsArrayInput is an input type that accepts DataLakeSettingsArray and DataLakeSettingsArrayOutput values.
// You can construct a concrete instance of `DataLakeSettingsArrayInput` via:
//
//	DataLakeSettingsArray{ DataLakeSettingsArgs{...} }
type DataLakeSettingsArrayInput interface {
	pulumi.Input

	ToDataLakeSettingsArrayOutput() DataLakeSettingsArrayOutput
	ToDataLakeSettingsArrayOutputWithContext(context.Context) DataLakeSettingsArrayOutput
}

type DataLakeSettingsArray []DataLakeSettingsInput

func (DataLakeSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DataLakeSettings)(nil)).Elem()
}

func (i DataLakeSettingsArray) ToDataLakeSettingsArrayOutput() DataLakeSettingsArrayOutput {
	return i.ToDataLakeSettingsArrayOutputWithContext(context.Background())
}

func (i DataLakeSettingsArray) ToDataLakeSettingsArrayOutputWithContext(ctx context.Context) DataLakeSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeSettingsArrayOutput)
}

// DataLakeSettingsMapInput is an input type that accepts DataLakeSettingsMap and DataLakeSettingsMapOutput values.
// You can construct a concrete instance of `DataLakeSettingsMapInput` via:
//
//	DataLakeSettingsMap{ "key": DataLakeSettingsArgs{...} }
type DataLakeSettingsMapInput interface {
	pulumi.Input

	ToDataLakeSettingsMapOutput() DataLakeSettingsMapOutput
	ToDataLakeSettingsMapOutputWithContext(context.Context) DataLakeSettingsMapOutput
}

type DataLakeSettingsMap map[string]DataLakeSettingsInput

func (DataLakeSettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DataLakeSettings)(nil)).Elem()
}

func (i DataLakeSettingsMap) ToDataLakeSettingsMapOutput() DataLakeSettingsMapOutput {
	return i.ToDataLakeSettingsMapOutputWithContext(context.Background())
}

func (i DataLakeSettingsMap) ToDataLakeSettingsMapOutputWithContext(ctx context.Context) DataLakeSettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataLakeSettingsMapOutput)
}

type DataLakeSettingsOutput struct{ *pulumi.OutputState }

func (DataLakeSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataLakeSettings)(nil)).Elem()
}

func (o DataLakeSettingsOutput) ToDataLakeSettingsOutput() DataLakeSettingsOutput {
	return o
}

func (o DataLakeSettingsOutput) ToDataLakeSettingsOutputWithContext(ctx context.Context) DataLakeSettingsOutput {
	return o
}

func (o DataLakeSettingsOutput) Admins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataLakeSettings) pulumi.StringArrayOutput { return v.Admins }).(pulumi.StringArrayOutput)
}

func (o DataLakeSettingsOutput) CatalogId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataLakeSettings) pulumi.StringPtrOutput { return v.CatalogId }).(pulumi.StringPtrOutput)
}

func (o DataLakeSettingsOutput) CreateDatabaseDefaultPermissions() DataLakeSettingsCreateDatabaseDefaultPermissionArrayOutput {
	return o.ApplyT(func(v *DataLakeSettings) DataLakeSettingsCreateDatabaseDefaultPermissionArrayOutput {
		return v.CreateDatabaseDefaultPermissions
	}).(DataLakeSettingsCreateDatabaseDefaultPermissionArrayOutput)
}

func (o DataLakeSettingsOutput) CreateTableDefaultPermissions() DataLakeSettingsCreateTableDefaultPermissionArrayOutput {
	return o.ApplyT(func(v *DataLakeSettings) DataLakeSettingsCreateTableDefaultPermissionArrayOutput {
		return v.CreateTableDefaultPermissions
	}).(DataLakeSettingsCreateTableDefaultPermissionArrayOutput)
}

func (o DataLakeSettingsOutput) TrustedResourceOwners() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataLakeSettings) pulumi.StringArrayOutput { return v.TrustedResourceOwners }).(pulumi.StringArrayOutput)
}

type DataLakeSettingsArrayOutput struct{ *pulumi.OutputState }

func (DataLakeSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DataLakeSettings)(nil)).Elem()
}

func (o DataLakeSettingsArrayOutput) ToDataLakeSettingsArrayOutput() DataLakeSettingsArrayOutput {
	return o
}

func (o DataLakeSettingsArrayOutput) ToDataLakeSettingsArrayOutputWithContext(ctx context.Context) DataLakeSettingsArrayOutput {
	return o
}

func (o DataLakeSettingsArrayOutput) Index(i pulumi.IntInput) DataLakeSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DataLakeSettings {
		return vs[0].([]*DataLakeSettings)[vs[1].(int)]
	}).(DataLakeSettingsOutput)
}

type DataLakeSettingsMapOutput struct{ *pulumi.OutputState }

func (DataLakeSettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DataLakeSettings)(nil)).Elem()
}

func (o DataLakeSettingsMapOutput) ToDataLakeSettingsMapOutput() DataLakeSettingsMapOutput {
	return o
}

func (o DataLakeSettingsMapOutput) ToDataLakeSettingsMapOutputWithContext(ctx context.Context) DataLakeSettingsMapOutput {
	return o
}

func (o DataLakeSettingsMapOutput) MapIndex(k pulumi.StringInput) DataLakeSettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DataLakeSettings {
		return vs[0].(map[string]*DataLakeSettings)[vs[1].(string)]
	}).(DataLakeSettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeSettingsInput)(nil)).Elem(), &DataLakeSettings{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeSettingsArrayInput)(nil)).Elem(), DataLakeSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataLakeSettingsMapInput)(nil)).Elem(), DataLakeSettingsMap{})
	pulumi.RegisterOutputType(DataLakeSettingsOutput{})
	pulumi.RegisterOutputType(DataLakeSettingsArrayOutput{})
	pulumi.RegisterOutputType(DataLakeSettingsMapOutput{})
}
