// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lakeformation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides details about a Lake Formation resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/lakeformation"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := lakeformation.LookupResource(ctx, &lakeformation.LookupResourceArgs{
//				Arn: "arn:aws:s3:::tf-acc-test-9151654063908211878",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupResource(ctx *pulumi.Context, args *LookupResourceArgs, opts ...pulumi.InvokeOption) (*LookupResourceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupResourceResult
	err := ctx.Invoke("aws:lakeformation/getResource:getResource", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResource.
type LookupResourceArgs struct {
	// ARN of the resource, an S3 path.
	Arn string `pulumi:"arn"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
}

// A collection of values returned by getResource.
type LookupResourceResult struct {
	Arn string `pulumi:"arn"`
	// Flag to enable AWS LakeFormation hybrid access permission mode.
	HybridAccessEnabled bool `pulumi:"hybridAccessEnabled"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Date and time the resource was last modified in [RFC 3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
	LastModified string `pulumi:"lastModified"`
	Region       string `pulumi:"region"`
	// Role that the resource was registered with.
	RoleArn string `pulumi:"roleArn"`
	// Whether the resource is a federated resource.
	WithFederation bool `pulumi:"withFederation"`
	// Boolean to grant the calling principal the permissions to perform all supported Lake Formation operations on the registered data location.
	WithPrivilegedAccess bool `pulumi:"withPrivilegedAccess"`
}

func LookupResourceOutput(ctx *pulumi.Context, args LookupResourceOutputArgs, opts ...pulumi.InvokeOption) LookupResourceResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupResourceResultOutput, error) {
			args := v.(LookupResourceArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws:lakeformation/getResource:getResource", args, LookupResourceResultOutput{}, options).(LookupResourceResultOutput), nil
		}).(LookupResourceResultOutput)
}

// A collection of arguments for invoking getResource.
type LookupResourceOutputArgs struct {
	// ARN of the resource, an S3 path.
	Arn pulumi.StringInput `pulumi:"arn"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput `pulumi:"region"`
}

func (LookupResourceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourceArgs)(nil)).Elem()
}

// A collection of values returned by getResource.
type LookupResourceResultOutput struct{ *pulumi.OutputState }

func (LookupResourceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupResourceResult)(nil)).Elem()
}

func (o LookupResourceResultOutput) ToLookupResourceResultOutput() LookupResourceResultOutput {
	return o
}

func (o LookupResourceResultOutput) ToLookupResourceResultOutputWithContext(ctx context.Context) LookupResourceResultOutput {
	return o
}

func (o LookupResourceResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceResult) string { return v.Arn }).(pulumi.StringOutput)
}

// Flag to enable AWS LakeFormation hybrid access permission mode.
func (o LookupResourceResultOutput) HybridAccessEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupResourceResult) bool { return v.HybridAccessEnabled }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupResourceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceResult) string { return v.Id }).(pulumi.StringOutput)
}

// Date and time the resource was last modified in [RFC 3339 format](https://tools.ietf.org/html/rfc3339#section-5.8).
func (o LookupResourceResultOutput) LastModified() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceResult) string { return v.LastModified }).(pulumi.StringOutput)
}

func (o LookupResourceResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceResult) string { return v.Region }).(pulumi.StringOutput)
}

// Role that the resource was registered with.
func (o LookupResourceResultOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupResourceResult) string { return v.RoleArn }).(pulumi.StringOutput)
}

// Whether the resource is a federated resource.
func (o LookupResourceResultOutput) WithFederation() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupResourceResult) bool { return v.WithFederation }).(pulumi.BoolOutput)
}

// Boolean to grant the calling principal the permissions to perform all supported Lake Formation operations on the registered data location.
func (o LookupResourceResultOutput) WithPrivilegedAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupResourceResult) bool { return v.WithPrivilegedAccess }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupResourceResultOutput{})
}
