// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codeguruprofiler

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for managing an AWS CodeGuru Profiler Profiling Group.
//
// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/codeguruprofiler"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := codeguruprofiler.LookupProfilingGroup(ctx, &codeguruprofiler.LookupProfilingGroupArgs{
//				Name: "example",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupProfilingGroup(ctx *pulumi.Context, args *LookupProfilingGroupArgs, opts ...pulumi.InvokeOption) (*LookupProfilingGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupProfilingGroupResult
	err := ctx.Invoke("aws:codeguruprofiler/getProfilingGroup:getProfilingGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProfilingGroup.
type LookupProfilingGroupArgs struct {
	// The name of the profiling group.
	Name string `pulumi:"name"`
}

// A collection of values returned by getProfilingGroup.
type LookupProfilingGroupResult struct {
	// Profiling Group agent orchestration config
	AgentOrchestrationConfigs []map[string]interface{} `pulumi:"agentOrchestrationConfigs"`
	// ARN of the Profiling Group.
	Arn string `pulumi:"arn"`
	// The compute platform of the profiling group.
	ComputePlatform string `pulumi:"computePlatform"`
	// Timestamp when Profiling Group was created.
	CreatedAt string `pulumi:"createdAt"`
	Id        string `pulumi:"id"`
	Name      string `pulumi:"name"`
	// The status of the Profiling Group.
	ProfilingStatuses []map[string]interface{} `pulumi:"profilingStatuses"`
	// Mapping of Key-Value tags for the resource.
	Tags map[string]string `pulumi:"tags"`
	// Timestamp when Profiling Group was updated.
	UpdatedAt string `pulumi:"updatedAt"`
}

func LookupProfilingGroupOutput(ctx *pulumi.Context, args LookupProfilingGroupOutputArgs, opts ...pulumi.InvokeOption) LookupProfilingGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupProfilingGroupResult, error) {
			args := v.(LookupProfilingGroupArgs)
			r, err := LookupProfilingGroup(ctx, &args, opts...)
			var s LookupProfilingGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupProfilingGroupResultOutput)
}

// A collection of arguments for invoking getProfilingGroup.
type LookupProfilingGroupOutputArgs struct {
	// The name of the profiling group.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupProfilingGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProfilingGroupArgs)(nil)).Elem()
}

// A collection of values returned by getProfilingGroup.
type LookupProfilingGroupResultOutput struct{ *pulumi.OutputState }

func (LookupProfilingGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupProfilingGroupResult)(nil)).Elem()
}

func (o LookupProfilingGroupResultOutput) ToLookupProfilingGroupResultOutput() LookupProfilingGroupResultOutput {
	return o
}

func (o LookupProfilingGroupResultOutput) ToLookupProfilingGroupResultOutputWithContext(ctx context.Context) LookupProfilingGroupResultOutput {
	return o
}

// Profiling Group agent orchestration config
func (o LookupProfilingGroupResultOutput) AgentOrchestrationConfigs() pulumi.MapArrayOutput {
	return o.ApplyT(func(v LookupProfilingGroupResult) []map[string]interface{} { return v.AgentOrchestrationConfigs }).(pulumi.MapArrayOutput)
}

// ARN of the Profiling Group.
func (o LookupProfilingGroupResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfilingGroupResult) string { return v.Arn }).(pulumi.StringOutput)
}

// The compute platform of the profiling group.
func (o LookupProfilingGroupResultOutput) ComputePlatform() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfilingGroupResult) string { return v.ComputePlatform }).(pulumi.StringOutput)
}

// Timestamp when Profiling Group was created.
func (o LookupProfilingGroupResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfilingGroupResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o LookupProfilingGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfilingGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupProfilingGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfilingGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

// The status of the Profiling Group.
func (o LookupProfilingGroupResultOutput) ProfilingStatuses() pulumi.MapArrayOutput {
	return o.ApplyT(func(v LookupProfilingGroupResult) []map[string]interface{} { return v.ProfilingStatuses }).(pulumi.MapArrayOutput)
}

// Mapping of Key-Value tags for the resource.
func (o LookupProfilingGroupResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupProfilingGroupResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Timestamp when Profiling Group was updated.
func (o LookupProfilingGroupResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupProfilingGroupResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupProfilingGroupResultOutput{})
}
