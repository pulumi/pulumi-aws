// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package inspector

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AssessmentTemplateEventSubscription struct {
	// The event for which you want to receive SNS notifications. Valid values are `ASSESSMENT_RUN_STARTED`, `ASSESSMENT_RUN_COMPLETED`, `ASSESSMENT_RUN_STATE_CHANGED`, and `FINDING_REPORTED`.
	Event string `pulumi:"event"`
	// The ARN of the SNS topic to which notifications are sent.
	TopicArn string `pulumi:"topicArn"`
}

// AssessmentTemplateEventSubscriptionInput is an input type that accepts AssessmentTemplateEventSubscriptionArgs and AssessmentTemplateEventSubscriptionOutput values.
// You can construct a concrete instance of `AssessmentTemplateEventSubscriptionInput` via:
//
//	AssessmentTemplateEventSubscriptionArgs{...}
type AssessmentTemplateEventSubscriptionInput interface {
	pulumi.Input

	ToAssessmentTemplateEventSubscriptionOutput() AssessmentTemplateEventSubscriptionOutput
	ToAssessmentTemplateEventSubscriptionOutputWithContext(context.Context) AssessmentTemplateEventSubscriptionOutput
}

type AssessmentTemplateEventSubscriptionArgs struct {
	// The event for which you want to receive SNS notifications. Valid values are `ASSESSMENT_RUN_STARTED`, `ASSESSMENT_RUN_COMPLETED`, `ASSESSMENT_RUN_STATE_CHANGED`, and `FINDING_REPORTED`.
	Event pulumi.StringInput `pulumi:"event"`
	// The ARN of the SNS topic to which notifications are sent.
	TopicArn pulumi.StringInput `pulumi:"topicArn"`
}

func (AssessmentTemplateEventSubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AssessmentTemplateEventSubscription)(nil)).Elem()
}

func (i AssessmentTemplateEventSubscriptionArgs) ToAssessmentTemplateEventSubscriptionOutput() AssessmentTemplateEventSubscriptionOutput {
	return i.ToAssessmentTemplateEventSubscriptionOutputWithContext(context.Background())
}

func (i AssessmentTemplateEventSubscriptionArgs) ToAssessmentTemplateEventSubscriptionOutputWithContext(ctx context.Context) AssessmentTemplateEventSubscriptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssessmentTemplateEventSubscriptionOutput)
}

// AssessmentTemplateEventSubscriptionArrayInput is an input type that accepts AssessmentTemplateEventSubscriptionArray and AssessmentTemplateEventSubscriptionArrayOutput values.
// You can construct a concrete instance of `AssessmentTemplateEventSubscriptionArrayInput` via:
//
//	AssessmentTemplateEventSubscriptionArray{ AssessmentTemplateEventSubscriptionArgs{...} }
type AssessmentTemplateEventSubscriptionArrayInput interface {
	pulumi.Input

	ToAssessmentTemplateEventSubscriptionArrayOutput() AssessmentTemplateEventSubscriptionArrayOutput
	ToAssessmentTemplateEventSubscriptionArrayOutputWithContext(context.Context) AssessmentTemplateEventSubscriptionArrayOutput
}

type AssessmentTemplateEventSubscriptionArray []AssessmentTemplateEventSubscriptionInput

func (AssessmentTemplateEventSubscriptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AssessmentTemplateEventSubscription)(nil)).Elem()
}

func (i AssessmentTemplateEventSubscriptionArray) ToAssessmentTemplateEventSubscriptionArrayOutput() AssessmentTemplateEventSubscriptionArrayOutput {
	return i.ToAssessmentTemplateEventSubscriptionArrayOutputWithContext(context.Background())
}

func (i AssessmentTemplateEventSubscriptionArray) ToAssessmentTemplateEventSubscriptionArrayOutputWithContext(ctx context.Context) AssessmentTemplateEventSubscriptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AssessmentTemplateEventSubscriptionArrayOutput)
}

type AssessmentTemplateEventSubscriptionOutput struct{ *pulumi.OutputState }

func (AssessmentTemplateEventSubscriptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AssessmentTemplateEventSubscription)(nil)).Elem()
}

func (o AssessmentTemplateEventSubscriptionOutput) ToAssessmentTemplateEventSubscriptionOutput() AssessmentTemplateEventSubscriptionOutput {
	return o
}

func (o AssessmentTemplateEventSubscriptionOutput) ToAssessmentTemplateEventSubscriptionOutputWithContext(ctx context.Context) AssessmentTemplateEventSubscriptionOutput {
	return o
}

// The event for which you want to receive SNS notifications. Valid values are `ASSESSMENT_RUN_STARTED`, `ASSESSMENT_RUN_COMPLETED`, `ASSESSMENT_RUN_STATE_CHANGED`, and `FINDING_REPORTED`.
func (o AssessmentTemplateEventSubscriptionOutput) Event() pulumi.StringOutput {
	return o.ApplyT(func(v AssessmentTemplateEventSubscription) string { return v.Event }).(pulumi.StringOutput)
}

// The ARN of the SNS topic to which notifications are sent.
func (o AssessmentTemplateEventSubscriptionOutput) TopicArn() pulumi.StringOutput {
	return o.ApplyT(func(v AssessmentTemplateEventSubscription) string { return v.TopicArn }).(pulumi.StringOutput)
}

type AssessmentTemplateEventSubscriptionArrayOutput struct{ *pulumi.OutputState }

func (AssessmentTemplateEventSubscriptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AssessmentTemplateEventSubscription)(nil)).Elem()
}

func (o AssessmentTemplateEventSubscriptionArrayOutput) ToAssessmentTemplateEventSubscriptionArrayOutput() AssessmentTemplateEventSubscriptionArrayOutput {
	return o
}

func (o AssessmentTemplateEventSubscriptionArrayOutput) ToAssessmentTemplateEventSubscriptionArrayOutputWithContext(ctx context.Context) AssessmentTemplateEventSubscriptionArrayOutput {
	return o
}

func (o AssessmentTemplateEventSubscriptionArrayOutput) Index(i pulumi.IntInput) AssessmentTemplateEventSubscriptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AssessmentTemplateEventSubscription {
		return vs[0].([]AssessmentTemplateEventSubscription)[vs[1].(int)]
	}).(AssessmentTemplateEventSubscriptionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AssessmentTemplateEventSubscriptionInput)(nil)).Elem(), AssessmentTemplateEventSubscriptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AssessmentTemplateEventSubscriptionArrayInput)(nil)).Elem(), AssessmentTemplateEventSubscriptionArray{})
	pulumi.RegisterOutputType(AssessmentTemplateEventSubscriptionOutput{})
	pulumi.RegisterOutputType(AssessmentTemplateEventSubscriptionArrayOutput{})
}
