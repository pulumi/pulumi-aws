// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a global network resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/networkmanager"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := networkmanager.NewGlobalNetwork(ctx, "example", &networkmanager.GlobalNetworkArgs{
//				Description: pulumi.String("example"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import `aws_networkmanager_global_network` using the global network ID. For example:
//
// ```sh
//
//	$ pulumi import aws:networkmanager/globalNetwork:GlobalNetwork example global-network-0d47f6t230mz46dy4
//
// ```
type GlobalNetwork struct {
	pulumi.CustomResourceState

	// Global Network Amazon Resource Name (ARN)
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Description of the Global Network.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Key-value tags for the Global Network. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
}

// NewGlobalNetwork registers a new resource with the given unique name, arguments, and options.
func NewGlobalNetwork(ctx *pulumi.Context,
	name string, args *GlobalNetworkArgs, opts ...pulumi.ResourceOption) (*GlobalNetwork, error) {
	if args == nil {
		args = &GlobalNetworkArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GlobalNetwork
	err := ctx.RegisterResource("aws:networkmanager/globalNetwork:GlobalNetwork", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGlobalNetwork gets an existing GlobalNetwork resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGlobalNetwork(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GlobalNetworkState, opts ...pulumi.ResourceOption) (*GlobalNetwork, error) {
	var resource GlobalNetwork
	err := ctx.ReadResource("aws:networkmanager/globalNetwork:GlobalNetwork", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GlobalNetwork resources.
type globalNetworkState struct {
	// Global Network Amazon Resource Name (ARN)
	Arn *string `pulumi:"arn"`
	// Description of the Global Network.
	Description *string `pulumi:"description"`
	// Key-value tags for the Global Network. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type GlobalNetworkState struct {
	// Global Network Amazon Resource Name (ARN)
	Arn pulumi.StringPtrInput
	// Description of the Global Network.
	Description pulumi.StringPtrInput
	// Key-value tags for the Global Network. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	TagsAll pulumi.StringMapInput
}

func (GlobalNetworkState) ElementType() reflect.Type {
	return reflect.TypeOf((*globalNetworkState)(nil)).Elem()
}

type globalNetworkArgs struct {
	// Description of the Global Network.
	Description *string `pulumi:"description"`
	// Key-value tags for the Global Network. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a GlobalNetwork resource.
type GlobalNetworkArgs struct {
	// Description of the Global Network.
	Description pulumi.StringPtrInput
	// Key-value tags for the Global Network. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
}

func (GlobalNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*globalNetworkArgs)(nil)).Elem()
}

type GlobalNetworkInput interface {
	pulumi.Input

	ToGlobalNetworkOutput() GlobalNetworkOutput
	ToGlobalNetworkOutputWithContext(ctx context.Context) GlobalNetworkOutput
}

func (*GlobalNetwork) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalNetwork)(nil)).Elem()
}

func (i *GlobalNetwork) ToGlobalNetworkOutput() GlobalNetworkOutput {
	return i.ToGlobalNetworkOutputWithContext(context.Background())
}

func (i *GlobalNetwork) ToGlobalNetworkOutputWithContext(ctx context.Context) GlobalNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalNetworkOutput)
}

func (i *GlobalNetwork) ToOutput(ctx context.Context) pulumix.Output[*GlobalNetwork] {
	return pulumix.Output[*GlobalNetwork]{
		OutputState: i.ToGlobalNetworkOutputWithContext(ctx).OutputState,
	}
}

// GlobalNetworkArrayInput is an input type that accepts GlobalNetworkArray and GlobalNetworkArrayOutput values.
// You can construct a concrete instance of `GlobalNetworkArrayInput` via:
//
//	GlobalNetworkArray{ GlobalNetworkArgs{...} }
type GlobalNetworkArrayInput interface {
	pulumi.Input

	ToGlobalNetworkArrayOutput() GlobalNetworkArrayOutput
	ToGlobalNetworkArrayOutputWithContext(context.Context) GlobalNetworkArrayOutput
}

type GlobalNetworkArray []GlobalNetworkInput

func (GlobalNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GlobalNetwork)(nil)).Elem()
}

func (i GlobalNetworkArray) ToGlobalNetworkArrayOutput() GlobalNetworkArrayOutput {
	return i.ToGlobalNetworkArrayOutputWithContext(context.Background())
}

func (i GlobalNetworkArray) ToGlobalNetworkArrayOutputWithContext(ctx context.Context) GlobalNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalNetworkArrayOutput)
}

func (i GlobalNetworkArray) ToOutput(ctx context.Context) pulumix.Output[[]*GlobalNetwork] {
	return pulumix.Output[[]*GlobalNetwork]{
		OutputState: i.ToGlobalNetworkArrayOutputWithContext(ctx).OutputState,
	}
}

// GlobalNetworkMapInput is an input type that accepts GlobalNetworkMap and GlobalNetworkMapOutput values.
// You can construct a concrete instance of `GlobalNetworkMapInput` via:
//
//	GlobalNetworkMap{ "key": GlobalNetworkArgs{...} }
type GlobalNetworkMapInput interface {
	pulumi.Input

	ToGlobalNetworkMapOutput() GlobalNetworkMapOutput
	ToGlobalNetworkMapOutputWithContext(context.Context) GlobalNetworkMapOutput
}

type GlobalNetworkMap map[string]GlobalNetworkInput

func (GlobalNetworkMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GlobalNetwork)(nil)).Elem()
}

func (i GlobalNetworkMap) ToGlobalNetworkMapOutput() GlobalNetworkMapOutput {
	return i.ToGlobalNetworkMapOutputWithContext(context.Background())
}

func (i GlobalNetworkMap) ToGlobalNetworkMapOutputWithContext(ctx context.Context) GlobalNetworkMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalNetworkMapOutput)
}

func (i GlobalNetworkMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*GlobalNetwork] {
	return pulumix.Output[map[string]*GlobalNetwork]{
		OutputState: i.ToGlobalNetworkMapOutputWithContext(ctx).OutputState,
	}
}

type GlobalNetworkOutput struct{ *pulumi.OutputState }

func (GlobalNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GlobalNetwork)(nil)).Elem()
}

func (o GlobalNetworkOutput) ToGlobalNetworkOutput() GlobalNetworkOutput {
	return o
}

func (o GlobalNetworkOutput) ToGlobalNetworkOutputWithContext(ctx context.Context) GlobalNetworkOutput {
	return o
}

func (o GlobalNetworkOutput) ToOutput(ctx context.Context) pulumix.Output[*GlobalNetwork] {
	return pulumix.Output[*GlobalNetwork]{
		OutputState: o.OutputState,
	}
}

// Global Network Amazon Resource Name (ARN)
func (o GlobalNetworkOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *GlobalNetwork) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Description of the Global Network.
func (o GlobalNetworkOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GlobalNetwork) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Key-value tags for the Global Network. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o GlobalNetworkOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GlobalNetwork) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
func (o GlobalNetworkOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *GlobalNetwork) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type GlobalNetworkArrayOutput struct{ *pulumi.OutputState }

func (GlobalNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GlobalNetwork)(nil)).Elem()
}

func (o GlobalNetworkArrayOutput) ToGlobalNetworkArrayOutput() GlobalNetworkArrayOutput {
	return o
}

func (o GlobalNetworkArrayOutput) ToGlobalNetworkArrayOutputWithContext(ctx context.Context) GlobalNetworkArrayOutput {
	return o
}

func (o GlobalNetworkArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*GlobalNetwork] {
	return pulumix.Output[[]*GlobalNetwork]{
		OutputState: o.OutputState,
	}
}

func (o GlobalNetworkArrayOutput) Index(i pulumi.IntInput) GlobalNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GlobalNetwork {
		return vs[0].([]*GlobalNetwork)[vs[1].(int)]
	}).(GlobalNetworkOutput)
}

type GlobalNetworkMapOutput struct{ *pulumi.OutputState }

func (GlobalNetworkMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GlobalNetwork)(nil)).Elem()
}

func (o GlobalNetworkMapOutput) ToGlobalNetworkMapOutput() GlobalNetworkMapOutput {
	return o
}

func (o GlobalNetworkMapOutput) ToGlobalNetworkMapOutputWithContext(ctx context.Context) GlobalNetworkMapOutput {
	return o
}

func (o GlobalNetworkMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*GlobalNetwork] {
	return pulumix.Output[map[string]*GlobalNetwork]{
		OutputState: o.OutputState,
	}
}

func (o GlobalNetworkMapOutput) MapIndex(k pulumi.StringInput) GlobalNetworkOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GlobalNetwork {
		return vs[0].(map[string]*GlobalNetwork)[vs[1].(string)]
	}).(GlobalNetworkOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalNetworkInput)(nil)).Elem(), &GlobalNetwork{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalNetworkArrayInput)(nil)).Elem(), GlobalNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalNetworkMapInput)(nil)).Elem(), GlobalNetworkMap{})
	pulumi.RegisterOutputType(GlobalNetworkOutput{})
	pulumi.RegisterOutputType(GlobalNetworkArrayOutput{})
	pulumi.RegisterOutputType(GlobalNetworkMapOutput{})
}
