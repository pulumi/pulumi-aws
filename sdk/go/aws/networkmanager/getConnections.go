// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package networkmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieve information about connections.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/networkmanager"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := networkmanager.GetConnections(ctx, &networkmanager.GetConnectionsArgs{
// 			GlobalNetworkId: _var.Global_network_id,
// 			Tags: map[string]interface{}{
// 				"Env": "test",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetConnections(ctx *pulumi.Context, args *GetConnectionsArgs, opts ...pulumi.InvokeOption) (*GetConnectionsResult, error) {
	var rv GetConnectionsResult
	err := ctx.Invoke("aws:networkmanager/getConnections:getConnections", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConnections.
type GetConnectionsArgs struct {
	// The ID of the device of the connections to retrieve.
	DeviceId *string `pulumi:"deviceId"`
	// The ID of the Global Network of the connections to retrieve.
	GlobalNetworkId string `pulumi:"globalNetworkId"`
	// Restricts the list to the connections with these tags.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getConnections.
type GetConnectionsResult struct {
	DeviceId        *string `pulumi:"deviceId"`
	GlobalNetworkId string  `pulumi:"globalNetworkId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The IDs of the connections.
	Ids  []string          `pulumi:"ids"`
	Tags map[string]string `pulumi:"tags"`
}

func GetConnectionsOutput(ctx *pulumi.Context, args GetConnectionsOutputArgs, opts ...pulumi.InvokeOption) GetConnectionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetConnectionsResult, error) {
			args := v.(GetConnectionsArgs)
			r, err := GetConnections(ctx, &args, opts...)
			return *r, err
		}).(GetConnectionsResultOutput)
}

// A collection of arguments for invoking getConnections.
type GetConnectionsOutputArgs struct {
	// The ID of the device of the connections to retrieve.
	DeviceId pulumi.StringPtrInput `pulumi:"deviceId"`
	// The ID of the Global Network of the connections to retrieve.
	GlobalNetworkId pulumi.StringInput `pulumi:"globalNetworkId"`
	// Restricts the list to the connections with these tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (GetConnectionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsArgs)(nil)).Elem()
}

// A collection of values returned by getConnections.
type GetConnectionsResultOutput struct{ *pulumi.OutputState }

func (GetConnectionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsResult)(nil)).Elem()
}

func (o GetConnectionsResultOutput) ToGetConnectionsResultOutput() GetConnectionsResultOutput {
	return o
}

func (o GetConnectionsResultOutput) ToGetConnectionsResultOutputWithContext(ctx context.Context) GetConnectionsResultOutput {
	return o
}

func (o GetConnectionsResultOutput) DeviceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetConnectionsResult) *string { return v.DeviceId }).(pulumi.StringPtrOutput)
}

func (o GetConnectionsResultOutput) GlobalNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsResult) string { return v.GlobalNetworkId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetConnectionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The IDs of the connections.
func (o GetConnectionsResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConnectionsResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetConnectionsResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetConnectionsResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetConnectionsResultOutput{})
}
