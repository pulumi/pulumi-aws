// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieve information about a device.
func LookupDevice(ctx *pulumi.Context, args *LookupDeviceArgs, opts ...pulumi.InvokeOption) (*LookupDeviceResult, error) {
	var rv LookupDeviceResult
	err := ctx.Invoke("aws:networkmanager/getDevice:getDevice", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDevice.
type LookupDeviceArgs struct {
	// The ID of the device.
	DeviceId string `pulumi:"deviceId"`
	// The ID of the global network.
	GlobalNetworkId string `pulumi:"globalNetworkId"`
	// Key-value tags for the device.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getDevice.
type LookupDeviceResult struct {
	// The Amazon Resource Name (ARN) of the device.
	Arn string `pulumi:"arn"`
	// The AWS location of the device. Documented below.
	AwsLocations []GetDeviceAwsLocation `pulumi:"awsLocations"`
	// A description of the device.
	Description     string `pulumi:"description"`
	DeviceId        string `pulumi:"deviceId"`
	GlobalNetworkId string `pulumi:"globalNetworkId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The location of the device. Documented below.
	Locations []GetDeviceLocation `pulumi:"locations"`
	// The model of device.
	Model string `pulumi:"model"`
	// The serial number of the device.
	SerialNumber string `pulumi:"serialNumber"`
	// The ID of the site.
	SiteId string `pulumi:"siteId"`
	// Key-value tags for the device.
	Tags map[string]string `pulumi:"tags"`
	// The type of device.
	Type string `pulumi:"type"`
	// The vendor of the device.
	Vendor string `pulumi:"vendor"`
}

func LookupDeviceOutput(ctx *pulumi.Context, args LookupDeviceOutputArgs, opts ...pulumi.InvokeOption) LookupDeviceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDeviceResult, error) {
			args := v.(LookupDeviceArgs)
			r, err := LookupDevice(ctx, &args, opts...)
			var s LookupDeviceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDeviceResultOutput)
}

// A collection of arguments for invoking getDevice.
type LookupDeviceOutputArgs struct {
	// The ID of the device.
	DeviceId pulumi.StringInput `pulumi:"deviceId"`
	// The ID of the global network.
	GlobalNetworkId pulumi.StringInput `pulumi:"globalNetworkId"`
	// Key-value tags for the device.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupDeviceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeviceArgs)(nil)).Elem()
}

// A collection of values returned by getDevice.
type LookupDeviceResultOutput struct{ *pulumi.OutputState }

func (LookupDeviceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDeviceResult)(nil)).Elem()
}

func (o LookupDeviceResultOutput) ToLookupDeviceResultOutput() LookupDeviceResultOutput {
	return o
}

func (o LookupDeviceResultOutput) ToLookupDeviceResultOutputWithContext(ctx context.Context) LookupDeviceResultOutput {
	return o
}

// The Amazon Resource Name (ARN) of the device.
func (o LookupDeviceResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeviceResult) string { return v.Arn }).(pulumi.StringOutput)
}

// The AWS location of the device. Documented below.
func (o LookupDeviceResultOutput) AwsLocations() GetDeviceAwsLocationArrayOutput {
	return o.ApplyT(func(v LookupDeviceResult) []GetDeviceAwsLocation { return v.AwsLocations }).(GetDeviceAwsLocationArrayOutput)
}

// A description of the device.
func (o LookupDeviceResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeviceResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupDeviceResultOutput) DeviceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeviceResult) string { return v.DeviceId }).(pulumi.StringOutput)
}

func (o LookupDeviceResultOutput) GlobalNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeviceResult) string { return v.GlobalNetworkId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDeviceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeviceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The location of the device. Documented below.
func (o LookupDeviceResultOutput) Locations() GetDeviceLocationArrayOutput {
	return o.ApplyT(func(v LookupDeviceResult) []GetDeviceLocation { return v.Locations }).(GetDeviceLocationArrayOutput)
}

// The model of device.
func (o LookupDeviceResultOutput) Model() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeviceResult) string { return v.Model }).(pulumi.StringOutput)
}

// The serial number of the device.
func (o LookupDeviceResultOutput) SerialNumber() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeviceResult) string { return v.SerialNumber }).(pulumi.StringOutput)
}

// The ID of the site.
func (o LookupDeviceResultOutput) SiteId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeviceResult) string { return v.SiteId }).(pulumi.StringOutput)
}

// Key-value tags for the device.
func (o LookupDeviceResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupDeviceResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The type of device.
func (o LookupDeviceResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeviceResult) string { return v.Type }).(pulumi.StringOutput)
}

// The vendor of the device.
func (o LookupDeviceResultOutput) Vendor() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDeviceResult) string { return v.Vendor }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDeviceResultOutput{})
}
