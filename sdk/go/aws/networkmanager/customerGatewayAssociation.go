// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkmanager

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CustomerGatewayAssociation struct {
	pulumi.CustomResourceState

	CustomerGatewayArn pulumi.StringOutput    `pulumi:"customerGatewayArn"`
	DeviceId           pulumi.StringOutput    `pulumi:"deviceId"`
	GlobalNetworkId    pulumi.StringOutput    `pulumi:"globalNetworkId"`
	LinkId             pulumi.StringPtrOutput `pulumi:"linkId"`
}

// NewCustomerGatewayAssociation registers a new resource with the given unique name, arguments, and options.
func NewCustomerGatewayAssociation(ctx *pulumi.Context,
	name string, args *CustomerGatewayAssociationArgs, opts ...pulumi.ResourceOption) (*CustomerGatewayAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CustomerGatewayArn == nil {
		return nil, errors.New("invalid value for required argument 'CustomerGatewayArn'")
	}
	if args.DeviceId == nil {
		return nil, errors.New("invalid value for required argument 'DeviceId'")
	}
	if args.GlobalNetworkId == nil {
		return nil, errors.New("invalid value for required argument 'GlobalNetworkId'")
	}
	var resource CustomerGatewayAssociation
	err := ctx.RegisterResource("aws:networkmanager/customerGatewayAssociation:CustomerGatewayAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCustomerGatewayAssociation gets an existing CustomerGatewayAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCustomerGatewayAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CustomerGatewayAssociationState, opts ...pulumi.ResourceOption) (*CustomerGatewayAssociation, error) {
	var resource CustomerGatewayAssociation
	err := ctx.ReadResource("aws:networkmanager/customerGatewayAssociation:CustomerGatewayAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CustomerGatewayAssociation resources.
type customerGatewayAssociationState struct {
	CustomerGatewayArn *string `pulumi:"customerGatewayArn"`
	DeviceId           *string `pulumi:"deviceId"`
	GlobalNetworkId    *string `pulumi:"globalNetworkId"`
	LinkId             *string `pulumi:"linkId"`
}

type CustomerGatewayAssociationState struct {
	CustomerGatewayArn pulumi.StringPtrInput
	DeviceId           pulumi.StringPtrInput
	GlobalNetworkId    pulumi.StringPtrInput
	LinkId             pulumi.StringPtrInput
}

func (CustomerGatewayAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*customerGatewayAssociationState)(nil)).Elem()
}

type customerGatewayAssociationArgs struct {
	CustomerGatewayArn string  `pulumi:"customerGatewayArn"`
	DeviceId           string  `pulumi:"deviceId"`
	GlobalNetworkId    string  `pulumi:"globalNetworkId"`
	LinkId             *string `pulumi:"linkId"`
}

// The set of arguments for constructing a CustomerGatewayAssociation resource.
type CustomerGatewayAssociationArgs struct {
	CustomerGatewayArn pulumi.StringInput
	DeviceId           pulumi.StringInput
	GlobalNetworkId    pulumi.StringInput
	LinkId             pulumi.StringPtrInput
}

func (CustomerGatewayAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*customerGatewayAssociationArgs)(nil)).Elem()
}

type CustomerGatewayAssociationInput interface {
	pulumi.Input

	ToCustomerGatewayAssociationOutput() CustomerGatewayAssociationOutput
	ToCustomerGatewayAssociationOutputWithContext(ctx context.Context) CustomerGatewayAssociationOutput
}

func (*CustomerGatewayAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomerGatewayAssociation)(nil)).Elem()
}

func (i *CustomerGatewayAssociation) ToCustomerGatewayAssociationOutput() CustomerGatewayAssociationOutput {
	return i.ToCustomerGatewayAssociationOutputWithContext(context.Background())
}

func (i *CustomerGatewayAssociation) ToCustomerGatewayAssociationOutputWithContext(ctx context.Context) CustomerGatewayAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerGatewayAssociationOutput)
}

// CustomerGatewayAssociationArrayInput is an input type that accepts CustomerGatewayAssociationArray and CustomerGatewayAssociationArrayOutput values.
// You can construct a concrete instance of `CustomerGatewayAssociationArrayInput` via:
//
//	CustomerGatewayAssociationArray{ CustomerGatewayAssociationArgs{...} }
type CustomerGatewayAssociationArrayInput interface {
	pulumi.Input

	ToCustomerGatewayAssociationArrayOutput() CustomerGatewayAssociationArrayOutput
	ToCustomerGatewayAssociationArrayOutputWithContext(context.Context) CustomerGatewayAssociationArrayOutput
}

type CustomerGatewayAssociationArray []CustomerGatewayAssociationInput

func (CustomerGatewayAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomerGatewayAssociation)(nil)).Elem()
}

func (i CustomerGatewayAssociationArray) ToCustomerGatewayAssociationArrayOutput() CustomerGatewayAssociationArrayOutput {
	return i.ToCustomerGatewayAssociationArrayOutputWithContext(context.Background())
}

func (i CustomerGatewayAssociationArray) ToCustomerGatewayAssociationArrayOutputWithContext(ctx context.Context) CustomerGatewayAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerGatewayAssociationArrayOutput)
}

// CustomerGatewayAssociationMapInput is an input type that accepts CustomerGatewayAssociationMap and CustomerGatewayAssociationMapOutput values.
// You can construct a concrete instance of `CustomerGatewayAssociationMapInput` via:
//
//	CustomerGatewayAssociationMap{ "key": CustomerGatewayAssociationArgs{...} }
type CustomerGatewayAssociationMapInput interface {
	pulumi.Input

	ToCustomerGatewayAssociationMapOutput() CustomerGatewayAssociationMapOutput
	ToCustomerGatewayAssociationMapOutputWithContext(context.Context) CustomerGatewayAssociationMapOutput
}

type CustomerGatewayAssociationMap map[string]CustomerGatewayAssociationInput

func (CustomerGatewayAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomerGatewayAssociation)(nil)).Elem()
}

func (i CustomerGatewayAssociationMap) ToCustomerGatewayAssociationMapOutput() CustomerGatewayAssociationMapOutput {
	return i.ToCustomerGatewayAssociationMapOutputWithContext(context.Background())
}

func (i CustomerGatewayAssociationMap) ToCustomerGatewayAssociationMapOutputWithContext(ctx context.Context) CustomerGatewayAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomerGatewayAssociationMapOutput)
}

type CustomerGatewayAssociationOutput struct{ *pulumi.OutputState }

func (CustomerGatewayAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomerGatewayAssociation)(nil)).Elem()
}

func (o CustomerGatewayAssociationOutput) ToCustomerGatewayAssociationOutput() CustomerGatewayAssociationOutput {
	return o
}

func (o CustomerGatewayAssociationOutput) ToCustomerGatewayAssociationOutputWithContext(ctx context.Context) CustomerGatewayAssociationOutput {
	return o
}

func (o CustomerGatewayAssociationOutput) CustomerGatewayArn() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomerGatewayAssociation) pulumi.StringOutput { return v.CustomerGatewayArn }).(pulumi.StringOutput)
}

func (o CustomerGatewayAssociationOutput) DeviceId() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomerGatewayAssociation) pulumi.StringOutput { return v.DeviceId }).(pulumi.StringOutput)
}

func (o CustomerGatewayAssociationOutput) GlobalNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *CustomerGatewayAssociation) pulumi.StringOutput { return v.GlobalNetworkId }).(pulumi.StringOutput)
}

func (o CustomerGatewayAssociationOutput) LinkId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomerGatewayAssociation) pulumi.StringPtrOutput { return v.LinkId }).(pulumi.StringPtrOutput)
}

type CustomerGatewayAssociationArrayOutput struct{ *pulumi.OutputState }

func (CustomerGatewayAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CustomerGatewayAssociation)(nil)).Elem()
}

func (o CustomerGatewayAssociationArrayOutput) ToCustomerGatewayAssociationArrayOutput() CustomerGatewayAssociationArrayOutput {
	return o
}

func (o CustomerGatewayAssociationArrayOutput) ToCustomerGatewayAssociationArrayOutputWithContext(ctx context.Context) CustomerGatewayAssociationArrayOutput {
	return o
}

func (o CustomerGatewayAssociationArrayOutput) Index(i pulumi.IntInput) CustomerGatewayAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CustomerGatewayAssociation {
		return vs[0].([]*CustomerGatewayAssociation)[vs[1].(int)]
	}).(CustomerGatewayAssociationOutput)
}

type CustomerGatewayAssociationMapOutput struct{ *pulumi.OutputState }

func (CustomerGatewayAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CustomerGatewayAssociation)(nil)).Elem()
}

func (o CustomerGatewayAssociationMapOutput) ToCustomerGatewayAssociationMapOutput() CustomerGatewayAssociationMapOutput {
	return o
}

func (o CustomerGatewayAssociationMapOutput) ToCustomerGatewayAssociationMapOutputWithContext(ctx context.Context) CustomerGatewayAssociationMapOutput {
	return o
}

func (o CustomerGatewayAssociationMapOutput) MapIndex(k pulumi.StringInput) CustomerGatewayAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CustomerGatewayAssociation {
		return vs[0].(map[string]*CustomerGatewayAssociation)[vs[1].(string)]
	}).(CustomerGatewayAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomerGatewayAssociationInput)(nil)).Elem(), &CustomerGatewayAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomerGatewayAssociationArrayInput)(nil)).Elem(), CustomerGatewayAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomerGatewayAssociationMapInput)(nil)).Elem(), CustomerGatewayAssociationMap{})
	pulumi.RegisterOutputType(CustomerGatewayAssociationOutput{})
	pulumi.RegisterOutputType(CustomerGatewayAssociationArrayOutput{})
	pulumi.RegisterOutputType(CustomerGatewayAssociationMapOutput{})
}
