// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DeviceAwsLocation struct {
	// The Amazon Resource Name (ARN) of the subnet that the device is located in.
	SubnetArn *string `pulumi:"subnetArn"`
	// The Zone that the device is located in. Specify the ID of an Availability Zone, Local Zone, Wavelength Zone, or an Outpost.
	Zone *string `pulumi:"zone"`
}

// DeviceAwsLocationInput is an input type that accepts DeviceAwsLocationArgs and DeviceAwsLocationOutput values.
// You can construct a concrete instance of `DeviceAwsLocationInput` via:
//
//          DeviceAwsLocationArgs{...}
type DeviceAwsLocationInput interface {
	pulumi.Input

	ToDeviceAwsLocationOutput() DeviceAwsLocationOutput
	ToDeviceAwsLocationOutputWithContext(context.Context) DeviceAwsLocationOutput
}

type DeviceAwsLocationArgs struct {
	// The Amazon Resource Name (ARN) of the subnet that the device is located in.
	SubnetArn pulumi.StringPtrInput `pulumi:"subnetArn"`
	// The Zone that the device is located in. Specify the ID of an Availability Zone, Local Zone, Wavelength Zone, or an Outpost.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (DeviceAwsLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceAwsLocation)(nil)).Elem()
}

func (i DeviceAwsLocationArgs) ToDeviceAwsLocationOutput() DeviceAwsLocationOutput {
	return i.ToDeviceAwsLocationOutputWithContext(context.Background())
}

func (i DeviceAwsLocationArgs) ToDeviceAwsLocationOutputWithContext(ctx context.Context) DeviceAwsLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceAwsLocationOutput)
}

func (i DeviceAwsLocationArgs) ToDeviceAwsLocationPtrOutput() DeviceAwsLocationPtrOutput {
	return i.ToDeviceAwsLocationPtrOutputWithContext(context.Background())
}

func (i DeviceAwsLocationArgs) ToDeviceAwsLocationPtrOutputWithContext(ctx context.Context) DeviceAwsLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceAwsLocationOutput).ToDeviceAwsLocationPtrOutputWithContext(ctx)
}

// DeviceAwsLocationPtrInput is an input type that accepts DeviceAwsLocationArgs, DeviceAwsLocationPtr and DeviceAwsLocationPtrOutput values.
// You can construct a concrete instance of `DeviceAwsLocationPtrInput` via:
//
//          DeviceAwsLocationArgs{...}
//
//  or:
//
//          nil
type DeviceAwsLocationPtrInput interface {
	pulumi.Input

	ToDeviceAwsLocationPtrOutput() DeviceAwsLocationPtrOutput
	ToDeviceAwsLocationPtrOutputWithContext(context.Context) DeviceAwsLocationPtrOutput
}

type deviceAwsLocationPtrType DeviceAwsLocationArgs

func DeviceAwsLocationPtr(v *DeviceAwsLocationArgs) DeviceAwsLocationPtrInput {
	return (*deviceAwsLocationPtrType)(v)
}

func (*deviceAwsLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceAwsLocation)(nil)).Elem()
}

func (i *deviceAwsLocationPtrType) ToDeviceAwsLocationPtrOutput() DeviceAwsLocationPtrOutput {
	return i.ToDeviceAwsLocationPtrOutputWithContext(context.Background())
}

func (i *deviceAwsLocationPtrType) ToDeviceAwsLocationPtrOutputWithContext(ctx context.Context) DeviceAwsLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceAwsLocationPtrOutput)
}

type DeviceAwsLocationOutput struct{ *pulumi.OutputState }

func (DeviceAwsLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceAwsLocation)(nil)).Elem()
}

func (o DeviceAwsLocationOutput) ToDeviceAwsLocationOutput() DeviceAwsLocationOutput {
	return o
}

func (o DeviceAwsLocationOutput) ToDeviceAwsLocationOutputWithContext(ctx context.Context) DeviceAwsLocationOutput {
	return o
}

func (o DeviceAwsLocationOutput) ToDeviceAwsLocationPtrOutput() DeviceAwsLocationPtrOutput {
	return o.ToDeviceAwsLocationPtrOutputWithContext(context.Background())
}

func (o DeviceAwsLocationOutput) ToDeviceAwsLocationPtrOutputWithContext(ctx context.Context) DeviceAwsLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeviceAwsLocation) *DeviceAwsLocation {
		return &v
	}).(DeviceAwsLocationPtrOutput)
}

// The Amazon Resource Name (ARN) of the subnet that the device is located in.
func (o DeviceAwsLocationOutput) SubnetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceAwsLocation) *string { return v.SubnetArn }).(pulumi.StringPtrOutput)
}

// The Zone that the device is located in. Specify the ID of an Availability Zone, Local Zone, Wavelength Zone, or an Outpost.
func (o DeviceAwsLocationOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceAwsLocation) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type DeviceAwsLocationPtrOutput struct{ *pulumi.OutputState }

func (DeviceAwsLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceAwsLocation)(nil)).Elem()
}

func (o DeviceAwsLocationPtrOutput) ToDeviceAwsLocationPtrOutput() DeviceAwsLocationPtrOutput {
	return o
}

func (o DeviceAwsLocationPtrOutput) ToDeviceAwsLocationPtrOutputWithContext(ctx context.Context) DeviceAwsLocationPtrOutput {
	return o
}

func (o DeviceAwsLocationPtrOutput) Elem() DeviceAwsLocationOutput {
	return o.ApplyT(func(v *DeviceAwsLocation) DeviceAwsLocation {
		if v != nil {
			return *v
		}
		var ret DeviceAwsLocation
		return ret
	}).(DeviceAwsLocationOutput)
}

// The Amazon Resource Name (ARN) of the subnet that the device is located in.
func (o DeviceAwsLocationPtrOutput) SubnetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceAwsLocation) *string {
		if v == nil {
			return nil
		}
		return v.SubnetArn
	}).(pulumi.StringPtrOutput)
}

// The Zone that the device is located in. Specify the ID of an Availability Zone, Local Zone, Wavelength Zone, or an Outpost.
func (o DeviceAwsLocationPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceAwsLocation) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

type DeviceLocation struct {
	// The physical address.
	Address *string `pulumi:"address"`
	// The latitude.
	Latitude *string `pulumi:"latitude"`
	// The longitude.
	Longitude *string `pulumi:"longitude"`
}

// DeviceLocationInput is an input type that accepts DeviceLocationArgs and DeviceLocationOutput values.
// You can construct a concrete instance of `DeviceLocationInput` via:
//
//          DeviceLocationArgs{...}
type DeviceLocationInput interface {
	pulumi.Input

	ToDeviceLocationOutput() DeviceLocationOutput
	ToDeviceLocationOutputWithContext(context.Context) DeviceLocationOutput
}

type DeviceLocationArgs struct {
	// The physical address.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// The latitude.
	Latitude pulumi.StringPtrInput `pulumi:"latitude"`
	// The longitude.
	Longitude pulumi.StringPtrInput `pulumi:"longitude"`
}

func (DeviceLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceLocation)(nil)).Elem()
}

func (i DeviceLocationArgs) ToDeviceLocationOutput() DeviceLocationOutput {
	return i.ToDeviceLocationOutputWithContext(context.Background())
}

func (i DeviceLocationArgs) ToDeviceLocationOutputWithContext(ctx context.Context) DeviceLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLocationOutput)
}

func (i DeviceLocationArgs) ToDeviceLocationPtrOutput() DeviceLocationPtrOutput {
	return i.ToDeviceLocationPtrOutputWithContext(context.Background())
}

func (i DeviceLocationArgs) ToDeviceLocationPtrOutputWithContext(ctx context.Context) DeviceLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLocationOutput).ToDeviceLocationPtrOutputWithContext(ctx)
}

// DeviceLocationPtrInput is an input type that accepts DeviceLocationArgs, DeviceLocationPtr and DeviceLocationPtrOutput values.
// You can construct a concrete instance of `DeviceLocationPtrInput` via:
//
//          DeviceLocationArgs{...}
//
//  or:
//
//          nil
type DeviceLocationPtrInput interface {
	pulumi.Input

	ToDeviceLocationPtrOutput() DeviceLocationPtrOutput
	ToDeviceLocationPtrOutputWithContext(context.Context) DeviceLocationPtrOutput
}

type deviceLocationPtrType DeviceLocationArgs

func DeviceLocationPtr(v *DeviceLocationArgs) DeviceLocationPtrInput {
	return (*deviceLocationPtrType)(v)
}

func (*deviceLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceLocation)(nil)).Elem()
}

func (i *deviceLocationPtrType) ToDeviceLocationPtrOutput() DeviceLocationPtrOutput {
	return i.ToDeviceLocationPtrOutputWithContext(context.Background())
}

func (i *deviceLocationPtrType) ToDeviceLocationPtrOutputWithContext(ctx context.Context) DeviceLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceLocationPtrOutput)
}

type DeviceLocationOutput struct{ *pulumi.OutputState }

func (DeviceLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceLocation)(nil)).Elem()
}

func (o DeviceLocationOutput) ToDeviceLocationOutput() DeviceLocationOutput {
	return o
}

func (o DeviceLocationOutput) ToDeviceLocationOutputWithContext(ctx context.Context) DeviceLocationOutput {
	return o
}

func (o DeviceLocationOutput) ToDeviceLocationPtrOutput() DeviceLocationPtrOutput {
	return o.ToDeviceLocationPtrOutputWithContext(context.Background())
}

func (o DeviceLocationOutput) ToDeviceLocationPtrOutputWithContext(ctx context.Context) DeviceLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeviceLocation) *DeviceLocation {
		return &v
	}).(DeviceLocationPtrOutput)
}

// The physical address.
func (o DeviceLocationOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceLocation) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// The latitude.
func (o DeviceLocationOutput) Latitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceLocation) *string { return v.Latitude }).(pulumi.StringPtrOutput)
}

// The longitude.
func (o DeviceLocationOutput) Longitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceLocation) *string { return v.Longitude }).(pulumi.StringPtrOutput)
}

type DeviceLocationPtrOutput struct{ *pulumi.OutputState }

func (DeviceLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceLocation)(nil)).Elem()
}

func (o DeviceLocationPtrOutput) ToDeviceLocationPtrOutput() DeviceLocationPtrOutput {
	return o
}

func (o DeviceLocationPtrOutput) ToDeviceLocationPtrOutputWithContext(ctx context.Context) DeviceLocationPtrOutput {
	return o
}

func (o DeviceLocationPtrOutput) Elem() DeviceLocationOutput {
	return o.ApplyT(func(v *DeviceLocation) DeviceLocation {
		if v != nil {
			return *v
		}
		var ret DeviceLocation
		return ret
	}).(DeviceLocationOutput)
}

// The physical address.
func (o DeviceLocationPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLocation) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// The latitude.
func (o DeviceLocationPtrOutput) Latitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLocation) *string {
		if v == nil {
			return nil
		}
		return v.Latitude
	}).(pulumi.StringPtrOutput)
}

// The longitude.
func (o DeviceLocationPtrOutput) Longitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceLocation) *string {
		if v == nil {
			return nil
		}
		return v.Longitude
	}).(pulumi.StringPtrOutput)
}

type LinkBandwidth struct {
	// Download speed in Mbps.
	DownloadSpeed *int `pulumi:"downloadSpeed"`
	// Upload speed in Mbps.
	UploadSpeed *int `pulumi:"uploadSpeed"`
}

// LinkBandwidthInput is an input type that accepts LinkBandwidthArgs and LinkBandwidthOutput values.
// You can construct a concrete instance of `LinkBandwidthInput` via:
//
//          LinkBandwidthArgs{...}
type LinkBandwidthInput interface {
	pulumi.Input

	ToLinkBandwidthOutput() LinkBandwidthOutput
	ToLinkBandwidthOutputWithContext(context.Context) LinkBandwidthOutput
}

type LinkBandwidthArgs struct {
	// Download speed in Mbps.
	DownloadSpeed pulumi.IntPtrInput `pulumi:"downloadSpeed"`
	// Upload speed in Mbps.
	UploadSpeed pulumi.IntPtrInput `pulumi:"uploadSpeed"`
}

func (LinkBandwidthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkBandwidth)(nil)).Elem()
}

func (i LinkBandwidthArgs) ToLinkBandwidthOutput() LinkBandwidthOutput {
	return i.ToLinkBandwidthOutputWithContext(context.Background())
}

func (i LinkBandwidthArgs) ToLinkBandwidthOutputWithContext(ctx context.Context) LinkBandwidthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkBandwidthOutput)
}

func (i LinkBandwidthArgs) ToLinkBandwidthPtrOutput() LinkBandwidthPtrOutput {
	return i.ToLinkBandwidthPtrOutputWithContext(context.Background())
}

func (i LinkBandwidthArgs) ToLinkBandwidthPtrOutputWithContext(ctx context.Context) LinkBandwidthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkBandwidthOutput).ToLinkBandwidthPtrOutputWithContext(ctx)
}

// LinkBandwidthPtrInput is an input type that accepts LinkBandwidthArgs, LinkBandwidthPtr and LinkBandwidthPtrOutput values.
// You can construct a concrete instance of `LinkBandwidthPtrInput` via:
//
//          LinkBandwidthArgs{...}
//
//  or:
//
//          nil
type LinkBandwidthPtrInput interface {
	pulumi.Input

	ToLinkBandwidthPtrOutput() LinkBandwidthPtrOutput
	ToLinkBandwidthPtrOutputWithContext(context.Context) LinkBandwidthPtrOutput
}

type linkBandwidthPtrType LinkBandwidthArgs

func LinkBandwidthPtr(v *LinkBandwidthArgs) LinkBandwidthPtrInput {
	return (*linkBandwidthPtrType)(v)
}

func (*linkBandwidthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkBandwidth)(nil)).Elem()
}

func (i *linkBandwidthPtrType) ToLinkBandwidthPtrOutput() LinkBandwidthPtrOutput {
	return i.ToLinkBandwidthPtrOutputWithContext(context.Background())
}

func (i *linkBandwidthPtrType) ToLinkBandwidthPtrOutputWithContext(ctx context.Context) LinkBandwidthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LinkBandwidthPtrOutput)
}

type LinkBandwidthOutput struct{ *pulumi.OutputState }

func (LinkBandwidthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LinkBandwidth)(nil)).Elem()
}

func (o LinkBandwidthOutput) ToLinkBandwidthOutput() LinkBandwidthOutput {
	return o
}

func (o LinkBandwidthOutput) ToLinkBandwidthOutputWithContext(ctx context.Context) LinkBandwidthOutput {
	return o
}

func (o LinkBandwidthOutput) ToLinkBandwidthPtrOutput() LinkBandwidthPtrOutput {
	return o.ToLinkBandwidthPtrOutputWithContext(context.Background())
}

func (o LinkBandwidthOutput) ToLinkBandwidthPtrOutputWithContext(ctx context.Context) LinkBandwidthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LinkBandwidth) *LinkBandwidth {
		return &v
	}).(LinkBandwidthPtrOutput)
}

// Download speed in Mbps.
func (o LinkBandwidthOutput) DownloadSpeed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LinkBandwidth) *int { return v.DownloadSpeed }).(pulumi.IntPtrOutput)
}

// Upload speed in Mbps.
func (o LinkBandwidthOutput) UploadSpeed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LinkBandwidth) *int { return v.UploadSpeed }).(pulumi.IntPtrOutput)
}

type LinkBandwidthPtrOutput struct{ *pulumi.OutputState }

func (LinkBandwidthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LinkBandwidth)(nil)).Elem()
}

func (o LinkBandwidthPtrOutput) ToLinkBandwidthPtrOutput() LinkBandwidthPtrOutput {
	return o
}

func (o LinkBandwidthPtrOutput) ToLinkBandwidthPtrOutputWithContext(ctx context.Context) LinkBandwidthPtrOutput {
	return o
}

func (o LinkBandwidthPtrOutput) Elem() LinkBandwidthOutput {
	return o.ApplyT(func(v *LinkBandwidth) LinkBandwidth {
		if v != nil {
			return *v
		}
		var ret LinkBandwidth
		return ret
	}).(LinkBandwidthOutput)
}

// Download speed in Mbps.
func (o LinkBandwidthPtrOutput) DownloadSpeed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LinkBandwidth) *int {
		if v == nil {
			return nil
		}
		return v.DownloadSpeed
	}).(pulumi.IntPtrOutput)
}

// Upload speed in Mbps.
func (o LinkBandwidthPtrOutput) UploadSpeed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LinkBandwidth) *int {
		if v == nil {
			return nil
		}
		return v.UploadSpeed
	}).(pulumi.IntPtrOutput)
}

type SiteLocation struct {
	// Address of the location.
	Address *string `pulumi:"address"`
	// Latitude of the location.
	Latitude *string `pulumi:"latitude"`
	// Longitude of the location.
	Longitude *string `pulumi:"longitude"`
}

// SiteLocationInput is an input type that accepts SiteLocationArgs and SiteLocationOutput values.
// You can construct a concrete instance of `SiteLocationInput` via:
//
//          SiteLocationArgs{...}
type SiteLocationInput interface {
	pulumi.Input

	ToSiteLocationOutput() SiteLocationOutput
	ToSiteLocationOutputWithContext(context.Context) SiteLocationOutput
}

type SiteLocationArgs struct {
	// Address of the location.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Latitude of the location.
	Latitude pulumi.StringPtrInput `pulumi:"latitude"`
	// Longitude of the location.
	Longitude pulumi.StringPtrInput `pulumi:"longitude"`
}

func (SiteLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLocation)(nil)).Elem()
}

func (i SiteLocationArgs) ToSiteLocationOutput() SiteLocationOutput {
	return i.ToSiteLocationOutputWithContext(context.Background())
}

func (i SiteLocationArgs) ToSiteLocationOutputWithContext(ctx context.Context) SiteLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLocationOutput)
}

func (i SiteLocationArgs) ToSiteLocationPtrOutput() SiteLocationPtrOutput {
	return i.ToSiteLocationPtrOutputWithContext(context.Background())
}

func (i SiteLocationArgs) ToSiteLocationPtrOutputWithContext(ctx context.Context) SiteLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLocationOutput).ToSiteLocationPtrOutputWithContext(ctx)
}

// SiteLocationPtrInput is an input type that accepts SiteLocationArgs, SiteLocationPtr and SiteLocationPtrOutput values.
// You can construct a concrete instance of `SiteLocationPtrInput` via:
//
//          SiteLocationArgs{...}
//
//  or:
//
//          nil
type SiteLocationPtrInput interface {
	pulumi.Input

	ToSiteLocationPtrOutput() SiteLocationPtrOutput
	ToSiteLocationPtrOutputWithContext(context.Context) SiteLocationPtrOutput
}

type siteLocationPtrType SiteLocationArgs

func SiteLocationPtr(v *SiteLocationArgs) SiteLocationPtrInput {
	return (*siteLocationPtrType)(v)
}

func (*siteLocationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteLocation)(nil)).Elem()
}

func (i *siteLocationPtrType) ToSiteLocationPtrOutput() SiteLocationPtrOutput {
	return i.ToSiteLocationPtrOutputWithContext(context.Background())
}

func (i *siteLocationPtrType) ToSiteLocationPtrOutputWithContext(ctx context.Context) SiteLocationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SiteLocationPtrOutput)
}

type SiteLocationOutput struct{ *pulumi.OutputState }

func (SiteLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SiteLocation)(nil)).Elem()
}

func (o SiteLocationOutput) ToSiteLocationOutput() SiteLocationOutput {
	return o
}

func (o SiteLocationOutput) ToSiteLocationOutputWithContext(ctx context.Context) SiteLocationOutput {
	return o
}

func (o SiteLocationOutput) ToSiteLocationPtrOutput() SiteLocationPtrOutput {
	return o.ToSiteLocationPtrOutputWithContext(context.Background())
}

func (o SiteLocationOutput) ToSiteLocationPtrOutputWithContext(ctx context.Context) SiteLocationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SiteLocation) *SiteLocation {
		return &v
	}).(SiteLocationPtrOutput)
}

// Address of the location.
func (o SiteLocationOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteLocation) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Latitude of the location.
func (o SiteLocationOutput) Latitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteLocation) *string { return v.Latitude }).(pulumi.StringPtrOutput)
}

// Longitude of the location.
func (o SiteLocationOutput) Longitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SiteLocation) *string { return v.Longitude }).(pulumi.StringPtrOutput)
}

type SiteLocationPtrOutput struct{ *pulumi.OutputState }

func (SiteLocationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SiteLocation)(nil)).Elem()
}

func (o SiteLocationPtrOutput) ToSiteLocationPtrOutput() SiteLocationPtrOutput {
	return o
}

func (o SiteLocationPtrOutput) ToSiteLocationPtrOutputWithContext(ctx context.Context) SiteLocationPtrOutput {
	return o
}

func (o SiteLocationPtrOutput) Elem() SiteLocationOutput {
	return o.ApplyT(func(v *SiteLocation) SiteLocation {
		if v != nil {
			return *v
		}
		var ret SiteLocation
		return ret
	}).(SiteLocationOutput)
}

// Address of the location.
func (o SiteLocationPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteLocation) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

// Latitude of the location.
func (o SiteLocationPtrOutput) Latitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteLocation) *string {
		if v == nil {
			return nil
		}
		return v.Latitude
	}).(pulumi.StringPtrOutput)
}

// Longitude of the location.
func (o SiteLocationPtrOutput) Longitude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SiteLocation) *string {
		if v == nil {
			return nil
		}
		return v.Longitude
	}).(pulumi.StringPtrOutput)
}

type GetDeviceAwsLocation struct {
	// The Amazon Resource Name (ARN) of the subnet that the device is located in.
	SubnetArn string `pulumi:"subnetArn"`
	// The Zone that the device is located in.
	Zone string `pulumi:"zone"`
}

// GetDeviceAwsLocationInput is an input type that accepts GetDeviceAwsLocationArgs and GetDeviceAwsLocationOutput values.
// You can construct a concrete instance of `GetDeviceAwsLocationInput` via:
//
//          GetDeviceAwsLocationArgs{...}
type GetDeviceAwsLocationInput interface {
	pulumi.Input

	ToGetDeviceAwsLocationOutput() GetDeviceAwsLocationOutput
	ToGetDeviceAwsLocationOutputWithContext(context.Context) GetDeviceAwsLocationOutput
}

type GetDeviceAwsLocationArgs struct {
	// The Amazon Resource Name (ARN) of the subnet that the device is located in.
	SubnetArn pulumi.StringInput `pulumi:"subnetArn"`
	// The Zone that the device is located in.
	Zone pulumi.StringInput `pulumi:"zone"`
}

func (GetDeviceAwsLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeviceAwsLocation)(nil)).Elem()
}

func (i GetDeviceAwsLocationArgs) ToGetDeviceAwsLocationOutput() GetDeviceAwsLocationOutput {
	return i.ToGetDeviceAwsLocationOutputWithContext(context.Background())
}

func (i GetDeviceAwsLocationArgs) ToGetDeviceAwsLocationOutputWithContext(ctx context.Context) GetDeviceAwsLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeviceAwsLocationOutput)
}

// GetDeviceAwsLocationArrayInput is an input type that accepts GetDeviceAwsLocationArray and GetDeviceAwsLocationArrayOutput values.
// You can construct a concrete instance of `GetDeviceAwsLocationArrayInput` via:
//
//          GetDeviceAwsLocationArray{ GetDeviceAwsLocationArgs{...} }
type GetDeviceAwsLocationArrayInput interface {
	pulumi.Input

	ToGetDeviceAwsLocationArrayOutput() GetDeviceAwsLocationArrayOutput
	ToGetDeviceAwsLocationArrayOutputWithContext(context.Context) GetDeviceAwsLocationArrayOutput
}

type GetDeviceAwsLocationArray []GetDeviceAwsLocationInput

func (GetDeviceAwsLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeviceAwsLocation)(nil)).Elem()
}

func (i GetDeviceAwsLocationArray) ToGetDeviceAwsLocationArrayOutput() GetDeviceAwsLocationArrayOutput {
	return i.ToGetDeviceAwsLocationArrayOutputWithContext(context.Background())
}

func (i GetDeviceAwsLocationArray) ToGetDeviceAwsLocationArrayOutputWithContext(ctx context.Context) GetDeviceAwsLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeviceAwsLocationArrayOutput)
}

type GetDeviceAwsLocationOutput struct{ *pulumi.OutputState }

func (GetDeviceAwsLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeviceAwsLocation)(nil)).Elem()
}

func (o GetDeviceAwsLocationOutput) ToGetDeviceAwsLocationOutput() GetDeviceAwsLocationOutput {
	return o
}

func (o GetDeviceAwsLocationOutput) ToGetDeviceAwsLocationOutputWithContext(ctx context.Context) GetDeviceAwsLocationOutput {
	return o
}

// The Amazon Resource Name (ARN) of the subnet that the device is located in.
func (o GetDeviceAwsLocationOutput) SubnetArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeviceAwsLocation) string { return v.SubnetArn }).(pulumi.StringOutput)
}

// The Zone that the device is located in.
func (o GetDeviceAwsLocationOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeviceAwsLocation) string { return v.Zone }).(pulumi.StringOutput)
}

type GetDeviceAwsLocationArrayOutput struct{ *pulumi.OutputState }

func (GetDeviceAwsLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeviceAwsLocation)(nil)).Elem()
}

func (o GetDeviceAwsLocationArrayOutput) ToGetDeviceAwsLocationArrayOutput() GetDeviceAwsLocationArrayOutput {
	return o
}

func (o GetDeviceAwsLocationArrayOutput) ToGetDeviceAwsLocationArrayOutputWithContext(ctx context.Context) GetDeviceAwsLocationArrayOutput {
	return o
}

func (o GetDeviceAwsLocationArrayOutput) Index(i pulumi.IntInput) GetDeviceAwsLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeviceAwsLocation {
		return vs[0].([]GetDeviceAwsLocation)[vs[1].(int)]
	}).(GetDeviceAwsLocationOutput)
}

type GetDeviceLocation struct {
	// The physical address.
	Address string `pulumi:"address"`
	// The latitude.
	Latitude string `pulumi:"latitude"`
	// The longitude.
	Longitude string `pulumi:"longitude"`
}

// GetDeviceLocationInput is an input type that accepts GetDeviceLocationArgs and GetDeviceLocationOutput values.
// You can construct a concrete instance of `GetDeviceLocationInput` via:
//
//          GetDeviceLocationArgs{...}
type GetDeviceLocationInput interface {
	pulumi.Input

	ToGetDeviceLocationOutput() GetDeviceLocationOutput
	ToGetDeviceLocationOutputWithContext(context.Context) GetDeviceLocationOutput
}

type GetDeviceLocationArgs struct {
	// The physical address.
	Address pulumi.StringInput `pulumi:"address"`
	// The latitude.
	Latitude pulumi.StringInput `pulumi:"latitude"`
	// The longitude.
	Longitude pulumi.StringInput `pulumi:"longitude"`
}

func (GetDeviceLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeviceLocation)(nil)).Elem()
}

func (i GetDeviceLocationArgs) ToGetDeviceLocationOutput() GetDeviceLocationOutput {
	return i.ToGetDeviceLocationOutputWithContext(context.Background())
}

func (i GetDeviceLocationArgs) ToGetDeviceLocationOutputWithContext(ctx context.Context) GetDeviceLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeviceLocationOutput)
}

// GetDeviceLocationArrayInput is an input type that accepts GetDeviceLocationArray and GetDeviceLocationArrayOutput values.
// You can construct a concrete instance of `GetDeviceLocationArrayInput` via:
//
//          GetDeviceLocationArray{ GetDeviceLocationArgs{...} }
type GetDeviceLocationArrayInput interface {
	pulumi.Input

	ToGetDeviceLocationArrayOutput() GetDeviceLocationArrayOutput
	ToGetDeviceLocationArrayOutputWithContext(context.Context) GetDeviceLocationArrayOutput
}

type GetDeviceLocationArray []GetDeviceLocationInput

func (GetDeviceLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeviceLocation)(nil)).Elem()
}

func (i GetDeviceLocationArray) ToGetDeviceLocationArrayOutput() GetDeviceLocationArrayOutput {
	return i.ToGetDeviceLocationArrayOutputWithContext(context.Background())
}

func (i GetDeviceLocationArray) ToGetDeviceLocationArrayOutputWithContext(ctx context.Context) GetDeviceLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeviceLocationArrayOutput)
}

type GetDeviceLocationOutput struct{ *pulumi.OutputState }

func (GetDeviceLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeviceLocation)(nil)).Elem()
}

func (o GetDeviceLocationOutput) ToGetDeviceLocationOutput() GetDeviceLocationOutput {
	return o
}

func (o GetDeviceLocationOutput) ToGetDeviceLocationOutputWithContext(ctx context.Context) GetDeviceLocationOutput {
	return o
}

// The physical address.
func (o GetDeviceLocationOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeviceLocation) string { return v.Address }).(pulumi.StringOutput)
}

// The latitude.
func (o GetDeviceLocationOutput) Latitude() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeviceLocation) string { return v.Latitude }).(pulumi.StringOutput)
}

// The longitude.
func (o GetDeviceLocationOutput) Longitude() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeviceLocation) string { return v.Longitude }).(pulumi.StringOutput)
}

type GetDeviceLocationArrayOutput struct{ *pulumi.OutputState }

func (GetDeviceLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeviceLocation)(nil)).Elem()
}

func (o GetDeviceLocationArrayOutput) ToGetDeviceLocationArrayOutput() GetDeviceLocationArrayOutput {
	return o
}

func (o GetDeviceLocationArrayOutput) ToGetDeviceLocationArrayOutputWithContext(ctx context.Context) GetDeviceLocationArrayOutput {
	return o
}

func (o GetDeviceLocationArrayOutput) Index(i pulumi.IntInput) GetDeviceLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeviceLocation {
		return vs[0].([]GetDeviceLocation)[vs[1].(int)]
	}).(GetDeviceLocationOutput)
}

type GetLinkBandwidth struct {
	// Download speed in Mbps.
	DownloadSpeed int `pulumi:"downloadSpeed"`
	// Upload speed in Mbps.
	UploadSpeed int `pulumi:"uploadSpeed"`
}

// GetLinkBandwidthInput is an input type that accepts GetLinkBandwidthArgs and GetLinkBandwidthOutput values.
// You can construct a concrete instance of `GetLinkBandwidthInput` via:
//
//          GetLinkBandwidthArgs{...}
type GetLinkBandwidthInput interface {
	pulumi.Input

	ToGetLinkBandwidthOutput() GetLinkBandwidthOutput
	ToGetLinkBandwidthOutputWithContext(context.Context) GetLinkBandwidthOutput
}

type GetLinkBandwidthArgs struct {
	// Download speed in Mbps.
	DownloadSpeed pulumi.IntInput `pulumi:"downloadSpeed"`
	// Upload speed in Mbps.
	UploadSpeed pulumi.IntInput `pulumi:"uploadSpeed"`
}

func (GetLinkBandwidthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLinkBandwidth)(nil)).Elem()
}

func (i GetLinkBandwidthArgs) ToGetLinkBandwidthOutput() GetLinkBandwidthOutput {
	return i.ToGetLinkBandwidthOutputWithContext(context.Background())
}

func (i GetLinkBandwidthArgs) ToGetLinkBandwidthOutputWithContext(ctx context.Context) GetLinkBandwidthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLinkBandwidthOutput)
}

// GetLinkBandwidthArrayInput is an input type that accepts GetLinkBandwidthArray and GetLinkBandwidthArrayOutput values.
// You can construct a concrete instance of `GetLinkBandwidthArrayInput` via:
//
//          GetLinkBandwidthArray{ GetLinkBandwidthArgs{...} }
type GetLinkBandwidthArrayInput interface {
	pulumi.Input

	ToGetLinkBandwidthArrayOutput() GetLinkBandwidthArrayOutput
	ToGetLinkBandwidthArrayOutputWithContext(context.Context) GetLinkBandwidthArrayOutput
}

type GetLinkBandwidthArray []GetLinkBandwidthInput

func (GetLinkBandwidthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLinkBandwidth)(nil)).Elem()
}

func (i GetLinkBandwidthArray) ToGetLinkBandwidthArrayOutput() GetLinkBandwidthArrayOutput {
	return i.ToGetLinkBandwidthArrayOutputWithContext(context.Background())
}

func (i GetLinkBandwidthArray) ToGetLinkBandwidthArrayOutputWithContext(ctx context.Context) GetLinkBandwidthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLinkBandwidthArrayOutput)
}

type GetLinkBandwidthOutput struct{ *pulumi.OutputState }

func (GetLinkBandwidthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLinkBandwidth)(nil)).Elem()
}

func (o GetLinkBandwidthOutput) ToGetLinkBandwidthOutput() GetLinkBandwidthOutput {
	return o
}

func (o GetLinkBandwidthOutput) ToGetLinkBandwidthOutputWithContext(ctx context.Context) GetLinkBandwidthOutput {
	return o
}

// Download speed in Mbps.
func (o GetLinkBandwidthOutput) DownloadSpeed() pulumi.IntOutput {
	return o.ApplyT(func(v GetLinkBandwidth) int { return v.DownloadSpeed }).(pulumi.IntOutput)
}

// Upload speed in Mbps.
func (o GetLinkBandwidthOutput) UploadSpeed() pulumi.IntOutput {
	return o.ApplyT(func(v GetLinkBandwidth) int { return v.UploadSpeed }).(pulumi.IntOutput)
}

type GetLinkBandwidthArrayOutput struct{ *pulumi.OutputState }

func (GetLinkBandwidthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLinkBandwidth)(nil)).Elem()
}

func (o GetLinkBandwidthArrayOutput) ToGetLinkBandwidthArrayOutput() GetLinkBandwidthArrayOutput {
	return o
}

func (o GetLinkBandwidthArrayOutput) ToGetLinkBandwidthArrayOutputWithContext(ctx context.Context) GetLinkBandwidthArrayOutput {
	return o
}

func (o GetLinkBandwidthArrayOutput) Index(i pulumi.IntInput) GetLinkBandwidthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLinkBandwidth {
		return vs[0].([]GetLinkBandwidth)[vs[1].(int)]
	}).(GetLinkBandwidthOutput)
}

type GetSiteLocation struct {
	// Address of the location.
	Address string `pulumi:"address"`
	// Latitude of the location.
	Latitude string `pulumi:"latitude"`
	// Longitude of the location.
	Longitude string `pulumi:"longitude"`
}

// GetSiteLocationInput is an input type that accepts GetSiteLocationArgs and GetSiteLocationOutput values.
// You can construct a concrete instance of `GetSiteLocationInput` via:
//
//          GetSiteLocationArgs{...}
type GetSiteLocationInput interface {
	pulumi.Input

	ToGetSiteLocationOutput() GetSiteLocationOutput
	ToGetSiteLocationOutputWithContext(context.Context) GetSiteLocationOutput
}

type GetSiteLocationArgs struct {
	// Address of the location.
	Address pulumi.StringInput `pulumi:"address"`
	// Latitude of the location.
	Latitude pulumi.StringInput `pulumi:"latitude"`
	// Longitude of the location.
	Longitude pulumi.StringInput `pulumi:"longitude"`
}

func (GetSiteLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSiteLocation)(nil)).Elem()
}

func (i GetSiteLocationArgs) ToGetSiteLocationOutput() GetSiteLocationOutput {
	return i.ToGetSiteLocationOutputWithContext(context.Background())
}

func (i GetSiteLocationArgs) ToGetSiteLocationOutputWithContext(ctx context.Context) GetSiteLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSiteLocationOutput)
}

// GetSiteLocationArrayInput is an input type that accepts GetSiteLocationArray and GetSiteLocationArrayOutput values.
// You can construct a concrete instance of `GetSiteLocationArrayInput` via:
//
//          GetSiteLocationArray{ GetSiteLocationArgs{...} }
type GetSiteLocationArrayInput interface {
	pulumi.Input

	ToGetSiteLocationArrayOutput() GetSiteLocationArrayOutput
	ToGetSiteLocationArrayOutputWithContext(context.Context) GetSiteLocationArrayOutput
}

type GetSiteLocationArray []GetSiteLocationInput

func (GetSiteLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSiteLocation)(nil)).Elem()
}

func (i GetSiteLocationArray) ToGetSiteLocationArrayOutput() GetSiteLocationArrayOutput {
	return i.ToGetSiteLocationArrayOutputWithContext(context.Background())
}

func (i GetSiteLocationArray) ToGetSiteLocationArrayOutputWithContext(ctx context.Context) GetSiteLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSiteLocationArrayOutput)
}

type GetSiteLocationOutput struct{ *pulumi.OutputState }

func (GetSiteLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSiteLocation)(nil)).Elem()
}

func (o GetSiteLocationOutput) ToGetSiteLocationOutput() GetSiteLocationOutput {
	return o
}

func (o GetSiteLocationOutput) ToGetSiteLocationOutputWithContext(ctx context.Context) GetSiteLocationOutput {
	return o
}

// Address of the location.
func (o GetSiteLocationOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetSiteLocation) string { return v.Address }).(pulumi.StringOutput)
}

// Latitude of the location.
func (o GetSiteLocationOutput) Latitude() pulumi.StringOutput {
	return o.ApplyT(func(v GetSiteLocation) string { return v.Latitude }).(pulumi.StringOutput)
}

// Longitude of the location.
func (o GetSiteLocationOutput) Longitude() pulumi.StringOutput {
	return o.ApplyT(func(v GetSiteLocation) string { return v.Longitude }).(pulumi.StringOutput)
}

type GetSiteLocationArrayOutput struct{ *pulumi.OutputState }

func (GetSiteLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSiteLocation)(nil)).Elem()
}

func (o GetSiteLocationArrayOutput) ToGetSiteLocationArrayOutput() GetSiteLocationArrayOutput {
	return o
}

func (o GetSiteLocationArrayOutput) ToGetSiteLocationArrayOutputWithContext(ctx context.Context) GetSiteLocationArrayOutput {
	return o
}

func (o GetSiteLocationArrayOutput) Index(i pulumi.IntInput) GetSiteLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSiteLocation {
		return vs[0].([]GetSiteLocation)[vs[1].(int)]
	}).(GetSiteLocationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceAwsLocationInput)(nil)).Elem(), DeviceAwsLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceAwsLocationPtrInput)(nil)).Elem(), DeviceAwsLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceLocationInput)(nil)).Elem(), DeviceLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceLocationPtrInput)(nil)).Elem(), DeviceLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkBandwidthInput)(nil)).Elem(), LinkBandwidthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LinkBandwidthPtrInput)(nil)).Elem(), LinkBandwidthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SiteLocationInput)(nil)).Elem(), SiteLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SiteLocationPtrInput)(nil)).Elem(), SiteLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeviceAwsLocationInput)(nil)).Elem(), GetDeviceAwsLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeviceAwsLocationArrayInput)(nil)).Elem(), GetDeviceAwsLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeviceLocationInput)(nil)).Elem(), GetDeviceLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeviceLocationArrayInput)(nil)).Elem(), GetDeviceLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLinkBandwidthInput)(nil)).Elem(), GetLinkBandwidthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLinkBandwidthArrayInput)(nil)).Elem(), GetLinkBandwidthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSiteLocationInput)(nil)).Elem(), GetSiteLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSiteLocationArrayInput)(nil)).Elem(), GetSiteLocationArray{})
	pulumi.RegisterOutputType(DeviceAwsLocationOutput{})
	pulumi.RegisterOutputType(DeviceAwsLocationPtrOutput{})
	pulumi.RegisterOutputType(DeviceLocationOutput{})
	pulumi.RegisterOutputType(DeviceLocationPtrOutput{})
	pulumi.RegisterOutputType(LinkBandwidthOutput{})
	pulumi.RegisterOutputType(LinkBandwidthPtrOutput{})
	pulumi.RegisterOutputType(SiteLocationOutput{})
	pulumi.RegisterOutputType(SiteLocationPtrOutput{})
	pulumi.RegisterOutputType(GetDeviceAwsLocationOutput{})
	pulumi.RegisterOutputType(GetDeviceAwsLocationArrayOutput{})
	pulumi.RegisterOutputType(GetDeviceLocationOutput{})
	pulumi.RegisterOutputType(GetDeviceLocationArrayOutput{})
	pulumi.RegisterOutputType(GetLinkBandwidthOutput{})
	pulumi.RegisterOutputType(GetLinkBandwidthArrayOutput{})
	pulumi.RegisterOutputType(GetSiteLocationOutput{})
	pulumi.RegisterOutputType(GetSiteLocationArrayOutput{})
}
