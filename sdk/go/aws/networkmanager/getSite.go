// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupSite(ctx *pulumi.Context, args *LookupSiteArgs, opts ...pulumi.InvokeOption) (*LookupSiteResult, error) {
	var rv LookupSiteResult
	err := ctx.Invoke("aws:networkmanager/getSite:getSite", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSite.
type LookupSiteArgs struct {
	GlobalNetworkId string            `pulumi:"globalNetworkId"`
	SiteId          string            `pulumi:"siteId"`
	Tags            map[string]string `pulumi:"tags"`
}

// A collection of values returned by getSite.
type LookupSiteResult struct {
	Arn             string `pulumi:"arn"`
	Description     string `pulumi:"description"`
	GlobalNetworkId string `pulumi:"globalNetworkId"`
	// The provider-assigned unique ID for this managed resource.
	Id        string            `pulumi:"id"`
	Locations []GetSiteLocation `pulumi:"locations"`
	SiteId    string            `pulumi:"siteId"`
	Tags      map[string]string `pulumi:"tags"`
}

func LookupSiteOutput(ctx *pulumi.Context, args LookupSiteOutputArgs, opts ...pulumi.InvokeOption) LookupSiteResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSiteResult, error) {
			args := v.(LookupSiteArgs)
			r, err := LookupSite(ctx, &args, opts...)
			var s LookupSiteResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSiteResultOutput)
}

// A collection of arguments for invoking getSite.
type LookupSiteOutputArgs struct {
	GlobalNetworkId pulumi.StringInput    `pulumi:"globalNetworkId"`
	SiteId          pulumi.StringInput    `pulumi:"siteId"`
	Tags            pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupSiteOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSiteArgs)(nil)).Elem()
}

// A collection of values returned by getSite.
type LookupSiteResultOutput struct{ *pulumi.OutputState }

func (LookupSiteResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSiteResult)(nil)).Elem()
}

func (o LookupSiteResultOutput) ToLookupSiteResultOutput() LookupSiteResultOutput {
	return o
}

func (o LookupSiteResultOutput) ToLookupSiteResultOutputWithContext(ctx context.Context) LookupSiteResultOutput {
	return o
}

func (o LookupSiteResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSiteResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupSiteResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSiteResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupSiteResultOutput) GlobalNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSiteResult) string { return v.GlobalNetworkId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSiteResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSiteResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSiteResultOutput) Locations() GetSiteLocationArrayOutput {
	return o.ApplyT(func(v LookupSiteResult) []GetSiteLocation { return v.Locations }).(GetSiteLocationArrayOutput)
}

func (o LookupSiteResultOutput) SiteId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSiteResult) string { return v.SiteId }).(pulumi.StringOutput)
}

func (o LookupSiteResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSiteResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSiteResultOutput{})
}
