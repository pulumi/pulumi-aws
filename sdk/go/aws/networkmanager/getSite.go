// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieve information about a site.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/networkmanager"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := networkmanager.LookupSite(ctx, &networkmanager.LookupSiteArgs{
//				GlobalNetworkId: _var.Global_network_id,
//				SiteId:          _var.Site_id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupSite(ctx *pulumi.Context, args *LookupSiteArgs, opts ...pulumi.InvokeOption) (*LookupSiteResult, error) {
	var rv LookupSiteResult
	err := ctx.Invoke("aws:networkmanager/getSite:getSite", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSite.
type LookupSiteArgs struct {
	// ID of the Global Network of the site to retrieve.
	GlobalNetworkId string `pulumi:"globalNetworkId"`
	// ID of the specific site to retrieve.
	SiteId string `pulumi:"siteId"`
	// Key-value tags for the Site.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getSite.
type LookupSiteResult struct {
	// ARN of the site.
	Arn string `pulumi:"arn"`
	// Description of the site.
	Description     string `pulumi:"description"`
	GlobalNetworkId string `pulumi:"globalNetworkId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Site location as documented below.
	Locations []GetSiteLocation `pulumi:"locations"`
	SiteId    string            `pulumi:"siteId"`
	// Key-value tags for the Site.
	Tags map[string]string `pulumi:"tags"`
}

func LookupSiteOutput(ctx *pulumi.Context, args LookupSiteOutputArgs, opts ...pulumi.InvokeOption) LookupSiteResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSiteResult, error) {
			args := v.(LookupSiteArgs)
			r, err := LookupSite(ctx, &args, opts...)
			var s LookupSiteResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSiteResultOutput)
}

// A collection of arguments for invoking getSite.
type LookupSiteOutputArgs struct {
	// ID of the Global Network of the site to retrieve.
	GlobalNetworkId pulumi.StringInput `pulumi:"globalNetworkId"`
	// ID of the specific site to retrieve.
	SiteId pulumi.StringInput `pulumi:"siteId"`
	// Key-value tags for the Site.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupSiteOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSiteArgs)(nil)).Elem()
}

// A collection of values returned by getSite.
type LookupSiteResultOutput struct{ *pulumi.OutputState }

func (LookupSiteResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSiteResult)(nil)).Elem()
}

func (o LookupSiteResultOutput) ToLookupSiteResultOutput() LookupSiteResultOutput {
	return o
}

func (o LookupSiteResultOutput) ToLookupSiteResultOutputWithContext(ctx context.Context) LookupSiteResultOutput {
	return o
}

// ARN of the site.
func (o LookupSiteResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSiteResult) string { return v.Arn }).(pulumi.StringOutput)
}

// Description of the site.
func (o LookupSiteResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSiteResult) string { return v.Description }).(pulumi.StringOutput)
}

func (o LookupSiteResultOutput) GlobalNetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSiteResult) string { return v.GlobalNetworkId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSiteResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSiteResult) string { return v.Id }).(pulumi.StringOutput)
}

// Site location as documented below.
func (o LookupSiteResultOutput) Locations() GetSiteLocationArrayOutput {
	return o.ApplyT(func(v LookupSiteResult) []GetSiteLocation { return v.Locations }).(GetSiteLocationArrayOutput)
}

func (o LookupSiteResultOutput) SiteId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSiteResult) string { return v.SiteId }).(pulumi.StringOutput)
}

// Key-value tags for the Site.
func (o LookupSiteResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupSiteResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSiteResultOutput{})
}
