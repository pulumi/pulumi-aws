// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkmanager

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieve information about global networks.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/networkmanager"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := networkmanager.GetGlobalNetworks(ctx, &networkmanager.GetGlobalNetworksArgs{
//				Tags: map[string]interface{}{
//					"Env": "test",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetGlobalNetworks(ctx *pulumi.Context, args *GetGlobalNetworksArgs, opts ...pulumi.InvokeOption) (*GetGlobalNetworksResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetGlobalNetworksResult
	err := ctx.Invoke("aws:networkmanager/getGlobalNetworks:getGlobalNetworks", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGlobalNetworks.
type GetGlobalNetworksArgs struct {
	// Restricts the list to the global networks with these tags.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getGlobalNetworks.
type GetGlobalNetworksResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// IDs of the global networks.
	Ids  []string          `pulumi:"ids"`
	Tags map[string]string `pulumi:"tags"`
}

func GetGlobalNetworksOutput(ctx *pulumi.Context, args GetGlobalNetworksOutputArgs, opts ...pulumi.InvokeOption) GetGlobalNetworksResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetGlobalNetworksResult, error) {
			args := v.(GetGlobalNetworksArgs)
			r, err := GetGlobalNetworks(ctx, &args, opts...)
			var s GetGlobalNetworksResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetGlobalNetworksResultOutput)
}

// A collection of arguments for invoking getGlobalNetworks.
type GetGlobalNetworksOutputArgs struct {
	// Restricts the list to the global networks with these tags.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (GetGlobalNetworksOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalNetworksArgs)(nil)).Elem()
}

// A collection of values returned by getGlobalNetworks.
type GetGlobalNetworksResultOutput struct{ *pulumi.OutputState }

func (GetGlobalNetworksResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGlobalNetworksResult)(nil)).Elem()
}

func (o GetGlobalNetworksResultOutput) ToGetGlobalNetworksResultOutput() GetGlobalNetworksResultOutput {
	return o
}

func (o GetGlobalNetworksResultOutput) ToGetGlobalNetworksResultOutputWithContext(ctx context.Context) GetGlobalNetworksResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetGlobalNetworksResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGlobalNetworksResult) string { return v.Id }).(pulumi.StringOutput)
}

// IDs of the global networks.
func (o GetGlobalNetworksResultOutput) Ids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGlobalNetworksResult) []string { return v.Ids }).(pulumi.StringArrayOutput)
}

func (o GetGlobalNetworksResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetGlobalNetworksResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGlobalNetworksResultOutput{})
}
