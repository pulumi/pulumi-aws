// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package msk

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get a list of brokers that a client application can use to bootstrap.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/msk"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := msk.GetBootstrapBrokers(ctx, &msk.GetBootstrapBrokersArgs{
//				ClusterArn: exampleAwsMskCluster.Arn,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetBootstrapBrokers(ctx *pulumi.Context, args *GetBootstrapBrokersArgs, opts ...pulumi.InvokeOption) (*GetBootstrapBrokersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBootstrapBrokersResult
	err := ctx.Invoke("aws:msk/getBootstrapBrokers:getBootstrapBrokers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBootstrapBrokers.
type GetBootstrapBrokersArgs struct {
	// ARN of the cluster the nodes belong to.
	ClusterArn string `pulumi:"clusterArn"`
}

// A collection of values returned by getBootstrapBrokers.
type GetBootstrapBrokersResult struct {
	// Comma separated list of one or more hostname:port pairs of kafka brokers suitable to bootstrap connectivity to the kafka cluster.
	BootstrapBrokers string `pulumi:"bootstrapBrokers"`
	// One or more DNS names (or IP addresses) and SASL IAM port pairs.
	BootstrapBrokersPublicSaslIam string `pulumi:"bootstrapBrokersPublicSaslIam"`
	// One or more DNS names (or IP addresses) and SASL SCRAM port pairs.
	BootstrapBrokersPublicSaslScram string `pulumi:"bootstrapBrokersPublicSaslScram"`
	// One or more DNS names (or IP addresses) and TLS port pairs.
	BootstrapBrokersPublicTls string `pulumi:"bootstrapBrokersPublicTls"`
	// One or more DNS names (or IP addresses) and SASL IAM port pairs.
	BootstrapBrokersSaslIam string `pulumi:"bootstrapBrokersSaslIam"`
	// One or more DNS names (or IP addresses) and SASL SCRAM port pairs.
	BootstrapBrokersSaslScram string `pulumi:"bootstrapBrokersSaslScram"`
	// One or more DNS names (or IP addresses) and TLS port pairs.
	BootstrapBrokersTls string `pulumi:"bootstrapBrokersTls"`
	// A string containing one or more DNS names (or IP addresses) and SASL IAM port pairs for VPC connectivity.
	BootstrapBrokersVpcConnectivitySaslIam string `pulumi:"bootstrapBrokersVpcConnectivitySaslIam"`
	// A string containing one or more DNS names (or IP addresses) and SASL SCRAM port pairs for VPC connectivity.
	BootstrapBrokersVpcConnectivitySaslScram string `pulumi:"bootstrapBrokersVpcConnectivitySaslScram"`
	// A string containing one or more DNS names (or IP addresses) and TLS port pairs for VPC connectivity.
	BootstrapBrokersVpcConnectivityTls string `pulumi:"bootstrapBrokersVpcConnectivityTls"`
	ClusterArn                         string `pulumi:"clusterArn"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
}

func GetBootstrapBrokersOutput(ctx *pulumi.Context, args GetBootstrapBrokersOutputArgs, opts ...pulumi.InvokeOption) GetBootstrapBrokersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetBootstrapBrokersResult, error) {
			args := v.(GetBootstrapBrokersArgs)
			r, err := GetBootstrapBrokers(ctx, &args, opts...)
			var s GetBootstrapBrokersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetBootstrapBrokersResultOutput)
}

// A collection of arguments for invoking getBootstrapBrokers.
type GetBootstrapBrokersOutputArgs struct {
	// ARN of the cluster the nodes belong to.
	ClusterArn pulumi.StringInput `pulumi:"clusterArn"`
}

func (GetBootstrapBrokersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBootstrapBrokersArgs)(nil)).Elem()
}

// A collection of values returned by getBootstrapBrokers.
type GetBootstrapBrokersResultOutput struct{ *pulumi.OutputState }

func (GetBootstrapBrokersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBootstrapBrokersResult)(nil)).Elem()
}

func (o GetBootstrapBrokersResultOutput) ToGetBootstrapBrokersResultOutput() GetBootstrapBrokersResultOutput {
	return o
}

func (o GetBootstrapBrokersResultOutput) ToGetBootstrapBrokersResultOutputWithContext(ctx context.Context) GetBootstrapBrokersResultOutput {
	return o
}

// Comma separated list of one or more hostname:port pairs of kafka brokers suitable to bootstrap connectivity to the kafka cluster.
func (o GetBootstrapBrokersResultOutput) BootstrapBrokers() pulumi.StringOutput {
	return o.ApplyT(func(v GetBootstrapBrokersResult) string { return v.BootstrapBrokers }).(pulumi.StringOutput)
}

// One or more DNS names (or IP addresses) and SASL IAM port pairs.
func (o GetBootstrapBrokersResultOutput) BootstrapBrokersPublicSaslIam() pulumi.StringOutput {
	return o.ApplyT(func(v GetBootstrapBrokersResult) string { return v.BootstrapBrokersPublicSaslIam }).(pulumi.StringOutput)
}

// One or more DNS names (or IP addresses) and SASL SCRAM port pairs.
func (o GetBootstrapBrokersResultOutput) BootstrapBrokersPublicSaslScram() pulumi.StringOutput {
	return o.ApplyT(func(v GetBootstrapBrokersResult) string { return v.BootstrapBrokersPublicSaslScram }).(pulumi.StringOutput)
}

// One or more DNS names (or IP addresses) and TLS port pairs.
func (o GetBootstrapBrokersResultOutput) BootstrapBrokersPublicTls() pulumi.StringOutput {
	return o.ApplyT(func(v GetBootstrapBrokersResult) string { return v.BootstrapBrokersPublicTls }).(pulumi.StringOutput)
}

// One or more DNS names (or IP addresses) and SASL IAM port pairs.
func (o GetBootstrapBrokersResultOutput) BootstrapBrokersSaslIam() pulumi.StringOutput {
	return o.ApplyT(func(v GetBootstrapBrokersResult) string { return v.BootstrapBrokersSaslIam }).(pulumi.StringOutput)
}

// One or more DNS names (or IP addresses) and SASL SCRAM port pairs.
func (o GetBootstrapBrokersResultOutput) BootstrapBrokersSaslScram() pulumi.StringOutput {
	return o.ApplyT(func(v GetBootstrapBrokersResult) string { return v.BootstrapBrokersSaslScram }).(pulumi.StringOutput)
}

// One or more DNS names (or IP addresses) and TLS port pairs.
func (o GetBootstrapBrokersResultOutput) BootstrapBrokersTls() pulumi.StringOutput {
	return o.ApplyT(func(v GetBootstrapBrokersResult) string { return v.BootstrapBrokersTls }).(pulumi.StringOutput)
}

// A string containing one or more DNS names (or IP addresses) and SASL IAM port pairs for VPC connectivity.
func (o GetBootstrapBrokersResultOutput) BootstrapBrokersVpcConnectivitySaslIam() pulumi.StringOutput {
	return o.ApplyT(func(v GetBootstrapBrokersResult) string { return v.BootstrapBrokersVpcConnectivitySaslIam }).(pulumi.StringOutput)
}

// A string containing one or more DNS names (or IP addresses) and SASL SCRAM port pairs for VPC connectivity.
func (o GetBootstrapBrokersResultOutput) BootstrapBrokersVpcConnectivitySaslScram() pulumi.StringOutput {
	return o.ApplyT(func(v GetBootstrapBrokersResult) string { return v.BootstrapBrokersVpcConnectivitySaslScram }).(pulumi.StringOutput)
}

// A string containing one or more DNS names (or IP addresses) and TLS port pairs for VPC connectivity.
func (o GetBootstrapBrokersResultOutput) BootstrapBrokersVpcConnectivityTls() pulumi.StringOutput {
	return o.ApplyT(func(v GetBootstrapBrokersResult) string { return v.BootstrapBrokersVpcConnectivityTls }).(pulumi.StringOutput)
}

func (o GetBootstrapBrokersResultOutput) ClusterArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBootstrapBrokersResult) string { return v.ClusterArn }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBootstrapBrokersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBootstrapBrokersResult) string { return v.Id }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBootstrapBrokersResultOutput{})
}
