// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package msk

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Get information on an Amazon MSK VPC Connection.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/msk"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := msk.LookupVpcConnection(ctx, &msk.LookupVpcConnectionArgs{
//				Arn: aws_msk_vpc_connection.Example.Arn,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupVpcConnection(ctx *pulumi.Context, args *LookupVpcConnectionArgs, opts ...pulumi.InvokeOption) (*LookupVpcConnectionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVpcConnectionResult
	err := ctx.Invoke("aws:msk/getVpcConnection:getVpcConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVpcConnection.
type LookupVpcConnectionArgs struct {
	// ARN of the VPC Connection.
	Arn string `pulumi:"arn"`
	// Map of key-value pairs assigned to the VPC Connection.
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getVpcConnection.
type LookupVpcConnectionResult struct {
	Arn string `pulumi:"arn"`
	// The authentication type for the client VPC Connection.
	Authentication string `pulumi:"authentication"`
	// The list of subnets in the client VPC.
	ClientSubnets []string `pulumi:"clientSubnets"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The security groups attached to the ENIs for the broker nodes.
	SecurityGroups []string `pulumi:"securityGroups"`
	// Map of key-value pairs assigned to the VPC Connection.
	Tags map[string]string `pulumi:"tags"`
	// The Amazon Resource Name (ARN) of the cluster.
	TargetClusterArn string `pulumi:"targetClusterArn"`
	// The VPC ID of the remote client.
	VpcId string `pulumi:"vpcId"`
}

func LookupVpcConnectionOutput(ctx *pulumi.Context, args LookupVpcConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupVpcConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVpcConnectionResult, error) {
			args := v.(LookupVpcConnectionArgs)
			r, err := LookupVpcConnection(ctx, &args, opts...)
			var s LookupVpcConnectionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVpcConnectionResultOutput)
}

// A collection of arguments for invoking getVpcConnection.
type LookupVpcConnectionOutputArgs struct {
	// ARN of the VPC Connection.
	Arn pulumi.StringInput `pulumi:"arn"`
	// Map of key-value pairs assigned to the VPC Connection.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupVpcConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcConnectionArgs)(nil)).Elem()
}

// A collection of values returned by getVpcConnection.
type LookupVpcConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupVpcConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVpcConnectionResult)(nil)).Elem()
}

func (o LookupVpcConnectionResultOutput) ToLookupVpcConnectionResultOutput() LookupVpcConnectionResultOutput {
	return o
}

func (o LookupVpcConnectionResultOutput) ToLookupVpcConnectionResultOutputWithContext(ctx context.Context) LookupVpcConnectionResultOutput {
	return o
}

func (o LookupVpcConnectionResultOutput) ToOutput(ctx context.Context) pulumix.Output[LookupVpcConnectionResult] {
	return pulumix.Output[LookupVpcConnectionResult]{
		OutputState: o.OutputState,
	}
}

func (o LookupVpcConnectionResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcConnectionResult) string { return v.Arn }).(pulumi.StringOutput)
}

// The authentication type for the client VPC Connection.
func (o LookupVpcConnectionResultOutput) Authentication() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcConnectionResult) string { return v.Authentication }).(pulumi.StringOutput)
}

// The list of subnets in the client VPC.
func (o LookupVpcConnectionResultOutput) ClientSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpcConnectionResult) []string { return v.ClientSubnets }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVpcConnectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcConnectionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The security groups attached to the ENIs for the broker nodes.
func (o LookupVpcConnectionResultOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupVpcConnectionResult) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// Map of key-value pairs assigned to the VPC Connection.
func (o LookupVpcConnectionResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupVpcConnectionResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// The Amazon Resource Name (ARN) of the cluster.
func (o LookupVpcConnectionResultOutput) TargetClusterArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcConnectionResult) string { return v.TargetClusterArn }).(pulumi.StringOutput)
}

// The VPC ID of the remote client.
func (o LookupVpcConnectionResultOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVpcConnectionResult) string { return v.VpcId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVpcConnectionResultOutput{})
}
