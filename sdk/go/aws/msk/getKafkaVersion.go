// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package msk

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetKafkaVersion(ctx *pulumi.Context, args *GetKafkaVersionArgs, opts ...pulumi.InvokeOption) (*GetKafkaVersionResult, error) {
	var rv GetKafkaVersionResult
	err := ctx.Invoke("aws:msk/getKafkaVersion:getKafkaVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKafkaVersion.
type GetKafkaVersionArgs struct {
	PreferredVersions []string `pulumi:"preferredVersions"`
	Version           *string  `pulumi:"version"`
}

// A collection of values returned by getKafkaVersion.
type GetKafkaVersionResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id                string   `pulumi:"id"`
	PreferredVersions []string `pulumi:"preferredVersions"`
	Status            string   `pulumi:"status"`
	Version           string   `pulumi:"version"`
}

func GetKafkaVersionOutput(ctx *pulumi.Context, args GetKafkaVersionOutputArgs, opts ...pulumi.InvokeOption) GetKafkaVersionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetKafkaVersionResult, error) {
			args := v.(GetKafkaVersionArgs)
			r, err := GetKafkaVersion(ctx, &args, opts...)
			var s GetKafkaVersionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetKafkaVersionResultOutput)
}

// A collection of arguments for invoking getKafkaVersion.
type GetKafkaVersionOutputArgs struct {
	PreferredVersions pulumi.StringArrayInput `pulumi:"preferredVersions"`
	Version           pulumi.StringPtrInput   `pulumi:"version"`
}

func (GetKafkaVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaVersionArgs)(nil)).Elem()
}

// A collection of values returned by getKafkaVersion.
type GetKafkaVersionResultOutput struct{ *pulumi.OutputState }

func (GetKafkaVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKafkaVersionResult)(nil)).Elem()
}

func (o GetKafkaVersionResultOutput) ToGetKafkaVersionResultOutput() GetKafkaVersionResultOutput {
	return o
}

func (o GetKafkaVersionResultOutput) ToGetKafkaVersionResultOutputWithContext(ctx context.Context) GetKafkaVersionResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetKafkaVersionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaVersionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetKafkaVersionResultOutput) PreferredVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKafkaVersionResult) []string { return v.PreferredVersions }).(pulumi.StringArrayOutput)
}

func (o GetKafkaVersionResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaVersionResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetKafkaVersionResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetKafkaVersionResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetKafkaVersionResultOutput{})
}
