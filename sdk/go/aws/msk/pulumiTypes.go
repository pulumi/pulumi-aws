// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package msk

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ClusterBrokerNodeGroupInfo struct {
	// The distribution of broker nodes across availability zones ([documentation](https://docs.aws.amazon.com/msk/1.0/apireference/clusters.html#clusters-model-brokerazdistribution)). Currently the only valid value is `DEFAULT`.
	AzDistribution *string `pulumi:"azDistribution"`
	// A list of subnets to connect to in client VPC ([documentation](https://docs.aws.amazon.com/msk/1.0/apireference/clusters.html#clusters-prop-brokernodegroupinfo-clientsubnets)).
	ClientSubnets []string `pulumi:"clientSubnets"`
	// Information about the cluster access configuration. See below. For security reasons, you can't turn on public access while creating an MSK cluster. However, you can update an existing cluster to make it publicly accessible. You can also create a new cluster and then update it to make it publicly accessible ([documentation](https://docs.aws.amazon.com/msk/latest/developerguide/public-access.html)).
	ConnectivityInfo *ClusterBrokerNodeGroupInfoConnectivityInfo `pulumi:"connectivityInfo"`
	// Specify the instance type to use for the kafka brokersE.g., kafka.m5.large. ([Pricing info](https://aws.amazon.com/msk/pricing/))
	InstanceType string `pulumi:"instanceType"`
	// A list of the security groups to associate with the elastic network interfaces to control who can communicate with the cluster.
	SecurityGroups []string `pulumi:"securityGroups"`
	// A block that contains information about storage volumes attached to MSK broker nodes. See below.
	StorageInfo *ClusterBrokerNodeGroupInfoStorageInfo `pulumi:"storageInfo"`
}

// ClusterBrokerNodeGroupInfoInput is an input type that accepts ClusterBrokerNodeGroupInfoArgs and ClusterBrokerNodeGroupInfoOutput values.
// You can construct a concrete instance of `ClusterBrokerNodeGroupInfoInput` via:
//
//	ClusterBrokerNodeGroupInfoArgs{...}
type ClusterBrokerNodeGroupInfoInput interface {
	pulumi.Input

	ToClusterBrokerNodeGroupInfoOutput() ClusterBrokerNodeGroupInfoOutput
	ToClusterBrokerNodeGroupInfoOutputWithContext(context.Context) ClusterBrokerNodeGroupInfoOutput
}

type ClusterBrokerNodeGroupInfoArgs struct {
	// The distribution of broker nodes across availability zones ([documentation](https://docs.aws.amazon.com/msk/1.0/apireference/clusters.html#clusters-model-brokerazdistribution)). Currently the only valid value is `DEFAULT`.
	AzDistribution pulumi.StringPtrInput `pulumi:"azDistribution"`
	// A list of subnets to connect to in client VPC ([documentation](https://docs.aws.amazon.com/msk/1.0/apireference/clusters.html#clusters-prop-brokernodegroupinfo-clientsubnets)).
	ClientSubnets pulumi.StringArrayInput `pulumi:"clientSubnets"`
	// Information about the cluster access configuration. See below. For security reasons, you can't turn on public access while creating an MSK cluster. However, you can update an existing cluster to make it publicly accessible. You can also create a new cluster and then update it to make it publicly accessible ([documentation](https://docs.aws.amazon.com/msk/latest/developerguide/public-access.html)).
	ConnectivityInfo ClusterBrokerNodeGroupInfoConnectivityInfoPtrInput `pulumi:"connectivityInfo"`
	// Specify the instance type to use for the kafka brokersE.g., kafka.m5.large. ([Pricing info](https://aws.amazon.com/msk/pricing/))
	InstanceType pulumi.StringInput `pulumi:"instanceType"`
	// A list of the security groups to associate with the elastic network interfaces to control who can communicate with the cluster.
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	// A block that contains information about storage volumes attached to MSK broker nodes. See below.
	StorageInfo ClusterBrokerNodeGroupInfoStorageInfoPtrInput `pulumi:"storageInfo"`
}

func (ClusterBrokerNodeGroupInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBrokerNodeGroupInfo)(nil)).Elem()
}

func (i ClusterBrokerNodeGroupInfoArgs) ToClusterBrokerNodeGroupInfoOutput() ClusterBrokerNodeGroupInfoOutput {
	return i.ToClusterBrokerNodeGroupInfoOutputWithContext(context.Background())
}

func (i ClusterBrokerNodeGroupInfoArgs) ToClusterBrokerNodeGroupInfoOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoOutput)
}

func (i ClusterBrokerNodeGroupInfoArgs) ToClusterBrokerNodeGroupInfoPtrOutput() ClusterBrokerNodeGroupInfoPtrOutput {
	return i.ToClusterBrokerNodeGroupInfoPtrOutputWithContext(context.Background())
}

func (i ClusterBrokerNodeGroupInfoArgs) ToClusterBrokerNodeGroupInfoPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoOutput).ToClusterBrokerNodeGroupInfoPtrOutputWithContext(ctx)
}

// ClusterBrokerNodeGroupInfoPtrInput is an input type that accepts ClusterBrokerNodeGroupInfoArgs, ClusterBrokerNodeGroupInfoPtr and ClusterBrokerNodeGroupInfoPtrOutput values.
// You can construct a concrete instance of `ClusterBrokerNodeGroupInfoPtrInput` via:
//
//	        ClusterBrokerNodeGroupInfoArgs{...}
//
//	or:
//
//	        nil
type ClusterBrokerNodeGroupInfoPtrInput interface {
	pulumi.Input

	ToClusterBrokerNodeGroupInfoPtrOutput() ClusterBrokerNodeGroupInfoPtrOutput
	ToClusterBrokerNodeGroupInfoPtrOutputWithContext(context.Context) ClusterBrokerNodeGroupInfoPtrOutput
}

type clusterBrokerNodeGroupInfoPtrType ClusterBrokerNodeGroupInfoArgs

func ClusterBrokerNodeGroupInfoPtr(v *ClusterBrokerNodeGroupInfoArgs) ClusterBrokerNodeGroupInfoPtrInput {
	return (*clusterBrokerNodeGroupInfoPtrType)(v)
}

func (*clusterBrokerNodeGroupInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBrokerNodeGroupInfo)(nil)).Elem()
}

func (i *clusterBrokerNodeGroupInfoPtrType) ToClusterBrokerNodeGroupInfoPtrOutput() ClusterBrokerNodeGroupInfoPtrOutput {
	return i.ToClusterBrokerNodeGroupInfoPtrOutputWithContext(context.Background())
}

func (i *clusterBrokerNodeGroupInfoPtrType) ToClusterBrokerNodeGroupInfoPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoPtrOutput)
}

type ClusterBrokerNodeGroupInfoOutput struct{ *pulumi.OutputState }

func (ClusterBrokerNodeGroupInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBrokerNodeGroupInfo)(nil)).Elem()
}

func (o ClusterBrokerNodeGroupInfoOutput) ToClusterBrokerNodeGroupInfoOutput() ClusterBrokerNodeGroupInfoOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoOutput) ToClusterBrokerNodeGroupInfoOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoOutput) ToClusterBrokerNodeGroupInfoPtrOutput() ClusterBrokerNodeGroupInfoPtrOutput {
	return o.ToClusterBrokerNodeGroupInfoPtrOutputWithContext(context.Background())
}

func (o ClusterBrokerNodeGroupInfoOutput) ToClusterBrokerNodeGroupInfoPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterBrokerNodeGroupInfo) *ClusterBrokerNodeGroupInfo {
		return &v
	}).(ClusterBrokerNodeGroupInfoPtrOutput)
}

// The distribution of broker nodes across availability zones ([documentation](https://docs.aws.amazon.com/msk/1.0/apireference/clusters.html#clusters-model-brokerazdistribution)). Currently the only valid value is `DEFAULT`.
func (o ClusterBrokerNodeGroupInfoOutput) AzDistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBrokerNodeGroupInfo) *string { return v.AzDistribution }).(pulumi.StringPtrOutput)
}

// A list of subnets to connect to in client VPC ([documentation](https://docs.aws.amazon.com/msk/1.0/apireference/clusters.html#clusters-prop-brokernodegroupinfo-clientsubnets)).
func (o ClusterBrokerNodeGroupInfoOutput) ClientSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterBrokerNodeGroupInfo) []string { return v.ClientSubnets }).(pulumi.StringArrayOutput)
}

// Information about the cluster access configuration. See below. For security reasons, you can't turn on public access while creating an MSK cluster. However, you can update an existing cluster to make it publicly accessible. You can also create a new cluster and then update it to make it publicly accessible ([documentation](https://docs.aws.amazon.com/msk/latest/developerguide/public-access.html)).
func (o ClusterBrokerNodeGroupInfoOutput) ConnectivityInfo() ClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput {
	return o.ApplyT(func(v ClusterBrokerNodeGroupInfo) *ClusterBrokerNodeGroupInfoConnectivityInfo {
		return v.ConnectivityInfo
	}).(ClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput)
}

// Specify the instance type to use for the kafka brokersE.g., kafka.m5.large. ([Pricing info](https://aws.amazon.com/msk/pricing/))
func (o ClusterBrokerNodeGroupInfoOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterBrokerNodeGroupInfo) string { return v.InstanceType }).(pulumi.StringOutput)
}

// A list of the security groups to associate with the elastic network interfaces to control who can communicate with the cluster.
func (o ClusterBrokerNodeGroupInfoOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterBrokerNodeGroupInfo) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// A block that contains information about storage volumes attached to MSK broker nodes. See below.
func (o ClusterBrokerNodeGroupInfoOutput) StorageInfo() ClusterBrokerNodeGroupInfoStorageInfoPtrOutput {
	return o.ApplyT(func(v ClusterBrokerNodeGroupInfo) *ClusterBrokerNodeGroupInfoStorageInfo { return v.StorageInfo }).(ClusterBrokerNodeGroupInfoStorageInfoPtrOutput)
}

type ClusterBrokerNodeGroupInfoPtrOutput struct{ *pulumi.OutputState }

func (ClusterBrokerNodeGroupInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBrokerNodeGroupInfo)(nil)).Elem()
}

func (o ClusterBrokerNodeGroupInfoPtrOutput) ToClusterBrokerNodeGroupInfoPtrOutput() ClusterBrokerNodeGroupInfoPtrOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoPtrOutput) ToClusterBrokerNodeGroupInfoPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoPtrOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoPtrOutput) Elem() ClusterBrokerNodeGroupInfoOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfo) ClusterBrokerNodeGroupInfo {
		if v != nil {
			return *v
		}
		var ret ClusterBrokerNodeGroupInfo
		return ret
	}).(ClusterBrokerNodeGroupInfoOutput)
}

// The distribution of broker nodes across availability zones ([documentation](https://docs.aws.amazon.com/msk/1.0/apireference/clusters.html#clusters-model-brokerazdistribution)). Currently the only valid value is `DEFAULT`.
func (o ClusterBrokerNodeGroupInfoPtrOutput) AzDistribution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfo) *string {
		if v == nil {
			return nil
		}
		return v.AzDistribution
	}).(pulumi.StringPtrOutput)
}

// A list of subnets to connect to in client VPC ([documentation](https://docs.aws.amazon.com/msk/1.0/apireference/clusters.html#clusters-prop-brokernodegroupinfo-clientsubnets)).
func (o ClusterBrokerNodeGroupInfoPtrOutput) ClientSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfo) []string {
		if v == nil {
			return nil
		}
		return v.ClientSubnets
	}).(pulumi.StringArrayOutput)
}

// Information about the cluster access configuration. See below. For security reasons, you can't turn on public access while creating an MSK cluster. However, you can update an existing cluster to make it publicly accessible. You can also create a new cluster and then update it to make it publicly accessible ([documentation](https://docs.aws.amazon.com/msk/latest/developerguide/public-access.html)).
func (o ClusterBrokerNodeGroupInfoPtrOutput) ConnectivityInfo() ClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfo) *ClusterBrokerNodeGroupInfoConnectivityInfo {
		if v == nil {
			return nil
		}
		return v.ConnectivityInfo
	}).(ClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput)
}

// Specify the instance type to use for the kafka brokersE.g., kafka.m5.large. ([Pricing info](https://aws.amazon.com/msk/pricing/))
func (o ClusterBrokerNodeGroupInfoPtrOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfo) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceType
	}).(pulumi.StringPtrOutput)
}

// A list of the security groups to associate with the elastic network interfaces to control who can communicate with the cluster.
func (o ClusterBrokerNodeGroupInfoPtrOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfo) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroups
	}).(pulumi.StringArrayOutput)
}

// A block that contains information about storage volumes attached to MSK broker nodes. See below.
func (o ClusterBrokerNodeGroupInfoPtrOutput) StorageInfo() ClusterBrokerNodeGroupInfoStorageInfoPtrOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfo) *ClusterBrokerNodeGroupInfoStorageInfo {
		if v == nil {
			return nil
		}
		return v.StorageInfo
	}).(ClusterBrokerNodeGroupInfoStorageInfoPtrOutput)
}

type ClusterBrokerNodeGroupInfoConnectivityInfo struct {
	// Access control settings for brokers. See below.
	PublicAccess *ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess `pulumi:"publicAccess"`
	// VPC connectivity access control for brokers. See below.
	VpcConnectivity *ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity `pulumi:"vpcConnectivity"`
}

// ClusterBrokerNodeGroupInfoConnectivityInfoInput is an input type that accepts ClusterBrokerNodeGroupInfoConnectivityInfoArgs and ClusterBrokerNodeGroupInfoConnectivityInfoOutput values.
// You can construct a concrete instance of `ClusterBrokerNodeGroupInfoConnectivityInfoInput` via:
//
//	ClusterBrokerNodeGroupInfoConnectivityInfoArgs{...}
type ClusterBrokerNodeGroupInfoConnectivityInfoInput interface {
	pulumi.Input

	ToClusterBrokerNodeGroupInfoConnectivityInfoOutput() ClusterBrokerNodeGroupInfoConnectivityInfoOutput
	ToClusterBrokerNodeGroupInfoConnectivityInfoOutputWithContext(context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoOutput
}

type ClusterBrokerNodeGroupInfoConnectivityInfoArgs struct {
	// Access control settings for brokers. See below.
	PublicAccess ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrInput `pulumi:"publicAccess"`
	// VPC connectivity access control for brokers. See below.
	VpcConnectivity ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrInput `pulumi:"vpcConnectivity"`
}

func (ClusterBrokerNodeGroupInfoConnectivityInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBrokerNodeGroupInfoConnectivityInfo)(nil)).Elem()
}

func (i ClusterBrokerNodeGroupInfoConnectivityInfoArgs) ToClusterBrokerNodeGroupInfoConnectivityInfoOutput() ClusterBrokerNodeGroupInfoConnectivityInfoOutput {
	return i.ToClusterBrokerNodeGroupInfoConnectivityInfoOutputWithContext(context.Background())
}

func (i ClusterBrokerNodeGroupInfoConnectivityInfoArgs) ToClusterBrokerNodeGroupInfoConnectivityInfoOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoConnectivityInfoOutput)
}

func (i ClusterBrokerNodeGroupInfoConnectivityInfoArgs) ToClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput() ClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput {
	return i.ToClusterBrokerNodeGroupInfoConnectivityInfoPtrOutputWithContext(context.Background())
}

func (i ClusterBrokerNodeGroupInfoConnectivityInfoArgs) ToClusterBrokerNodeGroupInfoConnectivityInfoPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoConnectivityInfoOutput).ToClusterBrokerNodeGroupInfoConnectivityInfoPtrOutputWithContext(ctx)
}

// ClusterBrokerNodeGroupInfoConnectivityInfoPtrInput is an input type that accepts ClusterBrokerNodeGroupInfoConnectivityInfoArgs, ClusterBrokerNodeGroupInfoConnectivityInfoPtr and ClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput values.
// You can construct a concrete instance of `ClusterBrokerNodeGroupInfoConnectivityInfoPtrInput` via:
//
//	        ClusterBrokerNodeGroupInfoConnectivityInfoArgs{...}
//
//	or:
//
//	        nil
type ClusterBrokerNodeGroupInfoConnectivityInfoPtrInput interface {
	pulumi.Input

	ToClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput() ClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput
	ToClusterBrokerNodeGroupInfoConnectivityInfoPtrOutputWithContext(context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput
}

type clusterBrokerNodeGroupInfoConnectivityInfoPtrType ClusterBrokerNodeGroupInfoConnectivityInfoArgs

func ClusterBrokerNodeGroupInfoConnectivityInfoPtr(v *ClusterBrokerNodeGroupInfoConnectivityInfoArgs) ClusterBrokerNodeGroupInfoConnectivityInfoPtrInput {
	return (*clusterBrokerNodeGroupInfoConnectivityInfoPtrType)(v)
}

func (*clusterBrokerNodeGroupInfoConnectivityInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBrokerNodeGroupInfoConnectivityInfo)(nil)).Elem()
}

func (i *clusterBrokerNodeGroupInfoConnectivityInfoPtrType) ToClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput() ClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput {
	return i.ToClusterBrokerNodeGroupInfoConnectivityInfoPtrOutputWithContext(context.Background())
}

func (i *clusterBrokerNodeGroupInfoConnectivityInfoPtrType) ToClusterBrokerNodeGroupInfoConnectivityInfoPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput)
}

type ClusterBrokerNodeGroupInfoConnectivityInfoOutput struct{ *pulumi.OutputState }

func (ClusterBrokerNodeGroupInfoConnectivityInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBrokerNodeGroupInfoConnectivityInfo)(nil)).Elem()
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoOutput() ClusterBrokerNodeGroupInfoConnectivityInfoOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput() ClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput {
	return o.ToClusterBrokerNodeGroupInfoConnectivityInfoPtrOutputWithContext(context.Background())
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterBrokerNodeGroupInfoConnectivityInfo) *ClusterBrokerNodeGroupInfoConnectivityInfo {
		return &v
	}).(ClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput)
}

// Access control settings for brokers. See below.
func (o ClusterBrokerNodeGroupInfoConnectivityInfoOutput) PublicAccess() ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput {
	return o.ApplyT(func(v ClusterBrokerNodeGroupInfoConnectivityInfo) *ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess {
		return v.PublicAccess
	}).(ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput)
}

// VPC connectivity access control for brokers. See below.
func (o ClusterBrokerNodeGroupInfoConnectivityInfoOutput) VpcConnectivity() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput {
	return o.ApplyT(func(v ClusterBrokerNodeGroupInfoConnectivityInfo) *ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity {
		return v.VpcConnectivity
	}).(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput)
}

type ClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput struct{ *pulumi.OutputState }

func (ClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBrokerNodeGroupInfoConnectivityInfo)(nil)).Elem()
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput() ClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput) Elem() ClusterBrokerNodeGroupInfoConnectivityInfoOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfoConnectivityInfo) ClusterBrokerNodeGroupInfoConnectivityInfo {
		if v != nil {
			return *v
		}
		var ret ClusterBrokerNodeGroupInfoConnectivityInfo
		return ret
	}).(ClusterBrokerNodeGroupInfoConnectivityInfoOutput)
}

// Access control settings for brokers. See below.
func (o ClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput) PublicAccess() ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfoConnectivityInfo) *ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess {
		if v == nil {
			return nil
		}
		return v.PublicAccess
	}).(ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput)
}

// VPC connectivity access control for brokers. See below.
func (o ClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput) VpcConnectivity() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfoConnectivityInfo) *ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity {
		if v == nil {
			return nil
		}
		return v.VpcConnectivity
	}).(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput)
}

type ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess struct {
	// Public access type. Valid values: `DISABLED`, `SERVICE_PROVIDED_EIPS`.
	Type *string `pulumi:"type"`
}

// ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessInput is an input type that accepts ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArgs and ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput values.
// You can construct a concrete instance of `ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessInput` via:
//
//	ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArgs{...}
type ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessInput interface {
	pulumi.Input

	ToClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput() ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput
	ToClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutputWithContext(context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput
}

type ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArgs struct {
	// Public access type. Valid values: `DISABLED`, `SERVICE_PROVIDED_EIPS`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess)(nil)).Elem()
}

func (i ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArgs) ToClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput() ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput {
	return i.ToClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutputWithContext(context.Background())
}

func (i ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArgs) ToClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput)
}

func (i ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArgs) ToClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput() ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput {
	return i.ToClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutputWithContext(context.Background())
}

func (i ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArgs) ToClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput).ToClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutputWithContext(ctx)
}

// ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrInput is an input type that accepts ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArgs, ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtr and ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput values.
// You can construct a concrete instance of `ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrInput` via:
//
//	        ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArgs{...}
//
//	or:
//
//	        nil
type ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrInput interface {
	pulumi.Input

	ToClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput() ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput
	ToClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutputWithContext(context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput
}

type clusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrType ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArgs

func ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtr(v *ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArgs) ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrInput {
	return (*clusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrType)(v)
}

func (*clusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess)(nil)).Elem()
}

func (i *clusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrType) ToClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput() ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput {
	return i.ToClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutputWithContext(context.Background())
}

func (i *clusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrType) ToClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput)
}

type ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput struct{ *pulumi.OutputState }

func (ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess)(nil)).Elem()
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput() ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput() ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput {
	return o.ToClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutputWithContext(context.Background())
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess) *ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess {
		return &v
	}).(ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput)
}

// Public access type. Valid values: `DISABLED`, `SERVICE_PROVIDED_EIPS`.
func (o ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput struct{ *pulumi.OutputState }

func (ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess)(nil)).Elem()
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput() ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput) Elem() ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess) ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess {
		if v != nil {
			return *v
		}
		var ret ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess
		return ret
	}).(ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput)
}

// Public access type. Valid values: `DISABLED`, `SERVICE_PROVIDED_EIPS`.
func (o ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity struct {
	// Configuration block for specifying a client authentication. See below.
	ClientAuthentication *ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication `pulumi:"clientAuthentication"`
}

// ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityInput is an input type that accepts ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArgs and ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput values.
// You can construct a concrete instance of `ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityInput` via:
//
//	ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArgs{...}
type ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityInput interface {
	pulumi.Input

	ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput
	ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutputWithContext(context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput
}

type ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArgs struct {
	// Configuration block for specifying a client authentication. See below.
	ClientAuthentication ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrInput `pulumi:"clientAuthentication"`
}

func (ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity)(nil)).Elem()
}

func (i ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArgs) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput {
	return i.ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutputWithContext(context.Background())
}

func (i ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArgs) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput)
}

func (i ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArgs) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput {
	return i.ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutputWithContext(context.Background())
}

func (i ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArgs) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput).ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutputWithContext(ctx)
}

// ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrInput is an input type that accepts ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArgs, ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtr and ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput values.
// You can construct a concrete instance of `ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrInput` via:
//
//	        ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArgs{...}
//
//	or:
//
//	        nil
type ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrInput interface {
	pulumi.Input

	ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput
	ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutputWithContext(context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput
}

type clusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrType ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArgs

func ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtr(v *ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArgs) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrInput {
	return (*clusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrType)(v)
}

func (*clusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity)(nil)).Elem()
}

func (i *clusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrType) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput {
	return i.ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutputWithContext(context.Background())
}

func (i *clusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrType) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput)
}

type ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput struct{ *pulumi.OutputState }

func (ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity)(nil)).Elem()
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput {
	return o.ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutputWithContext(context.Background())
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity) *ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity {
		return &v
	}).(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput)
}

// Configuration block for specifying a client authentication. See below.
func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput) ClientAuthentication() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput {
	return o.ApplyT(func(v ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity) *ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication {
		return v.ClientAuthentication
	}).(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput)
}

type ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput struct{ *pulumi.OutputState }

func (ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity)(nil)).Elem()
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput) Elem() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity {
		if v != nil {
			return *v
		}
		var ret ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity
		return ret
	}).(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput)
}

// Configuration block for specifying a client authentication. See below.
func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput) ClientAuthentication() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity) *ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication {
		if v == nil {
			return nil
		}
		return v.ClientAuthentication
	}).(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput)
}

type ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication struct {
	// Configuration block for specifying SASL client authentication. See below.
	Sasl *ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl `pulumi:"sasl"`
	// Configuration block for specifying TLS client authentication. See below.
	Tls *bool `pulumi:"tls"`
}

// ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationInput is an input type that accepts ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArgs and ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput values.
// You can construct a concrete instance of `ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationInput` via:
//
//	ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArgs{...}
type ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationInput interface {
	pulumi.Input

	ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput
	ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutputWithContext(context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput
}

type ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArgs struct {
	// Configuration block for specifying SASL client authentication. See below.
	Sasl ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrInput `pulumi:"sasl"`
	// Configuration block for specifying TLS client authentication. See below.
	Tls pulumi.BoolPtrInput `pulumi:"tls"`
}

func (ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication)(nil)).Elem()
}

func (i ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArgs) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput {
	return i.ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutputWithContext(context.Background())
}

func (i ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArgs) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput)
}

func (i ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArgs) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput {
	return i.ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutputWithContext(context.Background())
}

func (i ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArgs) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput).ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutputWithContext(ctx)
}

// ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrInput is an input type that accepts ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArgs, ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtr and ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput values.
// You can construct a concrete instance of `ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrInput` via:
//
//	        ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArgs{...}
//
//	or:
//
//	        nil
type ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrInput interface {
	pulumi.Input

	ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput
	ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutputWithContext(context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput
}

type clusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrType ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArgs

func ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtr(v *ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArgs) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrInput {
	return (*clusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrType)(v)
}

func (*clusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication)(nil)).Elem()
}

func (i *clusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrType) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput {
	return i.ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutputWithContext(context.Background())
}

func (i *clusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrType) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput)
}

type ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput struct{ *pulumi.OutputState }

func (ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication)(nil)).Elem()
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput {
	return o.ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutputWithContext(context.Background())
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication) *ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication {
		return &v
	}).(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput)
}

// Configuration block for specifying SASL client authentication. See below.
func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput) Sasl() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput {
	return o.ApplyT(func(v ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication) *ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl {
		return v.Sasl
	}).(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput)
}

// Configuration block for specifying TLS client authentication. See below.
func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput) Tls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication) *bool {
		return v.Tls
	}).(pulumi.BoolPtrOutput)
}

type ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication)(nil)).Elem()
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput) Elem() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication {
		if v != nil {
			return *v
		}
		var ret ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication
		return ret
	}).(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput)
}

// Configuration block for specifying SASL client authentication. See below.
func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput) Sasl() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication) *ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl {
		if v == nil {
			return nil
		}
		return v.Sasl
	}).(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput)
}

// Configuration block for specifying TLS client authentication. See below.
func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput) Tls() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication) *bool {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(pulumi.BoolPtrOutput)
}

type ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl struct {
	Iam   *bool `pulumi:"iam"`
	Scram *bool `pulumi:"scram"`
}

// ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslInput is an input type that accepts ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArgs and ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput values.
// You can construct a concrete instance of `ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslInput` via:
//
//	ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArgs{...}
type ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslInput interface {
	pulumi.Input

	ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput
	ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutputWithContext(context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput
}

type ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArgs struct {
	Iam   pulumi.BoolPtrInput `pulumi:"iam"`
	Scram pulumi.BoolPtrInput `pulumi:"scram"`
}

func (ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl)(nil)).Elem()
}

func (i ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArgs) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput {
	return i.ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutputWithContext(context.Background())
}

func (i ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArgs) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput)
}

func (i ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArgs) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput {
	return i.ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutputWithContext(context.Background())
}

func (i ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArgs) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput).ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutputWithContext(ctx)
}

// ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrInput is an input type that accepts ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArgs, ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtr and ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput values.
// You can construct a concrete instance of `ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrInput` via:
//
//	        ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArgs{...}
//
//	or:
//
//	        nil
type ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrInput interface {
	pulumi.Input

	ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput
	ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutputWithContext(context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput
}

type clusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrType ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArgs

func ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtr(v *ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArgs) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrInput {
	return (*clusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrType)(v)
}

func (*clusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl)(nil)).Elem()
}

func (i *clusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrType) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput {
	return i.ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutputWithContext(context.Background())
}

func (i *clusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrType) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput)
}

type ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput struct{ *pulumi.OutputState }

func (ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl)(nil)).Elem()
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput {
	return o.ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutputWithContext(context.Background())
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl) *ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl {
		return &v
	}).(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput)
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput) Iam() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl) *bool {
		return v.Iam
	}).(pulumi.BoolPtrOutput)
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput) Scram() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl) *bool {
		return v.Scram
	}).(pulumi.BoolPtrOutput)
}

type ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput struct{ *pulumi.OutputState }

func (ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl)(nil)).Elem()
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput) ToClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput) Elem() ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl) ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl {
		if v != nil {
			return *v
		}
		var ret ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl
		return ret
	}).(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput)
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput) Iam() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl) *bool {
		if v == nil {
			return nil
		}
		return v.Iam
	}).(pulumi.BoolPtrOutput)
}

func (o ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput) Scram() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl) *bool {
		if v == nil {
			return nil
		}
		return v.Scram
	}).(pulumi.BoolPtrOutput)
}

type ClusterBrokerNodeGroupInfoStorageInfo struct {
	// A block that contains EBS volume information. See below.
	EbsStorageInfo *ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo `pulumi:"ebsStorageInfo"`
}

// ClusterBrokerNodeGroupInfoStorageInfoInput is an input type that accepts ClusterBrokerNodeGroupInfoStorageInfoArgs and ClusterBrokerNodeGroupInfoStorageInfoOutput values.
// You can construct a concrete instance of `ClusterBrokerNodeGroupInfoStorageInfoInput` via:
//
//	ClusterBrokerNodeGroupInfoStorageInfoArgs{...}
type ClusterBrokerNodeGroupInfoStorageInfoInput interface {
	pulumi.Input

	ToClusterBrokerNodeGroupInfoStorageInfoOutput() ClusterBrokerNodeGroupInfoStorageInfoOutput
	ToClusterBrokerNodeGroupInfoStorageInfoOutputWithContext(context.Context) ClusterBrokerNodeGroupInfoStorageInfoOutput
}

type ClusterBrokerNodeGroupInfoStorageInfoArgs struct {
	// A block that contains EBS volume information. See below.
	EbsStorageInfo ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrInput `pulumi:"ebsStorageInfo"`
}

func (ClusterBrokerNodeGroupInfoStorageInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBrokerNodeGroupInfoStorageInfo)(nil)).Elem()
}

func (i ClusterBrokerNodeGroupInfoStorageInfoArgs) ToClusterBrokerNodeGroupInfoStorageInfoOutput() ClusterBrokerNodeGroupInfoStorageInfoOutput {
	return i.ToClusterBrokerNodeGroupInfoStorageInfoOutputWithContext(context.Background())
}

func (i ClusterBrokerNodeGroupInfoStorageInfoArgs) ToClusterBrokerNodeGroupInfoStorageInfoOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoStorageInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoStorageInfoOutput)
}

func (i ClusterBrokerNodeGroupInfoStorageInfoArgs) ToClusterBrokerNodeGroupInfoStorageInfoPtrOutput() ClusterBrokerNodeGroupInfoStorageInfoPtrOutput {
	return i.ToClusterBrokerNodeGroupInfoStorageInfoPtrOutputWithContext(context.Background())
}

func (i ClusterBrokerNodeGroupInfoStorageInfoArgs) ToClusterBrokerNodeGroupInfoStorageInfoPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoStorageInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoStorageInfoOutput).ToClusterBrokerNodeGroupInfoStorageInfoPtrOutputWithContext(ctx)
}

// ClusterBrokerNodeGroupInfoStorageInfoPtrInput is an input type that accepts ClusterBrokerNodeGroupInfoStorageInfoArgs, ClusterBrokerNodeGroupInfoStorageInfoPtr and ClusterBrokerNodeGroupInfoStorageInfoPtrOutput values.
// You can construct a concrete instance of `ClusterBrokerNodeGroupInfoStorageInfoPtrInput` via:
//
//	        ClusterBrokerNodeGroupInfoStorageInfoArgs{...}
//
//	or:
//
//	        nil
type ClusterBrokerNodeGroupInfoStorageInfoPtrInput interface {
	pulumi.Input

	ToClusterBrokerNodeGroupInfoStorageInfoPtrOutput() ClusterBrokerNodeGroupInfoStorageInfoPtrOutput
	ToClusterBrokerNodeGroupInfoStorageInfoPtrOutputWithContext(context.Context) ClusterBrokerNodeGroupInfoStorageInfoPtrOutput
}

type clusterBrokerNodeGroupInfoStorageInfoPtrType ClusterBrokerNodeGroupInfoStorageInfoArgs

func ClusterBrokerNodeGroupInfoStorageInfoPtr(v *ClusterBrokerNodeGroupInfoStorageInfoArgs) ClusterBrokerNodeGroupInfoStorageInfoPtrInput {
	return (*clusterBrokerNodeGroupInfoStorageInfoPtrType)(v)
}

func (*clusterBrokerNodeGroupInfoStorageInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBrokerNodeGroupInfoStorageInfo)(nil)).Elem()
}

func (i *clusterBrokerNodeGroupInfoStorageInfoPtrType) ToClusterBrokerNodeGroupInfoStorageInfoPtrOutput() ClusterBrokerNodeGroupInfoStorageInfoPtrOutput {
	return i.ToClusterBrokerNodeGroupInfoStorageInfoPtrOutputWithContext(context.Background())
}

func (i *clusterBrokerNodeGroupInfoStorageInfoPtrType) ToClusterBrokerNodeGroupInfoStorageInfoPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoStorageInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoStorageInfoPtrOutput)
}

type ClusterBrokerNodeGroupInfoStorageInfoOutput struct{ *pulumi.OutputState }

func (ClusterBrokerNodeGroupInfoStorageInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBrokerNodeGroupInfoStorageInfo)(nil)).Elem()
}

func (o ClusterBrokerNodeGroupInfoStorageInfoOutput) ToClusterBrokerNodeGroupInfoStorageInfoOutput() ClusterBrokerNodeGroupInfoStorageInfoOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoStorageInfoOutput) ToClusterBrokerNodeGroupInfoStorageInfoOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoStorageInfoOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoStorageInfoOutput) ToClusterBrokerNodeGroupInfoStorageInfoPtrOutput() ClusterBrokerNodeGroupInfoStorageInfoPtrOutput {
	return o.ToClusterBrokerNodeGroupInfoStorageInfoPtrOutputWithContext(context.Background())
}

func (o ClusterBrokerNodeGroupInfoStorageInfoOutput) ToClusterBrokerNodeGroupInfoStorageInfoPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoStorageInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterBrokerNodeGroupInfoStorageInfo) *ClusterBrokerNodeGroupInfoStorageInfo {
		return &v
	}).(ClusterBrokerNodeGroupInfoStorageInfoPtrOutput)
}

// A block that contains EBS volume information. See below.
func (o ClusterBrokerNodeGroupInfoStorageInfoOutput) EbsStorageInfo() ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput {
	return o.ApplyT(func(v ClusterBrokerNodeGroupInfoStorageInfo) *ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo {
		return v.EbsStorageInfo
	}).(ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput)
}

type ClusterBrokerNodeGroupInfoStorageInfoPtrOutput struct{ *pulumi.OutputState }

func (ClusterBrokerNodeGroupInfoStorageInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBrokerNodeGroupInfoStorageInfo)(nil)).Elem()
}

func (o ClusterBrokerNodeGroupInfoStorageInfoPtrOutput) ToClusterBrokerNodeGroupInfoStorageInfoPtrOutput() ClusterBrokerNodeGroupInfoStorageInfoPtrOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoStorageInfoPtrOutput) ToClusterBrokerNodeGroupInfoStorageInfoPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoStorageInfoPtrOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoStorageInfoPtrOutput) Elem() ClusterBrokerNodeGroupInfoStorageInfoOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfoStorageInfo) ClusterBrokerNodeGroupInfoStorageInfo {
		if v != nil {
			return *v
		}
		var ret ClusterBrokerNodeGroupInfoStorageInfo
		return ret
	}).(ClusterBrokerNodeGroupInfoStorageInfoOutput)
}

// A block that contains EBS volume information. See below.
func (o ClusterBrokerNodeGroupInfoStorageInfoPtrOutput) EbsStorageInfo() ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfoStorageInfo) *ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo {
		if v == nil {
			return nil
		}
		return v.EbsStorageInfo
	}).(ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput)
}

type ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo struct {
	// A block that contains EBS volume provisioned throughput information. To provision storage throughput, you must choose broker type kafka.m5.4xlarge or larger. See below.
	ProvisionedThroughput *ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput `pulumi:"provisionedThroughput"`
	// The size in GiB of the EBS volume for the data drive on each broker node. Minimum value of `1` and maximum value of `16384`.
	VolumeSize *int `pulumi:"volumeSize"`
}

// ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoInput is an input type that accepts ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArgs and ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput values.
// You can construct a concrete instance of `ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoInput` via:
//
//	ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArgs{...}
type ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoInput interface {
	pulumi.Input

	ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput() ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput
	ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutputWithContext(context.Context) ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput
}

type ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArgs struct {
	// A block that contains EBS volume provisioned throughput information. To provision storage throughput, you must choose broker type kafka.m5.4xlarge or larger. See below.
	ProvisionedThroughput ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrInput `pulumi:"provisionedThroughput"`
	// The size in GiB of the EBS volume for the data drive on each broker node. Minimum value of `1` and maximum value of `16384`.
	VolumeSize pulumi.IntPtrInput `pulumi:"volumeSize"`
}

func (ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo)(nil)).Elem()
}

func (i ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArgs) ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput() ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput {
	return i.ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutputWithContext(context.Background())
}

func (i ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArgs) ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput)
}

func (i ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArgs) ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput() ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput {
	return i.ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutputWithContext(context.Background())
}

func (i ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArgs) ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput).ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutputWithContext(ctx)
}

// ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrInput is an input type that accepts ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArgs, ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtr and ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput values.
// You can construct a concrete instance of `ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrInput` via:
//
//	        ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArgs{...}
//
//	or:
//
//	        nil
type ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrInput interface {
	pulumi.Input

	ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput() ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput
	ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutputWithContext(context.Context) ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput
}

type clusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrType ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArgs

func ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtr(v *ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArgs) ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrInput {
	return (*clusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrType)(v)
}

func (*clusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo)(nil)).Elem()
}

func (i *clusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrType) ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput() ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput {
	return i.ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutputWithContext(context.Background())
}

func (i *clusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrType) ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput)
}

type ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput struct{ *pulumi.OutputState }

func (ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo)(nil)).Elem()
}

func (o ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput) ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput() ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput) ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput) ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput() ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput {
	return o.ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutputWithContext(context.Background())
}

func (o ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput) ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo) *ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo {
		return &v
	}).(ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput)
}

// A block that contains EBS volume provisioned throughput information. To provision storage throughput, you must choose broker type kafka.m5.4xlarge or larger. See below.
func (o ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput) ProvisionedThroughput() ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput {
	return o.ApplyT(func(v ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo) *ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput {
		return v.ProvisionedThroughput
	}).(ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput)
}

// The size in GiB of the EBS volume for the data drive on each broker node. Minimum value of `1` and maximum value of `16384`.
func (o ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo) *int { return v.VolumeSize }).(pulumi.IntPtrOutput)
}

type ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput struct{ *pulumi.OutputState }

func (ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo)(nil)).Elem()
}

func (o ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput) ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput() ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput) ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput) Elem() ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo) ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo {
		if v != nil {
			return *v
		}
		var ret ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo
		return ret
	}).(ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput)
}

// A block that contains EBS volume provisioned throughput information. To provision storage throughput, you must choose broker type kafka.m5.4xlarge or larger. See below.
func (o ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput) ProvisionedThroughput() ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo) *ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput {
		if v == nil {
			return nil
		}
		return v.ProvisionedThroughput
	}).(ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput)
}

// The size in GiB of the EBS volume for the data drive on each broker node. Minimum value of `1` and maximum value of `16384`.
func (o ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput) VolumeSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo) *int {
		if v == nil {
			return nil
		}
		return v.VolumeSize
	}).(pulumi.IntPtrOutput)
}

type ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput struct {
	Enabled *bool `pulumi:"enabled"`
	// Throughput value of the EBS volumes for the data drive on each kafka broker node in MiB per second. The minimum value is `250`. The maximum value varies between broker type. You can refer to the valid values for the maximum volume throughput at the following [documentation on throughput bottlenecks](https://docs.aws.amazon.com/msk/latest/developerguide/msk-provision-throughput.html#throughput-bottlenecks)
	VolumeThroughput *int `pulumi:"volumeThroughput"`
}

// ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputInput is an input type that accepts ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs and ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput values.
// You can construct a concrete instance of `ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputInput` via:
//
//	ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs{...}
type ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputInput interface {
	pulumi.Input

	ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput() ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput
	ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutputWithContext(context.Context) ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput
}

type ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Throughput value of the EBS volumes for the data drive on each kafka broker node in MiB per second. The minimum value is `250`. The maximum value varies between broker type. You can refer to the valid values for the maximum volume throughput at the following [documentation on throughput bottlenecks](https://docs.aws.amazon.com/msk/latest/developerguide/msk-provision-throughput.html#throughput-bottlenecks)
	VolumeThroughput pulumi.IntPtrInput `pulumi:"volumeThroughput"`
}

func (ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput)(nil)).Elem()
}

func (i ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs) ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput() ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput {
	return i.ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutputWithContext(context.Background())
}

func (i ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs) ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput)
}

func (i ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs) ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput() ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput {
	return i.ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutputWithContext(context.Background())
}

func (i ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs) ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput).ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutputWithContext(ctx)
}

// ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrInput is an input type that accepts ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs, ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtr and ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput values.
// You can construct a concrete instance of `ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrInput` via:
//
//	        ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs{...}
//
//	or:
//
//	        nil
type ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrInput interface {
	pulumi.Input

	ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput() ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput
	ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutputWithContext(context.Context) ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput
}

type clusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrType ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs

func ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtr(v *ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs) ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrInput {
	return (*clusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrType)(v)
}

func (*clusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput)(nil)).Elem()
}

func (i *clusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrType) ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput() ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput {
	return i.ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutputWithContext(context.Background())
}

func (i *clusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrType) ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput)
}

type ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput struct{ *pulumi.OutputState }

func (ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput)(nil)).Elem()
}

func (o ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput) ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput() ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput) ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput) ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput() ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput {
	return o.ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutputWithContext(context.Background())
}

func (o ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput) ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput) *ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput {
		return &v
	}).(ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput)
}

func (o ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput) *bool {
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Throughput value of the EBS volumes for the data drive on each kafka broker node in MiB per second. The minimum value is `250`. The maximum value varies between broker type. You can refer to the valid values for the maximum volume throughput at the following [documentation on throughput bottlenecks](https://docs.aws.amazon.com/msk/latest/developerguide/msk-provision-throughput.html#throughput-bottlenecks)
func (o ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput) VolumeThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput) *int {
		return v.VolumeThroughput
	}).(pulumi.IntPtrOutput)
}

type ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput struct{ *pulumi.OutputState }

func (ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput)(nil)).Elem()
}

func (o ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput) ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput() ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput) ToClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutputWithContext(ctx context.Context) ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput {
	return o
}

func (o ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput) Elem() ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput) ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput {
		if v != nil {
			return *v
		}
		var ret ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput
		return ret
	}).(ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput)
}

func (o ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Throughput value of the EBS volumes for the data drive on each kafka broker node in MiB per second. The minimum value is `250`. The maximum value varies between broker type. You can refer to the valid values for the maximum volume throughput at the following [documentation on throughput bottlenecks](https://docs.aws.amazon.com/msk/latest/developerguide/msk-provision-throughput.html#throughput-bottlenecks)
func (o ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput) VolumeThroughput() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput) *int {
		if v == nil {
			return nil
		}
		return v.VolumeThroughput
	}).(pulumi.IntPtrOutput)
}

type ClusterClientAuthentication struct {
	// Configuration block for specifying SASL client authentication. See below.
	Sasl *ClusterClientAuthenticationSasl `pulumi:"sasl"`
	// Configuration block for specifying TLS client authentication. See below.
	Tls *ClusterClientAuthenticationTls `pulumi:"tls"`
	// Enables unauthenticated access.
	Unauthenticated *bool `pulumi:"unauthenticated"`
}

// ClusterClientAuthenticationInput is an input type that accepts ClusterClientAuthenticationArgs and ClusterClientAuthenticationOutput values.
// You can construct a concrete instance of `ClusterClientAuthenticationInput` via:
//
//	ClusterClientAuthenticationArgs{...}
type ClusterClientAuthenticationInput interface {
	pulumi.Input

	ToClusterClientAuthenticationOutput() ClusterClientAuthenticationOutput
	ToClusterClientAuthenticationOutputWithContext(context.Context) ClusterClientAuthenticationOutput
}

type ClusterClientAuthenticationArgs struct {
	// Configuration block for specifying SASL client authentication. See below.
	Sasl ClusterClientAuthenticationSaslPtrInput `pulumi:"sasl"`
	// Configuration block for specifying TLS client authentication. See below.
	Tls ClusterClientAuthenticationTlsPtrInput `pulumi:"tls"`
	// Enables unauthenticated access.
	Unauthenticated pulumi.BoolPtrInput `pulumi:"unauthenticated"`
}

func (ClusterClientAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClientAuthentication)(nil)).Elem()
}

func (i ClusterClientAuthenticationArgs) ToClusterClientAuthenticationOutput() ClusterClientAuthenticationOutput {
	return i.ToClusterClientAuthenticationOutputWithContext(context.Background())
}

func (i ClusterClientAuthenticationArgs) ToClusterClientAuthenticationOutputWithContext(ctx context.Context) ClusterClientAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClientAuthenticationOutput)
}

func (i ClusterClientAuthenticationArgs) ToClusterClientAuthenticationPtrOutput() ClusterClientAuthenticationPtrOutput {
	return i.ToClusterClientAuthenticationPtrOutputWithContext(context.Background())
}

func (i ClusterClientAuthenticationArgs) ToClusterClientAuthenticationPtrOutputWithContext(ctx context.Context) ClusterClientAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClientAuthenticationOutput).ToClusterClientAuthenticationPtrOutputWithContext(ctx)
}

// ClusterClientAuthenticationPtrInput is an input type that accepts ClusterClientAuthenticationArgs, ClusterClientAuthenticationPtr and ClusterClientAuthenticationPtrOutput values.
// You can construct a concrete instance of `ClusterClientAuthenticationPtrInput` via:
//
//	        ClusterClientAuthenticationArgs{...}
//
//	or:
//
//	        nil
type ClusterClientAuthenticationPtrInput interface {
	pulumi.Input

	ToClusterClientAuthenticationPtrOutput() ClusterClientAuthenticationPtrOutput
	ToClusterClientAuthenticationPtrOutputWithContext(context.Context) ClusterClientAuthenticationPtrOutput
}

type clusterClientAuthenticationPtrType ClusterClientAuthenticationArgs

func ClusterClientAuthenticationPtr(v *ClusterClientAuthenticationArgs) ClusterClientAuthenticationPtrInput {
	return (*clusterClientAuthenticationPtrType)(v)
}

func (*clusterClientAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClientAuthentication)(nil)).Elem()
}

func (i *clusterClientAuthenticationPtrType) ToClusterClientAuthenticationPtrOutput() ClusterClientAuthenticationPtrOutput {
	return i.ToClusterClientAuthenticationPtrOutputWithContext(context.Background())
}

func (i *clusterClientAuthenticationPtrType) ToClusterClientAuthenticationPtrOutputWithContext(ctx context.Context) ClusterClientAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClientAuthenticationPtrOutput)
}

type ClusterClientAuthenticationOutput struct{ *pulumi.OutputState }

func (ClusterClientAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClientAuthentication)(nil)).Elem()
}

func (o ClusterClientAuthenticationOutput) ToClusterClientAuthenticationOutput() ClusterClientAuthenticationOutput {
	return o
}

func (o ClusterClientAuthenticationOutput) ToClusterClientAuthenticationOutputWithContext(ctx context.Context) ClusterClientAuthenticationOutput {
	return o
}

func (o ClusterClientAuthenticationOutput) ToClusterClientAuthenticationPtrOutput() ClusterClientAuthenticationPtrOutput {
	return o.ToClusterClientAuthenticationPtrOutputWithContext(context.Background())
}

func (o ClusterClientAuthenticationOutput) ToClusterClientAuthenticationPtrOutputWithContext(ctx context.Context) ClusterClientAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClientAuthentication) *ClusterClientAuthentication {
		return &v
	}).(ClusterClientAuthenticationPtrOutput)
}

// Configuration block for specifying SASL client authentication. See below.
func (o ClusterClientAuthenticationOutput) Sasl() ClusterClientAuthenticationSaslPtrOutput {
	return o.ApplyT(func(v ClusterClientAuthentication) *ClusterClientAuthenticationSasl { return v.Sasl }).(ClusterClientAuthenticationSaslPtrOutput)
}

// Configuration block for specifying TLS client authentication. See below.
func (o ClusterClientAuthenticationOutput) Tls() ClusterClientAuthenticationTlsPtrOutput {
	return o.ApplyT(func(v ClusterClientAuthentication) *ClusterClientAuthenticationTls { return v.Tls }).(ClusterClientAuthenticationTlsPtrOutput)
}

// Enables unauthenticated access.
func (o ClusterClientAuthenticationOutput) Unauthenticated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClientAuthentication) *bool { return v.Unauthenticated }).(pulumi.BoolPtrOutput)
}

type ClusterClientAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (ClusterClientAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClientAuthentication)(nil)).Elem()
}

func (o ClusterClientAuthenticationPtrOutput) ToClusterClientAuthenticationPtrOutput() ClusterClientAuthenticationPtrOutput {
	return o
}

func (o ClusterClientAuthenticationPtrOutput) ToClusterClientAuthenticationPtrOutputWithContext(ctx context.Context) ClusterClientAuthenticationPtrOutput {
	return o
}

func (o ClusterClientAuthenticationPtrOutput) Elem() ClusterClientAuthenticationOutput {
	return o.ApplyT(func(v *ClusterClientAuthentication) ClusterClientAuthentication {
		if v != nil {
			return *v
		}
		var ret ClusterClientAuthentication
		return ret
	}).(ClusterClientAuthenticationOutput)
}

// Configuration block for specifying SASL client authentication. See below.
func (o ClusterClientAuthenticationPtrOutput) Sasl() ClusterClientAuthenticationSaslPtrOutput {
	return o.ApplyT(func(v *ClusterClientAuthentication) *ClusterClientAuthenticationSasl {
		if v == nil {
			return nil
		}
		return v.Sasl
	}).(ClusterClientAuthenticationSaslPtrOutput)
}

// Configuration block for specifying TLS client authentication. See below.
func (o ClusterClientAuthenticationPtrOutput) Tls() ClusterClientAuthenticationTlsPtrOutput {
	return o.ApplyT(func(v *ClusterClientAuthentication) *ClusterClientAuthenticationTls {
		if v == nil {
			return nil
		}
		return v.Tls
	}).(ClusterClientAuthenticationTlsPtrOutput)
}

// Enables unauthenticated access.
func (o ClusterClientAuthenticationPtrOutput) Unauthenticated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterClientAuthentication) *bool {
		if v == nil {
			return nil
		}
		return v.Unauthenticated
	}).(pulumi.BoolPtrOutput)
}

type ClusterClientAuthenticationSasl struct {
	Iam   *bool `pulumi:"iam"`
	Scram *bool `pulumi:"scram"`
}

// ClusterClientAuthenticationSaslInput is an input type that accepts ClusterClientAuthenticationSaslArgs and ClusterClientAuthenticationSaslOutput values.
// You can construct a concrete instance of `ClusterClientAuthenticationSaslInput` via:
//
//	ClusterClientAuthenticationSaslArgs{...}
type ClusterClientAuthenticationSaslInput interface {
	pulumi.Input

	ToClusterClientAuthenticationSaslOutput() ClusterClientAuthenticationSaslOutput
	ToClusterClientAuthenticationSaslOutputWithContext(context.Context) ClusterClientAuthenticationSaslOutput
}

type ClusterClientAuthenticationSaslArgs struct {
	Iam   pulumi.BoolPtrInput `pulumi:"iam"`
	Scram pulumi.BoolPtrInput `pulumi:"scram"`
}

func (ClusterClientAuthenticationSaslArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClientAuthenticationSasl)(nil)).Elem()
}

func (i ClusterClientAuthenticationSaslArgs) ToClusterClientAuthenticationSaslOutput() ClusterClientAuthenticationSaslOutput {
	return i.ToClusterClientAuthenticationSaslOutputWithContext(context.Background())
}

func (i ClusterClientAuthenticationSaslArgs) ToClusterClientAuthenticationSaslOutputWithContext(ctx context.Context) ClusterClientAuthenticationSaslOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClientAuthenticationSaslOutput)
}

func (i ClusterClientAuthenticationSaslArgs) ToClusterClientAuthenticationSaslPtrOutput() ClusterClientAuthenticationSaslPtrOutput {
	return i.ToClusterClientAuthenticationSaslPtrOutputWithContext(context.Background())
}

func (i ClusterClientAuthenticationSaslArgs) ToClusterClientAuthenticationSaslPtrOutputWithContext(ctx context.Context) ClusterClientAuthenticationSaslPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClientAuthenticationSaslOutput).ToClusterClientAuthenticationSaslPtrOutputWithContext(ctx)
}

// ClusterClientAuthenticationSaslPtrInput is an input type that accepts ClusterClientAuthenticationSaslArgs, ClusterClientAuthenticationSaslPtr and ClusterClientAuthenticationSaslPtrOutput values.
// You can construct a concrete instance of `ClusterClientAuthenticationSaslPtrInput` via:
//
//	        ClusterClientAuthenticationSaslArgs{...}
//
//	or:
//
//	        nil
type ClusterClientAuthenticationSaslPtrInput interface {
	pulumi.Input

	ToClusterClientAuthenticationSaslPtrOutput() ClusterClientAuthenticationSaslPtrOutput
	ToClusterClientAuthenticationSaslPtrOutputWithContext(context.Context) ClusterClientAuthenticationSaslPtrOutput
}

type clusterClientAuthenticationSaslPtrType ClusterClientAuthenticationSaslArgs

func ClusterClientAuthenticationSaslPtr(v *ClusterClientAuthenticationSaslArgs) ClusterClientAuthenticationSaslPtrInput {
	return (*clusterClientAuthenticationSaslPtrType)(v)
}

func (*clusterClientAuthenticationSaslPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClientAuthenticationSasl)(nil)).Elem()
}

func (i *clusterClientAuthenticationSaslPtrType) ToClusterClientAuthenticationSaslPtrOutput() ClusterClientAuthenticationSaslPtrOutput {
	return i.ToClusterClientAuthenticationSaslPtrOutputWithContext(context.Background())
}

func (i *clusterClientAuthenticationSaslPtrType) ToClusterClientAuthenticationSaslPtrOutputWithContext(ctx context.Context) ClusterClientAuthenticationSaslPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClientAuthenticationSaslPtrOutput)
}

type ClusterClientAuthenticationSaslOutput struct{ *pulumi.OutputState }

func (ClusterClientAuthenticationSaslOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClientAuthenticationSasl)(nil)).Elem()
}

func (o ClusterClientAuthenticationSaslOutput) ToClusterClientAuthenticationSaslOutput() ClusterClientAuthenticationSaslOutput {
	return o
}

func (o ClusterClientAuthenticationSaslOutput) ToClusterClientAuthenticationSaslOutputWithContext(ctx context.Context) ClusterClientAuthenticationSaslOutput {
	return o
}

func (o ClusterClientAuthenticationSaslOutput) ToClusterClientAuthenticationSaslPtrOutput() ClusterClientAuthenticationSaslPtrOutput {
	return o.ToClusterClientAuthenticationSaslPtrOutputWithContext(context.Background())
}

func (o ClusterClientAuthenticationSaslOutput) ToClusterClientAuthenticationSaslPtrOutputWithContext(ctx context.Context) ClusterClientAuthenticationSaslPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClientAuthenticationSasl) *ClusterClientAuthenticationSasl {
		return &v
	}).(ClusterClientAuthenticationSaslPtrOutput)
}

func (o ClusterClientAuthenticationSaslOutput) Iam() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClientAuthenticationSasl) *bool { return v.Iam }).(pulumi.BoolPtrOutput)
}

func (o ClusterClientAuthenticationSaslOutput) Scram() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterClientAuthenticationSasl) *bool { return v.Scram }).(pulumi.BoolPtrOutput)
}

type ClusterClientAuthenticationSaslPtrOutput struct{ *pulumi.OutputState }

func (ClusterClientAuthenticationSaslPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClientAuthenticationSasl)(nil)).Elem()
}

func (o ClusterClientAuthenticationSaslPtrOutput) ToClusterClientAuthenticationSaslPtrOutput() ClusterClientAuthenticationSaslPtrOutput {
	return o
}

func (o ClusterClientAuthenticationSaslPtrOutput) ToClusterClientAuthenticationSaslPtrOutputWithContext(ctx context.Context) ClusterClientAuthenticationSaslPtrOutput {
	return o
}

func (o ClusterClientAuthenticationSaslPtrOutput) Elem() ClusterClientAuthenticationSaslOutput {
	return o.ApplyT(func(v *ClusterClientAuthenticationSasl) ClusterClientAuthenticationSasl {
		if v != nil {
			return *v
		}
		var ret ClusterClientAuthenticationSasl
		return ret
	}).(ClusterClientAuthenticationSaslOutput)
}

func (o ClusterClientAuthenticationSaslPtrOutput) Iam() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterClientAuthenticationSasl) *bool {
		if v == nil {
			return nil
		}
		return v.Iam
	}).(pulumi.BoolPtrOutput)
}

func (o ClusterClientAuthenticationSaslPtrOutput) Scram() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterClientAuthenticationSasl) *bool {
		if v == nil {
			return nil
		}
		return v.Scram
	}).(pulumi.BoolPtrOutput)
}

type ClusterClientAuthenticationTls struct {
	// List of ACM Certificate Authority Amazon Resource Names (ARNs).
	CertificateAuthorityArns []string `pulumi:"certificateAuthorityArns"`
}

// ClusterClientAuthenticationTlsInput is an input type that accepts ClusterClientAuthenticationTlsArgs and ClusterClientAuthenticationTlsOutput values.
// You can construct a concrete instance of `ClusterClientAuthenticationTlsInput` via:
//
//	ClusterClientAuthenticationTlsArgs{...}
type ClusterClientAuthenticationTlsInput interface {
	pulumi.Input

	ToClusterClientAuthenticationTlsOutput() ClusterClientAuthenticationTlsOutput
	ToClusterClientAuthenticationTlsOutputWithContext(context.Context) ClusterClientAuthenticationTlsOutput
}

type ClusterClientAuthenticationTlsArgs struct {
	// List of ACM Certificate Authority Amazon Resource Names (ARNs).
	CertificateAuthorityArns pulumi.StringArrayInput `pulumi:"certificateAuthorityArns"`
}

func (ClusterClientAuthenticationTlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClientAuthenticationTls)(nil)).Elem()
}

func (i ClusterClientAuthenticationTlsArgs) ToClusterClientAuthenticationTlsOutput() ClusterClientAuthenticationTlsOutput {
	return i.ToClusterClientAuthenticationTlsOutputWithContext(context.Background())
}

func (i ClusterClientAuthenticationTlsArgs) ToClusterClientAuthenticationTlsOutputWithContext(ctx context.Context) ClusterClientAuthenticationTlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClientAuthenticationTlsOutput)
}

func (i ClusterClientAuthenticationTlsArgs) ToClusterClientAuthenticationTlsPtrOutput() ClusterClientAuthenticationTlsPtrOutput {
	return i.ToClusterClientAuthenticationTlsPtrOutputWithContext(context.Background())
}

func (i ClusterClientAuthenticationTlsArgs) ToClusterClientAuthenticationTlsPtrOutputWithContext(ctx context.Context) ClusterClientAuthenticationTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClientAuthenticationTlsOutput).ToClusterClientAuthenticationTlsPtrOutputWithContext(ctx)
}

// ClusterClientAuthenticationTlsPtrInput is an input type that accepts ClusterClientAuthenticationTlsArgs, ClusterClientAuthenticationTlsPtr and ClusterClientAuthenticationTlsPtrOutput values.
// You can construct a concrete instance of `ClusterClientAuthenticationTlsPtrInput` via:
//
//	        ClusterClientAuthenticationTlsArgs{...}
//
//	or:
//
//	        nil
type ClusterClientAuthenticationTlsPtrInput interface {
	pulumi.Input

	ToClusterClientAuthenticationTlsPtrOutput() ClusterClientAuthenticationTlsPtrOutput
	ToClusterClientAuthenticationTlsPtrOutputWithContext(context.Context) ClusterClientAuthenticationTlsPtrOutput
}

type clusterClientAuthenticationTlsPtrType ClusterClientAuthenticationTlsArgs

func ClusterClientAuthenticationTlsPtr(v *ClusterClientAuthenticationTlsArgs) ClusterClientAuthenticationTlsPtrInput {
	return (*clusterClientAuthenticationTlsPtrType)(v)
}

func (*clusterClientAuthenticationTlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClientAuthenticationTls)(nil)).Elem()
}

func (i *clusterClientAuthenticationTlsPtrType) ToClusterClientAuthenticationTlsPtrOutput() ClusterClientAuthenticationTlsPtrOutput {
	return i.ToClusterClientAuthenticationTlsPtrOutputWithContext(context.Background())
}

func (i *clusterClientAuthenticationTlsPtrType) ToClusterClientAuthenticationTlsPtrOutputWithContext(ctx context.Context) ClusterClientAuthenticationTlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterClientAuthenticationTlsPtrOutput)
}

type ClusterClientAuthenticationTlsOutput struct{ *pulumi.OutputState }

func (ClusterClientAuthenticationTlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterClientAuthenticationTls)(nil)).Elem()
}

func (o ClusterClientAuthenticationTlsOutput) ToClusterClientAuthenticationTlsOutput() ClusterClientAuthenticationTlsOutput {
	return o
}

func (o ClusterClientAuthenticationTlsOutput) ToClusterClientAuthenticationTlsOutputWithContext(ctx context.Context) ClusterClientAuthenticationTlsOutput {
	return o
}

func (o ClusterClientAuthenticationTlsOutput) ToClusterClientAuthenticationTlsPtrOutput() ClusterClientAuthenticationTlsPtrOutput {
	return o.ToClusterClientAuthenticationTlsPtrOutputWithContext(context.Background())
}

func (o ClusterClientAuthenticationTlsOutput) ToClusterClientAuthenticationTlsPtrOutputWithContext(ctx context.Context) ClusterClientAuthenticationTlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterClientAuthenticationTls) *ClusterClientAuthenticationTls {
		return &v
	}).(ClusterClientAuthenticationTlsPtrOutput)
}

// List of ACM Certificate Authority Amazon Resource Names (ARNs).
func (o ClusterClientAuthenticationTlsOutput) CertificateAuthorityArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ClusterClientAuthenticationTls) []string { return v.CertificateAuthorityArns }).(pulumi.StringArrayOutput)
}

type ClusterClientAuthenticationTlsPtrOutput struct{ *pulumi.OutputState }

func (ClusterClientAuthenticationTlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterClientAuthenticationTls)(nil)).Elem()
}

func (o ClusterClientAuthenticationTlsPtrOutput) ToClusterClientAuthenticationTlsPtrOutput() ClusterClientAuthenticationTlsPtrOutput {
	return o
}

func (o ClusterClientAuthenticationTlsPtrOutput) ToClusterClientAuthenticationTlsPtrOutputWithContext(ctx context.Context) ClusterClientAuthenticationTlsPtrOutput {
	return o
}

func (o ClusterClientAuthenticationTlsPtrOutput) Elem() ClusterClientAuthenticationTlsOutput {
	return o.ApplyT(func(v *ClusterClientAuthenticationTls) ClusterClientAuthenticationTls {
		if v != nil {
			return *v
		}
		var ret ClusterClientAuthenticationTls
		return ret
	}).(ClusterClientAuthenticationTlsOutput)
}

// List of ACM Certificate Authority Amazon Resource Names (ARNs).
func (o ClusterClientAuthenticationTlsPtrOutput) CertificateAuthorityArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterClientAuthenticationTls) []string {
		if v == nil {
			return nil
		}
		return v.CertificateAuthorityArns
	}).(pulumi.StringArrayOutput)
}

type ClusterConfigurationInfo struct {
	// Amazon Resource Name (ARN) of the MSK Configuration to use in the cluster.
	Arn string `pulumi:"arn"`
	// Revision of the MSK Configuration to use in the cluster.
	Revision int `pulumi:"revision"`
}

// ClusterConfigurationInfoInput is an input type that accepts ClusterConfigurationInfoArgs and ClusterConfigurationInfoOutput values.
// You can construct a concrete instance of `ClusterConfigurationInfoInput` via:
//
//	ClusterConfigurationInfoArgs{...}
type ClusterConfigurationInfoInput interface {
	pulumi.Input

	ToClusterConfigurationInfoOutput() ClusterConfigurationInfoOutput
	ToClusterConfigurationInfoOutputWithContext(context.Context) ClusterConfigurationInfoOutput
}

type ClusterConfigurationInfoArgs struct {
	// Amazon Resource Name (ARN) of the MSK Configuration to use in the cluster.
	Arn pulumi.StringInput `pulumi:"arn"`
	// Revision of the MSK Configuration to use in the cluster.
	Revision pulumi.IntInput `pulumi:"revision"`
}

func (ClusterConfigurationInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConfigurationInfo)(nil)).Elem()
}

func (i ClusterConfigurationInfoArgs) ToClusterConfigurationInfoOutput() ClusterConfigurationInfoOutput {
	return i.ToClusterConfigurationInfoOutputWithContext(context.Background())
}

func (i ClusterConfigurationInfoArgs) ToClusterConfigurationInfoOutputWithContext(ctx context.Context) ClusterConfigurationInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConfigurationInfoOutput)
}

func (i ClusterConfigurationInfoArgs) ToClusterConfigurationInfoPtrOutput() ClusterConfigurationInfoPtrOutput {
	return i.ToClusterConfigurationInfoPtrOutputWithContext(context.Background())
}

func (i ClusterConfigurationInfoArgs) ToClusterConfigurationInfoPtrOutputWithContext(ctx context.Context) ClusterConfigurationInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConfigurationInfoOutput).ToClusterConfigurationInfoPtrOutputWithContext(ctx)
}

// ClusterConfigurationInfoPtrInput is an input type that accepts ClusterConfigurationInfoArgs, ClusterConfigurationInfoPtr and ClusterConfigurationInfoPtrOutput values.
// You can construct a concrete instance of `ClusterConfigurationInfoPtrInput` via:
//
//	        ClusterConfigurationInfoArgs{...}
//
//	or:
//
//	        nil
type ClusterConfigurationInfoPtrInput interface {
	pulumi.Input

	ToClusterConfigurationInfoPtrOutput() ClusterConfigurationInfoPtrOutput
	ToClusterConfigurationInfoPtrOutputWithContext(context.Context) ClusterConfigurationInfoPtrOutput
}

type clusterConfigurationInfoPtrType ClusterConfigurationInfoArgs

func ClusterConfigurationInfoPtr(v *ClusterConfigurationInfoArgs) ClusterConfigurationInfoPtrInput {
	return (*clusterConfigurationInfoPtrType)(v)
}

func (*clusterConfigurationInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterConfigurationInfo)(nil)).Elem()
}

func (i *clusterConfigurationInfoPtrType) ToClusterConfigurationInfoPtrOutput() ClusterConfigurationInfoPtrOutput {
	return i.ToClusterConfigurationInfoPtrOutputWithContext(context.Background())
}

func (i *clusterConfigurationInfoPtrType) ToClusterConfigurationInfoPtrOutputWithContext(ctx context.Context) ClusterConfigurationInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterConfigurationInfoPtrOutput)
}

type ClusterConfigurationInfoOutput struct{ *pulumi.OutputState }

func (ClusterConfigurationInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterConfigurationInfo)(nil)).Elem()
}

func (o ClusterConfigurationInfoOutput) ToClusterConfigurationInfoOutput() ClusterConfigurationInfoOutput {
	return o
}

func (o ClusterConfigurationInfoOutput) ToClusterConfigurationInfoOutputWithContext(ctx context.Context) ClusterConfigurationInfoOutput {
	return o
}

func (o ClusterConfigurationInfoOutput) ToClusterConfigurationInfoPtrOutput() ClusterConfigurationInfoPtrOutput {
	return o.ToClusterConfigurationInfoPtrOutputWithContext(context.Background())
}

func (o ClusterConfigurationInfoOutput) ToClusterConfigurationInfoPtrOutputWithContext(ctx context.Context) ClusterConfigurationInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterConfigurationInfo) *ClusterConfigurationInfo {
		return &v
	}).(ClusterConfigurationInfoPtrOutput)
}

// Amazon Resource Name (ARN) of the MSK Configuration to use in the cluster.
func (o ClusterConfigurationInfoOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterConfigurationInfo) string { return v.Arn }).(pulumi.StringOutput)
}

// Revision of the MSK Configuration to use in the cluster.
func (o ClusterConfigurationInfoOutput) Revision() pulumi.IntOutput {
	return o.ApplyT(func(v ClusterConfigurationInfo) int { return v.Revision }).(pulumi.IntOutput)
}

type ClusterConfigurationInfoPtrOutput struct{ *pulumi.OutputState }

func (ClusterConfigurationInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterConfigurationInfo)(nil)).Elem()
}

func (o ClusterConfigurationInfoPtrOutput) ToClusterConfigurationInfoPtrOutput() ClusterConfigurationInfoPtrOutput {
	return o
}

func (o ClusterConfigurationInfoPtrOutput) ToClusterConfigurationInfoPtrOutputWithContext(ctx context.Context) ClusterConfigurationInfoPtrOutput {
	return o
}

func (o ClusterConfigurationInfoPtrOutput) Elem() ClusterConfigurationInfoOutput {
	return o.ApplyT(func(v *ClusterConfigurationInfo) ClusterConfigurationInfo {
		if v != nil {
			return *v
		}
		var ret ClusterConfigurationInfo
		return ret
	}).(ClusterConfigurationInfoOutput)
}

// Amazon Resource Name (ARN) of the MSK Configuration to use in the cluster.
func (o ClusterConfigurationInfoPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterConfigurationInfo) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

// Revision of the MSK Configuration to use in the cluster.
func (o ClusterConfigurationInfoPtrOutput) Revision() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterConfigurationInfo) *int {
		if v == nil {
			return nil
		}
		return &v.Revision
	}).(pulumi.IntPtrOutput)
}

type ClusterEncryptionInfo struct {
	// You may specify a KMS key short ID or ARN (it will always output an ARN) to use for encrypting your data at rest.  If no key is specified, an AWS managed KMS ('aws/msk' managed service) key will be used for encrypting the data at rest.
	EncryptionAtRestKmsKeyArn *string `pulumi:"encryptionAtRestKmsKeyArn"`
	// Configuration block to specify encryption in transit. See below.
	EncryptionInTransit *ClusterEncryptionInfoEncryptionInTransit `pulumi:"encryptionInTransit"`
}

// ClusterEncryptionInfoInput is an input type that accepts ClusterEncryptionInfoArgs and ClusterEncryptionInfoOutput values.
// You can construct a concrete instance of `ClusterEncryptionInfoInput` via:
//
//	ClusterEncryptionInfoArgs{...}
type ClusterEncryptionInfoInput interface {
	pulumi.Input

	ToClusterEncryptionInfoOutput() ClusterEncryptionInfoOutput
	ToClusterEncryptionInfoOutputWithContext(context.Context) ClusterEncryptionInfoOutput
}

type ClusterEncryptionInfoArgs struct {
	// You may specify a KMS key short ID or ARN (it will always output an ARN) to use for encrypting your data at rest.  If no key is specified, an AWS managed KMS ('aws/msk' managed service) key will be used for encrypting the data at rest.
	EncryptionAtRestKmsKeyArn pulumi.StringPtrInput `pulumi:"encryptionAtRestKmsKeyArn"`
	// Configuration block to specify encryption in transit. See below.
	EncryptionInTransit ClusterEncryptionInfoEncryptionInTransitPtrInput `pulumi:"encryptionInTransit"`
}

func (ClusterEncryptionInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionInfo)(nil)).Elem()
}

func (i ClusterEncryptionInfoArgs) ToClusterEncryptionInfoOutput() ClusterEncryptionInfoOutput {
	return i.ToClusterEncryptionInfoOutputWithContext(context.Background())
}

func (i ClusterEncryptionInfoArgs) ToClusterEncryptionInfoOutputWithContext(ctx context.Context) ClusterEncryptionInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionInfoOutput)
}

func (i ClusterEncryptionInfoArgs) ToClusterEncryptionInfoPtrOutput() ClusterEncryptionInfoPtrOutput {
	return i.ToClusterEncryptionInfoPtrOutputWithContext(context.Background())
}

func (i ClusterEncryptionInfoArgs) ToClusterEncryptionInfoPtrOutputWithContext(ctx context.Context) ClusterEncryptionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionInfoOutput).ToClusterEncryptionInfoPtrOutputWithContext(ctx)
}

// ClusterEncryptionInfoPtrInput is an input type that accepts ClusterEncryptionInfoArgs, ClusterEncryptionInfoPtr and ClusterEncryptionInfoPtrOutput values.
// You can construct a concrete instance of `ClusterEncryptionInfoPtrInput` via:
//
//	        ClusterEncryptionInfoArgs{...}
//
//	or:
//
//	        nil
type ClusterEncryptionInfoPtrInput interface {
	pulumi.Input

	ToClusterEncryptionInfoPtrOutput() ClusterEncryptionInfoPtrOutput
	ToClusterEncryptionInfoPtrOutputWithContext(context.Context) ClusterEncryptionInfoPtrOutput
}

type clusterEncryptionInfoPtrType ClusterEncryptionInfoArgs

func ClusterEncryptionInfoPtr(v *ClusterEncryptionInfoArgs) ClusterEncryptionInfoPtrInput {
	return (*clusterEncryptionInfoPtrType)(v)
}

func (*clusterEncryptionInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEncryptionInfo)(nil)).Elem()
}

func (i *clusterEncryptionInfoPtrType) ToClusterEncryptionInfoPtrOutput() ClusterEncryptionInfoPtrOutput {
	return i.ToClusterEncryptionInfoPtrOutputWithContext(context.Background())
}

func (i *clusterEncryptionInfoPtrType) ToClusterEncryptionInfoPtrOutputWithContext(ctx context.Context) ClusterEncryptionInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionInfoPtrOutput)
}

type ClusterEncryptionInfoOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionInfo)(nil)).Elem()
}

func (o ClusterEncryptionInfoOutput) ToClusterEncryptionInfoOutput() ClusterEncryptionInfoOutput {
	return o
}

func (o ClusterEncryptionInfoOutput) ToClusterEncryptionInfoOutputWithContext(ctx context.Context) ClusterEncryptionInfoOutput {
	return o
}

func (o ClusterEncryptionInfoOutput) ToClusterEncryptionInfoPtrOutput() ClusterEncryptionInfoPtrOutput {
	return o.ToClusterEncryptionInfoPtrOutputWithContext(context.Background())
}

func (o ClusterEncryptionInfoOutput) ToClusterEncryptionInfoPtrOutputWithContext(ctx context.Context) ClusterEncryptionInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterEncryptionInfo) *ClusterEncryptionInfo {
		return &v
	}).(ClusterEncryptionInfoPtrOutput)
}

// You may specify a KMS key short ID or ARN (it will always output an ARN) to use for encrypting your data at rest.  If no key is specified, an AWS managed KMS ('aws/msk' managed service) key will be used for encrypting the data at rest.
func (o ClusterEncryptionInfoOutput) EncryptionAtRestKmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterEncryptionInfo) *string { return v.EncryptionAtRestKmsKeyArn }).(pulumi.StringPtrOutput)
}

// Configuration block to specify encryption in transit. See below.
func (o ClusterEncryptionInfoOutput) EncryptionInTransit() ClusterEncryptionInfoEncryptionInTransitPtrOutput {
	return o.ApplyT(func(v ClusterEncryptionInfo) *ClusterEncryptionInfoEncryptionInTransit { return v.EncryptionInTransit }).(ClusterEncryptionInfoEncryptionInTransitPtrOutput)
}

type ClusterEncryptionInfoPtrOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEncryptionInfo)(nil)).Elem()
}

func (o ClusterEncryptionInfoPtrOutput) ToClusterEncryptionInfoPtrOutput() ClusterEncryptionInfoPtrOutput {
	return o
}

func (o ClusterEncryptionInfoPtrOutput) ToClusterEncryptionInfoPtrOutputWithContext(ctx context.Context) ClusterEncryptionInfoPtrOutput {
	return o
}

func (o ClusterEncryptionInfoPtrOutput) Elem() ClusterEncryptionInfoOutput {
	return o.ApplyT(func(v *ClusterEncryptionInfo) ClusterEncryptionInfo {
		if v != nil {
			return *v
		}
		var ret ClusterEncryptionInfo
		return ret
	}).(ClusterEncryptionInfoOutput)
}

// You may specify a KMS key short ID or ARN (it will always output an ARN) to use for encrypting your data at rest.  If no key is specified, an AWS managed KMS ('aws/msk' managed service) key will be used for encrypting the data at rest.
func (o ClusterEncryptionInfoPtrOutput) EncryptionAtRestKmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterEncryptionInfo) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionAtRestKmsKeyArn
	}).(pulumi.StringPtrOutput)
}

// Configuration block to specify encryption in transit. See below.
func (o ClusterEncryptionInfoPtrOutput) EncryptionInTransit() ClusterEncryptionInfoEncryptionInTransitPtrOutput {
	return o.ApplyT(func(v *ClusterEncryptionInfo) *ClusterEncryptionInfoEncryptionInTransit {
		if v == nil {
			return nil
		}
		return v.EncryptionInTransit
	}).(ClusterEncryptionInfoEncryptionInTransitPtrOutput)
}

type ClusterEncryptionInfoEncryptionInTransit struct {
	// Encryption setting for data in transit between clients and brokers. Valid values: `TLS`, `TLS_PLAINTEXT`, and `PLAINTEXT`. Default value is `TLS`.
	ClientBroker *string `pulumi:"clientBroker"`
	// Whether data communication among broker nodes is encrypted. Default value: `true`.
	InCluster *bool `pulumi:"inCluster"`
}

// ClusterEncryptionInfoEncryptionInTransitInput is an input type that accepts ClusterEncryptionInfoEncryptionInTransitArgs and ClusterEncryptionInfoEncryptionInTransitOutput values.
// You can construct a concrete instance of `ClusterEncryptionInfoEncryptionInTransitInput` via:
//
//	ClusterEncryptionInfoEncryptionInTransitArgs{...}
type ClusterEncryptionInfoEncryptionInTransitInput interface {
	pulumi.Input

	ToClusterEncryptionInfoEncryptionInTransitOutput() ClusterEncryptionInfoEncryptionInTransitOutput
	ToClusterEncryptionInfoEncryptionInTransitOutputWithContext(context.Context) ClusterEncryptionInfoEncryptionInTransitOutput
}

type ClusterEncryptionInfoEncryptionInTransitArgs struct {
	// Encryption setting for data in transit between clients and brokers. Valid values: `TLS`, `TLS_PLAINTEXT`, and `PLAINTEXT`. Default value is `TLS`.
	ClientBroker pulumi.StringPtrInput `pulumi:"clientBroker"`
	// Whether data communication among broker nodes is encrypted. Default value: `true`.
	InCluster pulumi.BoolPtrInput `pulumi:"inCluster"`
}

func (ClusterEncryptionInfoEncryptionInTransitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionInfoEncryptionInTransit)(nil)).Elem()
}

func (i ClusterEncryptionInfoEncryptionInTransitArgs) ToClusterEncryptionInfoEncryptionInTransitOutput() ClusterEncryptionInfoEncryptionInTransitOutput {
	return i.ToClusterEncryptionInfoEncryptionInTransitOutputWithContext(context.Background())
}

func (i ClusterEncryptionInfoEncryptionInTransitArgs) ToClusterEncryptionInfoEncryptionInTransitOutputWithContext(ctx context.Context) ClusterEncryptionInfoEncryptionInTransitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionInfoEncryptionInTransitOutput)
}

func (i ClusterEncryptionInfoEncryptionInTransitArgs) ToClusterEncryptionInfoEncryptionInTransitPtrOutput() ClusterEncryptionInfoEncryptionInTransitPtrOutput {
	return i.ToClusterEncryptionInfoEncryptionInTransitPtrOutputWithContext(context.Background())
}

func (i ClusterEncryptionInfoEncryptionInTransitArgs) ToClusterEncryptionInfoEncryptionInTransitPtrOutputWithContext(ctx context.Context) ClusterEncryptionInfoEncryptionInTransitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionInfoEncryptionInTransitOutput).ToClusterEncryptionInfoEncryptionInTransitPtrOutputWithContext(ctx)
}

// ClusterEncryptionInfoEncryptionInTransitPtrInput is an input type that accepts ClusterEncryptionInfoEncryptionInTransitArgs, ClusterEncryptionInfoEncryptionInTransitPtr and ClusterEncryptionInfoEncryptionInTransitPtrOutput values.
// You can construct a concrete instance of `ClusterEncryptionInfoEncryptionInTransitPtrInput` via:
//
//	        ClusterEncryptionInfoEncryptionInTransitArgs{...}
//
//	or:
//
//	        nil
type ClusterEncryptionInfoEncryptionInTransitPtrInput interface {
	pulumi.Input

	ToClusterEncryptionInfoEncryptionInTransitPtrOutput() ClusterEncryptionInfoEncryptionInTransitPtrOutput
	ToClusterEncryptionInfoEncryptionInTransitPtrOutputWithContext(context.Context) ClusterEncryptionInfoEncryptionInTransitPtrOutput
}

type clusterEncryptionInfoEncryptionInTransitPtrType ClusterEncryptionInfoEncryptionInTransitArgs

func ClusterEncryptionInfoEncryptionInTransitPtr(v *ClusterEncryptionInfoEncryptionInTransitArgs) ClusterEncryptionInfoEncryptionInTransitPtrInput {
	return (*clusterEncryptionInfoEncryptionInTransitPtrType)(v)
}

func (*clusterEncryptionInfoEncryptionInTransitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEncryptionInfoEncryptionInTransit)(nil)).Elem()
}

func (i *clusterEncryptionInfoEncryptionInTransitPtrType) ToClusterEncryptionInfoEncryptionInTransitPtrOutput() ClusterEncryptionInfoEncryptionInTransitPtrOutput {
	return i.ToClusterEncryptionInfoEncryptionInTransitPtrOutputWithContext(context.Background())
}

func (i *clusterEncryptionInfoEncryptionInTransitPtrType) ToClusterEncryptionInfoEncryptionInTransitPtrOutputWithContext(ctx context.Context) ClusterEncryptionInfoEncryptionInTransitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEncryptionInfoEncryptionInTransitPtrOutput)
}

type ClusterEncryptionInfoEncryptionInTransitOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionInfoEncryptionInTransitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterEncryptionInfoEncryptionInTransit)(nil)).Elem()
}

func (o ClusterEncryptionInfoEncryptionInTransitOutput) ToClusterEncryptionInfoEncryptionInTransitOutput() ClusterEncryptionInfoEncryptionInTransitOutput {
	return o
}

func (o ClusterEncryptionInfoEncryptionInTransitOutput) ToClusterEncryptionInfoEncryptionInTransitOutputWithContext(ctx context.Context) ClusterEncryptionInfoEncryptionInTransitOutput {
	return o
}

func (o ClusterEncryptionInfoEncryptionInTransitOutput) ToClusterEncryptionInfoEncryptionInTransitPtrOutput() ClusterEncryptionInfoEncryptionInTransitPtrOutput {
	return o.ToClusterEncryptionInfoEncryptionInTransitPtrOutputWithContext(context.Background())
}

func (o ClusterEncryptionInfoEncryptionInTransitOutput) ToClusterEncryptionInfoEncryptionInTransitPtrOutputWithContext(ctx context.Context) ClusterEncryptionInfoEncryptionInTransitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterEncryptionInfoEncryptionInTransit) *ClusterEncryptionInfoEncryptionInTransit {
		return &v
	}).(ClusterEncryptionInfoEncryptionInTransitPtrOutput)
}

// Encryption setting for data in transit between clients and brokers. Valid values: `TLS`, `TLS_PLAINTEXT`, and `PLAINTEXT`. Default value is `TLS`.
func (o ClusterEncryptionInfoEncryptionInTransitOutput) ClientBroker() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterEncryptionInfoEncryptionInTransit) *string { return v.ClientBroker }).(pulumi.StringPtrOutput)
}

// Whether data communication among broker nodes is encrypted. Default value: `true`.
func (o ClusterEncryptionInfoEncryptionInTransitOutput) InCluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterEncryptionInfoEncryptionInTransit) *bool { return v.InCluster }).(pulumi.BoolPtrOutput)
}

type ClusterEncryptionInfoEncryptionInTransitPtrOutput struct{ *pulumi.OutputState }

func (ClusterEncryptionInfoEncryptionInTransitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEncryptionInfoEncryptionInTransit)(nil)).Elem()
}

func (o ClusterEncryptionInfoEncryptionInTransitPtrOutput) ToClusterEncryptionInfoEncryptionInTransitPtrOutput() ClusterEncryptionInfoEncryptionInTransitPtrOutput {
	return o
}

func (o ClusterEncryptionInfoEncryptionInTransitPtrOutput) ToClusterEncryptionInfoEncryptionInTransitPtrOutputWithContext(ctx context.Context) ClusterEncryptionInfoEncryptionInTransitPtrOutput {
	return o
}

func (o ClusterEncryptionInfoEncryptionInTransitPtrOutput) Elem() ClusterEncryptionInfoEncryptionInTransitOutput {
	return o.ApplyT(func(v *ClusterEncryptionInfoEncryptionInTransit) ClusterEncryptionInfoEncryptionInTransit {
		if v != nil {
			return *v
		}
		var ret ClusterEncryptionInfoEncryptionInTransit
		return ret
	}).(ClusterEncryptionInfoEncryptionInTransitOutput)
}

// Encryption setting for data in transit between clients and brokers. Valid values: `TLS`, `TLS_PLAINTEXT`, and `PLAINTEXT`. Default value is `TLS`.
func (o ClusterEncryptionInfoEncryptionInTransitPtrOutput) ClientBroker() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterEncryptionInfoEncryptionInTransit) *string {
		if v == nil {
			return nil
		}
		return v.ClientBroker
	}).(pulumi.StringPtrOutput)
}

// Whether data communication among broker nodes is encrypted. Default value: `true`.
func (o ClusterEncryptionInfoEncryptionInTransitPtrOutput) InCluster() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterEncryptionInfoEncryptionInTransit) *bool {
		if v == nil {
			return nil
		}
		return v.InCluster
	}).(pulumi.BoolPtrOutput)
}

type ClusterLoggingInfo struct {
	// Configuration block for Broker Logs settings for logging info. See below.
	BrokerLogs ClusterLoggingInfoBrokerLogs `pulumi:"brokerLogs"`
}

// ClusterLoggingInfoInput is an input type that accepts ClusterLoggingInfoArgs and ClusterLoggingInfoOutput values.
// You can construct a concrete instance of `ClusterLoggingInfoInput` via:
//
//	ClusterLoggingInfoArgs{...}
type ClusterLoggingInfoInput interface {
	pulumi.Input

	ToClusterLoggingInfoOutput() ClusterLoggingInfoOutput
	ToClusterLoggingInfoOutputWithContext(context.Context) ClusterLoggingInfoOutput
}

type ClusterLoggingInfoArgs struct {
	// Configuration block for Broker Logs settings for logging info. See below.
	BrokerLogs ClusterLoggingInfoBrokerLogsInput `pulumi:"brokerLogs"`
}

func (ClusterLoggingInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLoggingInfo)(nil)).Elem()
}

func (i ClusterLoggingInfoArgs) ToClusterLoggingInfoOutput() ClusterLoggingInfoOutput {
	return i.ToClusterLoggingInfoOutputWithContext(context.Background())
}

func (i ClusterLoggingInfoArgs) ToClusterLoggingInfoOutputWithContext(ctx context.Context) ClusterLoggingInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingInfoOutput)
}

func (i ClusterLoggingInfoArgs) ToClusterLoggingInfoPtrOutput() ClusterLoggingInfoPtrOutput {
	return i.ToClusterLoggingInfoPtrOutputWithContext(context.Background())
}

func (i ClusterLoggingInfoArgs) ToClusterLoggingInfoPtrOutputWithContext(ctx context.Context) ClusterLoggingInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingInfoOutput).ToClusterLoggingInfoPtrOutputWithContext(ctx)
}

// ClusterLoggingInfoPtrInput is an input type that accepts ClusterLoggingInfoArgs, ClusterLoggingInfoPtr and ClusterLoggingInfoPtrOutput values.
// You can construct a concrete instance of `ClusterLoggingInfoPtrInput` via:
//
//	        ClusterLoggingInfoArgs{...}
//
//	or:
//
//	        nil
type ClusterLoggingInfoPtrInput interface {
	pulumi.Input

	ToClusterLoggingInfoPtrOutput() ClusterLoggingInfoPtrOutput
	ToClusterLoggingInfoPtrOutputWithContext(context.Context) ClusterLoggingInfoPtrOutput
}

type clusterLoggingInfoPtrType ClusterLoggingInfoArgs

func ClusterLoggingInfoPtr(v *ClusterLoggingInfoArgs) ClusterLoggingInfoPtrInput {
	return (*clusterLoggingInfoPtrType)(v)
}

func (*clusterLoggingInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLoggingInfo)(nil)).Elem()
}

func (i *clusterLoggingInfoPtrType) ToClusterLoggingInfoPtrOutput() ClusterLoggingInfoPtrOutput {
	return i.ToClusterLoggingInfoPtrOutputWithContext(context.Background())
}

func (i *clusterLoggingInfoPtrType) ToClusterLoggingInfoPtrOutputWithContext(ctx context.Context) ClusterLoggingInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingInfoPtrOutput)
}

type ClusterLoggingInfoOutput struct{ *pulumi.OutputState }

func (ClusterLoggingInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLoggingInfo)(nil)).Elem()
}

func (o ClusterLoggingInfoOutput) ToClusterLoggingInfoOutput() ClusterLoggingInfoOutput {
	return o
}

func (o ClusterLoggingInfoOutput) ToClusterLoggingInfoOutputWithContext(ctx context.Context) ClusterLoggingInfoOutput {
	return o
}

func (o ClusterLoggingInfoOutput) ToClusterLoggingInfoPtrOutput() ClusterLoggingInfoPtrOutput {
	return o.ToClusterLoggingInfoPtrOutputWithContext(context.Background())
}

func (o ClusterLoggingInfoOutput) ToClusterLoggingInfoPtrOutputWithContext(ctx context.Context) ClusterLoggingInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterLoggingInfo) *ClusterLoggingInfo {
		return &v
	}).(ClusterLoggingInfoPtrOutput)
}

// Configuration block for Broker Logs settings for logging info. See below.
func (o ClusterLoggingInfoOutput) BrokerLogs() ClusterLoggingInfoBrokerLogsOutput {
	return o.ApplyT(func(v ClusterLoggingInfo) ClusterLoggingInfoBrokerLogs { return v.BrokerLogs }).(ClusterLoggingInfoBrokerLogsOutput)
}

type ClusterLoggingInfoPtrOutput struct{ *pulumi.OutputState }

func (ClusterLoggingInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLoggingInfo)(nil)).Elem()
}

func (o ClusterLoggingInfoPtrOutput) ToClusterLoggingInfoPtrOutput() ClusterLoggingInfoPtrOutput {
	return o
}

func (o ClusterLoggingInfoPtrOutput) ToClusterLoggingInfoPtrOutputWithContext(ctx context.Context) ClusterLoggingInfoPtrOutput {
	return o
}

func (o ClusterLoggingInfoPtrOutput) Elem() ClusterLoggingInfoOutput {
	return o.ApplyT(func(v *ClusterLoggingInfo) ClusterLoggingInfo {
		if v != nil {
			return *v
		}
		var ret ClusterLoggingInfo
		return ret
	}).(ClusterLoggingInfoOutput)
}

// Configuration block for Broker Logs settings for logging info. See below.
func (o ClusterLoggingInfoPtrOutput) BrokerLogs() ClusterLoggingInfoBrokerLogsPtrOutput {
	return o.ApplyT(func(v *ClusterLoggingInfo) *ClusterLoggingInfoBrokerLogs {
		if v == nil {
			return nil
		}
		return &v.BrokerLogs
	}).(ClusterLoggingInfoBrokerLogsPtrOutput)
}

type ClusterLoggingInfoBrokerLogs struct {
	CloudwatchLogs *ClusterLoggingInfoBrokerLogsCloudwatchLogs `pulumi:"cloudwatchLogs"`
	Firehose       *ClusterLoggingInfoBrokerLogsFirehose       `pulumi:"firehose"`
	S3             *ClusterLoggingInfoBrokerLogsS3             `pulumi:"s3"`
}

// ClusterLoggingInfoBrokerLogsInput is an input type that accepts ClusterLoggingInfoBrokerLogsArgs and ClusterLoggingInfoBrokerLogsOutput values.
// You can construct a concrete instance of `ClusterLoggingInfoBrokerLogsInput` via:
//
//	ClusterLoggingInfoBrokerLogsArgs{...}
type ClusterLoggingInfoBrokerLogsInput interface {
	pulumi.Input

	ToClusterLoggingInfoBrokerLogsOutput() ClusterLoggingInfoBrokerLogsOutput
	ToClusterLoggingInfoBrokerLogsOutputWithContext(context.Context) ClusterLoggingInfoBrokerLogsOutput
}

type ClusterLoggingInfoBrokerLogsArgs struct {
	CloudwatchLogs ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrInput `pulumi:"cloudwatchLogs"`
	Firehose       ClusterLoggingInfoBrokerLogsFirehosePtrInput       `pulumi:"firehose"`
	S3             ClusterLoggingInfoBrokerLogsS3PtrInput             `pulumi:"s3"`
}

func (ClusterLoggingInfoBrokerLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLoggingInfoBrokerLogs)(nil)).Elem()
}

func (i ClusterLoggingInfoBrokerLogsArgs) ToClusterLoggingInfoBrokerLogsOutput() ClusterLoggingInfoBrokerLogsOutput {
	return i.ToClusterLoggingInfoBrokerLogsOutputWithContext(context.Background())
}

func (i ClusterLoggingInfoBrokerLogsArgs) ToClusterLoggingInfoBrokerLogsOutputWithContext(ctx context.Context) ClusterLoggingInfoBrokerLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingInfoBrokerLogsOutput)
}

func (i ClusterLoggingInfoBrokerLogsArgs) ToClusterLoggingInfoBrokerLogsPtrOutput() ClusterLoggingInfoBrokerLogsPtrOutput {
	return i.ToClusterLoggingInfoBrokerLogsPtrOutputWithContext(context.Background())
}

func (i ClusterLoggingInfoBrokerLogsArgs) ToClusterLoggingInfoBrokerLogsPtrOutputWithContext(ctx context.Context) ClusterLoggingInfoBrokerLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingInfoBrokerLogsOutput).ToClusterLoggingInfoBrokerLogsPtrOutputWithContext(ctx)
}

// ClusterLoggingInfoBrokerLogsPtrInput is an input type that accepts ClusterLoggingInfoBrokerLogsArgs, ClusterLoggingInfoBrokerLogsPtr and ClusterLoggingInfoBrokerLogsPtrOutput values.
// You can construct a concrete instance of `ClusterLoggingInfoBrokerLogsPtrInput` via:
//
//	        ClusterLoggingInfoBrokerLogsArgs{...}
//
//	or:
//
//	        nil
type ClusterLoggingInfoBrokerLogsPtrInput interface {
	pulumi.Input

	ToClusterLoggingInfoBrokerLogsPtrOutput() ClusterLoggingInfoBrokerLogsPtrOutput
	ToClusterLoggingInfoBrokerLogsPtrOutputWithContext(context.Context) ClusterLoggingInfoBrokerLogsPtrOutput
}

type clusterLoggingInfoBrokerLogsPtrType ClusterLoggingInfoBrokerLogsArgs

func ClusterLoggingInfoBrokerLogsPtr(v *ClusterLoggingInfoBrokerLogsArgs) ClusterLoggingInfoBrokerLogsPtrInput {
	return (*clusterLoggingInfoBrokerLogsPtrType)(v)
}

func (*clusterLoggingInfoBrokerLogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLoggingInfoBrokerLogs)(nil)).Elem()
}

func (i *clusterLoggingInfoBrokerLogsPtrType) ToClusterLoggingInfoBrokerLogsPtrOutput() ClusterLoggingInfoBrokerLogsPtrOutput {
	return i.ToClusterLoggingInfoBrokerLogsPtrOutputWithContext(context.Background())
}

func (i *clusterLoggingInfoBrokerLogsPtrType) ToClusterLoggingInfoBrokerLogsPtrOutputWithContext(ctx context.Context) ClusterLoggingInfoBrokerLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingInfoBrokerLogsPtrOutput)
}

type ClusterLoggingInfoBrokerLogsOutput struct{ *pulumi.OutputState }

func (ClusterLoggingInfoBrokerLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLoggingInfoBrokerLogs)(nil)).Elem()
}

func (o ClusterLoggingInfoBrokerLogsOutput) ToClusterLoggingInfoBrokerLogsOutput() ClusterLoggingInfoBrokerLogsOutput {
	return o
}

func (o ClusterLoggingInfoBrokerLogsOutput) ToClusterLoggingInfoBrokerLogsOutputWithContext(ctx context.Context) ClusterLoggingInfoBrokerLogsOutput {
	return o
}

func (o ClusterLoggingInfoBrokerLogsOutput) ToClusterLoggingInfoBrokerLogsPtrOutput() ClusterLoggingInfoBrokerLogsPtrOutput {
	return o.ToClusterLoggingInfoBrokerLogsPtrOutputWithContext(context.Background())
}

func (o ClusterLoggingInfoBrokerLogsOutput) ToClusterLoggingInfoBrokerLogsPtrOutputWithContext(ctx context.Context) ClusterLoggingInfoBrokerLogsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterLoggingInfoBrokerLogs) *ClusterLoggingInfoBrokerLogs {
		return &v
	}).(ClusterLoggingInfoBrokerLogsPtrOutput)
}

func (o ClusterLoggingInfoBrokerLogsOutput) CloudwatchLogs() ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput {
	return o.ApplyT(func(v ClusterLoggingInfoBrokerLogs) *ClusterLoggingInfoBrokerLogsCloudwatchLogs {
		return v.CloudwatchLogs
	}).(ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput)
}

func (o ClusterLoggingInfoBrokerLogsOutput) Firehose() ClusterLoggingInfoBrokerLogsFirehosePtrOutput {
	return o.ApplyT(func(v ClusterLoggingInfoBrokerLogs) *ClusterLoggingInfoBrokerLogsFirehose { return v.Firehose }).(ClusterLoggingInfoBrokerLogsFirehosePtrOutput)
}

func (o ClusterLoggingInfoBrokerLogsOutput) S3() ClusterLoggingInfoBrokerLogsS3PtrOutput {
	return o.ApplyT(func(v ClusterLoggingInfoBrokerLogs) *ClusterLoggingInfoBrokerLogsS3 { return v.S3 }).(ClusterLoggingInfoBrokerLogsS3PtrOutput)
}

type ClusterLoggingInfoBrokerLogsPtrOutput struct{ *pulumi.OutputState }

func (ClusterLoggingInfoBrokerLogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLoggingInfoBrokerLogs)(nil)).Elem()
}

func (o ClusterLoggingInfoBrokerLogsPtrOutput) ToClusterLoggingInfoBrokerLogsPtrOutput() ClusterLoggingInfoBrokerLogsPtrOutput {
	return o
}

func (o ClusterLoggingInfoBrokerLogsPtrOutput) ToClusterLoggingInfoBrokerLogsPtrOutputWithContext(ctx context.Context) ClusterLoggingInfoBrokerLogsPtrOutput {
	return o
}

func (o ClusterLoggingInfoBrokerLogsPtrOutput) Elem() ClusterLoggingInfoBrokerLogsOutput {
	return o.ApplyT(func(v *ClusterLoggingInfoBrokerLogs) ClusterLoggingInfoBrokerLogs {
		if v != nil {
			return *v
		}
		var ret ClusterLoggingInfoBrokerLogs
		return ret
	}).(ClusterLoggingInfoBrokerLogsOutput)
}

func (o ClusterLoggingInfoBrokerLogsPtrOutput) CloudwatchLogs() ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput {
	return o.ApplyT(func(v *ClusterLoggingInfoBrokerLogs) *ClusterLoggingInfoBrokerLogsCloudwatchLogs {
		if v == nil {
			return nil
		}
		return v.CloudwatchLogs
	}).(ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput)
}

func (o ClusterLoggingInfoBrokerLogsPtrOutput) Firehose() ClusterLoggingInfoBrokerLogsFirehosePtrOutput {
	return o.ApplyT(func(v *ClusterLoggingInfoBrokerLogs) *ClusterLoggingInfoBrokerLogsFirehose {
		if v == nil {
			return nil
		}
		return v.Firehose
	}).(ClusterLoggingInfoBrokerLogsFirehosePtrOutput)
}

func (o ClusterLoggingInfoBrokerLogsPtrOutput) S3() ClusterLoggingInfoBrokerLogsS3PtrOutput {
	return o.ApplyT(func(v *ClusterLoggingInfoBrokerLogs) *ClusterLoggingInfoBrokerLogsS3 {
		if v == nil {
			return nil
		}
		return v.S3
	}).(ClusterLoggingInfoBrokerLogsS3PtrOutput)
}

type ClusterLoggingInfoBrokerLogsCloudwatchLogs struct {
	Enabled bool `pulumi:"enabled"`
	// Name of the Cloudwatch Log Group to deliver logs to.
	LogGroup *string `pulumi:"logGroup"`
}

// ClusterLoggingInfoBrokerLogsCloudwatchLogsInput is an input type that accepts ClusterLoggingInfoBrokerLogsCloudwatchLogsArgs and ClusterLoggingInfoBrokerLogsCloudwatchLogsOutput values.
// You can construct a concrete instance of `ClusterLoggingInfoBrokerLogsCloudwatchLogsInput` via:
//
//	ClusterLoggingInfoBrokerLogsCloudwatchLogsArgs{...}
type ClusterLoggingInfoBrokerLogsCloudwatchLogsInput interface {
	pulumi.Input

	ToClusterLoggingInfoBrokerLogsCloudwatchLogsOutput() ClusterLoggingInfoBrokerLogsCloudwatchLogsOutput
	ToClusterLoggingInfoBrokerLogsCloudwatchLogsOutputWithContext(context.Context) ClusterLoggingInfoBrokerLogsCloudwatchLogsOutput
}

type ClusterLoggingInfoBrokerLogsCloudwatchLogsArgs struct {
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Name of the Cloudwatch Log Group to deliver logs to.
	LogGroup pulumi.StringPtrInput `pulumi:"logGroup"`
}

func (ClusterLoggingInfoBrokerLogsCloudwatchLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLoggingInfoBrokerLogsCloudwatchLogs)(nil)).Elem()
}

func (i ClusterLoggingInfoBrokerLogsCloudwatchLogsArgs) ToClusterLoggingInfoBrokerLogsCloudwatchLogsOutput() ClusterLoggingInfoBrokerLogsCloudwatchLogsOutput {
	return i.ToClusterLoggingInfoBrokerLogsCloudwatchLogsOutputWithContext(context.Background())
}

func (i ClusterLoggingInfoBrokerLogsCloudwatchLogsArgs) ToClusterLoggingInfoBrokerLogsCloudwatchLogsOutputWithContext(ctx context.Context) ClusterLoggingInfoBrokerLogsCloudwatchLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingInfoBrokerLogsCloudwatchLogsOutput)
}

func (i ClusterLoggingInfoBrokerLogsCloudwatchLogsArgs) ToClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput() ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput {
	return i.ToClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutputWithContext(context.Background())
}

func (i ClusterLoggingInfoBrokerLogsCloudwatchLogsArgs) ToClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutputWithContext(ctx context.Context) ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingInfoBrokerLogsCloudwatchLogsOutput).ToClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutputWithContext(ctx)
}

// ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrInput is an input type that accepts ClusterLoggingInfoBrokerLogsCloudwatchLogsArgs, ClusterLoggingInfoBrokerLogsCloudwatchLogsPtr and ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput values.
// You can construct a concrete instance of `ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrInput` via:
//
//	        ClusterLoggingInfoBrokerLogsCloudwatchLogsArgs{...}
//
//	or:
//
//	        nil
type ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrInput interface {
	pulumi.Input

	ToClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput() ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput
	ToClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutputWithContext(context.Context) ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput
}

type clusterLoggingInfoBrokerLogsCloudwatchLogsPtrType ClusterLoggingInfoBrokerLogsCloudwatchLogsArgs

func ClusterLoggingInfoBrokerLogsCloudwatchLogsPtr(v *ClusterLoggingInfoBrokerLogsCloudwatchLogsArgs) ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrInput {
	return (*clusterLoggingInfoBrokerLogsCloudwatchLogsPtrType)(v)
}

func (*clusterLoggingInfoBrokerLogsCloudwatchLogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLoggingInfoBrokerLogsCloudwatchLogs)(nil)).Elem()
}

func (i *clusterLoggingInfoBrokerLogsCloudwatchLogsPtrType) ToClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput() ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput {
	return i.ToClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutputWithContext(context.Background())
}

func (i *clusterLoggingInfoBrokerLogsCloudwatchLogsPtrType) ToClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutputWithContext(ctx context.Context) ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput)
}

type ClusterLoggingInfoBrokerLogsCloudwatchLogsOutput struct{ *pulumi.OutputState }

func (ClusterLoggingInfoBrokerLogsCloudwatchLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLoggingInfoBrokerLogsCloudwatchLogs)(nil)).Elem()
}

func (o ClusterLoggingInfoBrokerLogsCloudwatchLogsOutput) ToClusterLoggingInfoBrokerLogsCloudwatchLogsOutput() ClusterLoggingInfoBrokerLogsCloudwatchLogsOutput {
	return o
}

func (o ClusterLoggingInfoBrokerLogsCloudwatchLogsOutput) ToClusterLoggingInfoBrokerLogsCloudwatchLogsOutputWithContext(ctx context.Context) ClusterLoggingInfoBrokerLogsCloudwatchLogsOutput {
	return o
}

func (o ClusterLoggingInfoBrokerLogsCloudwatchLogsOutput) ToClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput() ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput {
	return o.ToClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutputWithContext(context.Background())
}

func (o ClusterLoggingInfoBrokerLogsCloudwatchLogsOutput) ToClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutputWithContext(ctx context.Context) ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterLoggingInfoBrokerLogsCloudwatchLogs) *ClusterLoggingInfoBrokerLogsCloudwatchLogs {
		return &v
	}).(ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput)
}

func (o ClusterLoggingInfoBrokerLogsCloudwatchLogsOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterLoggingInfoBrokerLogsCloudwatchLogs) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Name of the Cloudwatch Log Group to deliver logs to.
func (o ClusterLoggingInfoBrokerLogsCloudwatchLogsOutput) LogGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterLoggingInfoBrokerLogsCloudwatchLogs) *string { return v.LogGroup }).(pulumi.StringPtrOutput)
}

type ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput struct{ *pulumi.OutputState }

func (ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLoggingInfoBrokerLogsCloudwatchLogs)(nil)).Elem()
}

func (o ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput) ToClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput() ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput {
	return o
}

func (o ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput) ToClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutputWithContext(ctx context.Context) ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput {
	return o
}

func (o ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput) Elem() ClusterLoggingInfoBrokerLogsCloudwatchLogsOutput {
	return o.ApplyT(func(v *ClusterLoggingInfoBrokerLogsCloudwatchLogs) ClusterLoggingInfoBrokerLogsCloudwatchLogs {
		if v != nil {
			return *v
		}
		var ret ClusterLoggingInfoBrokerLogsCloudwatchLogs
		return ret
	}).(ClusterLoggingInfoBrokerLogsCloudwatchLogsOutput)
}

func (o ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterLoggingInfoBrokerLogsCloudwatchLogs) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Name of the Cloudwatch Log Group to deliver logs to.
func (o ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput) LogGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLoggingInfoBrokerLogsCloudwatchLogs) *string {
		if v == nil {
			return nil
		}
		return v.LogGroup
	}).(pulumi.StringPtrOutput)
}

type ClusterLoggingInfoBrokerLogsFirehose struct {
	// Name of the Kinesis Data Firehose delivery stream to deliver logs to.
	DeliveryStream *string `pulumi:"deliveryStream"`
	Enabled        bool    `pulumi:"enabled"`
}

// ClusterLoggingInfoBrokerLogsFirehoseInput is an input type that accepts ClusterLoggingInfoBrokerLogsFirehoseArgs and ClusterLoggingInfoBrokerLogsFirehoseOutput values.
// You can construct a concrete instance of `ClusterLoggingInfoBrokerLogsFirehoseInput` via:
//
//	ClusterLoggingInfoBrokerLogsFirehoseArgs{...}
type ClusterLoggingInfoBrokerLogsFirehoseInput interface {
	pulumi.Input

	ToClusterLoggingInfoBrokerLogsFirehoseOutput() ClusterLoggingInfoBrokerLogsFirehoseOutput
	ToClusterLoggingInfoBrokerLogsFirehoseOutputWithContext(context.Context) ClusterLoggingInfoBrokerLogsFirehoseOutput
}

type ClusterLoggingInfoBrokerLogsFirehoseArgs struct {
	// Name of the Kinesis Data Firehose delivery stream to deliver logs to.
	DeliveryStream pulumi.StringPtrInput `pulumi:"deliveryStream"`
	Enabled        pulumi.BoolInput      `pulumi:"enabled"`
}

func (ClusterLoggingInfoBrokerLogsFirehoseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLoggingInfoBrokerLogsFirehose)(nil)).Elem()
}

func (i ClusterLoggingInfoBrokerLogsFirehoseArgs) ToClusterLoggingInfoBrokerLogsFirehoseOutput() ClusterLoggingInfoBrokerLogsFirehoseOutput {
	return i.ToClusterLoggingInfoBrokerLogsFirehoseOutputWithContext(context.Background())
}

func (i ClusterLoggingInfoBrokerLogsFirehoseArgs) ToClusterLoggingInfoBrokerLogsFirehoseOutputWithContext(ctx context.Context) ClusterLoggingInfoBrokerLogsFirehoseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingInfoBrokerLogsFirehoseOutput)
}

func (i ClusterLoggingInfoBrokerLogsFirehoseArgs) ToClusterLoggingInfoBrokerLogsFirehosePtrOutput() ClusterLoggingInfoBrokerLogsFirehosePtrOutput {
	return i.ToClusterLoggingInfoBrokerLogsFirehosePtrOutputWithContext(context.Background())
}

func (i ClusterLoggingInfoBrokerLogsFirehoseArgs) ToClusterLoggingInfoBrokerLogsFirehosePtrOutputWithContext(ctx context.Context) ClusterLoggingInfoBrokerLogsFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingInfoBrokerLogsFirehoseOutput).ToClusterLoggingInfoBrokerLogsFirehosePtrOutputWithContext(ctx)
}

// ClusterLoggingInfoBrokerLogsFirehosePtrInput is an input type that accepts ClusterLoggingInfoBrokerLogsFirehoseArgs, ClusterLoggingInfoBrokerLogsFirehosePtr and ClusterLoggingInfoBrokerLogsFirehosePtrOutput values.
// You can construct a concrete instance of `ClusterLoggingInfoBrokerLogsFirehosePtrInput` via:
//
//	        ClusterLoggingInfoBrokerLogsFirehoseArgs{...}
//
//	or:
//
//	        nil
type ClusterLoggingInfoBrokerLogsFirehosePtrInput interface {
	pulumi.Input

	ToClusterLoggingInfoBrokerLogsFirehosePtrOutput() ClusterLoggingInfoBrokerLogsFirehosePtrOutput
	ToClusterLoggingInfoBrokerLogsFirehosePtrOutputWithContext(context.Context) ClusterLoggingInfoBrokerLogsFirehosePtrOutput
}

type clusterLoggingInfoBrokerLogsFirehosePtrType ClusterLoggingInfoBrokerLogsFirehoseArgs

func ClusterLoggingInfoBrokerLogsFirehosePtr(v *ClusterLoggingInfoBrokerLogsFirehoseArgs) ClusterLoggingInfoBrokerLogsFirehosePtrInput {
	return (*clusterLoggingInfoBrokerLogsFirehosePtrType)(v)
}

func (*clusterLoggingInfoBrokerLogsFirehosePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLoggingInfoBrokerLogsFirehose)(nil)).Elem()
}

func (i *clusterLoggingInfoBrokerLogsFirehosePtrType) ToClusterLoggingInfoBrokerLogsFirehosePtrOutput() ClusterLoggingInfoBrokerLogsFirehosePtrOutput {
	return i.ToClusterLoggingInfoBrokerLogsFirehosePtrOutputWithContext(context.Background())
}

func (i *clusterLoggingInfoBrokerLogsFirehosePtrType) ToClusterLoggingInfoBrokerLogsFirehosePtrOutputWithContext(ctx context.Context) ClusterLoggingInfoBrokerLogsFirehosePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingInfoBrokerLogsFirehosePtrOutput)
}

type ClusterLoggingInfoBrokerLogsFirehoseOutput struct{ *pulumi.OutputState }

func (ClusterLoggingInfoBrokerLogsFirehoseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLoggingInfoBrokerLogsFirehose)(nil)).Elem()
}

func (o ClusterLoggingInfoBrokerLogsFirehoseOutput) ToClusterLoggingInfoBrokerLogsFirehoseOutput() ClusterLoggingInfoBrokerLogsFirehoseOutput {
	return o
}

func (o ClusterLoggingInfoBrokerLogsFirehoseOutput) ToClusterLoggingInfoBrokerLogsFirehoseOutputWithContext(ctx context.Context) ClusterLoggingInfoBrokerLogsFirehoseOutput {
	return o
}

func (o ClusterLoggingInfoBrokerLogsFirehoseOutput) ToClusterLoggingInfoBrokerLogsFirehosePtrOutput() ClusterLoggingInfoBrokerLogsFirehosePtrOutput {
	return o.ToClusterLoggingInfoBrokerLogsFirehosePtrOutputWithContext(context.Background())
}

func (o ClusterLoggingInfoBrokerLogsFirehoseOutput) ToClusterLoggingInfoBrokerLogsFirehosePtrOutputWithContext(ctx context.Context) ClusterLoggingInfoBrokerLogsFirehosePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterLoggingInfoBrokerLogsFirehose) *ClusterLoggingInfoBrokerLogsFirehose {
		return &v
	}).(ClusterLoggingInfoBrokerLogsFirehosePtrOutput)
}

// Name of the Kinesis Data Firehose delivery stream to deliver logs to.
func (o ClusterLoggingInfoBrokerLogsFirehoseOutput) DeliveryStream() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterLoggingInfoBrokerLogsFirehose) *string { return v.DeliveryStream }).(pulumi.StringPtrOutput)
}

func (o ClusterLoggingInfoBrokerLogsFirehoseOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterLoggingInfoBrokerLogsFirehose) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ClusterLoggingInfoBrokerLogsFirehosePtrOutput struct{ *pulumi.OutputState }

func (ClusterLoggingInfoBrokerLogsFirehosePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLoggingInfoBrokerLogsFirehose)(nil)).Elem()
}

func (o ClusterLoggingInfoBrokerLogsFirehosePtrOutput) ToClusterLoggingInfoBrokerLogsFirehosePtrOutput() ClusterLoggingInfoBrokerLogsFirehosePtrOutput {
	return o
}

func (o ClusterLoggingInfoBrokerLogsFirehosePtrOutput) ToClusterLoggingInfoBrokerLogsFirehosePtrOutputWithContext(ctx context.Context) ClusterLoggingInfoBrokerLogsFirehosePtrOutput {
	return o
}

func (o ClusterLoggingInfoBrokerLogsFirehosePtrOutput) Elem() ClusterLoggingInfoBrokerLogsFirehoseOutput {
	return o.ApplyT(func(v *ClusterLoggingInfoBrokerLogsFirehose) ClusterLoggingInfoBrokerLogsFirehose {
		if v != nil {
			return *v
		}
		var ret ClusterLoggingInfoBrokerLogsFirehose
		return ret
	}).(ClusterLoggingInfoBrokerLogsFirehoseOutput)
}

// Name of the Kinesis Data Firehose delivery stream to deliver logs to.
func (o ClusterLoggingInfoBrokerLogsFirehosePtrOutput) DeliveryStream() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLoggingInfoBrokerLogsFirehose) *string {
		if v == nil {
			return nil
		}
		return v.DeliveryStream
	}).(pulumi.StringPtrOutput)
}

func (o ClusterLoggingInfoBrokerLogsFirehosePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterLoggingInfoBrokerLogsFirehose) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ClusterLoggingInfoBrokerLogsS3 struct {
	// Name of the S3 bucket to deliver logs to.
	Bucket  *string `pulumi:"bucket"`
	Enabled bool    `pulumi:"enabled"`
	// Prefix to append to the folder name.
	Prefix *string `pulumi:"prefix"`
}

// ClusterLoggingInfoBrokerLogsS3Input is an input type that accepts ClusterLoggingInfoBrokerLogsS3Args and ClusterLoggingInfoBrokerLogsS3Output values.
// You can construct a concrete instance of `ClusterLoggingInfoBrokerLogsS3Input` via:
//
//	ClusterLoggingInfoBrokerLogsS3Args{...}
type ClusterLoggingInfoBrokerLogsS3Input interface {
	pulumi.Input

	ToClusterLoggingInfoBrokerLogsS3Output() ClusterLoggingInfoBrokerLogsS3Output
	ToClusterLoggingInfoBrokerLogsS3OutputWithContext(context.Context) ClusterLoggingInfoBrokerLogsS3Output
}

type ClusterLoggingInfoBrokerLogsS3Args struct {
	// Name of the S3 bucket to deliver logs to.
	Bucket  pulumi.StringPtrInput `pulumi:"bucket"`
	Enabled pulumi.BoolInput      `pulumi:"enabled"`
	// Prefix to append to the folder name.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (ClusterLoggingInfoBrokerLogsS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLoggingInfoBrokerLogsS3)(nil)).Elem()
}

func (i ClusterLoggingInfoBrokerLogsS3Args) ToClusterLoggingInfoBrokerLogsS3Output() ClusterLoggingInfoBrokerLogsS3Output {
	return i.ToClusterLoggingInfoBrokerLogsS3OutputWithContext(context.Background())
}

func (i ClusterLoggingInfoBrokerLogsS3Args) ToClusterLoggingInfoBrokerLogsS3OutputWithContext(ctx context.Context) ClusterLoggingInfoBrokerLogsS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingInfoBrokerLogsS3Output)
}

func (i ClusterLoggingInfoBrokerLogsS3Args) ToClusterLoggingInfoBrokerLogsS3PtrOutput() ClusterLoggingInfoBrokerLogsS3PtrOutput {
	return i.ToClusterLoggingInfoBrokerLogsS3PtrOutputWithContext(context.Background())
}

func (i ClusterLoggingInfoBrokerLogsS3Args) ToClusterLoggingInfoBrokerLogsS3PtrOutputWithContext(ctx context.Context) ClusterLoggingInfoBrokerLogsS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingInfoBrokerLogsS3Output).ToClusterLoggingInfoBrokerLogsS3PtrOutputWithContext(ctx)
}

// ClusterLoggingInfoBrokerLogsS3PtrInput is an input type that accepts ClusterLoggingInfoBrokerLogsS3Args, ClusterLoggingInfoBrokerLogsS3Ptr and ClusterLoggingInfoBrokerLogsS3PtrOutput values.
// You can construct a concrete instance of `ClusterLoggingInfoBrokerLogsS3PtrInput` via:
//
//	        ClusterLoggingInfoBrokerLogsS3Args{...}
//
//	or:
//
//	        nil
type ClusterLoggingInfoBrokerLogsS3PtrInput interface {
	pulumi.Input

	ToClusterLoggingInfoBrokerLogsS3PtrOutput() ClusterLoggingInfoBrokerLogsS3PtrOutput
	ToClusterLoggingInfoBrokerLogsS3PtrOutputWithContext(context.Context) ClusterLoggingInfoBrokerLogsS3PtrOutput
}

type clusterLoggingInfoBrokerLogsS3PtrType ClusterLoggingInfoBrokerLogsS3Args

func ClusterLoggingInfoBrokerLogsS3Ptr(v *ClusterLoggingInfoBrokerLogsS3Args) ClusterLoggingInfoBrokerLogsS3PtrInput {
	return (*clusterLoggingInfoBrokerLogsS3PtrType)(v)
}

func (*clusterLoggingInfoBrokerLogsS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLoggingInfoBrokerLogsS3)(nil)).Elem()
}

func (i *clusterLoggingInfoBrokerLogsS3PtrType) ToClusterLoggingInfoBrokerLogsS3PtrOutput() ClusterLoggingInfoBrokerLogsS3PtrOutput {
	return i.ToClusterLoggingInfoBrokerLogsS3PtrOutputWithContext(context.Background())
}

func (i *clusterLoggingInfoBrokerLogsS3PtrType) ToClusterLoggingInfoBrokerLogsS3PtrOutputWithContext(ctx context.Context) ClusterLoggingInfoBrokerLogsS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterLoggingInfoBrokerLogsS3PtrOutput)
}

type ClusterLoggingInfoBrokerLogsS3Output struct{ *pulumi.OutputState }

func (ClusterLoggingInfoBrokerLogsS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterLoggingInfoBrokerLogsS3)(nil)).Elem()
}

func (o ClusterLoggingInfoBrokerLogsS3Output) ToClusterLoggingInfoBrokerLogsS3Output() ClusterLoggingInfoBrokerLogsS3Output {
	return o
}

func (o ClusterLoggingInfoBrokerLogsS3Output) ToClusterLoggingInfoBrokerLogsS3OutputWithContext(ctx context.Context) ClusterLoggingInfoBrokerLogsS3Output {
	return o
}

func (o ClusterLoggingInfoBrokerLogsS3Output) ToClusterLoggingInfoBrokerLogsS3PtrOutput() ClusterLoggingInfoBrokerLogsS3PtrOutput {
	return o.ToClusterLoggingInfoBrokerLogsS3PtrOutputWithContext(context.Background())
}

func (o ClusterLoggingInfoBrokerLogsS3Output) ToClusterLoggingInfoBrokerLogsS3PtrOutputWithContext(ctx context.Context) ClusterLoggingInfoBrokerLogsS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterLoggingInfoBrokerLogsS3) *ClusterLoggingInfoBrokerLogsS3 {
		return &v
	}).(ClusterLoggingInfoBrokerLogsS3PtrOutput)
}

// Name of the S3 bucket to deliver logs to.
func (o ClusterLoggingInfoBrokerLogsS3Output) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterLoggingInfoBrokerLogsS3) *string { return v.Bucket }).(pulumi.StringPtrOutput)
}

func (o ClusterLoggingInfoBrokerLogsS3Output) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterLoggingInfoBrokerLogsS3) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Prefix to append to the folder name.
func (o ClusterLoggingInfoBrokerLogsS3Output) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterLoggingInfoBrokerLogsS3) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type ClusterLoggingInfoBrokerLogsS3PtrOutput struct{ *pulumi.OutputState }

func (ClusterLoggingInfoBrokerLogsS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterLoggingInfoBrokerLogsS3)(nil)).Elem()
}

func (o ClusterLoggingInfoBrokerLogsS3PtrOutput) ToClusterLoggingInfoBrokerLogsS3PtrOutput() ClusterLoggingInfoBrokerLogsS3PtrOutput {
	return o
}

func (o ClusterLoggingInfoBrokerLogsS3PtrOutput) ToClusterLoggingInfoBrokerLogsS3PtrOutputWithContext(ctx context.Context) ClusterLoggingInfoBrokerLogsS3PtrOutput {
	return o
}

func (o ClusterLoggingInfoBrokerLogsS3PtrOutput) Elem() ClusterLoggingInfoBrokerLogsS3Output {
	return o.ApplyT(func(v *ClusterLoggingInfoBrokerLogsS3) ClusterLoggingInfoBrokerLogsS3 {
		if v != nil {
			return *v
		}
		var ret ClusterLoggingInfoBrokerLogsS3
		return ret
	}).(ClusterLoggingInfoBrokerLogsS3Output)
}

// Name of the S3 bucket to deliver logs to.
func (o ClusterLoggingInfoBrokerLogsS3PtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLoggingInfoBrokerLogsS3) *string {
		if v == nil {
			return nil
		}
		return v.Bucket
	}).(pulumi.StringPtrOutput)
}

func (o ClusterLoggingInfoBrokerLogsS3PtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterLoggingInfoBrokerLogsS3) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Prefix to append to the folder name.
func (o ClusterLoggingInfoBrokerLogsS3PtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterLoggingInfoBrokerLogsS3) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

type ClusterOpenMonitoring struct {
	// Configuration block for Prometheus settings for open monitoring. See below.
	Prometheus ClusterOpenMonitoringPrometheus `pulumi:"prometheus"`
}

// ClusterOpenMonitoringInput is an input type that accepts ClusterOpenMonitoringArgs and ClusterOpenMonitoringOutput values.
// You can construct a concrete instance of `ClusterOpenMonitoringInput` via:
//
//	ClusterOpenMonitoringArgs{...}
type ClusterOpenMonitoringInput interface {
	pulumi.Input

	ToClusterOpenMonitoringOutput() ClusterOpenMonitoringOutput
	ToClusterOpenMonitoringOutputWithContext(context.Context) ClusterOpenMonitoringOutput
}

type ClusterOpenMonitoringArgs struct {
	// Configuration block for Prometheus settings for open monitoring. See below.
	Prometheus ClusterOpenMonitoringPrometheusInput `pulumi:"prometheus"`
}

func (ClusterOpenMonitoringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterOpenMonitoring)(nil)).Elem()
}

func (i ClusterOpenMonitoringArgs) ToClusterOpenMonitoringOutput() ClusterOpenMonitoringOutput {
	return i.ToClusterOpenMonitoringOutputWithContext(context.Background())
}

func (i ClusterOpenMonitoringArgs) ToClusterOpenMonitoringOutputWithContext(ctx context.Context) ClusterOpenMonitoringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOpenMonitoringOutput)
}

func (i ClusterOpenMonitoringArgs) ToClusterOpenMonitoringPtrOutput() ClusterOpenMonitoringPtrOutput {
	return i.ToClusterOpenMonitoringPtrOutputWithContext(context.Background())
}

func (i ClusterOpenMonitoringArgs) ToClusterOpenMonitoringPtrOutputWithContext(ctx context.Context) ClusterOpenMonitoringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOpenMonitoringOutput).ToClusterOpenMonitoringPtrOutputWithContext(ctx)
}

// ClusterOpenMonitoringPtrInput is an input type that accepts ClusterOpenMonitoringArgs, ClusterOpenMonitoringPtr and ClusterOpenMonitoringPtrOutput values.
// You can construct a concrete instance of `ClusterOpenMonitoringPtrInput` via:
//
//	        ClusterOpenMonitoringArgs{...}
//
//	or:
//
//	        nil
type ClusterOpenMonitoringPtrInput interface {
	pulumi.Input

	ToClusterOpenMonitoringPtrOutput() ClusterOpenMonitoringPtrOutput
	ToClusterOpenMonitoringPtrOutputWithContext(context.Context) ClusterOpenMonitoringPtrOutput
}

type clusterOpenMonitoringPtrType ClusterOpenMonitoringArgs

func ClusterOpenMonitoringPtr(v *ClusterOpenMonitoringArgs) ClusterOpenMonitoringPtrInput {
	return (*clusterOpenMonitoringPtrType)(v)
}

func (*clusterOpenMonitoringPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterOpenMonitoring)(nil)).Elem()
}

func (i *clusterOpenMonitoringPtrType) ToClusterOpenMonitoringPtrOutput() ClusterOpenMonitoringPtrOutput {
	return i.ToClusterOpenMonitoringPtrOutputWithContext(context.Background())
}

func (i *clusterOpenMonitoringPtrType) ToClusterOpenMonitoringPtrOutputWithContext(ctx context.Context) ClusterOpenMonitoringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOpenMonitoringPtrOutput)
}

type ClusterOpenMonitoringOutput struct{ *pulumi.OutputState }

func (ClusterOpenMonitoringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterOpenMonitoring)(nil)).Elem()
}

func (o ClusterOpenMonitoringOutput) ToClusterOpenMonitoringOutput() ClusterOpenMonitoringOutput {
	return o
}

func (o ClusterOpenMonitoringOutput) ToClusterOpenMonitoringOutputWithContext(ctx context.Context) ClusterOpenMonitoringOutput {
	return o
}

func (o ClusterOpenMonitoringOutput) ToClusterOpenMonitoringPtrOutput() ClusterOpenMonitoringPtrOutput {
	return o.ToClusterOpenMonitoringPtrOutputWithContext(context.Background())
}

func (o ClusterOpenMonitoringOutput) ToClusterOpenMonitoringPtrOutputWithContext(ctx context.Context) ClusterOpenMonitoringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterOpenMonitoring) *ClusterOpenMonitoring {
		return &v
	}).(ClusterOpenMonitoringPtrOutput)
}

// Configuration block for Prometheus settings for open monitoring. See below.
func (o ClusterOpenMonitoringOutput) Prometheus() ClusterOpenMonitoringPrometheusOutput {
	return o.ApplyT(func(v ClusterOpenMonitoring) ClusterOpenMonitoringPrometheus { return v.Prometheus }).(ClusterOpenMonitoringPrometheusOutput)
}

type ClusterOpenMonitoringPtrOutput struct{ *pulumi.OutputState }

func (ClusterOpenMonitoringPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterOpenMonitoring)(nil)).Elem()
}

func (o ClusterOpenMonitoringPtrOutput) ToClusterOpenMonitoringPtrOutput() ClusterOpenMonitoringPtrOutput {
	return o
}

func (o ClusterOpenMonitoringPtrOutput) ToClusterOpenMonitoringPtrOutputWithContext(ctx context.Context) ClusterOpenMonitoringPtrOutput {
	return o
}

func (o ClusterOpenMonitoringPtrOutput) Elem() ClusterOpenMonitoringOutput {
	return o.ApplyT(func(v *ClusterOpenMonitoring) ClusterOpenMonitoring {
		if v != nil {
			return *v
		}
		var ret ClusterOpenMonitoring
		return ret
	}).(ClusterOpenMonitoringOutput)
}

// Configuration block for Prometheus settings for open monitoring. See below.
func (o ClusterOpenMonitoringPtrOutput) Prometheus() ClusterOpenMonitoringPrometheusPtrOutput {
	return o.ApplyT(func(v *ClusterOpenMonitoring) *ClusterOpenMonitoringPrometheus {
		if v == nil {
			return nil
		}
		return &v.Prometheus
	}).(ClusterOpenMonitoringPrometheusPtrOutput)
}

type ClusterOpenMonitoringPrometheus struct {
	// Configuration block for JMX Exporter. See below.
	JmxExporter *ClusterOpenMonitoringPrometheusJmxExporter `pulumi:"jmxExporter"`
	// Configuration block for Node Exporter. See below.
	NodeExporter *ClusterOpenMonitoringPrometheusNodeExporter `pulumi:"nodeExporter"`
}

// ClusterOpenMonitoringPrometheusInput is an input type that accepts ClusterOpenMonitoringPrometheusArgs and ClusterOpenMonitoringPrometheusOutput values.
// You can construct a concrete instance of `ClusterOpenMonitoringPrometheusInput` via:
//
//	ClusterOpenMonitoringPrometheusArgs{...}
type ClusterOpenMonitoringPrometheusInput interface {
	pulumi.Input

	ToClusterOpenMonitoringPrometheusOutput() ClusterOpenMonitoringPrometheusOutput
	ToClusterOpenMonitoringPrometheusOutputWithContext(context.Context) ClusterOpenMonitoringPrometheusOutput
}

type ClusterOpenMonitoringPrometheusArgs struct {
	// Configuration block for JMX Exporter. See below.
	JmxExporter ClusterOpenMonitoringPrometheusJmxExporterPtrInput `pulumi:"jmxExporter"`
	// Configuration block for Node Exporter. See below.
	NodeExporter ClusterOpenMonitoringPrometheusNodeExporterPtrInput `pulumi:"nodeExporter"`
}

func (ClusterOpenMonitoringPrometheusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterOpenMonitoringPrometheus)(nil)).Elem()
}

func (i ClusterOpenMonitoringPrometheusArgs) ToClusterOpenMonitoringPrometheusOutput() ClusterOpenMonitoringPrometheusOutput {
	return i.ToClusterOpenMonitoringPrometheusOutputWithContext(context.Background())
}

func (i ClusterOpenMonitoringPrometheusArgs) ToClusterOpenMonitoringPrometheusOutputWithContext(ctx context.Context) ClusterOpenMonitoringPrometheusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOpenMonitoringPrometheusOutput)
}

func (i ClusterOpenMonitoringPrometheusArgs) ToClusterOpenMonitoringPrometheusPtrOutput() ClusterOpenMonitoringPrometheusPtrOutput {
	return i.ToClusterOpenMonitoringPrometheusPtrOutputWithContext(context.Background())
}

func (i ClusterOpenMonitoringPrometheusArgs) ToClusterOpenMonitoringPrometheusPtrOutputWithContext(ctx context.Context) ClusterOpenMonitoringPrometheusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOpenMonitoringPrometheusOutput).ToClusterOpenMonitoringPrometheusPtrOutputWithContext(ctx)
}

// ClusterOpenMonitoringPrometheusPtrInput is an input type that accepts ClusterOpenMonitoringPrometheusArgs, ClusterOpenMonitoringPrometheusPtr and ClusterOpenMonitoringPrometheusPtrOutput values.
// You can construct a concrete instance of `ClusterOpenMonitoringPrometheusPtrInput` via:
//
//	        ClusterOpenMonitoringPrometheusArgs{...}
//
//	or:
//
//	        nil
type ClusterOpenMonitoringPrometheusPtrInput interface {
	pulumi.Input

	ToClusterOpenMonitoringPrometheusPtrOutput() ClusterOpenMonitoringPrometheusPtrOutput
	ToClusterOpenMonitoringPrometheusPtrOutputWithContext(context.Context) ClusterOpenMonitoringPrometheusPtrOutput
}

type clusterOpenMonitoringPrometheusPtrType ClusterOpenMonitoringPrometheusArgs

func ClusterOpenMonitoringPrometheusPtr(v *ClusterOpenMonitoringPrometheusArgs) ClusterOpenMonitoringPrometheusPtrInput {
	return (*clusterOpenMonitoringPrometheusPtrType)(v)
}

func (*clusterOpenMonitoringPrometheusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterOpenMonitoringPrometheus)(nil)).Elem()
}

func (i *clusterOpenMonitoringPrometheusPtrType) ToClusterOpenMonitoringPrometheusPtrOutput() ClusterOpenMonitoringPrometheusPtrOutput {
	return i.ToClusterOpenMonitoringPrometheusPtrOutputWithContext(context.Background())
}

func (i *clusterOpenMonitoringPrometheusPtrType) ToClusterOpenMonitoringPrometheusPtrOutputWithContext(ctx context.Context) ClusterOpenMonitoringPrometheusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOpenMonitoringPrometheusPtrOutput)
}

type ClusterOpenMonitoringPrometheusOutput struct{ *pulumi.OutputState }

func (ClusterOpenMonitoringPrometheusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterOpenMonitoringPrometheus)(nil)).Elem()
}

func (o ClusterOpenMonitoringPrometheusOutput) ToClusterOpenMonitoringPrometheusOutput() ClusterOpenMonitoringPrometheusOutput {
	return o
}

func (o ClusterOpenMonitoringPrometheusOutput) ToClusterOpenMonitoringPrometheusOutputWithContext(ctx context.Context) ClusterOpenMonitoringPrometheusOutput {
	return o
}

func (o ClusterOpenMonitoringPrometheusOutput) ToClusterOpenMonitoringPrometheusPtrOutput() ClusterOpenMonitoringPrometheusPtrOutput {
	return o.ToClusterOpenMonitoringPrometheusPtrOutputWithContext(context.Background())
}

func (o ClusterOpenMonitoringPrometheusOutput) ToClusterOpenMonitoringPrometheusPtrOutputWithContext(ctx context.Context) ClusterOpenMonitoringPrometheusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterOpenMonitoringPrometheus) *ClusterOpenMonitoringPrometheus {
		return &v
	}).(ClusterOpenMonitoringPrometheusPtrOutput)
}

// Configuration block for JMX Exporter. See below.
func (o ClusterOpenMonitoringPrometheusOutput) JmxExporter() ClusterOpenMonitoringPrometheusJmxExporterPtrOutput {
	return o.ApplyT(func(v ClusterOpenMonitoringPrometheus) *ClusterOpenMonitoringPrometheusJmxExporter {
		return v.JmxExporter
	}).(ClusterOpenMonitoringPrometheusJmxExporterPtrOutput)
}

// Configuration block for Node Exporter. See below.
func (o ClusterOpenMonitoringPrometheusOutput) NodeExporter() ClusterOpenMonitoringPrometheusNodeExporterPtrOutput {
	return o.ApplyT(func(v ClusterOpenMonitoringPrometheus) *ClusterOpenMonitoringPrometheusNodeExporter {
		return v.NodeExporter
	}).(ClusterOpenMonitoringPrometheusNodeExporterPtrOutput)
}

type ClusterOpenMonitoringPrometheusPtrOutput struct{ *pulumi.OutputState }

func (ClusterOpenMonitoringPrometheusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterOpenMonitoringPrometheus)(nil)).Elem()
}

func (o ClusterOpenMonitoringPrometheusPtrOutput) ToClusterOpenMonitoringPrometheusPtrOutput() ClusterOpenMonitoringPrometheusPtrOutput {
	return o
}

func (o ClusterOpenMonitoringPrometheusPtrOutput) ToClusterOpenMonitoringPrometheusPtrOutputWithContext(ctx context.Context) ClusterOpenMonitoringPrometheusPtrOutput {
	return o
}

func (o ClusterOpenMonitoringPrometheusPtrOutput) Elem() ClusterOpenMonitoringPrometheusOutput {
	return o.ApplyT(func(v *ClusterOpenMonitoringPrometheus) ClusterOpenMonitoringPrometheus {
		if v != nil {
			return *v
		}
		var ret ClusterOpenMonitoringPrometheus
		return ret
	}).(ClusterOpenMonitoringPrometheusOutput)
}

// Configuration block for JMX Exporter. See below.
func (o ClusterOpenMonitoringPrometheusPtrOutput) JmxExporter() ClusterOpenMonitoringPrometheusJmxExporterPtrOutput {
	return o.ApplyT(func(v *ClusterOpenMonitoringPrometheus) *ClusterOpenMonitoringPrometheusJmxExporter {
		if v == nil {
			return nil
		}
		return v.JmxExporter
	}).(ClusterOpenMonitoringPrometheusJmxExporterPtrOutput)
}

// Configuration block for Node Exporter. See below.
func (o ClusterOpenMonitoringPrometheusPtrOutput) NodeExporter() ClusterOpenMonitoringPrometheusNodeExporterPtrOutput {
	return o.ApplyT(func(v *ClusterOpenMonitoringPrometheus) *ClusterOpenMonitoringPrometheusNodeExporter {
		if v == nil {
			return nil
		}
		return v.NodeExporter
	}).(ClusterOpenMonitoringPrometheusNodeExporterPtrOutput)
}

type ClusterOpenMonitoringPrometheusJmxExporter struct {
	// Indicates whether you want to enable or disable the Node Exporter.
	EnabledInBroker bool `pulumi:"enabledInBroker"`
}

// ClusterOpenMonitoringPrometheusJmxExporterInput is an input type that accepts ClusterOpenMonitoringPrometheusJmxExporterArgs and ClusterOpenMonitoringPrometheusJmxExporterOutput values.
// You can construct a concrete instance of `ClusterOpenMonitoringPrometheusJmxExporterInput` via:
//
//	ClusterOpenMonitoringPrometheusJmxExporterArgs{...}
type ClusterOpenMonitoringPrometheusJmxExporterInput interface {
	pulumi.Input

	ToClusterOpenMonitoringPrometheusJmxExporterOutput() ClusterOpenMonitoringPrometheusJmxExporterOutput
	ToClusterOpenMonitoringPrometheusJmxExporterOutputWithContext(context.Context) ClusterOpenMonitoringPrometheusJmxExporterOutput
}

type ClusterOpenMonitoringPrometheusJmxExporterArgs struct {
	// Indicates whether you want to enable or disable the Node Exporter.
	EnabledInBroker pulumi.BoolInput `pulumi:"enabledInBroker"`
}

func (ClusterOpenMonitoringPrometheusJmxExporterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterOpenMonitoringPrometheusJmxExporter)(nil)).Elem()
}

func (i ClusterOpenMonitoringPrometheusJmxExporterArgs) ToClusterOpenMonitoringPrometheusJmxExporterOutput() ClusterOpenMonitoringPrometheusJmxExporterOutput {
	return i.ToClusterOpenMonitoringPrometheusJmxExporterOutputWithContext(context.Background())
}

func (i ClusterOpenMonitoringPrometheusJmxExporterArgs) ToClusterOpenMonitoringPrometheusJmxExporterOutputWithContext(ctx context.Context) ClusterOpenMonitoringPrometheusJmxExporterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOpenMonitoringPrometheusJmxExporterOutput)
}

func (i ClusterOpenMonitoringPrometheusJmxExporterArgs) ToClusterOpenMonitoringPrometheusJmxExporterPtrOutput() ClusterOpenMonitoringPrometheusJmxExporterPtrOutput {
	return i.ToClusterOpenMonitoringPrometheusJmxExporterPtrOutputWithContext(context.Background())
}

func (i ClusterOpenMonitoringPrometheusJmxExporterArgs) ToClusterOpenMonitoringPrometheusJmxExporterPtrOutputWithContext(ctx context.Context) ClusterOpenMonitoringPrometheusJmxExporterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOpenMonitoringPrometheusJmxExporterOutput).ToClusterOpenMonitoringPrometheusJmxExporterPtrOutputWithContext(ctx)
}

// ClusterOpenMonitoringPrometheusJmxExporterPtrInput is an input type that accepts ClusterOpenMonitoringPrometheusJmxExporterArgs, ClusterOpenMonitoringPrometheusJmxExporterPtr and ClusterOpenMonitoringPrometheusJmxExporterPtrOutput values.
// You can construct a concrete instance of `ClusterOpenMonitoringPrometheusJmxExporterPtrInput` via:
//
//	        ClusterOpenMonitoringPrometheusJmxExporterArgs{...}
//
//	or:
//
//	        nil
type ClusterOpenMonitoringPrometheusJmxExporterPtrInput interface {
	pulumi.Input

	ToClusterOpenMonitoringPrometheusJmxExporterPtrOutput() ClusterOpenMonitoringPrometheusJmxExporterPtrOutput
	ToClusterOpenMonitoringPrometheusJmxExporterPtrOutputWithContext(context.Context) ClusterOpenMonitoringPrometheusJmxExporterPtrOutput
}

type clusterOpenMonitoringPrometheusJmxExporterPtrType ClusterOpenMonitoringPrometheusJmxExporterArgs

func ClusterOpenMonitoringPrometheusJmxExporterPtr(v *ClusterOpenMonitoringPrometheusJmxExporterArgs) ClusterOpenMonitoringPrometheusJmxExporterPtrInput {
	return (*clusterOpenMonitoringPrometheusJmxExporterPtrType)(v)
}

func (*clusterOpenMonitoringPrometheusJmxExporterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterOpenMonitoringPrometheusJmxExporter)(nil)).Elem()
}

func (i *clusterOpenMonitoringPrometheusJmxExporterPtrType) ToClusterOpenMonitoringPrometheusJmxExporterPtrOutput() ClusterOpenMonitoringPrometheusJmxExporterPtrOutput {
	return i.ToClusterOpenMonitoringPrometheusJmxExporterPtrOutputWithContext(context.Background())
}

func (i *clusterOpenMonitoringPrometheusJmxExporterPtrType) ToClusterOpenMonitoringPrometheusJmxExporterPtrOutputWithContext(ctx context.Context) ClusterOpenMonitoringPrometheusJmxExporterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOpenMonitoringPrometheusJmxExporterPtrOutput)
}

type ClusterOpenMonitoringPrometheusJmxExporterOutput struct{ *pulumi.OutputState }

func (ClusterOpenMonitoringPrometheusJmxExporterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterOpenMonitoringPrometheusJmxExporter)(nil)).Elem()
}

func (o ClusterOpenMonitoringPrometheusJmxExporterOutput) ToClusterOpenMonitoringPrometheusJmxExporterOutput() ClusterOpenMonitoringPrometheusJmxExporterOutput {
	return o
}

func (o ClusterOpenMonitoringPrometheusJmxExporterOutput) ToClusterOpenMonitoringPrometheusJmxExporterOutputWithContext(ctx context.Context) ClusterOpenMonitoringPrometheusJmxExporterOutput {
	return o
}

func (o ClusterOpenMonitoringPrometheusJmxExporterOutput) ToClusterOpenMonitoringPrometheusJmxExporterPtrOutput() ClusterOpenMonitoringPrometheusJmxExporterPtrOutput {
	return o.ToClusterOpenMonitoringPrometheusJmxExporterPtrOutputWithContext(context.Background())
}

func (o ClusterOpenMonitoringPrometheusJmxExporterOutput) ToClusterOpenMonitoringPrometheusJmxExporterPtrOutputWithContext(ctx context.Context) ClusterOpenMonitoringPrometheusJmxExporterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterOpenMonitoringPrometheusJmxExporter) *ClusterOpenMonitoringPrometheusJmxExporter {
		return &v
	}).(ClusterOpenMonitoringPrometheusJmxExporterPtrOutput)
}

// Indicates whether you want to enable or disable the Node Exporter.
func (o ClusterOpenMonitoringPrometheusJmxExporterOutput) EnabledInBroker() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterOpenMonitoringPrometheusJmxExporter) bool { return v.EnabledInBroker }).(pulumi.BoolOutput)
}

type ClusterOpenMonitoringPrometheusJmxExporterPtrOutput struct{ *pulumi.OutputState }

func (ClusterOpenMonitoringPrometheusJmxExporterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterOpenMonitoringPrometheusJmxExporter)(nil)).Elem()
}

func (o ClusterOpenMonitoringPrometheusJmxExporterPtrOutput) ToClusterOpenMonitoringPrometheusJmxExporterPtrOutput() ClusterOpenMonitoringPrometheusJmxExporterPtrOutput {
	return o
}

func (o ClusterOpenMonitoringPrometheusJmxExporterPtrOutput) ToClusterOpenMonitoringPrometheusJmxExporterPtrOutputWithContext(ctx context.Context) ClusterOpenMonitoringPrometheusJmxExporterPtrOutput {
	return o
}

func (o ClusterOpenMonitoringPrometheusJmxExporterPtrOutput) Elem() ClusterOpenMonitoringPrometheusJmxExporterOutput {
	return o.ApplyT(func(v *ClusterOpenMonitoringPrometheusJmxExporter) ClusterOpenMonitoringPrometheusJmxExporter {
		if v != nil {
			return *v
		}
		var ret ClusterOpenMonitoringPrometheusJmxExporter
		return ret
	}).(ClusterOpenMonitoringPrometheusJmxExporterOutput)
}

// Indicates whether you want to enable or disable the Node Exporter.
func (o ClusterOpenMonitoringPrometheusJmxExporterPtrOutput) EnabledInBroker() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterOpenMonitoringPrometheusJmxExporter) *bool {
		if v == nil {
			return nil
		}
		return &v.EnabledInBroker
	}).(pulumi.BoolPtrOutput)
}

type ClusterOpenMonitoringPrometheusNodeExporter struct {
	// Indicates whether you want to enable or disable the Node Exporter.
	EnabledInBroker bool `pulumi:"enabledInBroker"`
}

// ClusterOpenMonitoringPrometheusNodeExporterInput is an input type that accepts ClusterOpenMonitoringPrometheusNodeExporterArgs and ClusterOpenMonitoringPrometheusNodeExporterOutput values.
// You can construct a concrete instance of `ClusterOpenMonitoringPrometheusNodeExporterInput` via:
//
//	ClusterOpenMonitoringPrometheusNodeExporterArgs{...}
type ClusterOpenMonitoringPrometheusNodeExporterInput interface {
	pulumi.Input

	ToClusterOpenMonitoringPrometheusNodeExporterOutput() ClusterOpenMonitoringPrometheusNodeExporterOutput
	ToClusterOpenMonitoringPrometheusNodeExporterOutputWithContext(context.Context) ClusterOpenMonitoringPrometheusNodeExporterOutput
}

type ClusterOpenMonitoringPrometheusNodeExporterArgs struct {
	// Indicates whether you want to enable or disable the Node Exporter.
	EnabledInBroker pulumi.BoolInput `pulumi:"enabledInBroker"`
}

func (ClusterOpenMonitoringPrometheusNodeExporterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterOpenMonitoringPrometheusNodeExporter)(nil)).Elem()
}

func (i ClusterOpenMonitoringPrometheusNodeExporterArgs) ToClusterOpenMonitoringPrometheusNodeExporterOutput() ClusterOpenMonitoringPrometheusNodeExporterOutput {
	return i.ToClusterOpenMonitoringPrometheusNodeExporterOutputWithContext(context.Background())
}

func (i ClusterOpenMonitoringPrometheusNodeExporterArgs) ToClusterOpenMonitoringPrometheusNodeExporterOutputWithContext(ctx context.Context) ClusterOpenMonitoringPrometheusNodeExporterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOpenMonitoringPrometheusNodeExporterOutput)
}

func (i ClusterOpenMonitoringPrometheusNodeExporterArgs) ToClusterOpenMonitoringPrometheusNodeExporterPtrOutput() ClusterOpenMonitoringPrometheusNodeExporterPtrOutput {
	return i.ToClusterOpenMonitoringPrometheusNodeExporterPtrOutputWithContext(context.Background())
}

func (i ClusterOpenMonitoringPrometheusNodeExporterArgs) ToClusterOpenMonitoringPrometheusNodeExporterPtrOutputWithContext(ctx context.Context) ClusterOpenMonitoringPrometheusNodeExporterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOpenMonitoringPrometheusNodeExporterOutput).ToClusterOpenMonitoringPrometheusNodeExporterPtrOutputWithContext(ctx)
}

// ClusterOpenMonitoringPrometheusNodeExporterPtrInput is an input type that accepts ClusterOpenMonitoringPrometheusNodeExporterArgs, ClusterOpenMonitoringPrometheusNodeExporterPtr and ClusterOpenMonitoringPrometheusNodeExporterPtrOutput values.
// You can construct a concrete instance of `ClusterOpenMonitoringPrometheusNodeExporterPtrInput` via:
//
//	        ClusterOpenMonitoringPrometheusNodeExporterArgs{...}
//
//	or:
//
//	        nil
type ClusterOpenMonitoringPrometheusNodeExporterPtrInput interface {
	pulumi.Input

	ToClusterOpenMonitoringPrometheusNodeExporterPtrOutput() ClusterOpenMonitoringPrometheusNodeExporterPtrOutput
	ToClusterOpenMonitoringPrometheusNodeExporterPtrOutputWithContext(context.Context) ClusterOpenMonitoringPrometheusNodeExporterPtrOutput
}

type clusterOpenMonitoringPrometheusNodeExporterPtrType ClusterOpenMonitoringPrometheusNodeExporterArgs

func ClusterOpenMonitoringPrometheusNodeExporterPtr(v *ClusterOpenMonitoringPrometheusNodeExporterArgs) ClusterOpenMonitoringPrometheusNodeExporterPtrInput {
	return (*clusterOpenMonitoringPrometheusNodeExporterPtrType)(v)
}

func (*clusterOpenMonitoringPrometheusNodeExporterPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterOpenMonitoringPrometheusNodeExporter)(nil)).Elem()
}

func (i *clusterOpenMonitoringPrometheusNodeExporterPtrType) ToClusterOpenMonitoringPrometheusNodeExporterPtrOutput() ClusterOpenMonitoringPrometheusNodeExporterPtrOutput {
	return i.ToClusterOpenMonitoringPrometheusNodeExporterPtrOutputWithContext(context.Background())
}

func (i *clusterOpenMonitoringPrometheusNodeExporterPtrType) ToClusterOpenMonitoringPrometheusNodeExporterPtrOutputWithContext(ctx context.Context) ClusterOpenMonitoringPrometheusNodeExporterPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterOpenMonitoringPrometheusNodeExporterPtrOutput)
}

type ClusterOpenMonitoringPrometheusNodeExporterOutput struct{ *pulumi.OutputState }

func (ClusterOpenMonitoringPrometheusNodeExporterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterOpenMonitoringPrometheusNodeExporter)(nil)).Elem()
}

func (o ClusterOpenMonitoringPrometheusNodeExporterOutput) ToClusterOpenMonitoringPrometheusNodeExporterOutput() ClusterOpenMonitoringPrometheusNodeExporterOutput {
	return o
}

func (o ClusterOpenMonitoringPrometheusNodeExporterOutput) ToClusterOpenMonitoringPrometheusNodeExporterOutputWithContext(ctx context.Context) ClusterOpenMonitoringPrometheusNodeExporterOutput {
	return o
}

func (o ClusterOpenMonitoringPrometheusNodeExporterOutput) ToClusterOpenMonitoringPrometheusNodeExporterPtrOutput() ClusterOpenMonitoringPrometheusNodeExporterPtrOutput {
	return o.ToClusterOpenMonitoringPrometheusNodeExporterPtrOutputWithContext(context.Background())
}

func (o ClusterOpenMonitoringPrometheusNodeExporterOutput) ToClusterOpenMonitoringPrometheusNodeExporterPtrOutputWithContext(ctx context.Context) ClusterOpenMonitoringPrometheusNodeExporterPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterOpenMonitoringPrometheusNodeExporter) *ClusterOpenMonitoringPrometheusNodeExporter {
		return &v
	}).(ClusterOpenMonitoringPrometheusNodeExporterPtrOutput)
}

// Indicates whether you want to enable or disable the Node Exporter.
func (o ClusterOpenMonitoringPrometheusNodeExporterOutput) EnabledInBroker() pulumi.BoolOutput {
	return o.ApplyT(func(v ClusterOpenMonitoringPrometheusNodeExporter) bool { return v.EnabledInBroker }).(pulumi.BoolOutput)
}

type ClusterOpenMonitoringPrometheusNodeExporterPtrOutput struct{ *pulumi.OutputState }

func (ClusterOpenMonitoringPrometheusNodeExporterPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterOpenMonitoringPrometheusNodeExporter)(nil)).Elem()
}

func (o ClusterOpenMonitoringPrometheusNodeExporterPtrOutput) ToClusterOpenMonitoringPrometheusNodeExporterPtrOutput() ClusterOpenMonitoringPrometheusNodeExporterPtrOutput {
	return o
}

func (o ClusterOpenMonitoringPrometheusNodeExporterPtrOutput) ToClusterOpenMonitoringPrometheusNodeExporterPtrOutputWithContext(ctx context.Context) ClusterOpenMonitoringPrometheusNodeExporterPtrOutput {
	return o
}

func (o ClusterOpenMonitoringPrometheusNodeExporterPtrOutput) Elem() ClusterOpenMonitoringPrometheusNodeExporterOutput {
	return o.ApplyT(func(v *ClusterOpenMonitoringPrometheusNodeExporter) ClusterOpenMonitoringPrometheusNodeExporter {
		if v != nil {
			return *v
		}
		var ret ClusterOpenMonitoringPrometheusNodeExporter
		return ret
	}).(ClusterOpenMonitoringPrometheusNodeExporterOutput)
}

// Indicates whether you want to enable or disable the Node Exporter.
func (o ClusterOpenMonitoringPrometheusNodeExporterPtrOutput) EnabledInBroker() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterOpenMonitoringPrometheusNodeExporter) *bool {
		if v == nil {
			return nil
		}
		return &v.EnabledInBroker
	}).(pulumi.BoolPtrOutput)
}

type ReplicatorKafkaCluster struct {
	// Details of an Amazon MSK cluster.
	AmazonMskCluster ReplicatorKafkaClusterAmazonMskCluster `pulumi:"amazonMskCluster"`
	// Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.
	VpcConfig ReplicatorKafkaClusterVpcConfig `pulumi:"vpcConfig"`
}

// ReplicatorKafkaClusterInput is an input type that accepts ReplicatorKafkaClusterArgs and ReplicatorKafkaClusterOutput values.
// You can construct a concrete instance of `ReplicatorKafkaClusterInput` via:
//
//	ReplicatorKafkaClusterArgs{...}
type ReplicatorKafkaClusterInput interface {
	pulumi.Input

	ToReplicatorKafkaClusterOutput() ReplicatorKafkaClusterOutput
	ToReplicatorKafkaClusterOutputWithContext(context.Context) ReplicatorKafkaClusterOutput
}

type ReplicatorKafkaClusterArgs struct {
	// Details of an Amazon MSK cluster.
	AmazonMskCluster ReplicatorKafkaClusterAmazonMskClusterInput `pulumi:"amazonMskCluster"`
	// Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.
	VpcConfig ReplicatorKafkaClusterVpcConfigInput `pulumi:"vpcConfig"`
}

func (ReplicatorKafkaClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatorKafkaCluster)(nil)).Elem()
}

func (i ReplicatorKafkaClusterArgs) ToReplicatorKafkaClusterOutput() ReplicatorKafkaClusterOutput {
	return i.ToReplicatorKafkaClusterOutputWithContext(context.Background())
}

func (i ReplicatorKafkaClusterArgs) ToReplicatorKafkaClusterOutputWithContext(ctx context.Context) ReplicatorKafkaClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatorKafkaClusterOutput)
}

// ReplicatorKafkaClusterArrayInput is an input type that accepts ReplicatorKafkaClusterArray and ReplicatorKafkaClusterArrayOutput values.
// You can construct a concrete instance of `ReplicatorKafkaClusterArrayInput` via:
//
//	ReplicatorKafkaClusterArray{ ReplicatorKafkaClusterArgs{...} }
type ReplicatorKafkaClusterArrayInput interface {
	pulumi.Input

	ToReplicatorKafkaClusterArrayOutput() ReplicatorKafkaClusterArrayOutput
	ToReplicatorKafkaClusterArrayOutputWithContext(context.Context) ReplicatorKafkaClusterArrayOutput
}

type ReplicatorKafkaClusterArray []ReplicatorKafkaClusterInput

func (ReplicatorKafkaClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicatorKafkaCluster)(nil)).Elem()
}

func (i ReplicatorKafkaClusterArray) ToReplicatorKafkaClusterArrayOutput() ReplicatorKafkaClusterArrayOutput {
	return i.ToReplicatorKafkaClusterArrayOutputWithContext(context.Background())
}

func (i ReplicatorKafkaClusterArray) ToReplicatorKafkaClusterArrayOutputWithContext(ctx context.Context) ReplicatorKafkaClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatorKafkaClusterArrayOutput)
}

type ReplicatorKafkaClusterOutput struct{ *pulumi.OutputState }

func (ReplicatorKafkaClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatorKafkaCluster)(nil)).Elem()
}

func (o ReplicatorKafkaClusterOutput) ToReplicatorKafkaClusterOutput() ReplicatorKafkaClusterOutput {
	return o
}

func (o ReplicatorKafkaClusterOutput) ToReplicatorKafkaClusterOutputWithContext(ctx context.Context) ReplicatorKafkaClusterOutput {
	return o
}

// Details of an Amazon MSK cluster.
func (o ReplicatorKafkaClusterOutput) AmazonMskCluster() ReplicatorKafkaClusterAmazonMskClusterOutput {
	return o.ApplyT(func(v ReplicatorKafkaCluster) ReplicatorKafkaClusterAmazonMskCluster { return v.AmazonMskCluster }).(ReplicatorKafkaClusterAmazonMskClusterOutput)
}

// Details of an Amazon VPC which has network connectivity to the Apache Kafka cluster.
func (o ReplicatorKafkaClusterOutput) VpcConfig() ReplicatorKafkaClusterVpcConfigOutput {
	return o.ApplyT(func(v ReplicatorKafkaCluster) ReplicatorKafkaClusterVpcConfig { return v.VpcConfig }).(ReplicatorKafkaClusterVpcConfigOutput)
}

type ReplicatorKafkaClusterArrayOutput struct{ *pulumi.OutputState }

func (ReplicatorKafkaClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicatorKafkaCluster)(nil)).Elem()
}

func (o ReplicatorKafkaClusterArrayOutput) ToReplicatorKafkaClusterArrayOutput() ReplicatorKafkaClusterArrayOutput {
	return o
}

func (o ReplicatorKafkaClusterArrayOutput) ToReplicatorKafkaClusterArrayOutputWithContext(ctx context.Context) ReplicatorKafkaClusterArrayOutput {
	return o
}

func (o ReplicatorKafkaClusterArrayOutput) Index(i pulumi.IntInput) ReplicatorKafkaClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicatorKafkaCluster {
		return vs[0].([]ReplicatorKafkaCluster)[vs[1].(int)]
	}).(ReplicatorKafkaClusterOutput)
}

type ReplicatorKafkaClusterAmazonMskCluster struct {
	// The ARN of an Amazon MSK cluster.
	MskClusterArn string `pulumi:"mskClusterArn"`
}

// ReplicatorKafkaClusterAmazonMskClusterInput is an input type that accepts ReplicatorKafkaClusterAmazonMskClusterArgs and ReplicatorKafkaClusterAmazonMskClusterOutput values.
// You can construct a concrete instance of `ReplicatorKafkaClusterAmazonMskClusterInput` via:
//
//	ReplicatorKafkaClusterAmazonMskClusterArgs{...}
type ReplicatorKafkaClusterAmazonMskClusterInput interface {
	pulumi.Input

	ToReplicatorKafkaClusterAmazonMskClusterOutput() ReplicatorKafkaClusterAmazonMskClusterOutput
	ToReplicatorKafkaClusterAmazonMskClusterOutputWithContext(context.Context) ReplicatorKafkaClusterAmazonMskClusterOutput
}

type ReplicatorKafkaClusterAmazonMskClusterArgs struct {
	// The ARN of an Amazon MSK cluster.
	MskClusterArn pulumi.StringInput `pulumi:"mskClusterArn"`
}

func (ReplicatorKafkaClusterAmazonMskClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatorKafkaClusterAmazonMskCluster)(nil)).Elem()
}

func (i ReplicatorKafkaClusterAmazonMskClusterArgs) ToReplicatorKafkaClusterAmazonMskClusterOutput() ReplicatorKafkaClusterAmazonMskClusterOutput {
	return i.ToReplicatorKafkaClusterAmazonMskClusterOutputWithContext(context.Background())
}

func (i ReplicatorKafkaClusterAmazonMskClusterArgs) ToReplicatorKafkaClusterAmazonMskClusterOutputWithContext(ctx context.Context) ReplicatorKafkaClusterAmazonMskClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatorKafkaClusterAmazonMskClusterOutput)
}

type ReplicatorKafkaClusterAmazonMskClusterOutput struct{ *pulumi.OutputState }

func (ReplicatorKafkaClusterAmazonMskClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatorKafkaClusterAmazonMskCluster)(nil)).Elem()
}

func (o ReplicatorKafkaClusterAmazonMskClusterOutput) ToReplicatorKafkaClusterAmazonMskClusterOutput() ReplicatorKafkaClusterAmazonMskClusterOutput {
	return o
}

func (o ReplicatorKafkaClusterAmazonMskClusterOutput) ToReplicatorKafkaClusterAmazonMskClusterOutputWithContext(ctx context.Context) ReplicatorKafkaClusterAmazonMskClusterOutput {
	return o
}

// The ARN of an Amazon MSK cluster.
func (o ReplicatorKafkaClusterAmazonMskClusterOutput) MskClusterArn() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicatorKafkaClusterAmazonMskCluster) string { return v.MskClusterArn }).(pulumi.StringOutput)
}

type ReplicatorKafkaClusterVpcConfig struct {
	// The AWS security groups to associate with the ENIs used by the replicator. If a security group is not specified, the default security group associated with the VPC is used.
	SecurityGroupsIds []string `pulumi:"securityGroupsIds"`
	// The list of subnets to connect to in the virtual private cloud (VPC). AWS creates elastic network interfaces inside these subnets to allow communication between your Kafka Cluster and the replicator.
	SubnetIds []string `pulumi:"subnetIds"`
}

// ReplicatorKafkaClusterVpcConfigInput is an input type that accepts ReplicatorKafkaClusterVpcConfigArgs and ReplicatorKafkaClusterVpcConfigOutput values.
// You can construct a concrete instance of `ReplicatorKafkaClusterVpcConfigInput` via:
//
//	ReplicatorKafkaClusterVpcConfigArgs{...}
type ReplicatorKafkaClusterVpcConfigInput interface {
	pulumi.Input

	ToReplicatorKafkaClusterVpcConfigOutput() ReplicatorKafkaClusterVpcConfigOutput
	ToReplicatorKafkaClusterVpcConfigOutputWithContext(context.Context) ReplicatorKafkaClusterVpcConfigOutput
}

type ReplicatorKafkaClusterVpcConfigArgs struct {
	// The AWS security groups to associate with the ENIs used by the replicator. If a security group is not specified, the default security group associated with the VPC is used.
	SecurityGroupsIds pulumi.StringArrayInput `pulumi:"securityGroupsIds"`
	// The list of subnets to connect to in the virtual private cloud (VPC). AWS creates elastic network interfaces inside these subnets to allow communication between your Kafka Cluster and the replicator.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
}

func (ReplicatorKafkaClusterVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatorKafkaClusterVpcConfig)(nil)).Elem()
}

func (i ReplicatorKafkaClusterVpcConfigArgs) ToReplicatorKafkaClusterVpcConfigOutput() ReplicatorKafkaClusterVpcConfigOutput {
	return i.ToReplicatorKafkaClusterVpcConfigOutputWithContext(context.Background())
}

func (i ReplicatorKafkaClusterVpcConfigArgs) ToReplicatorKafkaClusterVpcConfigOutputWithContext(ctx context.Context) ReplicatorKafkaClusterVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatorKafkaClusterVpcConfigOutput)
}

type ReplicatorKafkaClusterVpcConfigOutput struct{ *pulumi.OutputState }

func (ReplicatorKafkaClusterVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatorKafkaClusterVpcConfig)(nil)).Elem()
}

func (o ReplicatorKafkaClusterVpcConfigOutput) ToReplicatorKafkaClusterVpcConfigOutput() ReplicatorKafkaClusterVpcConfigOutput {
	return o
}

func (o ReplicatorKafkaClusterVpcConfigOutput) ToReplicatorKafkaClusterVpcConfigOutputWithContext(ctx context.Context) ReplicatorKafkaClusterVpcConfigOutput {
	return o
}

// The AWS security groups to associate with the ENIs used by the replicator. If a security group is not specified, the default security group associated with the VPC is used.
func (o ReplicatorKafkaClusterVpcConfigOutput) SecurityGroupsIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicatorKafkaClusterVpcConfig) []string { return v.SecurityGroupsIds }).(pulumi.StringArrayOutput)
}

// The list of subnets to connect to in the virtual private cloud (VPC). AWS creates elastic network interfaces inside these subnets to allow communication between your Kafka Cluster and the replicator.
func (o ReplicatorKafkaClusterVpcConfigOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicatorKafkaClusterVpcConfig) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

type ReplicatorReplicationInfoList struct {
	// Configuration relating to consumer group replication.
	ConsumerGroupReplications []ReplicatorReplicationInfoListConsumerGroupReplication `pulumi:"consumerGroupReplications"`
	SourceKafkaClusterAlias   *string                                                 `pulumi:"sourceKafkaClusterAlias"`
	// The ARN of the source Kafka cluster.
	SourceKafkaClusterArn string `pulumi:"sourceKafkaClusterArn"`
	// The type of compression to use writing records to target Kafka cluster.
	TargetCompressionType   string  `pulumi:"targetCompressionType"`
	TargetKafkaClusterAlias *string `pulumi:"targetKafkaClusterAlias"`
	// The ARN of the target Kafka cluster.
	TargetKafkaClusterArn string `pulumi:"targetKafkaClusterArn"`
	// Configuration relating to topic replication.
	TopicReplications []ReplicatorReplicationInfoListTopicReplication `pulumi:"topicReplications"`
}

// ReplicatorReplicationInfoListInput is an input type that accepts ReplicatorReplicationInfoListArgs and ReplicatorReplicationInfoListOutput values.
// You can construct a concrete instance of `ReplicatorReplicationInfoListInput` via:
//
//	ReplicatorReplicationInfoListArgs{...}
type ReplicatorReplicationInfoListInput interface {
	pulumi.Input

	ToReplicatorReplicationInfoListOutput() ReplicatorReplicationInfoListOutput
	ToReplicatorReplicationInfoListOutputWithContext(context.Context) ReplicatorReplicationInfoListOutput
}

type ReplicatorReplicationInfoListArgs struct {
	// Configuration relating to consumer group replication.
	ConsumerGroupReplications ReplicatorReplicationInfoListConsumerGroupReplicationArrayInput `pulumi:"consumerGroupReplications"`
	SourceKafkaClusterAlias   pulumi.StringPtrInput                                           `pulumi:"sourceKafkaClusterAlias"`
	// The ARN of the source Kafka cluster.
	SourceKafkaClusterArn pulumi.StringInput `pulumi:"sourceKafkaClusterArn"`
	// The type of compression to use writing records to target Kafka cluster.
	TargetCompressionType   pulumi.StringInput    `pulumi:"targetCompressionType"`
	TargetKafkaClusterAlias pulumi.StringPtrInput `pulumi:"targetKafkaClusterAlias"`
	// The ARN of the target Kafka cluster.
	TargetKafkaClusterArn pulumi.StringInput `pulumi:"targetKafkaClusterArn"`
	// Configuration relating to topic replication.
	TopicReplications ReplicatorReplicationInfoListTopicReplicationArrayInput `pulumi:"topicReplications"`
}

func (ReplicatorReplicationInfoListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatorReplicationInfoList)(nil)).Elem()
}

func (i ReplicatorReplicationInfoListArgs) ToReplicatorReplicationInfoListOutput() ReplicatorReplicationInfoListOutput {
	return i.ToReplicatorReplicationInfoListOutputWithContext(context.Background())
}

func (i ReplicatorReplicationInfoListArgs) ToReplicatorReplicationInfoListOutputWithContext(ctx context.Context) ReplicatorReplicationInfoListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatorReplicationInfoListOutput)
}

func (i ReplicatorReplicationInfoListArgs) ToReplicatorReplicationInfoListPtrOutput() ReplicatorReplicationInfoListPtrOutput {
	return i.ToReplicatorReplicationInfoListPtrOutputWithContext(context.Background())
}

func (i ReplicatorReplicationInfoListArgs) ToReplicatorReplicationInfoListPtrOutputWithContext(ctx context.Context) ReplicatorReplicationInfoListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatorReplicationInfoListOutput).ToReplicatorReplicationInfoListPtrOutputWithContext(ctx)
}

// ReplicatorReplicationInfoListPtrInput is an input type that accepts ReplicatorReplicationInfoListArgs, ReplicatorReplicationInfoListPtr and ReplicatorReplicationInfoListPtrOutput values.
// You can construct a concrete instance of `ReplicatorReplicationInfoListPtrInput` via:
//
//	        ReplicatorReplicationInfoListArgs{...}
//
//	or:
//
//	        nil
type ReplicatorReplicationInfoListPtrInput interface {
	pulumi.Input

	ToReplicatorReplicationInfoListPtrOutput() ReplicatorReplicationInfoListPtrOutput
	ToReplicatorReplicationInfoListPtrOutputWithContext(context.Context) ReplicatorReplicationInfoListPtrOutput
}

type replicatorReplicationInfoListPtrType ReplicatorReplicationInfoListArgs

func ReplicatorReplicationInfoListPtr(v *ReplicatorReplicationInfoListArgs) ReplicatorReplicationInfoListPtrInput {
	return (*replicatorReplicationInfoListPtrType)(v)
}

func (*replicatorReplicationInfoListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicatorReplicationInfoList)(nil)).Elem()
}

func (i *replicatorReplicationInfoListPtrType) ToReplicatorReplicationInfoListPtrOutput() ReplicatorReplicationInfoListPtrOutput {
	return i.ToReplicatorReplicationInfoListPtrOutputWithContext(context.Background())
}

func (i *replicatorReplicationInfoListPtrType) ToReplicatorReplicationInfoListPtrOutputWithContext(ctx context.Context) ReplicatorReplicationInfoListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatorReplicationInfoListPtrOutput)
}

type ReplicatorReplicationInfoListOutput struct{ *pulumi.OutputState }

func (ReplicatorReplicationInfoListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatorReplicationInfoList)(nil)).Elem()
}

func (o ReplicatorReplicationInfoListOutput) ToReplicatorReplicationInfoListOutput() ReplicatorReplicationInfoListOutput {
	return o
}

func (o ReplicatorReplicationInfoListOutput) ToReplicatorReplicationInfoListOutputWithContext(ctx context.Context) ReplicatorReplicationInfoListOutput {
	return o
}

func (o ReplicatorReplicationInfoListOutput) ToReplicatorReplicationInfoListPtrOutput() ReplicatorReplicationInfoListPtrOutput {
	return o.ToReplicatorReplicationInfoListPtrOutputWithContext(context.Background())
}

func (o ReplicatorReplicationInfoListOutput) ToReplicatorReplicationInfoListPtrOutputWithContext(ctx context.Context) ReplicatorReplicationInfoListPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicatorReplicationInfoList) *ReplicatorReplicationInfoList {
		return &v
	}).(ReplicatorReplicationInfoListPtrOutput)
}

// Configuration relating to consumer group replication.
func (o ReplicatorReplicationInfoListOutput) ConsumerGroupReplications() ReplicatorReplicationInfoListConsumerGroupReplicationArrayOutput {
	return o.ApplyT(func(v ReplicatorReplicationInfoList) []ReplicatorReplicationInfoListConsumerGroupReplication {
		return v.ConsumerGroupReplications
	}).(ReplicatorReplicationInfoListConsumerGroupReplicationArrayOutput)
}

func (o ReplicatorReplicationInfoListOutput) SourceKafkaClusterAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicatorReplicationInfoList) *string { return v.SourceKafkaClusterAlias }).(pulumi.StringPtrOutput)
}

// The ARN of the source Kafka cluster.
func (o ReplicatorReplicationInfoListOutput) SourceKafkaClusterArn() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicatorReplicationInfoList) string { return v.SourceKafkaClusterArn }).(pulumi.StringOutput)
}

// The type of compression to use writing records to target Kafka cluster.
func (o ReplicatorReplicationInfoListOutput) TargetCompressionType() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicatorReplicationInfoList) string { return v.TargetCompressionType }).(pulumi.StringOutput)
}

func (o ReplicatorReplicationInfoListOutput) TargetKafkaClusterAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicatorReplicationInfoList) *string { return v.TargetKafkaClusterAlias }).(pulumi.StringPtrOutput)
}

// The ARN of the target Kafka cluster.
func (o ReplicatorReplicationInfoListOutput) TargetKafkaClusterArn() pulumi.StringOutput {
	return o.ApplyT(func(v ReplicatorReplicationInfoList) string { return v.TargetKafkaClusterArn }).(pulumi.StringOutput)
}

// Configuration relating to topic replication.
func (o ReplicatorReplicationInfoListOutput) TopicReplications() ReplicatorReplicationInfoListTopicReplicationArrayOutput {
	return o.ApplyT(func(v ReplicatorReplicationInfoList) []ReplicatorReplicationInfoListTopicReplication {
		return v.TopicReplications
	}).(ReplicatorReplicationInfoListTopicReplicationArrayOutput)
}

type ReplicatorReplicationInfoListPtrOutput struct{ *pulumi.OutputState }

func (ReplicatorReplicationInfoListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicatorReplicationInfoList)(nil)).Elem()
}

func (o ReplicatorReplicationInfoListPtrOutput) ToReplicatorReplicationInfoListPtrOutput() ReplicatorReplicationInfoListPtrOutput {
	return o
}

func (o ReplicatorReplicationInfoListPtrOutput) ToReplicatorReplicationInfoListPtrOutputWithContext(ctx context.Context) ReplicatorReplicationInfoListPtrOutput {
	return o
}

func (o ReplicatorReplicationInfoListPtrOutput) Elem() ReplicatorReplicationInfoListOutput {
	return o.ApplyT(func(v *ReplicatorReplicationInfoList) ReplicatorReplicationInfoList {
		if v != nil {
			return *v
		}
		var ret ReplicatorReplicationInfoList
		return ret
	}).(ReplicatorReplicationInfoListOutput)
}

// Configuration relating to consumer group replication.
func (o ReplicatorReplicationInfoListPtrOutput) ConsumerGroupReplications() ReplicatorReplicationInfoListConsumerGroupReplicationArrayOutput {
	return o.ApplyT(func(v *ReplicatorReplicationInfoList) []ReplicatorReplicationInfoListConsumerGroupReplication {
		if v == nil {
			return nil
		}
		return v.ConsumerGroupReplications
	}).(ReplicatorReplicationInfoListConsumerGroupReplicationArrayOutput)
}

func (o ReplicatorReplicationInfoListPtrOutput) SourceKafkaClusterAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicatorReplicationInfoList) *string {
		if v == nil {
			return nil
		}
		return v.SourceKafkaClusterAlias
	}).(pulumi.StringPtrOutput)
}

// The ARN of the source Kafka cluster.
func (o ReplicatorReplicationInfoListPtrOutput) SourceKafkaClusterArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicatorReplicationInfoList) *string {
		if v == nil {
			return nil
		}
		return &v.SourceKafkaClusterArn
	}).(pulumi.StringPtrOutput)
}

// The type of compression to use writing records to target Kafka cluster.
func (o ReplicatorReplicationInfoListPtrOutput) TargetCompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicatorReplicationInfoList) *string {
		if v == nil {
			return nil
		}
		return &v.TargetCompressionType
	}).(pulumi.StringPtrOutput)
}

func (o ReplicatorReplicationInfoListPtrOutput) TargetKafkaClusterAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicatorReplicationInfoList) *string {
		if v == nil {
			return nil
		}
		return v.TargetKafkaClusterAlias
	}).(pulumi.StringPtrOutput)
}

// The ARN of the target Kafka cluster.
func (o ReplicatorReplicationInfoListPtrOutput) TargetKafkaClusterArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicatorReplicationInfoList) *string {
		if v == nil {
			return nil
		}
		return &v.TargetKafkaClusterArn
	}).(pulumi.StringPtrOutput)
}

// Configuration relating to topic replication.
func (o ReplicatorReplicationInfoListPtrOutput) TopicReplications() ReplicatorReplicationInfoListTopicReplicationArrayOutput {
	return o.ApplyT(func(v *ReplicatorReplicationInfoList) []ReplicatorReplicationInfoListTopicReplication {
		if v == nil {
			return nil
		}
		return v.TopicReplications
	}).(ReplicatorReplicationInfoListTopicReplicationArrayOutput)
}

type ReplicatorReplicationInfoListConsumerGroupReplication struct {
	// List of regular expression patterns indicating the consumer groups that should not be replicated.
	ConsumerGroupsToExcludes []string `pulumi:"consumerGroupsToExcludes"`
	// List of regular expression patterns indicating the consumer groups to copy.
	ConsumerGroupsToReplicates []string `pulumi:"consumerGroupsToReplicates"`
	// Whether to periodically check for new consumer groups.
	DetectAndCopyNewConsumerGroups *bool `pulumi:"detectAndCopyNewConsumerGroups"`
	// Whether to periodically write the translated offsets to __consumer_offsets topic in target cluster.
	SynchroniseConsumerGroupOffsets *bool `pulumi:"synchroniseConsumerGroupOffsets"`
}

// ReplicatorReplicationInfoListConsumerGroupReplicationInput is an input type that accepts ReplicatorReplicationInfoListConsumerGroupReplicationArgs and ReplicatorReplicationInfoListConsumerGroupReplicationOutput values.
// You can construct a concrete instance of `ReplicatorReplicationInfoListConsumerGroupReplicationInput` via:
//
//	ReplicatorReplicationInfoListConsumerGroupReplicationArgs{...}
type ReplicatorReplicationInfoListConsumerGroupReplicationInput interface {
	pulumi.Input

	ToReplicatorReplicationInfoListConsumerGroupReplicationOutput() ReplicatorReplicationInfoListConsumerGroupReplicationOutput
	ToReplicatorReplicationInfoListConsumerGroupReplicationOutputWithContext(context.Context) ReplicatorReplicationInfoListConsumerGroupReplicationOutput
}

type ReplicatorReplicationInfoListConsumerGroupReplicationArgs struct {
	// List of regular expression patterns indicating the consumer groups that should not be replicated.
	ConsumerGroupsToExcludes pulumi.StringArrayInput `pulumi:"consumerGroupsToExcludes"`
	// List of regular expression patterns indicating the consumer groups to copy.
	ConsumerGroupsToReplicates pulumi.StringArrayInput `pulumi:"consumerGroupsToReplicates"`
	// Whether to periodically check for new consumer groups.
	DetectAndCopyNewConsumerGroups pulumi.BoolPtrInput `pulumi:"detectAndCopyNewConsumerGroups"`
	// Whether to periodically write the translated offsets to __consumer_offsets topic in target cluster.
	SynchroniseConsumerGroupOffsets pulumi.BoolPtrInput `pulumi:"synchroniseConsumerGroupOffsets"`
}

func (ReplicatorReplicationInfoListConsumerGroupReplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatorReplicationInfoListConsumerGroupReplication)(nil)).Elem()
}

func (i ReplicatorReplicationInfoListConsumerGroupReplicationArgs) ToReplicatorReplicationInfoListConsumerGroupReplicationOutput() ReplicatorReplicationInfoListConsumerGroupReplicationOutput {
	return i.ToReplicatorReplicationInfoListConsumerGroupReplicationOutputWithContext(context.Background())
}

func (i ReplicatorReplicationInfoListConsumerGroupReplicationArgs) ToReplicatorReplicationInfoListConsumerGroupReplicationOutputWithContext(ctx context.Context) ReplicatorReplicationInfoListConsumerGroupReplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatorReplicationInfoListConsumerGroupReplicationOutput)
}

// ReplicatorReplicationInfoListConsumerGroupReplicationArrayInput is an input type that accepts ReplicatorReplicationInfoListConsumerGroupReplicationArray and ReplicatorReplicationInfoListConsumerGroupReplicationArrayOutput values.
// You can construct a concrete instance of `ReplicatorReplicationInfoListConsumerGroupReplicationArrayInput` via:
//
//	ReplicatorReplicationInfoListConsumerGroupReplicationArray{ ReplicatorReplicationInfoListConsumerGroupReplicationArgs{...} }
type ReplicatorReplicationInfoListConsumerGroupReplicationArrayInput interface {
	pulumi.Input

	ToReplicatorReplicationInfoListConsumerGroupReplicationArrayOutput() ReplicatorReplicationInfoListConsumerGroupReplicationArrayOutput
	ToReplicatorReplicationInfoListConsumerGroupReplicationArrayOutputWithContext(context.Context) ReplicatorReplicationInfoListConsumerGroupReplicationArrayOutput
}

type ReplicatorReplicationInfoListConsumerGroupReplicationArray []ReplicatorReplicationInfoListConsumerGroupReplicationInput

func (ReplicatorReplicationInfoListConsumerGroupReplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicatorReplicationInfoListConsumerGroupReplication)(nil)).Elem()
}

func (i ReplicatorReplicationInfoListConsumerGroupReplicationArray) ToReplicatorReplicationInfoListConsumerGroupReplicationArrayOutput() ReplicatorReplicationInfoListConsumerGroupReplicationArrayOutput {
	return i.ToReplicatorReplicationInfoListConsumerGroupReplicationArrayOutputWithContext(context.Background())
}

func (i ReplicatorReplicationInfoListConsumerGroupReplicationArray) ToReplicatorReplicationInfoListConsumerGroupReplicationArrayOutputWithContext(ctx context.Context) ReplicatorReplicationInfoListConsumerGroupReplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatorReplicationInfoListConsumerGroupReplicationArrayOutput)
}

type ReplicatorReplicationInfoListConsumerGroupReplicationOutput struct{ *pulumi.OutputState }

func (ReplicatorReplicationInfoListConsumerGroupReplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatorReplicationInfoListConsumerGroupReplication)(nil)).Elem()
}

func (o ReplicatorReplicationInfoListConsumerGroupReplicationOutput) ToReplicatorReplicationInfoListConsumerGroupReplicationOutput() ReplicatorReplicationInfoListConsumerGroupReplicationOutput {
	return o
}

func (o ReplicatorReplicationInfoListConsumerGroupReplicationOutput) ToReplicatorReplicationInfoListConsumerGroupReplicationOutputWithContext(ctx context.Context) ReplicatorReplicationInfoListConsumerGroupReplicationOutput {
	return o
}

// List of regular expression patterns indicating the consumer groups that should not be replicated.
func (o ReplicatorReplicationInfoListConsumerGroupReplicationOutput) ConsumerGroupsToExcludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicatorReplicationInfoListConsumerGroupReplication) []string {
		return v.ConsumerGroupsToExcludes
	}).(pulumi.StringArrayOutput)
}

// List of regular expression patterns indicating the consumer groups to copy.
func (o ReplicatorReplicationInfoListConsumerGroupReplicationOutput) ConsumerGroupsToReplicates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicatorReplicationInfoListConsumerGroupReplication) []string {
		return v.ConsumerGroupsToReplicates
	}).(pulumi.StringArrayOutput)
}

// Whether to periodically check for new consumer groups.
func (o ReplicatorReplicationInfoListConsumerGroupReplicationOutput) DetectAndCopyNewConsumerGroups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ReplicatorReplicationInfoListConsumerGroupReplication) *bool {
		return v.DetectAndCopyNewConsumerGroups
	}).(pulumi.BoolPtrOutput)
}

// Whether to periodically write the translated offsets to __consumer_offsets topic in target cluster.
func (o ReplicatorReplicationInfoListConsumerGroupReplicationOutput) SynchroniseConsumerGroupOffsets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ReplicatorReplicationInfoListConsumerGroupReplication) *bool {
		return v.SynchroniseConsumerGroupOffsets
	}).(pulumi.BoolPtrOutput)
}

type ReplicatorReplicationInfoListConsumerGroupReplicationArrayOutput struct{ *pulumi.OutputState }

func (ReplicatorReplicationInfoListConsumerGroupReplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicatorReplicationInfoListConsumerGroupReplication)(nil)).Elem()
}

func (o ReplicatorReplicationInfoListConsumerGroupReplicationArrayOutput) ToReplicatorReplicationInfoListConsumerGroupReplicationArrayOutput() ReplicatorReplicationInfoListConsumerGroupReplicationArrayOutput {
	return o
}

func (o ReplicatorReplicationInfoListConsumerGroupReplicationArrayOutput) ToReplicatorReplicationInfoListConsumerGroupReplicationArrayOutputWithContext(ctx context.Context) ReplicatorReplicationInfoListConsumerGroupReplicationArrayOutput {
	return o
}

func (o ReplicatorReplicationInfoListConsumerGroupReplicationArrayOutput) Index(i pulumi.IntInput) ReplicatorReplicationInfoListConsumerGroupReplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicatorReplicationInfoListConsumerGroupReplication {
		return vs[0].([]ReplicatorReplicationInfoListConsumerGroupReplication)[vs[1].(int)]
	}).(ReplicatorReplicationInfoListConsumerGroupReplicationOutput)
}

type ReplicatorReplicationInfoListTopicReplication struct {
	// Whether to periodically configure remote topic ACLs to match their corresponding upstream topics.
	CopyAccessControlListsForTopics *bool `pulumi:"copyAccessControlListsForTopics"`
	// Whether to periodically configure remote topics to match their corresponding upstream topics.
	CopyTopicConfigurations *bool `pulumi:"copyTopicConfigurations"`
	// Whether to periodically check for new topics and partitions.
	DetectAndCopyNewTopics *bool `pulumi:"detectAndCopyNewTopics"`
	// Configuration for specifying the position in the topics to start replicating from.
	StartingPosition       *ReplicatorReplicationInfoListTopicReplicationStartingPosition       `pulumi:"startingPosition"`
	TopicNameConfiguration *ReplicatorReplicationInfoListTopicReplicationTopicNameConfiguration `pulumi:"topicNameConfiguration"`
	// List of regular expression patterns indicating the topics that should not be replica.
	TopicsToExcludes []string `pulumi:"topicsToExcludes"`
	// List of regular expression patterns indicating the topics to copy.
	TopicsToReplicates []string `pulumi:"topicsToReplicates"`
}

// ReplicatorReplicationInfoListTopicReplicationInput is an input type that accepts ReplicatorReplicationInfoListTopicReplicationArgs and ReplicatorReplicationInfoListTopicReplicationOutput values.
// You can construct a concrete instance of `ReplicatorReplicationInfoListTopicReplicationInput` via:
//
//	ReplicatorReplicationInfoListTopicReplicationArgs{...}
type ReplicatorReplicationInfoListTopicReplicationInput interface {
	pulumi.Input

	ToReplicatorReplicationInfoListTopicReplicationOutput() ReplicatorReplicationInfoListTopicReplicationOutput
	ToReplicatorReplicationInfoListTopicReplicationOutputWithContext(context.Context) ReplicatorReplicationInfoListTopicReplicationOutput
}

type ReplicatorReplicationInfoListTopicReplicationArgs struct {
	// Whether to periodically configure remote topic ACLs to match their corresponding upstream topics.
	CopyAccessControlListsForTopics pulumi.BoolPtrInput `pulumi:"copyAccessControlListsForTopics"`
	// Whether to periodically configure remote topics to match their corresponding upstream topics.
	CopyTopicConfigurations pulumi.BoolPtrInput `pulumi:"copyTopicConfigurations"`
	// Whether to periodically check for new topics and partitions.
	DetectAndCopyNewTopics pulumi.BoolPtrInput `pulumi:"detectAndCopyNewTopics"`
	// Configuration for specifying the position in the topics to start replicating from.
	StartingPosition       ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrInput       `pulumi:"startingPosition"`
	TopicNameConfiguration ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrInput `pulumi:"topicNameConfiguration"`
	// List of regular expression patterns indicating the topics that should not be replica.
	TopicsToExcludes pulumi.StringArrayInput `pulumi:"topicsToExcludes"`
	// List of regular expression patterns indicating the topics to copy.
	TopicsToReplicates pulumi.StringArrayInput `pulumi:"topicsToReplicates"`
}

func (ReplicatorReplicationInfoListTopicReplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatorReplicationInfoListTopicReplication)(nil)).Elem()
}

func (i ReplicatorReplicationInfoListTopicReplicationArgs) ToReplicatorReplicationInfoListTopicReplicationOutput() ReplicatorReplicationInfoListTopicReplicationOutput {
	return i.ToReplicatorReplicationInfoListTopicReplicationOutputWithContext(context.Background())
}

func (i ReplicatorReplicationInfoListTopicReplicationArgs) ToReplicatorReplicationInfoListTopicReplicationOutputWithContext(ctx context.Context) ReplicatorReplicationInfoListTopicReplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatorReplicationInfoListTopicReplicationOutput)
}

// ReplicatorReplicationInfoListTopicReplicationArrayInput is an input type that accepts ReplicatorReplicationInfoListTopicReplicationArray and ReplicatorReplicationInfoListTopicReplicationArrayOutput values.
// You can construct a concrete instance of `ReplicatorReplicationInfoListTopicReplicationArrayInput` via:
//
//	ReplicatorReplicationInfoListTopicReplicationArray{ ReplicatorReplicationInfoListTopicReplicationArgs{...} }
type ReplicatorReplicationInfoListTopicReplicationArrayInput interface {
	pulumi.Input

	ToReplicatorReplicationInfoListTopicReplicationArrayOutput() ReplicatorReplicationInfoListTopicReplicationArrayOutput
	ToReplicatorReplicationInfoListTopicReplicationArrayOutputWithContext(context.Context) ReplicatorReplicationInfoListTopicReplicationArrayOutput
}

type ReplicatorReplicationInfoListTopicReplicationArray []ReplicatorReplicationInfoListTopicReplicationInput

func (ReplicatorReplicationInfoListTopicReplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicatorReplicationInfoListTopicReplication)(nil)).Elem()
}

func (i ReplicatorReplicationInfoListTopicReplicationArray) ToReplicatorReplicationInfoListTopicReplicationArrayOutput() ReplicatorReplicationInfoListTopicReplicationArrayOutput {
	return i.ToReplicatorReplicationInfoListTopicReplicationArrayOutputWithContext(context.Background())
}

func (i ReplicatorReplicationInfoListTopicReplicationArray) ToReplicatorReplicationInfoListTopicReplicationArrayOutputWithContext(ctx context.Context) ReplicatorReplicationInfoListTopicReplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatorReplicationInfoListTopicReplicationArrayOutput)
}

type ReplicatorReplicationInfoListTopicReplicationOutput struct{ *pulumi.OutputState }

func (ReplicatorReplicationInfoListTopicReplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatorReplicationInfoListTopicReplication)(nil)).Elem()
}

func (o ReplicatorReplicationInfoListTopicReplicationOutput) ToReplicatorReplicationInfoListTopicReplicationOutput() ReplicatorReplicationInfoListTopicReplicationOutput {
	return o
}

func (o ReplicatorReplicationInfoListTopicReplicationOutput) ToReplicatorReplicationInfoListTopicReplicationOutputWithContext(ctx context.Context) ReplicatorReplicationInfoListTopicReplicationOutput {
	return o
}

// Whether to periodically configure remote topic ACLs to match their corresponding upstream topics.
func (o ReplicatorReplicationInfoListTopicReplicationOutput) CopyAccessControlListsForTopics() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ReplicatorReplicationInfoListTopicReplication) *bool { return v.CopyAccessControlListsForTopics }).(pulumi.BoolPtrOutput)
}

// Whether to periodically configure remote topics to match their corresponding upstream topics.
func (o ReplicatorReplicationInfoListTopicReplicationOutput) CopyTopicConfigurations() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ReplicatorReplicationInfoListTopicReplication) *bool { return v.CopyTopicConfigurations }).(pulumi.BoolPtrOutput)
}

// Whether to periodically check for new topics and partitions.
func (o ReplicatorReplicationInfoListTopicReplicationOutput) DetectAndCopyNewTopics() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ReplicatorReplicationInfoListTopicReplication) *bool { return v.DetectAndCopyNewTopics }).(pulumi.BoolPtrOutput)
}

// Configuration for specifying the position in the topics to start replicating from.
func (o ReplicatorReplicationInfoListTopicReplicationOutput) StartingPosition() ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput {
	return o.ApplyT(func(v ReplicatorReplicationInfoListTopicReplication) *ReplicatorReplicationInfoListTopicReplicationStartingPosition {
		return v.StartingPosition
	}).(ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput)
}

func (o ReplicatorReplicationInfoListTopicReplicationOutput) TopicNameConfiguration() ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput {
	return o.ApplyT(func(v ReplicatorReplicationInfoListTopicReplication) *ReplicatorReplicationInfoListTopicReplicationTopicNameConfiguration {
		return v.TopicNameConfiguration
	}).(ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput)
}

// List of regular expression patterns indicating the topics that should not be replica.
func (o ReplicatorReplicationInfoListTopicReplicationOutput) TopicsToExcludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicatorReplicationInfoListTopicReplication) []string { return v.TopicsToExcludes }).(pulumi.StringArrayOutput)
}

// List of regular expression patterns indicating the topics to copy.
func (o ReplicatorReplicationInfoListTopicReplicationOutput) TopicsToReplicates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ReplicatorReplicationInfoListTopicReplication) []string { return v.TopicsToReplicates }).(pulumi.StringArrayOutput)
}

type ReplicatorReplicationInfoListTopicReplicationArrayOutput struct{ *pulumi.OutputState }

func (ReplicatorReplicationInfoListTopicReplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReplicatorReplicationInfoListTopicReplication)(nil)).Elem()
}

func (o ReplicatorReplicationInfoListTopicReplicationArrayOutput) ToReplicatorReplicationInfoListTopicReplicationArrayOutput() ReplicatorReplicationInfoListTopicReplicationArrayOutput {
	return o
}

func (o ReplicatorReplicationInfoListTopicReplicationArrayOutput) ToReplicatorReplicationInfoListTopicReplicationArrayOutputWithContext(ctx context.Context) ReplicatorReplicationInfoListTopicReplicationArrayOutput {
	return o
}

func (o ReplicatorReplicationInfoListTopicReplicationArrayOutput) Index(i pulumi.IntInput) ReplicatorReplicationInfoListTopicReplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReplicatorReplicationInfoListTopicReplication {
		return vs[0].([]ReplicatorReplicationInfoListTopicReplication)[vs[1].(int)]
	}).(ReplicatorReplicationInfoListTopicReplicationOutput)
}

type ReplicatorReplicationInfoListTopicReplicationStartingPosition struct {
	// The type of replication starting position. Supports `LATEST` and `EARLIEST`.
	Type *string `pulumi:"type"`
}

// ReplicatorReplicationInfoListTopicReplicationStartingPositionInput is an input type that accepts ReplicatorReplicationInfoListTopicReplicationStartingPositionArgs and ReplicatorReplicationInfoListTopicReplicationStartingPositionOutput values.
// You can construct a concrete instance of `ReplicatorReplicationInfoListTopicReplicationStartingPositionInput` via:
//
//	ReplicatorReplicationInfoListTopicReplicationStartingPositionArgs{...}
type ReplicatorReplicationInfoListTopicReplicationStartingPositionInput interface {
	pulumi.Input

	ToReplicatorReplicationInfoListTopicReplicationStartingPositionOutput() ReplicatorReplicationInfoListTopicReplicationStartingPositionOutput
	ToReplicatorReplicationInfoListTopicReplicationStartingPositionOutputWithContext(context.Context) ReplicatorReplicationInfoListTopicReplicationStartingPositionOutput
}

type ReplicatorReplicationInfoListTopicReplicationStartingPositionArgs struct {
	// The type of replication starting position. Supports `LATEST` and `EARLIEST`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ReplicatorReplicationInfoListTopicReplicationStartingPositionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatorReplicationInfoListTopicReplicationStartingPosition)(nil)).Elem()
}

func (i ReplicatorReplicationInfoListTopicReplicationStartingPositionArgs) ToReplicatorReplicationInfoListTopicReplicationStartingPositionOutput() ReplicatorReplicationInfoListTopicReplicationStartingPositionOutput {
	return i.ToReplicatorReplicationInfoListTopicReplicationStartingPositionOutputWithContext(context.Background())
}

func (i ReplicatorReplicationInfoListTopicReplicationStartingPositionArgs) ToReplicatorReplicationInfoListTopicReplicationStartingPositionOutputWithContext(ctx context.Context) ReplicatorReplicationInfoListTopicReplicationStartingPositionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatorReplicationInfoListTopicReplicationStartingPositionOutput)
}

func (i ReplicatorReplicationInfoListTopicReplicationStartingPositionArgs) ToReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput() ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput {
	return i.ToReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutputWithContext(context.Background())
}

func (i ReplicatorReplicationInfoListTopicReplicationStartingPositionArgs) ToReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutputWithContext(ctx context.Context) ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatorReplicationInfoListTopicReplicationStartingPositionOutput).ToReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutputWithContext(ctx)
}

// ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrInput is an input type that accepts ReplicatorReplicationInfoListTopicReplicationStartingPositionArgs, ReplicatorReplicationInfoListTopicReplicationStartingPositionPtr and ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput values.
// You can construct a concrete instance of `ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrInput` via:
//
//	        ReplicatorReplicationInfoListTopicReplicationStartingPositionArgs{...}
//
//	or:
//
//	        nil
type ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrInput interface {
	pulumi.Input

	ToReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput() ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput
	ToReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutputWithContext(context.Context) ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput
}

type replicatorReplicationInfoListTopicReplicationStartingPositionPtrType ReplicatorReplicationInfoListTopicReplicationStartingPositionArgs

func ReplicatorReplicationInfoListTopicReplicationStartingPositionPtr(v *ReplicatorReplicationInfoListTopicReplicationStartingPositionArgs) ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrInput {
	return (*replicatorReplicationInfoListTopicReplicationStartingPositionPtrType)(v)
}

func (*replicatorReplicationInfoListTopicReplicationStartingPositionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicatorReplicationInfoListTopicReplicationStartingPosition)(nil)).Elem()
}

func (i *replicatorReplicationInfoListTopicReplicationStartingPositionPtrType) ToReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput() ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput {
	return i.ToReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutputWithContext(context.Background())
}

func (i *replicatorReplicationInfoListTopicReplicationStartingPositionPtrType) ToReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutputWithContext(ctx context.Context) ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput)
}

type ReplicatorReplicationInfoListTopicReplicationStartingPositionOutput struct{ *pulumi.OutputState }

func (ReplicatorReplicationInfoListTopicReplicationStartingPositionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatorReplicationInfoListTopicReplicationStartingPosition)(nil)).Elem()
}

func (o ReplicatorReplicationInfoListTopicReplicationStartingPositionOutput) ToReplicatorReplicationInfoListTopicReplicationStartingPositionOutput() ReplicatorReplicationInfoListTopicReplicationStartingPositionOutput {
	return o
}

func (o ReplicatorReplicationInfoListTopicReplicationStartingPositionOutput) ToReplicatorReplicationInfoListTopicReplicationStartingPositionOutputWithContext(ctx context.Context) ReplicatorReplicationInfoListTopicReplicationStartingPositionOutput {
	return o
}

func (o ReplicatorReplicationInfoListTopicReplicationStartingPositionOutput) ToReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput() ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput {
	return o.ToReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutputWithContext(context.Background())
}

func (o ReplicatorReplicationInfoListTopicReplicationStartingPositionOutput) ToReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutputWithContext(ctx context.Context) ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicatorReplicationInfoListTopicReplicationStartingPosition) *ReplicatorReplicationInfoListTopicReplicationStartingPosition {
		return &v
	}).(ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput)
}

// The type of replication starting position. Supports `LATEST` and `EARLIEST`.
func (o ReplicatorReplicationInfoListTopicReplicationStartingPositionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicatorReplicationInfoListTopicReplicationStartingPosition) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput struct{ *pulumi.OutputState }

func (ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicatorReplicationInfoListTopicReplicationStartingPosition)(nil)).Elem()
}

func (o ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput) ToReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput() ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput {
	return o
}

func (o ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput) ToReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutputWithContext(ctx context.Context) ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput {
	return o
}

func (o ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput) Elem() ReplicatorReplicationInfoListTopicReplicationStartingPositionOutput {
	return o.ApplyT(func(v *ReplicatorReplicationInfoListTopicReplicationStartingPosition) ReplicatorReplicationInfoListTopicReplicationStartingPosition {
		if v != nil {
			return *v
		}
		var ret ReplicatorReplicationInfoListTopicReplicationStartingPosition
		return ret
	}).(ReplicatorReplicationInfoListTopicReplicationStartingPositionOutput)
}

// The type of replication starting position. Supports `LATEST` and `EARLIEST`.
func (o ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicatorReplicationInfoListTopicReplicationStartingPosition) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ReplicatorReplicationInfoListTopicReplicationTopicNameConfiguration struct {
	Type *string `pulumi:"type"`
}

// ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationInput is an input type that accepts ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationArgs and ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationOutput values.
// You can construct a concrete instance of `ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationInput` via:
//
//	ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationArgs{...}
type ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationInput interface {
	pulumi.Input

	ToReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationOutput() ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationOutput
	ToReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationOutputWithContext(context.Context) ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationOutput
}

type ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationArgs struct {
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatorReplicationInfoListTopicReplicationTopicNameConfiguration)(nil)).Elem()
}

func (i ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationArgs) ToReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationOutput() ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationOutput {
	return i.ToReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationOutputWithContext(context.Background())
}

func (i ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationArgs) ToReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationOutputWithContext(ctx context.Context) ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationOutput)
}

func (i ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationArgs) ToReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput() ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput {
	return i.ToReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutputWithContext(context.Background())
}

func (i ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationArgs) ToReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutputWithContext(ctx context.Context) ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationOutput).ToReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutputWithContext(ctx)
}

// ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrInput is an input type that accepts ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationArgs, ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtr and ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput values.
// You can construct a concrete instance of `ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrInput` via:
//
//	        ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationArgs{...}
//
//	or:
//
//	        nil
type ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrInput interface {
	pulumi.Input

	ToReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput() ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput
	ToReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutputWithContext(context.Context) ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput
}

type replicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrType ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationArgs

func ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtr(v *ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationArgs) ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrInput {
	return (*replicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrType)(v)
}

func (*replicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicatorReplicationInfoListTopicReplicationTopicNameConfiguration)(nil)).Elem()
}

func (i *replicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrType) ToReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput() ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput {
	return i.ToReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutputWithContext(context.Background())
}

func (i *replicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrType) ToReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutputWithContext(ctx context.Context) ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput)
}

type ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationOutput struct{ *pulumi.OutputState }

func (ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReplicatorReplicationInfoListTopicReplicationTopicNameConfiguration)(nil)).Elem()
}

func (o ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationOutput) ToReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationOutput() ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationOutput {
	return o
}

func (o ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationOutput) ToReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationOutputWithContext(ctx context.Context) ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationOutput {
	return o
}

func (o ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationOutput) ToReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput() ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput {
	return o.ToReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutputWithContext(context.Background())
}

func (o ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationOutput) ToReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutputWithContext(ctx context.Context) ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReplicatorReplicationInfoListTopicReplicationTopicNameConfiguration) *ReplicatorReplicationInfoListTopicReplicationTopicNameConfiguration {
		return &v
	}).(ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput)
}

func (o ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReplicatorReplicationInfoListTopicReplicationTopicNameConfiguration) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicatorReplicationInfoListTopicReplicationTopicNameConfiguration)(nil)).Elem()
}

func (o ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput) ToReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput() ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput {
	return o
}

func (o ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput) ToReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutputWithContext(ctx context.Context) ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput {
	return o
}

func (o ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput) Elem() ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationOutput {
	return o.ApplyT(func(v *ReplicatorReplicationInfoListTopicReplicationTopicNameConfiguration) ReplicatorReplicationInfoListTopicReplicationTopicNameConfiguration {
		if v != nil {
			return *v
		}
		var ret ReplicatorReplicationInfoListTopicReplicationTopicNameConfiguration
		return ret
	}).(ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationOutput)
}

func (o ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicatorReplicationInfoListTopicReplicationTopicNameConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ServerlessClusterClientAuthentication struct {
	// Details for client authentication using SASL. See below.
	Sasl ServerlessClusterClientAuthenticationSasl `pulumi:"sasl"`
}

// ServerlessClusterClientAuthenticationInput is an input type that accepts ServerlessClusterClientAuthenticationArgs and ServerlessClusterClientAuthenticationOutput values.
// You can construct a concrete instance of `ServerlessClusterClientAuthenticationInput` via:
//
//	ServerlessClusterClientAuthenticationArgs{...}
type ServerlessClusterClientAuthenticationInput interface {
	pulumi.Input

	ToServerlessClusterClientAuthenticationOutput() ServerlessClusterClientAuthenticationOutput
	ToServerlessClusterClientAuthenticationOutputWithContext(context.Context) ServerlessClusterClientAuthenticationOutput
}

type ServerlessClusterClientAuthenticationArgs struct {
	// Details for client authentication using SASL. See below.
	Sasl ServerlessClusterClientAuthenticationSaslInput `pulumi:"sasl"`
}

func (ServerlessClusterClientAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessClusterClientAuthentication)(nil)).Elem()
}

func (i ServerlessClusterClientAuthenticationArgs) ToServerlessClusterClientAuthenticationOutput() ServerlessClusterClientAuthenticationOutput {
	return i.ToServerlessClusterClientAuthenticationOutputWithContext(context.Background())
}

func (i ServerlessClusterClientAuthenticationArgs) ToServerlessClusterClientAuthenticationOutputWithContext(ctx context.Context) ServerlessClusterClientAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessClusterClientAuthenticationOutput)
}

func (i ServerlessClusterClientAuthenticationArgs) ToServerlessClusterClientAuthenticationPtrOutput() ServerlessClusterClientAuthenticationPtrOutput {
	return i.ToServerlessClusterClientAuthenticationPtrOutputWithContext(context.Background())
}

func (i ServerlessClusterClientAuthenticationArgs) ToServerlessClusterClientAuthenticationPtrOutputWithContext(ctx context.Context) ServerlessClusterClientAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessClusterClientAuthenticationOutput).ToServerlessClusterClientAuthenticationPtrOutputWithContext(ctx)
}

// ServerlessClusterClientAuthenticationPtrInput is an input type that accepts ServerlessClusterClientAuthenticationArgs, ServerlessClusterClientAuthenticationPtr and ServerlessClusterClientAuthenticationPtrOutput values.
// You can construct a concrete instance of `ServerlessClusterClientAuthenticationPtrInput` via:
//
//	        ServerlessClusterClientAuthenticationArgs{...}
//
//	or:
//
//	        nil
type ServerlessClusterClientAuthenticationPtrInput interface {
	pulumi.Input

	ToServerlessClusterClientAuthenticationPtrOutput() ServerlessClusterClientAuthenticationPtrOutput
	ToServerlessClusterClientAuthenticationPtrOutputWithContext(context.Context) ServerlessClusterClientAuthenticationPtrOutput
}

type serverlessClusterClientAuthenticationPtrType ServerlessClusterClientAuthenticationArgs

func ServerlessClusterClientAuthenticationPtr(v *ServerlessClusterClientAuthenticationArgs) ServerlessClusterClientAuthenticationPtrInput {
	return (*serverlessClusterClientAuthenticationPtrType)(v)
}

func (*serverlessClusterClientAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessClusterClientAuthentication)(nil)).Elem()
}

func (i *serverlessClusterClientAuthenticationPtrType) ToServerlessClusterClientAuthenticationPtrOutput() ServerlessClusterClientAuthenticationPtrOutput {
	return i.ToServerlessClusterClientAuthenticationPtrOutputWithContext(context.Background())
}

func (i *serverlessClusterClientAuthenticationPtrType) ToServerlessClusterClientAuthenticationPtrOutputWithContext(ctx context.Context) ServerlessClusterClientAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessClusterClientAuthenticationPtrOutput)
}

type ServerlessClusterClientAuthenticationOutput struct{ *pulumi.OutputState }

func (ServerlessClusterClientAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessClusterClientAuthentication)(nil)).Elem()
}

func (o ServerlessClusterClientAuthenticationOutput) ToServerlessClusterClientAuthenticationOutput() ServerlessClusterClientAuthenticationOutput {
	return o
}

func (o ServerlessClusterClientAuthenticationOutput) ToServerlessClusterClientAuthenticationOutputWithContext(ctx context.Context) ServerlessClusterClientAuthenticationOutput {
	return o
}

func (o ServerlessClusterClientAuthenticationOutput) ToServerlessClusterClientAuthenticationPtrOutput() ServerlessClusterClientAuthenticationPtrOutput {
	return o.ToServerlessClusterClientAuthenticationPtrOutputWithContext(context.Background())
}

func (o ServerlessClusterClientAuthenticationOutput) ToServerlessClusterClientAuthenticationPtrOutputWithContext(ctx context.Context) ServerlessClusterClientAuthenticationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerlessClusterClientAuthentication) *ServerlessClusterClientAuthentication {
		return &v
	}).(ServerlessClusterClientAuthenticationPtrOutput)
}

// Details for client authentication using SASL. See below.
func (o ServerlessClusterClientAuthenticationOutput) Sasl() ServerlessClusterClientAuthenticationSaslOutput {
	return o.ApplyT(func(v ServerlessClusterClientAuthentication) ServerlessClusterClientAuthenticationSasl { return v.Sasl }).(ServerlessClusterClientAuthenticationSaslOutput)
}

type ServerlessClusterClientAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (ServerlessClusterClientAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessClusterClientAuthentication)(nil)).Elem()
}

func (o ServerlessClusterClientAuthenticationPtrOutput) ToServerlessClusterClientAuthenticationPtrOutput() ServerlessClusterClientAuthenticationPtrOutput {
	return o
}

func (o ServerlessClusterClientAuthenticationPtrOutput) ToServerlessClusterClientAuthenticationPtrOutputWithContext(ctx context.Context) ServerlessClusterClientAuthenticationPtrOutput {
	return o
}

func (o ServerlessClusterClientAuthenticationPtrOutput) Elem() ServerlessClusterClientAuthenticationOutput {
	return o.ApplyT(func(v *ServerlessClusterClientAuthentication) ServerlessClusterClientAuthentication {
		if v != nil {
			return *v
		}
		var ret ServerlessClusterClientAuthentication
		return ret
	}).(ServerlessClusterClientAuthenticationOutput)
}

// Details for client authentication using SASL. See below.
func (o ServerlessClusterClientAuthenticationPtrOutput) Sasl() ServerlessClusterClientAuthenticationSaslPtrOutput {
	return o.ApplyT(func(v *ServerlessClusterClientAuthentication) *ServerlessClusterClientAuthenticationSasl {
		if v == nil {
			return nil
		}
		return &v.Sasl
	}).(ServerlessClusterClientAuthenticationSaslPtrOutput)
}

type ServerlessClusterClientAuthenticationSasl struct {
	// Details for client authentication using IAM. See below.
	Iam ServerlessClusterClientAuthenticationSaslIam `pulumi:"iam"`
}

// ServerlessClusterClientAuthenticationSaslInput is an input type that accepts ServerlessClusterClientAuthenticationSaslArgs and ServerlessClusterClientAuthenticationSaslOutput values.
// You can construct a concrete instance of `ServerlessClusterClientAuthenticationSaslInput` via:
//
//	ServerlessClusterClientAuthenticationSaslArgs{...}
type ServerlessClusterClientAuthenticationSaslInput interface {
	pulumi.Input

	ToServerlessClusterClientAuthenticationSaslOutput() ServerlessClusterClientAuthenticationSaslOutput
	ToServerlessClusterClientAuthenticationSaslOutputWithContext(context.Context) ServerlessClusterClientAuthenticationSaslOutput
}

type ServerlessClusterClientAuthenticationSaslArgs struct {
	// Details for client authentication using IAM. See below.
	Iam ServerlessClusterClientAuthenticationSaslIamInput `pulumi:"iam"`
}

func (ServerlessClusterClientAuthenticationSaslArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessClusterClientAuthenticationSasl)(nil)).Elem()
}

func (i ServerlessClusterClientAuthenticationSaslArgs) ToServerlessClusterClientAuthenticationSaslOutput() ServerlessClusterClientAuthenticationSaslOutput {
	return i.ToServerlessClusterClientAuthenticationSaslOutputWithContext(context.Background())
}

func (i ServerlessClusterClientAuthenticationSaslArgs) ToServerlessClusterClientAuthenticationSaslOutputWithContext(ctx context.Context) ServerlessClusterClientAuthenticationSaslOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessClusterClientAuthenticationSaslOutput)
}

func (i ServerlessClusterClientAuthenticationSaslArgs) ToServerlessClusterClientAuthenticationSaslPtrOutput() ServerlessClusterClientAuthenticationSaslPtrOutput {
	return i.ToServerlessClusterClientAuthenticationSaslPtrOutputWithContext(context.Background())
}

func (i ServerlessClusterClientAuthenticationSaslArgs) ToServerlessClusterClientAuthenticationSaslPtrOutputWithContext(ctx context.Context) ServerlessClusterClientAuthenticationSaslPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessClusterClientAuthenticationSaslOutput).ToServerlessClusterClientAuthenticationSaslPtrOutputWithContext(ctx)
}

// ServerlessClusterClientAuthenticationSaslPtrInput is an input type that accepts ServerlessClusterClientAuthenticationSaslArgs, ServerlessClusterClientAuthenticationSaslPtr and ServerlessClusterClientAuthenticationSaslPtrOutput values.
// You can construct a concrete instance of `ServerlessClusterClientAuthenticationSaslPtrInput` via:
//
//	        ServerlessClusterClientAuthenticationSaslArgs{...}
//
//	or:
//
//	        nil
type ServerlessClusterClientAuthenticationSaslPtrInput interface {
	pulumi.Input

	ToServerlessClusterClientAuthenticationSaslPtrOutput() ServerlessClusterClientAuthenticationSaslPtrOutput
	ToServerlessClusterClientAuthenticationSaslPtrOutputWithContext(context.Context) ServerlessClusterClientAuthenticationSaslPtrOutput
}

type serverlessClusterClientAuthenticationSaslPtrType ServerlessClusterClientAuthenticationSaslArgs

func ServerlessClusterClientAuthenticationSaslPtr(v *ServerlessClusterClientAuthenticationSaslArgs) ServerlessClusterClientAuthenticationSaslPtrInput {
	return (*serverlessClusterClientAuthenticationSaslPtrType)(v)
}

func (*serverlessClusterClientAuthenticationSaslPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessClusterClientAuthenticationSasl)(nil)).Elem()
}

func (i *serverlessClusterClientAuthenticationSaslPtrType) ToServerlessClusterClientAuthenticationSaslPtrOutput() ServerlessClusterClientAuthenticationSaslPtrOutput {
	return i.ToServerlessClusterClientAuthenticationSaslPtrOutputWithContext(context.Background())
}

func (i *serverlessClusterClientAuthenticationSaslPtrType) ToServerlessClusterClientAuthenticationSaslPtrOutputWithContext(ctx context.Context) ServerlessClusterClientAuthenticationSaslPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessClusterClientAuthenticationSaslPtrOutput)
}

type ServerlessClusterClientAuthenticationSaslOutput struct{ *pulumi.OutputState }

func (ServerlessClusterClientAuthenticationSaslOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessClusterClientAuthenticationSasl)(nil)).Elem()
}

func (o ServerlessClusterClientAuthenticationSaslOutput) ToServerlessClusterClientAuthenticationSaslOutput() ServerlessClusterClientAuthenticationSaslOutput {
	return o
}

func (o ServerlessClusterClientAuthenticationSaslOutput) ToServerlessClusterClientAuthenticationSaslOutputWithContext(ctx context.Context) ServerlessClusterClientAuthenticationSaslOutput {
	return o
}

func (o ServerlessClusterClientAuthenticationSaslOutput) ToServerlessClusterClientAuthenticationSaslPtrOutput() ServerlessClusterClientAuthenticationSaslPtrOutput {
	return o.ToServerlessClusterClientAuthenticationSaslPtrOutputWithContext(context.Background())
}

func (o ServerlessClusterClientAuthenticationSaslOutput) ToServerlessClusterClientAuthenticationSaslPtrOutputWithContext(ctx context.Context) ServerlessClusterClientAuthenticationSaslPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerlessClusterClientAuthenticationSasl) *ServerlessClusterClientAuthenticationSasl {
		return &v
	}).(ServerlessClusterClientAuthenticationSaslPtrOutput)
}

// Details for client authentication using IAM. See below.
func (o ServerlessClusterClientAuthenticationSaslOutput) Iam() ServerlessClusterClientAuthenticationSaslIamOutput {
	return o.ApplyT(func(v ServerlessClusterClientAuthenticationSasl) ServerlessClusterClientAuthenticationSaslIam {
		return v.Iam
	}).(ServerlessClusterClientAuthenticationSaslIamOutput)
}

type ServerlessClusterClientAuthenticationSaslPtrOutput struct{ *pulumi.OutputState }

func (ServerlessClusterClientAuthenticationSaslPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessClusterClientAuthenticationSasl)(nil)).Elem()
}

func (o ServerlessClusterClientAuthenticationSaslPtrOutput) ToServerlessClusterClientAuthenticationSaslPtrOutput() ServerlessClusterClientAuthenticationSaslPtrOutput {
	return o
}

func (o ServerlessClusterClientAuthenticationSaslPtrOutput) ToServerlessClusterClientAuthenticationSaslPtrOutputWithContext(ctx context.Context) ServerlessClusterClientAuthenticationSaslPtrOutput {
	return o
}

func (o ServerlessClusterClientAuthenticationSaslPtrOutput) Elem() ServerlessClusterClientAuthenticationSaslOutput {
	return o.ApplyT(func(v *ServerlessClusterClientAuthenticationSasl) ServerlessClusterClientAuthenticationSasl {
		if v != nil {
			return *v
		}
		var ret ServerlessClusterClientAuthenticationSasl
		return ret
	}).(ServerlessClusterClientAuthenticationSaslOutput)
}

// Details for client authentication using IAM. See below.
func (o ServerlessClusterClientAuthenticationSaslPtrOutput) Iam() ServerlessClusterClientAuthenticationSaslIamPtrOutput {
	return o.ApplyT(func(v *ServerlessClusterClientAuthenticationSasl) *ServerlessClusterClientAuthenticationSaslIam {
		if v == nil {
			return nil
		}
		return &v.Iam
	}).(ServerlessClusterClientAuthenticationSaslIamPtrOutput)
}

type ServerlessClusterClientAuthenticationSaslIam struct {
	// Whether SASL/IAM authentication is enabled or not.
	Enabled bool `pulumi:"enabled"`
}

// ServerlessClusterClientAuthenticationSaslIamInput is an input type that accepts ServerlessClusterClientAuthenticationSaslIamArgs and ServerlessClusterClientAuthenticationSaslIamOutput values.
// You can construct a concrete instance of `ServerlessClusterClientAuthenticationSaslIamInput` via:
//
//	ServerlessClusterClientAuthenticationSaslIamArgs{...}
type ServerlessClusterClientAuthenticationSaslIamInput interface {
	pulumi.Input

	ToServerlessClusterClientAuthenticationSaslIamOutput() ServerlessClusterClientAuthenticationSaslIamOutput
	ToServerlessClusterClientAuthenticationSaslIamOutputWithContext(context.Context) ServerlessClusterClientAuthenticationSaslIamOutput
}

type ServerlessClusterClientAuthenticationSaslIamArgs struct {
	// Whether SASL/IAM authentication is enabled or not.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (ServerlessClusterClientAuthenticationSaslIamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessClusterClientAuthenticationSaslIam)(nil)).Elem()
}

func (i ServerlessClusterClientAuthenticationSaslIamArgs) ToServerlessClusterClientAuthenticationSaslIamOutput() ServerlessClusterClientAuthenticationSaslIamOutput {
	return i.ToServerlessClusterClientAuthenticationSaslIamOutputWithContext(context.Background())
}

func (i ServerlessClusterClientAuthenticationSaslIamArgs) ToServerlessClusterClientAuthenticationSaslIamOutputWithContext(ctx context.Context) ServerlessClusterClientAuthenticationSaslIamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessClusterClientAuthenticationSaslIamOutput)
}

func (i ServerlessClusterClientAuthenticationSaslIamArgs) ToServerlessClusterClientAuthenticationSaslIamPtrOutput() ServerlessClusterClientAuthenticationSaslIamPtrOutput {
	return i.ToServerlessClusterClientAuthenticationSaslIamPtrOutputWithContext(context.Background())
}

func (i ServerlessClusterClientAuthenticationSaslIamArgs) ToServerlessClusterClientAuthenticationSaslIamPtrOutputWithContext(ctx context.Context) ServerlessClusterClientAuthenticationSaslIamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessClusterClientAuthenticationSaslIamOutput).ToServerlessClusterClientAuthenticationSaslIamPtrOutputWithContext(ctx)
}

// ServerlessClusterClientAuthenticationSaslIamPtrInput is an input type that accepts ServerlessClusterClientAuthenticationSaslIamArgs, ServerlessClusterClientAuthenticationSaslIamPtr and ServerlessClusterClientAuthenticationSaslIamPtrOutput values.
// You can construct a concrete instance of `ServerlessClusterClientAuthenticationSaslIamPtrInput` via:
//
//	        ServerlessClusterClientAuthenticationSaslIamArgs{...}
//
//	or:
//
//	        nil
type ServerlessClusterClientAuthenticationSaslIamPtrInput interface {
	pulumi.Input

	ToServerlessClusterClientAuthenticationSaslIamPtrOutput() ServerlessClusterClientAuthenticationSaslIamPtrOutput
	ToServerlessClusterClientAuthenticationSaslIamPtrOutputWithContext(context.Context) ServerlessClusterClientAuthenticationSaslIamPtrOutput
}

type serverlessClusterClientAuthenticationSaslIamPtrType ServerlessClusterClientAuthenticationSaslIamArgs

func ServerlessClusterClientAuthenticationSaslIamPtr(v *ServerlessClusterClientAuthenticationSaslIamArgs) ServerlessClusterClientAuthenticationSaslIamPtrInput {
	return (*serverlessClusterClientAuthenticationSaslIamPtrType)(v)
}

func (*serverlessClusterClientAuthenticationSaslIamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessClusterClientAuthenticationSaslIam)(nil)).Elem()
}

func (i *serverlessClusterClientAuthenticationSaslIamPtrType) ToServerlessClusterClientAuthenticationSaslIamPtrOutput() ServerlessClusterClientAuthenticationSaslIamPtrOutput {
	return i.ToServerlessClusterClientAuthenticationSaslIamPtrOutputWithContext(context.Background())
}

func (i *serverlessClusterClientAuthenticationSaslIamPtrType) ToServerlessClusterClientAuthenticationSaslIamPtrOutputWithContext(ctx context.Context) ServerlessClusterClientAuthenticationSaslIamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessClusterClientAuthenticationSaslIamPtrOutput)
}

type ServerlessClusterClientAuthenticationSaslIamOutput struct{ *pulumi.OutputState }

func (ServerlessClusterClientAuthenticationSaslIamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessClusterClientAuthenticationSaslIam)(nil)).Elem()
}

func (o ServerlessClusterClientAuthenticationSaslIamOutput) ToServerlessClusterClientAuthenticationSaslIamOutput() ServerlessClusterClientAuthenticationSaslIamOutput {
	return o
}

func (o ServerlessClusterClientAuthenticationSaslIamOutput) ToServerlessClusterClientAuthenticationSaslIamOutputWithContext(ctx context.Context) ServerlessClusterClientAuthenticationSaslIamOutput {
	return o
}

func (o ServerlessClusterClientAuthenticationSaslIamOutput) ToServerlessClusterClientAuthenticationSaslIamPtrOutput() ServerlessClusterClientAuthenticationSaslIamPtrOutput {
	return o.ToServerlessClusterClientAuthenticationSaslIamPtrOutputWithContext(context.Background())
}

func (o ServerlessClusterClientAuthenticationSaslIamOutput) ToServerlessClusterClientAuthenticationSaslIamPtrOutputWithContext(ctx context.Context) ServerlessClusterClientAuthenticationSaslIamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServerlessClusterClientAuthenticationSaslIam) *ServerlessClusterClientAuthenticationSaslIam {
		return &v
	}).(ServerlessClusterClientAuthenticationSaslIamPtrOutput)
}

// Whether SASL/IAM authentication is enabled or not.
func (o ServerlessClusterClientAuthenticationSaslIamOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v ServerlessClusterClientAuthenticationSaslIam) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type ServerlessClusterClientAuthenticationSaslIamPtrOutput struct{ *pulumi.OutputState }

func (ServerlessClusterClientAuthenticationSaslIamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServerlessClusterClientAuthenticationSaslIam)(nil)).Elem()
}

func (o ServerlessClusterClientAuthenticationSaslIamPtrOutput) ToServerlessClusterClientAuthenticationSaslIamPtrOutput() ServerlessClusterClientAuthenticationSaslIamPtrOutput {
	return o
}

func (o ServerlessClusterClientAuthenticationSaslIamPtrOutput) ToServerlessClusterClientAuthenticationSaslIamPtrOutputWithContext(ctx context.Context) ServerlessClusterClientAuthenticationSaslIamPtrOutput {
	return o
}

func (o ServerlessClusterClientAuthenticationSaslIamPtrOutput) Elem() ServerlessClusterClientAuthenticationSaslIamOutput {
	return o.ApplyT(func(v *ServerlessClusterClientAuthenticationSaslIam) ServerlessClusterClientAuthenticationSaslIam {
		if v != nil {
			return *v
		}
		var ret ServerlessClusterClientAuthenticationSaslIam
		return ret
	}).(ServerlessClusterClientAuthenticationSaslIamOutput)
}

// Whether SASL/IAM authentication is enabled or not.
func (o ServerlessClusterClientAuthenticationSaslIamPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServerlessClusterClientAuthenticationSaslIam) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ServerlessClusterVpcConfig struct {
	// Specifies up to five security groups that control inbound and outbound traffic for the serverless cluster.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	// A list of subnets in at least two different Availability Zones that host your client applications.
	SubnetIds []string `pulumi:"subnetIds"`
}

// ServerlessClusterVpcConfigInput is an input type that accepts ServerlessClusterVpcConfigArgs and ServerlessClusterVpcConfigOutput values.
// You can construct a concrete instance of `ServerlessClusterVpcConfigInput` via:
//
//	ServerlessClusterVpcConfigArgs{...}
type ServerlessClusterVpcConfigInput interface {
	pulumi.Input

	ToServerlessClusterVpcConfigOutput() ServerlessClusterVpcConfigOutput
	ToServerlessClusterVpcConfigOutputWithContext(context.Context) ServerlessClusterVpcConfigOutput
}

type ServerlessClusterVpcConfigArgs struct {
	// Specifies up to five security groups that control inbound and outbound traffic for the serverless cluster.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	// A list of subnets in at least two different Availability Zones that host your client applications.
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
}

func (ServerlessClusterVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessClusterVpcConfig)(nil)).Elem()
}

func (i ServerlessClusterVpcConfigArgs) ToServerlessClusterVpcConfigOutput() ServerlessClusterVpcConfigOutput {
	return i.ToServerlessClusterVpcConfigOutputWithContext(context.Background())
}

func (i ServerlessClusterVpcConfigArgs) ToServerlessClusterVpcConfigOutputWithContext(ctx context.Context) ServerlessClusterVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessClusterVpcConfigOutput)
}

// ServerlessClusterVpcConfigArrayInput is an input type that accepts ServerlessClusterVpcConfigArray and ServerlessClusterVpcConfigArrayOutput values.
// You can construct a concrete instance of `ServerlessClusterVpcConfigArrayInput` via:
//
//	ServerlessClusterVpcConfigArray{ ServerlessClusterVpcConfigArgs{...} }
type ServerlessClusterVpcConfigArrayInput interface {
	pulumi.Input

	ToServerlessClusterVpcConfigArrayOutput() ServerlessClusterVpcConfigArrayOutput
	ToServerlessClusterVpcConfigArrayOutputWithContext(context.Context) ServerlessClusterVpcConfigArrayOutput
}

type ServerlessClusterVpcConfigArray []ServerlessClusterVpcConfigInput

func (ServerlessClusterVpcConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerlessClusterVpcConfig)(nil)).Elem()
}

func (i ServerlessClusterVpcConfigArray) ToServerlessClusterVpcConfigArrayOutput() ServerlessClusterVpcConfigArrayOutput {
	return i.ToServerlessClusterVpcConfigArrayOutputWithContext(context.Background())
}

func (i ServerlessClusterVpcConfigArray) ToServerlessClusterVpcConfigArrayOutputWithContext(ctx context.Context) ServerlessClusterVpcConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServerlessClusterVpcConfigArrayOutput)
}

type ServerlessClusterVpcConfigOutput struct{ *pulumi.OutputState }

func (ServerlessClusterVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServerlessClusterVpcConfig)(nil)).Elem()
}

func (o ServerlessClusterVpcConfigOutput) ToServerlessClusterVpcConfigOutput() ServerlessClusterVpcConfigOutput {
	return o
}

func (o ServerlessClusterVpcConfigOutput) ToServerlessClusterVpcConfigOutputWithContext(ctx context.Context) ServerlessClusterVpcConfigOutput {
	return o
}

// Specifies up to five security groups that control inbound and outbound traffic for the serverless cluster.
func (o ServerlessClusterVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerlessClusterVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// A list of subnets in at least two different Availability Zones that host your client applications.
func (o ServerlessClusterVpcConfigOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServerlessClusterVpcConfig) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

type ServerlessClusterVpcConfigArrayOutput struct{ *pulumi.OutputState }

func (ServerlessClusterVpcConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServerlessClusterVpcConfig)(nil)).Elem()
}

func (o ServerlessClusterVpcConfigArrayOutput) ToServerlessClusterVpcConfigArrayOutput() ServerlessClusterVpcConfigArrayOutput {
	return o
}

func (o ServerlessClusterVpcConfigArrayOutput) ToServerlessClusterVpcConfigArrayOutputWithContext(ctx context.Context) ServerlessClusterVpcConfigArrayOutput {
	return o
}

func (o ServerlessClusterVpcConfigArrayOutput) Index(i pulumi.IntInput) ServerlessClusterVpcConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServerlessClusterVpcConfig {
		return vs[0].([]ServerlessClusterVpcConfig)[vs[1].(int)]
	}).(ServerlessClusterVpcConfigOutput)
}

type GetBrokerNodesNodeInfoList struct {
	// Attached elastic network interface of the broker
	AttachedEniId string `pulumi:"attachedEniId"`
	// ID of the broker
	BrokerId float64 `pulumi:"brokerId"`
	// Client subnet to which this broker node belongs
	ClientSubnet string `pulumi:"clientSubnet"`
	// The client virtual private cloud (VPC) IP address
	ClientVpcIpAddress string `pulumi:"clientVpcIpAddress"`
	// Set of endpoints for accessing the broker. This does not include ports
	Endpoints []string `pulumi:"endpoints"`
	// ARN of the node
	NodeArn string `pulumi:"nodeArn"`
}

// GetBrokerNodesNodeInfoListInput is an input type that accepts GetBrokerNodesNodeInfoListArgs and GetBrokerNodesNodeInfoListOutput values.
// You can construct a concrete instance of `GetBrokerNodesNodeInfoListInput` via:
//
//	GetBrokerNodesNodeInfoListArgs{...}
type GetBrokerNodesNodeInfoListInput interface {
	pulumi.Input

	ToGetBrokerNodesNodeInfoListOutput() GetBrokerNodesNodeInfoListOutput
	ToGetBrokerNodesNodeInfoListOutputWithContext(context.Context) GetBrokerNodesNodeInfoListOutput
}

type GetBrokerNodesNodeInfoListArgs struct {
	// Attached elastic network interface of the broker
	AttachedEniId pulumi.StringInput `pulumi:"attachedEniId"`
	// ID of the broker
	BrokerId pulumi.Float64Input `pulumi:"brokerId"`
	// Client subnet to which this broker node belongs
	ClientSubnet pulumi.StringInput `pulumi:"clientSubnet"`
	// The client virtual private cloud (VPC) IP address
	ClientVpcIpAddress pulumi.StringInput `pulumi:"clientVpcIpAddress"`
	// Set of endpoints for accessing the broker. This does not include ports
	Endpoints pulumi.StringArrayInput `pulumi:"endpoints"`
	// ARN of the node
	NodeArn pulumi.StringInput `pulumi:"nodeArn"`
}

func (GetBrokerNodesNodeInfoListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrokerNodesNodeInfoList)(nil)).Elem()
}

func (i GetBrokerNodesNodeInfoListArgs) ToGetBrokerNodesNodeInfoListOutput() GetBrokerNodesNodeInfoListOutput {
	return i.ToGetBrokerNodesNodeInfoListOutputWithContext(context.Background())
}

func (i GetBrokerNodesNodeInfoListArgs) ToGetBrokerNodesNodeInfoListOutputWithContext(ctx context.Context) GetBrokerNodesNodeInfoListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrokerNodesNodeInfoListOutput)
}

// GetBrokerNodesNodeInfoListArrayInput is an input type that accepts GetBrokerNodesNodeInfoListArray and GetBrokerNodesNodeInfoListArrayOutput values.
// You can construct a concrete instance of `GetBrokerNodesNodeInfoListArrayInput` via:
//
//	GetBrokerNodesNodeInfoListArray{ GetBrokerNodesNodeInfoListArgs{...} }
type GetBrokerNodesNodeInfoListArrayInput interface {
	pulumi.Input

	ToGetBrokerNodesNodeInfoListArrayOutput() GetBrokerNodesNodeInfoListArrayOutput
	ToGetBrokerNodesNodeInfoListArrayOutputWithContext(context.Context) GetBrokerNodesNodeInfoListArrayOutput
}

type GetBrokerNodesNodeInfoListArray []GetBrokerNodesNodeInfoListInput

func (GetBrokerNodesNodeInfoListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrokerNodesNodeInfoList)(nil)).Elem()
}

func (i GetBrokerNodesNodeInfoListArray) ToGetBrokerNodesNodeInfoListArrayOutput() GetBrokerNodesNodeInfoListArrayOutput {
	return i.ToGetBrokerNodesNodeInfoListArrayOutputWithContext(context.Background())
}

func (i GetBrokerNodesNodeInfoListArray) ToGetBrokerNodesNodeInfoListArrayOutputWithContext(ctx context.Context) GetBrokerNodesNodeInfoListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetBrokerNodesNodeInfoListArrayOutput)
}

type GetBrokerNodesNodeInfoListOutput struct{ *pulumi.OutputState }

func (GetBrokerNodesNodeInfoListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBrokerNodesNodeInfoList)(nil)).Elem()
}

func (o GetBrokerNodesNodeInfoListOutput) ToGetBrokerNodesNodeInfoListOutput() GetBrokerNodesNodeInfoListOutput {
	return o
}

func (o GetBrokerNodesNodeInfoListOutput) ToGetBrokerNodesNodeInfoListOutputWithContext(ctx context.Context) GetBrokerNodesNodeInfoListOutput {
	return o
}

// Attached elastic network interface of the broker
func (o GetBrokerNodesNodeInfoListOutput) AttachedEniId() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrokerNodesNodeInfoList) string { return v.AttachedEniId }).(pulumi.StringOutput)
}

// ID of the broker
func (o GetBrokerNodesNodeInfoListOutput) BrokerId() pulumi.Float64Output {
	return o.ApplyT(func(v GetBrokerNodesNodeInfoList) float64 { return v.BrokerId }).(pulumi.Float64Output)
}

// Client subnet to which this broker node belongs
func (o GetBrokerNodesNodeInfoListOutput) ClientSubnet() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrokerNodesNodeInfoList) string { return v.ClientSubnet }).(pulumi.StringOutput)
}

// The client virtual private cloud (VPC) IP address
func (o GetBrokerNodesNodeInfoListOutput) ClientVpcIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrokerNodesNodeInfoList) string { return v.ClientVpcIpAddress }).(pulumi.StringOutput)
}

// Set of endpoints for accessing the broker. This does not include ports
func (o GetBrokerNodesNodeInfoListOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetBrokerNodesNodeInfoList) []string { return v.Endpoints }).(pulumi.StringArrayOutput)
}

// ARN of the node
func (o GetBrokerNodesNodeInfoListOutput) NodeArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetBrokerNodesNodeInfoList) string { return v.NodeArn }).(pulumi.StringOutput)
}

type GetBrokerNodesNodeInfoListArrayOutput struct{ *pulumi.OutputState }

func (GetBrokerNodesNodeInfoListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetBrokerNodesNodeInfoList)(nil)).Elem()
}

func (o GetBrokerNodesNodeInfoListArrayOutput) ToGetBrokerNodesNodeInfoListArrayOutput() GetBrokerNodesNodeInfoListArrayOutput {
	return o
}

func (o GetBrokerNodesNodeInfoListArrayOutput) ToGetBrokerNodesNodeInfoListArrayOutputWithContext(ctx context.Context) GetBrokerNodesNodeInfoListArrayOutput {
	return o
}

func (o GetBrokerNodesNodeInfoListArrayOutput) Index(i pulumi.IntInput) GetBrokerNodesNodeInfoListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetBrokerNodesNodeInfoList {
		return vs[0].([]GetBrokerNodesNodeInfoList)[vs[1].(int)]
	}).(GetBrokerNodesNodeInfoListOutput)
}

type GetClusterBrokerNodeGroupInfo struct {
	AzDistribution    string                                          `pulumi:"azDistribution"`
	ClientSubnets     []string                                        `pulumi:"clientSubnets"`
	ConnectivityInfos []GetClusterBrokerNodeGroupInfoConnectivityInfo `pulumi:"connectivityInfos"`
	InstanceType      string                                          `pulumi:"instanceType"`
	SecurityGroups    []string                                        `pulumi:"securityGroups"`
	StorageInfos      []GetClusterBrokerNodeGroupInfoStorageInfo      `pulumi:"storageInfos"`
}

// GetClusterBrokerNodeGroupInfoInput is an input type that accepts GetClusterBrokerNodeGroupInfoArgs and GetClusterBrokerNodeGroupInfoOutput values.
// You can construct a concrete instance of `GetClusterBrokerNodeGroupInfoInput` via:
//
//	GetClusterBrokerNodeGroupInfoArgs{...}
type GetClusterBrokerNodeGroupInfoInput interface {
	pulumi.Input

	ToGetClusterBrokerNodeGroupInfoOutput() GetClusterBrokerNodeGroupInfoOutput
	ToGetClusterBrokerNodeGroupInfoOutputWithContext(context.Context) GetClusterBrokerNodeGroupInfoOutput
}

type GetClusterBrokerNodeGroupInfoArgs struct {
	AzDistribution    pulumi.StringInput                                      `pulumi:"azDistribution"`
	ClientSubnets     pulumi.StringArrayInput                                 `pulumi:"clientSubnets"`
	ConnectivityInfos GetClusterBrokerNodeGroupInfoConnectivityInfoArrayInput `pulumi:"connectivityInfos"`
	InstanceType      pulumi.StringInput                                      `pulumi:"instanceType"`
	SecurityGroups    pulumi.StringArrayInput                                 `pulumi:"securityGroups"`
	StorageInfos      GetClusterBrokerNodeGroupInfoStorageInfoArrayInput      `pulumi:"storageInfos"`
}

func (GetClusterBrokerNodeGroupInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBrokerNodeGroupInfo)(nil)).Elem()
}

func (i GetClusterBrokerNodeGroupInfoArgs) ToGetClusterBrokerNodeGroupInfoOutput() GetClusterBrokerNodeGroupInfoOutput {
	return i.ToGetClusterBrokerNodeGroupInfoOutputWithContext(context.Background())
}

func (i GetClusterBrokerNodeGroupInfoArgs) ToGetClusterBrokerNodeGroupInfoOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBrokerNodeGroupInfoOutput)
}

// GetClusterBrokerNodeGroupInfoArrayInput is an input type that accepts GetClusterBrokerNodeGroupInfoArray and GetClusterBrokerNodeGroupInfoArrayOutput values.
// You can construct a concrete instance of `GetClusterBrokerNodeGroupInfoArrayInput` via:
//
//	GetClusterBrokerNodeGroupInfoArray{ GetClusterBrokerNodeGroupInfoArgs{...} }
type GetClusterBrokerNodeGroupInfoArrayInput interface {
	pulumi.Input

	ToGetClusterBrokerNodeGroupInfoArrayOutput() GetClusterBrokerNodeGroupInfoArrayOutput
	ToGetClusterBrokerNodeGroupInfoArrayOutputWithContext(context.Context) GetClusterBrokerNodeGroupInfoArrayOutput
}

type GetClusterBrokerNodeGroupInfoArray []GetClusterBrokerNodeGroupInfoInput

func (GetClusterBrokerNodeGroupInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterBrokerNodeGroupInfo)(nil)).Elem()
}

func (i GetClusterBrokerNodeGroupInfoArray) ToGetClusterBrokerNodeGroupInfoArrayOutput() GetClusterBrokerNodeGroupInfoArrayOutput {
	return i.ToGetClusterBrokerNodeGroupInfoArrayOutputWithContext(context.Background())
}

func (i GetClusterBrokerNodeGroupInfoArray) ToGetClusterBrokerNodeGroupInfoArrayOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBrokerNodeGroupInfoArrayOutput)
}

type GetClusterBrokerNodeGroupInfoOutput struct{ *pulumi.OutputState }

func (GetClusterBrokerNodeGroupInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBrokerNodeGroupInfo)(nil)).Elem()
}

func (o GetClusterBrokerNodeGroupInfoOutput) ToGetClusterBrokerNodeGroupInfoOutput() GetClusterBrokerNodeGroupInfoOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoOutput) ToGetClusterBrokerNodeGroupInfoOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoOutput) AzDistribution() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterBrokerNodeGroupInfo) string { return v.AzDistribution }).(pulumi.StringOutput)
}

func (o GetClusterBrokerNodeGroupInfoOutput) ClientSubnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterBrokerNodeGroupInfo) []string { return v.ClientSubnets }).(pulumi.StringArrayOutput)
}

func (o GetClusterBrokerNodeGroupInfoOutput) ConnectivityInfos() GetClusterBrokerNodeGroupInfoConnectivityInfoArrayOutput {
	return o.ApplyT(func(v GetClusterBrokerNodeGroupInfo) []GetClusterBrokerNodeGroupInfoConnectivityInfo {
		return v.ConnectivityInfos
	}).(GetClusterBrokerNodeGroupInfoConnectivityInfoArrayOutput)
}

func (o GetClusterBrokerNodeGroupInfoOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterBrokerNodeGroupInfo) string { return v.InstanceType }).(pulumi.StringOutput)
}

func (o GetClusterBrokerNodeGroupInfoOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClusterBrokerNodeGroupInfo) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o GetClusterBrokerNodeGroupInfoOutput) StorageInfos() GetClusterBrokerNodeGroupInfoStorageInfoArrayOutput {
	return o.ApplyT(func(v GetClusterBrokerNodeGroupInfo) []GetClusterBrokerNodeGroupInfoStorageInfo {
		return v.StorageInfos
	}).(GetClusterBrokerNodeGroupInfoStorageInfoArrayOutput)
}

type GetClusterBrokerNodeGroupInfoArrayOutput struct{ *pulumi.OutputState }

func (GetClusterBrokerNodeGroupInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterBrokerNodeGroupInfo)(nil)).Elem()
}

func (o GetClusterBrokerNodeGroupInfoArrayOutput) ToGetClusterBrokerNodeGroupInfoArrayOutput() GetClusterBrokerNodeGroupInfoArrayOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoArrayOutput) ToGetClusterBrokerNodeGroupInfoArrayOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoArrayOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoArrayOutput) Index(i pulumi.IntInput) GetClusterBrokerNodeGroupInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterBrokerNodeGroupInfo {
		return vs[0].([]GetClusterBrokerNodeGroupInfo)[vs[1].(int)]
	}).(GetClusterBrokerNodeGroupInfoOutput)
}

type GetClusterBrokerNodeGroupInfoConnectivityInfo struct {
	PublicAccesses    []GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess    `pulumi:"publicAccesses"`
	VpcConnectivities []GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity `pulumi:"vpcConnectivities"`
}

// GetClusterBrokerNodeGroupInfoConnectivityInfoInput is an input type that accepts GetClusterBrokerNodeGroupInfoConnectivityInfoArgs and GetClusterBrokerNodeGroupInfoConnectivityInfoOutput values.
// You can construct a concrete instance of `GetClusterBrokerNodeGroupInfoConnectivityInfoInput` via:
//
//	GetClusterBrokerNodeGroupInfoConnectivityInfoArgs{...}
type GetClusterBrokerNodeGroupInfoConnectivityInfoInput interface {
	pulumi.Input

	ToGetClusterBrokerNodeGroupInfoConnectivityInfoOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoOutput
	ToGetClusterBrokerNodeGroupInfoConnectivityInfoOutputWithContext(context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoOutput
}

type GetClusterBrokerNodeGroupInfoConnectivityInfoArgs struct {
	PublicAccesses    GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayInput    `pulumi:"publicAccesses"`
	VpcConnectivities GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayInput `pulumi:"vpcConnectivities"`
}

func (GetClusterBrokerNodeGroupInfoConnectivityInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBrokerNodeGroupInfoConnectivityInfo)(nil)).Elem()
}

func (i GetClusterBrokerNodeGroupInfoConnectivityInfoArgs) ToGetClusterBrokerNodeGroupInfoConnectivityInfoOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoOutput {
	return i.ToGetClusterBrokerNodeGroupInfoConnectivityInfoOutputWithContext(context.Background())
}

func (i GetClusterBrokerNodeGroupInfoConnectivityInfoArgs) ToGetClusterBrokerNodeGroupInfoConnectivityInfoOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBrokerNodeGroupInfoConnectivityInfoOutput)
}

// GetClusterBrokerNodeGroupInfoConnectivityInfoArrayInput is an input type that accepts GetClusterBrokerNodeGroupInfoConnectivityInfoArray and GetClusterBrokerNodeGroupInfoConnectivityInfoArrayOutput values.
// You can construct a concrete instance of `GetClusterBrokerNodeGroupInfoConnectivityInfoArrayInput` via:
//
//	GetClusterBrokerNodeGroupInfoConnectivityInfoArray{ GetClusterBrokerNodeGroupInfoConnectivityInfoArgs{...} }
type GetClusterBrokerNodeGroupInfoConnectivityInfoArrayInput interface {
	pulumi.Input

	ToGetClusterBrokerNodeGroupInfoConnectivityInfoArrayOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoArrayOutput
	ToGetClusterBrokerNodeGroupInfoConnectivityInfoArrayOutputWithContext(context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoArrayOutput
}

type GetClusterBrokerNodeGroupInfoConnectivityInfoArray []GetClusterBrokerNodeGroupInfoConnectivityInfoInput

func (GetClusterBrokerNodeGroupInfoConnectivityInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterBrokerNodeGroupInfoConnectivityInfo)(nil)).Elem()
}

func (i GetClusterBrokerNodeGroupInfoConnectivityInfoArray) ToGetClusterBrokerNodeGroupInfoConnectivityInfoArrayOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoArrayOutput {
	return i.ToGetClusterBrokerNodeGroupInfoConnectivityInfoArrayOutputWithContext(context.Background())
}

func (i GetClusterBrokerNodeGroupInfoConnectivityInfoArray) ToGetClusterBrokerNodeGroupInfoConnectivityInfoArrayOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBrokerNodeGroupInfoConnectivityInfoArrayOutput)
}

type GetClusterBrokerNodeGroupInfoConnectivityInfoOutput struct{ *pulumi.OutputState }

func (GetClusterBrokerNodeGroupInfoConnectivityInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBrokerNodeGroupInfoConnectivityInfo)(nil)).Elem()
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoOutput) ToGetClusterBrokerNodeGroupInfoConnectivityInfoOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoOutput) ToGetClusterBrokerNodeGroupInfoConnectivityInfoOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoOutput) PublicAccesses() GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayOutput {
	return o.ApplyT(func(v GetClusterBrokerNodeGroupInfoConnectivityInfo) []GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess {
		return v.PublicAccesses
	}).(GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayOutput)
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoOutput) VpcConnectivities() GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayOutput {
	return o.ApplyT(func(v GetClusterBrokerNodeGroupInfoConnectivityInfo) []GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity {
		return v.VpcConnectivities
	}).(GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayOutput)
}

type GetClusterBrokerNodeGroupInfoConnectivityInfoArrayOutput struct{ *pulumi.OutputState }

func (GetClusterBrokerNodeGroupInfoConnectivityInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterBrokerNodeGroupInfoConnectivityInfo)(nil)).Elem()
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoArrayOutput) ToGetClusterBrokerNodeGroupInfoConnectivityInfoArrayOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoArrayOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoArrayOutput) ToGetClusterBrokerNodeGroupInfoConnectivityInfoArrayOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoArrayOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoArrayOutput) Index(i pulumi.IntInput) GetClusterBrokerNodeGroupInfoConnectivityInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterBrokerNodeGroupInfoConnectivityInfo {
		return vs[0].([]GetClusterBrokerNodeGroupInfoConnectivityInfo)[vs[1].(int)]
	}).(GetClusterBrokerNodeGroupInfoConnectivityInfoOutput)
}

type GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess struct {
	Type string `pulumi:"type"`
}

// GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessInput is an input type that accepts GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArgs and GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput values.
// You can construct a concrete instance of `GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessInput` via:
//
//	GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArgs{...}
type GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessInput interface {
	pulumi.Input

	ToGetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput
	ToGetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutputWithContext(context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput
}

type GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArgs struct {
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess)(nil)).Elem()
}

func (i GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArgs) ToGetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput {
	return i.ToGetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutputWithContext(context.Background())
}

func (i GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArgs) ToGetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput)
}

// GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayInput is an input type that accepts GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArray and GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayOutput values.
// You can construct a concrete instance of `GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayInput` via:
//
//	GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArray{ GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArgs{...} }
type GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayInput interface {
	pulumi.Input

	ToGetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayOutput
	ToGetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayOutputWithContext(context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayOutput
}

type GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArray []GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessInput

func (GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess)(nil)).Elem()
}

func (i GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArray) ToGetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayOutput {
	return i.ToGetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayOutputWithContext(context.Background())
}

func (i GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArray) ToGetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayOutput)
}

type GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput struct{ *pulumi.OutputState }

func (GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess)(nil)).Elem()
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput) ToGetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput) ToGetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess) string { return v.Type }).(pulumi.StringOutput)
}

type GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayOutput struct{ *pulumi.OutputState }

func (GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess)(nil)).Elem()
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayOutput) ToGetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayOutput) ToGetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayOutput) Index(i pulumi.IntInput) GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess {
		return vs[0].([]GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccess)[vs[1].(int)]
	}).(GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput)
}

type GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity struct {
	ClientAuthentications []GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication `pulumi:"clientAuthentications"`
}

// GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityInput is an input type that accepts GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArgs and GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput values.
// You can construct a concrete instance of `GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityInput` via:
//
//	GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArgs{...}
type GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityInput interface {
	pulumi.Input

	ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput
	ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutputWithContext(context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput
}

type GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArgs struct {
	ClientAuthentications GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayInput `pulumi:"clientAuthentications"`
}

func (GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity)(nil)).Elem()
}

func (i GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArgs) ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput {
	return i.ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutputWithContext(context.Background())
}

func (i GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArgs) ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput)
}

// GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayInput is an input type that accepts GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArray and GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayOutput values.
// You can construct a concrete instance of `GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayInput` via:
//
//	GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArray{ GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArgs{...} }
type GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayInput interface {
	pulumi.Input

	ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayOutput
	ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayOutputWithContext(context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayOutput
}

type GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArray []GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityInput

func (GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity)(nil)).Elem()
}

func (i GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArray) ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayOutput {
	return i.ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayOutputWithContext(context.Background())
}

func (i GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArray) ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayOutput)
}

type GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput struct{ *pulumi.OutputState }

func (GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity)(nil)).Elem()
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput) ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput) ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput) ClientAuthentications() GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayOutput {
	return o.ApplyT(func(v GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity) []GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication {
		return v.ClientAuthentications
	}).(GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayOutput)
}

type GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayOutput struct{ *pulumi.OutputState }

func (GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity)(nil)).Elem()
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayOutput) ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayOutput) ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayOutput) Index(i pulumi.IntInput) GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity {
		return vs[0].([]GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivity)[vs[1].(int)]
	}).(GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput)
}

type GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication struct {
	Sasls []GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl `pulumi:"sasls"`
	Tls   bool                                                                                   `pulumi:"tls"`
}

// GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationInput is an input type that accepts GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArgs and GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput values.
// You can construct a concrete instance of `GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationInput` via:
//
//	GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArgs{...}
type GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationInput interface {
	pulumi.Input

	ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput
	ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutputWithContext(context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput
}

type GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArgs struct {
	Sasls GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayInput `pulumi:"sasls"`
	Tls   pulumi.BoolInput                                                                               `pulumi:"tls"`
}

func (GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication)(nil)).Elem()
}

func (i GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArgs) ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput {
	return i.ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutputWithContext(context.Background())
}

func (i GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArgs) ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput)
}

// GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayInput is an input type that accepts GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArray and GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayOutput values.
// You can construct a concrete instance of `GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayInput` via:
//
//	GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArray{ GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArgs{...} }
type GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayInput interface {
	pulumi.Input

	ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayOutput
	ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayOutputWithContext(context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayOutput
}

type GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArray []GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationInput

func (GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication)(nil)).Elem()
}

func (i GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArray) ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayOutput {
	return i.ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayOutputWithContext(context.Background())
}

func (i GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArray) ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayOutput)
}

type GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput struct{ *pulumi.OutputState }

func (GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication)(nil)).Elem()
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput) ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput) ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput) Sasls() GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayOutput {
	return o.ApplyT(func(v GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication) []GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl {
		return v.Sasls
	}).(GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayOutput)
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput) Tls() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication) bool {
		return v.Tls
	}).(pulumi.BoolOutput)
}

type GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayOutput struct{ *pulumi.OutputState }

func (GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication)(nil)).Elem()
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayOutput) ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayOutput) ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayOutput) Index(i pulumi.IntInput) GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication {
		return vs[0].([]GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthentication)[vs[1].(int)]
	}).(GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput)
}

type GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl struct {
	Iam   bool `pulumi:"iam"`
	Scram bool `pulumi:"scram"`
}

// GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslInput is an input type that accepts GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArgs and GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput values.
// You can construct a concrete instance of `GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslInput` via:
//
//	GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArgs{...}
type GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslInput interface {
	pulumi.Input

	ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput
	ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutputWithContext(context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput
}

type GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArgs struct {
	Iam   pulumi.BoolInput `pulumi:"iam"`
	Scram pulumi.BoolInput `pulumi:"scram"`
}

func (GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl)(nil)).Elem()
}

func (i GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArgs) ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput {
	return i.ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutputWithContext(context.Background())
}

func (i GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArgs) ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput)
}

// GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayInput is an input type that accepts GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArray and GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayOutput values.
// You can construct a concrete instance of `GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayInput` via:
//
//	GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArray{ GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArgs{...} }
type GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayInput interface {
	pulumi.Input

	ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayOutput
	ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayOutputWithContext(context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayOutput
}

type GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArray []GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslInput

func (GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl)(nil)).Elem()
}

func (i GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArray) ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayOutput {
	return i.ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayOutputWithContext(context.Background())
}

func (i GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArray) ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayOutput)
}

type GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput struct{ *pulumi.OutputState }

func (GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl)(nil)).Elem()
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput) ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput) ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput) Iam() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl) bool {
		return v.Iam
	}).(pulumi.BoolOutput)
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput) Scram() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl) bool {
		return v.Scram
	}).(pulumi.BoolOutput)
}

type GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayOutput struct{ *pulumi.OutputState }

func (GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl)(nil)).Elem()
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayOutput) ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayOutput() GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayOutput) ToGetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayOutput) Index(i pulumi.IntInput) GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl {
		return vs[0].([]GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSasl)[vs[1].(int)]
	}).(GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput)
}

type GetClusterBrokerNodeGroupInfoStorageInfo struct {
	EbsStorageInfos []GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo `pulumi:"ebsStorageInfos"`
}

// GetClusterBrokerNodeGroupInfoStorageInfoInput is an input type that accepts GetClusterBrokerNodeGroupInfoStorageInfoArgs and GetClusterBrokerNodeGroupInfoStorageInfoOutput values.
// You can construct a concrete instance of `GetClusterBrokerNodeGroupInfoStorageInfoInput` via:
//
//	GetClusterBrokerNodeGroupInfoStorageInfoArgs{...}
type GetClusterBrokerNodeGroupInfoStorageInfoInput interface {
	pulumi.Input

	ToGetClusterBrokerNodeGroupInfoStorageInfoOutput() GetClusterBrokerNodeGroupInfoStorageInfoOutput
	ToGetClusterBrokerNodeGroupInfoStorageInfoOutputWithContext(context.Context) GetClusterBrokerNodeGroupInfoStorageInfoOutput
}

type GetClusterBrokerNodeGroupInfoStorageInfoArgs struct {
	EbsStorageInfos GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayInput `pulumi:"ebsStorageInfos"`
}

func (GetClusterBrokerNodeGroupInfoStorageInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBrokerNodeGroupInfoStorageInfo)(nil)).Elem()
}

func (i GetClusterBrokerNodeGroupInfoStorageInfoArgs) ToGetClusterBrokerNodeGroupInfoStorageInfoOutput() GetClusterBrokerNodeGroupInfoStorageInfoOutput {
	return i.ToGetClusterBrokerNodeGroupInfoStorageInfoOutputWithContext(context.Background())
}

func (i GetClusterBrokerNodeGroupInfoStorageInfoArgs) ToGetClusterBrokerNodeGroupInfoStorageInfoOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoStorageInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBrokerNodeGroupInfoStorageInfoOutput)
}

// GetClusterBrokerNodeGroupInfoStorageInfoArrayInput is an input type that accepts GetClusterBrokerNodeGroupInfoStorageInfoArray and GetClusterBrokerNodeGroupInfoStorageInfoArrayOutput values.
// You can construct a concrete instance of `GetClusterBrokerNodeGroupInfoStorageInfoArrayInput` via:
//
//	GetClusterBrokerNodeGroupInfoStorageInfoArray{ GetClusterBrokerNodeGroupInfoStorageInfoArgs{...} }
type GetClusterBrokerNodeGroupInfoStorageInfoArrayInput interface {
	pulumi.Input

	ToGetClusterBrokerNodeGroupInfoStorageInfoArrayOutput() GetClusterBrokerNodeGroupInfoStorageInfoArrayOutput
	ToGetClusterBrokerNodeGroupInfoStorageInfoArrayOutputWithContext(context.Context) GetClusterBrokerNodeGroupInfoStorageInfoArrayOutput
}

type GetClusterBrokerNodeGroupInfoStorageInfoArray []GetClusterBrokerNodeGroupInfoStorageInfoInput

func (GetClusterBrokerNodeGroupInfoStorageInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterBrokerNodeGroupInfoStorageInfo)(nil)).Elem()
}

func (i GetClusterBrokerNodeGroupInfoStorageInfoArray) ToGetClusterBrokerNodeGroupInfoStorageInfoArrayOutput() GetClusterBrokerNodeGroupInfoStorageInfoArrayOutput {
	return i.ToGetClusterBrokerNodeGroupInfoStorageInfoArrayOutputWithContext(context.Background())
}

func (i GetClusterBrokerNodeGroupInfoStorageInfoArray) ToGetClusterBrokerNodeGroupInfoStorageInfoArrayOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoStorageInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBrokerNodeGroupInfoStorageInfoArrayOutput)
}

type GetClusterBrokerNodeGroupInfoStorageInfoOutput struct{ *pulumi.OutputState }

func (GetClusterBrokerNodeGroupInfoStorageInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBrokerNodeGroupInfoStorageInfo)(nil)).Elem()
}

func (o GetClusterBrokerNodeGroupInfoStorageInfoOutput) ToGetClusterBrokerNodeGroupInfoStorageInfoOutput() GetClusterBrokerNodeGroupInfoStorageInfoOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoStorageInfoOutput) ToGetClusterBrokerNodeGroupInfoStorageInfoOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoStorageInfoOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoStorageInfoOutput) EbsStorageInfos() GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayOutput {
	return o.ApplyT(func(v GetClusterBrokerNodeGroupInfoStorageInfo) []GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo {
		return v.EbsStorageInfos
	}).(GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayOutput)
}

type GetClusterBrokerNodeGroupInfoStorageInfoArrayOutput struct{ *pulumi.OutputState }

func (GetClusterBrokerNodeGroupInfoStorageInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterBrokerNodeGroupInfoStorageInfo)(nil)).Elem()
}

func (o GetClusterBrokerNodeGroupInfoStorageInfoArrayOutput) ToGetClusterBrokerNodeGroupInfoStorageInfoArrayOutput() GetClusterBrokerNodeGroupInfoStorageInfoArrayOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoStorageInfoArrayOutput) ToGetClusterBrokerNodeGroupInfoStorageInfoArrayOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoStorageInfoArrayOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoStorageInfoArrayOutput) Index(i pulumi.IntInput) GetClusterBrokerNodeGroupInfoStorageInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterBrokerNodeGroupInfoStorageInfo {
		return vs[0].([]GetClusterBrokerNodeGroupInfoStorageInfo)[vs[1].(int)]
	}).(GetClusterBrokerNodeGroupInfoStorageInfoOutput)
}

type GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo struct {
	ProvisionedThroughputs []GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput `pulumi:"provisionedThroughputs"`
	VolumeSize             int                                                                           `pulumi:"volumeSize"`
}

// GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoInput is an input type that accepts GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArgs and GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput values.
// You can construct a concrete instance of `GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoInput` via:
//
//	GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArgs{...}
type GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoInput interface {
	pulumi.Input

	ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput() GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput
	ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutputWithContext(context.Context) GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput
}

type GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArgs struct {
	ProvisionedThroughputs GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayInput `pulumi:"provisionedThroughputs"`
	VolumeSize             pulumi.IntInput                                                                       `pulumi:"volumeSize"`
}

func (GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo)(nil)).Elem()
}

func (i GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArgs) ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput() GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput {
	return i.ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutputWithContext(context.Background())
}

func (i GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArgs) ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput)
}

// GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayInput is an input type that accepts GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArray and GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayOutput values.
// You can construct a concrete instance of `GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayInput` via:
//
//	GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArray{ GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArgs{...} }
type GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayInput interface {
	pulumi.Input

	ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayOutput() GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayOutput
	ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayOutputWithContext(context.Context) GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayOutput
}

type GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArray []GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoInput

func (GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo)(nil)).Elem()
}

func (i GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArray) ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayOutput() GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayOutput {
	return i.ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayOutputWithContext(context.Background())
}

func (i GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArray) ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayOutput)
}

type GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput struct{ *pulumi.OutputState }

func (GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo)(nil)).Elem()
}

func (o GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput) ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput() GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput) ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput) ProvisionedThroughputs() GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayOutput {
	return o.ApplyT(func(v GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo) []GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput {
		return v.ProvisionedThroughputs
	}).(GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayOutput)
}

func (o GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo) int { return v.VolumeSize }).(pulumi.IntOutput)
}

type GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayOutput struct{ *pulumi.OutputState }

func (GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo)(nil)).Elem()
}

func (o GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayOutput) ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayOutput() GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayOutput) ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayOutput) Index(i pulumi.IntInput) GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo {
		return vs[0].([]GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfo)[vs[1].(int)]
	}).(GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput)
}

type GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput struct {
	Enabled          bool `pulumi:"enabled"`
	VolumeThroughput int  `pulumi:"volumeThroughput"`
}

// GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputInput is an input type that accepts GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs and GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput values.
// You can construct a concrete instance of `GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputInput` via:
//
//	GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs{...}
type GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputInput interface {
	pulumi.Input

	ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput() GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput
	ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutputWithContext(context.Context) GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput
}

type GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs struct {
	Enabled          pulumi.BoolInput `pulumi:"enabled"`
	VolumeThroughput pulumi.IntInput  `pulumi:"volumeThroughput"`
}

func (GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput)(nil)).Elem()
}

func (i GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs) ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput() GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput {
	return i.ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutputWithContext(context.Background())
}

func (i GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs) ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput)
}

// GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayInput is an input type that accepts GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArray and GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayOutput values.
// You can construct a concrete instance of `GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayInput` via:
//
//	GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArray{ GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs{...} }
type GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayInput interface {
	pulumi.Input

	ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayOutput() GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayOutput
	ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayOutputWithContext(context.Context) GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayOutput
}

type GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArray []GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputInput

func (GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput)(nil)).Elem()
}

func (i GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArray) ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayOutput() GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayOutput {
	return i.ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayOutputWithContext(context.Background())
}

func (i GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArray) ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayOutput)
}

type GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput struct{ *pulumi.OutputState }

func (GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput)(nil)).Elem()
}

func (o GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput) ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput() GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput) ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput) bool {
		return v.Enabled
	}).(pulumi.BoolOutput)
}

func (o GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput) VolumeThroughput() pulumi.IntOutput {
	return o.ApplyT(func(v GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput) int {
		return v.VolumeThroughput
	}).(pulumi.IntOutput)
}

type GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayOutput struct{ *pulumi.OutputState }

func (GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput)(nil)).Elem()
}

func (o GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayOutput) ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayOutput() GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayOutput) ToGetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayOutputWithContext(ctx context.Context) GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayOutput {
	return o
}

func (o GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayOutput) Index(i pulumi.IntInput) GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput {
		return vs[0].([]GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughput)[vs[1].(int)]
	}).(GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBrokerNodeGroupInfoInput)(nil)).Elem(), ClusterBrokerNodeGroupInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBrokerNodeGroupInfoPtrInput)(nil)).Elem(), ClusterBrokerNodeGroupInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBrokerNodeGroupInfoConnectivityInfoInput)(nil)).Elem(), ClusterBrokerNodeGroupInfoConnectivityInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBrokerNodeGroupInfoConnectivityInfoPtrInput)(nil)).Elem(), ClusterBrokerNodeGroupInfoConnectivityInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessInput)(nil)).Elem(), ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrInput)(nil)).Elem(), ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityInput)(nil)).Elem(), ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrInput)(nil)).Elem(), ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationInput)(nil)).Elem(), ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrInput)(nil)).Elem(), ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslInput)(nil)).Elem(), ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrInput)(nil)).Elem(), ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBrokerNodeGroupInfoStorageInfoInput)(nil)).Elem(), ClusterBrokerNodeGroupInfoStorageInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBrokerNodeGroupInfoStorageInfoPtrInput)(nil)).Elem(), ClusterBrokerNodeGroupInfoStorageInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoInput)(nil)).Elem(), ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrInput)(nil)).Elem(), ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputInput)(nil)).Elem(), ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrInput)(nil)).Elem(), ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClientAuthenticationInput)(nil)).Elem(), ClusterClientAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClientAuthenticationPtrInput)(nil)).Elem(), ClusterClientAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClientAuthenticationSaslInput)(nil)).Elem(), ClusterClientAuthenticationSaslArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClientAuthenticationSaslPtrInput)(nil)).Elem(), ClusterClientAuthenticationSaslArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClientAuthenticationTlsInput)(nil)).Elem(), ClusterClientAuthenticationTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterClientAuthenticationTlsPtrInput)(nil)).Elem(), ClusterClientAuthenticationTlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConfigurationInfoInput)(nil)).Elem(), ClusterConfigurationInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterConfigurationInfoPtrInput)(nil)).Elem(), ClusterConfigurationInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEncryptionInfoInput)(nil)).Elem(), ClusterEncryptionInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEncryptionInfoPtrInput)(nil)).Elem(), ClusterEncryptionInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEncryptionInfoEncryptionInTransitInput)(nil)).Elem(), ClusterEncryptionInfoEncryptionInTransitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEncryptionInfoEncryptionInTransitPtrInput)(nil)).Elem(), ClusterEncryptionInfoEncryptionInTransitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLoggingInfoInput)(nil)).Elem(), ClusterLoggingInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLoggingInfoPtrInput)(nil)).Elem(), ClusterLoggingInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLoggingInfoBrokerLogsInput)(nil)).Elem(), ClusterLoggingInfoBrokerLogsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLoggingInfoBrokerLogsPtrInput)(nil)).Elem(), ClusterLoggingInfoBrokerLogsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLoggingInfoBrokerLogsCloudwatchLogsInput)(nil)).Elem(), ClusterLoggingInfoBrokerLogsCloudwatchLogsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrInput)(nil)).Elem(), ClusterLoggingInfoBrokerLogsCloudwatchLogsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLoggingInfoBrokerLogsFirehoseInput)(nil)).Elem(), ClusterLoggingInfoBrokerLogsFirehoseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLoggingInfoBrokerLogsFirehosePtrInput)(nil)).Elem(), ClusterLoggingInfoBrokerLogsFirehoseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLoggingInfoBrokerLogsS3Input)(nil)).Elem(), ClusterLoggingInfoBrokerLogsS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterLoggingInfoBrokerLogsS3PtrInput)(nil)).Elem(), ClusterLoggingInfoBrokerLogsS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterOpenMonitoringInput)(nil)).Elem(), ClusterOpenMonitoringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterOpenMonitoringPtrInput)(nil)).Elem(), ClusterOpenMonitoringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterOpenMonitoringPrometheusInput)(nil)).Elem(), ClusterOpenMonitoringPrometheusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterOpenMonitoringPrometheusPtrInput)(nil)).Elem(), ClusterOpenMonitoringPrometheusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterOpenMonitoringPrometheusJmxExporterInput)(nil)).Elem(), ClusterOpenMonitoringPrometheusJmxExporterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterOpenMonitoringPrometheusJmxExporterPtrInput)(nil)).Elem(), ClusterOpenMonitoringPrometheusJmxExporterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterOpenMonitoringPrometheusNodeExporterInput)(nil)).Elem(), ClusterOpenMonitoringPrometheusNodeExporterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterOpenMonitoringPrometheusNodeExporterPtrInput)(nil)).Elem(), ClusterOpenMonitoringPrometheusNodeExporterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicatorKafkaClusterInput)(nil)).Elem(), ReplicatorKafkaClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicatorKafkaClusterArrayInput)(nil)).Elem(), ReplicatorKafkaClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicatorKafkaClusterAmazonMskClusterInput)(nil)).Elem(), ReplicatorKafkaClusterAmazonMskClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicatorKafkaClusterVpcConfigInput)(nil)).Elem(), ReplicatorKafkaClusterVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicatorReplicationInfoListInput)(nil)).Elem(), ReplicatorReplicationInfoListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicatorReplicationInfoListPtrInput)(nil)).Elem(), ReplicatorReplicationInfoListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicatorReplicationInfoListConsumerGroupReplicationInput)(nil)).Elem(), ReplicatorReplicationInfoListConsumerGroupReplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicatorReplicationInfoListConsumerGroupReplicationArrayInput)(nil)).Elem(), ReplicatorReplicationInfoListConsumerGroupReplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicatorReplicationInfoListTopicReplicationInput)(nil)).Elem(), ReplicatorReplicationInfoListTopicReplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicatorReplicationInfoListTopicReplicationArrayInput)(nil)).Elem(), ReplicatorReplicationInfoListTopicReplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicatorReplicationInfoListTopicReplicationStartingPositionInput)(nil)).Elem(), ReplicatorReplicationInfoListTopicReplicationStartingPositionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrInput)(nil)).Elem(), ReplicatorReplicationInfoListTopicReplicationStartingPositionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationInput)(nil)).Elem(), ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrInput)(nil)).Elem(), ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessClusterClientAuthenticationInput)(nil)).Elem(), ServerlessClusterClientAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessClusterClientAuthenticationPtrInput)(nil)).Elem(), ServerlessClusterClientAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessClusterClientAuthenticationSaslInput)(nil)).Elem(), ServerlessClusterClientAuthenticationSaslArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessClusterClientAuthenticationSaslPtrInput)(nil)).Elem(), ServerlessClusterClientAuthenticationSaslArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessClusterClientAuthenticationSaslIamInput)(nil)).Elem(), ServerlessClusterClientAuthenticationSaslIamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessClusterClientAuthenticationSaslIamPtrInput)(nil)).Elem(), ServerlessClusterClientAuthenticationSaslIamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessClusterVpcConfigInput)(nil)).Elem(), ServerlessClusterVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServerlessClusterVpcConfigArrayInput)(nil)).Elem(), ServerlessClusterVpcConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrokerNodesNodeInfoListInput)(nil)).Elem(), GetBrokerNodesNodeInfoListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetBrokerNodesNodeInfoListArrayInput)(nil)).Elem(), GetBrokerNodesNodeInfoListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterBrokerNodeGroupInfoInput)(nil)).Elem(), GetClusterBrokerNodeGroupInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterBrokerNodeGroupInfoArrayInput)(nil)).Elem(), GetClusterBrokerNodeGroupInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterBrokerNodeGroupInfoConnectivityInfoInput)(nil)).Elem(), GetClusterBrokerNodeGroupInfoConnectivityInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterBrokerNodeGroupInfoConnectivityInfoArrayInput)(nil)).Elem(), GetClusterBrokerNodeGroupInfoConnectivityInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessInput)(nil)).Elem(), GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayInput)(nil)).Elem(), GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityInput)(nil)).Elem(), GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayInput)(nil)).Elem(), GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationInput)(nil)).Elem(), GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayInput)(nil)).Elem(), GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslInput)(nil)).Elem(), GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayInput)(nil)).Elem(), GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterBrokerNodeGroupInfoStorageInfoInput)(nil)).Elem(), GetClusterBrokerNodeGroupInfoStorageInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterBrokerNodeGroupInfoStorageInfoArrayInput)(nil)).Elem(), GetClusterBrokerNodeGroupInfoStorageInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoInput)(nil)).Elem(), GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayInput)(nil)).Elem(), GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputInput)(nil)).Elem(), GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayInput)(nil)).Elem(), GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArray{})
	pulumi.RegisterOutputType(ClusterBrokerNodeGroupInfoOutput{})
	pulumi.RegisterOutputType(ClusterBrokerNodeGroupInfoPtrOutput{})
	pulumi.RegisterOutputType(ClusterBrokerNodeGroupInfoConnectivityInfoOutput{})
	pulumi.RegisterOutputType(ClusterBrokerNodeGroupInfoConnectivityInfoPtrOutput{})
	pulumi.RegisterOutputType(ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput{})
	pulumi.RegisterOutputType(ClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessPtrOutput{})
	pulumi.RegisterOutputType(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput{})
	pulumi.RegisterOutputType(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityPtrOutput{})
	pulumi.RegisterOutputType(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput{})
	pulumi.RegisterOutputType(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput{})
	pulumi.RegisterOutputType(ClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslPtrOutput{})
	pulumi.RegisterOutputType(ClusterBrokerNodeGroupInfoStorageInfoOutput{})
	pulumi.RegisterOutputType(ClusterBrokerNodeGroupInfoStorageInfoPtrOutput{})
	pulumi.RegisterOutputType(ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput{})
	pulumi.RegisterOutputType(ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoPtrOutput{})
	pulumi.RegisterOutputType(ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput{})
	pulumi.RegisterOutputType(ClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputPtrOutput{})
	pulumi.RegisterOutputType(ClusterClientAuthenticationOutput{})
	pulumi.RegisterOutputType(ClusterClientAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(ClusterClientAuthenticationSaslOutput{})
	pulumi.RegisterOutputType(ClusterClientAuthenticationSaslPtrOutput{})
	pulumi.RegisterOutputType(ClusterClientAuthenticationTlsOutput{})
	pulumi.RegisterOutputType(ClusterClientAuthenticationTlsPtrOutput{})
	pulumi.RegisterOutputType(ClusterConfigurationInfoOutput{})
	pulumi.RegisterOutputType(ClusterConfigurationInfoPtrOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionInfoOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionInfoPtrOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionInfoEncryptionInTransitOutput{})
	pulumi.RegisterOutputType(ClusterEncryptionInfoEncryptionInTransitPtrOutput{})
	pulumi.RegisterOutputType(ClusterLoggingInfoOutput{})
	pulumi.RegisterOutputType(ClusterLoggingInfoPtrOutput{})
	pulumi.RegisterOutputType(ClusterLoggingInfoBrokerLogsOutput{})
	pulumi.RegisterOutputType(ClusterLoggingInfoBrokerLogsPtrOutput{})
	pulumi.RegisterOutputType(ClusterLoggingInfoBrokerLogsCloudwatchLogsOutput{})
	pulumi.RegisterOutputType(ClusterLoggingInfoBrokerLogsCloudwatchLogsPtrOutput{})
	pulumi.RegisterOutputType(ClusterLoggingInfoBrokerLogsFirehoseOutput{})
	pulumi.RegisterOutputType(ClusterLoggingInfoBrokerLogsFirehosePtrOutput{})
	pulumi.RegisterOutputType(ClusterLoggingInfoBrokerLogsS3Output{})
	pulumi.RegisterOutputType(ClusterLoggingInfoBrokerLogsS3PtrOutput{})
	pulumi.RegisterOutputType(ClusterOpenMonitoringOutput{})
	pulumi.RegisterOutputType(ClusterOpenMonitoringPtrOutput{})
	pulumi.RegisterOutputType(ClusterOpenMonitoringPrometheusOutput{})
	pulumi.RegisterOutputType(ClusterOpenMonitoringPrometheusPtrOutput{})
	pulumi.RegisterOutputType(ClusterOpenMonitoringPrometheusJmxExporterOutput{})
	pulumi.RegisterOutputType(ClusterOpenMonitoringPrometheusJmxExporterPtrOutput{})
	pulumi.RegisterOutputType(ClusterOpenMonitoringPrometheusNodeExporterOutput{})
	pulumi.RegisterOutputType(ClusterOpenMonitoringPrometheusNodeExporterPtrOutput{})
	pulumi.RegisterOutputType(ReplicatorKafkaClusterOutput{})
	pulumi.RegisterOutputType(ReplicatorKafkaClusterArrayOutput{})
	pulumi.RegisterOutputType(ReplicatorKafkaClusterAmazonMskClusterOutput{})
	pulumi.RegisterOutputType(ReplicatorKafkaClusterVpcConfigOutput{})
	pulumi.RegisterOutputType(ReplicatorReplicationInfoListOutput{})
	pulumi.RegisterOutputType(ReplicatorReplicationInfoListPtrOutput{})
	pulumi.RegisterOutputType(ReplicatorReplicationInfoListConsumerGroupReplicationOutput{})
	pulumi.RegisterOutputType(ReplicatorReplicationInfoListConsumerGroupReplicationArrayOutput{})
	pulumi.RegisterOutputType(ReplicatorReplicationInfoListTopicReplicationOutput{})
	pulumi.RegisterOutputType(ReplicatorReplicationInfoListTopicReplicationArrayOutput{})
	pulumi.RegisterOutputType(ReplicatorReplicationInfoListTopicReplicationStartingPositionOutput{})
	pulumi.RegisterOutputType(ReplicatorReplicationInfoListTopicReplicationStartingPositionPtrOutput{})
	pulumi.RegisterOutputType(ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationOutput{})
	pulumi.RegisterOutputType(ReplicatorReplicationInfoListTopicReplicationTopicNameConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServerlessClusterClientAuthenticationOutput{})
	pulumi.RegisterOutputType(ServerlessClusterClientAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(ServerlessClusterClientAuthenticationSaslOutput{})
	pulumi.RegisterOutputType(ServerlessClusterClientAuthenticationSaslPtrOutput{})
	pulumi.RegisterOutputType(ServerlessClusterClientAuthenticationSaslIamOutput{})
	pulumi.RegisterOutputType(ServerlessClusterClientAuthenticationSaslIamPtrOutput{})
	pulumi.RegisterOutputType(ServerlessClusterVpcConfigOutput{})
	pulumi.RegisterOutputType(ServerlessClusterVpcConfigArrayOutput{})
	pulumi.RegisterOutputType(GetBrokerNodesNodeInfoListOutput{})
	pulumi.RegisterOutputType(GetBrokerNodesNodeInfoListArrayOutput{})
	pulumi.RegisterOutputType(GetClusterBrokerNodeGroupInfoOutput{})
	pulumi.RegisterOutputType(GetClusterBrokerNodeGroupInfoArrayOutput{})
	pulumi.RegisterOutputType(GetClusterBrokerNodeGroupInfoConnectivityInfoOutput{})
	pulumi.RegisterOutputType(GetClusterBrokerNodeGroupInfoConnectivityInfoArrayOutput{})
	pulumi.RegisterOutputType(GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessOutput{})
	pulumi.RegisterOutputType(GetClusterBrokerNodeGroupInfoConnectivityInfoPublicAccessArrayOutput{})
	pulumi.RegisterOutputType(GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityOutput{})
	pulumi.RegisterOutputType(GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityArrayOutput{})
	pulumi.RegisterOutputType(GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationOutput{})
	pulumi.RegisterOutputType(GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationArrayOutput{})
	pulumi.RegisterOutputType(GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslOutput{})
	pulumi.RegisterOutputType(GetClusterBrokerNodeGroupInfoConnectivityInfoVpcConnectivityClientAuthenticationSaslArrayOutput{})
	pulumi.RegisterOutputType(GetClusterBrokerNodeGroupInfoStorageInfoOutput{})
	pulumi.RegisterOutputType(GetClusterBrokerNodeGroupInfoStorageInfoArrayOutput{})
	pulumi.RegisterOutputType(GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoOutput{})
	pulumi.RegisterOutputType(GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoArrayOutput{})
	pulumi.RegisterOutputType(GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputOutput{})
	pulumi.RegisterOutputType(GetClusterBrokerNodeGroupInfoStorageInfoEbsStorageInfoProvisionedThroughputArrayOutput{})
}
