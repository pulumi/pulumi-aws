// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package codedeploy

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type DeploymentConfigMinimumHealthyHosts struct {
	// The type can either be `FLEET_PERCENT` or `HOST_COUNT`.
	Type *string `pulumi:"type"`
	// The value when the type is `FLEET_PERCENT` represents the minimum number of healthy instances as
	// a percentage of the total number of instances in the deployment. If you specify FLEET_PERCENT, at the start of the
	// deployment, AWS CodeDeploy converts the percentage to the equivalent number of instance and rounds up fractional instances.
	// When the type is `HOST_COUNT`, the value represents the minimum number of healthy instances as an absolute value.
	Value *int `pulumi:"value"`
}

// DeploymentConfigMinimumHealthyHostsInput is an input type that accepts DeploymentConfigMinimumHealthyHostsArgs and DeploymentConfigMinimumHealthyHostsOutput values.
// You can construct a concrete instance of `DeploymentConfigMinimumHealthyHostsInput` via:
//
// 		 DeploymentConfigMinimumHealthyHostsArgs{...}
//
type DeploymentConfigMinimumHealthyHostsInput interface {
	pulumi.Input

	ToDeploymentConfigMinimumHealthyHostsOutput() DeploymentConfigMinimumHealthyHostsOutput
	ToDeploymentConfigMinimumHealthyHostsOutputWithContext(context.Context) DeploymentConfigMinimumHealthyHostsOutput
}

type DeploymentConfigMinimumHealthyHostsArgs struct {
	// The type can either be `FLEET_PERCENT` or `HOST_COUNT`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The value when the type is `FLEET_PERCENT` represents the minimum number of healthy instances as
	// a percentage of the total number of instances in the deployment. If you specify FLEET_PERCENT, at the start of the
	// deployment, AWS CodeDeploy converts the percentage to the equivalent number of instance and rounds up fractional instances.
	// When the type is `HOST_COUNT`, the value represents the minimum number of healthy instances as an absolute value.
	Value pulumi.IntPtrInput `pulumi:"value"`
}

func (DeploymentConfigMinimumHealthyHostsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentConfigMinimumHealthyHosts)(nil)).Elem()
}

func (i DeploymentConfigMinimumHealthyHostsArgs) ToDeploymentConfigMinimumHealthyHostsOutput() DeploymentConfigMinimumHealthyHostsOutput {
	return i.ToDeploymentConfigMinimumHealthyHostsOutputWithContext(context.Background())
}

func (i DeploymentConfigMinimumHealthyHostsArgs) ToDeploymentConfigMinimumHealthyHostsOutputWithContext(ctx context.Context) DeploymentConfigMinimumHealthyHostsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentConfigMinimumHealthyHostsOutput)
}

func (i DeploymentConfigMinimumHealthyHostsArgs) ToDeploymentConfigMinimumHealthyHostsPtrOutput() DeploymentConfigMinimumHealthyHostsPtrOutput {
	return i.ToDeploymentConfigMinimumHealthyHostsPtrOutputWithContext(context.Background())
}

func (i DeploymentConfigMinimumHealthyHostsArgs) ToDeploymentConfigMinimumHealthyHostsPtrOutputWithContext(ctx context.Context) DeploymentConfigMinimumHealthyHostsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentConfigMinimumHealthyHostsOutput).ToDeploymentConfigMinimumHealthyHostsPtrOutputWithContext(ctx)
}

// DeploymentConfigMinimumHealthyHostsPtrInput is an input type that accepts DeploymentConfigMinimumHealthyHostsArgs, DeploymentConfigMinimumHealthyHostsPtr and DeploymentConfigMinimumHealthyHostsPtrOutput values.
// You can construct a concrete instance of `DeploymentConfigMinimumHealthyHostsPtrInput` via:
//
// 		 DeploymentConfigMinimumHealthyHostsArgs{...}
//
//  or:
//
// 		 nil
//
type DeploymentConfigMinimumHealthyHostsPtrInput interface {
	pulumi.Input

	ToDeploymentConfigMinimumHealthyHostsPtrOutput() DeploymentConfigMinimumHealthyHostsPtrOutput
	ToDeploymentConfigMinimumHealthyHostsPtrOutputWithContext(context.Context) DeploymentConfigMinimumHealthyHostsPtrOutput
}

type deploymentConfigMinimumHealthyHostsPtrType DeploymentConfigMinimumHealthyHostsArgs

func DeploymentConfigMinimumHealthyHostsPtr(v *DeploymentConfigMinimumHealthyHostsArgs) DeploymentConfigMinimumHealthyHostsPtrInput {
	return (*deploymentConfigMinimumHealthyHostsPtrType)(v)
}

func (*deploymentConfigMinimumHealthyHostsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentConfigMinimumHealthyHosts)(nil)).Elem()
}

func (i *deploymentConfigMinimumHealthyHostsPtrType) ToDeploymentConfigMinimumHealthyHostsPtrOutput() DeploymentConfigMinimumHealthyHostsPtrOutput {
	return i.ToDeploymentConfigMinimumHealthyHostsPtrOutputWithContext(context.Background())
}

func (i *deploymentConfigMinimumHealthyHostsPtrType) ToDeploymentConfigMinimumHealthyHostsPtrOutputWithContext(ctx context.Context) DeploymentConfigMinimumHealthyHostsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentConfigMinimumHealthyHostsPtrOutput)
}

type DeploymentConfigMinimumHealthyHostsOutput struct{ *pulumi.OutputState }

func (DeploymentConfigMinimumHealthyHostsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentConfigMinimumHealthyHosts)(nil)).Elem()
}

func (o DeploymentConfigMinimumHealthyHostsOutput) ToDeploymentConfigMinimumHealthyHostsOutput() DeploymentConfigMinimumHealthyHostsOutput {
	return o
}

func (o DeploymentConfigMinimumHealthyHostsOutput) ToDeploymentConfigMinimumHealthyHostsOutputWithContext(ctx context.Context) DeploymentConfigMinimumHealthyHostsOutput {
	return o
}

func (o DeploymentConfigMinimumHealthyHostsOutput) ToDeploymentConfigMinimumHealthyHostsPtrOutput() DeploymentConfigMinimumHealthyHostsPtrOutput {
	return o.ToDeploymentConfigMinimumHealthyHostsPtrOutputWithContext(context.Background())
}

func (o DeploymentConfigMinimumHealthyHostsOutput) ToDeploymentConfigMinimumHealthyHostsPtrOutputWithContext(ctx context.Context) DeploymentConfigMinimumHealthyHostsPtrOutput {
	return o.ApplyT(func(v DeploymentConfigMinimumHealthyHosts) *DeploymentConfigMinimumHealthyHosts {
		return &v
	}).(DeploymentConfigMinimumHealthyHostsPtrOutput)
}

// The type can either be `FLEET_PERCENT` or `HOST_COUNT`.
func (o DeploymentConfigMinimumHealthyHostsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentConfigMinimumHealthyHosts) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The value when the type is `FLEET_PERCENT` represents the minimum number of healthy instances as
// a percentage of the total number of instances in the deployment. If you specify FLEET_PERCENT, at the start of the
// deployment, AWS CodeDeploy converts the percentage to the equivalent number of instance and rounds up fractional instances.
// When the type is `HOST_COUNT`, the value represents the minimum number of healthy instances as an absolute value.
func (o DeploymentConfigMinimumHealthyHostsOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentConfigMinimumHealthyHosts) *int { return v.Value }).(pulumi.IntPtrOutput)
}

type DeploymentConfigMinimumHealthyHostsPtrOutput struct{ *pulumi.OutputState }

func (DeploymentConfigMinimumHealthyHostsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentConfigMinimumHealthyHosts)(nil)).Elem()
}

func (o DeploymentConfigMinimumHealthyHostsPtrOutput) ToDeploymentConfigMinimumHealthyHostsPtrOutput() DeploymentConfigMinimumHealthyHostsPtrOutput {
	return o
}

func (o DeploymentConfigMinimumHealthyHostsPtrOutput) ToDeploymentConfigMinimumHealthyHostsPtrOutputWithContext(ctx context.Context) DeploymentConfigMinimumHealthyHostsPtrOutput {
	return o
}

func (o DeploymentConfigMinimumHealthyHostsPtrOutput) Elem() DeploymentConfigMinimumHealthyHostsOutput {
	return o.ApplyT(func(v *DeploymentConfigMinimumHealthyHosts) DeploymentConfigMinimumHealthyHosts { return *v }).(DeploymentConfigMinimumHealthyHostsOutput)
}

// The type can either be `FLEET_PERCENT` or `HOST_COUNT`.
func (o DeploymentConfigMinimumHealthyHostsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentConfigMinimumHealthyHosts) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The value when the type is `FLEET_PERCENT` represents the minimum number of healthy instances as
// a percentage of the total number of instances in the deployment. If you specify FLEET_PERCENT, at the start of the
// deployment, AWS CodeDeploy converts the percentage to the equivalent number of instance and rounds up fractional instances.
// When the type is `HOST_COUNT`, the value represents the minimum number of healthy instances as an absolute value.
func (o DeploymentConfigMinimumHealthyHostsPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentConfigMinimumHealthyHosts) *int { return v.Value }).(pulumi.IntPtrOutput)
}

type DeploymentConfigTrafficRoutingConfig struct {
	// The time based canary configuration information. If `type` is `TimeBasedLinear`, use `timeBasedLinear` instead.
	TimeBasedCanary *DeploymentConfigTrafficRoutingConfigTimeBasedCanary `pulumi:"timeBasedCanary"`
	// The time based linear configuration information. If `type` is `TimeBasedCanary`, use `timeBasedCanary` instead.
	TimeBasedLinear *DeploymentConfigTrafficRoutingConfigTimeBasedLinear `pulumi:"timeBasedLinear"`
	// Type of traffic routing config. One of `TimeBasedCanary`, `TimeBasedLinear`, `AllAtOnce`.
	Type *string `pulumi:"type"`
}

// DeploymentConfigTrafficRoutingConfigInput is an input type that accepts DeploymentConfigTrafficRoutingConfigArgs and DeploymentConfigTrafficRoutingConfigOutput values.
// You can construct a concrete instance of `DeploymentConfigTrafficRoutingConfigInput` via:
//
// 		 DeploymentConfigTrafficRoutingConfigArgs{...}
//
type DeploymentConfigTrafficRoutingConfigInput interface {
	pulumi.Input

	ToDeploymentConfigTrafficRoutingConfigOutput() DeploymentConfigTrafficRoutingConfigOutput
	ToDeploymentConfigTrafficRoutingConfigOutputWithContext(context.Context) DeploymentConfigTrafficRoutingConfigOutput
}

type DeploymentConfigTrafficRoutingConfigArgs struct {
	// The time based canary configuration information. If `type` is `TimeBasedLinear`, use `timeBasedLinear` instead.
	TimeBasedCanary DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrInput `pulumi:"timeBasedCanary"`
	// The time based linear configuration information. If `type` is `TimeBasedCanary`, use `timeBasedCanary` instead.
	TimeBasedLinear DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrInput `pulumi:"timeBasedLinear"`
	// Type of traffic routing config. One of `TimeBasedCanary`, `TimeBasedLinear`, `AllAtOnce`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DeploymentConfigTrafficRoutingConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentConfigTrafficRoutingConfig)(nil)).Elem()
}

func (i DeploymentConfigTrafficRoutingConfigArgs) ToDeploymentConfigTrafficRoutingConfigOutput() DeploymentConfigTrafficRoutingConfigOutput {
	return i.ToDeploymentConfigTrafficRoutingConfigOutputWithContext(context.Background())
}

func (i DeploymentConfigTrafficRoutingConfigArgs) ToDeploymentConfigTrafficRoutingConfigOutputWithContext(ctx context.Context) DeploymentConfigTrafficRoutingConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentConfigTrafficRoutingConfigOutput)
}

func (i DeploymentConfigTrafficRoutingConfigArgs) ToDeploymentConfigTrafficRoutingConfigPtrOutput() DeploymentConfigTrafficRoutingConfigPtrOutput {
	return i.ToDeploymentConfigTrafficRoutingConfigPtrOutputWithContext(context.Background())
}

func (i DeploymentConfigTrafficRoutingConfigArgs) ToDeploymentConfigTrafficRoutingConfigPtrOutputWithContext(ctx context.Context) DeploymentConfigTrafficRoutingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentConfigTrafficRoutingConfigOutput).ToDeploymentConfigTrafficRoutingConfigPtrOutputWithContext(ctx)
}

// DeploymentConfigTrafficRoutingConfigPtrInput is an input type that accepts DeploymentConfigTrafficRoutingConfigArgs, DeploymentConfigTrafficRoutingConfigPtr and DeploymentConfigTrafficRoutingConfigPtrOutput values.
// You can construct a concrete instance of `DeploymentConfigTrafficRoutingConfigPtrInput` via:
//
// 		 DeploymentConfigTrafficRoutingConfigArgs{...}
//
//  or:
//
// 		 nil
//
type DeploymentConfigTrafficRoutingConfigPtrInput interface {
	pulumi.Input

	ToDeploymentConfigTrafficRoutingConfigPtrOutput() DeploymentConfigTrafficRoutingConfigPtrOutput
	ToDeploymentConfigTrafficRoutingConfigPtrOutputWithContext(context.Context) DeploymentConfigTrafficRoutingConfigPtrOutput
}

type deploymentConfigTrafficRoutingConfigPtrType DeploymentConfigTrafficRoutingConfigArgs

func DeploymentConfigTrafficRoutingConfigPtr(v *DeploymentConfigTrafficRoutingConfigArgs) DeploymentConfigTrafficRoutingConfigPtrInput {
	return (*deploymentConfigTrafficRoutingConfigPtrType)(v)
}

func (*deploymentConfigTrafficRoutingConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentConfigTrafficRoutingConfig)(nil)).Elem()
}

func (i *deploymentConfigTrafficRoutingConfigPtrType) ToDeploymentConfigTrafficRoutingConfigPtrOutput() DeploymentConfigTrafficRoutingConfigPtrOutput {
	return i.ToDeploymentConfigTrafficRoutingConfigPtrOutputWithContext(context.Background())
}

func (i *deploymentConfigTrafficRoutingConfigPtrType) ToDeploymentConfigTrafficRoutingConfigPtrOutputWithContext(ctx context.Context) DeploymentConfigTrafficRoutingConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentConfigTrafficRoutingConfigPtrOutput)
}

type DeploymentConfigTrafficRoutingConfigOutput struct{ *pulumi.OutputState }

func (DeploymentConfigTrafficRoutingConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentConfigTrafficRoutingConfig)(nil)).Elem()
}

func (o DeploymentConfigTrafficRoutingConfigOutput) ToDeploymentConfigTrafficRoutingConfigOutput() DeploymentConfigTrafficRoutingConfigOutput {
	return o
}

func (o DeploymentConfigTrafficRoutingConfigOutput) ToDeploymentConfigTrafficRoutingConfigOutputWithContext(ctx context.Context) DeploymentConfigTrafficRoutingConfigOutput {
	return o
}

func (o DeploymentConfigTrafficRoutingConfigOutput) ToDeploymentConfigTrafficRoutingConfigPtrOutput() DeploymentConfigTrafficRoutingConfigPtrOutput {
	return o.ToDeploymentConfigTrafficRoutingConfigPtrOutputWithContext(context.Background())
}

func (o DeploymentConfigTrafficRoutingConfigOutput) ToDeploymentConfigTrafficRoutingConfigPtrOutputWithContext(ctx context.Context) DeploymentConfigTrafficRoutingConfigPtrOutput {
	return o.ApplyT(func(v DeploymentConfigTrafficRoutingConfig) *DeploymentConfigTrafficRoutingConfig {
		return &v
	}).(DeploymentConfigTrafficRoutingConfigPtrOutput)
}

// The time based canary configuration information. If `type` is `TimeBasedLinear`, use `timeBasedLinear` instead.
func (o DeploymentConfigTrafficRoutingConfigOutput) TimeBasedCanary() DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput {
	return o.ApplyT(func(v DeploymentConfigTrafficRoutingConfig) *DeploymentConfigTrafficRoutingConfigTimeBasedCanary {
		return v.TimeBasedCanary
	}).(DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput)
}

// The time based linear configuration information. If `type` is `TimeBasedCanary`, use `timeBasedCanary` instead.
func (o DeploymentConfigTrafficRoutingConfigOutput) TimeBasedLinear() DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput {
	return o.ApplyT(func(v DeploymentConfigTrafficRoutingConfig) *DeploymentConfigTrafficRoutingConfigTimeBasedLinear {
		return v.TimeBasedLinear
	}).(DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput)
}

// Type of traffic routing config. One of `TimeBasedCanary`, `TimeBasedLinear`, `AllAtOnce`.
func (o DeploymentConfigTrafficRoutingConfigOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentConfigTrafficRoutingConfig) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DeploymentConfigTrafficRoutingConfigPtrOutput struct{ *pulumi.OutputState }

func (DeploymentConfigTrafficRoutingConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentConfigTrafficRoutingConfig)(nil)).Elem()
}

func (o DeploymentConfigTrafficRoutingConfigPtrOutput) ToDeploymentConfigTrafficRoutingConfigPtrOutput() DeploymentConfigTrafficRoutingConfigPtrOutput {
	return o
}

func (o DeploymentConfigTrafficRoutingConfigPtrOutput) ToDeploymentConfigTrafficRoutingConfigPtrOutputWithContext(ctx context.Context) DeploymentConfigTrafficRoutingConfigPtrOutput {
	return o
}

func (o DeploymentConfigTrafficRoutingConfigPtrOutput) Elem() DeploymentConfigTrafficRoutingConfigOutput {
	return o.ApplyT(func(v *DeploymentConfigTrafficRoutingConfig) DeploymentConfigTrafficRoutingConfig { return *v }).(DeploymentConfigTrafficRoutingConfigOutput)
}

// The time based canary configuration information. If `type` is `TimeBasedLinear`, use `timeBasedLinear` instead.
func (o DeploymentConfigTrafficRoutingConfigPtrOutput) TimeBasedCanary() DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput {
	return o.ApplyT(func(v DeploymentConfigTrafficRoutingConfig) *DeploymentConfigTrafficRoutingConfigTimeBasedCanary {
		return v.TimeBasedCanary
	}).(DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput)
}

// The time based linear configuration information. If `type` is `TimeBasedCanary`, use `timeBasedCanary` instead.
func (o DeploymentConfigTrafficRoutingConfigPtrOutput) TimeBasedLinear() DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput {
	return o.ApplyT(func(v DeploymentConfigTrafficRoutingConfig) *DeploymentConfigTrafficRoutingConfigTimeBasedLinear {
		return v.TimeBasedLinear
	}).(DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput)
}

// Type of traffic routing config. One of `TimeBasedCanary`, `TimeBasedLinear`, `AllAtOnce`.
func (o DeploymentConfigTrafficRoutingConfigPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentConfigTrafficRoutingConfig) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DeploymentConfigTrafficRoutingConfigTimeBasedCanary struct {
	// The number of minutes between the first and second traffic shifts of a `TimeBasedCanary` deployment.
	Interval *int `pulumi:"interval"`
	// The percentage of traffic to shift in the first increment of a `TimeBasedCanary` deployment.
	Percentage *int `pulumi:"percentage"`
}

// DeploymentConfigTrafficRoutingConfigTimeBasedCanaryInput is an input type that accepts DeploymentConfigTrafficRoutingConfigTimeBasedCanaryArgs and DeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutput values.
// You can construct a concrete instance of `DeploymentConfigTrafficRoutingConfigTimeBasedCanaryInput` via:
//
// 		 DeploymentConfigTrafficRoutingConfigTimeBasedCanaryArgs{...}
//
type DeploymentConfigTrafficRoutingConfigTimeBasedCanaryInput interface {
	pulumi.Input

	ToDeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutput() DeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutput
	ToDeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutputWithContext(context.Context) DeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutput
}

type DeploymentConfigTrafficRoutingConfigTimeBasedCanaryArgs struct {
	// The number of minutes between the first and second traffic shifts of a `TimeBasedCanary` deployment.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// The percentage of traffic to shift in the first increment of a `TimeBasedCanary` deployment.
	Percentage pulumi.IntPtrInput `pulumi:"percentage"`
}

func (DeploymentConfigTrafficRoutingConfigTimeBasedCanaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentConfigTrafficRoutingConfigTimeBasedCanary)(nil)).Elem()
}

func (i DeploymentConfigTrafficRoutingConfigTimeBasedCanaryArgs) ToDeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutput() DeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutput {
	return i.ToDeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutputWithContext(context.Background())
}

func (i DeploymentConfigTrafficRoutingConfigTimeBasedCanaryArgs) ToDeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutputWithContext(ctx context.Context) DeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutput)
}

func (i DeploymentConfigTrafficRoutingConfigTimeBasedCanaryArgs) ToDeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput() DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput {
	return i.ToDeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutputWithContext(context.Background())
}

func (i DeploymentConfigTrafficRoutingConfigTimeBasedCanaryArgs) ToDeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutputWithContext(ctx context.Context) DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutput).ToDeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutputWithContext(ctx)
}

// DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrInput is an input type that accepts DeploymentConfigTrafficRoutingConfigTimeBasedCanaryArgs, DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtr and DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput values.
// You can construct a concrete instance of `DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrInput` via:
//
// 		 DeploymentConfigTrafficRoutingConfigTimeBasedCanaryArgs{...}
//
//  or:
//
// 		 nil
//
type DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrInput interface {
	pulumi.Input

	ToDeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput() DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput
	ToDeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutputWithContext(context.Context) DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput
}

type deploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrType DeploymentConfigTrafficRoutingConfigTimeBasedCanaryArgs

func DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtr(v *DeploymentConfigTrafficRoutingConfigTimeBasedCanaryArgs) DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrInput {
	return (*deploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrType)(v)
}

func (*deploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentConfigTrafficRoutingConfigTimeBasedCanary)(nil)).Elem()
}

func (i *deploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrType) ToDeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput() DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput {
	return i.ToDeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutputWithContext(context.Background())
}

func (i *deploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrType) ToDeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutputWithContext(ctx context.Context) DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput)
}

type DeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutput struct{ *pulumi.OutputState }

func (DeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentConfigTrafficRoutingConfigTimeBasedCanary)(nil)).Elem()
}

func (o DeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutput) ToDeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutput() DeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutput {
	return o
}

func (o DeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutput) ToDeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutputWithContext(ctx context.Context) DeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutput {
	return o
}

func (o DeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutput) ToDeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput() DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput {
	return o.ToDeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutputWithContext(context.Background())
}

func (o DeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutput) ToDeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutputWithContext(ctx context.Context) DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput {
	return o.ApplyT(func(v DeploymentConfigTrafficRoutingConfigTimeBasedCanary) *DeploymentConfigTrafficRoutingConfigTimeBasedCanary {
		return &v
	}).(DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput)
}

// The number of minutes between the first and second traffic shifts of a `TimeBasedCanary` deployment.
func (o DeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentConfigTrafficRoutingConfigTimeBasedCanary) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// The percentage of traffic to shift in the first increment of a `TimeBasedCanary` deployment.
func (o DeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutput) Percentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentConfigTrafficRoutingConfigTimeBasedCanary) *int { return v.Percentage }).(pulumi.IntPtrOutput)
}

type DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput struct{ *pulumi.OutputState }

func (DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentConfigTrafficRoutingConfigTimeBasedCanary)(nil)).Elem()
}

func (o DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput) ToDeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput() DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput {
	return o
}

func (o DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput) ToDeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutputWithContext(ctx context.Context) DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput {
	return o
}

func (o DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput) Elem() DeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutput {
	return o.ApplyT(func(v *DeploymentConfigTrafficRoutingConfigTimeBasedCanary) DeploymentConfigTrafficRoutingConfigTimeBasedCanary {
		return *v
	}).(DeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutput)
}

// The number of minutes between the first and second traffic shifts of a `TimeBasedCanary` deployment.
func (o DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentConfigTrafficRoutingConfigTimeBasedCanary) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// The percentage of traffic to shift in the first increment of a `TimeBasedCanary` deployment.
func (o DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput) Percentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentConfigTrafficRoutingConfigTimeBasedCanary) *int { return v.Percentage }).(pulumi.IntPtrOutput)
}

type DeploymentConfigTrafficRoutingConfigTimeBasedLinear struct {
	// The number of minutes between each incremental traffic shift of a `TimeBasedLinear` deployment.
	Interval *int `pulumi:"interval"`
	// The percentage of traffic that is shifted at the start of each increment of a `TimeBasedLinear` deployment.
	Percentage *int `pulumi:"percentage"`
}

// DeploymentConfigTrafficRoutingConfigTimeBasedLinearInput is an input type that accepts DeploymentConfigTrafficRoutingConfigTimeBasedLinearArgs and DeploymentConfigTrafficRoutingConfigTimeBasedLinearOutput values.
// You can construct a concrete instance of `DeploymentConfigTrafficRoutingConfigTimeBasedLinearInput` via:
//
// 		 DeploymentConfigTrafficRoutingConfigTimeBasedLinearArgs{...}
//
type DeploymentConfigTrafficRoutingConfigTimeBasedLinearInput interface {
	pulumi.Input

	ToDeploymentConfigTrafficRoutingConfigTimeBasedLinearOutput() DeploymentConfigTrafficRoutingConfigTimeBasedLinearOutput
	ToDeploymentConfigTrafficRoutingConfigTimeBasedLinearOutputWithContext(context.Context) DeploymentConfigTrafficRoutingConfigTimeBasedLinearOutput
}

type DeploymentConfigTrafficRoutingConfigTimeBasedLinearArgs struct {
	// The number of minutes between each incremental traffic shift of a `TimeBasedLinear` deployment.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// The percentage of traffic that is shifted at the start of each increment of a `TimeBasedLinear` deployment.
	Percentage pulumi.IntPtrInput `pulumi:"percentage"`
}

func (DeploymentConfigTrafficRoutingConfigTimeBasedLinearArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentConfigTrafficRoutingConfigTimeBasedLinear)(nil)).Elem()
}

func (i DeploymentConfigTrafficRoutingConfigTimeBasedLinearArgs) ToDeploymentConfigTrafficRoutingConfigTimeBasedLinearOutput() DeploymentConfigTrafficRoutingConfigTimeBasedLinearOutput {
	return i.ToDeploymentConfigTrafficRoutingConfigTimeBasedLinearOutputWithContext(context.Background())
}

func (i DeploymentConfigTrafficRoutingConfigTimeBasedLinearArgs) ToDeploymentConfigTrafficRoutingConfigTimeBasedLinearOutputWithContext(ctx context.Context) DeploymentConfigTrafficRoutingConfigTimeBasedLinearOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentConfigTrafficRoutingConfigTimeBasedLinearOutput)
}

func (i DeploymentConfigTrafficRoutingConfigTimeBasedLinearArgs) ToDeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput() DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput {
	return i.ToDeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutputWithContext(context.Background())
}

func (i DeploymentConfigTrafficRoutingConfigTimeBasedLinearArgs) ToDeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutputWithContext(ctx context.Context) DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentConfigTrafficRoutingConfigTimeBasedLinearOutput).ToDeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutputWithContext(ctx)
}

// DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrInput is an input type that accepts DeploymentConfigTrafficRoutingConfigTimeBasedLinearArgs, DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtr and DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput values.
// You can construct a concrete instance of `DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrInput` via:
//
// 		 DeploymentConfigTrafficRoutingConfigTimeBasedLinearArgs{...}
//
//  or:
//
// 		 nil
//
type DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrInput interface {
	pulumi.Input

	ToDeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput() DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput
	ToDeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutputWithContext(context.Context) DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput
}

type deploymentConfigTrafficRoutingConfigTimeBasedLinearPtrType DeploymentConfigTrafficRoutingConfigTimeBasedLinearArgs

func DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtr(v *DeploymentConfigTrafficRoutingConfigTimeBasedLinearArgs) DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrInput {
	return (*deploymentConfigTrafficRoutingConfigTimeBasedLinearPtrType)(v)
}

func (*deploymentConfigTrafficRoutingConfigTimeBasedLinearPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentConfigTrafficRoutingConfigTimeBasedLinear)(nil)).Elem()
}

func (i *deploymentConfigTrafficRoutingConfigTimeBasedLinearPtrType) ToDeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput() DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput {
	return i.ToDeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutputWithContext(context.Background())
}

func (i *deploymentConfigTrafficRoutingConfigTimeBasedLinearPtrType) ToDeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutputWithContext(ctx context.Context) DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput)
}

type DeploymentConfigTrafficRoutingConfigTimeBasedLinearOutput struct{ *pulumi.OutputState }

func (DeploymentConfigTrafficRoutingConfigTimeBasedLinearOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentConfigTrafficRoutingConfigTimeBasedLinear)(nil)).Elem()
}

func (o DeploymentConfigTrafficRoutingConfigTimeBasedLinearOutput) ToDeploymentConfigTrafficRoutingConfigTimeBasedLinearOutput() DeploymentConfigTrafficRoutingConfigTimeBasedLinearOutput {
	return o
}

func (o DeploymentConfigTrafficRoutingConfigTimeBasedLinearOutput) ToDeploymentConfigTrafficRoutingConfigTimeBasedLinearOutputWithContext(ctx context.Context) DeploymentConfigTrafficRoutingConfigTimeBasedLinearOutput {
	return o
}

func (o DeploymentConfigTrafficRoutingConfigTimeBasedLinearOutput) ToDeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput() DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput {
	return o.ToDeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutputWithContext(context.Background())
}

func (o DeploymentConfigTrafficRoutingConfigTimeBasedLinearOutput) ToDeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutputWithContext(ctx context.Context) DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput {
	return o.ApplyT(func(v DeploymentConfigTrafficRoutingConfigTimeBasedLinear) *DeploymentConfigTrafficRoutingConfigTimeBasedLinear {
		return &v
	}).(DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput)
}

// The number of minutes between each incremental traffic shift of a `TimeBasedLinear` deployment.
func (o DeploymentConfigTrafficRoutingConfigTimeBasedLinearOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentConfigTrafficRoutingConfigTimeBasedLinear) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// The percentage of traffic that is shifted at the start of each increment of a `TimeBasedLinear` deployment.
func (o DeploymentConfigTrafficRoutingConfigTimeBasedLinearOutput) Percentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentConfigTrafficRoutingConfigTimeBasedLinear) *int { return v.Percentage }).(pulumi.IntPtrOutput)
}

type DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput struct{ *pulumi.OutputState }

func (DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentConfigTrafficRoutingConfigTimeBasedLinear)(nil)).Elem()
}

func (o DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput) ToDeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput() DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput {
	return o
}

func (o DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput) ToDeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutputWithContext(ctx context.Context) DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput {
	return o
}

func (o DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput) Elem() DeploymentConfigTrafficRoutingConfigTimeBasedLinearOutput {
	return o.ApplyT(func(v *DeploymentConfigTrafficRoutingConfigTimeBasedLinear) DeploymentConfigTrafficRoutingConfigTimeBasedLinear {
		return *v
	}).(DeploymentConfigTrafficRoutingConfigTimeBasedLinearOutput)
}

// The number of minutes between each incremental traffic shift of a `TimeBasedLinear` deployment.
func (o DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentConfigTrafficRoutingConfigTimeBasedLinear) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// The percentage of traffic that is shifted at the start of each increment of a `TimeBasedLinear` deployment.
func (o DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput) Percentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentConfigTrafficRoutingConfigTimeBasedLinear) *int { return v.Percentage }).(pulumi.IntPtrOutput)
}

type DeploymentGroupAlarmConfiguration struct {
	// A list of alarms configured for the deployment group. _A maximum of 10 alarms can be added to a deployment group_.
	Alarms []string `pulumi:"alarms"`
	// Indicates whether the alarm configuration is enabled. This option is useful when you want to temporarily deactivate alarm monitoring for a deployment group without having to add the same alarms again later.
	Enabled *bool `pulumi:"enabled"`
	// Indicates whether a deployment should continue if information about the current state of alarms cannot be retrieved from CloudWatch. The default value is `false`.
	// * `true`: The deployment will proceed even if alarm status information can't be retrieved.
	// * `false`: The deployment will stop if alarm status information can't be retrieved.
	IgnorePollAlarmFailure *bool `pulumi:"ignorePollAlarmFailure"`
}

// DeploymentGroupAlarmConfigurationInput is an input type that accepts DeploymentGroupAlarmConfigurationArgs and DeploymentGroupAlarmConfigurationOutput values.
// You can construct a concrete instance of `DeploymentGroupAlarmConfigurationInput` via:
//
// 		 DeploymentGroupAlarmConfigurationArgs{...}
//
type DeploymentGroupAlarmConfigurationInput interface {
	pulumi.Input

	ToDeploymentGroupAlarmConfigurationOutput() DeploymentGroupAlarmConfigurationOutput
	ToDeploymentGroupAlarmConfigurationOutputWithContext(context.Context) DeploymentGroupAlarmConfigurationOutput
}

type DeploymentGroupAlarmConfigurationArgs struct {
	// A list of alarms configured for the deployment group. _A maximum of 10 alarms can be added to a deployment group_.
	Alarms pulumi.StringArrayInput `pulumi:"alarms"`
	// Indicates whether the alarm configuration is enabled. This option is useful when you want to temporarily deactivate alarm monitoring for a deployment group without having to add the same alarms again later.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Indicates whether a deployment should continue if information about the current state of alarms cannot be retrieved from CloudWatch. The default value is `false`.
	// * `true`: The deployment will proceed even if alarm status information can't be retrieved.
	// * `false`: The deployment will stop if alarm status information can't be retrieved.
	IgnorePollAlarmFailure pulumi.BoolPtrInput `pulumi:"ignorePollAlarmFailure"`
}

func (DeploymentGroupAlarmConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupAlarmConfiguration)(nil)).Elem()
}

func (i DeploymentGroupAlarmConfigurationArgs) ToDeploymentGroupAlarmConfigurationOutput() DeploymentGroupAlarmConfigurationOutput {
	return i.ToDeploymentGroupAlarmConfigurationOutputWithContext(context.Background())
}

func (i DeploymentGroupAlarmConfigurationArgs) ToDeploymentGroupAlarmConfigurationOutputWithContext(ctx context.Context) DeploymentGroupAlarmConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupAlarmConfigurationOutput)
}

func (i DeploymentGroupAlarmConfigurationArgs) ToDeploymentGroupAlarmConfigurationPtrOutput() DeploymentGroupAlarmConfigurationPtrOutput {
	return i.ToDeploymentGroupAlarmConfigurationPtrOutputWithContext(context.Background())
}

func (i DeploymentGroupAlarmConfigurationArgs) ToDeploymentGroupAlarmConfigurationPtrOutputWithContext(ctx context.Context) DeploymentGroupAlarmConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupAlarmConfigurationOutput).ToDeploymentGroupAlarmConfigurationPtrOutputWithContext(ctx)
}

// DeploymentGroupAlarmConfigurationPtrInput is an input type that accepts DeploymentGroupAlarmConfigurationArgs, DeploymentGroupAlarmConfigurationPtr and DeploymentGroupAlarmConfigurationPtrOutput values.
// You can construct a concrete instance of `DeploymentGroupAlarmConfigurationPtrInput` via:
//
// 		 DeploymentGroupAlarmConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type DeploymentGroupAlarmConfigurationPtrInput interface {
	pulumi.Input

	ToDeploymentGroupAlarmConfigurationPtrOutput() DeploymentGroupAlarmConfigurationPtrOutput
	ToDeploymentGroupAlarmConfigurationPtrOutputWithContext(context.Context) DeploymentGroupAlarmConfigurationPtrOutput
}

type deploymentGroupAlarmConfigurationPtrType DeploymentGroupAlarmConfigurationArgs

func DeploymentGroupAlarmConfigurationPtr(v *DeploymentGroupAlarmConfigurationArgs) DeploymentGroupAlarmConfigurationPtrInput {
	return (*deploymentGroupAlarmConfigurationPtrType)(v)
}

func (*deploymentGroupAlarmConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentGroupAlarmConfiguration)(nil)).Elem()
}

func (i *deploymentGroupAlarmConfigurationPtrType) ToDeploymentGroupAlarmConfigurationPtrOutput() DeploymentGroupAlarmConfigurationPtrOutput {
	return i.ToDeploymentGroupAlarmConfigurationPtrOutputWithContext(context.Background())
}

func (i *deploymentGroupAlarmConfigurationPtrType) ToDeploymentGroupAlarmConfigurationPtrOutputWithContext(ctx context.Context) DeploymentGroupAlarmConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupAlarmConfigurationPtrOutput)
}

type DeploymentGroupAlarmConfigurationOutput struct{ *pulumi.OutputState }

func (DeploymentGroupAlarmConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupAlarmConfiguration)(nil)).Elem()
}

func (o DeploymentGroupAlarmConfigurationOutput) ToDeploymentGroupAlarmConfigurationOutput() DeploymentGroupAlarmConfigurationOutput {
	return o
}

func (o DeploymentGroupAlarmConfigurationOutput) ToDeploymentGroupAlarmConfigurationOutputWithContext(ctx context.Context) DeploymentGroupAlarmConfigurationOutput {
	return o
}

func (o DeploymentGroupAlarmConfigurationOutput) ToDeploymentGroupAlarmConfigurationPtrOutput() DeploymentGroupAlarmConfigurationPtrOutput {
	return o.ToDeploymentGroupAlarmConfigurationPtrOutputWithContext(context.Background())
}

func (o DeploymentGroupAlarmConfigurationOutput) ToDeploymentGroupAlarmConfigurationPtrOutputWithContext(ctx context.Context) DeploymentGroupAlarmConfigurationPtrOutput {
	return o.ApplyT(func(v DeploymentGroupAlarmConfiguration) *DeploymentGroupAlarmConfiguration {
		return &v
	}).(DeploymentGroupAlarmConfigurationPtrOutput)
}

// A list of alarms configured for the deployment group. _A maximum of 10 alarms can be added to a deployment group_.
func (o DeploymentGroupAlarmConfigurationOutput) Alarms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentGroupAlarmConfiguration) []string { return v.Alarms }).(pulumi.StringArrayOutput)
}

// Indicates whether the alarm configuration is enabled. This option is useful when you want to temporarily deactivate alarm monitoring for a deployment group without having to add the same alarms again later.
func (o DeploymentGroupAlarmConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentGroupAlarmConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Indicates whether a deployment should continue if information about the current state of alarms cannot be retrieved from CloudWatch. The default value is `false`.
// * `true`: The deployment will proceed even if alarm status information can't be retrieved.
// * `false`: The deployment will stop if alarm status information can't be retrieved.
func (o DeploymentGroupAlarmConfigurationOutput) IgnorePollAlarmFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentGroupAlarmConfiguration) *bool { return v.IgnorePollAlarmFailure }).(pulumi.BoolPtrOutput)
}

type DeploymentGroupAlarmConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeploymentGroupAlarmConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentGroupAlarmConfiguration)(nil)).Elem()
}

func (o DeploymentGroupAlarmConfigurationPtrOutput) ToDeploymentGroupAlarmConfigurationPtrOutput() DeploymentGroupAlarmConfigurationPtrOutput {
	return o
}

func (o DeploymentGroupAlarmConfigurationPtrOutput) ToDeploymentGroupAlarmConfigurationPtrOutputWithContext(ctx context.Context) DeploymentGroupAlarmConfigurationPtrOutput {
	return o
}

func (o DeploymentGroupAlarmConfigurationPtrOutput) Elem() DeploymentGroupAlarmConfigurationOutput {
	return o.ApplyT(func(v *DeploymentGroupAlarmConfiguration) DeploymentGroupAlarmConfiguration { return *v }).(DeploymentGroupAlarmConfigurationOutput)
}

// A list of alarms configured for the deployment group. _A maximum of 10 alarms can be added to a deployment group_.
func (o DeploymentGroupAlarmConfigurationPtrOutput) Alarms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentGroupAlarmConfiguration) []string { return v.Alarms }).(pulumi.StringArrayOutput)
}

// Indicates whether the alarm configuration is enabled. This option is useful when you want to temporarily deactivate alarm monitoring for a deployment group without having to add the same alarms again later.
func (o DeploymentGroupAlarmConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentGroupAlarmConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Indicates whether a deployment should continue if information about the current state of alarms cannot be retrieved from CloudWatch. The default value is `false`.
// * `true`: The deployment will proceed even if alarm status information can't be retrieved.
// * `false`: The deployment will stop if alarm status information can't be retrieved.
func (o DeploymentGroupAlarmConfigurationPtrOutput) IgnorePollAlarmFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentGroupAlarmConfiguration) *bool { return v.IgnorePollAlarmFailure }).(pulumi.BoolPtrOutput)
}

type DeploymentGroupAutoRollbackConfiguration struct {
	// Indicates whether a defined automatic rollback configuration is currently enabled for this Deployment Group. If you enable automatic rollback, you must specify at least one event type.
	Enabled *bool `pulumi:"enabled"`
	// The event type or types that trigger a rollback. Supported types are `DEPLOYMENT_FAILURE` and `DEPLOYMENT_STOP_ON_ALARM`.
	Events []string `pulumi:"events"`
}

// DeploymentGroupAutoRollbackConfigurationInput is an input type that accepts DeploymentGroupAutoRollbackConfigurationArgs and DeploymentGroupAutoRollbackConfigurationOutput values.
// You can construct a concrete instance of `DeploymentGroupAutoRollbackConfigurationInput` via:
//
// 		 DeploymentGroupAutoRollbackConfigurationArgs{...}
//
type DeploymentGroupAutoRollbackConfigurationInput interface {
	pulumi.Input

	ToDeploymentGroupAutoRollbackConfigurationOutput() DeploymentGroupAutoRollbackConfigurationOutput
	ToDeploymentGroupAutoRollbackConfigurationOutputWithContext(context.Context) DeploymentGroupAutoRollbackConfigurationOutput
}

type DeploymentGroupAutoRollbackConfigurationArgs struct {
	// Indicates whether a defined automatic rollback configuration is currently enabled for this Deployment Group. If you enable automatic rollback, you must specify at least one event type.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// The event type or types that trigger a rollback. Supported types are `DEPLOYMENT_FAILURE` and `DEPLOYMENT_STOP_ON_ALARM`.
	Events pulumi.StringArrayInput `pulumi:"events"`
}

func (DeploymentGroupAutoRollbackConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupAutoRollbackConfiguration)(nil)).Elem()
}

func (i DeploymentGroupAutoRollbackConfigurationArgs) ToDeploymentGroupAutoRollbackConfigurationOutput() DeploymentGroupAutoRollbackConfigurationOutput {
	return i.ToDeploymentGroupAutoRollbackConfigurationOutputWithContext(context.Background())
}

func (i DeploymentGroupAutoRollbackConfigurationArgs) ToDeploymentGroupAutoRollbackConfigurationOutputWithContext(ctx context.Context) DeploymentGroupAutoRollbackConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupAutoRollbackConfigurationOutput)
}

func (i DeploymentGroupAutoRollbackConfigurationArgs) ToDeploymentGroupAutoRollbackConfigurationPtrOutput() DeploymentGroupAutoRollbackConfigurationPtrOutput {
	return i.ToDeploymentGroupAutoRollbackConfigurationPtrOutputWithContext(context.Background())
}

func (i DeploymentGroupAutoRollbackConfigurationArgs) ToDeploymentGroupAutoRollbackConfigurationPtrOutputWithContext(ctx context.Context) DeploymentGroupAutoRollbackConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupAutoRollbackConfigurationOutput).ToDeploymentGroupAutoRollbackConfigurationPtrOutputWithContext(ctx)
}

// DeploymentGroupAutoRollbackConfigurationPtrInput is an input type that accepts DeploymentGroupAutoRollbackConfigurationArgs, DeploymentGroupAutoRollbackConfigurationPtr and DeploymentGroupAutoRollbackConfigurationPtrOutput values.
// You can construct a concrete instance of `DeploymentGroupAutoRollbackConfigurationPtrInput` via:
//
// 		 DeploymentGroupAutoRollbackConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type DeploymentGroupAutoRollbackConfigurationPtrInput interface {
	pulumi.Input

	ToDeploymentGroupAutoRollbackConfigurationPtrOutput() DeploymentGroupAutoRollbackConfigurationPtrOutput
	ToDeploymentGroupAutoRollbackConfigurationPtrOutputWithContext(context.Context) DeploymentGroupAutoRollbackConfigurationPtrOutput
}

type deploymentGroupAutoRollbackConfigurationPtrType DeploymentGroupAutoRollbackConfigurationArgs

func DeploymentGroupAutoRollbackConfigurationPtr(v *DeploymentGroupAutoRollbackConfigurationArgs) DeploymentGroupAutoRollbackConfigurationPtrInput {
	return (*deploymentGroupAutoRollbackConfigurationPtrType)(v)
}

func (*deploymentGroupAutoRollbackConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentGroupAutoRollbackConfiguration)(nil)).Elem()
}

func (i *deploymentGroupAutoRollbackConfigurationPtrType) ToDeploymentGroupAutoRollbackConfigurationPtrOutput() DeploymentGroupAutoRollbackConfigurationPtrOutput {
	return i.ToDeploymentGroupAutoRollbackConfigurationPtrOutputWithContext(context.Background())
}

func (i *deploymentGroupAutoRollbackConfigurationPtrType) ToDeploymentGroupAutoRollbackConfigurationPtrOutputWithContext(ctx context.Context) DeploymentGroupAutoRollbackConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupAutoRollbackConfigurationPtrOutput)
}

type DeploymentGroupAutoRollbackConfigurationOutput struct{ *pulumi.OutputState }

func (DeploymentGroupAutoRollbackConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupAutoRollbackConfiguration)(nil)).Elem()
}

func (o DeploymentGroupAutoRollbackConfigurationOutput) ToDeploymentGroupAutoRollbackConfigurationOutput() DeploymentGroupAutoRollbackConfigurationOutput {
	return o
}

func (o DeploymentGroupAutoRollbackConfigurationOutput) ToDeploymentGroupAutoRollbackConfigurationOutputWithContext(ctx context.Context) DeploymentGroupAutoRollbackConfigurationOutput {
	return o
}

func (o DeploymentGroupAutoRollbackConfigurationOutput) ToDeploymentGroupAutoRollbackConfigurationPtrOutput() DeploymentGroupAutoRollbackConfigurationPtrOutput {
	return o.ToDeploymentGroupAutoRollbackConfigurationPtrOutputWithContext(context.Background())
}

func (o DeploymentGroupAutoRollbackConfigurationOutput) ToDeploymentGroupAutoRollbackConfigurationPtrOutputWithContext(ctx context.Context) DeploymentGroupAutoRollbackConfigurationPtrOutput {
	return o.ApplyT(func(v DeploymentGroupAutoRollbackConfiguration) *DeploymentGroupAutoRollbackConfiguration {
		return &v
	}).(DeploymentGroupAutoRollbackConfigurationPtrOutput)
}

// Indicates whether a defined automatic rollback configuration is currently enabled for this Deployment Group. If you enable automatic rollback, you must specify at least one event type.
func (o DeploymentGroupAutoRollbackConfigurationOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentGroupAutoRollbackConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The event type or types that trigger a rollback. Supported types are `DEPLOYMENT_FAILURE` and `DEPLOYMENT_STOP_ON_ALARM`.
func (o DeploymentGroupAutoRollbackConfigurationOutput) Events() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentGroupAutoRollbackConfiguration) []string { return v.Events }).(pulumi.StringArrayOutput)
}

type DeploymentGroupAutoRollbackConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DeploymentGroupAutoRollbackConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentGroupAutoRollbackConfiguration)(nil)).Elem()
}

func (o DeploymentGroupAutoRollbackConfigurationPtrOutput) ToDeploymentGroupAutoRollbackConfigurationPtrOutput() DeploymentGroupAutoRollbackConfigurationPtrOutput {
	return o
}

func (o DeploymentGroupAutoRollbackConfigurationPtrOutput) ToDeploymentGroupAutoRollbackConfigurationPtrOutputWithContext(ctx context.Context) DeploymentGroupAutoRollbackConfigurationPtrOutput {
	return o
}

func (o DeploymentGroupAutoRollbackConfigurationPtrOutput) Elem() DeploymentGroupAutoRollbackConfigurationOutput {
	return o.ApplyT(func(v *DeploymentGroupAutoRollbackConfiguration) DeploymentGroupAutoRollbackConfiguration { return *v }).(DeploymentGroupAutoRollbackConfigurationOutput)
}

// Indicates whether a defined automatic rollback configuration is currently enabled for this Deployment Group. If you enable automatic rollback, you must specify at least one event type.
func (o DeploymentGroupAutoRollbackConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeploymentGroupAutoRollbackConfiguration) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The event type or types that trigger a rollback. Supported types are `DEPLOYMENT_FAILURE` and `DEPLOYMENT_STOP_ON_ALARM`.
func (o DeploymentGroupAutoRollbackConfigurationPtrOutput) Events() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentGroupAutoRollbackConfiguration) []string { return v.Events }).(pulumi.StringArrayOutput)
}

type DeploymentGroupBlueGreenDeploymentConfig struct {
	// Information about the action to take when newly provisioned instances are ready to receive traffic in a blue/green deployment (documented below).
	DeploymentReadyOption *DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOption `pulumi:"deploymentReadyOption"`
	// Information about how instances are provisioned for a replacement environment in a blue/green deployment (documented below).
	GreenFleetProvisioningOption *DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOption `pulumi:"greenFleetProvisioningOption"`
	// Information about whether to terminate instances in the original fleet during a blue/green deployment (documented below).
	TerminateBlueInstancesOnDeploymentSuccess *DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccess `pulumi:"terminateBlueInstancesOnDeploymentSuccess"`
}

// DeploymentGroupBlueGreenDeploymentConfigInput is an input type that accepts DeploymentGroupBlueGreenDeploymentConfigArgs and DeploymentGroupBlueGreenDeploymentConfigOutput values.
// You can construct a concrete instance of `DeploymentGroupBlueGreenDeploymentConfigInput` via:
//
// 		 DeploymentGroupBlueGreenDeploymentConfigArgs{...}
//
type DeploymentGroupBlueGreenDeploymentConfigInput interface {
	pulumi.Input

	ToDeploymentGroupBlueGreenDeploymentConfigOutput() DeploymentGroupBlueGreenDeploymentConfigOutput
	ToDeploymentGroupBlueGreenDeploymentConfigOutputWithContext(context.Context) DeploymentGroupBlueGreenDeploymentConfigOutput
}

type DeploymentGroupBlueGreenDeploymentConfigArgs struct {
	// Information about the action to take when newly provisioned instances are ready to receive traffic in a blue/green deployment (documented below).
	DeploymentReadyOption DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrInput `pulumi:"deploymentReadyOption"`
	// Information about how instances are provisioned for a replacement environment in a blue/green deployment (documented below).
	GreenFleetProvisioningOption DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrInput `pulumi:"greenFleetProvisioningOption"`
	// Information about whether to terminate instances in the original fleet during a blue/green deployment (documented below).
	TerminateBlueInstancesOnDeploymentSuccess DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrInput `pulumi:"terminateBlueInstancesOnDeploymentSuccess"`
}

func (DeploymentGroupBlueGreenDeploymentConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupBlueGreenDeploymentConfig)(nil)).Elem()
}

func (i DeploymentGroupBlueGreenDeploymentConfigArgs) ToDeploymentGroupBlueGreenDeploymentConfigOutput() DeploymentGroupBlueGreenDeploymentConfigOutput {
	return i.ToDeploymentGroupBlueGreenDeploymentConfigOutputWithContext(context.Background())
}

func (i DeploymentGroupBlueGreenDeploymentConfigArgs) ToDeploymentGroupBlueGreenDeploymentConfigOutputWithContext(ctx context.Context) DeploymentGroupBlueGreenDeploymentConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupBlueGreenDeploymentConfigOutput)
}

func (i DeploymentGroupBlueGreenDeploymentConfigArgs) ToDeploymentGroupBlueGreenDeploymentConfigPtrOutput() DeploymentGroupBlueGreenDeploymentConfigPtrOutput {
	return i.ToDeploymentGroupBlueGreenDeploymentConfigPtrOutputWithContext(context.Background())
}

func (i DeploymentGroupBlueGreenDeploymentConfigArgs) ToDeploymentGroupBlueGreenDeploymentConfigPtrOutputWithContext(ctx context.Context) DeploymentGroupBlueGreenDeploymentConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupBlueGreenDeploymentConfigOutput).ToDeploymentGroupBlueGreenDeploymentConfigPtrOutputWithContext(ctx)
}

// DeploymentGroupBlueGreenDeploymentConfigPtrInput is an input type that accepts DeploymentGroupBlueGreenDeploymentConfigArgs, DeploymentGroupBlueGreenDeploymentConfigPtr and DeploymentGroupBlueGreenDeploymentConfigPtrOutput values.
// You can construct a concrete instance of `DeploymentGroupBlueGreenDeploymentConfigPtrInput` via:
//
// 		 DeploymentGroupBlueGreenDeploymentConfigArgs{...}
//
//  or:
//
// 		 nil
//
type DeploymentGroupBlueGreenDeploymentConfigPtrInput interface {
	pulumi.Input

	ToDeploymentGroupBlueGreenDeploymentConfigPtrOutput() DeploymentGroupBlueGreenDeploymentConfigPtrOutput
	ToDeploymentGroupBlueGreenDeploymentConfigPtrOutputWithContext(context.Context) DeploymentGroupBlueGreenDeploymentConfigPtrOutput
}

type deploymentGroupBlueGreenDeploymentConfigPtrType DeploymentGroupBlueGreenDeploymentConfigArgs

func DeploymentGroupBlueGreenDeploymentConfigPtr(v *DeploymentGroupBlueGreenDeploymentConfigArgs) DeploymentGroupBlueGreenDeploymentConfigPtrInput {
	return (*deploymentGroupBlueGreenDeploymentConfigPtrType)(v)
}

func (*deploymentGroupBlueGreenDeploymentConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentGroupBlueGreenDeploymentConfig)(nil)).Elem()
}

func (i *deploymentGroupBlueGreenDeploymentConfigPtrType) ToDeploymentGroupBlueGreenDeploymentConfigPtrOutput() DeploymentGroupBlueGreenDeploymentConfigPtrOutput {
	return i.ToDeploymentGroupBlueGreenDeploymentConfigPtrOutputWithContext(context.Background())
}

func (i *deploymentGroupBlueGreenDeploymentConfigPtrType) ToDeploymentGroupBlueGreenDeploymentConfigPtrOutputWithContext(ctx context.Context) DeploymentGroupBlueGreenDeploymentConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupBlueGreenDeploymentConfigPtrOutput)
}

type DeploymentGroupBlueGreenDeploymentConfigOutput struct{ *pulumi.OutputState }

func (DeploymentGroupBlueGreenDeploymentConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupBlueGreenDeploymentConfig)(nil)).Elem()
}

func (o DeploymentGroupBlueGreenDeploymentConfigOutput) ToDeploymentGroupBlueGreenDeploymentConfigOutput() DeploymentGroupBlueGreenDeploymentConfigOutput {
	return o
}

func (o DeploymentGroupBlueGreenDeploymentConfigOutput) ToDeploymentGroupBlueGreenDeploymentConfigOutputWithContext(ctx context.Context) DeploymentGroupBlueGreenDeploymentConfigOutput {
	return o
}

func (o DeploymentGroupBlueGreenDeploymentConfigOutput) ToDeploymentGroupBlueGreenDeploymentConfigPtrOutput() DeploymentGroupBlueGreenDeploymentConfigPtrOutput {
	return o.ToDeploymentGroupBlueGreenDeploymentConfigPtrOutputWithContext(context.Background())
}

func (o DeploymentGroupBlueGreenDeploymentConfigOutput) ToDeploymentGroupBlueGreenDeploymentConfigPtrOutputWithContext(ctx context.Context) DeploymentGroupBlueGreenDeploymentConfigPtrOutput {
	return o.ApplyT(func(v DeploymentGroupBlueGreenDeploymentConfig) *DeploymentGroupBlueGreenDeploymentConfig {
		return &v
	}).(DeploymentGroupBlueGreenDeploymentConfigPtrOutput)
}

// Information about the action to take when newly provisioned instances are ready to receive traffic in a blue/green deployment (documented below).
func (o DeploymentGroupBlueGreenDeploymentConfigOutput) DeploymentReadyOption() DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput {
	return o.ApplyT(func(v DeploymentGroupBlueGreenDeploymentConfig) *DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOption {
		return v.DeploymentReadyOption
	}).(DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput)
}

// Information about how instances are provisioned for a replacement environment in a blue/green deployment (documented below).
func (o DeploymentGroupBlueGreenDeploymentConfigOutput) GreenFleetProvisioningOption() DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput {
	return o.ApplyT(func(v DeploymentGroupBlueGreenDeploymentConfig) *DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOption {
		return v.GreenFleetProvisioningOption
	}).(DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput)
}

// Information about whether to terminate instances in the original fleet during a blue/green deployment (documented below).
func (o DeploymentGroupBlueGreenDeploymentConfigOutput) TerminateBlueInstancesOnDeploymentSuccess() DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput {
	return o.ApplyT(func(v DeploymentGroupBlueGreenDeploymentConfig) *DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccess {
		return v.TerminateBlueInstancesOnDeploymentSuccess
	}).(DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput)
}

type DeploymentGroupBlueGreenDeploymentConfigPtrOutput struct{ *pulumi.OutputState }

func (DeploymentGroupBlueGreenDeploymentConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentGroupBlueGreenDeploymentConfig)(nil)).Elem()
}

func (o DeploymentGroupBlueGreenDeploymentConfigPtrOutput) ToDeploymentGroupBlueGreenDeploymentConfigPtrOutput() DeploymentGroupBlueGreenDeploymentConfigPtrOutput {
	return o
}

func (o DeploymentGroupBlueGreenDeploymentConfigPtrOutput) ToDeploymentGroupBlueGreenDeploymentConfigPtrOutputWithContext(ctx context.Context) DeploymentGroupBlueGreenDeploymentConfigPtrOutput {
	return o
}

func (o DeploymentGroupBlueGreenDeploymentConfigPtrOutput) Elem() DeploymentGroupBlueGreenDeploymentConfigOutput {
	return o.ApplyT(func(v *DeploymentGroupBlueGreenDeploymentConfig) DeploymentGroupBlueGreenDeploymentConfig { return *v }).(DeploymentGroupBlueGreenDeploymentConfigOutput)
}

// Information about the action to take when newly provisioned instances are ready to receive traffic in a blue/green deployment (documented below).
func (o DeploymentGroupBlueGreenDeploymentConfigPtrOutput) DeploymentReadyOption() DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput {
	return o.ApplyT(func(v DeploymentGroupBlueGreenDeploymentConfig) *DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOption {
		return v.DeploymentReadyOption
	}).(DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput)
}

// Information about how instances are provisioned for a replacement environment in a blue/green deployment (documented below).
func (o DeploymentGroupBlueGreenDeploymentConfigPtrOutput) GreenFleetProvisioningOption() DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput {
	return o.ApplyT(func(v DeploymentGroupBlueGreenDeploymentConfig) *DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOption {
		return v.GreenFleetProvisioningOption
	}).(DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput)
}

// Information about whether to terminate instances in the original fleet during a blue/green deployment (documented below).
func (o DeploymentGroupBlueGreenDeploymentConfigPtrOutput) TerminateBlueInstancesOnDeploymentSuccess() DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput {
	return o.ApplyT(func(v DeploymentGroupBlueGreenDeploymentConfig) *DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccess {
		return v.TerminateBlueInstancesOnDeploymentSuccess
	}).(DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput)
}

type DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOption struct {
	// When to reroute traffic from an original environment to a replacement environment in a blue/green deployment.
	// * `CONTINUE_DEPLOYMENT`: Register new instances with the load balancer immediately after the new application revision is installed on the instances in the replacement environment.
	// * `STOP_DEPLOYMENT`: Do not register new instances with load balancer unless traffic is rerouted manually. If traffic is not rerouted manually before the end of the specified wait period, the deployment status is changed to Stopped.
	ActionOnTimeout *string `pulumi:"actionOnTimeout"`
	// The number of minutes to wait before the status of a blue/green deployment changed to Stopped if rerouting is not started manually. Applies only to the `STOP_DEPLOYMENT` option for `actionOnTimeout`.
	WaitTimeInMinutes *int `pulumi:"waitTimeInMinutes"`
}

// DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionInput is an input type that accepts DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionArgs and DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutput values.
// You can construct a concrete instance of `DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionInput` via:
//
// 		 DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionArgs{...}
//
type DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionInput interface {
	pulumi.Input

	ToDeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutput() DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutput
	ToDeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutputWithContext(context.Context) DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutput
}

type DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionArgs struct {
	// When to reroute traffic from an original environment to a replacement environment in a blue/green deployment.
	// * `CONTINUE_DEPLOYMENT`: Register new instances with the load balancer immediately after the new application revision is installed on the instances in the replacement environment.
	// * `STOP_DEPLOYMENT`: Do not register new instances with load balancer unless traffic is rerouted manually. If traffic is not rerouted manually before the end of the specified wait period, the deployment status is changed to Stopped.
	ActionOnTimeout pulumi.StringPtrInput `pulumi:"actionOnTimeout"`
	// The number of minutes to wait before the status of a blue/green deployment changed to Stopped if rerouting is not started manually. Applies only to the `STOP_DEPLOYMENT` option for `actionOnTimeout`.
	WaitTimeInMinutes pulumi.IntPtrInput `pulumi:"waitTimeInMinutes"`
}

func (DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOption)(nil)).Elem()
}

func (i DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionArgs) ToDeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutput() DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutput {
	return i.ToDeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutputWithContext(context.Background())
}

func (i DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionArgs) ToDeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutputWithContext(ctx context.Context) DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutput)
}

func (i DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionArgs) ToDeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput() DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput {
	return i.ToDeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutputWithContext(context.Background())
}

func (i DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionArgs) ToDeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutputWithContext(ctx context.Context) DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutput).ToDeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutputWithContext(ctx)
}

// DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrInput is an input type that accepts DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionArgs, DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtr and DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput values.
// You can construct a concrete instance of `DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrInput` via:
//
// 		 DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionArgs{...}
//
//  or:
//
// 		 nil
//
type DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrInput interface {
	pulumi.Input

	ToDeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput() DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput
	ToDeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutputWithContext(context.Context) DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput
}

type deploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrType DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionArgs

func DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtr(v *DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionArgs) DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrInput {
	return (*deploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrType)(v)
}

func (*deploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOption)(nil)).Elem()
}

func (i *deploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrType) ToDeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput() DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput {
	return i.ToDeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutputWithContext(context.Background())
}

func (i *deploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrType) ToDeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutputWithContext(ctx context.Context) DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput)
}

type DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutput struct{ *pulumi.OutputState }

func (DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOption)(nil)).Elem()
}

func (o DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutput) ToDeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutput() DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutput {
	return o
}

func (o DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutput) ToDeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutputWithContext(ctx context.Context) DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutput {
	return o
}

func (o DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutput) ToDeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput() DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput {
	return o.ToDeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutputWithContext(context.Background())
}

func (o DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutput) ToDeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutputWithContext(ctx context.Context) DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput {
	return o.ApplyT(func(v DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOption) *DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOption {
		return &v
	}).(DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput)
}

// When to reroute traffic from an original environment to a replacement environment in a blue/green deployment.
// * `CONTINUE_DEPLOYMENT`: Register new instances with the load balancer immediately after the new application revision is installed on the instances in the replacement environment.
// * `STOP_DEPLOYMENT`: Do not register new instances with load balancer unless traffic is rerouted manually. If traffic is not rerouted manually before the end of the specified wait period, the deployment status is changed to Stopped.
func (o DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutput) ActionOnTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOption) *string {
		return v.ActionOnTimeout
	}).(pulumi.StringPtrOutput)
}

// The number of minutes to wait before the status of a blue/green deployment changed to Stopped if rerouting is not started manually. Applies only to the `STOP_DEPLOYMENT` option for `actionOnTimeout`.
func (o DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutput) WaitTimeInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOption) *int {
		return v.WaitTimeInMinutes
	}).(pulumi.IntPtrOutput)
}

type DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput struct{ *pulumi.OutputState }

func (DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOption)(nil)).Elem()
}

func (o DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput) ToDeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput() DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput {
	return o
}

func (o DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput) ToDeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutputWithContext(ctx context.Context) DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput {
	return o
}

func (o DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput) Elem() DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutput {
	return o.ApplyT(func(v *DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOption) DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOption {
		return *v
	}).(DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutput)
}

// When to reroute traffic from an original environment to a replacement environment in a blue/green deployment.
// * `CONTINUE_DEPLOYMENT`: Register new instances with the load balancer immediately after the new application revision is installed on the instances in the replacement environment.
// * `STOP_DEPLOYMENT`: Do not register new instances with load balancer unless traffic is rerouted manually. If traffic is not rerouted manually before the end of the specified wait period, the deployment status is changed to Stopped.
func (o DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput) ActionOnTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOption) *string {
		return v.ActionOnTimeout
	}).(pulumi.StringPtrOutput)
}

// The number of minutes to wait before the status of a blue/green deployment changed to Stopped if rerouting is not started manually. Applies only to the `STOP_DEPLOYMENT` option for `actionOnTimeout`.
func (o DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput) WaitTimeInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOption) *int {
		return v.WaitTimeInMinutes
	}).(pulumi.IntPtrOutput)
}

type DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOption struct {
	// The method used to add instances to a replacement environment.
	// * `DISCOVER_EXISTING`: Use instances that already exist or will be created manually.
	// * `COPY_AUTO_SCALING_GROUP`: Use settings from a specified **Auto Scaling** group to define and create instances in a new Auto Scaling group. _Exactly one Auto Scaling group must be specified_ when selecting `COPY_AUTO_SCALING_GROUP`. Use `autoscalingGroups` to specify the Auto Scaling group.
	Action *string `pulumi:"action"`
}

// DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionInput is an input type that accepts DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionArgs and DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionOutput values.
// You can construct a concrete instance of `DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionInput` via:
//
// 		 DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionArgs{...}
//
type DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionInput interface {
	pulumi.Input

	ToDeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionOutput() DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionOutput
	ToDeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionOutputWithContext(context.Context) DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionOutput
}

type DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionArgs struct {
	// The method used to add instances to a replacement environment.
	// * `DISCOVER_EXISTING`: Use instances that already exist or will be created manually.
	// * `COPY_AUTO_SCALING_GROUP`: Use settings from a specified **Auto Scaling** group to define and create instances in a new Auto Scaling group. _Exactly one Auto Scaling group must be specified_ when selecting `COPY_AUTO_SCALING_GROUP`. Use `autoscalingGroups` to specify the Auto Scaling group.
	Action pulumi.StringPtrInput `pulumi:"action"`
}

func (DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOption)(nil)).Elem()
}

func (i DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionArgs) ToDeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionOutput() DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionOutput {
	return i.ToDeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionOutputWithContext(context.Background())
}

func (i DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionArgs) ToDeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionOutputWithContext(ctx context.Context) DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionOutput)
}

func (i DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionArgs) ToDeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput() DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput {
	return i.ToDeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutputWithContext(context.Background())
}

func (i DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionArgs) ToDeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutputWithContext(ctx context.Context) DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionOutput).ToDeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutputWithContext(ctx)
}

// DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrInput is an input type that accepts DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionArgs, DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtr and DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput values.
// You can construct a concrete instance of `DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrInput` via:
//
// 		 DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionArgs{...}
//
//  or:
//
// 		 nil
//
type DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrInput interface {
	pulumi.Input

	ToDeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput() DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput
	ToDeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutputWithContext(context.Context) DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput
}

type deploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrType DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionArgs

func DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtr(v *DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionArgs) DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrInput {
	return (*deploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrType)(v)
}

func (*deploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOption)(nil)).Elem()
}

func (i *deploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrType) ToDeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput() DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput {
	return i.ToDeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutputWithContext(context.Background())
}

func (i *deploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrType) ToDeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutputWithContext(ctx context.Context) DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput)
}

type DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionOutput struct{ *pulumi.OutputState }

func (DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOption)(nil)).Elem()
}

func (o DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionOutput) ToDeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionOutput() DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionOutput {
	return o
}

func (o DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionOutput) ToDeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionOutputWithContext(ctx context.Context) DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionOutput {
	return o
}

func (o DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionOutput) ToDeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput() DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput {
	return o.ToDeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutputWithContext(context.Background())
}

func (o DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionOutput) ToDeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutputWithContext(ctx context.Context) DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput {
	return o.ApplyT(func(v DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOption) *DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOption {
		return &v
	}).(DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput)
}

// The method used to add instances to a replacement environment.
// * `DISCOVER_EXISTING`: Use instances that already exist or will be created manually.
// * `COPY_AUTO_SCALING_GROUP`: Use settings from a specified **Auto Scaling** group to define and create instances in a new Auto Scaling group. _Exactly one Auto Scaling group must be specified_ when selecting `COPY_AUTO_SCALING_GROUP`. Use `autoscalingGroups` to specify the Auto Scaling group.
func (o DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOption) *string { return v.Action }).(pulumi.StringPtrOutput)
}

type DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput struct{ *pulumi.OutputState }

func (DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOption)(nil)).Elem()
}

func (o DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput) ToDeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput() DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput {
	return o
}

func (o DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput) ToDeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutputWithContext(ctx context.Context) DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput {
	return o
}

func (o DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput) Elem() DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionOutput {
	return o.ApplyT(func(v *DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOption) DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOption {
		return *v
	}).(DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionOutput)
}

// The method used to add instances to a replacement environment.
// * `DISCOVER_EXISTING`: Use instances that already exist or will be created manually.
// * `COPY_AUTO_SCALING_GROUP`: Use settings from a specified **Auto Scaling** group to define and create instances in a new Auto Scaling group. _Exactly one Auto Scaling group must be specified_ when selecting `COPY_AUTO_SCALING_GROUP`. Use `autoscalingGroups` to specify the Auto Scaling group.
func (o DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOption) *string { return v.Action }).(pulumi.StringPtrOutput)
}

type DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccess struct {
	// The action to take on instances in the original environment after a successful blue/green deployment.
	// * `TERMINATE`: Instances are terminated after a specified wait time.
	// * `KEEP_ALIVE`: Instances are left running after they are deregistered from the load balancer and removed from the deployment group.
	Action *string `pulumi:"action"`
	// The number of minutes to wait after a successful blue/green deployment before terminating instances from the original environment.
	TerminationWaitTimeInMinutes *int `pulumi:"terminationWaitTimeInMinutes"`
}

// DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessInput is an input type that accepts DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessArgs and DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutput values.
// You can construct a concrete instance of `DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessInput` via:
//
// 		 DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessArgs{...}
//
type DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessInput interface {
	pulumi.Input

	ToDeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutput() DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutput
	ToDeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutputWithContext(context.Context) DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutput
}

type DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessArgs struct {
	// The action to take on instances in the original environment after a successful blue/green deployment.
	// * `TERMINATE`: Instances are terminated after a specified wait time.
	// * `KEEP_ALIVE`: Instances are left running after they are deregistered from the load balancer and removed from the deployment group.
	Action pulumi.StringPtrInput `pulumi:"action"`
	// The number of minutes to wait after a successful blue/green deployment before terminating instances from the original environment.
	TerminationWaitTimeInMinutes pulumi.IntPtrInput `pulumi:"terminationWaitTimeInMinutes"`
}

func (DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccess)(nil)).Elem()
}

func (i DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessArgs) ToDeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutput() DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutput {
	return i.ToDeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutputWithContext(context.Background())
}

func (i DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessArgs) ToDeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutputWithContext(ctx context.Context) DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutput)
}

func (i DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessArgs) ToDeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput() DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput {
	return i.ToDeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutputWithContext(context.Background())
}

func (i DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessArgs) ToDeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutputWithContext(ctx context.Context) DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutput).ToDeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutputWithContext(ctx)
}

// DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrInput is an input type that accepts DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessArgs, DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtr and DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput values.
// You can construct a concrete instance of `DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrInput` via:
//
// 		 DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessArgs{...}
//
//  or:
//
// 		 nil
//
type DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrInput interface {
	pulumi.Input

	ToDeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput() DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput
	ToDeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutputWithContext(context.Context) DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput
}

type deploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrType DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessArgs

func DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtr(v *DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessArgs) DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrInput {
	return (*deploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrType)(v)
}

func (*deploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccess)(nil)).Elem()
}

func (i *deploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrType) ToDeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput() DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput {
	return i.ToDeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutputWithContext(context.Background())
}

func (i *deploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrType) ToDeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutputWithContext(ctx context.Context) DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput)
}

type DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutput struct{ *pulumi.OutputState }

func (DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccess)(nil)).Elem()
}

func (o DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutput) ToDeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutput() DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutput {
	return o
}

func (o DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutput) ToDeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutputWithContext(ctx context.Context) DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutput {
	return o
}

func (o DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutput) ToDeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput() DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput {
	return o.ToDeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutputWithContext(context.Background())
}

func (o DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutput) ToDeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutputWithContext(ctx context.Context) DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput {
	return o.ApplyT(func(v DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccess) *DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccess {
		return &v
	}).(DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput)
}

// The action to take on instances in the original environment after a successful blue/green deployment.
// * `TERMINATE`: Instances are terminated after a specified wait time.
// * `KEEP_ALIVE`: Instances are left running after they are deregistered from the load balancer and removed from the deployment group.
func (o DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccess) *string {
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// The number of minutes to wait after a successful blue/green deployment before terminating instances from the original environment.
func (o DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutput) TerminationWaitTimeInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccess) *int {
		return v.TerminationWaitTimeInMinutes
	}).(pulumi.IntPtrOutput)
}

type DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput struct{ *pulumi.OutputState }

func (DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccess)(nil)).Elem()
}

func (o DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput) ToDeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput() DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput {
	return o
}

func (o DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput) ToDeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutputWithContext(ctx context.Context) DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput {
	return o
}

func (o DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput) Elem() DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutput {
	return o.ApplyT(func(v *DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccess) DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccess {
		return *v
	}).(DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutput)
}

// The action to take on instances in the original environment after a successful blue/green deployment.
// * `TERMINATE`: Instances are terminated after a specified wait time.
// * `KEEP_ALIVE`: Instances are left running after they are deregistered from the load balancer and removed from the deployment group.
func (o DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccess) *string {
		return v.Action
	}).(pulumi.StringPtrOutput)
}

// The number of minutes to wait after a successful blue/green deployment before terminating instances from the original environment.
func (o DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput) TerminationWaitTimeInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccess) *int {
		return v.TerminationWaitTimeInMinutes
	}).(pulumi.IntPtrOutput)
}

type DeploymentGroupDeploymentStyle struct {
	// Indicates whether to route deployment traffic behind a load balancer. Valid Values are `WITH_TRAFFIC_CONTROL` or `WITHOUT_TRAFFIC_CONTROL`. Default is `WITHOUT_TRAFFIC_CONTROL`.
	DeploymentOption *string `pulumi:"deploymentOption"`
	// Indicates whether to run an in-place deployment or a blue/green deployment. Valid Values are `IN_PLACE` or `BLUE_GREEN`. Default is `IN_PLACE`.
	DeploymentType *string `pulumi:"deploymentType"`
}

// DeploymentGroupDeploymentStyleInput is an input type that accepts DeploymentGroupDeploymentStyleArgs and DeploymentGroupDeploymentStyleOutput values.
// You can construct a concrete instance of `DeploymentGroupDeploymentStyleInput` via:
//
// 		 DeploymentGroupDeploymentStyleArgs{...}
//
type DeploymentGroupDeploymentStyleInput interface {
	pulumi.Input

	ToDeploymentGroupDeploymentStyleOutput() DeploymentGroupDeploymentStyleOutput
	ToDeploymentGroupDeploymentStyleOutputWithContext(context.Context) DeploymentGroupDeploymentStyleOutput
}

type DeploymentGroupDeploymentStyleArgs struct {
	// Indicates whether to route deployment traffic behind a load balancer. Valid Values are `WITH_TRAFFIC_CONTROL` or `WITHOUT_TRAFFIC_CONTROL`. Default is `WITHOUT_TRAFFIC_CONTROL`.
	DeploymentOption pulumi.StringPtrInput `pulumi:"deploymentOption"`
	// Indicates whether to run an in-place deployment or a blue/green deployment. Valid Values are `IN_PLACE` or `BLUE_GREEN`. Default is `IN_PLACE`.
	DeploymentType pulumi.StringPtrInput `pulumi:"deploymentType"`
}

func (DeploymentGroupDeploymentStyleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupDeploymentStyle)(nil)).Elem()
}

func (i DeploymentGroupDeploymentStyleArgs) ToDeploymentGroupDeploymentStyleOutput() DeploymentGroupDeploymentStyleOutput {
	return i.ToDeploymentGroupDeploymentStyleOutputWithContext(context.Background())
}

func (i DeploymentGroupDeploymentStyleArgs) ToDeploymentGroupDeploymentStyleOutputWithContext(ctx context.Context) DeploymentGroupDeploymentStyleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupDeploymentStyleOutput)
}

func (i DeploymentGroupDeploymentStyleArgs) ToDeploymentGroupDeploymentStylePtrOutput() DeploymentGroupDeploymentStylePtrOutput {
	return i.ToDeploymentGroupDeploymentStylePtrOutputWithContext(context.Background())
}

func (i DeploymentGroupDeploymentStyleArgs) ToDeploymentGroupDeploymentStylePtrOutputWithContext(ctx context.Context) DeploymentGroupDeploymentStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupDeploymentStyleOutput).ToDeploymentGroupDeploymentStylePtrOutputWithContext(ctx)
}

// DeploymentGroupDeploymentStylePtrInput is an input type that accepts DeploymentGroupDeploymentStyleArgs, DeploymentGroupDeploymentStylePtr and DeploymentGroupDeploymentStylePtrOutput values.
// You can construct a concrete instance of `DeploymentGroupDeploymentStylePtrInput` via:
//
// 		 DeploymentGroupDeploymentStyleArgs{...}
//
//  or:
//
// 		 nil
//
type DeploymentGroupDeploymentStylePtrInput interface {
	pulumi.Input

	ToDeploymentGroupDeploymentStylePtrOutput() DeploymentGroupDeploymentStylePtrOutput
	ToDeploymentGroupDeploymentStylePtrOutputWithContext(context.Context) DeploymentGroupDeploymentStylePtrOutput
}

type deploymentGroupDeploymentStylePtrType DeploymentGroupDeploymentStyleArgs

func DeploymentGroupDeploymentStylePtr(v *DeploymentGroupDeploymentStyleArgs) DeploymentGroupDeploymentStylePtrInput {
	return (*deploymentGroupDeploymentStylePtrType)(v)
}

func (*deploymentGroupDeploymentStylePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentGroupDeploymentStyle)(nil)).Elem()
}

func (i *deploymentGroupDeploymentStylePtrType) ToDeploymentGroupDeploymentStylePtrOutput() DeploymentGroupDeploymentStylePtrOutput {
	return i.ToDeploymentGroupDeploymentStylePtrOutputWithContext(context.Background())
}

func (i *deploymentGroupDeploymentStylePtrType) ToDeploymentGroupDeploymentStylePtrOutputWithContext(ctx context.Context) DeploymentGroupDeploymentStylePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupDeploymentStylePtrOutput)
}

type DeploymentGroupDeploymentStyleOutput struct{ *pulumi.OutputState }

func (DeploymentGroupDeploymentStyleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupDeploymentStyle)(nil)).Elem()
}

func (o DeploymentGroupDeploymentStyleOutput) ToDeploymentGroupDeploymentStyleOutput() DeploymentGroupDeploymentStyleOutput {
	return o
}

func (o DeploymentGroupDeploymentStyleOutput) ToDeploymentGroupDeploymentStyleOutputWithContext(ctx context.Context) DeploymentGroupDeploymentStyleOutput {
	return o
}

func (o DeploymentGroupDeploymentStyleOutput) ToDeploymentGroupDeploymentStylePtrOutput() DeploymentGroupDeploymentStylePtrOutput {
	return o.ToDeploymentGroupDeploymentStylePtrOutputWithContext(context.Background())
}

func (o DeploymentGroupDeploymentStyleOutput) ToDeploymentGroupDeploymentStylePtrOutputWithContext(ctx context.Context) DeploymentGroupDeploymentStylePtrOutput {
	return o.ApplyT(func(v DeploymentGroupDeploymentStyle) *DeploymentGroupDeploymentStyle {
		return &v
	}).(DeploymentGroupDeploymentStylePtrOutput)
}

// Indicates whether to route deployment traffic behind a load balancer. Valid Values are `WITH_TRAFFIC_CONTROL` or `WITHOUT_TRAFFIC_CONTROL`. Default is `WITHOUT_TRAFFIC_CONTROL`.
func (o DeploymentGroupDeploymentStyleOutput) DeploymentOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentGroupDeploymentStyle) *string { return v.DeploymentOption }).(pulumi.StringPtrOutput)
}

// Indicates whether to run an in-place deployment or a blue/green deployment. Valid Values are `IN_PLACE` or `BLUE_GREEN`. Default is `IN_PLACE`.
func (o DeploymentGroupDeploymentStyleOutput) DeploymentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentGroupDeploymentStyle) *string { return v.DeploymentType }).(pulumi.StringPtrOutput)
}

type DeploymentGroupDeploymentStylePtrOutput struct{ *pulumi.OutputState }

func (DeploymentGroupDeploymentStylePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentGroupDeploymentStyle)(nil)).Elem()
}

func (o DeploymentGroupDeploymentStylePtrOutput) ToDeploymentGroupDeploymentStylePtrOutput() DeploymentGroupDeploymentStylePtrOutput {
	return o
}

func (o DeploymentGroupDeploymentStylePtrOutput) ToDeploymentGroupDeploymentStylePtrOutputWithContext(ctx context.Context) DeploymentGroupDeploymentStylePtrOutput {
	return o
}

func (o DeploymentGroupDeploymentStylePtrOutput) Elem() DeploymentGroupDeploymentStyleOutput {
	return o.ApplyT(func(v *DeploymentGroupDeploymentStyle) DeploymentGroupDeploymentStyle { return *v }).(DeploymentGroupDeploymentStyleOutput)
}

// Indicates whether to route deployment traffic behind a load balancer. Valid Values are `WITH_TRAFFIC_CONTROL` or `WITHOUT_TRAFFIC_CONTROL`. Default is `WITHOUT_TRAFFIC_CONTROL`.
func (o DeploymentGroupDeploymentStylePtrOutput) DeploymentOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentGroupDeploymentStyle) *string { return v.DeploymentOption }).(pulumi.StringPtrOutput)
}

// Indicates whether to run an in-place deployment or a blue/green deployment. Valid Values are `IN_PLACE` or `BLUE_GREEN`. Default is `IN_PLACE`.
func (o DeploymentGroupDeploymentStylePtrOutput) DeploymentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentGroupDeploymentStyle) *string { return v.DeploymentType }).(pulumi.StringPtrOutput)
}

type DeploymentGroupEc2TagFilter struct {
	// The key of the tag filter.
	Key *string `pulumi:"key"`
	// The type of the tag filter, either `KEY_ONLY`, `VALUE_ONLY`, or `KEY_AND_VALUE`.
	Type *string `pulumi:"type"`
	// The value of the tag filter.
	Value *string `pulumi:"value"`
}

// DeploymentGroupEc2TagFilterInput is an input type that accepts DeploymentGroupEc2TagFilterArgs and DeploymentGroupEc2TagFilterOutput values.
// You can construct a concrete instance of `DeploymentGroupEc2TagFilterInput` via:
//
// 		 DeploymentGroupEc2TagFilterArgs{...}
//
type DeploymentGroupEc2TagFilterInput interface {
	pulumi.Input

	ToDeploymentGroupEc2TagFilterOutput() DeploymentGroupEc2TagFilterOutput
	ToDeploymentGroupEc2TagFilterOutputWithContext(context.Context) DeploymentGroupEc2TagFilterOutput
}

type DeploymentGroupEc2TagFilterArgs struct {
	// The key of the tag filter.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The type of the tag filter, either `KEY_ONLY`, `VALUE_ONLY`, or `KEY_AND_VALUE`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The value of the tag filter.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DeploymentGroupEc2TagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupEc2TagFilter)(nil)).Elem()
}

func (i DeploymentGroupEc2TagFilterArgs) ToDeploymentGroupEc2TagFilterOutput() DeploymentGroupEc2TagFilterOutput {
	return i.ToDeploymentGroupEc2TagFilterOutputWithContext(context.Background())
}

func (i DeploymentGroupEc2TagFilterArgs) ToDeploymentGroupEc2TagFilterOutputWithContext(ctx context.Context) DeploymentGroupEc2TagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupEc2TagFilterOutput)
}

// DeploymentGroupEc2TagFilterArrayInput is an input type that accepts DeploymentGroupEc2TagFilterArray and DeploymentGroupEc2TagFilterArrayOutput values.
// You can construct a concrete instance of `DeploymentGroupEc2TagFilterArrayInput` via:
//
// 		 DeploymentGroupEc2TagFilterArray{ DeploymentGroupEc2TagFilterArgs{...} }
//
type DeploymentGroupEc2TagFilterArrayInput interface {
	pulumi.Input

	ToDeploymentGroupEc2TagFilterArrayOutput() DeploymentGroupEc2TagFilterArrayOutput
	ToDeploymentGroupEc2TagFilterArrayOutputWithContext(context.Context) DeploymentGroupEc2TagFilterArrayOutput
}

type DeploymentGroupEc2TagFilterArray []DeploymentGroupEc2TagFilterInput

func (DeploymentGroupEc2TagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentGroupEc2TagFilter)(nil)).Elem()
}

func (i DeploymentGroupEc2TagFilterArray) ToDeploymentGroupEc2TagFilterArrayOutput() DeploymentGroupEc2TagFilterArrayOutput {
	return i.ToDeploymentGroupEc2TagFilterArrayOutputWithContext(context.Background())
}

func (i DeploymentGroupEc2TagFilterArray) ToDeploymentGroupEc2TagFilterArrayOutputWithContext(ctx context.Context) DeploymentGroupEc2TagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupEc2TagFilterArrayOutput)
}

type DeploymentGroupEc2TagFilterOutput struct{ *pulumi.OutputState }

func (DeploymentGroupEc2TagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupEc2TagFilter)(nil)).Elem()
}

func (o DeploymentGroupEc2TagFilterOutput) ToDeploymentGroupEc2TagFilterOutput() DeploymentGroupEc2TagFilterOutput {
	return o
}

func (o DeploymentGroupEc2TagFilterOutput) ToDeploymentGroupEc2TagFilterOutputWithContext(ctx context.Context) DeploymentGroupEc2TagFilterOutput {
	return o
}

// The key of the tag filter.
func (o DeploymentGroupEc2TagFilterOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentGroupEc2TagFilter) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The type of the tag filter, either `KEY_ONLY`, `VALUE_ONLY`, or `KEY_AND_VALUE`.
func (o DeploymentGroupEc2TagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentGroupEc2TagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The value of the tag filter.
func (o DeploymentGroupEc2TagFilterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentGroupEc2TagFilter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DeploymentGroupEc2TagFilterArrayOutput struct{ *pulumi.OutputState }

func (DeploymentGroupEc2TagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentGroupEc2TagFilter)(nil)).Elem()
}

func (o DeploymentGroupEc2TagFilterArrayOutput) ToDeploymentGroupEc2TagFilterArrayOutput() DeploymentGroupEc2TagFilterArrayOutput {
	return o
}

func (o DeploymentGroupEc2TagFilterArrayOutput) ToDeploymentGroupEc2TagFilterArrayOutputWithContext(ctx context.Context) DeploymentGroupEc2TagFilterArrayOutput {
	return o
}

func (o DeploymentGroupEc2TagFilterArrayOutput) Index(i pulumi.IntInput) DeploymentGroupEc2TagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentGroupEc2TagFilter {
		return vs[0].([]DeploymentGroupEc2TagFilter)[vs[1].(int)]
	}).(DeploymentGroupEc2TagFilterOutput)
}

type DeploymentGroupEc2TagSet struct {
	// Tag filters associated with the deployment group. See the AWS docs for details.
	Ec2TagFilters []DeploymentGroupEc2TagSetEc2TagFilter `pulumi:"ec2TagFilters"`
}

// DeploymentGroupEc2TagSetInput is an input type that accepts DeploymentGroupEc2TagSetArgs and DeploymentGroupEc2TagSetOutput values.
// You can construct a concrete instance of `DeploymentGroupEc2TagSetInput` via:
//
// 		 DeploymentGroupEc2TagSetArgs{...}
//
type DeploymentGroupEc2TagSetInput interface {
	pulumi.Input

	ToDeploymentGroupEc2TagSetOutput() DeploymentGroupEc2TagSetOutput
	ToDeploymentGroupEc2TagSetOutputWithContext(context.Context) DeploymentGroupEc2TagSetOutput
}

type DeploymentGroupEc2TagSetArgs struct {
	// Tag filters associated with the deployment group. See the AWS docs for details.
	Ec2TagFilters DeploymentGroupEc2TagSetEc2TagFilterArrayInput `pulumi:"ec2TagFilters"`
}

func (DeploymentGroupEc2TagSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupEc2TagSet)(nil)).Elem()
}

func (i DeploymentGroupEc2TagSetArgs) ToDeploymentGroupEc2TagSetOutput() DeploymentGroupEc2TagSetOutput {
	return i.ToDeploymentGroupEc2TagSetOutputWithContext(context.Background())
}

func (i DeploymentGroupEc2TagSetArgs) ToDeploymentGroupEc2TagSetOutputWithContext(ctx context.Context) DeploymentGroupEc2TagSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupEc2TagSetOutput)
}

// DeploymentGroupEc2TagSetArrayInput is an input type that accepts DeploymentGroupEc2TagSetArray and DeploymentGroupEc2TagSetArrayOutput values.
// You can construct a concrete instance of `DeploymentGroupEc2TagSetArrayInput` via:
//
// 		 DeploymentGroupEc2TagSetArray{ DeploymentGroupEc2TagSetArgs{...} }
//
type DeploymentGroupEc2TagSetArrayInput interface {
	pulumi.Input

	ToDeploymentGroupEc2TagSetArrayOutput() DeploymentGroupEc2TagSetArrayOutput
	ToDeploymentGroupEc2TagSetArrayOutputWithContext(context.Context) DeploymentGroupEc2TagSetArrayOutput
}

type DeploymentGroupEc2TagSetArray []DeploymentGroupEc2TagSetInput

func (DeploymentGroupEc2TagSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentGroupEc2TagSet)(nil)).Elem()
}

func (i DeploymentGroupEc2TagSetArray) ToDeploymentGroupEc2TagSetArrayOutput() DeploymentGroupEc2TagSetArrayOutput {
	return i.ToDeploymentGroupEc2TagSetArrayOutputWithContext(context.Background())
}

func (i DeploymentGroupEc2TagSetArray) ToDeploymentGroupEc2TagSetArrayOutputWithContext(ctx context.Context) DeploymentGroupEc2TagSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupEc2TagSetArrayOutput)
}

type DeploymentGroupEc2TagSetOutput struct{ *pulumi.OutputState }

func (DeploymentGroupEc2TagSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupEc2TagSet)(nil)).Elem()
}

func (o DeploymentGroupEc2TagSetOutput) ToDeploymentGroupEc2TagSetOutput() DeploymentGroupEc2TagSetOutput {
	return o
}

func (o DeploymentGroupEc2TagSetOutput) ToDeploymentGroupEc2TagSetOutputWithContext(ctx context.Context) DeploymentGroupEc2TagSetOutput {
	return o
}

// Tag filters associated with the deployment group. See the AWS docs for details.
func (o DeploymentGroupEc2TagSetOutput) Ec2TagFilters() DeploymentGroupEc2TagSetEc2TagFilterArrayOutput {
	return o.ApplyT(func(v DeploymentGroupEc2TagSet) []DeploymentGroupEc2TagSetEc2TagFilter { return v.Ec2TagFilters }).(DeploymentGroupEc2TagSetEc2TagFilterArrayOutput)
}

type DeploymentGroupEc2TagSetArrayOutput struct{ *pulumi.OutputState }

func (DeploymentGroupEc2TagSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentGroupEc2TagSet)(nil)).Elem()
}

func (o DeploymentGroupEc2TagSetArrayOutput) ToDeploymentGroupEc2TagSetArrayOutput() DeploymentGroupEc2TagSetArrayOutput {
	return o
}

func (o DeploymentGroupEc2TagSetArrayOutput) ToDeploymentGroupEc2TagSetArrayOutputWithContext(ctx context.Context) DeploymentGroupEc2TagSetArrayOutput {
	return o
}

func (o DeploymentGroupEc2TagSetArrayOutput) Index(i pulumi.IntInput) DeploymentGroupEc2TagSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentGroupEc2TagSet {
		return vs[0].([]DeploymentGroupEc2TagSet)[vs[1].(int)]
	}).(DeploymentGroupEc2TagSetOutput)
}

type DeploymentGroupEc2TagSetEc2TagFilter struct {
	// The key of the tag filter.
	Key *string `pulumi:"key"`
	// The type of the tag filter, either `KEY_ONLY`, `VALUE_ONLY`, or `KEY_AND_VALUE`.
	Type *string `pulumi:"type"`
	// The value of the tag filter.
	Value *string `pulumi:"value"`
}

// DeploymentGroupEc2TagSetEc2TagFilterInput is an input type that accepts DeploymentGroupEc2TagSetEc2TagFilterArgs and DeploymentGroupEc2TagSetEc2TagFilterOutput values.
// You can construct a concrete instance of `DeploymentGroupEc2TagSetEc2TagFilterInput` via:
//
// 		 DeploymentGroupEc2TagSetEc2TagFilterArgs{...}
//
type DeploymentGroupEc2TagSetEc2TagFilterInput interface {
	pulumi.Input

	ToDeploymentGroupEc2TagSetEc2TagFilterOutput() DeploymentGroupEc2TagSetEc2TagFilterOutput
	ToDeploymentGroupEc2TagSetEc2TagFilterOutputWithContext(context.Context) DeploymentGroupEc2TagSetEc2TagFilterOutput
}

type DeploymentGroupEc2TagSetEc2TagFilterArgs struct {
	// The key of the tag filter.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The type of the tag filter, either `KEY_ONLY`, `VALUE_ONLY`, or `KEY_AND_VALUE`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The value of the tag filter.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DeploymentGroupEc2TagSetEc2TagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupEc2TagSetEc2TagFilter)(nil)).Elem()
}

func (i DeploymentGroupEc2TagSetEc2TagFilterArgs) ToDeploymentGroupEc2TagSetEc2TagFilterOutput() DeploymentGroupEc2TagSetEc2TagFilterOutput {
	return i.ToDeploymentGroupEc2TagSetEc2TagFilterOutputWithContext(context.Background())
}

func (i DeploymentGroupEc2TagSetEc2TagFilterArgs) ToDeploymentGroupEc2TagSetEc2TagFilterOutputWithContext(ctx context.Context) DeploymentGroupEc2TagSetEc2TagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupEc2TagSetEc2TagFilterOutput)
}

// DeploymentGroupEc2TagSetEc2TagFilterArrayInput is an input type that accepts DeploymentGroupEc2TagSetEc2TagFilterArray and DeploymentGroupEc2TagSetEc2TagFilterArrayOutput values.
// You can construct a concrete instance of `DeploymentGroupEc2TagSetEc2TagFilterArrayInput` via:
//
// 		 DeploymentGroupEc2TagSetEc2TagFilterArray{ DeploymentGroupEc2TagSetEc2TagFilterArgs{...} }
//
type DeploymentGroupEc2TagSetEc2TagFilterArrayInput interface {
	pulumi.Input

	ToDeploymentGroupEc2TagSetEc2TagFilterArrayOutput() DeploymentGroupEc2TagSetEc2TagFilterArrayOutput
	ToDeploymentGroupEc2TagSetEc2TagFilterArrayOutputWithContext(context.Context) DeploymentGroupEc2TagSetEc2TagFilterArrayOutput
}

type DeploymentGroupEc2TagSetEc2TagFilterArray []DeploymentGroupEc2TagSetEc2TagFilterInput

func (DeploymentGroupEc2TagSetEc2TagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentGroupEc2TagSetEc2TagFilter)(nil)).Elem()
}

func (i DeploymentGroupEc2TagSetEc2TagFilterArray) ToDeploymentGroupEc2TagSetEc2TagFilterArrayOutput() DeploymentGroupEc2TagSetEc2TagFilterArrayOutput {
	return i.ToDeploymentGroupEc2TagSetEc2TagFilterArrayOutputWithContext(context.Background())
}

func (i DeploymentGroupEc2TagSetEc2TagFilterArray) ToDeploymentGroupEc2TagSetEc2TagFilterArrayOutputWithContext(ctx context.Context) DeploymentGroupEc2TagSetEc2TagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupEc2TagSetEc2TagFilterArrayOutput)
}

type DeploymentGroupEc2TagSetEc2TagFilterOutput struct{ *pulumi.OutputState }

func (DeploymentGroupEc2TagSetEc2TagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupEc2TagSetEc2TagFilter)(nil)).Elem()
}

func (o DeploymentGroupEc2TagSetEc2TagFilterOutput) ToDeploymentGroupEc2TagSetEc2TagFilterOutput() DeploymentGroupEc2TagSetEc2TagFilterOutput {
	return o
}

func (o DeploymentGroupEc2TagSetEc2TagFilterOutput) ToDeploymentGroupEc2TagSetEc2TagFilterOutputWithContext(ctx context.Context) DeploymentGroupEc2TagSetEc2TagFilterOutput {
	return o
}

// The key of the tag filter.
func (o DeploymentGroupEc2TagSetEc2TagFilterOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentGroupEc2TagSetEc2TagFilter) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The type of the tag filter, either `KEY_ONLY`, `VALUE_ONLY`, or `KEY_AND_VALUE`.
func (o DeploymentGroupEc2TagSetEc2TagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentGroupEc2TagSetEc2TagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The value of the tag filter.
func (o DeploymentGroupEc2TagSetEc2TagFilterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentGroupEc2TagSetEc2TagFilter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DeploymentGroupEc2TagSetEc2TagFilterArrayOutput struct{ *pulumi.OutputState }

func (DeploymentGroupEc2TagSetEc2TagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentGroupEc2TagSetEc2TagFilter)(nil)).Elem()
}

func (o DeploymentGroupEc2TagSetEc2TagFilterArrayOutput) ToDeploymentGroupEc2TagSetEc2TagFilterArrayOutput() DeploymentGroupEc2TagSetEc2TagFilterArrayOutput {
	return o
}

func (o DeploymentGroupEc2TagSetEc2TagFilterArrayOutput) ToDeploymentGroupEc2TagSetEc2TagFilterArrayOutputWithContext(ctx context.Context) DeploymentGroupEc2TagSetEc2TagFilterArrayOutput {
	return o
}

func (o DeploymentGroupEc2TagSetEc2TagFilterArrayOutput) Index(i pulumi.IntInput) DeploymentGroupEc2TagSetEc2TagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentGroupEc2TagSetEc2TagFilter {
		return vs[0].([]DeploymentGroupEc2TagSetEc2TagFilter)[vs[1].(int)]
	}).(DeploymentGroupEc2TagSetEc2TagFilterOutput)
}

type DeploymentGroupEcsService struct {
	// The name of the ECS cluster.
	ClusterName string `pulumi:"clusterName"`
	// The name of the ECS service.
	ServiceName string `pulumi:"serviceName"`
}

// DeploymentGroupEcsServiceInput is an input type that accepts DeploymentGroupEcsServiceArgs and DeploymentGroupEcsServiceOutput values.
// You can construct a concrete instance of `DeploymentGroupEcsServiceInput` via:
//
// 		 DeploymentGroupEcsServiceArgs{...}
//
type DeploymentGroupEcsServiceInput interface {
	pulumi.Input

	ToDeploymentGroupEcsServiceOutput() DeploymentGroupEcsServiceOutput
	ToDeploymentGroupEcsServiceOutputWithContext(context.Context) DeploymentGroupEcsServiceOutput
}

type DeploymentGroupEcsServiceArgs struct {
	// The name of the ECS cluster.
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	// The name of the ECS service.
	ServiceName pulumi.StringInput `pulumi:"serviceName"`
}

func (DeploymentGroupEcsServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupEcsService)(nil)).Elem()
}

func (i DeploymentGroupEcsServiceArgs) ToDeploymentGroupEcsServiceOutput() DeploymentGroupEcsServiceOutput {
	return i.ToDeploymentGroupEcsServiceOutputWithContext(context.Background())
}

func (i DeploymentGroupEcsServiceArgs) ToDeploymentGroupEcsServiceOutputWithContext(ctx context.Context) DeploymentGroupEcsServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupEcsServiceOutput)
}

func (i DeploymentGroupEcsServiceArgs) ToDeploymentGroupEcsServicePtrOutput() DeploymentGroupEcsServicePtrOutput {
	return i.ToDeploymentGroupEcsServicePtrOutputWithContext(context.Background())
}

func (i DeploymentGroupEcsServiceArgs) ToDeploymentGroupEcsServicePtrOutputWithContext(ctx context.Context) DeploymentGroupEcsServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupEcsServiceOutput).ToDeploymentGroupEcsServicePtrOutputWithContext(ctx)
}

// DeploymentGroupEcsServicePtrInput is an input type that accepts DeploymentGroupEcsServiceArgs, DeploymentGroupEcsServicePtr and DeploymentGroupEcsServicePtrOutput values.
// You can construct a concrete instance of `DeploymentGroupEcsServicePtrInput` via:
//
// 		 DeploymentGroupEcsServiceArgs{...}
//
//  or:
//
// 		 nil
//
type DeploymentGroupEcsServicePtrInput interface {
	pulumi.Input

	ToDeploymentGroupEcsServicePtrOutput() DeploymentGroupEcsServicePtrOutput
	ToDeploymentGroupEcsServicePtrOutputWithContext(context.Context) DeploymentGroupEcsServicePtrOutput
}

type deploymentGroupEcsServicePtrType DeploymentGroupEcsServiceArgs

func DeploymentGroupEcsServicePtr(v *DeploymentGroupEcsServiceArgs) DeploymentGroupEcsServicePtrInput {
	return (*deploymentGroupEcsServicePtrType)(v)
}

func (*deploymentGroupEcsServicePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentGroupEcsService)(nil)).Elem()
}

func (i *deploymentGroupEcsServicePtrType) ToDeploymentGroupEcsServicePtrOutput() DeploymentGroupEcsServicePtrOutput {
	return i.ToDeploymentGroupEcsServicePtrOutputWithContext(context.Background())
}

func (i *deploymentGroupEcsServicePtrType) ToDeploymentGroupEcsServicePtrOutputWithContext(ctx context.Context) DeploymentGroupEcsServicePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupEcsServicePtrOutput)
}

type DeploymentGroupEcsServiceOutput struct{ *pulumi.OutputState }

func (DeploymentGroupEcsServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupEcsService)(nil)).Elem()
}

func (o DeploymentGroupEcsServiceOutput) ToDeploymentGroupEcsServiceOutput() DeploymentGroupEcsServiceOutput {
	return o
}

func (o DeploymentGroupEcsServiceOutput) ToDeploymentGroupEcsServiceOutputWithContext(ctx context.Context) DeploymentGroupEcsServiceOutput {
	return o
}

func (o DeploymentGroupEcsServiceOutput) ToDeploymentGroupEcsServicePtrOutput() DeploymentGroupEcsServicePtrOutput {
	return o.ToDeploymentGroupEcsServicePtrOutputWithContext(context.Background())
}

func (o DeploymentGroupEcsServiceOutput) ToDeploymentGroupEcsServicePtrOutputWithContext(ctx context.Context) DeploymentGroupEcsServicePtrOutput {
	return o.ApplyT(func(v DeploymentGroupEcsService) *DeploymentGroupEcsService {
		return &v
	}).(DeploymentGroupEcsServicePtrOutput)
}

// The name of the ECS cluster.
func (o DeploymentGroupEcsServiceOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentGroupEcsService) string { return v.ClusterName }).(pulumi.StringOutput)
}

// The name of the ECS service.
func (o DeploymentGroupEcsServiceOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentGroupEcsService) string { return v.ServiceName }).(pulumi.StringOutput)
}

type DeploymentGroupEcsServicePtrOutput struct{ *pulumi.OutputState }

func (DeploymentGroupEcsServicePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentGroupEcsService)(nil)).Elem()
}

func (o DeploymentGroupEcsServicePtrOutput) ToDeploymentGroupEcsServicePtrOutput() DeploymentGroupEcsServicePtrOutput {
	return o
}

func (o DeploymentGroupEcsServicePtrOutput) ToDeploymentGroupEcsServicePtrOutputWithContext(ctx context.Context) DeploymentGroupEcsServicePtrOutput {
	return o
}

func (o DeploymentGroupEcsServicePtrOutput) Elem() DeploymentGroupEcsServiceOutput {
	return o.ApplyT(func(v *DeploymentGroupEcsService) DeploymentGroupEcsService { return *v }).(DeploymentGroupEcsServiceOutput)
}

// The name of the ECS cluster.
func (o DeploymentGroupEcsServicePtrOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentGroupEcsService) string { return v.ClusterName }).(pulumi.StringOutput)
}

// The name of the ECS service.
func (o DeploymentGroupEcsServicePtrOutput) ServiceName() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentGroupEcsService) string { return v.ServiceName }).(pulumi.StringOutput)
}

type DeploymentGroupLoadBalancerInfo struct {
	// The Classic Elastic Load Balancer to use in a deployment. Conflicts with `targetGroupInfo` and `targetGroupPairInfo`.
	ElbInfos []DeploymentGroupLoadBalancerInfoElbInfo `pulumi:"elbInfos"`
	// The (Application/Network Load Balancer) target group to use in a deployment. Conflicts with `elbInfo` and `targetGroupPairInfo`.
	TargetGroupInfos []DeploymentGroupLoadBalancerInfoTargetGroupInfo `pulumi:"targetGroupInfos"`
	// The (Application/Network Load Balancer) target group pair to use in a deployment. Conflicts with `elbInfo` and `targetGroupInfo`.
	TargetGroupPairInfo *DeploymentGroupLoadBalancerInfoTargetGroupPairInfo `pulumi:"targetGroupPairInfo"`
}

// DeploymentGroupLoadBalancerInfoInput is an input type that accepts DeploymentGroupLoadBalancerInfoArgs and DeploymentGroupLoadBalancerInfoOutput values.
// You can construct a concrete instance of `DeploymentGroupLoadBalancerInfoInput` via:
//
// 		 DeploymentGroupLoadBalancerInfoArgs{...}
//
type DeploymentGroupLoadBalancerInfoInput interface {
	pulumi.Input

	ToDeploymentGroupLoadBalancerInfoOutput() DeploymentGroupLoadBalancerInfoOutput
	ToDeploymentGroupLoadBalancerInfoOutputWithContext(context.Context) DeploymentGroupLoadBalancerInfoOutput
}

type DeploymentGroupLoadBalancerInfoArgs struct {
	// The Classic Elastic Load Balancer to use in a deployment. Conflicts with `targetGroupInfo` and `targetGroupPairInfo`.
	ElbInfos DeploymentGroupLoadBalancerInfoElbInfoArrayInput `pulumi:"elbInfos"`
	// The (Application/Network Load Balancer) target group to use in a deployment. Conflicts with `elbInfo` and `targetGroupPairInfo`.
	TargetGroupInfos DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayInput `pulumi:"targetGroupInfos"`
	// The (Application/Network Load Balancer) target group pair to use in a deployment. Conflicts with `elbInfo` and `targetGroupInfo`.
	TargetGroupPairInfo DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrInput `pulumi:"targetGroupPairInfo"`
}

func (DeploymentGroupLoadBalancerInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupLoadBalancerInfo)(nil)).Elem()
}

func (i DeploymentGroupLoadBalancerInfoArgs) ToDeploymentGroupLoadBalancerInfoOutput() DeploymentGroupLoadBalancerInfoOutput {
	return i.ToDeploymentGroupLoadBalancerInfoOutputWithContext(context.Background())
}

func (i DeploymentGroupLoadBalancerInfoArgs) ToDeploymentGroupLoadBalancerInfoOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupLoadBalancerInfoOutput)
}

func (i DeploymentGroupLoadBalancerInfoArgs) ToDeploymentGroupLoadBalancerInfoPtrOutput() DeploymentGroupLoadBalancerInfoPtrOutput {
	return i.ToDeploymentGroupLoadBalancerInfoPtrOutputWithContext(context.Background())
}

func (i DeploymentGroupLoadBalancerInfoArgs) ToDeploymentGroupLoadBalancerInfoPtrOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupLoadBalancerInfoOutput).ToDeploymentGroupLoadBalancerInfoPtrOutputWithContext(ctx)
}

// DeploymentGroupLoadBalancerInfoPtrInput is an input type that accepts DeploymentGroupLoadBalancerInfoArgs, DeploymentGroupLoadBalancerInfoPtr and DeploymentGroupLoadBalancerInfoPtrOutput values.
// You can construct a concrete instance of `DeploymentGroupLoadBalancerInfoPtrInput` via:
//
// 		 DeploymentGroupLoadBalancerInfoArgs{...}
//
//  or:
//
// 		 nil
//
type DeploymentGroupLoadBalancerInfoPtrInput interface {
	pulumi.Input

	ToDeploymentGroupLoadBalancerInfoPtrOutput() DeploymentGroupLoadBalancerInfoPtrOutput
	ToDeploymentGroupLoadBalancerInfoPtrOutputWithContext(context.Context) DeploymentGroupLoadBalancerInfoPtrOutput
}

type deploymentGroupLoadBalancerInfoPtrType DeploymentGroupLoadBalancerInfoArgs

func DeploymentGroupLoadBalancerInfoPtr(v *DeploymentGroupLoadBalancerInfoArgs) DeploymentGroupLoadBalancerInfoPtrInput {
	return (*deploymentGroupLoadBalancerInfoPtrType)(v)
}

func (*deploymentGroupLoadBalancerInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentGroupLoadBalancerInfo)(nil)).Elem()
}

func (i *deploymentGroupLoadBalancerInfoPtrType) ToDeploymentGroupLoadBalancerInfoPtrOutput() DeploymentGroupLoadBalancerInfoPtrOutput {
	return i.ToDeploymentGroupLoadBalancerInfoPtrOutputWithContext(context.Background())
}

func (i *deploymentGroupLoadBalancerInfoPtrType) ToDeploymentGroupLoadBalancerInfoPtrOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupLoadBalancerInfoPtrOutput)
}

type DeploymentGroupLoadBalancerInfoOutput struct{ *pulumi.OutputState }

func (DeploymentGroupLoadBalancerInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupLoadBalancerInfo)(nil)).Elem()
}

func (o DeploymentGroupLoadBalancerInfoOutput) ToDeploymentGroupLoadBalancerInfoOutput() DeploymentGroupLoadBalancerInfoOutput {
	return o
}

func (o DeploymentGroupLoadBalancerInfoOutput) ToDeploymentGroupLoadBalancerInfoOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoOutput {
	return o
}

func (o DeploymentGroupLoadBalancerInfoOutput) ToDeploymentGroupLoadBalancerInfoPtrOutput() DeploymentGroupLoadBalancerInfoPtrOutput {
	return o.ToDeploymentGroupLoadBalancerInfoPtrOutputWithContext(context.Background())
}

func (o DeploymentGroupLoadBalancerInfoOutput) ToDeploymentGroupLoadBalancerInfoPtrOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoPtrOutput {
	return o.ApplyT(func(v DeploymentGroupLoadBalancerInfo) *DeploymentGroupLoadBalancerInfo {
		return &v
	}).(DeploymentGroupLoadBalancerInfoPtrOutput)
}

// The Classic Elastic Load Balancer to use in a deployment. Conflicts with `targetGroupInfo` and `targetGroupPairInfo`.
func (o DeploymentGroupLoadBalancerInfoOutput) ElbInfos() DeploymentGroupLoadBalancerInfoElbInfoArrayOutput {
	return o.ApplyT(func(v DeploymentGroupLoadBalancerInfo) []DeploymentGroupLoadBalancerInfoElbInfo { return v.ElbInfos }).(DeploymentGroupLoadBalancerInfoElbInfoArrayOutput)
}

// The (Application/Network Load Balancer) target group to use in a deployment. Conflicts with `elbInfo` and `targetGroupPairInfo`.
func (o DeploymentGroupLoadBalancerInfoOutput) TargetGroupInfos() DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput {
	return o.ApplyT(func(v DeploymentGroupLoadBalancerInfo) []DeploymentGroupLoadBalancerInfoTargetGroupInfo {
		return v.TargetGroupInfos
	}).(DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput)
}

// The (Application/Network Load Balancer) target group pair to use in a deployment. Conflicts with `elbInfo` and `targetGroupInfo`.
func (o DeploymentGroupLoadBalancerInfoOutput) TargetGroupPairInfo() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput {
	return o.ApplyT(func(v DeploymentGroupLoadBalancerInfo) *DeploymentGroupLoadBalancerInfoTargetGroupPairInfo {
		return v.TargetGroupPairInfo
	}).(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput)
}

type DeploymentGroupLoadBalancerInfoPtrOutput struct{ *pulumi.OutputState }

func (DeploymentGroupLoadBalancerInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentGroupLoadBalancerInfo)(nil)).Elem()
}

func (o DeploymentGroupLoadBalancerInfoPtrOutput) ToDeploymentGroupLoadBalancerInfoPtrOutput() DeploymentGroupLoadBalancerInfoPtrOutput {
	return o
}

func (o DeploymentGroupLoadBalancerInfoPtrOutput) ToDeploymentGroupLoadBalancerInfoPtrOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoPtrOutput {
	return o
}

func (o DeploymentGroupLoadBalancerInfoPtrOutput) Elem() DeploymentGroupLoadBalancerInfoOutput {
	return o.ApplyT(func(v *DeploymentGroupLoadBalancerInfo) DeploymentGroupLoadBalancerInfo { return *v }).(DeploymentGroupLoadBalancerInfoOutput)
}

// The Classic Elastic Load Balancer to use in a deployment. Conflicts with `targetGroupInfo` and `targetGroupPairInfo`.
func (o DeploymentGroupLoadBalancerInfoPtrOutput) ElbInfos() DeploymentGroupLoadBalancerInfoElbInfoArrayOutput {
	return o.ApplyT(func(v DeploymentGroupLoadBalancerInfo) []DeploymentGroupLoadBalancerInfoElbInfo { return v.ElbInfos }).(DeploymentGroupLoadBalancerInfoElbInfoArrayOutput)
}

// The (Application/Network Load Balancer) target group to use in a deployment. Conflicts with `elbInfo` and `targetGroupPairInfo`.
func (o DeploymentGroupLoadBalancerInfoPtrOutput) TargetGroupInfos() DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput {
	return o.ApplyT(func(v DeploymentGroupLoadBalancerInfo) []DeploymentGroupLoadBalancerInfoTargetGroupInfo {
		return v.TargetGroupInfos
	}).(DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput)
}

// The (Application/Network Load Balancer) target group pair to use in a deployment. Conflicts with `elbInfo` and `targetGroupInfo`.
func (o DeploymentGroupLoadBalancerInfoPtrOutput) TargetGroupPairInfo() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput {
	return o.ApplyT(func(v DeploymentGroupLoadBalancerInfo) *DeploymentGroupLoadBalancerInfoTargetGroupPairInfo {
		return v.TargetGroupPairInfo
	}).(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput)
}

type DeploymentGroupLoadBalancerInfoElbInfo struct {
	// The name of the load balancer that will be used to route traffic from original instances to replacement instances in a blue/green deployment. For in-place deployments, the name of the load balancer that instances are deregistered from so they are not serving traffic during a deployment, and then re-registered with after the deployment completes.
	Name *string `pulumi:"name"`
}

// DeploymentGroupLoadBalancerInfoElbInfoInput is an input type that accepts DeploymentGroupLoadBalancerInfoElbInfoArgs and DeploymentGroupLoadBalancerInfoElbInfoOutput values.
// You can construct a concrete instance of `DeploymentGroupLoadBalancerInfoElbInfoInput` via:
//
// 		 DeploymentGroupLoadBalancerInfoElbInfoArgs{...}
//
type DeploymentGroupLoadBalancerInfoElbInfoInput interface {
	pulumi.Input

	ToDeploymentGroupLoadBalancerInfoElbInfoOutput() DeploymentGroupLoadBalancerInfoElbInfoOutput
	ToDeploymentGroupLoadBalancerInfoElbInfoOutputWithContext(context.Context) DeploymentGroupLoadBalancerInfoElbInfoOutput
}

type DeploymentGroupLoadBalancerInfoElbInfoArgs struct {
	// The name of the load balancer that will be used to route traffic from original instances to replacement instances in a blue/green deployment. For in-place deployments, the name of the load balancer that instances are deregistered from so they are not serving traffic during a deployment, and then re-registered with after the deployment completes.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DeploymentGroupLoadBalancerInfoElbInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupLoadBalancerInfoElbInfo)(nil)).Elem()
}

func (i DeploymentGroupLoadBalancerInfoElbInfoArgs) ToDeploymentGroupLoadBalancerInfoElbInfoOutput() DeploymentGroupLoadBalancerInfoElbInfoOutput {
	return i.ToDeploymentGroupLoadBalancerInfoElbInfoOutputWithContext(context.Background())
}

func (i DeploymentGroupLoadBalancerInfoElbInfoArgs) ToDeploymentGroupLoadBalancerInfoElbInfoOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoElbInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupLoadBalancerInfoElbInfoOutput)
}

// DeploymentGroupLoadBalancerInfoElbInfoArrayInput is an input type that accepts DeploymentGroupLoadBalancerInfoElbInfoArray and DeploymentGroupLoadBalancerInfoElbInfoArrayOutput values.
// You can construct a concrete instance of `DeploymentGroupLoadBalancerInfoElbInfoArrayInput` via:
//
// 		 DeploymentGroupLoadBalancerInfoElbInfoArray{ DeploymentGroupLoadBalancerInfoElbInfoArgs{...} }
//
type DeploymentGroupLoadBalancerInfoElbInfoArrayInput interface {
	pulumi.Input

	ToDeploymentGroupLoadBalancerInfoElbInfoArrayOutput() DeploymentGroupLoadBalancerInfoElbInfoArrayOutput
	ToDeploymentGroupLoadBalancerInfoElbInfoArrayOutputWithContext(context.Context) DeploymentGroupLoadBalancerInfoElbInfoArrayOutput
}

type DeploymentGroupLoadBalancerInfoElbInfoArray []DeploymentGroupLoadBalancerInfoElbInfoInput

func (DeploymentGroupLoadBalancerInfoElbInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentGroupLoadBalancerInfoElbInfo)(nil)).Elem()
}

func (i DeploymentGroupLoadBalancerInfoElbInfoArray) ToDeploymentGroupLoadBalancerInfoElbInfoArrayOutput() DeploymentGroupLoadBalancerInfoElbInfoArrayOutput {
	return i.ToDeploymentGroupLoadBalancerInfoElbInfoArrayOutputWithContext(context.Background())
}

func (i DeploymentGroupLoadBalancerInfoElbInfoArray) ToDeploymentGroupLoadBalancerInfoElbInfoArrayOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoElbInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupLoadBalancerInfoElbInfoArrayOutput)
}

type DeploymentGroupLoadBalancerInfoElbInfoOutput struct{ *pulumi.OutputState }

func (DeploymentGroupLoadBalancerInfoElbInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupLoadBalancerInfoElbInfo)(nil)).Elem()
}

func (o DeploymentGroupLoadBalancerInfoElbInfoOutput) ToDeploymentGroupLoadBalancerInfoElbInfoOutput() DeploymentGroupLoadBalancerInfoElbInfoOutput {
	return o
}

func (o DeploymentGroupLoadBalancerInfoElbInfoOutput) ToDeploymentGroupLoadBalancerInfoElbInfoOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoElbInfoOutput {
	return o
}

// The name of the load balancer that will be used to route traffic from original instances to replacement instances in a blue/green deployment. For in-place deployments, the name of the load balancer that instances are deregistered from so they are not serving traffic during a deployment, and then re-registered with after the deployment completes.
func (o DeploymentGroupLoadBalancerInfoElbInfoOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentGroupLoadBalancerInfoElbInfo) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DeploymentGroupLoadBalancerInfoElbInfoArrayOutput struct{ *pulumi.OutputState }

func (DeploymentGroupLoadBalancerInfoElbInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentGroupLoadBalancerInfoElbInfo)(nil)).Elem()
}

func (o DeploymentGroupLoadBalancerInfoElbInfoArrayOutput) ToDeploymentGroupLoadBalancerInfoElbInfoArrayOutput() DeploymentGroupLoadBalancerInfoElbInfoArrayOutput {
	return o
}

func (o DeploymentGroupLoadBalancerInfoElbInfoArrayOutput) ToDeploymentGroupLoadBalancerInfoElbInfoArrayOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoElbInfoArrayOutput {
	return o
}

func (o DeploymentGroupLoadBalancerInfoElbInfoArrayOutput) Index(i pulumi.IntInput) DeploymentGroupLoadBalancerInfoElbInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentGroupLoadBalancerInfoElbInfo {
		return vs[0].([]DeploymentGroupLoadBalancerInfoElbInfo)[vs[1].(int)]
	}).(DeploymentGroupLoadBalancerInfoElbInfoOutput)
}

type DeploymentGroupLoadBalancerInfoTargetGroupInfo struct {
	// The name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment completes.
	Name *string `pulumi:"name"`
}

// DeploymentGroupLoadBalancerInfoTargetGroupInfoInput is an input type that accepts DeploymentGroupLoadBalancerInfoTargetGroupInfoArgs and DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput values.
// You can construct a concrete instance of `DeploymentGroupLoadBalancerInfoTargetGroupInfoInput` via:
//
// 		 DeploymentGroupLoadBalancerInfoTargetGroupInfoArgs{...}
//
type DeploymentGroupLoadBalancerInfoTargetGroupInfoInput interface {
	pulumi.Input

	ToDeploymentGroupLoadBalancerInfoTargetGroupInfoOutput() DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput
	ToDeploymentGroupLoadBalancerInfoTargetGroupInfoOutputWithContext(context.Context) DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput
}

type DeploymentGroupLoadBalancerInfoTargetGroupInfoArgs struct {
	// The name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment completes.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (DeploymentGroupLoadBalancerInfoTargetGroupInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupLoadBalancerInfoTargetGroupInfo)(nil)).Elem()
}

func (i DeploymentGroupLoadBalancerInfoTargetGroupInfoArgs) ToDeploymentGroupLoadBalancerInfoTargetGroupInfoOutput() DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput {
	return i.ToDeploymentGroupLoadBalancerInfoTargetGroupInfoOutputWithContext(context.Background())
}

func (i DeploymentGroupLoadBalancerInfoTargetGroupInfoArgs) ToDeploymentGroupLoadBalancerInfoTargetGroupInfoOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput)
}

// DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayInput is an input type that accepts DeploymentGroupLoadBalancerInfoTargetGroupInfoArray and DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput values.
// You can construct a concrete instance of `DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayInput` via:
//
// 		 DeploymentGroupLoadBalancerInfoTargetGroupInfoArray{ DeploymentGroupLoadBalancerInfoTargetGroupInfoArgs{...} }
//
type DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayInput interface {
	pulumi.Input

	ToDeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput() DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput
	ToDeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutputWithContext(context.Context) DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput
}

type DeploymentGroupLoadBalancerInfoTargetGroupInfoArray []DeploymentGroupLoadBalancerInfoTargetGroupInfoInput

func (DeploymentGroupLoadBalancerInfoTargetGroupInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentGroupLoadBalancerInfoTargetGroupInfo)(nil)).Elem()
}

func (i DeploymentGroupLoadBalancerInfoTargetGroupInfoArray) ToDeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput() DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput {
	return i.ToDeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutputWithContext(context.Background())
}

func (i DeploymentGroupLoadBalancerInfoTargetGroupInfoArray) ToDeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput)
}

type DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput struct{ *pulumi.OutputState }

func (DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupLoadBalancerInfoTargetGroupInfo)(nil)).Elem()
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput) ToDeploymentGroupLoadBalancerInfoTargetGroupInfoOutput() DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput {
	return o
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput) ToDeploymentGroupLoadBalancerInfoTargetGroupInfoOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput {
	return o
}

// The name of the target group that instances in the original environment are deregistered from, and instances in the replacement environment registered with. For in-place deployments, the name of the target group that instances are deregistered from, so they are not serving traffic during a deployment, and then re-registered with after the deployment completes.
func (o DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentGroupLoadBalancerInfoTargetGroupInfo) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput struct{ *pulumi.OutputState }

func (DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentGroupLoadBalancerInfoTargetGroupInfo)(nil)).Elem()
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput) ToDeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput() DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput {
	return o
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput) ToDeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput {
	return o
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput) Index(i pulumi.IntInput) DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentGroupLoadBalancerInfoTargetGroupInfo {
		return vs[0].([]DeploymentGroupLoadBalancerInfoTargetGroupInfo)[vs[1].(int)]
	}).(DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput)
}

type DeploymentGroupLoadBalancerInfoTargetGroupPairInfo struct {
	// Configuration block for the production traffic route (documented below).
	ProdTrafficRoute DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRoute `pulumi:"prodTrafficRoute"`
	// Configuration blocks for a target group within a target group pair (documented below).
	TargetGroups []DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroup `pulumi:"targetGroups"`
	// Configuration block for the test traffic route (documented below).
	TestTrafficRoute *DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoute `pulumi:"testTrafficRoute"`
}

// DeploymentGroupLoadBalancerInfoTargetGroupPairInfoInput is an input type that accepts DeploymentGroupLoadBalancerInfoTargetGroupPairInfoArgs and DeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutput values.
// You can construct a concrete instance of `DeploymentGroupLoadBalancerInfoTargetGroupPairInfoInput` via:
//
// 		 DeploymentGroupLoadBalancerInfoTargetGroupPairInfoArgs{...}
//
type DeploymentGroupLoadBalancerInfoTargetGroupPairInfoInput interface {
	pulumi.Input

	ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutput() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutput
	ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutputWithContext(context.Context) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutput
}

type DeploymentGroupLoadBalancerInfoTargetGroupPairInfoArgs struct {
	// Configuration block for the production traffic route (documented below).
	ProdTrafficRoute DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteInput `pulumi:"prodTrafficRoute"`
	// Configuration blocks for a target group within a target group pair (documented below).
	TargetGroups DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayInput `pulumi:"targetGroups"`
	// Configuration block for the test traffic route (documented below).
	TestTrafficRoute DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrInput `pulumi:"testTrafficRoute"`
}

func (DeploymentGroupLoadBalancerInfoTargetGroupPairInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupLoadBalancerInfoTargetGroupPairInfo)(nil)).Elem()
}

func (i DeploymentGroupLoadBalancerInfoTargetGroupPairInfoArgs) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutput() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutput {
	return i.ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutputWithContext(context.Background())
}

func (i DeploymentGroupLoadBalancerInfoTargetGroupPairInfoArgs) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutput)
}

func (i DeploymentGroupLoadBalancerInfoTargetGroupPairInfoArgs) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput {
	return i.ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutputWithContext(context.Background())
}

func (i DeploymentGroupLoadBalancerInfoTargetGroupPairInfoArgs) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutput).ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutputWithContext(ctx)
}

// DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrInput is an input type that accepts DeploymentGroupLoadBalancerInfoTargetGroupPairInfoArgs, DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtr and DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput values.
// You can construct a concrete instance of `DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrInput` via:
//
// 		 DeploymentGroupLoadBalancerInfoTargetGroupPairInfoArgs{...}
//
//  or:
//
// 		 nil
//
type DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrInput interface {
	pulumi.Input

	ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput
	ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutputWithContext(context.Context) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput
}

type deploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrType DeploymentGroupLoadBalancerInfoTargetGroupPairInfoArgs

func DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtr(v *DeploymentGroupLoadBalancerInfoTargetGroupPairInfoArgs) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrInput {
	return (*deploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrType)(v)
}

func (*deploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentGroupLoadBalancerInfoTargetGroupPairInfo)(nil)).Elem()
}

func (i *deploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrType) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput {
	return i.ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutputWithContext(context.Background())
}

func (i *deploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrType) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput)
}

type DeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutput struct{ *pulumi.OutputState }

func (DeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupLoadBalancerInfoTargetGroupPairInfo)(nil)).Elem()
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutput) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutput() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutput {
	return o
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutput) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutput {
	return o
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutput) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput {
	return o.ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutputWithContext(context.Background())
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutput) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput {
	return o.ApplyT(func(v DeploymentGroupLoadBalancerInfoTargetGroupPairInfo) *DeploymentGroupLoadBalancerInfoTargetGroupPairInfo {
		return &v
	}).(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput)
}

// Configuration block for the production traffic route (documented below).
func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutput) ProdTrafficRoute() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteOutput {
	return o.ApplyT(func(v DeploymentGroupLoadBalancerInfoTargetGroupPairInfo) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRoute {
		return v.ProdTrafficRoute
	}).(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteOutput)
}

// Configuration blocks for a target group within a target group pair (documented below).
func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutput) TargetGroups() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayOutput {
	return o.ApplyT(func(v DeploymentGroupLoadBalancerInfoTargetGroupPairInfo) []DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroup {
		return v.TargetGroups
	}).(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayOutput)
}

// Configuration block for the test traffic route (documented below).
func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutput) TestTrafficRoute() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput {
	return o.ApplyT(func(v DeploymentGroupLoadBalancerInfoTargetGroupPairInfo) *DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoute {
		return v.TestTrafficRoute
	}).(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput)
}

type DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput struct{ *pulumi.OutputState }

func (DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentGroupLoadBalancerInfoTargetGroupPairInfo)(nil)).Elem()
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput {
	return o
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput {
	return o
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput) Elem() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutput {
	return o.ApplyT(func(v *DeploymentGroupLoadBalancerInfoTargetGroupPairInfo) DeploymentGroupLoadBalancerInfoTargetGroupPairInfo {
		return *v
	}).(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutput)
}

// Configuration block for the production traffic route (documented below).
func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput) ProdTrafficRoute() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteOutput {
	return o.ApplyT(func(v DeploymentGroupLoadBalancerInfoTargetGroupPairInfo) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRoute {
		return v.ProdTrafficRoute
	}).(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteOutput)
}

// Configuration blocks for a target group within a target group pair (documented below).
func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput) TargetGroups() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayOutput {
	return o.ApplyT(func(v DeploymentGroupLoadBalancerInfoTargetGroupPairInfo) []DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroup {
		return v.TargetGroups
	}).(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayOutput)
}

// Configuration block for the test traffic route (documented below).
func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput) TestTrafficRoute() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput {
	return o.ApplyT(func(v DeploymentGroupLoadBalancerInfoTargetGroupPairInfo) *DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoute {
		return v.TestTrafficRoute
	}).(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput)
}

type DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRoute struct {
	// List of Amazon Resource Names (ARNs) of the load balancer listeners.
	ListenerArns []string `pulumi:"listenerArns"`
}

// DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteInput is an input type that accepts DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteArgs and DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteOutput values.
// You can construct a concrete instance of `DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteInput` via:
//
// 		 DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteArgs{...}
//
type DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteInput interface {
	pulumi.Input

	ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteOutput() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteOutput
	ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteOutputWithContext(context.Context) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteOutput
}

type DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteArgs struct {
	// List of Amazon Resource Names (ARNs) of the load balancer listeners.
	ListenerArns pulumi.StringArrayInput `pulumi:"listenerArns"`
}

func (DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRoute)(nil)).Elem()
}

func (i DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteArgs) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteOutput() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteOutput {
	return i.ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteOutputWithContext(context.Background())
}

func (i DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteArgs) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteOutput)
}

type DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteOutput struct{ *pulumi.OutputState }

func (DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRoute)(nil)).Elem()
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteOutput) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteOutput() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteOutput {
	return o
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteOutput) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteOutput {
	return o
}

// List of Amazon Resource Names (ARNs) of the load balancer listeners.
func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteOutput) ListenerArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRoute) []string {
		return v.ListenerArns
	}).(pulumi.StringArrayOutput)
}

type DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroup struct {
	// Name of the target group.
	Name string `pulumi:"name"`
}

// DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupInput is an input type that accepts DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArgs and DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupOutput values.
// You can construct a concrete instance of `DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupInput` via:
//
// 		 DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArgs{...}
//
type DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupInput interface {
	pulumi.Input

	ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupOutput() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupOutput
	ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupOutputWithContext(context.Context) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupOutput
}

type DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArgs struct {
	// Name of the target group.
	Name pulumi.StringInput `pulumi:"name"`
}

func (DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroup)(nil)).Elem()
}

func (i DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArgs) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupOutput() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupOutput {
	return i.ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupOutputWithContext(context.Background())
}

func (i DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArgs) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupOutput)
}

// DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayInput is an input type that accepts DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArray and DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayOutput values.
// You can construct a concrete instance of `DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayInput` via:
//
// 		 DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArray{ DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArgs{...} }
//
type DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayInput interface {
	pulumi.Input

	ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayOutput() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayOutput
	ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayOutputWithContext(context.Context) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayOutput
}

type DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArray []DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupInput

func (DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroup)(nil)).Elem()
}

func (i DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArray) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayOutput() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayOutput {
	return i.ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayOutputWithContext(context.Background())
}

func (i DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArray) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayOutput)
}

type DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupOutput struct{ *pulumi.OutputState }

func (DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroup)(nil)).Elem()
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupOutput) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupOutput() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupOutput {
	return o
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupOutput) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupOutput {
	return o
}

// Name of the target group.
func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroup) string { return v.Name }).(pulumi.StringOutput)
}

type DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayOutput struct{ *pulumi.OutputState }

func (DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroup)(nil)).Elem()
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayOutput) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayOutput() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayOutput {
	return o
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayOutput) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayOutput {
	return o
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayOutput) Index(i pulumi.IntInput) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroup {
		return vs[0].([]DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroup)[vs[1].(int)]
	}).(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupOutput)
}

type DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoute struct {
	// List of Amazon Resource Names (ARNs) of the load balancer listeners.
	ListenerArns []string `pulumi:"listenerArns"`
}

// DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteInput is an input type that accepts DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteArgs and DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteOutput values.
// You can construct a concrete instance of `DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteInput` via:
//
// 		 DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteArgs{...}
//
type DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteInput interface {
	pulumi.Input

	ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteOutput() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteOutput
	ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteOutputWithContext(context.Context) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteOutput
}

type DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteArgs struct {
	// List of Amazon Resource Names (ARNs) of the load balancer listeners.
	ListenerArns pulumi.StringArrayInput `pulumi:"listenerArns"`
}

func (DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoute)(nil)).Elem()
}

func (i DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteArgs) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteOutput() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteOutput {
	return i.ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteOutputWithContext(context.Background())
}

func (i DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteArgs) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteOutput)
}

func (i DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteArgs) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput {
	return i.ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutputWithContext(context.Background())
}

func (i DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteArgs) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteOutput).ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutputWithContext(ctx)
}

// DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrInput is an input type that accepts DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteArgs, DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtr and DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput values.
// You can construct a concrete instance of `DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrInput` via:
//
// 		 DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteArgs{...}
//
//  or:
//
// 		 nil
//
type DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrInput interface {
	pulumi.Input

	ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput
	ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutputWithContext(context.Context) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput
}

type deploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrType DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteArgs

func DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtr(v *DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteArgs) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrInput {
	return (*deploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrType)(v)
}

func (*deploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoute)(nil)).Elem()
}

func (i *deploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrType) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput {
	return i.ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutputWithContext(context.Background())
}

func (i *deploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrType) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput)
}

type DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteOutput struct{ *pulumi.OutputState }

func (DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoute)(nil)).Elem()
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteOutput) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteOutput() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteOutput {
	return o
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteOutput) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteOutput {
	return o
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteOutput) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput {
	return o.ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutputWithContext(context.Background())
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteOutput) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput {
	return o.ApplyT(func(v DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoute) *DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoute {
		return &v
	}).(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput)
}

// List of Amazon Resource Names (ARNs) of the load balancer listeners.
func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteOutput) ListenerArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoute) []string {
		return v.ListenerArns
	}).(pulumi.StringArrayOutput)
}

type DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput struct{ *pulumi.OutputState }

func (DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoute)(nil)).Elem()
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput {
	return o
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput) ToDeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutputWithContext(ctx context.Context) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput {
	return o
}

func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput) Elem() DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteOutput {
	return o.ApplyT(func(v *DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoute) DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoute {
		return *v
	}).(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteOutput)
}

// List of Amazon Resource Names (ARNs) of the load balancer listeners.
func (o DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput) ListenerArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoute) []string {
		return v.ListenerArns
	}).(pulumi.StringArrayOutput)
}

type DeploymentGroupOnPremisesInstanceTagFilter struct {
	// The key of the tag filter.
	Key *string `pulumi:"key"`
	// The type of the tag filter, either `KEY_ONLY`, `VALUE_ONLY`, or `KEY_AND_VALUE`.
	Type *string `pulumi:"type"`
	// The value of the tag filter.
	Value *string `pulumi:"value"`
}

// DeploymentGroupOnPremisesInstanceTagFilterInput is an input type that accepts DeploymentGroupOnPremisesInstanceTagFilterArgs and DeploymentGroupOnPremisesInstanceTagFilterOutput values.
// You can construct a concrete instance of `DeploymentGroupOnPremisesInstanceTagFilterInput` via:
//
// 		 DeploymentGroupOnPremisesInstanceTagFilterArgs{...}
//
type DeploymentGroupOnPremisesInstanceTagFilterInput interface {
	pulumi.Input

	ToDeploymentGroupOnPremisesInstanceTagFilterOutput() DeploymentGroupOnPremisesInstanceTagFilterOutput
	ToDeploymentGroupOnPremisesInstanceTagFilterOutputWithContext(context.Context) DeploymentGroupOnPremisesInstanceTagFilterOutput
}

type DeploymentGroupOnPremisesInstanceTagFilterArgs struct {
	// The key of the tag filter.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The type of the tag filter, either `KEY_ONLY`, `VALUE_ONLY`, or `KEY_AND_VALUE`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The value of the tag filter.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (DeploymentGroupOnPremisesInstanceTagFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupOnPremisesInstanceTagFilter)(nil)).Elem()
}

func (i DeploymentGroupOnPremisesInstanceTagFilterArgs) ToDeploymentGroupOnPremisesInstanceTagFilterOutput() DeploymentGroupOnPremisesInstanceTagFilterOutput {
	return i.ToDeploymentGroupOnPremisesInstanceTagFilterOutputWithContext(context.Background())
}

func (i DeploymentGroupOnPremisesInstanceTagFilterArgs) ToDeploymentGroupOnPremisesInstanceTagFilterOutputWithContext(ctx context.Context) DeploymentGroupOnPremisesInstanceTagFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupOnPremisesInstanceTagFilterOutput)
}

// DeploymentGroupOnPremisesInstanceTagFilterArrayInput is an input type that accepts DeploymentGroupOnPremisesInstanceTagFilterArray and DeploymentGroupOnPremisesInstanceTagFilterArrayOutput values.
// You can construct a concrete instance of `DeploymentGroupOnPremisesInstanceTagFilterArrayInput` via:
//
// 		 DeploymentGroupOnPremisesInstanceTagFilterArray{ DeploymentGroupOnPremisesInstanceTagFilterArgs{...} }
//
type DeploymentGroupOnPremisesInstanceTagFilterArrayInput interface {
	pulumi.Input

	ToDeploymentGroupOnPremisesInstanceTagFilterArrayOutput() DeploymentGroupOnPremisesInstanceTagFilterArrayOutput
	ToDeploymentGroupOnPremisesInstanceTagFilterArrayOutputWithContext(context.Context) DeploymentGroupOnPremisesInstanceTagFilterArrayOutput
}

type DeploymentGroupOnPremisesInstanceTagFilterArray []DeploymentGroupOnPremisesInstanceTagFilterInput

func (DeploymentGroupOnPremisesInstanceTagFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentGroupOnPremisesInstanceTagFilter)(nil)).Elem()
}

func (i DeploymentGroupOnPremisesInstanceTagFilterArray) ToDeploymentGroupOnPremisesInstanceTagFilterArrayOutput() DeploymentGroupOnPremisesInstanceTagFilterArrayOutput {
	return i.ToDeploymentGroupOnPremisesInstanceTagFilterArrayOutputWithContext(context.Background())
}

func (i DeploymentGroupOnPremisesInstanceTagFilterArray) ToDeploymentGroupOnPremisesInstanceTagFilterArrayOutputWithContext(ctx context.Context) DeploymentGroupOnPremisesInstanceTagFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupOnPremisesInstanceTagFilterArrayOutput)
}

type DeploymentGroupOnPremisesInstanceTagFilterOutput struct{ *pulumi.OutputState }

func (DeploymentGroupOnPremisesInstanceTagFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupOnPremisesInstanceTagFilter)(nil)).Elem()
}

func (o DeploymentGroupOnPremisesInstanceTagFilterOutput) ToDeploymentGroupOnPremisesInstanceTagFilterOutput() DeploymentGroupOnPremisesInstanceTagFilterOutput {
	return o
}

func (o DeploymentGroupOnPremisesInstanceTagFilterOutput) ToDeploymentGroupOnPremisesInstanceTagFilterOutputWithContext(ctx context.Context) DeploymentGroupOnPremisesInstanceTagFilterOutput {
	return o
}

// The key of the tag filter.
func (o DeploymentGroupOnPremisesInstanceTagFilterOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentGroupOnPremisesInstanceTagFilter) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The type of the tag filter, either `KEY_ONLY`, `VALUE_ONLY`, or `KEY_AND_VALUE`.
func (o DeploymentGroupOnPremisesInstanceTagFilterOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentGroupOnPremisesInstanceTagFilter) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The value of the tag filter.
func (o DeploymentGroupOnPremisesInstanceTagFilterOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentGroupOnPremisesInstanceTagFilter) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type DeploymentGroupOnPremisesInstanceTagFilterArrayOutput struct{ *pulumi.OutputState }

func (DeploymentGroupOnPremisesInstanceTagFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentGroupOnPremisesInstanceTagFilter)(nil)).Elem()
}

func (o DeploymentGroupOnPremisesInstanceTagFilterArrayOutput) ToDeploymentGroupOnPremisesInstanceTagFilterArrayOutput() DeploymentGroupOnPremisesInstanceTagFilterArrayOutput {
	return o
}

func (o DeploymentGroupOnPremisesInstanceTagFilterArrayOutput) ToDeploymentGroupOnPremisesInstanceTagFilterArrayOutputWithContext(ctx context.Context) DeploymentGroupOnPremisesInstanceTagFilterArrayOutput {
	return o
}

func (o DeploymentGroupOnPremisesInstanceTagFilterArrayOutput) Index(i pulumi.IntInput) DeploymentGroupOnPremisesInstanceTagFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentGroupOnPremisesInstanceTagFilter {
		return vs[0].([]DeploymentGroupOnPremisesInstanceTagFilter)[vs[1].(int)]
	}).(DeploymentGroupOnPremisesInstanceTagFilterOutput)
}

type DeploymentGroupTriggerConfiguration struct {
	// The event type or types for which notifications are triggered. Some values that are supported: `DeploymentStart`, `DeploymentSuccess`, `DeploymentFailure`, `DeploymentStop`, `DeploymentRollback`, `InstanceStart`, `InstanceSuccess`, `InstanceFailure`.  See [the CodeDeploy documentation][1] for all possible values.
	TriggerEvents []string `pulumi:"triggerEvents"`
	// The name of the notification trigger.
	TriggerName string `pulumi:"triggerName"`
	// The ARN of the SNS topic through which notifications are sent.
	TriggerTargetArn string `pulumi:"triggerTargetArn"`
}

// DeploymentGroupTriggerConfigurationInput is an input type that accepts DeploymentGroupTriggerConfigurationArgs and DeploymentGroupTriggerConfigurationOutput values.
// You can construct a concrete instance of `DeploymentGroupTriggerConfigurationInput` via:
//
// 		 DeploymentGroupTriggerConfigurationArgs{...}
//
type DeploymentGroupTriggerConfigurationInput interface {
	pulumi.Input

	ToDeploymentGroupTriggerConfigurationOutput() DeploymentGroupTriggerConfigurationOutput
	ToDeploymentGroupTriggerConfigurationOutputWithContext(context.Context) DeploymentGroupTriggerConfigurationOutput
}

type DeploymentGroupTriggerConfigurationArgs struct {
	// The event type or types for which notifications are triggered. Some values that are supported: `DeploymentStart`, `DeploymentSuccess`, `DeploymentFailure`, `DeploymentStop`, `DeploymentRollback`, `InstanceStart`, `InstanceSuccess`, `InstanceFailure`.  See [the CodeDeploy documentation][1] for all possible values.
	TriggerEvents pulumi.StringArrayInput `pulumi:"triggerEvents"`
	// The name of the notification trigger.
	TriggerName pulumi.StringInput `pulumi:"triggerName"`
	// The ARN of the SNS topic through which notifications are sent.
	TriggerTargetArn pulumi.StringInput `pulumi:"triggerTargetArn"`
}

func (DeploymentGroupTriggerConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupTriggerConfiguration)(nil)).Elem()
}

func (i DeploymentGroupTriggerConfigurationArgs) ToDeploymentGroupTriggerConfigurationOutput() DeploymentGroupTriggerConfigurationOutput {
	return i.ToDeploymentGroupTriggerConfigurationOutputWithContext(context.Background())
}

func (i DeploymentGroupTriggerConfigurationArgs) ToDeploymentGroupTriggerConfigurationOutputWithContext(ctx context.Context) DeploymentGroupTriggerConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupTriggerConfigurationOutput)
}

// DeploymentGroupTriggerConfigurationArrayInput is an input type that accepts DeploymentGroupTriggerConfigurationArray and DeploymentGroupTriggerConfigurationArrayOutput values.
// You can construct a concrete instance of `DeploymentGroupTriggerConfigurationArrayInput` via:
//
// 		 DeploymentGroupTriggerConfigurationArray{ DeploymentGroupTriggerConfigurationArgs{...} }
//
type DeploymentGroupTriggerConfigurationArrayInput interface {
	pulumi.Input

	ToDeploymentGroupTriggerConfigurationArrayOutput() DeploymentGroupTriggerConfigurationArrayOutput
	ToDeploymentGroupTriggerConfigurationArrayOutputWithContext(context.Context) DeploymentGroupTriggerConfigurationArrayOutput
}

type DeploymentGroupTriggerConfigurationArray []DeploymentGroupTriggerConfigurationInput

func (DeploymentGroupTriggerConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentGroupTriggerConfiguration)(nil)).Elem()
}

func (i DeploymentGroupTriggerConfigurationArray) ToDeploymentGroupTriggerConfigurationArrayOutput() DeploymentGroupTriggerConfigurationArrayOutput {
	return i.ToDeploymentGroupTriggerConfigurationArrayOutputWithContext(context.Background())
}

func (i DeploymentGroupTriggerConfigurationArray) ToDeploymentGroupTriggerConfigurationArrayOutputWithContext(ctx context.Context) DeploymentGroupTriggerConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupTriggerConfigurationArrayOutput)
}

type DeploymentGroupTriggerConfigurationOutput struct{ *pulumi.OutputState }

func (DeploymentGroupTriggerConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentGroupTriggerConfiguration)(nil)).Elem()
}

func (o DeploymentGroupTriggerConfigurationOutput) ToDeploymentGroupTriggerConfigurationOutput() DeploymentGroupTriggerConfigurationOutput {
	return o
}

func (o DeploymentGroupTriggerConfigurationOutput) ToDeploymentGroupTriggerConfigurationOutputWithContext(ctx context.Context) DeploymentGroupTriggerConfigurationOutput {
	return o
}

// The event type or types for which notifications are triggered. Some values that are supported: `DeploymentStart`, `DeploymentSuccess`, `DeploymentFailure`, `DeploymentStop`, `DeploymentRollback`, `InstanceStart`, `InstanceSuccess`, `InstanceFailure`.  See [the CodeDeploy documentation][1] for all possible values.
func (o DeploymentGroupTriggerConfigurationOutput) TriggerEvents() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeploymentGroupTriggerConfiguration) []string { return v.TriggerEvents }).(pulumi.StringArrayOutput)
}

// The name of the notification trigger.
func (o DeploymentGroupTriggerConfigurationOutput) TriggerName() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentGroupTriggerConfiguration) string { return v.TriggerName }).(pulumi.StringOutput)
}

// The ARN of the SNS topic through which notifications are sent.
func (o DeploymentGroupTriggerConfigurationOutput) TriggerTargetArn() pulumi.StringOutput {
	return o.ApplyT(func(v DeploymentGroupTriggerConfiguration) string { return v.TriggerTargetArn }).(pulumi.StringOutput)
}

type DeploymentGroupTriggerConfigurationArrayOutput struct{ *pulumi.OutputState }

func (DeploymentGroupTriggerConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeploymentGroupTriggerConfiguration)(nil)).Elem()
}

func (o DeploymentGroupTriggerConfigurationArrayOutput) ToDeploymentGroupTriggerConfigurationArrayOutput() DeploymentGroupTriggerConfigurationArrayOutput {
	return o
}

func (o DeploymentGroupTriggerConfigurationArrayOutput) ToDeploymentGroupTriggerConfigurationArrayOutputWithContext(ctx context.Context) DeploymentGroupTriggerConfigurationArrayOutput {
	return o
}

func (o DeploymentGroupTriggerConfigurationArrayOutput) Index(i pulumi.IntInput) DeploymentGroupTriggerConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeploymentGroupTriggerConfiguration {
		return vs[0].([]DeploymentGroupTriggerConfiguration)[vs[1].(int)]
	}).(DeploymentGroupTriggerConfigurationOutput)
}

func init() {
	pulumi.RegisterOutputType(DeploymentConfigMinimumHealthyHostsOutput{})
	pulumi.RegisterOutputType(DeploymentConfigMinimumHealthyHostsPtrOutput{})
	pulumi.RegisterOutputType(DeploymentConfigTrafficRoutingConfigOutput{})
	pulumi.RegisterOutputType(DeploymentConfigTrafficRoutingConfigPtrOutput{})
	pulumi.RegisterOutputType(DeploymentConfigTrafficRoutingConfigTimeBasedCanaryOutput{})
	pulumi.RegisterOutputType(DeploymentConfigTrafficRoutingConfigTimeBasedCanaryPtrOutput{})
	pulumi.RegisterOutputType(DeploymentConfigTrafficRoutingConfigTimeBasedLinearOutput{})
	pulumi.RegisterOutputType(DeploymentConfigTrafficRoutingConfigTimeBasedLinearPtrOutput{})
	pulumi.RegisterOutputType(DeploymentGroupAlarmConfigurationOutput{})
	pulumi.RegisterOutputType(DeploymentGroupAlarmConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeploymentGroupAutoRollbackConfigurationOutput{})
	pulumi.RegisterOutputType(DeploymentGroupAutoRollbackConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DeploymentGroupBlueGreenDeploymentConfigOutput{})
	pulumi.RegisterOutputType(DeploymentGroupBlueGreenDeploymentConfigPtrOutput{})
	pulumi.RegisterOutputType(DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionOutput{})
	pulumi.RegisterOutputType(DeploymentGroupBlueGreenDeploymentConfigDeploymentReadyOptionPtrOutput{})
	pulumi.RegisterOutputType(DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionOutput{})
	pulumi.RegisterOutputType(DeploymentGroupBlueGreenDeploymentConfigGreenFleetProvisioningOptionPtrOutput{})
	pulumi.RegisterOutputType(DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessOutput{})
	pulumi.RegisterOutputType(DeploymentGroupBlueGreenDeploymentConfigTerminateBlueInstancesOnDeploymentSuccessPtrOutput{})
	pulumi.RegisterOutputType(DeploymentGroupDeploymentStyleOutput{})
	pulumi.RegisterOutputType(DeploymentGroupDeploymentStylePtrOutput{})
	pulumi.RegisterOutputType(DeploymentGroupEc2TagFilterOutput{})
	pulumi.RegisterOutputType(DeploymentGroupEc2TagFilterArrayOutput{})
	pulumi.RegisterOutputType(DeploymentGroupEc2TagSetOutput{})
	pulumi.RegisterOutputType(DeploymentGroupEc2TagSetArrayOutput{})
	pulumi.RegisterOutputType(DeploymentGroupEc2TagSetEc2TagFilterOutput{})
	pulumi.RegisterOutputType(DeploymentGroupEc2TagSetEc2TagFilterArrayOutput{})
	pulumi.RegisterOutputType(DeploymentGroupEcsServiceOutput{})
	pulumi.RegisterOutputType(DeploymentGroupEcsServicePtrOutput{})
	pulumi.RegisterOutputType(DeploymentGroupLoadBalancerInfoOutput{})
	pulumi.RegisterOutputType(DeploymentGroupLoadBalancerInfoPtrOutput{})
	pulumi.RegisterOutputType(DeploymentGroupLoadBalancerInfoElbInfoOutput{})
	pulumi.RegisterOutputType(DeploymentGroupLoadBalancerInfoElbInfoArrayOutput{})
	pulumi.RegisterOutputType(DeploymentGroupLoadBalancerInfoTargetGroupInfoOutput{})
	pulumi.RegisterOutputType(DeploymentGroupLoadBalancerInfoTargetGroupInfoArrayOutput{})
	pulumi.RegisterOutputType(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoOutput{})
	pulumi.RegisterOutputType(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoPtrOutput{})
	pulumi.RegisterOutputType(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoProdTrafficRouteOutput{})
	pulumi.RegisterOutputType(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupOutput{})
	pulumi.RegisterOutputType(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTargetGroupArrayOutput{})
	pulumi.RegisterOutputType(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRouteOutput{})
	pulumi.RegisterOutputType(DeploymentGroupLoadBalancerInfoTargetGroupPairInfoTestTrafficRoutePtrOutput{})
	pulumi.RegisterOutputType(DeploymentGroupOnPremisesInstanceTagFilterOutput{})
	pulumi.RegisterOutputType(DeploymentGroupOnPremisesInstanceTagFilterArrayOutput{})
	pulumi.RegisterOutputType(DeploymentGroupTriggerConfigurationOutput{})
	pulumi.RegisterOutputType(DeploymentGroupTriggerConfigurationArrayOutput{})
}
