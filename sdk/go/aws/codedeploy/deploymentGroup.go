// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codedeploy

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DeploymentGroup struct {
	pulumi.CustomResourceState

	AlarmConfiguration           DeploymentGroupAlarmConfigurationPtrOutput            `pulumi:"alarmConfiguration"`
	AppName                      pulumi.StringOutput                                   `pulumi:"appName"`
	Arn                          pulumi.StringOutput                                   `pulumi:"arn"`
	AutoRollbackConfiguration    DeploymentGroupAutoRollbackConfigurationPtrOutput     `pulumi:"autoRollbackConfiguration"`
	AutoscalingGroups            pulumi.StringArrayOutput                              `pulumi:"autoscalingGroups"`
	BlueGreenDeploymentConfig    DeploymentGroupBlueGreenDeploymentConfigOutput        `pulumi:"blueGreenDeploymentConfig"`
	ComputePlatform              pulumi.StringOutput                                   `pulumi:"computePlatform"`
	DeploymentConfigName         pulumi.StringPtrOutput                                `pulumi:"deploymentConfigName"`
	DeploymentGroupId            pulumi.StringOutput                                   `pulumi:"deploymentGroupId"`
	DeploymentGroupName          pulumi.StringOutput                                   `pulumi:"deploymentGroupName"`
	DeploymentStyle              DeploymentGroupDeploymentStylePtrOutput               `pulumi:"deploymentStyle"`
	Ec2TagFilters                DeploymentGroupEc2TagFilterArrayOutput                `pulumi:"ec2TagFilters"`
	Ec2TagSets                   DeploymentGroupEc2TagSetArrayOutput                   `pulumi:"ec2TagSets"`
	EcsService                   DeploymentGroupEcsServicePtrOutput                    `pulumi:"ecsService"`
	LoadBalancerInfo             DeploymentGroupLoadBalancerInfoPtrOutput              `pulumi:"loadBalancerInfo"`
	OnPremisesInstanceTagFilters DeploymentGroupOnPremisesInstanceTagFilterArrayOutput `pulumi:"onPremisesInstanceTagFilters"`
	ServiceRoleArn               pulumi.StringOutput                                   `pulumi:"serviceRoleArn"`
	Tags                         pulumi.StringMapOutput                                `pulumi:"tags"`
	TagsAll                      pulumi.StringMapOutput                                `pulumi:"tagsAll"`
	TriggerConfigurations        DeploymentGroupTriggerConfigurationArrayOutput        `pulumi:"triggerConfigurations"`
}

// NewDeploymentGroup registers a new resource with the given unique name, arguments, and options.
func NewDeploymentGroup(ctx *pulumi.Context,
	name string, args *DeploymentGroupArgs, opts ...pulumi.ResourceOption) (*DeploymentGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AppName == nil {
		return nil, errors.New("invalid value for required argument 'AppName'")
	}
	if args.DeploymentGroupName == nil {
		return nil, errors.New("invalid value for required argument 'DeploymentGroupName'")
	}
	if args.ServiceRoleArn == nil {
		return nil, errors.New("invalid value for required argument 'ServiceRoleArn'")
	}
	var resource DeploymentGroup
	err := ctx.RegisterResource("aws:codedeploy/deploymentGroup:DeploymentGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeploymentGroup gets an existing DeploymentGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeploymentGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeploymentGroupState, opts ...pulumi.ResourceOption) (*DeploymentGroup, error) {
	var resource DeploymentGroup
	err := ctx.ReadResource("aws:codedeploy/deploymentGroup:DeploymentGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeploymentGroup resources.
type deploymentGroupState struct {
	AlarmConfiguration           *DeploymentGroupAlarmConfiguration           `pulumi:"alarmConfiguration"`
	AppName                      *string                                      `pulumi:"appName"`
	Arn                          *string                                      `pulumi:"arn"`
	AutoRollbackConfiguration    *DeploymentGroupAutoRollbackConfiguration    `pulumi:"autoRollbackConfiguration"`
	AutoscalingGroups            []string                                     `pulumi:"autoscalingGroups"`
	BlueGreenDeploymentConfig    *DeploymentGroupBlueGreenDeploymentConfig    `pulumi:"blueGreenDeploymentConfig"`
	ComputePlatform              *string                                      `pulumi:"computePlatform"`
	DeploymentConfigName         *string                                      `pulumi:"deploymentConfigName"`
	DeploymentGroupId            *string                                      `pulumi:"deploymentGroupId"`
	DeploymentGroupName          *string                                      `pulumi:"deploymentGroupName"`
	DeploymentStyle              *DeploymentGroupDeploymentStyle              `pulumi:"deploymentStyle"`
	Ec2TagFilters                []DeploymentGroupEc2TagFilter                `pulumi:"ec2TagFilters"`
	Ec2TagSets                   []DeploymentGroupEc2TagSet                   `pulumi:"ec2TagSets"`
	EcsService                   *DeploymentGroupEcsService                   `pulumi:"ecsService"`
	LoadBalancerInfo             *DeploymentGroupLoadBalancerInfo             `pulumi:"loadBalancerInfo"`
	OnPremisesInstanceTagFilters []DeploymentGroupOnPremisesInstanceTagFilter `pulumi:"onPremisesInstanceTagFilters"`
	ServiceRoleArn               *string                                      `pulumi:"serviceRoleArn"`
	Tags                         map[string]string                            `pulumi:"tags"`
	TagsAll                      map[string]string                            `pulumi:"tagsAll"`
	TriggerConfigurations        []DeploymentGroupTriggerConfiguration        `pulumi:"triggerConfigurations"`
}

type DeploymentGroupState struct {
	AlarmConfiguration           DeploymentGroupAlarmConfigurationPtrInput
	AppName                      pulumi.StringPtrInput
	Arn                          pulumi.StringPtrInput
	AutoRollbackConfiguration    DeploymentGroupAutoRollbackConfigurationPtrInput
	AutoscalingGroups            pulumi.StringArrayInput
	BlueGreenDeploymentConfig    DeploymentGroupBlueGreenDeploymentConfigPtrInput
	ComputePlatform              pulumi.StringPtrInput
	DeploymentConfigName         pulumi.StringPtrInput
	DeploymentGroupId            pulumi.StringPtrInput
	DeploymentGroupName          pulumi.StringPtrInput
	DeploymentStyle              DeploymentGroupDeploymentStylePtrInput
	Ec2TagFilters                DeploymentGroupEc2TagFilterArrayInput
	Ec2TagSets                   DeploymentGroupEc2TagSetArrayInput
	EcsService                   DeploymentGroupEcsServicePtrInput
	LoadBalancerInfo             DeploymentGroupLoadBalancerInfoPtrInput
	OnPremisesInstanceTagFilters DeploymentGroupOnPremisesInstanceTagFilterArrayInput
	ServiceRoleArn               pulumi.StringPtrInput
	Tags                         pulumi.StringMapInput
	TagsAll                      pulumi.StringMapInput
	TriggerConfigurations        DeploymentGroupTriggerConfigurationArrayInput
}

func (DeploymentGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentGroupState)(nil)).Elem()
}

type deploymentGroupArgs struct {
	AlarmConfiguration           *DeploymentGroupAlarmConfiguration           `pulumi:"alarmConfiguration"`
	AppName                      string                                       `pulumi:"appName"`
	AutoRollbackConfiguration    *DeploymentGroupAutoRollbackConfiguration    `pulumi:"autoRollbackConfiguration"`
	AutoscalingGroups            []string                                     `pulumi:"autoscalingGroups"`
	BlueGreenDeploymentConfig    *DeploymentGroupBlueGreenDeploymentConfig    `pulumi:"blueGreenDeploymentConfig"`
	DeploymentConfigName         *string                                      `pulumi:"deploymentConfigName"`
	DeploymentGroupName          string                                       `pulumi:"deploymentGroupName"`
	DeploymentStyle              *DeploymentGroupDeploymentStyle              `pulumi:"deploymentStyle"`
	Ec2TagFilters                []DeploymentGroupEc2TagFilter                `pulumi:"ec2TagFilters"`
	Ec2TagSets                   []DeploymentGroupEc2TagSet                   `pulumi:"ec2TagSets"`
	EcsService                   *DeploymentGroupEcsService                   `pulumi:"ecsService"`
	LoadBalancerInfo             *DeploymentGroupLoadBalancerInfo             `pulumi:"loadBalancerInfo"`
	OnPremisesInstanceTagFilters []DeploymentGroupOnPremisesInstanceTagFilter `pulumi:"onPremisesInstanceTagFilters"`
	ServiceRoleArn               string                                       `pulumi:"serviceRoleArn"`
	Tags                         map[string]string                            `pulumi:"tags"`
	TriggerConfigurations        []DeploymentGroupTriggerConfiguration        `pulumi:"triggerConfigurations"`
}

// The set of arguments for constructing a DeploymentGroup resource.
type DeploymentGroupArgs struct {
	AlarmConfiguration           DeploymentGroupAlarmConfigurationPtrInput
	AppName                      pulumi.StringInput
	AutoRollbackConfiguration    DeploymentGroupAutoRollbackConfigurationPtrInput
	AutoscalingGroups            pulumi.StringArrayInput
	BlueGreenDeploymentConfig    DeploymentGroupBlueGreenDeploymentConfigPtrInput
	DeploymentConfigName         pulumi.StringPtrInput
	DeploymentGroupName          pulumi.StringInput
	DeploymentStyle              DeploymentGroupDeploymentStylePtrInput
	Ec2TagFilters                DeploymentGroupEc2TagFilterArrayInput
	Ec2TagSets                   DeploymentGroupEc2TagSetArrayInput
	EcsService                   DeploymentGroupEcsServicePtrInput
	LoadBalancerInfo             DeploymentGroupLoadBalancerInfoPtrInput
	OnPremisesInstanceTagFilters DeploymentGroupOnPremisesInstanceTagFilterArrayInput
	ServiceRoleArn               pulumi.StringInput
	Tags                         pulumi.StringMapInput
	TriggerConfigurations        DeploymentGroupTriggerConfigurationArrayInput
}

func (DeploymentGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deploymentGroupArgs)(nil)).Elem()
}

type DeploymentGroupInput interface {
	pulumi.Input

	ToDeploymentGroupOutput() DeploymentGroupOutput
	ToDeploymentGroupOutputWithContext(ctx context.Context) DeploymentGroupOutput
}

func (*DeploymentGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentGroup)(nil)).Elem()
}

func (i *DeploymentGroup) ToDeploymentGroupOutput() DeploymentGroupOutput {
	return i.ToDeploymentGroupOutputWithContext(context.Background())
}

func (i *DeploymentGroup) ToDeploymentGroupOutputWithContext(ctx context.Context) DeploymentGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupOutput)
}

// DeploymentGroupArrayInput is an input type that accepts DeploymentGroupArray and DeploymentGroupArrayOutput values.
// You can construct a concrete instance of `DeploymentGroupArrayInput` via:
//
//	DeploymentGroupArray{ DeploymentGroupArgs{...} }
type DeploymentGroupArrayInput interface {
	pulumi.Input

	ToDeploymentGroupArrayOutput() DeploymentGroupArrayOutput
	ToDeploymentGroupArrayOutputWithContext(context.Context) DeploymentGroupArrayOutput
}

type DeploymentGroupArray []DeploymentGroupInput

func (DeploymentGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeploymentGroup)(nil)).Elem()
}

func (i DeploymentGroupArray) ToDeploymentGroupArrayOutput() DeploymentGroupArrayOutput {
	return i.ToDeploymentGroupArrayOutputWithContext(context.Background())
}

func (i DeploymentGroupArray) ToDeploymentGroupArrayOutputWithContext(ctx context.Context) DeploymentGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupArrayOutput)
}

// DeploymentGroupMapInput is an input type that accepts DeploymentGroupMap and DeploymentGroupMapOutput values.
// You can construct a concrete instance of `DeploymentGroupMapInput` via:
//
//	DeploymentGroupMap{ "key": DeploymentGroupArgs{...} }
type DeploymentGroupMapInput interface {
	pulumi.Input

	ToDeploymentGroupMapOutput() DeploymentGroupMapOutput
	ToDeploymentGroupMapOutputWithContext(context.Context) DeploymentGroupMapOutput
}

type DeploymentGroupMap map[string]DeploymentGroupInput

func (DeploymentGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeploymentGroup)(nil)).Elem()
}

func (i DeploymentGroupMap) ToDeploymentGroupMapOutput() DeploymentGroupMapOutput {
	return i.ToDeploymentGroupMapOutputWithContext(context.Background())
}

func (i DeploymentGroupMap) ToDeploymentGroupMapOutputWithContext(ctx context.Context) DeploymentGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentGroupMapOutput)
}

type DeploymentGroupOutput struct{ *pulumi.OutputState }

func (DeploymentGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentGroup)(nil)).Elem()
}

func (o DeploymentGroupOutput) ToDeploymentGroupOutput() DeploymentGroupOutput {
	return o
}

func (o DeploymentGroupOutput) ToDeploymentGroupOutputWithContext(ctx context.Context) DeploymentGroupOutput {
	return o
}

func (o DeploymentGroupOutput) AlarmConfiguration() DeploymentGroupAlarmConfigurationPtrOutput {
	return o.ApplyT(func(v *DeploymentGroup) DeploymentGroupAlarmConfigurationPtrOutput { return v.AlarmConfiguration }).(DeploymentGroupAlarmConfigurationPtrOutput)
}

func (o DeploymentGroupOutput) AppName() pulumi.StringOutput {
	return o.ApplyT(func(v *DeploymentGroup) pulumi.StringOutput { return v.AppName }).(pulumi.StringOutput)
}

func (o DeploymentGroupOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *DeploymentGroup) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o DeploymentGroupOutput) AutoRollbackConfiguration() DeploymentGroupAutoRollbackConfigurationPtrOutput {
	return o.ApplyT(func(v *DeploymentGroup) DeploymentGroupAutoRollbackConfigurationPtrOutput {
		return v.AutoRollbackConfiguration
	}).(DeploymentGroupAutoRollbackConfigurationPtrOutput)
}

func (o DeploymentGroupOutput) AutoscalingGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeploymentGroup) pulumi.StringArrayOutput { return v.AutoscalingGroups }).(pulumi.StringArrayOutput)
}

func (o DeploymentGroupOutput) BlueGreenDeploymentConfig() DeploymentGroupBlueGreenDeploymentConfigOutput {
	return o.ApplyT(func(v *DeploymentGroup) DeploymentGroupBlueGreenDeploymentConfigOutput {
		return v.BlueGreenDeploymentConfig
	}).(DeploymentGroupBlueGreenDeploymentConfigOutput)
}

func (o DeploymentGroupOutput) ComputePlatform() pulumi.StringOutput {
	return o.ApplyT(func(v *DeploymentGroup) pulumi.StringOutput { return v.ComputePlatform }).(pulumi.StringOutput)
}

func (o DeploymentGroupOutput) DeploymentConfigName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentGroup) pulumi.StringPtrOutput { return v.DeploymentConfigName }).(pulumi.StringPtrOutput)
}

func (o DeploymentGroupOutput) DeploymentGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *DeploymentGroup) pulumi.StringOutput { return v.DeploymentGroupId }).(pulumi.StringOutput)
}

func (o DeploymentGroupOutput) DeploymentGroupName() pulumi.StringOutput {
	return o.ApplyT(func(v *DeploymentGroup) pulumi.StringOutput { return v.DeploymentGroupName }).(pulumi.StringOutput)
}

func (o DeploymentGroupOutput) DeploymentStyle() DeploymentGroupDeploymentStylePtrOutput {
	return o.ApplyT(func(v *DeploymentGroup) DeploymentGroupDeploymentStylePtrOutput { return v.DeploymentStyle }).(DeploymentGroupDeploymentStylePtrOutput)
}

func (o DeploymentGroupOutput) Ec2TagFilters() DeploymentGroupEc2TagFilterArrayOutput {
	return o.ApplyT(func(v *DeploymentGroup) DeploymentGroupEc2TagFilterArrayOutput { return v.Ec2TagFilters }).(DeploymentGroupEc2TagFilterArrayOutput)
}

func (o DeploymentGroupOutput) Ec2TagSets() DeploymentGroupEc2TagSetArrayOutput {
	return o.ApplyT(func(v *DeploymentGroup) DeploymentGroupEc2TagSetArrayOutput { return v.Ec2TagSets }).(DeploymentGroupEc2TagSetArrayOutput)
}

func (o DeploymentGroupOutput) EcsService() DeploymentGroupEcsServicePtrOutput {
	return o.ApplyT(func(v *DeploymentGroup) DeploymentGroupEcsServicePtrOutput { return v.EcsService }).(DeploymentGroupEcsServicePtrOutput)
}

func (o DeploymentGroupOutput) LoadBalancerInfo() DeploymentGroupLoadBalancerInfoPtrOutput {
	return o.ApplyT(func(v *DeploymentGroup) DeploymentGroupLoadBalancerInfoPtrOutput { return v.LoadBalancerInfo }).(DeploymentGroupLoadBalancerInfoPtrOutput)
}

func (o DeploymentGroupOutput) OnPremisesInstanceTagFilters() DeploymentGroupOnPremisesInstanceTagFilterArrayOutput {
	return o.ApplyT(func(v *DeploymentGroup) DeploymentGroupOnPremisesInstanceTagFilterArrayOutput {
		return v.OnPremisesInstanceTagFilters
	}).(DeploymentGroupOnPremisesInstanceTagFilterArrayOutput)
}

func (o DeploymentGroupOutput) ServiceRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *DeploymentGroup) pulumi.StringOutput { return v.ServiceRoleArn }).(pulumi.StringOutput)
}

func (o DeploymentGroupOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DeploymentGroup) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o DeploymentGroupOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *DeploymentGroup) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o DeploymentGroupOutput) TriggerConfigurations() DeploymentGroupTriggerConfigurationArrayOutput {
	return o.ApplyT(func(v *DeploymentGroup) DeploymentGroupTriggerConfigurationArrayOutput {
		return v.TriggerConfigurations
	}).(DeploymentGroupTriggerConfigurationArrayOutput)
}

type DeploymentGroupArrayOutput struct{ *pulumi.OutputState }

func (DeploymentGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeploymentGroup)(nil)).Elem()
}

func (o DeploymentGroupArrayOutput) ToDeploymentGroupArrayOutput() DeploymentGroupArrayOutput {
	return o
}

func (o DeploymentGroupArrayOutput) ToDeploymentGroupArrayOutputWithContext(ctx context.Context) DeploymentGroupArrayOutput {
	return o
}

func (o DeploymentGroupArrayOutput) Index(i pulumi.IntInput) DeploymentGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DeploymentGroup {
		return vs[0].([]*DeploymentGroup)[vs[1].(int)]
	}).(DeploymentGroupOutput)
}

type DeploymentGroupMapOutput struct{ *pulumi.OutputState }

func (DeploymentGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeploymentGroup)(nil)).Elem()
}

func (o DeploymentGroupMapOutput) ToDeploymentGroupMapOutput() DeploymentGroupMapOutput {
	return o
}

func (o DeploymentGroupMapOutput) ToDeploymentGroupMapOutputWithContext(ctx context.Context) DeploymentGroupMapOutput {
	return o
}

func (o DeploymentGroupMapOutput) MapIndex(k pulumi.StringInput) DeploymentGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DeploymentGroup {
		return vs[0].(map[string]*DeploymentGroup)[vs[1].(string)]
	}).(DeploymentGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentGroupInput)(nil)).Elem(), &DeploymentGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentGroupArrayInput)(nil)).Elem(), DeploymentGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentGroupMapInput)(nil)).Elem(), DeploymentGroupMap{})
	pulumi.RegisterOutputType(DeploymentGroupOutput{})
	pulumi.RegisterOutputType(DeploymentGroupArrayOutput{})
	pulumi.RegisterOutputType(DeploymentGroupMapOutput{})
}
