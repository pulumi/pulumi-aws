// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aws

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetService(ctx *pulumi.Context, args *GetServiceArgs, opts ...pulumi.InvokeOption) (*GetServiceResult, error) {
	var rv GetServiceResult
	err := ctx.Invoke("aws:index/getService:getService", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getService.
type GetServiceArgs struct {
	DnsName          *string `pulumi:"dnsName"`
	Region           *string `pulumi:"region"`
	ReverseDnsName   *string `pulumi:"reverseDnsName"`
	ReverseDnsPrefix *string `pulumi:"reverseDnsPrefix"`
	ServiceId        *string `pulumi:"serviceId"`
}

// A collection of values returned by getService.
type GetServiceResult struct {
	DnsName string `pulumi:"dnsName"`
	// The provider-assigned unique ID for this managed resource.
	Id               string `pulumi:"id"`
	Partition        string `pulumi:"partition"`
	Region           string `pulumi:"region"`
	ReverseDnsName   string `pulumi:"reverseDnsName"`
	ReverseDnsPrefix string `pulumi:"reverseDnsPrefix"`
	ServiceId        string `pulumi:"serviceId"`
	Supported        bool   `pulumi:"supported"`
}

func GetServiceOutput(ctx *pulumi.Context, args GetServiceOutputArgs, opts ...pulumi.InvokeOption) GetServiceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetServiceResult, error) {
			args := v.(GetServiceArgs)
			r, err := GetService(ctx, &args, opts...)
			var s GetServiceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetServiceResultOutput)
}

// A collection of arguments for invoking getService.
type GetServiceOutputArgs struct {
	DnsName          pulumi.StringPtrInput `pulumi:"dnsName"`
	Region           pulumi.StringPtrInput `pulumi:"region"`
	ReverseDnsName   pulumi.StringPtrInput `pulumi:"reverseDnsName"`
	ReverseDnsPrefix pulumi.StringPtrInput `pulumi:"reverseDnsPrefix"`
	ServiceId        pulumi.StringPtrInput `pulumi:"serviceId"`
}

func (GetServiceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceArgs)(nil)).Elem()
}

// A collection of values returned by getService.
type GetServiceResultOutput struct{ *pulumi.OutputState }

func (GetServiceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetServiceResult)(nil)).Elem()
}

func (o GetServiceResultOutput) ToGetServiceResultOutput() GetServiceResultOutput {
	return o
}

func (o GetServiceResultOutput) ToGetServiceResultOutputWithContext(ctx context.Context) GetServiceResultOutput {
	return o
}

func (o GetServiceResultOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceResult) string { return v.DnsName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetServiceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetServiceResultOutput) Partition() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceResult) string { return v.Partition }).(pulumi.StringOutput)
}

func (o GetServiceResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetServiceResultOutput) ReverseDnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceResult) string { return v.ReverseDnsName }).(pulumi.StringOutput)
}

func (o GetServiceResultOutput) ReverseDnsPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceResult) string { return v.ReverseDnsPrefix }).(pulumi.StringOutput)
}

func (o GetServiceResultOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetServiceResult) string { return v.ServiceId }).(pulumi.StringOutput)
}

func (o GetServiceResultOutput) Supported() pulumi.BoolOutput {
	return o.ApplyT(func(v GetServiceResult) bool { return v.Supported }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(GetServiceResultOutput{})
}
