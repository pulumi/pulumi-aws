// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Resource for managing SES Identity Notification Topics
type IdentityNotificationTopic struct {
	s *pulumi.ResourceState
}

// NewIdentityNotificationTopic registers a new resource with the given unique name, arguments, and options.
func NewIdentityNotificationTopic(ctx *pulumi.Context,
	name string, args *IdentityNotificationTopicArgs, opts ...pulumi.ResourceOpt) (*IdentityNotificationTopic, error) {
	if args == nil || args.Identity == nil {
		return nil, errors.New("missing required argument 'Identity'")
	}
	if args == nil || args.NotificationType == nil {
		return nil, errors.New("missing required argument 'NotificationType'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["identity"] = nil
		inputs["notificationType"] = nil
		inputs["topicArn"] = nil
	} else {
		inputs["identity"] = args.Identity
		inputs["notificationType"] = args.NotificationType
		inputs["topicArn"] = args.TopicArn
	}
	s, err := ctx.RegisterResource("aws:ses/identityNotificationTopic:IdentityNotificationTopic", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &IdentityNotificationTopic{s: s}, nil
}

// GetIdentityNotificationTopic gets an existing IdentityNotificationTopic resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityNotificationTopic(ctx *pulumi.Context,
	name string, id pulumi.ID, state *IdentityNotificationTopicState, opts ...pulumi.ResourceOpt) (*IdentityNotificationTopic, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["identity"] = state.Identity
		inputs["notificationType"] = state.NotificationType
		inputs["topicArn"] = state.TopicArn
	}
	s, err := ctx.ReadResource("aws:ses/identityNotificationTopic:IdentityNotificationTopic", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &IdentityNotificationTopic{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *IdentityNotificationTopic) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *IdentityNotificationTopic) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The identity for which the Amazon SNS topic will be set. You can specify an identity by using its name or by using its Amazon Resource Name (ARN).
func (r *IdentityNotificationTopic) Identity() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["identity"])
}

// The type of notifications that will be published to the specified Amazon SNS topic. Valid Values: *Bounce*, *Complaint* or *Delivery*.
func (r *IdentityNotificationTopic) NotificationType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["notificationType"])
}

// The Amazon Resource Name (ARN) of the Amazon SNS topic. Can be set to "" (an empty string) to disable publishing.
func (r *IdentityNotificationTopic) TopicArn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["topicArn"])
}

// Input properties used for looking up and filtering IdentityNotificationTopic resources.
type IdentityNotificationTopicState struct {
	// The identity for which the Amazon SNS topic will be set. You can specify an identity by using its name or by using its Amazon Resource Name (ARN).
	Identity interface{}
	// The type of notifications that will be published to the specified Amazon SNS topic. Valid Values: *Bounce*, *Complaint* or *Delivery*.
	NotificationType interface{}
	// The Amazon Resource Name (ARN) of the Amazon SNS topic. Can be set to "" (an empty string) to disable publishing.
	TopicArn interface{}
}

// The set of arguments for constructing a IdentityNotificationTopic resource.
type IdentityNotificationTopicArgs struct {
	// The identity for which the Amazon SNS topic will be set. You can specify an identity by using its name or by using its Amazon Resource Name (ARN).
	Identity interface{}
	// The type of notifications that will be published to the specified Amazon SNS topic. Valid Values: *Bounce*, *Complaint* or *Delivery*.
	NotificationType interface{}
	// The Amazon Resource Name (ARN) of the Amazon SNS topic. Can be set to "" (an empty string) to disable publishing.
	TopicArn interface{}
}
