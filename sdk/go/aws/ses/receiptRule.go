// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an SES receipt rule resource
type ReceiptRule struct {
	s *pulumi.ResourceState
}

// NewReceiptRule registers a new resource with the given unique name, arguments, and options.
func NewReceiptRule(ctx *pulumi.Context,
	name string, args *ReceiptRuleArgs, opts ...pulumi.ResourceOpt) (*ReceiptRule, error) {
	if args == nil || args.RuleSetName == nil {
		return nil, errors.New("missing required argument 'RuleSetName'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["addHeaderActions"] = nil
		inputs["after"] = nil
		inputs["bounceActions"] = nil
		inputs["enabled"] = nil
		inputs["lambdaActions"] = nil
		inputs["name"] = nil
		inputs["recipients"] = nil
		inputs["ruleSetName"] = nil
		inputs["s3Actions"] = nil
		inputs["scanEnabled"] = nil
		inputs["snsActions"] = nil
		inputs["stopActions"] = nil
		inputs["tlsPolicy"] = nil
		inputs["workmailActions"] = nil
	} else {
		inputs["addHeaderActions"] = args.AddHeaderActions
		inputs["after"] = args.After
		inputs["bounceActions"] = args.BounceActions
		inputs["enabled"] = args.Enabled
		inputs["lambdaActions"] = args.LambdaActions
		inputs["name"] = args.Name
		inputs["recipients"] = args.Recipients
		inputs["ruleSetName"] = args.RuleSetName
		inputs["s3Actions"] = args.S3Actions
		inputs["scanEnabled"] = args.ScanEnabled
		inputs["snsActions"] = args.SnsActions
		inputs["stopActions"] = args.StopActions
		inputs["tlsPolicy"] = args.TlsPolicy
		inputs["workmailActions"] = args.WorkmailActions
	}
	s, err := ctx.RegisterResource("aws:ses/receiptRule:ReceiptRule", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ReceiptRule{s: s}, nil
}

// GetReceiptRule gets an existing ReceiptRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReceiptRule(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ReceiptRuleState, opts ...pulumi.ResourceOpt) (*ReceiptRule, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["addHeaderActions"] = state.AddHeaderActions
		inputs["after"] = state.After
		inputs["bounceActions"] = state.BounceActions
		inputs["enabled"] = state.Enabled
		inputs["lambdaActions"] = state.LambdaActions
		inputs["name"] = state.Name
		inputs["recipients"] = state.Recipients
		inputs["ruleSetName"] = state.RuleSetName
		inputs["s3Actions"] = state.S3Actions
		inputs["scanEnabled"] = state.ScanEnabled
		inputs["snsActions"] = state.SnsActions
		inputs["stopActions"] = state.StopActions
		inputs["tlsPolicy"] = state.TlsPolicy
		inputs["workmailActions"] = state.WorkmailActions
	}
	s, err := ctx.ReadResource("aws:ses/receiptRule:ReceiptRule", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ReceiptRule{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ReceiptRule) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ReceiptRule) ID() *pulumi.IDOutput {
	return r.s.ID
}

// A list of Add Header Action blocks. Documented below.
func (r *ReceiptRule) AddHeaderActions() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["addHeaderActions"])
}

// The name of the rule to place this rule after
func (r *ReceiptRule) After() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["after"])
}

// A list of Bounce Action blocks. Documented below.
func (r *ReceiptRule) BounceActions() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["bounceActions"])
}

// If true, the rule will be enabled
func (r *ReceiptRule) Enabled() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["enabled"])
}

// A list of Lambda Action blocks. Documented below.
func (r *ReceiptRule) LambdaActions() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["lambdaActions"])
}

// The name of the rule
func (r *ReceiptRule) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// A list of email addresses
func (r *ReceiptRule) Recipients() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["recipients"])
}

// The name of the rule set
func (r *ReceiptRule) RuleSetName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["ruleSetName"])
}

// A list of S3 Action blocks. Documented below.
func (r *ReceiptRule) S3Actions() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["s3Actions"])
}

// If true, incoming emails will be scanned for spam and viruses
func (r *ReceiptRule) ScanEnabled() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["scanEnabled"])
}

// A list of SNS Action blocks. Documented below.
func (r *ReceiptRule) SnsActions() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["snsActions"])
}

// A list of Stop Action blocks. Documented below.
func (r *ReceiptRule) StopActions() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["stopActions"])
}

// Require or Optional
func (r *ReceiptRule) TlsPolicy() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["tlsPolicy"])
}

// A list of WorkMail Action blocks. Documented below.
func (r *ReceiptRule) WorkmailActions() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["workmailActions"])
}

// Input properties used for looking up and filtering ReceiptRule resources.
type ReceiptRuleState struct {
	// A list of Add Header Action blocks. Documented below.
	AddHeaderActions interface{}
	// The name of the rule to place this rule after
	After interface{}
	// A list of Bounce Action blocks. Documented below.
	BounceActions interface{}
	// If true, the rule will be enabled
	Enabled interface{}
	// A list of Lambda Action blocks. Documented below.
	LambdaActions interface{}
	// The name of the rule
	Name interface{}
	// A list of email addresses
	Recipients interface{}
	// The name of the rule set
	RuleSetName interface{}
	// A list of S3 Action blocks. Documented below.
	S3Actions interface{}
	// If true, incoming emails will be scanned for spam and viruses
	ScanEnabled interface{}
	// A list of SNS Action blocks. Documented below.
	SnsActions interface{}
	// A list of Stop Action blocks. Documented below.
	StopActions interface{}
	// Require or Optional
	TlsPolicy interface{}
	// A list of WorkMail Action blocks. Documented below.
	WorkmailActions interface{}
}

// The set of arguments for constructing a ReceiptRule resource.
type ReceiptRuleArgs struct {
	// A list of Add Header Action blocks. Documented below.
	AddHeaderActions interface{}
	// The name of the rule to place this rule after
	After interface{}
	// A list of Bounce Action blocks. Documented below.
	BounceActions interface{}
	// If true, the rule will be enabled
	Enabled interface{}
	// A list of Lambda Action blocks. Documented below.
	LambdaActions interface{}
	// The name of the rule
	Name interface{}
	// A list of email addresses
	Recipients interface{}
	// The name of the rule set
	RuleSetName interface{}
	// A list of S3 Action blocks. Documented below.
	S3Actions interface{}
	// If true, incoming emails will be scanned for spam and viruses
	ScanEnabled interface{}
	// A list of SNS Action blocks. Documented below.
	SnsActions interface{}
	// A list of Stop Action blocks. Documented below.
	StopActions interface{}
	// Require or Optional
	TlsPolicy interface{}
	// A list of WorkMail Action blocks. Documented below.
	WorkmailActions interface{}
}
