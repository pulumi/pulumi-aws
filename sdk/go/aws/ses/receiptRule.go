// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ReceiptRule struct {
	pulumi.CustomResourceState

	AddHeaderActions ReceiptRuleAddHeaderActionArrayOutput `pulumi:"addHeaderActions"`
	After            pulumi.StringPtrOutput                `pulumi:"after"`
	Arn              pulumi.StringOutput                   `pulumi:"arn"`
	BounceActions    ReceiptRuleBounceActionArrayOutput    `pulumi:"bounceActions"`
	Enabled          pulumi.BoolPtrOutput                  `pulumi:"enabled"`
	LambdaActions    ReceiptRuleLambdaActionArrayOutput    `pulumi:"lambdaActions"`
	Name             pulumi.StringOutput                   `pulumi:"name"`
	Recipients       pulumi.StringArrayOutput              `pulumi:"recipients"`
	RuleSetName      pulumi.StringOutput                   `pulumi:"ruleSetName"`
	S3Actions        ReceiptRuleS3ActionArrayOutput        `pulumi:"s3Actions"`
	ScanEnabled      pulumi.BoolPtrOutput                  `pulumi:"scanEnabled"`
	SnsActions       ReceiptRuleSnsActionArrayOutput       `pulumi:"snsActions"`
	StopActions      ReceiptRuleStopActionArrayOutput      `pulumi:"stopActions"`
	TlsPolicy        pulumi.StringOutput                   `pulumi:"tlsPolicy"`
	WorkmailActions  ReceiptRuleWorkmailActionArrayOutput  `pulumi:"workmailActions"`
}

// NewReceiptRule registers a new resource with the given unique name, arguments, and options.
func NewReceiptRule(ctx *pulumi.Context,
	name string, args *ReceiptRuleArgs, opts ...pulumi.ResourceOption) (*ReceiptRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RuleSetName == nil {
		return nil, errors.New("invalid value for required argument 'RuleSetName'")
	}
	var resource ReceiptRule
	err := ctx.RegisterResource("aws:ses/receiptRule:ReceiptRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReceiptRule gets an existing ReceiptRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReceiptRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReceiptRuleState, opts ...pulumi.ResourceOption) (*ReceiptRule, error) {
	var resource ReceiptRule
	err := ctx.ReadResource("aws:ses/receiptRule:ReceiptRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReceiptRule resources.
type receiptRuleState struct {
	AddHeaderActions []ReceiptRuleAddHeaderAction `pulumi:"addHeaderActions"`
	After            *string                      `pulumi:"after"`
	Arn              *string                      `pulumi:"arn"`
	BounceActions    []ReceiptRuleBounceAction    `pulumi:"bounceActions"`
	Enabled          *bool                        `pulumi:"enabled"`
	LambdaActions    []ReceiptRuleLambdaAction    `pulumi:"lambdaActions"`
	Name             *string                      `pulumi:"name"`
	Recipients       []string                     `pulumi:"recipients"`
	RuleSetName      *string                      `pulumi:"ruleSetName"`
	S3Actions        []ReceiptRuleS3Action        `pulumi:"s3Actions"`
	ScanEnabled      *bool                        `pulumi:"scanEnabled"`
	SnsActions       []ReceiptRuleSnsAction       `pulumi:"snsActions"`
	StopActions      []ReceiptRuleStopAction      `pulumi:"stopActions"`
	TlsPolicy        *string                      `pulumi:"tlsPolicy"`
	WorkmailActions  []ReceiptRuleWorkmailAction  `pulumi:"workmailActions"`
}

type ReceiptRuleState struct {
	AddHeaderActions ReceiptRuleAddHeaderActionArrayInput
	After            pulumi.StringPtrInput
	Arn              pulumi.StringPtrInput
	BounceActions    ReceiptRuleBounceActionArrayInput
	Enabled          pulumi.BoolPtrInput
	LambdaActions    ReceiptRuleLambdaActionArrayInput
	Name             pulumi.StringPtrInput
	Recipients       pulumi.StringArrayInput
	RuleSetName      pulumi.StringPtrInput
	S3Actions        ReceiptRuleS3ActionArrayInput
	ScanEnabled      pulumi.BoolPtrInput
	SnsActions       ReceiptRuleSnsActionArrayInput
	StopActions      ReceiptRuleStopActionArrayInput
	TlsPolicy        pulumi.StringPtrInput
	WorkmailActions  ReceiptRuleWorkmailActionArrayInput
}

func (ReceiptRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*receiptRuleState)(nil)).Elem()
}

type receiptRuleArgs struct {
	AddHeaderActions []ReceiptRuleAddHeaderAction `pulumi:"addHeaderActions"`
	After            *string                      `pulumi:"after"`
	BounceActions    []ReceiptRuleBounceAction    `pulumi:"bounceActions"`
	Enabled          *bool                        `pulumi:"enabled"`
	LambdaActions    []ReceiptRuleLambdaAction    `pulumi:"lambdaActions"`
	Name             *string                      `pulumi:"name"`
	Recipients       []string                     `pulumi:"recipients"`
	RuleSetName      string                       `pulumi:"ruleSetName"`
	S3Actions        []ReceiptRuleS3Action        `pulumi:"s3Actions"`
	ScanEnabled      *bool                        `pulumi:"scanEnabled"`
	SnsActions       []ReceiptRuleSnsAction       `pulumi:"snsActions"`
	StopActions      []ReceiptRuleStopAction      `pulumi:"stopActions"`
	TlsPolicy        *string                      `pulumi:"tlsPolicy"`
	WorkmailActions  []ReceiptRuleWorkmailAction  `pulumi:"workmailActions"`
}

// The set of arguments for constructing a ReceiptRule resource.
type ReceiptRuleArgs struct {
	AddHeaderActions ReceiptRuleAddHeaderActionArrayInput
	After            pulumi.StringPtrInput
	BounceActions    ReceiptRuleBounceActionArrayInput
	Enabled          pulumi.BoolPtrInput
	LambdaActions    ReceiptRuleLambdaActionArrayInput
	Name             pulumi.StringPtrInput
	Recipients       pulumi.StringArrayInput
	RuleSetName      pulumi.StringInput
	S3Actions        ReceiptRuleS3ActionArrayInput
	ScanEnabled      pulumi.BoolPtrInput
	SnsActions       ReceiptRuleSnsActionArrayInput
	StopActions      ReceiptRuleStopActionArrayInput
	TlsPolicy        pulumi.StringPtrInput
	WorkmailActions  ReceiptRuleWorkmailActionArrayInput
}

func (ReceiptRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*receiptRuleArgs)(nil)).Elem()
}

type ReceiptRuleInput interface {
	pulumi.Input

	ToReceiptRuleOutput() ReceiptRuleOutput
	ToReceiptRuleOutputWithContext(ctx context.Context) ReceiptRuleOutput
}

func (*ReceiptRule) ElementType() reflect.Type {
	return reflect.TypeOf((**ReceiptRule)(nil)).Elem()
}

func (i *ReceiptRule) ToReceiptRuleOutput() ReceiptRuleOutput {
	return i.ToReceiptRuleOutputWithContext(context.Background())
}

func (i *ReceiptRule) ToReceiptRuleOutputWithContext(ctx context.Context) ReceiptRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiptRuleOutput)
}

// ReceiptRuleArrayInput is an input type that accepts ReceiptRuleArray and ReceiptRuleArrayOutput values.
// You can construct a concrete instance of `ReceiptRuleArrayInput` via:
//
//	ReceiptRuleArray{ ReceiptRuleArgs{...} }
type ReceiptRuleArrayInput interface {
	pulumi.Input

	ToReceiptRuleArrayOutput() ReceiptRuleArrayOutput
	ToReceiptRuleArrayOutputWithContext(context.Context) ReceiptRuleArrayOutput
}

type ReceiptRuleArray []ReceiptRuleInput

func (ReceiptRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReceiptRule)(nil)).Elem()
}

func (i ReceiptRuleArray) ToReceiptRuleArrayOutput() ReceiptRuleArrayOutput {
	return i.ToReceiptRuleArrayOutputWithContext(context.Background())
}

func (i ReceiptRuleArray) ToReceiptRuleArrayOutputWithContext(ctx context.Context) ReceiptRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiptRuleArrayOutput)
}

// ReceiptRuleMapInput is an input type that accepts ReceiptRuleMap and ReceiptRuleMapOutput values.
// You can construct a concrete instance of `ReceiptRuleMapInput` via:
//
//	ReceiptRuleMap{ "key": ReceiptRuleArgs{...} }
type ReceiptRuleMapInput interface {
	pulumi.Input

	ToReceiptRuleMapOutput() ReceiptRuleMapOutput
	ToReceiptRuleMapOutputWithContext(context.Context) ReceiptRuleMapOutput
}

type ReceiptRuleMap map[string]ReceiptRuleInput

func (ReceiptRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReceiptRule)(nil)).Elem()
}

func (i ReceiptRuleMap) ToReceiptRuleMapOutput() ReceiptRuleMapOutput {
	return i.ToReceiptRuleMapOutputWithContext(context.Background())
}

func (i ReceiptRuleMap) ToReceiptRuleMapOutputWithContext(ctx context.Context) ReceiptRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiptRuleMapOutput)
}

type ReceiptRuleOutput struct{ *pulumi.OutputState }

func (ReceiptRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReceiptRule)(nil)).Elem()
}

func (o ReceiptRuleOutput) ToReceiptRuleOutput() ReceiptRuleOutput {
	return o
}

func (o ReceiptRuleOutput) ToReceiptRuleOutputWithContext(ctx context.Context) ReceiptRuleOutput {
	return o
}

func (o ReceiptRuleOutput) AddHeaderActions() ReceiptRuleAddHeaderActionArrayOutput {
	return o.ApplyT(func(v *ReceiptRule) ReceiptRuleAddHeaderActionArrayOutput { return v.AddHeaderActions }).(ReceiptRuleAddHeaderActionArrayOutput)
}

func (o ReceiptRuleOutput) After() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReceiptRule) pulumi.StringPtrOutput { return v.After }).(pulumi.StringPtrOutput)
}

func (o ReceiptRuleOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ReceiptRule) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o ReceiptRuleOutput) BounceActions() ReceiptRuleBounceActionArrayOutput {
	return o.ApplyT(func(v *ReceiptRule) ReceiptRuleBounceActionArrayOutput { return v.BounceActions }).(ReceiptRuleBounceActionArrayOutput)
}

func (o ReceiptRuleOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ReceiptRule) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o ReceiptRuleOutput) LambdaActions() ReceiptRuleLambdaActionArrayOutput {
	return o.ApplyT(func(v *ReceiptRule) ReceiptRuleLambdaActionArrayOutput { return v.LambdaActions }).(ReceiptRuleLambdaActionArrayOutput)
}

func (o ReceiptRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ReceiptRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ReceiptRuleOutput) Recipients() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ReceiptRule) pulumi.StringArrayOutput { return v.Recipients }).(pulumi.StringArrayOutput)
}

func (o ReceiptRuleOutput) RuleSetName() pulumi.StringOutput {
	return o.ApplyT(func(v *ReceiptRule) pulumi.StringOutput { return v.RuleSetName }).(pulumi.StringOutput)
}

func (o ReceiptRuleOutput) S3Actions() ReceiptRuleS3ActionArrayOutput {
	return o.ApplyT(func(v *ReceiptRule) ReceiptRuleS3ActionArrayOutput { return v.S3Actions }).(ReceiptRuleS3ActionArrayOutput)
}

func (o ReceiptRuleOutput) ScanEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ReceiptRule) pulumi.BoolPtrOutput { return v.ScanEnabled }).(pulumi.BoolPtrOutput)
}

func (o ReceiptRuleOutput) SnsActions() ReceiptRuleSnsActionArrayOutput {
	return o.ApplyT(func(v *ReceiptRule) ReceiptRuleSnsActionArrayOutput { return v.SnsActions }).(ReceiptRuleSnsActionArrayOutput)
}

func (o ReceiptRuleOutput) StopActions() ReceiptRuleStopActionArrayOutput {
	return o.ApplyT(func(v *ReceiptRule) ReceiptRuleStopActionArrayOutput { return v.StopActions }).(ReceiptRuleStopActionArrayOutput)
}

func (o ReceiptRuleOutput) TlsPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v *ReceiptRule) pulumi.StringOutput { return v.TlsPolicy }).(pulumi.StringOutput)
}

func (o ReceiptRuleOutput) WorkmailActions() ReceiptRuleWorkmailActionArrayOutput {
	return o.ApplyT(func(v *ReceiptRule) ReceiptRuleWorkmailActionArrayOutput { return v.WorkmailActions }).(ReceiptRuleWorkmailActionArrayOutput)
}

type ReceiptRuleArrayOutput struct{ *pulumi.OutputState }

func (ReceiptRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReceiptRule)(nil)).Elem()
}

func (o ReceiptRuleArrayOutput) ToReceiptRuleArrayOutput() ReceiptRuleArrayOutput {
	return o
}

func (o ReceiptRuleArrayOutput) ToReceiptRuleArrayOutputWithContext(ctx context.Context) ReceiptRuleArrayOutput {
	return o
}

func (o ReceiptRuleArrayOutput) Index(i pulumi.IntInput) ReceiptRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ReceiptRule {
		return vs[0].([]*ReceiptRule)[vs[1].(int)]
	}).(ReceiptRuleOutput)
}

type ReceiptRuleMapOutput struct{ *pulumi.OutputState }

func (ReceiptRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReceiptRule)(nil)).Elem()
}

func (o ReceiptRuleMapOutput) ToReceiptRuleMapOutput() ReceiptRuleMapOutput {
	return o
}

func (o ReceiptRuleMapOutput) ToReceiptRuleMapOutputWithContext(ctx context.Context) ReceiptRuleMapOutput {
	return o
}

func (o ReceiptRuleMapOutput) MapIndex(k pulumi.StringInput) ReceiptRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ReceiptRule {
		return vs[0].(map[string]*ReceiptRule)[vs[1].(string)]
	}).(ReceiptRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiptRuleInput)(nil)).Elem(), &ReceiptRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiptRuleArrayInput)(nil)).Elem(), ReceiptRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReceiptRuleMapInput)(nil)).Elem(), ReceiptRuleMap{})
	pulumi.RegisterOutputType(ReceiptRuleOutput{})
	pulumi.RegisterOutputType(ReceiptRuleArrayOutput{})
	pulumi.RegisterOutputType(ReceiptRuleMapOutput{})
}
