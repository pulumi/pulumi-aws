// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type EventDestinationCloudwatchDestination struct {
	// The default value for the event
	DefaultValue string `pulumi:"defaultValue"`
	// The name for the dimension
	DimensionName string `pulumi:"dimensionName"`
	// The source for the value. It can be either `"messageTag"` or `"emailHeader"`
	ValueSource string `pulumi:"valueSource"`
}

// EventDestinationCloudwatchDestinationInput is an input type that accepts EventDestinationCloudwatchDestinationArgs and EventDestinationCloudwatchDestinationOutput values.
// You can construct a concrete instance of `EventDestinationCloudwatchDestinationInput` via:
//
// 		 EventDestinationCloudwatchDestinationArgs{...}
//
type EventDestinationCloudwatchDestinationInput interface {
	pulumi.Input

	ToEventDestinationCloudwatchDestinationOutput() EventDestinationCloudwatchDestinationOutput
	ToEventDestinationCloudwatchDestinationOutputWithContext(context.Context) EventDestinationCloudwatchDestinationOutput
}

type EventDestinationCloudwatchDestinationArgs struct {
	// The default value for the event
	DefaultValue pulumi.StringInput `pulumi:"defaultValue"`
	// The name for the dimension
	DimensionName pulumi.StringInput `pulumi:"dimensionName"`
	// The source for the value. It can be either `"messageTag"` or `"emailHeader"`
	ValueSource pulumi.StringInput `pulumi:"valueSource"`
}

func (EventDestinationCloudwatchDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationCloudwatchDestination)(nil)).Elem()
}

func (i EventDestinationCloudwatchDestinationArgs) ToEventDestinationCloudwatchDestinationOutput() EventDestinationCloudwatchDestinationOutput {
	return i.ToEventDestinationCloudwatchDestinationOutputWithContext(context.Background())
}

func (i EventDestinationCloudwatchDestinationArgs) ToEventDestinationCloudwatchDestinationOutputWithContext(ctx context.Context) EventDestinationCloudwatchDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationCloudwatchDestinationOutput)
}

// EventDestinationCloudwatchDestinationArrayInput is an input type that accepts EventDestinationCloudwatchDestinationArray and EventDestinationCloudwatchDestinationArrayOutput values.
// You can construct a concrete instance of `EventDestinationCloudwatchDestinationArrayInput` via:
//
// 		 EventDestinationCloudwatchDestinationArray{ EventDestinationCloudwatchDestinationArgs{...} }
//
type EventDestinationCloudwatchDestinationArrayInput interface {
	pulumi.Input

	ToEventDestinationCloudwatchDestinationArrayOutput() EventDestinationCloudwatchDestinationArrayOutput
	ToEventDestinationCloudwatchDestinationArrayOutputWithContext(context.Context) EventDestinationCloudwatchDestinationArrayOutput
}

type EventDestinationCloudwatchDestinationArray []EventDestinationCloudwatchDestinationInput

func (EventDestinationCloudwatchDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationCloudwatchDestination)(nil)).Elem()
}

func (i EventDestinationCloudwatchDestinationArray) ToEventDestinationCloudwatchDestinationArrayOutput() EventDestinationCloudwatchDestinationArrayOutput {
	return i.ToEventDestinationCloudwatchDestinationArrayOutputWithContext(context.Background())
}

func (i EventDestinationCloudwatchDestinationArray) ToEventDestinationCloudwatchDestinationArrayOutputWithContext(ctx context.Context) EventDestinationCloudwatchDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationCloudwatchDestinationArrayOutput)
}

type EventDestinationCloudwatchDestinationOutput struct{ *pulumi.OutputState }

func (EventDestinationCloudwatchDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationCloudwatchDestination)(nil)).Elem()
}

func (o EventDestinationCloudwatchDestinationOutput) ToEventDestinationCloudwatchDestinationOutput() EventDestinationCloudwatchDestinationOutput {
	return o
}

func (o EventDestinationCloudwatchDestinationOutput) ToEventDestinationCloudwatchDestinationOutputWithContext(ctx context.Context) EventDestinationCloudwatchDestinationOutput {
	return o
}

// The default value for the event
func (o EventDestinationCloudwatchDestinationOutput) DefaultValue() pulumi.StringOutput {
	return o.ApplyT(func(v EventDestinationCloudwatchDestination) string { return v.DefaultValue }).(pulumi.StringOutput)
}

// The name for the dimension
func (o EventDestinationCloudwatchDestinationOutput) DimensionName() pulumi.StringOutput {
	return o.ApplyT(func(v EventDestinationCloudwatchDestination) string { return v.DimensionName }).(pulumi.StringOutput)
}

// The source for the value. It can be either `"messageTag"` or `"emailHeader"`
func (o EventDestinationCloudwatchDestinationOutput) ValueSource() pulumi.StringOutput {
	return o.ApplyT(func(v EventDestinationCloudwatchDestination) string { return v.ValueSource }).(pulumi.StringOutput)
}

type EventDestinationCloudwatchDestinationArrayOutput struct{ *pulumi.OutputState }

func (EventDestinationCloudwatchDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventDestinationCloudwatchDestination)(nil)).Elem()
}

func (o EventDestinationCloudwatchDestinationArrayOutput) ToEventDestinationCloudwatchDestinationArrayOutput() EventDestinationCloudwatchDestinationArrayOutput {
	return o
}

func (o EventDestinationCloudwatchDestinationArrayOutput) ToEventDestinationCloudwatchDestinationArrayOutputWithContext(ctx context.Context) EventDestinationCloudwatchDestinationArrayOutput {
	return o
}

func (o EventDestinationCloudwatchDestinationArrayOutput) Index(i pulumi.IntInput) EventDestinationCloudwatchDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventDestinationCloudwatchDestination {
		return vs[0].([]EventDestinationCloudwatchDestination)[vs[1].(int)]
	}).(EventDestinationCloudwatchDestinationOutput)
}

type EventDestinationKinesisDestination struct {
	// The ARN of the role that has permissions to access the Kinesis Stream
	RoleArn string `pulumi:"roleArn"`
	// The ARN of the Kinesis Stream
	StreamArn string `pulumi:"streamArn"`
}

// EventDestinationKinesisDestinationInput is an input type that accepts EventDestinationKinesisDestinationArgs and EventDestinationKinesisDestinationOutput values.
// You can construct a concrete instance of `EventDestinationKinesisDestinationInput` via:
//
// 		 EventDestinationKinesisDestinationArgs{...}
//
type EventDestinationKinesisDestinationInput interface {
	pulumi.Input

	ToEventDestinationKinesisDestinationOutput() EventDestinationKinesisDestinationOutput
	ToEventDestinationKinesisDestinationOutputWithContext(context.Context) EventDestinationKinesisDestinationOutput
}

type EventDestinationKinesisDestinationArgs struct {
	// The ARN of the role that has permissions to access the Kinesis Stream
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// The ARN of the Kinesis Stream
	StreamArn pulumi.StringInput `pulumi:"streamArn"`
}

func (EventDestinationKinesisDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationKinesisDestination)(nil)).Elem()
}

func (i EventDestinationKinesisDestinationArgs) ToEventDestinationKinesisDestinationOutput() EventDestinationKinesisDestinationOutput {
	return i.ToEventDestinationKinesisDestinationOutputWithContext(context.Background())
}

func (i EventDestinationKinesisDestinationArgs) ToEventDestinationKinesisDestinationOutputWithContext(ctx context.Context) EventDestinationKinesisDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationKinesisDestinationOutput)
}

func (i EventDestinationKinesisDestinationArgs) ToEventDestinationKinesisDestinationPtrOutput() EventDestinationKinesisDestinationPtrOutput {
	return i.ToEventDestinationKinesisDestinationPtrOutputWithContext(context.Background())
}

func (i EventDestinationKinesisDestinationArgs) ToEventDestinationKinesisDestinationPtrOutputWithContext(ctx context.Context) EventDestinationKinesisDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationKinesisDestinationOutput).ToEventDestinationKinesisDestinationPtrOutputWithContext(ctx)
}

// EventDestinationKinesisDestinationPtrInput is an input type that accepts EventDestinationKinesisDestinationArgs, EventDestinationKinesisDestinationPtr and EventDestinationKinesisDestinationPtrOutput values.
// You can construct a concrete instance of `EventDestinationKinesisDestinationPtrInput` via:
//
// 		 EventDestinationKinesisDestinationArgs{...}
//
//  or:
//
// 		 nil
//
type EventDestinationKinesisDestinationPtrInput interface {
	pulumi.Input

	ToEventDestinationKinesisDestinationPtrOutput() EventDestinationKinesisDestinationPtrOutput
	ToEventDestinationKinesisDestinationPtrOutputWithContext(context.Context) EventDestinationKinesisDestinationPtrOutput
}

type eventDestinationKinesisDestinationPtrType EventDestinationKinesisDestinationArgs

func EventDestinationKinesisDestinationPtr(v *EventDestinationKinesisDestinationArgs) EventDestinationKinesisDestinationPtrInput {
	return (*eventDestinationKinesisDestinationPtrType)(v)
}

func (*eventDestinationKinesisDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventDestinationKinesisDestination)(nil)).Elem()
}

func (i *eventDestinationKinesisDestinationPtrType) ToEventDestinationKinesisDestinationPtrOutput() EventDestinationKinesisDestinationPtrOutput {
	return i.ToEventDestinationKinesisDestinationPtrOutputWithContext(context.Background())
}

func (i *eventDestinationKinesisDestinationPtrType) ToEventDestinationKinesisDestinationPtrOutputWithContext(ctx context.Context) EventDestinationKinesisDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationKinesisDestinationPtrOutput)
}

type EventDestinationKinesisDestinationOutput struct{ *pulumi.OutputState }

func (EventDestinationKinesisDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationKinesisDestination)(nil)).Elem()
}

func (o EventDestinationKinesisDestinationOutput) ToEventDestinationKinesisDestinationOutput() EventDestinationKinesisDestinationOutput {
	return o
}

func (o EventDestinationKinesisDestinationOutput) ToEventDestinationKinesisDestinationOutputWithContext(ctx context.Context) EventDestinationKinesisDestinationOutput {
	return o
}

func (o EventDestinationKinesisDestinationOutput) ToEventDestinationKinesisDestinationPtrOutput() EventDestinationKinesisDestinationPtrOutput {
	return o.ToEventDestinationKinesisDestinationPtrOutputWithContext(context.Background())
}

func (o EventDestinationKinesisDestinationOutput) ToEventDestinationKinesisDestinationPtrOutputWithContext(ctx context.Context) EventDestinationKinesisDestinationPtrOutput {
	return o.ApplyT(func(v EventDestinationKinesisDestination) *EventDestinationKinesisDestination {
		return &v
	}).(EventDestinationKinesisDestinationPtrOutput)
}

// The ARN of the role that has permissions to access the Kinesis Stream
func (o EventDestinationKinesisDestinationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v EventDestinationKinesisDestination) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The ARN of the Kinesis Stream
func (o EventDestinationKinesisDestinationOutput) StreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v EventDestinationKinesisDestination) string { return v.StreamArn }).(pulumi.StringOutput)
}

type EventDestinationKinesisDestinationPtrOutput struct{ *pulumi.OutputState }

func (EventDestinationKinesisDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventDestinationKinesisDestination)(nil)).Elem()
}

func (o EventDestinationKinesisDestinationPtrOutput) ToEventDestinationKinesisDestinationPtrOutput() EventDestinationKinesisDestinationPtrOutput {
	return o
}

func (o EventDestinationKinesisDestinationPtrOutput) ToEventDestinationKinesisDestinationPtrOutputWithContext(ctx context.Context) EventDestinationKinesisDestinationPtrOutput {
	return o
}

func (o EventDestinationKinesisDestinationPtrOutput) Elem() EventDestinationKinesisDestinationOutput {
	return o.ApplyT(func(v *EventDestinationKinesisDestination) EventDestinationKinesisDestination { return *v }).(EventDestinationKinesisDestinationOutput)
}

// The ARN of the role that has permissions to access the Kinesis Stream
func (o EventDestinationKinesisDestinationPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v EventDestinationKinesisDestination) string { return v.RoleArn }).(pulumi.StringOutput)
}

// The ARN of the Kinesis Stream
func (o EventDestinationKinesisDestinationPtrOutput) StreamArn() pulumi.StringOutput {
	return o.ApplyT(func(v EventDestinationKinesisDestination) string { return v.StreamArn }).(pulumi.StringOutput)
}

type EventDestinationSnsDestination struct {
	// The ARN of the SNS topic
	TopicArn string `pulumi:"topicArn"`
}

// EventDestinationSnsDestinationInput is an input type that accepts EventDestinationSnsDestinationArgs and EventDestinationSnsDestinationOutput values.
// You can construct a concrete instance of `EventDestinationSnsDestinationInput` via:
//
// 		 EventDestinationSnsDestinationArgs{...}
//
type EventDestinationSnsDestinationInput interface {
	pulumi.Input

	ToEventDestinationSnsDestinationOutput() EventDestinationSnsDestinationOutput
	ToEventDestinationSnsDestinationOutputWithContext(context.Context) EventDestinationSnsDestinationOutput
}

type EventDestinationSnsDestinationArgs struct {
	// The ARN of the SNS topic
	TopicArn pulumi.StringInput `pulumi:"topicArn"`
}

func (EventDestinationSnsDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationSnsDestination)(nil)).Elem()
}

func (i EventDestinationSnsDestinationArgs) ToEventDestinationSnsDestinationOutput() EventDestinationSnsDestinationOutput {
	return i.ToEventDestinationSnsDestinationOutputWithContext(context.Background())
}

func (i EventDestinationSnsDestinationArgs) ToEventDestinationSnsDestinationOutputWithContext(ctx context.Context) EventDestinationSnsDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationSnsDestinationOutput)
}

func (i EventDestinationSnsDestinationArgs) ToEventDestinationSnsDestinationPtrOutput() EventDestinationSnsDestinationPtrOutput {
	return i.ToEventDestinationSnsDestinationPtrOutputWithContext(context.Background())
}

func (i EventDestinationSnsDestinationArgs) ToEventDestinationSnsDestinationPtrOutputWithContext(ctx context.Context) EventDestinationSnsDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationSnsDestinationOutput).ToEventDestinationSnsDestinationPtrOutputWithContext(ctx)
}

// EventDestinationSnsDestinationPtrInput is an input type that accepts EventDestinationSnsDestinationArgs, EventDestinationSnsDestinationPtr and EventDestinationSnsDestinationPtrOutput values.
// You can construct a concrete instance of `EventDestinationSnsDestinationPtrInput` via:
//
// 		 EventDestinationSnsDestinationArgs{...}
//
//  or:
//
// 		 nil
//
type EventDestinationSnsDestinationPtrInput interface {
	pulumi.Input

	ToEventDestinationSnsDestinationPtrOutput() EventDestinationSnsDestinationPtrOutput
	ToEventDestinationSnsDestinationPtrOutputWithContext(context.Context) EventDestinationSnsDestinationPtrOutput
}

type eventDestinationSnsDestinationPtrType EventDestinationSnsDestinationArgs

func EventDestinationSnsDestinationPtr(v *EventDestinationSnsDestinationArgs) EventDestinationSnsDestinationPtrInput {
	return (*eventDestinationSnsDestinationPtrType)(v)
}

func (*eventDestinationSnsDestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EventDestinationSnsDestination)(nil)).Elem()
}

func (i *eventDestinationSnsDestinationPtrType) ToEventDestinationSnsDestinationPtrOutput() EventDestinationSnsDestinationPtrOutput {
	return i.ToEventDestinationSnsDestinationPtrOutputWithContext(context.Background())
}

func (i *eventDestinationSnsDestinationPtrType) ToEventDestinationSnsDestinationPtrOutputWithContext(ctx context.Context) EventDestinationSnsDestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventDestinationSnsDestinationPtrOutput)
}

type EventDestinationSnsDestinationOutput struct{ *pulumi.OutputState }

func (EventDestinationSnsDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventDestinationSnsDestination)(nil)).Elem()
}

func (o EventDestinationSnsDestinationOutput) ToEventDestinationSnsDestinationOutput() EventDestinationSnsDestinationOutput {
	return o
}

func (o EventDestinationSnsDestinationOutput) ToEventDestinationSnsDestinationOutputWithContext(ctx context.Context) EventDestinationSnsDestinationOutput {
	return o
}

func (o EventDestinationSnsDestinationOutput) ToEventDestinationSnsDestinationPtrOutput() EventDestinationSnsDestinationPtrOutput {
	return o.ToEventDestinationSnsDestinationPtrOutputWithContext(context.Background())
}

func (o EventDestinationSnsDestinationOutput) ToEventDestinationSnsDestinationPtrOutputWithContext(ctx context.Context) EventDestinationSnsDestinationPtrOutput {
	return o.ApplyT(func(v EventDestinationSnsDestination) *EventDestinationSnsDestination {
		return &v
	}).(EventDestinationSnsDestinationPtrOutput)
}

// The ARN of the SNS topic
func (o EventDestinationSnsDestinationOutput) TopicArn() pulumi.StringOutput {
	return o.ApplyT(func(v EventDestinationSnsDestination) string { return v.TopicArn }).(pulumi.StringOutput)
}

type EventDestinationSnsDestinationPtrOutput struct{ *pulumi.OutputState }

func (EventDestinationSnsDestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EventDestinationSnsDestination)(nil)).Elem()
}

func (o EventDestinationSnsDestinationPtrOutput) ToEventDestinationSnsDestinationPtrOutput() EventDestinationSnsDestinationPtrOutput {
	return o
}

func (o EventDestinationSnsDestinationPtrOutput) ToEventDestinationSnsDestinationPtrOutputWithContext(ctx context.Context) EventDestinationSnsDestinationPtrOutput {
	return o
}

func (o EventDestinationSnsDestinationPtrOutput) Elem() EventDestinationSnsDestinationOutput {
	return o.ApplyT(func(v *EventDestinationSnsDestination) EventDestinationSnsDestination { return *v }).(EventDestinationSnsDestinationOutput)
}

// The ARN of the SNS topic
func (o EventDestinationSnsDestinationPtrOutput) TopicArn() pulumi.StringOutput {
	return o.ApplyT(func(v EventDestinationSnsDestination) string { return v.TopicArn }).(pulumi.StringOutput)
}

type ReceiptRuleAddHeaderAction struct {
	// The name of the header to add
	HeaderName string `pulumi:"headerName"`
	// The value of the header to add
	HeaderValue string `pulumi:"headerValue"`
	// The position of the action in the receipt rule
	Position int `pulumi:"position"`
}

// ReceiptRuleAddHeaderActionInput is an input type that accepts ReceiptRuleAddHeaderActionArgs and ReceiptRuleAddHeaderActionOutput values.
// You can construct a concrete instance of `ReceiptRuleAddHeaderActionInput` via:
//
// 		 ReceiptRuleAddHeaderActionArgs{...}
//
type ReceiptRuleAddHeaderActionInput interface {
	pulumi.Input

	ToReceiptRuleAddHeaderActionOutput() ReceiptRuleAddHeaderActionOutput
	ToReceiptRuleAddHeaderActionOutputWithContext(context.Context) ReceiptRuleAddHeaderActionOutput
}

type ReceiptRuleAddHeaderActionArgs struct {
	// The name of the header to add
	HeaderName pulumi.StringInput `pulumi:"headerName"`
	// The value of the header to add
	HeaderValue pulumi.StringInput `pulumi:"headerValue"`
	// The position of the action in the receipt rule
	Position pulumi.IntInput `pulumi:"position"`
}

func (ReceiptRuleAddHeaderActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiptRuleAddHeaderAction)(nil)).Elem()
}

func (i ReceiptRuleAddHeaderActionArgs) ToReceiptRuleAddHeaderActionOutput() ReceiptRuleAddHeaderActionOutput {
	return i.ToReceiptRuleAddHeaderActionOutputWithContext(context.Background())
}

func (i ReceiptRuleAddHeaderActionArgs) ToReceiptRuleAddHeaderActionOutputWithContext(ctx context.Context) ReceiptRuleAddHeaderActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiptRuleAddHeaderActionOutput)
}

// ReceiptRuleAddHeaderActionArrayInput is an input type that accepts ReceiptRuleAddHeaderActionArray and ReceiptRuleAddHeaderActionArrayOutput values.
// You can construct a concrete instance of `ReceiptRuleAddHeaderActionArrayInput` via:
//
// 		 ReceiptRuleAddHeaderActionArray{ ReceiptRuleAddHeaderActionArgs{...} }
//
type ReceiptRuleAddHeaderActionArrayInput interface {
	pulumi.Input

	ToReceiptRuleAddHeaderActionArrayOutput() ReceiptRuleAddHeaderActionArrayOutput
	ToReceiptRuleAddHeaderActionArrayOutputWithContext(context.Context) ReceiptRuleAddHeaderActionArrayOutput
}

type ReceiptRuleAddHeaderActionArray []ReceiptRuleAddHeaderActionInput

func (ReceiptRuleAddHeaderActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiptRuleAddHeaderAction)(nil)).Elem()
}

func (i ReceiptRuleAddHeaderActionArray) ToReceiptRuleAddHeaderActionArrayOutput() ReceiptRuleAddHeaderActionArrayOutput {
	return i.ToReceiptRuleAddHeaderActionArrayOutputWithContext(context.Background())
}

func (i ReceiptRuleAddHeaderActionArray) ToReceiptRuleAddHeaderActionArrayOutputWithContext(ctx context.Context) ReceiptRuleAddHeaderActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiptRuleAddHeaderActionArrayOutput)
}

type ReceiptRuleAddHeaderActionOutput struct{ *pulumi.OutputState }

func (ReceiptRuleAddHeaderActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiptRuleAddHeaderAction)(nil)).Elem()
}

func (o ReceiptRuleAddHeaderActionOutput) ToReceiptRuleAddHeaderActionOutput() ReceiptRuleAddHeaderActionOutput {
	return o
}

func (o ReceiptRuleAddHeaderActionOutput) ToReceiptRuleAddHeaderActionOutputWithContext(ctx context.Context) ReceiptRuleAddHeaderActionOutput {
	return o
}

// The name of the header to add
func (o ReceiptRuleAddHeaderActionOutput) HeaderName() pulumi.StringOutput {
	return o.ApplyT(func(v ReceiptRuleAddHeaderAction) string { return v.HeaderName }).(pulumi.StringOutput)
}

// The value of the header to add
func (o ReceiptRuleAddHeaderActionOutput) HeaderValue() pulumi.StringOutput {
	return o.ApplyT(func(v ReceiptRuleAddHeaderAction) string { return v.HeaderValue }).(pulumi.StringOutput)
}

// The position of the action in the receipt rule
func (o ReceiptRuleAddHeaderActionOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v ReceiptRuleAddHeaderAction) int { return v.Position }).(pulumi.IntOutput)
}

type ReceiptRuleAddHeaderActionArrayOutput struct{ *pulumi.OutputState }

func (ReceiptRuleAddHeaderActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiptRuleAddHeaderAction)(nil)).Elem()
}

func (o ReceiptRuleAddHeaderActionArrayOutput) ToReceiptRuleAddHeaderActionArrayOutput() ReceiptRuleAddHeaderActionArrayOutput {
	return o
}

func (o ReceiptRuleAddHeaderActionArrayOutput) ToReceiptRuleAddHeaderActionArrayOutputWithContext(ctx context.Context) ReceiptRuleAddHeaderActionArrayOutput {
	return o
}

func (o ReceiptRuleAddHeaderActionArrayOutput) Index(i pulumi.IntInput) ReceiptRuleAddHeaderActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReceiptRuleAddHeaderAction {
		return vs[0].([]ReceiptRuleAddHeaderAction)[vs[1].(int)]
	}).(ReceiptRuleAddHeaderActionOutput)
}

type ReceiptRuleBounceAction struct {
	// The message to send
	Message string `pulumi:"message"`
	// The position of the action in the receipt rule
	Position int `pulumi:"position"`
	// The email address of the sender
	Sender string `pulumi:"sender"`
	// The RFC 5321 SMTP reply code
	SmtpReplyCode string `pulumi:"smtpReplyCode"`
	// The RFC 3463 SMTP enhanced status code
	StatusCode *string `pulumi:"statusCode"`
	// The ARN of an SNS topic to notify
	TopicArn *string `pulumi:"topicArn"`
}

// ReceiptRuleBounceActionInput is an input type that accepts ReceiptRuleBounceActionArgs and ReceiptRuleBounceActionOutput values.
// You can construct a concrete instance of `ReceiptRuleBounceActionInput` via:
//
// 		 ReceiptRuleBounceActionArgs{...}
//
type ReceiptRuleBounceActionInput interface {
	pulumi.Input

	ToReceiptRuleBounceActionOutput() ReceiptRuleBounceActionOutput
	ToReceiptRuleBounceActionOutputWithContext(context.Context) ReceiptRuleBounceActionOutput
}

type ReceiptRuleBounceActionArgs struct {
	// The message to send
	Message pulumi.StringInput `pulumi:"message"`
	// The position of the action in the receipt rule
	Position pulumi.IntInput `pulumi:"position"`
	// The email address of the sender
	Sender pulumi.StringInput `pulumi:"sender"`
	// The RFC 5321 SMTP reply code
	SmtpReplyCode pulumi.StringInput `pulumi:"smtpReplyCode"`
	// The RFC 3463 SMTP enhanced status code
	StatusCode pulumi.StringPtrInput `pulumi:"statusCode"`
	// The ARN of an SNS topic to notify
	TopicArn pulumi.StringPtrInput `pulumi:"topicArn"`
}

func (ReceiptRuleBounceActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiptRuleBounceAction)(nil)).Elem()
}

func (i ReceiptRuleBounceActionArgs) ToReceiptRuleBounceActionOutput() ReceiptRuleBounceActionOutput {
	return i.ToReceiptRuleBounceActionOutputWithContext(context.Background())
}

func (i ReceiptRuleBounceActionArgs) ToReceiptRuleBounceActionOutputWithContext(ctx context.Context) ReceiptRuleBounceActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiptRuleBounceActionOutput)
}

// ReceiptRuleBounceActionArrayInput is an input type that accepts ReceiptRuleBounceActionArray and ReceiptRuleBounceActionArrayOutput values.
// You can construct a concrete instance of `ReceiptRuleBounceActionArrayInput` via:
//
// 		 ReceiptRuleBounceActionArray{ ReceiptRuleBounceActionArgs{...} }
//
type ReceiptRuleBounceActionArrayInput interface {
	pulumi.Input

	ToReceiptRuleBounceActionArrayOutput() ReceiptRuleBounceActionArrayOutput
	ToReceiptRuleBounceActionArrayOutputWithContext(context.Context) ReceiptRuleBounceActionArrayOutput
}

type ReceiptRuleBounceActionArray []ReceiptRuleBounceActionInput

func (ReceiptRuleBounceActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiptRuleBounceAction)(nil)).Elem()
}

func (i ReceiptRuleBounceActionArray) ToReceiptRuleBounceActionArrayOutput() ReceiptRuleBounceActionArrayOutput {
	return i.ToReceiptRuleBounceActionArrayOutputWithContext(context.Background())
}

func (i ReceiptRuleBounceActionArray) ToReceiptRuleBounceActionArrayOutputWithContext(ctx context.Context) ReceiptRuleBounceActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiptRuleBounceActionArrayOutput)
}

type ReceiptRuleBounceActionOutput struct{ *pulumi.OutputState }

func (ReceiptRuleBounceActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiptRuleBounceAction)(nil)).Elem()
}

func (o ReceiptRuleBounceActionOutput) ToReceiptRuleBounceActionOutput() ReceiptRuleBounceActionOutput {
	return o
}

func (o ReceiptRuleBounceActionOutput) ToReceiptRuleBounceActionOutputWithContext(ctx context.Context) ReceiptRuleBounceActionOutput {
	return o
}

// The message to send
func (o ReceiptRuleBounceActionOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ReceiptRuleBounceAction) string { return v.Message }).(pulumi.StringOutput)
}

// The position of the action in the receipt rule
func (o ReceiptRuleBounceActionOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v ReceiptRuleBounceAction) int { return v.Position }).(pulumi.IntOutput)
}

// The email address of the sender
func (o ReceiptRuleBounceActionOutput) Sender() pulumi.StringOutput {
	return o.ApplyT(func(v ReceiptRuleBounceAction) string { return v.Sender }).(pulumi.StringOutput)
}

// The RFC 5321 SMTP reply code
func (o ReceiptRuleBounceActionOutput) SmtpReplyCode() pulumi.StringOutput {
	return o.ApplyT(func(v ReceiptRuleBounceAction) string { return v.SmtpReplyCode }).(pulumi.StringOutput)
}

// The RFC 3463 SMTP enhanced status code
func (o ReceiptRuleBounceActionOutput) StatusCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiptRuleBounceAction) *string { return v.StatusCode }).(pulumi.StringPtrOutput)
}

// The ARN of an SNS topic to notify
func (o ReceiptRuleBounceActionOutput) TopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiptRuleBounceAction) *string { return v.TopicArn }).(pulumi.StringPtrOutput)
}

type ReceiptRuleBounceActionArrayOutput struct{ *pulumi.OutputState }

func (ReceiptRuleBounceActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiptRuleBounceAction)(nil)).Elem()
}

func (o ReceiptRuleBounceActionArrayOutput) ToReceiptRuleBounceActionArrayOutput() ReceiptRuleBounceActionArrayOutput {
	return o
}

func (o ReceiptRuleBounceActionArrayOutput) ToReceiptRuleBounceActionArrayOutputWithContext(ctx context.Context) ReceiptRuleBounceActionArrayOutput {
	return o
}

func (o ReceiptRuleBounceActionArrayOutput) Index(i pulumi.IntInput) ReceiptRuleBounceActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReceiptRuleBounceAction {
		return vs[0].([]ReceiptRuleBounceAction)[vs[1].(int)]
	}).(ReceiptRuleBounceActionOutput)
}

type ReceiptRuleLambdaAction struct {
	// The ARN of the Lambda function to invoke
	FunctionArn string `pulumi:"functionArn"`
	// Event or RequestResponse
	InvocationType *string `pulumi:"invocationType"`
	// The position of the action in the receipt rule
	Position int `pulumi:"position"`
	// The ARN of an SNS topic to notify
	TopicArn *string `pulumi:"topicArn"`
}

// ReceiptRuleLambdaActionInput is an input type that accepts ReceiptRuleLambdaActionArgs and ReceiptRuleLambdaActionOutput values.
// You can construct a concrete instance of `ReceiptRuleLambdaActionInput` via:
//
// 		 ReceiptRuleLambdaActionArgs{...}
//
type ReceiptRuleLambdaActionInput interface {
	pulumi.Input

	ToReceiptRuleLambdaActionOutput() ReceiptRuleLambdaActionOutput
	ToReceiptRuleLambdaActionOutputWithContext(context.Context) ReceiptRuleLambdaActionOutput
}

type ReceiptRuleLambdaActionArgs struct {
	// The ARN of the Lambda function to invoke
	FunctionArn pulumi.StringInput `pulumi:"functionArn"`
	// Event or RequestResponse
	InvocationType pulumi.StringPtrInput `pulumi:"invocationType"`
	// The position of the action in the receipt rule
	Position pulumi.IntInput `pulumi:"position"`
	// The ARN of an SNS topic to notify
	TopicArn pulumi.StringPtrInput `pulumi:"topicArn"`
}

func (ReceiptRuleLambdaActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiptRuleLambdaAction)(nil)).Elem()
}

func (i ReceiptRuleLambdaActionArgs) ToReceiptRuleLambdaActionOutput() ReceiptRuleLambdaActionOutput {
	return i.ToReceiptRuleLambdaActionOutputWithContext(context.Background())
}

func (i ReceiptRuleLambdaActionArgs) ToReceiptRuleLambdaActionOutputWithContext(ctx context.Context) ReceiptRuleLambdaActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiptRuleLambdaActionOutput)
}

// ReceiptRuleLambdaActionArrayInput is an input type that accepts ReceiptRuleLambdaActionArray and ReceiptRuleLambdaActionArrayOutput values.
// You can construct a concrete instance of `ReceiptRuleLambdaActionArrayInput` via:
//
// 		 ReceiptRuleLambdaActionArray{ ReceiptRuleLambdaActionArgs{...} }
//
type ReceiptRuleLambdaActionArrayInput interface {
	pulumi.Input

	ToReceiptRuleLambdaActionArrayOutput() ReceiptRuleLambdaActionArrayOutput
	ToReceiptRuleLambdaActionArrayOutputWithContext(context.Context) ReceiptRuleLambdaActionArrayOutput
}

type ReceiptRuleLambdaActionArray []ReceiptRuleLambdaActionInput

func (ReceiptRuleLambdaActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiptRuleLambdaAction)(nil)).Elem()
}

func (i ReceiptRuleLambdaActionArray) ToReceiptRuleLambdaActionArrayOutput() ReceiptRuleLambdaActionArrayOutput {
	return i.ToReceiptRuleLambdaActionArrayOutputWithContext(context.Background())
}

func (i ReceiptRuleLambdaActionArray) ToReceiptRuleLambdaActionArrayOutputWithContext(ctx context.Context) ReceiptRuleLambdaActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiptRuleLambdaActionArrayOutput)
}

type ReceiptRuleLambdaActionOutput struct{ *pulumi.OutputState }

func (ReceiptRuleLambdaActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiptRuleLambdaAction)(nil)).Elem()
}

func (o ReceiptRuleLambdaActionOutput) ToReceiptRuleLambdaActionOutput() ReceiptRuleLambdaActionOutput {
	return o
}

func (o ReceiptRuleLambdaActionOutput) ToReceiptRuleLambdaActionOutputWithContext(ctx context.Context) ReceiptRuleLambdaActionOutput {
	return o
}

// The ARN of the Lambda function to invoke
func (o ReceiptRuleLambdaActionOutput) FunctionArn() pulumi.StringOutput {
	return o.ApplyT(func(v ReceiptRuleLambdaAction) string { return v.FunctionArn }).(pulumi.StringOutput)
}

// Event or RequestResponse
func (o ReceiptRuleLambdaActionOutput) InvocationType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiptRuleLambdaAction) *string { return v.InvocationType }).(pulumi.StringPtrOutput)
}

// The position of the action in the receipt rule
func (o ReceiptRuleLambdaActionOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v ReceiptRuleLambdaAction) int { return v.Position }).(pulumi.IntOutput)
}

// The ARN of an SNS topic to notify
func (o ReceiptRuleLambdaActionOutput) TopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiptRuleLambdaAction) *string { return v.TopicArn }).(pulumi.StringPtrOutput)
}

type ReceiptRuleLambdaActionArrayOutput struct{ *pulumi.OutputState }

func (ReceiptRuleLambdaActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiptRuleLambdaAction)(nil)).Elem()
}

func (o ReceiptRuleLambdaActionArrayOutput) ToReceiptRuleLambdaActionArrayOutput() ReceiptRuleLambdaActionArrayOutput {
	return o
}

func (o ReceiptRuleLambdaActionArrayOutput) ToReceiptRuleLambdaActionArrayOutputWithContext(ctx context.Context) ReceiptRuleLambdaActionArrayOutput {
	return o
}

func (o ReceiptRuleLambdaActionArrayOutput) Index(i pulumi.IntInput) ReceiptRuleLambdaActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReceiptRuleLambdaAction {
		return vs[0].([]ReceiptRuleLambdaAction)[vs[1].(int)]
	}).(ReceiptRuleLambdaActionOutput)
}

type ReceiptRuleS3Action struct {
	// The name of the S3 bucket
	BucketName string `pulumi:"bucketName"`
	// The ARN of the KMS key
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// The key prefix of the S3 bucket
	ObjectKeyPrefix *string `pulumi:"objectKeyPrefix"`
	// The position of the action in the receipt rule
	Position int `pulumi:"position"`
	// The ARN of an SNS topic to notify
	TopicArn *string `pulumi:"topicArn"`
}

// ReceiptRuleS3ActionInput is an input type that accepts ReceiptRuleS3ActionArgs and ReceiptRuleS3ActionOutput values.
// You can construct a concrete instance of `ReceiptRuleS3ActionInput` via:
//
// 		 ReceiptRuleS3ActionArgs{...}
//
type ReceiptRuleS3ActionInput interface {
	pulumi.Input

	ToReceiptRuleS3ActionOutput() ReceiptRuleS3ActionOutput
	ToReceiptRuleS3ActionOutputWithContext(context.Context) ReceiptRuleS3ActionOutput
}

type ReceiptRuleS3ActionArgs struct {
	// The name of the S3 bucket
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// The ARN of the KMS key
	KmsKeyArn pulumi.StringPtrInput `pulumi:"kmsKeyArn"`
	// The key prefix of the S3 bucket
	ObjectKeyPrefix pulumi.StringPtrInput `pulumi:"objectKeyPrefix"`
	// The position of the action in the receipt rule
	Position pulumi.IntInput `pulumi:"position"`
	// The ARN of an SNS topic to notify
	TopicArn pulumi.StringPtrInput `pulumi:"topicArn"`
}

func (ReceiptRuleS3ActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiptRuleS3Action)(nil)).Elem()
}

func (i ReceiptRuleS3ActionArgs) ToReceiptRuleS3ActionOutput() ReceiptRuleS3ActionOutput {
	return i.ToReceiptRuleS3ActionOutputWithContext(context.Background())
}

func (i ReceiptRuleS3ActionArgs) ToReceiptRuleS3ActionOutputWithContext(ctx context.Context) ReceiptRuleS3ActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiptRuleS3ActionOutput)
}

// ReceiptRuleS3ActionArrayInput is an input type that accepts ReceiptRuleS3ActionArray and ReceiptRuleS3ActionArrayOutput values.
// You can construct a concrete instance of `ReceiptRuleS3ActionArrayInput` via:
//
// 		 ReceiptRuleS3ActionArray{ ReceiptRuleS3ActionArgs{...} }
//
type ReceiptRuleS3ActionArrayInput interface {
	pulumi.Input

	ToReceiptRuleS3ActionArrayOutput() ReceiptRuleS3ActionArrayOutput
	ToReceiptRuleS3ActionArrayOutputWithContext(context.Context) ReceiptRuleS3ActionArrayOutput
}

type ReceiptRuleS3ActionArray []ReceiptRuleS3ActionInput

func (ReceiptRuleS3ActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiptRuleS3Action)(nil)).Elem()
}

func (i ReceiptRuleS3ActionArray) ToReceiptRuleS3ActionArrayOutput() ReceiptRuleS3ActionArrayOutput {
	return i.ToReceiptRuleS3ActionArrayOutputWithContext(context.Background())
}

func (i ReceiptRuleS3ActionArray) ToReceiptRuleS3ActionArrayOutputWithContext(ctx context.Context) ReceiptRuleS3ActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiptRuleS3ActionArrayOutput)
}

type ReceiptRuleS3ActionOutput struct{ *pulumi.OutputState }

func (ReceiptRuleS3ActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiptRuleS3Action)(nil)).Elem()
}

func (o ReceiptRuleS3ActionOutput) ToReceiptRuleS3ActionOutput() ReceiptRuleS3ActionOutput {
	return o
}

func (o ReceiptRuleS3ActionOutput) ToReceiptRuleS3ActionOutputWithContext(ctx context.Context) ReceiptRuleS3ActionOutput {
	return o
}

// The name of the S3 bucket
func (o ReceiptRuleS3ActionOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v ReceiptRuleS3Action) string { return v.BucketName }).(pulumi.StringOutput)
}

// The ARN of the KMS key
func (o ReceiptRuleS3ActionOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiptRuleS3Action) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// The key prefix of the S3 bucket
func (o ReceiptRuleS3ActionOutput) ObjectKeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiptRuleS3Action) *string { return v.ObjectKeyPrefix }).(pulumi.StringPtrOutput)
}

// The position of the action in the receipt rule
func (o ReceiptRuleS3ActionOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v ReceiptRuleS3Action) int { return v.Position }).(pulumi.IntOutput)
}

// The ARN of an SNS topic to notify
func (o ReceiptRuleS3ActionOutput) TopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiptRuleS3Action) *string { return v.TopicArn }).(pulumi.StringPtrOutput)
}

type ReceiptRuleS3ActionArrayOutput struct{ *pulumi.OutputState }

func (ReceiptRuleS3ActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiptRuleS3Action)(nil)).Elem()
}

func (o ReceiptRuleS3ActionArrayOutput) ToReceiptRuleS3ActionArrayOutput() ReceiptRuleS3ActionArrayOutput {
	return o
}

func (o ReceiptRuleS3ActionArrayOutput) ToReceiptRuleS3ActionArrayOutputWithContext(ctx context.Context) ReceiptRuleS3ActionArrayOutput {
	return o
}

func (o ReceiptRuleS3ActionArrayOutput) Index(i pulumi.IntInput) ReceiptRuleS3ActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReceiptRuleS3Action {
		return vs[0].([]ReceiptRuleS3Action)[vs[1].(int)]
	}).(ReceiptRuleS3ActionOutput)
}

type ReceiptRuleSnsAction struct {
	// The position of the action in the receipt rule
	Position int `pulumi:"position"`
	// The ARN of an SNS topic to notify
	TopicArn string `pulumi:"topicArn"`
}

// ReceiptRuleSnsActionInput is an input type that accepts ReceiptRuleSnsActionArgs and ReceiptRuleSnsActionOutput values.
// You can construct a concrete instance of `ReceiptRuleSnsActionInput` via:
//
// 		 ReceiptRuleSnsActionArgs{...}
//
type ReceiptRuleSnsActionInput interface {
	pulumi.Input

	ToReceiptRuleSnsActionOutput() ReceiptRuleSnsActionOutput
	ToReceiptRuleSnsActionOutputWithContext(context.Context) ReceiptRuleSnsActionOutput
}

type ReceiptRuleSnsActionArgs struct {
	// The position of the action in the receipt rule
	Position pulumi.IntInput `pulumi:"position"`
	// The ARN of an SNS topic to notify
	TopicArn pulumi.StringInput `pulumi:"topicArn"`
}

func (ReceiptRuleSnsActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiptRuleSnsAction)(nil)).Elem()
}

func (i ReceiptRuleSnsActionArgs) ToReceiptRuleSnsActionOutput() ReceiptRuleSnsActionOutput {
	return i.ToReceiptRuleSnsActionOutputWithContext(context.Background())
}

func (i ReceiptRuleSnsActionArgs) ToReceiptRuleSnsActionOutputWithContext(ctx context.Context) ReceiptRuleSnsActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiptRuleSnsActionOutput)
}

// ReceiptRuleSnsActionArrayInput is an input type that accepts ReceiptRuleSnsActionArray and ReceiptRuleSnsActionArrayOutput values.
// You can construct a concrete instance of `ReceiptRuleSnsActionArrayInput` via:
//
// 		 ReceiptRuleSnsActionArray{ ReceiptRuleSnsActionArgs{...} }
//
type ReceiptRuleSnsActionArrayInput interface {
	pulumi.Input

	ToReceiptRuleSnsActionArrayOutput() ReceiptRuleSnsActionArrayOutput
	ToReceiptRuleSnsActionArrayOutputWithContext(context.Context) ReceiptRuleSnsActionArrayOutput
}

type ReceiptRuleSnsActionArray []ReceiptRuleSnsActionInput

func (ReceiptRuleSnsActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiptRuleSnsAction)(nil)).Elem()
}

func (i ReceiptRuleSnsActionArray) ToReceiptRuleSnsActionArrayOutput() ReceiptRuleSnsActionArrayOutput {
	return i.ToReceiptRuleSnsActionArrayOutputWithContext(context.Background())
}

func (i ReceiptRuleSnsActionArray) ToReceiptRuleSnsActionArrayOutputWithContext(ctx context.Context) ReceiptRuleSnsActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiptRuleSnsActionArrayOutput)
}

type ReceiptRuleSnsActionOutput struct{ *pulumi.OutputState }

func (ReceiptRuleSnsActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiptRuleSnsAction)(nil)).Elem()
}

func (o ReceiptRuleSnsActionOutput) ToReceiptRuleSnsActionOutput() ReceiptRuleSnsActionOutput {
	return o
}

func (o ReceiptRuleSnsActionOutput) ToReceiptRuleSnsActionOutputWithContext(ctx context.Context) ReceiptRuleSnsActionOutput {
	return o
}

// The position of the action in the receipt rule
func (o ReceiptRuleSnsActionOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v ReceiptRuleSnsAction) int { return v.Position }).(pulumi.IntOutput)
}

// The ARN of an SNS topic to notify
func (o ReceiptRuleSnsActionOutput) TopicArn() pulumi.StringOutput {
	return o.ApplyT(func(v ReceiptRuleSnsAction) string { return v.TopicArn }).(pulumi.StringOutput)
}

type ReceiptRuleSnsActionArrayOutput struct{ *pulumi.OutputState }

func (ReceiptRuleSnsActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiptRuleSnsAction)(nil)).Elem()
}

func (o ReceiptRuleSnsActionArrayOutput) ToReceiptRuleSnsActionArrayOutput() ReceiptRuleSnsActionArrayOutput {
	return o
}

func (o ReceiptRuleSnsActionArrayOutput) ToReceiptRuleSnsActionArrayOutputWithContext(ctx context.Context) ReceiptRuleSnsActionArrayOutput {
	return o
}

func (o ReceiptRuleSnsActionArrayOutput) Index(i pulumi.IntInput) ReceiptRuleSnsActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReceiptRuleSnsAction {
		return vs[0].([]ReceiptRuleSnsAction)[vs[1].(int)]
	}).(ReceiptRuleSnsActionOutput)
}

type ReceiptRuleStopAction struct {
	// The position of the action in the receipt rule
	Position int `pulumi:"position"`
	// The scope to apply
	Scope string `pulumi:"scope"`
	// The ARN of an SNS topic to notify
	TopicArn *string `pulumi:"topicArn"`
}

// ReceiptRuleStopActionInput is an input type that accepts ReceiptRuleStopActionArgs and ReceiptRuleStopActionOutput values.
// You can construct a concrete instance of `ReceiptRuleStopActionInput` via:
//
// 		 ReceiptRuleStopActionArgs{...}
//
type ReceiptRuleStopActionInput interface {
	pulumi.Input

	ToReceiptRuleStopActionOutput() ReceiptRuleStopActionOutput
	ToReceiptRuleStopActionOutputWithContext(context.Context) ReceiptRuleStopActionOutput
}

type ReceiptRuleStopActionArgs struct {
	// The position of the action in the receipt rule
	Position pulumi.IntInput `pulumi:"position"`
	// The scope to apply
	Scope pulumi.StringInput `pulumi:"scope"`
	// The ARN of an SNS topic to notify
	TopicArn pulumi.StringPtrInput `pulumi:"topicArn"`
}

func (ReceiptRuleStopActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiptRuleStopAction)(nil)).Elem()
}

func (i ReceiptRuleStopActionArgs) ToReceiptRuleStopActionOutput() ReceiptRuleStopActionOutput {
	return i.ToReceiptRuleStopActionOutputWithContext(context.Background())
}

func (i ReceiptRuleStopActionArgs) ToReceiptRuleStopActionOutputWithContext(ctx context.Context) ReceiptRuleStopActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiptRuleStopActionOutput)
}

// ReceiptRuleStopActionArrayInput is an input type that accepts ReceiptRuleStopActionArray and ReceiptRuleStopActionArrayOutput values.
// You can construct a concrete instance of `ReceiptRuleStopActionArrayInput` via:
//
// 		 ReceiptRuleStopActionArray{ ReceiptRuleStopActionArgs{...} }
//
type ReceiptRuleStopActionArrayInput interface {
	pulumi.Input

	ToReceiptRuleStopActionArrayOutput() ReceiptRuleStopActionArrayOutput
	ToReceiptRuleStopActionArrayOutputWithContext(context.Context) ReceiptRuleStopActionArrayOutput
}

type ReceiptRuleStopActionArray []ReceiptRuleStopActionInput

func (ReceiptRuleStopActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiptRuleStopAction)(nil)).Elem()
}

func (i ReceiptRuleStopActionArray) ToReceiptRuleStopActionArrayOutput() ReceiptRuleStopActionArrayOutput {
	return i.ToReceiptRuleStopActionArrayOutputWithContext(context.Background())
}

func (i ReceiptRuleStopActionArray) ToReceiptRuleStopActionArrayOutputWithContext(ctx context.Context) ReceiptRuleStopActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiptRuleStopActionArrayOutput)
}

type ReceiptRuleStopActionOutput struct{ *pulumi.OutputState }

func (ReceiptRuleStopActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiptRuleStopAction)(nil)).Elem()
}

func (o ReceiptRuleStopActionOutput) ToReceiptRuleStopActionOutput() ReceiptRuleStopActionOutput {
	return o
}

func (o ReceiptRuleStopActionOutput) ToReceiptRuleStopActionOutputWithContext(ctx context.Context) ReceiptRuleStopActionOutput {
	return o
}

// The position of the action in the receipt rule
func (o ReceiptRuleStopActionOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v ReceiptRuleStopAction) int { return v.Position }).(pulumi.IntOutput)
}

// The scope to apply
func (o ReceiptRuleStopActionOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v ReceiptRuleStopAction) string { return v.Scope }).(pulumi.StringOutput)
}

// The ARN of an SNS topic to notify
func (o ReceiptRuleStopActionOutput) TopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiptRuleStopAction) *string { return v.TopicArn }).(pulumi.StringPtrOutput)
}

type ReceiptRuleStopActionArrayOutput struct{ *pulumi.OutputState }

func (ReceiptRuleStopActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiptRuleStopAction)(nil)).Elem()
}

func (o ReceiptRuleStopActionArrayOutput) ToReceiptRuleStopActionArrayOutput() ReceiptRuleStopActionArrayOutput {
	return o
}

func (o ReceiptRuleStopActionArrayOutput) ToReceiptRuleStopActionArrayOutputWithContext(ctx context.Context) ReceiptRuleStopActionArrayOutput {
	return o
}

func (o ReceiptRuleStopActionArrayOutput) Index(i pulumi.IntInput) ReceiptRuleStopActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReceiptRuleStopAction {
		return vs[0].([]ReceiptRuleStopAction)[vs[1].(int)]
	}).(ReceiptRuleStopActionOutput)
}

type ReceiptRuleWorkmailAction struct {
	// The ARN of the WorkMail organization
	OrganizationArn string `pulumi:"organizationArn"`
	// The position of the action in the receipt rule
	Position int `pulumi:"position"`
	// The ARN of an SNS topic to notify
	TopicArn *string `pulumi:"topicArn"`
}

// ReceiptRuleWorkmailActionInput is an input type that accepts ReceiptRuleWorkmailActionArgs and ReceiptRuleWorkmailActionOutput values.
// You can construct a concrete instance of `ReceiptRuleWorkmailActionInput` via:
//
// 		 ReceiptRuleWorkmailActionArgs{...}
//
type ReceiptRuleWorkmailActionInput interface {
	pulumi.Input

	ToReceiptRuleWorkmailActionOutput() ReceiptRuleWorkmailActionOutput
	ToReceiptRuleWorkmailActionOutputWithContext(context.Context) ReceiptRuleWorkmailActionOutput
}

type ReceiptRuleWorkmailActionArgs struct {
	// The ARN of the WorkMail organization
	OrganizationArn pulumi.StringInput `pulumi:"organizationArn"`
	// The position of the action in the receipt rule
	Position pulumi.IntInput `pulumi:"position"`
	// The ARN of an SNS topic to notify
	TopicArn pulumi.StringPtrInput `pulumi:"topicArn"`
}

func (ReceiptRuleWorkmailActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiptRuleWorkmailAction)(nil)).Elem()
}

func (i ReceiptRuleWorkmailActionArgs) ToReceiptRuleWorkmailActionOutput() ReceiptRuleWorkmailActionOutput {
	return i.ToReceiptRuleWorkmailActionOutputWithContext(context.Background())
}

func (i ReceiptRuleWorkmailActionArgs) ToReceiptRuleWorkmailActionOutputWithContext(ctx context.Context) ReceiptRuleWorkmailActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiptRuleWorkmailActionOutput)
}

// ReceiptRuleWorkmailActionArrayInput is an input type that accepts ReceiptRuleWorkmailActionArray and ReceiptRuleWorkmailActionArrayOutput values.
// You can construct a concrete instance of `ReceiptRuleWorkmailActionArrayInput` via:
//
// 		 ReceiptRuleWorkmailActionArray{ ReceiptRuleWorkmailActionArgs{...} }
//
type ReceiptRuleWorkmailActionArrayInput interface {
	pulumi.Input

	ToReceiptRuleWorkmailActionArrayOutput() ReceiptRuleWorkmailActionArrayOutput
	ToReceiptRuleWorkmailActionArrayOutputWithContext(context.Context) ReceiptRuleWorkmailActionArrayOutput
}

type ReceiptRuleWorkmailActionArray []ReceiptRuleWorkmailActionInput

func (ReceiptRuleWorkmailActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiptRuleWorkmailAction)(nil)).Elem()
}

func (i ReceiptRuleWorkmailActionArray) ToReceiptRuleWorkmailActionArrayOutput() ReceiptRuleWorkmailActionArrayOutput {
	return i.ToReceiptRuleWorkmailActionArrayOutputWithContext(context.Background())
}

func (i ReceiptRuleWorkmailActionArray) ToReceiptRuleWorkmailActionArrayOutputWithContext(ctx context.Context) ReceiptRuleWorkmailActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReceiptRuleWorkmailActionArrayOutput)
}

type ReceiptRuleWorkmailActionOutput struct{ *pulumi.OutputState }

func (ReceiptRuleWorkmailActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReceiptRuleWorkmailAction)(nil)).Elem()
}

func (o ReceiptRuleWorkmailActionOutput) ToReceiptRuleWorkmailActionOutput() ReceiptRuleWorkmailActionOutput {
	return o
}

func (o ReceiptRuleWorkmailActionOutput) ToReceiptRuleWorkmailActionOutputWithContext(ctx context.Context) ReceiptRuleWorkmailActionOutput {
	return o
}

// The ARN of the WorkMail organization
func (o ReceiptRuleWorkmailActionOutput) OrganizationArn() pulumi.StringOutput {
	return o.ApplyT(func(v ReceiptRuleWorkmailAction) string { return v.OrganizationArn }).(pulumi.StringOutput)
}

// The position of the action in the receipt rule
func (o ReceiptRuleWorkmailActionOutput) Position() pulumi.IntOutput {
	return o.ApplyT(func(v ReceiptRuleWorkmailAction) int { return v.Position }).(pulumi.IntOutput)
}

// The ARN of an SNS topic to notify
func (o ReceiptRuleWorkmailActionOutput) TopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReceiptRuleWorkmailAction) *string { return v.TopicArn }).(pulumi.StringPtrOutput)
}

type ReceiptRuleWorkmailActionArrayOutput struct{ *pulumi.OutputState }

func (ReceiptRuleWorkmailActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReceiptRuleWorkmailAction)(nil)).Elem()
}

func (o ReceiptRuleWorkmailActionArrayOutput) ToReceiptRuleWorkmailActionArrayOutput() ReceiptRuleWorkmailActionArrayOutput {
	return o
}

func (o ReceiptRuleWorkmailActionArrayOutput) ToReceiptRuleWorkmailActionArrayOutputWithContext(ctx context.Context) ReceiptRuleWorkmailActionArrayOutput {
	return o
}

func (o ReceiptRuleWorkmailActionArrayOutput) Index(i pulumi.IntInput) ReceiptRuleWorkmailActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReceiptRuleWorkmailAction {
		return vs[0].([]ReceiptRuleWorkmailAction)[vs[1].(int)]
	}).(ReceiptRuleWorkmailActionOutput)
}

func init() {
	pulumi.RegisterOutputType(EventDestinationCloudwatchDestinationOutput{})
	pulumi.RegisterOutputType(EventDestinationCloudwatchDestinationArrayOutput{})
	pulumi.RegisterOutputType(EventDestinationKinesisDestinationOutput{})
	pulumi.RegisterOutputType(EventDestinationKinesisDestinationPtrOutput{})
	pulumi.RegisterOutputType(EventDestinationSnsDestinationOutput{})
	pulumi.RegisterOutputType(EventDestinationSnsDestinationPtrOutput{})
	pulumi.RegisterOutputType(ReceiptRuleAddHeaderActionOutput{})
	pulumi.RegisterOutputType(ReceiptRuleAddHeaderActionArrayOutput{})
	pulumi.RegisterOutputType(ReceiptRuleBounceActionOutput{})
	pulumi.RegisterOutputType(ReceiptRuleBounceActionArrayOutput{})
	pulumi.RegisterOutputType(ReceiptRuleLambdaActionOutput{})
	pulumi.RegisterOutputType(ReceiptRuleLambdaActionArrayOutput{})
	pulumi.RegisterOutputType(ReceiptRuleS3ActionOutput{})
	pulumi.RegisterOutputType(ReceiptRuleS3ActionArrayOutput{})
	pulumi.RegisterOutputType(ReceiptRuleSnsActionOutput{})
	pulumi.RegisterOutputType(ReceiptRuleSnsActionArrayOutput{})
	pulumi.RegisterOutputType(ReceiptRuleStopActionOutput{})
	pulumi.RegisterOutputType(ReceiptRuleStopActionArrayOutput{})
	pulumi.RegisterOutputType(ReceiptRuleWorkmailActionOutput{})
	pulumi.RegisterOutputType(ReceiptRuleWorkmailActionArrayOutput{})
}
