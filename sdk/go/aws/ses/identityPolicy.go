// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a SES Identity Policy. More information about SES Sending Authorization Policies can be found in the [SES Developer Guide](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/sending-authorization-policies.html).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/iam"
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ses"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		exampleDomainIdentity, err := ses.NewDomainIdentity(ctx, "exampleDomainIdentity", &ses.DomainIdentityArgs{
// 			Domain: pulumi.String("example.com"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = ses.NewIdentityPolicy(ctx, "exampleIdentityPolicy", &ses.IdentityPolicyArgs{
// 			Identity: exampleDomainIdentity.Arn,
// 			Policy: examplePolicyDocument.ApplyT(func(examplePolicyDocument iam.GetPolicyDocumentResult) (string, error) {
// 				return examplePolicyDocument.Json, nil
// 			}).(pulumi.StringOutput),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// SES Identity Policies can be imported using the identity and policy name, separated by a pipe character (`|`), e.g.
//
// ```sh
//  $ pulumi import aws:ses/identityPolicy:IdentityPolicy example 'example.com|example'
// ```
type IdentityPolicy struct {
	pulumi.CustomResourceState

	// Name or Amazon Resource Name (ARN) of the SES Identity.
	Identity pulumi.StringOutput `pulumi:"identity"`
	// Name of the policy.
	Name pulumi.StringOutput `pulumi:"name"`
	// JSON string of the policy.
	Policy pulumi.StringOutput `pulumi:"policy"`
}

// NewIdentityPolicy registers a new resource with the given unique name, arguments, and options.
func NewIdentityPolicy(ctx *pulumi.Context,
	name string, args *IdentityPolicyArgs, opts ...pulumi.ResourceOption) (*IdentityPolicy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Identity == nil {
		return nil, errors.New("invalid value for required argument 'Identity'")
	}
	if args.Policy == nil {
		return nil, errors.New("invalid value for required argument 'Policy'")
	}
	var resource IdentityPolicy
	err := ctx.RegisterResource("aws:ses/identityPolicy:IdentityPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityPolicy gets an existing IdentityPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityPolicyState, opts ...pulumi.ResourceOption) (*IdentityPolicy, error) {
	var resource IdentityPolicy
	err := ctx.ReadResource("aws:ses/identityPolicy:IdentityPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityPolicy resources.
type identityPolicyState struct {
	// Name or Amazon Resource Name (ARN) of the SES Identity.
	Identity *string `pulumi:"identity"`
	// Name of the policy.
	Name *string `pulumi:"name"`
	// JSON string of the policy.
	Policy *string `pulumi:"policy"`
}

type IdentityPolicyState struct {
	// Name or Amazon Resource Name (ARN) of the SES Identity.
	Identity pulumi.StringPtrInput
	// Name of the policy.
	Name pulumi.StringPtrInput
	// JSON string of the policy.
	Policy pulumi.StringPtrInput
}

func (IdentityPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityPolicyState)(nil)).Elem()
}

type identityPolicyArgs struct {
	// Name or Amazon Resource Name (ARN) of the SES Identity.
	Identity string `pulumi:"identity"`
	// Name of the policy.
	Name *string `pulumi:"name"`
	// JSON string of the policy.
	Policy string `pulumi:"policy"`
}

// The set of arguments for constructing a IdentityPolicy resource.
type IdentityPolicyArgs struct {
	// Name or Amazon Resource Name (ARN) of the SES Identity.
	Identity pulumi.StringInput
	// Name of the policy.
	Name pulumi.StringPtrInput
	// JSON string of the policy.
	Policy pulumi.StringInput
}

func (IdentityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityPolicyArgs)(nil)).Elem()
}

type IdentityPolicyInput interface {
	pulumi.Input

	ToIdentityPolicyOutput() IdentityPolicyOutput
	ToIdentityPolicyOutputWithContext(ctx context.Context) IdentityPolicyOutput
}

func (*IdentityPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPolicy)(nil))
}

func (i *IdentityPolicy) ToIdentityPolicyOutput() IdentityPolicyOutput {
	return i.ToIdentityPolicyOutputWithContext(context.Background())
}

func (i *IdentityPolicy) ToIdentityPolicyOutputWithContext(ctx context.Context) IdentityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPolicyOutput)
}

func (i *IdentityPolicy) ToIdentityPolicyPtrOutput() IdentityPolicyPtrOutput {
	return i.ToIdentityPolicyPtrOutputWithContext(context.Background())
}

func (i *IdentityPolicy) ToIdentityPolicyPtrOutputWithContext(ctx context.Context) IdentityPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPolicyPtrOutput)
}

type IdentityPolicyPtrInput interface {
	pulumi.Input

	ToIdentityPolicyPtrOutput() IdentityPolicyPtrOutput
	ToIdentityPolicyPtrOutputWithContext(ctx context.Context) IdentityPolicyPtrOutput
}

type identityPolicyPtrType IdentityPolicyArgs

func (*identityPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPolicy)(nil))
}

func (i *identityPolicyPtrType) ToIdentityPolicyPtrOutput() IdentityPolicyPtrOutput {
	return i.ToIdentityPolicyPtrOutputWithContext(context.Background())
}

func (i *identityPolicyPtrType) ToIdentityPolicyPtrOutputWithContext(ctx context.Context) IdentityPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPolicyPtrOutput)
}

// IdentityPolicyArrayInput is an input type that accepts IdentityPolicyArray and IdentityPolicyArrayOutput values.
// You can construct a concrete instance of `IdentityPolicyArrayInput` via:
//
//          IdentityPolicyArray{ IdentityPolicyArgs{...} }
type IdentityPolicyArrayInput interface {
	pulumi.Input

	ToIdentityPolicyArrayOutput() IdentityPolicyArrayOutput
	ToIdentityPolicyArrayOutputWithContext(context.Context) IdentityPolicyArrayOutput
}

type IdentityPolicyArray []IdentityPolicyInput

func (IdentityPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdentityPolicy)(nil)).Elem()
}

func (i IdentityPolicyArray) ToIdentityPolicyArrayOutput() IdentityPolicyArrayOutput {
	return i.ToIdentityPolicyArrayOutputWithContext(context.Background())
}

func (i IdentityPolicyArray) ToIdentityPolicyArrayOutputWithContext(ctx context.Context) IdentityPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPolicyArrayOutput)
}

// IdentityPolicyMapInput is an input type that accepts IdentityPolicyMap and IdentityPolicyMapOutput values.
// You can construct a concrete instance of `IdentityPolicyMapInput` via:
//
//          IdentityPolicyMap{ "key": IdentityPolicyArgs{...} }
type IdentityPolicyMapInput interface {
	pulumi.Input

	ToIdentityPolicyMapOutput() IdentityPolicyMapOutput
	ToIdentityPolicyMapOutputWithContext(context.Context) IdentityPolicyMapOutput
}

type IdentityPolicyMap map[string]IdentityPolicyInput

func (IdentityPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdentityPolicy)(nil)).Elem()
}

func (i IdentityPolicyMap) ToIdentityPolicyMapOutput() IdentityPolicyMapOutput {
	return i.ToIdentityPolicyMapOutputWithContext(context.Background())
}

func (i IdentityPolicyMap) ToIdentityPolicyMapOutputWithContext(ctx context.Context) IdentityPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPolicyMapOutput)
}

type IdentityPolicyOutput struct {
	*pulumi.OutputState
}

func (IdentityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPolicy)(nil))
}

func (o IdentityPolicyOutput) ToIdentityPolicyOutput() IdentityPolicyOutput {
	return o
}

func (o IdentityPolicyOutput) ToIdentityPolicyOutputWithContext(ctx context.Context) IdentityPolicyOutput {
	return o
}

func (o IdentityPolicyOutput) ToIdentityPolicyPtrOutput() IdentityPolicyPtrOutput {
	return o.ToIdentityPolicyPtrOutputWithContext(context.Background())
}

func (o IdentityPolicyOutput) ToIdentityPolicyPtrOutputWithContext(ctx context.Context) IdentityPolicyPtrOutput {
	return o.ApplyT(func(v IdentityPolicy) *IdentityPolicy {
		return &v
	}).(IdentityPolicyPtrOutput)
}

type IdentityPolicyPtrOutput struct {
	*pulumi.OutputState
}

func (IdentityPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPolicy)(nil))
}

func (o IdentityPolicyPtrOutput) ToIdentityPolicyPtrOutput() IdentityPolicyPtrOutput {
	return o
}

func (o IdentityPolicyPtrOutput) ToIdentityPolicyPtrOutputWithContext(ctx context.Context) IdentityPolicyPtrOutput {
	return o
}

type IdentityPolicyArrayOutput struct{ *pulumi.OutputState }

func (IdentityPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityPolicy)(nil))
}

func (o IdentityPolicyArrayOutput) ToIdentityPolicyArrayOutput() IdentityPolicyArrayOutput {
	return o
}

func (o IdentityPolicyArrayOutput) ToIdentityPolicyArrayOutputWithContext(ctx context.Context) IdentityPolicyArrayOutput {
	return o
}

func (o IdentityPolicyArrayOutput) Index(i pulumi.IntInput) IdentityPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityPolicy {
		return vs[0].([]IdentityPolicy)[vs[1].(int)]
	}).(IdentityPolicyOutput)
}

type IdentityPolicyMapOutput struct{ *pulumi.OutputState }

func (IdentityPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]IdentityPolicy)(nil))
}

func (o IdentityPolicyMapOutput) ToIdentityPolicyMapOutput() IdentityPolicyMapOutput {
	return o
}

func (o IdentityPolicyMapOutput) ToIdentityPolicyMapOutputWithContext(ctx context.Context) IdentityPolicyMapOutput {
	return o
}

func (o IdentityPolicyMapOutput) MapIndex(k pulumi.StringInput) IdentityPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) IdentityPolicy {
		return vs[0].(map[string]IdentityPolicy)[vs[1].(string)]
	}).(IdentityPolicyOutput)
}

func init() {
	pulumi.RegisterOutputType(IdentityPolicyOutput{})
	pulumi.RegisterOutputType(IdentityPolicyPtrOutput{})
	pulumi.RegisterOutputType(IdentityPolicyArrayOutput{})
	pulumi.RegisterOutputType(IdentityPolicyMapOutput{})
}
