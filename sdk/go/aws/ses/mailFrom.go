// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an SES domain MAIL FROM resource.
// 
// ~> **NOTE:** For the MAIL FROM domain to be fully usable, this resource should be paired with the [aws_ses_domain_identity resource](/docs/providers/aws/r/ses_domain_identity.html). To validate the MAIL FROM domain, a DNS MX record is required. To pass SPF checks, a DNS TXT record may also be required. See the [Amazon SES MAIL FROM documentation](https://docs.aws.amazon.com/ses/latest/DeveloperGuide/mail-from-set.html) for more information.
type MailFrom struct {
	s *pulumi.ResourceState
}

// NewMailFrom registers a new resource with the given unique name, arguments, and options.
func NewMailFrom(ctx *pulumi.Context,
	name string, args *MailFromArgs, opts ...pulumi.ResourceOpt) (*MailFrom, error) {
	if args == nil || args.Domain == nil {
		return nil, errors.New("missing required argument 'Domain'")
	}
	if args == nil || args.MailFromDomain == nil {
		return nil, errors.New("missing required argument 'MailFromDomain'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["behaviorOnMxFailure"] = nil
		inputs["domain"] = nil
		inputs["mailFromDomain"] = nil
	} else {
		inputs["behaviorOnMxFailure"] = args.BehaviorOnMxFailure
		inputs["domain"] = args.Domain
		inputs["mailFromDomain"] = args.MailFromDomain
	}
	s, err := ctx.RegisterResource("aws:ses/mailFrom:MailFrom", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &MailFrom{s: s}, nil
}

// GetMailFrom gets an existing MailFrom resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMailFrom(ctx *pulumi.Context,
	name string, id pulumi.ID, state *MailFromState, opts ...pulumi.ResourceOpt) (*MailFrom, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["behaviorOnMxFailure"] = state.BehaviorOnMxFailure
		inputs["domain"] = state.Domain
		inputs["mailFromDomain"] = state.MailFromDomain
	}
	s, err := ctx.ReadResource("aws:ses/mailFrom:MailFrom", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &MailFrom{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *MailFrom) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *MailFrom) ID() *pulumi.IDOutput {
	return r.s.ID
}

// The action that you want Amazon SES to take if it cannot successfully read the required MX record when you send an email. Defaults to `UseDefaultValue`. See the [SES API documentation](https://docs.aws.amazon.com/ses/latest/APIReference/API_SetIdentityMailFromDomain.html) for more information.
func (r *MailFrom) BehaviorOnMxFailure() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["behaviorOnMxFailure"])
}

// Verified domain name to generate DKIM tokens for.
func (r *MailFrom) Domain() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["domain"])
}

// Subdomain (of above domain) which is to be used as MAIL FROM address (Required for DMARC validation)
func (r *MailFrom) MailFromDomain() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["mailFromDomain"])
}

// Input properties used for looking up and filtering MailFrom resources.
type MailFromState struct {
	// The action that you want Amazon SES to take if it cannot successfully read the required MX record when you send an email. Defaults to `UseDefaultValue`. See the [SES API documentation](https://docs.aws.amazon.com/ses/latest/APIReference/API_SetIdentityMailFromDomain.html) for more information.
	BehaviorOnMxFailure interface{}
	// Verified domain name to generate DKIM tokens for.
	Domain interface{}
	// Subdomain (of above domain) which is to be used as MAIL FROM address (Required for DMARC validation)
	MailFromDomain interface{}
}

// The set of arguments for constructing a MailFrom resource.
type MailFromArgs struct {
	// The action that you want Amazon SES to take if it cannot successfully read the required MX record when you send an email. Defaults to `UseDefaultValue`. See the [SES API documentation](https://docs.aws.amazon.com/ses/latest/APIReference/API_SetIdentityMailFromDomain.html) for more information.
	BehaviorOnMxFailure interface{}
	// Verified domain name to generate DKIM tokens for.
	Domain interface{}
	// Subdomain (of above domain) which is to be used as MAIL FROM address (Required for DMARC validation)
	MailFromDomain interface{}
}
