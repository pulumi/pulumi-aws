// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DomainIdentity struct {
	pulumi.CustomResourceState

	Arn               pulumi.StringOutput `pulumi:"arn"`
	Domain            pulumi.StringOutput `pulumi:"domain"`
	VerificationToken pulumi.StringOutput `pulumi:"verificationToken"`
}

// NewDomainIdentity registers a new resource with the given unique name, arguments, and options.
func NewDomainIdentity(ctx *pulumi.Context,
	name string, args *DomainIdentityArgs, opts ...pulumi.ResourceOption) (*DomainIdentity, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Domain == nil {
		return nil, errors.New("invalid value for required argument 'Domain'")
	}
	var resource DomainIdentity
	err := ctx.RegisterResource("aws:ses/domainIdentity:DomainIdentity", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomainIdentity gets an existing DomainIdentity resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainIdentity(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainIdentityState, opts ...pulumi.ResourceOption) (*DomainIdentity, error) {
	var resource DomainIdentity
	err := ctx.ReadResource("aws:ses/domainIdentity:DomainIdentity", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DomainIdentity resources.
type domainIdentityState struct {
	Arn               *string `pulumi:"arn"`
	Domain            *string `pulumi:"domain"`
	VerificationToken *string `pulumi:"verificationToken"`
}

type DomainIdentityState struct {
	Arn               pulumi.StringPtrInput
	Domain            pulumi.StringPtrInput
	VerificationToken pulumi.StringPtrInput
}

func (DomainIdentityState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainIdentityState)(nil)).Elem()
}

type domainIdentityArgs struct {
	Domain string `pulumi:"domain"`
}

// The set of arguments for constructing a DomainIdentity resource.
type DomainIdentityArgs struct {
	Domain pulumi.StringInput
}

func (DomainIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainIdentityArgs)(nil)).Elem()
}

type DomainIdentityInput interface {
	pulumi.Input

	ToDomainIdentityOutput() DomainIdentityOutput
	ToDomainIdentityOutputWithContext(ctx context.Context) DomainIdentityOutput
}

func (*DomainIdentity) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainIdentity)(nil)).Elem()
}

func (i *DomainIdentity) ToDomainIdentityOutput() DomainIdentityOutput {
	return i.ToDomainIdentityOutputWithContext(context.Background())
}

func (i *DomainIdentity) ToDomainIdentityOutputWithContext(ctx context.Context) DomainIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainIdentityOutput)
}

// DomainIdentityArrayInput is an input type that accepts DomainIdentityArray and DomainIdentityArrayOutput values.
// You can construct a concrete instance of `DomainIdentityArrayInput` via:
//
//	DomainIdentityArray{ DomainIdentityArgs{...} }
type DomainIdentityArrayInput interface {
	pulumi.Input

	ToDomainIdentityArrayOutput() DomainIdentityArrayOutput
	ToDomainIdentityArrayOutputWithContext(context.Context) DomainIdentityArrayOutput
}

type DomainIdentityArray []DomainIdentityInput

func (DomainIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainIdentity)(nil)).Elem()
}

func (i DomainIdentityArray) ToDomainIdentityArrayOutput() DomainIdentityArrayOutput {
	return i.ToDomainIdentityArrayOutputWithContext(context.Background())
}

func (i DomainIdentityArray) ToDomainIdentityArrayOutputWithContext(ctx context.Context) DomainIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainIdentityArrayOutput)
}

// DomainIdentityMapInput is an input type that accepts DomainIdentityMap and DomainIdentityMapOutput values.
// You can construct a concrete instance of `DomainIdentityMapInput` via:
//
//	DomainIdentityMap{ "key": DomainIdentityArgs{...} }
type DomainIdentityMapInput interface {
	pulumi.Input

	ToDomainIdentityMapOutput() DomainIdentityMapOutput
	ToDomainIdentityMapOutputWithContext(context.Context) DomainIdentityMapOutput
}

type DomainIdentityMap map[string]DomainIdentityInput

func (DomainIdentityMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainIdentity)(nil)).Elem()
}

func (i DomainIdentityMap) ToDomainIdentityMapOutput() DomainIdentityMapOutput {
	return i.ToDomainIdentityMapOutputWithContext(context.Background())
}

func (i DomainIdentityMap) ToDomainIdentityMapOutputWithContext(ctx context.Context) DomainIdentityMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainIdentityMapOutput)
}

type DomainIdentityOutput struct{ *pulumi.OutputState }

func (DomainIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainIdentity)(nil)).Elem()
}

func (o DomainIdentityOutput) ToDomainIdentityOutput() DomainIdentityOutput {
	return o
}

func (o DomainIdentityOutput) ToDomainIdentityOutputWithContext(ctx context.Context) DomainIdentityOutput {
	return o
}

func (o DomainIdentityOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainIdentity) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o DomainIdentityOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainIdentity) pulumi.StringOutput { return v.Domain }).(pulumi.StringOutput)
}

func (o DomainIdentityOutput) VerificationToken() pulumi.StringOutput {
	return o.ApplyT(func(v *DomainIdentity) pulumi.StringOutput { return v.VerificationToken }).(pulumi.StringOutput)
}

type DomainIdentityArrayOutput struct{ *pulumi.OutputState }

func (DomainIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DomainIdentity)(nil)).Elem()
}

func (o DomainIdentityArrayOutput) ToDomainIdentityArrayOutput() DomainIdentityArrayOutput {
	return o
}

func (o DomainIdentityArrayOutput) ToDomainIdentityArrayOutputWithContext(ctx context.Context) DomainIdentityArrayOutput {
	return o
}

func (o DomainIdentityArrayOutput) Index(i pulumi.IntInput) DomainIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DomainIdentity {
		return vs[0].([]*DomainIdentity)[vs[1].(int)]
	}).(DomainIdentityOutput)
}

type DomainIdentityMapOutput struct{ *pulumi.OutputState }

func (DomainIdentityMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DomainIdentity)(nil)).Elem()
}

func (o DomainIdentityMapOutput) ToDomainIdentityMapOutput() DomainIdentityMapOutput {
	return o
}

func (o DomainIdentityMapOutput) ToDomainIdentityMapOutputWithContext(ctx context.Context) DomainIdentityMapOutput {
	return o
}

func (o DomainIdentityMapOutput) MapIndex(k pulumi.StringInput) DomainIdentityOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DomainIdentity {
		return vs[0].(map[string]*DomainIdentity)[vs[1].(string)]
	}).(DomainIdentityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainIdentityInput)(nil)).Elem(), &DomainIdentity{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainIdentityArrayInput)(nil)).Elem(), DomainIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainIdentityMapInput)(nil)).Elem(), DomainIdentityMap{})
	pulumi.RegisterOutputType(DomainIdentityOutput{})
	pulumi.RegisterOutputType(DomainIdentityArrayOutput{})
	pulumi.RegisterOutputType(DomainIdentityMapOutput{})
}
