// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type EmailIdentity struct {
	pulumi.CustomResourceState

	Arn   pulumi.StringOutput `pulumi:"arn"`
	Email pulumi.StringOutput `pulumi:"email"`
}

// NewEmailIdentity registers a new resource with the given unique name, arguments, and options.
func NewEmailIdentity(ctx *pulumi.Context,
	name string, args *EmailIdentityArgs, opts ...pulumi.ResourceOption) (*EmailIdentity, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Email == nil {
		return nil, errors.New("invalid value for required argument 'Email'")
	}
	var resource EmailIdentity
	err := ctx.RegisterResource("aws:ses/emailIdentity:EmailIdentity", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEmailIdentity gets an existing EmailIdentity resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEmailIdentity(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EmailIdentityState, opts ...pulumi.ResourceOption) (*EmailIdentity, error) {
	var resource EmailIdentity
	err := ctx.ReadResource("aws:ses/emailIdentity:EmailIdentity", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EmailIdentity resources.
type emailIdentityState struct {
	Arn   *string `pulumi:"arn"`
	Email *string `pulumi:"email"`
}

type EmailIdentityState struct {
	Arn   pulumi.StringPtrInput
	Email pulumi.StringPtrInput
}

func (EmailIdentityState) ElementType() reflect.Type {
	return reflect.TypeOf((*emailIdentityState)(nil)).Elem()
}

type emailIdentityArgs struct {
	Email string `pulumi:"email"`
}

// The set of arguments for constructing a EmailIdentity resource.
type EmailIdentityArgs struct {
	Email pulumi.StringInput
}

func (EmailIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*emailIdentityArgs)(nil)).Elem()
}

type EmailIdentityInput interface {
	pulumi.Input

	ToEmailIdentityOutput() EmailIdentityOutput
	ToEmailIdentityOutputWithContext(ctx context.Context) EmailIdentityOutput
}

func (*EmailIdentity) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailIdentity)(nil)).Elem()
}

func (i *EmailIdentity) ToEmailIdentityOutput() EmailIdentityOutput {
	return i.ToEmailIdentityOutputWithContext(context.Background())
}

func (i *EmailIdentity) ToEmailIdentityOutputWithContext(ctx context.Context) EmailIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailIdentityOutput)
}

// EmailIdentityArrayInput is an input type that accepts EmailIdentityArray and EmailIdentityArrayOutput values.
// You can construct a concrete instance of `EmailIdentityArrayInput` via:
//
//	EmailIdentityArray{ EmailIdentityArgs{...} }
type EmailIdentityArrayInput interface {
	pulumi.Input

	ToEmailIdentityArrayOutput() EmailIdentityArrayOutput
	ToEmailIdentityArrayOutputWithContext(context.Context) EmailIdentityArrayOutput
}

type EmailIdentityArray []EmailIdentityInput

func (EmailIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EmailIdentity)(nil)).Elem()
}

func (i EmailIdentityArray) ToEmailIdentityArrayOutput() EmailIdentityArrayOutput {
	return i.ToEmailIdentityArrayOutputWithContext(context.Background())
}

func (i EmailIdentityArray) ToEmailIdentityArrayOutputWithContext(ctx context.Context) EmailIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailIdentityArrayOutput)
}

// EmailIdentityMapInput is an input type that accepts EmailIdentityMap and EmailIdentityMapOutput values.
// You can construct a concrete instance of `EmailIdentityMapInput` via:
//
//	EmailIdentityMap{ "key": EmailIdentityArgs{...} }
type EmailIdentityMapInput interface {
	pulumi.Input

	ToEmailIdentityMapOutput() EmailIdentityMapOutput
	ToEmailIdentityMapOutputWithContext(context.Context) EmailIdentityMapOutput
}

type EmailIdentityMap map[string]EmailIdentityInput

func (EmailIdentityMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EmailIdentity)(nil)).Elem()
}

func (i EmailIdentityMap) ToEmailIdentityMapOutput() EmailIdentityMapOutput {
	return i.ToEmailIdentityMapOutputWithContext(context.Background())
}

func (i EmailIdentityMap) ToEmailIdentityMapOutputWithContext(ctx context.Context) EmailIdentityMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EmailIdentityMapOutput)
}

type EmailIdentityOutput struct{ *pulumi.OutputState }

func (EmailIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EmailIdentity)(nil)).Elem()
}

func (o EmailIdentityOutput) ToEmailIdentityOutput() EmailIdentityOutput {
	return o
}

func (o EmailIdentityOutput) ToEmailIdentityOutputWithContext(ctx context.Context) EmailIdentityOutput {
	return o
}

func (o EmailIdentityOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *EmailIdentity) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o EmailIdentityOutput) Email() pulumi.StringOutput {
	return o.ApplyT(func(v *EmailIdentity) pulumi.StringOutput { return v.Email }).(pulumi.StringOutput)
}

type EmailIdentityArrayOutput struct{ *pulumi.OutputState }

func (EmailIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EmailIdentity)(nil)).Elem()
}

func (o EmailIdentityArrayOutput) ToEmailIdentityArrayOutput() EmailIdentityArrayOutput {
	return o
}

func (o EmailIdentityArrayOutput) ToEmailIdentityArrayOutputWithContext(ctx context.Context) EmailIdentityArrayOutput {
	return o
}

func (o EmailIdentityArrayOutput) Index(i pulumi.IntInput) EmailIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EmailIdentity {
		return vs[0].([]*EmailIdentity)[vs[1].(int)]
	}).(EmailIdentityOutput)
}

type EmailIdentityMapOutput struct{ *pulumi.OutputState }

func (EmailIdentityMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EmailIdentity)(nil)).Elem()
}

func (o EmailIdentityMapOutput) ToEmailIdentityMapOutput() EmailIdentityMapOutput {
	return o
}

func (o EmailIdentityMapOutput) ToEmailIdentityMapOutputWithContext(ctx context.Context) EmailIdentityMapOutput {
	return o
}

func (o EmailIdentityMapOutput) MapIndex(k pulumi.StringInput) EmailIdentityOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EmailIdentity {
		return vs[0].(map[string]*EmailIdentity)[vs[1].(string)]
	}).(EmailIdentityOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EmailIdentityInput)(nil)).Elem(), &EmailIdentity{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailIdentityArrayInput)(nil)).Elem(), EmailIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EmailIdentityMapInput)(nil)).Elem(), EmailIdentityMap{})
	pulumi.RegisterOutputType(EmailIdentityOutput{})
	pulumi.RegisterOutputType(EmailIdentityArrayOutput{})
	pulumi.RegisterOutputType(EmailIdentityMapOutput{})
}
