// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an SES domain DKIM generation resource.
// 
// Domain ownership needs to be confirmed first using [ses_domain_identity Resource](https://www.terraform.io/docs/providers/aws/r/ses_domain_identity.html)
type DomainDkim struct {
	s *pulumi.ResourceState
}

// NewDomainDkim registers a new resource with the given unique name, arguments, and options.
func NewDomainDkim(ctx *pulumi.Context,
	name string, args *DomainDkimArgs, opts ...pulumi.ResourceOpt) (*DomainDkim, error) {
	if args == nil || args.Domain == nil {
		return nil, errors.New("missing required argument 'Domain'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["domain"] = nil
	} else {
		inputs["domain"] = args.Domain
	}
	inputs["dkimTokens"] = nil
	s, err := ctx.RegisterResource("aws:ses/domainDkim:DomainDkim", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &DomainDkim{s: s}, nil
}

// GetDomainDkim gets an existing DomainDkim resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomainDkim(ctx *pulumi.Context,
	name string, id pulumi.ID, state *DomainDkimState, opts ...pulumi.ResourceOpt) (*DomainDkim, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["dkimTokens"] = state.DkimTokens
		inputs["domain"] = state.Domain
	}
	s, err := ctx.ReadResource("aws:ses/domainDkim:DomainDkim", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &DomainDkim{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *DomainDkim) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *DomainDkim) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// DKIM tokens generated by SES.
// These tokens should be used to create CNAME records used to verify SES Easy DKIM.
// See below for an example of how this might be achieved
// when the domain is hosted in Route 53 and managed by Terraform.
// Find out more about verifying domains in Amazon SES
// in the [AWS SES docs](http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html).
func (r *DomainDkim) DkimTokens() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["dkimTokens"])
}

// Verified domain name to generate DKIM tokens for.
func (r *DomainDkim) Domain() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["domain"])
}

// Input properties used for looking up and filtering DomainDkim resources.
type DomainDkimState struct {
	// DKIM tokens generated by SES.
	// These tokens should be used to create CNAME records used to verify SES Easy DKIM.
	// See below for an example of how this might be achieved
	// when the domain is hosted in Route 53 and managed by Terraform.
	// Find out more about verifying domains in Amazon SES
	// in the [AWS SES docs](http://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim-dns-records.html).
	DkimTokens interface{}
	// Verified domain name to generate DKIM tokens for.
	Domain interface{}
}

// The set of arguments for constructing a DomainDkim resource.
type DomainDkimArgs struct {
	// Verified domain name to generate DKIM tokens for.
	Domain interface{}
}
