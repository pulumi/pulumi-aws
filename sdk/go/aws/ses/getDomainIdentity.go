// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ses

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Retrieve the SES domain identity
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/ses"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := ses.LookupDomainIdentity(ctx, &ses.LookupDomainIdentityArgs{
// 			Domain: "example.com",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupDomainIdentity(ctx *pulumi.Context, args *LookupDomainIdentityArgs, opts ...pulumi.InvokeOption) (*LookupDomainIdentityResult, error) {
	var rv LookupDomainIdentityResult
	err := ctx.Invoke("aws:ses/getDomainIdentity:getDomainIdentity", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDomainIdentity.
type LookupDomainIdentityArgs struct {
	// The name of the domain
	Domain string `pulumi:"domain"`
}

// A collection of values returned by getDomainIdentity.
type LookupDomainIdentityResult struct {
	// The ARN of the domain identity.
	Arn string `pulumi:"arn"`
	// The name of the domain
	Domain string `pulumi:"domain"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A code which when added to the domain as a TXT record will signal to SES that the owner of the domain has authorized SES to act on their behalf.
	VerificationToken string `pulumi:"verificationToken"`
}

func LookupDomainIdentityOutput(ctx *pulumi.Context, args LookupDomainIdentityOutputArgs, opts ...pulumi.InvokeOption) LookupDomainIdentityResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDomainIdentityResult, error) {
			args := v.(LookupDomainIdentityArgs)
			r, err := LookupDomainIdentity(ctx, &args, opts...)
			return *r, err
		}).(LookupDomainIdentityResultOutput)
}

// A collection of arguments for invoking getDomainIdentity.
type LookupDomainIdentityOutputArgs struct {
	// The name of the domain
	Domain pulumi.StringInput `pulumi:"domain"`
}

func (LookupDomainIdentityOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainIdentityArgs)(nil)).Elem()
}

// A collection of values returned by getDomainIdentity.
type LookupDomainIdentityResultOutput struct{ *pulumi.OutputState }

func (LookupDomainIdentityResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDomainIdentityResult)(nil)).Elem()
}

func (o LookupDomainIdentityResultOutput) ToLookupDomainIdentityResultOutput() LookupDomainIdentityResultOutput {
	return o
}

func (o LookupDomainIdentityResultOutput) ToLookupDomainIdentityResultOutputWithContext(ctx context.Context) LookupDomainIdentityResultOutput {
	return o
}

// The ARN of the domain identity.
func (o LookupDomainIdentityResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainIdentityResult) string { return v.Arn }).(pulumi.StringOutput)
}

// The name of the domain
func (o LookupDomainIdentityResultOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainIdentityResult) string { return v.Domain }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDomainIdentityResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainIdentityResult) string { return v.Id }).(pulumi.StringOutput)
}

// A code which when added to the domain as a TXT record will signal to SES that the owner of the domain has authorized SES to act on their behalf.
func (o LookupDomainIdentityResultOutput) VerificationToken() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDomainIdentityResult) string { return v.VerificationToken }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDomainIdentityResultOutput{})
}
