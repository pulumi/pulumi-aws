// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package costoptimizationhub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing AWS Cost Optimization Hub Preferences.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/costoptimizationhub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := costoptimizationhub.NewPreferences(ctx, "example", nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Usage with all the arguments
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/costoptimizationhub"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := costoptimizationhub.NewPreferences(ctx, "example", &costoptimizationhub.PreferencesArgs{
//				MemberAccountDiscountVisibility: pulumi.String("None"),
//				SavingsEstimationMode:           pulumi.String("AfterDiscounts"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import Cost Optimization Hub Preferences using the `id`. For example:
//
// ```sh
// $ pulumi import aws:costoptimizationhub/preferences:Preferences example 111222333444
// ```
type Preferences struct {
	pulumi.CustomResourceState

	// Customize whether the member accounts can see the "After Discounts" savings estimates. Valid values are `All` and `None`. Default value is `All`.
	MemberAccountDiscountVisibility pulumi.StringOutput `pulumi:"memberAccountDiscountVisibility"`
	// Customize how estimated monthly savings are calculated. Valid values are `BeforeDiscounts` and `AfterDiscounts`. Default value is `BeforeDiscounts`.
	SavingsEstimationMode pulumi.StringOutput `pulumi:"savingsEstimationMode"`
}

// NewPreferences registers a new resource with the given unique name, arguments, and options.
func NewPreferences(ctx *pulumi.Context,
	name string, args *PreferencesArgs, opts ...pulumi.ResourceOption) (*Preferences, error) {
	if args == nil {
		args = &PreferencesArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Preferences
	err := ctx.RegisterResource("aws:costoptimizationhub/preferences:Preferences", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPreferences gets an existing Preferences resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPreferences(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PreferencesState, opts ...pulumi.ResourceOption) (*Preferences, error) {
	var resource Preferences
	err := ctx.ReadResource("aws:costoptimizationhub/preferences:Preferences", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Preferences resources.
type preferencesState struct {
	// Customize whether the member accounts can see the "After Discounts" savings estimates. Valid values are `All` and `None`. Default value is `All`.
	MemberAccountDiscountVisibility *string `pulumi:"memberAccountDiscountVisibility"`
	// Customize how estimated monthly savings are calculated. Valid values are `BeforeDiscounts` and `AfterDiscounts`. Default value is `BeforeDiscounts`.
	SavingsEstimationMode *string `pulumi:"savingsEstimationMode"`
}

type PreferencesState struct {
	// Customize whether the member accounts can see the "After Discounts" savings estimates. Valid values are `All` and `None`. Default value is `All`.
	MemberAccountDiscountVisibility pulumi.StringPtrInput
	// Customize how estimated monthly savings are calculated. Valid values are `BeforeDiscounts` and `AfterDiscounts`. Default value is `BeforeDiscounts`.
	SavingsEstimationMode pulumi.StringPtrInput
}

func (PreferencesState) ElementType() reflect.Type {
	return reflect.TypeOf((*preferencesState)(nil)).Elem()
}

type preferencesArgs struct {
	// Customize whether the member accounts can see the "After Discounts" savings estimates. Valid values are `All` and `None`. Default value is `All`.
	MemberAccountDiscountVisibility *string `pulumi:"memberAccountDiscountVisibility"`
	// Customize how estimated monthly savings are calculated. Valid values are `BeforeDiscounts` and `AfterDiscounts`. Default value is `BeforeDiscounts`.
	SavingsEstimationMode *string `pulumi:"savingsEstimationMode"`
}

// The set of arguments for constructing a Preferences resource.
type PreferencesArgs struct {
	// Customize whether the member accounts can see the "After Discounts" savings estimates. Valid values are `All` and `None`. Default value is `All`.
	MemberAccountDiscountVisibility pulumi.StringPtrInput
	// Customize how estimated monthly savings are calculated. Valid values are `BeforeDiscounts` and `AfterDiscounts`. Default value is `BeforeDiscounts`.
	SavingsEstimationMode pulumi.StringPtrInput
}

func (PreferencesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*preferencesArgs)(nil)).Elem()
}

type PreferencesInput interface {
	pulumi.Input

	ToPreferencesOutput() PreferencesOutput
	ToPreferencesOutputWithContext(ctx context.Context) PreferencesOutput
}

func (*Preferences) ElementType() reflect.Type {
	return reflect.TypeOf((**Preferences)(nil)).Elem()
}

func (i *Preferences) ToPreferencesOutput() PreferencesOutput {
	return i.ToPreferencesOutputWithContext(context.Background())
}

func (i *Preferences) ToPreferencesOutputWithContext(ctx context.Context) PreferencesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferencesOutput)
}

// PreferencesArrayInput is an input type that accepts PreferencesArray and PreferencesArrayOutput values.
// You can construct a concrete instance of `PreferencesArrayInput` via:
//
//	PreferencesArray{ PreferencesArgs{...} }
type PreferencesArrayInput interface {
	pulumi.Input

	ToPreferencesArrayOutput() PreferencesArrayOutput
	ToPreferencesArrayOutputWithContext(context.Context) PreferencesArrayOutput
}

type PreferencesArray []PreferencesInput

func (PreferencesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Preferences)(nil)).Elem()
}

func (i PreferencesArray) ToPreferencesArrayOutput() PreferencesArrayOutput {
	return i.ToPreferencesArrayOutputWithContext(context.Background())
}

func (i PreferencesArray) ToPreferencesArrayOutputWithContext(ctx context.Context) PreferencesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferencesArrayOutput)
}

// PreferencesMapInput is an input type that accepts PreferencesMap and PreferencesMapOutput values.
// You can construct a concrete instance of `PreferencesMapInput` via:
//
//	PreferencesMap{ "key": PreferencesArgs{...} }
type PreferencesMapInput interface {
	pulumi.Input

	ToPreferencesMapOutput() PreferencesMapOutput
	ToPreferencesMapOutputWithContext(context.Context) PreferencesMapOutput
}

type PreferencesMap map[string]PreferencesInput

func (PreferencesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Preferences)(nil)).Elem()
}

func (i PreferencesMap) ToPreferencesMapOutput() PreferencesMapOutput {
	return i.ToPreferencesMapOutputWithContext(context.Background())
}

func (i PreferencesMap) ToPreferencesMapOutputWithContext(ctx context.Context) PreferencesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PreferencesMapOutput)
}

type PreferencesOutput struct{ *pulumi.OutputState }

func (PreferencesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Preferences)(nil)).Elem()
}

func (o PreferencesOutput) ToPreferencesOutput() PreferencesOutput {
	return o
}

func (o PreferencesOutput) ToPreferencesOutputWithContext(ctx context.Context) PreferencesOutput {
	return o
}

// Customize whether the member accounts can see the "After Discounts" savings estimates. Valid values are `All` and `None`. Default value is `All`.
func (o PreferencesOutput) MemberAccountDiscountVisibility() pulumi.StringOutput {
	return o.ApplyT(func(v *Preferences) pulumi.StringOutput { return v.MemberAccountDiscountVisibility }).(pulumi.StringOutput)
}

// Customize how estimated monthly savings are calculated. Valid values are `BeforeDiscounts` and `AfterDiscounts`. Default value is `BeforeDiscounts`.
func (o PreferencesOutput) SavingsEstimationMode() pulumi.StringOutput {
	return o.ApplyT(func(v *Preferences) pulumi.StringOutput { return v.SavingsEstimationMode }).(pulumi.StringOutput)
}

type PreferencesArrayOutput struct{ *pulumi.OutputState }

func (PreferencesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Preferences)(nil)).Elem()
}

func (o PreferencesArrayOutput) ToPreferencesArrayOutput() PreferencesArrayOutput {
	return o
}

func (o PreferencesArrayOutput) ToPreferencesArrayOutputWithContext(ctx context.Context) PreferencesArrayOutput {
	return o
}

func (o PreferencesArrayOutput) Index(i pulumi.IntInput) PreferencesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Preferences {
		return vs[0].([]*Preferences)[vs[1].(int)]
	}).(PreferencesOutput)
}

type PreferencesMapOutput struct{ *pulumi.OutputState }

func (PreferencesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Preferences)(nil)).Elem()
}

func (o PreferencesMapOutput) ToPreferencesMapOutput() PreferencesMapOutput {
	return o
}

func (o PreferencesMapOutput) ToPreferencesMapOutputWithContext(ctx context.Context) PreferencesMapOutput {
	return o
}

func (o PreferencesMapOutput) MapIndex(k pulumi.StringInput) PreferencesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Preferences {
		return vs[0].(map[string]*Preferences)[vs[1].(string)]
	}).(PreferencesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PreferencesInput)(nil)).Elem(), &Preferences{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreferencesArrayInput)(nil)).Elem(), PreferencesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PreferencesMapInput)(nil)).Elem(), PreferencesMap{})
	pulumi.RegisterOutputType(PreferencesOutput{})
	pulumi.RegisterOutputType(PreferencesArrayOutput{})
	pulumi.RegisterOutputType(PreferencesMapOutput{})
}
