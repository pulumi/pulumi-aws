// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ClusterEndpoint struct {
	pulumi.CustomResourceState

	Arn                       pulumi.StringOutput      `pulumi:"arn"`
	ClusterEndpointIdentifier pulumi.StringOutput      `pulumi:"clusterEndpointIdentifier"`
	ClusterIdentifier         pulumi.StringOutput      `pulumi:"clusterIdentifier"`
	CustomEndpointType        pulumi.StringOutput      `pulumi:"customEndpointType"`
	Endpoint                  pulumi.StringOutput      `pulumi:"endpoint"`
	ExcludedMembers           pulumi.StringArrayOutput `pulumi:"excludedMembers"`
	StaticMembers             pulumi.StringArrayOutput `pulumi:"staticMembers"`
	Tags                      pulumi.StringMapOutput   `pulumi:"tags"`
	TagsAll                   pulumi.StringMapOutput   `pulumi:"tagsAll"`
}

// NewClusterEndpoint registers a new resource with the given unique name, arguments, and options.
func NewClusterEndpoint(ctx *pulumi.Context,
	name string, args *ClusterEndpointArgs, opts ...pulumi.ResourceOption) (*ClusterEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterEndpointIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'ClusterEndpointIdentifier'")
	}
	if args.ClusterIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'ClusterIdentifier'")
	}
	if args.CustomEndpointType == nil {
		return nil, errors.New("invalid value for required argument 'CustomEndpointType'")
	}
	var resource ClusterEndpoint
	err := ctx.RegisterResource("aws:rds/clusterEndpoint:ClusterEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterEndpoint gets an existing ClusterEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterEndpointState, opts ...pulumi.ResourceOption) (*ClusterEndpoint, error) {
	var resource ClusterEndpoint
	err := ctx.ReadResource("aws:rds/clusterEndpoint:ClusterEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterEndpoint resources.
type clusterEndpointState struct {
	Arn                       *string           `pulumi:"arn"`
	ClusterEndpointIdentifier *string           `pulumi:"clusterEndpointIdentifier"`
	ClusterIdentifier         *string           `pulumi:"clusterIdentifier"`
	CustomEndpointType        *string           `pulumi:"customEndpointType"`
	Endpoint                  *string           `pulumi:"endpoint"`
	ExcludedMembers           []string          `pulumi:"excludedMembers"`
	StaticMembers             []string          `pulumi:"staticMembers"`
	Tags                      map[string]string `pulumi:"tags"`
	TagsAll                   map[string]string `pulumi:"tagsAll"`
}

type ClusterEndpointState struct {
	Arn                       pulumi.StringPtrInput
	ClusterEndpointIdentifier pulumi.StringPtrInput
	ClusterIdentifier         pulumi.StringPtrInput
	CustomEndpointType        pulumi.StringPtrInput
	Endpoint                  pulumi.StringPtrInput
	ExcludedMembers           pulumi.StringArrayInput
	StaticMembers             pulumi.StringArrayInput
	Tags                      pulumi.StringMapInput
	TagsAll                   pulumi.StringMapInput
}

func (ClusterEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterEndpointState)(nil)).Elem()
}

type clusterEndpointArgs struct {
	ClusterEndpointIdentifier string            `pulumi:"clusterEndpointIdentifier"`
	ClusterIdentifier         string            `pulumi:"clusterIdentifier"`
	CustomEndpointType        string            `pulumi:"customEndpointType"`
	ExcludedMembers           []string          `pulumi:"excludedMembers"`
	StaticMembers             []string          `pulumi:"staticMembers"`
	Tags                      map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a ClusterEndpoint resource.
type ClusterEndpointArgs struct {
	ClusterEndpointIdentifier pulumi.StringInput
	ClusterIdentifier         pulumi.StringInput
	CustomEndpointType        pulumi.StringInput
	ExcludedMembers           pulumi.StringArrayInput
	StaticMembers             pulumi.StringArrayInput
	Tags                      pulumi.StringMapInput
}

func (ClusterEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterEndpointArgs)(nil)).Elem()
}

type ClusterEndpointInput interface {
	pulumi.Input

	ToClusterEndpointOutput() ClusterEndpointOutput
	ToClusterEndpointOutputWithContext(ctx context.Context) ClusterEndpointOutput
}

func (*ClusterEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEndpoint)(nil)).Elem()
}

func (i *ClusterEndpoint) ToClusterEndpointOutput() ClusterEndpointOutput {
	return i.ToClusterEndpointOutputWithContext(context.Background())
}

func (i *ClusterEndpoint) ToClusterEndpointOutputWithContext(ctx context.Context) ClusterEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEndpointOutput)
}

// ClusterEndpointArrayInput is an input type that accepts ClusterEndpointArray and ClusterEndpointArrayOutput values.
// You can construct a concrete instance of `ClusterEndpointArrayInput` via:
//
//	ClusterEndpointArray{ ClusterEndpointArgs{...} }
type ClusterEndpointArrayInput interface {
	pulumi.Input

	ToClusterEndpointArrayOutput() ClusterEndpointArrayOutput
	ToClusterEndpointArrayOutputWithContext(context.Context) ClusterEndpointArrayOutput
}

type ClusterEndpointArray []ClusterEndpointInput

func (ClusterEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterEndpoint)(nil)).Elem()
}

func (i ClusterEndpointArray) ToClusterEndpointArrayOutput() ClusterEndpointArrayOutput {
	return i.ToClusterEndpointArrayOutputWithContext(context.Background())
}

func (i ClusterEndpointArray) ToClusterEndpointArrayOutputWithContext(ctx context.Context) ClusterEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEndpointArrayOutput)
}

// ClusterEndpointMapInput is an input type that accepts ClusterEndpointMap and ClusterEndpointMapOutput values.
// You can construct a concrete instance of `ClusterEndpointMapInput` via:
//
//	ClusterEndpointMap{ "key": ClusterEndpointArgs{...} }
type ClusterEndpointMapInput interface {
	pulumi.Input

	ToClusterEndpointMapOutput() ClusterEndpointMapOutput
	ToClusterEndpointMapOutputWithContext(context.Context) ClusterEndpointMapOutput
}

type ClusterEndpointMap map[string]ClusterEndpointInput

func (ClusterEndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterEndpoint)(nil)).Elem()
}

func (i ClusterEndpointMap) ToClusterEndpointMapOutput() ClusterEndpointMapOutput {
	return i.ToClusterEndpointMapOutputWithContext(context.Background())
}

func (i ClusterEndpointMap) ToClusterEndpointMapOutputWithContext(ctx context.Context) ClusterEndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterEndpointMapOutput)
}

type ClusterEndpointOutput struct{ *pulumi.OutputState }

func (ClusterEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterEndpoint)(nil)).Elem()
}

func (o ClusterEndpointOutput) ToClusterEndpointOutput() ClusterEndpointOutput {
	return o
}

func (o ClusterEndpointOutput) ToClusterEndpointOutputWithContext(ctx context.Context) ClusterEndpointOutput {
	return o
}

func (o ClusterEndpointOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterEndpoint) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o ClusterEndpointOutput) ClusterEndpointIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterEndpoint) pulumi.StringOutput { return v.ClusterEndpointIdentifier }).(pulumi.StringOutput)
}

func (o ClusterEndpointOutput) ClusterIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterEndpoint) pulumi.StringOutput { return v.ClusterIdentifier }).(pulumi.StringOutput)
}

func (o ClusterEndpointOutput) CustomEndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterEndpoint) pulumi.StringOutput { return v.CustomEndpointType }).(pulumi.StringOutput)
}

func (o ClusterEndpointOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterEndpoint) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

func (o ClusterEndpointOutput) ExcludedMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterEndpoint) pulumi.StringArrayOutput { return v.ExcludedMembers }).(pulumi.StringArrayOutput)
}

func (o ClusterEndpointOutput) StaticMembers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ClusterEndpoint) pulumi.StringArrayOutput { return v.StaticMembers }).(pulumi.StringArrayOutput)
}

func (o ClusterEndpointOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterEndpoint) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o ClusterEndpointOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ClusterEndpoint) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type ClusterEndpointArrayOutput struct{ *pulumi.OutputState }

func (ClusterEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterEndpoint)(nil)).Elem()
}

func (o ClusterEndpointArrayOutput) ToClusterEndpointArrayOutput() ClusterEndpointArrayOutput {
	return o
}

func (o ClusterEndpointArrayOutput) ToClusterEndpointArrayOutputWithContext(ctx context.Context) ClusterEndpointArrayOutput {
	return o
}

func (o ClusterEndpointArrayOutput) Index(i pulumi.IntInput) ClusterEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ClusterEndpoint {
		return vs[0].([]*ClusterEndpoint)[vs[1].(int)]
	}).(ClusterEndpointOutput)
}

type ClusterEndpointMapOutput struct{ *pulumi.OutputState }

func (ClusterEndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterEndpoint)(nil)).Elem()
}

func (o ClusterEndpointMapOutput) ToClusterEndpointMapOutput() ClusterEndpointMapOutput {
	return o
}

func (o ClusterEndpointMapOutput) ToClusterEndpointMapOutputWithContext(ctx context.Context) ClusterEndpointMapOutput {
	return o
}

func (o ClusterEndpointMapOutput) MapIndex(k pulumi.StringInput) ClusterEndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ClusterEndpoint {
		return vs[0].(map[string]*ClusterEndpoint)[vs[1].(string)]
	}).(ClusterEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEndpointInput)(nil)).Elem(), &ClusterEndpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEndpointArrayInput)(nil)).Elem(), ClusterEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterEndpointMapInput)(nil)).Elem(), ClusterEndpointMap{})
	pulumi.RegisterOutputType(ClusterEndpointOutput{})
	pulumi.RegisterOutputType(ClusterEndpointArrayOutput{})
	pulumi.RegisterOutputType(ClusterEndpointMapOutput{})
}
