// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Information about a database parameter group.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/rds"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := rds.LookupParameterGroup(ctx, &rds.LookupParameterGroupArgs{
//				Name: "default.postgres15",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func LookupParameterGroup(ctx *pulumi.Context, args *LookupParameterGroupArgs, opts ...pulumi.InvokeOption) (*LookupParameterGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupParameterGroupResult
	err := ctx.Invoke("aws:rds/getParameterGroup:getParameterGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getParameterGroup.
type LookupParameterGroupArgs struct {
	// DB parameter group name.
	Name string `pulumi:"name"`
}

// A collection of values returned by getParameterGroup.
type LookupParameterGroupResult struct {
	// ARN of the parameter group.
	Arn string `pulumi:"arn"`
	// Description of the parameter group.
	Description string `pulumi:"description"`
	// Family of the parameter group.
	Family string `pulumi:"family"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Name string `pulumi:"name"`
}

func LookupParameterGroupOutput(ctx *pulumi.Context, args LookupParameterGroupOutputArgs, opts ...pulumi.InvokeOption) LookupParameterGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupParameterGroupResult, error) {
			args := v.(LookupParameterGroupArgs)
			r, err := LookupParameterGroup(ctx, &args, opts...)
			var s LookupParameterGroupResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupParameterGroupResultOutput)
}

// A collection of arguments for invoking getParameterGroup.
type LookupParameterGroupOutputArgs struct {
	// DB parameter group name.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupParameterGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupParameterGroupArgs)(nil)).Elem()
}

// A collection of values returned by getParameterGroup.
type LookupParameterGroupResultOutput struct{ *pulumi.OutputState }

func (LookupParameterGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupParameterGroupResult)(nil)).Elem()
}

func (o LookupParameterGroupResultOutput) ToLookupParameterGroupResultOutput() LookupParameterGroupResultOutput {
	return o
}

func (o LookupParameterGroupResultOutput) ToLookupParameterGroupResultOutputWithContext(ctx context.Context) LookupParameterGroupResultOutput {
	return o
}

// ARN of the parameter group.
func (o LookupParameterGroupResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupParameterGroupResult) string { return v.Arn }).(pulumi.StringOutput)
}

// Description of the parameter group.
func (o LookupParameterGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupParameterGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

// Family of the parameter group.
func (o LookupParameterGroupResultOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func(v LookupParameterGroupResult) string { return v.Family }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupParameterGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupParameterGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupParameterGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupParameterGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupParameterGroupResultOutput{})
}
