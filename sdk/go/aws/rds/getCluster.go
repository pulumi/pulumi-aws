// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides information about a RDS cluster.
func Lookupluster(ctx *pulumi.Context, args *GetClusterArgs) (*GetClusterResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["clusterIdentifier"] = args.ClusterIdentifier
		inputs["tags"] = args.Tags
	}
	outputs, err := ctx.Invoke("aws:rds/getCluster:getCluster", inputs)
	if err != nil {
		return nil, err
	}
	ret := GetClusterResult{}
	if v, ok := outputs["availabilityZones"]; ok {
		ret.AvailabilityZones = v
	}
	if v, ok := outputs["backupRetentionPeriod"]; ok {
		ret.BackupRetentionPeriod = v
	}
	if v, ok := outputs["clusterMembers"]; ok {
		ret.ClusterMembers = v
	}
	if v, ok := outputs["clusterResourceId"]; ok {
		ret.ClusterResourceId = v
	}
	if v, ok := outputs["databaseName"]; ok {
		ret.DatabaseName = v
	}
	if v, ok := outputs["dbClusterParameterGroupName"]; ok {
		ret.DbClusterParameterGroupName = v
	}
	if v, ok := outputs["dbSubnetGroupName"]; ok {
		ret.DbSubnetGroupName = v
	}
	if v, ok := outputs["endpoint"]; ok {
		ret.Endpoint = v
	}
	if v, ok := outputs["engine"]; ok {
		ret.Engine = v
	}
	if v, ok := outputs["engineVersion"]; ok {
		ret.EngineVersion = v
	}
	if v, ok := outputs["finalSnapshotIdentifier"]; ok {
		ret.FinalSnapshotIdentifier = v
	}
	if v, ok := outputs["iamDatabaseAuthenticationEnabled"]; ok {
		ret.IamDatabaseAuthenticationEnabled = v
	}
	if v, ok := outputs["iamRoles"]; ok {
		ret.IamRoles = v
	}
	if v, ok := outputs["kmsKeyId"]; ok {
		ret.KmsKeyId = v
	}
	if v, ok := outputs["masterUsername"]; ok {
		ret.MasterUsername = v
	}
	if v, ok := outputs["port"]; ok {
		ret.Port = v
	}
	if v, ok := outputs["preferredBackupWindow"]; ok {
		ret.PreferredBackupWindow = v
	}
	if v, ok := outputs["preferredMaintenanceWindow"]; ok {
		ret.PreferredMaintenanceWindow = v
	}
	if v, ok := outputs["readerEndpoint"]; ok {
		ret.ReaderEndpoint = v
	}
	if v, ok := outputs["replicationSourceIdentifier"]; ok {
		ret.ReplicationSourceIdentifier = v
	}
	if v, ok := outputs["storageEncrypted"]; ok {
		ret.StorageEncrypted = v
	}
	if v, ok := outputs["tags"]; ok {
		ret.Tags = v
	}
	if v, ok := outputs["vpcSecurityGroupIds"]; ok {
		ret.VpcSecurityGroupIds = v
	}
	return &ret, nil
}

// A collection of arguments for invoking getCluster.
type GetClusterArgs struct {
	// The cluster identifier of the RDS cluster.
	ClusterIdentifier interface{}
	Tags interface{}
}

// A collection of values returned by getCluster.
type GetClusterResult struct {
	AvailabilityZones interface{}
	BackupRetentionPeriod interface{}
	ClusterMembers interface{}
	ClusterResourceId interface{}
	DatabaseName interface{}
	DbClusterParameterGroupName interface{}
	DbSubnetGroupName interface{}
	Endpoint interface{}
	Engine interface{}
	EngineVersion interface{}
	FinalSnapshotIdentifier interface{}
	IamDatabaseAuthenticationEnabled interface{}
	IamRoles interface{}
	KmsKeyId interface{}
	MasterUsername interface{}
	Port interface{}
	PreferredBackupWindow interface{}
	PreferredMaintenanceWindow interface{}
	ReaderEndpoint interface{}
	ReplicationSourceIdentifier interface{}
	StorageEncrypted interface{}
	Tags interface{}
	VpcSecurityGroupIds interface{}
}
