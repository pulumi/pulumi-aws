// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ClusterMasterUserSecret struct {
	// ARN for the KMS encryption key. When specifying `kmsKeyId`, `storageEncrypted` needs to be set to true.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Amazon Resource Name (ARN) of the secret.
	SecretArn *string `pulumi:"secretArn"`
	// Status of the secret. Valid Values: `creating` | `active` | `rotating` | `impaired`.
	SecretStatus *string `pulumi:"secretStatus"`
}

// ClusterMasterUserSecretInput is an input type that accepts ClusterMasterUserSecretArgs and ClusterMasterUserSecretOutput values.
// You can construct a concrete instance of `ClusterMasterUserSecretInput` via:
//
//	ClusterMasterUserSecretArgs{...}
type ClusterMasterUserSecretInput interface {
	pulumi.Input

	ToClusterMasterUserSecretOutput() ClusterMasterUserSecretOutput
	ToClusterMasterUserSecretOutputWithContext(context.Context) ClusterMasterUserSecretOutput
}

type ClusterMasterUserSecretArgs struct {
	// ARN for the KMS encryption key. When specifying `kmsKeyId`, `storageEncrypted` needs to be set to true.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// Amazon Resource Name (ARN) of the secret.
	SecretArn pulumi.StringPtrInput `pulumi:"secretArn"`
	// Status of the secret. Valid Values: `creating` | `active` | `rotating` | `impaired`.
	SecretStatus pulumi.StringPtrInput `pulumi:"secretStatus"`
}

func (ClusterMasterUserSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterUserSecret)(nil)).Elem()
}

func (i ClusterMasterUserSecretArgs) ToClusterMasterUserSecretOutput() ClusterMasterUserSecretOutput {
	return i.ToClusterMasterUserSecretOutputWithContext(context.Background())
}

func (i ClusterMasterUserSecretArgs) ToClusterMasterUserSecretOutputWithContext(ctx context.Context) ClusterMasterUserSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterUserSecretOutput)
}

// ClusterMasterUserSecretArrayInput is an input type that accepts ClusterMasterUserSecretArray and ClusterMasterUserSecretArrayOutput values.
// You can construct a concrete instance of `ClusterMasterUserSecretArrayInput` via:
//
//	ClusterMasterUserSecretArray{ ClusterMasterUserSecretArgs{...} }
type ClusterMasterUserSecretArrayInput interface {
	pulumi.Input

	ToClusterMasterUserSecretArrayOutput() ClusterMasterUserSecretArrayOutput
	ToClusterMasterUserSecretArrayOutputWithContext(context.Context) ClusterMasterUserSecretArrayOutput
}

type ClusterMasterUserSecretArray []ClusterMasterUserSecretInput

func (ClusterMasterUserSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMasterUserSecret)(nil)).Elem()
}

func (i ClusterMasterUserSecretArray) ToClusterMasterUserSecretArrayOutput() ClusterMasterUserSecretArrayOutput {
	return i.ToClusterMasterUserSecretArrayOutputWithContext(context.Background())
}

func (i ClusterMasterUserSecretArray) ToClusterMasterUserSecretArrayOutputWithContext(ctx context.Context) ClusterMasterUserSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterMasterUserSecretArrayOutput)
}

type ClusterMasterUserSecretOutput struct{ *pulumi.OutputState }

func (ClusterMasterUserSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterMasterUserSecret)(nil)).Elem()
}

func (o ClusterMasterUserSecretOutput) ToClusterMasterUserSecretOutput() ClusterMasterUserSecretOutput {
	return o
}

func (o ClusterMasterUserSecretOutput) ToClusterMasterUserSecretOutputWithContext(ctx context.Context) ClusterMasterUserSecretOutput {
	return o
}

// ARN for the KMS encryption key. When specifying `kmsKeyId`, `storageEncrypted` needs to be set to true.
func (o ClusterMasterUserSecretOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterUserSecret) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// Amazon Resource Name (ARN) of the secret.
func (o ClusterMasterUserSecretOutput) SecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterUserSecret) *string { return v.SecretArn }).(pulumi.StringPtrOutput)
}

// Status of the secret. Valid Values: `creating` | `active` | `rotating` | `impaired`.
func (o ClusterMasterUserSecretOutput) SecretStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterMasterUserSecret) *string { return v.SecretStatus }).(pulumi.StringPtrOutput)
}

type ClusterMasterUserSecretArrayOutput struct{ *pulumi.OutputState }

func (ClusterMasterUserSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterMasterUserSecret)(nil)).Elem()
}

func (o ClusterMasterUserSecretArrayOutput) ToClusterMasterUserSecretArrayOutput() ClusterMasterUserSecretArrayOutput {
	return o
}

func (o ClusterMasterUserSecretArrayOutput) ToClusterMasterUserSecretArrayOutputWithContext(ctx context.Context) ClusterMasterUserSecretArrayOutput {
	return o
}

func (o ClusterMasterUserSecretArrayOutput) Index(i pulumi.IntInput) ClusterMasterUserSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterMasterUserSecret {
		return vs[0].([]ClusterMasterUserSecret)[vs[1].(int)]
	}).(ClusterMasterUserSecretOutput)
}

type ClusterParameterGroupParameter struct {
	// "immediate" (default), or "pending-reboot". Some
	// engines can't apply some parameters without a reboot, and you will need to
	// specify "pending-reboot" here.
	ApplyMethod *string `pulumi:"applyMethod"`
	// The name of the DB parameter.
	Name string `pulumi:"name"`
	// The value of the DB parameter.
	Value string `pulumi:"value"`
}

// ClusterParameterGroupParameterInput is an input type that accepts ClusterParameterGroupParameterArgs and ClusterParameterGroupParameterOutput values.
// You can construct a concrete instance of `ClusterParameterGroupParameterInput` via:
//
//	ClusterParameterGroupParameterArgs{...}
type ClusterParameterGroupParameterInput interface {
	pulumi.Input

	ToClusterParameterGroupParameterOutput() ClusterParameterGroupParameterOutput
	ToClusterParameterGroupParameterOutputWithContext(context.Context) ClusterParameterGroupParameterOutput
}

type ClusterParameterGroupParameterArgs struct {
	// "immediate" (default), or "pending-reboot". Some
	// engines can't apply some parameters without a reboot, and you will need to
	// specify "pending-reboot" here.
	ApplyMethod pulumi.StringPtrInput `pulumi:"applyMethod"`
	// The name of the DB parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the DB parameter.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterParameterGroupParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterParameterGroupParameter)(nil)).Elem()
}

func (i ClusterParameterGroupParameterArgs) ToClusterParameterGroupParameterOutput() ClusterParameterGroupParameterOutput {
	return i.ToClusterParameterGroupParameterOutputWithContext(context.Background())
}

func (i ClusterParameterGroupParameterArgs) ToClusterParameterGroupParameterOutputWithContext(ctx context.Context) ClusterParameterGroupParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterParameterGroupParameterOutput)
}

// ClusterParameterGroupParameterArrayInput is an input type that accepts ClusterParameterGroupParameterArray and ClusterParameterGroupParameterArrayOutput values.
// You can construct a concrete instance of `ClusterParameterGroupParameterArrayInput` via:
//
//	ClusterParameterGroupParameterArray{ ClusterParameterGroupParameterArgs{...} }
type ClusterParameterGroupParameterArrayInput interface {
	pulumi.Input

	ToClusterParameterGroupParameterArrayOutput() ClusterParameterGroupParameterArrayOutput
	ToClusterParameterGroupParameterArrayOutputWithContext(context.Context) ClusterParameterGroupParameterArrayOutput
}

type ClusterParameterGroupParameterArray []ClusterParameterGroupParameterInput

func (ClusterParameterGroupParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterParameterGroupParameter)(nil)).Elem()
}

func (i ClusterParameterGroupParameterArray) ToClusterParameterGroupParameterArrayOutput() ClusterParameterGroupParameterArrayOutput {
	return i.ToClusterParameterGroupParameterArrayOutputWithContext(context.Background())
}

func (i ClusterParameterGroupParameterArray) ToClusterParameterGroupParameterArrayOutputWithContext(ctx context.Context) ClusterParameterGroupParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterParameterGroupParameterArrayOutput)
}

type ClusterParameterGroupParameterOutput struct{ *pulumi.OutputState }

func (ClusterParameterGroupParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterParameterGroupParameter)(nil)).Elem()
}

func (o ClusterParameterGroupParameterOutput) ToClusterParameterGroupParameterOutput() ClusterParameterGroupParameterOutput {
	return o
}

func (o ClusterParameterGroupParameterOutput) ToClusterParameterGroupParameterOutputWithContext(ctx context.Context) ClusterParameterGroupParameterOutput {
	return o
}

// "immediate" (default), or "pending-reboot". Some
// engines can't apply some parameters without a reboot, and you will need to
// specify "pending-reboot" here.
func (o ClusterParameterGroupParameterOutput) ApplyMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterParameterGroupParameter) *string { return v.ApplyMethod }).(pulumi.StringPtrOutput)
}

// The name of the DB parameter.
func (o ClusterParameterGroupParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterParameterGroupParameter) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the DB parameter.
func (o ClusterParameterGroupParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterParameterGroupParameter) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterParameterGroupParameterArrayOutput struct{ *pulumi.OutputState }

func (ClusterParameterGroupParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterParameterGroupParameter)(nil)).Elem()
}

func (o ClusterParameterGroupParameterArrayOutput) ToClusterParameterGroupParameterArrayOutput() ClusterParameterGroupParameterArrayOutput {
	return o
}

func (o ClusterParameterGroupParameterArrayOutput) ToClusterParameterGroupParameterArrayOutputWithContext(ctx context.Context) ClusterParameterGroupParameterArrayOutput {
	return o
}

func (o ClusterParameterGroupParameterArrayOutput) Index(i pulumi.IntInput) ClusterParameterGroupParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterParameterGroupParameter {
		return vs[0].([]ClusterParameterGroupParameter)[vs[1].(int)]
	}).(ClusterParameterGroupParameterOutput)
}

type ClusterRestoreToPointInTime struct {
	// Date and time in UTC format to restore the database cluster to. Conflicts with `useLatestRestorableTime`.
	RestoreToTime *string `pulumi:"restoreToTime"`
	// Type of restore to be performed.
	// Valid options are `full-copy` (default) and `copy-on-write`.
	RestoreType *string `pulumi:"restoreType"`
	// Identifier of the source database cluster from which to restore. When restoring from a cluster in another AWS account, the identifier is the ARN of that cluster.
	SourceClusterIdentifier string `pulumi:"sourceClusterIdentifier"`
	// Set to true to restore the database cluster to the latest restorable backup time. Defaults to false. Conflicts with `restoreToTime`.
	UseLatestRestorableTime *bool `pulumi:"useLatestRestorableTime"`
}

// ClusterRestoreToPointInTimeInput is an input type that accepts ClusterRestoreToPointInTimeArgs and ClusterRestoreToPointInTimeOutput values.
// You can construct a concrete instance of `ClusterRestoreToPointInTimeInput` via:
//
//	ClusterRestoreToPointInTimeArgs{...}
type ClusterRestoreToPointInTimeInput interface {
	pulumi.Input

	ToClusterRestoreToPointInTimeOutput() ClusterRestoreToPointInTimeOutput
	ToClusterRestoreToPointInTimeOutputWithContext(context.Context) ClusterRestoreToPointInTimeOutput
}

type ClusterRestoreToPointInTimeArgs struct {
	// Date and time in UTC format to restore the database cluster to. Conflicts with `useLatestRestorableTime`.
	RestoreToTime pulumi.StringPtrInput `pulumi:"restoreToTime"`
	// Type of restore to be performed.
	// Valid options are `full-copy` (default) and `copy-on-write`.
	RestoreType pulumi.StringPtrInput `pulumi:"restoreType"`
	// Identifier of the source database cluster from which to restore. When restoring from a cluster in another AWS account, the identifier is the ARN of that cluster.
	SourceClusterIdentifier pulumi.StringInput `pulumi:"sourceClusterIdentifier"`
	// Set to true to restore the database cluster to the latest restorable backup time. Defaults to false. Conflicts with `restoreToTime`.
	UseLatestRestorableTime pulumi.BoolPtrInput `pulumi:"useLatestRestorableTime"`
}

func (ClusterRestoreToPointInTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterRestoreToPointInTime)(nil)).Elem()
}

func (i ClusterRestoreToPointInTimeArgs) ToClusterRestoreToPointInTimeOutput() ClusterRestoreToPointInTimeOutput {
	return i.ToClusterRestoreToPointInTimeOutputWithContext(context.Background())
}

func (i ClusterRestoreToPointInTimeArgs) ToClusterRestoreToPointInTimeOutputWithContext(ctx context.Context) ClusterRestoreToPointInTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRestoreToPointInTimeOutput)
}

func (i ClusterRestoreToPointInTimeArgs) ToClusterRestoreToPointInTimePtrOutput() ClusterRestoreToPointInTimePtrOutput {
	return i.ToClusterRestoreToPointInTimePtrOutputWithContext(context.Background())
}

func (i ClusterRestoreToPointInTimeArgs) ToClusterRestoreToPointInTimePtrOutputWithContext(ctx context.Context) ClusterRestoreToPointInTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRestoreToPointInTimeOutput).ToClusterRestoreToPointInTimePtrOutputWithContext(ctx)
}

// ClusterRestoreToPointInTimePtrInput is an input type that accepts ClusterRestoreToPointInTimeArgs, ClusterRestoreToPointInTimePtr and ClusterRestoreToPointInTimePtrOutput values.
// You can construct a concrete instance of `ClusterRestoreToPointInTimePtrInput` via:
//
//	        ClusterRestoreToPointInTimeArgs{...}
//
//	or:
//
//	        nil
type ClusterRestoreToPointInTimePtrInput interface {
	pulumi.Input

	ToClusterRestoreToPointInTimePtrOutput() ClusterRestoreToPointInTimePtrOutput
	ToClusterRestoreToPointInTimePtrOutputWithContext(context.Context) ClusterRestoreToPointInTimePtrOutput
}

type clusterRestoreToPointInTimePtrType ClusterRestoreToPointInTimeArgs

func ClusterRestoreToPointInTimePtr(v *ClusterRestoreToPointInTimeArgs) ClusterRestoreToPointInTimePtrInput {
	return (*clusterRestoreToPointInTimePtrType)(v)
}

func (*clusterRestoreToPointInTimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterRestoreToPointInTime)(nil)).Elem()
}

func (i *clusterRestoreToPointInTimePtrType) ToClusterRestoreToPointInTimePtrOutput() ClusterRestoreToPointInTimePtrOutput {
	return i.ToClusterRestoreToPointInTimePtrOutputWithContext(context.Background())
}

func (i *clusterRestoreToPointInTimePtrType) ToClusterRestoreToPointInTimePtrOutputWithContext(ctx context.Context) ClusterRestoreToPointInTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterRestoreToPointInTimePtrOutput)
}

type ClusterRestoreToPointInTimeOutput struct{ *pulumi.OutputState }

func (ClusterRestoreToPointInTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterRestoreToPointInTime)(nil)).Elem()
}

func (o ClusterRestoreToPointInTimeOutput) ToClusterRestoreToPointInTimeOutput() ClusterRestoreToPointInTimeOutput {
	return o
}

func (o ClusterRestoreToPointInTimeOutput) ToClusterRestoreToPointInTimeOutputWithContext(ctx context.Context) ClusterRestoreToPointInTimeOutput {
	return o
}

func (o ClusterRestoreToPointInTimeOutput) ToClusterRestoreToPointInTimePtrOutput() ClusterRestoreToPointInTimePtrOutput {
	return o.ToClusterRestoreToPointInTimePtrOutputWithContext(context.Background())
}

func (o ClusterRestoreToPointInTimeOutput) ToClusterRestoreToPointInTimePtrOutputWithContext(ctx context.Context) ClusterRestoreToPointInTimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterRestoreToPointInTime) *ClusterRestoreToPointInTime {
		return &v
	}).(ClusterRestoreToPointInTimePtrOutput)
}

// Date and time in UTC format to restore the database cluster to. Conflicts with `useLatestRestorableTime`.
func (o ClusterRestoreToPointInTimeOutput) RestoreToTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRestoreToPointInTime) *string { return v.RestoreToTime }).(pulumi.StringPtrOutput)
}

// Type of restore to be performed.
// Valid options are `full-copy` (default) and `copy-on-write`.
func (o ClusterRestoreToPointInTimeOutput) RestoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterRestoreToPointInTime) *string { return v.RestoreType }).(pulumi.StringPtrOutput)
}

// Identifier of the source database cluster from which to restore. When restoring from a cluster in another AWS account, the identifier is the ARN of that cluster.
func (o ClusterRestoreToPointInTimeOutput) SourceClusterIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterRestoreToPointInTime) string { return v.SourceClusterIdentifier }).(pulumi.StringOutput)
}

// Set to true to restore the database cluster to the latest restorable backup time. Defaults to false. Conflicts with `restoreToTime`.
func (o ClusterRestoreToPointInTimeOutput) UseLatestRestorableTime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterRestoreToPointInTime) *bool { return v.UseLatestRestorableTime }).(pulumi.BoolPtrOutput)
}

type ClusterRestoreToPointInTimePtrOutput struct{ *pulumi.OutputState }

func (ClusterRestoreToPointInTimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterRestoreToPointInTime)(nil)).Elem()
}

func (o ClusterRestoreToPointInTimePtrOutput) ToClusterRestoreToPointInTimePtrOutput() ClusterRestoreToPointInTimePtrOutput {
	return o
}

func (o ClusterRestoreToPointInTimePtrOutput) ToClusterRestoreToPointInTimePtrOutputWithContext(ctx context.Context) ClusterRestoreToPointInTimePtrOutput {
	return o
}

func (o ClusterRestoreToPointInTimePtrOutput) Elem() ClusterRestoreToPointInTimeOutput {
	return o.ApplyT(func(v *ClusterRestoreToPointInTime) ClusterRestoreToPointInTime {
		if v != nil {
			return *v
		}
		var ret ClusterRestoreToPointInTime
		return ret
	}).(ClusterRestoreToPointInTimeOutput)
}

// Date and time in UTC format to restore the database cluster to. Conflicts with `useLatestRestorableTime`.
func (o ClusterRestoreToPointInTimePtrOutput) RestoreToTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRestoreToPointInTime) *string {
		if v == nil {
			return nil
		}
		return v.RestoreToTime
	}).(pulumi.StringPtrOutput)
}

// Type of restore to be performed.
// Valid options are `full-copy` (default) and `copy-on-write`.
func (o ClusterRestoreToPointInTimePtrOutput) RestoreType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRestoreToPointInTime) *string {
		if v == nil {
			return nil
		}
		return v.RestoreType
	}).(pulumi.StringPtrOutput)
}

// Identifier of the source database cluster from which to restore. When restoring from a cluster in another AWS account, the identifier is the ARN of that cluster.
func (o ClusterRestoreToPointInTimePtrOutput) SourceClusterIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterRestoreToPointInTime) *string {
		if v == nil {
			return nil
		}
		return &v.SourceClusterIdentifier
	}).(pulumi.StringPtrOutput)
}

// Set to true to restore the database cluster to the latest restorable backup time. Defaults to false. Conflicts with `restoreToTime`.
func (o ClusterRestoreToPointInTimePtrOutput) UseLatestRestorableTime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterRestoreToPointInTime) *bool {
		if v == nil {
			return nil
		}
		return v.UseLatestRestorableTime
	}).(pulumi.BoolPtrOutput)
}

type ClusterS3Import struct {
	// Bucket name where your backup is stored
	BucketName string `pulumi:"bucketName"`
	// Can be blank, but is the path to your backup
	BucketPrefix *string `pulumi:"bucketPrefix"`
	// Role applied to load the data.
	IngestionRole string `pulumi:"ingestionRole"`
	// Source engine for the backup
	SourceEngine string `pulumi:"sourceEngine"`
	// Version of the source engine used to make the backup
	//
	// This will not recreate the resource if the S3 object changes in some way. It's only used to initialize the database. This only works currently with the aurora engine. See AWS for currently supported engines and options. See [Aurora S3 Migration Docs](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AuroraMySQL.Migrating.ExtMySQL.html#AuroraMySQL.Migrating.ExtMySQL.S3).
	SourceEngineVersion string `pulumi:"sourceEngineVersion"`
}

// ClusterS3ImportInput is an input type that accepts ClusterS3ImportArgs and ClusterS3ImportOutput values.
// You can construct a concrete instance of `ClusterS3ImportInput` via:
//
//	ClusterS3ImportArgs{...}
type ClusterS3ImportInput interface {
	pulumi.Input

	ToClusterS3ImportOutput() ClusterS3ImportOutput
	ToClusterS3ImportOutputWithContext(context.Context) ClusterS3ImportOutput
}

type ClusterS3ImportArgs struct {
	// Bucket name where your backup is stored
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// Can be blank, but is the path to your backup
	BucketPrefix pulumi.StringPtrInput `pulumi:"bucketPrefix"`
	// Role applied to load the data.
	IngestionRole pulumi.StringInput `pulumi:"ingestionRole"`
	// Source engine for the backup
	SourceEngine pulumi.StringInput `pulumi:"sourceEngine"`
	// Version of the source engine used to make the backup
	//
	// This will not recreate the resource if the S3 object changes in some way. It's only used to initialize the database. This only works currently with the aurora engine. See AWS for currently supported engines and options. See [Aurora S3 Migration Docs](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AuroraMySQL.Migrating.ExtMySQL.html#AuroraMySQL.Migrating.ExtMySQL.S3).
	SourceEngineVersion pulumi.StringInput `pulumi:"sourceEngineVersion"`
}

func (ClusterS3ImportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterS3Import)(nil)).Elem()
}

func (i ClusterS3ImportArgs) ToClusterS3ImportOutput() ClusterS3ImportOutput {
	return i.ToClusterS3ImportOutputWithContext(context.Background())
}

func (i ClusterS3ImportArgs) ToClusterS3ImportOutputWithContext(ctx context.Context) ClusterS3ImportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterS3ImportOutput)
}

func (i ClusterS3ImportArgs) ToClusterS3ImportPtrOutput() ClusterS3ImportPtrOutput {
	return i.ToClusterS3ImportPtrOutputWithContext(context.Background())
}

func (i ClusterS3ImportArgs) ToClusterS3ImportPtrOutputWithContext(ctx context.Context) ClusterS3ImportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterS3ImportOutput).ToClusterS3ImportPtrOutputWithContext(ctx)
}

// ClusterS3ImportPtrInput is an input type that accepts ClusterS3ImportArgs, ClusterS3ImportPtr and ClusterS3ImportPtrOutput values.
// You can construct a concrete instance of `ClusterS3ImportPtrInput` via:
//
//	        ClusterS3ImportArgs{...}
//
//	or:
//
//	        nil
type ClusterS3ImportPtrInput interface {
	pulumi.Input

	ToClusterS3ImportPtrOutput() ClusterS3ImportPtrOutput
	ToClusterS3ImportPtrOutputWithContext(context.Context) ClusterS3ImportPtrOutput
}

type clusterS3ImportPtrType ClusterS3ImportArgs

func ClusterS3ImportPtr(v *ClusterS3ImportArgs) ClusterS3ImportPtrInput {
	return (*clusterS3ImportPtrType)(v)
}

func (*clusterS3ImportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterS3Import)(nil)).Elem()
}

func (i *clusterS3ImportPtrType) ToClusterS3ImportPtrOutput() ClusterS3ImportPtrOutput {
	return i.ToClusterS3ImportPtrOutputWithContext(context.Background())
}

func (i *clusterS3ImportPtrType) ToClusterS3ImportPtrOutputWithContext(ctx context.Context) ClusterS3ImportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterS3ImportPtrOutput)
}

type ClusterS3ImportOutput struct{ *pulumi.OutputState }

func (ClusterS3ImportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterS3Import)(nil)).Elem()
}

func (o ClusterS3ImportOutput) ToClusterS3ImportOutput() ClusterS3ImportOutput {
	return o
}

func (o ClusterS3ImportOutput) ToClusterS3ImportOutputWithContext(ctx context.Context) ClusterS3ImportOutput {
	return o
}

func (o ClusterS3ImportOutput) ToClusterS3ImportPtrOutput() ClusterS3ImportPtrOutput {
	return o.ToClusterS3ImportPtrOutputWithContext(context.Background())
}

func (o ClusterS3ImportOutput) ToClusterS3ImportPtrOutputWithContext(ctx context.Context) ClusterS3ImportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterS3Import) *ClusterS3Import {
		return &v
	}).(ClusterS3ImportPtrOutput)
}

// Bucket name where your backup is stored
func (o ClusterS3ImportOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterS3Import) string { return v.BucketName }).(pulumi.StringOutput)
}

// Can be blank, but is the path to your backup
func (o ClusterS3ImportOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterS3Import) *string { return v.BucketPrefix }).(pulumi.StringPtrOutput)
}

// Role applied to load the data.
func (o ClusterS3ImportOutput) IngestionRole() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterS3Import) string { return v.IngestionRole }).(pulumi.StringOutput)
}

// Source engine for the backup
func (o ClusterS3ImportOutput) SourceEngine() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterS3Import) string { return v.SourceEngine }).(pulumi.StringOutput)
}

// Version of the source engine used to make the backup
//
// This will not recreate the resource if the S3 object changes in some way. It's only used to initialize the database. This only works currently with the aurora engine. See AWS for currently supported engines and options. See [Aurora S3 Migration Docs](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AuroraMySQL.Migrating.ExtMySQL.html#AuroraMySQL.Migrating.ExtMySQL.S3).
func (o ClusterS3ImportOutput) SourceEngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterS3Import) string { return v.SourceEngineVersion }).(pulumi.StringOutput)
}

type ClusterS3ImportPtrOutput struct{ *pulumi.OutputState }

func (ClusterS3ImportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterS3Import)(nil)).Elem()
}

func (o ClusterS3ImportPtrOutput) ToClusterS3ImportPtrOutput() ClusterS3ImportPtrOutput {
	return o
}

func (o ClusterS3ImportPtrOutput) ToClusterS3ImportPtrOutputWithContext(ctx context.Context) ClusterS3ImportPtrOutput {
	return o
}

func (o ClusterS3ImportPtrOutput) Elem() ClusterS3ImportOutput {
	return o.ApplyT(func(v *ClusterS3Import) ClusterS3Import {
		if v != nil {
			return *v
		}
		var ret ClusterS3Import
		return ret
	}).(ClusterS3ImportOutput)
}

// Bucket name where your backup is stored
func (o ClusterS3ImportPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterS3Import) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Can be blank, but is the path to your backup
func (o ClusterS3ImportPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterS3Import) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// Role applied to load the data.
func (o ClusterS3ImportPtrOutput) IngestionRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterS3Import) *string {
		if v == nil {
			return nil
		}
		return &v.IngestionRole
	}).(pulumi.StringPtrOutput)
}

// Source engine for the backup
func (o ClusterS3ImportPtrOutput) SourceEngine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterS3Import) *string {
		if v == nil {
			return nil
		}
		return &v.SourceEngine
	}).(pulumi.StringPtrOutput)
}

// Version of the source engine used to make the backup
//
// This will not recreate the resource if the S3 object changes in some way. It's only used to initialize the database. This only works currently with the aurora engine. See AWS for currently supported engines and options. See [Aurora S3 Migration Docs](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AuroraMySQL.Migrating.ExtMySQL.html#AuroraMySQL.Migrating.ExtMySQL.S3).
func (o ClusterS3ImportPtrOutput) SourceEngineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterS3Import) *string {
		if v == nil {
			return nil
		}
		return &v.SourceEngineVersion
	}).(pulumi.StringPtrOutput)
}

type ClusterScalingConfiguration struct {
	// Whether to enable automatic pause. A DB cluster can be paused only when it's idle (it has no connections). If a DB cluster is paused for more than seven days, the DB cluster might be backed up with a snapshot. In this case, the DB cluster is restored when there is a request to connect to it. Defaults to `true`.
	AutoPause *bool `pulumi:"autoPause"`
	// Maximum capacity for an Aurora DB cluster in `serverless` DB engine mode. The maximum capacity must be greater than or equal to the minimum capacity. Valid Aurora MySQL capacity values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `128`, `256`. Valid Aurora PostgreSQL capacity values are (`2`, `4`, `8`, `16`, `32`, `64`, `192`, and `384`). Defaults to `16`.
	MaxCapacity *int `pulumi:"maxCapacity"`
	// Minimum capacity for an Aurora DB cluster in `serverless` DB engine mode. The minimum capacity must be lesser than or equal to the maximum capacity. Valid Aurora MySQL capacity values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `128`, `256`. Valid Aurora PostgreSQL capacity values are (`2`, `4`, `8`, `16`, `32`, `64`, `192`, and `384`). Defaults to `1`.
	MinCapacity *int `pulumi:"minCapacity"`
	// Time, in seconds, before an Aurora DB cluster in serverless mode is paused. Valid values are `300` through `86400`. Defaults to `300`.
	SecondsUntilAutoPause *int `pulumi:"secondsUntilAutoPause"`
	// Action to take when the timeout is reached. Valid values: `ForceApplyCapacityChange`, `RollbackCapacityChange`. Defaults to `RollbackCapacityChange`. See [documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.how-it-works.html#aurora-serverless.how-it-works.timeout-action).
	TimeoutAction *string `pulumi:"timeoutAction"`
}

// ClusterScalingConfigurationInput is an input type that accepts ClusterScalingConfigurationArgs and ClusterScalingConfigurationOutput values.
// You can construct a concrete instance of `ClusterScalingConfigurationInput` via:
//
//	ClusterScalingConfigurationArgs{...}
type ClusterScalingConfigurationInput interface {
	pulumi.Input

	ToClusterScalingConfigurationOutput() ClusterScalingConfigurationOutput
	ToClusterScalingConfigurationOutputWithContext(context.Context) ClusterScalingConfigurationOutput
}

type ClusterScalingConfigurationArgs struct {
	// Whether to enable automatic pause. A DB cluster can be paused only when it's idle (it has no connections). If a DB cluster is paused for more than seven days, the DB cluster might be backed up with a snapshot. In this case, the DB cluster is restored when there is a request to connect to it. Defaults to `true`.
	AutoPause pulumi.BoolPtrInput `pulumi:"autoPause"`
	// Maximum capacity for an Aurora DB cluster in `serverless` DB engine mode. The maximum capacity must be greater than or equal to the minimum capacity. Valid Aurora MySQL capacity values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `128`, `256`. Valid Aurora PostgreSQL capacity values are (`2`, `4`, `8`, `16`, `32`, `64`, `192`, and `384`). Defaults to `16`.
	MaxCapacity pulumi.IntPtrInput `pulumi:"maxCapacity"`
	// Minimum capacity for an Aurora DB cluster in `serverless` DB engine mode. The minimum capacity must be lesser than or equal to the maximum capacity. Valid Aurora MySQL capacity values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `128`, `256`. Valid Aurora PostgreSQL capacity values are (`2`, `4`, `8`, `16`, `32`, `64`, `192`, and `384`). Defaults to `1`.
	MinCapacity pulumi.IntPtrInput `pulumi:"minCapacity"`
	// Time, in seconds, before an Aurora DB cluster in serverless mode is paused. Valid values are `300` through `86400`. Defaults to `300`.
	SecondsUntilAutoPause pulumi.IntPtrInput `pulumi:"secondsUntilAutoPause"`
	// Action to take when the timeout is reached. Valid values: `ForceApplyCapacityChange`, `RollbackCapacityChange`. Defaults to `RollbackCapacityChange`. See [documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.how-it-works.html#aurora-serverless.how-it-works.timeout-action).
	TimeoutAction pulumi.StringPtrInput `pulumi:"timeoutAction"`
}

func (ClusterScalingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterScalingConfiguration)(nil)).Elem()
}

func (i ClusterScalingConfigurationArgs) ToClusterScalingConfigurationOutput() ClusterScalingConfigurationOutput {
	return i.ToClusterScalingConfigurationOutputWithContext(context.Background())
}

func (i ClusterScalingConfigurationArgs) ToClusterScalingConfigurationOutputWithContext(ctx context.Context) ClusterScalingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterScalingConfigurationOutput)
}

func (i ClusterScalingConfigurationArgs) ToClusterScalingConfigurationPtrOutput() ClusterScalingConfigurationPtrOutput {
	return i.ToClusterScalingConfigurationPtrOutputWithContext(context.Background())
}

func (i ClusterScalingConfigurationArgs) ToClusterScalingConfigurationPtrOutputWithContext(ctx context.Context) ClusterScalingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterScalingConfigurationOutput).ToClusterScalingConfigurationPtrOutputWithContext(ctx)
}

// ClusterScalingConfigurationPtrInput is an input type that accepts ClusterScalingConfigurationArgs, ClusterScalingConfigurationPtr and ClusterScalingConfigurationPtrOutput values.
// You can construct a concrete instance of `ClusterScalingConfigurationPtrInput` via:
//
//	        ClusterScalingConfigurationArgs{...}
//
//	or:
//
//	        nil
type ClusterScalingConfigurationPtrInput interface {
	pulumi.Input

	ToClusterScalingConfigurationPtrOutput() ClusterScalingConfigurationPtrOutput
	ToClusterScalingConfigurationPtrOutputWithContext(context.Context) ClusterScalingConfigurationPtrOutput
}

type clusterScalingConfigurationPtrType ClusterScalingConfigurationArgs

func ClusterScalingConfigurationPtr(v *ClusterScalingConfigurationArgs) ClusterScalingConfigurationPtrInput {
	return (*clusterScalingConfigurationPtrType)(v)
}

func (*clusterScalingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterScalingConfiguration)(nil)).Elem()
}

func (i *clusterScalingConfigurationPtrType) ToClusterScalingConfigurationPtrOutput() ClusterScalingConfigurationPtrOutput {
	return i.ToClusterScalingConfigurationPtrOutputWithContext(context.Background())
}

func (i *clusterScalingConfigurationPtrType) ToClusterScalingConfigurationPtrOutputWithContext(ctx context.Context) ClusterScalingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterScalingConfigurationPtrOutput)
}

type ClusterScalingConfigurationOutput struct{ *pulumi.OutputState }

func (ClusterScalingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterScalingConfiguration)(nil)).Elem()
}

func (o ClusterScalingConfigurationOutput) ToClusterScalingConfigurationOutput() ClusterScalingConfigurationOutput {
	return o
}

func (o ClusterScalingConfigurationOutput) ToClusterScalingConfigurationOutputWithContext(ctx context.Context) ClusterScalingConfigurationOutput {
	return o
}

func (o ClusterScalingConfigurationOutput) ToClusterScalingConfigurationPtrOutput() ClusterScalingConfigurationPtrOutput {
	return o.ToClusterScalingConfigurationPtrOutputWithContext(context.Background())
}

func (o ClusterScalingConfigurationOutput) ToClusterScalingConfigurationPtrOutputWithContext(ctx context.Context) ClusterScalingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterScalingConfiguration) *ClusterScalingConfiguration {
		return &v
	}).(ClusterScalingConfigurationPtrOutput)
}

// Whether to enable automatic pause. A DB cluster can be paused only when it's idle (it has no connections). If a DB cluster is paused for more than seven days, the DB cluster might be backed up with a snapshot. In this case, the DB cluster is restored when there is a request to connect to it. Defaults to `true`.
func (o ClusterScalingConfigurationOutput) AutoPause() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ClusterScalingConfiguration) *bool { return v.AutoPause }).(pulumi.BoolPtrOutput)
}

// Maximum capacity for an Aurora DB cluster in `serverless` DB engine mode. The maximum capacity must be greater than or equal to the minimum capacity. Valid Aurora MySQL capacity values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `128`, `256`. Valid Aurora PostgreSQL capacity values are (`2`, `4`, `8`, `16`, `32`, `64`, `192`, and `384`). Defaults to `16`.
func (o ClusterScalingConfigurationOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterScalingConfiguration) *int { return v.MaxCapacity }).(pulumi.IntPtrOutput)
}

// Minimum capacity for an Aurora DB cluster in `serverless` DB engine mode. The minimum capacity must be lesser than or equal to the maximum capacity. Valid Aurora MySQL capacity values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `128`, `256`. Valid Aurora PostgreSQL capacity values are (`2`, `4`, `8`, `16`, `32`, `64`, `192`, and `384`). Defaults to `1`.
func (o ClusterScalingConfigurationOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterScalingConfiguration) *int { return v.MinCapacity }).(pulumi.IntPtrOutput)
}

// Time, in seconds, before an Aurora DB cluster in serverless mode is paused. Valid values are `300` through `86400`. Defaults to `300`.
func (o ClusterScalingConfigurationOutput) SecondsUntilAutoPause() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterScalingConfiguration) *int { return v.SecondsUntilAutoPause }).(pulumi.IntPtrOutput)
}

// Action to take when the timeout is reached. Valid values: `ForceApplyCapacityChange`, `RollbackCapacityChange`. Defaults to `RollbackCapacityChange`. See [documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.how-it-works.html#aurora-serverless.how-it-works.timeout-action).
func (o ClusterScalingConfigurationOutput) TimeoutAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterScalingConfiguration) *string { return v.TimeoutAction }).(pulumi.StringPtrOutput)
}

type ClusterScalingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ClusterScalingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterScalingConfiguration)(nil)).Elem()
}

func (o ClusterScalingConfigurationPtrOutput) ToClusterScalingConfigurationPtrOutput() ClusterScalingConfigurationPtrOutput {
	return o
}

func (o ClusterScalingConfigurationPtrOutput) ToClusterScalingConfigurationPtrOutputWithContext(ctx context.Context) ClusterScalingConfigurationPtrOutput {
	return o
}

func (o ClusterScalingConfigurationPtrOutput) Elem() ClusterScalingConfigurationOutput {
	return o.ApplyT(func(v *ClusterScalingConfiguration) ClusterScalingConfiguration {
		if v != nil {
			return *v
		}
		var ret ClusterScalingConfiguration
		return ret
	}).(ClusterScalingConfigurationOutput)
}

// Whether to enable automatic pause. A DB cluster can be paused only when it's idle (it has no connections). If a DB cluster is paused for more than seven days, the DB cluster might be backed up with a snapshot. In this case, the DB cluster is restored when there is a request to connect to it. Defaults to `true`.
func (o ClusterScalingConfigurationPtrOutput) AutoPause() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterScalingConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.AutoPause
	}).(pulumi.BoolPtrOutput)
}

// Maximum capacity for an Aurora DB cluster in `serverless` DB engine mode. The maximum capacity must be greater than or equal to the minimum capacity. Valid Aurora MySQL capacity values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `128`, `256`. Valid Aurora PostgreSQL capacity values are (`2`, `4`, `8`, `16`, `32`, `64`, `192`, and `384`). Defaults to `16`.
func (o ClusterScalingConfigurationPtrOutput) MaxCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterScalingConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxCapacity
	}).(pulumi.IntPtrOutput)
}

// Minimum capacity for an Aurora DB cluster in `serverless` DB engine mode. The minimum capacity must be lesser than or equal to the maximum capacity. Valid Aurora MySQL capacity values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `128`, `256`. Valid Aurora PostgreSQL capacity values are (`2`, `4`, `8`, `16`, `32`, `64`, `192`, and `384`). Defaults to `1`.
func (o ClusterScalingConfigurationPtrOutput) MinCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterScalingConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MinCapacity
	}).(pulumi.IntPtrOutput)
}

// Time, in seconds, before an Aurora DB cluster in serverless mode is paused. Valid values are `300` through `86400`. Defaults to `300`.
func (o ClusterScalingConfigurationPtrOutput) SecondsUntilAutoPause() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterScalingConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.SecondsUntilAutoPause
	}).(pulumi.IntPtrOutput)
}

// Action to take when the timeout is reached. Valid values: `ForceApplyCapacityChange`, `RollbackCapacityChange`. Defaults to `RollbackCapacityChange`. See [documentation](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/aurora-serverless.how-it-works.html#aurora-serverless.how-it-works.timeout-action).
func (o ClusterScalingConfigurationPtrOutput) TimeoutAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterScalingConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.TimeoutAction
	}).(pulumi.StringPtrOutput)
}

type ClusterServerlessv2ScalingConfiguration struct {
	// Maximum capacity for an Aurora DB cluster in `serverless` DB engine mode. The maximum capacity must be greater than or equal to the minimum capacity. Valid Aurora MySQL capacity values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `128`, `256`. Valid Aurora PostgreSQL capacity values are (`2`, `4`, `8`, `16`, `32`, `64`, `192`, and `384`). Defaults to `16`.
	MaxCapacity float64 `pulumi:"maxCapacity"`
	// Minimum capacity for an Aurora DB cluster in `serverless` DB engine mode. The minimum capacity must be lesser than or equal to the maximum capacity. Valid Aurora MySQL capacity values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `128`, `256`. Valid Aurora PostgreSQL capacity values are (`2`, `4`, `8`, `16`, `32`, `64`, `192`, and `384`). Defaults to `1`.
	MinCapacity float64 `pulumi:"minCapacity"`
}

// ClusterServerlessv2ScalingConfigurationInput is an input type that accepts ClusterServerlessv2ScalingConfigurationArgs and ClusterServerlessv2ScalingConfigurationOutput values.
// You can construct a concrete instance of `ClusterServerlessv2ScalingConfigurationInput` via:
//
//	ClusterServerlessv2ScalingConfigurationArgs{...}
type ClusterServerlessv2ScalingConfigurationInput interface {
	pulumi.Input

	ToClusterServerlessv2ScalingConfigurationOutput() ClusterServerlessv2ScalingConfigurationOutput
	ToClusterServerlessv2ScalingConfigurationOutputWithContext(context.Context) ClusterServerlessv2ScalingConfigurationOutput
}

type ClusterServerlessv2ScalingConfigurationArgs struct {
	// Maximum capacity for an Aurora DB cluster in `serverless` DB engine mode. The maximum capacity must be greater than or equal to the minimum capacity. Valid Aurora MySQL capacity values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `128`, `256`. Valid Aurora PostgreSQL capacity values are (`2`, `4`, `8`, `16`, `32`, `64`, `192`, and `384`). Defaults to `16`.
	MaxCapacity pulumi.Float64Input `pulumi:"maxCapacity"`
	// Minimum capacity for an Aurora DB cluster in `serverless` DB engine mode. The minimum capacity must be lesser than or equal to the maximum capacity. Valid Aurora MySQL capacity values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `128`, `256`. Valid Aurora PostgreSQL capacity values are (`2`, `4`, `8`, `16`, `32`, `64`, `192`, and `384`). Defaults to `1`.
	MinCapacity pulumi.Float64Input `pulumi:"minCapacity"`
}

func (ClusterServerlessv2ScalingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServerlessv2ScalingConfiguration)(nil)).Elem()
}

func (i ClusterServerlessv2ScalingConfigurationArgs) ToClusterServerlessv2ScalingConfigurationOutput() ClusterServerlessv2ScalingConfigurationOutput {
	return i.ToClusterServerlessv2ScalingConfigurationOutputWithContext(context.Background())
}

func (i ClusterServerlessv2ScalingConfigurationArgs) ToClusterServerlessv2ScalingConfigurationOutputWithContext(ctx context.Context) ClusterServerlessv2ScalingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServerlessv2ScalingConfigurationOutput)
}

func (i ClusterServerlessv2ScalingConfigurationArgs) ToClusterServerlessv2ScalingConfigurationPtrOutput() ClusterServerlessv2ScalingConfigurationPtrOutput {
	return i.ToClusterServerlessv2ScalingConfigurationPtrOutputWithContext(context.Background())
}

func (i ClusterServerlessv2ScalingConfigurationArgs) ToClusterServerlessv2ScalingConfigurationPtrOutputWithContext(ctx context.Context) ClusterServerlessv2ScalingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServerlessv2ScalingConfigurationOutput).ToClusterServerlessv2ScalingConfigurationPtrOutputWithContext(ctx)
}

// ClusterServerlessv2ScalingConfigurationPtrInput is an input type that accepts ClusterServerlessv2ScalingConfigurationArgs, ClusterServerlessv2ScalingConfigurationPtr and ClusterServerlessv2ScalingConfigurationPtrOutput values.
// You can construct a concrete instance of `ClusterServerlessv2ScalingConfigurationPtrInput` via:
//
//	        ClusterServerlessv2ScalingConfigurationArgs{...}
//
//	or:
//
//	        nil
type ClusterServerlessv2ScalingConfigurationPtrInput interface {
	pulumi.Input

	ToClusterServerlessv2ScalingConfigurationPtrOutput() ClusterServerlessv2ScalingConfigurationPtrOutput
	ToClusterServerlessv2ScalingConfigurationPtrOutputWithContext(context.Context) ClusterServerlessv2ScalingConfigurationPtrOutput
}

type clusterServerlessv2ScalingConfigurationPtrType ClusterServerlessv2ScalingConfigurationArgs

func ClusterServerlessv2ScalingConfigurationPtr(v *ClusterServerlessv2ScalingConfigurationArgs) ClusterServerlessv2ScalingConfigurationPtrInput {
	return (*clusterServerlessv2ScalingConfigurationPtrType)(v)
}

func (*clusterServerlessv2ScalingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServerlessv2ScalingConfiguration)(nil)).Elem()
}

func (i *clusterServerlessv2ScalingConfigurationPtrType) ToClusterServerlessv2ScalingConfigurationPtrOutput() ClusterServerlessv2ScalingConfigurationPtrOutput {
	return i.ToClusterServerlessv2ScalingConfigurationPtrOutputWithContext(context.Background())
}

func (i *clusterServerlessv2ScalingConfigurationPtrType) ToClusterServerlessv2ScalingConfigurationPtrOutputWithContext(ctx context.Context) ClusterServerlessv2ScalingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterServerlessv2ScalingConfigurationPtrOutput)
}

type ClusterServerlessv2ScalingConfigurationOutput struct{ *pulumi.OutputState }

func (ClusterServerlessv2ScalingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterServerlessv2ScalingConfiguration)(nil)).Elem()
}

func (o ClusterServerlessv2ScalingConfigurationOutput) ToClusterServerlessv2ScalingConfigurationOutput() ClusterServerlessv2ScalingConfigurationOutput {
	return o
}

func (o ClusterServerlessv2ScalingConfigurationOutput) ToClusterServerlessv2ScalingConfigurationOutputWithContext(ctx context.Context) ClusterServerlessv2ScalingConfigurationOutput {
	return o
}

func (o ClusterServerlessv2ScalingConfigurationOutput) ToClusterServerlessv2ScalingConfigurationPtrOutput() ClusterServerlessv2ScalingConfigurationPtrOutput {
	return o.ToClusterServerlessv2ScalingConfigurationPtrOutputWithContext(context.Background())
}

func (o ClusterServerlessv2ScalingConfigurationOutput) ToClusterServerlessv2ScalingConfigurationPtrOutputWithContext(ctx context.Context) ClusterServerlessv2ScalingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterServerlessv2ScalingConfiguration) *ClusterServerlessv2ScalingConfiguration {
		return &v
	}).(ClusterServerlessv2ScalingConfigurationPtrOutput)
}

// Maximum capacity for an Aurora DB cluster in `serverless` DB engine mode. The maximum capacity must be greater than or equal to the minimum capacity. Valid Aurora MySQL capacity values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `128`, `256`. Valid Aurora PostgreSQL capacity values are (`2`, `4`, `8`, `16`, `32`, `64`, `192`, and `384`). Defaults to `16`.
func (o ClusterServerlessv2ScalingConfigurationOutput) MaxCapacity() pulumi.Float64Output {
	return o.ApplyT(func(v ClusterServerlessv2ScalingConfiguration) float64 { return v.MaxCapacity }).(pulumi.Float64Output)
}

// Minimum capacity for an Aurora DB cluster in `serverless` DB engine mode. The minimum capacity must be lesser than or equal to the maximum capacity. Valid Aurora MySQL capacity values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `128`, `256`. Valid Aurora PostgreSQL capacity values are (`2`, `4`, `8`, `16`, `32`, `64`, `192`, and `384`). Defaults to `1`.
func (o ClusterServerlessv2ScalingConfigurationOutput) MinCapacity() pulumi.Float64Output {
	return o.ApplyT(func(v ClusterServerlessv2ScalingConfiguration) float64 { return v.MinCapacity }).(pulumi.Float64Output)
}

type ClusterServerlessv2ScalingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ClusterServerlessv2ScalingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterServerlessv2ScalingConfiguration)(nil)).Elem()
}

func (o ClusterServerlessv2ScalingConfigurationPtrOutput) ToClusterServerlessv2ScalingConfigurationPtrOutput() ClusterServerlessv2ScalingConfigurationPtrOutput {
	return o
}

func (o ClusterServerlessv2ScalingConfigurationPtrOutput) ToClusterServerlessv2ScalingConfigurationPtrOutputWithContext(ctx context.Context) ClusterServerlessv2ScalingConfigurationPtrOutput {
	return o
}

func (o ClusterServerlessv2ScalingConfigurationPtrOutput) Elem() ClusterServerlessv2ScalingConfigurationOutput {
	return o.ApplyT(func(v *ClusterServerlessv2ScalingConfiguration) ClusterServerlessv2ScalingConfiguration {
		if v != nil {
			return *v
		}
		var ret ClusterServerlessv2ScalingConfiguration
		return ret
	}).(ClusterServerlessv2ScalingConfigurationOutput)
}

// Maximum capacity for an Aurora DB cluster in `serverless` DB engine mode. The maximum capacity must be greater than or equal to the minimum capacity. Valid Aurora MySQL capacity values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `128`, `256`. Valid Aurora PostgreSQL capacity values are (`2`, `4`, `8`, `16`, `32`, `64`, `192`, and `384`). Defaults to `16`.
func (o ClusterServerlessv2ScalingConfigurationPtrOutput) MaxCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ClusterServerlessv2ScalingConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return &v.MaxCapacity
	}).(pulumi.Float64PtrOutput)
}

// Minimum capacity for an Aurora DB cluster in `serverless` DB engine mode. The minimum capacity must be lesser than or equal to the maximum capacity. Valid Aurora MySQL capacity values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `128`, `256`. Valid Aurora PostgreSQL capacity values are (`2`, `4`, `8`, `16`, `32`, `64`, `192`, and `384`). Defaults to `1`.
func (o ClusterServerlessv2ScalingConfigurationPtrOutput) MinCapacity() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *ClusterServerlessv2ScalingConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return &v.MinCapacity
	}).(pulumi.Float64PtrOutput)
}

type ExportTaskTimeouts struct {
	Create *string `pulumi:"create"`
	Delete *string `pulumi:"delete"`
}

// ExportTaskTimeoutsInput is an input type that accepts ExportTaskTimeoutsArgs and ExportTaskTimeoutsOutput values.
// You can construct a concrete instance of `ExportTaskTimeoutsInput` via:
//
//	ExportTaskTimeoutsArgs{...}
type ExportTaskTimeoutsInput interface {
	pulumi.Input

	ToExportTaskTimeoutsOutput() ExportTaskTimeoutsOutput
	ToExportTaskTimeoutsOutputWithContext(context.Context) ExportTaskTimeoutsOutput
}

type ExportTaskTimeoutsArgs struct {
	Create pulumi.StringPtrInput `pulumi:"create"`
	Delete pulumi.StringPtrInput `pulumi:"delete"`
}

func (ExportTaskTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportTaskTimeouts)(nil)).Elem()
}

func (i ExportTaskTimeoutsArgs) ToExportTaskTimeoutsOutput() ExportTaskTimeoutsOutput {
	return i.ToExportTaskTimeoutsOutputWithContext(context.Background())
}

func (i ExportTaskTimeoutsArgs) ToExportTaskTimeoutsOutputWithContext(ctx context.Context) ExportTaskTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportTaskTimeoutsOutput)
}

func (i ExportTaskTimeoutsArgs) ToExportTaskTimeoutsPtrOutput() ExportTaskTimeoutsPtrOutput {
	return i.ToExportTaskTimeoutsPtrOutputWithContext(context.Background())
}

func (i ExportTaskTimeoutsArgs) ToExportTaskTimeoutsPtrOutputWithContext(ctx context.Context) ExportTaskTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportTaskTimeoutsOutput).ToExportTaskTimeoutsPtrOutputWithContext(ctx)
}

// ExportTaskTimeoutsPtrInput is an input type that accepts ExportTaskTimeoutsArgs, ExportTaskTimeoutsPtr and ExportTaskTimeoutsPtrOutput values.
// You can construct a concrete instance of `ExportTaskTimeoutsPtrInput` via:
//
//	        ExportTaskTimeoutsArgs{...}
//
//	or:
//
//	        nil
type ExportTaskTimeoutsPtrInput interface {
	pulumi.Input

	ToExportTaskTimeoutsPtrOutput() ExportTaskTimeoutsPtrOutput
	ToExportTaskTimeoutsPtrOutputWithContext(context.Context) ExportTaskTimeoutsPtrOutput
}

type exportTaskTimeoutsPtrType ExportTaskTimeoutsArgs

func ExportTaskTimeoutsPtr(v *ExportTaskTimeoutsArgs) ExportTaskTimeoutsPtrInput {
	return (*exportTaskTimeoutsPtrType)(v)
}

func (*exportTaskTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExportTaskTimeouts)(nil)).Elem()
}

func (i *exportTaskTimeoutsPtrType) ToExportTaskTimeoutsPtrOutput() ExportTaskTimeoutsPtrOutput {
	return i.ToExportTaskTimeoutsPtrOutputWithContext(context.Background())
}

func (i *exportTaskTimeoutsPtrType) ToExportTaskTimeoutsPtrOutputWithContext(ctx context.Context) ExportTaskTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExportTaskTimeoutsPtrOutput)
}

type ExportTaskTimeoutsOutput struct{ *pulumi.OutputState }

func (ExportTaskTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExportTaskTimeouts)(nil)).Elem()
}

func (o ExportTaskTimeoutsOutput) ToExportTaskTimeoutsOutput() ExportTaskTimeoutsOutput {
	return o
}

func (o ExportTaskTimeoutsOutput) ToExportTaskTimeoutsOutputWithContext(ctx context.Context) ExportTaskTimeoutsOutput {
	return o
}

func (o ExportTaskTimeoutsOutput) ToExportTaskTimeoutsPtrOutput() ExportTaskTimeoutsPtrOutput {
	return o.ToExportTaskTimeoutsPtrOutputWithContext(context.Background())
}

func (o ExportTaskTimeoutsOutput) ToExportTaskTimeoutsPtrOutputWithContext(ctx context.Context) ExportTaskTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExportTaskTimeouts) *ExportTaskTimeouts {
		return &v
	}).(ExportTaskTimeoutsPtrOutput)
}

func (o ExportTaskTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExportTaskTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

func (o ExportTaskTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExportTaskTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

type ExportTaskTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (ExportTaskTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExportTaskTimeouts)(nil)).Elem()
}

func (o ExportTaskTimeoutsPtrOutput) ToExportTaskTimeoutsPtrOutput() ExportTaskTimeoutsPtrOutput {
	return o
}

func (o ExportTaskTimeoutsPtrOutput) ToExportTaskTimeoutsPtrOutputWithContext(ctx context.Context) ExportTaskTimeoutsPtrOutput {
	return o
}

func (o ExportTaskTimeoutsPtrOutput) Elem() ExportTaskTimeoutsOutput {
	return o.ApplyT(func(v *ExportTaskTimeouts) ExportTaskTimeouts {
		if v != nil {
			return *v
		}
		var ret ExportTaskTimeouts
		return ret
	}).(ExportTaskTimeoutsOutput)
}

func (o ExportTaskTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExportTaskTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

func (o ExportTaskTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExportTaskTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

type GlobalClusterGlobalClusterMember struct {
	// Amazon Resource Name (ARN) of member DB Cluster
	DbClusterArn *string `pulumi:"dbClusterArn"`
	// Whether the member is the primary DB Cluster
	IsWriter *bool `pulumi:"isWriter"`
}

// GlobalClusterGlobalClusterMemberInput is an input type that accepts GlobalClusterGlobalClusterMemberArgs and GlobalClusterGlobalClusterMemberOutput values.
// You can construct a concrete instance of `GlobalClusterGlobalClusterMemberInput` via:
//
//	GlobalClusterGlobalClusterMemberArgs{...}
type GlobalClusterGlobalClusterMemberInput interface {
	pulumi.Input

	ToGlobalClusterGlobalClusterMemberOutput() GlobalClusterGlobalClusterMemberOutput
	ToGlobalClusterGlobalClusterMemberOutputWithContext(context.Context) GlobalClusterGlobalClusterMemberOutput
}

type GlobalClusterGlobalClusterMemberArgs struct {
	// Amazon Resource Name (ARN) of member DB Cluster
	DbClusterArn pulumi.StringPtrInput `pulumi:"dbClusterArn"`
	// Whether the member is the primary DB Cluster
	IsWriter pulumi.BoolPtrInput `pulumi:"isWriter"`
}

func (GlobalClusterGlobalClusterMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClusterGlobalClusterMember)(nil)).Elem()
}

func (i GlobalClusterGlobalClusterMemberArgs) ToGlobalClusterGlobalClusterMemberOutput() GlobalClusterGlobalClusterMemberOutput {
	return i.ToGlobalClusterGlobalClusterMemberOutputWithContext(context.Background())
}

func (i GlobalClusterGlobalClusterMemberArgs) ToGlobalClusterGlobalClusterMemberOutputWithContext(ctx context.Context) GlobalClusterGlobalClusterMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClusterGlobalClusterMemberOutput)
}

// GlobalClusterGlobalClusterMemberArrayInput is an input type that accepts GlobalClusterGlobalClusterMemberArray and GlobalClusterGlobalClusterMemberArrayOutput values.
// You can construct a concrete instance of `GlobalClusterGlobalClusterMemberArrayInput` via:
//
//	GlobalClusterGlobalClusterMemberArray{ GlobalClusterGlobalClusterMemberArgs{...} }
type GlobalClusterGlobalClusterMemberArrayInput interface {
	pulumi.Input

	ToGlobalClusterGlobalClusterMemberArrayOutput() GlobalClusterGlobalClusterMemberArrayOutput
	ToGlobalClusterGlobalClusterMemberArrayOutputWithContext(context.Context) GlobalClusterGlobalClusterMemberArrayOutput
}

type GlobalClusterGlobalClusterMemberArray []GlobalClusterGlobalClusterMemberInput

func (GlobalClusterGlobalClusterMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalClusterGlobalClusterMember)(nil)).Elem()
}

func (i GlobalClusterGlobalClusterMemberArray) ToGlobalClusterGlobalClusterMemberArrayOutput() GlobalClusterGlobalClusterMemberArrayOutput {
	return i.ToGlobalClusterGlobalClusterMemberArrayOutputWithContext(context.Background())
}

func (i GlobalClusterGlobalClusterMemberArray) ToGlobalClusterGlobalClusterMemberArrayOutputWithContext(ctx context.Context) GlobalClusterGlobalClusterMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GlobalClusterGlobalClusterMemberArrayOutput)
}

type GlobalClusterGlobalClusterMemberOutput struct{ *pulumi.OutputState }

func (GlobalClusterGlobalClusterMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GlobalClusterGlobalClusterMember)(nil)).Elem()
}

func (o GlobalClusterGlobalClusterMemberOutput) ToGlobalClusterGlobalClusterMemberOutput() GlobalClusterGlobalClusterMemberOutput {
	return o
}

func (o GlobalClusterGlobalClusterMemberOutput) ToGlobalClusterGlobalClusterMemberOutputWithContext(ctx context.Context) GlobalClusterGlobalClusterMemberOutput {
	return o
}

// Amazon Resource Name (ARN) of member DB Cluster
func (o GlobalClusterGlobalClusterMemberOutput) DbClusterArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GlobalClusterGlobalClusterMember) *string { return v.DbClusterArn }).(pulumi.StringPtrOutput)
}

// Whether the member is the primary DB Cluster
func (o GlobalClusterGlobalClusterMemberOutput) IsWriter() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GlobalClusterGlobalClusterMember) *bool { return v.IsWriter }).(pulumi.BoolPtrOutput)
}

type GlobalClusterGlobalClusterMemberArrayOutput struct{ *pulumi.OutputState }

func (GlobalClusterGlobalClusterMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GlobalClusterGlobalClusterMember)(nil)).Elem()
}

func (o GlobalClusterGlobalClusterMemberArrayOutput) ToGlobalClusterGlobalClusterMemberArrayOutput() GlobalClusterGlobalClusterMemberArrayOutput {
	return o
}

func (o GlobalClusterGlobalClusterMemberArrayOutput) ToGlobalClusterGlobalClusterMemberArrayOutputWithContext(ctx context.Context) GlobalClusterGlobalClusterMemberArrayOutput {
	return o
}

func (o GlobalClusterGlobalClusterMemberArrayOutput) Index(i pulumi.IntInput) GlobalClusterGlobalClusterMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GlobalClusterGlobalClusterMember {
		return vs[0].([]GlobalClusterGlobalClusterMember)[vs[1].(int)]
	}).(GlobalClusterGlobalClusterMemberOutput)
}

type InstanceBlueGreenUpdate struct {
	// Enables low-downtime updates when `true`.
	// Default is `false`.
	//
	// [instance-replication]:
	// https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Replication.html
	// [instance-maintenance]:
	// https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html
	// [blue-green]:
	// https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html
	Enabled *bool `pulumi:"enabled"`
}

// InstanceBlueGreenUpdateInput is an input type that accepts InstanceBlueGreenUpdateArgs and InstanceBlueGreenUpdateOutput values.
// You can construct a concrete instance of `InstanceBlueGreenUpdateInput` via:
//
//	InstanceBlueGreenUpdateArgs{...}
type InstanceBlueGreenUpdateInput interface {
	pulumi.Input

	ToInstanceBlueGreenUpdateOutput() InstanceBlueGreenUpdateOutput
	ToInstanceBlueGreenUpdateOutputWithContext(context.Context) InstanceBlueGreenUpdateOutput
}

type InstanceBlueGreenUpdateArgs struct {
	// Enables low-downtime updates when `true`.
	// Default is `false`.
	//
	// [instance-replication]:
	// https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Replication.html
	// [instance-maintenance]:
	// https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html
	// [blue-green]:
	// https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (InstanceBlueGreenUpdateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceBlueGreenUpdate)(nil)).Elem()
}

func (i InstanceBlueGreenUpdateArgs) ToInstanceBlueGreenUpdateOutput() InstanceBlueGreenUpdateOutput {
	return i.ToInstanceBlueGreenUpdateOutputWithContext(context.Background())
}

func (i InstanceBlueGreenUpdateArgs) ToInstanceBlueGreenUpdateOutputWithContext(ctx context.Context) InstanceBlueGreenUpdateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBlueGreenUpdateOutput)
}

func (i InstanceBlueGreenUpdateArgs) ToInstanceBlueGreenUpdatePtrOutput() InstanceBlueGreenUpdatePtrOutput {
	return i.ToInstanceBlueGreenUpdatePtrOutputWithContext(context.Background())
}

func (i InstanceBlueGreenUpdateArgs) ToInstanceBlueGreenUpdatePtrOutputWithContext(ctx context.Context) InstanceBlueGreenUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBlueGreenUpdateOutput).ToInstanceBlueGreenUpdatePtrOutputWithContext(ctx)
}

// InstanceBlueGreenUpdatePtrInput is an input type that accepts InstanceBlueGreenUpdateArgs, InstanceBlueGreenUpdatePtr and InstanceBlueGreenUpdatePtrOutput values.
// You can construct a concrete instance of `InstanceBlueGreenUpdatePtrInput` via:
//
//	        InstanceBlueGreenUpdateArgs{...}
//
//	or:
//
//	        nil
type InstanceBlueGreenUpdatePtrInput interface {
	pulumi.Input

	ToInstanceBlueGreenUpdatePtrOutput() InstanceBlueGreenUpdatePtrOutput
	ToInstanceBlueGreenUpdatePtrOutputWithContext(context.Context) InstanceBlueGreenUpdatePtrOutput
}

type instanceBlueGreenUpdatePtrType InstanceBlueGreenUpdateArgs

func InstanceBlueGreenUpdatePtr(v *InstanceBlueGreenUpdateArgs) InstanceBlueGreenUpdatePtrInput {
	return (*instanceBlueGreenUpdatePtrType)(v)
}

func (*instanceBlueGreenUpdatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceBlueGreenUpdate)(nil)).Elem()
}

func (i *instanceBlueGreenUpdatePtrType) ToInstanceBlueGreenUpdatePtrOutput() InstanceBlueGreenUpdatePtrOutput {
	return i.ToInstanceBlueGreenUpdatePtrOutputWithContext(context.Background())
}

func (i *instanceBlueGreenUpdatePtrType) ToInstanceBlueGreenUpdatePtrOutputWithContext(ctx context.Context) InstanceBlueGreenUpdatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBlueGreenUpdatePtrOutput)
}

type InstanceBlueGreenUpdateOutput struct{ *pulumi.OutputState }

func (InstanceBlueGreenUpdateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceBlueGreenUpdate)(nil)).Elem()
}

func (o InstanceBlueGreenUpdateOutput) ToInstanceBlueGreenUpdateOutput() InstanceBlueGreenUpdateOutput {
	return o
}

func (o InstanceBlueGreenUpdateOutput) ToInstanceBlueGreenUpdateOutputWithContext(ctx context.Context) InstanceBlueGreenUpdateOutput {
	return o
}

func (o InstanceBlueGreenUpdateOutput) ToInstanceBlueGreenUpdatePtrOutput() InstanceBlueGreenUpdatePtrOutput {
	return o.ToInstanceBlueGreenUpdatePtrOutputWithContext(context.Background())
}

func (o InstanceBlueGreenUpdateOutput) ToInstanceBlueGreenUpdatePtrOutputWithContext(ctx context.Context) InstanceBlueGreenUpdatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceBlueGreenUpdate) *InstanceBlueGreenUpdate {
		return &v
	}).(InstanceBlueGreenUpdatePtrOutput)
}

// Enables low-downtime updates when `true`.
// Default is `false`.
//
// [instance-replication]:
// https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Replication.html
// [instance-maintenance]:
// https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html
// [blue-green]:
// https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html
func (o InstanceBlueGreenUpdateOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceBlueGreenUpdate) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type InstanceBlueGreenUpdatePtrOutput struct{ *pulumi.OutputState }

func (InstanceBlueGreenUpdatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceBlueGreenUpdate)(nil)).Elem()
}

func (o InstanceBlueGreenUpdatePtrOutput) ToInstanceBlueGreenUpdatePtrOutput() InstanceBlueGreenUpdatePtrOutput {
	return o
}

func (o InstanceBlueGreenUpdatePtrOutput) ToInstanceBlueGreenUpdatePtrOutputWithContext(ctx context.Context) InstanceBlueGreenUpdatePtrOutput {
	return o
}

func (o InstanceBlueGreenUpdatePtrOutput) Elem() InstanceBlueGreenUpdateOutput {
	return o.ApplyT(func(v *InstanceBlueGreenUpdate) InstanceBlueGreenUpdate {
		if v != nil {
			return *v
		}
		var ret InstanceBlueGreenUpdate
		return ret
	}).(InstanceBlueGreenUpdateOutput)
}

// Enables low-downtime updates when `true`.
// Default is `false`.
//
// [instance-replication]:
// https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Replication.html
// [instance-maintenance]:
// https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html
// [blue-green]:
// https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html
func (o InstanceBlueGreenUpdatePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceBlueGreenUpdate) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type InstanceListenerEndpoint struct {
	// Specifies the DNS address of the DB instance.
	Address *string `pulumi:"address"`
	// Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
	HostedZoneId *string `pulumi:"hostedZoneId"`
	// The port on which the DB accepts connections.
	Port *int `pulumi:"port"`
}

// InstanceListenerEndpointInput is an input type that accepts InstanceListenerEndpointArgs and InstanceListenerEndpointOutput values.
// You can construct a concrete instance of `InstanceListenerEndpointInput` via:
//
//	InstanceListenerEndpointArgs{...}
type InstanceListenerEndpointInput interface {
	pulumi.Input

	ToInstanceListenerEndpointOutput() InstanceListenerEndpointOutput
	ToInstanceListenerEndpointOutputWithContext(context.Context) InstanceListenerEndpointOutput
}

type InstanceListenerEndpointArgs struct {
	// Specifies the DNS address of the DB instance.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
	HostedZoneId pulumi.StringPtrInput `pulumi:"hostedZoneId"`
	// The port on which the DB accepts connections.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (InstanceListenerEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceListenerEndpoint)(nil)).Elem()
}

func (i InstanceListenerEndpointArgs) ToInstanceListenerEndpointOutput() InstanceListenerEndpointOutput {
	return i.ToInstanceListenerEndpointOutputWithContext(context.Background())
}

func (i InstanceListenerEndpointArgs) ToInstanceListenerEndpointOutputWithContext(ctx context.Context) InstanceListenerEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceListenerEndpointOutput)
}

// InstanceListenerEndpointArrayInput is an input type that accepts InstanceListenerEndpointArray and InstanceListenerEndpointArrayOutput values.
// You can construct a concrete instance of `InstanceListenerEndpointArrayInput` via:
//
//	InstanceListenerEndpointArray{ InstanceListenerEndpointArgs{...} }
type InstanceListenerEndpointArrayInput interface {
	pulumi.Input

	ToInstanceListenerEndpointArrayOutput() InstanceListenerEndpointArrayOutput
	ToInstanceListenerEndpointArrayOutputWithContext(context.Context) InstanceListenerEndpointArrayOutput
}

type InstanceListenerEndpointArray []InstanceListenerEndpointInput

func (InstanceListenerEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceListenerEndpoint)(nil)).Elem()
}

func (i InstanceListenerEndpointArray) ToInstanceListenerEndpointArrayOutput() InstanceListenerEndpointArrayOutput {
	return i.ToInstanceListenerEndpointArrayOutputWithContext(context.Background())
}

func (i InstanceListenerEndpointArray) ToInstanceListenerEndpointArrayOutputWithContext(ctx context.Context) InstanceListenerEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceListenerEndpointArrayOutput)
}

type InstanceListenerEndpointOutput struct{ *pulumi.OutputState }

func (InstanceListenerEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceListenerEndpoint)(nil)).Elem()
}

func (o InstanceListenerEndpointOutput) ToInstanceListenerEndpointOutput() InstanceListenerEndpointOutput {
	return o
}

func (o InstanceListenerEndpointOutput) ToInstanceListenerEndpointOutputWithContext(ctx context.Context) InstanceListenerEndpointOutput {
	return o
}

// Specifies the DNS address of the DB instance.
func (o InstanceListenerEndpointOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceListenerEndpoint) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// Specifies the ID that Amazon Route 53 assigns when you create a hosted zone.
func (o InstanceListenerEndpointOutput) HostedZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceListenerEndpoint) *string { return v.HostedZoneId }).(pulumi.StringPtrOutput)
}

// The port on which the DB accepts connections.
func (o InstanceListenerEndpointOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceListenerEndpoint) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type InstanceListenerEndpointArrayOutput struct{ *pulumi.OutputState }

func (InstanceListenerEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceListenerEndpoint)(nil)).Elem()
}

func (o InstanceListenerEndpointArrayOutput) ToInstanceListenerEndpointArrayOutput() InstanceListenerEndpointArrayOutput {
	return o
}

func (o InstanceListenerEndpointArrayOutput) ToInstanceListenerEndpointArrayOutputWithContext(ctx context.Context) InstanceListenerEndpointArrayOutput {
	return o
}

func (o InstanceListenerEndpointArrayOutput) Index(i pulumi.IntInput) InstanceListenerEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceListenerEndpoint {
		return vs[0].([]InstanceListenerEndpoint)[vs[1].(int)]
	}).(InstanceListenerEndpointOutput)
}

type InstanceMasterUserSecret struct {
	// The ARN for the KMS encryption key. If creating an
	// encrypted replica, set this to the destination KMS ARN.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// The Amazon Resource Name (ARN) of the secret.
	SecretArn *string `pulumi:"secretArn"`
	// The status of the secret. Valid Values: `creating` | `active` | `rotating` | `impaired`.
	SecretStatus *string `pulumi:"secretStatus"`
}

// InstanceMasterUserSecretInput is an input type that accepts InstanceMasterUserSecretArgs and InstanceMasterUserSecretOutput values.
// You can construct a concrete instance of `InstanceMasterUserSecretInput` via:
//
//	InstanceMasterUserSecretArgs{...}
type InstanceMasterUserSecretInput interface {
	pulumi.Input

	ToInstanceMasterUserSecretOutput() InstanceMasterUserSecretOutput
	ToInstanceMasterUserSecretOutputWithContext(context.Context) InstanceMasterUserSecretOutput
}

type InstanceMasterUserSecretArgs struct {
	// The ARN for the KMS encryption key. If creating an
	// encrypted replica, set this to the destination KMS ARN.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// The Amazon Resource Name (ARN) of the secret.
	SecretArn pulumi.StringPtrInput `pulumi:"secretArn"`
	// The status of the secret. Valid Values: `creating` | `active` | `rotating` | `impaired`.
	SecretStatus pulumi.StringPtrInput `pulumi:"secretStatus"`
}

func (InstanceMasterUserSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMasterUserSecret)(nil)).Elem()
}

func (i InstanceMasterUserSecretArgs) ToInstanceMasterUserSecretOutput() InstanceMasterUserSecretOutput {
	return i.ToInstanceMasterUserSecretOutputWithContext(context.Background())
}

func (i InstanceMasterUserSecretArgs) ToInstanceMasterUserSecretOutputWithContext(ctx context.Context) InstanceMasterUserSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMasterUserSecretOutput)
}

// InstanceMasterUserSecretArrayInput is an input type that accepts InstanceMasterUserSecretArray and InstanceMasterUserSecretArrayOutput values.
// You can construct a concrete instance of `InstanceMasterUserSecretArrayInput` via:
//
//	InstanceMasterUserSecretArray{ InstanceMasterUserSecretArgs{...} }
type InstanceMasterUserSecretArrayInput interface {
	pulumi.Input

	ToInstanceMasterUserSecretArrayOutput() InstanceMasterUserSecretArrayOutput
	ToInstanceMasterUserSecretArrayOutputWithContext(context.Context) InstanceMasterUserSecretArrayOutput
}

type InstanceMasterUserSecretArray []InstanceMasterUserSecretInput

func (InstanceMasterUserSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceMasterUserSecret)(nil)).Elem()
}

func (i InstanceMasterUserSecretArray) ToInstanceMasterUserSecretArrayOutput() InstanceMasterUserSecretArrayOutput {
	return i.ToInstanceMasterUserSecretArrayOutputWithContext(context.Background())
}

func (i InstanceMasterUserSecretArray) ToInstanceMasterUserSecretArrayOutputWithContext(ctx context.Context) InstanceMasterUserSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMasterUserSecretArrayOutput)
}

type InstanceMasterUserSecretOutput struct{ *pulumi.OutputState }

func (InstanceMasterUserSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMasterUserSecret)(nil)).Elem()
}

func (o InstanceMasterUserSecretOutput) ToInstanceMasterUserSecretOutput() InstanceMasterUserSecretOutput {
	return o
}

func (o InstanceMasterUserSecretOutput) ToInstanceMasterUserSecretOutputWithContext(ctx context.Context) InstanceMasterUserSecretOutput {
	return o
}

// The ARN for the KMS encryption key. If creating an
// encrypted replica, set this to the destination KMS ARN.
func (o InstanceMasterUserSecretOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMasterUserSecret) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the secret.
func (o InstanceMasterUserSecretOutput) SecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMasterUserSecret) *string { return v.SecretArn }).(pulumi.StringPtrOutput)
}

// The status of the secret. Valid Values: `creating` | `active` | `rotating` | `impaired`.
func (o InstanceMasterUserSecretOutput) SecretStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceMasterUserSecret) *string { return v.SecretStatus }).(pulumi.StringPtrOutput)
}

type InstanceMasterUserSecretArrayOutput struct{ *pulumi.OutputState }

func (InstanceMasterUserSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceMasterUserSecret)(nil)).Elem()
}

func (o InstanceMasterUserSecretArrayOutput) ToInstanceMasterUserSecretArrayOutput() InstanceMasterUserSecretArrayOutput {
	return o
}

func (o InstanceMasterUserSecretArrayOutput) ToInstanceMasterUserSecretArrayOutputWithContext(ctx context.Context) InstanceMasterUserSecretArrayOutput {
	return o
}

func (o InstanceMasterUserSecretArrayOutput) Index(i pulumi.IntInput) InstanceMasterUserSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceMasterUserSecret {
		return vs[0].([]InstanceMasterUserSecret)[vs[1].(int)]
	}).(InstanceMasterUserSecretOutput)
}

type InstanceRestoreToPointInTime struct {
	// The date and time to restore from. Value must be a time in Universal Coordinated Time (UTC) format and must be before the latest restorable time for the DB instance. Cannot be specified with `useLatestRestorableTime`.
	RestoreTime *string `pulumi:"restoreTime"`
	// The ARN of the automated backup from which to restore. Required if `sourceDbInstanceIdentifier` or `sourceDbiResourceId` is not specified.
	SourceDbInstanceAutomatedBackupsArn *string `pulumi:"sourceDbInstanceAutomatedBackupsArn"`
	// The identifier of the source DB instance from which to restore. Must match the identifier of an existing DB instance. Required if `sourceDbInstanceAutomatedBackupsArn` or `sourceDbiResourceId` is not specified.
	SourceDbInstanceIdentifier *string `pulumi:"sourceDbInstanceIdentifier"`
	// The resource ID of the source DB instance from which to restore. Required if `sourceDbInstanceIdentifier` or `sourceDbInstanceAutomatedBackupsArn` is not specified.
	SourceDbiResourceId *string `pulumi:"sourceDbiResourceId"`
	// A boolean value that indicates whether the DB instance is restored from the latest backup time. Defaults to `false`. Cannot be specified with `restoreTime`.
	UseLatestRestorableTime *bool `pulumi:"useLatestRestorableTime"`
}

// InstanceRestoreToPointInTimeInput is an input type that accepts InstanceRestoreToPointInTimeArgs and InstanceRestoreToPointInTimeOutput values.
// You can construct a concrete instance of `InstanceRestoreToPointInTimeInput` via:
//
//	InstanceRestoreToPointInTimeArgs{...}
type InstanceRestoreToPointInTimeInput interface {
	pulumi.Input

	ToInstanceRestoreToPointInTimeOutput() InstanceRestoreToPointInTimeOutput
	ToInstanceRestoreToPointInTimeOutputWithContext(context.Context) InstanceRestoreToPointInTimeOutput
}

type InstanceRestoreToPointInTimeArgs struct {
	// The date and time to restore from. Value must be a time in Universal Coordinated Time (UTC) format and must be before the latest restorable time for the DB instance. Cannot be specified with `useLatestRestorableTime`.
	RestoreTime pulumi.StringPtrInput `pulumi:"restoreTime"`
	// The ARN of the automated backup from which to restore. Required if `sourceDbInstanceIdentifier` or `sourceDbiResourceId` is not specified.
	SourceDbInstanceAutomatedBackupsArn pulumi.StringPtrInput `pulumi:"sourceDbInstanceAutomatedBackupsArn"`
	// The identifier of the source DB instance from which to restore. Must match the identifier of an existing DB instance. Required if `sourceDbInstanceAutomatedBackupsArn` or `sourceDbiResourceId` is not specified.
	SourceDbInstanceIdentifier pulumi.StringPtrInput `pulumi:"sourceDbInstanceIdentifier"`
	// The resource ID of the source DB instance from which to restore. Required if `sourceDbInstanceIdentifier` or `sourceDbInstanceAutomatedBackupsArn` is not specified.
	SourceDbiResourceId pulumi.StringPtrInput `pulumi:"sourceDbiResourceId"`
	// A boolean value that indicates whether the DB instance is restored from the latest backup time. Defaults to `false`. Cannot be specified with `restoreTime`.
	UseLatestRestorableTime pulumi.BoolPtrInput `pulumi:"useLatestRestorableTime"`
}

func (InstanceRestoreToPointInTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceRestoreToPointInTime)(nil)).Elem()
}

func (i InstanceRestoreToPointInTimeArgs) ToInstanceRestoreToPointInTimeOutput() InstanceRestoreToPointInTimeOutput {
	return i.ToInstanceRestoreToPointInTimeOutputWithContext(context.Background())
}

func (i InstanceRestoreToPointInTimeArgs) ToInstanceRestoreToPointInTimeOutputWithContext(ctx context.Context) InstanceRestoreToPointInTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRestoreToPointInTimeOutput)
}

func (i InstanceRestoreToPointInTimeArgs) ToInstanceRestoreToPointInTimePtrOutput() InstanceRestoreToPointInTimePtrOutput {
	return i.ToInstanceRestoreToPointInTimePtrOutputWithContext(context.Background())
}

func (i InstanceRestoreToPointInTimeArgs) ToInstanceRestoreToPointInTimePtrOutputWithContext(ctx context.Context) InstanceRestoreToPointInTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRestoreToPointInTimeOutput).ToInstanceRestoreToPointInTimePtrOutputWithContext(ctx)
}

// InstanceRestoreToPointInTimePtrInput is an input type that accepts InstanceRestoreToPointInTimeArgs, InstanceRestoreToPointInTimePtr and InstanceRestoreToPointInTimePtrOutput values.
// You can construct a concrete instance of `InstanceRestoreToPointInTimePtrInput` via:
//
//	        InstanceRestoreToPointInTimeArgs{...}
//
//	or:
//
//	        nil
type InstanceRestoreToPointInTimePtrInput interface {
	pulumi.Input

	ToInstanceRestoreToPointInTimePtrOutput() InstanceRestoreToPointInTimePtrOutput
	ToInstanceRestoreToPointInTimePtrOutputWithContext(context.Context) InstanceRestoreToPointInTimePtrOutput
}

type instanceRestoreToPointInTimePtrType InstanceRestoreToPointInTimeArgs

func InstanceRestoreToPointInTimePtr(v *InstanceRestoreToPointInTimeArgs) InstanceRestoreToPointInTimePtrInput {
	return (*instanceRestoreToPointInTimePtrType)(v)
}

func (*instanceRestoreToPointInTimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceRestoreToPointInTime)(nil)).Elem()
}

func (i *instanceRestoreToPointInTimePtrType) ToInstanceRestoreToPointInTimePtrOutput() InstanceRestoreToPointInTimePtrOutput {
	return i.ToInstanceRestoreToPointInTimePtrOutputWithContext(context.Background())
}

func (i *instanceRestoreToPointInTimePtrType) ToInstanceRestoreToPointInTimePtrOutputWithContext(ctx context.Context) InstanceRestoreToPointInTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceRestoreToPointInTimePtrOutput)
}

type InstanceRestoreToPointInTimeOutput struct{ *pulumi.OutputState }

func (InstanceRestoreToPointInTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceRestoreToPointInTime)(nil)).Elem()
}

func (o InstanceRestoreToPointInTimeOutput) ToInstanceRestoreToPointInTimeOutput() InstanceRestoreToPointInTimeOutput {
	return o
}

func (o InstanceRestoreToPointInTimeOutput) ToInstanceRestoreToPointInTimeOutputWithContext(ctx context.Context) InstanceRestoreToPointInTimeOutput {
	return o
}

func (o InstanceRestoreToPointInTimeOutput) ToInstanceRestoreToPointInTimePtrOutput() InstanceRestoreToPointInTimePtrOutput {
	return o.ToInstanceRestoreToPointInTimePtrOutputWithContext(context.Background())
}

func (o InstanceRestoreToPointInTimeOutput) ToInstanceRestoreToPointInTimePtrOutputWithContext(ctx context.Context) InstanceRestoreToPointInTimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceRestoreToPointInTime) *InstanceRestoreToPointInTime {
		return &v
	}).(InstanceRestoreToPointInTimePtrOutput)
}

// The date and time to restore from. Value must be a time in Universal Coordinated Time (UTC) format and must be before the latest restorable time for the DB instance. Cannot be specified with `useLatestRestorableTime`.
func (o InstanceRestoreToPointInTimeOutput) RestoreTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceRestoreToPointInTime) *string { return v.RestoreTime }).(pulumi.StringPtrOutput)
}

// The ARN of the automated backup from which to restore. Required if `sourceDbInstanceIdentifier` or `sourceDbiResourceId` is not specified.
func (o InstanceRestoreToPointInTimeOutput) SourceDbInstanceAutomatedBackupsArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceRestoreToPointInTime) *string { return v.SourceDbInstanceAutomatedBackupsArn }).(pulumi.StringPtrOutput)
}

// The identifier of the source DB instance from which to restore. Must match the identifier of an existing DB instance. Required if `sourceDbInstanceAutomatedBackupsArn` or `sourceDbiResourceId` is not specified.
func (o InstanceRestoreToPointInTimeOutput) SourceDbInstanceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceRestoreToPointInTime) *string { return v.SourceDbInstanceIdentifier }).(pulumi.StringPtrOutput)
}

// The resource ID of the source DB instance from which to restore. Required if `sourceDbInstanceIdentifier` or `sourceDbInstanceAutomatedBackupsArn` is not specified.
func (o InstanceRestoreToPointInTimeOutput) SourceDbiResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceRestoreToPointInTime) *string { return v.SourceDbiResourceId }).(pulumi.StringPtrOutput)
}

// A boolean value that indicates whether the DB instance is restored from the latest backup time. Defaults to `false`. Cannot be specified with `restoreTime`.
func (o InstanceRestoreToPointInTimeOutput) UseLatestRestorableTime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceRestoreToPointInTime) *bool { return v.UseLatestRestorableTime }).(pulumi.BoolPtrOutput)
}

type InstanceRestoreToPointInTimePtrOutput struct{ *pulumi.OutputState }

func (InstanceRestoreToPointInTimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceRestoreToPointInTime)(nil)).Elem()
}

func (o InstanceRestoreToPointInTimePtrOutput) ToInstanceRestoreToPointInTimePtrOutput() InstanceRestoreToPointInTimePtrOutput {
	return o
}

func (o InstanceRestoreToPointInTimePtrOutput) ToInstanceRestoreToPointInTimePtrOutputWithContext(ctx context.Context) InstanceRestoreToPointInTimePtrOutput {
	return o
}

func (o InstanceRestoreToPointInTimePtrOutput) Elem() InstanceRestoreToPointInTimeOutput {
	return o.ApplyT(func(v *InstanceRestoreToPointInTime) InstanceRestoreToPointInTime {
		if v != nil {
			return *v
		}
		var ret InstanceRestoreToPointInTime
		return ret
	}).(InstanceRestoreToPointInTimeOutput)
}

// The date and time to restore from. Value must be a time in Universal Coordinated Time (UTC) format and must be before the latest restorable time for the DB instance. Cannot be specified with `useLatestRestorableTime`.
func (o InstanceRestoreToPointInTimePtrOutput) RestoreTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceRestoreToPointInTime) *string {
		if v == nil {
			return nil
		}
		return v.RestoreTime
	}).(pulumi.StringPtrOutput)
}

// The ARN of the automated backup from which to restore. Required if `sourceDbInstanceIdentifier` or `sourceDbiResourceId` is not specified.
func (o InstanceRestoreToPointInTimePtrOutput) SourceDbInstanceAutomatedBackupsArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceRestoreToPointInTime) *string {
		if v == nil {
			return nil
		}
		return v.SourceDbInstanceAutomatedBackupsArn
	}).(pulumi.StringPtrOutput)
}

// The identifier of the source DB instance from which to restore. Must match the identifier of an existing DB instance. Required if `sourceDbInstanceAutomatedBackupsArn` or `sourceDbiResourceId` is not specified.
func (o InstanceRestoreToPointInTimePtrOutput) SourceDbInstanceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceRestoreToPointInTime) *string {
		if v == nil {
			return nil
		}
		return v.SourceDbInstanceIdentifier
	}).(pulumi.StringPtrOutput)
}

// The resource ID of the source DB instance from which to restore. Required if `sourceDbInstanceIdentifier` or `sourceDbInstanceAutomatedBackupsArn` is not specified.
func (o InstanceRestoreToPointInTimePtrOutput) SourceDbiResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceRestoreToPointInTime) *string {
		if v == nil {
			return nil
		}
		return v.SourceDbiResourceId
	}).(pulumi.StringPtrOutput)
}

// A boolean value that indicates whether the DB instance is restored from the latest backup time. Defaults to `false`. Cannot be specified with `restoreTime`.
func (o InstanceRestoreToPointInTimePtrOutput) UseLatestRestorableTime() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *InstanceRestoreToPointInTime) *bool {
		if v == nil {
			return nil
		}
		return v.UseLatestRestorableTime
	}).(pulumi.BoolPtrOutput)
}

type InstanceS3Import struct {
	// The bucket name where your backup is stored
	BucketName string `pulumi:"bucketName"`
	// Can be blank, but is the path to your backup
	BucketPrefix *string `pulumi:"bucketPrefix"`
	// Role applied to load the data.
	IngestionRole string `pulumi:"ingestionRole"`
	// Source engine for the backup
	SourceEngine string `pulumi:"sourceEngine"`
	// Version of the source engine used to make the backup
	//
	// This will not recreate the resource if the S3 object changes in some way.  It's only used to initialize the database.
	SourceEngineVersion string `pulumi:"sourceEngineVersion"`
}

// InstanceS3ImportInput is an input type that accepts InstanceS3ImportArgs and InstanceS3ImportOutput values.
// You can construct a concrete instance of `InstanceS3ImportInput` via:
//
//	InstanceS3ImportArgs{...}
type InstanceS3ImportInput interface {
	pulumi.Input

	ToInstanceS3ImportOutput() InstanceS3ImportOutput
	ToInstanceS3ImportOutputWithContext(context.Context) InstanceS3ImportOutput
}

type InstanceS3ImportArgs struct {
	// The bucket name where your backup is stored
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// Can be blank, but is the path to your backup
	BucketPrefix pulumi.StringPtrInput `pulumi:"bucketPrefix"`
	// Role applied to load the data.
	IngestionRole pulumi.StringInput `pulumi:"ingestionRole"`
	// Source engine for the backup
	SourceEngine pulumi.StringInput `pulumi:"sourceEngine"`
	// Version of the source engine used to make the backup
	//
	// This will not recreate the resource if the S3 object changes in some way.  It's only used to initialize the database.
	SourceEngineVersion pulumi.StringInput `pulumi:"sourceEngineVersion"`
}

func (InstanceS3ImportArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceS3Import)(nil)).Elem()
}

func (i InstanceS3ImportArgs) ToInstanceS3ImportOutput() InstanceS3ImportOutput {
	return i.ToInstanceS3ImportOutputWithContext(context.Background())
}

func (i InstanceS3ImportArgs) ToInstanceS3ImportOutputWithContext(ctx context.Context) InstanceS3ImportOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceS3ImportOutput)
}

func (i InstanceS3ImportArgs) ToInstanceS3ImportPtrOutput() InstanceS3ImportPtrOutput {
	return i.ToInstanceS3ImportPtrOutputWithContext(context.Background())
}

func (i InstanceS3ImportArgs) ToInstanceS3ImportPtrOutputWithContext(ctx context.Context) InstanceS3ImportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceS3ImportOutput).ToInstanceS3ImportPtrOutputWithContext(ctx)
}

// InstanceS3ImportPtrInput is an input type that accepts InstanceS3ImportArgs, InstanceS3ImportPtr and InstanceS3ImportPtrOutput values.
// You can construct a concrete instance of `InstanceS3ImportPtrInput` via:
//
//	        InstanceS3ImportArgs{...}
//
//	or:
//
//	        nil
type InstanceS3ImportPtrInput interface {
	pulumi.Input

	ToInstanceS3ImportPtrOutput() InstanceS3ImportPtrOutput
	ToInstanceS3ImportPtrOutputWithContext(context.Context) InstanceS3ImportPtrOutput
}

type instanceS3ImportPtrType InstanceS3ImportArgs

func InstanceS3ImportPtr(v *InstanceS3ImportArgs) InstanceS3ImportPtrInput {
	return (*instanceS3ImportPtrType)(v)
}

func (*instanceS3ImportPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceS3Import)(nil)).Elem()
}

func (i *instanceS3ImportPtrType) ToInstanceS3ImportPtrOutput() InstanceS3ImportPtrOutput {
	return i.ToInstanceS3ImportPtrOutputWithContext(context.Background())
}

func (i *instanceS3ImportPtrType) ToInstanceS3ImportPtrOutputWithContext(ctx context.Context) InstanceS3ImportPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceS3ImportPtrOutput)
}

type InstanceS3ImportOutput struct{ *pulumi.OutputState }

func (InstanceS3ImportOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceS3Import)(nil)).Elem()
}

func (o InstanceS3ImportOutput) ToInstanceS3ImportOutput() InstanceS3ImportOutput {
	return o
}

func (o InstanceS3ImportOutput) ToInstanceS3ImportOutputWithContext(ctx context.Context) InstanceS3ImportOutput {
	return o
}

func (o InstanceS3ImportOutput) ToInstanceS3ImportPtrOutput() InstanceS3ImportPtrOutput {
	return o.ToInstanceS3ImportPtrOutputWithContext(context.Background())
}

func (o InstanceS3ImportOutput) ToInstanceS3ImportPtrOutputWithContext(ctx context.Context) InstanceS3ImportPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceS3Import) *InstanceS3Import {
		return &v
	}).(InstanceS3ImportPtrOutput)
}

// The bucket name where your backup is stored
func (o InstanceS3ImportOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceS3Import) string { return v.BucketName }).(pulumi.StringOutput)
}

// Can be blank, but is the path to your backup
func (o InstanceS3ImportOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceS3Import) *string { return v.BucketPrefix }).(pulumi.StringPtrOutput)
}

// Role applied to load the data.
func (o InstanceS3ImportOutput) IngestionRole() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceS3Import) string { return v.IngestionRole }).(pulumi.StringOutput)
}

// Source engine for the backup
func (o InstanceS3ImportOutput) SourceEngine() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceS3Import) string { return v.SourceEngine }).(pulumi.StringOutput)
}

// Version of the source engine used to make the backup
//
// This will not recreate the resource if the S3 object changes in some way.  It's only used to initialize the database.
func (o InstanceS3ImportOutput) SourceEngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceS3Import) string { return v.SourceEngineVersion }).(pulumi.StringOutput)
}

type InstanceS3ImportPtrOutput struct{ *pulumi.OutputState }

func (InstanceS3ImportPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceS3Import)(nil)).Elem()
}

func (o InstanceS3ImportPtrOutput) ToInstanceS3ImportPtrOutput() InstanceS3ImportPtrOutput {
	return o
}

func (o InstanceS3ImportPtrOutput) ToInstanceS3ImportPtrOutputWithContext(ctx context.Context) InstanceS3ImportPtrOutput {
	return o
}

func (o InstanceS3ImportPtrOutput) Elem() InstanceS3ImportOutput {
	return o.ApplyT(func(v *InstanceS3Import) InstanceS3Import {
		if v != nil {
			return *v
		}
		var ret InstanceS3Import
		return ret
	}).(InstanceS3ImportOutput)
}

// The bucket name where your backup is stored
func (o InstanceS3ImportPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceS3Import) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Can be blank, but is the path to your backup
func (o InstanceS3ImportPtrOutput) BucketPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceS3Import) *string {
		if v == nil {
			return nil
		}
		return v.BucketPrefix
	}).(pulumi.StringPtrOutput)
}

// Role applied to load the data.
func (o InstanceS3ImportPtrOutput) IngestionRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceS3Import) *string {
		if v == nil {
			return nil
		}
		return &v.IngestionRole
	}).(pulumi.StringPtrOutput)
}

// Source engine for the backup
func (o InstanceS3ImportPtrOutput) SourceEngine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceS3Import) *string {
		if v == nil {
			return nil
		}
		return &v.SourceEngine
	}).(pulumi.StringPtrOutput)
}

// Version of the source engine used to make the backup
//
// This will not recreate the resource if the S3 object changes in some way.  It's only used to initialize the database.
func (o InstanceS3ImportPtrOutput) SourceEngineVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceS3Import) *string {
		if v == nil {
			return nil
		}
		return &v.SourceEngineVersion
	}).(pulumi.StringPtrOutput)
}

type OptionGroupOption struct {
	// List of DB Security Groups for which the option is enabled.
	DbSecurityGroupMemberships []string `pulumi:"dbSecurityGroupMemberships"`
	// Name of the option (e.g., MEMCACHED).
	OptionName string `pulumi:"optionName"`
	// The option settings to apply. See `optionSettings` Block below for more details.
	OptionSettings []OptionGroupOptionOptionSetting `pulumi:"optionSettings"`
	// Port number when connecting to the option (e.g., 11211). Leaving out or removing `port` from your configuration does not remove or clear a port from the option in AWS. AWS may assign a default port. Not including `port` in your configuration means that the AWS provider will ignore a previously set value, a value set by AWS, and any port changes.
	Port *int `pulumi:"port"`
	// Version of the option (e.g., 13.1.0.0). Leaving out or removing `version` from your configuration does not remove or clear a version from the option in AWS. AWS may assign a default version. Not including `version` in your configuration means that the AWS provider will ignore a previously set value, a value set by AWS, and any version changes.
	Version *string `pulumi:"version"`
	// List of VPC Security Groups for which the option is enabled.
	VpcSecurityGroupMemberships []string `pulumi:"vpcSecurityGroupMemberships"`
}

// OptionGroupOptionInput is an input type that accepts OptionGroupOptionArgs and OptionGroupOptionOutput values.
// You can construct a concrete instance of `OptionGroupOptionInput` via:
//
//	OptionGroupOptionArgs{...}
type OptionGroupOptionInput interface {
	pulumi.Input

	ToOptionGroupOptionOutput() OptionGroupOptionOutput
	ToOptionGroupOptionOutputWithContext(context.Context) OptionGroupOptionOutput
}

type OptionGroupOptionArgs struct {
	// List of DB Security Groups for which the option is enabled.
	DbSecurityGroupMemberships pulumi.StringArrayInput `pulumi:"dbSecurityGroupMemberships"`
	// Name of the option (e.g., MEMCACHED).
	OptionName pulumi.StringInput `pulumi:"optionName"`
	// The option settings to apply. See `optionSettings` Block below for more details.
	OptionSettings OptionGroupOptionOptionSettingArrayInput `pulumi:"optionSettings"`
	// Port number when connecting to the option (e.g., 11211). Leaving out or removing `port` from your configuration does not remove or clear a port from the option in AWS. AWS may assign a default port. Not including `port` in your configuration means that the AWS provider will ignore a previously set value, a value set by AWS, and any port changes.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// Version of the option (e.g., 13.1.0.0). Leaving out or removing `version` from your configuration does not remove or clear a version from the option in AWS. AWS may assign a default version. Not including `version` in your configuration means that the AWS provider will ignore a previously set value, a value set by AWS, and any version changes.
	Version pulumi.StringPtrInput `pulumi:"version"`
	// List of VPC Security Groups for which the option is enabled.
	VpcSecurityGroupMemberships pulumi.StringArrayInput `pulumi:"vpcSecurityGroupMemberships"`
}

func (OptionGroupOptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OptionGroupOption)(nil)).Elem()
}

func (i OptionGroupOptionArgs) ToOptionGroupOptionOutput() OptionGroupOptionOutput {
	return i.ToOptionGroupOptionOutputWithContext(context.Background())
}

func (i OptionGroupOptionArgs) ToOptionGroupOptionOutputWithContext(ctx context.Context) OptionGroupOptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptionGroupOptionOutput)
}

// OptionGroupOptionArrayInput is an input type that accepts OptionGroupOptionArray and OptionGroupOptionArrayOutput values.
// You can construct a concrete instance of `OptionGroupOptionArrayInput` via:
//
//	OptionGroupOptionArray{ OptionGroupOptionArgs{...} }
type OptionGroupOptionArrayInput interface {
	pulumi.Input

	ToOptionGroupOptionArrayOutput() OptionGroupOptionArrayOutput
	ToOptionGroupOptionArrayOutputWithContext(context.Context) OptionGroupOptionArrayOutput
}

type OptionGroupOptionArray []OptionGroupOptionInput

func (OptionGroupOptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OptionGroupOption)(nil)).Elem()
}

func (i OptionGroupOptionArray) ToOptionGroupOptionArrayOutput() OptionGroupOptionArrayOutput {
	return i.ToOptionGroupOptionArrayOutputWithContext(context.Background())
}

func (i OptionGroupOptionArray) ToOptionGroupOptionArrayOutputWithContext(ctx context.Context) OptionGroupOptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptionGroupOptionArrayOutput)
}

type OptionGroupOptionOutput struct{ *pulumi.OutputState }

func (OptionGroupOptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OptionGroupOption)(nil)).Elem()
}

func (o OptionGroupOptionOutput) ToOptionGroupOptionOutput() OptionGroupOptionOutput {
	return o
}

func (o OptionGroupOptionOutput) ToOptionGroupOptionOutputWithContext(ctx context.Context) OptionGroupOptionOutput {
	return o
}

// List of DB Security Groups for which the option is enabled.
func (o OptionGroupOptionOutput) DbSecurityGroupMemberships() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OptionGroupOption) []string { return v.DbSecurityGroupMemberships }).(pulumi.StringArrayOutput)
}

// Name of the option (e.g., MEMCACHED).
func (o OptionGroupOptionOutput) OptionName() pulumi.StringOutput {
	return o.ApplyT(func(v OptionGroupOption) string { return v.OptionName }).(pulumi.StringOutput)
}

// The option settings to apply. See `optionSettings` Block below for more details.
func (o OptionGroupOptionOutput) OptionSettings() OptionGroupOptionOptionSettingArrayOutput {
	return o.ApplyT(func(v OptionGroupOption) []OptionGroupOptionOptionSetting { return v.OptionSettings }).(OptionGroupOptionOptionSettingArrayOutput)
}

// Port number when connecting to the option (e.g., 11211). Leaving out or removing `port` from your configuration does not remove or clear a port from the option in AWS. AWS may assign a default port. Not including `port` in your configuration means that the AWS provider will ignore a previously set value, a value set by AWS, and any port changes.
func (o OptionGroupOptionOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OptionGroupOption) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// Version of the option (e.g., 13.1.0.0). Leaving out or removing `version` from your configuration does not remove or clear a version from the option in AWS. AWS may assign a default version. Not including `version` in your configuration means that the AWS provider will ignore a previously set value, a value set by AWS, and any version changes.
func (o OptionGroupOptionOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OptionGroupOption) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// List of VPC Security Groups for which the option is enabled.
func (o OptionGroupOptionOutput) VpcSecurityGroupMemberships() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OptionGroupOption) []string { return v.VpcSecurityGroupMemberships }).(pulumi.StringArrayOutput)
}

type OptionGroupOptionArrayOutput struct{ *pulumi.OutputState }

func (OptionGroupOptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OptionGroupOption)(nil)).Elem()
}

func (o OptionGroupOptionArrayOutput) ToOptionGroupOptionArrayOutput() OptionGroupOptionArrayOutput {
	return o
}

func (o OptionGroupOptionArrayOutput) ToOptionGroupOptionArrayOutputWithContext(ctx context.Context) OptionGroupOptionArrayOutput {
	return o
}

func (o OptionGroupOptionArrayOutput) Index(i pulumi.IntInput) OptionGroupOptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OptionGroupOption {
		return vs[0].([]OptionGroupOption)[vs[1].(int)]
	}).(OptionGroupOptionOutput)
}

type OptionGroupOptionOptionSetting struct {
	// Name of the setting.
	Name string `pulumi:"name"`
	// Value of the setting.
	Value string `pulumi:"value"`
}

// OptionGroupOptionOptionSettingInput is an input type that accepts OptionGroupOptionOptionSettingArgs and OptionGroupOptionOptionSettingOutput values.
// You can construct a concrete instance of `OptionGroupOptionOptionSettingInput` via:
//
//	OptionGroupOptionOptionSettingArgs{...}
type OptionGroupOptionOptionSettingInput interface {
	pulumi.Input

	ToOptionGroupOptionOptionSettingOutput() OptionGroupOptionOptionSettingOutput
	ToOptionGroupOptionOptionSettingOutputWithContext(context.Context) OptionGroupOptionOptionSettingOutput
}

type OptionGroupOptionOptionSettingArgs struct {
	// Name of the setting.
	Name pulumi.StringInput `pulumi:"name"`
	// Value of the setting.
	Value pulumi.StringInput `pulumi:"value"`
}

func (OptionGroupOptionOptionSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OptionGroupOptionOptionSetting)(nil)).Elem()
}

func (i OptionGroupOptionOptionSettingArgs) ToOptionGroupOptionOptionSettingOutput() OptionGroupOptionOptionSettingOutput {
	return i.ToOptionGroupOptionOptionSettingOutputWithContext(context.Background())
}

func (i OptionGroupOptionOptionSettingArgs) ToOptionGroupOptionOptionSettingOutputWithContext(ctx context.Context) OptionGroupOptionOptionSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptionGroupOptionOptionSettingOutput)
}

// OptionGroupOptionOptionSettingArrayInput is an input type that accepts OptionGroupOptionOptionSettingArray and OptionGroupOptionOptionSettingArrayOutput values.
// You can construct a concrete instance of `OptionGroupOptionOptionSettingArrayInput` via:
//
//	OptionGroupOptionOptionSettingArray{ OptionGroupOptionOptionSettingArgs{...} }
type OptionGroupOptionOptionSettingArrayInput interface {
	pulumi.Input

	ToOptionGroupOptionOptionSettingArrayOutput() OptionGroupOptionOptionSettingArrayOutput
	ToOptionGroupOptionOptionSettingArrayOutputWithContext(context.Context) OptionGroupOptionOptionSettingArrayOutput
}

type OptionGroupOptionOptionSettingArray []OptionGroupOptionOptionSettingInput

func (OptionGroupOptionOptionSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OptionGroupOptionOptionSetting)(nil)).Elem()
}

func (i OptionGroupOptionOptionSettingArray) ToOptionGroupOptionOptionSettingArrayOutput() OptionGroupOptionOptionSettingArrayOutput {
	return i.ToOptionGroupOptionOptionSettingArrayOutputWithContext(context.Background())
}

func (i OptionGroupOptionOptionSettingArray) ToOptionGroupOptionOptionSettingArrayOutputWithContext(ctx context.Context) OptionGroupOptionOptionSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OptionGroupOptionOptionSettingArrayOutput)
}

type OptionGroupOptionOptionSettingOutput struct{ *pulumi.OutputState }

func (OptionGroupOptionOptionSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OptionGroupOptionOptionSetting)(nil)).Elem()
}

func (o OptionGroupOptionOptionSettingOutput) ToOptionGroupOptionOptionSettingOutput() OptionGroupOptionOptionSettingOutput {
	return o
}

func (o OptionGroupOptionOptionSettingOutput) ToOptionGroupOptionOptionSettingOutputWithContext(ctx context.Context) OptionGroupOptionOptionSettingOutput {
	return o
}

// Name of the setting.
func (o OptionGroupOptionOptionSettingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OptionGroupOptionOptionSetting) string { return v.Name }).(pulumi.StringOutput)
}

// Value of the setting.
func (o OptionGroupOptionOptionSettingOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v OptionGroupOptionOptionSetting) string { return v.Value }).(pulumi.StringOutput)
}

type OptionGroupOptionOptionSettingArrayOutput struct{ *pulumi.OutputState }

func (OptionGroupOptionOptionSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OptionGroupOptionOptionSetting)(nil)).Elem()
}

func (o OptionGroupOptionOptionSettingArrayOutput) ToOptionGroupOptionOptionSettingArrayOutput() OptionGroupOptionOptionSettingArrayOutput {
	return o
}

func (o OptionGroupOptionOptionSettingArrayOutput) ToOptionGroupOptionOptionSettingArrayOutputWithContext(ctx context.Context) OptionGroupOptionOptionSettingArrayOutput {
	return o
}

func (o OptionGroupOptionOptionSettingArrayOutput) Index(i pulumi.IntInput) OptionGroupOptionOptionSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OptionGroupOptionOptionSetting {
		return vs[0].([]OptionGroupOptionOptionSetting)[vs[1].(int)]
	}).(OptionGroupOptionOptionSettingOutput)
}

type ParameterGroupParameter struct {
	// "immediate" (default), or "pending-reboot". Some
	// engines can't apply some parameters without a reboot, and you will need to
	// specify "pending-reboot" here.
	ApplyMethod *string `pulumi:"applyMethod"`
	// The name of the DB parameter.
	Name string `pulumi:"name"`
	// The value of the DB parameter.
	Value string `pulumi:"value"`
}

// ParameterGroupParameterInput is an input type that accepts ParameterGroupParameterArgs and ParameterGroupParameterOutput values.
// You can construct a concrete instance of `ParameterGroupParameterInput` via:
//
//	ParameterGroupParameterArgs{...}
type ParameterGroupParameterInput interface {
	pulumi.Input

	ToParameterGroupParameterOutput() ParameterGroupParameterOutput
	ToParameterGroupParameterOutputWithContext(context.Context) ParameterGroupParameterOutput
}

type ParameterGroupParameterArgs struct {
	// "immediate" (default), or "pending-reboot". Some
	// engines can't apply some parameters without a reboot, and you will need to
	// specify "pending-reboot" here.
	ApplyMethod pulumi.StringPtrInput `pulumi:"applyMethod"`
	// The name of the DB parameter.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the DB parameter.
	Value pulumi.StringInput `pulumi:"value"`
}

func (ParameterGroupParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterGroupParameter)(nil)).Elem()
}

func (i ParameterGroupParameterArgs) ToParameterGroupParameterOutput() ParameterGroupParameterOutput {
	return i.ToParameterGroupParameterOutputWithContext(context.Background())
}

func (i ParameterGroupParameterArgs) ToParameterGroupParameterOutputWithContext(ctx context.Context) ParameterGroupParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterGroupParameterOutput)
}

// ParameterGroupParameterArrayInput is an input type that accepts ParameterGroupParameterArray and ParameterGroupParameterArrayOutput values.
// You can construct a concrete instance of `ParameterGroupParameterArrayInput` via:
//
//	ParameterGroupParameterArray{ ParameterGroupParameterArgs{...} }
type ParameterGroupParameterArrayInput interface {
	pulumi.Input

	ToParameterGroupParameterArrayOutput() ParameterGroupParameterArrayOutput
	ToParameterGroupParameterArrayOutputWithContext(context.Context) ParameterGroupParameterArrayOutput
}

type ParameterGroupParameterArray []ParameterGroupParameterInput

func (ParameterGroupParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterGroupParameter)(nil)).Elem()
}

func (i ParameterGroupParameterArray) ToParameterGroupParameterArrayOutput() ParameterGroupParameterArrayOutput {
	return i.ToParameterGroupParameterArrayOutputWithContext(context.Background())
}

func (i ParameterGroupParameterArray) ToParameterGroupParameterArrayOutputWithContext(ctx context.Context) ParameterGroupParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ParameterGroupParameterArrayOutput)
}

type ParameterGroupParameterOutput struct{ *pulumi.OutputState }

func (ParameterGroupParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ParameterGroupParameter)(nil)).Elem()
}

func (o ParameterGroupParameterOutput) ToParameterGroupParameterOutput() ParameterGroupParameterOutput {
	return o
}

func (o ParameterGroupParameterOutput) ToParameterGroupParameterOutputWithContext(ctx context.Context) ParameterGroupParameterOutput {
	return o
}

// "immediate" (default), or "pending-reboot". Some
// engines can't apply some parameters without a reboot, and you will need to
// specify "pending-reboot" here.
func (o ParameterGroupParameterOutput) ApplyMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ParameterGroupParameter) *string { return v.ApplyMethod }).(pulumi.StringPtrOutput)
}

// The name of the DB parameter.
func (o ParameterGroupParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterGroupParameter) string { return v.Name }).(pulumi.StringOutput)
}

// The value of the DB parameter.
func (o ParameterGroupParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ParameterGroupParameter) string { return v.Value }).(pulumi.StringOutput)
}

type ParameterGroupParameterArrayOutput struct{ *pulumi.OutputState }

func (ParameterGroupParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ParameterGroupParameter)(nil)).Elem()
}

func (o ParameterGroupParameterArrayOutput) ToParameterGroupParameterArrayOutput() ParameterGroupParameterArrayOutput {
	return o
}

func (o ParameterGroupParameterArrayOutput) ToParameterGroupParameterArrayOutputWithContext(ctx context.Context) ParameterGroupParameterArrayOutput {
	return o
}

func (o ParameterGroupParameterArrayOutput) Index(i pulumi.IntInput) ParameterGroupParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ParameterGroupParameter {
		return vs[0].([]ParameterGroupParameter)[vs[1].(int)]
	}).(ParameterGroupParameterOutput)
}

type ProxyAuth struct {
	// The type of authentication that the proxy uses for connections from the proxy to the underlying database. One of `SECRETS`.
	AuthScheme *string `pulumi:"authScheme"`
	// The type of authentication the proxy uses for connections from clients. Valid values are `MYSQL_NATIVE_PASSWORD`, `POSTGRES_SCRAM_SHA_256`, `POSTGRES_MD5`, and `SQL_SERVER_AUTHENTICATION`.
	ClientPasswordAuthType *string `pulumi:"clientPasswordAuthType"`
	// A user-specified description about the authentication used by a proxy to log in as a specific database user.
	Description *string `pulumi:"description"`
	// Whether to require or disallow AWS Identity and Access Management (IAM) authentication for connections to the proxy. One of `DISABLED`, `REQUIRED`.
	IamAuth *string `pulumi:"iamAuth"`
	// The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager.
	SecretArn *string `pulumi:"secretArn"`
	// The name of the database user to which the proxy connects.
	Username *string `pulumi:"username"`
}

// ProxyAuthInput is an input type that accepts ProxyAuthArgs and ProxyAuthOutput values.
// You can construct a concrete instance of `ProxyAuthInput` via:
//
//	ProxyAuthArgs{...}
type ProxyAuthInput interface {
	pulumi.Input

	ToProxyAuthOutput() ProxyAuthOutput
	ToProxyAuthOutputWithContext(context.Context) ProxyAuthOutput
}

type ProxyAuthArgs struct {
	// The type of authentication that the proxy uses for connections from the proxy to the underlying database. One of `SECRETS`.
	AuthScheme pulumi.StringPtrInput `pulumi:"authScheme"`
	// The type of authentication the proxy uses for connections from clients. Valid values are `MYSQL_NATIVE_PASSWORD`, `POSTGRES_SCRAM_SHA_256`, `POSTGRES_MD5`, and `SQL_SERVER_AUTHENTICATION`.
	ClientPasswordAuthType pulumi.StringPtrInput `pulumi:"clientPasswordAuthType"`
	// A user-specified description about the authentication used by a proxy to log in as a specific database user.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Whether to require or disallow AWS Identity and Access Management (IAM) authentication for connections to the proxy. One of `DISABLED`, `REQUIRED`.
	IamAuth pulumi.StringPtrInput `pulumi:"iamAuth"`
	// The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager.
	SecretArn pulumi.StringPtrInput `pulumi:"secretArn"`
	// The name of the database user to which the proxy connects.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ProxyAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyAuth)(nil)).Elem()
}

func (i ProxyAuthArgs) ToProxyAuthOutput() ProxyAuthOutput {
	return i.ToProxyAuthOutputWithContext(context.Background())
}

func (i ProxyAuthArgs) ToProxyAuthOutputWithContext(ctx context.Context) ProxyAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyAuthOutput)
}

// ProxyAuthArrayInput is an input type that accepts ProxyAuthArray and ProxyAuthArrayOutput values.
// You can construct a concrete instance of `ProxyAuthArrayInput` via:
//
//	ProxyAuthArray{ ProxyAuthArgs{...} }
type ProxyAuthArrayInput interface {
	pulumi.Input

	ToProxyAuthArrayOutput() ProxyAuthArrayOutput
	ToProxyAuthArrayOutputWithContext(context.Context) ProxyAuthArrayOutput
}

type ProxyAuthArray []ProxyAuthInput

func (ProxyAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyAuth)(nil)).Elem()
}

func (i ProxyAuthArray) ToProxyAuthArrayOutput() ProxyAuthArrayOutput {
	return i.ToProxyAuthArrayOutputWithContext(context.Background())
}

func (i ProxyAuthArray) ToProxyAuthArrayOutputWithContext(ctx context.Context) ProxyAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyAuthArrayOutput)
}

type ProxyAuthOutput struct{ *pulumi.OutputState }

func (ProxyAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyAuth)(nil)).Elem()
}

func (o ProxyAuthOutput) ToProxyAuthOutput() ProxyAuthOutput {
	return o
}

func (o ProxyAuthOutput) ToProxyAuthOutputWithContext(ctx context.Context) ProxyAuthOutput {
	return o
}

// The type of authentication that the proxy uses for connections from the proxy to the underlying database. One of `SECRETS`.
func (o ProxyAuthOutput) AuthScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyAuth) *string { return v.AuthScheme }).(pulumi.StringPtrOutput)
}

// The type of authentication the proxy uses for connections from clients. Valid values are `MYSQL_NATIVE_PASSWORD`, `POSTGRES_SCRAM_SHA_256`, `POSTGRES_MD5`, and `SQL_SERVER_AUTHENTICATION`.
func (o ProxyAuthOutput) ClientPasswordAuthType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyAuth) *string { return v.ClientPasswordAuthType }).(pulumi.StringPtrOutput)
}

// A user-specified description about the authentication used by a proxy to log in as a specific database user.
func (o ProxyAuthOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyAuth) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether to require or disallow AWS Identity and Access Management (IAM) authentication for connections to the proxy. One of `DISABLED`, `REQUIRED`.
func (o ProxyAuthOutput) IamAuth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyAuth) *string { return v.IamAuth }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) representing the secret that the proxy uses to authenticate to the RDS DB instance or Aurora DB cluster. These secrets are stored within Amazon Secrets Manager.
func (o ProxyAuthOutput) SecretArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyAuth) *string { return v.SecretArn }).(pulumi.StringPtrOutput)
}

// The name of the database user to which the proxy connects.
func (o ProxyAuthOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyAuth) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ProxyAuthArrayOutput struct{ *pulumi.OutputState }

func (ProxyAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyAuth)(nil)).Elem()
}

func (o ProxyAuthArrayOutput) ToProxyAuthArrayOutput() ProxyAuthArrayOutput {
	return o
}

func (o ProxyAuthArrayOutput) ToProxyAuthArrayOutputWithContext(ctx context.Context) ProxyAuthArrayOutput {
	return o
}

func (o ProxyAuthArrayOutput) Index(i pulumi.IntInput) ProxyAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxyAuth {
		return vs[0].([]ProxyAuth)[vs[1].(int)]
	}).(ProxyAuthOutput)
}

type ProxyDefaultTargetGroupConnectionPoolConfig struct {
	// The number of seconds for a proxy to wait for a connection to become available in the connection pool. Only applies when the proxy has opened its maximum number of connections and all connections are busy with client sessions.
	ConnectionBorrowTimeout *int `pulumi:"connectionBorrowTimeout"`
	// One or more SQL statements for the proxy to run when opening each new database connection. Typically used with `SET` statements to make sure that each connection has identical settings such as time zone and character set. This setting is empty by default. For multiple statements, use semicolons as the separator. You can also include multiple variables in a single `SET` statement, such as `SET x=1, y=2`.
	InitQuery *string `pulumi:"initQuery"`
	// The maximum size of the connection pool for each target in a target group. For Aurora MySQL, it is expressed as a percentage of the maxConnections setting for the RDS DB instance or Aurora DB cluster used by the target group.
	MaxConnectionsPercent *int `pulumi:"maxConnectionsPercent"`
	// Controls how actively the proxy closes idle database connections in the connection pool. A high value enables the proxy to leave a high percentage of idle connections open. A low value causes the proxy to close idle client connections and return the underlying database connections to the connection pool. For Aurora MySQL, it is expressed as a percentage of the maxConnections setting for the RDS DB instance or Aurora DB cluster used by the target group.
	MaxIdleConnectionsPercent *int `pulumi:"maxIdleConnectionsPercent"`
	// Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection. Including an item in the list exempts that class of SQL operations from the pinning behavior. Currently, the only allowed value is `EXCLUDE_VARIABLE_SETS`.
	SessionPinningFilters []string `pulumi:"sessionPinningFilters"`
}

// ProxyDefaultTargetGroupConnectionPoolConfigInput is an input type that accepts ProxyDefaultTargetGroupConnectionPoolConfigArgs and ProxyDefaultTargetGroupConnectionPoolConfigOutput values.
// You can construct a concrete instance of `ProxyDefaultTargetGroupConnectionPoolConfigInput` via:
//
//	ProxyDefaultTargetGroupConnectionPoolConfigArgs{...}
type ProxyDefaultTargetGroupConnectionPoolConfigInput interface {
	pulumi.Input

	ToProxyDefaultTargetGroupConnectionPoolConfigOutput() ProxyDefaultTargetGroupConnectionPoolConfigOutput
	ToProxyDefaultTargetGroupConnectionPoolConfigOutputWithContext(context.Context) ProxyDefaultTargetGroupConnectionPoolConfigOutput
}

type ProxyDefaultTargetGroupConnectionPoolConfigArgs struct {
	// The number of seconds for a proxy to wait for a connection to become available in the connection pool. Only applies when the proxy has opened its maximum number of connections and all connections are busy with client sessions.
	ConnectionBorrowTimeout pulumi.IntPtrInput `pulumi:"connectionBorrowTimeout"`
	// One or more SQL statements for the proxy to run when opening each new database connection. Typically used with `SET` statements to make sure that each connection has identical settings such as time zone and character set. This setting is empty by default. For multiple statements, use semicolons as the separator. You can also include multiple variables in a single `SET` statement, such as `SET x=1, y=2`.
	InitQuery pulumi.StringPtrInput `pulumi:"initQuery"`
	// The maximum size of the connection pool for each target in a target group. For Aurora MySQL, it is expressed as a percentage of the maxConnections setting for the RDS DB instance or Aurora DB cluster used by the target group.
	MaxConnectionsPercent pulumi.IntPtrInput `pulumi:"maxConnectionsPercent"`
	// Controls how actively the proxy closes idle database connections in the connection pool. A high value enables the proxy to leave a high percentage of idle connections open. A low value causes the proxy to close idle client connections and return the underlying database connections to the connection pool. For Aurora MySQL, it is expressed as a percentage of the maxConnections setting for the RDS DB instance or Aurora DB cluster used by the target group.
	MaxIdleConnectionsPercent pulumi.IntPtrInput `pulumi:"maxIdleConnectionsPercent"`
	// Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection. Including an item in the list exempts that class of SQL operations from the pinning behavior. Currently, the only allowed value is `EXCLUDE_VARIABLE_SETS`.
	SessionPinningFilters pulumi.StringArrayInput `pulumi:"sessionPinningFilters"`
}

func (ProxyDefaultTargetGroupConnectionPoolConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyDefaultTargetGroupConnectionPoolConfig)(nil)).Elem()
}

func (i ProxyDefaultTargetGroupConnectionPoolConfigArgs) ToProxyDefaultTargetGroupConnectionPoolConfigOutput() ProxyDefaultTargetGroupConnectionPoolConfigOutput {
	return i.ToProxyDefaultTargetGroupConnectionPoolConfigOutputWithContext(context.Background())
}

func (i ProxyDefaultTargetGroupConnectionPoolConfigArgs) ToProxyDefaultTargetGroupConnectionPoolConfigOutputWithContext(ctx context.Context) ProxyDefaultTargetGroupConnectionPoolConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyDefaultTargetGroupConnectionPoolConfigOutput)
}

func (i ProxyDefaultTargetGroupConnectionPoolConfigArgs) ToProxyDefaultTargetGroupConnectionPoolConfigPtrOutput() ProxyDefaultTargetGroupConnectionPoolConfigPtrOutput {
	return i.ToProxyDefaultTargetGroupConnectionPoolConfigPtrOutputWithContext(context.Background())
}

func (i ProxyDefaultTargetGroupConnectionPoolConfigArgs) ToProxyDefaultTargetGroupConnectionPoolConfigPtrOutputWithContext(ctx context.Context) ProxyDefaultTargetGroupConnectionPoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyDefaultTargetGroupConnectionPoolConfigOutput).ToProxyDefaultTargetGroupConnectionPoolConfigPtrOutputWithContext(ctx)
}

// ProxyDefaultTargetGroupConnectionPoolConfigPtrInput is an input type that accepts ProxyDefaultTargetGroupConnectionPoolConfigArgs, ProxyDefaultTargetGroupConnectionPoolConfigPtr and ProxyDefaultTargetGroupConnectionPoolConfigPtrOutput values.
// You can construct a concrete instance of `ProxyDefaultTargetGroupConnectionPoolConfigPtrInput` via:
//
//	        ProxyDefaultTargetGroupConnectionPoolConfigArgs{...}
//
//	or:
//
//	        nil
type ProxyDefaultTargetGroupConnectionPoolConfigPtrInput interface {
	pulumi.Input

	ToProxyDefaultTargetGroupConnectionPoolConfigPtrOutput() ProxyDefaultTargetGroupConnectionPoolConfigPtrOutput
	ToProxyDefaultTargetGroupConnectionPoolConfigPtrOutputWithContext(context.Context) ProxyDefaultTargetGroupConnectionPoolConfigPtrOutput
}

type proxyDefaultTargetGroupConnectionPoolConfigPtrType ProxyDefaultTargetGroupConnectionPoolConfigArgs

func ProxyDefaultTargetGroupConnectionPoolConfigPtr(v *ProxyDefaultTargetGroupConnectionPoolConfigArgs) ProxyDefaultTargetGroupConnectionPoolConfigPtrInput {
	return (*proxyDefaultTargetGroupConnectionPoolConfigPtrType)(v)
}

func (*proxyDefaultTargetGroupConnectionPoolConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyDefaultTargetGroupConnectionPoolConfig)(nil)).Elem()
}

func (i *proxyDefaultTargetGroupConnectionPoolConfigPtrType) ToProxyDefaultTargetGroupConnectionPoolConfigPtrOutput() ProxyDefaultTargetGroupConnectionPoolConfigPtrOutput {
	return i.ToProxyDefaultTargetGroupConnectionPoolConfigPtrOutputWithContext(context.Background())
}

func (i *proxyDefaultTargetGroupConnectionPoolConfigPtrType) ToProxyDefaultTargetGroupConnectionPoolConfigPtrOutputWithContext(ctx context.Context) ProxyDefaultTargetGroupConnectionPoolConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyDefaultTargetGroupConnectionPoolConfigPtrOutput)
}

type ProxyDefaultTargetGroupConnectionPoolConfigOutput struct{ *pulumi.OutputState }

func (ProxyDefaultTargetGroupConnectionPoolConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyDefaultTargetGroupConnectionPoolConfig)(nil)).Elem()
}

func (o ProxyDefaultTargetGroupConnectionPoolConfigOutput) ToProxyDefaultTargetGroupConnectionPoolConfigOutput() ProxyDefaultTargetGroupConnectionPoolConfigOutput {
	return o
}

func (o ProxyDefaultTargetGroupConnectionPoolConfigOutput) ToProxyDefaultTargetGroupConnectionPoolConfigOutputWithContext(ctx context.Context) ProxyDefaultTargetGroupConnectionPoolConfigOutput {
	return o
}

func (o ProxyDefaultTargetGroupConnectionPoolConfigOutput) ToProxyDefaultTargetGroupConnectionPoolConfigPtrOutput() ProxyDefaultTargetGroupConnectionPoolConfigPtrOutput {
	return o.ToProxyDefaultTargetGroupConnectionPoolConfigPtrOutputWithContext(context.Background())
}

func (o ProxyDefaultTargetGroupConnectionPoolConfigOutput) ToProxyDefaultTargetGroupConnectionPoolConfigPtrOutputWithContext(ctx context.Context) ProxyDefaultTargetGroupConnectionPoolConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProxyDefaultTargetGroupConnectionPoolConfig) *ProxyDefaultTargetGroupConnectionPoolConfig {
		return &v
	}).(ProxyDefaultTargetGroupConnectionPoolConfigPtrOutput)
}

// The number of seconds for a proxy to wait for a connection to become available in the connection pool. Only applies when the proxy has opened its maximum number of connections and all connections are busy with client sessions.
func (o ProxyDefaultTargetGroupConnectionPoolConfigOutput) ConnectionBorrowTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProxyDefaultTargetGroupConnectionPoolConfig) *int { return v.ConnectionBorrowTimeout }).(pulumi.IntPtrOutput)
}

// One or more SQL statements for the proxy to run when opening each new database connection. Typically used with `SET` statements to make sure that each connection has identical settings such as time zone and character set. This setting is empty by default. For multiple statements, use semicolons as the separator. You can also include multiple variables in a single `SET` statement, such as `SET x=1, y=2`.
func (o ProxyDefaultTargetGroupConnectionPoolConfigOutput) InitQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProxyDefaultTargetGroupConnectionPoolConfig) *string { return v.InitQuery }).(pulumi.StringPtrOutput)
}

// The maximum size of the connection pool for each target in a target group. For Aurora MySQL, it is expressed as a percentage of the maxConnections setting for the RDS DB instance or Aurora DB cluster used by the target group.
func (o ProxyDefaultTargetGroupConnectionPoolConfigOutput) MaxConnectionsPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProxyDefaultTargetGroupConnectionPoolConfig) *int { return v.MaxConnectionsPercent }).(pulumi.IntPtrOutput)
}

// Controls how actively the proxy closes idle database connections in the connection pool. A high value enables the proxy to leave a high percentage of idle connections open. A low value causes the proxy to close idle client connections and return the underlying database connections to the connection pool. For Aurora MySQL, it is expressed as a percentage of the maxConnections setting for the RDS DB instance or Aurora DB cluster used by the target group.
func (o ProxyDefaultTargetGroupConnectionPoolConfigOutput) MaxIdleConnectionsPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProxyDefaultTargetGroupConnectionPoolConfig) *int { return v.MaxIdleConnectionsPercent }).(pulumi.IntPtrOutput)
}

// Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection. Including an item in the list exempts that class of SQL operations from the pinning behavior. Currently, the only allowed value is `EXCLUDE_VARIABLE_SETS`.
func (o ProxyDefaultTargetGroupConnectionPoolConfigOutput) SessionPinningFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProxyDefaultTargetGroupConnectionPoolConfig) []string { return v.SessionPinningFilters }).(pulumi.StringArrayOutput)
}

type ProxyDefaultTargetGroupConnectionPoolConfigPtrOutput struct{ *pulumi.OutputState }

func (ProxyDefaultTargetGroupConnectionPoolConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyDefaultTargetGroupConnectionPoolConfig)(nil)).Elem()
}

func (o ProxyDefaultTargetGroupConnectionPoolConfigPtrOutput) ToProxyDefaultTargetGroupConnectionPoolConfigPtrOutput() ProxyDefaultTargetGroupConnectionPoolConfigPtrOutput {
	return o
}

func (o ProxyDefaultTargetGroupConnectionPoolConfigPtrOutput) ToProxyDefaultTargetGroupConnectionPoolConfigPtrOutputWithContext(ctx context.Context) ProxyDefaultTargetGroupConnectionPoolConfigPtrOutput {
	return o
}

func (o ProxyDefaultTargetGroupConnectionPoolConfigPtrOutput) Elem() ProxyDefaultTargetGroupConnectionPoolConfigOutput {
	return o.ApplyT(func(v *ProxyDefaultTargetGroupConnectionPoolConfig) ProxyDefaultTargetGroupConnectionPoolConfig {
		if v != nil {
			return *v
		}
		var ret ProxyDefaultTargetGroupConnectionPoolConfig
		return ret
	}).(ProxyDefaultTargetGroupConnectionPoolConfigOutput)
}

// The number of seconds for a proxy to wait for a connection to become available in the connection pool. Only applies when the proxy has opened its maximum number of connections and all connections are busy with client sessions.
func (o ProxyDefaultTargetGroupConnectionPoolConfigPtrOutput) ConnectionBorrowTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProxyDefaultTargetGroupConnectionPoolConfig) *int {
		if v == nil {
			return nil
		}
		return v.ConnectionBorrowTimeout
	}).(pulumi.IntPtrOutput)
}

// One or more SQL statements for the proxy to run when opening each new database connection. Typically used with `SET` statements to make sure that each connection has identical settings such as time zone and character set. This setting is empty by default. For multiple statements, use semicolons as the separator. You can also include multiple variables in a single `SET` statement, such as `SET x=1, y=2`.
func (o ProxyDefaultTargetGroupConnectionPoolConfigPtrOutput) InitQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProxyDefaultTargetGroupConnectionPoolConfig) *string {
		if v == nil {
			return nil
		}
		return v.InitQuery
	}).(pulumi.StringPtrOutput)
}

// The maximum size of the connection pool for each target in a target group. For Aurora MySQL, it is expressed as a percentage of the maxConnections setting for the RDS DB instance or Aurora DB cluster used by the target group.
func (o ProxyDefaultTargetGroupConnectionPoolConfigPtrOutput) MaxConnectionsPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProxyDefaultTargetGroupConnectionPoolConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxConnectionsPercent
	}).(pulumi.IntPtrOutput)
}

// Controls how actively the proxy closes idle database connections in the connection pool. A high value enables the proxy to leave a high percentage of idle connections open. A low value causes the proxy to close idle client connections and return the underlying database connections to the connection pool. For Aurora MySQL, it is expressed as a percentage of the maxConnections setting for the RDS DB instance or Aurora DB cluster used by the target group.
func (o ProxyDefaultTargetGroupConnectionPoolConfigPtrOutput) MaxIdleConnectionsPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProxyDefaultTargetGroupConnectionPoolConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxIdleConnectionsPercent
	}).(pulumi.IntPtrOutput)
}

// Each item in the list represents a class of SQL operations that normally cause all later statements in a session using a proxy to be pinned to the same underlying database connection. Including an item in the list exempts that class of SQL operations from the pinning behavior. Currently, the only allowed value is `EXCLUDE_VARIABLE_SETS`.
func (o ProxyDefaultTargetGroupConnectionPoolConfigPtrOutput) SessionPinningFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProxyDefaultTargetGroupConnectionPoolConfig) []string {
		if v == nil {
			return nil
		}
		return v.SessionPinningFilters
	}).(pulumi.StringArrayOutput)
}

type ReservedInstanceRecurringCharge struct {
	RecurringChargeAmount    *int    `pulumi:"recurringChargeAmount"`
	RecurringChargeFrequency *string `pulumi:"recurringChargeFrequency"`
}

// ReservedInstanceRecurringChargeInput is an input type that accepts ReservedInstanceRecurringChargeArgs and ReservedInstanceRecurringChargeOutput values.
// You can construct a concrete instance of `ReservedInstanceRecurringChargeInput` via:
//
//	ReservedInstanceRecurringChargeArgs{...}
type ReservedInstanceRecurringChargeInput interface {
	pulumi.Input

	ToReservedInstanceRecurringChargeOutput() ReservedInstanceRecurringChargeOutput
	ToReservedInstanceRecurringChargeOutputWithContext(context.Context) ReservedInstanceRecurringChargeOutput
}

type ReservedInstanceRecurringChargeArgs struct {
	RecurringChargeAmount    pulumi.IntPtrInput    `pulumi:"recurringChargeAmount"`
	RecurringChargeFrequency pulumi.StringPtrInput `pulumi:"recurringChargeFrequency"`
}

func (ReservedInstanceRecurringChargeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReservedInstanceRecurringCharge)(nil)).Elem()
}

func (i ReservedInstanceRecurringChargeArgs) ToReservedInstanceRecurringChargeOutput() ReservedInstanceRecurringChargeOutput {
	return i.ToReservedInstanceRecurringChargeOutputWithContext(context.Background())
}

func (i ReservedInstanceRecurringChargeArgs) ToReservedInstanceRecurringChargeOutputWithContext(ctx context.Context) ReservedInstanceRecurringChargeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReservedInstanceRecurringChargeOutput)
}

// ReservedInstanceRecurringChargeArrayInput is an input type that accepts ReservedInstanceRecurringChargeArray and ReservedInstanceRecurringChargeArrayOutput values.
// You can construct a concrete instance of `ReservedInstanceRecurringChargeArrayInput` via:
//
//	ReservedInstanceRecurringChargeArray{ ReservedInstanceRecurringChargeArgs{...} }
type ReservedInstanceRecurringChargeArrayInput interface {
	pulumi.Input

	ToReservedInstanceRecurringChargeArrayOutput() ReservedInstanceRecurringChargeArrayOutput
	ToReservedInstanceRecurringChargeArrayOutputWithContext(context.Context) ReservedInstanceRecurringChargeArrayOutput
}

type ReservedInstanceRecurringChargeArray []ReservedInstanceRecurringChargeInput

func (ReservedInstanceRecurringChargeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReservedInstanceRecurringCharge)(nil)).Elem()
}

func (i ReservedInstanceRecurringChargeArray) ToReservedInstanceRecurringChargeArrayOutput() ReservedInstanceRecurringChargeArrayOutput {
	return i.ToReservedInstanceRecurringChargeArrayOutputWithContext(context.Background())
}

func (i ReservedInstanceRecurringChargeArray) ToReservedInstanceRecurringChargeArrayOutputWithContext(ctx context.Context) ReservedInstanceRecurringChargeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReservedInstanceRecurringChargeArrayOutput)
}

type ReservedInstanceRecurringChargeOutput struct{ *pulumi.OutputState }

func (ReservedInstanceRecurringChargeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReservedInstanceRecurringCharge)(nil)).Elem()
}

func (o ReservedInstanceRecurringChargeOutput) ToReservedInstanceRecurringChargeOutput() ReservedInstanceRecurringChargeOutput {
	return o
}

func (o ReservedInstanceRecurringChargeOutput) ToReservedInstanceRecurringChargeOutputWithContext(ctx context.Context) ReservedInstanceRecurringChargeOutput {
	return o
}

func (o ReservedInstanceRecurringChargeOutput) RecurringChargeAmount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ReservedInstanceRecurringCharge) *int { return v.RecurringChargeAmount }).(pulumi.IntPtrOutput)
}

func (o ReservedInstanceRecurringChargeOutput) RecurringChargeFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReservedInstanceRecurringCharge) *string { return v.RecurringChargeFrequency }).(pulumi.StringPtrOutput)
}

type ReservedInstanceRecurringChargeArrayOutput struct{ *pulumi.OutputState }

func (ReservedInstanceRecurringChargeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ReservedInstanceRecurringCharge)(nil)).Elem()
}

func (o ReservedInstanceRecurringChargeArrayOutput) ToReservedInstanceRecurringChargeArrayOutput() ReservedInstanceRecurringChargeArrayOutput {
	return o
}

func (o ReservedInstanceRecurringChargeArrayOutput) ToReservedInstanceRecurringChargeArrayOutputWithContext(ctx context.Context) ReservedInstanceRecurringChargeArrayOutput {
	return o
}

func (o ReservedInstanceRecurringChargeArrayOutput) Index(i pulumi.IntInput) ReservedInstanceRecurringChargeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ReservedInstanceRecurringCharge {
		return vs[0].([]ReservedInstanceRecurringCharge)[vs[1].(int)]
	}).(ReservedInstanceRecurringChargeOutput)
}

type GetClusterMasterUserSecret struct {
	KmsKeyId     string `pulumi:"kmsKeyId"`
	SecretArn    string `pulumi:"secretArn"`
	SecretStatus string `pulumi:"secretStatus"`
}

// GetClusterMasterUserSecretInput is an input type that accepts GetClusterMasterUserSecretArgs and GetClusterMasterUserSecretOutput values.
// You can construct a concrete instance of `GetClusterMasterUserSecretInput` via:
//
//	GetClusterMasterUserSecretArgs{...}
type GetClusterMasterUserSecretInput interface {
	pulumi.Input

	ToGetClusterMasterUserSecretOutput() GetClusterMasterUserSecretOutput
	ToGetClusterMasterUserSecretOutputWithContext(context.Context) GetClusterMasterUserSecretOutput
}

type GetClusterMasterUserSecretArgs struct {
	KmsKeyId     pulumi.StringInput `pulumi:"kmsKeyId"`
	SecretArn    pulumi.StringInput `pulumi:"secretArn"`
	SecretStatus pulumi.StringInput `pulumi:"secretStatus"`
}

func (GetClusterMasterUserSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMasterUserSecret)(nil)).Elem()
}

func (i GetClusterMasterUserSecretArgs) ToGetClusterMasterUserSecretOutput() GetClusterMasterUserSecretOutput {
	return i.ToGetClusterMasterUserSecretOutputWithContext(context.Background())
}

func (i GetClusterMasterUserSecretArgs) ToGetClusterMasterUserSecretOutputWithContext(ctx context.Context) GetClusterMasterUserSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMasterUserSecretOutput)
}

// GetClusterMasterUserSecretArrayInput is an input type that accepts GetClusterMasterUserSecretArray and GetClusterMasterUserSecretArrayOutput values.
// You can construct a concrete instance of `GetClusterMasterUserSecretArrayInput` via:
//
//	GetClusterMasterUserSecretArray{ GetClusterMasterUserSecretArgs{...} }
type GetClusterMasterUserSecretArrayInput interface {
	pulumi.Input

	ToGetClusterMasterUserSecretArrayOutput() GetClusterMasterUserSecretArrayOutput
	ToGetClusterMasterUserSecretArrayOutputWithContext(context.Context) GetClusterMasterUserSecretArrayOutput
}

type GetClusterMasterUserSecretArray []GetClusterMasterUserSecretInput

func (GetClusterMasterUserSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMasterUserSecret)(nil)).Elem()
}

func (i GetClusterMasterUserSecretArray) ToGetClusterMasterUserSecretArrayOutput() GetClusterMasterUserSecretArrayOutput {
	return i.ToGetClusterMasterUserSecretArrayOutputWithContext(context.Background())
}

func (i GetClusterMasterUserSecretArray) ToGetClusterMasterUserSecretArrayOutputWithContext(ctx context.Context) GetClusterMasterUserSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterMasterUserSecretArrayOutput)
}

type GetClusterMasterUserSecretOutput struct{ *pulumi.OutputState }

func (GetClusterMasterUserSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterMasterUserSecret)(nil)).Elem()
}

func (o GetClusterMasterUserSecretOutput) ToGetClusterMasterUserSecretOutput() GetClusterMasterUserSecretOutput {
	return o
}

func (o GetClusterMasterUserSecretOutput) ToGetClusterMasterUserSecretOutputWithContext(ctx context.Context) GetClusterMasterUserSecretOutput {
	return o
}

func (o GetClusterMasterUserSecretOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMasterUserSecret) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

func (o GetClusterMasterUserSecretOutput) SecretArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMasterUserSecret) string { return v.SecretArn }).(pulumi.StringOutput)
}

func (o GetClusterMasterUserSecretOutput) SecretStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterMasterUserSecret) string { return v.SecretStatus }).(pulumi.StringOutput)
}

type GetClusterMasterUserSecretArrayOutput struct{ *pulumi.OutputState }

func (GetClusterMasterUserSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterMasterUserSecret)(nil)).Elem()
}

func (o GetClusterMasterUserSecretArrayOutput) ToGetClusterMasterUserSecretArrayOutput() GetClusterMasterUserSecretArrayOutput {
	return o
}

func (o GetClusterMasterUserSecretArrayOutput) ToGetClusterMasterUserSecretArrayOutputWithContext(ctx context.Context) GetClusterMasterUserSecretArrayOutput {
	return o
}

func (o GetClusterMasterUserSecretArrayOutput) Index(i pulumi.IntInput) GetClusterMasterUserSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterMasterUserSecret {
		return vs[0].([]GetClusterMasterUserSecret)[vs[1].(int)]
	}).(GetClusterMasterUserSecretOutput)
}

type GetClustersFilter struct {
	// Name of the filter field. Valid values can be found in the [RDS DescribeDBClusters API Reference](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBClusters.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

// GetClustersFilterInput is an input type that accepts GetClustersFilterArgs and GetClustersFilterOutput values.
// You can construct a concrete instance of `GetClustersFilterInput` via:
//
//	GetClustersFilterArgs{...}
type GetClustersFilterInput interface {
	pulumi.Input

	ToGetClustersFilterOutput() GetClustersFilterOutput
	ToGetClustersFilterOutputWithContext(context.Context) GetClustersFilterOutput
}

type GetClustersFilterArgs struct {
	// Name of the filter field. Valid values can be found in the [RDS DescribeDBClusters API Reference](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBClusters.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetClustersFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersFilter)(nil)).Elem()
}

func (i GetClustersFilterArgs) ToGetClustersFilterOutput() GetClustersFilterOutput {
	return i.ToGetClustersFilterOutputWithContext(context.Background())
}

func (i GetClustersFilterArgs) ToGetClustersFilterOutputWithContext(ctx context.Context) GetClustersFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersFilterOutput)
}

// GetClustersFilterArrayInput is an input type that accepts GetClustersFilterArray and GetClustersFilterArrayOutput values.
// You can construct a concrete instance of `GetClustersFilterArrayInput` via:
//
//	GetClustersFilterArray{ GetClustersFilterArgs{...} }
type GetClustersFilterArrayInput interface {
	pulumi.Input

	ToGetClustersFilterArrayOutput() GetClustersFilterArrayOutput
	ToGetClustersFilterArrayOutputWithContext(context.Context) GetClustersFilterArrayOutput
}

type GetClustersFilterArray []GetClustersFilterInput

func (GetClustersFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersFilter)(nil)).Elem()
}

func (i GetClustersFilterArray) ToGetClustersFilterArrayOutput() GetClustersFilterArrayOutput {
	return i.ToGetClustersFilterArrayOutputWithContext(context.Background())
}

func (i GetClustersFilterArray) ToGetClustersFilterArrayOutputWithContext(ctx context.Context) GetClustersFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClustersFilterArrayOutput)
}

type GetClustersFilterOutput struct{ *pulumi.OutputState }

func (GetClustersFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersFilter)(nil)).Elem()
}

func (o GetClustersFilterOutput) ToGetClustersFilterOutput() GetClustersFilterOutput {
	return o
}

func (o GetClustersFilterOutput) ToGetClustersFilterOutputWithContext(ctx context.Context) GetClustersFilterOutput {
	return o
}

// Name of the filter field. Valid values can be found in the [RDS DescribeDBClusters API Reference](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBClusters.html).
func (o GetClustersFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetClustersFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetClustersFilterArrayOutput struct{ *pulumi.OutputState }

func (GetClustersFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClustersFilter)(nil)).Elem()
}

func (o GetClustersFilterArrayOutput) ToGetClustersFilterArrayOutput() GetClustersFilterArrayOutput {
	return o
}

func (o GetClustersFilterArrayOutput) ToGetClustersFilterArrayOutputWithContext(ctx context.Context) GetClustersFilterArrayOutput {
	return o
}

func (o GetClustersFilterArrayOutput) Index(i pulumi.IntInput) GetClustersFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClustersFilter {
		return vs[0].([]GetClustersFilter)[vs[1].(int)]
	}).(GetClustersFilterOutput)
}

type GetEngineVersionFilter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetEngineVersionFilterInput is an input type that accepts GetEngineVersionFilterArgs and GetEngineVersionFilterOutput values.
// You can construct a concrete instance of `GetEngineVersionFilterInput` via:
//
//	GetEngineVersionFilterArgs{...}
type GetEngineVersionFilterInput interface {
	pulumi.Input

	ToGetEngineVersionFilterOutput() GetEngineVersionFilterOutput
	ToGetEngineVersionFilterOutputWithContext(context.Context) GetEngineVersionFilterOutput
}

type GetEngineVersionFilterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetEngineVersionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEngineVersionFilter)(nil)).Elem()
}

func (i GetEngineVersionFilterArgs) ToGetEngineVersionFilterOutput() GetEngineVersionFilterOutput {
	return i.ToGetEngineVersionFilterOutputWithContext(context.Background())
}

func (i GetEngineVersionFilterArgs) ToGetEngineVersionFilterOutputWithContext(ctx context.Context) GetEngineVersionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEngineVersionFilterOutput)
}

// GetEngineVersionFilterArrayInput is an input type that accepts GetEngineVersionFilterArray and GetEngineVersionFilterArrayOutput values.
// You can construct a concrete instance of `GetEngineVersionFilterArrayInput` via:
//
//	GetEngineVersionFilterArray{ GetEngineVersionFilterArgs{...} }
type GetEngineVersionFilterArrayInput interface {
	pulumi.Input

	ToGetEngineVersionFilterArrayOutput() GetEngineVersionFilterArrayOutput
	ToGetEngineVersionFilterArrayOutputWithContext(context.Context) GetEngineVersionFilterArrayOutput
}

type GetEngineVersionFilterArray []GetEngineVersionFilterInput

func (GetEngineVersionFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEngineVersionFilter)(nil)).Elem()
}

func (i GetEngineVersionFilterArray) ToGetEngineVersionFilterArrayOutput() GetEngineVersionFilterArrayOutput {
	return i.ToGetEngineVersionFilterArrayOutputWithContext(context.Background())
}

func (i GetEngineVersionFilterArray) ToGetEngineVersionFilterArrayOutputWithContext(ctx context.Context) GetEngineVersionFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetEngineVersionFilterArrayOutput)
}

type GetEngineVersionFilterOutput struct{ *pulumi.OutputState }

func (GetEngineVersionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEngineVersionFilter)(nil)).Elem()
}

func (o GetEngineVersionFilterOutput) ToGetEngineVersionFilterOutput() GetEngineVersionFilterOutput {
	return o
}

func (o GetEngineVersionFilterOutput) ToGetEngineVersionFilterOutputWithContext(ctx context.Context) GetEngineVersionFilterOutput {
	return o
}

func (o GetEngineVersionFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetEngineVersionFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetEngineVersionFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEngineVersionFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetEngineVersionFilterArrayOutput struct{ *pulumi.OutputState }

func (GetEngineVersionFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetEngineVersionFilter)(nil)).Elem()
}

func (o GetEngineVersionFilterArrayOutput) ToGetEngineVersionFilterArrayOutput() GetEngineVersionFilterArrayOutput {
	return o
}

func (o GetEngineVersionFilterArrayOutput) ToGetEngineVersionFilterArrayOutputWithContext(ctx context.Context) GetEngineVersionFilterArrayOutput {
	return o
}

func (o GetEngineVersionFilterArrayOutput) Index(i pulumi.IntInput) GetEngineVersionFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetEngineVersionFilter {
		return vs[0].([]GetEngineVersionFilter)[vs[1].(int)]
	}).(GetEngineVersionFilterOutput)
}

type GetInstanceMasterUserSecret struct {
	// The Amazon Web Services KMS key identifier that is used to encrypt the secret.
	KmsKeyId string `pulumi:"kmsKeyId"`
	// The Amazon Resource Name (ARN) of the secret.
	SecretArn string `pulumi:"secretArn"`
	// The status of the secret. Valid Values: `creating` | `active` | `rotating` | `impaired`.
	SecretStatus string `pulumi:"secretStatus"`
}

// GetInstanceMasterUserSecretInput is an input type that accepts GetInstanceMasterUserSecretArgs and GetInstanceMasterUserSecretOutput values.
// You can construct a concrete instance of `GetInstanceMasterUserSecretInput` via:
//
//	GetInstanceMasterUserSecretArgs{...}
type GetInstanceMasterUserSecretInput interface {
	pulumi.Input

	ToGetInstanceMasterUserSecretOutput() GetInstanceMasterUserSecretOutput
	ToGetInstanceMasterUserSecretOutputWithContext(context.Context) GetInstanceMasterUserSecretOutput
}

type GetInstanceMasterUserSecretArgs struct {
	// The Amazon Web Services KMS key identifier that is used to encrypt the secret.
	KmsKeyId pulumi.StringInput `pulumi:"kmsKeyId"`
	// The Amazon Resource Name (ARN) of the secret.
	SecretArn pulumi.StringInput `pulumi:"secretArn"`
	// The status of the secret. Valid Values: `creating` | `active` | `rotating` | `impaired`.
	SecretStatus pulumi.StringInput `pulumi:"secretStatus"`
}

func (GetInstanceMasterUserSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMasterUserSecret)(nil)).Elem()
}

func (i GetInstanceMasterUserSecretArgs) ToGetInstanceMasterUserSecretOutput() GetInstanceMasterUserSecretOutput {
	return i.ToGetInstanceMasterUserSecretOutputWithContext(context.Background())
}

func (i GetInstanceMasterUserSecretArgs) ToGetInstanceMasterUserSecretOutputWithContext(ctx context.Context) GetInstanceMasterUserSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMasterUserSecretOutput)
}

// GetInstanceMasterUserSecretArrayInput is an input type that accepts GetInstanceMasterUserSecretArray and GetInstanceMasterUserSecretArrayOutput values.
// You can construct a concrete instance of `GetInstanceMasterUserSecretArrayInput` via:
//
//	GetInstanceMasterUserSecretArray{ GetInstanceMasterUserSecretArgs{...} }
type GetInstanceMasterUserSecretArrayInput interface {
	pulumi.Input

	ToGetInstanceMasterUserSecretArrayOutput() GetInstanceMasterUserSecretArrayOutput
	ToGetInstanceMasterUserSecretArrayOutputWithContext(context.Context) GetInstanceMasterUserSecretArrayOutput
}

type GetInstanceMasterUserSecretArray []GetInstanceMasterUserSecretInput

func (GetInstanceMasterUserSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMasterUserSecret)(nil)).Elem()
}

func (i GetInstanceMasterUserSecretArray) ToGetInstanceMasterUserSecretArrayOutput() GetInstanceMasterUserSecretArrayOutput {
	return i.ToGetInstanceMasterUserSecretArrayOutputWithContext(context.Background())
}

func (i GetInstanceMasterUserSecretArray) ToGetInstanceMasterUserSecretArrayOutputWithContext(ctx context.Context) GetInstanceMasterUserSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceMasterUserSecretArrayOutput)
}

type GetInstanceMasterUserSecretOutput struct{ *pulumi.OutputState }

func (GetInstanceMasterUserSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceMasterUserSecret)(nil)).Elem()
}

func (o GetInstanceMasterUserSecretOutput) ToGetInstanceMasterUserSecretOutput() GetInstanceMasterUserSecretOutput {
	return o
}

func (o GetInstanceMasterUserSecretOutput) ToGetInstanceMasterUserSecretOutputWithContext(ctx context.Context) GetInstanceMasterUserSecretOutput {
	return o
}

// The Amazon Web Services KMS key identifier that is used to encrypt the secret.
func (o GetInstanceMasterUserSecretOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMasterUserSecret) string { return v.KmsKeyId }).(pulumi.StringOutput)
}

// The Amazon Resource Name (ARN) of the secret.
func (o GetInstanceMasterUserSecretOutput) SecretArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMasterUserSecret) string { return v.SecretArn }).(pulumi.StringOutput)
}

// The status of the secret. Valid Values: `creating` | `active` | `rotating` | `impaired`.
func (o GetInstanceMasterUserSecretOutput) SecretStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceMasterUserSecret) string { return v.SecretStatus }).(pulumi.StringOutput)
}

type GetInstanceMasterUserSecretArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceMasterUserSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceMasterUserSecret)(nil)).Elem()
}

func (o GetInstanceMasterUserSecretArrayOutput) ToGetInstanceMasterUserSecretArrayOutput() GetInstanceMasterUserSecretArrayOutput {
	return o
}

func (o GetInstanceMasterUserSecretArrayOutput) ToGetInstanceMasterUserSecretArrayOutputWithContext(ctx context.Context) GetInstanceMasterUserSecretArrayOutput {
	return o
}

func (o GetInstanceMasterUserSecretArrayOutput) Index(i pulumi.IntInput) GetInstanceMasterUserSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceMasterUserSecret {
		return vs[0].([]GetInstanceMasterUserSecret)[vs[1].(int)]
	}).(GetInstanceMasterUserSecretOutput)
}

type GetInstancesFilter struct {
	// Name of the filter field. Valid values can be found in the [RDS DescribeDBClusters API Reference](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBClusters.html) or [RDS DescribeDBInstances API Reference](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBInstances.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

// GetInstancesFilterInput is an input type that accepts GetInstancesFilterArgs and GetInstancesFilterOutput values.
// You can construct a concrete instance of `GetInstancesFilterInput` via:
//
//	GetInstancesFilterArgs{...}
type GetInstancesFilterInput interface {
	pulumi.Input

	ToGetInstancesFilterOutput() GetInstancesFilterOutput
	ToGetInstancesFilterOutputWithContext(context.Context) GetInstancesFilterOutput
}

type GetInstancesFilterArgs struct {
	// Name of the filter field. Valid values can be found in the [RDS DescribeDBClusters API Reference](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBClusters.html) or [RDS DescribeDBInstances API Reference](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBInstances.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetInstancesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesFilter)(nil)).Elem()
}

func (i GetInstancesFilterArgs) ToGetInstancesFilterOutput() GetInstancesFilterOutput {
	return i.ToGetInstancesFilterOutputWithContext(context.Background())
}

func (i GetInstancesFilterArgs) ToGetInstancesFilterOutputWithContext(ctx context.Context) GetInstancesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesFilterOutput)
}

// GetInstancesFilterArrayInput is an input type that accepts GetInstancesFilterArray and GetInstancesFilterArrayOutput values.
// You can construct a concrete instance of `GetInstancesFilterArrayInput` via:
//
//	GetInstancesFilterArray{ GetInstancesFilterArgs{...} }
type GetInstancesFilterArrayInput interface {
	pulumi.Input

	ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput
	ToGetInstancesFilterArrayOutputWithContext(context.Context) GetInstancesFilterArrayOutput
}

type GetInstancesFilterArray []GetInstancesFilterInput

func (GetInstancesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesFilter)(nil)).Elem()
}

func (i GetInstancesFilterArray) ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput {
	return i.ToGetInstancesFilterArrayOutputWithContext(context.Background())
}

func (i GetInstancesFilterArray) ToGetInstancesFilterArrayOutputWithContext(ctx context.Context) GetInstancesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesFilterArrayOutput)
}

type GetInstancesFilterOutput struct{ *pulumi.OutputState }

func (GetInstancesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesFilter)(nil)).Elem()
}

func (o GetInstancesFilterOutput) ToGetInstancesFilterOutput() GetInstancesFilterOutput {
	return o
}

func (o GetInstancesFilterOutput) ToGetInstancesFilterOutputWithContext(ctx context.Context) GetInstancesFilterOutput {
	return o
}

// Name of the filter field. Valid values can be found in the [RDS DescribeDBClusters API Reference](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBClusters.html) or [RDS DescribeDBInstances API Reference](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_DescribeDBInstances.html).
func (o GetInstancesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetInstancesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetInstancesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesFilter)(nil)).Elem()
}

func (o GetInstancesFilterArrayOutput) ToGetInstancesFilterArrayOutput() GetInstancesFilterArrayOutput {
	return o
}

func (o GetInstancesFilterArrayOutput) ToGetInstancesFilterArrayOutputWithContext(ctx context.Context) GetInstancesFilterArrayOutput {
	return o
}

func (o GetInstancesFilterArrayOutput) Index(i pulumi.IntInput) GetInstancesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesFilter {
		return vs[0].([]GetInstancesFilter)[vs[1].(int)]
	}).(GetInstancesFilterOutput)
}

type GetProxyAuth struct {
	AuthScheme             string `pulumi:"authScheme"`
	ClientPasswordAuthType string `pulumi:"clientPasswordAuthType"`
	Description            string `pulumi:"description"`
	IamAuth                string `pulumi:"iamAuth"`
	SecretArn              string `pulumi:"secretArn"`
	Username               string `pulumi:"username"`
}

// GetProxyAuthInput is an input type that accepts GetProxyAuthArgs and GetProxyAuthOutput values.
// You can construct a concrete instance of `GetProxyAuthInput` via:
//
//	GetProxyAuthArgs{...}
type GetProxyAuthInput interface {
	pulumi.Input

	ToGetProxyAuthOutput() GetProxyAuthOutput
	ToGetProxyAuthOutputWithContext(context.Context) GetProxyAuthOutput
}

type GetProxyAuthArgs struct {
	AuthScheme             pulumi.StringInput `pulumi:"authScheme"`
	ClientPasswordAuthType pulumi.StringInput `pulumi:"clientPasswordAuthType"`
	Description            pulumi.StringInput `pulumi:"description"`
	IamAuth                pulumi.StringInput `pulumi:"iamAuth"`
	SecretArn              pulumi.StringInput `pulumi:"secretArn"`
	Username               pulumi.StringInput `pulumi:"username"`
}

func (GetProxyAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyAuth)(nil)).Elem()
}

func (i GetProxyAuthArgs) ToGetProxyAuthOutput() GetProxyAuthOutput {
	return i.ToGetProxyAuthOutputWithContext(context.Background())
}

func (i GetProxyAuthArgs) ToGetProxyAuthOutputWithContext(ctx context.Context) GetProxyAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyAuthOutput)
}

// GetProxyAuthArrayInput is an input type that accepts GetProxyAuthArray and GetProxyAuthArrayOutput values.
// You can construct a concrete instance of `GetProxyAuthArrayInput` via:
//
//	GetProxyAuthArray{ GetProxyAuthArgs{...} }
type GetProxyAuthArrayInput interface {
	pulumi.Input

	ToGetProxyAuthArrayOutput() GetProxyAuthArrayOutput
	ToGetProxyAuthArrayOutputWithContext(context.Context) GetProxyAuthArrayOutput
}

type GetProxyAuthArray []GetProxyAuthInput

func (GetProxyAuthArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyAuth)(nil)).Elem()
}

func (i GetProxyAuthArray) ToGetProxyAuthArrayOutput() GetProxyAuthArrayOutput {
	return i.ToGetProxyAuthArrayOutputWithContext(context.Background())
}

func (i GetProxyAuthArray) ToGetProxyAuthArrayOutputWithContext(ctx context.Context) GetProxyAuthArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProxyAuthArrayOutput)
}

type GetProxyAuthOutput struct{ *pulumi.OutputState }

func (GetProxyAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProxyAuth)(nil)).Elem()
}

func (o GetProxyAuthOutput) ToGetProxyAuthOutput() GetProxyAuthOutput {
	return o
}

func (o GetProxyAuthOutput) ToGetProxyAuthOutputWithContext(ctx context.Context) GetProxyAuthOutput {
	return o
}

func (o GetProxyAuthOutput) AuthScheme() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxyAuth) string { return v.AuthScheme }).(pulumi.StringOutput)
}

func (o GetProxyAuthOutput) ClientPasswordAuthType() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxyAuth) string { return v.ClientPasswordAuthType }).(pulumi.StringOutput)
}

func (o GetProxyAuthOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxyAuth) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetProxyAuthOutput) IamAuth() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxyAuth) string { return v.IamAuth }).(pulumi.StringOutput)
}

func (o GetProxyAuthOutput) SecretArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxyAuth) string { return v.SecretArn }).(pulumi.StringOutput)
}

func (o GetProxyAuthOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetProxyAuth) string { return v.Username }).(pulumi.StringOutput)
}

type GetProxyAuthArrayOutput struct{ *pulumi.OutputState }

func (GetProxyAuthArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProxyAuth)(nil)).Elem()
}

func (o GetProxyAuthArrayOutput) ToGetProxyAuthArrayOutput() GetProxyAuthArrayOutput {
	return o
}

func (o GetProxyAuthArrayOutput) ToGetProxyAuthArrayOutputWithContext(ctx context.Context) GetProxyAuthArrayOutput {
	return o
}

func (o GetProxyAuthArrayOutput) Index(i pulumi.IntInput) GetProxyAuthOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProxyAuth {
		return vs[0].([]GetProxyAuth)[vs[1].(int)]
	}).(GetProxyAuthOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMasterUserSecretInput)(nil)).Elem(), ClusterMasterUserSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterMasterUserSecretArrayInput)(nil)).Elem(), ClusterMasterUserSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterParameterGroupParameterInput)(nil)).Elem(), ClusterParameterGroupParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterParameterGroupParameterArrayInput)(nil)).Elem(), ClusterParameterGroupParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterRestoreToPointInTimeInput)(nil)).Elem(), ClusterRestoreToPointInTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterRestoreToPointInTimePtrInput)(nil)).Elem(), ClusterRestoreToPointInTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterS3ImportInput)(nil)).Elem(), ClusterS3ImportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterS3ImportPtrInput)(nil)).Elem(), ClusterS3ImportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterScalingConfigurationInput)(nil)).Elem(), ClusterScalingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterScalingConfigurationPtrInput)(nil)).Elem(), ClusterScalingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterServerlessv2ScalingConfigurationInput)(nil)).Elem(), ClusterServerlessv2ScalingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterServerlessv2ScalingConfigurationPtrInput)(nil)).Elem(), ClusterServerlessv2ScalingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExportTaskTimeoutsInput)(nil)).Elem(), ExportTaskTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExportTaskTimeoutsPtrInput)(nil)).Elem(), ExportTaskTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClusterGlobalClusterMemberInput)(nil)).Elem(), GlobalClusterGlobalClusterMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GlobalClusterGlobalClusterMemberArrayInput)(nil)).Elem(), GlobalClusterGlobalClusterMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBlueGreenUpdateInput)(nil)).Elem(), InstanceBlueGreenUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBlueGreenUpdatePtrInput)(nil)).Elem(), InstanceBlueGreenUpdateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceListenerEndpointInput)(nil)).Elem(), InstanceListenerEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceListenerEndpointArrayInput)(nil)).Elem(), InstanceListenerEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMasterUserSecretInput)(nil)).Elem(), InstanceMasterUserSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMasterUserSecretArrayInput)(nil)).Elem(), InstanceMasterUserSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceRestoreToPointInTimeInput)(nil)).Elem(), InstanceRestoreToPointInTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceRestoreToPointInTimePtrInput)(nil)).Elem(), InstanceRestoreToPointInTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceS3ImportInput)(nil)).Elem(), InstanceS3ImportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceS3ImportPtrInput)(nil)).Elem(), InstanceS3ImportArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OptionGroupOptionInput)(nil)).Elem(), OptionGroupOptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OptionGroupOptionArrayInput)(nil)).Elem(), OptionGroupOptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OptionGroupOptionOptionSettingInput)(nil)).Elem(), OptionGroupOptionOptionSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OptionGroupOptionOptionSettingArrayInput)(nil)).Elem(), OptionGroupOptionOptionSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterGroupParameterInput)(nil)).Elem(), ParameterGroupParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ParameterGroupParameterArrayInput)(nil)).Elem(), ParameterGroupParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyAuthInput)(nil)).Elem(), ProxyAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyAuthArrayInput)(nil)).Elem(), ProxyAuthArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyDefaultTargetGroupConnectionPoolConfigInput)(nil)).Elem(), ProxyDefaultTargetGroupConnectionPoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyDefaultTargetGroupConnectionPoolConfigPtrInput)(nil)).Elem(), ProxyDefaultTargetGroupConnectionPoolConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReservedInstanceRecurringChargeInput)(nil)).Elem(), ReservedInstanceRecurringChargeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReservedInstanceRecurringChargeArrayInput)(nil)).Elem(), ReservedInstanceRecurringChargeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMasterUserSecretInput)(nil)).Elem(), GetClusterMasterUserSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClusterMasterUserSecretArrayInput)(nil)).Elem(), GetClusterMasterUserSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersFilterInput)(nil)).Elem(), GetClustersFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetClustersFilterArrayInput)(nil)).Elem(), GetClustersFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEngineVersionFilterInput)(nil)).Elem(), GetEngineVersionFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetEngineVersionFilterArrayInput)(nil)).Elem(), GetEngineVersionFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceMasterUserSecretInput)(nil)).Elem(), GetInstanceMasterUserSecretArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceMasterUserSecretArrayInput)(nil)).Elem(), GetInstanceMasterUserSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesFilterInput)(nil)).Elem(), GetInstancesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesFilterArrayInput)(nil)).Elem(), GetInstancesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxyAuthInput)(nil)).Elem(), GetProxyAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProxyAuthArrayInput)(nil)).Elem(), GetProxyAuthArray{})
	pulumi.RegisterOutputType(ClusterMasterUserSecretOutput{})
	pulumi.RegisterOutputType(ClusterMasterUserSecretArrayOutput{})
	pulumi.RegisterOutputType(ClusterParameterGroupParameterOutput{})
	pulumi.RegisterOutputType(ClusterParameterGroupParameterArrayOutput{})
	pulumi.RegisterOutputType(ClusterRestoreToPointInTimeOutput{})
	pulumi.RegisterOutputType(ClusterRestoreToPointInTimePtrOutput{})
	pulumi.RegisterOutputType(ClusterS3ImportOutput{})
	pulumi.RegisterOutputType(ClusterS3ImportPtrOutput{})
	pulumi.RegisterOutputType(ClusterScalingConfigurationOutput{})
	pulumi.RegisterOutputType(ClusterScalingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ClusterServerlessv2ScalingConfigurationOutput{})
	pulumi.RegisterOutputType(ClusterServerlessv2ScalingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ExportTaskTimeoutsOutput{})
	pulumi.RegisterOutputType(ExportTaskTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(GlobalClusterGlobalClusterMemberOutput{})
	pulumi.RegisterOutputType(GlobalClusterGlobalClusterMemberArrayOutput{})
	pulumi.RegisterOutputType(InstanceBlueGreenUpdateOutput{})
	pulumi.RegisterOutputType(InstanceBlueGreenUpdatePtrOutput{})
	pulumi.RegisterOutputType(InstanceListenerEndpointOutput{})
	pulumi.RegisterOutputType(InstanceListenerEndpointArrayOutput{})
	pulumi.RegisterOutputType(InstanceMasterUserSecretOutput{})
	pulumi.RegisterOutputType(InstanceMasterUserSecretArrayOutput{})
	pulumi.RegisterOutputType(InstanceRestoreToPointInTimeOutput{})
	pulumi.RegisterOutputType(InstanceRestoreToPointInTimePtrOutput{})
	pulumi.RegisterOutputType(InstanceS3ImportOutput{})
	pulumi.RegisterOutputType(InstanceS3ImportPtrOutput{})
	pulumi.RegisterOutputType(OptionGroupOptionOutput{})
	pulumi.RegisterOutputType(OptionGroupOptionArrayOutput{})
	pulumi.RegisterOutputType(OptionGroupOptionOptionSettingOutput{})
	pulumi.RegisterOutputType(OptionGroupOptionOptionSettingArrayOutput{})
	pulumi.RegisterOutputType(ParameterGroupParameterOutput{})
	pulumi.RegisterOutputType(ParameterGroupParameterArrayOutput{})
	pulumi.RegisterOutputType(ProxyAuthOutput{})
	pulumi.RegisterOutputType(ProxyAuthArrayOutput{})
	pulumi.RegisterOutputType(ProxyDefaultTargetGroupConnectionPoolConfigOutput{})
	pulumi.RegisterOutputType(ProxyDefaultTargetGroupConnectionPoolConfigPtrOutput{})
	pulumi.RegisterOutputType(ReservedInstanceRecurringChargeOutput{})
	pulumi.RegisterOutputType(ReservedInstanceRecurringChargeArrayOutput{})
	pulumi.RegisterOutputType(GetClusterMasterUserSecretOutput{})
	pulumi.RegisterOutputType(GetClusterMasterUserSecretArrayOutput{})
	pulumi.RegisterOutputType(GetClustersFilterOutput{})
	pulumi.RegisterOutputType(GetClustersFilterArrayOutput{})
	pulumi.RegisterOutputType(GetEngineVersionFilterOutput{})
	pulumi.RegisterOutputType(GetEngineVersionFilterArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceMasterUserSecretOutput{})
	pulumi.RegisterOutputType(GetInstanceMasterUserSecretArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesFilterOutput{})
	pulumi.RegisterOutputType(GetInstancesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetProxyAuthOutput{})
	pulumi.RegisterOutputType(GetProxyAuthArrayOutput{})
}
