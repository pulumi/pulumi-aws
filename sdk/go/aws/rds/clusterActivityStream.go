// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ClusterActivityStream struct {
	pulumi.CustomResourceState

	EngineNativeAuditFieldsIncluded pulumi.BoolPtrOutput `pulumi:"engineNativeAuditFieldsIncluded"`
	KinesisStreamName               pulumi.StringOutput  `pulumi:"kinesisStreamName"`
	KmsKeyId                        pulumi.StringOutput  `pulumi:"kmsKeyId"`
	Mode                            pulumi.StringOutput  `pulumi:"mode"`
	ResourceArn                     pulumi.StringOutput  `pulumi:"resourceArn"`
}

// NewClusterActivityStream registers a new resource with the given unique name, arguments, and options.
func NewClusterActivityStream(ctx *pulumi.Context,
	name string, args *ClusterActivityStreamArgs, opts ...pulumi.ResourceOption) (*ClusterActivityStream, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.KmsKeyId == nil {
		return nil, errors.New("invalid value for required argument 'KmsKeyId'")
	}
	if args.Mode == nil {
		return nil, errors.New("invalid value for required argument 'Mode'")
	}
	if args.ResourceArn == nil {
		return nil, errors.New("invalid value for required argument 'ResourceArn'")
	}
	var resource ClusterActivityStream
	err := ctx.RegisterResource("aws:rds/clusterActivityStream:ClusterActivityStream", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClusterActivityStream gets an existing ClusterActivityStream resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterActivityStream(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClusterActivityStreamState, opts ...pulumi.ResourceOption) (*ClusterActivityStream, error) {
	var resource ClusterActivityStream
	err := ctx.ReadResource("aws:rds/clusterActivityStream:ClusterActivityStream", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClusterActivityStream resources.
type clusterActivityStreamState struct {
	EngineNativeAuditFieldsIncluded *bool   `pulumi:"engineNativeAuditFieldsIncluded"`
	KinesisStreamName               *string `pulumi:"kinesisStreamName"`
	KmsKeyId                        *string `pulumi:"kmsKeyId"`
	Mode                            *string `pulumi:"mode"`
	ResourceArn                     *string `pulumi:"resourceArn"`
}

type ClusterActivityStreamState struct {
	EngineNativeAuditFieldsIncluded pulumi.BoolPtrInput
	KinesisStreamName               pulumi.StringPtrInput
	KmsKeyId                        pulumi.StringPtrInput
	Mode                            pulumi.StringPtrInput
	ResourceArn                     pulumi.StringPtrInput
}

func (ClusterActivityStreamState) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterActivityStreamState)(nil)).Elem()
}

type clusterActivityStreamArgs struct {
	EngineNativeAuditFieldsIncluded *bool  `pulumi:"engineNativeAuditFieldsIncluded"`
	KmsKeyId                        string `pulumi:"kmsKeyId"`
	Mode                            string `pulumi:"mode"`
	ResourceArn                     string `pulumi:"resourceArn"`
}

// The set of arguments for constructing a ClusterActivityStream resource.
type ClusterActivityStreamArgs struct {
	EngineNativeAuditFieldsIncluded pulumi.BoolPtrInput
	KmsKeyId                        pulumi.StringInput
	Mode                            pulumi.StringInput
	ResourceArn                     pulumi.StringInput
}

func (ClusterActivityStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*clusterActivityStreamArgs)(nil)).Elem()
}

type ClusterActivityStreamInput interface {
	pulumi.Input

	ToClusterActivityStreamOutput() ClusterActivityStreamOutput
	ToClusterActivityStreamOutputWithContext(ctx context.Context) ClusterActivityStreamOutput
}

func (*ClusterActivityStream) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterActivityStream)(nil)).Elem()
}

func (i *ClusterActivityStream) ToClusterActivityStreamOutput() ClusterActivityStreamOutput {
	return i.ToClusterActivityStreamOutputWithContext(context.Background())
}

func (i *ClusterActivityStream) ToClusterActivityStreamOutputWithContext(ctx context.Context) ClusterActivityStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterActivityStreamOutput)
}

// ClusterActivityStreamArrayInput is an input type that accepts ClusterActivityStreamArray and ClusterActivityStreamArrayOutput values.
// You can construct a concrete instance of `ClusterActivityStreamArrayInput` via:
//
//	ClusterActivityStreamArray{ ClusterActivityStreamArgs{...} }
type ClusterActivityStreamArrayInput interface {
	pulumi.Input

	ToClusterActivityStreamArrayOutput() ClusterActivityStreamArrayOutput
	ToClusterActivityStreamArrayOutputWithContext(context.Context) ClusterActivityStreamArrayOutput
}

type ClusterActivityStreamArray []ClusterActivityStreamInput

func (ClusterActivityStreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterActivityStream)(nil)).Elem()
}

func (i ClusterActivityStreamArray) ToClusterActivityStreamArrayOutput() ClusterActivityStreamArrayOutput {
	return i.ToClusterActivityStreamArrayOutputWithContext(context.Background())
}

func (i ClusterActivityStreamArray) ToClusterActivityStreamArrayOutputWithContext(ctx context.Context) ClusterActivityStreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterActivityStreamArrayOutput)
}

// ClusterActivityStreamMapInput is an input type that accepts ClusterActivityStreamMap and ClusterActivityStreamMapOutput values.
// You can construct a concrete instance of `ClusterActivityStreamMapInput` via:
//
//	ClusterActivityStreamMap{ "key": ClusterActivityStreamArgs{...} }
type ClusterActivityStreamMapInput interface {
	pulumi.Input

	ToClusterActivityStreamMapOutput() ClusterActivityStreamMapOutput
	ToClusterActivityStreamMapOutputWithContext(context.Context) ClusterActivityStreamMapOutput
}

type ClusterActivityStreamMap map[string]ClusterActivityStreamInput

func (ClusterActivityStreamMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterActivityStream)(nil)).Elem()
}

func (i ClusterActivityStreamMap) ToClusterActivityStreamMapOutput() ClusterActivityStreamMapOutput {
	return i.ToClusterActivityStreamMapOutputWithContext(context.Background())
}

func (i ClusterActivityStreamMap) ToClusterActivityStreamMapOutputWithContext(ctx context.Context) ClusterActivityStreamMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterActivityStreamMapOutput)
}

type ClusterActivityStreamOutput struct{ *pulumi.OutputState }

func (ClusterActivityStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterActivityStream)(nil)).Elem()
}

func (o ClusterActivityStreamOutput) ToClusterActivityStreamOutput() ClusterActivityStreamOutput {
	return o
}

func (o ClusterActivityStreamOutput) ToClusterActivityStreamOutputWithContext(ctx context.Context) ClusterActivityStreamOutput {
	return o
}

func (o ClusterActivityStreamOutput) EngineNativeAuditFieldsIncluded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ClusterActivityStream) pulumi.BoolPtrOutput { return v.EngineNativeAuditFieldsIncluded }).(pulumi.BoolPtrOutput)
}

func (o ClusterActivityStreamOutput) KinesisStreamName() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterActivityStream) pulumi.StringOutput { return v.KinesisStreamName }).(pulumi.StringOutput)
}

func (o ClusterActivityStreamOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterActivityStream) pulumi.StringOutput { return v.KmsKeyId }).(pulumi.StringOutput)
}

func (o ClusterActivityStreamOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterActivityStream) pulumi.StringOutput { return v.Mode }).(pulumi.StringOutput)
}

func (o ClusterActivityStreamOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ClusterActivityStream) pulumi.StringOutput { return v.ResourceArn }).(pulumi.StringOutput)
}

type ClusterActivityStreamArrayOutput struct{ *pulumi.OutputState }

func (ClusterActivityStreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClusterActivityStream)(nil)).Elem()
}

func (o ClusterActivityStreamArrayOutput) ToClusterActivityStreamArrayOutput() ClusterActivityStreamArrayOutput {
	return o
}

func (o ClusterActivityStreamArrayOutput) ToClusterActivityStreamArrayOutputWithContext(ctx context.Context) ClusterActivityStreamArrayOutput {
	return o
}

func (o ClusterActivityStreamArrayOutput) Index(i pulumi.IntInput) ClusterActivityStreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ClusterActivityStream {
		return vs[0].([]*ClusterActivityStream)[vs[1].(int)]
	}).(ClusterActivityStreamOutput)
}

type ClusterActivityStreamMapOutput struct{ *pulumi.OutputState }

func (ClusterActivityStreamMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClusterActivityStream)(nil)).Elem()
}

func (o ClusterActivityStreamMapOutput) ToClusterActivityStreamMapOutput() ClusterActivityStreamMapOutput {
	return o
}

func (o ClusterActivityStreamMapOutput) ToClusterActivityStreamMapOutputWithContext(ctx context.Context) ClusterActivityStreamMapOutput {
	return o
}

func (o ClusterActivityStreamMapOutput) MapIndex(k pulumi.StringInput) ClusterActivityStreamOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ClusterActivityStream {
		return vs[0].(map[string]*ClusterActivityStream)[vs[1].(string)]
	}).(ClusterActivityStreamOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterActivityStreamInput)(nil)).Elem(), &ClusterActivityStream{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterActivityStreamArrayInput)(nil)).Elem(), ClusterActivityStreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterActivityStreamMapInput)(nil)).Elem(), ClusterActivityStreamMap{})
	pulumi.RegisterOutputType(ClusterActivityStreamOutput{})
	pulumi.RegisterOutputType(ClusterActivityStreamArrayOutput{})
	pulumi.RegisterOutputType(ClusterActivityStreamMapOutput{})
}
