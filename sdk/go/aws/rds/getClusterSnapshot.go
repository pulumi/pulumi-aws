// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to get information about a DB Cluster Snapshot for use when provisioning DB clusters.
// 
// ~> **NOTE:** This data source does not apply to snapshots created on DB Instances. 
// See the [`aws_db_snapshot` data source](/docs/providers/aws/d/db_snapshot.html) for DB Instance snapshots.
func LookupClusterSnapshot(ctx *pulumi.Context, args *GetClusterSnapshotArgs) (*GetClusterSnapshotResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["dbClusterIdentifier"] = args.DbClusterIdentifier
		inputs["dbClusterSnapshotIdentifier"] = args.DbClusterSnapshotIdentifier
		inputs["includePublic"] = args.IncludePublic
		inputs["includeShared"] = args.IncludeShared
		inputs["mostRecent"] = args.MostRecent
		inputs["snapshotType"] = args.SnapshotType
	}
	outputs, err := ctx.Invoke("aws:rds/getClusterSnapshot:getClusterSnapshot", inputs)
	if err != nil {
		return nil, err
	}
	return &GetClusterSnapshotResult{
		AllocatedStorage: outputs["allocatedStorage"],
		AvailabilityZones: outputs["availabilityZones"],
		DbClusterSnapshotArn: outputs["dbClusterSnapshotArn"],
		Engine: outputs["engine"],
		EngineVersion: outputs["engineVersion"],
		KmsKeyId: outputs["kmsKeyId"],
		LicenseModel: outputs["licenseModel"],
		Port: outputs["port"],
		SnapshotCreateTime: outputs["snapshotCreateTime"],
		SourceDbClusterSnapshotArn: outputs["sourceDbClusterSnapshotArn"],
		Status: outputs["status"],
		StorageEncrypted: outputs["storageEncrypted"],
		VpcId: outputs["vpcId"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getClusterSnapshot.
type GetClusterSnapshotArgs struct {
	// Returns the list of snapshots created by the specific db_cluster
	DbClusterIdentifier interface{}
	// Returns information on a specific snapshot_id.
	DbClusterSnapshotIdentifier interface{}
	// Set this value to true to include manual DB Cluster Snapshots that are public and can be
	// copied or restored by any AWS account, otherwise set this value to false. The default is `false`.
	IncludePublic interface{}
	// Set this value to true to include shared manual DB Cluster Snapshots from other
	// AWS accounts that this AWS account has been given permission to copy or restore, otherwise set this value to false.
	// The default is `false`.
	IncludeShared interface{}
	// If more than one result is returned, use the most recent Snapshot.
	MostRecent interface{}
	// The type of snapshots to be returned. If you don't specify a SnapshotType
	// value, then both automated and manual DB cluster snapshots are returned. Shared and public DB Cluster Snapshots are not
	// included in the returned results by default. Possible values are, `automated`, `manual`, `shared` and `public`.
	SnapshotType interface{}
}

// A collection of values returned by getClusterSnapshot.
type GetClusterSnapshotResult struct {
	// Specifies the allocated storage size in gigabytes (GB).
	AllocatedStorage interface{}
	// List of EC2 Availability Zones that instances in the DB cluster snapshot can be restored in.
	AvailabilityZones interface{}
	// The Amazon Resource Name (ARN) for the DB Cluster Snapshot.
	DbClusterSnapshotArn interface{}
	// Specifies the name of the database engine.
	Engine interface{}
	// Version of the database engine for this DB cluster snapshot.
	EngineVersion interface{}
	// If storage_encrypted is true, the AWS KMS key identifier for the encrypted DB cluster snapshot.
	KmsKeyId interface{}
	// License model information for the restored DB cluster.
	LicenseModel interface{}
	// Port that the DB cluster was listening on at the time of the snapshot.
	Port interface{}
	// Time when the snapshot was taken, in Universal Coordinated Time (UTC).
	SnapshotCreateTime interface{}
	SourceDbClusterSnapshotArn interface{}
	// The status of this DB Cluster Snapshot.
	Status interface{}
	// Specifies whether the DB cluster snapshot is encrypted.
	StorageEncrypted interface{}
	// The VPC ID associated with the DB cluster snapshot.
	VpcId interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
