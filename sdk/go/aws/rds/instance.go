// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an RDS instance resource.  A DB instance is an isolated database
// environment in the cloud.  A DB instance can contain multiple user-created
// databases.
// 
// Changes to a DB instance can occur when you manually change a parameter, such as
// `allocated_storage`, and are reflected in the next maintenance window. Because
// of this, Terraform may report a difference in its planning phase because a
// modification has not yet taken place. You can use the `apply_immediately` flag
// to instruct the service to apply the change immediately (see documentation
// below).
// 
// When upgrading the major version of an engine, `allow_major_version_upgrade`
// must be set to `true`.
// 
// > **Note:** using `apply_immediately` can result in a brief downtime as the
// server reboots. See the AWS Docs on [RDS Maintenance][2] for more information.
// 
// > **Note:** All arguments including the username and password will be stored in
// the raw state as plain-text. [Read more about sensitive data in
// state](https://www.terraform.io/docs/state/sensitive-data.html).
// 
// ## RDS Instance Class Types
// 
// Amazon RDS supports three types of instance classes: Standard, Memory Optimized,
// and Burstable Performance. For more information please read the AWS RDS documentation
// about [DB Instance Class Types](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html)
type Instance struct {
	s *pulumi.ResourceState
}

// NewInstance registers a new resource with the given unique name, arguments, and options.
func NewInstance(ctx *pulumi.Context,
	name string, args *InstanceArgs, opts ...pulumi.ResourceOpt) (*Instance, error) {
	if args == nil || args.InstanceClass == nil {
		return nil, errors.New("missing required argument 'InstanceClass'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["allocatedStorage"] = nil
		inputs["allowMajorVersionUpgrade"] = nil
		inputs["applyImmediately"] = nil
		inputs["autoMinorVersionUpgrade"] = nil
		inputs["availabilityZone"] = nil
		inputs["backupRetentionPeriod"] = nil
		inputs["backupWindow"] = nil
		inputs["characterSetName"] = nil
		inputs["copyTagsToSnapshot"] = nil
		inputs["dbSubnetGroupName"] = nil
		inputs["deletionProtection"] = nil
		inputs["domain"] = nil
		inputs["domainIamRoleName"] = nil
		inputs["enabledCloudwatchLogsExports"] = nil
		inputs["engine"] = nil
		inputs["engineVersion"] = nil
		inputs["finalSnapshotIdentifier"] = nil
		inputs["iamDatabaseAuthenticationEnabled"] = nil
		inputs["identifier"] = nil
		inputs["identifierPrefix"] = nil
		inputs["instanceClass"] = nil
		inputs["iops"] = nil
		inputs["kmsKeyId"] = nil
		inputs["licenseModel"] = nil
		inputs["maintenanceWindow"] = nil
		inputs["monitoringInterval"] = nil
		inputs["monitoringRoleArn"] = nil
		inputs["multiAz"] = nil
		inputs["name"] = nil
		inputs["optionGroupName"] = nil
		inputs["parameterGroupName"] = nil
		inputs["password"] = nil
		inputs["port"] = nil
		inputs["publiclyAccessible"] = nil
		inputs["replicateSourceDb"] = nil
		inputs["s3Import"] = nil
		inputs["securityGroupNames"] = nil
		inputs["skipFinalSnapshot"] = nil
		inputs["snapshotIdentifier"] = nil
		inputs["storageEncrypted"] = nil
		inputs["storageType"] = nil
		inputs["tags"] = nil
		inputs["timezone"] = nil
		inputs["username"] = nil
		inputs["vpcSecurityGroupIds"] = nil
	} else {
		inputs["allocatedStorage"] = args.AllocatedStorage
		inputs["allowMajorVersionUpgrade"] = args.AllowMajorVersionUpgrade
		inputs["applyImmediately"] = args.ApplyImmediately
		inputs["autoMinorVersionUpgrade"] = args.AutoMinorVersionUpgrade
		inputs["availabilityZone"] = args.AvailabilityZone
		inputs["backupRetentionPeriod"] = args.BackupRetentionPeriod
		inputs["backupWindow"] = args.BackupWindow
		inputs["characterSetName"] = args.CharacterSetName
		inputs["copyTagsToSnapshot"] = args.CopyTagsToSnapshot
		inputs["dbSubnetGroupName"] = args.DbSubnetGroupName
		inputs["deletionProtection"] = args.DeletionProtection
		inputs["domain"] = args.Domain
		inputs["domainIamRoleName"] = args.DomainIamRoleName
		inputs["enabledCloudwatchLogsExports"] = args.EnabledCloudwatchLogsExports
		inputs["engine"] = args.Engine
		inputs["engineVersion"] = args.EngineVersion
		inputs["finalSnapshotIdentifier"] = args.FinalSnapshotIdentifier
		inputs["iamDatabaseAuthenticationEnabled"] = args.IamDatabaseAuthenticationEnabled
		inputs["identifier"] = args.Identifier
		inputs["identifierPrefix"] = args.IdentifierPrefix
		inputs["instanceClass"] = args.InstanceClass
		inputs["iops"] = args.Iops
		inputs["kmsKeyId"] = args.KmsKeyId
		inputs["licenseModel"] = args.LicenseModel
		inputs["maintenanceWindow"] = args.MaintenanceWindow
		inputs["monitoringInterval"] = args.MonitoringInterval
		inputs["monitoringRoleArn"] = args.MonitoringRoleArn
		inputs["multiAz"] = args.MultiAz
		inputs["name"] = args.Name
		inputs["optionGroupName"] = args.OptionGroupName
		inputs["parameterGroupName"] = args.ParameterGroupName
		inputs["password"] = args.Password
		inputs["port"] = args.Port
		inputs["publiclyAccessible"] = args.PubliclyAccessible
		inputs["replicateSourceDb"] = args.ReplicateSourceDb
		inputs["s3Import"] = args.S3Import
		inputs["securityGroupNames"] = args.SecurityGroupNames
		inputs["skipFinalSnapshot"] = args.SkipFinalSnapshot
		inputs["snapshotIdentifier"] = args.SnapshotIdentifier
		inputs["storageEncrypted"] = args.StorageEncrypted
		inputs["storageType"] = args.StorageType
		inputs["tags"] = args.Tags
		inputs["timezone"] = args.Timezone
		inputs["username"] = args.Username
		inputs["vpcSecurityGroupIds"] = args.VpcSecurityGroupIds
	}
	inputs["address"] = nil
	inputs["arn"] = nil
	inputs["caCertIdentifier"] = nil
	inputs["endpoint"] = nil
	inputs["hostedZoneId"] = nil
	inputs["replicas"] = nil
	inputs["resourceId"] = nil
	inputs["status"] = nil
	s, err := ctx.RegisterResource("aws:rds/instance:Instance", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Instance{s: s}, nil
}

// GetInstance gets an existing Instance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstance(ctx *pulumi.Context,
	name string, id pulumi.ID, state *InstanceState, opts ...pulumi.ResourceOpt) (*Instance, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["address"] = state.Address
		inputs["allocatedStorage"] = state.AllocatedStorage
		inputs["allowMajorVersionUpgrade"] = state.AllowMajorVersionUpgrade
		inputs["applyImmediately"] = state.ApplyImmediately
		inputs["arn"] = state.Arn
		inputs["autoMinorVersionUpgrade"] = state.AutoMinorVersionUpgrade
		inputs["availabilityZone"] = state.AvailabilityZone
		inputs["backupRetentionPeriod"] = state.BackupRetentionPeriod
		inputs["backupWindow"] = state.BackupWindow
		inputs["caCertIdentifier"] = state.CaCertIdentifier
		inputs["characterSetName"] = state.CharacterSetName
		inputs["copyTagsToSnapshot"] = state.CopyTagsToSnapshot
		inputs["dbSubnetGroupName"] = state.DbSubnetGroupName
		inputs["deletionProtection"] = state.DeletionProtection
		inputs["domain"] = state.Domain
		inputs["domainIamRoleName"] = state.DomainIamRoleName
		inputs["enabledCloudwatchLogsExports"] = state.EnabledCloudwatchLogsExports
		inputs["endpoint"] = state.Endpoint
		inputs["engine"] = state.Engine
		inputs["engineVersion"] = state.EngineVersion
		inputs["finalSnapshotIdentifier"] = state.FinalSnapshotIdentifier
		inputs["hostedZoneId"] = state.HostedZoneId
		inputs["iamDatabaseAuthenticationEnabled"] = state.IamDatabaseAuthenticationEnabled
		inputs["identifier"] = state.Identifier
		inputs["identifierPrefix"] = state.IdentifierPrefix
		inputs["instanceClass"] = state.InstanceClass
		inputs["iops"] = state.Iops
		inputs["kmsKeyId"] = state.KmsKeyId
		inputs["licenseModel"] = state.LicenseModel
		inputs["maintenanceWindow"] = state.MaintenanceWindow
		inputs["monitoringInterval"] = state.MonitoringInterval
		inputs["monitoringRoleArn"] = state.MonitoringRoleArn
		inputs["multiAz"] = state.MultiAz
		inputs["name"] = state.Name
		inputs["optionGroupName"] = state.OptionGroupName
		inputs["parameterGroupName"] = state.ParameterGroupName
		inputs["password"] = state.Password
		inputs["port"] = state.Port
		inputs["publiclyAccessible"] = state.PubliclyAccessible
		inputs["replicas"] = state.Replicas
		inputs["replicateSourceDb"] = state.ReplicateSourceDb
		inputs["resourceId"] = state.ResourceId
		inputs["s3Import"] = state.S3Import
		inputs["securityGroupNames"] = state.SecurityGroupNames
		inputs["skipFinalSnapshot"] = state.SkipFinalSnapshot
		inputs["snapshotIdentifier"] = state.SnapshotIdentifier
		inputs["status"] = state.Status
		inputs["storageEncrypted"] = state.StorageEncrypted
		inputs["storageType"] = state.StorageType
		inputs["tags"] = state.Tags
		inputs["timezone"] = state.Timezone
		inputs["username"] = state.Username
		inputs["vpcSecurityGroupIds"] = state.VpcSecurityGroupIds
	}
	s, err := ctx.ReadResource("aws:rds/instance:Instance", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Instance{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Instance) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Instance) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The hostname of the RDS instance. See also `endpoint` and `port`.
func (r *Instance) Address() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["address"])
}

// (Required unless a `snapshot_identifier` or
// `replicate_source_db` is provided) The allocated storage in gibibytes.
func (r *Instance) AllocatedStorage() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["allocatedStorage"])
}

// Indicates that major version
// upgrades are allowed. Changing this parameter does not result in an outage and
// the change is asynchronously applied as soon as possible.
func (r *Instance) AllowMajorVersionUpgrade() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["allowMajorVersionUpgrade"])
}

// Specifies whether any database modifications
// are applied immediately, or during the next maintenance window. Default is
// `false`. See [Amazon RDS Documentation for more
// information.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)
// for more information.
func (r *Instance) ApplyImmediately() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["applyImmediately"])
}

// The ARN of the RDS instance.
func (r *Instance) Arn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["arn"])
}

// Indicates that minor engine upgrades
// will be applied automatically to the DB instance during the maintenance window.
// Defaults to true.
func (r *Instance) AutoMinorVersionUpgrade() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["autoMinorVersionUpgrade"])
}

// The AZ for the RDS instance.
func (r *Instance) AvailabilityZone() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["availabilityZone"])
}

// The days to retain backups for. Must be
// between `0` and `35`. When creating a Read Replica the value must be greater than `0`. [See Read Replica][1].
func (r *Instance) BackupRetentionPeriod() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["backupRetentionPeriod"])
}

// The daily time range (in UTC) during which
// automated backups are created if they are enabled. Example: "09:46-10:16". Must
// not overlap with `maintenance_window`.
func (r *Instance) BackupWindow() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["backupWindow"])
}

// Specifies the identifier of the CA certificate for the
// DB instance.
func (r *Instance) CaCertIdentifier() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["caCertIdentifier"])
}

// The character set name to use for DB
// encoding in Oracle instances. This can't be changed. See [Oracle Character Sets
// Supported in Amazon
// RDS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.OracleCharacterSets.html)
// for more information.
func (r *Instance) CharacterSetName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["characterSetName"])
}

// Copy all Instance `tags` to snapshots. Default is `false`.
func (r *Instance) CopyTagsToSnapshot() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["copyTagsToSnapshot"])
}

// Name of [DB subnet group](https://www.terraform.io/docs/providers/aws/r/db_subnet_group.html). DB instance will
// be created in the VPC associated with the DB subnet group. If unspecified, will
// be created in the `default` VPC, or in EC2 Classic, if available. When working
// with read replicas, it needs to be specified only if the source database
// specifies an instance in another AWS Region. See [DBSubnetGroupName in API
// action CreateDBInstanceReadReplica](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstanceReadReplica.html)
// for additional read replica contraints.
func (r *Instance) DbSubnetGroupName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["dbSubnetGroupName"])
}

// If the DB instance should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`.
func (r *Instance) DeletionProtection() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["deletionProtection"])
}

// The ID of the Directory Service Active Directory domain to create the instance in.
func (r *Instance) Domain() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["domain"])
}

// The name of the IAM role to be used when making API calls to the Directory Service.
func (r *Instance) DomainIamRoleName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["domainIamRoleName"])
}

// List of log types to enable for exporting to CloudWatch logs. If omitted, no logs will be exported. Valid values (depending on `engine`): `alert`, `audit`, `error`, `general`, `listener`, `slowquery`, `trace`, `postgresql` (PostgreSQL), `upgrade` (PostgreSQL).
func (r *Instance) EnabledCloudwatchLogsExports() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["enabledCloudwatchLogsExports"])
}

// The connection endpoint in `address:port` format.
func (r *Instance) Endpoint() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["endpoint"])
}

// (Required unless a `snapshot_identifier` or `replicate_source_db`
// is provided) The database engine to use.  For supported values, see the Engine parameter in [API action CreateDBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html).
// Note that for Amazon Aurora instances the engine must match the [DB cluster](https://www.terraform.io/docs/providers/aws/r/rds_cluster.html)'s engine'.
// For information on the difference between the available Aurora MySQL engines
// see [Comparison between Aurora MySQL 1 and Aurora MySQL 2](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AuroraMySQL.Updates.20180206.html)
// in the Amazon RDS User Guide.
func (r *Instance) Engine() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["engine"])
}

// The engine version to use. If `auto_minor_version_upgrade`
// is enabled, you can provide a prefix of the version such as `5.7` (for `5.7.10`) and
// this attribute will ignore differences in the patch version automatically (e.g. `5.7.17`).
// For supported values, see the EngineVersion parameter in [API action CreateDBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html).
// Note that for Amazon Aurora instances the engine version must match the [DB cluster](https://www.terraform.io/docs/providers/aws/r/rds_cluster.html)'s engine version'.
func (r *Instance) EngineVersion() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["engineVersion"])
}

// The name of your final DB snapshot
// when this DB instance is deleted. If omitted, no final snapshot will be made.
func (r *Instance) FinalSnapshotIdentifier() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["finalSnapshotIdentifier"])
}

// The canonical hosted zone ID of the DB instance (to be used
// in a Route 53 Alias record).
func (r *Instance) HostedZoneId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["hostedZoneId"])
}

// Specifies whether or
// mappings of AWS Identity and Access Management (IAM) accounts to database
// accounts is enabled.
func (r *Instance) IamDatabaseAuthenticationEnabled() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["iamDatabaseAuthenticationEnabled"])
}

// The name of the RDS instance,
// if omitted, Terraform will assign a random, unique identifier.
func (r *Instance) Identifier() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["identifier"])
}

// Creates a unique
// identifier beginning with the specified prefix. Conflicts with `identifier`.
func (r *Instance) IdentifierPrefix() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["identifierPrefix"])
}

// The instance type of the RDS instance.
func (r *Instance) InstanceClass() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["instanceClass"])
}

// The amount of provisioned IOPS. Setting this implies a
// storage_type of "io1".
func (r *Instance) Iops() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["iops"])
}

// The ARN for the KMS encryption key. If creating an
// encrypted replica, set this to the destination KMS ARN.
func (r *Instance) KmsKeyId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["kmsKeyId"])
}

// (Optional, but required for some DB engines, i.e. Oracle
// SE1) License model information for this DB instance.
func (r *Instance) LicenseModel() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["licenseModel"])
}

// The window to perform maintenance in.
// Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00". See [RDS
// Maintenance Window
// docs](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow)
// for more information.
func (r *Instance) MaintenanceWindow() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["maintenanceWindow"])
}

// The interval, in seconds, between points
// when Enhanced Monitoring metrics are collected for the DB instance. To disable
// collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid
// Values: 0, 1, 5, 10, 15, 30, 60.
func (r *Instance) MonitoringInterval() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["monitoringInterval"])
}

// The ARN for the IAM role that permits RDS
// to send enhanced monitoring metrics to CloudWatch Logs. You can find more
// information on the [AWS
// Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.html)
// what IAM permissions are needed to allow Enhanced Monitoring for RDS Instances.
func (r *Instance) MonitoringRoleArn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["monitoringRoleArn"])
}

// Specifies if the RDS instance is multi-AZ
func (r *Instance) MultiAz() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["multiAz"])
}

// The name of the database to create when the DB instance is created. If this parameter is not specified, no database is created in the DB instance. Note that this does not apply for Oracle or SQL Server engines. See the [AWS documentation](http://docs.aws.amazon.com/cli/latest/reference/rds/create-db-instance.html) for more details on what applies for those engines.
func (r *Instance) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// Name of the DB option group to associate.
func (r *Instance) OptionGroupName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["optionGroupName"])
}

// Name of the DB parameter group to
// associate.
func (r *Instance) ParameterGroupName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["parameterGroupName"])
}

// (Required unless a `snapshot_identifier` or `replicate_source_db`
// is provided) Password for the master DB user. Note that this may show up in
// logs, and it will be stored in the state file.
func (r *Instance) Password() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["password"])
}

// The port on which the DB accepts connections.
func (r *Instance) Port() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["port"])
}

// Bool to control if instance is publicly
// accessible. Default is `false`.
func (r *Instance) PubliclyAccessible() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["publiclyAccessible"])
}

func (r *Instance) Replicas() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["replicas"])
}

// Specifies that this resource is a Replicate
// database, and to use this value as the source database. This correlates to the
// `identifier` of another Amazon RDS Database to replicate. Note that if you are
// creating a cross-region replica of an encrypted database you will also need to
// specify a `kms_key_id`. See [DB Instance Replication][1] and [Working with
// PostgreSQL and MySQL Read Replicas](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReadRepl.html)
// for more information on using Replication.
func (r *Instance) ReplicateSourceDb() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["replicateSourceDb"])
}

// The RDS Resource ID of this instance.
func (r *Instance) ResourceId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["resourceId"])
}

// Restore from a Percona Xtrabackup in S3.  See [Importing Data into an Amazon RDS MySQL DB Instance](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/MySQL.Procedural.Importing.html)
func (r *Instance) S3Import() *pulumi.Output {
	return r.s.State["s3Import"]
}

// List of DB Security Groups to
// associate. Only used for [DB Instances on the _EC2-Classic_
// Platform](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.html#USER_VPC.FindDefaultVPC).
func (r *Instance) SecurityGroupNames() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["securityGroupNames"])
}

// Determines whether a final DB snapshot is
// created before the DB instance is deleted. If true is specified, no DBSnapshot
// is created. If false is specified, a DB snapshot is created before the DB
// instance is deleted, using the value from `final_snapshot_identifier`. Default
// is `false`.
func (r *Instance) SkipFinalSnapshot() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["skipFinalSnapshot"])
}

// Specifies whether or not to create this
// database from a snapshot. This correlates to the snapshot ID you'd find in the
// RDS console, e.g: rds:production-2015-06-26-06-05.
func (r *Instance) SnapshotIdentifier() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["snapshotIdentifier"])
}

// The RDS instance status.
func (r *Instance) Status() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["status"])
}

// Specifies whether the DB instance is
// encrypted. Note that if you are creating a cross-region read replica this field
// is ignored and you should instead declare `kms_key_id` with a valid ARN. The
// default is `false` if not specified.
func (r *Instance) StorageEncrypted() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["storageEncrypted"])
}

// One of "standard" (magnetic), "gp2" (general
// purpose SSD), or "io1" (provisioned IOPS SSD). The default is "io1" if `iops` is
// specified, "standard" if not. Note that this behaviour is different from the AWS
// web console, where the default is "gp2".
func (r *Instance) StorageType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["storageType"])
}

// A mapping of tags to assign to the resource.
func (r *Instance) Tags() *pulumi.MapOutput {
	return (*pulumi.MapOutput)(r.s.State["tags"])
}

// Time zone of the DB instance. `timezone` is currently
// only supported by Microsoft SQL Server. The `timezone` can only be set on
// creation. See [MSSQL User
// Guide](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.TimeZone)
// for more information.
func (r *Instance) Timezone() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["timezone"])
}

// (Required unless a `snapshot_identifier` or `replicate_source_db`
// is provided) Username for the master DB user.
func (r *Instance) Username() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["username"])
}

// List of VPC security groups to
// associate.
func (r *Instance) VpcSecurityGroupIds() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["vpcSecurityGroupIds"])
}

// Input properties used for looking up and filtering Instance resources.
type InstanceState struct {
	// The hostname of the RDS instance. See also `endpoint` and `port`.
	Address interface{}
	// (Required unless a `snapshot_identifier` or
	// `replicate_source_db` is provided) The allocated storage in gibibytes.
	AllocatedStorage interface{}
	// Indicates that major version
	// upgrades are allowed. Changing this parameter does not result in an outage and
	// the change is asynchronously applied as soon as possible.
	AllowMajorVersionUpgrade interface{}
	// Specifies whether any database modifications
	// are applied immediately, or during the next maintenance window. Default is
	// `false`. See [Amazon RDS Documentation for more
	// information.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)
	// for more information.
	ApplyImmediately interface{}
	// The ARN of the RDS instance.
	Arn interface{}
	// Indicates that minor engine upgrades
	// will be applied automatically to the DB instance during the maintenance window.
	// Defaults to true.
	AutoMinorVersionUpgrade interface{}
	// The AZ for the RDS instance.
	AvailabilityZone interface{}
	// The days to retain backups for. Must be
	// between `0` and `35`. When creating a Read Replica the value must be greater than `0`. [See Read Replica][1].
	BackupRetentionPeriod interface{}
	// The daily time range (in UTC) during which
	// automated backups are created if they are enabled. Example: "09:46-10:16". Must
	// not overlap with `maintenance_window`.
	BackupWindow interface{}
	// Specifies the identifier of the CA certificate for the
	// DB instance.
	CaCertIdentifier interface{}
	// The character set name to use for DB
	// encoding in Oracle instances. This can't be changed. See [Oracle Character Sets
	// Supported in Amazon
	// RDS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.OracleCharacterSets.html)
	// for more information.
	CharacterSetName interface{}
	// Copy all Instance `tags` to snapshots. Default is `false`.
	CopyTagsToSnapshot interface{}
	// Name of [DB subnet group](https://www.terraform.io/docs/providers/aws/r/db_subnet_group.html). DB instance will
	// be created in the VPC associated with the DB subnet group. If unspecified, will
	// be created in the `default` VPC, or in EC2 Classic, if available. When working
	// with read replicas, it needs to be specified only if the source database
	// specifies an instance in another AWS Region. See [DBSubnetGroupName in API
	// action CreateDBInstanceReadReplica](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstanceReadReplica.html)
	// for additional read replica contraints.
	DbSubnetGroupName interface{}
	// If the DB instance should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`.
	DeletionProtection interface{}
	// The ID of the Directory Service Active Directory domain to create the instance in.
	Domain interface{}
	// The name of the IAM role to be used when making API calls to the Directory Service.
	DomainIamRoleName interface{}
	// List of log types to enable for exporting to CloudWatch logs. If omitted, no logs will be exported. Valid values (depending on `engine`): `alert`, `audit`, `error`, `general`, `listener`, `slowquery`, `trace`, `postgresql` (PostgreSQL), `upgrade` (PostgreSQL).
	EnabledCloudwatchLogsExports interface{}
	// The connection endpoint in `address:port` format.
	Endpoint interface{}
	// (Required unless a `snapshot_identifier` or `replicate_source_db`
	// is provided) The database engine to use.  For supported values, see the Engine parameter in [API action CreateDBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html).
	// Note that for Amazon Aurora instances the engine must match the [DB cluster](https://www.terraform.io/docs/providers/aws/r/rds_cluster.html)'s engine'.
	// For information on the difference between the available Aurora MySQL engines
	// see [Comparison between Aurora MySQL 1 and Aurora MySQL 2](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AuroraMySQL.Updates.20180206.html)
	// in the Amazon RDS User Guide.
	Engine interface{}
	// The engine version to use. If `auto_minor_version_upgrade`
	// is enabled, you can provide a prefix of the version such as `5.7` (for `5.7.10`) and
	// this attribute will ignore differences in the patch version automatically (e.g. `5.7.17`).
	// For supported values, see the EngineVersion parameter in [API action CreateDBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html).
	// Note that for Amazon Aurora instances the engine version must match the [DB cluster](https://www.terraform.io/docs/providers/aws/r/rds_cluster.html)'s engine version'.
	EngineVersion interface{}
	// The name of your final DB snapshot
	// when this DB instance is deleted. If omitted, no final snapshot will be made.
	FinalSnapshotIdentifier interface{}
	// The canonical hosted zone ID of the DB instance (to be used
	// in a Route 53 Alias record).
	HostedZoneId interface{}
	// Specifies whether or
	// mappings of AWS Identity and Access Management (IAM) accounts to database
	// accounts is enabled.
	IamDatabaseAuthenticationEnabled interface{}
	// The name of the RDS instance,
	// if omitted, Terraform will assign a random, unique identifier.
	Identifier interface{}
	// Creates a unique
	// identifier beginning with the specified prefix. Conflicts with `identifier`.
	IdentifierPrefix interface{}
	// The instance type of the RDS instance.
	InstanceClass interface{}
	// The amount of provisioned IOPS. Setting this implies a
	// storage_type of "io1".
	Iops interface{}
	// The ARN for the KMS encryption key. If creating an
	// encrypted replica, set this to the destination KMS ARN.
	KmsKeyId interface{}
	// (Optional, but required for some DB engines, i.e. Oracle
	// SE1) License model information for this DB instance.
	LicenseModel interface{}
	// The window to perform maintenance in.
	// Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00". See [RDS
	// Maintenance Window
	// docs](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow)
	// for more information.
	MaintenanceWindow interface{}
	// The interval, in seconds, between points
	// when Enhanced Monitoring metrics are collected for the DB instance. To disable
	// collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid
	// Values: 0, 1, 5, 10, 15, 30, 60.
	MonitoringInterval interface{}
	// The ARN for the IAM role that permits RDS
	// to send enhanced monitoring metrics to CloudWatch Logs. You can find more
	// information on the [AWS
	// Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.html)
	// what IAM permissions are needed to allow Enhanced Monitoring for RDS Instances.
	MonitoringRoleArn interface{}
	// Specifies if the RDS instance is multi-AZ
	MultiAz interface{}
	// The name of the database to create when the DB instance is created. If this parameter is not specified, no database is created in the DB instance. Note that this does not apply for Oracle or SQL Server engines. See the [AWS documentation](http://docs.aws.amazon.com/cli/latest/reference/rds/create-db-instance.html) for more details on what applies for those engines.
	Name interface{}
	// Name of the DB option group to associate.
	OptionGroupName interface{}
	// Name of the DB parameter group to
	// associate.
	ParameterGroupName interface{}
	// (Required unless a `snapshot_identifier` or `replicate_source_db`
	// is provided) Password for the master DB user. Note that this may show up in
	// logs, and it will be stored in the state file.
	Password interface{}
	// The port on which the DB accepts connections.
	Port interface{}
	// Bool to control if instance is publicly
	// accessible. Default is `false`.
	PubliclyAccessible interface{}
	Replicas interface{}
	// Specifies that this resource is a Replicate
	// database, and to use this value as the source database. This correlates to the
	// `identifier` of another Amazon RDS Database to replicate. Note that if you are
	// creating a cross-region replica of an encrypted database you will also need to
	// specify a `kms_key_id`. See [DB Instance Replication][1] and [Working with
	// PostgreSQL and MySQL Read Replicas](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReadRepl.html)
	// for more information on using Replication.
	ReplicateSourceDb interface{}
	// The RDS Resource ID of this instance.
	ResourceId interface{}
	// Restore from a Percona Xtrabackup in S3.  See [Importing Data into an Amazon RDS MySQL DB Instance](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/MySQL.Procedural.Importing.html)
	S3Import interface{}
	// List of DB Security Groups to
	// associate. Only used for [DB Instances on the _EC2-Classic_
	// Platform](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.html#USER_VPC.FindDefaultVPC).
	SecurityGroupNames interface{}
	// Determines whether a final DB snapshot is
	// created before the DB instance is deleted. If true is specified, no DBSnapshot
	// is created. If false is specified, a DB snapshot is created before the DB
	// instance is deleted, using the value from `final_snapshot_identifier`. Default
	// is `false`.
	SkipFinalSnapshot interface{}
	// Specifies whether or not to create this
	// database from a snapshot. This correlates to the snapshot ID you'd find in the
	// RDS console, e.g: rds:production-2015-06-26-06-05.
	SnapshotIdentifier interface{}
	// The RDS instance status.
	Status interface{}
	// Specifies whether the DB instance is
	// encrypted. Note that if you are creating a cross-region read replica this field
	// is ignored and you should instead declare `kms_key_id` with a valid ARN. The
	// default is `false` if not specified.
	StorageEncrypted interface{}
	// One of "standard" (magnetic), "gp2" (general
	// purpose SSD), or "io1" (provisioned IOPS SSD). The default is "io1" if `iops` is
	// specified, "standard" if not. Note that this behaviour is different from the AWS
	// web console, where the default is "gp2".
	StorageType interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
	// Time zone of the DB instance. `timezone` is currently
	// only supported by Microsoft SQL Server. The `timezone` can only be set on
	// creation. See [MSSQL User
	// Guide](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.TimeZone)
	// for more information.
	Timezone interface{}
	// (Required unless a `snapshot_identifier` or `replicate_source_db`
	// is provided) Username for the master DB user.
	Username interface{}
	// List of VPC security groups to
	// associate.
	VpcSecurityGroupIds interface{}
}

// The set of arguments for constructing a Instance resource.
type InstanceArgs struct {
	// (Required unless a `snapshot_identifier` or
	// `replicate_source_db` is provided) The allocated storage in gibibytes.
	AllocatedStorage interface{}
	// Indicates that major version
	// upgrades are allowed. Changing this parameter does not result in an outage and
	// the change is asynchronously applied as soon as possible.
	AllowMajorVersionUpgrade interface{}
	// Specifies whether any database modifications
	// are applied immediately, or during the next maintenance window. Default is
	// `false`. See [Amazon RDS Documentation for more
	// information.](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html)
	// for more information.
	ApplyImmediately interface{}
	// Indicates that minor engine upgrades
	// will be applied automatically to the DB instance during the maintenance window.
	// Defaults to true.
	AutoMinorVersionUpgrade interface{}
	// The AZ for the RDS instance.
	AvailabilityZone interface{}
	// The days to retain backups for. Must be
	// between `0` and `35`. When creating a Read Replica the value must be greater than `0`. [See Read Replica][1].
	BackupRetentionPeriod interface{}
	// The daily time range (in UTC) during which
	// automated backups are created if they are enabled. Example: "09:46-10:16". Must
	// not overlap with `maintenance_window`.
	BackupWindow interface{}
	// The character set name to use for DB
	// encoding in Oracle instances. This can't be changed. See [Oracle Character Sets
	// Supported in Amazon
	// RDS](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.OracleCharacterSets.html)
	// for more information.
	CharacterSetName interface{}
	// Copy all Instance `tags` to snapshots. Default is `false`.
	CopyTagsToSnapshot interface{}
	// Name of [DB subnet group](https://www.terraform.io/docs/providers/aws/r/db_subnet_group.html). DB instance will
	// be created in the VPC associated with the DB subnet group. If unspecified, will
	// be created in the `default` VPC, or in EC2 Classic, if available. When working
	// with read replicas, it needs to be specified only if the source database
	// specifies an instance in another AWS Region. See [DBSubnetGroupName in API
	// action CreateDBInstanceReadReplica](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstanceReadReplica.html)
	// for additional read replica contraints.
	DbSubnetGroupName interface{}
	// If the DB instance should have deletion protection enabled. The database can't be deleted when this value is set to `true`. The default is `false`.
	DeletionProtection interface{}
	// The ID of the Directory Service Active Directory domain to create the instance in.
	Domain interface{}
	// The name of the IAM role to be used when making API calls to the Directory Service.
	DomainIamRoleName interface{}
	// List of log types to enable for exporting to CloudWatch logs. If omitted, no logs will be exported. Valid values (depending on `engine`): `alert`, `audit`, `error`, `general`, `listener`, `slowquery`, `trace`, `postgresql` (PostgreSQL), `upgrade` (PostgreSQL).
	EnabledCloudwatchLogsExports interface{}
	// (Required unless a `snapshot_identifier` or `replicate_source_db`
	// is provided) The database engine to use.  For supported values, see the Engine parameter in [API action CreateDBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html).
	// Note that for Amazon Aurora instances the engine must match the [DB cluster](https://www.terraform.io/docs/providers/aws/r/rds_cluster.html)'s engine'.
	// For information on the difference between the available Aurora MySQL engines
	// see [Comparison between Aurora MySQL 1 and Aurora MySQL 2](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/AuroraMySQL.Updates.20180206.html)
	// in the Amazon RDS User Guide.
	Engine interface{}
	// The engine version to use. If `auto_minor_version_upgrade`
	// is enabled, you can provide a prefix of the version such as `5.7` (for `5.7.10`) and
	// this attribute will ignore differences in the patch version automatically (e.g. `5.7.17`).
	// For supported values, see the EngineVersion parameter in [API action CreateDBInstance](https://docs.aws.amazon.com/AmazonRDS/latest/APIReference/API_CreateDBInstance.html).
	// Note that for Amazon Aurora instances the engine version must match the [DB cluster](https://www.terraform.io/docs/providers/aws/r/rds_cluster.html)'s engine version'.
	EngineVersion interface{}
	// The name of your final DB snapshot
	// when this DB instance is deleted. If omitted, no final snapshot will be made.
	FinalSnapshotIdentifier interface{}
	// Specifies whether or
	// mappings of AWS Identity and Access Management (IAM) accounts to database
	// accounts is enabled.
	IamDatabaseAuthenticationEnabled interface{}
	// The name of the RDS instance,
	// if omitted, Terraform will assign a random, unique identifier.
	Identifier interface{}
	// Creates a unique
	// identifier beginning with the specified prefix. Conflicts with `identifier`.
	IdentifierPrefix interface{}
	// The instance type of the RDS instance.
	InstanceClass interface{}
	// The amount of provisioned IOPS. Setting this implies a
	// storage_type of "io1".
	Iops interface{}
	// The ARN for the KMS encryption key. If creating an
	// encrypted replica, set this to the destination KMS ARN.
	KmsKeyId interface{}
	// (Optional, but required for some DB engines, i.e. Oracle
	// SE1) License model information for this DB instance.
	LicenseModel interface{}
	// The window to perform maintenance in.
	// Syntax: "ddd:hh24:mi-ddd:hh24:mi". Eg: "Mon:00:00-Mon:03:00". See [RDS
	// Maintenance Window
	// docs](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_UpgradeDBInstance.Maintenance.html#AdjustingTheMaintenanceWindow)
	// for more information.
	MaintenanceWindow interface{}
	// The interval, in seconds, between points
	// when Enhanced Monitoring metrics are collected for the DB instance. To disable
	// collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid
	// Values: 0, 1, 5, 10, 15, 30, 60.
	MonitoringInterval interface{}
	// The ARN for the IAM role that permits RDS
	// to send enhanced monitoring metrics to CloudWatch Logs. You can find more
	// information on the [AWS
	// Documentation](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.html)
	// what IAM permissions are needed to allow Enhanced Monitoring for RDS Instances.
	MonitoringRoleArn interface{}
	// Specifies if the RDS instance is multi-AZ
	MultiAz interface{}
	// The name of the database to create when the DB instance is created. If this parameter is not specified, no database is created in the DB instance. Note that this does not apply for Oracle or SQL Server engines. See the [AWS documentation](http://docs.aws.amazon.com/cli/latest/reference/rds/create-db-instance.html) for more details on what applies for those engines.
	Name interface{}
	// Name of the DB option group to associate.
	OptionGroupName interface{}
	// Name of the DB parameter group to
	// associate.
	ParameterGroupName interface{}
	// (Required unless a `snapshot_identifier` or `replicate_source_db`
	// is provided) Password for the master DB user. Note that this may show up in
	// logs, and it will be stored in the state file.
	Password interface{}
	// The port on which the DB accepts connections.
	Port interface{}
	// Bool to control if instance is publicly
	// accessible. Default is `false`.
	PubliclyAccessible interface{}
	// Specifies that this resource is a Replicate
	// database, and to use this value as the source database. This correlates to the
	// `identifier` of another Amazon RDS Database to replicate. Note that if you are
	// creating a cross-region replica of an encrypted database you will also need to
	// specify a `kms_key_id`. See [DB Instance Replication][1] and [Working with
	// PostgreSQL and MySQL Read Replicas](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ReadRepl.html)
	// for more information on using Replication.
	ReplicateSourceDb interface{}
	// Restore from a Percona Xtrabackup in S3.  See [Importing Data into an Amazon RDS MySQL DB Instance](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/MySQL.Procedural.Importing.html)
	S3Import interface{}
	// List of DB Security Groups to
	// associate. Only used for [DB Instances on the _EC2-Classic_
	// Platform](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.html#USER_VPC.FindDefaultVPC).
	SecurityGroupNames interface{}
	// Determines whether a final DB snapshot is
	// created before the DB instance is deleted. If true is specified, no DBSnapshot
	// is created. If false is specified, a DB snapshot is created before the DB
	// instance is deleted, using the value from `final_snapshot_identifier`. Default
	// is `false`.
	SkipFinalSnapshot interface{}
	// Specifies whether or not to create this
	// database from a snapshot. This correlates to the snapshot ID you'd find in the
	// RDS console, e.g: rds:production-2015-06-26-06-05.
	SnapshotIdentifier interface{}
	// Specifies whether the DB instance is
	// encrypted. Note that if you are creating a cross-region read replica this field
	// is ignored and you should instead declare `kms_key_id` with a valid ARN. The
	// default is `false` if not specified.
	StorageEncrypted interface{}
	// One of "standard" (magnetic), "gp2" (general
	// purpose SSD), or "io1" (provisioned IOPS SSD). The default is "io1" if `iops` is
	// specified, "standard" if not. Note that this behaviour is different from the AWS
	// web console, where the default is "gp2".
	StorageType interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
	// Time zone of the DB instance. `timezone` is currently
	// only supported by Microsoft SQL Server. The `timezone` can only be set on
	// creation. See [MSSQL User
	// Guide](http://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_SQLServer.html#SQLServer.Concepts.General.TimeZone)
	// for more information.
	Timezone interface{}
	// (Required unless a `snapshot_identifier` or `replicate_source_db`
	// is provided) Username for the master DB user.
	Username interface{}
	// List of VPC security groups to
	// associate.
	VpcSecurityGroupIds interface{}
}
