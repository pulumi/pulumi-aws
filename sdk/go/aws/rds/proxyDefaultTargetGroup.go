// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to manage an RDS DB proxy default target group resource.
//
// The `rds.ProxyDefaultTargetGroup` behaves differently from normal resources, in that the provider does not _create_ or _destroy_ this resource, since it implicitly exists as part of an RDS DB Proxy. On the provider resource creation it is automatically imported and on resource destruction, the provider performs no actions in RDS.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/rds"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		exampleProxy, err := rds.NewProxy(ctx, "exampleProxy", &rds.ProxyArgs{
// 			DebugLogging:      pulumi.Bool(false),
// 			EngineFamily:      pulumi.String("MYSQL"),
// 			IdleClientTimeout: pulumi.Int(1800),
// 			RequireTls:        pulumi.Bool(true),
// 			RoleArn:           pulumi.Any(aws_iam_role.Example.Arn),
// 			VpcSecurityGroupIds: pulumi.StringArray{
// 				pulumi.Any(aws_security_group.Example.Id),
// 			},
// 			VpcSubnetIds: pulumi.StringArray{
// 				pulumi.Any(aws_subnet.Example.Id),
// 			},
// 			Auths: rds.ProxyAuthArray{
// 				&rds.ProxyAuthArgs{
// 					AuthScheme:  pulumi.String("SECRETS"),
// 					Description: pulumi.String("example"),
// 					IamAuth:     pulumi.String("DISABLED"),
// 					SecretArn:   pulumi.Any(aws_secretsmanager_secret.Example.Arn),
// 				},
// 			},
// 			Tags: pulumi.StringMap{
// 				"Name": pulumi.String("example"),
// 				"Key":  pulumi.String("value"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = rds.NewProxyDefaultTargetGroup(ctx, "exampleProxyDefaultTargetGroup", &rds.ProxyDefaultTargetGroupArgs{
// 			DbProxyName: exampleProxy.Name,
// 			ConnectionPoolConfig: &rds.ProxyDefaultTargetGroupConnectionPoolConfigArgs{
// 				ConnectionBorrowTimeout:   pulumi.Int(120),
// 				InitQuery:                 pulumi.String("SET x=1, y=2"),
// 				MaxConnectionsPercent:     pulumi.Int(100),
// 				MaxIdleConnectionsPercent: pulumi.Int(50),
// 				SessionPinningFilters: pulumi.StringArray{
// 					pulumi.String("EXCLUDE_VARIABLE_SETS"),
// 				},
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// DB proxy default target groups can be imported using the `db_proxy_name`, e.g.
//
// ```sh
//  $ pulumi import aws:rds/proxyDefaultTargetGroup:ProxyDefaultTargetGroup example example
// ```
type ProxyDefaultTargetGroup struct {
	pulumi.CustomResourceState

	// The Amazon Resource Name (ARN) representing the target group.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The settings that determine the size and behavior of the connection pool for the target group.
	ConnectionPoolConfig ProxyDefaultTargetGroupConnectionPoolConfigOutput `pulumi:"connectionPoolConfig"`
	// Name of the RDS DB Proxy.
	DbProxyName pulumi.StringOutput `pulumi:"dbProxyName"`
	// The name of the default target group.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewProxyDefaultTargetGroup registers a new resource with the given unique name, arguments, and options.
func NewProxyDefaultTargetGroup(ctx *pulumi.Context,
	name string, args *ProxyDefaultTargetGroupArgs, opts ...pulumi.ResourceOption) (*ProxyDefaultTargetGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DbProxyName == nil {
		return nil, errors.New("invalid value for required argument 'DbProxyName'")
	}
	var resource ProxyDefaultTargetGroup
	err := ctx.RegisterResource("aws:rds/proxyDefaultTargetGroup:ProxyDefaultTargetGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProxyDefaultTargetGroup gets an existing ProxyDefaultTargetGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProxyDefaultTargetGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProxyDefaultTargetGroupState, opts ...pulumi.ResourceOption) (*ProxyDefaultTargetGroup, error) {
	var resource ProxyDefaultTargetGroup
	err := ctx.ReadResource("aws:rds/proxyDefaultTargetGroup:ProxyDefaultTargetGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProxyDefaultTargetGroup resources.
type proxyDefaultTargetGroupState struct {
	// The Amazon Resource Name (ARN) representing the target group.
	Arn *string `pulumi:"arn"`
	// The settings that determine the size and behavior of the connection pool for the target group.
	ConnectionPoolConfig *ProxyDefaultTargetGroupConnectionPoolConfig `pulumi:"connectionPoolConfig"`
	// Name of the RDS DB Proxy.
	DbProxyName *string `pulumi:"dbProxyName"`
	// The name of the default target group.
	Name *string `pulumi:"name"`
}

type ProxyDefaultTargetGroupState struct {
	// The Amazon Resource Name (ARN) representing the target group.
	Arn pulumi.StringPtrInput
	// The settings that determine the size and behavior of the connection pool for the target group.
	ConnectionPoolConfig ProxyDefaultTargetGroupConnectionPoolConfigPtrInput
	// Name of the RDS DB Proxy.
	DbProxyName pulumi.StringPtrInput
	// The name of the default target group.
	Name pulumi.StringPtrInput
}

func (ProxyDefaultTargetGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*proxyDefaultTargetGroupState)(nil)).Elem()
}

type proxyDefaultTargetGroupArgs struct {
	// The settings that determine the size and behavior of the connection pool for the target group.
	ConnectionPoolConfig *ProxyDefaultTargetGroupConnectionPoolConfig `pulumi:"connectionPoolConfig"`
	// Name of the RDS DB Proxy.
	DbProxyName string `pulumi:"dbProxyName"`
}

// The set of arguments for constructing a ProxyDefaultTargetGroup resource.
type ProxyDefaultTargetGroupArgs struct {
	// The settings that determine the size and behavior of the connection pool for the target group.
	ConnectionPoolConfig ProxyDefaultTargetGroupConnectionPoolConfigPtrInput
	// Name of the RDS DB Proxy.
	DbProxyName pulumi.StringInput
}

func (ProxyDefaultTargetGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*proxyDefaultTargetGroupArgs)(nil)).Elem()
}

type ProxyDefaultTargetGroupInput interface {
	pulumi.Input

	ToProxyDefaultTargetGroupOutput() ProxyDefaultTargetGroupOutput
	ToProxyDefaultTargetGroupOutputWithContext(ctx context.Context) ProxyDefaultTargetGroupOutput
}

func (*ProxyDefaultTargetGroup) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyDefaultTargetGroup)(nil))
}

func (i *ProxyDefaultTargetGroup) ToProxyDefaultTargetGroupOutput() ProxyDefaultTargetGroupOutput {
	return i.ToProxyDefaultTargetGroupOutputWithContext(context.Background())
}

func (i *ProxyDefaultTargetGroup) ToProxyDefaultTargetGroupOutputWithContext(ctx context.Context) ProxyDefaultTargetGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyDefaultTargetGroupOutput)
}

func (i *ProxyDefaultTargetGroup) ToProxyDefaultTargetGroupPtrOutput() ProxyDefaultTargetGroupPtrOutput {
	return i.ToProxyDefaultTargetGroupPtrOutputWithContext(context.Background())
}

func (i *ProxyDefaultTargetGroup) ToProxyDefaultTargetGroupPtrOutputWithContext(ctx context.Context) ProxyDefaultTargetGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyDefaultTargetGroupPtrOutput)
}

type ProxyDefaultTargetGroupPtrInput interface {
	pulumi.Input

	ToProxyDefaultTargetGroupPtrOutput() ProxyDefaultTargetGroupPtrOutput
	ToProxyDefaultTargetGroupPtrOutputWithContext(ctx context.Context) ProxyDefaultTargetGroupPtrOutput
}

type proxyDefaultTargetGroupPtrType ProxyDefaultTargetGroupArgs

func (*proxyDefaultTargetGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyDefaultTargetGroup)(nil))
}

func (i *proxyDefaultTargetGroupPtrType) ToProxyDefaultTargetGroupPtrOutput() ProxyDefaultTargetGroupPtrOutput {
	return i.ToProxyDefaultTargetGroupPtrOutputWithContext(context.Background())
}

func (i *proxyDefaultTargetGroupPtrType) ToProxyDefaultTargetGroupPtrOutputWithContext(ctx context.Context) ProxyDefaultTargetGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyDefaultTargetGroupPtrOutput)
}

// ProxyDefaultTargetGroupArrayInput is an input type that accepts ProxyDefaultTargetGroupArray and ProxyDefaultTargetGroupArrayOutput values.
// You can construct a concrete instance of `ProxyDefaultTargetGroupArrayInput` via:
//
//          ProxyDefaultTargetGroupArray{ ProxyDefaultTargetGroupArgs{...} }
type ProxyDefaultTargetGroupArrayInput interface {
	pulumi.Input

	ToProxyDefaultTargetGroupArrayOutput() ProxyDefaultTargetGroupArrayOutput
	ToProxyDefaultTargetGroupArrayOutputWithContext(context.Context) ProxyDefaultTargetGroupArrayOutput
}

type ProxyDefaultTargetGroupArray []ProxyDefaultTargetGroupInput

func (ProxyDefaultTargetGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*ProxyDefaultTargetGroup)(nil))
}

func (i ProxyDefaultTargetGroupArray) ToProxyDefaultTargetGroupArrayOutput() ProxyDefaultTargetGroupArrayOutput {
	return i.ToProxyDefaultTargetGroupArrayOutputWithContext(context.Background())
}

func (i ProxyDefaultTargetGroupArray) ToProxyDefaultTargetGroupArrayOutputWithContext(ctx context.Context) ProxyDefaultTargetGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyDefaultTargetGroupArrayOutput)
}

// ProxyDefaultTargetGroupMapInput is an input type that accepts ProxyDefaultTargetGroupMap and ProxyDefaultTargetGroupMapOutput values.
// You can construct a concrete instance of `ProxyDefaultTargetGroupMapInput` via:
//
//          ProxyDefaultTargetGroupMap{ "key": ProxyDefaultTargetGroupArgs{...} }
type ProxyDefaultTargetGroupMapInput interface {
	pulumi.Input

	ToProxyDefaultTargetGroupMapOutput() ProxyDefaultTargetGroupMapOutput
	ToProxyDefaultTargetGroupMapOutputWithContext(context.Context) ProxyDefaultTargetGroupMapOutput
}

type ProxyDefaultTargetGroupMap map[string]ProxyDefaultTargetGroupInput

func (ProxyDefaultTargetGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*ProxyDefaultTargetGroup)(nil))
}

func (i ProxyDefaultTargetGroupMap) ToProxyDefaultTargetGroupMapOutput() ProxyDefaultTargetGroupMapOutput {
	return i.ToProxyDefaultTargetGroupMapOutputWithContext(context.Background())
}

func (i ProxyDefaultTargetGroupMap) ToProxyDefaultTargetGroupMapOutputWithContext(ctx context.Context) ProxyDefaultTargetGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyDefaultTargetGroupMapOutput)
}

type ProxyDefaultTargetGroupOutput struct {
	*pulumi.OutputState
}

func (ProxyDefaultTargetGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProxyDefaultTargetGroup)(nil))
}

func (o ProxyDefaultTargetGroupOutput) ToProxyDefaultTargetGroupOutput() ProxyDefaultTargetGroupOutput {
	return o
}

func (o ProxyDefaultTargetGroupOutput) ToProxyDefaultTargetGroupOutputWithContext(ctx context.Context) ProxyDefaultTargetGroupOutput {
	return o
}

func (o ProxyDefaultTargetGroupOutput) ToProxyDefaultTargetGroupPtrOutput() ProxyDefaultTargetGroupPtrOutput {
	return o.ToProxyDefaultTargetGroupPtrOutputWithContext(context.Background())
}

func (o ProxyDefaultTargetGroupOutput) ToProxyDefaultTargetGroupPtrOutputWithContext(ctx context.Context) ProxyDefaultTargetGroupPtrOutput {
	return o.ApplyT(func(v ProxyDefaultTargetGroup) *ProxyDefaultTargetGroup {
		return &v
	}).(ProxyDefaultTargetGroupPtrOutput)
}

type ProxyDefaultTargetGroupPtrOutput struct {
	*pulumi.OutputState
}

func (ProxyDefaultTargetGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyDefaultTargetGroup)(nil))
}

func (o ProxyDefaultTargetGroupPtrOutput) ToProxyDefaultTargetGroupPtrOutput() ProxyDefaultTargetGroupPtrOutput {
	return o
}

func (o ProxyDefaultTargetGroupPtrOutput) ToProxyDefaultTargetGroupPtrOutputWithContext(ctx context.Context) ProxyDefaultTargetGroupPtrOutput {
	return o
}

type ProxyDefaultTargetGroupArrayOutput struct{ *pulumi.OutputState }

func (ProxyDefaultTargetGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProxyDefaultTargetGroup)(nil))
}

func (o ProxyDefaultTargetGroupArrayOutput) ToProxyDefaultTargetGroupArrayOutput() ProxyDefaultTargetGroupArrayOutput {
	return o
}

func (o ProxyDefaultTargetGroupArrayOutput) ToProxyDefaultTargetGroupArrayOutputWithContext(ctx context.Context) ProxyDefaultTargetGroupArrayOutput {
	return o
}

func (o ProxyDefaultTargetGroupArrayOutput) Index(i pulumi.IntInput) ProxyDefaultTargetGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProxyDefaultTargetGroup {
		return vs[0].([]ProxyDefaultTargetGroup)[vs[1].(int)]
	}).(ProxyDefaultTargetGroupOutput)
}

type ProxyDefaultTargetGroupMapOutput struct{ *pulumi.OutputState }

func (ProxyDefaultTargetGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ProxyDefaultTargetGroup)(nil))
}

func (o ProxyDefaultTargetGroupMapOutput) ToProxyDefaultTargetGroupMapOutput() ProxyDefaultTargetGroupMapOutput {
	return o
}

func (o ProxyDefaultTargetGroupMapOutput) ToProxyDefaultTargetGroupMapOutputWithContext(ctx context.Context) ProxyDefaultTargetGroupMapOutput {
	return o
}

func (o ProxyDefaultTargetGroupMapOutput) MapIndex(k pulumi.StringInput) ProxyDefaultTargetGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ProxyDefaultTargetGroup {
		return vs[0].(map[string]ProxyDefaultTargetGroup)[vs[1].(string)]
	}).(ProxyDefaultTargetGroupOutput)
}

func init() {
	pulumi.RegisterOutputType(ProxyDefaultTargetGroupOutput{})
	pulumi.RegisterOutputType(ProxyDefaultTargetGroupPtrOutput{})
	pulumi.RegisterOutputType(ProxyDefaultTargetGroupArrayOutput{})
	pulumi.RegisterOutputType(ProxyDefaultTargetGroupMapOutput{})
}
