// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetCertificate(ctx *pulumi.Context, args *GetCertificateArgs, opts ...pulumi.InvokeOption) (*GetCertificateResult, error) {
	var rv GetCertificateResult
	err := ctx.Invoke("aws:rds/getCertificate:getCertificate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCertificate.
type GetCertificateArgs struct {
	Id              *string `pulumi:"id"`
	LatestValidTill *bool   `pulumi:"latestValidTill"`
}

// A collection of values returned by getCertificate.
type GetCertificateResult struct {
	Arn                       string `pulumi:"arn"`
	CertificateType           string `pulumi:"certificateType"`
	CustomerOverride          bool   `pulumi:"customerOverride"`
	CustomerOverrideValidTill string `pulumi:"customerOverrideValidTill"`
	Id                        string `pulumi:"id"`
	LatestValidTill           *bool  `pulumi:"latestValidTill"`
	Thumbprint                string `pulumi:"thumbprint"`
	ValidFrom                 string `pulumi:"validFrom"`
	ValidTill                 string `pulumi:"validTill"`
}

func GetCertificateOutput(ctx *pulumi.Context, args GetCertificateOutputArgs, opts ...pulumi.InvokeOption) GetCertificateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCertificateResult, error) {
			args := v.(GetCertificateArgs)
			r, err := GetCertificate(ctx, &args, opts...)
			var s GetCertificateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCertificateResultOutput)
}

// A collection of arguments for invoking getCertificate.
type GetCertificateOutputArgs struct {
	Id              pulumi.StringPtrInput `pulumi:"id"`
	LatestValidTill pulumi.BoolPtrInput   `pulumi:"latestValidTill"`
}

func (GetCertificateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateArgs)(nil)).Elem()
}

// A collection of values returned by getCertificate.
type GetCertificateResultOutput struct{ *pulumi.OutputState }

func (GetCertificateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCertificateResult)(nil)).Elem()
}

func (o GetCertificateResultOutput) ToGetCertificateResultOutput() GetCertificateResultOutput {
	return o
}

func (o GetCertificateResultOutput) ToGetCertificateResultOutputWithContext(ctx context.Context) GetCertificateResultOutput {
	return o
}

func (o GetCertificateResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o GetCertificateResultOutput) CertificateType() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateResult) string { return v.CertificateType }).(pulumi.StringOutput)
}

func (o GetCertificateResultOutput) CustomerOverride() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCertificateResult) bool { return v.CustomerOverride }).(pulumi.BoolOutput)
}

func (o GetCertificateResultOutput) CustomerOverrideValidTill() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateResult) string { return v.CustomerOverrideValidTill }).(pulumi.StringOutput)
}

func (o GetCertificateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCertificateResultOutput) LatestValidTill() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetCertificateResult) *bool { return v.LatestValidTill }).(pulumi.BoolPtrOutput)
}

func (o GetCertificateResultOutput) Thumbprint() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateResult) string { return v.Thumbprint }).(pulumi.StringOutput)
}

func (o GetCertificateResultOutput) ValidFrom() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateResult) string { return v.ValidFrom }).(pulumi.StringOutput)
}

func (o GetCertificateResultOutput) ValidTill() pulumi.StringOutput {
	return o.ApplyT(func(v GetCertificateResult) string { return v.ValidTill }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCertificateResultOutput{})
}
