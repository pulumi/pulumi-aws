// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an RDS DB cluster parameter group resource.
type ClusterParameterGroup struct {
	s *pulumi.ResourceState
}

// NewClusterParameterGroup registers a new resource with the given unique name, arguments, and options.
func NewClusterParameterGroup(ctx *pulumi.Context,
	name string, args *ClusterParameterGroupArgs, opts ...pulumi.ResourceOpt) (*ClusterParameterGroup, error) {
	if args == nil || args.Family == nil {
		return nil, errors.New("missing required argument 'Family'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["description"] = nil
		inputs["family"] = nil
		inputs["name"] = nil
		inputs["namePrefix"] = nil
		inputs["parameters"] = nil
		inputs["tags"] = nil
	} else {
		inputs["description"] = args.Description
		inputs["family"] = args.Family
		inputs["name"] = args.Name
		inputs["namePrefix"] = args.NamePrefix
		inputs["parameters"] = args.Parameters
		inputs["tags"] = args.Tags
	}
	inputs["arn"] = nil
	s, err := ctx.RegisterResource("aws:rds/clusterParameterGroup:ClusterParameterGroup", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ClusterParameterGroup{s: s}, nil
}

// GetClusterParameterGroup gets an existing ClusterParameterGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClusterParameterGroup(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ClusterParameterGroupState, opts ...pulumi.ResourceOpt) (*ClusterParameterGroup, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["description"] = state.Description
		inputs["family"] = state.Family
		inputs["name"] = state.Name
		inputs["namePrefix"] = state.NamePrefix
		inputs["parameters"] = state.Parameters
		inputs["tags"] = state.Tags
	}
	s, err := ctx.ReadResource("aws:rds/clusterParameterGroup:ClusterParameterGroup", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ClusterParameterGroup{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ClusterParameterGroup) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ClusterParameterGroup) ID() *pulumi.IDOutput {
	return r.s.ID
}

// The ARN of the db cluster parameter group.
func (r *ClusterParameterGroup) Arn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["arn"])
}

// The description of the DB cluster parameter group. Defaults to "Managed by Terraform".
func (r *ClusterParameterGroup) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

// The family of the DB cluster parameter group.
func (r *ClusterParameterGroup) Family() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["family"])
}

// The name of the DB parameter.
func (r *ClusterParameterGroup) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
func (r *ClusterParameterGroup) NamePrefix() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["namePrefix"])
}

// A list of DB parameters to apply. Note that parameters may differ from a family to an other. Full list of all parameters can be discovered via [`aws rds describe-db-cluster-parameters`](https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-cluster-parameters.html) after initial creation of the group.
func (r *ClusterParameterGroup) Parameters() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["parameters"])
}

// A mapping of tags to assign to the resource.
func (r *ClusterParameterGroup) Tags() *pulumi.MapOutput {
	return (*pulumi.MapOutput)(r.s.State["tags"])
}

// Input properties used for looking up and filtering ClusterParameterGroup resources.
type ClusterParameterGroupState struct {
	// The ARN of the db cluster parameter group.
	Arn interface{}
	// The description of the DB cluster parameter group. Defaults to "Managed by Terraform".
	Description interface{}
	// The family of the DB cluster parameter group.
	Family interface{}
	// The name of the DB parameter.
	Name interface{}
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix interface{}
	// A list of DB parameters to apply. Note that parameters may differ from a family to an other. Full list of all parameters can be discovered via [`aws rds describe-db-cluster-parameters`](https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-cluster-parameters.html) after initial creation of the group.
	Parameters interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
}

// The set of arguments for constructing a ClusterParameterGroup resource.
type ClusterParameterGroupArgs struct {
	// The description of the DB cluster parameter group. Defaults to "Managed by Terraform".
	Description interface{}
	// The family of the DB cluster parameter group.
	Family interface{}
	// The name of the DB parameter.
	Name interface{}
	// Creates a unique name beginning with the specified prefix. Conflicts with `name`.
	NamePrefix interface{}
	// A list of DB parameters to apply. Note that parameters may differ from a family to an other. Full list of all parameters can be discovered via [`aws rds describe-db-cluster-parameters`](https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-cluster-parameters.html) after initial creation of the group.
	Parameters interface{}
	// A mapping of tags to assign to the resource.
	Tags interface{}
}
