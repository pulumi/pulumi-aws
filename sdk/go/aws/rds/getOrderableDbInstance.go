// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Information about RDS orderable DB instances and valid parameter combinations.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/rds"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := rds.GetOrderableDbInstance(ctx, &rds.GetOrderableDbInstanceArgs{
//				Engine:        "mysql",
//				EngineVersion: pulumi.StringRef("5.7.22"),
//				LicenseModel:  pulumi.StringRef("general-public-license"),
//				PreferredInstanceClasses: []string{
//					"db.r6.xlarge",
//					"db.m4.large",
//					"db.t3.small",
//				},
//				StorageType: pulumi.StringRef("standard"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// Valid parameter combinations can also be found with `preferredEngineVersions` and/or `preferredInstanceClasses`.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/rds"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := rds.GetOrderableDbInstance(ctx, &rds.GetOrderableDbInstanceArgs{
//				Engine:       "mysql",
//				LicenseModel: pulumi.StringRef("general-public-license"),
//				PreferredEngineVersions: []string{
//					"5.6.35",
//					"5.6.41",
//					"5.6.44",
//				},
//				PreferredInstanceClasses: []string{
//					"db.t2.small",
//					"db.t3.medium",
//					"db.t3.large",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetOrderableDbInstance(ctx *pulumi.Context, args *GetOrderableDbInstanceArgs, opts ...pulumi.InvokeOption) (*GetOrderableDbInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetOrderableDbInstanceResult
	err := ctx.Invoke("aws:rds/getOrderableDbInstance:getOrderableDbInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOrderableDbInstance.
type GetOrderableDbInstanceArgs struct {
	// Availability zone group.
	AvailabilityZoneGroup *string `pulumi:"availabilityZoneGroup"`
	// DB engine. Engine values include `aurora`, `aurora-mysql`, `aurora-postgresql`, `docdb`, `mariadb`, `mysql`, `neptune`, `oracle-ee`, `oracle-se`, `oracle-se1`, `oracle-se2`, `postgres`, `sqlserver-ee`, `sqlserver-ex`, `sqlserver-se`, and `sqlserver-web`.
	Engine string `pulumi:"engine"`
	// When set to `true`, the data source attempts to return the most recent version matching the other criteria you provide. You must use `engineLatestVersion` with `preferredInstanceClasses` and/or `preferredEngineVersions`. Using `engineLatestVersion` will avoid `multiple RDS DB Instance Classes` errors. If you use `engineLatestVersion` with `preferredInstanceClasses`, the data source returns the latest version for the _first_ matching instance class (instance class priority). **Note:** The data source uses a best-effort approach at selecting the latest version but due to the complexity of version identifiers across engines, using `engineLatestVersion` may _not_ return the latest version in every situation.
	EngineLatestVersion *bool `pulumi:"engineLatestVersion"`
	// Version of the DB engine. If none is provided, the data source tries to use the AWS-defined default version that matches any other criteria.
	EngineVersion *string `pulumi:"engineVersion"`
	// DB instance class. Examples of classes are `db.m3.2xlarge`, `db.t2.small`, and `db.m3.medium`.
	InstanceClass *string `pulumi:"instanceClass"`
	// License model. Examples of license models are `general-public-license`, `bring-your-own-license`, and `amazon-license`.
	LicenseModel *string `pulumi:"licenseModel"`
	// Ordered list of preferred RDS DB instance engine versions. When `engineLatestVersion` is not set, the data source will return the first match in this list that matches any other criteria. If the data source finds no preferred matches or multiple matches without `engineLatestVersion`, it returns an error. **CAUTION:** We don't recommend using `preferredEngineVersions` without `preferredInstanceClasses` since the data source returns an arbitrary `instanceClass` based on the first one AWS returns that matches the engine version and any other criteria.
	PreferredEngineVersions []string `pulumi:"preferredEngineVersions"`
	// Ordered list of preferred RDS DB instance classes. The data source will return the first match in this list that matches any other criteria. If the data source finds no preferred matches or multiple matches without `engineLatestVersion`, it returns an error. If you use `preferredInstanceClasses` without `preferredEngineVersions` or `engineLatestVersion`, the data source returns an arbitrary `engineVersion` based on the first one AWS returns matching the instance class and any other criteria.
	PreferredInstanceClasses []string `pulumi:"preferredInstanceClasses"`
	// Whether a DB instance can have a read replica.
	ReadReplicaCapable *bool `pulumi:"readReplicaCapable"`
	// Storage types. Examples of storage types are `standard`, `io1`, `gp2`, and `aurora`.
	StorageType *string `pulumi:"storageType"`
	// Use to limit results to engine modes such as `provisioned`.
	SupportedEngineModes []string `pulumi:"supportedEngineModes"`
	// Use to limit results to network types `IPV4` or `DUAL`.
	SupportedNetworkTypes []string `pulumi:"supportedNetworkTypes"`
	// Whether to limit results to instances that support clusters.
	SupportsClusters *bool `pulumi:"supportsClusters"`
	// Enable this to ensure a DB instance supports Enhanced Monitoring at intervals from 1 to 60 seconds.
	SupportsEnhancedMonitoring *bool `pulumi:"supportsEnhancedMonitoring"`
	// Enable this to ensure a DB instance supports Aurora global databases with a specific combination of other DB engine attributes.
	SupportsGlobalDatabases *bool `pulumi:"supportsGlobalDatabases"`
	// Enable this to ensure a DB instance supports IAM database authentication.
	SupportsIamDatabaseAuthentication *bool `pulumi:"supportsIamDatabaseAuthentication"`
	// Enable this to ensure a DB instance supports provisioned IOPS.
	SupportsIops *bool `pulumi:"supportsIops"`
	// Enable this to ensure a DB instance supports Kerberos Authentication.
	SupportsKerberosAuthentication *bool `pulumi:"supportsKerberosAuthentication"`
	// Whether to limit results to instances that are multi-AZ capable.
	SupportsMultiAz *bool `pulumi:"supportsMultiAz"`
	// Enable this to ensure a DB instance supports Performance Insights.
	SupportsPerformanceInsights *bool `pulumi:"supportsPerformanceInsights"`
	// Enable this to ensure Amazon RDS can automatically scale storage for DB instances that use the specified DB instance class.
	SupportsStorageAutoscaling *bool `pulumi:"supportsStorageAutoscaling"`
	// Enable this to ensure a DB instance supports encrypted storage.
	SupportsStorageEncryption *bool `pulumi:"supportsStorageEncryption"`
	// Boolean that indicates whether to show only VPC or non-VPC offerings.
	Vpc *bool `pulumi:"vpc"`
}

// A collection of values returned by getOrderableDbInstance.
type GetOrderableDbInstanceResult struct {
	AvailabilityZoneGroup string `pulumi:"availabilityZoneGroup"`
	// Availability zones where the instance is available.
	AvailabilityZones   []string `pulumi:"availabilityZones"`
	Engine              string   `pulumi:"engine"`
	EngineLatestVersion *bool    `pulumi:"engineLatestVersion"`
	EngineVersion       string   `pulumi:"engineVersion"`
	// The provider-assigned unique ID for this managed resource.
	Id            string `pulumi:"id"`
	InstanceClass string `pulumi:"instanceClass"`
	LicenseModel  string `pulumi:"licenseModel"`
	// Maximum total provisioned IOPS for a DB instance.
	MaxIopsPerDbInstance int `pulumi:"maxIopsPerDbInstance"`
	// Maximum provisioned IOPS per GiB for a DB instance.
	MaxIopsPerGib float64 `pulumi:"maxIopsPerGib"`
	// Maximum storage size for a DB instance.
	MaxStorageSize int `pulumi:"maxStorageSize"`
	// Minimum total provisioned IOPS for a DB instance.
	MinIopsPerDbInstance int `pulumi:"minIopsPerDbInstance"`
	// Minimum provisioned IOPS per GiB for a DB instance.
	MinIopsPerGib float64 `pulumi:"minIopsPerGib"`
	// Minimum storage size for a DB instance.
	MinStorageSize int `pulumi:"minStorageSize"`
	// Whether a DB instance is Multi-AZ capable.
	MultiAzCapable bool `pulumi:"multiAzCapable"`
	// Whether a DB instance supports RDS on Outposts.
	OutpostCapable                    bool     `pulumi:"outpostCapable"`
	PreferredEngineVersions           []string `pulumi:"preferredEngineVersions"`
	PreferredInstanceClasses          []string `pulumi:"preferredInstanceClasses"`
	ReadReplicaCapable                bool     `pulumi:"readReplicaCapable"`
	StorageType                       string   `pulumi:"storageType"`
	SupportedEngineModes              []string `pulumi:"supportedEngineModes"`
	SupportedNetworkTypes             []string `pulumi:"supportedNetworkTypes"`
	SupportsClusters                  bool     `pulumi:"supportsClusters"`
	SupportsEnhancedMonitoring        bool     `pulumi:"supportsEnhancedMonitoring"`
	SupportsGlobalDatabases           bool     `pulumi:"supportsGlobalDatabases"`
	SupportsIamDatabaseAuthentication bool     `pulumi:"supportsIamDatabaseAuthentication"`
	SupportsIops                      bool     `pulumi:"supportsIops"`
	SupportsKerberosAuthentication    bool     `pulumi:"supportsKerberosAuthentication"`
	SupportsMultiAz                   bool     `pulumi:"supportsMultiAz"`
	SupportsPerformanceInsights       bool     `pulumi:"supportsPerformanceInsights"`
	SupportsStorageAutoscaling        bool     `pulumi:"supportsStorageAutoscaling"`
	SupportsStorageEncryption         bool     `pulumi:"supportsStorageEncryption"`
	Vpc                               bool     `pulumi:"vpc"`
}

func GetOrderableDbInstanceOutput(ctx *pulumi.Context, args GetOrderableDbInstanceOutputArgs, opts ...pulumi.InvokeOption) GetOrderableDbInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetOrderableDbInstanceResult, error) {
			args := v.(GetOrderableDbInstanceArgs)
			r, err := GetOrderableDbInstance(ctx, &args, opts...)
			var s GetOrderableDbInstanceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetOrderableDbInstanceResultOutput)
}

// A collection of arguments for invoking getOrderableDbInstance.
type GetOrderableDbInstanceOutputArgs struct {
	// Availability zone group.
	AvailabilityZoneGroup pulumi.StringPtrInput `pulumi:"availabilityZoneGroup"`
	// DB engine. Engine values include `aurora`, `aurora-mysql`, `aurora-postgresql`, `docdb`, `mariadb`, `mysql`, `neptune`, `oracle-ee`, `oracle-se`, `oracle-se1`, `oracle-se2`, `postgres`, `sqlserver-ee`, `sqlserver-ex`, `sqlserver-se`, and `sqlserver-web`.
	Engine pulumi.StringInput `pulumi:"engine"`
	// When set to `true`, the data source attempts to return the most recent version matching the other criteria you provide. You must use `engineLatestVersion` with `preferredInstanceClasses` and/or `preferredEngineVersions`. Using `engineLatestVersion` will avoid `multiple RDS DB Instance Classes` errors. If you use `engineLatestVersion` with `preferredInstanceClasses`, the data source returns the latest version for the _first_ matching instance class (instance class priority). **Note:** The data source uses a best-effort approach at selecting the latest version but due to the complexity of version identifiers across engines, using `engineLatestVersion` may _not_ return the latest version in every situation.
	EngineLatestVersion pulumi.BoolPtrInput `pulumi:"engineLatestVersion"`
	// Version of the DB engine. If none is provided, the data source tries to use the AWS-defined default version that matches any other criteria.
	EngineVersion pulumi.StringPtrInput `pulumi:"engineVersion"`
	// DB instance class. Examples of classes are `db.m3.2xlarge`, `db.t2.small`, and `db.m3.medium`.
	InstanceClass pulumi.StringPtrInput `pulumi:"instanceClass"`
	// License model. Examples of license models are `general-public-license`, `bring-your-own-license`, and `amazon-license`.
	LicenseModel pulumi.StringPtrInput `pulumi:"licenseModel"`
	// Ordered list of preferred RDS DB instance engine versions. When `engineLatestVersion` is not set, the data source will return the first match in this list that matches any other criteria. If the data source finds no preferred matches or multiple matches without `engineLatestVersion`, it returns an error. **CAUTION:** We don't recommend using `preferredEngineVersions` without `preferredInstanceClasses` since the data source returns an arbitrary `instanceClass` based on the first one AWS returns that matches the engine version and any other criteria.
	PreferredEngineVersions pulumi.StringArrayInput `pulumi:"preferredEngineVersions"`
	// Ordered list of preferred RDS DB instance classes. The data source will return the first match in this list that matches any other criteria. If the data source finds no preferred matches or multiple matches without `engineLatestVersion`, it returns an error. If you use `preferredInstanceClasses` without `preferredEngineVersions` or `engineLatestVersion`, the data source returns an arbitrary `engineVersion` based on the first one AWS returns matching the instance class and any other criteria.
	PreferredInstanceClasses pulumi.StringArrayInput `pulumi:"preferredInstanceClasses"`
	// Whether a DB instance can have a read replica.
	ReadReplicaCapable pulumi.BoolPtrInput `pulumi:"readReplicaCapable"`
	// Storage types. Examples of storage types are `standard`, `io1`, `gp2`, and `aurora`.
	StorageType pulumi.StringPtrInput `pulumi:"storageType"`
	// Use to limit results to engine modes such as `provisioned`.
	SupportedEngineModes pulumi.StringArrayInput `pulumi:"supportedEngineModes"`
	// Use to limit results to network types `IPV4` or `DUAL`.
	SupportedNetworkTypes pulumi.StringArrayInput `pulumi:"supportedNetworkTypes"`
	// Whether to limit results to instances that support clusters.
	SupportsClusters pulumi.BoolPtrInput `pulumi:"supportsClusters"`
	// Enable this to ensure a DB instance supports Enhanced Monitoring at intervals from 1 to 60 seconds.
	SupportsEnhancedMonitoring pulumi.BoolPtrInput `pulumi:"supportsEnhancedMonitoring"`
	// Enable this to ensure a DB instance supports Aurora global databases with a specific combination of other DB engine attributes.
	SupportsGlobalDatabases pulumi.BoolPtrInput `pulumi:"supportsGlobalDatabases"`
	// Enable this to ensure a DB instance supports IAM database authentication.
	SupportsIamDatabaseAuthentication pulumi.BoolPtrInput `pulumi:"supportsIamDatabaseAuthentication"`
	// Enable this to ensure a DB instance supports provisioned IOPS.
	SupportsIops pulumi.BoolPtrInput `pulumi:"supportsIops"`
	// Enable this to ensure a DB instance supports Kerberos Authentication.
	SupportsKerberosAuthentication pulumi.BoolPtrInput `pulumi:"supportsKerberosAuthentication"`
	// Whether to limit results to instances that are multi-AZ capable.
	SupportsMultiAz pulumi.BoolPtrInput `pulumi:"supportsMultiAz"`
	// Enable this to ensure a DB instance supports Performance Insights.
	SupportsPerformanceInsights pulumi.BoolPtrInput `pulumi:"supportsPerformanceInsights"`
	// Enable this to ensure Amazon RDS can automatically scale storage for DB instances that use the specified DB instance class.
	SupportsStorageAutoscaling pulumi.BoolPtrInput `pulumi:"supportsStorageAutoscaling"`
	// Enable this to ensure a DB instance supports encrypted storage.
	SupportsStorageEncryption pulumi.BoolPtrInput `pulumi:"supportsStorageEncryption"`
	// Boolean that indicates whether to show only VPC or non-VPC offerings.
	Vpc pulumi.BoolPtrInput `pulumi:"vpc"`
}

func (GetOrderableDbInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrderableDbInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getOrderableDbInstance.
type GetOrderableDbInstanceResultOutput struct{ *pulumi.OutputState }

func (GetOrderableDbInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrderableDbInstanceResult)(nil)).Elem()
}

func (o GetOrderableDbInstanceResultOutput) ToGetOrderableDbInstanceResultOutput() GetOrderableDbInstanceResultOutput {
	return o
}

func (o GetOrderableDbInstanceResultOutput) ToGetOrderableDbInstanceResultOutputWithContext(ctx context.Context) GetOrderableDbInstanceResultOutput {
	return o
}

func (o GetOrderableDbInstanceResultOutput) AvailabilityZoneGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) string { return v.AvailabilityZoneGroup }).(pulumi.StringOutput)
}

// Availability zones where the instance is available.
func (o GetOrderableDbInstanceResultOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) []string { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

func (o GetOrderableDbInstanceResultOutput) Engine() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) string { return v.Engine }).(pulumi.StringOutput)
}

func (o GetOrderableDbInstanceResultOutput) EngineLatestVersion() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) *bool { return v.EngineLatestVersion }).(pulumi.BoolPtrOutput)
}

func (o GetOrderableDbInstanceResultOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) string { return v.EngineVersion }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetOrderableDbInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetOrderableDbInstanceResultOutput) InstanceClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) string { return v.InstanceClass }).(pulumi.StringOutput)
}

func (o GetOrderableDbInstanceResultOutput) LicenseModel() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) string { return v.LicenseModel }).(pulumi.StringOutput)
}

// Maximum total provisioned IOPS for a DB instance.
func (o GetOrderableDbInstanceResultOutput) MaxIopsPerDbInstance() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) int { return v.MaxIopsPerDbInstance }).(pulumi.IntOutput)
}

// Maximum provisioned IOPS per GiB for a DB instance.
func (o GetOrderableDbInstanceResultOutput) MaxIopsPerGib() pulumi.Float64Output {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) float64 { return v.MaxIopsPerGib }).(pulumi.Float64Output)
}

// Maximum storage size for a DB instance.
func (o GetOrderableDbInstanceResultOutput) MaxStorageSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) int { return v.MaxStorageSize }).(pulumi.IntOutput)
}

// Minimum total provisioned IOPS for a DB instance.
func (o GetOrderableDbInstanceResultOutput) MinIopsPerDbInstance() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) int { return v.MinIopsPerDbInstance }).(pulumi.IntOutput)
}

// Minimum provisioned IOPS per GiB for a DB instance.
func (o GetOrderableDbInstanceResultOutput) MinIopsPerGib() pulumi.Float64Output {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) float64 { return v.MinIopsPerGib }).(pulumi.Float64Output)
}

// Minimum storage size for a DB instance.
func (o GetOrderableDbInstanceResultOutput) MinStorageSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) int { return v.MinStorageSize }).(pulumi.IntOutput)
}

// Whether a DB instance is Multi-AZ capable.
func (o GetOrderableDbInstanceResultOutput) MultiAzCapable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) bool { return v.MultiAzCapable }).(pulumi.BoolOutput)
}

// Whether a DB instance supports RDS on Outposts.
func (o GetOrderableDbInstanceResultOutput) OutpostCapable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) bool { return v.OutpostCapable }).(pulumi.BoolOutput)
}

func (o GetOrderableDbInstanceResultOutput) PreferredEngineVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) []string { return v.PreferredEngineVersions }).(pulumi.StringArrayOutput)
}

func (o GetOrderableDbInstanceResultOutput) PreferredInstanceClasses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) []string { return v.PreferredInstanceClasses }).(pulumi.StringArrayOutput)
}

func (o GetOrderableDbInstanceResultOutput) ReadReplicaCapable() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) bool { return v.ReadReplicaCapable }).(pulumi.BoolOutput)
}

func (o GetOrderableDbInstanceResultOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) string { return v.StorageType }).(pulumi.StringOutput)
}

func (o GetOrderableDbInstanceResultOutput) SupportedEngineModes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) []string { return v.SupportedEngineModes }).(pulumi.StringArrayOutput)
}

func (o GetOrderableDbInstanceResultOutput) SupportedNetworkTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) []string { return v.SupportedNetworkTypes }).(pulumi.StringArrayOutput)
}

func (o GetOrderableDbInstanceResultOutput) SupportsClusters() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) bool { return v.SupportsClusters }).(pulumi.BoolOutput)
}

func (o GetOrderableDbInstanceResultOutput) SupportsEnhancedMonitoring() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) bool { return v.SupportsEnhancedMonitoring }).(pulumi.BoolOutput)
}

func (o GetOrderableDbInstanceResultOutput) SupportsGlobalDatabases() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) bool { return v.SupportsGlobalDatabases }).(pulumi.BoolOutput)
}

func (o GetOrderableDbInstanceResultOutput) SupportsIamDatabaseAuthentication() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) bool { return v.SupportsIamDatabaseAuthentication }).(pulumi.BoolOutput)
}

func (o GetOrderableDbInstanceResultOutput) SupportsIops() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) bool { return v.SupportsIops }).(pulumi.BoolOutput)
}

func (o GetOrderableDbInstanceResultOutput) SupportsKerberosAuthentication() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) bool { return v.SupportsKerberosAuthentication }).(pulumi.BoolOutput)
}

func (o GetOrderableDbInstanceResultOutput) SupportsMultiAz() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) bool { return v.SupportsMultiAz }).(pulumi.BoolOutput)
}

func (o GetOrderableDbInstanceResultOutput) SupportsPerformanceInsights() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) bool { return v.SupportsPerformanceInsights }).(pulumi.BoolOutput)
}

func (o GetOrderableDbInstanceResultOutput) SupportsStorageAutoscaling() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) bool { return v.SupportsStorageAutoscaling }).(pulumi.BoolOutput)
}

func (o GetOrderableDbInstanceResultOutput) SupportsStorageEncryption() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) bool { return v.SupportsStorageEncryption }).(pulumi.BoolOutput)
}

func (o GetOrderableDbInstanceResultOutput) Vpc() pulumi.BoolOutput {
	return o.ApplyT(func(v GetOrderableDbInstanceResult) bool { return v.Vpc }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOrderableDbInstanceResultOutput{})
}
