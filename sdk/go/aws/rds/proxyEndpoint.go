// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ProxyEndpoint struct {
	pulumi.CustomResourceState

	Arn                 pulumi.StringOutput      `pulumi:"arn"`
	DbProxyEndpointName pulumi.StringOutput      `pulumi:"dbProxyEndpointName"`
	DbProxyName         pulumi.StringOutput      `pulumi:"dbProxyName"`
	Endpoint            pulumi.StringOutput      `pulumi:"endpoint"`
	IsDefault           pulumi.BoolOutput        `pulumi:"isDefault"`
	Tags                pulumi.StringMapOutput   `pulumi:"tags"`
	TagsAll             pulumi.StringMapOutput   `pulumi:"tagsAll"`
	TargetRole          pulumi.StringPtrOutput   `pulumi:"targetRole"`
	VpcId               pulumi.StringOutput      `pulumi:"vpcId"`
	VpcSecurityGroupIds pulumi.StringArrayOutput `pulumi:"vpcSecurityGroupIds"`
	VpcSubnetIds        pulumi.StringArrayOutput `pulumi:"vpcSubnetIds"`
}

// NewProxyEndpoint registers a new resource with the given unique name, arguments, and options.
func NewProxyEndpoint(ctx *pulumi.Context,
	name string, args *ProxyEndpointArgs, opts ...pulumi.ResourceOption) (*ProxyEndpoint, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DbProxyEndpointName == nil {
		return nil, errors.New("invalid value for required argument 'DbProxyEndpointName'")
	}
	if args.DbProxyName == nil {
		return nil, errors.New("invalid value for required argument 'DbProxyName'")
	}
	if args.VpcSubnetIds == nil {
		return nil, errors.New("invalid value for required argument 'VpcSubnetIds'")
	}
	var resource ProxyEndpoint
	err := ctx.RegisterResource("aws:rds/proxyEndpoint:ProxyEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProxyEndpoint gets an existing ProxyEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProxyEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProxyEndpointState, opts ...pulumi.ResourceOption) (*ProxyEndpoint, error) {
	var resource ProxyEndpoint
	err := ctx.ReadResource("aws:rds/proxyEndpoint:ProxyEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProxyEndpoint resources.
type proxyEndpointState struct {
	Arn                 *string           `pulumi:"arn"`
	DbProxyEndpointName *string           `pulumi:"dbProxyEndpointName"`
	DbProxyName         *string           `pulumi:"dbProxyName"`
	Endpoint            *string           `pulumi:"endpoint"`
	IsDefault           *bool             `pulumi:"isDefault"`
	Tags                map[string]string `pulumi:"tags"`
	TagsAll             map[string]string `pulumi:"tagsAll"`
	TargetRole          *string           `pulumi:"targetRole"`
	VpcId               *string           `pulumi:"vpcId"`
	VpcSecurityGroupIds []string          `pulumi:"vpcSecurityGroupIds"`
	VpcSubnetIds        []string          `pulumi:"vpcSubnetIds"`
}

type ProxyEndpointState struct {
	Arn                 pulumi.StringPtrInput
	DbProxyEndpointName pulumi.StringPtrInput
	DbProxyName         pulumi.StringPtrInput
	Endpoint            pulumi.StringPtrInput
	IsDefault           pulumi.BoolPtrInput
	Tags                pulumi.StringMapInput
	TagsAll             pulumi.StringMapInput
	TargetRole          pulumi.StringPtrInput
	VpcId               pulumi.StringPtrInput
	VpcSecurityGroupIds pulumi.StringArrayInput
	VpcSubnetIds        pulumi.StringArrayInput
}

func (ProxyEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*proxyEndpointState)(nil)).Elem()
}

type proxyEndpointArgs struct {
	DbProxyEndpointName string            `pulumi:"dbProxyEndpointName"`
	DbProxyName         string            `pulumi:"dbProxyName"`
	Tags                map[string]string `pulumi:"tags"`
	TargetRole          *string           `pulumi:"targetRole"`
	VpcSecurityGroupIds []string          `pulumi:"vpcSecurityGroupIds"`
	VpcSubnetIds        []string          `pulumi:"vpcSubnetIds"`
}

// The set of arguments for constructing a ProxyEndpoint resource.
type ProxyEndpointArgs struct {
	DbProxyEndpointName pulumi.StringInput
	DbProxyName         pulumi.StringInput
	Tags                pulumi.StringMapInput
	TargetRole          pulumi.StringPtrInput
	VpcSecurityGroupIds pulumi.StringArrayInput
	VpcSubnetIds        pulumi.StringArrayInput
}

func (ProxyEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*proxyEndpointArgs)(nil)).Elem()
}

type ProxyEndpointInput interface {
	pulumi.Input

	ToProxyEndpointOutput() ProxyEndpointOutput
	ToProxyEndpointOutputWithContext(ctx context.Context) ProxyEndpointOutput
}

func (*ProxyEndpoint) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyEndpoint)(nil)).Elem()
}

func (i *ProxyEndpoint) ToProxyEndpointOutput() ProxyEndpointOutput {
	return i.ToProxyEndpointOutputWithContext(context.Background())
}

func (i *ProxyEndpoint) ToProxyEndpointOutputWithContext(ctx context.Context) ProxyEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyEndpointOutput)
}

// ProxyEndpointArrayInput is an input type that accepts ProxyEndpointArray and ProxyEndpointArrayOutput values.
// You can construct a concrete instance of `ProxyEndpointArrayInput` via:
//
//	ProxyEndpointArray{ ProxyEndpointArgs{...} }
type ProxyEndpointArrayInput interface {
	pulumi.Input

	ToProxyEndpointArrayOutput() ProxyEndpointArrayOutput
	ToProxyEndpointArrayOutputWithContext(context.Context) ProxyEndpointArrayOutput
}

type ProxyEndpointArray []ProxyEndpointInput

func (ProxyEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProxyEndpoint)(nil)).Elem()
}

func (i ProxyEndpointArray) ToProxyEndpointArrayOutput() ProxyEndpointArrayOutput {
	return i.ToProxyEndpointArrayOutputWithContext(context.Background())
}

func (i ProxyEndpointArray) ToProxyEndpointArrayOutputWithContext(ctx context.Context) ProxyEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyEndpointArrayOutput)
}

// ProxyEndpointMapInput is an input type that accepts ProxyEndpointMap and ProxyEndpointMapOutput values.
// You can construct a concrete instance of `ProxyEndpointMapInput` via:
//
//	ProxyEndpointMap{ "key": ProxyEndpointArgs{...} }
type ProxyEndpointMapInput interface {
	pulumi.Input

	ToProxyEndpointMapOutput() ProxyEndpointMapOutput
	ToProxyEndpointMapOutputWithContext(context.Context) ProxyEndpointMapOutput
}

type ProxyEndpointMap map[string]ProxyEndpointInput

func (ProxyEndpointMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProxyEndpoint)(nil)).Elem()
}

func (i ProxyEndpointMap) ToProxyEndpointMapOutput() ProxyEndpointMapOutput {
	return i.ToProxyEndpointMapOutputWithContext(context.Background())
}

func (i ProxyEndpointMap) ToProxyEndpointMapOutputWithContext(ctx context.Context) ProxyEndpointMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProxyEndpointMapOutput)
}

type ProxyEndpointOutput struct{ *pulumi.OutputState }

func (ProxyEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProxyEndpoint)(nil)).Elem()
}

func (o ProxyEndpointOutput) ToProxyEndpointOutput() ProxyEndpointOutput {
	return o
}

func (o ProxyEndpointOutput) ToProxyEndpointOutputWithContext(ctx context.Context) ProxyEndpointOutput {
	return o
}

func (o ProxyEndpointOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxyEndpoint) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o ProxyEndpointOutput) DbProxyEndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxyEndpoint) pulumi.StringOutput { return v.DbProxyEndpointName }).(pulumi.StringOutput)
}

func (o ProxyEndpointOutput) DbProxyName() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxyEndpoint) pulumi.StringOutput { return v.DbProxyName }).(pulumi.StringOutput)
}

func (o ProxyEndpointOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxyEndpoint) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

func (o ProxyEndpointOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v *ProxyEndpoint) pulumi.BoolOutput { return v.IsDefault }).(pulumi.BoolOutput)
}

func (o ProxyEndpointOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProxyEndpoint) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o ProxyEndpointOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ProxyEndpoint) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o ProxyEndpointOutput) TargetRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProxyEndpoint) pulumi.StringPtrOutput { return v.TargetRole }).(pulumi.StringPtrOutput)
}

func (o ProxyEndpointOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *ProxyEndpoint) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

func (o ProxyEndpointOutput) VpcSecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProxyEndpoint) pulumi.StringArrayOutput { return v.VpcSecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o ProxyEndpointOutput) VpcSubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProxyEndpoint) pulumi.StringArrayOutput { return v.VpcSubnetIds }).(pulumi.StringArrayOutput)
}

type ProxyEndpointArrayOutput struct{ *pulumi.OutputState }

func (ProxyEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProxyEndpoint)(nil)).Elem()
}

func (o ProxyEndpointArrayOutput) ToProxyEndpointArrayOutput() ProxyEndpointArrayOutput {
	return o
}

func (o ProxyEndpointArrayOutput) ToProxyEndpointArrayOutputWithContext(ctx context.Context) ProxyEndpointArrayOutput {
	return o
}

func (o ProxyEndpointArrayOutput) Index(i pulumi.IntInput) ProxyEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ProxyEndpoint {
		return vs[0].([]*ProxyEndpoint)[vs[1].(int)]
	}).(ProxyEndpointOutput)
}

type ProxyEndpointMapOutput struct{ *pulumi.OutputState }

func (ProxyEndpointMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProxyEndpoint)(nil)).Elem()
}

func (o ProxyEndpointMapOutput) ToProxyEndpointMapOutput() ProxyEndpointMapOutput {
	return o
}

func (o ProxyEndpointMapOutput) ToProxyEndpointMapOutputWithContext(ctx context.Context) ProxyEndpointMapOutput {
	return o
}

func (o ProxyEndpointMapOutput) MapIndex(k pulumi.StringInput) ProxyEndpointOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ProxyEndpoint {
		return vs[0].(map[string]*ProxyEndpoint)[vs[1].(string)]
	}).(ProxyEndpointOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyEndpointInput)(nil)).Elem(), &ProxyEndpoint{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyEndpointArrayInput)(nil)).Elem(), ProxyEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProxyEndpointMapInput)(nil)).Elem(), ProxyEndpointMap{})
	pulumi.RegisterOutputType(ProxyEndpointOutput{})
	pulumi.RegisterOutputType(ProxyEndpointArrayOutput{})
	pulumi.RegisterOutputType(ProxyEndpointMapOutput{})
}
