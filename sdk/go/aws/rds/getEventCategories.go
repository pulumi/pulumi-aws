// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rds

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// List the event categories of all the RDS resources.
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/rds"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := rds.GetEventCategories(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("example", example.EventCategories)
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// List the event categories specific to the RDS resource `db-snapshot`.
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/rds"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := rds.GetEventCategories(ctx, &rds.GetEventCategoriesArgs{
//				SourceType: pulumi.StringRef("db-snapshot"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("example", example.EventCategories)
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetEventCategories(ctx *pulumi.Context, args *GetEventCategoriesArgs, opts ...pulumi.InvokeOption) (*GetEventCategoriesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEventCategoriesResult
	err := ctx.Invoke("aws:rds/getEventCategories:getEventCategories", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEventCategories.
type GetEventCategoriesArgs struct {
	// Type of source that will be generating the events. Valid options are db-instance, db-security-group, db-parameter-group, db-snapshot, db-cluster or db-cluster-snapshot.
	SourceType *string `pulumi:"sourceType"`
}

// A collection of values returned by getEventCategories.
type GetEventCategoriesResult struct {
	// List of the event categories.
	EventCategories []string `pulumi:"eventCategories"`
	// The provider-assigned unique ID for this managed resource.
	Id         string  `pulumi:"id"`
	SourceType *string `pulumi:"sourceType"`
}

func GetEventCategoriesOutput(ctx *pulumi.Context, args GetEventCategoriesOutputArgs, opts ...pulumi.InvokeOption) GetEventCategoriesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetEventCategoriesResult, error) {
			args := v.(GetEventCategoriesArgs)
			r, err := GetEventCategories(ctx, &args, opts...)
			var s GetEventCategoriesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetEventCategoriesResultOutput)
}

// A collection of arguments for invoking getEventCategories.
type GetEventCategoriesOutputArgs struct {
	// Type of source that will be generating the events. Valid options are db-instance, db-security-group, db-parameter-group, db-snapshot, db-cluster or db-cluster-snapshot.
	SourceType pulumi.StringPtrInput `pulumi:"sourceType"`
}

func (GetEventCategoriesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventCategoriesArgs)(nil)).Elem()
}

// A collection of values returned by getEventCategories.
type GetEventCategoriesResultOutput struct{ *pulumi.OutputState }

func (GetEventCategoriesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEventCategoriesResult)(nil)).Elem()
}

func (o GetEventCategoriesResultOutput) ToGetEventCategoriesResultOutput() GetEventCategoriesResultOutput {
	return o
}

func (o GetEventCategoriesResultOutput) ToGetEventCategoriesResultOutputWithContext(ctx context.Context) GetEventCategoriesResultOutput {
	return o
}

// List of the event categories.
func (o GetEventCategoriesResultOutput) EventCategories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetEventCategoriesResult) []string { return v.EventCategories }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEventCategoriesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEventCategoriesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEventCategoriesResultOutput) SourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEventCategoriesResult) *string { return v.SourceType }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEventCategoriesResultOutput{})
}
