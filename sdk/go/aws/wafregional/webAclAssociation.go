// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package wafregional

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a resource to create an association between a WAF Regional WebACL and Application Load Balancer.
// 
// -> **Note:** An Application Load Balancer can only be associated with one WAF Regional WebACL.
type WebAclAssociation struct {
	s *pulumi.ResourceState
}

// NewWebAclAssociation registers a new resource with the given unique name, arguments, and options.
func NewWebAclAssociation(ctx *pulumi.Context,
	name string, args *WebAclAssociationArgs, opts ...pulumi.ResourceOpt) (*WebAclAssociation, error) {
	if args == nil || args.ResourceArn == nil {
		return nil, errors.New("missing required argument 'ResourceArn'")
	}
	if args == nil || args.WebAclId == nil {
		return nil, errors.New("missing required argument 'WebAclId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["resourceArn"] = nil
		inputs["webAclId"] = nil
	} else {
		inputs["resourceArn"] = args.ResourceArn
		inputs["webAclId"] = args.WebAclId
	}
	s, err := ctx.RegisterResource("aws:wafregional/webAclAssociation:WebAclAssociation", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &WebAclAssociation{s: s}, nil
}

// GetWebAclAssociation gets an existing WebAclAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebAclAssociation(ctx *pulumi.Context,
	name string, id pulumi.ID, state *WebAclAssociationState, opts ...pulumi.ResourceOpt) (*WebAclAssociation, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["resourceArn"] = state.ResourceArn
		inputs["webAclId"] = state.WebAclId
	}
	s, err := ctx.ReadResource("aws:wafregional/webAclAssociation:WebAclAssociation", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &WebAclAssociation{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *WebAclAssociation) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *WebAclAssociation) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// Application Load Balancer ARN to associate with.
func (r *WebAclAssociation) ResourceArn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["resourceArn"])
}

// The ID of the WAF Regional WebACL to create an association.
func (r *WebAclAssociation) WebAclId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["webAclId"])
}

// Input properties used for looking up and filtering WebAclAssociation resources.
type WebAclAssociationState struct {
	// Application Load Balancer ARN to associate with.
	ResourceArn interface{}
	// The ID of the WAF Regional WebACL to create an association.
	WebAclId interface{}
}

// The set of arguments for constructing a WebAclAssociation resource.
type WebAclAssociationArgs struct {
	// Application Load Balancer ARN to associate with.
	ResourceArn interface{}
	// The ID of the WAF Regional WebACL to create an association.
	WebAclId interface{}
}
