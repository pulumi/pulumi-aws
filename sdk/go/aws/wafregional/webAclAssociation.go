// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wafregional

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an association with WAF Regional Web ACL.
//
// > **Note:** An Application Load Balancer can only be associated with one WAF Regional WebACL.
//
// ## Example Usage
// ### API Gateway Association
//
// ```go
// package main
//
// import (
//
//	"crypto/sha1"
//	"encoding/hex"
//	"encoding/json"
//
//	apigateway/deployment "github.com/pulumi/pulumi-aws/sdk/v1/go/aws/apigateway/deployment"
//	apigateway/restApi "github.com/pulumi/pulumi-aws/sdk/v1/go/aws/apigateway/restApi"
//	apigateway/stage "github.com/pulumi/pulumi-aws/sdk/v1/go/aws/apigateway/stage"
//	wafregional/ipSet "github.com/pulumi/pulumi-aws/sdk/v1/go/aws/wafregional/ipSet"
//	wafregional/rule "github.com/pulumi/pulumi-aws/sdk/v1/go/aws/wafregional/rule"
//	wafregional/webAcl "github.com/pulumi/pulumi-aws/sdk/v1/go/aws/wafregional/webAcl"
//	wafregional/webAclAssociation "github.com/pulumi/pulumi-aws/sdk/v1/go/aws/wafregional/webAclAssociation"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func sha1Hash(input string) string {
//					hash := sha1.Sum([]byte(input))
//					return hex.EncodeToString(hash[:])
//				}
//
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// ipset, err := wafregional/ipSet.NewIpSet(ctx, "ipset", &wafregional/ipSet.IpSetArgs{
// IpSetDescriptors: []map[string]interface{}{
// map[string]interface{}{
// "type": "IPV4",
// "value": "192.0.7.0/24",
// },
// },
// })
// if err != nil {
// return err
// }
// fooRule, err := wafregional/rule.NewRule(ctx, "fooRule", &wafregional/rule.RuleArgs{
// MetricName: "tfWAFRule",
// Predicates: []map[string]interface{}{
// map[string]interface{}{
// "dataId": ipset.Id,
// "negated": false,
// "type": "IPMatch",
// },
// },
// })
// if err != nil {
// return err
// }
// fooWebAcl, err := wafregional/webAcl.NewWebAcl(ctx, "fooWebAcl", &wafregional/webAcl.WebAclArgs{
// MetricName: "foo",
// DefaultAction: map[string]interface{}{
// "type": "ALLOW",
// },
// Rules: []map[string]interface{}{
// map[string]interface{}{
// "action": map[string]interface{}{
// "type": "BLOCK",
// },
// "priority": 1,
// "ruleId": fooRule.Id,
// },
// },
// })
// if err != nil {
// return err
// }
// exampleRestApi, err := apigateway/restApi.NewRestApi(ctx, "exampleRestApi", &apigateway/restApi.RestApiArgs{
// Body: %!v(PANIC=Format method: fatal: An assertion has failed: unlowered function toJSON),
// })
// if err != nil {
// return err
// }
// exampleDeployment, err := apigateway/deployment.NewDeployment(ctx, "exampleDeployment", &apigateway/deployment.DeploymentArgs{
// RestApi: exampleRestApi.Id,
// Triggers: tmpJSON0, err := json.Marshal(exampleRestApi.Body)
// if err != nil {
// return err
// }
// json0 := string(tmpJSON0)
// map[string]interface{}{
// "redeployment": sha1Hash(json0),
// },
// })
// if err != nil {
// return err
// }
// exampleStage, err := apigateway/stage.NewStage(ctx, "exampleStage", &apigateway/stage.StageArgs{
// Deployment: exampleDeployment.Id,
// RestApi: exampleRestApi.Id,
// StageName: "example",
// })
// if err != nil {
// return err
// }
// _, err = wafregional/webAclAssociation.NewWebAclAssociation(ctx, "association", &wafregional/webAclAssociation.WebAclAssociationArgs{
// ResourceArn: exampleStage.Arn,
// WebAclId: fooWebAcl.Id,
// })
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
//
// ## Import
//
// Using `pulumi import`, import WAF Regional Web ACL Association using their `web_acl_id:resource_arn`. For example:
//
// ```sh
//
//	$ pulumi import aws:wafregional/webAclAssociation:WebAclAssociation foo web_acl_id:resource_arn
//
// ```
type WebAclAssociation struct {
	pulumi.CustomResourceState

	// ARN of the resource to associate with. For example, an Application Load Balancer or API Gateway Stage.
	ResourceArn pulumi.StringOutput `pulumi:"resourceArn"`
	// The ID of the WAF Regional WebACL to create an association.
	WebAclId pulumi.StringOutput `pulumi:"webAclId"`
}

// NewWebAclAssociation registers a new resource with the given unique name, arguments, and options.
func NewWebAclAssociation(ctx *pulumi.Context,
	name string, args *WebAclAssociationArgs, opts ...pulumi.ResourceOption) (*WebAclAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ResourceArn == nil {
		return nil, errors.New("invalid value for required argument 'ResourceArn'")
	}
	if args.WebAclId == nil {
		return nil, errors.New("invalid value for required argument 'WebAclId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WebAclAssociation
	err := ctx.RegisterResource("aws:wafregional/webAclAssociation:WebAclAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebAclAssociation gets an existing WebAclAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebAclAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebAclAssociationState, opts ...pulumi.ResourceOption) (*WebAclAssociation, error) {
	var resource WebAclAssociation
	err := ctx.ReadResource("aws:wafregional/webAclAssociation:WebAclAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebAclAssociation resources.
type webAclAssociationState struct {
	// ARN of the resource to associate with. For example, an Application Load Balancer or API Gateway Stage.
	ResourceArn *string `pulumi:"resourceArn"`
	// The ID of the WAF Regional WebACL to create an association.
	WebAclId *string `pulumi:"webAclId"`
}

type WebAclAssociationState struct {
	// ARN of the resource to associate with. For example, an Application Load Balancer or API Gateway Stage.
	ResourceArn pulumi.StringPtrInput
	// The ID of the WAF Regional WebACL to create an association.
	WebAclId pulumi.StringPtrInput
}

func (WebAclAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*webAclAssociationState)(nil)).Elem()
}

type webAclAssociationArgs struct {
	// ARN of the resource to associate with. For example, an Application Load Balancer or API Gateway Stage.
	ResourceArn string `pulumi:"resourceArn"`
	// The ID of the WAF Regional WebACL to create an association.
	WebAclId string `pulumi:"webAclId"`
}

// The set of arguments for constructing a WebAclAssociation resource.
type WebAclAssociationArgs struct {
	// ARN of the resource to associate with. For example, an Application Load Balancer or API Gateway Stage.
	ResourceArn pulumi.StringInput
	// The ID of the WAF Regional WebACL to create an association.
	WebAclId pulumi.StringInput
}

func (WebAclAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webAclAssociationArgs)(nil)).Elem()
}

type WebAclAssociationInput interface {
	pulumi.Input

	ToWebAclAssociationOutput() WebAclAssociationOutput
	ToWebAclAssociationOutputWithContext(ctx context.Context) WebAclAssociationOutput
}

func (*WebAclAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclAssociation)(nil)).Elem()
}

func (i *WebAclAssociation) ToWebAclAssociationOutput() WebAclAssociationOutput {
	return i.ToWebAclAssociationOutputWithContext(context.Background())
}

func (i *WebAclAssociation) ToWebAclAssociationOutputWithContext(ctx context.Context) WebAclAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclAssociationOutput)
}

// WebAclAssociationArrayInput is an input type that accepts WebAclAssociationArray and WebAclAssociationArrayOutput values.
// You can construct a concrete instance of `WebAclAssociationArrayInput` via:
//
//	WebAclAssociationArray{ WebAclAssociationArgs{...} }
type WebAclAssociationArrayInput interface {
	pulumi.Input

	ToWebAclAssociationArrayOutput() WebAclAssociationArrayOutput
	ToWebAclAssociationArrayOutputWithContext(context.Context) WebAclAssociationArrayOutput
}

type WebAclAssociationArray []WebAclAssociationInput

func (WebAclAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebAclAssociation)(nil)).Elem()
}

func (i WebAclAssociationArray) ToWebAclAssociationArrayOutput() WebAclAssociationArrayOutput {
	return i.ToWebAclAssociationArrayOutputWithContext(context.Background())
}

func (i WebAclAssociationArray) ToWebAclAssociationArrayOutputWithContext(ctx context.Context) WebAclAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclAssociationArrayOutput)
}

// WebAclAssociationMapInput is an input type that accepts WebAclAssociationMap and WebAclAssociationMapOutput values.
// You can construct a concrete instance of `WebAclAssociationMapInput` via:
//
//	WebAclAssociationMap{ "key": WebAclAssociationArgs{...} }
type WebAclAssociationMapInput interface {
	pulumi.Input

	ToWebAclAssociationMapOutput() WebAclAssociationMapOutput
	ToWebAclAssociationMapOutputWithContext(context.Context) WebAclAssociationMapOutput
}

type WebAclAssociationMap map[string]WebAclAssociationInput

func (WebAclAssociationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebAclAssociation)(nil)).Elem()
}

func (i WebAclAssociationMap) ToWebAclAssociationMapOutput() WebAclAssociationMapOutput {
	return i.ToWebAclAssociationMapOutputWithContext(context.Background())
}

func (i WebAclAssociationMap) ToWebAclAssociationMapOutputWithContext(ctx context.Context) WebAclAssociationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebAclAssociationMapOutput)
}

type WebAclAssociationOutput struct{ *pulumi.OutputState }

func (WebAclAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebAclAssociation)(nil)).Elem()
}

func (o WebAclAssociationOutput) ToWebAclAssociationOutput() WebAclAssociationOutput {
	return o
}

func (o WebAclAssociationOutput) ToWebAclAssociationOutputWithContext(ctx context.Context) WebAclAssociationOutput {
	return o
}

// ARN of the resource to associate with. For example, an Application Load Balancer or API Gateway Stage.
func (o WebAclAssociationOutput) ResourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAclAssociation) pulumi.StringOutput { return v.ResourceArn }).(pulumi.StringOutput)
}

// The ID of the WAF Regional WebACL to create an association.
func (o WebAclAssociationOutput) WebAclId() pulumi.StringOutput {
	return o.ApplyT(func(v *WebAclAssociation) pulumi.StringOutput { return v.WebAclId }).(pulumi.StringOutput)
}

type WebAclAssociationArrayOutput struct{ *pulumi.OutputState }

func (WebAclAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WebAclAssociation)(nil)).Elem()
}

func (o WebAclAssociationArrayOutput) ToWebAclAssociationArrayOutput() WebAclAssociationArrayOutput {
	return o
}

func (o WebAclAssociationArrayOutput) ToWebAclAssociationArrayOutputWithContext(ctx context.Context) WebAclAssociationArrayOutput {
	return o
}

func (o WebAclAssociationArrayOutput) Index(i pulumi.IntInput) WebAclAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WebAclAssociation {
		return vs[0].([]*WebAclAssociation)[vs[1].(int)]
	}).(WebAclAssociationOutput)
}

type WebAclAssociationMapOutput struct{ *pulumi.OutputState }

func (WebAclAssociationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WebAclAssociation)(nil)).Elem()
}

func (o WebAclAssociationMapOutput) ToWebAclAssociationMapOutput() WebAclAssociationMapOutput {
	return o
}

func (o WebAclAssociationMapOutput) ToWebAclAssociationMapOutputWithContext(ctx context.Context) WebAclAssociationMapOutput {
	return o
}

func (o WebAclAssociationMapOutput) MapIndex(k pulumi.StringInput) WebAclAssociationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WebAclAssociation {
		return vs[0].(map[string]*WebAclAssociation)[vs[1].(string)]
	}).(WebAclAssociationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclAssociationInput)(nil)).Elem(), &WebAclAssociation{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclAssociationArrayInput)(nil)).Elem(), WebAclAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebAclAssociationMapInput)(nil)).Elem(), WebAclAssociationMap{})
	pulumi.RegisterOutputType(WebAclAssociationOutput{})
	pulumi.RegisterOutputType(WebAclAssociationArrayOutput{})
	pulumi.RegisterOutputType(WebAclAssociationMapOutput{})
}
