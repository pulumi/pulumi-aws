// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wafregional

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides a WAF Regional Size Constraint Set Resource for use with Application Load Balancer.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/wafregional"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := wafregional.NewSizeConstraintSet(ctx, "sizeConstraintSet", &wafregional.SizeConstraintSetArgs{
//				SizeConstraints: wafregional.SizeConstraintSetSizeConstraintArray{
//					&wafregional.SizeConstraintSetSizeConstraintArgs{
//						ComparisonOperator: pulumi.String("EQ"),
//						FieldToMatch: &wafregional.SizeConstraintSetSizeConstraintFieldToMatchArgs{
//							Type: pulumi.String("BODY"),
//						},
//						Size:               pulumi.Int(4096),
//						TextTransformation: pulumi.String("NONE"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import WAF Size Constraint Set using the id. For example:
//
// ```sh
//
//	$ pulumi import aws:wafregional/sizeConstraintSet:SizeConstraintSet size_constraint_set a1b2c3d4-d5f6-7777-8888-9999aaaabbbbcccc
//
// ```
type SizeConstraintSet struct {
	pulumi.CustomResourceState

	Arn pulumi.StringOutput `pulumi:"arn"`
	// The name or description of the Size Constraint Set.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the parts of web requests that you want to inspect the size of.
	SizeConstraints SizeConstraintSetSizeConstraintArrayOutput `pulumi:"sizeConstraints"`
}

// NewSizeConstraintSet registers a new resource with the given unique name, arguments, and options.
func NewSizeConstraintSet(ctx *pulumi.Context,
	name string, args *SizeConstraintSetArgs, opts ...pulumi.ResourceOption) (*SizeConstraintSet, error) {
	if args == nil {
		args = &SizeConstraintSetArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SizeConstraintSet
	err := ctx.RegisterResource("aws:wafregional/sizeConstraintSet:SizeConstraintSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSizeConstraintSet gets an existing SizeConstraintSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSizeConstraintSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SizeConstraintSetState, opts ...pulumi.ResourceOption) (*SizeConstraintSet, error) {
	var resource SizeConstraintSet
	err := ctx.ReadResource("aws:wafregional/sizeConstraintSet:SizeConstraintSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SizeConstraintSet resources.
type sizeConstraintSetState struct {
	Arn *string `pulumi:"arn"`
	// The name or description of the Size Constraint Set.
	Name *string `pulumi:"name"`
	// Specifies the parts of web requests that you want to inspect the size of.
	SizeConstraints []SizeConstraintSetSizeConstraint `pulumi:"sizeConstraints"`
}

type SizeConstraintSetState struct {
	Arn pulumi.StringPtrInput
	// The name or description of the Size Constraint Set.
	Name pulumi.StringPtrInput
	// Specifies the parts of web requests that you want to inspect the size of.
	SizeConstraints SizeConstraintSetSizeConstraintArrayInput
}

func (SizeConstraintSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*sizeConstraintSetState)(nil)).Elem()
}

type sizeConstraintSetArgs struct {
	// The name or description of the Size Constraint Set.
	Name *string `pulumi:"name"`
	// Specifies the parts of web requests that you want to inspect the size of.
	SizeConstraints []SizeConstraintSetSizeConstraint `pulumi:"sizeConstraints"`
}

// The set of arguments for constructing a SizeConstraintSet resource.
type SizeConstraintSetArgs struct {
	// The name or description of the Size Constraint Set.
	Name pulumi.StringPtrInput
	// Specifies the parts of web requests that you want to inspect the size of.
	SizeConstraints SizeConstraintSetSizeConstraintArrayInput
}

func (SizeConstraintSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sizeConstraintSetArgs)(nil)).Elem()
}

type SizeConstraintSetInput interface {
	pulumi.Input

	ToSizeConstraintSetOutput() SizeConstraintSetOutput
	ToSizeConstraintSetOutputWithContext(ctx context.Context) SizeConstraintSetOutput
}

func (*SizeConstraintSet) ElementType() reflect.Type {
	return reflect.TypeOf((**SizeConstraintSet)(nil)).Elem()
}

func (i *SizeConstraintSet) ToSizeConstraintSetOutput() SizeConstraintSetOutput {
	return i.ToSizeConstraintSetOutputWithContext(context.Background())
}

func (i *SizeConstraintSet) ToSizeConstraintSetOutputWithContext(ctx context.Context) SizeConstraintSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SizeConstraintSetOutput)
}

func (i *SizeConstraintSet) ToOutput(ctx context.Context) pulumix.Output[*SizeConstraintSet] {
	return pulumix.Output[*SizeConstraintSet]{
		OutputState: i.ToSizeConstraintSetOutputWithContext(ctx).OutputState,
	}
}

// SizeConstraintSetArrayInput is an input type that accepts SizeConstraintSetArray and SizeConstraintSetArrayOutput values.
// You can construct a concrete instance of `SizeConstraintSetArrayInput` via:
//
//	SizeConstraintSetArray{ SizeConstraintSetArgs{...} }
type SizeConstraintSetArrayInput interface {
	pulumi.Input

	ToSizeConstraintSetArrayOutput() SizeConstraintSetArrayOutput
	ToSizeConstraintSetArrayOutputWithContext(context.Context) SizeConstraintSetArrayOutput
}

type SizeConstraintSetArray []SizeConstraintSetInput

func (SizeConstraintSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SizeConstraintSet)(nil)).Elem()
}

func (i SizeConstraintSetArray) ToSizeConstraintSetArrayOutput() SizeConstraintSetArrayOutput {
	return i.ToSizeConstraintSetArrayOutputWithContext(context.Background())
}

func (i SizeConstraintSetArray) ToSizeConstraintSetArrayOutputWithContext(ctx context.Context) SizeConstraintSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SizeConstraintSetArrayOutput)
}

func (i SizeConstraintSetArray) ToOutput(ctx context.Context) pulumix.Output[[]*SizeConstraintSet] {
	return pulumix.Output[[]*SizeConstraintSet]{
		OutputState: i.ToSizeConstraintSetArrayOutputWithContext(ctx).OutputState,
	}
}

// SizeConstraintSetMapInput is an input type that accepts SizeConstraintSetMap and SizeConstraintSetMapOutput values.
// You can construct a concrete instance of `SizeConstraintSetMapInput` via:
//
//	SizeConstraintSetMap{ "key": SizeConstraintSetArgs{...} }
type SizeConstraintSetMapInput interface {
	pulumi.Input

	ToSizeConstraintSetMapOutput() SizeConstraintSetMapOutput
	ToSizeConstraintSetMapOutputWithContext(context.Context) SizeConstraintSetMapOutput
}

type SizeConstraintSetMap map[string]SizeConstraintSetInput

func (SizeConstraintSetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SizeConstraintSet)(nil)).Elem()
}

func (i SizeConstraintSetMap) ToSizeConstraintSetMapOutput() SizeConstraintSetMapOutput {
	return i.ToSizeConstraintSetMapOutputWithContext(context.Background())
}

func (i SizeConstraintSetMap) ToSizeConstraintSetMapOutputWithContext(ctx context.Context) SizeConstraintSetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SizeConstraintSetMapOutput)
}

func (i SizeConstraintSetMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*SizeConstraintSet] {
	return pulumix.Output[map[string]*SizeConstraintSet]{
		OutputState: i.ToSizeConstraintSetMapOutputWithContext(ctx).OutputState,
	}
}

type SizeConstraintSetOutput struct{ *pulumi.OutputState }

func (SizeConstraintSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SizeConstraintSet)(nil)).Elem()
}

func (o SizeConstraintSetOutput) ToSizeConstraintSetOutput() SizeConstraintSetOutput {
	return o
}

func (o SizeConstraintSetOutput) ToSizeConstraintSetOutputWithContext(ctx context.Context) SizeConstraintSetOutput {
	return o
}

func (o SizeConstraintSetOutput) ToOutput(ctx context.Context) pulumix.Output[*SizeConstraintSet] {
	return pulumix.Output[*SizeConstraintSet]{
		OutputState: o.OutputState,
	}
}

func (o SizeConstraintSetOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *SizeConstraintSet) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The name or description of the Size Constraint Set.
func (o SizeConstraintSetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *SizeConstraintSet) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the parts of web requests that you want to inspect the size of.
func (o SizeConstraintSetOutput) SizeConstraints() SizeConstraintSetSizeConstraintArrayOutput {
	return o.ApplyT(func(v *SizeConstraintSet) SizeConstraintSetSizeConstraintArrayOutput { return v.SizeConstraints }).(SizeConstraintSetSizeConstraintArrayOutput)
}

type SizeConstraintSetArrayOutput struct{ *pulumi.OutputState }

func (SizeConstraintSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SizeConstraintSet)(nil)).Elem()
}

func (o SizeConstraintSetArrayOutput) ToSizeConstraintSetArrayOutput() SizeConstraintSetArrayOutput {
	return o
}

func (o SizeConstraintSetArrayOutput) ToSizeConstraintSetArrayOutputWithContext(ctx context.Context) SizeConstraintSetArrayOutput {
	return o
}

func (o SizeConstraintSetArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*SizeConstraintSet] {
	return pulumix.Output[[]*SizeConstraintSet]{
		OutputState: o.OutputState,
	}
}

func (o SizeConstraintSetArrayOutput) Index(i pulumi.IntInput) SizeConstraintSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SizeConstraintSet {
		return vs[0].([]*SizeConstraintSet)[vs[1].(int)]
	}).(SizeConstraintSetOutput)
}

type SizeConstraintSetMapOutput struct{ *pulumi.OutputState }

func (SizeConstraintSetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SizeConstraintSet)(nil)).Elem()
}

func (o SizeConstraintSetMapOutput) ToSizeConstraintSetMapOutput() SizeConstraintSetMapOutput {
	return o
}

func (o SizeConstraintSetMapOutput) ToSizeConstraintSetMapOutputWithContext(ctx context.Context) SizeConstraintSetMapOutput {
	return o
}

func (o SizeConstraintSetMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*SizeConstraintSet] {
	return pulumix.Output[map[string]*SizeConstraintSet]{
		OutputState: o.OutputState,
	}
}

func (o SizeConstraintSetMapOutput) MapIndex(k pulumi.StringInput) SizeConstraintSetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SizeConstraintSet {
		return vs[0].(map[string]*SizeConstraintSet)[vs[1].(string)]
	}).(SizeConstraintSetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SizeConstraintSetInput)(nil)).Elem(), &SizeConstraintSet{})
	pulumi.RegisterInputType(reflect.TypeOf((*SizeConstraintSetArrayInput)(nil)).Elem(), SizeConstraintSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SizeConstraintSetMapInput)(nil)).Elem(), SizeConstraintSetMap{})
	pulumi.RegisterOutputType(SizeConstraintSetOutput{})
	pulumi.RegisterOutputType(SizeConstraintSetArrayOutput{})
	pulumi.RegisterOutputType(SizeConstraintSetMapOutput{})
}
