// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetAuthorizationToken(ctx *pulumi.Context, args *GetAuthorizationTokenArgs, opts ...pulumi.InvokeOption) (*GetAuthorizationTokenResult, error) {
	var rv GetAuthorizationTokenResult
	err := ctx.Invoke("aws:ecr/getAuthorizationToken:getAuthorizationToken", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAuthorizationToken.
type GetAuthorizationTokenArgs struct {
	RegistryId *string `pulumi:"registryId"`
}

// A collection of values returned by getAuthorizationToken.
type GetAuthorizationTokenResult struct {
	AuthorizationToken string `pulumi:"authorizationToken"`
	ExpiresAt          string `pulumi:"expiresAt"`
	// The provider-assigned unique ID for this managed resource.
	Id            string  `pulumi:"id"`
	Password      string  `pulumi:"password"`
	ProxyEndpoint string  `pulumi:"proxyEndpoint"`
	RegistryId    *string `pulumi:"registryId"`
	UserName      string  `pulumi:"userName"`
}

func GetAuthorizationTokenOutput(ctx *pulumi.Context, args GetAuthorizationTokenOutputArgs, opts ...pulumi.InvokeOption) GetAuthorizationTokenResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAuthorizationTokenResult, error) {
			args := v.(GetAuthorizationTokenArgs)
			r, err := GetAuthorizationToken(ctx, &args, opts...)
			var s GetAuthorizationTokenResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAuthorizationTokenResultOutput)
}

// A collection of arguments for invoking getAuthorizationToken.
type GetAuthorizationTokenOutputArgs struct {
	RegistryId pulumi.StringPtrInput `pulumi:"registryId"`
}

func (GetAuthorizationTokenOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizationTokenArgs)(nil)).Elem()
}

// A collection of values returned by getAuthorizationToken.
type GetAuthorizationTokenResultOutput struct{ *pulumi.OutputState }

func (GetAuthorizationTokenResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAuthorizationTokenResult)(nil)).Elem()
}

func (o GetAuthorizationTokenResultOutput) ToGetAuthorizationTokenResultOutput() GetAuthorizationTokenResultOutput {
	return o
}

func (o GetAuthorizationTokenResultOutput) ToGetAuthorizationTokenResultOutputWithContext(ctx context.Context) GetAuthorizationTokenResultOutput {
	return o
}

func (o GetAuthorizationTokenResultOutput) AuthorizationToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationTokenResult) string { return v.AuthorizationToken }).(pulumi.StringOutput)
}

func (o GetAuthorizationTokenResultOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationTokenResult) string { return v.ExpiresAt }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAuthorizationTokenResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationTokenResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAuthorizationTokenResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationTokenResult) string { return v.Password }).(pulumi.StringOutput)
}

func (o GetAuthorizationTokenResultOutput) ProxyEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationTokenResult) string { return v.ProxyEndpoint }).(pulumi.StringOutput)
}

func (o GetAuthorizationTokenResultOutput) RegistryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAuthorizationTokenResult) *string { return v.RegistryId }).(pulumi.StringPtrOutput)
}

func (o GetAuthorizationTokenResultOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAuthorizationTokenResult) string { return v.UserName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAuthorizationTokenResultOutput{})
}
