// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetImage(ctx *pulumi.Context, args *GetImageArgs, opts ...pulumi.InvokeOption) (*GetImageResult, error) {
	var rv GetImageResult
	err := ctx.Invoke("aws:ecr/getImage:getImage", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getImage.
type GetImageArgs struct {
	ImageDigest    *string `pulumi:"imageDigest"`
	ImageTag       *string `pulumi:"imageTag"`
	RegistryId     *string `pulumi:"registryId"`
	RepositoryName string  `pulumi:"repositoryName"`
}

// A collection of values returned by getImage.
type GetImageResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string   `pulumi:"id"`
	ImageDigest      string   `pulumi:"imageDigest"`
	ImagePushedAt    int      `pulumi:"imagePushedAt"`
	ImageSizeInBytes int      `pulumi:"imageSizeInBytes"`
	ImageTag         *string  `pulumi:"imageTag"`
	ImageTags        []string `pulumi:"imageTags"`
	RegistryId       string   `pulumi:"registryId"`
	RepositoryName   string   `pulumi:"repositoryName"`
}

func GetImageOutput(ctx *pulumi.Context, args GetImageOutputArgs, opts ...pulumi.InvokeOption) GetImageResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetImageResult, error) {
			args := v.(GetImageArgs)
			r, err := GetImage(ctx, &args, opts...)
			var s GetImageResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetImageResultOutput)
}

// A collection of arguments for invoking getImage.
type GetImageOutputArgs struct {
	ImageDigest    pulumi.StringPtrInput `pulumi:"imageDigest"`
	ImageTag       pulumi.StringPtrInput `pulumi:"imageTag"`
	RegistryId     pulumi.StringPtrInput `pulumi:"registryId"`
	RepositoryName pulumi.StringInput    `pulumi:"repositoryName"`
}

func (GetImageOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageArgs)(nil)).Elem()
}

// A collection of values returned by getImage.
type GetImageResultOutput struct{ *pulumi.OutputState }

func (GetImageResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImageResult)(nil)).Elem()
}

func (o GetImageResultOutput) ToGetImageResultOutput() GetImageResultOutput {
	return o
}

func (o GetImageResultOutput) ToGetImageResultOutputWithContext(ctx context.Context) GetImageResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetImageResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetImageResultOutput) ImageDigest() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageResult) string { return v.ImageDigest }).(pulumi.StringOutput)
}

func (o GetImageResultOutput) ImagePushedAt() pulumi.IntOutput {
	return o.ApplyT(func(v GetImageResult) int { return v.ImagePushedAt }).(pulumi.IntOutput)
}

func (o GetImageResultOutput) ImageSizeInBytes() pulumi.IntOutput {
	return o.ApplyT(func(v GetImageResult) int { return v.ImageSizeInBytes }).(pulumi.IntOutput)
}

func (o GetImageResultOutput) ImageTag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImageResult) *string { return v.ImageTag }).(pulumi.StringPtrOutput)
}

func (o GetImageResultOutput) ImageTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetImageResult) []string { return v.ImageTags }).(pulumi.StringArrayOutput)
}

func (o GetImageResultOutput) RegistryId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageResult) string { return v.RegistryId }).(pulumi.StringOutput)
}

func (o GetImageResultOutput) RepositoryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetImageResult) string { return v.RepositoryName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetImageResultOutput{})
}
