// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Generates an ECR lifecycle policy document in JSON format. Can be used with resources such as the `ecr.LifecyclePolicy` resource.
//
// > For more information about building AWS ECR lifecycle policy documents, see the [AWS ECR Lifecycle Policy Document Guide](https://docs.aws.amazon.com/AmazonECR/latest/userguide/LifecyclePolicies.html).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ecr"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := ecr.GetLifecyclePolicyDocument(ctx, &ecr.GetLifecyclePolicyDocumentArgs{
//				Rules: []ecr.GetLifecyclePolicyDocumentRule{
//					{
//						Priority:    1,
//						Description: pulumi.StringRef("This is a test."),
//						Selection: {
//							TagStatus: "tagged",
//							TagPrefixLists: []string{
//								"prod",
//							},
//							CountType:   "imageCountMoreThan",
//							CountNumber: 100,
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = ecr.NewLifecyclePolicy(ctx, "example", &ecr.LifecyclePolicyArgs{
//				Repository: pulumi.Any(exampleAwsEcrRepository.Name),
//				Policy:     pulumi.String(example.Json),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetLifecyclePolicyDocument(ctx *pulumi.Context, args *GetLifecyclePolicyDocumentArgs, opts ...pulumi.InvokeOption) (*GetLifecyclePolicyDocumentResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLifecyclePolicyDocumentResult
	err := ctx.Invoke("aws:ecr/getLifecyclePolicyDocument:getLifecyclePolicyDocument", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLifecyclePolicyDocument.
type GetLifecyclePolicyDocumentArgs struct {
	Rules []GetLifecyclePolicyDocumentRule `pulumi:"rules"`
}

// A collection of values returned by getLifecyclePolicyDocument.
type GetLifecyclePolicyDocumentResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The above arguments serialized as a standard JSON policy document.
	Json  string                           `pulumi:"json"`
	Rules []GetLifecyclePolicyDocumentRule `pulumi:"rules"`
}

func GetLifecyclePolicyDocumentOutput(ctx *pulumi.Context, args GetLifecyclePolicyDocumentOutputArgs, opts ...pulumi.InvokeOption) GetLifecyclePolicyDocumentResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetLifecyclePolicyDocumentResultOutput, error) {
			args := v.(GetLifecyclePolicyDocumentArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws:ecr/getLifecyclePolicyDocument:getLifecyclePolicyDocument", args, GetLifecyclePolicyDocumentResultOutput{}, options).(GetLifecyclePolicyDocumentResultOutput), nil
		}).(GetLifecyclePolicyDocumentResultOutput)
}

// A collection of arguments for invoking getLifecyclePolicyDocument.
type GetLifecyclePolicyDocumentOutputArgs struct {
	Rules GetLifecyclePolicyDocumentRuleArrayInput `pulumi:"rules"`
}

func (GetLifecyclePolicyDocumentOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecyclePolicyDocumentArgs)(nil)).Elem()
}

// A collection of values returned by getLifecyclePolicyDocument.
type GetLifecyclePolicyDocumentResultOutput struct{ *pulumi.OutputState }

func (GetLifecyclePolicyDocumentResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLifecyclePolicyDocumentResult)(nil)).Elem()
}

func (o GetLifecyclePolicyDocumentResultOutput) ToGetLifecyclePolicyDocumentResultOutput() GetLifecyclePolicyDocumentResultOutput {
	return o
}

func (o GetLifecyclePolicyDocumentResultOutput) ToGetLifecyclePolicyDocumentResultOutputWithContext(ctx context.Context) GetLifecyclePolicyDocumentResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetLifecyclePolicyDocumentResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLifecyclePolicyDocumentResult) string { return v.Id }).(pulumi.StringOutput)
}

// The above arguments serialized as a standard JSON policy document.
func (o GetLifecyclePolicyDocumentResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v GetLifecyclePolicyDocumentResult) string { return v.Json }).(pulumi.StringOutput)
}

func (o GetLifecyclePolicyDocumentResultOutput) Rules() GetLifecyclePolicyDocumentRuleArrayOutput {
	return o.ApplyT(func(v GetLifecyclePolicyDocumentResult) []GetLifecyclePolicyDocumentRule { return v.Rules }).(GetLifecyclePolicyDocumentRuleArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLifecyclePolicyDocumentResultOutput{})
}
