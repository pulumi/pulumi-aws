// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecr

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to manage AWS ECR Basic Scan Type
//
// ## Example Usage
//
// ### Configuring Basic Scanning
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ecr"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ecr.NewAccountSetting(ctx, "basic_scan_type_version", &ecr.AccountSettingArgs{
//				Name:  pulumi.String("BASIC_SCAN_TYPE_VERSION"),
//				Value: pulumi.String("AWS_NATIVE"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ### Configuring Registry Policy Scope
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ecr"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ecr.NewAccountSetting(ctx, "registry_policy_scope", &ecr.AccountSettingArgs{
//				Name:  pulumi.String("REGISTRY_POLICY_SCOPE"),
//				Value: pulumi.String("V2"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import EMR Security Configurations using the account setting name. For example:
//
// ```sh
// $ pulumi import aws:ecr/accountSetting:AccountSetting foo BASIC_SCAN_TYPE_VERSION
// ```
type AccountSetting struct {
	pulumi.CustomResourceState

	// Name of the account setting. One of: `BASIC_SCAN_TYPE_VERSION`, `REGISTRY_POLICY_SCOPE`.
	Name pulumi.StringOutput `pulumi:"name"`
	// Setting value that is specified. Valid values are:
	// * If `name` is specified as `BASIC_SCAN_TYPE_VERSION`, one of: `AWS_NATIVE`, `CLAIR`.
	// * If `name` is specified as `REGISTRY_POLICY_SCOPE`, one of: `V1`, `V2`.
	Value pulumi.StringOutput `pulumi:"value"`
}

// NewAccountSetting registers a new resource with the given unique name, arguments, and options.
func NewAccountSetting(ctx *pulumi.Context,
	name string, args *AccountSettingArgs, opts ...pulumi.ResourceOption) (*AccountSetting, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Value == nil {
		return nil, errors.New("invalid value for required argument 'Value'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccountSetting
	err := ctx.RegisterResource("aws:ecr/accountSetting:AccountSetting", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountSetting gets an existing AccountSetting resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountSetting(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountSettingState, opts ...pulumi.ResourceOption) (*AccountSetting, error) {
	var resource AccountSetting
	err := ctx.ReadResource("aws:ecr/accountSetting:AccountSetting", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountSetting resources.
type accountSettingState struct {
	// Name of the account setting. One of: `BASIC_SCAN_TYPE_VERSION`, `REGISTRY_POLICY_SCOPE`.
	Name *string `pulumi:"name"`
	// Setting value that is specified. Valid values are:
	// * If `name` is specified as `BASIC_SCAN_TYPE_VERSION`, one of: `AWS_NATIVE`, `CLAIR`.
	// * If `name` is specified as `REGISTRY_POLICY_SCOPE`, one of: `V1`, `V2`.
	Value *string `pulumi:"value"`
}

type AccountSettingState struct {
	// Name of the account setting. One of: `BASIC_SCAN_TYPE_VERSION`, `REGISTRY_POLICY_SCOPE`.
	Name pulumi.StringPtrInput
	// Setting value that is specified. Valid values are:
	// * If `name` is specified as `BASIC_SCAN_TYPE_VERSION`, one of: `AWS_NATIVE`, `CLAIR`.
	// * If `name` is specified as `REGISTRY_POLICY_SCOPE`, one of: `V1`, `V2`.
	Value pulumi.StringPtrInput
}

func (AccountSettingState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountSettingState)(nil)).Elem()
}

type accountSettingArgs struct {
	// Name of the account setting. One of: `BASIC_SCAN_TYPE_VERSION`, `REGISTRY_POLICY_SCOPE`.
	Name *string `pulumi:"name"`
	// Setting value that is specified. Valid values are:
	// * If `name` is specified as `BASIC_SCAN_TYPE_VERSION`, one of: `AWS_NATIVE`, `CLAIR`.
	// * If `name` is specified as `REGISTRY_POLICY_SCOPE`, one of: `V1`, `V2`.
	Value string `pulumi:"value"`
}

// The set of arguments for constructing a AccountSetting resource.
type AccountSettingArgs struct {
	// Name of the account setting. One of: `BASIC_SCAN_TYPE_VERSION`, `REGISTRY_POLICY_SCOPE`.
	Name pulumi.StringPtrInput
	// Setting value that is specified. Valid values are:
	// * If `name` is specified as `BASIC_SCAN_TYPE_VERSION`, one of: `AWS_NATIVE`, `CLAIR`.
	// * If `name` is specified as `REGISTRY_POLICY_SCOPE`, one of: `V1`, `V2`.
	Value pulumi.StringInput
}

func (AccountSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountSettingArgs)(nil)).Elem()
}

type AccountSettingInput interface {
	pulumi.Input

	ToAccountSettingOutput() AccountSettingOutput
	ToAccountSettingOutputWithContext(ctx context.Context) AccountSettingOutput
}

func (*AccountSetting) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountSetting)(nil)).Elem()
}

func (i *AccountSetting) ToAccountSettingOutput() AccountSettingOutput {
	return i.ToAccountSettingOutputWithContext(context.Background())
}

func (i *AccountSetting) ToAccountSettingOutputWithContext(ctx context.Context) AccountSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountSettingOutput)
}

// AccountSettingArrayInput is an input type that accepts AccountSettingArray and AccountSettingArrayOutput values.
// You can construct a concrete instance of `AccountSettingArrayInput` via:
//
//	AccountSettingArray{ AccountSettingArgs{...} }
type AccountSettingArrayInput interface {
	pulumi.Input

	ToAccountSettingArrayOutput() AccountSettingArrayOutput
	ToAccountSettingArrayOutputWithContext(context.Context) AccountSettingArrayOutput
}

type AccountSettingArray []AccountSettingInput

func (AccountSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountSetting)(nil)).Elem()
}

func (i AccountSettingArray) ToAccountSettingArrayOutput() AccountSettingArrayOutput {
	return i.ToAccountSettingArrayOutputWithContext(context.Background())
}

func (i AccountSettingArray) ToAccountSettingArrayOutputWithContext(ctx context.Context) AccountSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountSettingArrayOutput)
}

// AccountSettingMapInput is an input type that accepts AccountSettingMap and AccountSettingMapOutput values.
// You can construct a concrete instance of `AccountSettingMapInput` via:
//
//	AccountSettingMap{ "key": AccountSettingArgs{...} }
type AccountSettingMapInput interface {
	pulumi.Input

	ToAccountSettingMapOutput() AccountSettingMapOutput
	ToAccountSettingMapOutputWithContext(context.Context) AccountSettingMapOutput
}

type AccountSettingMap map[string]AccountSettingInput

func (AccountSettingMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountSetting)(nil)).Elem()
}

func (i AccountSettingMap) ToAccountSettingMapOutput() AccountSettingMapOutput {
	return i.ToAccountSettingMapOutputWithContext(context.Background())
}

func (i AccountSettingMap) ToAccountSettingMapOutputWithContext(ctx context.Context) AccountSettingMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountSettingMapOutput)
}

type AccountSettingOutput struct{ *pulumi.OutputState }

func (AccountSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountSetting)(nil)).Elem()
}

func (o AccountSettingOutput) ToAccountSettingOutput() AccountSettingOutput {
	return o
}

func (o AccountSettingOutput) ToAccountSettingOutputWithContext(ctx context.Context) AccountSettingOutput {
	return o
}

// Name of the account setting. One of: `BASIC_SCAN_TYPE_VERSION`, `REGISTRY_POLICY_SCOPE`.
func (o AccountSettingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountSetting) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Setting value that is specified. Valid values are:
// * If `name` is specified as `BASIC_SCAN_TYPE_VERSION`, one of: `AWS_NATIVE`, `CLAIR`.
// * If `name` is specified as `REGISTRY_POLICY_SCOPE`, one of: `V1`, `V2`.
func (o AccountSettingOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v *AccountSetting) pulumi.StringOutput { return v.Value }).(pulumi.StringOutput)
}

type AccountSettingArrayOutput struct{ *pulumi.OutputState }

func (AccountSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountSetting)(nil)).Elem()
}

func (o AccountSettingArrayOutput) ToAccountSettingArrayOutput() AccountSettingArrayOutput {
	return o
}

func (o AccountSettingArrayOutput) ToAccountSettingArrayOutputWithContext(ctx context.Context) AccountSettingArrayOutput {
	return o
}

func (o AccountSettingArrayOutput) Index(i pulumi.IntInput) AccountSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccountSetting {
		return vs[0].([]*AccountSetting)[vs[1].(int)]
	}).(AccountSettingOutput)
}

type AccountSettingMapOutput struct{ *pulumi.OutputState }

func (AccountSettingMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountSetting)(nil)).Elem()
}

func (o AccountSettingMapOutput) ToAccountSettingMapOutput() AccountSettingMapOutput {
	return o
}

func (o AccountSettingMapOutput) ToAccountSettingMapOutputWithContext(ctx context.Context) AccountSettingMapOutput {
	return o
}

func (o AccountSettingMapOutput) MapIndex(k pulumi.StringInput) AccountSettingOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccountSetting {
		return vs[0].(map[string]*AccountSetting)[vs[1].(string)]
	}).(AccountSettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountSettingInput)(nil)).Elem(), &AccountSetting{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountSettingArrayInput)(nil)).Elem(), AccountSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountSettingMapInput)(nil)).Elem(), AccountSettingMap{})
	pulumi.RegisterOutputType(AccountSettingOutput{})
	pulumi.RegisterOutputType(AccountSettingArrayOutput{})
	pulumi.RegisterOutputType(AccountSettingMapOutput{})
}
