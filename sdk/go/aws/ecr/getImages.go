// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The ECR Images data source allows the list of images in a specified repository to be retrieved.
func GetImages(ctx *pulumi.Context, args *GetImagesArgs, opts ...pulumi.InvokeOption) (*GetImagesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetImagesResult
	err := ctx.Invoke("aws:ecr/getImages:getImages", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getImages.
type GetImagesArgs struct {
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// ID of the Registry where the repository resides.
	RegistryId *string `pulumi:"registryId"`
	// Name of the ECR Repository.
	RepositoryName string `pulumi:"repositoryName"`
}

// A collection of values returned by getImages.
type GetImagesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// List of image objects containing image digest and tags. Each object has the following attributes:
	ImageIds       []GetImagesImageId `pulumi:"imageIds"`
	Region         string             `pulumi:"region"`
	RegistryId     *string            `pulumi:"registryId"`
	RepositoryName string             `pulumi:"repositoryName"`
}

func GetImagesOutput(ctx *pulumi.Context, args GetImagesOutputArgs, opts ...pulumi.InvokeOption) GetImagesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetImagesResultOutput, error) {
			args := v.(GetImagesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("aws:ecr/getImages:getImages", args, GetImagesResultOutput{}, options).(GetImagesResultOutput), nil
		}).(GetImagesResultOutput)
}

// A collection of arguments for invoking getImages.
type GetImagesOutputArgs struct {
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput `pulumi:"region"`
	// ID of the Registry where the repository resides.
	RegistryId pulumi.StringPtrInput `pulumi:"registryId"`
	// Name of the ECR Repository.
	RepositoryName pulumi.StringInput `pulumi:"repositoryName"`
}

func (GetImagesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesArgs)(nil)).Elem()
}

// A collection of values returned by getImages.
type GetImagesResultOutput struct{ *pulumi.OutputState }

func (GetImagesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesResult)(nil)).Elem()
}

func (o GetImagesResultOutput) ToGetImagesResultOutput() GetImagesResultOutput {
	return o
}

func (o GetImagesResultOutput) ToGetImagesResultOutputWithContext(ctx context.Context) GetImagesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetImagesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesResult) string { return v.Id }).(pulumi.StringOutput)
}

// List of image objects containing image digest and tags. Each object has the following attributes:
func (o GetImagesResultOutput) ImageIds() GetImagesImageIdArrayOutput {
	return o.ApplyT(func(v GetImagesResult) []GetImagesImageId { return v.ImageIds }).(GetImagesImageIdArrayOutput)
}

func (o GetImagesResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetImagesResultOutput) RegistryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesResult) *string { return v.RegistryId }).(pulumi.StringPtrOutput)
}

func (o GetImagesResultOutput) RepositoryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesResult) string { return v.RepositoryName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetImagesResultOutput{})
}
