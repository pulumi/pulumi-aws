// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The ECR Repository Creation Template data source allows the template details to be retrieved for a Repository Creation Template.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ecr"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ecr.LookupRepositoryCreationTemplate(ctx, &ecr.LookupRepositoryCreationTemplateArgs{
//				Prefix: "example",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupRepositoryCreationTemplate(ctx *pulumi.Context, args *LookupRepositoryCreationTemplateArgs, opts ...pulumi.InvokeOption) (*LookupRepositoryCreationTemplateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRepositoryCreationTemplateResult
	err := ctx.Invoke("aws:ecr/getRepositoryCreationTemplate:getRepositoryCreationTemplate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRepositoryCreationTemplate.
type LookupRepositoryCreationTemplateArgs struct {
	// The repository name prefix that the template matches against.
	Prefix string `pulumi:"prefix"`
	// A map of tags to assign to any created repositories.
	ResourceTags map[string]string `pulumi:"resourceTags"`
}

// A collection of values returned by getRepositoryCreationTemplate.
type LookupRepositoryCreationTemplateResult struct {
	// Which features this template applies to. Contains one or more of `PULL_THROUGH_CACHE` or `REPLICATION`.
	AppliedFors []string `pulumi:"appliedFors"`
	// The ARN of the custom role used for repository creation.
	CustomRoleArn string `pulumi:"customRoleArn"`
	// The description for this template.
	Description string `pulumi:"description"`
	// Encryption configuration for any created repositories. See Encryption Configuration below.
	EncryptionConfigurations []GetRepositoryCreationTemplateEncryptionConfiguration `pulumi:"encryptionConfigurations"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The tag mutability setting for any created repositories.
	ImageTagMutability string `pulumi:"imageTagMutability"`
	// The lifecycle policy document to apply to any created repositories.
	LifecyclePolicy string `pulumi:"lifecyclePolicy"`
	Prefix          string `pulumi:"prefix"`
	// The registry ID the repository creation template applies to.
	RegistryId string `pulumi:"registryId"`
	// The registry policy document to apply to any created repositories.
	RepositoryPolicy string `pulumi:"repositoryPolicy"`
	// A map of tags to assign to any created repositories.
	ResourceTags map[string]string `pulumi:"resourceTags"`
}

func LookupRepositoryCreationTemplateOutput(ctx *pulumi.Context, args LookupRepositoryCreationTemplateOutputArgs, opts ...pulumi.InvokeOption) LookupRepositoryCreationTemplateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRepositoryCreationTemplateResultOutput, error) {
			args := v.(LookupRepositoryCreationTemplateArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupRepositoryCreationTemplateResult
			secret, err := ctx.InvokePackageRaw("aws:ecr/getRepositoryCreationTemplate:getRepositoryCreationTemplate", args, &rv, "", opts...)
			if err != nil {
				return LookupRepositoryCreationTemplateResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupRepositoryCreationTemplateResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupRepositoryCreationTemplateResultOutput), nil
			}
			return output, nil
		}).(LookupRepositoryCreationTemplateResultOutput)
}

// A collection of arguments for invoking getRepositoryCreationTemplate.
type LookupRepositoryCreationTemplateOutputArgs struct {
	// The repository name prefix that the template matches against.
	Prefix pulumi.StringInput `pulumi:"prefix"`
	// A map of tags to assign to any created repositories.
	ResourceTags pulumi.StringMapInput `pulumi:"resourceTags"`
}

func (LookupRepositoryCreationTemplateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRepositoryCreationTemplateArgs)(nil)).Elem()
}

// A collection of values returned by getRepositoryCreationTemplate.
type LookupRepositoryCreationTemplateResultOutput struct{ *pulumi.OutputState }

func (LookupRepositoryCreationTemplateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRepositoryCreationTemplateResult)(nil)).Elem()
}

func (o LookupRepositoryCreationTemplateResultOutput) ToLookupRepositoryCreationTemplateResultOutput() LookupRepositoryCreationTemplateResultOutput {
	return o
}

func (o LookupRepositoryCreationTemplateResultOutput) ToLookupRepositoryCreationTemplateResultOutputWithContext(ctx context.Context) LookupRepositoryCreationTemplateResultOutput {
	return o
}

// Which features this template applies to. Contains one or more of `PULL_THROUGH_CACHE` or `REPLICATION`.
func (o LookupRepositoryCreationTemplateResultOutput) AppliedFors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupRepositoryCreationTemplateResult) []string { return v.AppliedFors }).(pulumi.StringArrayOutput)
}

// The ARN of the custom role used for repository creation.
func (o LookupRepositoryCreationTemplateResultOutput) CustomRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRepositoryCreationTemplateResult) string { return v.CustomRoleArn }).(pulumi.StringOutput)
}

// The description for this template.
func (o LookupRepositoryCreationTemplateResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRepositoryCreationTemplateResult) string { return v.Description }).(pulumi.StringOutput)
}

// Encryption configuration for any created repositories. See Encryption Configuration below.
func (o LookupRepositoryCreationTemplateResultOutput) EncryptionConfigurations() GetRepositoryCreationTemplateEncryptionConfigurationArrayOutput {
	return o.ApplyT(func(v LookupRepositoryCreationTemplateResult) []GetRepositoryCreationTemplateEncryptionConfiguration {
		return v.EncryptionConfigurations
	}).(GetRepositoryCreationTemplateEncryptionConfigurationArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRepositoryCreationTemplateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRepositoryCreationTemplateResult) string { return v.Id }).(pulumi.StringOutput)
}

// The tag mutability setting for any created repositories.
func (o LookupRepositoryCreationTemplateResultOutput) ImageTagMutability() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRepositoryCreationTemplateResult) string { return v.ImageTagMutability }).(pulumi.StringOutput)
}

// The lifecycle policy document to apply to any created repositories.
func (o LookupRepositoryCreationTemplateResultOutput) LifecyclePolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRepositoryCreationTemplateResult) string { return v.LifecyclePolicy }).(pulumi.StringOutput)
}

func (o LookupRepositoryCreationTemplateResultOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRepositoryCreationTemplateResult) string { return v.Prefix }).(pulumi.StringOutput)
}

// The registry ID the repository creation template applies to.
func (o LookupRepositoryCreationTemplateResultOutput) RegistryId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRepositoryCreationTemplateResult) string { return v.RegistryId }).(pulumi.StringOutput)
}

// The registry policy document to apply to any created repositories.
func (o LookupRepositoryCreationTemplateResultOutput) RepositoryPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRepositoryCreationTemplateResult) string { return v.RepositoryPolicy }).(pulumi.StringOutput)
}

// A map of tags to assign to any created repositories.
func (o LookupRepositoryCreationTemplateResultOutput) ResourceTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupRepositoryCreationTemplateResult) map[string]string { return v.ResourceTags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRepositoryCreationTemplateResultOutput{})
}
