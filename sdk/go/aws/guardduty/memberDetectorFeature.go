// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package guardduty

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to manage a single Amazon GuardDuty [detector feature](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty-features-activation-model.html#guardduty-features) for a member account.
//
// > **NOTE:** Deleting this resource does not disable the detector feature in the member account, the resource in simply removed from state instead.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/guardduty"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := guardduty.NewDetector(ctx, "example", &guardduty.DetectorArgs{
//				Enable: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = guardduty.NewMemberDetectorFeature(ctx, "runtime_monitoring", &guardduty.MemberDetectorFeatureArgs{
//				DetectorId: example.ID(),
//				AccountId:  pulumi.String("123456789012"),
//				Name:       pulumi.String("RUNTIME_MONITORING"),
//				Status:     pulumi.String("ENABLED"),
//				AdditionalConfigurations: guardduty.MemberDetectorFeatureAdditionalConfigurationArray{
//					&guardduty.MemberDetectorFeatureAdditionalConfigurationArgs{
//						Name:   pulumi.String("EKS_ADDON_MANAGEMENT"),
//						Status: pulumi.String("ENABLED"),
//					},
//					&guardduty.MemberDetectorFeatureAdditionalConfigurationArgs{
//						Name:   pulumi.String("ECS_FARGATE_AGENT_MANAGEMENT"),
//						Status: pulumi.String("ENABLED"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type MemberDetectorFeature struct {
	pulumi.CustomResourceState

	// Member account ID to be updated.
	AccountId pulumi.StringOutput `pulumi:"accountId"`
	// Additional feature configuration block. See below.
	AdditionalConfigurations MemberDetectorFeatureAdditionalConfigurationArrayOutput `pulumi:"additionalConfigurations"`
	// Amazon GuardDuty detector ID.
	DetectorId pulumi.StringOutput `pulumi:"detectorId"`
	// The name of the detector feature. Valid values: `S3_DATA_EVENTS`, `EKS_AUDIT_LOGS`, `EBS_MALWARE_PROTECTION`, `RDS_LOGIN_EVENTS`, `EKS_RUNTIME_MONITORING`,`RUNTIME_MONITORING`, `LAMBDA_NETWORK_LOGS`.
	Name pulumi.StringOutput `pulumi:"name"`
	// The status of the detector feature. Valid values: `ENABLED`, `DISABLED`.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewMemberDetectorFeature registers a new resource with the given unique name, arguments, and options.
func NewMemberDetectorFeature(ctx *pulumi.Context,
	name string, args *MemberDetectorFeatureArgs, opts ...pulumi.ResourceOption) (*MemberDetectorFeature, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccountId == nil {
		return nil, errors.New("invalid value for required argument 'AccountId'")
	}
	if args.DetectorId == nil {
		return nil, errors.New("invalid value for required argument 'DetectorId'")
	}
	if args.Status == nil {
		return nil, errors.New("invalid value for required argument 'Status'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MemberDetectorFeature
	err := ctx.RegisterResource("aws:guardduty/memberDetectorFeature:MemberDetectorFeature", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMemberDetectorFeature gets an existing MemberDetectorFeature resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMemberDetectorFeature(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MemberDetectorFeatureState, opts ...pulumi.ResourceOption) (*MemberDetectorFeature, error) {
	var resource MemberDetectorFeature
	err := ctx.ReadResource("aws:guardduty/memberDetectorFeature:MemberDetectorFeature", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MemberDetectorFeature resources.
type memberDetectorFeatureState struct {
	// Member account ID to be updated.
	AccountId *string `pulumi:"accountId"`
	// Additional feature configuration block. See below.
	AdditionalConfigurations []MemberDetectorFeatureAdditionalConfiguration `pulumi:"additionalConfigurations"`
	// Amazon GuardDuty detector ID.
	DetectorId *string `pulumi:"detectorId"`
	// The name of the detector feature. Valid values: `S3_DATA_EVENTS`, `EKS_AUDIT_LOGS`, `EBS_MALWARE_PROTECTION`, `RDS_LOGIN_EVENTS`, `EKS_RUNTIME_MONITORING`,`RUNTIME_MONITORING`, `LAMBDA_NETWORK_LOGS`.
	Name *string `pulumi:"name"`
	// The status of the detector feature. Valid values: `ENABLED`, `DISABLED`.
	Status *string `pulumi:"status"`
}

type MemberDetectorFeatureState struct {
	// Member account ID to be updated.
	AccountId pulumi.StringPtrInput
	// Additional feature configuration block. See below.
	AdditionalConfigurations MemberDetectorFeatureAdditionalConfigurationArrayInput
	// Amazon GuardDuty detector ID.
	DetectorId pulumi.StringPtrInput
	// The name of the detector feature. Valid values: `S3_DATA_EVENTS`, `EKS_AUDIT_LOGS`, `EBS_MALWARE_PROTECTION`, `RDS_LOGIN_EVENTS`, `EKS_RUNTIME_MONITORING`,`RUNTIME_MONITORING`, `LAMBDA_NETWORK_LOGS`.
	Name pulumi.StringPtrInput
	// The status of the detector feature. Valid values: `ENABLED`, `DISABLED`.
	Status pulumi.StringPtrInput
}

func (MemberDetectorFeatureState) ElementType() reflect.Type {
	return reflect.TypeOf((*memberDetectorFeatureState)(nil)).Elem()
}

type memberDetectorFeatureArgs struct {
	// Member account ID to be updated.
	AccountId string `pulumi:"accountId"`
	// Additional feature configuration block. See below.
	AdditionalConfigurations []MemberDetectorFeatureAdditionalConfiguration `pulumi:"additionalConfigurations"`
	// Amazon GuardDuty detector ID.
	DetectorId string `pulumi:"detectorId"`
	// The name of the detector feature. Valid values: `S3_DATA_EVENTS`, `EKS_AUDIT_LOGS`, `EBS_MALWARE_PROTECTION`, `RDS_LOGIN_EVENTS`, `EKS_RUNTIME_MONITORING`,`RUNTIME_MONITORING`, `LAMBDA_NETWORK_LOGS`.
	Name *string `pulumi:"name"`
	// The status of the detector feature. Valid values: `ENABLED`, `DISABLED`.
	Status string `pulumi:"status"`
}

// The set of arguments for constructing a MemberDetectorFeature resource.
type MemberDetectorFeatureArgs struct {
	// Member account ID to be updated.
	AccountId pulumi.StringInput
	// Additional feature configuration block. See below.
	AdditionalConfigurations MemberDetectorFeatureAdditionalConfigurationArrayInput
	// Amazon GuardDuty detector ID.
	DetectorId pulumi.StringInput
	// The name of the detector feature. Valid values: `S3_DATA_EVENTS`, `EKS_AUDIT_LOGS`, `EBS_MALWARE_PROTECTION`, `RDS_LOGIN_EVENTS`, `EKS_RUNTIME_MONITORING`,`RUNTIME_MONITORING`, `LAMBDA_NETWORK_LOGS`.
	Name pulumi.StringPtrInput
	// The status of the detector feature. Valid values: `ENABLED`, `DISABLED`.
	Status pulumi.StringInput
}

func (MemberDetectorFeatureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*memberDetectorFeatureArgs)(nil)).Elem()
}

type MemberDetectorFeatureInput interface {
	pulumi.Input

	ToMemberDetectorFeatureOutput() MemberDetectorFeatureOutput
	ToMemberDetectorFeatureOutputWithContext(ctx context.Context) MemberDetectorFeatureOutput
}

func (*MemberDetectorFeature) ElementType() reflect.Type {
	return reflect.TypeOf((**MemberDetectorFeature)(nil)).Elem()
}

func (i *MemberDetectorFeature) ToMemberDetectorFeatureOutput() MemberDetectorFeatureOutput {
	return i.ToMemberDetectorFeatureOutputWithContext(context.Background())
}

func (i *MemberDetectorFeature) ToMemberDetectorFeatureOutputWithContext(ctx context.Context) MemberDetectorFeatureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemberDetectorFeatureOutput)
}

// MemberDetectorFeatureArrayInput is an input type that accepts MemberDetectorFeatureArray and MemberDetectorFeatureArrayOutput values.
// You can construct a concrete instance of `MemberDetectorFeatureArrayInput` via:
//
//	MemberDetectorFeatureArray{ MemberDetectorFeatureArgs{...} }
type MemberDetectorFeatureArrayInput interface {
	pulumi.Input

	ToMemberDetectorFeatureArrayOutput() MemberDetectorFeatureArrayOutput
	ToMemberDetectorFeatureArrayOutputWithContext(context.Context) MemberDetectorFeatureArrayOutput
}

type MemberDetectorFeatureArray []MemberDetectorFeatureInput

func (MemberDetectorFeatureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MemberDetectorFeature)(nil)).Elem()
}

func (i MemberDetectorFeatureArray) ToMemberDetectorFeatureArrayOutput() MemberDetectorFeatureArrayOutput {
	return i.ToMemberDetectorFeatureArrayOutputWithContext(context.Background())
}

func (i MemberDetectorFeatureArray) ToMemberDetectorFeatureArrayOutputWithContext(ctx context.Context) MemberDetectorFeatureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemberDetectorFeatureArrayOutput)
}

// MemberDetectorFeatureMapInput is an input type that accepts MemberDetectorFeatureMap and MemberDetectorFeatureMapOutput values.
// You can construct a concrete instance of `MemberDetectorFeatureMapInput` via:
//
//	MemberDetectorFeatureMap{ "key": MemberDetectorFeatureArgs{...} }
type MemberDetectorFeatureMapInput interface {
	pulumi.Input

	ToMemberDetectorFeatureMapOutput() MemberDetectorFeatureMapOutput
	ToMemberDetectorFeatureMapOutputWithContext(context.Context) MemberDetectorFeatureMapOutput
}

type MemberDetectorFeatureMap map[string]MemberDetectorFeatureInput

func (MemberDetectorFeatureMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MemberDetectorFeature)(nil)).Elem()
}

func (i MemberDetectorFeatureMap) ToMemberDetectorFeatureMapOutput() MemberDetectorFeatureMapOutput {
	return i.ToMemberDetectorFeatureMapOutputWithContext(context.Background())
}

func (i MemberDetectorFeatureMap) ToMemberDetectorFeatureMapOutputWithContext(ctx context.Context) MemberDetectorFeatureMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MemberDetectorFeatureMapOutput)
}

type MemberDetectorFeatureOutput struct{ *pulumi.OutputState }

func (MemberDetectorFeatureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MemberDetectorFeature)(nil)).Elem()
}

func (o MemberDetectorFeatureOutput) ToMemberDetectorFeatureOutput() MemberDetectorFeatureOutput {
	return o
}

func (o MemberDetectorFeatureOutput) ToMemberDetectorFeatureOutputWithContext(ctx context.Context) MemberDetectorFeatureOutput {
	return o
}

// Member account ID to be updated.
func (o MemberDetectorFeatureOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *MemberDetectorFeature) pulumi.StringOutput { return v.AccountId }).(pulumi.StringOutput)
}

// Additional feature configuration block. See below.
func (o MemberDetectorFeatureOutput) AdditionalConfigurations() MemberDetectorFeatureAdditionalConfigurationArrayOutput {
	return o.ApplyT(func(v *MemberDetectorFeature) MemberDetectorFeatureAdditionalConfigurationArrayOutput {
		return v.AdditionalConfigurations
	}).(MemberDetectorFeatureAdditionalConfigurationArrayOutput)
}

// Amazon GuardDuty detector ID.
func (o MemberDetectorFeatureOutput) DetectorId() pulumi.StringOutput {
	return o.ApplyT(func(v *MemberDetectorFeature) pulumi.StringOutput { return v.DetectorId }).(pulumi.StringOutput)
}

// The name of the detector feature. Valid values: `S3_DATA_EVENTS`, `EKS_AUDIT_LOGS`, `EBS_MALWARE_PROTECTION`, `RDS_LOGIN_EVENTS`, `EKS_RUNTIME_MONITORING`,`RUNTIME_MONITORING`, `LAMBDA_NETWORK_LOGS`.
func (o MemberDetectorFeatureOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *MemberDetectorFeature) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The status of the detector feature. Valid values: `ENABLED`, `DISABLED`.
func (o MemberDetectorFeatureOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *MemberDetectorFeature) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type MemberDetectorFeatureArrayOutput struct{ *pulumi.OutputState }

func (MemberDetectorFeatureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MemberDetectorFeature)(nil)).Elem()
}

func (o MemberDetectorFeatureArrayOutput) ToMemberDetectorFeatureArrayOutput() MemberDetectorFeatureArrayOutput {
	return o
}

func (o MemberDetectorFeatureArrayOutput) ToMemberDetectorFeatureArrayOutputWithContext(ctx context.Context) MemberDetectorFeatureArrayOutput {
	return o
}

func (o MemberDetectorFeatureArrayOutput) Index(i pulumi.IntInput) MemberDetectorFeatureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MemberDetectorFeature {
		return vs[0].([]*MemberDetectorFeature)[vs[1].(int)]
	}).(MemberDetectorFeatureOutput)
}

type MemberDetectorFeatureMapOutput struct{ *pulumi.OutputState }

func (MemberDetectorFeatureMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MemberDetectorFeature)(nil)).Elem()
}

func (o MemberDetectorFeatureMapOutput) ToMemberDetectorFeatureMapOutput() MemberDetectorFeatureMapOutput {
	return o
}

func (o MemberDetectorFeatureMapOutput) ToMemberDetectorFeatureMapOutputWithContext(ctx context.Context) MemberDetectorFeatureMapOutput {
	return o
}

func (o MemberDetectorFeatureMapOutput) MapIndex(k pulumi.StringInput) MemberDetectorFeatureOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MemberDetectorFeature {
		return vs[0].(map[string]*MemberDetectorFeature)[vs[1].(string)]
	}).(MemberDetectorFeatureOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MemberDetectorFeatureInput)(nil)).Elem(), &MemberDetectorFeature{})
	pulumi.RegisterInputType(reflect.TypeOf((*MemberDetectorFeatureArrayInput)(nil)).Elem(), MemberDetectorFeatureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MemberDetectorFeatureMapInput)(nil)).Elem(), MemberDetectorFeatureMap{})
	pulumi.RegisterOutputType(MemberDetectorFeatureOutput{})
	pulumi.RegisterOutputType(MemberDetectorFeatureArrayOutput{})
	pulumi.RegisterOutputType(MemberDetectorFeatureMapOutput{})
}
