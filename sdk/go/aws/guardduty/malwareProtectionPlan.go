// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package guardduty

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to manage a GuardDuty malware protection plan.
//
// ## Import
//
// Using `pulumi import`, import GuardDuty malware protection plans using their IDs. For example:
//
// ```sh
// $ pulumi import aws:guardduty/malwareProtectionPlan:MalwareProtectionPlan example 1234567890abcdef0123
// ```
type MalwareProtectionPlan struct {
	pulumi.CustomResourceState

	// Information about whether the tags will be added to the S3 object after scanning. See `actions` below.
	Actions MalwareProtectionPlanActionArrayOutput `pulumi:"actions"`
	// The ARN of the GuardDuty malware protection plan
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The timestamp when the Malware Protection plan resource was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// Information about the protected resource that is associated with the created Malware Protection plan. Presently, S3Bucket is the only supported protected resource. See `protectedResource` below.
	ProtectedResource MalwareProtectionPlanProtectedResourcePtrOutput `pulumi:"protectedResource"`
	// The IAM role that includes the permissions required to scan and add tags to the associated protected resource.
	Role pulumi.StringOutput `pulumi:"role"`
	// The GuardDuty malware protection plan status. Valid values are `ACTIVE`, `WARNING`, and `ERROR`.
	Status pulumi.StringOutput `pulumi:"status"`
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
}

// NewMalwareProtectionPlan registers a new resource with the given unique name, arguments, and options.
func NewMalwareProtectionPlan(ctx *pulumi.Context,
	name string, args *MalwareProtectionPlanArgs, opts ...pulumi.ResourceOption) (*MalwareProtectionPlan, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Role == nil {
		return nil, errors.New("invalid value for required argument 'Role'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource MalwareProtectionPlan
	err := ctx.RegisterResource("aws:guardduty/malwareProtectionPlan:MalwareProtectionPlan", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMalwareProtectionPlan gets an existing MalwareProtectionPlan resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMalwareProtectionPlan(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MalwareProtectionPlanState, opts ...pulumi.ResourceOption) (*MalwareProtectionPlan, error) {
	var resource MalwareProtectionPlan
	err := ctx.ReadResource("aws:guardduty/malwareProtectionPlan:MalwareProtectionPlan", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MalwareProtectionPlan resources.
type malwareProtectionPlanState struct {
	// Information about whether the tags will be added to the S3 object after scanning. See `actions` below.
	Actions []MalwareProtectionPlanAction `pulumi:"actions"`
	// The ARN of the GuardDuty malware protection plan
	Arn *string `pulumi:"arn"`
	// The timestamp when the Malware Protection plan resource was created.
	CreatedAt *string `pulumi:"createdAt"`
	// Information about the protected resource that is associated with the created Malware Protection plan. Presently, S3Bucket is the only supported protected resource. See `protectedResource` below.
	ProtectedResource *MalwareProtectionPlanProtectedResource `pulumi:"protectedResource"`
	// The IAM role that includes the permissions required to scan and add tags to the associated protected resource.
	Role *string `pulumi:"role"`
	// The GuardDuty malware protection plan status. Valid values are `ACTIVE`, `WARNING`, and `ERROR`.
	Status *string `pulumi:"status"`
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Deprecated: Please use `tags` instead.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type MalwareProtectionPlanState struct {
	// Information about whether the tags will be added to the S3 object after scanning. See `actions` below.
	Actions MalwareProtectionPlanActionArrayInput
	// The ARN of the GuardDuty malware protection plan
	Arn pulumi.StringPtrInput
	// The timestamp when the Malware Protection plan resource was created.
	CreatedAt pulumi.StringPtrInput
	// Information about the protected resource that is associated with the created Malware Protection plan. Presently, S3Bucket is the only supported protected resource. See `protectedResource` below.
	ProtectedResource MalwareProtectionPlanProtectedResourcePtrInput
	// The IAM role that includes the permissions required to scan and add tags to the associated protected resource.
	Role pulumi.StringPtrInput
	// The GuardDuty malware protection plan status. Valid values are `ACTIVE`, `WARNING`, and `ERROR`.
	Status pulumi.StringPtrInput
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapInput
}

func (MalwareProtectionPlanState) ElementType() reflect.Type {
	return reflect.TypeOf((*malwareProtectionPlanState)(nil)).Elem()
}

type malwareProtectionPlanArgs struct {
	// Information about whether the tags will be added to the S3 object after scanning. See `actions` below.
	Actions []MalwareProtectionPlanAction `pulumi:"actions"`
	// Information about the protected resource that is associated with the created Malware Protection plan. Presently, S3Bucket is the only supported protected resource. See `protectedResource` below.
	ProtectedResource *MalwareProtectionPlanProtectedResource `pulumi:"protectedResource"`
	// The IAM role that includes the permissions required to scan and add tags to the associated protected resource.
	Role string `pulumi:"role"`
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a MalwareProtectionPlan resource.
type MalwareProtectionPlanArgs struct {
	// Information about whether the tags will be added to the S3 object after scanning. See `actions` below.
	Actions MalwareProtectionPlanActionArrayInput
	// Information about the protected resource that is associated with the created Malware Protection plan. Presently, S3Bucket is the only supported protected resource. See `protectedResource` below.
	ProtectedResource MalwareProtectionPlanProtectedResourcePtrInput
	// The IAM role that includes the permissions required to scan and add tags to the associated protected resource.
	Role pulumi.StringInput
	// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
}

func (MalwareProtectionPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*malwareProtectionPlanArgs)(nil)).Elem()
}

type MalwareProtectionPlanInput interface {
	pulumi.Input

	ToMalwareProtectionPlanOutput() MalwareProtectionPlanOutput
	ToMalwareProtectionPlanOutputWithContext(ctx context.Context) MalwareProtectionPlanOutput
}

func (*MalwareProtectionPlan) ElementType() reflect.Type {
	return reflect.TypeOf((**MalwareProtectionPlan)(nil)).Elem()
}

func (i *MalwareProtectionPlan) ToMalwareProtectionPlanOutput() MalwareProtectionPlanOutput {
	return i.ToMalwareProtectionPlanOutputWithContext(context.Background())
}

func (i *MalwareProtectionPlan) ToMalwareProtectionPlanOutputWithContext(ctx context.Context) MalwareProtectionPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MalwareProtectionPlanOutput)
}

// MalwareProtectionPlanArrayInput is an input type that accepts MalwareProtectionPlanArray and MalwareProtectionPlanArrayOutput values.
// You can construct a concrete instance of `MalwareProtectionPlanArrayInput` via:
//
//	MalwareProtectionPlanArray{ MalwareProtectionPlanArgs{...} }
type MalwareProtectionPlanArrayInput interface {
	pulumi.Input

	ToMalwareProtectionPlanArrayOutput() MalwareProtectionPlanArrayOutput
	ToMalwareProtectionPlanArrayOutputWithContext(context.Context) MalwareProtectionPlanArrayOutput
}

type MalwareProtectionPlanArray []MalwareProtectionPlanInput

func (MalwareProtectionPlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MalwareProtectionPlan)(nil)).Elem()
}

func (i MalwareProtectionPlanArray) ToMalwareProtectionPlanArrayOutput() MalwareProtectionPlanArrayOutput {
	return i.ToMalwareProtectionPlanArrayOutputWithContext(context.Background())
}

func (i MalwareProtectionPlanArray) ToMalwareProtectionPlanArrayOutputWithContext(ctx context.Context) MalwareProtectionPlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MalwareProtectionPlanArrayOutput)
}

// MalwareProtectionPlanMapInput is an input type that accepts MalwareProtectionPlanMap and MalwareProtectionPlanMapOutput values.
// You can construct a concrete instance of `MalwareProtectionPlanMapInput` via:
//
//	MalwareProtectionPlanMap{ "key": MalwareProtectionPlanArgs{...} }
type MalwareProtectionPlanMapInput interface {
	pulumi.Input

	ToMalwareProtectionPlanMapOutput() MalwareProtectionPlanMapOutput
	ToMalwareProtectionPlanMapOutputWithContext(context.Context) MalwareProtectionPlanMapOutput
}

type MalwareProtectionPlanMap map[string]MalwareProtectionPlanInput

func (MalwareProtectionPlanMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MalwareProtectionPlan)(nil)).Elem()
}

func (i MalwareProtectionPlanMap) ToMalwareProtectionPlanMapOutput() MalwareProtectionPlanMapOutput {
	return i.ToMalwareProtectionPlanMapOutputWithContext(context.Background())
}

func (i MalwareProtectionPlanMap) ToMalwareProtectionPlanMapOutputWithContext(ctx context.Context) MalwareProtectionPlanMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MalwareProtectionPlanMapOutput)
}

type MalwareProtectionPlanOutput struct{ *pulumi.OutputState }

func (MalwareProtectionPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MalwareProtectionPlan)(nil)).Elem()
}

func (o MalwareProtectionPlanOutput) ToMalwareProtectionPlanOutput() MalwareProtectionPlanOutput {
	return o
}

func (o MalwareProtectionPlanOutput) ToMalwareProtectionPlanOutputWithContext(ctx context.Context) MalwareProtectionPlanOutput {
	return o
}

// Information about whether the tags will be added to the S3 object after scanning. See `actions` below.
func (o MalwareProtectionPlanOutput) Actions() MalwareProtectionPlanActionArrayOutput {
	return o.ApplyT(func(v *MalwareProtectionPlan) MalwareProtectionPlanActionArrayOutput { return v.Actions }).(MalwareProtectionPlanActionArrayOutput)
}

// The ARN of the GuardDuty malware protection plan
func (o MalwareProtectionPlanOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *MalwareProtectionPlan) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The timestamp when the Malware Protection plan resource was created.
func (o MalwareProtectionPlanOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *MalwareProtectionPlan) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// Information about the protected resource that is associated with the created Malware Protection plan. Presently, S3Bucket is the only supported protected resource. See `protectedResource` below.
func (o MalwareProtectionPlanOutput) ProtectedResource() MalwareProtectionPlanProtectedResourcePtrOutput {
	return o.ApplyT(func(v *MalwareProtectionPlan) MalwareProtectionPlanProtectedResourcePtrOutput {
		return v.ProtectedResource
	}).(MalwareProtectionPlanProtectedResourcePtrOutput)
}

// The IAM role that includes the permissions required to scan and add tags to the associated protected resource.
func (o MalwareProtectionPlanOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v *MalwareProtectionPlan) pulumi.StringOutput { return v.Role }).(pulumi.StringOutput)
}

// The GuardDuty malware protection plan status. Valid values are `ACTIVE`, `WARNING`, and `ERROR`.
func (o MalwareProtectionPlanOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *MalwareProtectionPlan) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// Key-value mapping of resource tags. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o MalwareProtectionPlanOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MalwareProtectionPlan) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Deprecated: Please use `tags` instead.
func (o MalwareProtectionPlanOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *MalwareProtectionPlan) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type MalwareProtectionPlanArrayOutput struct{ *pulumi.OutputState }

func (MalwareProtectionPlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MalwareProtectionPlan)(nil)).Elem()
}

func (o MalwareProtectionPlanArrayOutput) ToMalwareProtectionPlanArrayOutput() MalwareProtectionPlanArrayOutput {
	return o
}

func (o MalwareProtectionPlanArrayOutput) ToMalwareProtectionPlanArrayOutputWithContext(ctx context.Context) MalwareProtectionPlanArrayOutput {
	return o
}

func (o MalwareProtectionPlanArrayOutput) Index(i pulumi.IntInput) MalwareProtectionPlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MalwareProtectionPlan {
		return vs[0].([]*MalwareProtectionPlan)[vs[1].(int)]
	}).(MalwareProtectionPlanOutput)
}

type MalwareProtectionPlanMapOutput struct{ *pulumi.OutputState }

func (MalwareProtectionPlanMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MalwareProtectionPlan)(nil)).Elem()
}

func (o MalwareProtectionPlanMapOutput) ToMalwareProtectionPlanMapOutput() MalwareProtectionPlanMapOutput {
	return o
}

func (o MalwareProtectionPlanMapOutput) ToMalwareProtectionPlanMapOutputWithContext(ctx context.Context) MalwareProtectionPlanMapOutput {
	return o
}

func (o MalwareProtectionPlanMapOutput) MapIndex(k pulumi.StringInput) MalwareProtectionPlanOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MalwareProtectionPlan {
		return vs[0].(map[string]*MalwareProtectionPlan)[vs[1].(string)]
	}).(MalwareProtectionPlanOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MalwareProtectionPlanInput)(nil)).Elem(), &MalwareProtectionPlan{})
	pulumi.RegisterInputType(reflect.TypeOf((*MalwareProtectionPlanArrayInput)(nil)).Elem(), MalwareProtectionPlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MalwareProtectionPlanMapInput)(nil)).Elem(), MalwareProtectionPlanMap{})
	pulumi.RegisterOutputType(MalwareProtectionPlanOutput{})
	pulumi.RegisterOutputType(MalwareProtectionPlanArrayOutput{})
	pulumi.RegisterOutputType(MalwareProtectionPlanMapOutput{})
}
