// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfg

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ConfigurationAggregatorAccountAggregationSource struct {
	// List of 12-digit account IDs of the account(s) being aggregated.
	AccountIds []string `pulumi:"accountIds"`
	// If true, aggregate existing AWS Config regions and future regions.
	AllRegions *bool `pulumi:"allRegions"`
	// List of source regions being aggregated.
	//
	// Either `regions` or `allRegions` (as true) must be specified.
	Regions []string `pulumi:"regions"`
}

// ConfigurationAggregatorAccountAggregationSourceInput is an input type that accepts ConfigurationAggregatorAccountAggregationSourceArgs and ConfigurationAggregatorAccountAggregationSourceOutput values.
// You can construct a concrete instance of `ConfigurationAggregatorAccountAggregationSourceInput` via:
//
//	ConfigurationAggregatorAccountAggregationSourceArgs{...}
type ConfigurationAggregatorAccountAggregationSourceInput interface {
	pulumi.Input

	ToConfigurationAggregatorAccountAggregationSourceOutput() ConfigurationAggregatorAccountAggregationSourceOutput
	ToConfigurationAggregatorAccountAggregationSourceOutputWithContext(context.Context) ConfigurationAggregatorAccountAggregationSourceOutput
}

type ConfigurationAggregatorAccountAggregationSourceArgs struct {
	// List of 12-digit account IDs of the account(s) being aggregated.
	AccountIds pulumi.StringArrayInput `pulumi:"accountIds"`
	// If true, aggregate existing AWS Config regions and future regions.
	AllRegions pulumi.BoolPtrInput `pulumi:"allRegions"`
	// List of source regions being aggregated.
	//
	// Either `regions` or `allRegions` (as true) must be specified.
	Regions pulumi.StringArrayInput `pulumi:"regions"`
}

func (ConfigurationAggregatorAccountAggregationSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationAggregatorAccountAggregationSource)(nil)).Elem()
}

func (i ConfigurationAggregatorAccountAggregationSourceArgs) ToConfigurationAggregatorAccountAggregationSourceOutput() ConfigurationAggregatorAccountAggregationSourceOutput {
	return i.ToConfigurationAggregatorAccountAggregationSourceOutputWithContext(context.Background())
}

func (i ConfigurationAggregatorAccountAggregationSourceArgs) ToConfigurationAggregatorAccountAggregationSourceOutputWithContext(ctx context.Context) ConfigurationAggregatorAccountAggregationSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationAggregatorAccountAggregationSourceOutput)
}

func (i ConfigurationAggregatorAccountAggregationSourceArgs) ToConfigurationAggregatorAccountAggregationSourcePtrOutput() ConfigurationAggregatorAccountAggregationSourcePtrOutput {
	return i.ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(context.Background())
}

func (i ConfigurationAggregatorAccountAggregationSourceArgs) ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(ctx context.Context) ConfigurationAggregatorAccountAggregationSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationAggregatorAccountAggregationSourceOutput).ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(ctx)
}

// ConfigurationAggregatorAccountAggregationSourcePtrInput is an input type that accepts ConfigurationAggregatorAccountAggregationSourceArgs, ConfigurationAggregatorAccountAggregationSourcePtr and ConfigurationAggregatorAccountAggregationSourcePtrOutput values.
// You can construct a concrete instance of `ConfigurationAggregatorAccountAggregationSourcePtrInput` via:
//
//	        ConfigurationAggregatorAccountAggregationSourceArgs{...}
//
//	or:
//
//	        nil
type ConfigurationAggregatorAccountAggregationSourcePtrInput interface {
	pulumi.Input

	ToConfigurationAggregatorAccountAggregationSourcePtrOutput() ConfigurationAggregatorAccountAggregationSourcePtrOutput
	ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(context.Context) ConfigurationAggregatorAccountAggregationSourcePtrOutput
}

type configurationAggregatorAccountAggregationSourcePtrType ConfigurationAggregatorAccountAggregationSourceArgs

func ConfigurationAggregatorAccountAggregationSourcePtr(v *ConfigurationAggregatorAccountAggregationSourceArgs) ConfigurationAggregatorAccountAggregationSourcePtrInput {
	return (*configurationAggregatorAccountAggregationSourcePtrType)(v)
}

func (*configurationAggregatorAccountAggregationSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationAggregatorAccountAggregationSource)(nil)).Elem()
}

func (i *configurationAggregatorAccountAggregationSourcePtrType) ToConfigurationAggregatorAccountAggregationSourcePtrOutput() ConfigurationAggregatorAccountAggregationSourcePtrOutput {
	return i.ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(context.Background())
}

func (i *configurationAggregatorAccountAggregationSourcePtrType) ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(ctx context.Context) ConfigurationAggregatorAccountAggregationSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationAggregatorAccountAggregationSourcePtrOutput)
}

type ConfigurationAggregatorAccountAggregationSourceOutput struct{ *pulumi.OutputState }

func (ConfigurationAggregatorAccountAggregationSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationAggregatorAccountAggregationSource)(nil)).Elem()
}

func (o ConfigurationAggregatorAccountAggregationSourceOutput) ToConfigurationAggregatorAccountAggregationSourceOutput() ConfigurationAggregatorAccountAggregationSourceOutput {
	return o
}

func (o ConfigurationAggregatorAccountAggregationSourceOutput) ToConfigurationAggregatorAccountAggregationSourceOutputWithContext(ctx context.Context) ConfigurationAggregatorAccountAggregationSourceOutput {
	return o
}

func (o ConfigurationAggregatorAccountAggregationSourceOutput) ToConfigurationAggregatorAccountAggregationSourcePtrOutput() ConfigurationAggregatorAccountAggregationSourcePtrOutput {
	return o.ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(context.Background())
}

func (o ConfigurationAggregatorAccountAggregationSourceOutput) ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(ctx context.Context) ConfigurationAggregatorAccountAggregationSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigurationAggregatorAccountAggregationSource) *ConfigurationAggregatorAccountAggregationSource {
		return &v
	}).(ConfigurationAggregatorAccountAggregationSourcePtrOutput)
}

// List of 12-digit account IDs of the account(s) being aggregated.
func (o ConfigurationAggregatorAccountAggregationSourceOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigurationAggregatorAccountAggregationSource) []string { return v.AccountIds }).(pulumi.StringArrayOutput)
}

// If true, aggregate existing AWS Config regions and future regions.
func (o ConfigurationAggregatorAccountAggregationSourceOutput) AllRegions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigurationAggregatorAccountAggregationSource) *bool { return v.AllRegions }).(pulumi.BoolPtrOutput)
}

// List of source regions being aggregated.
//
// Either `regions` or `allRegions` (as true) must be specified.
func (o ConfigurationAggregatorAccountAggregationSourceOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigurationAggregatorAccountAggregationSource) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

type ConfigurationAggregatorAccountAggregationSourcePtrOutput struct{ *pulumi.OutputState }

func (ConfigurationAggregatorAccountAggregationSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationAggregatorAccountAggregationSource)(nil)).Elem()
}

func (o ConfigurationAggregatorAccountAggregationSourcePtrOutput) ToConfigurationAggregatorAccountAggregationSourcePtrOutput() ConfigurationAggregatorAccountAggregationSourcePtrOutput {
	return o
}

func (o ConfigurationAggregatorAccountAggregationSourcePtrOutput) ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(ctx context.Context) ConfigurationAggregatorAccountAggregationSourcePtrOutput {
	return o
}

func (o ConfigurationAggregatorAccountAggregationSourcePtrOutput) Elem() ConfigurationAggregatorAccountAggregationSourceOutput {
	return o.ApplyT(func(v *ConfigurationAggregatorAccountAggregationSource) ConfigurationAggregatorAccountAggregationSource {
		if v != nil {
			return *v
		}
		var ret ConfigurationAggregatorAccountAggregationSource
		return ret
	}).(ConfigurationAggregatorAccountAggregationSourceOutput)
}

// List of 12-digit account IDs of the account(s) being aggregated.
func (o ConfigurationAggregatorAccountAggregationSourcePtrOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigurationAggregatorAccountAggregationSource) []string {
		if v == nil {
			return nil
		}
		return v.AccountIds
	}).(pulumi.StringArrayOutput)
}

// If true, aggregate existing AWS Config regions and future regions.
func (o ConfigurationAggregatorAccountAggregationSourcePtrOutput) AllRegions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigurationAggregatorAccountAggregationSource) *bool {
		if v == nil {
			return nil
		}
		return v.AllRegions
	}).(pulumi.BoolPtrOutput)
}

// List of source regions being aggregated.
//
// Either `regions` or `allRegions` (as true) must be specified.
func (o ConfigurationAggregatorAccountAggregationSourcePtrOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigurationAggregatorAccountAggregationSource) []string {
		if v == nil {
			return nil
		}
		return v.Regions
	}).(pulumi.StringArrayOutput)
}

type ConfigurationAggregatorOrganizationAggregationSource struct {
	// If true, aggregate existing AWS Config regions and future regions.
	AllRegions *bool `pulumi:"allRegions"`
	// List of source regions being aggregated.
	Regions []string `pulumi:"regions"`
	// ARN of the IAM role used to retrieve AWS Organization details associated with the aggregator account.
	//
	// Either `regions` or `allRegions` (as true) must be specified.
	RoleArn string `pulumi:"roleArn"`
}

// ConfigurationAggregatorOrganizationAggregationSourceInput is an input type that accepts ConfigurationAggregatorOrganizationAggregationSourceArgs and ConfigurationAggregatorOrganizationAggregationSourceOutput values.
// You can construct a concrete instance of `ConfigurationAggregatorOrganizationAggregationSourceInput` via:
//
//	ConfigurationAggregatorOrganizationAggregationSourceArgs{...}
type ConfigurationAggregatorOrganizationAggregationSourceInput interface {
	pulumi.Input

	ToConfigurationAggregatorOrganizationAggregationSourceOutput() ConfigurationAggregatorOrganizationAggregationSourceOutput
	ToConfigurationAggregatorOrganizationAggregationSourceOutputWithContext(context.Context) ConfigurationAggregatorOrganizationAggregationSourceOutput
}

type ConfigurationAggregatorOrganizationAggregationSourceArgs struct {
	// If true, aggregate existing AWS Config regions and future regions.
	AllRegions pulumi.BoolPtrInput `pulumi:"allRegions"`
	// List of source regions being aggregated.
	Regions pulumi.StringArrayInput `pulumi:"regions"`
	// ARN of the IAM role used to retrieve AWS Organization details associated with the aggregator account.
	//
	// Either `regions` or `allRegions` (as true) must be specified.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (ConfigurationAggregatorOrganizationAggregationSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationAggregatorOrganizationAggregationSource)(nil)).Elem()
}

func (i ConfigurationAggregatorOrganizationAggregationSourceArgs) ToConfigurationAggregatorOrganizationAggregationSourceOutput() ConfigurationAggregatorOrganizationAggregationSourceOutput {
	return i.ToConfigurationAggregatorOrganizationAggregationSourceOutputWithContext(context.Background())
}

func (i ConfigurationAggregatorOrganizationAggregationSourceArgs) ToConfigurationAggregatorOrganizationAggregationSourceOutputWithContext(ctx context.Context) ConfigurationAggregatorOrganizationAggregationSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationAggregatorOrganizationAggregationSourceOutput)
}

func (i ConfigurationAggregatorOrganizationAggregationSourceArgs) ToConfigurationAggregatorOrganizationAggregationSourcePtrOutput() ConfigurationAggregatorOrganizationAggregationSourcePtrOutput {
	return i.ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(context.Background())
}

func (i ConfigurationAggregatorOrganizationAggregationSourceArgs) ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(ctx context.Context) ConfigurationAggregatorOrganizationAggregationSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationAggregatorOrganizationAggregationSourceOutput).ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(ctx)
}

// ConfigurationAggregatorOrganizationAggregationSourcePtrInput is an input type that accepts ConfigurationAggregatorOrganizationAggregationSourceArgs, ConfigurationAggregatorOrganizationAggregationSourcePtr and ConfigurationAggregatorOrganizationAggregationSourcePtrOutput values.
// You can construct a concrete instance of `ConfigurationAggregatorOrganizationAggregationSourcePtrInput` via:
//
//	        ConfigurationAggregatorOrganizationAggregationSourceArgs{...}
//
//	or:
//
//	        nil
type ConfigurationAggregatorOrganizationAggregationSourcePtrInput interface {
	pulumi.Input

	ToConfigurationAggregatorOrganizationAggregationSourcePtrOutput() ConfigurationAggregatorOrganizationAggregationSourcePtrOutput
	ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(context.Context) ConfigurationAggregatorOrganizationAggregationSourcePtrOutput
}

type configurationAggregatorOrganizationAggregationSourcePtrType ConfigurationAggregatorOrganizationAggregationSourceArgs

func ConfigurationAggregatorOrganizationAggregationSourcePtr(v *ConfigurationAggregatorOrganizationAggregationSourceArgs) ConfigurationAggregatorOrganizationAggregationSourcePtrInput {
	return (*configurationAggregatorOrganizationAggregationSourcePtrType)(v)
}

func (*configurationAggregatorOrganizationAggregationSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationAggregatorOrganizationAggregationSource)(nil)).Elem()
}

func (i *configurationAggregatorOrganizationAggregationSourcePtrType) ToConfigurationAggregatorOrganizationAggregationSourcePtrOutput() ConfigurationAggregatorOrganizationAggregationSourcePtrOutput {
	return i.ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(context.Background())
}

func (i *configurationAggregatorOrganizationAggregationSourcePtrType) ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(ctx context.Context) ConfigurationAggregatorOrganizationAggregationSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationAggregatorOrganizationAggregationSourcePtrOutput)
}

type ConfigurationAggregatorOrganizationAggregationSourceOutput struct{ *pulumi.OutputState }

func (ConfigurationAggregatorOrganizationAggregationSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationAggregatorOrganizationAggregationSource)(nil)).Elem()
}

func (o ConfigurationAggregatorOrganizationAggregationSourceOutput) ToConfigurationAggregatorOrganizationAggregationSourceOutput() ConfigurationAggregatorOrganizationAggregationSourceOutput {
	return o
}

func (o ConfigurationAggregatorOrganizationAggregationSourceOutput) ToConfigurationAggregatorOrganizationAggregationSourceOutputWithContext(ctx context.Context) ConfigurationAggregatorOrganizationAggregationSourceOutput {
	return o
}

func (o ConfigurationAggregatorOrganizationAggregationSourceOutput) ToConfigurationAggregatorOrganizationAggregationSourcePtrOutput() ConfigurationAggregatorOrganizationAggregationSourcePtrOutput {
	return o.ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(context.Background())
}

func (o ConfigurationAggregatorOrganizationAggregationSourceOutput) ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(ctx context.Context) ConfigurationAggregatorOrganizationAggregationSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigurationAggregatorOrganizationAggregationSource) *ConfigurationAggregatorOrganizationAggregationSource {
		return &v
	}).(ConfigurationAggregatorOrganizationAggregationSourcePtrOutput)
}

// If true, aggregate existing AWS Config regions and future regions.
func (o ConfigurationAggregatorOrganizationAggregationSourceOutput) AllRegions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigurationAggregatorOrganizationAggregationSource) *bool { return v.AllRegions }).(pulumi.BoolPtrOutput)
}

// List of source regions being aggregated.
func (o ConfigurationAggregatorOrganizationAggregationSourceOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigurationAggregatorOrganizationAggregationSource) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

// ARN of the IAM role used to retrieve AWS Organization details associated with the aggregator account.
//
// Either `regions` or `allRegions` (as true) must be specified.
func (o ConfigurationAggregatorOrganizationAggregationSourceOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationAggregatorOrganizationAggregationSource) string { return v.RoleArn }).(pulumi.StringOutput)
}

type ConfigurationAggregatorOrganizationAggregationSourcePtrOutput struct{ *pulumi.OutputState }

func (ConfigurationAggregatorOrganizationAggregationSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationAggregatorOrganizationAggregationSource)(nil)).Elem()
}

func (o ConfigurationAggregatorOrganizationAggregationSourcePtrOutput) ToConfigurationAggregatorOrganizationAggregationSourcePtrOutput() ConfigurationAggregatorOrganizationAggregationSourcePtrOutput {
	return o
}

func (o ConfigurationAggregatorOrganizationAggregationSourcePtrOutput) ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(ctx context.Context) ConfigurationAggregatorOrganizationAggregationSourcePtrOutput {
	return o
}

func (o ConfigurationAggregatorOrganizationAggregationSourcePtrOutput) Elem() ConfigurationAggregatorOrganizationAggregationSourceOutput {
	return o.ApplyT(func(v *ConfigurationAggregatorOrganizationAggregationSource) ConfigurationAggregatorOrganizationAggregationSource {
		if v != nil {
			return *v
		}
		var ret ConfigurationAggregatorOrganizationAggregationSource
		return ret
	}).(ConfigurationAggregatorOrganizationAggregationSourceOutput)
}

// If true, aggregate existing AWS Config regions and future regions.
func (o ConfigurationAggregatorOrganizationAggregationSourcePtrOutput) AllRegions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigurationAggregatorOrganizationAggregationSource) *bool {
		if v == nil {
			return nil
		}
		return v.AllRegions
	}).(pulumi.BoolPtrOutput)
}

// List of source regions being aggregated.
func (o ConfigurationAggregatorOrganizationAggregationSourcePtrOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigurationAggregatorOrganizationAggregationSource) []string {
		if v == nil {
			return nil
		}
		return v.Regions
	}).(pulumi.StringArrayOutput)
}

// ARN of the IAM role used to retrieve AWS Organization details associated with the aggregator account.
//
// Either `regions` or `allRegions` (as true) must be specified.
func (o ConfigurationAggregatorOrganizationAggregationSourcePtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigurationAggregatorOrganizationAggregationSource) *string {
		if v == nil {
			return nil
		}
		return &v.RoleArn
	}).(pulumi.StringPtrOutput)
}

type ConformancePackInputParameter struct {
	// The input key.
	ParameterName string `pulumi:"parameterName"`
	// The input value.
	ParameterValue string `pulumi:"parameterValue"`
}

// ConformancePackInputParameterInput is an input type that accepts ConformancePackInputParameterArgs and ConformancePackInputParameterOutput values.
// You can construct a concrete instance of `ConformancePackInputParameterInput` via:
//
//	ConformancePackInputParameterArgs{...}
type ConformancePackInputParameterInput interface {
	pulumi.Input

	ToConformancePackInputParameterOutput() ConformancePackInputParameterOutput
	ToConformancePackInputParameterOutputWithContext(context.Context) ConformancePackInputParameterOutput
}

type ConformancePackInputParameterArgs struct {
	// The input key.
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// The input value.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (ConformancePackInputParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConformancePackInputParameter)(nil)).Elem()
}

func (i ConformancePackInputParameterArgs) ToConformancePackInputParameterOutput() ConformancePackInputParameterOutput {
	return i.ToConformancePackInputParameterOutputWithContext(context.Background())
}

func (i ConformancePackInputParameterArgs) ToConformancePackInputParameterOutputWithContext(ctx context.Context) ConformancePackInputParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConformancePackInputParameterOutput)
}

// ConformancePackInputParameterArrayInput is an input type that accepts ConformancePackInputParameterArray and ConformancePackInputParameterArrayOutput values.
// You can construct a concrete instance of `ConformancePackInputParameterArrayInput` via:
//
//	ConformancePackInputParameterArray{ ConformancePackInputParameterArgs{...} }
type ConformancePackInputParameterArrayInput interface {
	pulumi.Input

	ToConformancePackInputParameterArrayOutput() ConformancePackInputParameterArrayOutput
	ToConformancePackInputParameterArrayOutputWithContext(context.Context) ConformancePackInputParameterArrayOutput
}

type ConformancePackInputParameterArray []ConformancePackInputParameterInput

func (ConformancePackInputParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConformancePackInputParameter)(nil)).Elem()
}

func (i ConformancePackInputParameterArray) ToConformancePackInputParameterArrayOutput() ConformancePackInputParameterArrayOutput {
	return i.ToConformancePackInputParameterArrayOutputWithContext(context.Background())
}

func (i ConformancePackInputParameterArray) ToConformancePackInputParameterArrayOutputWithContext(ctx context.Context) ConformancePackInputParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConformancePackInputParameterArrayOutput)
}

type ConformancePackInputParameterOutput struct{ *pulumi.OutputState }

func (ConformancePackInputParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConformancePackInputParameter)(nil)).Elem()
}

func (o ConformancePackInputParameterOutput) ToConformancePackInputParameterOutput() ConformancePackInputParameterOutput {
	return o
}

func (o ConformancePackInputParameterOutput) ToConformancePackInputParameterOutputWithContext(ctx context.Context) ConformancePackInputParameterOutput {
	return o
}

// The input key.
func (o ConformancePackInputParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v ConformancePackInputParameter) string { return v.ParameterName }).(pulumi.StringOutput)
}

// The input value.
func (o ConformancePackInputParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v ConformancePackInputParameter) string { return v.ParameterValue }).(pulumi.StringOutput)
}

type ConformancePackInputParameterArrayOutput struct{ *pulumi.OutputState }

func (ConformancePackInputParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConformancePackInputParameter)(nil)).Elem()
}

func (o ConformancePackInputParameterArrayOutput) ToConformancePackInputParameterArrayOutput() ConformancePackInputParameterArrayOutput {
	return o
}

func (o ConformancePackInputParameterArrayOutput) ToConformancePackInputParameterArrayOutputWithContext(ctx context.Context) ConformancePackInputParameterArrayOutput {
	return o
}

func (o ConformancePackInputParameterArrayOutput) Index(i pulumi.IntInput) ConformancePackInputParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConformancePackInputParameter {
		return vs[0].([]ConformancePackInputParameter)[vs[1].(int)]
	}).(ConformancePackInputParameterOutput)
}

type DeliveryChannelSnapshotDeliveryProperties struct {
	// The frequency with which AWS Config recurringly delivers configuration snapshotsE.g., `One_Hour` or `Three_Hours`. Valid values are listed [here](https://docs.aws.amazon.com/config/latest/APIReference/API_ConfigSnapshotDeliveryProperties.html#API_ConfigSnapshotDeliveryProperties_Contents).
	DeliveryFrequency *string `pulumi:"deliveryFrequency"`
}

// DeliveryChannelSnapshotDeliveryPropertiesInput is an input type that accepts DeliveryChannelSnapshotDeliveryPropertiesArgs and DeliveryChannelSnapshotDeliveryPropertiesOutput values.
// You can construct a concrete instance of `DeliveryChannelSnapshotDeliveryPropertiesInput` via:
//
//	DeliveryChannelSnapshotDeliveryPropertiesArgs{...}
type DeliveryChannelSnapshotDeliveryPropertiesInput interface {
	pulumi.Input

	ToDeliveryChannelSnapshotDeliveryPropertiesOutput() DeliveryChannelSnapshotDeliveryPropertiesOutput
	ToDeliveryChannelSnapshotDeliveryPropertiesOutputWithContext(context.Context) DeliveryChannelSnapshotDeliveryPropertiesOutput
}

type DeliveryChannelSnapshotDeliveryPropertiesArgs struct {
	// The frequency with which AWS Config recurringly delivers configuration snapshotsE.g., `One_Hour` or `Three_Hours`. Valid values are listed [here](https://docs.aws.amazon.com/config/latest/APIReference/API_ConfigSnapshotDeliveryProperties.html#API_ConfigSnapshotDeliveryProperties_Contents).
	DeliveryFrequency pulumi.StringPtrInput `pulumi:"deliveryFrequency"`
}

func (DeliveryChannelSnapshotDeliveryPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryChannelSnapshotDeliveryProperties)(nil)).Elem()
}

func (i DeliveryChannelSnapshotDeliveryPropertiesArgs) ToDeliveryChannelSnapshotDeliveryPropertiesOutput() DeliveryChannelSnapshotDeliveryPropertiesOutput {
	return i.ToDeliveryChannelSnapshotDeliveryPropertiesOutputWithContext(context.Background())
}

func (i DeliveryChannelSnapshotDeliveryPropertiesArgs) ToDeliveryChannelSnapshotDeliveryPropertiesOutputWithContext(ctx context.Context) DeliveryChannelSnapshotDeliveryPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryChannelSnapshotDeliveryPropertiesOutput)
}

func (i DeliveryChannelSnapshotDeliveryPropertiesArgs) ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutput() DeliveryChannelSnapshotDeliveryPropertiesPtrOutput {
	return i.ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutputWithContext(context.Background())
}

func (i DeliveryChannelSnapshotDeliveryPropertiesArgs) ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutputWithContext(ctx context.Context) DeliveryChannelSnapshotDeliveryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryChannelSnapshotDeliveryPropertiesOutput).ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutputWithContext(ctx)
}

// DeliveryChannelSnapshotDeliveryPropertiesPtrInput is an input type that accepts DeliveryChannelSnapshotDeliveryPropertiesArgs, DeliveryChannelSnapshotDeliveryPropertiesPtr and DeliveryChannelSnapshotDeliveryPropertiesPtrOutput values.
// You can construct a concrete instance of `DeliveryChannelSnapshotDeliveryPropertiesPtrInput` via:
//
//	        DeliveryChannelSnapshotDeliveryPropertiesArgs{...}
//
//	or:
//
//	        nil
type DeliveryChannelSnapshotDeliveryPropertiesPtrInput interface {
	pulumi.Input

	ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutput() DeliveryChannelSnapshotDeliveryPropertiesPtrOutput
	ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutputWithContext(context.Context) DeliveryChannelSnapshotDeliveryPropertiesPtrOutput
}

type deliveryChannelSnapshotDeliveryPropertiesPtrType DeliveryChannelSnapshotDeliveryPropertiesArgs

func DeliveryChannelSnapshotDeliveryPropertiesPtr(v *DeliveryChannelSnapshotDeliveryPropertiesArgs) DeliveryChannelSnapshotDeliveryPropertiesPtrInput {
	return (*deliveryChannelSnapshotDeliveryPropertiesPtrType)(v)
}

func (*deliveryChannelSnapshotDeliveryPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryChannelSnapshotDeliveryProperties)(nil)).Elem()
}

func (i *deliveryChannelSnapshotDeliveryPropertiesPtrType) ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutput() DeliveryChannelSnapshotDeliveryPropertiesPtrOutput {
	return i.ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutputWithContext(context.Background())
}

func (i *deliveryChannelSnapshotDeliveryPropertiesPtrType) ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutputWithContext(ctx context.Context) DeliveryChannelSnapshotDeliveryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryChannelSnapshotDeliveryPropertiesPtrOutput)
}

type DeliveryChannelSnapshotDeliveryPropertiesOutput struct{ *pulumi.OutputState }

func (DeliveryChannelSnapshotDeliveryPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryChannelSnapshotDeliveryProperties)(nil)).Elem()
}

func (o DeliveryChannelSnapshotDeliveryPropertiesOutput) ToDeliveryChannelSnapshotDeliveryPropertiesOutput() DeliveryChannelSnapshotDeliveryPropertiesOutput {
	return o
}

func (o DeliveryChannelSnapshotDeliveryPropertiesOutput) ToDeliveryChannelSnapshotDeliveryPropertiesOutputWithContext(ctx context.Context) DeliveryChannelSnapshotDeliveryPropertiesOutput {
	return o
}

func (o DeliveryChannelSnapshotDeliveryPropertiesOutput) ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutput() DeliveryChannelSnapshotDeliveryPropertiesPtrOutput {
	return o.ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutputWithContext(context.Background())
}

func (o DeliveryChannelSnapshotDeliveryPropertiesOutput) ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutputWithContext(ctx context.Context) DeliveryChannelSnapshotDeliveryPropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeliveryChannelSnapshotDeliveryProperties) *DeliveryChannelSnapshotDeliveryProperties {
		return &v
	}).(DeliveryChannelSnapshotDeliveryPropertiesPtrOutput)
}

// The frequency with which AWS Config recurringly delivers configuration snapshotsE.g., `One_Hour` or `Three_Hours`. Valid values are listed [here](https://docs.aws.amazon.com/config/latest/APIReference/API_ConfigSnapshotDeliveryProperties.html#API_ConfigSnapshotDeliveryProperties_Contents).
func (o DeliveryChannelSnapshotDeliveryPropertiesOutput) DeliveryFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryChannelSnapshotDeliveryProperties) *string { return v.DeliveryFrequency }).(pulumi.StringPtrOutput)
}

type DeliveryChannelSnapshotDeliveryPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DeliveryChannelSnapshotDeliveryPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryChannelSnapshotDeliveryProperties)(nil)).Elem()
}

func (o DeliveryChannelSnapshotDeliveryPropertiesPtrOutput) ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutput() DeliveryChannelSnapshotDeliveryPropertiesPtrOutput {
	return o
}

func (o DeliveryChannelSnapshotDeliveryPropertiesPtrOutput) ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutputWithContext(ctx context.Context) DeliveryChannelSnapshotDeliveryPropertiesPtrOutput {
	return o
}

func (o DeliveryChannelSnapshotDeliveryPropertiesPtrOutput) Elem() DeliveryChannelSnapshotDeliveryPropertiesOutput {
	return o.ApplyT(func(v *DeliveryChannelSnapshotDeliveryProperties) DeliveryChannelSnapshotDeliveryProperties {
		if v != nil {
			return *v
		}
		var ret DeliveryChannelSnapshotDeliveryProperties
		return ret
	}).(DeliveryChannelSnapshotDeliveryPropertiesOutput)
}

// The frequency with which AWS Config recurringly delivers configuration snapshotsE.g., `One_Hour` or `Three_Hours`. Valid values are listed [here](https://docs.aws.amazon.com/config/latest/APIReference/API_ConfigSnapshotDeliveryProperties.html#API_ConfigSnapshotDeliveryProperties_Contents).
func (o DeliveryChannelSnapshotDeliveryPropertiesPtrOutput) DeliveryFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryChannelSnapshotDeliveryProperties) *string {
		if v == nil {
			return nil
		}
		return v.DeliveryFrequency
	}).(pulumi.StringPtrOutput)
}

type OrganizationConformancePackInputParameter struct {
	// The input key.
	ParameterName string `pulumi:"parameterName"`
	// The input value.
	ParameterValue string `pulumi:"parameterValue"`
}

// OrganizationConformancePackInputParameterInput is an input type that accepts OrganizationConformancePackInputParameterArgs and OrganizationConformancePackInputParameterOutput values.
// You can construct a concrete instance of `OrganizationConformancePackInputParameterInput` via:
//
//	OrganizationConformancePackInputParameterArgs{...}
type OrganizationConformancePackInputParameterInput interface {
	pulumi.Input

	ToOrganizationConformancePackInputParameterOutput() OrganizationConformancePackInputParameterOutput
	ToOrganizationConformancePackInputParameterOutputWithContext(context.Context) OrganizationConformancePackInputParameterOutput
}

type OrganizationConformancePackInputParameterArgs struct {
	// The input key.
	ParameterName pulumi.StringInput `pulumi:"parameterName"`
	// The input value.
	ParameterValue pulumi.StringInput `pulumi:"parameterValue"`
}

func (OrganizationConformancePackInputParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationConformancePackInputParameter)(nil)).Elem()
}

func (i OrganizationConformancePackInputParameterArgs) ToOrganizationConformancePackInputParameterOutput() OrganizationConformancePackInputParameterOutput {
	return i.ToOrganizationConformancePackInputParameterOutputWithContext(context.Background())
}

func (i OrganizationConformancePackInputParameterArgs) ToOrganizationConformancePackInputParameterOutputWithContext(ctx context.Context) OrganizationConformancePackInputParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationConformancePackInputParameterOutput)
}

// OrganizationConformancePackInputParameterArrayInput is an input type that accepts OrganizationConformancePackInputParameterArray and OrganizationConformancePackInputParameterArrayOutput values.
// You can construct a concrete instance of `OrganizationConformancePackInputParameterArrayInput` via:
//
//	OrganizationConformancePackInputParameterArray{ OrganizationConformancePackInputParameterArgs{...} }
type OrganizationConformancePackInputParameterArrayInput interface {
	pulumi.Input

	ToOrganizationConformancePackInputParameterArrayOutput() OrganizationConformancePackInputParameterArrayOutput
	ToOrganizationConformancePackInputParameterArrayOutputWithContext(context.Context) OrganizationConformancePackInputParameterArrayOutput
}

type OrganizationConformancePackInputParameterArray []OrganizationConformancePackInputParameterInput

func (OrganizationConformancePackInputParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationConformancePackInputParameter)(nil)).Elem()
}

func (i OrganizationConformancePackInputParameterArray) ToOrganizationConformancePackInputParameterArrayOutput() OrganizationConformancePackInputParameterArrayOutput {
	return i.ToOrganizationConformancePackInputParameterArrayOutputWithContext(context.Background())
}

func (i OrganizationConformancePackInputParameterArray) ToOrganizationConformancePackInputParameterArrayOutputWithContext(ctx context.Context) OrganizationConformancePackInputParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationConformancePackInputParameterArrayOutput)
}

type OrganizationConformancePackInputParameterOutput struct{ *pulumi.OutputState }

func (OrganizationConformancePackInputParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationConformancePackInputParameter)(nil)).Elem()
}

func (o OrganizationConformancePackInputParameterOutput) ToOrganizationConformancePackInputParameterOutput() OrganizationConformancePackInputParameterOutput {
	return o
}

func (o OrganizationConformancePackInputParameterOutput) ToOrganizationConformancePackInputParameterOutputWithContext(ctx context.Context) OrganizationConformancePackInputParameterOutput {
	return o
}

// The input key.
func (o OrganizationConformancePackInputParameterOutput) ParameterName() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationConformancePackInputParameter) string { return v.ParameterName }).(pulumi.StringOutput)
}

// The input value.
func (o OrganizationConformancePackInputParameterOutput) ParameterValue() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationConformancePackInputParameter) string { return v.ParameterValue }).(pulumi.StringOutput)
}

type OrganizationConformancePackInputParameterArrayOutput struct{ *pulumi.OutputState }

func (OrganizationConformancePackInputParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationConformancePackInputParameter)(nil)).Elem()
}

func (o OrganizationConformancePackInputParameterArrayOutput) ToOrganizationConformancePackInputParameterArrayOutput() OrganizationConformancePackInputParameterArrayOutput {
	return o
}

func (o OrganizationConformancePackInputParameterArrayOutput) ToOrganizationConformancePackInputParameterArrayOutputWithContext(ctx context.Context) OrganizationConformancePackInputParameterArrayOutput {
	return o
}

func (o OrganizationConformancePackInputParameterArrayOutput) Index(i pulumi.IntInput) OrganizationConformancePackInputParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationConformancePackInputParameter {
		return vs[0].([]OrganizationConformancePackInputParameter)[vs[1].(int)]
	}).(OrganizationConformancePackInputParameterOutput)
}

type RecorderRecordingGroup struct {
	// Specifies whether AWS Config records configuration changes for every supported type of regional resource (which includes any new type that will become supported in the future). Conflicts with `resourceTypes`. Defaults to `true`.
	AllSupported *bool `pulumi:"allSupported"`
	// Specifies whether AWS Config includes all supported types of _global resources_ with the resources that it records. Requires `allSupported = true`. Conflicts with `resourceTypes`.
	IncludeGlobalResourceTypes *bool `pulumi:"includeGlobalResourceTypes"`
	// A list that specifies the types of AWS resources for which AWS Config records configuration changes (for example, `AWS::EC2::Instance` or `AWS::CloudTrail::Trail`). See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types. In order to use this attribute, `allSupported` must be set to false.
	ResourceTypes []string `pulumi:"resourceTypes"`
}

// RecorderRecordingGroupInput is an input type that accepts RecorderRecordingGroupArgs and RecorderRecordingGroupOutput values.
// You can construct a concrete instance of `RecorderRecordingGroupInput` via:
//
//	RecorderRecordingGroupArgs{...}
type RecorderRecordingGroupInput interface {
	pulumi.Input

	ToRecorderRecordingGroupOutput() RecorderRecordingGroupOutput
	ToRecorderRecordingGroupOutputWithContext(context.Context) RecorderRecordingGroupOutput
}

type RecorderRecordingGroupArgs struct {
	// Specifies whether AWS Config records configuration changes for every supported type of regional resource (which includes any new type that will become supported in the future). Conflicts with `resourceTypes`. Defaults to `true`.
	AllSupported pulumi.BoolPtrInput `pulumi:"allSupported"`
	// Specifies whether AWS Config includes all supported types of _global resources_ with the resources that it records. Requires `allSupported = true`. Conflicts with `resourceTypes`.
	IncludeGlobalResourceTypes pulumi.BoolPtrInput `pulumi:"includeGlobalResourceTypes"`
	// A list that specifies the types of AWS resources for which AWS Config records configuration changes (for example, `AWS::EC2::Instance` or `AWS::CloudTrail::Trail`). See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types. In order to use this attribute, `allSupported` must be set to false.
	ResourceTypes pulumi.StringArrayInput `pulumi:"resourceTypes"`
}

func (RecorderRecordingGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecorderRecordingGroup)(nil)).Elem()
}

func (i RecorderRecordingGroupArgs) ToRecorderRecordingGroupOutput() RecorderRecordingGroupOutput {
	return i.ToRecorderRecordingGroupOutputWithContext(context.Background())
}

func (i RecorderRecordingGroupArgs) ToRecorderRecordingGroupOutputWithContext(ctx context.Context) RecorderRecordingGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecorderRecordingGroupOutput)
}

func (i RecorderRecordingGroupArgs) ToRecorderRecordingGroupPtrOutput() RecorderRecordingGroupPtrOutput {
	return i.ToRecorderRecordingGroupPtrOutputWithContext(context.Background())
}

func (i RecorderRecordingGroupArgs) ToRecorderRecordingGroupPtrOutputWithContext(ctx context.Context) RecorderRecordingGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecorderRecordingGroupOutput).ToRecorderRecordingGroupPtrOutputWithContext(ctx)
}

// RecorderRecordingGroupPtrInput is an input type that accepts RecorderRecordingGroupArgs, RecorderRecordingGroupPtr and RecorderRecordingGroupPtrOutput values.
// You can construct a concrete instance of `RecorderRecordingGroupPtrInput` via:
//
//	        RecorderRecordingGroupArgs{...}
//
//	or:
//
//	        nil
type RecorderRecordingGroupPtrInput interface {
	pulumi.Input

	ToRecorderRecordingGroupPtrOutput() RecorderRecordingGroupPtrOutput
	ToRecorderRecordingGroupPtrOutputWithContext(context.Context) RecorderRecordingGroupPtrOutput
}

type recorderRecordingGroupPtrType RecorderRecordingGroupArgs

func RecorderRecordingGroupPtr(v *RecorderRecordingGroupArgs) RecorderRecordingGroupPtrInput {
	return (*recorderRecordingGroupPtrType)(v)
}

func (*recorderRecordingGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecorderRecordingGroup)(nil)).Elem()
}

func (i *recorderRecordingGroupPtrType) ToRecorderRecordingGroupPtrOutput() RecorderRecordingGroupPtrOutput {
	return i.ToRecorderRecordingGroupPtrOutputWithContext(context.Background())
}

func (i *recorderRecordingGroupPtrType) ToRecorderRecordingGroupPtrOutputWithContext(ctx context.Context) RecorderRecordingGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecorderRecordingGroupPtrOutput)
}

type RecorderRecordingGroupOutput struct{ *pulumi.OutputState }

func (RecorderRecordingGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecorderRecordingGroup)(nil)).Elem()
}

func (o RecorderRecordingGroupOutput) ToRecorderRecordingGroupOutput() RecorderRecordingGroupOutput {
	return o
}

func (o RecorderRecordingGroupOutput) ToRecorderRecordingGroupOutputWithContext(ctx context.Context) RecorderRecordingGroupOutput {
	return o
}

func (o RecorderRecordingGroupOutput) ToRecorderRecordingGroupPtrOutput() RecorderRecordingGroupPtrOutput {
	return o.ToRecorderRecordingGroupPtrOutputWithContext(context.Background())
}

func (o RecorderRecordingGroupOutput) ToRecorderRecordingGroupPtrOutputWithContext(ctx context.Context) RecorderRecordingGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RecorderRecordingGroup) *RecorderRecordingGroup {
		return &v
	}).(RecorderRecordingGroupPtrOutput)
}

// Specifies whether AWS Config records configuration changes for every supported type of regional resource (which includes any new type that will become supported in the future). Conflicts with `resourceTypes`. Defaults to `true`.
func (o RecorderRecordingGroupOutput) AllSupported() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RecorderRecordingGroup) *bool { return v.AllSupported }).(pulumi.BoolPtrOutput)
}

// Specifies whether AWS Config includes all supported types of _global resources_ with the resources that it records. Requires `allSupported = true`. Conflicts with `resourceTypes`.
func (o RecorderRecordingGroupOutput) IncludeGlobalResourceTypes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RecorderRecordingGroup) *bool { return v.IncludeGlobalResourceTypes }).(pulumi.BoolPtrOutput)
}

// A list that specifies the types of AWS resources for which AWS Config records configuration changes (for example, `AWS::EC2::Instance` or `AWS::CloudTrail::Trail`). See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types. In order to use this attribute, `allSupported` must be set to false.
func (o RecorderRecordingGroupOutput) ResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecorderRecordingGroup) []string { return v.ResourceTypes }).(pulumi.StringArrayOutput)
}

type RecorderRecordingGroupPtrOutput struct{ *pulumi.OutputState }

func (RecorderRecordingGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecorderRecordingGroup)(nil)).Elem()
}

func (o RecorderRecordingGroupPtrOutput) ToRecorderRecordingGroupPtrOutput() RecorderRecordingGroupPtrOutput {
	return o
}

func (o RecorderRecordingGroupPtrOutput) ToRecorderRecordingGroupPtrOutputWithContext(ctx context.Context) RecorderRecordingGroupPtrOutput {
	return o
}

func (o RecorderRecordingGroupPtrOutput) Elem() RecorderRecordingGroupOutput {
	return o.ApplyT(func(v *RecorderRecordingGroup) RecorderRecordingGroup {
		if v != nil {
			return *v
		}
		var ret RecorderRecordingGroup
		return ret
	}).(RecorderRecordingGroupOutput)
}

// Specifies whether AWS Config records configuration changes for every supported type of regional resource (which includes any new type that will become supported in the future). Conflicts with `resourceTypes`. Defaults to `true`.
func (o RecorderRecordingGroupPtrOutput) AllSupported() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RecorderRecordingGroup) *bool {
		if v == nil {
			return nil
		}
		return v.AllSupported
	}).(pulumi.BoolPtrOutput)
}

// Specifies whether AWS Config includes all supported types of _global resources_ with the resources that it records. Requires `allSupported = true`. Conflicts with `resourceTypes`.
func (o RecorderRecordingGroupPtrOutput) IncludeGlobalResourceTypes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RecorderRecordingGroup) *bool {
		if v == nil {
			return nil
		}
		return v.IncludeGlobalResourceTypes
	}).(pulumi.BoolPtrOutput)
}

// A list that specifies the types of AWS resources for which AWS Config records configuration changes (for example, `AWS::EC2::Instance` or `AWS::CloudTrail::Trail`). See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types. In order to use this attribute, `allSupported` must be set to false.
func (o RecorderRecordingGroupPtrOutput) ResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RecorderRecordingGroup) []string {
		if v == nil {
			return nil
		}
		return v.ResourceTypes
	}).(pulumi.StringArrayOutput)
}

type RemediationConfigurationExecutionControls struct {
	// Configuration block for SSM controls. See below.
	SsmControls *RemediationConfigurationExecutionControlsSsmControls `pulumi:"ssmControls"`
}

// RemediationConfigurationExecutionControlsInput is an input type that accepts RemediationConfigurationExecutionControlsArgs and RemediationConfigurationExecutionControlsOutput values.
// You can construct a concrete instance of `RemediationConfigurationExecutionControlsInput` via:
//
//	RemediationConfigurationExecutionControlsArgs{...}
type RemediationConfigurationExecutionControlsInput interface {
	pulumi.Input

	ToRemediationConfigurationExecutionControlsOutput() RemediationConfigurationExecutionControlsOutput
	ToRemediationConfigurationExecutionControlsOutputWithContext(context.Context) RemediationConfigurationExecutionControlsOutput
}

type RemediationConfigurationExecutionControlsArgs struct {
	// Configuration block for SSM controls. See below.
	SsmControls RemediationConfigurationExecutionControlsSsmControlsPtrInput `pulumi:"ssmControls"`
}

func (RemediationConfigurationExecutionControlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RemediationConfigurationExecutionControls)(nil)).Elem()
}

func (i RemediationConfigurationExecutionControlsArgs) ToRemediationConfigurationExecutionControlsOutput() RemediationConfigurationExecutionControlsOutput {
	return i.ToRemediationConfigurationExecutionControlsOutputWithContext(context.Background())
}

func (i RemediationConfigurationExecutionControlsArgs) ToRemediationConfigurationExecutionControlsOutputWithContext(ctx context.Context) RemediationConfigurationExecutionControlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationConfigurationExecutionControlsOutput)
}

func (i RemediationConfigurationExecutionControlsArgs) ToRemediationConfigurationExecutionControlsPtrOutput() RemediationConfigurationExecutionControlsPtrOutput {
	return i.ToRemediationConfigurationExecutionControlsPtrOutputWithContext(context.Background())
}

func (i RemediationConfigurationExecutionControlsArgs) ToRemediationConfigurationExecutionControlsPtrOutputWithContext(ctx context.Context) RemediationConfigurationExecutionControlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationConfigurationExecutionControlsOutput).ToRemediationConfigurationExecutionControlsPtrOutputWithContext(ctx)
}

// RemediationConfigurationExecutionControlsPtrInput is an input type that accepts RemediationConfigurationExecutionControlsArgs, RemediationConfigurationExecutionControlsPtr and RemediationConfigurationExecutionControlsPtrOutput values.
// You can construct a concrete instance of `RemediationConfigurationExecutionControlsPtrInput` via:
//
//	        RemediationConfigurationExecutionControlsArgs{...}
//
//	or:
//
//	        nil
type RemediationConfigurationExecutionControlsPtrInput interface {
	pulumi.Input

	ToRemediationConfigurationExecutionControlsPtrOutput() RemediationConfigurationExecutionControlsPtrOutput
	ToRemediationConfigurationExecutionControlsPtrOutputWithContext(context.Context) RemediationConfigurationExecutionControlsPtrOutput
}

type remediationConfigurationExecutionControlsPtrType RemediationConfigurationExecutionControlsArgs

func RemediationConfigurationExecutionControlsPtr(v *RemediationConfigurationExecutionControlsArgs) RemediationConfigurationExecutionControlsPtrInput {
	return (*remediationConfigurationExecutionControlsPtrType)(v)
}

func (*remediationConfigurationExecutionControlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RemediationConfigurationExecutionControls)(nil)).Elem()
}

func (i *remediationConfigurationExecutionControlsPtrType) ToRemediationConfigurationExecutionControlsPtrOutput() RemediationConfigurationExecutionControlsPtrOutput {
	return i.ToRemediationConfigurationExecutionControlsPtrOutputWithContext(context.Background())
}

func (i *remediationConfigurationExecutionControlsPtrType) ToRemediationConfigurationExecutionControlsPtrOutputWithContext(ctx context.Context) RemediationConfigurationExecutionControlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationConfigurationExecutionControlsPtrOutput)
}

type RemediationConfigurationExecutionControlsOutput struct{ *pulumi.OutputState }

func (RemediationConfigurationExecutionControlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RemediationConfigurationExecutionControls)(nil)).Elem()
}

func (o RemediationConfigurationExecutionControlsOutput) ToRemediationConfigurationExecutionControlsOutput() RemediationConfigurationExecutionControlsOutput {
	return o
}

func (o RemediationConfigurationExecutionControlsOutput) ToRemediationConfigurationExecutionControlsOutputWithContext(ctx context.Context) RemediationConfigurationExecutionControlsOutput {
	return o
}

func (o RemediationConfigurationExecutionControlsOutput) ToRemediationConfigurationExecutionControlsPtrOutput() RemediationConfigurationExecutionControlsPtrOutput {
	return o.ToRemediationConfigurationExecutionControlsPtrOutputWithContext(context.Background())
}

func (o RemediationConfigurationExecutionControlsOutput) ToRemediationConfigurationExecutionControlsPtrOutputWithContext(ctx context.Context) RemediationConfigurationExecutionControlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RemediationConfigurationExecutionControls) *RemediationConfigurationExecutionControls {
		return &v
	}).(RemediationConfigurationExecutionControlsPtrOutput)
}

// Configuration block for SSM controls. See below.
func (o RemediationConfigurationExecutionControlsOutput) SsmControls() RemediationConfigurationExecutionControlsSsmControlsPtrOutput {
	return o.ApplyT(func(v RemediationConfigurationExecutionControls) *RemediationConfigurationExecutionControlsSsmControls {
		return v.SsmControls
	}).(RemediationConfigurationExecutionControlsSsmControlsPtrOutput)
}

type RemediationConfigurationExecutionControlsPtrOutput struct{ *pulumi.OutputState }

func (RemediationConfigurationExecutionControlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RemediationConfigurationExecutionControls)(nil)).Elem()
}

func (o RemediationConfigurationExecutionControlsPtrOutput) ToRemediationConfigurationExecutionControlsPtrOutput() RemediationConfigurationExecutionControlsPtrOutput {
	return o
}

func (o RemediationConfigurationExecutionControlsPtrOutput) ToRemediationConfigurationExecutionControlsPtrOutputWithContext(ctx context.Context) RemediationConfigurationExecutionControlsPtrOutput {
	return o
}

func (o RemediationConfigurationExecutionControlsPtrOutput) Elem() RemediationConfigurationExecutionControlsOutput {
	return o.ApplyT(func(v *RemediationConfigurationExecutionControls) RemediationConfigurationExecutionControls {
		if v != nil {
			return *v
		}
		var ret RemediationConfigurationExecutionControls
		return ret
	}).(RemediationConfigurationExecutionControlsOutput)
}

// Configuration block for SSM controls. See below.
func (o RemediationConfigurationExecutionControlsPtrOutput) SsmControls() RemediationConfigurationExecutionControlsSsmControlsPtrOutput {
	return o.ApplyT(func(v *RemediationConfigurationExecutionControls) *RemediationConfigurationExecutionControlsSsmControls {
		if v == nil {
			return nil
		}
		return v.SsmControls
	}).(RemediationConfigurationExecutionControlsSsmControlsPtrOutput)
}

type RemediationConfigurationExecutionControlsSsmControls struct {
	// Maximum percentage of remediation actions allowed to run in parallel on the non-compliant resources for that specific rule. The default value is 10%.
	ConcurrentExecutionRatePercentage *int `pulumi:"concurrentExecutionRatePercentage"`
	// Percentage of errors that are allowed before SSM stops running automations on non-compliant resources for that specific rule. The default is 50%.
	ErrorPercentage *int `pulumi:"errorPercentage"`
}

// RemediationConfigurationExecutionControlsSsmControlsInput is an input type that accepts RemediationConfigurationExecutionControlsSsmControlsArgs and RemediationConfigurationExecutionControlsSsmControlsOutput values.
// You can construct a concrete instance of `RemediationConfigurationExecutionControlsSsmControlsInput` via:
//
//	RemediationConfigurationExecutionControlsSsmControlsArgs{...}
type RemediationConfigurationExecutionControlsSsmControlsInput interface {
	pulumi.Input

	ToRemediationConfigurationExecutionControlsSsmControlsOutput() RemediationConfigurationExecutionControlsSsmControlsOutput
	ToRemediationConfigurationExecutionControlsSsmControlsOutputWithContext(context.Context) RemediationConfigurationExecutionControlsSsmControlsOutput
}

type RemediationConfigurationExecutionControlsSsmControlsArgs struct {
	// Maximum percentage of remediation actions allowed to run in parallel on the non-compliant resources for that specific rule. The default value is 10%.
	ConcurrentExecutionRatePercentage pulumi.IntPtrInput `pulumi:"concurrentExecutionRatePercentage"`
	// Percentage of errors that are allowed before SSM stops running automations on non-compliant resources for that specific rule. The default is 50%.
	ErrorPercentage pulumi.IntPtrInput `pulumi:"errorPercentage"`
}

func (RemediationConfigurationExecutionControlsSsmControlsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RemediationConfigurationExecutionControlsSsmControls)(nil)).Elem()
}

func (i RemediationConfigurationExecutionControlsSsmControlsArgs) ToRemediationConfigurationExecutionControlsSsmControlsOutput() RemediationConfigurationExecutionControlsSsmControlsOutput {
	return i.ToRemediationConfigurationExecutionControlsSsmControlsOutputWithContext(context.Background())
}

func (i RemediationConfigurationExecutionControlsSsmControlsArgs) ToRemediationConfigurationExecutionControlsSsmControlsOutputWithContext(ctx context.Context) RemediationConfigurationExecutionControlsSsmControlsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationConfigurationExecutionControlsSsmControlsOutput)
}

func (i RemediationConfigurationExecutionControlsSsmControlsArgs) ToRemediationConfigurationExecutionControlsSsmControlsPtrOutput() RemediationConfigurationExecutionControlsSsmControlsPtrOutput {
	return i.ToRemediationConfigurationExecutionControlsSsmControlsPtrOutputWithContext(context.Background())
}

func (i RemediationConfigurationExecutionControlsSsmControlsArgs) ToRemediationConfigurationExecutionControlsSsmControlsPtrOutputWithContext(ctx context.Context) RemediationConfigurationExecutionControlsSsmControlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationConfigurationExecutionControlsSsmControlsOutput).ToRemediationConfigurationExecutionControlsSsmControlsPtrOutputWithContext(ctx)
}

// RemediationConfigurationExecutionControlsSsmControlsPtrInput is an input type that accepts RemediationConfigurationExecutionControlsSsmControlsArgs, RemediationConfigurationExecutionControlsSsmControlsPtr and RemediationConfigurationExecutionControlsSsmControlsPtrOutput values.
// You can construct a concrete instance of `RemediationConfigurationExecutionControlsSsmControlsPtrInput` via:
//
//	        RemediationConfigurationExecutionControlsSsmControlsArgs{...}
//
//	or:
//
//	        nil
type RemediationConfigurationExecutionControlsSsmControlsPtrInput interface {
	pulumi.Input

	ToRemediationConfigurationExecutionControlsSsmControlsPtrOutput() RemediationConfigurationExecutionControlsSsmControlsPtrOutput
	ToRemediationConfigurationExecutionControlsSsmControlsPtrOutputWithContext(context.Context) RemediationConfigurationExecutionControlsSsmControlsPtrOutput
}

type remediationConfigurationExecutionControlsSsmControlsPtrType RemediationConfigurationExecutionControlsSsmControlsArgs

func RemediationConfigurationExecutionControlsSsmControlsPtr(v *RemediationConfigurationExecutionControlsSsmControlsArgs) RemediationConfigurationExecutionControlsSsmControlsPtrInput {
	return (*remediationConfigurationExecutionControlsSsmControlsPtrType)(v)
}

func (*remediationConfigurationExecutionControlsSsmControlsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RemediationConfigurationExecutionControlsSsmControls)(nil)).Elem()
}

func (i *remediationConfigurationExecutionControlsSsmControlsPtrType) ToRemediationConfigurationExecutionControlsSsmControlsPtrOutput() RemediationConfigurationExecutionControlsSsmControlsPtrOutput {
	return i.ToRemediationConfigurationExecutionControlsSsmControlsPtrOutputWithContext(context.Background())
}

func (i *remediationConfigurationExecutionControlsSsmControlsPtrType) ToRemediationConfigurationExecutionControlsSsmControlsPtrOutputWithContext(ctx context.Context) RemediationConfigurationExecutionControlsSsmControlsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationConfigurationExecutionControlsSsmControlsPtrOutput)
}

type RemediationConfigurationExecutionControlsSsmControlsOutput struct{ *pulumi.OutputState }

func (RemediationConfigurationExecutionControlsSsmControlsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RemediationConfigurationExecutionControlsSsmControls)(nil)).Elem()
}

func (o RemediationConfigurationExecutionControlsSsmControlsOutput) ToRemediationConfigurationExecutionControlsSsmControlsOutput() RemediationConfigurationExecutionControlsSsmControlsOutput {
	return o
}

func (o RemediationConfigurationExecutionControlsSsmControlsOutput) ToRemediationConfigurationExecutionControlsSsmControlsOutputWithContext(ctx context.Context) RemediationConfigurationExecutionControlsSsmControlsOutput {
	return o
}

func (o RemediationConfigurationExecutionControlsSsmControlsOutput) ToRemediationConfigurationExecutionControlsSsmControlsPtrOutput() RemediationConfigurationExecutionControlsSsmControlsPtrOutput {
	return o.ToRemediationConfigurationExecutionControlsSsmControlsPtrOutputWithContext(context.Background())
}

func (o RemediationConfigurationExecutionControlsSsmControlsOutput) ToRemediationConfigurationExecutionControlsSsmControlsPtrOutputWithContext(ctx context.Context) RemediationConfigurationExecutionControlsSsmControlsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RemediationConfigurationExecutionControlsSsmControls) *RemediationConfigurationExecutionControlsSsmControls {
		return &v
	}).(RemediationConfigurationExecutionControlsSsmControlsPtrOutput)
}

// Maximum percentage of remediation actions allowed to run in parallel on the non-compliant resources for that specific rule. The default value is 10%.
func (o RemediationConfigurationExecutionControlsSsmControlsOutput) ConcurrentExecutionRatePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RemediationConfigurationExecutionControlsSsmControls) *int {
		return v.ConcurrentExecutionRatePercentage
	}).(pulumi.IntPtrOutput)
}

// Percentage of errors that are allowed before SSM stops running automations on non-compliant resources for that specific rule. The default is 50%.
func (o RemediationConfigurationExecutionControlsSsmControlsOutput) ErrorPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v RemediationConfigurationExecutionControlsSsmControls) *int { return v.ErrorPercentage }).(pulumi.IntPtrOutput)
}

type RemediationConfigurationExecutionControlsSsmControlsPtrOutput struct{ *pulumi.OutputState }

func (RemediationConfigurationExecutionControlsSsmControlsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RemediationConfigurationExecutionControlsSsmControls)(nil)).Elem()
}

func (o RemediationConfigurationExecutionControlsSsmControlsPtrOutput) ToRemediationConfigurationExecutionControlsSsmControlsPtrOutput() RemediationConfigurationExecutionControlsSsmControlsPtrOutput {
	return o
}

func (o RemediationConfigurationExecutionControlsSsmControlsPtrOutput) ToRemediationConfigurationExecutionControlsSsmControlsPtrOutputWithContext(ctx context.Context) RemediationConfigurationExecutionControlsSsmControlsPtrOutput {
	return o
}

func (o RemediationConfigurationExecutionControlsSsmControlsPtrOutput) Elem() RemediationConfigurationExecutionControlsSsmControlsOutput {
	return o.ApplyT(func(v *RemediationConfigurationExecutionControlsSsmControls) RemediationConfigurationExecutionControlsSsmControls {
		if v != nil {
			return *v
		}
		var ret RemediationConfigurationExecutionControlsSsmControls
		return ret
	}).(RemediationConfigurationExecutionControlsSsmControlsOutput)
}

// Maximum percentage of remediation actions allowed to run in parallel on the non-compliant resources for that specific rule. The default value is 10%.
func (o RemediationConfigurationExecutionControlsSsmControlsPtrOutput) ConcurrentExecutionRatePercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemediationConfigurationExecutionControlsSsmControls) *int {
		if v == nil {
			return nil
		}
		return v.ConcurrentExecutionRatePercentage
	}).(pulumi.IntPtrOutput)
}

// Percentage of errors that are allowed before SSM stops running automations on non-compliant resources for that specific rule. The default is 50%.
func (o RemediationConfigurationExecutionControlsSsmControlsPtrOutput) ErrorPercentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemediationConfigurationExecutionControlsSsmControls) *int {
		if v == nil {
			return nil
		}
		return v.ErrorPercentage
	}).(pulumi.IntPtrOutput)
}

type RemediationConfigurationParameter struct {
	// Name of the attribute.
	Name string `pulumi:"name"`
	// Value is dynamic and changes at run-time.
	ResourceValue *string `pulumi:"resourceValue"`
	// Value is static and does not change at run-time.
	StaticValue *string `pulumi:"staticValue"`
	// List of static values.
	StaticValues []string `pulumi:"staticValues"`
}

// RemediationConfigurationParameterInput is an input type that accepts RemediationConfigurationParameterArgs and RemediationConfigurationParameterOutput values.
// You can construct a concrete instance of `RemediationConfigurationParameterInput` via:
//
//	RemediationConfigurationParameterArgs{...}
type RemediationConfigurationParameterInput interface {
	pulumi.Input

	ToRemediationConfigurationParameterOutput() RemediationConfigurationParameterOutput
	ToRemediationConfigurationParameterOutputWithContext(context.Context) RemediationConfigurationParameterOutput
}

type RemediationConfigurationParameterArgs struct {
	// Name of the attribute.
	Name pulumi.StringInput `pulumi:"name"`
	// Value is dynamic and changes at run-time.
	ResourceValue pulumi.StringPtrInput `pulumi:"resourceValue"`
	// Value is static and does not change at run-time.
	StaticValue pulumi.StringPtrInput `pulumi:"staticValue"`
	// List of static values.
	StaticValues pulumi.StringArrayInput `pulumi:"staticValues"`
}

func (RemediationConfigurationParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RemediationConfigurationParameter)(nil)).Elem()
}

func (i RemediationConfigurationParameterArgs) ToRemediationConfigurationParameterOutput() RemediationConfigurationParameterOutput {
	return i.ToRemediationConfigurationParameterOutputWithContext(context.Background())
}

func (i RemediationConfigurationParameterArgs) ToRemediationConfigurationParameterOutputWithContext(ctx context.Context) RemediationConfigurationParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationConfigurationParameterOutput)
}

// RemediationConfigurationParameterArrayInput is an input type that accepts RemediationConfigurationParameterArray and RemediationConfigurationParameterArrayOutput values.
// You can construct a concrete instance of `RemediationConfigurationParameterArrayInput` via:
//
//	RemediationConfigurationParameterArray{ RemediationConfigurationParameterArgs{...} }
type RemediationConfigurationParameterArrayInput interface {
	pulumi.Input

	ToRemediationConfigurationParameterArrayOutput() RemediationConfigurationParameterArrayOutput
	ToRemediationConfigurationParameterArrayOutputWithContext(context.Context) RemediationConfigurationParameterArrayOutput
}

type RemediationConfigurationParameterArray []RemediationConfigurationParameterInput

func (RemediationConfigurationParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RemediationConfigurationParameter)(nil)).Elem()
}

func (i RemediationConfigurationParameterArray) ToRemediationConfigurationParameterArrayOutput() RemediationConfigurationParameterArrayOutput {
	return i.ToRemediationConfigurationParameterArrayOutputWithContext(context.Background())
}

func (i RemediationConfigurationParameterArray) ToRemediationConfigurationParameterArrayOutputWithContext(ctx context.Context) RemediationConfigurationParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationConfigurationParameterArrayOutput)
}

type RemediationConfigurationParameterOutput struct{ *pulumi.OutputState }

func (RemediationConfigurationParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RemediationConfigurationParameter)(nil)).Elem()
}

func (o RemediationConfigurationParameterOutput) ToRemediationConfigurationParameterOutput() RemediationConfigurationParameterOutput {
	return o
}

func (o RemediationConfigurationParameterOutput) ToRemediationConfigurationParameterOutputWithContext(ctx context.Context) RemediationConfigurationParameterOutput {
	return o
}

// Name of the attribute.
func (o RemediationConfigurationParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RemediationConfigurationParameter) string { return v.Name }).(pulumi.StringOutput)
}

// Value is dynamic and changes at run-time.
func (o RemediationConfigurationParameterOutput) ResourceValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RemediationConfigurationParameter) *string { return v.ResourceValue }).(pulumi.StringPtrOutput)
}

// Value is static and does not change at run-time.
func (o RemediationConfigurationParameterOutput) StaticValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RemediationConfigurationParameter) *string { return v.StaticValue }).(pulumi.StringPtrOutput)
}

// List of static values.
func (o RemediationConfigurationParameterOutput) StaticValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RemediationConfigurationParameter) []string { return v.StaticValues }).(pulumi.StringArrayOutput)
}

type RemediationConfigurationParameterArrayOutput struct{ *pulumi.OutputState }

func (RemediationConfigurationParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RemediationConfigurationParameter)(nil)).Elem()
}

func (o RemediationConfigurationParameterArrayOutput) ToRemediationConfigurationParameterArrayOutput() RemediationConfigurationParameterArrayOutput {
	return o
}

func (o RemediationConfigurationParameterArrayOutput) ToRemediationConfigurationParameterArrayOutputWithContext(ctx context.Context) RemediationConfigurationParameterArrayOutput {
	return o
}

func (o RemediationConfigurationParameterArrayOutput) Index(i pulumi.IntInput) RemediationConfigurationParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RemediationConfigurationParameter {
		return vs[0].([]RemediationConfigurationParameter)[vs[1].(int)]
	}).(RemediationConfigurationParameterOutput)
}

type RuleScope struct {
	// The IDs of the only AWS resource that you want to trigger an evaluation for the rule. If you specify a resource ID, you must specify one resource type for `complianceResourceTypes`.
	ComplianceResourceId *string `pulumi:"complianceResourceId"`
	// A list of resource types of only those AWS resources that you want to trigger an evaluation for the ruleE.g., `AWS::EC2::Instance`. You can only specify one type if you also specify a resource ID for `complianceResourceId`. See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types.
	ComplianceResourceTypes []string `pulumi:"complianceResourceTypes"`
	// The tag key that is applied to only those AWS resources that you want you want to trigger an evaluation for the rule.
	TagKey *string `pulumi:"tagKey"`
	// The tag value applied to only those AWS resources that you want to trigger an evaluation for the rule.
	TagValue *string `pulumi:"tagValue"`
}

// RuleScopeInput is an input type that accepts RuleScopeArgs and RuleScopeOutput values.
// You can construct a concrete instance of `RuleScopeInput` via:
//
//	RuleScopeArgs{...}
type RuleScopeInput interface {
	pulumi.Input

	ToRuleScopeOutput() RuleScopeOutput
	ToRuleScopeOutputWithContext(context.Context) RuleScopeOutput
}

type RuleScopeArgs struct {
	// The IDs of the only AWS resource that you want to trigger an evaluation for the rule. If you specify a resource ID, you must specify one resource type for `complianceResourceTypes`.
	ComplianceResourceId pulumi.StringPtrInput `pulumi:"complianceResourceId"`
	// A list of resource types of only those AWS resources that you want to trigger an evaluation for the ruleE.g., `AWS::EC2::Instance`. You can only specify one type if you also specify a resource ID for `complianceResourceId`. See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types.
	ComplianceResourceTypes pulumi.StringArrayInput `pulumi:"complianceResourceTypes"`
	// The tag key that is applied to only those AWS resources that you want you want to trigger an evaluation for the rule.
	TagKey pulumi.StringPtrInput `pulumi:"tagKey"`
	// The tag value applied to only those AWS resources that you want to trigger an evaluation for the rule.
	TagValue pulumi.StringPtrInput `pulumi:"tagValue"`
}

func (RuleScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleScope)(nil)).Elem()
}

func (i RuleScopeArgs) ToRuleScopeOutput() RuleScopeOutput {
	return i.ToRuleScopeOutputWithContext(context.Background())
}

func (i RuleScopeArgs) ToRuleScopeOutputWithContext(ctx context.Context) RuleScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleScopeOutput)
}

func (i RuleScopeArgs) ToRuleScopePtrOutput() RuleScopePtrOutput {
	return i.ToRuleScopePtrOutputWithContext(context.Background())
}

func (i RuleScopeArgs) ToRuleScopePtrOutputWithContext(ctx context.Context) RuleScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleScopeOutput).ToRuleScopePtrOutputWithContext(ctx)
}

// RuleScopePtrInput is an input type that accepts RuleScopeArgs, RuleScopePtr and RuleScopePtrOutput values.
// You can construct a concrete instance of `RuleScopePtrInput` via:
//
//	        RuleScopeArgs{...}
//
//	or:
//
//	        nil
type RuleScopePtrInput interface {
	pulumi.Input

	ToRuleScopePtrOutput() RuleScopePtrOutput
	ToRuleScopePtrOutputWithContext(context.Context) RuleScopePtrOutput
}

type ruleScopePtrType RuleScopeArgs

func RuleScopePtr(v *RuleScopeArgs) RuleScopePtrInput {
	return (*ruleScopePtrType)(v)
}

func (*ruleScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleScope)(nil)).Elem()
}

func (i *ruleScopePtrType) ToRuleScopePtrOutput() RuleScopePtrOutput {
	return i.ToRuleScopePtrOutputWithContext(context.Background())
}

func (i *ruleScopePtrType) ToRuleScopePtrOutputWithContext(ctx context.Context) RuleScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleScopePtrOutput)
}

type RuleScopeOutput struct{ *pulumi.OutputState }

func (RuleScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleScope)(nil)).Elem()
}

func (o RuleScopeOutput) ToRuleScopeOutput() RuleScopeOutput {
	return o
}

func (o RuleScopeOutput) ToRuleScopeOutputWithContext(ctx context.Context) RuleScopeOutput {
	return o
}

func (o RuleScopeOutput) ToRuleScopePtrOutput() RuleScopePtrOutput {
	return o.ToRuleScopePtrOutputWithContext(context.Background())
}

func (o RuleScopeOutput) ToRuleScopePtrOutputWithContext(ctx context.Context) RuleScopePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleScope) *RuleScope {
		return &v
	}).(RuleScopePtrOutput)
}

// The IDs of the only AWS resource that you want to trigger an evaluation for the rule. If you specify a resource ID, you must specify one resource type for `complianceResourceTypes`.
func (o RuleScopeOutput) ComplianceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleScope) *string { return v.ComplianceResourceId }).(pulumi.StringPtrOutput)
}

// A list of resource types of only those AWS resources that you want to trigger an evaluation for the ruleE.g., `AWS::EC2::Instance`. You can only specify one type if you also specify a resource ID for `complianceResourceId`. See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types.
func (o RuleScopeOutput) ComplianceResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleScope) []string { return v.ComplianceResourceTypes }).(pulumi.StringArrayOutput)
}

// The tag key that is applied to only those AWS resources that you want you want to trigger an evaluation for the rule.
func (o RuleScopeOutput) TagKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleScope) *string { return v.TagKey }).(pulumi.StringPtrOutput)
}

// The tag value applied to only those AWS resources that you want to trigger an evaluation for the rule.
func (o RuleScopeOutput) TagValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleScope) *string { return v.TagValue }).(pulumi.StringPtrOutput)
}

type RuleScopePtrOutput struct{ *pulumi.OutputState }

func (RuleScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleScope)(nil)).Elem()
}

func (o RuleScopePtrOutput) ToRuleScopePtrOutput() RuleScopePtrOutput {
	return o
}

func (o RuleScopePtrOutput) ToRuleScopePtrOutputWithContext(ctx context.Context) RuleScopePtrOutput {
	return o
}

func (o RuleScopePtrOutput) Elem() RuleScopeOutput {
	return o.ApplyT(func(v *RuleScope) RuleScope {
		if v != nil {
			return *v
		}
		var ret RuleScope
		return ret
	}).(RuleScopeOutput)
}

// The IDs of the only AWS resource that you want to trigger an evaluation for the rule. If you specify a resource ID, you must specify one resource type for `complianceResourceTypes`.
func (o RuleScopePtrOutput) ComplianceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleScope) *string {
		if v == nil {
			return nil
		}
		return v.ComplianceResourceId
	}).(pulumi.StringPtrOutput)
}

// A list of resource types of only those AWS resources that you want to trigger an evaluation for the ruleE.g., `AWS::EC2::Instance`. You can only specify one type if you also specify a resource ID for `complianceResourceId`. See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types.
func (o RuleScopePtrOutput) ComplianceResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RuleScope) []string {
		if v == nil {
			return nil
		}
		return v.ComplianceResourceTypes
	}).(pulumi.StringArrayOutput)
}

// The tag key that is applied to only those AWS resources that you want you want to trigger an evaluation for the rule.
func (o RuleScopePtrOutput) TagKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleScope) *string {
		if v == nil {
			return nil
		}
		return v.TagKey
	}).(pulumi.StringPtrOutput)
}

// The tag value applied to only those AWS resources that you want to trigger an evaluation for the rule.
func (o RuleScopePtrOutput) TagValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleScope) *string {
		if v == nil {
			return nil
		}
		return v.TagValue
	}).(pulumi.StringPtrOutput)
}

type RuleSource struct {
	// Provides the runtime system, policy definition, and whether debug logging is enabled. Required when owner is set to `CUSTOM_POLICY`. See Custom Policy Details Below.
	CustomPolicyDetails *RuleSourceCustomPolicyDetails `pulumi:"customPolicyDetails"`
	// Indicates whether AWS or the customer owns and manages the AWS Config rule. Valid values are `AWS`, `CUSTOM_LAMBDA` or `CUSTOM_POLICY`. For more information about managed rules, see the [AWS Config Managed Rules documentation](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html). For more information about custom rules, see the [AWS Config Custom Rules documentation](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules.html). Custom Lambda Functions require permissions to allow the AWS Config service to invoke them, e.g., via the `lambda.Permission` resource.
	Owner string `pulumi:"owner"`
	// Provides the source and type of the event that causes AWS Config to evaluate your AWS resources. Only valid if `owner` is `CUSTOM_LAMBDA` or `CUSTOM_POLICY`. See Source Detail Below.
	SourceDetails []RuleSourceSourceDetail `pulumi:"sourceDetails"`
	// For AWS Config managed rules, a predefined identifier, e.g `IAM_PASSWORD_POLICY`. For custom Lambda rules, the identifier is the ARN of the Lambda Function, such as `arn:aws:lambda:us-east-1:123456789012:function:custom_rule_name` or the `arn` attribute of the `lambda.Function` resource.
	SourceIdentifier *string `pulumi:"sourceIdentifier"`
}

// RuleSourceInput is an input type that accepts RuleSourceArgs and RuleSourceOutput values.
// You can construct a concrete instance of `RuleSourceInput` via:
//
//	RuleSourceArgs{...}
type RuleSourceInput interface {
	pulumi.Input

	ToRuleSourceOutput() RuleSourceOutput
	ToRuleSourceOutputWithContext(context.Context) RuleSourceOutput
}

type RuleSourceArgs struct {
	// Provides the runtime system, policy definition, and whether debug logging is enabled. Required when owner is set to `CUSTOM_POLICY`. See Custom Policy Details Below.
	CustomPolicyDetails RuleSourceCustomPolicyDetailsPtrInput `pulumi:"customPolicyDetails"`
	// Indicates whether AWS or the customer owns and manages the AWS Config rule. Valid values are `AWS`, `CUSTOM_LAMBDA` or `CUSTOM_POLICY`. For more information about managed rules, see the [AWS Config Managed Rules documentation](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html). For more information about custom rules, see the [AWS Config Custom Rules documentation](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules.html). Custom Lambda Functions require permissions to allow the AWS Config service to invoke them, e.g., via the `lambda.Permission` resource.
	Owner pulumi.StringInput `pulumi:"owner"`
	// Provides the source and type of the event that causes AWS Config to evaluate your AWS resources. Only valid if `owner` is `CUSTOM_LAMBDA` or `CUSTOM_POLICY`. See Source Detail Below.
	SourceDetails RuleSourceSourceDetailArrayInput `pulumi:"sourceDetails"`
	// For AWS Config managed rules, a predefined identifier, e.g `IAM_PASSWORD_POLICY`. For custom Lambda rules, the identifier is the ARN of the Lambda Function, such as `arn:aws:lambda:us-east-1:123456789012:function:custom_rule_name` or the `arn` attribute of the `lambda.Function` resource.
	SourceIdentifier pulumi.StringPtrInput `pulumi:"sourceIdentifier"`
}

func (RuleSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSource)(nil)).Elem()
}

func (i RuleSourceArgs) ToRuleSourceOutput() RuleSourceOutput {
	return i.ToRuleSourceOutputWithContext(context.Background())
}

func (i RuleSourceArgs) ToRuleSourceOutputWithContext(ctx context.Context) RuleSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSourceOutput)
}

func (i RuleSourceArgs) ToRuleSourcePtrOutput() RuleSourcePtrOutput {
	return i.ToRuleSourcePtrOutputWithContext(context.Background())
}

func (i RuleSourceArgs) ToRuleSourcePtrOutputWithContext(ctx context.Context) RuleSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSourceOutput).ToRuleSourcePtrOutputWithContext(ctx)
}

// RuleSourcePtrInput is an input type that accepts RuleSourceArgs, RuleSourcePtr and RuleSourcePtrOutput values.
// You can construct a concrete instance of `RuleSourcePtrInput` via:
//
//	        RuleSourceArgs{...}
//
//	or:
//
//	        nil
type RuleSourcePtrInput interface {
	pulumi.Input

	ToRuleSourcePtrOutput() RuleSourcePtrOutput
	ToRuleSourcePtrOutputWithContext(context.Context) RuleSourcePtrOutput
}

type ruleSourcePtrType RuleSourceArgs

func RuleSourcePtr(v *RuleSourceArgs) RuleSourcePtrInput {
	return (*ruleSourcePtrType)(v)
}

func (*ruleSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleSource)(nil)).Elem()
}

func (i *ruleSourcePtrType) ToRuleSourcePtrOutput() RuleSourcePtrOutput {
	return i.ToRuleSourcePtrOutputWithContext(context.Background())
}

func (i *ruleSourcePtrType) ToRuleSourcePtrOutputWithContext(ctx context.Context) RuleSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSourcePtrOutput)
}

type RuleSourceOutput struct{ *pulumi.OutputState }

func (RuleSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSource)(nil)).Elem()
}

func (o RuleSourceOutput) ToRuleSourceOutput() RuleSourceOutput {
	return o
}

func (o RuleSourceOutput) ToRuleSourceOutputWithContext(ctx context.Context) RuleSourceOutput {
	return o
}

func (o RuleSourceOutput) ToRuleSourcePtrOutput() RuleSourcePtrOutput {
	return o.ToRuleSourcePtrOutputWithContext(context.Background())
}

func (o RuleSourceOutput) ToRuleSourcePtrOutputWithContext(ctx context.Context) RuleSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleSource) *RuleSource {
		return &v
	}).(RuleSourcePtrOutput)
}

// Provides the runtime system, policy definition, and whether debug logging is enabled. Required when owner is set to `CUSTOM_POLICY`. See Custom Policy Details Below.
func (o RuleSourceOutput) CustomPolicyDetails() RuleSourceCustomPolicyDetailsPtrOutput {
	return o.ApplyT(func(v RuleSource) *RuleSourceCustomPolicyDetails { return v.CustomPolicyDetails }).(RuleSourceCustomPolicyDetailsPtrOutput)
}

// Indicates whether AWS or the customer owns and manages the AWS Config rule. Valid values are `AWS`, `CUSTOM_LAMBDA` or `CUSTOM_POLICY`. For more information about managed rules, see the [AWS Config Managed Rules documentation](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html). For more information about custom rules, see the [AWS Config Custom Rules documentation](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules.html). Custom Lambda Functions require permissions to allow the AWS Config service to invoke them, e.g., via the `lambda.Permission` resource.
func (o RuleSourceOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v RuleSource) string { return v.Owner }).(pulumi.StringOutput)
}

// Provides the source and type of the event that causes AWS Config to evaluate your AWS resources. Only valid if `owner` is `CUSTOM_LAMBDA` or `CUSTOM_POLICY`. See Source Detail Below.
func (o RuleSourceOutput) SourceDetails() RuleSourceSourceDetailArrayOutput {
	return o.ApplyT(func(v RuleSource) []RuleSourceSourceDetail { return v.SourceDetails }).(RuleSourceSourceDetailArrayOutput)
}

// For AWS Config managed rules, a predefined identifier, e.g `IAM_PASSWORD_POLICY`. For custom Lambda rules, the identifier is the ARN of the Lambda Function, such as `arn:aws:lambda:us-east-1:123456789012:function:custom_rule_name` or the `arn` attribute of the `lambda.Function` resource.
func (o RuleSourceOutput) SourceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleSource) *string { return v.SourceIdentifier }).(pulumi.StringPtrOutput)
}

type RuleSourcePtrOutput struct{ *pulumi.OutputState }

func (RuleSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleSource)(nil)).Elem()
}

func (o RuleSourcePtrOutput) ToRuleSourcePtrOutput() RuleSourcePtrOutput {
	return o
}

func (o RuleSourcePtrOutput) ToRuleSourcePtrOutputWithContext(ctx context.Context) RuleSourcePtrOutput {
	return o
}

func (o RuleSourcePtrOutput) Elem() RuleSourceOutput {
	return o.ApplyT(func(v *RuleSource) RuleSource {
		if v != nil {
			return *v
		}
		var ret RuleSource
		return ret
	}).(RuleSourceOutput)
}

// Provides the runtime system, policy definition, and whether debug logging is enabled. Required when owner is set to `CUSTOM_POLICY`. See Custom Policy Details Below.
func (o RuleSourcePtrOutput) CustomPolicyDetails() RuleSourceCustomPolicyDetailsPtrOutput {
	return o.ApplyT(func(v *RuleSource) *RuleSourceCustomPolicyDetails {
		if v == nil {
			return nil
		}
		return v.CustomPolicyDetails
	}).(RuleSourceCustomPolicyDetailsPtrOutput)
}

// Indicates whether AWS or the customer owns and manages the AWS Config rule. Valid values are `AWS`, `CUSTOM_LAMBDA` or `CUSTOM_POLICY`. For more information about managed rules, see the [AWS Config Managed Rules documentation](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html). For more information about custom rules, see the [AWS Config Custom Rules documentation](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules.html). Custom Lambda Functions require permissions to allow the AWS Config service to invoke them, e.g., via the `lambda.Permission` resource.
func (o RuleSourcePtrOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleSource) *string {
		if v == nil {
			return nil
		}
		return &v.Owner
	}).(pulumi.StringPtrOutput)
}

// Provides the source and type of the event that causes AWS Config to evaluate your AWS resources. Only valid if `owner` is `CUSTOM_LAMBDA` or `CUSTOM_POLICY`. See Source Detail Below.
func (o RuleSourcePtrOutput) SourceDetails() RuleSourceSourceDetailArrayOutput {
	return o.ApplyT(func(v *RuleSource) []RuleSourceSourceDetail {
		if v == nil {
			return nil
		}
		return v.SourceDetails
	}).(RuleSourceSourceDetailArrayOutput)
}

// For AWS Config managed rules, a predefined identifier, e.g `IAM_PASSWORD_POLICY`. For custom Lambda rules, the identifier is the ARN of the Lambda Function, such as `arn:aws:lambda:us-east-1:123456789012:function:custom_rule_name` or the `arn` attribute of the `lambda.Function` resource.
func (o RuleSourcePtrOutput) SourceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleSource) *string {
		if v == nil {
			return nil
		}
		return v.SourceIdentifier
	}).(pulumi.StringPtrOutput)
}

type RuleSourceCustomPolicyDetails struct {
	// The boolean expression for enabling debug logging for your Config Custom Policy rule. The default value is `false`.
	EnableDebugLogDelivery *bool `pulumi:"enableDebugLogDelivery"`
	// The runtime system for your Config Custom Policy rule. Guard is a policy-as-code language that allows you to write policies that are enforced by Config Custom Policy rules. For more information about Guard, see the [Guard GitHub Repository](https://github.com/aws-cloudformation/cloudformation-guard).
	PolicyRuntime string `pulumi:"policyRuntime"`
	// The policy definition containing the logic for your Config Custom Policy rule.
	PolicyText string `pulumi:"policyText"`
}

// RuleSourceCustomPolicyDetailsInput is an input type that accepts RuleSourceCustomPolicyDetailsArgs and RuleSourceCustomPolicyDetailsOutput values.
// You can construct a concrete instance of `RuleSourceCustomPolicyDetailsInput` via:
//
//	RuleSourceCustomPolicyDetailsArgs{...}
type RuleSourceCustomPolicyDetailsInput interface {
	pulumi.Input

	ToRuleSourceCustomPolicyDetailsOutput() RuleSourceCustomPolicyDetailsOutput
	ToRuleSourceCustomPolicyDetailsOutputWithContext(context.Context) RuleSourceCustomPolicyDetailsOutput
}

type RuleSourceCustomPolicyDetailsArgs struct {
	// The boolean expression for enabling debug logging for your Config Custom Policy rule. The default value is `false`.
	EnableDebugLogDelivery pulumi.BoolPtrInput `pulumi:"enableDebugLogDelivery"`
	// The runtime system for your Config Custom Policy rule. Guard is a policy-as-code language that allows you to write policies that are enforced by Config Custom Policy rules. For more information about Guard, see the [Guard GitHub Repository](https://github.com/aws-cloudformation/cloudformation-guard).
	PolicyRuntime pulumi.StringInput `pulumi:"policyRuntime"`
	// The policy definition containing the logic for your Config Custom Policy rule.
	PolicyText pulumi.StringInput `pulumi:"policyText"`
}

func (RuleSourceCustomPolicyDetailsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSourceCustomPolicyDetails)(nil)).Elem()
}

func (i RuleSourceCustomPolicyDetailsArgs) ToRuleSourceCustomPolicyDetailsOutput() RuleSourceCustomPolicyDetailsOutput {
	return i.ToRuleSourceCustomPolicyDetailsOutputWithContext(context.Background())
}

func (i RuleSourceCustomPolicyDetailsArgs) ToRuleSourceCustomPolicyDetailsOutputWithContext(ctx context.Context) RuleSourceCustomPolicyDetailsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSourceCustomPolicyDetailsOutput)
}

func (i RuleSourceCustomPolicyDetailsArgs) ToRuleSourceCustomPolicyDetailsPtrOutput() RuleSourceCustomPolicyDetailsPtrOutput {
	return i.ToRuleSourceCustomPolicyDetailsPtrOutputWithContext(context.Background())
}

func (i RuleSourceCustomPolicyDetailsArgs) ToRuleSourceCustomPolicyDetailsPtrOutputWithContext(ctx context.Context) RuleSourceCustomPolicyDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSourceCustomPolicyDetailsOutput).ToRuleSourceCustomPolicyDetailsPtrOutputWithContext(ctx)
}

// RuleSourceCustomPolicyDetailsPtrInput is an input type that accepts RuleSourceCustomPolicyDetailsArgs, RuleSourceCustomPolicyDetailsPtr and RuleSourceCustomPolicyDetailsPtrOutput values.
// You can construct a concrete instance of `RuleSourceCustomPolicyDetailsPtrInput` via:
//
//	        RuleSourceCustomPolicyDetailsArgs{...}
//
//	or:
//
//	        nil
type RuleSourceCustomPolicyDetailsPtrInput interface {
	pulumi.Input

	ToRuleSourceCustomPolicyDetailsPtrOutput() RuleSourceCustomPolicyDetailsPtrOutput
	ToRuleSourceCustomPolicyDetailsPtrOutputWithContext(context.Context) RuleSourceCustomPolicyDetailsPtrOutput
}

type ruleSourceCustomPolicyDetailsPtrType RuleSourceCustomPolicyDetailsArgs

func RuleSourceCustomPolicyDetailsPtr(v *RuleSourceCustomPolicyDetailsArgs) RuleSourceCustomPolicyDetailsPtrInput {
	return (*ruleSourceCustomPolicyDetailsPtrType)(v)
}

func (*ruleSourceCustomPolicyDetailsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleSourceCustomPolicyDetails)(nil)).Elem()
}

func (i *ruleSourceCustomPolicyDetailsPtrType) ToRuleSourceCustomPolicyDetailsPtrOutput() RuleSourceCustomPolicyDetailsPtrOutput {
	return i.ToRuleSourceCustomPolicyDetailsPtrOutputWithContext(context.Background())
}

func (i *ruleSourceCustomPolicyDetailsPtrType) ToRuleSourceCustomPolicyDetailsPtrOutputWithContext(ctx context.Context) RuleSourceCustomPolicyDetailsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSourceCustomPolicyDetailsPtrOutput)
}

type RuleSourceCustomPolicyDetailsOutput struct{ *pulumi.OutputState }

func (RuleSourceCustomPolicyDetailsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSourceCustomPolicyDetails)(nil)).Elem()
}

func (o RuleSourceCustomPolicyDetailsOutput) ToRuleSourceCustomPolicyDetailsOutput() RuleSourceCustomPolicyDetailsOutput {
	return o
}

func (o RuleSourceCustomPolicyDetailsOutput) ToRuleSourceCustomPolicyDetailsOutputWithContext(ctx context.Context) RuleSourceCustomPolicyDetailsOutput {
	return o
}

func (o RuleSourceCustomPolicyDetailsOutput) ToRuleSourceCustomPolicyDetailsPtrOutput() RuleSourceCustomPolicyDetailsPtrOutput {
	return o.ToRuleSourceCustomPolicyDetailsPtrOutputWithContext(context.Background())
}

func (o RuleSourceCustomPolicyDetailsOutput) ToRuleSourceCustomPolicyDetailsPtrOutputWithContext(ctx context.Context) RuleSourceCustomPolicyDetailsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleSourceCustomPolicyDetails) *RuleSourceCustomPolicyDetails {
		return &v
	}).(RuleSourceCustomPolicyDetailsPtrOutput)
}

// The boolean expression for enabling debug logging for your Config Custom Policy rule. The default value is `false`.
func (o RuleSourceCustomPolicyDetailsOutput) EnableDebugLogDelivery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RuleSourceCustomPolicyDetails) *bool { return v.EnableDebugLogDelivery }).(pulumi.BoolPtrOutput)
}

// The runtime system for your Config Custom Policy rule. Guard is a policy-as-code language that allows you to write policies that are enforced by Config Custom Policy rules. For more information about Guard, see the [Guard GitHub Repository](https://github.com/aws-cloudformation/cloudformation-guard).
func (o RuleSourceCustomPolicyDetailsOutput) PolicyRuntime() pulumi.StringOutput {
	return o.ApplyT(func(v RuleSourceCustomPolicyDetails) string { return v.PolicyRuntime }).(pulumi.StringOutput)
}

// The policy definition containing the logic for your Config Custom Policy rule.
func (o RuleSourceCustomPolicyDetailsOutput) PolicyText() pulumi.StringOutput {
	return o.ApplyT(func(v RuleSourceCustomPolicyDetails) string { return v.PolicyText }).(pulumi.StringOutput)
}

type RuleSourceCustomPolicyDetailsPtrOutput struct{ *pulumi.OutputState }

func (RuleSourceCustomPolicyDetailsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleSourceCustomPolicyDetails)(nil)).Elem()
}

func (o RuleSourceCustomPolicyDetailsPtrOutput) ToRuleSourceCustomPolicyDetailsPtrOutput() RuleSourceCustomPolicyDetailsPtrOutput {
	return o
}

func (o RuleSourceCustomPolicyDetailsPtrOutput) ToRuleSourceCustomPolicyDetailsPtrOutputWithContext(ctx context.Context) RuleSourceCustomPolicyDetailsPtrOutput {
	return o
}

func (o RuleSourceCustomPolicyDetailsPtrOutput) Elem() RuleSourceCustomPolicyDetailsOutput {
	return o.ApplyT(func(v *RuleSourceCustomPolicyDetails) RuleSourceCustomPolicyDetails {
		if v != nil {
			return *v
		}
		var ret RuleSourceCustomPolicyDetails
		return ret
	}).(RuleSourceCustomPolicyDetailsOutput)
}

// The boolean expression for enabling debug logging for your Config Custom Policy rule. The default value is `false`.
func (o RuleSourceCustomPolicyDetailsPtrOutput) EnableDebugLogDelivery() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RuleSourceCustomPolicyDetails) *bool {
		if v == nil {
			return nil
		}
		return v.EnableDebugLogDelivery
	}).(pulumi.BoolPtrOutput)
}

// The runtime system for your Config Custom Policy rule. Guard is a policy-as-code language that allows you to write policies that are enforced by Config Custom Policy rules. For more information about Guard, see the [Guard GitHub Repository](https://github.com/aws-cloudformation/cloudformation-guard).
func (o RuleSourceCustomPolicyDetailsPtrOutput) PolicyRuntime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleSourceCustomPolicyDetails) *string {
		if v == nil {
			return nil
		}
		return &v.PolicyRuntime
	}).(pulumi.StringPtrOutput)
}

// The policy definition containing the logic for your Config Custom Policy rule.
func (o RuleSourceCustomPolicyDetailsPtrOutput) PolicyText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleSourceCustomPolicyDetails) *string {
		if v == nil {
			return nil
		}
		return &v.PolicyText
	}).(pulumi.StringPtrOutput)
}

type RuleSourceSourceDetail struct {
	// The source of the event, such as an AWS service, that triggers AWS Config to evaluate your AWSresources. This defaults to `aws.config` and is the only valid value.
	EventSource *string `pulumi:"eventSource"`
	// The frequency that you want AWS Config to run evaluations for a rule that istriggered periodically. If specified, requires `messageType` to be `ScheduledNotification`.
	MaximumExecutionFrequency *string `pulumi:"maximumExecutionFrequency"`
	// The type of notification that triggers AWS Config to run an evaluation for a rule. You canspecify the following notification types:
	MessageType *string `pulumi:"messageType"`
}

// RuleSourceSourceDetailInput is an input type that accepts RuleSourceSourceDetailArgs and RuleSourceSourceDetailOutput values.
// You can construct a concrete instance of `RuleSourceSourceDetailInput` via:
//
//	RuleSourceSourceDetailArgs{...}
type RuleSourceSourceDetailInput interface {
	pulumi.Input

	ToRuleSourceSourceDetailOutput() RuleSourceSourceDetailOutput
	ToRuleSourceSourceDetailOutputWithContext(context.Context) RuleSourceSourceDetailOutput
}

type RuleSourceSourceDetailArgs struct {
	// The source of the event, such as an AWS service, that triggers AWS Config to evaluate your AWSresources. This defaults to `aws.config` and is the only valid value.
	EventSource pulumi.StringPtrInput `pulumi:"eventSource"`
	// The frequency that you want AWS Config to run evaluations for a rule that istriggered periodically. If specified, requires `messageType` to be `ScheduledNotification`.
	MaximumExecutionFrequency pulumi.StringPtrInput `pulumi:"maximumExecutionFrequency"`
	// The type of notification that triggers AWS Config to run an evaluation for a rule. You canspecify the following notification types:
	MessageType pulumi.StringPtrInput `pulumi:"messageType"`
}

func (RuleSourceSourceDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSourceSourceDetail)(nil)).Elem()
}

func (i RuleSourceSourceDetailArgs) ToRuleSourceSourceDetailOutput() RuleSourceSourceDetailOutput {
	return i.ToRuleSourceSourceDetailOutputWithContext(context.Background())
}

func (i RuleSourceSourceDetailArgs) ToRuleSourceSourceDetailOutputWithContext(ctx context.Context) RuleSourceSourceDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSourceSourceDetailOutput)
}

// RuleSourceSourceDetailArrayInput is an input type that accepts RuleSourceSourceDetailArray and RuleSourceSourceDetailArrayOutput values.
// You can construct a concrete instance of `RuleSourceSourceDetailArrayInput` via:
//
//	RuleSourceSourceDetailArray{ RuleSourceSourceDetailArgs{...} }
type RuleSourceSourceDetailArrayInput interface {
	pulumi.Input

	ToRuleSourceSourceDetailArrayOutput() RuleSourceSourceDetailArrayOutput
	ToRuleSourceSourceDetailArrayOutputWithContext(context.Context) RuleSourceSourceDetailArrayOutput
}

type RuleSourceSourceDetailArray []RuleSourceSourceDetailInput

func (RuleSourceSourceDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleSourceSourceDetail)(nil)).Elem()
}

func (i RuleSourceSourceDetailArray) ToRuleSourceSourceDetailArrayOutput() RuleSourceSourceDetailArrayOutput {
	return i.ToRuleSourceSourceDetailArrayOutputWithContext(context.Background())
}

func (i RuleSourceSourceDetailArray) ToRuleSourceSourceDetailArrayOutputWithContext(ctx context.Context) RuleSourceSourceDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSourceSourceDetailArrayOutput)
}

type RuleSourceSourceDetailOutput struct{ *pulumi.OutputState }

func (RuleSourceSourceDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSourceSourceDetail)(nil)).Elem()
}

func (o RuleSourceSourceDetailOutput) ToRuleSourceSourceDetailOutput() RuleSourceSourceDetailOutput {
	return o
}

func (o RuleSourceSourceDetailOutput) ToRuleSourceSourceDetailOutputWithContext(ctx context.Context) RuleSourceSourceDetailOutput {
	return o
}

// The source of the event, such as an AWS service, that triggers AWS Config to evaluate your AWSresources. This defaults to `aws.config` and is the only valid value.
func (o RuleSourceSourceDetailOutput) EventSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleSourceSourceDetail) *string { return v.EventSource }).(pulumi.StringPtrOutput)
}

// The frequency that you want AWS Config to run evaluations for a rule that istriggered periodically. If specified, requires `messageType` to be `ScheduledNotification`.
func (o RuleSourceSourceDetailOutput) MaximumExecutionFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleSourceSourceDetail) *string { return v.MaximumExecutionFrequency }).(pulumi.StringPtrOutput)
}

// The type of notification that triggers AWS Config to run an evaluation for a rule. You canspecify the following notification types:
func (o RuleSourceSourceDetailOutput) MessageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleSourceSourceDetail) *string { return v.MessageType }).(pulumi.StringPtrOutput)
}

type RuleSourceSourceDetailArrayOutput struct{ *pulumi.OutputState }

func (RuleSourceSourceDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleSourceSourceDetail)(nil)).Elem()
}

func (o RuleSourceSourceDetailArrayOutput) ToRuleSourceSourceDetailArrayOutput() RuleSourceSourceDetailArrayOutput {
	return o
}

func (o RuleSourceSourceDetailArrayOutput) ToRuleSourceSourceDetailArrayOutputWithContext(ctx context.Context) RuleSourceSourceDetailArrayOutput {
	return o
}

func (o RuleSourceSourceDetailArrayOutput) Index(i pulumi.IntInput) RuleSourceSourceDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleSourceSourceDetail {
		return vs[0].([]RuleSourceSourceDetail)[vs[1].(int)]
	}).(RuleSourceSourceDetailOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationAggregatorAccountAggregationSourceInput)(nil)).Elem(), ConfigurationAggregatorAccountAggregationSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationAggregatorAccountAggregationSourcePtrInput)(nil)).Elem(), ConfigurationAggregatorAccountAggregationSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationAggregatorOrganizationAggregationSourceInput)(nil)).Elem(), ConfigurationAggregatorOrganizationAggregationSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigurationAggregatorOrganizationAggregationSourcePtrInput)(nil)).Elem(), ConfigurationAggregatorOrganizationAggregationSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConformancePackInputParameterInput)(nil)).Elem(), ConformancePackInputParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConformancePackInputParameterArrayInput)(nil)).Elem(), ConformancePackInputParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryChannelSnapshotDeliveryPropertiesInput)(nil)).Elem(), DeliveryChannelSnapshotDeliveryPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryChannelSnapshotDeliveryPropertiesPtrInput)(nil)).Elem(), DeliveryChannelSnapshotDeliveryPropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationConformancePackInputParameterInput)(nil)).Elem(), OrganizationConformancePackInputParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationConformancePackInputParameterArrayInput)(nil)).Elem(), OrganizationConformancePackInputParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecorderRecordingGroupInput)(nil)).Elem(), RecorderRecordingGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RecorderRecordingGroupPtrInput)(nil)).Elem(), RecorderRecordingGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RemediationConfigurationExecutionControlsInput)(nil)).Elem(), RemediationConfigurationExecutionControlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RemediationConfigurationExecutionControlsPtrInput)(nil)).Elem(), RemediationConfigurationExecutionControlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RemediationConfigurationExecutionControlsSsmControlsInput)(nil)).Elem(), RemediationConfigurationExecutionControlsSsmControlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RemediationConfigurationExecutionControlsSsmControlsPtrInput)(nil)).Elem(), RemediationConfigurationExecutionControlsSsmControlsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RemediationConfigurationParameterInput)(nil)).Elem(), RemediationConfigurationParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RemediationConfigurationParameterArrayInput)(nil)).Elem(), RemediationConfigurationParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleScopeInput)(nil)).Elem(), RuleScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleScopePtrInput)(nil)).Elem(), RuleScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleSourceInput)(nil)).Elem(), RuleSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleSourcePtrInput)(nil)).Elem(), RuleSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleSourceCustomPolicyDetailsInput)(nil)).Elem(), RuleSourceCustomPolicyDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleSourceCustomPolicyDetailsPtrInput)(nil)).Elem(), RuleSourceCustomPolicyDetailsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleSourceSourceDetailInput)(nil)).Elem(), RuleSourceSourceDetailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleSourceSourceDetailArrayInput)(nil)).Elem(), RuleSourceSourceDetailArray{})
	pulumi.RegisterOutputType(ConfigurationAggregatorAccountAggregationSourceOutput{})
	pulumi.RegisterOutputType(ConfigurationAggregatorAccountAggregationSourcePtrOutput{})
	pulumi.RegisterOutputType(ConfigurationAggregatorOrganizationAggregationSourceOutput{})
	pulumi.RegisterOutputType(ConfigurationAggregatorOrganizationAggregationSourcePtrOutput{})
	pulumi.RegisterOutputType(ConformancePackInputParameterOutput{})
	pulumi.RegisterOutputType(ConformancePackInputParameterArrayOutput{})
	pulumi.RegisterOutputType(DeliveryChannelSnapshotDeliveryPropertiesOutput{})
	pulumi.RegisterOutputType(DeliveryChannelSnapshotDeliveryPropertiesPtrOutput{})
	pulumi.RegisterOutputType(OrganizationConformancePackInputParameterOutput{})
	pulumi.RegisterOutputType(OrganizationConformancePackInputParameterArrayOutput{})
	pulumi.RegisterOutputType(RecorderRecordingGroupOutput{})
	pulumi.RegisterOutputType(RecorderRecordingGroupPtrOutput{})
	pulumi.RegisterOutputType(RemediationConfigurationExecutionControlsOutput{})
	pulumi.RegisterOutputType(RemediationConfigurationExecutionControlsPtrOutput{})
	pulumi.RegisterOutputType(RemediationConfigurationExecutionControlsSsmControlsOutput{})
	pulumi.RegisterOutputType(RemediationConfigurationExecutionControlsSsmControlsPtrOutput{})
	pulumi.RegisterOutputType(RemediationConfigurationParameterOutput{})
	pulumi.RegisterOutputType(RemediationConfigurationParameterArrayOutput{})
	pulumi.RegisterOutputType(RuleScopeOutput{})
	pulumi.RegisterOutputType(RuleScopePtrOutput{})
	pulumi.RegisterOutputType(RuleSourceOutput{})
	pulumi.RegisterOutputType(RuleSourcePtrOutput{})
	pulumi.RegisterOutputType(RuleSourceCustomPolicyDetailsOutput{})
	pulumi.RegisterOutputType(RuleSourceCustomPolicyDetailsPtrOutput{})
	pulumi.RegisterOutputType(RuleSourceSourceDetailOutput{})
	pulumi.RegisterOutputType(RuleSourceSourceDetailArrayOutput{})
}
