// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cfg

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ConfigurationAggregatorAccountAggregationSource struct {
	// List of 12-digit account IDs of the account(s) being aggregated.
	AccountIds []string `pulumi:"accountIds"`
	// If true, aggregate existing AWS Config regions and future regions.
	AllRegions *bool `pulumi:"allRegions"`
	// List of source regions being aggregated.
	Regions []string `pulumi:"regions"`
}

// ConfigurationAggregatorAccountAggregationSourceInput is an input type that accepts ConfigurationAggregatorAccountAggregationSourceArgs and ConfigurationAggregatorAccountAggregationSourceOutput values.
// You can construct a concrete instance of `ConfigurationAggregatorAccountAggregationSourceInput` via:
//
// 		 ConfigurationAggregatorAccountAggregationSourceArgs{...}
//
type ConfigurationAggregatorAccountAggregationSourceInput interface {
	pulumi.Input

	ToConfigurationAggregatorAccountAggregationSourceOutput() ConfigurationAggregatorAccountAggregationSourceOutput
	ToConfigurationAggregatorAccountAggregationSourceOutputWithContext(context.Context) ConfigurationAggregatorAccountAggregationSourceOutput
}

type ConfigurationAggregatorAccountAggregationSourceArgs struct {
	// List of 12-digit account IDs of the account(s) being aggregated.
	AccountIds pulumi.StringArrayInput `pulumi:"accountIds"`
	// If true, aggregate existing AWS Config regions and future regions.
	AllRegions pulumi.BoolPtrInput `pulumi:"allRegions"`
	// List of source regions being aggregated.
	Regions pulumi.StringArrayInput `pulumi:"regions"`
}

func (ConfigurationAggregatorAccountAggregationSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationAggregatorAccountAggregationSource)(nil)).Elem()
}

func (i ConfigurationAggregatorAccountAggregationSourceArgs) ToConfigurationAggregatorAccountAggregationSourceOutput() ConfigurationAggregatorAccountAggregationSourceOutput {
	return i.ToConfigurationAggregatorAccountAggregationSourceOutputWithContext(context.Background())
}

func (i ConfigurationAggregatorAccountAggregationSourceArgs) ToConfigurationAggregatorAccountAggregationSourceOutputWithContext(ctx context.Context) ConfigurationAggregatorAccountAggregationSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationAggregatorAccountAggregationSourceOutput)
}

func (i ConfigurationAggregatorAccountAggregationSourceArgs) ToConfigurationAggregatorAccountAggregationSourcePtrOutput() ConfigurationAggregatorAccountAggregationSourcePtrOutput {
	return i.ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(context.Background())
}

func (i ConfigurationAggregatorAccountAggregationSourceArgs) ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(ctx context.Context) ConfigurationAggregatorAccountAggregationSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationAggregatorAccountAggregationSourceOutput).ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(ctx)
}

// ConfigurationAggregatorAccountAggregationSourcePtrInput is an input type that accepts ConfigurationAggregatorAccountAggregationSourceArgs, ConfigurationAggregatorAccountAggregationSourcePtr and ConfigurationAggregatorAccountAggregationSourcePtrOutput values.
// You can construct a concrete instance of `ConfigurationAggregatorAccountAggregationSourcePtrInput` via:
//
// 		 ConfigurationAggregatorAccountAggregationSourceArgs{...}
//
//  or:
//
// 		 nil
//
type ConfigurationAggregatorAccountAggregationSourcePtrInput interface {
	pulumi.Input

	ToConfigurationAggregatorAccountAggregationSourcePtrOutput() ConfigurationAggregatorAccountAggregationSourcePtrOutput
	ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(context.Context) ConfigurationAggregatorAccountAggregationSourcePtrOutput
}

type configurationAggregatorAccountAggregationSourcePtrType ConfigurationAggregatorAccountAggregationSourceArgs

func ConfigurationAggregatorAccountAggregationSourcePtr(v *ConfigurationAggregatorAccountAggregationSourceArgs) ConfigurationAggregatorAccountAggregationSourcePtrInput {
	return (*configurationAggregatorAccountAggregationSourcePtrType)(v)
}

func (*configurationAggregatorAccountAggregationSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationAggregatorAccountAggregationSource)(nil)).Elem()
}

func (i *configurationAggregatorAccountAggregationSourcePtrType) ToConfigurationAggregatorAccountAggregationSourcePtrOutput() ConfigurationAggregatorAccountAggregationSourcePtrOutput {
	return i.ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(context.Background())
}

func (i *configurationAggregatorAccountAggregationSourcePtrType) ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(ctx context.Context) ConfigurationAggregatorAccountAggregationSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationAggregatorAccountAggregationSourcePtrOutput)
}

type ConfigurationAggregatorAccountAggregationSourceOutput struct{ *pulumi.OutputState }

func (ConfigurationAggregatorAccountAggregationSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationAggregatorAccountAggregationSource)(nil)).Elem()
}

func (o ConfigurationAggregatorAccountAggregationSourceOutput) ToConfigurationAggregatorAccountAggregationSourceOutput() ConfigurationAggregatorAccountAggregationSourceOutput {
	return o
}

func (o ConfigurationAggregatorAccountAggregationSourceOutput) ToConfigurationAggregatorAccountAggregationSourceOutputWithContext(ctx context.Context) ConfigurationAggregatorAccountAggregationSourceOutput {
	return o
}

func (o ConfigurationAggregatorAccountAggregationSourceOutput) ToConfigurationAggregatorAccountAggregationSourcePtrOutput() ConfigurationAggregatorAccountAggregationSourcePtrOutput {
	return o.ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(context.Background())
}

func (o ConfigurationAggregatorAccountAggregationSourceOutput) ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(ctx context.Context) ConfigurationAggregatorAccountAggregationSourcePtrOutput {
	return o.ApplyT(func(v ConfigurationAggregatorAccountAggregationSource) *ConfigurationAggregatorAccountAggregationSource {
		return &v
	}).(ConfigurationAggregatorAccountAggregationSourcePtrOutput)
}

// List of 12-digit account IDs of the account(s) being aggregated.
func (o ConfigurationAggregatorAccountAggregationSourceOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigurationAggregatorAccountAggregationSource) []string { return v.AccountIds }).(pulumi.StringArrayOutput)
}

// If true, aggregate existing AWS Config regions and future regions.
func (o ConfigurationAggregatorAccountAggregationSourceOutput) AllRegions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigurationAggregatorAccountAggregationSource) *bool { return v.AllRegions }).(pulumi.BoolPtrOutput)
}

// List of source regions being aggregated.
func (o ConfigurationAggregatorAccountAggregationSourceOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigurationAggregatorAccountAggregationSource) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

type ConfigurationAggregatorAccountAggregationSourcePtrOutput struct{ *pulumi.OutputState }

func (ConfigurationAggregatorAccountAggregationSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationAggregatorAccountAggregationSource)(nil)).Elem()
}

func (o ConfigurationAggregatorAccountAggregationSourcePtrOutput) ToConfigurationAggregatorAccountAggregationSourcePtrOutput() ConfigurationAggregatorAccountAggregationSourcePtrOutput {
	return o
}

func (o ConfigurationAggregatorAccountAggregationSourcePtrOutput) ToConfigurationAggregatorAccountAggregationSourcePtrOutputWithContext(ctx context.Context) ConfigurationAggregatorAccountAggregationSourcePtrOutput {
	return o
}

func (o ConfigurationAggregatorAccountAggregationSourcePtrOutput) Elem() ConfigurationAggregatorAccountAggregationSourceOutput {
	return o.ApplyT(func(v *ConfigurationAggregatorAccountAggregationSource) ConfigurationAggregatorAccountAggregationSource {
		return *v
	}).(ConfigurationAggregatorAccountAggregationSourceOutput)
}

// List of 12-digit account IDs of the account(s) being aggregated.
func (o ConfigurationAggregatorAccountAggregationSourcePtrOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigurationAggregatorAccountAggregationSource) []string { return v.AccountIds }).(pulumi.StringArrayOutput)
}

// If true, aggregate existing AWS Config regions and future regions.
func (o ConfigurationAggregatorAccountAggregationSourcePtrOutput) AllRegions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigurationAggregatorAccountAggregationSource) *bool { return v.AllRegions }).(pulumi.BoolPtrOutput)
}

// List of source regions being aggregated.
func (o ConfigurationAggregatorAccountAggregationSourcePtrOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigurationAggregatorAccountAggregationSource) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

type ConfigurationAggregatorOrganizationAggregationSource struct {
	// If true, aggregate existing AWS Config regions and future regions.
	AllRegions *bool `pulumi:"allRegions"`
	// List of source regions being aggregated.
	Regions []string `pulumi:"regions"`
	// ARN of the IAM role used to retrieve AWS Organization details associated with the aggregator account.
	RoleArn string `pulumi:"roleArn"`
}

// ConfigurationAggregatorOrganizationAggregationSourceInput is an input type that accepts ConfigurationAggregatorOrganizationAggregationSourceArgs and ConfigurationAggregatorOrganizationAggregationSourceOutput values.
// You can construct a concrete instance of `ConfigurationAggregatorOrganizationAggregationSourceInput` via:
//
// 		 ConfigurationAggregatorOrganizationAggregationSourceArgs{...}
//
type ConfigurationAggregatorOrganizationAggregationSourceInput interface {
	pulumi.Input

	ToConfigurationAggregatorOrganizationAggregationSourceOutput() ConfigurationAggregatorOrganizationAggregationSourceOutput
	ToConfigurationAggregatorOrganizationAggregationSourceOutputWithContext(context.Context) ConfigurationAggregatorOrganizationAggregationSourceOutput
}

type ConfigurationAggregatorOrganizationAggregationSourceArgs struct {
	// If true, aggregate existing AWS Config regions and future regions.
	AllRegions pulumi.BoolPtrInput `pulumi:"allRegions"`
	// List of source regions being aggregated.
	Regions pulumi.StringArrayInput `pulumi:"regions"`
	// ARN of the IAM role used to retrieve AWS Organization details associated with the aggregator account.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
}

func (ConfigurationAggregatorOrganizationAggregationSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationAggregatorOrganizationAggregationSource)(nil)).Elem()
}

func (i ConfigurationAggregatorOrganizationAggregationSourceArgs) ToConfigurationAggregatorOrganizationAggregationSourceOutput() ConfigurationAggregatorOrganizationAggregationSourceOutput {
	return i.ToConfigurationAggregatorOrganizationAggregationSourceOutputWithContext(context.Background())
}

func (i ConfigurationAggregatorOrganizationAggregationSourceArgs) ToConfigurationAggregatorOrganizationAggregationSourceOutputWithContext(ctx context.Context) ConfigurationAggregatorOrganizationAggregationSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationAggregatorOrganizationAggregationSourceOutput)
}

func (i ConfigurationAggregatorOrganizationAggregationSourceArgs) ToConfigurationAggregatorOrganizationAggregationSourcePtrOutput() ConfigurationAggregatorOrganizationAggregationSourcePtrOutput {
	return i.ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(context.Background())
}

func (i ConfigurationAggregatorOrganizationAggregationSourceArgs) ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(ctx context.Context) ConfigurationAggregatorOrganizationAggregationSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationAggregatorOrganizationAggregationSourceOutput).ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(ctx)
}

// ConfigurationAggregatorOrganizationAggregationSourcePtrInput is an input type that accepts ConfigurationAggregatorOrganizationAggregationSourceArgs, ConfigurationAggregatorOrganizationAggregationSourcePtr and ConfigurationAggregatorOrganizationAggregationSourcePtrOutput values.
// You can construct a concrete instance of `ConfigurationAggregatorOrganizationAggregationSourcePtrInput` via:
//
// 		 ConfigurationAggregatorOrganizationAggregationSourceArgs{...}
//
//  or:
//
// 		 nil
//
type ConfigurationAggregatorOrganizationAggregationSourcePtrInput interface {
	pulumi.Input

	ToConfigurationAggregatorOrganizationAggregationSourcePtrOutput() ConfigurationAggregatorOrganizationAggregationSourcePtrOutput
	ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(context.Context) ConfigurationAggregatorOrganizationAggregationSourcePtrOutput
}

type configurationAggregatorOrganizationAggregationSourcePtrType ConfigurationAggregatorOrganizationAggregationSourceArgs

func ConfigurationAggregatorOrganizationAggregationSourcePtr(v *ConfigurationAggregatorOrganizationAggregationSourceArgs) ConfigurationAggregatorOrganizationAggregationSourcePtrInput {
	return (*configurationAggregatorOrganizationAggregationSourcePtrType)(v)
}

func (*configurationAggregatorOrganizationAggregationSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationAggregatorOrganizationAggregationSource)(nil)).Elem()
}

func (i *configurationAggregatorOrganizationAggregationSourcePtrType) ToConfigurationAggregatorOrganizationAggregationSourcePtrOutput() ConfigurationAggregatorOrganizationAggregationSourcePtrOutput {
	return i.ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(context.Background())
}

func (i *configurationAggregatorOrganizationAggregationSourcePtrType) ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(ctx context.Context) ConfigurationAggregatorOrganizationAggregationSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationAggregatorOrganizationAggregationSourcePtrOutput)
}

type ConfigurationAggregatorOrganizationAggregationSourceOutput struct{ *pulumi.OutputState }

func (ConfigurationAggregatorOrganizationAggregationSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationAggregatorOrganizationAggregationSource)(nil)).Elem()
}

func (o ConfigurationAggregatorOrganizationAggregationSourceOutput) ToConfigurationAggregatorOrganizationAggregationSourceOutput() ConfigurationAggregatorOrganizationAggregationSourceOutput {
	return o
}

func (o ConfigurationAggregatorOrganizationAggregationSourceOutput) ToConfigurationAggregatorOrganizationAggregationSourceOutputWithContext(ctx context.Context) ConfigurationAggregatorOrganizationAggregationSourceOutput {
	return o
}

func (o ConfigurationAggregatorOrganizationAggregationSourceOutput) ToConfigurationAggregatorOrganizationAggregationSourcePtrOutput() ConfigurationAggregatorOrganizationAggregationSourcePtrOutput {
	return o.ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(context.Background())
}

func (o ConfigurationAggregatorOrganizationAggregationSourceOutput) ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(ctx context.Context) ConfigurationAggregatorOrganizationAggregationSourcePtrOutput {
	return o.ApplyT(func(v ConfigurationAggregatorOrganizationAggregationSource) *ConfigurationAggregatorOrganizationAggregationSource {
		return &v
	}).(ConfigurationAggregatorOrganizationAggregationSourcePtrOutput)
}

// If true, aggregate existing AWS Config regions and future regions.
func (o ConfigurationAggregatorOrganizationAggregationSourceOutput) AllRegions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigurationAggregatorOrganizationAggregationSource) *bool { return v.AllRegions }).(pulumi.BoolPtrOutput)
}

// List of source regions being aggregated.
func (o ConfigurationAggregatorOrganizationAggregationSourceOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigurationAggregatorOrganizationAggregationSource) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

// ARN of the IAM role used to retrieve AWS Organization details associated with the aggregator account.
func (o ConfigurationAggregatorOrganizationAggregationSourceOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationAggregatorOrganizationAggregationSource) string { return v.RoleArn }).(pulumi.StringOutput)
}

type ConfigurationAggregatorOrganizationAggregationSourcePtrOutput struct{ *pulumi.OutputState }

func (ConfigurationAggregatorOrganizationAggregationSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigurationAggregatorOrganizationAggregationSource)(nil)).Elem()
}

func (o ConfigurationAggregatorOrganizationAggregationSourcePtrOutput) ToConfigurationAggregatorOrganizationAggregationSourcePtrOutput() ConfigurationAggregatorOrganizationAggregationSourcePtrOutput {
	return o
}

func (o ConfigurationAggregatorOrganizationAggregationSourcePtrOutput) ToConfigurationAggregatorOrganizationAggregationSourcePtrOutputWithContext(ctx context.Context) ConfigurationAggregatorOrganizationAggregationSourcePtrOutput {
	return o
}

func (o ConfigurationAggregatorOrganizationAggregationSourcePtrOutput) Elem() ConfigurationAggregatorOrganizationAggregationSourceOutput {
	return o.ApplyT(func(v *ConfigurationAggregatorOrganizationAggregationSource) ConfigurationAggregatorOrganizationAggregationSource {
		return *v
	}).(ConfigurationAggregatorOrganizationAggregationSourceOutput)
}

// If true, aggregate existing AWS Config regions and future regions.
func (o ConfigurationAggregatorOrganizationAggregationSourcePtrOutput) AllRegions() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigurationAggregatorOrganizationAggregationSource) *bool { return v.AllRegions }).(pulumi.BoolPtrOutput)
}

// List of source regions being aggregated.
func (o ConfigurationAggregatorOrganizationAggregationSourcePtrOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigurationAggregatorOrganizationAggregationSource) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

// ARN of the IAM role used to retrieve AWS Organization details associated with the aggregator account.
func (o ConfigurationAggregatorOrganizationAggregationSourcePtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigurationAggregatorOrganizationAggregationSource) string { return v.RoleArn }).(pulumi.StringOutput)
}

type DeliveryChannelSnapshotDeliveryProperties struct {
	// - The frequency with which AWS Config recurringly delivers configuration snapshots.
	// e.g. `One_Hour` or `Three_Hours`.
	// Valid values are listed [here](https://docs.aws.amazon.com/config/latest/APIReference/API_ConfigSnapshotDeliveryProperties.html#API_ConfigSnapshotDeliveryProperties_Contents).
	DeliveryFrequency *string `pulumi:"deliveryFrequency"`
}

// DeliveryChannelSnapshotDeliveryPropertiesInput is an input type that accepts DeliveryChannelSnapshotDeliveryPropertiesArgs and DeliveryChannelSnapshotDeliveryPropertiesOutput values.
// You can construct a concrete instance of `DeliveryChannelSnapshotDeliveryPropertiesInput` via:
//
// 		 DeliveryChannelSnapshotDeliveryPropertiesArgs{...}
//
type DeliveryChannelSnapshotDeliveryPropertiesInput interface {
	pulumi.Input

	ToDeliveryChannelSnapshotDeliveryPropertiesOutput() DeliveryChannelSnapshotDeliveryPropertiesOutput
	ToDeliveryChannelSnapshotDeliveryPropertiesOutputWithContext(context.Context) DeliveryChannelSnapshotDeliveryPropertiesOutput
}

type DeliveryChannelSnapshotDeliveryPropertiesArgs struct {
	// - The frequency with which AWS Config recurringly delivers configuration snapshots.
	// e.g. `One_Hour` or `Three_Hours`.
	// Valid values are listed [here](https://docs.aws.amazon.com/config/latest/APIReference/API_ConfigSnapshotDeliveryProperties.html#API_ConfigSnapshotDeliveryProperties_Contents).
	DeliveryFrequency pulumi.StringPtrInput `pulumi:"deliveryFrequency"`
}

func (DeliveryChannelSnapshotDeliveryPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryChannelSnapshotDeliveryProperties)(nil)).Elem()
}

func (i DeliveryChannelSnapshotDeliveryPropertiesArgs) ToDeliveryChannelSnapshotDeliveryPropertiesOutput() DeliveryChannelSnapshotDeliveryPropertiesOutput {
	return i.ToDeliveryChannelSnapshotDeliveryPropertiesOutputWithContext(context.Background())
}

func (i DeliveryChannelSnapshotDeliveryPropertiesArgs) ToDeliveryChannelSnapshotDeliveryPropertiesOutputWithContext(ctx context.Context) DeliveryChannelSnapshotDeliveryPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryChannelSnapshotDeliveryPropertiesOutput)
}

func (i DeliveryChannelSnapshotDeliveryPropertiesArgs) ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutput() DeliveryChannelSnapshotDeliveryPropertiesPtrOutput {
	return i.ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutputWithContext(context.Background())
}

func (i DeliveryChannelSnapshotDeliveryPropertiesArgs) ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutputWithContext(ctx context.Context) DeliveryChannelSnapshotDeliveryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryChannelSnapshotDeliveryPropertiesOutput).ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutputWithContext(ctx)
}

// DeliveryChannelSnapshotDeliveryPropertiesPtrInput is an input type that accepts DeliveryChannelSnapshotDeliveryPropertiesArgs, DeliveryChannelSnapshotDeliveryPropertiesPtr and DeliveryChannelSnapshotDeliveryPropertiesPtrOutput values.
// You can construct a concrete instance of `DeliveryChannelSnapshotDeliveryPropertiesPtrInput` via:
//
// 		 DeliveryChannelSnapshotDeliveryPropertiesArgs{...}
//
//  or:
//
// 		 nil
//
type DeliveryChannelSnapshotDeliveryPropertiesPtrInput interface {
	pulumi.Input

	ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutput() DeliveryChannelSnapshotDeliveryPropertiesPtrOutput
	ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutputWithContext(context.Context) DeliveryChannelSnapshotDeliveryPropertiesPtrOutput
}

type deliveryChannelSnapshotDeliveryPropertiesPtrType DeliveryChannelSnapshotDeliveryPropertiesArgs

func DeliveryChannelSnapshotDeliveryPropertiesPtr(v *DeliveryChannelSnapshotDeliveryPropertiesArgs) DeliveryChannelSnapshotDeliveryPropertiesPtrInput {
	return (*deliveryChannelSnapshotDeliveryPropertiesPtrType)(v)
}

func (*deliveryChannelSnapshotDeliveryPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryChannelSnapshotDeliveryProperties)(nil)).Elem()
}

func (i *deliveryChannelSnapshotDeliveryPropertiesPtrType) ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutput() DeliveryChannelSnapshotDeliveryPropertiesPtrOutput {
	return i.ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutputWithContext(context.Background())
}

func (i *deliveryChannelSnapshotDeliveryPropertiesPtrType) ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutputWithContext(ctx context.Context) DeliveryChannelSnapshotDeliveryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryChannelSnapshotDeliveryPropertiesPtrOutput)
}

type DeliveryChannelSnapshotDeliveryPropertiesOutput struct{ *pulumi.OutputState }

func (DeliveryChannelSnapshotDeliveryPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeliveryChannelSnapshotDeliveryProperties)(nil)).Elem()
}

func (o DeliveryChannelSnapshotDeliveryPropertiesOutput) ToDeliveryChannelSnapshotDeliveryPropertiesOutput() DeliveryChannelSnapshotDeliveryPropertiesOutput {
	return o
}

func (o DeliveryChannelSnapshotDeliveryPropertiesOutput) ToDeliveryChannelSnapshotDeliveryPropertiesOutputWithContext(ctx context.Context) DeliveryChannelSnapshotDeliveryPropertiesOutput {
	return o
}

func (o DeliveryChannelSnapshotDeliveryPropertiesOutput) ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutput() DeliveryChannelSnapshotDeliveryPropertiesPtrOutput {
	return o.ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutputWithContext(context.Background())
}

func (o DeliveryChannelSnapshotDeliveryPropertiesOutput) ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutputWithContext(ctx context.Context) DeliveryChannelSnapshotDeliveryPropertiesPtrOutput {
	return o.ApplyT(func(v DeliveryChannelSnapshotDeliveryProperties) *DeliveryChannelSnapshotDeliveryProperties {
		return &v
	}).(DeliveryChannelSnapshotDeliveryPropertiesPtrOutput)
}

// - The frequency with which AWS Config recurringly delivers configuration snapshots.
// e.g. `One_Hour` or `Three_Hours`.
// Valid values are listed [here](https://docs.aws.amazon.com/config/latest/APIReference/API_ConfigSnapshotDeliveryProperties.html#API_ConfigSnapshotDeliveryProperties_Contents).
func (o DeliveryChannelSnapshotDeliveryPropertiesOutput) DeliveryFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryChannelSnapshotDeliveryProperties) *string { return v.DeliveryFrequency }).(pulumi.StringPtrOutput)
}

type DeliveryChannelSnapshotDeliveryPropertiesPtrOutput struct{ *pulumi.OutputState }

func (DeliveryChannelSnapshotDeliveryPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryChannelSnapshotDeliveryProperties)(nil)).Elem()
}

func (o DeliveryChannelSnapshotDeliveryPropertiesPtrOutput) ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutput() DeliveryChannelSnapshotDeliveryPropertiesPtrOutput {
	return o
}

func (o DeliveryChannelSnapshotDeliveryPropertiesPtrOutput) ToDeliveryChannelSnapshotDeliveryPropertiesPtrOutputWithContext(ctx context.Context) DeliveryChannelSnapshotDeliveryPropertiesPtrOutput {
	return o
}

func (o DeliveryChannelSnapshotDeliveryPropertiesPtrOutput) Elem() DeliveryChannelSnapshotDeliveryPropertiesOutput {
	return o.ApplyT(func(v *DeliveryChannelSnapshotDeliveryProperties) DeliveryChannelSnapshotDeliveryProperties {
		return *v
	}).(DeliveryChannelSnapshotDeliveryPropertiesOutput)
}

// - The frequency with which AWS Config recurringly delivers configuration snapshots.
// e.g. `One_Hour` or `Three_Hours`.
// Valid values are listed [here](https://docs.aws.amazon.com/config/latest/APIReference/API_ConfigSnapshotDeliveryProperties.html#API_ConfigSnapshotDeliveryProperties_Contents).
func (o DeliveryChannelSnapshotDeliveryPropertiesPtrOutput) DeliveryFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeliveryChannelSnapshotDeliveryProperties) *string { return v.DeliveryFrequency }).(pulumi.StringPtrOutput)
}

type RecorderRecordingGroup struct {
	// Specifies whether AWS Config records configuration changes
	// for every supported type of regional resource (which includes any new type that will become supported in the future).
	// Conflicts with `resourceTypes`. Defaults to `true`.
	AllSupported *bool `pulumi:"allSupported"`
	// Specifies whether AWS Config includes all supported types of *global resources*
	// with the resources that it records. Requires `allSupported = true`. Conflicts with `resourceTypes`.
	IncludeGlobalResourceTypes *bool `pulumi:"includeGlobalResourceTypes"`
	// A list that specifies the types of AWS resources for which
	// AWS Config records configuration changes (for example, `AWS::EC2::Instance` or `AWS::CloudTrail::Trail`).
	// See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types.
	ResourceTypes []string `pulumi:"resourceTypes"`
}

// RecorderRecordingGroupInput is an input type that accepts RecorderRecordingGroupArgs and RecorderRecordingGroupOutput values.
// You can construct a concrete instance of `RecorderRecordingGroupInput` via:
//
// 		 RecorderRecordingGroupArgs{...}
//
type RecorderRecordingGroupInput interface {
	pulumi.Input

	ToRecorderRecordingGroupOutput() RecorderRecordingGroupOutput
	ToRecorderRecordingGroupOutputWithContext(context.Context) RecorderRecordingGroupOutput
}

type RecorderRecordingGroupArgs struct {
	// Specifies whether AWS Config records configuration changes
	// for every supported type of regional resource (which includes any new type that will become supported in the future).
	// Conflicts with `resourceTypes`. Defaults to `true`.
	AllSupported pulumi.BoolPtrInput `pulumi:"allSupported"`
	// Specifies whether AWS Config includes all supported types of *global resources*
	// with the resources that it records. Requires `allSupported = true`. Conflicts with `resourceTypes`.
	IncludeGlobalResourceTypes pulumi.BoolPtrInput `pulumi:"includeGlobalResourceTypes"`
	// A list that specifies the types of AWS resources for which
	// AWS Config records configuration changes (for example, `AWS::EC2::Instance` or `AWS::CloudTrail::Trail`).
	// See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types.
	ResourceTypes pulumi.StringArrayInput `pulumi:"resourceTypes"`
}

func (RecorderRecordingGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RecorderRecordingGroup)(nil)).Elem()
}

func (i RecorderRecordingGroupArgs) ToRecorderRecordingGroupOutput() RecorderRecordingGroupOutput {
	return i.ToRecorderRecordingGroupOutputWithContext(context.Background())
}

func (i RecorderRecordingGroupArgs) ToRecorderRecordingGroupOutputWithContext(ctx context.Context) RecorderRecordingGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecorderRecordingGroupOutput)
}

func (i RecorderRecordingGroupArgs) ToRecorderRecordingGroupPtrOutput() RecorderRecordingGroupPtrOutput {
	return i.ToRecorderRecordingGroupPtrOutputWithContext(context.Background())
}

func (i RecorderRecordingGroupArgs) ToRecorderRecordingGroupPtrOutputWithContext(ctx context.Context) RecorderRecordingGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecorderRecordingGroupOutput).ToRecorderRecordingGroupPtrOutputWithContext(ctx)
}

// RecorderRecordingGroupPtrInput is an input type that accepts RecorderRecordingGroupArgs, RecorderRecordingGroupPtr and RecorderRecordingGroupPtrOutput values.
// You can construct a concrete instance of `RecorderRecordingGroupPtrInput` via:
//
// 		 RecorderRecordingGroupArgs{...}
//
//  or:
//
// 		 nil
//
type RecorderRecordingGroupPtrInput interface {
	pulumi.Input

	ToRecorderRecordingGroupPtrOutput() RecorderRecordingGroupPtrOutput
	ToRecorderRecordingGroupPtrOutputWithContext(context.Context) RecorderRecordingGroupPtrOutput
}

type recorderRecordingGroupPtrType RecorderRecordingGroupArgs

func RecorderRecordingGroupPtr(v *RecorderRecordingGroupArgs) RecorderRecordingGroupPtrInput {
	return (*recorderRecordingGroupPtrType)(v)
}

func (*recorderRecordingGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RecorderRecordingGroup)(nil)).Elem()
}

func (i *recorderRecordingGroupPtrType) ToRecorderRecordingGroupPtrOutput() RecorderRecordingGroupPtrOutput {
	return i.ToRecorderRecordingGroupPtrOutputWithContext(context.Background())
}

func (i *recorderRecordingGroupPtrType) ToRecorderRecordingGroupPtrOutputWithContext(ctx context.Context) RecorderRecordingGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RecorderRecordingGroupPtrOutput)
}

type RecorderRecordingGroupOutput struct{ *pulumi.OutputState }

func (RecorderRecordingGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RecorderRecordingGroup)(nil)).Elem()
}

func (o RecorderRecordingGroupOutput) ToRecorderRecordingGroupOutput() RecorderRecordingGroupOutput {
	return o
}

func (o RecorderRecordingGroupOutput) ToRecorderRecordingGroupOutputWithContext(ctx context.Context) RecorderRecordingGroupOutput {
	return o
}

func (o RecorderRecordingGroupOutput) ToRecorderRecordingGroupPtrOutput() RecorderRecordingGroupPtrOutput {
	return o.ToRecorderRecordingGroupPtrOutputWithContext(context.Background())
}

func (o RecorderRecordingGroupOutput) ToRecorderRecordingGroupPtrOutputWithContext(ctx context.Context) RecorderRecordingGroupPtrOutput {
	return o.ApplyT(func(v RecorderRecordingGroup) *RecorderRecordingGroup {
		return &v
	}).(RecorderRecordingGroupPtrOutput)
}

// Specifies whether AWS Config records configuration changes
// for every supported type of regional resource (which includes any new type that will become supported in the future).
// Conflicts with `resourceTypes`. Defaults to `true`.
func (o RecorderRecordingGroupOutput) AllSupported() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RecorderRecordingGroup) *bool { return v.AllSupported }).(pulumi.BoolPtrOutput)
}

// Specifies whether AWS Config includes all supported types of *global resources*
// with the resources that it records. Requires `allSupported = true`. Conflicts with `resourceTypes`.
func (o RecorderRecordingGroupOutput) IncludeGlobalResourceTypes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RecorderRecordingGroup) *bool { return v.IncludeGlobalResourceTypes }).(pulumi.BoolPtrOutput)
}

// A list that specifies the types of AWS resources for which
// AWS Config records configuration changes (for example, `AWS::EC2::Instance` or `AWS::CloudTrail::Trail`).
// See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types.
func (o RecorderRecordingGroupOutput) ResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecorderRecordingGroup) []string { return v.ResourceTypes }).(pulumi.StringArrayOutput)
}

type RecorderRecordingGroupPtrOutput struct{ *pulumi.OutputState }

func (RecorderRecordingGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RecorderRecordingGroup)(nil)).Elem()
}

func (o RecorderRecordingGroupPtrOutput) ToRecorderRecordingGroupPtrOutput() RecorderRecordingGroupPtrOutput {
	return o
}

func (o RecorderRecordingGroupPtrOutput) ToRecorderRecordingGroupPtrOutputWithContext(ctx context.Context) RecorderRecordingGroupPtrOutput {
	return o
}

func (o RecorderRecordingGroupPtrOutput) Elem() RecorderRecordingGroupOutput {
	return o.ApplyT(func(v *RecorderRecordingGroup) RecorderRecordingGroup { return *v }).(RecorderRecordingGroupOutput)
}

// Specifies whether AWS Config records configuration changes
// for every supported type of regional resource (which includes any new type that will become supported in the future).
// Conflicts with `resourceTypes`. Defaults to `true`.
func (o RecorderRecordingGroupPtrOutput) AllSupported() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RecorderRecordingGroup) *bool { return v.AllSupported }).(pulumi.BoolPtrOutput)
}

// Specifies whether AWS Config includes all supported types of *global resources*
// with the resources that it records. Requires `allSupported = true`. Conflicts with `resourceTypes`.
func (o RecorderRecordingGroupPtrOutput) IncludeGlobalResourceTypes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RecorderRecordingGroup) *bool { return v.IncludeGlobalResourceTypes }).(pulumi.BoolPtrOutput)
}

// A list that specifies the types of AWS resources for which
// AWS Config records configuration changes (for example, `AWS::EC2::Instance` or `AWS::CloudTrail::Trail`).
// See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types.
func (o RecorderRecordingGroupPtrOutput) ResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RecorderRecordingGroup) []string { return v.ResourceTypes }).(pulumi.StringArrayOutput)
}

type RuleScope struct {
	// The IDs of the only AWS resource that you want to trigger an evaluation for the rule.
	// If you specify a resource ID, you must specify one resource type for `complianceResourceTypes`.
	ComplianceResourceId *string `pulumi:"complianceResourceId"`
	// A list of resource types of only those AWS resources that you want to trigger an
	// evaluation for the rule. e.g. `AWS::EC2::Instance`. You can only specify one type if you also specify
	// a resource ID for `complianceResourceId`. See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types.
	ComplianceResourceTypes []string `pulumi:"complianceResourceTypes"`
	// The tag key that is applied to only those AWS resources that you want you
	// want to trigger an evaluation for the rule.
	TagKey *string `pulumi:"tagKey"`
	// The tag value applied to only those AWS resources that you want to trigger an evaluation for the rule.
	TagValue *string `pulumi:"tagValue"`
}

// RuleScopeInput is an input type that accepts RuleScopeArgs and RuleScopeOutput values.
// You can construct a concrete instance of `RuleScopeInput` via:
//
// 		 RuleScopeArgs{...}
//
type RuleScopeInput interface {
	pulumi.Input

	ToRuleScopeOutput() RuleScopeOutput
	ToRuleScopeOutputWithContext(context.Context) RuleScopeOutput
}

type RuleScopeArgs struct {
	// The IDs of the only AWS resource that you want to trigger an evaluation for the rule.
	// If you specify a resource ID, you must specify one resource type for `complianceResourceTypes`.
	ComplianceResourceId pulumi.StringPtrInput `pulumi:"complianceResourceId"`
	// A list of resource types of only those AWS resources that you want to trigger an
	// evaluation for the rule. e.g. `AWS::EC2::Instance`. You can only specify one type if you also specify
	// a resource ID for `complianceResourceId`. See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types.
	ComplianceResourceTypes pulumi.StringArrayInput `pulumi:"complianceResourceTypes"`
	// The tag key that is applied to only those AWS resources that you want you
	// want to trigger an evaluation for the rule.
	TagKey pulumi.StringPtrInput `pulumi:"tagKey"`
	// The tag value applied to only those AWS resources that you want to trigger an evaluation for the rule.
	TagValue pulumi.StringPtrInput `pulumi:"tagValue"`
}

func (RuleScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleScope)(nil)).Elem()
}

func (i RuleScopeArgs) ToRuleScopeOutput() RuleScopeOutput {
	return i.ToRuleScopeOutputWithContext(context.Background())
}

func (i RuleScopeArgs) ToRuleScopeOutputWithContext(ctx context.Context) RuleScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleScopeOutput)
}

func (i RuleScopeArgs) ToRuleScopePtrOutput() RuleScopePtrOutput {
	return i.ToRuleScopePtrOutputWithContext(context.Background())
}

func (i RuleScopeArgs) ToRuleScopePtrOutputWithContext(ctx context.Context) RuleScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleScopeOutput).ToRuleScopePtrOutputWithContext(ctx)
}

// RuleScopePtrInput is an input type that accepts RuleScopeArgs, RuleScopePtr and RuleScopePtrOutput values.
// You can construct a concrete instance of `RuleScopePtrInput` via:
//
// 		 RuleScopeArgs{...}
//
//  or:
//
// 		 nil
//
type RuleScopePtrInput interface {
	pulumi.Input

	ToRuleScopePtrOutput() RuleScopePtrOutput
	ToRuleScopePtrOutputWithContext(context.Context) RuleScopePtrOutput
}

type ruleScopePtrType RuleScopeArgs

func RuleScopePtr(v *RuleScopeArgs) RuleScopePtrInput {
	return (*ruleScopePtrType)(v)
}

func (*ruleScopePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleScope)(nil)).Elem()
}

func (i *ruleScopePtrType) ToRuleScopePtrOutput() RuleScopePtrOutput {
	return i.ToRuleScopePtrOutputWithContext(context.Background())
}

func (i *ruleScopePtrType) ToRuleScopePtrOutputWithContext(ctx context.Context) RuleScopePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleScopePtrOutput)
}

type RuleScopeOutput struct{ *pulumi.OutputState }

func (RuleScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleScope)(nil)).Elem()
}

func (o RuleScopeOutput) ToRuleScopeOutput() RuleScopeOutput {
	return o
}

func (o RuleScopeOutput) ToRuleScopeOutputWithContext(ctx context.Context) RuleScopeOutput {
	return o
}

func (o RuleScopeOutput) ToRuleScopePtrOutput() RuleScopePtrOutput {
	return o.ToRuleScopePtrOutputWithContext(context.Background())
}

func (o RuleScopeOutput) ToRuleScopePtrOutputWithContext(ctx context.Context) RuleScopePtrOutput {
	return o.ApplyT(func(v RuleScope) *RuleScope {
		return &v
	}).(RuleScopePtrOutput)
}

// The IDs of the only AWS resource that you want to trigger an evaluation for the rule.
// If you specify a resource ID, you must specify one resource type for `complianceResourceTypes`.
func (o RuleScopeOutput) ComplianceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleScope) *string { return v.ComplianceResourceId }).(pulumi.StringPtrOutput)
}

// A list of resource types of only those AWS resources that you want to trigger an
// evaluation for the rule. e.g. `AWS::EC2::Instance`. You can only specify one type if you also specify
// a resource ID for `complianceResourceId`. See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types.
func (o RuleScopeOutput) ComplianceResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleScope) []string { return v.ComplianceResourceTypes }).(pulumi.StringArrayOutput)
}

// The tag key that is applied to only those AWS resources that you want you
// want to trigger an evaluation for the rule.
func (o RuleScopeOutput) TagKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleScope) *string { return v.TagKey }).(pulumi.StringPtrOutput)
}

// The tag value applied to only those AWS resources that you want to trigger an evaluation for the rule.
func (o RuleScopeOutput) TagValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleScope) *string { return v.TagValue }).(pulumi.StringPtrOutput)
}

type RuleScopePtrOutput struct{ *pulumi.OutputState }

func (RuleScopePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleScope)(nil)).Elem()
}

func (o RuleScopePtrOutput) ToRuleScopePtrOutput() RuleScopePtrOutput {
	return o
}

func (o RuleScopePtrOutput) ToRuleScopePtrOutputWithContext(ctx context.Context) RuleScopePtrOutput {
	return o
}

func (o RuleScopePtrOutput) Elem() RuleScopeOutput {
	return o.ApplyT(func(v *RuleScope) RuleScope { return *v }).(RuleScopeOutput)
}

// The IDs of the only AWS resource that you want to trigger an evaluation for the rule.
// If you specify a resource ID, you must specify one resource type for `complianceResourceTypes`.
func (o RuleScopePtrOutput) ComplianceResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleScope) *string { return v.ComplianceResourceId }).(pulumi.StringPtrOutput)
}

// A list of resource types of only those AWS resources that you want to trigger an
// evaluation for the rule. e.g. `AWS::EC2::Instance`. You can only specify one type if you also specify
// a resource ID for `complianceResourceId`. See [relevant part of AWS Docs](http://docs.aws.amazon.com/config/latest/APIReference/API_ResourceIdentifier.html#config-Type-ResourceIdentifier-resourceType) for available types.
func (o RuleScopePtrOutput) ComplianceResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleScope) []string { return v.ComplianceResourceTypes }).(pulumi.StringArrayOutput)
}

// The tag key that is applied to only those AWS resources that you want you
// want to trigger an evaluation for the rule.
func (o RuleScopePtrOutput) TagKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleScope) *string { return v.TagKey }).(pulumi.StringPtrOutput)
}

// The tag value applied to only those AWS resources that you want to trigger an evaluation for the rule.
func (o RuleScopePtrOutput) TagValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleScope) *string { return v.TagValue }).(pulumi.StringPtrOutput)
}

type RuleSource struct {
	// Indicates whether AWS or the customer owns and manages the AWS Config rule. Valid values are `AWS` or `CUSTOM_LAMBDA`. For more information about managed rules, see the [AWS Config Managed Rules documentation](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html). For more information about custom rules, see the [AWS Config Custom Rules documentation](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules.html). Custom Lambda Functions require permissions to allow the AWS Config service to invoke them, e.g. via the [`lambda.Permission` resource](https://www.terraform.io/docs/providers/aws/r/lambda_permission.html).
	Owner string `pulumi:"owner"`
	// Provides the source and type of the event that causes AWS Config to evaluate your AWS resources. Only valid if `owner` is `CUSTOM_LAMBDA`.
	SourceDetails []RuleSourceSourceDetail `pulumi:"sourceDetails"`
	// For AWS Config managed rules, a predefined identifier, e.g `IAM_PASSWORD_POLICY`. For custom Lambda rules, the identifier is the ARN of the Lambda Function, such as `arn:aws:lambda:us-east-1:123456789012:function:custom_rule_name` or the [`arn` attribute of the `lambda.Function` resource](https://www.terraform.io/docs/providers/aws/r/lambda_function.html#arn).
	SourceIdentifier string `pulumi:"sourceIdentifier"`
}

// RuleSourceInput is an input type that accepts RuleSourceArgs and RuleSourceOutput values.
// You can construct a concrete instance of `RuleSourceInput` via:
//
// 		 RuleSourceArgs{...}
//
type RuleSourceInput interface {
	pulumi.Input

	ToRuleSourceOutput() RuleSourceOutput
	ToRuleSourceOutputWithContext(context.Context) RuleSourceOutput
}

type RuleSourceArgs struct {
	// Indicates whether AWS or the customer owns and manages the AWS Config rule. Valid values are `AWS` or `CUSTOM_LAMBDA`. For more information about managed rules, see the [AWS Config Managed Rules documentation](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html). For more information about custom rules, see the [AWS Config Custom Rules documentation](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules.html). Custom Lambda Functions require permissions to allow the AWS Config service to invoke them, e.g. via the [`lambda.Permission` resource](https://www.terraform.io/docs/providers/aws/r/lambda_permission.html).
	Owner pulumi.StringInput `pulumi:"owner"`
	// Provides the source and type of the event that causes AWS Config to evaluate your AWS resources. Only valid if `owner` is `CUSTOM_LAMBDA`.
	SourceDetails RuleSourceSourceDetailArrayInput `pulumi:"sourceDetails"`
	// For AWS Config managed rules, a predefined identifier, e.g `IAM_PASSWORD_POLICY`. For custom Lambda rules, the identifier is the ARN of the Lambda Function, such as `arn:aws:lambda:us-east-1:123456789012:function:custom_rule_name` or the [`arn` attribute of the `lambda.Function` resource](https://www.terraform.io/docs/providers/aws/r/lambda_function.html#arn).
	SourceIdentifier pulumi.StringInput `pulumi:"sourceIdentifier"`
}

func (RuleSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSource)(nil)).Elem()
}

func (i RuleSourceArgs) ToRuleSourceOutput() RuleSourceOutput {
	return i.ToRuleSourceOutputWithContext(context.Background())
}

func (i RuleSourceArgs) ToRuleSourceOutputWithContext(ctx context.Context) RuleSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSourceOutput)
}

func (i RuleSourceArgs) ToRuleSourcePtrOutput() RuleSourcePtrOutput {
	return i.ToRuleSourcePtrOutputWithContext(context.Background())
}

func (i RuleSourceArgs) ToRuleSourcePtrOutputWithContext(ctx context.Context) RuleSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSourceOutput).ToRuleSourcePtrOutputWithContext(ctx)
}

// RuleSourcePtrInput is an input type that accepts RuleSourceArgs, RuleSourcePtr and RuleSourcePtrOutput values.
// You can construct a concrete instance of `RuleSourcePtrInput` via:
//
// 		 RuleSourceArgs{...}
//
//  or:
//
// 		 nil
//
type RuleSourcePtrInput interface {
	pulumi.Input

	ToRuleSourcePtrOutput() RuleSourcePtrOutput
	ToRuleSourcePtrOutputWithContext(context.Context) RuleSourcePtrOutput
}

type ruleSourcePtrType RuleSourceArgs

func RuleSourcePtr(v *RuleSourceArgs) RuleSourcePtrInput {
	return (*ruleSourcePtrType)(v)
}

func (*ruleSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleSource)(nil)).Elem()
}

func (i *ruleSourcePtrType) ToRuleSourcePtrOutput() RuleSourcePtrOutput {
	return i.ToRuleSourcePtrOutputWithContext(context.Background())
}

func (i *ruleSourcePtrType) ToRuleSourcePtrOutputWithContext(ctx context.Context) RuleSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSourcePtrOutput)
}

type RuleSourceOutput struct{ *pulumi.OutputState }

func (RuleSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSource)(nil)).Elem()
}

func (o RuleSourceOutput) ToRuleSourceOutput() RuleSourceOutput {
	return o
}

func (o RuleSourceOutput) ToRuleSourceOutputWithContext(ctx context.Context) RuleSourceOutput {
	return o
}

func (o RuleSourceOutput) ToRuleSourcePtrOutput() RuleSourcePtrOutput {
	return o.ToRuleSourcePtrOutputWithContext(context.Background())
}

func (o RuleSourceOutput) ToRuleSourcePtrOutputWithContext(ctx context.Context) RuleSourcePtrOutput {
	return o.ApplyT(func(v RuleSource) *RuleSource {
		return &v
	}).(RuleSourcePtrOutput)
}

// Indicates whether AWS or the customer owns and manages the AWS Config rule. Valid values are `AWS` or `CUSTOM_LAMBDA`. For more information about managed rules, see the [AWS Config Managed Rules documentation](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html). For more information about custom rules, see the [AWS Config Custom Rules documentation](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules.html). Custom Lambda Functions require permissions to allow the AWS Config service to invoke them, e.g. via the [`lambda.Permission` resource](https://www.terraform.io/docs/providers/aws/r/lambda_permission.html).
func (o RuleSourceOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v RuleSource) string { return v.Owner }).(pulumi.StringOutput)
}

// Provides the source and type of the event that causes AWS Config to evaluate your AWS resources. Only valid if `owner` is `CUSTOM_LAMBDA`.
func (o RuleSourceOutput) SourceDetails() RuleSourceSourceDetailArrayOutput {
	return o.ApplyT(func(v RuleSource) []RuleSourceSourceDetail { return v.SourceDetails }).(RuleSourceSourceDetailArrayOutput)
}

// For AWS Config managed rules, a predefined identifier, e.g `IAM_PASSWORD_POLICY`. For custom Lambda rules, the identifier is the ARN of the Lambda Function, such as `arn:aws:lambda:us-east-1:123456789012:function:custom_rule_name` or the [`arn` attribute of the `lambda.Function` resource](https://www.terraform.io/docs/providers/aws/r/lambda_function.html#arn).
func (o RuleSourceOutput) SourceIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v RuleSource) string { return v.SourceIdentifier }).(pulumi.StringOutput)
}

type RuleSourcePtrOutput struct{ *pulumi.OutputState }

func (RuleSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleSource)(nil)).Elem()
}

func (o RuleSourcePtrOutput) ToRuleSourcePtrOutput() RuleSourcePtrOutput {
	return o
}

func (o RuleSourcePtrOutput) ToRuleSourcePtrOutputWithContext(ctx context.Context) RuleSourcePtrOutput {
	return o
}

func (o RuleSourcePtrOutput) Elem() RuleSourceOutput {
	return o.ApplyT(func(v *RuleSource) RuleSource { return *v }).(RuleSourceOutput)
}

// Indicates whether AWS or the customer owns and manages the AWS Config rule. Valid values are `AWS` or `CUSTOM_LAMBDA`. For more information about managed rules, see the [AWS Config Managed Rules documentation](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html). For more information about custom rules, see the [AWS Config Custom Rules documentation](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_develop-rules.html). Custom Lambda Functions require permissions to allow the AWS Config service to invoke them, e.g. via the [`lambda.Permission` resource](https://www.terraform.io/docs/providers/aws/r/lambda_permission.html).
func (o RuleSourcePtrOutput) Owner() pulumi.StringOutput {
	return o.ApplyT(func(v RuleSource) string { return v.Owner }).(pulumi.StringOutput)
}

// Provides the source and type of the event that causes AWS Config to evaluate your AWS resources. Only valid if `owner` is `CUSTOM_LAMBDA`.
func (o RuleSourcePtrOutput) SourceDetails() RuleSourceSourceDetailArrayOutput {
	return o.ApplyT(func(v RuleSource) []RuleSourceSourceDetail { return v.SourceDetails }).(RuleSourceSourceDetailArrayOutput)
}

// For AWS Config managed rules, a predefined identifier, e.g `IAM_PASSWORD_POLICY`. For custom Lambda rules, the identifier is the ARN of the Lambda Function, such as `arn:aws:lambda:us-east-1:123456789012:function:custom_rule_name` or the [`arn` attribute of the `lambda.Function` resource](https://www.terraform.io/docs/providers/aws/r/lambda_function.html#arn).
func (o RuleSourcePtrOutput) SourceIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v RuleSource) string { return v.SourceIdentifier }).(pulumi.StringOutput)
}

type RuleSourceSourceDetail struct {
	// The source of the event, such as an AWS service, that triggers AWS Config
	// to evaluate your AWS resources. This defaults to `aws.config` and is the only valid value.
	EventSource *string `pulumi:"eventSource"`
	// The frequency that you want AWS Config to run evaluations for a rule that
	// is triggered periodically. If specified, requires `messageType` to be `ScheduledNotification`.
	MaximumExecutionFrequency *string `pulumi:"maximumExecutionFrequency"`
	// The type of notification that triggers AWS Config to run an evaluation for a rule. You can specify the following notification types:
	MessageType *string `pulumi:"messageType"`
}

// RuleSourceSourceDetailInput is an input type that accepts RuleSourceSourceDetailArgs and RuleSourceSourceDetailOutput values.
// You can construct a concrete instance of `RuleSourceSourceDetailInput` via:
//
// 		 RuleSourceSourceDetailArgs{...}
//
type RuleSourceSourceDetailInput interface {
	pulumi.Input

	ToRuleSourceSourceDetailOutput() RuleSourceSourceDetailOutput
	ToRuleSourceSourceDetailOutputWithContext(context.Context) RuleSourceSourceDetailOutput
}

type RuleSourceSourceDetailArgs struct {
	// The source of the event, such as an AWS service, that triggers AWS Config
	// to evaluate your AWS resources. This defaults to `aws.config` and is the only valid value.
	EventSource pulumi.StringPtrInput `pulumi:"eventSource"`
	// The frequency that you want AWS Config to run evaluations for a rule that
	// is triggered periodically. If specified, requires `messageType` to be `ScheduledNotification`.
	MaximumExecutionFrequency pulumi.StringPtrInput `pulumi:"maximumExecutionFrequency"`
	// The type of notification that triggers AWS Config to run an evaluation for a rule. You can specify the following notification types:
	MessageType pulumi.StringPtrInput `pulumi:"messageType"`
}

func (RuleSourceSourceDetailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSourceSourceDetail)(nil)).Elem()
}

func (i RuleSourceSourceDetailArgs) ToRuleSourceSourceDetailOutput() RuleSourceSourceDetailOutput {
	return i.ToRuleSourceSourceDetailOutputWithContext(context.Background())
}

func (i RuleSourceSourceDetailArgs) ToRuleSourceSourceDetailOutputWithContext(ctx context.Context) RuleSourceSourceDetailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSourceSourceDetailOutput)
}

// RuleSourceSourceDetailArrayInput is an input type that accepts RuleSourceSourceDetailArray and RuleSourceSourceDetailArrayOutput values.
// You can construct a concrete instance of `RuleSourceSourceDetailArrayInput` via:
//
// 		 RuleSourceSourceDetailArray{ RuleSourceSourceDetailArgs{...} }
//
type RuleSourceSourceDetailArrayInput interface {
	pulumi.Input

	ToRuleSourceSourceDetailArrayOutput() RuleSourceSourceDetailArrayOutput
	ToRuleSourceSourceDetailArrayOutputWithContext(context.Context) RuleSourceSourceDetailArrayOutput
}

type RuleSourceSourceDetailArray []RuleSourceSourceDetailInput

func (RuleSourceSourceDetailArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleSourceSourceDetail)(nil)).Elem()
}

func (i RuleSourceSourceDetailArray) ToRuleSourceSourceDetailArrayOutput() RuleSourceSourceDetailArrayOutput {
	return i.ToRuleSourceSourceDetailArrayOutputWithContext(context.Background())
}

func (i RuleSourceSourceDetailArray) ToRuleSourceSourceDetailArrayOutputWithContext(ctx context.Context) RuleSourceSourceDetailArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleSourceSourceDetailArrayOutput)
}

type RuleSourceSourceDetailOutput struct{ *pulumi.OutputState }

func (RuleSourceSourceDetailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleSourceSourceDetail)(nil)).Elem()
}

func (o RuleSourceSourceDetailOutput) ToRuleSourceSourceDetailOutput() RuleSourceSourceDetailOutput {
	return o
}

func (o RuleSourceSourceDetailOutput) ToRuleSourceSourceDetailOutputWithContext(ctx context.Context) RuleSourceSourceDetailOutput {
	return o
}

// The source of the event, such as an AWS service, that triggers AWS Config
// to evaluate your AWS resources. This defaults to `aws.config` and is the only valid value.
func (o RuleSourceSourceDetailOutput) EventSource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleSourceSourceDetail) *string { return v.EventSource }).(pulumi.StringPtrOutput)
}

// The frequency that you want AWS Config to run evaluations for a rule that
// is triggered periodically. If specified, requires `messageType` to be `ScheduledNotification`.
func (o RuleSourceSourceDetailOutput) MaximumExecutionFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleSourceSourceDetail) *string { return v.MaximumExecutionFrequency }).(pulumi.StringPtrOutput)
}

// The type of notification that triggers AWS Config to run an evaluation for a rule. You can specify the following notification types:
func (o RuleSourceSourceDetailOutput) MessageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleSourceSourceDetail) *string { return v.MessageType }).(pulumi.StringPtrOutput)
}

type RuleSourceSourceDetailArrayOutput struct{ *pulumi.OutputState }

func (RuleSourceSourceDetailArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleSourceSourceDetail)(nil)).Elem()
}

func (o RuleSourceSourceDetailArrayOutput) ToRuleSourceSourceDetailArrayOutput() RuleSourceSourceDetailArrayOutput {
	return o
}

func (o RuleSourceSourceDetailArrayOutput) ToRuleSourceSourceDetailArrayOutputWithContext(ctx context.Context) RuleSourceSourceDetailArrayOutput {
	return o
}

func (o RuleSourceSourceDetailArrayOutput) Index(i pulumi.IntInput) RuleSourceSourceDetailOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleSourceSourceDetail {
		return vs[0].([]RuleSourceSourceDetail)[vs[1].(int)]
	}).(RuleSourceSourceDetailOutput)
}

func init() {
	pulumi.RegisterOutputType(ConfigurationAggregatorAccountAggregationSourceOutput{})
	pulumi.RegisterOutputType(ConfigurationAggregatorAccountAggregationSourcePtrOutput{})
	pulumi.RegisterOutputType(ConfigurationAggregatorOrganizationAggregationSourceOutput{})
	pulumi.RegisterOutputType(ConfigurationAggregatorOrganizationAggregationSourcePtrOutput{})
	pulumi.RegisterOutputType(DeliveryChannelSnapshotDeliveryPropertiesOutput{})
	pulumi.RegisterOutputType(DeliveryChannelSnapshotDeliveryPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RecorderRecordingGroupOutput{})
	pulumi.RegisterOutputType(RecorderRecordingGroupPtrOutput{})
	pulumi.RegisterOutputType(RuleScopeOutput{})
	pulumi.RegisterOutputType(RuleScopePtrOutput{})
	pulumi.RegisterOutputType(RuleSourceOutput{})
	pulumi.RegisterOutputType(RuleSourcePtrOutput{})
	pulumi.RegisterOutputType(RuleSourceSourceDetailOutput{})
	pulumi.RegisterOutputType(RuleSourceSourceDetailArrayOutput{})
}
