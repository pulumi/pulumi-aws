// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfg

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RemediationConfiguration struct {
	pulumi.CustomResourceState

	Arn                      pulumi.StringOutput                                `pulumi:"arn"`
	Automatic                pulumi.BoolPtrOutput                               `pulumi:"automatic"`
	ConfigRuleName           pulumi.StringOutput                                `pulumi:"configRuleName"`
	ExecutionControls        RemediationConfigurationExecutionControlsPtrOutput `pulumi:"executionControls"`
	MaximumAutomaticAttempts pulumi.IntPtrOutput                                `pulumi:"maximumAutomaticAttempts"`
	Parameters               RemediationConfigurationParameterArrayOutput       `pulumi:"parameters"`
	ResourceType             pulumi.StringPtrOutput                             `pulumi:"resourceType"`
	RetryAttemptSeconds      pulumi.IntPtrOutput                                `pulumi:"retryAttemptSeconds"`
	TargetId                 pulumi.StringOutput                                `pulumi:"targetId"`
	TargetType               pulumi.StringOutput                                `pulumi:"targetType"`
	TargetVersion            pulumi.StringPtrOutput                             `pulumi:"targetVersion"`
}

// NewRemediationConfiguration registers a new resource with the given unique name, arguments, and options.
func NewRemediationConfiguration(ctx *pulumi.Context,
	name string, args *RemediationConfigurationArgs, opts ...pulumi.ResourceOption) (*RemediationConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConfigRuleName == nil {
		return nil, errors.New("invalid value for required argument 'ConfigRuleName'")
	}
	if args.TargetId == nil {
		return nil, errors.New("invalid value for required argument 'TargetId'")
	}
	if args.TargetType == nil {
		return nil, errors.New("invalid value for required argument 'TargetType'")
	}
	var resource RemediationConfiguration
	err := ctx.RegisterResource("aws:cfg/remediationConfiguration:RemediationConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRemediationConfiguration gets an existing RemediationConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRemediationConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RemediationConfigurationState, opts ...pulumi.ResourceOption) (*RemediationConfiguration, error) {
	var resource RemediationConfiguration
	err := ctx.ReadResource("aws:cfg/remediationConfiguration:RemediationConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RemediationConfiguration resources.
type remediationConfigurationState struct {
	Arn                      *string                                    `pulumi:"arn"`
	Automatic                *bool                                      `pulumi:"automatic"`
	ConfigRuleName           *string                                    `pulumi:"configRuleName"`
	ExecutionControls        *RemediationConfigurationExecutionControls `pulumi:"executionControls"`
	MaximumAutomaticAttempts *int                                       `pulumi:"maximumAutomaticAttempts"`
	Parameters               []RemediationConfigurationParameter        `pulumi:"parameters"`
	ResourceType             *string                                    `pulumi:"resourceType"`
	RetryAttemptSeconds      *int                                       `pulumi:"retryAttemptSeconds"`
	TargetId                 *string                                    `pulumi:"targetId"`
	TargetType               *string                                    `pulumi:"targetType"`
	TargetVersion            *string                                    `pulumi:"targetVersion"`
}

type RemediationConfigurationState struct {
	Arn                      pulumi.StringPtrInput
	Automatic                pulumi.BoolPtrInput
	ConfigRuleName           pulumi.StringPtrInput
	ExecutionControls        RemediationConfigurationExecutionControlsPtrInput
	MaximumAutomaticAttempts pulumi.IntPtrInput
	Parameters               RemediationConfigurationParameterArrayInput
	ResourceType             pulumi.StringPtrInput
	RetryAttemptSeconds      pulumi.IntPtrInput
	TargetId                 pulumi.StringPtrInput
	TargetType               pulumi.StringPtrInput
	TargetVersion            pulumi.StringPtrInput
}

func (RemediationConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*remediationConfigurationState)(nil)).Elem()
}

type remediationConfigurationArgs struct {
	Automatic                *bool                                      `pulumi:"automatic"`
	ConfigRuleName           string                                     `pulumi:"configRuleName"`
	ExecutionControls        *RemediationConfigurationExecutionControls `pulumi:"executionControls"`
	MaximumAutomaticAttempts *int                                       `pulumi:"maximumAutomaticAttempts"`
	Parameters               []RemediationConfigurationParameter        `pulumi:"parameters"`
	ResourceType             *string                                    `pulumi:"resourceType"`
	RetryAttemptSeconds      *int                                       `pulumi:"retryAttemptSeconds"`
	TargetId                 string                                     `pulumi:"targetId"`
	TargetType               string                                     `pulumi:"targetType"`
	TargetVersion            *string                                    `pulumi:"targetVersion"`
}

// The set of arguments for constructing a RemediationConfiguration resource.
type RemediationConfigurationArgs struct {
	Automatic                pulumi.BoolPtrInput
	ConfigRuleName           pulumi.StringInput
	ExecutionControls        RemediationConfigurationExecutionControlsPtrInput
	MaximumAutomaticAttempts pulumi.IntPtrInput
	Parameters               RemediationConfigurationParameterArrayInput
	ResourceType             pulumi.StringPtrInput
	RetryAttemptSeconds      pulumi.IntPtrInput
	TargetId                 pulumi.StringInput
	TargetType               pulumi.StringInput
	TargetVersion            pulumi.StringPtrInput
}

func (RemediationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*remediationConfigurationArgs)(nil)).Elem()
}

type RemediationConfigurationInput interface {
	pulumi.Input

	ToRemediationConfigurationOutput() RemediationConfigurationOutput
	ToRemediationConfigurationOutputWithContext(ctx context.Context) RemediationConfigurationOutput
}

func (*RemediationConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**RemediationConfiguration)(nil)).Elem()
}

func (i *RemediationConfiguration) ToRemediationConfigurationOutput() RemediationConfigurationOutput {
	return i.ToRemediationConfigurationOutputWithContext(context.Background())
}

func (i *RemediationConfiguration) ToRemediationConfigurationOutputWithContext(ctx context.Context) RemediationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationConfigurationOutput)
}

// RemediationConfigurationArrayInput is an input type that accepts RemediationConfigurationArray and RemediationConfigurationArrayOutput values.
// You can construct a concrete instance of `RemediationConfigurationArrayInput` via:
//
//	RemediationConfigurationArray{ RemediationConfigurationArgs{...} }
type RemediationConfigurationArrayInput interface {
	pulumi.Input

	ToRemediationConfigurationArrayOutput() RemediationConfigurationArrayOutput
	ToRemediationConfigurationArrayOutputWithContext(context.Context) RemediationConfigurationArrayOutput
}

type RemediationConfigurationArray []RemediationConfigurationInput

func (RemediationConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RemediationConfiguration)(nil)).Elem()
}

func (i RemediationConfigurationArray) ToRemediationConfigurationArrayOutput() RemediationConfigurationArrayOutput {
	return i.ToRemediationConfigurationArrayOutputWithContext(context.Background())
}

func (i RemediationConfigurationArray) ToRemediationConfigurationArrayOutputWithContext(ctx context.Context) RemediationConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationConfigurationArrayOutput)
}

// RemediationConfigurationMapInput is an input type that accepts RemediationConfigurationMap and RemediationConfigurationMapOutput values.
// You can construct a concrete instance of `RemediationConfigurationMapInput` via:
//
//	RemediationConfigurationMap{ "key": RemediationConfigurationArgs{...} }
type RemediationConfigurationMapInput interface {
	pulumi.Input

	ToRemediationConfigurationMapOutput() RemediationConfigurationMapOutput
	ToRemediationConfigurationMapOutputWithContext(context.Context) RemediationConfigurationMapOutput
}

type RemediationConfigurationMap map[string]RemediationConfigurationInput

func (RemediationConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RemediationConfiguration)(nil)).Elem()
}

func (i RemediationConfigurationMap) ToRemediationConfigurationMapOutput() RemediationConfigurationMapOutput {
	return i.ToRemediationConfigurationMapOutputWithContext(context.Background())
}

func (i RemediationConfigurationMap) ToRemediationConfigurationMapOutputWithContext(ctx context.Context) RemediationConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RemediationConfigurationMapOutput)
}

type RemediationConfigurationOutput struct{ *pulumi.OutputState }

func (RemediationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RemediationConfiguration)(nil)).Elem()
}

func (o RemediationConfigurationOutput) ToRemediationConfigurationOutput() RemediationConfigurationOutput {
	return o
}

func (o RemediationConfigurationOutput) ToRemediationConfigurationOutputWithContext(ctx context.Context) RemediationConfigurationOutput {
	return o
}

func (o RemediationConfigurationOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *RemediationConfiguration) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o RemediationConfigurationOutput) Automatic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RemediationConfiguration) pulumi.BoolPtrOutput { return v.Automatic }).(pulumi.BoolPtrOutput)
}

func (o RemediationConfigurationOutput) ConfigRuleName() pulumi.StringOutput {
	return o.ApplyT(func(v *RemediationConfiguration) pulumi.StringOutput { return v.ConfigRuleName }).(pulumi.StringOutput)
}

func (o RemediationConfigurationOutput) ExecutionControls() RemediationConfigurationExecutionControlsPtrOutput {
	return o.ApplyT(func(v *RemediationConfiguration) RemediationConfigurationExecutionControlsPtrOutput {
		return v.ExecutionControls
	}).(RemediationConfigurationExecutionControlsPtrOutput)
}

func (o RemediationConfigurationOutput) MaximumAutomaticAttempts() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemediationConfiguration) pulumi.IntPtrOutput { return v.MaximumAutomaticAttempts }).(pulumi.IntPtrOutput)
}

func (o RemediationConfigurationOutput) Parameters() RemediationConfigurationParameterArrayOutput {
	return o.ApplyT(func(v *RemediationConfiguration) RemediationConfigurationParameterArrayOutput { return v.Parameters }).(RemediationConfigurationParameterArrayOutput)
}

func (o RemediationConfigurationOutput) ResourceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemediationConfiguration) pulumi.StringPtrOutput { return v.ResourceType }).(pulumi.StringPtrOutput)
}

func (o RemediationConfigurationOutput) RetryAttemptSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *RemediationConfiguration) pulumi.IntPtrOutput { return v.RetryAttemptSeconds }).(pulumi.IntPtrOutput)
}

func (o RemediationConfigurationOutput) TargetId() pulumi.StringOutput {
	return o.ApplyT(func(v *RemediationConfiguration) pulumi.StringOutput { return v.TargetId }).(pulumi.StringOutput)
}

func (o RemediationConfigurationOutput) TargetType() pulumi.StringOutput {
	return o.ApplyT(func(v *RemediationConfiguration) pulumi.StringOutput { return v.TargetType }).(pulumi.StringOutput)
}

func (o RemediationConfigurationOutput) TargetVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RemediationConfiguration) pulumi.StringPtrOutput { return v.TargetVersion }).(pulumi.StringPtrOutput)
}

type RemediationConfigurationArrayOutput struct{ *pulumi.OutputState }

func (RemediationConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RemediationConfiguration)(nil)).Elem()
}

func (o RemediationConfigurationArrayOutput) ToRemediationConfigurationArrayOutput() RemediationConfigurationArrayOutput {
	return o
}

func (o RemediationConfigurationArrayOutput) ToRemediationConfigurationArrayOutputWithContext(ctx context.Context) RemediationConfigurationArrayOutput {
	return o
}

func (o RemediationConfigurationArrayOutput) Index(i pulumi.IntInput) RemediationConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RemediationConfiguration {
		return vs[0].([]*RemediationConfiguration)[vs[1].(int)]
	}).(RemediationConfigurationOutput)
}

type RemediationConfigurationMapOutput struct{ *pulumi.OutputState }

func (RemediationConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RemediationConfiguration)(nil)).Elem()
}

func (o RemediationConfigurationMapOutput) ToRemediationConfigurationMapOutput() RemediationConfigurationMapOutput {
	return o
}

func (o RemediationConfigurationMapOutput) ToRemediationConfigurationMapOutputWithContext(ctx context.Context) RemediationConfigurationMapOutput {
	return o
}

func (o RemediationConfigurationMapOutput) MapIndex(k pulumi.StringInput) RemediationConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RemediationConfiguration {
		return vs[0].(map[string]*RemediationConfiguration)[vs[1].(string)]
	}).(RemediationConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RemediationConfigurationInput)(nil)).Elem(), &RemediationConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*RemediationConfigurationArrayInput)(nil)).Elem(), RemediationConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RemediationConfigurationMapInput)(nil)).Elem(), RemediationConfigurationMap{})
	pulumi.RegisterOutputType(RemediationConfigurationOutput{})
	pulumi.RegisterOutputType(RemediationConfigurationArrayOutput{})
	pulumi.RegisterOutputType(RemediationConfigurationMapOutput{})
}
