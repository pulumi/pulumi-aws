// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfg

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type OrganizationConformancePack struct {
	pulumi.CustomResourceState

	Arn                 pulumi.StringOutput                                  `pulumi:"arn"`
	DeliveryS3Bucket    pulumi.StringPtrOutput                               `pulumi:"deliveryS3Bucket"`
	DeliveryS3KeyPrefix pulumi.StringPtrOutput                               `pulumi:"deliveryS3KeyPrefix"`
	ExcludedAccounts    pulumi.StringArrayOutput                             `pulumi:"excludedAccounts"`
	InputParameters     OrganizationConformancePackInputParameterArrayOutput `pulumi:"inputParameters"`
	Name                pulumi.StringOutput                                  `pulumi:"name"`
	TemplateBody        pulumi.StringPtrOutput                               `pulumi:"templateBody"`
	TemplateS3Uri       pulumi.StringPtrOutput                               `pulumi:"templateS3Uri"`
}

// NewOrganizationConformancePack registers a new resource with the given unique name, arguments, and options.
func NewOrganizationConformancePack(ctx *pulumi.Context,
	name string, args *OrganizationConformancePackArgs, opts ...pulumi.ResourceOption) (*OrganizationConformancePack, error) {
	if args == nil {
		args = &OrganizationConformancePackArgs{}
	}

	var resource OrganizationConformancePack
	err := ctx.RegisterResource("aws:cfg/organizationConformancePack:OrganizationConformancePack", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationConformancePack gets an existing OrganizationConformancePack resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationConformancePack(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationConformancePackState, opts ...pulumi.ResourceOption) (*OrganizationConformancePack, error) {
	var resource OrganizationConformancePack
	err := ctx.ReadResource("aws:cfg/organizationConformancePack:OrganizationConformancePack", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationConformancePack resources.
type organizationConformancePackState struct {
	Arn                 *string                                     `pulumi:"arn"`
	DeliveryS3Bucket    *string                                     `pulumi:"deliveryS3Bucket"`
	DeliveryS3KeyPrefix *string                                     `pulumi:"deliveryS3KeyPrefix"`
	ExcludedAccounts    []string                                    `pulumi:"excludedAccounts"`
	InputParameters     []OrganizationConformancePackInputParameter `pulumi:"inputParameters"`
	Name                *string                                     `pulumi:"name"`
	TemplateBody        *string                                     `pulumi:"templateBody"`
	TemplateS3Uri       *string                                     `pulumi:"templateS3Uri"`
}

type OrganizationConformancePackState struct {
	Arn                 pulumi.StringPtrInput
	DeliveryS3Bucket    pulumi.StringPtrInput
	DeliveryS3KeyPrefix pulumi.StringPtrInput
	ExcludedAccounts    pulumi.StringArrayInput
	InputParameters     OrganizationConformancePackInputParameterArrayInput
	Name                pulumi.StringPtrInput
	TemplateBody        pulumi.StringPtrInput
	TemplateS3Uri       pulumi.StringPtrInput
}

func (OrganizationConformancePackState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationConformancePackState)(nil)).Elem()
}

type organizationConformancePackArgs struct {
	DeliveryS3Bucket    *string                                     `pulumi:"deliveryS3Bucket"`
	DeliveryS3KeyPrefix *string                                     `pulumi:"deliveryS3KeyPrefix"`
	ExcludedAccounts    []string                                    `pulumi:"excludedAccounts"`
	InputParameters     []OrganizationConformancePackInputParameter `pulumi:"inputParameters"`
	Name                *string                                     `pulumi:"name"`
	TemplateBody        *string                                     `pulumi:"templateBody"`
	TemplateS3Uri       *string                                     `pulumi:"templateS3Uri"`
}

// The set of arguments for constructing a OrganizationConformancePack resource.
type OrganizationConformancePackArgs struct {
	DeliveryS3Bucket    pulumi.StringPtrInput
	DeliveryS3KeyPrefix pulumi.StringPtrInput
	ExcludedAccounts    pulumi.StringArrayInput
	InputParameters     OrganizationConformancePackInputParameterArrayInput
	Name                pulumi.StringPtrInput
	TemplateBody        pulumi.StringPtrInput
	TemplateS3Uri       pulumi.StringPtrInput
}

func (OrganizationConformancePackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationConformancePackArgs)(nil)).Elem()
}

type OrganizationConformancePackInput interface {
	pulumi.Input

	ToOrganizationConformancePackOutput() OrganizationConformancePackOutput
	ToOrganizationConformancePackOutputWithContext(ctx context.Context) OrganizationConformancePackOutput
}

func (*OrganizationConformancePack) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationConformancePack)(nil)).Elem()
}

func (i *OrganizationConformancePack) ToOrganizationConformancePackOutput() OrganizationConformancePackOutput {
	return i.ToOrganizationConformancePackOutputWithContext(context.Background())
}

func (i *OrganizationConformancePack) ToOrganizationConformancePackOutputWithContext(ctx context.Context) OrganizationConformancePackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationConformancePackOutput)
}

// OrganizationConformancePackArrayInput is an input type that accepts OrganizationConformancePackArray and OrganizationConformancePackArrayOutput values.
// You can construct a concrete instance of `OrganizationConformancePackArrayInput` via:
//
//	OrganizationConformancePackArray{ OrganizationConformancePackArgs{...} }
type OrganizationConformancePackArrayInput interface {
	pulumi.Input

	ToOrganizationConformancePackArrayOutput() OrganizationConformancePackArrayOutput
	ToOrganizationConformancePackArrayOutputWithContext(context.Context) OrganizationConformancePackArrayOutput
}

type OrganizationConformancePackArray []OrganizationConformancePackInput

func (OrganizationConformancePackArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationConformancePack)(nil)).Elem()
}

func (i OrganizationConformancePackArray) ToOrganizationConformancePackArrayOutput() OrganizationConformancePackArrayOutput {
	return i.ToOrganizationConformancePackArrayOutputWithContext(context.Background())
}

func (i OrganizationConformancePackArray) ToOrganizationConformancePackArrayOutputWithContext(ctx context.Context) OrganizationConformancePackArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationConformancePackArrayOutput)
}

// OrganizationConformancePackMapInput is an input type that accepts OrganizationConformancePackMap and OrganizationConformancePackMapOutput values.
// You can construct a concrete instance of `OrganizationConformancePackMapInput` via:
//
//	OrganizationConformancePackMap{ "key": OrganizationConformancePackArgs{...} }
type OrganizationConformancePackMapInput interface {
	pulumi.Input

	ToOrganizationConformancePackMapOutput() OrganizationConformancePackMapOutput
	ToOrganizationConformancePackMapOutputWithContext(context.Context) OrganizationConformancePackMapOutput
}

type OrganizationConformancePackMap map[string]OrganizationConformancePackInput

func (OrganizationConformancePackMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationConformancePack)(nil)).Elem()
}

func (i OrganizationConformancePackMap) ToOrganizationConformancePackMapOutput() OrganizationConformancePackMapOutput {
	return i.ToOrganizationConformancePackMapOutputWithContext(context.Background())
}

func (i OrganizationConformancePackMap) ToOrganizationConformancePackMapOutputWithContext(ctx context.Context) OrganizationConformancePackMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationConformancePackMapOutput)
}

type OrganizationConformancePackOutput struct{ *pulumi.OutputState }

func (OrganizationConformancePackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationConformancePack)(nil)).Elem()
}

func (o OrganizationConformancePackOutput) ToOrganizationConformancePackOutput() OrganizationConformancePackOutput {
	return o
}

func (o OrganizationConformancePackOutput) ToOrganizationConformancePackOutputWithContext(ctx context.Context) OrganizationConformancePackOutput {
	return o
}

func (o OrganizationConformancePackOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationConformancePack) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o OrganizationConformancePackOutput) DeliveryS3Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationConformancePack) pulumi.StringPtrOutput { return v.DeliveryS3Bucket }).(pulumi.StringPtrOutput)
}

func (o OrganizationConformancePackOutput) DeliveryS3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationConformancePack) pulumi.StringPtrOutput { return v.DeliveryS3KeyPrefix }).(pulumi.StringPtrOutput)
}

func (o OrganizationConformancePackOutput) ExcludedAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OrganizationConformancePack) pulumi.StringArrayOutput { return v.ExcludedAccounts }).(pulumi.StringArrayOutput)
}

func (o OrganizationConformancePackOutput) InputParameters() OrganizationConformancePackInputParameterArrayOutput {
	return o.ApplyT(func(v *OrganizationConformancePack) OrganizationConformancePackInputParameterArrayOutput {
		return v.InputParameters
	}).(OrganizationConformancePackInputParameterArrayOutput)
}

func (o OrganizationConformancePackOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationConformancePack) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o OrganizationConformancePackOutput) TemplateBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationConformancePack) pulumi.StringPtrOutput { return v.TemplateBody }).(pulumi.StringPtrOutput)
}

func (o OrganizationConformancePackOutput) TemplateS3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationConformancePack) pulumi.StringPtrOutput { return v.TemplateS3Uri }).(pulumi.StringPtrOutput)
}

type OrganizationConformancePackArrayOutput struct{ *pulumi.OutputState }

func (OrganizationConformancePackArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationConformancePack)(nil)).Elem()
}

func (o OrganizationConformancePackArrayOutput) ToOrganizationConformancePackArrayOutput() OrganizationConformancePackArrayOutput {
	return o
}

func (o OrganizationConformancePackArrayOutput) ToOrganizationConformancePackArrayOutputWithContext(ctx context.Context) OrganizationConformancePackArrayOutput {
	return o
}

func (o OrganizationConformancePackArrayOutput) Index(i pulumi.IntInput) OrganizationConformancePackOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OrganizationConformancePack {
		return vs[0].([]*OrganizationConformancePack)[vs[1].(int)]
	}).(OrganizationConformancePackOutput)
}

type OrganizationConformancePackMapOutput struct{ *pulumi.OutputState }

func (OrganizationConformancePackMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationConformancePack)(nil)).Elem()
}

func (o OrganizationConformancePackMapOutput) ToOrganizationConformancePackMapOutput() OrganizationConformancePackMapOutput {
	return o
}

func (o OrganizationConformancePackMapOutput) ToOrganizationConformancePackMapOutputWithContext(ctx context.Context) OrganizationConformancePackMapOutput {
	return o
}

func (o OrganizationConformancePackMapOutput) MapIndex(k pulumi.StringInput) OrganizationConformancePackOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OrganizationConformancePack {
		return vs[0].(map[string]*OrganizationConformancePack)[vs[1].(string)]
	}).(OrganizationConformancePackOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationConformancePackInput)(nil)).Elem(), &OrganizationConformancePack{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationConformancePackArrayInput)(nil)).Elem(), OrganizationConformancePackArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationConformancePackMapInput)(nil)).Elem(), OrganizationConformancePackMap{})
	pulumi.RegisterOutputType(OrganizationConformancePackOutput{})
	pulumi.RegisterOutputType(OrganizationConformancePackArrayOutput{})
	pulumi.RegisterOutputType(OrganizationConformancePackMapOutput{})
}
