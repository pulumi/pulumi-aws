// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfg

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to manage the AWS Config retention configuration.
// The retention configuration defines the number of days that AWS Config stores historical information.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/cfg"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cfg.NewRetentionConfiguration(ctx, "example", &cfg.RetentionConfigurationArgs{
//				RetentionPeriodInDays: pulumi.Int(90),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
//
// ## Import
//
// Using `pulumi import`, import the AWS Config retention configuration using the `name`. For example:
//
// ```sh
// $ pulumi import aws:cfg/retentionConfiguration:RetentionConfiguration example default
// ```
type RetentionConfiguration struct {
	pulumi.CustomResourceState

	// The name of the retention configuration object. The object is always named **default**.
	Name pulumi.StringOutput `pulumi:"name"`
	// The number of days AWS Config stores historical information.
	RetentionPeriodInDays pulumi.IntOutput `pulumi:"retentionPeriodInDays"`
}

// NewRetentionConfiguration registers a new resource with the given unique name, arguments, and options.
func NewRetentionConfiguration(ctx *pulumi.Context,
	name string, args *RetentionConfigurationArgs, opts ...pulumi.ResourceOption) (*RetentionConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RetentionPeriodInDays == nil {
		return nil, errors.New("invalid value for required argument 'RetentionPeriodInDays'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RetentionConfiguration
	err := ctx.RegisterResource("aws:cfg/retentionConfiguration:RetentionConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRetentionConfiguration gets an existing RetentionConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRetentionConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RetentionConfigurationState, opts ...pulumi.ResourceOption) (*RetentionConfiguration, error) {
	var resource RetentionConfiguration
	err := ctx.ReadResource("aws:cfg/retentionConfiguration:RetentionConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RetentionConfiguration resources.
type retentionConfigurationState struct {
	// The name of the retention configuration object. The object is always named **default**.
	Name *string `pulumi:"name"`
	// The number of days AWS Config stores historical information.
	RetentionPeriodInDays *int `pulumi:"retentionPeriodInDays"`
}

type RetentionConfigurationState struct {
	// The name of the retention configuration object. The object is always named **default**.
	Name pulumi.StringPtrInput
	// The number of days AWS Config stores historical information.
	RetentionPeriodInDays pulumi.IntPtrInput
}

func (RetentionConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*retentionConfigurationState)(nil)).Elem()
}

type retentionConfigurationArgs struct {
	// The number of days AWS Config stores historical information.
	RetentionPeriodInDays int `pulumi:"retentionPeriodInDays"`
}

// The set of arguments for constructing a RetentionConfiguration resource.
type RetentionConfigurationArgs struct {
	// The number of days AWS Config stores historical information.
	RetentionPeriodInDays pulumi.IntInput
}

func (RetentionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*retentionConfigurationArgs)(nil)).Elem()
}

type RetentionConfigurationInput interface {
	pulumi.Input

	ToRetentionConfigurationOutput() RetentionConfigurationOutput
	ToRetentionConfigurationOutputWithContext(ctx context.Context) RetentionConfigurationOutput
}

func (*RetentionConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionConfiguration)(nil)).Elem()
}

func (i *RetentionConfiguration) ToRetentionConfigurationOutput() RetentionConfigurationOutput {
	return i.ToRetentionConfigurationOutputWithContext(context.Background())
}

func (i *RetentionConfiguration) ToRetentionConfigurationOutputWithContext(ctx context.Context) RetentionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionConfigurationOutput)
}

// RetentionConfigurationArrayInput is an input type that accepts RetentionConfigurationArray and RetentionConfigurationArrayOutput values.
// You can construct a concrete instance of `RetentionConfigurationArrayInput` via:
//
//	RetentionConfigurationArray{ RetentionConfigurationArgs{...} }
type RetentionConfigurationArrayInput interface {
	pulumi.Input

	ToRetentionConfigurationArrayOutput() RetentionConfigurationArrayOutput
	ToRetentionConfigurationArrayOutputWithContext(context.Context) RetentionConfigurationArrayOutput
}

type RetentionConfigurationArray []RetentionConfigurationInput

func (RetentionConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RetentionConfiguration)(nil)).Elem()
}

func (i RetentionConfigurationArray) ToRetentionConfigurationArrayOutput() RetentionConfigurationArrayOutput {
	return i.ToRetentionConfigurationArrayOutputWithContext(context.Background())
}

func (i RetentionConfigurationArray) ToRetentionConfigurationArrayOutputWithContext(ctx context.Context) RetentionConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionConfigurationArrayOutput)
}

// RetentionConfigurationMapInput is an input type that accepts RetentionConfigurationMap and RetentionConfigurationMapOutput values.
// You can construct a concrete instance of `RetentionConfigurationMapInput` via:
//
//	RetentionConfigurationMap{ "key": RetentionConfigurationArgs{...} }
type RetentionConfigurationMapInput interface {
	pulumi.Input

	ToRetentionConfigurationMapOutput() RetentionConfigurationMapOutput
	ToRetentionConfigurationMapOutputWithContext(context.Context) RetentionConfigurationMapOutput
}

type RetentionConfigurationMap map[string]RetentionConfigurationInput

func (RetentionConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RetentionConfiguration)(nil)).Elem()
}

func (i RetentionConfigurationMap) ToRetentionConfigurationMapOutput() RetentionConfigurationMapOutput {
	return i.ToRetentionConfigurationMapOutputWithContext(context.Background())
}

func (i RetentionConfigurationMap) ToRetentionConfigurationMapOutputWithContext(ctx context.Context) RetentionConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RetentionConfigurationMapOutput)
}

type RetentionConfigurationOutput struct{ *pulumi.OutputState }

func (RetentionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RetentionConfiguration)(nil)).Elem()
}

func (o RetentionConfigurationOutput) ToRetentionConfigurationOutput() RetentionConfigurationOutput {
	return o
}

func (o RetentionConfigurationOutput) ToRetentionConfigurationOutputWithContext(ctx context.Context) RetentionConfigurationOutput {
	return o
}

// The name of the retention configuration object. The object is always named **default**.
func (o RetentionConfigurationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RetentionConfiguration) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The number of days AWS Config stores historical information.
func (o RetentionConfigurationOutput) RetentionPeriodInDays() pulumi.IntOutput {
	return o.ApplyT(func(v *RetentionConfiguration) pulumi.IntOutput { return v.RetentionPeriodInDays }).(pulumi.IntOutput)
}

type RetentionConfigurationArrayOutput struct{ *pulumi.OutputState }

func (RetentionConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RetentionConfiguration)(nil)).Elem()
}

func (o RetentionConfigurationArrayOutput) ToRetentionConfigurationArrayOutput() RetentionConfigurationArrayOutput {
	return o
}

func (o RetentionConfigurationArrayOutput) ToRetentionConfigurationArrayOutputWithContext(ctx context.Context) RetentionConfigurationArrayOutput {
	return o
}

func (o RetentionConfigurationArrayOutput) Index(i pulumi.IntInput) RetentionConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RetentionConfiguration {
		return vs[0].([]*RetentionConfiguration)[vs[1].(int)]
	}).(RetentionConfigurationOutput)
}

type RetentionConfigurationMapOutput struct{ *pulumi.OutputState }

func (RetentionConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RetentionConfiguration)(nil)).Elem()
}

func (o RetentionConfigurationMapOutput) ToRetentionConfigurationMapOutput() RetentionConfigurationMapOutput {
	return o
}

func (o RetentionConfigurationMapOutput) ToRetentionConfigurationMapOutputWithContext(ctx context.Context) RetentionConfigurationMapOutput {
	return o
}

func (o RetentionConfigurationMapOutput) MapIndex(k pulumi.StringInput) RetentionConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RetentionConfiguration {
		return vs[0].(map[string]*RetentionConfiguration)[vs[1].(string)]
	}).(RetentionConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RetentionConfigurationInput)(nil)).Elem(), &RetentionConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*RetentionConfigurationArrayInput)(nil)).Elem(), RetentionConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RetentionConfigurationMapInput)(nil)).Elem(), RetentionConfigurationMap{})
	pulumi.RegisterOutputType(RetentionConfigurationOutput{})
	pulumi.RegisterOutputType(RetentionConfigurationArrayOutput{})
	pulumi.RegisterOutputType(RetentionConfigurationMapOutput{})
}
