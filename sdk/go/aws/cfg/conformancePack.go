// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfg

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Config Conformance Pack. More information about this collection of Config rules and remediation actions can be found in the
// [Conformance Packs](https://docs.aws.amazon.com/config/latest/developerguide/conformance-packs.html) documentation.
// Sample Conformance Pack templates may be found in the
// [AWS Config Rules Repository](https://github.com/awslabs/aws-config-rules/tree/master/aws-config-conformance-packs).
//
// > **NOTE:** The account must have a Configuration Recorder with proper IAM permissions before the Conformance Pack will
// successfully create or update. See also the
// `cfg.Recorder` resource.
//
// ## Example Usage
// ### Template Body
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/cfg"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cfg.NewConformancePack(ctx, "example", &cfg.ConformancePackArgs{
//				InputParameters: cfg.ConformancePackInputParameterArray{
//					&cfg.ConformancePackInputParameterArgs{
//						ParameterName:  pulumi.String("AccessKeysRotatedParameterMaxAccessKeyAge"),
//						ParameterValue: pulumi.String("90"),
//					},
//				},
//				TemplateBody: pulumi.String(`Parameters:
//	  AccessKeysRotatedParameterMaxAccessKeyAge:
//	    Type: String
//
// Resources:
//
//	IAMPasswordPolicy:
//	  Properties:
//	    ConfigRuleName: IAMPasswordPolicy
//	    Source:
//	      Owner: AWS
//	      SourceIdentifier: IAM_PASSWORD_POLICY
//	  Type: AWS::Config::ConfigRule
//
// `),
//
//			}, pulumi.DependsOn([]pulumi.Resource{
//				aws_config_configuration_recorder.Example,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Template S3 URI
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/cfg"
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/s3"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleBucketV2, err := s3.NewBucketV2(ctx, "exampleBucketV2", nil)
//			if err != nil {
//				return err
//			}
//			exampleBucketObjectv2, err := s3.NewBucketObjectv2(ctx, "exampleBucketObjectv2", &s3.BucketObjectv2Args{
//				Bucket: exampleBucketV2.ID(),
//				Key:    pulumi.String("example-key"),
//				Content: pulumi.String(`Resources:
//	  IAMPasswordPolicy:
//	    Properties:
//	      ConfigRuleName: IAMPasswordPolicy
//	      Source:
//	        Owner: AWS
//	        SourceIdentifier: IAM_PASSWORD_POLICY
//	    Type: AWS::Config::ConfigRule
//
// `),
//
//			})
//			if err != nil {
//				return err
//			}
//			_, err = cfg.NewConformancePack(ctx, "exampleConformancePack", &cfg.ConformancePackArgs{
//				TemplateS3Uri: pulumi.All(exampleBucketV2.Bucket, exampleBucketObjectv2.Key).ApplyT(func(_args []interface{}) (string, error) {
//					bucket := _args[0].(string)
//					key := _args[1].(string)
//					return fmt.Sprintf("s3://%v/%v", bucket, key), nil
//				}).(pulumi.StringOutput),
//			}, pulumi.DependsOn([]pulumi.Resource{
//				aws_config_configuration_recorder.Example,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// terraform import {
//
//	to = aws_config_conformance_pack.example
//
//	id = "example" } Using `pulumi import`, import Config Conformance Packs using the `name`. For exampleconsole % pulumi import aws_config_conformance_pack.example example
type ConformancePack struct {
	pulumi.CustomResourceState

	// Amazon Resource Name (ARN) of the conformance pack.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Amazon S3 bucket where AWS Config stores conformance pack templates. Maximum length of 63.
	DeliveryS3Bucket pulumi.StringPtrOutput `pulumi:"deliveryS3Bucket"`
	// The prefix for the Amazon S3 bucket. Maximum length of 1024.
	DeliveryS3KeyPrefix pulumi.StringPtrOutput `pulumi:"deliveryS3KeyPrefix"`
	// Set of configuration blocks describing input parameters passed to the conformance pack template. Documented below. When configured, the parameters must also be included in the `templateBody` or in the template stored in Amazon S3 if using `templateS3Uri`.
	InputParameters ConformancePackInputParameterArrayOutput `pulumi:"inputParameters"`
	// The name of the conformance pack. Must begin with a letter and contain from 1 to 256 alphanumeric characters and hyphens.
	Name pulumi.StringOutput `pulumi:"name"`
	// A string containing full conformance pack template body. Maximum length of 51200. Drift detection is not possible with this argument.
	TemplateBody pulumi.StringPtrOutput `pulumi:"templateBody"`
	// Location of file, e.g., `s3://bucketname/prefix`, containing the template body. The uri must point to the conformance pack template that is located in an Amazon S3 bucket in the same region as the conformance pack. Maximum length of 1024. Drift detection is not possible with this argument.
	TemplateS3Uri pulumi.StringPtrOutput `pulumi:"templateS3Uri"`
}

// NewConformancePack registers a new resource with the given unique name, arguments, and options.
func NewConformancePack(ctx *pulumi.Context,
	name string, args *ConformancePackArgs, opts ...pulumi.ResourceOption) (*ConformancePack, error) {
	if args == nil {
		args = &ConformancePackArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ConformancePack
	err := ctx.RegisterResource("aws:cfg/conformancePack:ConformancePack", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConformancePack gets an existing ConformancePack resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConformancePack(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConformancePackState, opts ...pulumi.ResourceOption) (*ConformancePack, error) {
	var resource ConformancePack
	err := ctx.ReadResource("aws:cfg/conformancePack:ConformancePack", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConformancePack resources.
type conformancePackState struct {
	// Amazon Resource Name (ARN) of the conformance pack.
	Arn *string `pulumi:"arn"`
	// Amazon S3 bucket where AWS Config stores conformance pack templates. Maximum length of 63.
	DeliveryS3Bucket *string `pulumi:"deliveryS3Bucket"`
	// The prefix for the Amazon S3 bucket. Maximum length of 1024.
	DeliveryS3KeyPrefix *string `pulumi:"deliveryS3KeyPrefix"`
	// Set of configuration blocks describing input parameters passed to the conformance pack template. Documented below. When configured, the parameters must also be included in the `templateBody` or in the template stored in Amazon S3 if using `templateS3Uri`.
	InputParameters []ConformancePackInputParameter `pulumi:"inputParameters"`
	// The name of the conformance pack. Must begin with a letter and contain from 1 to 256 alphanumeric characters and hyphens.
	Name *string `pulumi:"name"`
	// A string containing full conformance pack template body. Maximum length of 51200. Drift detection is not possible with this argument.
	TemplateBody *string `pulumi:"templateBody"`
	// Location of file, e.g., `s3://bucketname/prefix`, containing the template body. The uri must point to the conformance pack template that is located in an Amazon S3 bucket in the same region as the conformance pack. Maximum length of 1024. Drift detection is not possible with this argument.
	TemplateS3Uri *string `pulumi:"templateS3Uri"`
}

type ConformancePackState struct {
	// Amazon Resource Name (ARN) of the conformance pack.
	Arn pulumi.StringPtrInput
	// Amazon S3 bucket where AWS Config stores conformance pack templates. Maximum length of 63.
	DeliveryS3Bucket pulumi.StringPtrInput
	// The prefix for the Amazon S3 bucket. Maximum length of 1024.
	DeliveryS3KeyPrefix pulumi.StringPtrInput
	// Set of configuration blocks describing input parameters passed to the conformance pack template. Documented below. When configured, the parameters must also be included in the `templateBody` or in the template stored in Amazon S3 if using `templateS3Uri`.
	InputParameters ConformancePackInputParameterArrayInput
	// The name of the conformance pack. Must begin with a letter and contain from 1 to 256 alphanumeric characters and hyphens.
	Name pulumi.StringPtrInput
	// A string containing full conformance pack template body. Maximum length of 51200. Drift detection is not possible with this argument.
	TemplateBody pulumi.StringPtrInput
	// Location of file, e.g., `s3://bucketname/prefix`, containing the template body. The uri must point to the conformance pack template that is located in an Amazon S3 bucket in the same region as the conformance pack. Maximum length of 1024. Drift detection is not possible with this argument.
	TemplateS3Uri pulumi.StringPtrInput
}

func (ConformancePackState) ElementType() reflect.Type {
	return reflect.TypeOf((*conformancePackState)(nil)).Elem()
}

type conformancePackArgs struct {
	// Amazon S3 bucket where AWS Config stores conformance pack templates. Maximum length of 63.
	DeliveryS3Bucket *string `pulumi:"deliveryS3Bucket"`
	// The prefix for the Amazon S3 bucket. Maximum length of 1024.
	DeliveryS3KeyPrefix *string `pulumi:"deliveryS3KeyPrefix"`
	// Set of configuration blocks describing input parameters passed to the conformance pack template. Documented below. When configured, the parameters must also be included in the `templateBody` or in the template stored in Amazon S3 if using `templateS3Uri`.
	InputParameters []ConformancePackInputParameter `pulumi:"inputParameters"`
	// The name of the conformance pack. Must begin with a letter and contain from 1 to 256 alphanumeric characters and hyphens.
	Name *string `pulumi:"name"`
	// A string containing full conformance pack template body. Maximum length of 51200. Drift detection is not possible with this argument.
	TemplateBody *string `pulumi:"templateBody"`
	// Location of file, e.g., `s3://bucketname/prefix`, containing the template body. The uri must point to the conformance pack template that is located in an Amazon S3 bucket in the same region as the conformance pack. Maximum length of 1024. Drift detection is not possible with this argument.
	TemplateS3Uri *string `pulumi:"templateS3Uri"`
}

// The set of arguments for constructing a ConformancePack resource.
type ConformancePackArgs struct {
	// Amazon S3 bucket where AWS Config stores conformance pack templates. Maximum length of 63.
	DeliveryS3Bucket pulumi.StringPtrInput
	// The prefix for the Amazon S3 bucket. Maximum length of 1024.
	DeliveryS3KeyPrefix pulumi.StringPtrInput
	// Set of configuration blocks describing input parameters passed to the conformance pack template. Documented below. When configured, the parameters must also be included in the `templateBody` or in the template stored in Amazon S3 if using `templateS3Uri`.
	InputParameters ConformancePackInputParameterArrayInput
	// The name of the conformance pack. Must begin with a letter and contain from 1 to 256 alphanumeric characters and hyphens.
	Name pulumi.StringPtrInput
	// A string containing full conformance pack template body. Maximum length of 51200. Drift detection is not possible with this argument.
	TemplateBody pulumi.StringPtrInput
	// Location of file, e.g., `s3://bucketname/prefix`, containing the template body. The uri must point to the conformance pack template that is located in an Amazon S3 bucket in the same region as the conformance pack. Maximum length of 1024. Drift detection is not possible with this argument.
	TemplateS3Uri pulumi.StringPtrInput
}

func (ConformancePackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*conformancePackArgs)(nil)).Elem()
}

type ConformancePackInput interface {
	pulumi.Input

	ToConformancePackOutput() ConformancePackOutput
	ToConformancePackOutputWithContext(ctx context.Context) ConformancePackOutput
}

func (*ConformancePack) ElementType() reflect.Type {
	return reflect.TypeOf((**ConformancePack)(nil)).Elem()
}

func (i *ConformancePack) ToConformancePackOutput() ConformancePackOutput {
	return i.ToConformancePackOutputWithContext(context.Background())
}

func (i *ConformancePack) ToConformancePackOutputWithContext(ctx context.Context) ConformancePackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConformancePackOutput)
}

// ConformancePackArrayInput is an input type that accepts ConformancePackArray and ConformancePackArrayOutput values.
// You can construct a concrete instance of `ConformancePackArrayInput` via:
//
//	ConformancePackArray{ ConformancePackArgs{...} }
type ConformancePackArrayInput interface {
	pulumi.Input

	ToConformancePackArrayOutput() ConformancePackArrayOutput
	ToConformancePackArrayOutputWithContext(context.Context) ConformancePackArrayOutput
}

type ConformancePackArray []ConformancePackInput

func (ConformancePackArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConformancePack)(nil)).Elem()
}

func (i ConformancePackArray) ToConformancePackArrayOutput() ConformancePackArrayOutput {
	return i.ToConformancePackArrayOutputWithContext(context.Background())
}

func (i ConformancePackArray) ToConformancePackArrayOutputWithContext(ctx context.Context) ConformancePackArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConformancePackArrayOutput)
}

// ConformancePackMapInput is an input type that accepts ConformancePackMap and ConformancePackMapOutput values.
// You can construct a concrete instance of `ConformancePackMapInput` via:
//
//	ConformancePackMap{ "key": ConformancePackArgs{...} }
type ConformancePackMapInput interface {
	pulumi.Input

	ToConformancePackMapOutput() ConformancePackMapOutput
	ToConformancePackMapOutputWithContext(context.Context) ConformancePackMapOutput
}

type ConformancePackMap map[string]ConformancePackInput

func (ConformancePackMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConformancePack)(nil)).Elem()
}

func (i ConformancePackMap) ToConformancePackMapOutput() ConformancePackMapOutput {
	return i.ToConformancePackMapOutputWithContext(context.Background())
}

func (i ConformancePackMap) ToConformancePackMapOutputWithContext(ctx context.Context) ConformancePackMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConformancePackMapOutput)
}

type ConformancePackOutput struct{ *pulumi.OutputState }

func (ConformancePackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConformancePack)(nil)).Elem()
}

func (o ConformancePackOutput) ToConformancePackOutput() ConformancePackOutput {
	return o
}

func (o ConformancePackOutput) ToConformancePackOutputWithContext(ctx context.Context) ConformancePackOutput {
	return o
}

// Amazon Resource Name (ARN) of the conformance pack.
func (o ConformancePackOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ConformancePack) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Amazon S3 bucket where AWS Config stores conformance pack templates. Maximum length of 63.
func (o ConformancePackOutput) DeliveryS3Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConformancePack) pulumi.StringPtrOutput { return v.DeliveryS3Bucket }).(pulumi.StringPtrOutput)
}

// The prefix for the Amazon S3 bucket. Maximum length of 1024.
func (o ConformancePackOutput) DeliveryS3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConformancePack) pulumi.StringPtrOutput { return v.DeliveryS3KeyPrefix }).(pulumi.StringPtrOutput)
}

// Set of configuration blocks describing input parameters passed to the conformance pack template. Documented below. When configured, the parameters must also be included in the `templateBody` or in the template stored in Amazon S3 if using `templateS3Uri`.
func (o ConformancePackOutput) InputParameters() ConformancePackInputParameterArrayOutput {
	return o.ApplyT(func(v *ConformancePack) ConformancePackInputParameterArrayOutput { return v.InputParameters }).(ConformancePackInputParameterArrayOutput)
}

// The name of the conformance pack. Must begin with a letter and contain from 1 to 256 alphanumeric characters and hyphens.
func (o ConformancePackOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ConformancePack) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A string containing full conformance pack template body. Maximum length of 51200. Drift detection is not possible with this argument.
func (o ConformancePackOutput) TemplateBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConformancePack) pulumi.StringPtrOutput { return v.TemplateBody }).(pulumi.StringPtrOutput)
}

// Location of file, e.g., `s3://bucketname/prefix`, containing the template body. The uri must point to the conformance pack template that is located in an Amazon S3 bucket in the same region as the conformance pack. Maximum length of 1024. Drift detection is not possible with this argument.
func (o ConformancePackOutput) TemplateS3Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConformancePack) pulumi.StringPtrOutput { return v.TemplateS3Uri }).(pulumi.StringPtrOutput)
}

type ConformancePackArrayOutput struct{ *pulumi.OutputState }

func (ConformancePackArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConformancePack)(nil)).Elem()
}

func (o ConformancePackArrayOutput) ToConformancePackArrayOutput() ConformancePackArrayOutput {
	return o
}

func (o ConformancePackArrayOutput) ToConformancePackArrayOutputWithContext(ctx context.Context) ConformancePackArrayOutput {
	return o
}

func (o ConformancePackArrayOutput) Index(i pulumi.IntInput) ConformancePackOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ConformancePack {
		return vs[0].([]*ConformancePack)[vs[1].(int)]
	}).(ConformancePackOutput)
}

type ConformancePackMapOutput struct{ *pulumi.OutputState }

func (ConformancePackMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConformancePack)(nil)).Elem()
}

func (o ConformancePackMapOutput) ToConformancePackMapOutput() ConformancePackMapOutput {
	return o
}

func (o ConformancePackMapOutput) ToConformancePackMapOutputWithContext(ctx context.Context) ConformancePackMapOutput {
	return o
}

func (o ConformancePackMapOutput) MapIndex(k pulumi.StringInput) ConformancePackOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ConformancePack {
		return vs[0].(map[string]*ConformancePack)[vs[1].(string)]
	}).(ConformancePackOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConformancePackInput)(nil)).Elem(), &ConformancePack{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConformancePackArrayInput)(nil)).Elem(), ConformancePackArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConformancePackMapInput)(nil)).Elem(), ConformancePackMap{})
	pulumi.RegisterOutputType(ConformancePackOutput{})
	pulumi.RegisterOutputType(ConformancePackArrayOutput{})
	pulumi.RegisterOutputType(ConformancePackMapOutput{})
}
