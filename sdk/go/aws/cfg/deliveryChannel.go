// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfg

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DeliveryChannel struct {
	pulumi.CustomResourceState

	Name                       pulumi.StringOutput                                `pulumi:"name"`
	S3BucketName               pulumi.StringOutput                                `pulumi:"s3BucketName"`
	S3KeyPrefix                pulumi.StringPtrOutput                             `pulumi:"s3KeyPrefix"`
	S3KmsKeyArn                pulumi.StringPtrOutput                             `pulumi:"s3KmsKeyArn"`
	SnapshotDeliveryProperties DeliveryChannelSnapshotDeliveryPropertiesPtrOutput `pulumi:"snapshotDeliveryProperties"`
	SnsTopicArn                pulumi.StringPtrOutput                             `pulumi:"snsTopicArn"`
}

// NewDeliveryChannel registers a new resource with the given unique name, arguments, and options.
func NewDeliveryChannel(ctx *pulumi.Context,
	name string, args *DeliveryChannelArgs, opts ...pulumi.ResourceOption) (*DeliveryChannel, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.S3BucketName == nil {
		return nil, errors.New("invalid value for required argument 'S3BucketName'")
	}
	var resource DeliveryChannel
	err := ctx.RegisterResource("aws:cfg/deliveryChannel:DeliveryChannel", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeliveryChannel gets an existing DeliveryChannel resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeliveryChannel(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeliveryChannelState, opts ...pulumi.ResourceOption) (*DeliveryChannel, error) {
	var resource DeliveryChannel
	err := ctx.ReadResource("aws:cfg/deliveryChannel:DeliveryChannel", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeliveryChannel resources.
type deliveryChannelState struct {
	Name                       *string                                    `pulumi:"name"`
	S3BucketName               *string                                    `pulumi:"s3BucketName"`
	S3KeyPrefix                *string                                    `pulumi:"s3KeyPrefix"`
	S3KmsKeyArn                *string                                    `pulumi:"s3KmsKeyArn"`
	SnapshotDeliveryProperties *DeliveryChannelSnapshotDeliveryProperties `pulumi:"snapshotDeliveryProperties"`
	SnsTopicArn                *string                                    `pulumi:"snsTopicArn"`
}

type DeliveryChannelState struct {
	Name                       pulumi.StringPtrInput
	S3BucketName               pulumi.StringPtrInput
	S3KeyPrefix                pulumi.StringPtrInput
	S3KmsKeyArn                pulumi.StringPtrInput
	SnapshotDeliveryProperties DeliveryChannelSnapshotDeliveryPropertiesPtrInput
	SnsTopicArn                pulumi.StringPtrInput
}

func (DeliveryChannelState) ElementType() reflect.Type {
	return reflect.TypeOf((*deliveryChannelState)(nil)).Elem()
}

type deliveryChannelArgs struct {
	Name                       *string                                    `pulumi:"name"`
	S3BucketName               string                                     `pulumi:"s3BucketName"`
	S3KeyPrefix                *string                                    `pulumi:"s3KeyPrefix"`
	S3KmsKeyArn                *string                                    `pulumi:"s3KmsKeyArn"`
	SnapshotDeliveryProperties *DeliveryChannelSnapshotDeliveryProperties `pulumi:"snapshotDeliveryProperties"`
	SnsTopicArn                *string                                    `pulumi:"snsTopicArn"`
}

// The set of arguments for constructing a DeliveryChannel resource.
type DeliveryChannelArgs struct {
	Name                       pulumi.StringPtrInput
	S3BucketName               pulumi.StringInput
	S3KeyPrefix                pulumi.StringPtrInput
	S3KmsKeyArn                pulumi.StringPtrInput
	SnapshotDeliveryProperties DeliveryChannelSnapshotDeliveryPropertiesPtrInput
	SnsTopicArn                pulumi.StringPtrInput
}

func (DeliveryChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deliveryChannelArgs)(nil)).Elem()
}

type DeliveryChannelInput interface {
	pulumi.Input

	ToDeliveryChannelOutput() DeliveryChannelOutput
	ToDeliveryChannelOutputWithContext(ctx context.Context) DeliveryChannelOutput
}

func (*DeliveryChannel) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryChannel)(nil)).Elem()
}

func (i *DeliveryChannel) ToDeliveryChannelOutput() DeliveryChannelOutput {
	return i.ToDeliveryChannelOutputWithContext(context.Background())
}

func (i *DeliveryChannel) ToDeliveryChannelOutputWithContext(ctx context.Context) DeliveryChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryChannelOutput)
}

// DeliveryChannelArrayInput is an input type that accepts DeliveryChannelArray and DeliveryChannelArrayOutput values.
// You can construct a concrete instance of `DeliveryChannelArrayInput` via:
//
//	DeliveryChannelArray{ DeliveryChannelArgs{...} }
type DeliveryChannelArrayInput interface {
	pulumi.Input

	ToDeliveryChannelArrayOutput() DeliveryChannelArrayOutput
	ToDeliveryChannelArrayOutputWithContext(context.Context) DeliveryChannelArrayOutput
}

type DeliveryChannelArray []DeliveryChannelInput

func (DeliveryChannelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeliveryChannel)(nil)).Elem()
}

func (i DeliveryChannelArray) ToDeliveryChannelArrayOutput() DeliveryChannelArrayOutput {
	return i.ToDeliveryChannelArrayOutputWithContext(context.Background())
}

func (i DeliveryChannelArray) ToDeliveryChannelArrayOutputWithContext(ctx context.Context) DeliveryChannelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryChannelArrayOutput)
}

// DeliveryChannelMapInput is an input type that accepts DeliveryChannelMap and DeliveryChannelMapOutput values.
// You can construct a concrete instance of `DeliveryChannelMapInput` via:
//
//	DeliveryChannelMap{ "key": DeliveryChannelArgs{...} }
type DeliveryChannelMapInput interface {
	pulumi.Input

	ToDeliveryChannelMapOutput() DeliveryChannelMapOutput
	ToDeliveryChannelMapOutputWithContext(context.Context) DeliveryChannelMapOutput
}

type DeliveryChannelMap map[string]DeliveryChannelInput

func (DeliveryChannelMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeliveryChannel)(nil)).Elem()
}

func (i DeliveryChannelMap) ToDeliveryChannelMapOutput() DeliveryChannelMapOutput {
	return i.ToDeliveryChannelMapOutputWithContext(context.Background())
}

func (i DeliveryChannelMap) ToDeliveryChannelMapOutputWithContext(ctx context.Context) DeliveryChannelMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeliveryChannelMapOutput)
}

type DeliveryChannelOutput struct{ *pulumi.OutputState }

func (DeliveryChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeliveryChannel)(nil)).Elem()
}

func (o DeliveryChannelOutput) ToDeliveryChannelOutput() DeliveryChannelOutput {
	return o
}

func (o DeliveryChannelOutput) ToDeliveryChannelOutputWithContext(ctx context.Context) DeliveryChannelOutput {
	return o
}

func (o DeliveryChannelOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DeliveryChannel) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o DeliveryChannelOutput) S3BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v *DeliveryChannel) pulumi.StringOutput { return v.S3BucketName }).(pulumi.StringOutput)
}

func (o DeliveryChannelOutput) S3KeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryChannel) pulumi.StringPtrOutput { return v.S3KeyPrefix }).(pulumi.StringPtrOutput)
}

func (o DeliveryChannelOutput) S3KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryChannel) pulumi.StringPtrOutput { return v.S3KmsKeyArn }).(pulumi.StringPtrOutput)
}

func (o DeliveryChannelOutput) SnapshotDeliveryProperties() DeliveryChannelSnapshotDeliveryPropertiesPtrOutput {
	return o.ApplyT(func(v *DeliveryChannel) DeliveryChannelSnapshotDeliveryPropertiesPtrOutput {
		return v.SnapshotDeliveryProperties
	}).(DeliveryChannelSnapshotDeliveryPropertiesPtrOutput)
}

func (o DeliveryChannelOutput) SnsTopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeliveryChannel) pulumi.StringPtrOutput { return v.SnsTopicArn }).(pulumi.StringPtrOutput)
}

type DeliveryChannelArrayOutput struct{ *pulumi.OutputState }

func (DeliveryChannelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeliveryChannel)(nil)).Elem()
}

func (o DeliveryChannelArrayOutput) ToDeliveryChannelArrayOutput() DeliveryChannelArrayOutput {
	return o
}

func (o DeliveryChannelArrayOutput) ToDeliveryChannelArrayOutputWithContext(ctx context.Context) DeliveryChannelArrayOutput {
	return o
}

func (o DeliveryChannelArrayOutput) Index(i pulumi.IntInput) DeliveryChannelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DeliveryChannel {
		return vs[0].([]*DeliveryChannel)[vs[1].(int)]
	}).(DeliveryChannelOutput)
}

type DeliveryChannelMapOutput struct{ *pulumi.OutputState }

func (DeliveryChannelMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeliveryChannel)(nil)).Elem()
}

func (o DeliveryChannelMapOutput) ToDeliveryChannelMapOutput() DeliveryChannelMapOutput {
	return o
}

func (o DeliveryChannelMapOutput) ToDeliveryChannelMapOutputWithContext(ctx context.Context) DeliveryChannelMapOutput {
	return o
}

func (o DeliveryChannelMapOutput) MapIndex(k pulumi.StringInput) DeliveryChannelOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DeliveryChannel {
		return vs[0].(map[string]*DeliveryChannel)[vs[1].(string)]
	}).(DeliveryChannelOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryChannelInput)(nil)).Elem(), &DeliveryChannel{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryChannelArrayInput)(nil)).Elem(), DeliveryChannelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeliveryChannelMapInput)(nil)).Elem(), DeliveryChannelMap{})
	pulumi.RegisterOutputType(DeliveryChannelOutput{})
	pulumi.RegisterOutputType(DeliveryChannelArrayOutput{})
	pulumi.RegisterOutputType(DeliveryChannelMapOutput{})
}
