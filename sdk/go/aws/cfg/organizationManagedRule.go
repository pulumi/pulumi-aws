// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cfg

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Manages a Config Organization Managed Rule. More information about these rules can be found in the [Enabling AWS Config Rules Across all Accounts in Your Organization](https://docs.aws.amazon.com/config/latest/developerguide/config-rule-multi-account-deployment.html) and [AWS Config Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/evaluate-config_use-managed-rules.html) documentation. For working with Organization Custom Rules (those invoking a custom Lambda Function), see the [`cfg.OrganizationCustomRule` resource](https://www.terraform.io/docs/providers/aws/r/config_organization_custom_rule.html).
// 
// > **NOTE:** This resource must be created in the Organization master account and rules will include the master account unless its ID is added to the `excludedAccounts` argument.
// 
// > **NOTE:** Every Organization account except those configured in the `excludedAccounts` argument must have a Configuration Recorder with proper IAM permissions before the rule will successfully create or update. See also the [`cfg.Recorder` resource](https://www.terraform.io/docs/providers/aws/r/config_configuration_recorder.html).
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-aws/blob/master/website/docs/r/config_organization_managed_rule.html.markdown.
type OrganizationManagedRule struct {
	s *pulumi.ResourceState
}

// NewOrganizationManagedRule registers a new resource with the given unique name, arguments, and options.
func NewOrganizationManagedRule(ctx *pulumi.Context,
	name string, args *OrganizationManagedRuleArgs, opts ...pulumi.ResourceOpt) (*OrganizationManagedRule, error) {
	if args == nil || args.RuleIdentifier == nil {
		return nil, errors.New("missing required argument 'RuleIdentifier'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["description"] = nil
		inputs["excludedAccounts"] = nil
		inputs["inputParameters"] = nil
		inputs["maximumExecutionFrequency"] = nil
		inputs["name"] = nil
		inputs["resourceIdScope"] = nil
		inputs["resourceTypesScopes"] = nil
		inputs["ruleIdentifier"] = nil
		inputs["tagKeyScope"] = nil
		inputs["tagValueScope"] = nil
	} else {
		inputs["description"] = args.Description
		inputs["excludedAccounts"] = args.ExcludedAccounts
		inputs["inputParameters"] = args.InputParameters
		inputs["maximumExecutionFrequency"] = args.MaximumExecutionFrequency
		inputs["name"] = args.Name
		inputs["resourceIdScope"] = args.ResourceIdScope
		inputs["resourceTypesScopes"] = args.ResourceTypesScopes
		inputs["ruleIdentifier"] = args.RuleIdentifier
		inputs["tagKeyScope"] = args.TagKeyScope
		inputs["tagValueScope"] = args.TagValueScope
	}
	inputs["arn"] = nil
	s, err := ctx.RegisterResource("aws:cfg/organizationManagedRule:OrganizationManagedRule", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &OrganizationManagedRule{s: s}, nil
}

// GetOrganizationManagedRule gets an existing OrganizationManagedRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationManagedRule(ctx *pulumi.Context,
	name string, id pulumi.ID, state *OrganizationManagedRuleState, opts ...pulumi.ResourceOpt) (*OrganizationManagedRule, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["description"] = state.Description
		inputs["excludedAccounts"] = state.ExcludedAccounts
		inputs["inputParameters"] = state.InputParameters
		inputs["maximumExecutionFrequency"] = state.MaximumExecutionFrequency
		inputs["name"] = state.Name
		inputs["resourceIdScope"] = state.ResourceIdScope
		inputs["resourceTypesScopes"] = state.ResourceTypesScopes
		inputs["ruleIdentifier"] = state.RuleIdentifier
		inputs["tagKeyScope"] = state.TagKeyScope
		inputs["tagValueScope"] = state.TagValueScope
	}
	s, err := ctx.ReadResource("aws:cfg/organizationManagedRule:OrganizationManagedRule", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &OrganizationManagedRule{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *OrganizationManagedRule) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *OrganizationManagedRule) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// Amazon Resource Name (ARN) of the rule
func (r *OrganizationManagedRule) Arn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["arn"])
}

// Description of the rule
func (r *OrganizationManagedRule) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

// List of AWS account identifiers to exclude from the rule
func (r *OrganizationManagedRule) ExcludedAccounts() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["excludedAccounts"])
}

// A string in JSON format that is passed to the AWS Config Rule Lambda Function
func (r *OrganizationManagedRule) InputParameters() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["inputParameters"])
}

// The maximum frequency with which AWS Config runs evaluations for a rule, if the rule is triggered at a periodic frequency. Defaults to `TwentyFour_Hours` for periodic frequency triggered rules. Valid values: `One_Hour`, `Three_Hours`, `Six_Hours`, `Twelve_Hours`, or `TwentyFour_Hours`.
func (r *OrganizationManagedRule) MaximumExecutionFrequency() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["maximumExecutionFrequency"])
}

// The name of the rule
func (r *OrganizationManagedRule) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// Identifier of the AWS resource to evaluate
func (r *OrganizationManagedRule) ResourceIdScope() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["resourceIdScope"])
}

// List of types of AWS resources to evaluate
func (r *OrganizationManagedRule) ResourceTypesScopes() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["resourceTypesScopes"])
}

// Identifier of an available AWS Config Managed Rule to call. For available values, see the [List of AWS Config Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html) documentation
func (r *OrganizationManagedRule) RuleIdentifier() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["ruleIdentifier"])
}

// Tag key of AWS resources to evaluate
func (r *OrganizationManagedRule) TagKeyScope() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["tagKeyScope"])
}

// Tag value of AWS resources to evaluate
func (r *OrganizationManagedRule) TagValueScope() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["tagValueScope"])
}

// Input properties used for looking up and filtering OrganizationManagedRule resources.
type OrganizationManagedRuleState struct {
	// Amazon Resource Name (ARN) of the rule
	Arn interface{}
	// Description of the rule
	Description interface{}
	// List of AWS account identifiers to exclude from the rule
	ExcludedAccounts interface{}
	// A string in JSON format that is passed to the AWS Config Rule Lambda Function
	InputParameters interface{}
	// The maximum frequency with which AWS Config runs evaluations for a rule, if the rule is triggered at a periodic frequency. Defaults to `TwentyFour_Hours` for periodic frequency triggered rules. Valid values: `One_Hour`, `Three_Hours`, `Six_Hours`, `Twelve_Hours`, or `TwentyFour_Hours`.
	MaximumExecutionFrequency interface{}
	// The name of the rule
	Name interface{}
	// Identifier of the AWS resource to evaluate
	ResourceIdScope interface{}
	// List of types of AWS resources to evaluate
	ResourceTypesScopes interface{}
	// Identifier of an available AWS Config Managed Rule to call. For available values, see the [List of AWS Config Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html) documentation
	RuleIdentifier interface{}
	// Tag key of AWS resources to evaluate
	TagKeyScope interface{}
	// Tag value of AWS resources to evaluate
	TagValueScope interface{}
}

// The set of arguments for constructing a OrganizationManagedRule resource.
type OrganizationManagedRuleArgs struct {
	// Description of the rule
	Description interface{}
	// List of AWS account identifiers to exclude from the rule
	ExcludedAccounts interface{}
	// A string in JSON format that is passed to the AWS Config Rule Lambda Function
	InputParameters interface{}
	// The maximum frequency with which AWS Config runs evaluations for a rule, if the rule is triggered at a periodic frequency. Defaults to `TwentyFour_Hours` for periodic frequency triggered rules. Valid values: `One_Hour`, `Three_Hours`, `Six_Hours`, `Twelve_Hours`, or `TwentyFour_Hours`.
	MaximumExecutionFrequency interface{}
	// The name of the rule
	Name interface{}
	// Identifier of the AWS resource to evaluate
	ResourceIdScope interface{}
	// List of types of AWS resources to evaluate
	ResourceTypesScopes interface{}
	// Identifier of an available AWS Config Managed Rule to call. For available values, see the [List of AWS Config Managed Rules](https://docs.aws.amazon.com/config/latest/developerguide/managed-rules-by-aws-config.html) documentation
	RuleIdentifier interface{}
	// Tag key of AWS resources to evaluate
	TagKeyScope interface{}
	// Tag value of AWS resources to evaluate
	TagValueScope interface{}
}
