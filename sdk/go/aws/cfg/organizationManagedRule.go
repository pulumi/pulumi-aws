// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cfg

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type OrganizationManagedRule struct {
	pulumi.CustomResourceState

	Arn                       pulumi.StringOutput      `pulumi:"arn"`
	Description               pulumi.StringPtrOutput   `pulumi:"description"`
	ExcludedAccounts          pulumi.StringArrayOutput `pulumi:"excludedAccounts"`
	InputParameters           pulumi.StringPtrOutput   `pulumi:"inputParameters"`
	MaximumExecutionFrequency pulumi.StringPtrOutput   `pulumi:"maximumExecutionFrequency"`
	Name                      pulumi.StringOutput      `pulumi:"name"`
	ResourceIdScope           pulumi.StringPtrOutput   `pulumi:"resourceIdScope"`
	ResourceTypesScopes       pulumi.StringArrayOutput `pulumi:"resourceTypesScopes"`
	RuleIdentifier            pulumi.StringOutput      `pulumi:"ruleIdentifier"`
	TagKeyScope               pulumi.StringPtrOutput   `pulumi:"tagKeyScope"`
	TagValueScope             pulumi.StringPtrOutput   `pulumi:"tagValueScope"`
}

// NewOrganizationManagedRule registers a new resource with the given unique name, arguments, and options.
func NewOrganizationManagedRule(ctx *pulumi.Context,
	name string, args *OrganizationManagedRuleArgs, opts ...pulumi.ResourceOption) (*OrganizationManagedRule, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RuleIdentifier == nil {
		return nil, errors.New("invalid value for required argument 'RuleIdentifier'")
	}
	var resource OrganizationManagedRule
	err := ctx.RegisterResource("aws:cfg/organizationManagedRule:OrganizationManagedRule", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationManagedRule gets an existing OrganizationManagedRule resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationManagedRule(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationManagedRuleState, opts ...pulumi.ResourceOption) (*OrganizationManagedRule, error) {
	var resource OrganizationManagedRule
	err := ctx.ReadResource("aws:cfg/organizationManagedRule:OrganizationManagedRule", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationManagedRule resources.
type organizationManagedRuleState struct {
	Arn                       *string  `pulumi:"arn"`
	Description               *string  `pulumi:"description"`
	ExcludedAccounts          []string `pulumi:"excludedAccounts"`
	InputParameters           *string  `pulumi:"inputParameters"`
	MaximumExecutionFrequency *string  `pulumi:"maximumExecutionFrequency"`
	Name                      *string  `pulumi:"name"`
	ResourceIdScope           *string  `pulumi:"resourceIdScope"`
	ResourceTypesScopes       []string `pulumi:"resourceTypesScopes"`
	RuleIdentifier            *string  `pulumi:"ruleIdentifier"`
	TagKeyScope               *string  `pulumi:"tagKeyScope"`
	TagValueScope             *string  `pulumi:"tagValueScope"`
}

type OrganizationManagedRuleState struct {
	Arn                       pulumi.StringPtrInput
	Description               pulumi.StringPtrInput
	ExcludedAccounts          pulumi.StringArrayInput
	InputParameters           pulumi.StringPtrInput
	MaximumExecutionFrequency pulumi.StringPtrInput
	Name                      pulumi.StringPtrInput
	ResourceIdScope           pulumi.StringPtrInput
	ResourceTypesScopes       pulumi.StringArrayInput
	RuleIdentifier            pulumi.StringPtrInput
	TagKeyScope               pulumi.StringPtrInput
	TagValueScope             pulumi.StringPtrInput
}

func (OrganizationManagedRuleState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationManagedRuleState)(nil)).Elem()
}

type organizationManagedRuleArgs struct {
	Description               *string  `pulumi:"description"`
	ExcludedAccounts          []string `pulumi:"excludedAccounts"`
	InputParameters           *string  `pulumi:"inputParameters"`
	MaximumExecutionFrequency *string  `pulumi:"maximumExecutionFrequency"`
	Name                      *string  `pulumi:"name"`
	ResourceIdScope           *string  `pulumi:"resourceIdScope"`
	ResourceTypesScopes       []string `pulumi:"resourceTypesScopes"`
	RuleIdentifier            string   `pulumi:"ruleIdentifier"`
	TagKeyScope               *string  `pulumi:"tagKeyScope"`
	TagValueScope             *string  `pulumi:"tagValueScope"`
}

// The set of arguments for constructing a OrganizationManagedRule resource.
type OrganizationManagedRuleArgs struct {
	Description               pulumi.StringPtrInput
	ExcludedAccounts          pulumi.StringArrayInput
	InputParameters           pulumi.StringPtrInput
	MaximumExecutionFrequency pulumi.StringPtrInput
	Name                      pulumi.StringPtrInput
	ResourceIdScope           pulumi.StringPtrInput
	ResourceTypesScopes       pulumi.StringArrayInput
	RuleIdentifier            pulumi.StringInput
	TagKeyScope               pulumi.StringPtrInput
	TagValueScope             pulumi.StringPtrInput
}

func (OrganizationManagedRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationManagedRuleArgs)(nil)).Elem()
}

type OrganizationManagedRuleInput interface {
	pulumi.Input

	ToOrganizationManagedRuleOutput() OrganizationManagedRuleOutput
	ToOrganizationManagedRuleOutputWithContext(ctx context.Context) OrganizationManagedRuleOutput
}

func (*OrganizationManagedRule) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationManagedRule)(nil)).Elem()
}

func (i *OrganizationManagedRule) ToOrganizationManagedRuleOutput() OrganizationManagedRuleOutput {
	return i.ToOrganizationManagedRuleOutputWithContext(context.Background())
}

func (i *OrganizationManagedRule) ToOrganizationManagedRuleOutputWithContext(ctx context.Context) OrganizationManagedRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationManagedRuleOutput)
}

// OrganizationManagedRuleArrayInput is an input type that accepts OrganizationManagedRuleArray and OrganizationManagedRuleArrayOutput values.
// You can construct a concrete instance of `OrganizationManagedRuleArrayInput` via:
//
//	OrganizationManagedRuleArray{ OrganizationManagedRuleArgs{...} }
type OrganizationManagedRuleArrayInput interface {
	pulumi.Input

	ToOrganizationManagedRuleArrayOutput() OrganizationManagedRuleArrayOutput
	ToOrganizationManagedRuleArrayOutputWithContext(context.Context) OrganizationManagedRuleArrayOutput
}

type OrganizationManagedRuleArray []OrganizationManagedRuleInput

func (OrganizationManagedRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationManagedRule)(nil)).Elem()
}

func (i OrganizationManagedRuleArray) ToOrganizationManagedRuleArrayOutput() OrganizationManagedRuleArrayOutput {
	return i.ToOrganizationManagedRuleArrayOutputWithContext(context.Background())
}

func (i OrganizationManagedRuleArray) ToOrganizationManagedRuleArrayOutputWithContext(ctx context.Context) OrganizationManagedRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationManagedRuleArrayOutput)
}

// OrganizationManagedRuleMapInput is an input type that accepts OrganizationManagedRuleMap and OrganizationManagedRuleMapOutput values.
// You can construct a concrete instance of `OrganizationManagedRuleMapInput` via:
//
//	OrganizationManagedRuleMap{ "key": OrganizationManagedRuleArgs{...} }
type OrganizationManagedRuleMapInput interface {
	pulumi.Input

	ToOrganizationManagedRuleMapOutput() OrganizationManagedRuleMapOutput
	ToOrganizationManagedRuleMapOutputWithContext(context.Context) OrganizationManagedRuleMapOutput
}

type OrganizationManagedRuleMap map[string]OrganizationManagedRuleInput

func (OrganizationManagedRuleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationManagedRule)(nil)).Elem()
}

func (i OrganizationManagedRuleMap) ToOrganizationManagedRuleMapOutput() OrganizationManagedRuleMapOutput {
	return i.ToOrganizationManagedRuleMapOutputWithContext(context.Background())
}

func (i OrganizationManagedRuleMap) ToOrganizationManagedRuleMapOutputWithContext(ctx context.Context) OrganizationManagedRuleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationManagedRuleMapOutput)
}

type OrganizationManagedRuleOutput struct{ *pulumi.OutputState }

func (OrganizationManagedRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationManagedRule)(nil)).Elem()
}

func (o OrganizationManagedRuleOutput) ToOrganizationManagedRuleOutput() OrganizationManagedRuleOutput {
	return o
}

func (o OrganizationManagedRuleOutput) ToOrganizationManagedRuleOutputWithContext(ctx context.Context) OrganizationManagedRuleOutput {
	return o
}

func (o OrganizationManagedRuleOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationManagedRule) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o OrganizationManagedRuleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationManagedRule) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o OrganizationManagedRuleOutput) ExcludedAccounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OrganizationManagedRule) pulumi.StringArrayOutput { return v.ExcludedAccounts }).(pulumi.StringArrayOutput)
}

func (o OrganizationManagedRuleOutput) InputParameters() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationManagedRule) pulumi.StringPtrOutput { return v.InputParameters }).(pulumi.StringPtrOutput)
}

func (o OrganizationManagedRuleOutput) MaximumExecutionFrequency() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationManagedRule) pulumi.StringPtrOutput { return v.MaximumExecutionFrequency }).(pulumi.StringPtrOutput)
}

func (o OrganizationManagedRuleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationManagedRule) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o OrganizationManagedRuleOutput) ResourceIdScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationManagedRule) pulumi.StringPtrOutput { return v.ResourceIdScope }).(pulumi.StringPtrOutput)
}

func (o OrganizationManagedRuleOutput) ResourceTypesScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OrganizationManagedRule) pulumi.StringArrayOutput { return v.ResourceTypesScopes }).(pulumi.StringArrayOutput)
}

func (o OrganizationManagedRuleOutput) RuleIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v *OrganizationManagedRule) pulumi.StringOutput { return v.RuleIdentifier }).(pulumi.StringOutput)
}

func (o OrganizationManagedRuleOutput) TagKeyScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationManagedRule) pulumi.StringPtrOutput { return v.TagKeyScope }).(pulumi.StringPtrOutput)
}

func (o OrganizationManagedRuleOutput) TagValueScope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationManagedRule) pulumi.StringPtrOutput { return v.TagValueScope }).(pulumi.StringPtrOutput)
}

type OrganizationManagedRuleArrayOutput struct{ *pulumi.OutputState }

func (OrganizationManagedRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationManagedRule)(nil)).Elem()
}

func (o OrganizationManagedRuleArrayOutput) ToOrganizationManagedRuleArrayOutput() OrganizationManagedRuleArrayOutput {
	return o
}

func (o OrganizationManagedRuleArrayOutput) ToOrganizationManagedRuleArrayOutputWithContext(ctx context.Context) OrganizationManagedRuleArrayOutput {
	return o
}

func (o OrganizationManagedRuleArrayOutput) Index(i pulumi.IntInput) OrganizationManagedRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OrganizationManagedRule {
		return vs[0].([]*OrganizationManagedRule)[vs[1].(int)]
	}).(OrganizationManagedRuleOutput)
}

type OrganizationManagedRuleMapOutput struct{ *pulumi.OutputState }

func (OrganizationManagedRuleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationManagedRule)(nil)).Elem()
}

func (o OrganizationManagedRuleMapOutput) ToOrganizationManagedRuleMapOutput() OrganizationManagedRuleMapOutput {
	return o
}

func (o OrganizationManagedRuleMapOutput) ToOrganizationManagedRuleMapOutputWithContext(ctx context.Context) OrganizationManagedRuleMapOutput {
	return o
}

func (o OrganizationManagedRuleMapOutput) MapIndex(k pulumi.StringInput) OrganizationManagedRuleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OrganizationManagedRule {
		return vs[0].(map[string]*OrganizationManagedRule)[vs[1].(string)]
	}).(OrganizationManagedRuleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationManagedRuleInput)(nil)).Elem(), &OrganizationManagedRule{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationManagedRuleArrayInput)(nil)).Elem(), OrganizationManagedRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationManagedRuleMapInput)(nil)).Elem(), OrganizationManagedRuleMap{})
	pulumi.RegisterOutputType(OrganizationManagedRuleOutput{})
	pulumi.RegisterOutputType(OrganizationManagedRuleArrayOutput{})
	pulumi.RegisterOutputType(OrganizationManagedRuleMapOutput{})
}
