// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package m2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ApplicationDefinition struct {
	// JSON application definition. Either this or `s3Location` must be specified.
	Content *string `pulumi:"content"`
	// Location of the application definition in S3. Either this or `content` must be specified.
	S3Location *string `pulumi:"s3Location"`
}

// ApplicationDefinitionInput is an input type that accepts ApplicationDefinitionArgs and ApplicationDefinitionOutput values.
// You can construct a concrete instance of `ApplicationDefinitionInput` via:
//
//	ApplicationDefinitionArgs{...}
type ApplicationDefinitionInput interface {
	pulumi.Input

	ToApplicationDefinitionOutput() ApplicationDefinitionOutput
	ToApplicationDefinitionOutputWithContext(context.Context) ApplicationDefinitionOutput
}

type ApplicationDefinitionArgs struct {
	// JSON application definition. Either this or `s3Location` must be specified.
	Content pulumi.StringPtrInput `pulumi:"content"`
	// Location of the application definition in S3. Either this or `content` must be specified.
	S3Location pulumi.StringPtrInput `pulumi:"s3Location"`
}

func (ApplicationDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationDefinition)(nil)).Elem()
}

func (i ApplicationDefinitionArgs) ToApplicationDefinitionOutput() ApplicationDefinitionOutput {
	return i.ToApplicationDefinitionOutputWithContext(context.Background())
}

func (i ApplicationDefinitionArgs) ToApplicationDefinitionOutputWithContext(ctx context.Context) ApplicationDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationDefinitionOutput)
}

func (i ApplicationDefinitionArgs) ToApplicationDefinitionPtrOutput() ApplicationDefinitionPtrOutput {
	return i.ToApplicationDefinitionPtrOutputWithContext(context.Background())
}

func (i ApplicationDefinitionArgs) ToApplicationDefinitionPtrOutputWithContext(ctx context.Context) ApplicationDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationDefinitionOutput).ToApplicationDefinitionPtrOutputWithContext(ctx)
}

// ApplicationDefinitionPtrInput is an input type that accepts ApplicationDefinitionArgs, ApplicationDefinitionPtr and ApplicationDefinitionPtrOutput values.
// You can construct a concrete instance of `ApplicationDefinitionPtrInput` via:
//
//	        ApplicationDefinitionArgs{...}
//
//	or:
//
//	        nil
type ApplicationDefinitionPtrInput interface {
	pulumi.Input

	ToApplicationDefinitionPtrOutput() ApplicationDefinitionPtrOutput
	ToApplicationDefinitionPtrOutputWithContext(context.Context) ApplicationDefinitionPtrOutput
}

type applicationDefinitionPtrType ApplicationDefinitionArgs

func ApplicationDefinitionPtr(v *ApplicationDefinitionArgs) ApplicationDefinitionPtrInput {
	return (*applicationDefinitionPtrType)(v)
}

func (*applicationDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationDefinition)(nil)).Elem()
}

func (i *applicationDefinitionPtrType) ToApplicationDefinitionPtrOutput() ApplicationDefinitionPtrOutput {
	return i.ToApplicationDefinitionPtrOutputWithContext(context.Background())
}

func (i *applicationDefinitionPtrType) ToApplicationDefinitionPtrOutputWithContext(ctx context.Context) ApplicationDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationDefinitionPtrOutput)
}

type ApplicationDefinitionOutput struct{ *pulumi.OutputState }

func (ApplicationDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationDefinition)(nil)).Elem()
}

func (o ApplicationDefinitionOutput) ToApplicationDefinitionOutput() ApplicationDefinitionOutput {
	return o
}

func (o ApplicationDefinitionOutput) ToApplicationDefinitionOutputWithContext(ctx context.Context) ApplicationDefinitionOutput {
	return o
}

func (o ApplicationDefinitionOutput) ToApplicationDefinitionPtrOutput() ApplicationDefinitionPtrOutput {
	return o.ToApplicationDefinitionPtrOutputWithContext(context.Background())
}

func (o ApplicationDefinitionOutput) ToApplicationDefinitionPtrOutputWithContext(ctx context.Context) ApplicationDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationDefinition) *ApplicationDefinition {
		return &v
	}).(ApplicationDefinitionPtrOutput)
}

// JSON application definition. Either this or `s3Location` must be specified.
func (o ApplicationDefinitionOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationDefinition) *string { return v.Content }).(pulumi.StringPtrOutput)
}

// Location of the application definition in S3. Either this or `content` must be specified.
func (o ApplicationDefinitionOutput) S3Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationDefinition) *string { return v.S3Location }).(pulumi.StringPtrOutput)
}

type ApplicationDefinitionPtrOutput struct{ *pulumi.OutputState }

func (ApplicationDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationDefinition)(nil)).Elem()
}

func (o ApplicationDefinitionPtrOutput) ToApplicationDefinitionPtrOutput() ApplicationDefinitionPtrOutput {
	return o
}

func (o ApplicationDefinitionPtrOutput) ToApplicationDefinitionPtrOutputWithContext(ctx context.Context) ApplicationDefinitionPtrOutput {
	return o
}

func (o ApplicationDefinitionPtrOutput) Elem() ApplicationDefinitionOutput {
	return o.ApplyT(func(v *ApplicationDefinition) ApplicationDefinition {
		if v != nil {
			return *v
		}
		var ret ApplicationDefinition
		return ret
	}).(ApplicationDefinitionOutput)
}

// JSON application definition. Either this or `s3Location` must be specified.
func (o ApplicationDefinitionPtrOutput) Content() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Content
	}).(pulumi.StringPtrOutput)
}

// Location of the application definition in S3. Either this or `content` must be specified.
func (o ApplicationDefinitionPtrOutput) S3Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationDefinition) *string {
		if v == nil {
			return nil
		}
		return v.S3Location
	}).(pulumi.StringPtrOutput)
}

type ApplicationTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// ApplicationTimeoutsInput is an input type that accepts ApplicationTimeoutsArgs and ApplicationTimeoutsOutput values.
// You can construct a concrete instance of `ApplicationTimeoutsInput` via:
//
//	ApplicationTimeoutsArgs{...}
type ApplicationTimeoutsInput interface {
	pulumi.Input

	ToApplicationTimeoutsOutput() ApplicationTimeoutsOutput
	ToApplicationTimeoutsOutputWithContext(context.Context) ApplicationTimeoutsOutput
}

type ApplicationTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (ApplicationTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationTimeouts)(nil)).Elem()
}

func (i ApplicationTimeoutsArgs) ToApplicationTimeoutsOutput() ApplicationTimeoutsOutput {
	return i.ToApplicationTimeoutsOutputWithContext(context.Background())
}

func (i ApplicationTimeoutsArgs) ToApplicationTimeoutsOutputWithContext(ctx context.Context) ApplicationTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationTimeoutsOutput)
}

func (i ApplicationTimeoutsArgs) ToApplicationTimeoutsPtrOutput() ApplicationTimeoutsPtrOutput {
	return i.ToApplicationTimeoutsPtrOutputWithContext(context.Background())
}

func (i ApplicationTimeoutsArgs) ToApplicationTimeoutsPtrOutputWithContext(ctx context.Context) ApplicationTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationTimeoutsOutput).ToApplicationTimeoutsPtrOutputWithContext(ctx)
}

// ApplicationTimeoutsPtrInput is an input type that accepts ApplicationTimeoutsArgs, ApplicationTimeoutsPtr and ApplicationTimeoutsPtrOutput values.
// You can construct a concrete instance of `ApplicationTimeoutsPtrInput` via:
//
//	        ApplicationTimeoutsArgs{...}
//
//	or:
//
//	        nil
type ApplicationTimeoutsPtrInput interface {
	pulumi.Input

	ToApplicationTimeoutsPtrOutput() ApplicationTimeoutsPtrOutput
	ToApplicationTimeoutsPtrOutputWithContext(context.Context) ApplicationTimeoutsPtrOutput
}

type applicationTimeoutsPtrType ApplicationTimeoutsArgs

func ApplicationTimeoutsPtr(v *ApplicationTimeoutsArgs) ApplicationTimeoutsPtrInput {
	return (*applicationTimeoutsPtrType)(v)
}

func (*applicationTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationTimeouts)(nil)).Elem()
}

func (i *applicationTimeoutsPtrType) ToApplicationTimeoutsPtrOutput() ApplicationTimeoutsPtrOutput {
	return i.ToApplicationTimeoutsPtrOutputWithContext(context.Background())
}

func (i *applicationTimeoutsPtrType) ToApplicationTimeoutsPtrOutputWithContext(ctx context.Context) ApplicationTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationTimeoutsPtrOutput)
}

type ApplicationTimeoutsOutput struct{ *pulumi.OutputState }

func (ApplicationTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationTimeouts)(nil)).Elem()
}

func (o ApplicationTimeoutsOutput) ToApplicationTimeoutsOutput() ApplicationTimeoutsOutput {
	return o
}

func (o ApplicationTimeoutsOutput) ToApplicationTimeoutsOutputWithContext(ctx context.Context) ApplicationTimeoutsOutput {
	return o
}

func (o ApplicationTimeoutsOutput) ToApplicationTimeoutsPtrOutput() ApplicationTimeoutsPtrOutput {
	return o.ToApplicationTimeoutsPtrOutputWithContext(context.Background())
}

func (o ApplicationTimeoutsOutput) ToApplicationTimeoutsPtrOutputWithContext(ctx context.Context) ApplicationTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationTimeouts) *ApplicationTimeouts {
		return &v
	}).(ApplicationTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ApplicationTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o ApplicationTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ApplicationTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ApplicationTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type ApplicationTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (ApplicationTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationTimeouts)(nil)).Elem()
}

func (o ApplicationTimeoutsPtrOutput) ToApplicationTimeoutsPtrOutput() ApplicationTimeoutsPtrOutput {
	return o
}

func (o ApplicationTimeoutsPtrOutput) ToApplicationTimeoutsPtrOutputWithContext(ctx context.Context) ApplicationTimeoutsPtrOutput {
	return o
}

func (o ApplicationTimeoutsPtrOutput) Elem() ApplicationTimeoutsOutput {
	return o.ApplyT(func(v *ApplicationTimeouts) ApplicationTimeouts {
		if v != nil {
			return *v
		}
		var ret ApplicationTimeouts
		return ret
	}).(ApplicationTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ApplicationTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o ApplicationTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ApplicationTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type DeploymentTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// DeploymentTimeoutsInput is an input type that accepts DeploymentTimeoutsArgs and DeploymentTimeoutsOutput values.
// You can construct a concrete instance of `DeploymentTimeoutsInput` via:
//
//	DeploymentTimeoutsArgs{...}
type DeploymentTimeoutsInput interface {
	pulumi.Input

	ToDeploymentTimeoutsOutput() DeploymentTimeoutsOutput
	ToDeploymentTimeoutsOutputWithContext(context.Context) DeploymentTimeoutsOutput
}

type DeploymentTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (DeploymentTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentTimeouts)(nil)).Elem()
}

func (i DeploymentTimeoutsArgs) ToDeploymentTimeoutsOutput() DeploymentTimeoutsOutput {
	return i.ToDeploymentTimeoutsOutputWithContext(context.Background())
}

func (i DeploymentTimeoutsArgs) ToDeploymentTimeoutsOutputWithContext(ctx context.Context) DeploymentTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentTimeoutsOutput)
}

func (i DeploymentTimeoutsArgs) ToDeploymentTimeoutsPtrOutput() DeploymentTimeoutsPtrOutput {
	return i.ToDeploymentTimeoutsPtrOutputWithContext(context.Background())
}

func (i DeploymentTimeoutsArgs) ToDeploymentTimeoutsPtrOutputWithContext(ctx context.Context) DeploymentTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentTimeoutsOutput).ToDeploymentTimeoutsPtrOutputWithContext(ctx)
}

// DeploymentTimeoutsPtrInput is an input type that accepts DeploymentTimeoutsArgs, DeploymentTimeoutsPtr and DeploymentTimeoutsPtrOutput values.
// You can construct a concrete instance of `DeploymentTimeoutsPtrInput` via:
//
//	        DeploymentTimeoutsArgs{...}
//
//	or:
//
//	        nil
type DeploymentTimeoutsPtrInput interface {
	pulumi.Input

	ToDeploymentTimeoutsPtrOutput() DeploymentTimeoutsPtrOutput
	ToDeploymentTimeoutsPtrOutputWithContext(context.Context) DeploymentTimeoutsPtrOutput
}

type deploymentTimeoutsPtrType DeploymentTimeoutsArgs

func DeploymentTimeoutsPtr(v *DeploymentTimeoutsArgs) DeploymentTimeoutsPtrInput {
	return (*deploymentTimeoutsPtrType)(v)
}

func (*deploymentTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentTimeouts)(nil)).Elem()
}

func (i *deploymentTimeoutsPtrType) ToDeploymentTimeoutsPtrOutput() DeploymentTimeoutsPtrOutput {
	return i.ToDeploymentTimeoutsPtrOutputWithContext(context.Background())
}

func (i *deploymentTimeoutsPtrType) ToDeploymentTimeoutsPtrOutputWithContext(ctx context.Context) DeploymentTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeploymentTimeoutsPtrOutput)
}

type DeploymentTimeoutsOutput struct{ *pulumi.OutputState }

func (DeploymentTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeploymentTimeouts)(nil)).Elem()
}

func (o DeploymentTimeoutsOutput) ToDeploymentTimeoutsOutput() DeploymentTimeoutsOutput {
	return o
}

func (o DeploymentTimeoutsOutput) ToDeploymentTimeoutsOutputWithContext(ctx context.Context) DeploymentTimeoutsOutput {
	return o
}

func (o DeploymentTimeoutsOutput) ToDeploymentTimeoutsPtrOutput() DeploymentTimeoutsPtrOutput {
	return o.ToDeploymentTimeoutsPtrOutputWithContext(context.Background())
}

func (o DeploymentTimeoutsOutput) ToDeploymentTimeoutsPtrOutputWithContext(ctx context.Context) DeploymentTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeploymentTimeouts) *DeploymentTimeouts {
		return &v
	}).(DeploymentTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DeploymentTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o DeploymentTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DeploymentTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeploymentTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type DeploymentTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (DeploymentTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeploymentTimeouts)(nil)).Elem()
}

func (o DeploymentTimeoutsPtrOutput) ToDeploymentTimeoutsPtrOutput() DeploymentTimeoutsPtrOutput {
	return o
}

func (o DeploymentTimeoutsPtrOutput) ToDeploymentTimeoutsPtrOutputWithContext(ctx context.Context) DeploymentTimeoutsPtrOutput {
	return o
}

func (o DeploymentTimeoutsPtrOutput) Elem() DeploymentTimeoutsOutput {
	return o.ApplyT(func(v *DeploymentTimeouts) DeploymentTimeouts {
		if v != nil {
			return *v
		}
		var ret DeploymentTimeouts
		return ret
	}).(DeploymentTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DeploymentTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o DeploymentTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o DeploymentTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeploymentTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

type EnvironmentHighAvailabilityConfig struct {
	// Desired number of instances for the Environment.
	DesiredCapacity int `pulumi:"desiredCapacity"`
}

// EnvironmentHighAvailabilityConfigInput is an input type that accepts EnvironmentHighAvailabilityConfigArgs and EnvironmentHighAvailabilityConfigOutput values.
// You can construct a concrete instance of `EnvironmentHighAvailabilityConfigInput` via:
//
//	EnvironmentHighAvailabilityConfigArgs{...}
type EnvironmentHighAvailabilityConfigInput interface {
	pulumi.Input

	ToEnvironmentHighAvailabilityConfigOutput() EnvironmentHighAvailabilityConfigOutput
	ToEnvironmentHighAvailabilityConfigOutputWithContext(context.Context) EnvironmentHighAvailabilityConfigOutput
}

type EnvironmentHighAvailabilityConfigArgs struct {
	// Desired number of instances for the Environment.
	DesiredCapacity pulumi.IntInput `pulumi:"desiredCapacity"`
}

func (EnvironmentHighAvailabilityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentHighAvailabilityConfig)(nil)).Elem()
}

func (i EnvironmentHighAvailabilityConfigArgs) ToEnvironmentHighAvailabilityConfigOutput() EnvironmentHighAvailabilityConfigOutput {
	return i.ToEnvironmentHighAvailabilityConfigOutputWithContext(context.Background())
}

func (i EnvironmentHighAvailabilityConfigArgs) ToEnvironmentHighAvailabilityConfigOutputWithContext(ctx context.Context) EnvironmentHighAvailabilityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentHighAvailabilityConfigOutput)
}

func (i EnvironmentHighAvailabilityConfigArgs) ToEnvironmentHighAvailabilityConfigPtrOutput() EnvironmentHighAvailabilityConfigPtrOutput {
	return i.ToEnvironmentHighAvailabilityConfigPtrOutputWithContext(context.Background())
}

func (i EnvironmentHighAvailabilityConfigArgs) ToEnvironmentHighAvailabilityConfigPtrOutputWithContext(ctx context.Context) EnvironmentHighAvailabilityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentHighAvailabilityConfigOutput).ToEnvironmentHighAvailabilityConfigPtrOutputWithContext(ctx)
}

// EnvironmentHighAvailabilityConfigPtrInput is an input type that accepts EnvironmentHighAvailabilityConfigArgs, EnvironmentHighAvailabilityConfigPtr and EnvironmentHighAvailabilityConfigPtrOutput values.
// You can construct a concrete instance of `EnvironmentHighAvailabilityConfigPtrInput` via:
//
//	        EnvironmentHighAvailabilityConfigArgs{...}
//
//	or:
//
//	        nil
type EnvironmentHighAvailabilityConfigPtrInput interface {
	pulumi.Input

	ToEnvironmentHighAvailabilityConfigPtrOutput() EnvironmentHighAvailabilityConfigPtrOutput
	ToEnvironmentHighAvailabilityConfigPtrOutputWithContext(context.Context) EnvironmentHighAvailabilityConfigPtrOutput
}

type environmentHighAvailabilityConfigPtrType EnvironmentHighAvailabilityConfigArgs

func EnvironmentHighAvailabilityConfigPtr(v *EnvironmentHighAvailabilityConfigArgs) EnvironmentHighAvailabilityConfigPtrInput {
	return (*environmentHighAvailabilityConfigPtrType)(v)
}

func (*environmentHighAvailabilityConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentHighAvailabilityConfig)(nil)).Elem()
}

func (i *environmentHighAvailabilityConfigPtrType) ToEnvironmentHighAvailabilityConfigPtrOutput() EnvironmentHighAvailabilityConfigPtrOutput {
	return i.ToEnvironmentHighAvailabilityConfigPtrOutputWithContext(context.Background())
}

func (i *environmentHighAvailabilityConfigPtrType) ToEnvironmentHighAvailabilityConfigPtrOutputWithContext(ctx context.Context) EnvironmentHighAvailabilityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentHighAvailabilityConfigPtrOutput)
}

type EnvironmentHighAvailabilityConfigOutput struct{ *pulumi.OutputState }

func (EnvironmentHighAvailabilityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentHighAvailabilityConfig)(nil)).Elem()
}

func (o EnvironmentHighAvailabilityConfigOutput) ToEnvironmentHighAvailabilityConfigOutput() EnvironmentHighAvailabilityConfigOutput {
	return o
}

func (o EnvironmentHighAvailabilityConfigOutput) ToEnvironmentHighAvailabilityConfigOutputWithContext(ctx context.Context) EnvironmentHighAvailabilityConfigOutput {
	return o
}

func (o EnvironmentHighAvailabilityConfigOutput) ToEnvironmentHighAvailabilityConfigPtrOutput() EnvironmentHighAvailabilityConfigPtrOutput {
	return o.ToEnvironmentHighAvailabilityConfigPtrOutputWithContext(context.Background())
}

func (o EnvironmentHighAvailabilityConfigOutput) ToEnvironmentHighAvailabilityConfigPtrOutputWithContext(ctx context.Context) EnvironmentHighAvailabilityConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentHighAvailabilityConfig) *EnvironmentHighAvailabilityConfig {
		return &v
	}).(EnvironmentHighAvailabilityConfigPtrOutput)
}

// Desired number of instances for the Environment.
func (o EnvironmentHighAvailabilityConfigOutput) DesiredCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v EnvironmentHighAvailabilityConfig) int { return v.DesiredCapacity }).(pulumi.IntOutput)
}

type EnvironmentHighAvailabilityConfigPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentHighAvailabilityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentHighAvailabilityConfig)(nil)).Elem()
}

func (o EnvironmentHighAvailabilityConfigPtrOutput) ToEnvironmentHighAvailabilityConfigPtrOutput() EnvironmentHighAvailabilityConfigPtrOutput {
	return o
}

func (o EnvironmentHighAvailabilityConfigPtrOutput) ToEnvironmentHighAvailabilityConfigPtrOutputWithContext(ctx context.Context) EnvironmentHighAvailabilityConfigPtrOutput {
	return o
}

func (o EnvironmentHighAvailabilityConfigPtrOutput) Elem() EnvironmentHighAvailabilityConfigOutput {
	return o.ApplyT(func(v *EnvironmentHighAvailabilityConfig) EnvironmentHighAvailabilityConfig {
		if v != nil {
			return *v
		}
		var ret EnvironmentHighAvailabilityConfig
		return ret
	}).(EnvironmentHighAvailabilityConfigOutput)
}

// Desired number of instances for the Environment.
func (o EnvironmentHighAvailabilityConfigPtrOutput) DesiredCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *EnvironmentHighAvailabilityConfig) *int {
		if v == nil {
			return nil
		}
		return &v.DesiredCapacity
	}).(pulumi.IntPtrOutput)
}

type EnvironmentStorageConfiguration struct {
	Efs *EnvironmentStorageConfigurationEfs `pulumi:"efs"`
	Fsx *EnvironmentStorageConfigurationFsx `pulumi:"fsx"`
}

// EnvironmentStorageConfigurationInput is an input type that accepts EnvironmentStorageConfigurationArgs and EnvironmentStorageConfigurationOutput values.
// You can construct a concrete instance of `EnvironmentStorageConfigurationInput` via:
//
//	EnvironmentStorageConfigurationArgs{...}
type EnvironmentStorageConfigurationInput interface {
	pulumi.Input

	ToEnvironmentStorageConfigurationOutput() EnvironmentStorageConfigurationOutput
	ToEnvironmentStorageConfigurationOutputWithContext(context.Context) EnvironmentStorageConfigurationOutput
}

type EnvironmentStorageConfigurationArgs struct {
	Efs EnvironmentStorageConfigurationEfsPtrInput `pulumi:"efs"`
	Fsx EnvironmentStorageConfigurationFsxPtrInput `pulumi:"fsx"`
}

func (EnvironmentStorageConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentStorageConfiguration)(nil)).Elem()
}

func (i EnvironmentStorageConfigurationArgs) ToEnvironmentStorageConfigurationOutput() EnvironmentStorageConfigurationOutput {
	return i.ToEnvironmentStorageConfigurationOutputWithContext(context.Background())
}

func (i EnvironmentStorageConfigurationArgs) ToEnvironmentStorageConfigurationOutputWithContext(ctx context.Context) EnvironmentStorageConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentStorageConfigurationOutput)
}

func (i EnvironmentStorageConfigurationArgs) ToEnvironmentStorageConfigurationPtrOutput() EnvironmentStorageConfigurationPtrOutput {
	return i.ToEnvironmentStorageConfigurationPtrOutputWithContext(context.Background())
}

func (i EnvironmentStorageConfigurationArgs) ToEnvironmentStorageConfigurationPtrOutputWithContext(ctx context.Context) EnvironmentStorageConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentStorageConfigurationOutput).ToEnvironmentStorageConfigurationPtrOutputWithContext(ctx)
}

// EnvironmentStorageConfigurationPtrInput is an input type that accepts EnvironmentStorageConfigurationArgs, EnvironmentStorageConfigurationPtr and EnvironmentStorageConfigurationPtrOutput values.
// You can construct a concrete instance of `EnvironmentStorageConfigurationPtrInput` via:
//
//	        EnvironmentStorageConfigurationArgs{...}
//
//	or:
//
//	        nil
type EnvironmentStorageConfigurationPtrInput interface {
	pulumi.Input

	ToEnvironmentStorageConfigurationPtrOutput() EnvironmentStorageConfigurationPtrOutput
	ToEnvironmentStorageConfigurationPtrOutputWithContext(context.Context) EnvironmentStorageConfigurationPtrOutput
}

type environmentStorageConfigurationPtrType EnvironmentStorageConfigurationArgs

func EnvironmentStorageConfigurationPtr(v *EnvironmentStorageConfigurationArgs) EnvironmentStorageConfigurationPtrInput {
	return (*environmentStorageConfigurationPtrType)(v)
}

func (*environmentStorageConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentStorageConfiguration)(nil)).Elem()
}

func (i *environmentStorageConfigurationPtrType) ToEnvironmentStorageConfigurationPtrOutput() EnvironmentStorageConfigurationPtrOutput {
	return i.ToEnvironmentStorageConfigurationPtrOutputWithContext(context.Background())
}

func (i *environmentStorageConfigurationPtrType) ToEnvironmentStorageConfigurationPtrOutputWithContext(ctx context.Context) EnvironmentStorageConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentStorageConfigurationPtrOutput)
}

type EnvironmentStorageConfigurationOutput struct{ *pulumi.OutputState }

func (EnvironmentStorageConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentStorageConfiguration)(nil)).Elem()
}

func (o EnvironmentStorageConfigurationOutput) ToEnvironmentStorageConfigurationOutput() EnvironmentStorageConfigurationOutput {
	return o
}

func (o EnvironmentStorageConfigurationOutput) ToEnvironmentStorageConfigurationOutputWithContext(ctx context.Context) EnvironmentStorageConfigurationOutput {
	return o
}

func (o EnvironmentStorageConfigurationOutput) ToEnvironmentStorageConfigurationPtrOutput() EnvironmentStorageConfigurationPtrOutput {
	return o.ToEnvironmentStorageConfigurationPtrOutputWithContext(context.Background())
}

func (o EnvironmentStorageConfigurationOutput) ToEnvironmentStorageConfigurationPtrOutputWithContext(ctx context.Context) EnvironmentStorageConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentStorageConfiguration) *EnvironmentStorageConfiguration {
		return &v
	}).(EnvironmentStorageConfigurationPtrOutput)
}

func (o EnvironmentStorageConfigurationOutput) Efs() EnvironmentStorageConfigurationEfsPtrOutput {
	return o.ApplyT(func(v EnvironmentStorageConfiguration) *EnvironmentStorageConfigurationEfs { return v.Efs }).(EnvironmentStorageConfigurationEfsPtrOutput)
}

func (o EnvironmentStorageConfigurationOutput) Fsx() EnvironmentStorageConfigurationFsxPtrOutput {
	return o.ApplyT(func(v EnvironmentStorageConfiguration) *EnvironmentStorageConfigurationFsx { return v.Fsx }).(EnvironmentStorageConfigurationFsxPtrOutput)
}

type EnvironmentStorageConfigurationPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentStorageConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentStorageConfiguration)(nil)).Elem()
}

func (o EnvironmentStorageConfigurationPtrOutput) ToEnvironmentStorageConfigurationPtrOutput() EnvironmentStorageConfigurationPtrOutput {
	return o
}

func (o EnvironmentStorageConfigurationPtrOutput) ToEnvironmentStorageConfigurationPtrOutputWithContext(ctx context.Context) EnvironmentStorageConfigurationPtrOutput {
	return o
}

func (o EnvironmentStorageConfigurationPtrOutput) Elem() EnvironmentStorageConfigurationOutput {
	return o.ApplyT(func(v *EnvironmentStorageConfiguration) EnvironmentStorageConfiguration {
		if v != nil {
			return *v
		}
		var ret EnvironmentStorageConfiguration
		return ret
	}).(EnvironmentStorageConfigurationOutput)
}

func (o EnvironmentStorageConfigurationPtrOutput) Efs() EnvironmentStorageConfigurationEfsPtrOutput {
	return o.ApplyT(func(v *EnvironmentStorageConfiguration) *EnvironmentStorageConfigurationEfs {
		if v == nil {
			return nil
		}
		return v.Efs
	}).(EnvironmentStorageConfigurationEfsPtrOutput)
}

func (o EnvironmentStorageConfigurationPtrOutput) Fsx() EnvironmentStorageConfigurationFsxPtrOutput {
	return o.ApplyT(func(v *EnvironmentStorageConfiguration) *EnvironmentStorageConfigurationFsx {
		if v == nil {
			return nil
		}
		return v.Fsx
	}).(EnvironmentStorageConfigurationFsxPtrOutput)
}

type EnvironmentStorageConfigurationEfs struct {
	// Id of the EFS filesystem to mount.
	FileSystemId string `pulumi:"fileSystemId"`
	// Path to mount the filesystem on, must start with `/m2/mount/`.
	MountPoint string `pulumi:"mountPoint"`
}

// EnvironmentStorageConfigurationEfsInput is an input type that accepts EnvironmentStorageConfigurationEfsArgs and EnvironmentStorageConfigurationEfsOutput values.
// You can construct a concrete instance of `EnvironmentStorageConfigurationEfsInput` via:
//
//	EnvironmentStorageConfigurationEfsArgs{...}
type EnvironmentStorageConfigurationEfsInput interface {
	pulumi.Input

	ToEnvironmentStorageConfigurationEfsOutput() EnvironmentStorageConfigurationEfsOutput
	ToEnvironmentStorageConfigurationEfsOutputWithContext(context.Context) EnvironmentStorageConfigurationEfsOutput
}

type EnvironmentStorageConfigurationEfsArgs struct {
	// Id of the EFS filesystem to mount.
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
	// Path to mount the filesystem on, must start with `/m2/mount/`.
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
}

func (EnvironmentStorageConfigurationEfsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentStorageConfigurationEfs)(nil)).Elem()
}

func (i EnvironmentStorageConfigurationEfsArgs) ToEnvironmentStorageConfigurationEfsOutput() EnvironmentStorageConfigurationEfsOutput {
	return i.ToEnvironmentStorageConfigurationEfsOutputWithContext(context.Background())
}

func (i EnvironmentStorageConfigurationEfsArgs) ToEnvironmentStorageConfigurationEfsOutputWithContext(ctx context.Context) EnvironmentStorageConfigurationEfsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentStorageConfigurationEfsOutput)
}

func (i EnvironmentStorageConfigurationEfsArgs) ToEnvironmentStorageConfigurationEfsPtrOutput() EnvironmentStorageConfigurationEfsPtrOutput {
	return i.ToEnvironmentStorageConfigurationEfsPtrOutputWithContext(context.Background())
}

func (i EnvironmentStorageConfigurationEfsArgs) ToEnvironmentStorageConfigurationEfsPtrOutputWithContext(ctx context.Context) EnvironmentStorageConfigurationEfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentStorageConfigurationEfsOutput).ToEnvironmentStorageConfigurationEfsPtrOutputWithContext(ctx)
}

// EnvironmentStorageConfigurationEfsPtrInput is an input type that accepts EnvironmentStorageConfigurationEfsArgs, EnvironmentStorageConfigurationEfsPtr and EnvironmentStorageConfigurationEfsPtrOutput values.
// You can construct a concrete instance of `EnvironmentStorageConfigurationEfsPtrInput` via:
//
//	        EnvironmentStorageConfigurationEfsArgs{...}
//
//	or:
//
//	        nil
type EnvironmentStorageConfigurationEfsPtrInput interface {
	pulumi.Input

	ToEnvironmentStorageConfigurationEfsPtrOutput() EnvironmentStorageConfigurationEfsPtrOutput
	ToEnvironmentStorageConfigurationEfsPtrOutputWithContext(context.Context) EnvironmentStorageConfigurationEfsPtrOutput
}

type environmentStorageConfigurationEfsPtrType EnvironmentStorageConfigurationEfsArgs

func EnvironmentStorageConfigurationEfsPtr(v *EnvironmentStorageConfigurationEfsArgs) EnvironmentStorageConfigurationEfsPtrInput {
	return (*environmentStorageConfigurationEfsPtrType)(v)
}

func (*environmentStorageConfigurationEfsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentStorageConfigurationEfs)(nil)).Elem()
}

func (i *environmentStorageConfigurationEfsPtrType) ToEnvironmentStorageConfigurationEfsPtrOutput() EnvironmentStorageConfigurationEfsPtrOutput {
	return i.ToEnvironmentStorageConfigurationEfsPtrOutputWithContext(context.Background())
}

func (i *environmentStorageConfigurationEfsPtrType) ToEnvironmentStorageConfigurationEfsPtrOutputWithContext(ctx context.Context) EnvironmentStorageConfigurationEfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentStorageConfigurationEfsPtrOutput)
}

type EnvironmentStorageConfigurationEfsOutput struct{ *pulumi.OutputState }

func (EnvironmentStorageConfigurationEfsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentStorageConfigurationEfs)(nil)).Elem()
}

func (o EnvironmentStorageConfigurationEfsOutput) ToEnvironmentStorageConfigurationEfsOutput() EnvironmentStorageConfigurationEfsOutput {
	return o
}

func (o EnvironmentStorageConfigurationEfsOutput) ToEnvironmentStorageConfigurationEfsOutputWithContext(ctx context.Context) EnvironmentStorageConfigurationEfsOutput {
	return o
}

func (o EnvironmentStorageConfigurationEfsOutput) ToEnvironmentStorageConfigurationEfsPtrOutput() EnvironmentStorageConfigurationEfsPtrOutput {
	return o.ToEnvironmentStorageConfigurationEfsPtrOutputWithContext(context.Background())
}

func (o EnvironmentStorageConfigurationEfsOutput) ToEnvironmentStorageConfigurationEfsPtrOutputWithContext(ctx context.Context) EnvironmentStorageConfigurationEfsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentStorageConfigurationEfs) *EnvironmentStorageConfigurationEfs {
		return &v
	}).(EnvironmentStorageConfigurationEfsPtrOutput)
}

// Id of the EFS filesystem to mount.
func (o EnvironmentStorageConfigurationEfsOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentStorageConfigurationEfs) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// Path to mount the filesystem on, must start with `/m2/mount/`.
func (o EnvironmentStorageConfigurationEfsOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentStorageConfigurationEfs) string { return v.MountPoint }).(pulumi.StringOutput)
}

type EnvironmentStorageConfigurationEfsPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentStorageConfigurationEfsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentStorageConfigurationEfs)(nil)).Elem()
}

func (o EnvironmentStorageConfigurationEfsPtrOutput) ToEnvironmentStorageConfigurationEfsPtrOutput() EnvironmentStorageConfigurationEfsPtrOutput {
	return o
}

func (o EnvironmentStorageConfigurationEfsPtrOutput) ToEnvironmentStorageConfigurationEfsPtrOutputWithContext(ctx context.Context) EnvironmentStorageConfigurationEfsPtrOutput {
	return o
}

func (o EnvironmentStorageConfigurationEfsPtrOutput) Elem() EnvironmentStorageConfigurationEfsOutput {
	return o.ApplyT(func(v *EnvironmentStorageConfigurationEfs) EnvironmentStorageConfigurationEfs {
		if v != nil {
			return *v
		}
		var ret EnvironmentStorageConfigurationEfs
		return ret
	}).(EnvironmentStorageConfigurationEfsOutput)
}

// Id of the EFS filesystem to mount.
func (o EnvironmentStorageConfigurationEfsPtrOutput) FileSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentStorageConfigurationEfs) *string {
		if v == nil {
			return nil
		}
		return &v.FileSystemId
	}).(pulumi.StringPtrOutput)
}

// Path to mount the filesystem on, must start with `/m2/mount/`.
func (o EnvironmentStorageConfigurationEfsPtrOutput) MountPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentStorageConfigurationEfs) *string {
		if v == nil {
			return nil
		}
		return &v.MountPoint
	}).(pulumi.StringPtrOutput)
}

type EnvironmentStorageConfigurationFsx struct {
	// Id of the FSX filesystem to mount.
	FileSystemId string `pulumi:"fileSystemId"`
	// Path to mount the filesystem on, must start with `/m2/mount/`.
	MountPoint string `pulumi:"mountPoint"`
}

// EnvironmentStorageConfigurationFsxInput is an input type that accepts EnvironmentStorageConfigurationFsxArgs and EnvironmentStorageConfigurationFsxOutput values.
// You can construct a concrete instance of `EnvironmentStorageConfigurationFsxInput` via:
//
//	EnvironmentStorageConfigurationFsxArgs{...}
type EnvironmentStorageConfigurationFsxInput interface {
	pulumi.Input

	ToEnvironmentStorageConfigurationFsxOutput() EnvironmentStorageConfigurationFsxOutput
	ToEnvironmentStorageConfigurationFsxOutputWithContext(context.Context) EnvironmentStorageConfigurationFsxOutput
}

type EnvironmentStorageConfigurationFsxArgs struct {
	// Id of the FSX filesystem to mount.
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
	// Path to mount the filesystem on, must start with `/m2/mount/`.
	MountPoint pulumi.StringInput `pulumi:"mountPoint"`
}

func (EnvironmentStorageConfigurationFsxArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentStorageConfigurationFsx)(nil)).Elem()
}

func (i EnvironmentStorageConfigurationFsxArgs) ToEnvironmentStorageConfigurationFsxOutput() EnvironmentStorageConfigurationFsxOutput {
	return i.ToEnvironmentStorageConfigurationFsxOutputWithContext(context.Background())
}

func (i EnvironmentStorageConfigurationFsxArgs) ToEnvironmentStorageConfigurationFsxOutputWithContext(ctx context.Context) EnvironmentStorageConfigurationFsxOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentStorageConfigurationFsxOutput)
}

func (i EnvironmentStorageConfigurationFsxArgs) ToEnvironmentStorageConfigurationFsxPtrOutput() EnvironmentStorageConfigurationFsxPtrOutput {
	return i.ToEnvironmentStorageConfigurationFsxPtrOutputWithContext(context.Background())
}

func (i EnvironmentStorageConfigurationFsxArgs) ToEnvironmentStorageConfigurationFsxPtrOutputWithContext(ctx context.Context) EnvironmentStorageConfigurationFsxPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentStorageConfigurationFsxOutput).ToEnvironmentStorageConfigurationFsxPtrOutputWithContext(ctx)
}

// EnvironmentStorageConfigurationFsxPtrInput is an input type that accepts EnvironmentStorageConfigurationFsxArgs, EnvironmentStorageConfigurationFsxPtr and EnvironmentStorageConfigurationFsxPtrOutput values.
// You can construct a concrete instance of `EnvironmentStorageConfigurationFsxPtrInput` via:
//
//	        EnvironmentStorageConfigurationFsxArgs{...}
//
//	or:
//
//	        nil
type EnvironmentStorageConfigurationFsxPtrInput interface {
	pulumi.Input

	ToEnvironmentStorageConfigurationFsxPtrOutput() EnvironmentStorageConfigurationFsxPtrOutput
	ToEnvironmentStorageConfigurationFsxPtrOutputWithContext(context.Context) EnvironmentStorageConfigurationFsxPtrOutput
}

type environmentStorageConfigurationFsxPtrType EnvironmentStorageConfigurationFsxArgs

func EnvironmentStorageConfigurationFsxPtr(v *EnvironmentStorageConfigurationFsxArgs) EnvironmentStorageConfigurationFsxPtrInput {
	return (*environmentStorageConfigurationFsxPtrType)(v)
}

func (*environmentStorageConfigurationFsxPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentStorageConfigurationFsx)(nil)).Elem()
}

func (i *environmentStorageConfigurationFsxPtrType) ToEnvironmentStorageConfigurationFsxPtrOutput() EnvironmentStorageConfigurationFsxPtrOutput {
	return i.ToEnvironmentStorageConfigurationFsxPtrOutputWithContext(context.Background())
}

func (i *environmentStorageConfigurationFsxPtrType) ToEnvironmentStorageConfigurationFsxPtrOutputWithContext(ctx context.Context) EnvironmentStorageConfigurationFsxPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentStorageConfigurationFsxPtrOutput)
}

type EnvironmentStorageConfigurationFsxOutput struct{ *pulumi.OutputState }

func (EnvironmentStorageConfigurationFsxOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentStorageConfigurationFsx)(nil)).Elem()
}

func (o EnvironmentStorageConfigurationFsxOutput) ToEnvironmentStorageConfigurationFsxOutput() EnvironmentStorageConfigurationFsxOutput {
	return o
}

func (o EnvironmentStorageConfigurationFsxOutput) ToEnvironmentStorageConfigurationFsxOutputWithContext(ctx context.Context) EnvironmentStorageConfigurationFsxOutput {
	return o
}

func (o EnvironmentStorageConfigurationFsxOutput) ToEnvironmentStorageConfigurationFsxPtrOutput() EnvironmentStorageConfigurationFsxPtrOutput {
	return o.ToEnvironmentStorageConfigurationFsxPtrOutputWithContext(context.Background())
}

func (o EnvironmentStorageConfigurationFsxOutput) ToEnvironmentStorageConfigurationFsxPtrOutputWithContext(ctx context.Context) EnvironmentStorageConfigurationFsxPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentStorageConfigurationFsx) *EnvironmentStorageConfigurationFsx {
		return &v
	}).(EnvironmentStorageConfigurationFsxPtrOutput)
}

// Id of the FSX filesystem to mount.
func (o EnvironmentStorageConfigurationFsxOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentStorageConfigurationFsx) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// Path to mount the filesystem on, must start with `/m2/mount/`.
func (o EnvironmentStorageConfigurationFsxOutput) MountPoint() pulumi.StringOutput {
	return o.ApplyT(func(v EnvironmentStorageConfigurationFsx) string { return v.MountPoint }).(pulumi.StringOutput)
}

type EnvironmentStorageConfigurationFsxPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentStorageConfigurationFsxPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentStorageConfigurationFsx)(nil)).Elem()
}

func (o EnvironmentStorageConfigurationFsxPtrOutput) ToEnvironmentStorageConfigurationFsxPtrOutput() EnvironmentStorageConfigurationFsxPtrOutput {
	return o
}

func (o EnvironmentStorageConfigurationFsxPtrOutput) ToEnvironmentStorageConfigurationFsxPtrOutputWithContext(ctx context.Context) EnvironmentStorageConfigurationFsxPtrOutput {
	return o
}

func (o EnvironmentStorageConfigurationFsxPtrOutput) Elem() EnvironmentStorageConfigurationFsxOutput {
	return o.ApplyT(func(v *EnvironmentStorageConfigurationFsx) EnvironmentStorageConfigurationFsx {
		if v != nil {
			return *v
		}
		var ret EnvironmentStorageConfigurationFsx
		return ret
	}).(EnvironmentStorageConfigurationFsxOutput)
}

// Id of the FSX filesystem to mount.
func (o EnvironmentStorageConfigurationFsxPtrOutput) FileSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentStorageConfigurationFsx) *string {
		if v == nil {
			return nil
		}
		return &v.FileSystemId
	}).(pulumi.StringPtrOutput)
}

// Path to mount the filesystem on, must start with `/m2/mount/`.
func (o EnvironmentStorageConfigurationFsxPtrOutput) MountPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentStorageConfigurationFsx) *string {
		if v == nil {
			return nil
		}
		return &v.MountPoint
	}).(pulumi.StringPtrOutput)
}

type EnvironmentTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// EnvironmentTimeoutsInput is an input type that accepts EnvironmentTimeoutsArgs and EnvironmentTimeoutsOutput values.
// You can construct a concrete instance of `EnvironmentTimeoutsInput` via:
//
//	EnvironmentTimeoutsArgs{...}
type EnvironmentTimeoutsInput interface {
	pulumi.Input

	ToEnvironmentTimeoutsOutput() EnvironmentTimeoutsOutput
	ToEnvironmentTimeoutsOutputWithContext(context.Context) EnvironmentTimeoutsOutput
}

type EnvironmentTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (EnvironmentTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentTimeouts)(nil)).Elem()
}

func (i EnvironmentTimeoutsArgs) ToEnvironmentTimeoutsOutput() EnvironmentTimeoutsOutput {
	return i.ToEnvironmentTimeoutsOutputWithContext(context.Background())
}

func (i EnvironmentTimeoutsArgs) ToEnvironmentTimeoutsOutputWithContext(ctx context.Context) EnvironmentTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentTimeoutsOutput)
}

func (i EnvironmentTimeoutsArgs) ToEnvironmentTimeoutsPtrOutput() EnvironmentTimeoutsPtrOutput {
	return i.ToEnvironmentTimeoutsPtrOutputWithContext(context.Background())
}

func (i EnvironmentTimeoutsArgs) ToEnvironmentTimeoutsPtrOutputWithContext(ctx context.Context) EnvironmentTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentTimeoutsOutput).ToEnvironmentTimeoutsPtrOutputWithContext(ctx)
}

// EnvironmentTimeoutsPtrInput is an input type that accepts EnvironmentTimeoutsArgs, EnvironmentTimeoutsPtr and EnvironmentTimeoutsPtrOutput values.
// You can construct a concrete instance of `EnvironmentTimeoutsPtrInput` via:
//
//	        EnvironmentTimeoutsArgs{...}
//
//	or:
//
//	        nil
type EnvironmentTimeoutsPtrInput interface {
	pulumi.Input

	ToEnvironmentTimeoutsPtrOutput() EnvironmentTimeoutsPtrOutput
	ToEnvironmentTimeoutsPtrOutputWithContext(context.Context) EnvironmentTimeoutsPtrOutput
}

type environmentTimeoutsPtrType EnvironmentTimeoutsArgs

func EnvironmentTimeoutsPtr(v *EnvironmentTimeoutsArgs) EnvironmentTimeoutsPtrInput {
	return (*environmentTimeoutsPtrType)(v)
}

func (*environmentTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentTimeouts)(nil)).Elem()
}

func (i *environmentTimeoutsPtrType) ToEnvironmentTimeoutsPtrOutput() EnvironmentTimeoutsPtrOutput {
	return i.ToEnvironmentTimeoutsPtrOutputWithContext(context.Background())
}

func (i *environmentTimeoutsPtrType) ToEnvironmentTimeoutsPtrOutputWithContext(ctx context.Context) EnvironmentTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnvironmentTimeoutsPtrOutput)
}

type EnvironmentTimeoutsOutput struct{ *pulumi.OutputState }

func (EnvironmentTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EnvironmentTimeouts)(nil)).Elem()
}

func (o EnvironmentTimeoutsOutput) ToEnvironmentTimeoutsOutput() EnvironmentTimeoutsOutput {
	return o
}

func (o EnvironmentTimeoutsOutput) ToEnvironmentTimeoutsOutputWithContext(ctx context.Context) EnvironmentTimeoutsOutput {
	return o
}

func (o EnvironmentTimeoutsOutput) ToEnvironmentTimeoutsPtrOutput() EnvironmentTimeoutsPtrOutput {
	return o.ToEnvironmentTimeoutsPtrOutputWithContext(context.Background())
}

func (o EnvironmentTimeoutsOutput) ToEnvironmentTimeoutsPtrOutputWithContext(ctx context.Context) EnvironmentTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v EnvironmentTimeouts) *EnvironmentTimeouts {
		return &v
	}).(EnvironmentTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o EnvironmentTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o EnvironmentTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o EnvironmentTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EnvironmentTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type EnvironmentTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (EnvironmentTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnvironmentTimeouts)(nil)).Elem()
}

func (o EnvironmentTimeoutsPtrOutput) ToEnvironmentTimeoutsPtrOutput() EnvironmentTimeoutsPtrOutput {
	return o
}

func (o EnvironmentTimeoutsPtrOutput) ToEnvironmentTimeoutsPtrOutputWithContext(ctx context.Context) EnvironmentTimeoutsPtrOutput {
	return o
}

func (o EnvironmentTimeoutsPtrOutput) Elem() EnvironmentTimeoutsOutput {
	return o.ApplyT(func(v *EnvironmentTimeouts) EnvironmentTimeouts {
		if v != nil {
			return *v
		}
		var ret EnvironmentTimeouts
		return ret
	}).(EnvironmentTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o EnvironmentTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o EnvironmentTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o EnvironmentTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *EnvironmentTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationDefinitionInput)(nil)).Elem(), ApplicationDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationDefinitionPtrInput)(nil)).Elem(), ApplicationDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationTimeoutsInput)(nil)).Elem(), ApplicationTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationTimeoutsPtrInput)(nil)).Elem(), ApplicationTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentTimeoutsInput)(nil)).Elem(), DeploymentTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeploymentTimeoutsPtrInput)(nil)).Elem(), DeploymentTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentHighAvailabilityConfigInput)(nil)).Elem(), EnvironmentHighAvailabilityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentHighAvailabilityConfigPtrInput)(nil)).Elem(), EnvironmentHighAvailabilityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentStorageConfigurationInput)(nil)).Elem(), EnvironmentStorageConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentStorageConfigurationPtrInput)(nil)).Elem(), EnvironmentStorageConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentStorageConfigurationEfsInput)(nil)).Elem(), EnvironmentStorageConfigurationEfsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentStorageConfigurationEfsPtrInput)(nil)).Elem(), EnvironmentStorageConfigurationEfsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentStorageConfigurationFsxInput)(nil)).Elem(), EnvironmentStorageConfigurationFsxArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentStorageConfigurationFsxPtrInput)(nil)).Elem(), EnvironmentStorageConfigurationFsxArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentTimeoutsInput)(nil)).Elem(), EnvironmentTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnvironmentTimeoutsPtrInput)(nil)).Elem(), EnvironmentTimeoutsArgs{})
	pulumi.RegisterOutputType(ApplicationDefinitionOutput{})
	pulumi.RegisterOutputType(ApplicationDefinitionPtrOutput{})
	pulumi.RegisterOutputType(ApplicationTimeoutsOutput{})
	pulumi.RegisterOutputType(ApplicationTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(DeploymentTimeoutsOutput{})
	pulumi.RegisterOutputType(DeploymentTimeoutsPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentHighAvailabilityConfigOutput{})
	pulumi.RegisterOutputType(EnvironmentHighAvailabilityConfigPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentStorageConfigurationOutput{})
	pulumi.RegisterOutputType(EnvironmentStorageConfigurationPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentStorageConfigurationEfsOutput{})
	pulumi.RegisterOutputType(EnvironmentStorageConfigurationEfsPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentStorageConfigurationFsxOutput{})
	pulumi.RegisterOutputType(EnvironmentStorageConfigurationFsxPtrOutput{})
	pulumi.RegisterOutputType(EnvironmentTimeoutsOutput{})
	pulumi.RegisterOutputType(EnvironmentTimeoutsPtrOutput{})
}
