// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sns

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PlatformApplication struct {
	pulumi.CustomResourceState

	ApplePlatformBundleId        pulumi.StringPtrOutput `pulumi:"applePlatformBundleId"`
	ApplePlatformTeamId          pulumi.StringPtrOutput `pulumi:"applePlatformTeamId"`
	Arn                          pulumi.StringOutput    `pulumi:"arn"`
	EventDeliveryFailureTopicArn pulumi.StringPtrOutput `pulumi:"eventDeliveryFailureTopicArn"`
	EventEndpointCreatedTopicArn pulumi.StringPtrOutput `pulumi:"eventEndpointCreatedTopicArn"`
	EventEndpointDeletedTopicArn pulumi.StringPtrOutput `pulumi:"eventEndpointDeletedTopicArn"`
	EventEndpointUpdatedTopicArn pulumi.StringPtrOutput `pulumi:"eventEndpointUpdatedTopicArn"`
	FailureFeedbackRoleArn       pulumi.StringPtrOutput `pulumi:"failureFeedbackRoleArn"`
	Name                         pulumi.StringOutput    `pulumi:"name"`
	Platform                     pulumi.StringOutput    `pulumi:"platform"`
	PlatformCredential           pulumi.StringOutput    `pulumi:"platformCredential"`
	PlatformPrincipal            pulumi.StringPtrOutput `pulumi:"platformPrincipal"`
	SuccessFeedbackRoleArn       pulumi.StringPtrOutput `pulumi:"successFeedbackRoleArn"`
	SuccessFeedbackSampleRate    pulumi.StringPtrOutput `pulumi:"successFeedbackSampleRate"`
}

// NewPlatformApplication registers a new resource with the given unique name, arguments, and options.
func NewPlatformApplication(ctx *pulumi.Context,
	name string, args *PlatformApplicationArgs, opts ...pulumi.ResourceOption) (*PlatformApplication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Platform == nil {
		return nil, errors.New("invalid value for required argument 'Platform'")
	}
	if args.PlatformCredential == nil {
		return nil, errors.New("invalid value for required argument 'PlatformCredential'")
	}
	if args.PlatformCredential != nil {
		args.PlatformCredential = pulumi.ToSecret(args.PlatformCredential).(pulumi.StringInput)
	}
	if args.PlatformPrincipal != nil {
		args.PlatformPrincipal = pulumi.ToSecret(args.PlatformPrincipal).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"platformCredential",
		"platformPrincipal",
	})
	opts = append(opts, secrets)
	var resource PlatformApplication
	err := ctx.RegisterResource("aws:sns/platformApplication:PlatformApplication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPlatformApplication gets an existing PlatformApplication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPlatformApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PlatformApplicationState, opts ...pulumi.ResourceOption) (*PlatformApplication, error) {
	var resource PlatformApplication
	err := ctx.ReadResource("aws:sns/platformApplication:PlatformApplication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PlatformApplication resources.
type platformApplicationState struct {
	ApplePlatformBundleId        *string `pulumi:"applePlatformBundleId"`
	ApplePlatformTeamId          *string `pulumi:"applePlatformTeamId"`
	Arn                          *string `pulumi:"arn"`
	EventDeliveryFailureTopicArn *string `pulumi:"eventDeliveryFailureTopicArn"`
	EventEndpointCreatedTopicArn *string `pulumi:"eventEndpointCreatedTopicArn"`
	EventEndpointDeletedTopicArn *string `pulumi:"eventEndpointDeletedTopicArn"`
	EventEndpointUpdatedTopicArn *string `pulumi:"eventEndpointUpdatedTopicArn"`
	FailureFeedbackRoleArn       *string `pulumi:"failureFeedbackRoleArn"`
	Name                         *string `pulumi:"name"`
	Platform                     *string `pulumi:"platform"`
	PlatformCredential           *string `pulumi:"platformCredential"`
	PlatformPrincipal            *string `pulumi:"platformPrincipal"`
	SuccessFeedbackRoleArn       *string `pulumi:"successFeedbackRoleArn"`
	SuccessFeedbackSampleRate    *string `pulumi:"successFeedbackSampleRate"`
}

type PlatformApplicationState struct {
	ApplePlatformBundleId        pulumi.StringPtrInput
	ApplePlatformTeamId          pulumi.StringPtrInput
	Arn                          pulumi.StringPtrInput
	EventDeliveryFailureTopicArn pulumi.StringPtrInput
	EventEndpointCreatedTopicArn pulumi.StringPtrInput
	EventEndpointDeletedTopicArn pulumi.StringPtrInput
	EventEndpointUpdatedTopicArn pulumi.StringPtrInput
	FailureFeedbackRoleArn       pulumi.StringPtrInput
	Name                         pulumi.StringPtrInput
	Platform                     pulumi.StringPtrInput
	PlatformCredential           pulumi.StringPtrInput
	PlatformPrincipal            pulumi.StringPtrInput
	SuccessFeedbackRoleArn       pulumi.StringPtrInput
	SuccessFeedbackSampleRate    pulumi.StringPtrInput
}

func (PlatformApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*platformApplicationState)(nil)).Elem()
}

type platformApplicationArgs struct {
	ApplePlatformBundleId        *string `pulumi:"applePlatformBundleId"`
	ApplePlatformTeamId          *string `pulumi:"applePlatformTeamId"`
	EventDeliveryFailureTopicArn *string `pulumi:"eventDeliveryFailureTopicArn"`
	EventEndpointCreatedTopicArn *string `pulumi:"eventEndpointCreatedTopicArn"`
	EventEndpointDeletedTopicArn *string `pulumi:"eventEndpointDeletedTopicArn"`
	EventEndpointUpdatedTopicArn *string `pulumi:"eventEndpointUpdatedTopicArn"`
	FailureFeedbackRoleArn       *string `pulumi:"failureFeedbackRoleArn"`
	Name                         *string `pulumi:"name"`
	Platform                     string  `pulumi:"platform"`
	PlatformCredential           string  `pulumi:"platformCredential"`
	PlatformPrincipal            *string `pulumi:"platformPrincipal"`
	SuccessFeedbackRoleArn       *string `pulumi:"successFeedbackRoleArn"`
	SuccessFeedbackSampleRate    *string `pulumi:"successFeedbackSampleRate"`
}

// The set of arguments for constructing a PlatformApplication resource.
type PlatformApplicationArgs struct {
	ApplePlatformBundleId        pulumi.StringPtrInput
	ApplePlatformTeamId          pulumi.StringPtrInput
	EventDeliveryFailureTopicArn pulumi.StringPtrInput
	EventEndpointCreatedTopicArn pulumi.StringPtrInput
	EventEndpointDeletedTopicArn pulumi.StringPtrInput
	EventEndpointUpdatedTopicArn pulumi.StringPtrInput
	FailureFeedbackRoleArn       pulumi.StringPtrInput
	Name                         pulumi.StringPtrInput
	Platform                     pulumi.StringInput
	PlatformCredential           pulumi.StringInput
	PlatformPrincipal            pulumi.StringPtrInput
	SuccessFeedbackRoleArn       pulumi.StringPtrInput
	SuccessFeedbackSampleRate    pulumi.StringPtrInput
}

func (PlatformApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*platformApplicationArgs)(nil)).Elem()
}

type PlatformApplicationInput interface {
	pulumi.Input

	ToPlatformApplicationOutput() PlatformApplicationOutput
	ToPlatformApplicationOutputWithContext(ctx context.Context) PlatformApplicationOutput
}

func (*PlatformApplication) ElementType() reflect.Type {
	return reflect.TypeOf((**PlatformApplication)(nil)).Elem()
}

func (i *PlatformApplication) ToPlatformApplicationOutput() PlatformApplicationOutput {
	return i.ToPlatformApplicationOutputWithContext(context.Background())
}

func (i *PlatformApplication) ToPlatformApplicationOutputWithContext(ctx context.Context) PlatformApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformApplicationOutput)
}

// PlatformApplicationArrayInput is an input type that accepts PlatformApplicationArray and PlatformApplicationArrayOutput values.
// You can construct a concrete instance of `PlatformApplicationArrayInput` via:
//
//	PlatformApplicationArray{ PlatformApplicationArgs{...} }
type PlatformApplicationArrayInput interface {
	pulumi.Input

	ToPlatformApplicationArrayOutput() PlatformApplicationArrayOutput
	ToPlatformApplicationArrayOutputWithContext(context.Context) PlatformApplicationArrayOutput
}

type PlatformApplicationArray []PlatformApplicationInput

func (PlatformApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PlatformApplication)(nil)).Elem()
}

func (i PlatformApplicationArray) ToPlatformApplicationArrayOutput() PlatformApplicationArrayOutput {
	return i.ToPlatformApplicationArrayOutputWithContext(context.Background())
}

func (i PlatformApplicationArray) ToPlatformApplicationArrayOutputWithContext(ctx context.Context) PlatformApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformApplicationArrayOutput)
}

// PlatformApplicationMapInput is an input type that accepts PlatformApplicationMap and PlatformApplicationMapOutput values.
// You can construct a concrete instance of `PlatformApplicationMapInput` via:
//
//	PlatformApplicationMap{ "key": PlatformApplicationArgs{...} }
type PlatformApplicationMapInput interface {
	pulumi.Input

	ToPlatformApplicationMapOutput() PlatformApplicationMapOutput
	ToPlatformApplicationMapOutputWithContext(context.Context) PlatformApplicationMapOutput
}

type PlatformApplicationMap map[string]PlatformApplicationInput

func (PlatformApplicationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PlatformApplication)(nil)).Elem()
}

func (i PlatformApplicationMap) ToPlatformApplicationMapOutput() PlatformApplicationMapOutput {
	return i.ToPlatformApplicationMapOutputWithContext(context.Background())
}

func (i PlatformApplicationMap) ToPlatformApplicationMapOutputWithContext(ctx context.Context) PlatformApplicationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformApplicationMapOutput)
}

type PlatformApplicationOutput struct{ *pulumi.OutputState }

func (PlatformApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlatformApplication)(nil)).Elem()
}

func (o PlatformApplicationOutput) ToPlatformApplicationOutput() PlatformApplicationOutput {
	return o
}

func (o PlatformApplicationOutput) ToPlatformApplicationOutputWithContext(ctx context.Context) PlatformApplicationOutput {
	return o
}

func (o PlatformApplicationOutput) ApplePlatformBundleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringPtrOutput { return v.ApplePlatformBundleId }).(pulumi.StringPtrOutput)
}

func (o PlatformApplicationOutput) ApplePlatformTeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringPtrOutput { return v.ApplePlatformTeamId }).(pulumi.StringPtrOutput)
}

func (o PlatformApplicationOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o PlatformApplicationOutput) EventDeliveryFailureTopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringPtrOutput { return v.EventDeliveryFailureTopicArn }).(pulumi.StringPtrOutput)
}

func (o PlatformApplicationOutput) EventEndpointCreatedTopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringPtrOutput { return v.EventEndpointCreatedTopicArn }).(pulumi.StringPtrOutput)
}

func (o PlatformApplicationOutput) EventEndpointDeletedTopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringPtrOutput { return v.EventEndpointDeletedTopicArn }).(pulumi.StringPtrOutput)
}

func (o PlatformApplicationOutput) EventEndpointUpdatedTopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringPtrOutput { return v.EventEndpointUpdatedTopicArn }).(pulumi.StringPtrOutput)
}

func (o PlatformApplicationOutput) FailureFeedbackRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringPtrOutput { return v.FailureFeedbackRoleArn }).(pulumi.StringPtrOutput)
}

func (o PlatformApplicationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o PlatformApplicationOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringOutput { return v.Platform }).(pulumi.StringOutput)
}

func (o PlatformApplicationOutput) PlatformCredential() pulumi.StringOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringOutput { return v.PlatformCredential }).(pulumi.StringOutput)
}

func (o PlatformApplicationOutput) PlatformPrincipal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringPtrOutput { return v.PlatformPrincipal }).(pulumi.StringPtrOutput)
}

func (o PlatformApplicationOutput) SuccessFeedbackRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringPtrOutput { return v.SuccessFeedbackRoleArn }).(pulumi.StringPtrOutput)
}

func (o PlatformApplicationOutput) SuccessFeedbackSampleRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringPtrOutput { return v.SuccessFeedbackSampleRate }).(pulumi.StringPtrOutput)
}

type PlatformApplicationArrayOutput struct{ *pulumi.OutputState }

func (PlatformApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PlatformApplication)(nil)).Elem()
}

func (o PlatformApplicationArrayOutput) ToPlatformApplicationArrayOutput() PlatformApplicationArrayOutput {
	return o
}

func (o PlatformApplicationArrayOutput) ToPlatformApplicationArrayOutputWithContext(ctx context.Context) PlatformApplicationArrayOutput {
	return o
}

func (o PlatformApplicationArrayOutput) Index(i pulumi.IntInput) PlatformApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PlatformApplication {
		return vs[0].([]*PlatformApplication)[vs[1].(int)]
	}).(PlatformApplicationOutput)
}

type PlatformApplicationMapOutput struct{ *pulumi.OutputState }

func (PlatformApplicationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PlatformApplication)(nil)).Elem()
}

func (o PlatformApplicationMapOutput) ToPlatformApplicationMapOutput() PlatformApplicationMapOutput {
	return o
}

func (o PlatformApplicationMapOutput) ToPlatformApplicationMapOutputWithContext(ctx context.Context) PlatformApplicationMapOutput {
	return o
}

func (o PlatformApplicationMapOutput) MapIndex(k pulumi.StringInput) PlatformApplicationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PlatformApplication {
		return vs[0].(map[string]*PlatformApplication)[vs[1].(string)]
	}).(PlatformApplicationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PlatformApplicationInput)(nil)).Elem(), &PlatformApplication{})
	pulumi.RegisterInputType(reflect.TypeOf((*PlatformApplicationArrayInput)(nil)).Elem(), PlatformApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PlatformApplicationMapInput)(nil)).Elem(), PlatformApplicationMap{})
	pulumi.RegisterOutputType(PlatformApplicationOutput{})
	pulumi.RegisterOutputType(PlatformApplicationArrayOutput{})
	pulumi.RegisterOutputType(PlatformApplicationMapOutput{})
}
