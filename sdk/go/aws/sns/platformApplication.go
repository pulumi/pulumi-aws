// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sns

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an SNS platform application resource
//
// ## Example Usage
// ### Apple Push Notification Service (APNS) using certificate-based authentication
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/sns"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sns.NewPlatformApplication(ctx, "apnsApplication", &sns.PlatformApplicationArgs{
//				Platform:           pulumi.String("APNS"),
//				PlatformCredential: pulumi.String("<APNS PRIVATE KEY>"),
//				PlatformPrincipal:  pulumi.String("<APNS CERTIFICATE>"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Apple Push Notification Service (APNS) using token-based authentication
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/sns"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sns.NewPlatformApplication(ctx, "apnsApplication", &sns.PlatformApplicationArgs{
//				ApplePlatformBundleId: pulumi.String("<APPLE BUNDLE ID>"),
//				ApplePlatformTeamId:   pulumi.String("<APPLE TEAM ID>"),
//				Platform:              pulumi.String("APNS"),
//				PlatformCredential:    pulumi.String("<APNS SIGNING KEY>"),
//				PlatformPrincipal:     pulumi.String("<APNS SIGNING KEY ID>"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Google Cloud Messaging (GCM)
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/sns"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := sns.NewPlatformApplication(ctx, "gcmApplication", &sns.PlatformApplicationArgs{
//				Platform:           pulumi.String("GCM"),
//				PlatformCredential: pulumi.String("<GCM API KEY>"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import SNS platform applications using the ARN. For example:
//
// ```sh
//
//	$ pulumi import aws:sns/platformApplication:PlatformApplication gcm_application arn:aws:sns:us-west-2:0123456789012:app/GCM/gcm_application
//
// ```
type PlatformApplication struct {
	pulumi.CustomResourceState

	// The bundle identifier that's assigned to your iOS app. May only include alphanumeric characters, hyphens (-), and periods (.).
	ApplePlatformBundleId pulumi.StringPtrOutput `pulumi:"applePlatformBundleId"`
	// The identifier that's assigned to your Apple developer account team. Must be 10 alphanumeric characters.
	ApplePlatformTeamId pulumi.StringPtrOutput `pulumi:"applePlatformTeamId"`
	// The ARN of the SNS platform application
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The ARN of the SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure.
	EventDeliveryFailureTopicArn pulumi.StringPtrOutput `pulumi:"eventDeliveryFailureTopicArn"`
	// The ARN of the SNS Topic triggered when a new platform endpoint is added to your platform application.
	EventEndpointCreatedTopicArn pulumi.StringPtrOutput `pulumi:"eventEndpointCreatedTopicArn"`
	// The ARN of the SNS Topic triggered when an existing platform endpoint is deleted from your platform application.
	EventEndpointDeletedTopicArn pulumi.StringPtrOutput `pulumi:"eventEndpointDeletedTopicArn"`
	// The ARN of the SNS Topic triggered when an existing platform endpoint is changed from your platform application.
	EventEndpointUpdatedTopicArn pulumi.StringPtrOutput `pulumi:"eventEndpointUpdatedTopicArn"`
	// The IAM role ARN permitted to receive failure feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	FailureFeedbackRoleArn pulumi.StringPtrOutput `pulumi:"failureFeedbackRoleArn"`
	// The friendly name for the SNS platform application
	Name pulumi.StringOutput `pulumi:"name"`
	// The platform that the app is registered with. See [Platform](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for supported platforms.
	Platform pulumi.StringOutput `pulumi:"platform"`
	// Application Platform credential. See [Credential](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for type of credential required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
	PlatformCredential pulumi.StringOutput `pulumi:"platformCredential"`
	// Application Platform principal. See [Principal](http://docs.aws.amazon.com/sns/latest/api/API_CreatePlatformApplication.html) for type of principal required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
	PlatformPrincipal pulumi.StringPtrOutput `pulumi:"platformPrincipal"`
	// The IAM role ARN permitted to receive success feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	SuccessFeedbackRoleArn pulumi.StringPtrOutput `pulumi:"successFeedbackRoleArn"`
	// The sample rate percentage (0-100) of successfully delivered messages.
	//
	// The following attributes are needed only when using APNS token credentials:
	SuccessFeedbackSampleRate pulumi.StringPtrOutput `pulumi:"successFeedbackSampleRate"`
}

// NewPlatformApplication registers a new resource with the given unique name, arguments, and options.
func NewPlatformApplication(ctx *pulumi.Context,
	name string, args *PlatformApplicationArgs, opts ...pulumi.ResourceOption) (*PlatformApplication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Platform == nil {
		return nil, errors.New("invalid value for required argument 'Platform'")
	}
	if args.PlatformCredential == nil {
		return nil, errors.New("invalid value for required argument 'PlatformCredential'")
	}
	if args.PlatformCredential != nil {
		args.PlatformCredential = pulumi.ToSecret(args.PlatformCredential).(pulumi.StringInput)
	}
	if args.PlatformPrincipal != nil {
		args.PlatformPrincipal = pulumi.ToSecret(args.PlatformPrincipal).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"platformCredential",
		"platformPrincipal",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource PlatformApplication
	err := ctx.RegisterResource("aws:sns/platformApplication:PlatformApplication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPlatformApplication gets an existing PlatformApplication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPlatformApplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PlatformApplicationState, opts ...pulumi.ResourceOption) (*PlatformApplication, error) {
	var resource PlatformApplication
	err := ctx.ReadResource("aws:sns/platformApplication:PlatformApplication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PlatformApplication resources.
type platformApplicationState struct {
	// The bundle identifier that's assigned to your iOS app. May only include alphanumeric characters, hyphens (-), and periods (.).
	ApplePlatformBundleId *string `pulumi:"applePlatformBundleId"`
	// The identifier that's assigned to your Apple developer account team. Must be 10 alphanumeric characters.
	ApplePlatformTeamId *string `pulumi:"applePlatformTeamId"`
	// The ARN of the SNS platform application
	Arn *string `pulumi:"arn"`
	// The ARN of the SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure.
	EventDeliveryFailureTopicArn *string `pulumi:"eventDeliveryFailureTopicArn"`
	// The ARN of the SNS Topic triggered when a new platform endpoint is added to your platform application.
	EventEndpointCreatedTopicArn *string `pulumi:"eventEndpointCreatedTopicArn"`
	// The ARN of the SNS Topic triggered when an existing platform endpoint is deleted from your platform application.
	EventEndpointDeletedTopicArn *string `pulumi:"eventEndpointDeletedTopicArn"`
	// The ARN of the SNS Topic triggered when an existing platform endpoint is changed from your platform application.
	EventEndpointUpdatedTopicArn *string `pulumi:"eventEndpointUpdatedTopicArn"`
	// The IAM role ARN permitted to receive failure feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	FailureFeedbackRoleArn *string `pulumi:"failureFeedbackRoleArn"`
	// The friendly name for the SNS platform application
	Name *string `pulumi:"name"`
	// The platform that the app is registered with. See [Platform](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for supported platforms.
	Platform *string `pulumi:"platform"`
	// Application Platform credential. See [Credential](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for type of credential required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
	PlatformCredential *string `pulumi:"platformCredential"`
	// Application Platform principal. See [Principal](http://docs.aws.amazon.com/sns/latest/api/API_CreatePlatformApplication.html) for type of principal required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
	PlatformPrincipal *string `pulumi:"platformPrincipal"`
	// The IAM role ARN permitted to receive success feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	SuccessFeedbackRoleArn *string `pulumi:"successFeedbackRoleArn"`
	// The sample rate percentage (0-100) of successfully delivered messages.
	//
	// The following attributes are needed only when using APNS token credentials:
	SuccessFeedbackSampleRate *string `pulumi:"successFeedbackSampleRate"`
}

type PlatformApplicationState struct {
	// The bundle identifier that's assigned to your iOS app. May only include alphanumeric characters, hyphens (-), and periods (.).
	ApplePlatformBundleId pulumi.StringPtrInput
	// The identifier that's assigned to your Apple developer account team. Must be 10 alphanumeric characters.
	ApplePlatformTeamId pulumi.StringPtrInput
	// The ARN of the SNS platform application
	Arn pulumi.StringPtrInput
	// The ARN of the SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure.
	EventDeliveryFailureTopicArn pulumi.StringPtrInput
	// The ARN of the SNS Topic triggered when a new platform endpoint is added to your platform application.
	EventEndpointCreatedTopicArn pulumi.StringPtrInput
	// The ARN of the SNS Topic triggered when an existing platform endpoint is deleted from your platform application.
	EventEndpointDeletedTopicArn pulumi.StringPtrInput
	// The ARN of the SNS Topic triggered when an existing platform endpoint is changed from your platform application.
	EventEndpointUpdatedTopicArn pulumi.StringPtrInput
	// The IAM role ARN permitted to receive failure feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	FailureFeedbackRoleArn pulumi.StringPtrInput
	// The friendly name for the SNS platform application
	Name pulumi.StringPtrInput
	// The platform that the app is registered with. See [Platform](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for supported platforms.
	Platform pulumi.StringPtrInput
	// Application Platform credential. See [Credential](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for type of credential required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
	PlatformCredential pulumi.StringPtrInput
	// Application Platform principal. See [Principal](http://docs.aws.amazon.com/sns/latest/api/API_CreatePlatformApplication.html) for type of principal required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
	PlatformPrincipal pulumi.StringPtrInput
	// The IAM role ARN permitted to receive success feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	SuccessFeedbackRoleArn pulumi.StringPtrInput
	// The sample rate percentage (0-100) of successfully delivered messages.
	//
	// The following attributes are needed only when using APNS token credentials:
	SuccessFeedbackSampleRate pulumi.StringPtrInput
}

func (PlatformApplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*platformApplicationState)(nil)).Elem()
}

type platformApplicationArgs struct {
	// The bundle identifier that's assigned to your iOS app. May only include alphanumeric characters, hyphens (-), and periods (.).
	ApplePlatformBundleId *string `pulumi:"applePlatformBundleId"`
	// The identifier that's assigned to your Apple developer account team. Must be 10 alphanumeric characters.
	ApplePlatformTeamId *string `pulumi:"applePlatformTeamId"`
	// The ARN of the SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure.
	EventDeliveryFailureTopicArn *string `pulumi:"eventDeliveryFailureTopicArn"`
	// The ARN of the SNS Topic triggered when a new platform endpoint is added to your platform application.
	EventEndpointCreatedTopicArn *string `pulumi:"eventEndpointCreatedTopicArn"`
	// The ARN of the SNS Topic triggered when an existing platform endpoint is deleted from your platform application.
	EventEndpointDeletedTopicArn *string `pulumi:"eventEndpointDeletedTopicArn"`
	// The ARN of the SNS Topic triggered when an existing platform endpoint is changed from your platform application.
	EventEndpointUpdatedTopicArn *string `pulumi:"eventEndpointUpdatedTopicArn"`
	// The IAM role ARN permitted to receive failure feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	FailureFeedbackRoleArn *string `pulumi:"failureFeedbackRoleArn"`
	// The friendly name for the SNS platform application
	Name *string `pulumi:"name"`
	// The platform that the app is registered with. See [Platform](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for supported platforms.
	Platform string `pulumi:"platform"`
	// Application Platform credential. See [Credential](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for type of credential required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
	PlatformCredential string `pulumi:"platformCredential"`
	// Application Platform principal. See [Principal](http://docs.aws.amazon.com/sns/latest/api/API_CreatePlatformApplication.html) for type of principal required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
	PlatformPrincipal *string `pulumi:"platformPrincipal"`
	// The IAM role ARN permitted to receive success feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	SuccessFeedbackRoleArn *string `pulumi:"successFeedbackRoleArn"`
	// The sample rate percentage (0-100) of successfully delivered messages.
	//
	// The following attributes are needed only when using APNS token credentials:
	SuccessFeedbackSampleRate *string `pulumi:"successFeedbackSampleRate"`
}

// The set of arguments for constructing a PlatformApplication resource.
type PlatformApplicationArgs struct {
	// The bundle identifier that's assigned to your iOS app. May only include alphanumeric characters, hyphens (-), and periods (.).
	ApplePlatformBundleId pulumi.StringPtrInput
	// The identifier that's assigned to your Apple developer account team. Must be 10 alphanumeric characters.
	ApplePlatformTeamId pulumi.StringPtrInput
	// The ARN of the SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure.
	EventDeliveryFailureTopicArn pulumi.StringPtrInput
	// The ARN of the SNS Topic triggered when a new platform endpoint is added to your platform application.
	EventEndpointCreatedTopicArn pulumi.StringPtrInput
	// The ARN of the SNS Topic triggered when an existing platform endpoint is deleted from your platform application.
	EventEndpointDeletedTopicArn pulumi.StringPtrInput
	// The ARN of the SNS Topic triggered when an existing platform endpoint is changed from your platform application.
	EventEndpointUpdatedTopicArn pulumi.StringPtrInput
	// The IAM role ARN permitted to receive failure feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	FailureFeedbackRoleArn pulumi.StringPtrInput
	// The friendly name for the SNS platform application
	Name pulumi.StringPtrInput
	// The platform that the app is registered with. See [Platform](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for supported platforms.
	Platform pulumi.StringInput
	// Application Platform credential. See [Credential](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for type of credential required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
	PlatformCredential pulumi.StringInput
	// Application Platform principal. See [Principal](http://docs.aws.amazon.com/sns/latest/api/API_CreatePlatformApplication.html) for type of principal required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
	PlatformPrincipal pulumi.StringPtrInput
	// The IAM role ARN permitted to receive success feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
	SuccessFeedbackRoleArn pulumi.StringPtrInput
	// The sample rate percentage (0-100) of successfully delivered messages.
	//
	// The following attributes are needed only when using APNS token credentials:
	SuccessFeedbackSampleRate pulumi.StringPtrInput
}

func (PlatformApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*platformApplicationArgs)(nil)).Elem()
}

type PlatformApplicationInput interface {
	pulumi.Input

	ToPlatformApplicationOutput() PlatformApplicationOutput
	ToPlatformApplicationOutputWithContext(ctx context.Context) PlatformApplicationOutput
}

func (*PlatformApplication) ElementType() reflect.Type {
	return reflect.TypeOf((**PlatformApplication)(nil)).Elem()
}

func (i *PlatformApplication) ToPlatformApplicationOutput() PlatformApplicationOutput {
	return i.ToPlatformApplicationOutputWithContext(context.Background())
}

func (i *PlatformApplication) ToPlatformApplicationOutputWithContext(ctx context.Context) PlatformApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformApplicationOutput)
}

// PlatformApplicationArrayInput is an input type that accepts PlatformApplicationArray and PlatformApplicationArrayOutput values.
// You can construct a concrete instance of `PlatformApplicationArrayInput` via:
//
//	PlatformApplicationArray{ PlatformApplicationArgs{...} }
type PlatformApplicationArrayInput interface {
	pulumi.Input

	ToPlatformApplicationArrayOutput() PlatformApplicationArrayOutput
	ToPlatformApplicationArrayOutputWithContext(context.Context) PlatformApplicationArrayOutput
}

type PlatformApplicationArray []PlatformApplicationInput

func (PlatformApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PlatformApplication)(nil)).Elem()
}

func (i PlatformApplicationArray) ToPlatformApplicationArrayOutput() PlatformApplicationArrayOutput {
	return i.ToPlatformApplicationArrayOutputWithContext(context.Background())
}

func (i PlatformApplicationArray) ToPlatformApplicationArrayOutputWithContext(ctx context.Context) PlatformApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformApplicationArrayOutput)
}

// PlatformApplicationMapInput is an input type that accepts PlatformApplicationMap and PlatformApplicationMapOutput values.
// You can construct a concrete instance of `PlatformApplicationMapInput` via:
//
//	PlatformApplicationMap{ "key": PlatformApplicationArgs{...} }
type PlatformApplicationMapInput interface {
	pulumi.Input

	ToPlatformApplicationMapOutput() PlatformApplicationMapOutput
	ToPlatformApplicationMapOutputWithContext(context.Context) PlatformApplicationMapOutput
}

type PlatformApplicationMap map[string]PlatformApplicationInput

func (PlatformApplicationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PlatformApplication)(nil)).Elem()
}

func (i PlatformApplicationMap) ToPlatformApplicationMapOutput() PlatformApplicationMapOutput {
	return i.ToPlatformApplicationMapOutputWithContext(context.Background())
}

func (i PlatformApplicationMap) ToPlatformApplicationMapOutputWithContext(ctx context.Context) PlatformApplicationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PlatformApplicationMapOutput)
}

type PlatformApplicationOutput struct{ *pulumi.OutputState }

func (PlatformApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PlatformApplication)(nil)).Elem()
}

func (o PlatformApplicationOutput) ToPlatformApplicationOutput() PlatformApplicationOutput {
	return o
}

func (o PlatformApplicationOutput) ToPlatformApplicationOutputWithContext(ctx context.Context) PlatformApplicationOutput {
	return o
}

// The bundle identifier that's assigned to your iOS app. May only include alphanumeric characters, hyphens (-), and periods (.).
func (o PlatformApplicationOutput) ApplePlatformBundleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringPtrOutput { return v.ApplePlatformBundleId }).(pulumi.StringPtrOutput)
}

// The identifier that's assigned to your Apple developer account team. Must be 10 alphanumeric characters.
func (o PlatformApplicationOutput) ApplePlatformTeamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringPtrOutput { return v.ApplePlatformTeamId }).(pulumi.StringPtrOutput)
}

// The ARN of the SNS platform application
func (o PlatformApplicationOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The ARN of the SNS Topic triggered when a delivery to any of the platform endpoints associated with your platform application encounters a permanent failure.
func (o PlatformApplicationOutput) EventDeliveryFailureTopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringPtrOutput { return v.EventDeliveryFailureTopicArn }).(pulumi.StringPtrOutput)
}

// The ARN of the SNS Topic triggered when a new platform endpoint is added to your platform application.
func (o PlatformApplicationOutput) EventEndpointCreatedTopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringPtrOutput { return v.EventEndpointCreatedTopicArn }).(pulumi.StringPtrOutput)
}

// The ARN of the SNS Topic triggered when an existing platform endpoint is deleted from your platform application.
func (o PlatformApplicationOutput) EventEndpointDeletedTopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringPtrOutput { return v.EventEndpointDeletedTopicArn }).(pulumi.StringPtrOutput)
}

// The ARN of the SNS Topic triggered when an existing platform endpoint is changed from your platform application.
func (o PlatformApplicationOutput) EventEndpointUpdatedTopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringPtrOutput { return v.EventEndpointUpdatedTopicArn }).(pulumi.StringPtrOutput)
}

// The IAM role ARN permitted to receive failure feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
func (o PlatformApplicationOutput) FailureFeedbackRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringPtrOutput { return v.FailureFeedbackRoleArn }).(pulumi.StringPtrOutput)
}

// The friendly name for the SNS platform application
func (o PlatformApplicationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The platform that the app is registered with. See [Platform](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for supported platforms.
func (o PlatformApplicationOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringOutput { return v.Platform }).(pulumi.StringOutput)
}

// Application Platform credential. See [Credential](http://docs.aws.amazon.com/sns/latest/dg/mobile-push-send-register.html) for type of credential required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
func (o PlatformApplicationOutput) PlatformCredential() pulumi.StringOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringOutput { return v.PlatformCredential }).(pulumi.StringOutput)
}

// Application Platform principal. See [Principal](http://docs.aws.amazon.com/sns/latest/api/API_CreatePlatformApplication.html) for type of principal required for platform. The value of this attribute when stored into the state is only a hash of the real value, so therefore it is not practical to use this as an attribute for other resources.
func (o PlatformApplicationOutput) PlatformPrincipal() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringPtrOutput { return v.PlatformPrincipal }).(pulumi.StringPtrOutput)
}

// The IAM role ARN permitted to receive success feedback for this application and give SNS write access to use CloudWatch logs on your behalf.
func (o PlatformApplicationOutput) SuccessFeedbackRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringPtrOutput { return v.SuccessFeedbackRoleArn }).(pulumi.StringPtrOutput)
}

// The sample rate percentage (0-100) of successfully delivered messages.
//
// The following attributes are needed only when using APNS token credentials:
func (o PlatformApplicationOutput) SuccessFeedbackSampleRate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PlatformApplication) pulumi.StringPtrOutput { return v.SuccessFeedbackSampleRate }).(pulumi.StringPtrOutput)
}

type PlatformApplicationArrayOutput struct{ *pulumi.OutputState }

func (PlatformApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PlatformApplication)(nil)).Elem()
}

func (o PlatformApplicationArrayOutput) ToPlatformApplicationArrayOutput() PlatformApplicationArrayOutput {
	return o
}

func (o PlatformApplicationArrayOutput) ToPlatformApplicationArrayOutputWithContext(ctx context.Context) PlatformApplicationArrayOutput {
	return o
}

func (o PlatformApplicationArrayOutput) Index(i pulumi.IntInput) PlatformApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PlatformApplication {
		return vs[0].([]*PlatformApplication)[vs[1].(int)]
	}).(PlatformApplicationOutput)
}

type PlatformApplicationMapOutput struct{ *pulumi.OutputState }

func (PlatformApplicationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PlatformApplication)(nil)).Elem()
}

func (o PlatformApplicationMapOutput) ToPlatformApplicationMapOutput() PlatformApplicationMapOutput {
	return o
}

func (o PlatformApplicationMapOutput) ToPlatformApplicationMapOutputWithContext(ctx context.Context) PlatformApplicationMapOutput {
	return o
}

func (o PlatformApplicationMapOutput) MapIndex(k pulumi.StringInput) PlatformApplicationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PlatformApplication {
		return vs[0].(map[string]*PlatformApplication)[vs[1].(string)]
	}).(PlatformApplicationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PlatformApplicationInput)(nil)).Elem(), &PlatformApplication{})
	pulumi.RegisterInputType(reflect.TypeOf((*PlatformApplicationArrayInput)(nil)).Elem(), PlatformApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PlatformApplicationMapInput)(nil)).Elem(), PlatformApplicationMap{})
	pulumi.RegisterOutputType(PlatformApplicationOutput{})
	pulumi.RegisterOutputType(PlatformApplicationArrayOutput{})
	pulumi.RegisterOutputType(PlatformApplicationMapOutput{})
}
