// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package glacier

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a resource to manage a GuardDuty detector.
// 
// ~> **NOTE:** Deleting this resource is equivalent to "disabling" GuardDuty for an AWS region, which removes all existing findings. You can set the `enable` attribute to `false` to instead "suspend" monitoring and feedback reporting while keeping existing data. See the [Suspending or Disabling Amazon GuardDuty documentation](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_suspend-disable.html) for more information.
type Detector struct {
	s *pulumi.ResourceState
}

// NewDetector registers a new resource with the given unique name, arguments, and options.
func NewDetector(ctx *pulumi.Context,
	name string, args *DetectorArgs, opts ...pulumi.ResourceOpt) (*Detector, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["enable"] = nil
	} else {
		inputs["enable"] = args.Enable
	}
	inputs["accountId"] = nil
	s, err := ctx.RegisterResource("aws:glacier/detector:Detector", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Detector{s: s}, nil
}

// GetDetector gets an existing Detector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDetector(ctx *pulumi.Context,
	name string, id pulumi.ID, state *DetectorState, opts ...pulumi.ResourceOpt) (*Detector, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["accountId"] = state.AccountId
		inputs["enable"] = state.Enable
	}
	s, err := ctx.ReadResource("aws:glacier/detector:Detector", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Detector{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Detector) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Detector) ID() *pulumi.IDOutput {
	return r.s.ID
}

// The AWS account ID of the GuardDuty detector
func (r *Detector) AccountId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["accountId"])
}

// Enable monitoring and feedback reporting. Setting to `false` is equivalent to "suspending" GuardDuty. Defaults to `true`.
func (r *Detector) Enable() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["enable"])
}

// Input properties used for looking up and filtering Detector resources.
type DetectorState struct {
	// The AWS account ID of the GuardDuty detector
	AccountId interface{}
	// Enable monitoring and feedback reporting. Setting to `false` is equivalent to "suspending" GuardDuty. Defaults to `true`.
	Enable interface{}
}

// The set of arguments for constructing a Detector resource.
type DetectorArgs struct {
	// Enable monitoring and feedback reporting. Setting to `false` is equivalent to "suspending" GuardDuty. Defaults to `true`.
	Enable interface{}
}
