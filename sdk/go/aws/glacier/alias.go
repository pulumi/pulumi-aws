// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package glacier

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Gamelift Alias resource.
type Alias struct {
	s *pulumi.ResourceState
}

// NewAlias registers a new resource with the given unique name, arguments, and options.
func NewAlias(ctx *pulumi.Context,
	name string, args *AliasArgs, opts ...pulumi.ResourceOpt) (*Alias, error) {
	if args == nil || args.RoutingStrategy == nil {
		return nil, errors.New("missing required argument 'RoutingStrategy'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["description"] = nil
		inputs["name"] = nil
		inputs["routingStrategy"] = nil
	} else {
		inputs["description"] = args.Description
		inputs["name"] = args.Name
		inputs["routingStrategy"] = args.RoutingStrategy
	}
	inputs["arn"] = nil
	s, err := ctx.RegisterResource("aws:glacier/alias:Alias", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Alias{s: s}, nil
}

// GetAlias gets an existing Alias resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlias(ctx *pulumi.Context,
	name string, id pulumi.ID, state *AliasState, opts ...pulumi.ResourceOpt) (*Alias, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["description"] = state.Description
		inputs["name"] = state.Name
		inputs["routingStrategy"] = state.RoutingStrategy
	}
	s, err := ctx.ReadResource("aws:glacier/alias:Alias", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Alias{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Alias) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Alias) ID() *pulumi.IDOutput {
	return r.s.ID
}

// Alias ARN.
func (r *Alias) Arn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["arn"])
}

// Description of the alias.
func (r *Alias) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

// Name of the alias.
func (r *Alias) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// Specifies the fleet and/or routing type to use for the alias.
func (r *Alias) RoutingStrategy() *pulumi.Output {
	return r.s.State["routingStrategy"]
}

// Input properties used for looking up and filtering Alias resources.
type AliasState struct {
	// Alias ARN.
	Arn interface{}
	// Description of the alias.
	Description interface{}
	// Name of the alias.
	Name interface{}
	// Specifies the fleet and/or routing type to use for the alias.
	RoutingStrategy interface{}
}

// The set of arguments for constructing a Alias resource.
type AliasArgs struct {
	// Description of the alias.
	Description interface{}
	// Name of the alias.
	Name interface{}
	// Specifies the fleet and/or routing type to use for the alias.
	RoutingStrategy interface{}
}
