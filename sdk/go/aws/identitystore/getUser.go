// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identitystore

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupUser(ctx *pulumi.Context, args *LookupUserArgs, opts ...pulumi.InvokeOption) (*LookupUserResult, error) {
	var rv LookupUserResult
	err := ctx.Invoke("aws:identitystore/getUser:getUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUser.
type LookupUserArgs struct {
	AlternateIdentifier *GetUserAlternateIdentifier `pulumi:"alternateIdentifier"`
	// Deprecated: Use the alternate_identifier attribute instead.
	Filter          *GetUserFilter `pulumi:"filter"`
	IdentityStoreId string         `pulumi:"identityStoreId"`
	UserId          *string        `pulumi:"userId"`
}

// A collection of values returned by getUser.
type LookupUserResult struct {
	Addresses           []GetUserAddress            `pulumi:"addresses"`
	AlternateIdentifier *GetUserAlternateIdentifier `pulumi:"alternateIdentifier"`
	DisplayName         string                      `pulumi:"displayName"`
	Emails              []GetUserEmail              `pulumi:"emails"`
	ExternalIds         []GetUserExternalId         `pulumi:"externalIds"`
	// Deprecated: Use the alternate_identifier attribute instead.
	Filter *GetUserFilter `pulumi:"filter"`
	// The provider-assigned unique ID for this managed resource.
	Id                string               `pulumi:"id"`
	IdentityStoreId   string               `pulumi:"identityStoreId"`
	Locale            string               `pulumi:"locale"`
	Names             []GetUserName        `pulumi:"names"`
	Nickname          string               `pulumi:"nickname"`
	PhoneNumbers      []GetUserPhoneNumber `pulumi:"phoneNumbers"`
	PreferredLanguage string               `pulumi:"preferredLanguage"`
	ProfileUrl        string               `pulumi:"profileUrl"`
	Timezone          string               `pulumi:"timezone"`
	Title             string               `pulumi:"title"`
	UserId            string               `pulumi:"userId"`
	UserName          string               `pulumi:"userName"`
	UserType          string               `pulumi:"userType"`
}

func LookupUserOutput(ctx *pulumi.Context, args LookupUserOutputArgs, opts ...pulumi.InvokeOption) LookupUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupUserResult, error) {
			args := v.(LookupUserArgs)
			r, err := LookupUser(ctx, &args, opts...)
			var s LookupUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupUserResultOutput)
}

// A collection of arguments for invoking getUser.
type LookupUserOutputArgs struct {
	AlternateIdentifier GetUserAlternateIdentifierPtrInput `pulumi:"alternateIdentifier"`
	// Deprecated: Use the alternate_identifier attribute instead.
	Filter          GetUserFilterPtrInput `pulumi:"filter"`
	IdentityStoreId pulumi.StringInput    `pulumi:"identityStoreId"`
	UserId          pulumi.StringPtrInput `pulumi:"userId"`
}

func (LookupUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserArgs)(nil)).Elem()
}

// A collection of values returned by getUser.
type LookupUserResultOutput struct{ *pulumi.OutputState }

func (LookupUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserResult)(nil)).Elem()
}

func (o LookupUserResultOutput) ToLookupUserResultOutput() LookupUserResultOutput {
	return o
}

func (o LookupUserResultOutput) ToLookupUserResultOutputWithContext(ctx context.Context) LookupUserResultOutput {
	return o
}

func (o LookupUserResultOutput) Addresses() GetUserAddressArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []GetUserAddress { return v.Addresses }).(GetUserAddressArrayOutput)
}

func (o LookupUserResultOutput) AlternateIdentifier() GetUserAlternateIdentifierPtrOutput {
	return o.ApplyT(func(v LookupUserResult) *GetUserAlternateIdentifier { return v.AlternateIdentifier }).(GetUserAlternateIdentifierPtrOutput)
}

func (o LookupUserResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

func (o LookupUserResultOutput) Emails() GetUserEmailArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []GetUserEmail { return v.Emails }).(GetUserEmailArrayOutput)
}

func (o LookupUserResultOutput) ExternalIds() GetUserExternalIdArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []GetUserExternalId { return v.ExternalIds }).(GetUserExternalIdArrayOutput)
}

// Deprecated: Use the alternate_identifier attribute instead.
func (o LookupUserResultOutput) Filter() GetUserFilterPtrOutput {
	return o.ApplyT(func(v LookupUserResult) *GetUserFilter { return v.Filter }).(GetUserFilterPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupUserResultOutput) IdentityStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.IdentityStoreId }).(pulumi.StringOutput)
}

func (o LookupUserResultOutput) Locale() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Locale }).(pulumi.StringOutput)
}

func (o LookupUserResultOutput) Names() GetUserNameArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []GetUserName { return v.Names }).(GetUserNameArrayOutput)
}

func (o LookupUserResultOutput) Nickname() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Nickname }).(pulumi.StringOutput)
}

func (o LookupUserResultOutput) PhoneNumbers() GetUserPhoneNumberArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []GetUserPhoneNumber { return v.PhoneNumbers }).(GetUserPhoneNumberArrayOutput)
}

func (o LookupUserResultOutput) PreferredLanguage() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.PreferredLanguage }).(pulumi.StringOutput)
}

func (o LookupUserResultOutput) ProfileUrl() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.ProfileUrl }).(pulumi.StringOutput)
}

func (o LookupUserResultOutput) Timezone() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Timezone }).(pulumi.StringOutput)
}

func (o LookupUserResultOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Title }).(pulumi.StringOutput)
}

func (o LookupUserResultOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.UserId }).(pulumi.StringOutput)
}

func (o LookupUserResultOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.UserName }).(pulumi.StringOutput)
}

func (o LookupUserResultOutput) UserType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.UserType }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUserResultOutput{})
}
