// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identitystore

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for managing an AWS SSO Identity Store Groups.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/identitystore"
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ssoadmin"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := ssoadmin.GetInstances(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			_, err = identitystore.GetGroups(ctx, &identitystore.GetGroupsArgs{
//				IdentityStoreId: example.IdentityStoreIds[0],
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetGroups(ctx *pulumi.Context, args *GetGroupsArgs, opts ...pulumi.InvokeOption) (*GetGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetGroupsResult
	err := ctx.Invoke("aws:identitystore/getGroups:getGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGroups.
type GetGroupsArgs struct {
	// Identity Store ID associated with the Single Sign-On (SSO) Instance.
	IdentityStoreId string `pulumi:"identityStoreId"`
}

// A collection of values returned by getGroups.
type GetGroupsResult struct {
	// List of Identity Store Groups
	Groups []GetGroupsGroup `pulumi:"groups"`
	// The provider-assigned unique ID for this managed resource.
	Id              string `pulumi:"id"`
	IdentityStoreId string `pulumi:"identityStoreId"`
}

func GetGroupsOutput(ctx *pulumi.Context, args GetGroupsOutputArgs, opts ...pulumi.InvokeOption) GetGroupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetGroupsResultOutput, error) {
			args := v.(GetGroupsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetGroupsResult
			secret, err := ctx.InvokePackageRaw("aws:identitystore/getGroups:getGroups", args, &rv, "", opts...)
			if err != nil {
				return GetGroupsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetGroupsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetGroupsResultOutput), nil
			}
			return output, nil
		}).(GetGroupsResultOutput)
}

// A collection of arguments for invoking getGroups.
type GetGroupsOutputArgs struct {
	// Identity Store ID associated with the Single Sign-On (SSO) Instance.
	IdentityStoreId pulumi.StringInput `pulumi:"identityStoreId"`
}

func (GetGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getGroups.
type GetGroupsResultOutput struct{ *pulumi.OutputState }

func (GetGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupsResult)(nil)).Elem()
}

func (o GetGroupsResultOutput) ToGetGroupsResultOutput() GetGroupsResultOutput {
	return o
}

func (o GetGroupsResultOutput) ToGetGroupsResultOutputWithContext(ctx context.Context) GetGroupsResultOutput {
	return o
}

// List of Identity Store Groups
func (o GetGroupsResultOutput) Groups() GetGroupsGroupArrayOutput {
	return o.ApplyT(func(v GetGroupsResult) []GetGroupsGroup { return v.Groups }).(GetGroupsGroupArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetGroupsResultOutput) IdentityStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupsResult) string { return v.IdentityStoreId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGroupsResultOutput{})
}
