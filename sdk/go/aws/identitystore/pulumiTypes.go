// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package identitystore

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetGroupFilter struct {
	// Attribute path that is used to specify which attribute name to search. Currently, `DisplayName` is the only valid attribute path.
	AttributePath string `pulumi:"attributePath"`
	// Value for an attribute.
	AttributeValue string `pulumi:"attributeValue"`
}

// GetGroupFilterInput is an input type that accepts GetGroupFilterArgs and GetGroupFilterOutput values.
// You can construct a concrete instance of `GetGroupFilterInput` via:
//
//	GetGroupFilterArgs{...}
type GetGroupFilterInput interface {
	pulumi.Input

	ToGetGroupFilterOutput() GetGroupFilterOutput
	ToGetGroupFilterOutputWithContext(context.Context) GetGroupFilterOutput
}

type GetGroupFilterArgs struct {
	// Attribute path that is used to specify which attribute name to search. Currently, `DisplayName` is the only valid attribute path.
	AttributePath pulumi.StringInput `pulumi:"attributePath"`
	// Value for an attribute.
	AttributeValue pulumi.StringInput `pulumi:"attributeValue"`
}

func (GetGroupFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupFilter)(nil)).Elem()
}

func (i GetGroupFilterArgs) ToGetGroupFilterOutput() GetGroupFilterOutput {
	return i.ToGetGroupFilterOutputWithContext(context.Background())
}

func (i GetGroupFilterArgs) ToGetGroupFilterOutputWithContext(ctx context.Context) GetGroupFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupFilterOutput)
}

// GetGroupFilterArrayInput is an input type that accepts GetGroupFilterArray and GetGroupFilterArrayOutput values.
// You can construct a concrete instance of `GetGroupFilterArrayInput` via:
//
//	GetGroupFilterArray{ GetGroupFilterArgs{...} }
type GetGroupFilterArrayInput interface {
	pulumi.Input

	ToGetGroupFilterArrayOutput() GetGroupFilterArrayOutput
	ToGetGroupFilterArrayOutputWithContext(context.Context) GetGroupFilterArrayOutput
}

type GetGroupFilterArray []GetGroupFilterInput

func (GetGroupFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupFilter)(nil)).Elem()
}

func (i GetGroupFilterArray) ToGetGroupFilterArrayOutput() GetGroupFilterArrayOutput {
	return i.ToGetGroupFilterArrayOutputWithContext(context.Background())
}

func (i GetGroupFilterArray) ToGetGroupFilterArrayOutputWithContext(ctx context.Context) GetGroupFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupFilterArrayOutput)
}

type GetGroupFilterOutput struct{ *pulumi.OutputState }

func (GetGroupFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupFilter)(nil)).Elem()
}

func (o GetGroupFilterOutput) ToGetGroupFilterOutput() GetGroupFilterOutput {
	return o
}

func (o GetGroupFilterOutput) ToGetGroupFilterOutputWithContext(ctx context.Context) GetGroupFilterOutput {
	return o
}

// Attribute path that is used to specify which attribute name to search. Currently, `DisplayName` is the only valid attribute path.
func (o GetGroupFilterOutput) AttributePath() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupFilter) string { return v.AttributePath }).(pulumi.StringOutput)
}

// Value for an attribute.
func (o GetGroupFilterOutput) AttributeValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupFilter) string { return v.AttributeValue }).(pulumi.StringOutput)
}

type GetGroupFilterArrayOutput struct{ *pulumi.OutputState }

func (GetGroupFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupFilter)(nil)).Elem()
}

func (o GetGroupFilterArrayOutput) ToGetGroupFilterArrayOutput() GetGroupFilterArrayOutput {
	return o
}

func (o GetGroupFilterArrayOutput) ToGetGroupFilterArrayOutputWithContext(ctx context.Context) GetGroupFilterArrayOutput {
	return o
}

func (o GetGroupFilterArrayOutput) Index(i pulumi.IntInput) GetGroupFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupFilter {
		return vs[0].([]GetGroupFilter)[vs[1].(int)]
	}).(GetGroupFilterOutput)
}

type GetUserFilter struct {
	// Attribute path that is used to specify which attribute name to search. Currently, `UserName` is the only valid attribute path.
	AttributePath string `pulumi:"attributePath"`
	// Value for an attribute.
	AttributeValue string `pulumi:"attributeValue"`
}

// GetUserFilterInput is an input type that accepts GetUserFilterArgs and GetUserFilterOutput values.
// You can construct a concrete instance of `GetUserFilterInput` via:
//
//	GetUserFilterArgs{...}
type GetUserFilterInput interface {
	pulumi.Input

	ToGetUserFilterOutput() GetUserFilterOutput
	ToGetUserFilterOutputWithContext(context.Context) GetUserFilterOutput
}

type GetUserFilterArgs struct {
	// Attribute path that is used to specify which attribute name to search. Currently, `UserName` is the only valid attribute path.
	AttributePath pulumi.StringInput `pulumi:"attributePath"`
	// Value for an attribute.
	AttributeValue pulumi.StringInput `pulumi:"attributeValue"`
}

func (GetUserFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserFilter)(nil)).Elem()
}

func (i GetUserFilterArgs) ToGetUserFilterOutput() GetUserFilterOutput {
	return i.ToGetUserFilterOutputWithContext(context.Background())
}

func (i GetUserFilterArgs) ToGetUserFilterOutputWithContext(ctx context.Context) GetUserFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserFilterOutput)
}

// GetUserFilterArrayInput is an input type that accepts GetUserFilterArray and GetUserFilterArrayOutput values.
// You can construct a concrete instance of `GetUserFilterArrayInput` via:
//
//	GetUserFilterArray{ GetUserFilterArgs{...} }
type GetUserFilterArrayInput interface {
	pulumi.Input

	ToGetUserFilterArrayOutput() GetUserFilterArrayOutput
	ToGetUserFilterArrayOutputWithContext(context.Context) GetUserFilterArrayOutput
}

type GetUserFilterArray []GetUserFilterInput

func (GetUserFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserFilter)(nil)).Elem()
}

func (i GetUserFilterArray) ToGetUserFilterArrayOutput() GetUserFilterArrayOutput {
	return i.ToGetUserFilterArrayOutputWithContext(context.Background())
}

func (i GetUserFilterArray) ToGetUserFilterArrayOutputWithContext(ctx context.Context) GetUserFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserFilterArrayOutput)
}

type GetUserFilterOutput struct{ *pulumi.OutputState }

func (GetUserFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserFilter)(nil)).Elem()
}

func (o GetUserFilterOutput) ToGetUserFilterOutput() GetUserFilterOutput {
	return o
}

func (o GetUserFilterOutput) ToGetUserFilterOutputWithContext(ctx context.Context) GetUserFilterOutput {
	return o
}

// Attribute path that is used to specify which attribute name to search. Currently, `UserName` is the only valid attribute path.
func (o GetUserFilterOutput) AttributePath() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserFilter) string { return v.AttributePath }).(pulumi.StringOutput)
}

// Value for an attribute.
func (o GetUserFilterOutput) AttributeValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserFilter) string { return v.AttributeValue }).(pulumi.StringOutput)
}

type GetUserFilterArrayOutput struct{ *pulumi.OutputState }

func (GetUserFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserFilter)(nil)).Elem()
}

func (o GetUserFilterArrayOutput) ToGetUserFilterArrayOutput() GetUserFilterArrayOutput {
	return o
}

func (o GetUserFilterArrayOutput) ToGetUserFilterArrayOutputWithContext(ctx context.Context) GetUserFilterArrayOutput {
	return o
}

func (o GetUserFilterArrayOutput) Index(i pulumi.IntInput) GetUserFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserFilter {
		return vs[0].([]GetUserFilter)[vs[1].(int)]
	}).(GetUserFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupFilterInput)(nil)).Elem(), GetGroupFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupFilterArrayInput)(nil)).Elem(), GetGroupFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserFilterInput)(nil)).Elem(), GetUserFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserFilterArrayInput)(nil)).Elem(), GetUserFilterArray{})
	pulumi.RegisterOutputType(GetGroupFilterOutput{})
	pulumi.RegisterOutputType(GetGroupFilterArrayOutput{})
	pulumi.RegisterOutputType(GetUserFilterOutput{})
	pulumi.RegisterOutputType(GetUserFilterArrayOutput{})
}
