// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package backup

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupSelection(ctx *pulumi.Context, args *LookupSelectionArgs, opts ...pulumi.InvokeOption) (*LookupSelectionResult, error) {
	var rv LookupSelectionResult
	err := ctx.Invoke("aws:backup/getSelection:getSelection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSelection.
type LookupSelectionArgs struct {
	PlanId      string `pulumi:"planId"`
	SelectionId string `pulumi:"selectionId"`
}

// A collection of values returned by getSelection.
type LookupSelectionResult struct {
	IamRoleArn string `pulumi:"iamRoleArn"`
	// The provider-assigned unique ID for this managed resource.
	Id          string   `pulumi:"id"`
	Name        string   `pulumi:"name"`
	PlanId      string   `pulumi:"planId"`
	Resources   []string `pulumi:"resources"`
	SelectionId string   `pulumi:"selectionId"`
}

func LookupSelectionOutput(ctx *pulumi.Context, args LookupSelectionOutputArgs, opts ...pulumi.InvokeOption) LookupSelectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupSelectionResult, error) {
			args := v.(LookupSelectionArgs)
			r, err := LookupSelection(ctx, &args, opts...)
			var s LookupSelectionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupSelectionResultOutput)
}

// A collection of arguments for invoking getSelection.
type LookupSelectionOutputArgs struct {
	PlanId      pulumi.StringInput `pulumi:"planId"`
	SelectionId pulumi.StringInput `pulumi:"selectionId"`
}

func (LookupSelectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSelectionArgs)(nil)).Elem()
}

// A collection of values returned by getSelection.
type LookupSelectionResultOutput struct{ *pulumi.OutputState }

func (LookupSelectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSelectionResult)(nil)).Elem()
}

func (o LookupSelectionResultOutput) ToLookupSelectionResultOutput() LookupSelectionResultOutput {
	return o
}

func (o LookupSelectionResultOutput) ToLookupSelectionResultOutputWithContext(ctx context.Context) LookupSelectionResultOutput {
	return o
}

func (o LookupSelectionResultOutput) IamRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSelectionResult) string { return v.IamRoleArn }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSelectionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSelectionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupSelectionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSelectionResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupSelectionResultOutput) PlanId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSelectionResult) string { return v.PlanId }).(pulumi.StringOutput)
}

func (o LookupSelectionResultOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupSelectionResult) []string { return v.Resources }).(pulumi.StringArrayOutput)
}

func (o LookupSelectionResultOutput) SelectionId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSelectionResult) string { return v.SelectionId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSelectionResultOutput{})
}
