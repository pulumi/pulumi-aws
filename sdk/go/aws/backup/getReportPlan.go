// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package backup

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupReportPlan(ctx *pulumi.Context, args *LookupReportPlanArgs, opts ...pulumi.InvokeOption) (*LookupReportPlanResult, error) {
	var rv LookupReportPlanResult
	err := ctx.Invoke("aws:backup/getReportPlan:getReportPlan", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getReportPlan.
type LookupReportPlanArgs struct {
	Name string            `pulumi:"name"`
	Tags map[string]string `pulumi:"tags"`
}

// A collection of values returned by getReportPlan.
type LookupReportPlanResult struct {
	Arn              string `pulumi:"arn"`
	CreationTime     string `pulumi:"creationTime"`
	DeploymentStatus string `pulumi:"deploymentStatus"`
	Description      string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id                     string                               `pulumi:"id"`
	Name                   string                               `pulumi:"name"`
	ReportDeliveryChannels []GetReportPlanReportDeliveryChannel `pulumi:"reportDeliveryChannels"`
	ReportSettings         []GetReportPlanReportSetting         `pulumi:"reportSettings"`
	Tags                   map[string]string                    `pulumi:"tags"`
}

func LookupReportPlanOutput(ctx *pulumi.Context, args LookupReportPlanOutputArgs, opts ...pulumi.InvokeOption) LookupReportPlanResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupReportPlanResult, error) {
			args := v.(LookupReportPlanArgs)
			r, err := LookupReportPlan(ctx, &args, opts...)
			var s LookupReportPlanResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupReportPlanResultOutput)
}

// A collection of arguments for invoking getReportPlan.
type LookupReportPlanOutputArgs struct {
	Name pulumi.StringInput    `pulumi:"name"`
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupReportPlanOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReportPlanArgs)(nil)).Elem()
}

// A collection of values returned by getReportPlan.
type LookupReportPlanResultOutput struct{ *pulumi.OutputState }

func (LookupReportPlanResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReportPlanResult)(nil)).Elem()
}

func (o LookupReportPlanResultOutput) ToLookupReportPlanResultOutput() LookupReportPlanResultOutput {
	return o
}

func (o LookupReportPlanResultOutput) ToLookupReportPlanResultOutputWithContext(ctx context.Context) LookupReportPlanResultOutput {
	return o
}

func (o LookupReportPlanResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReportPlanResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupReportPlanResultOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReportPlanResult) string { return v.CreationTime }).(pulumi.StringOutput)
}

func (o LookupReportPlanResultOutput) DeploymentStatus() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReportPlanResult) string { return v.DeploymentStatus }).(pulumi.StringOutput)
}

func (o LookupReportPlanResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReportPlanResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupReportPlanResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReportPlanResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupReportPlanResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReportPlanResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupReportPlanResultOutput) ReportDeliveryChannels() GetReportPlanReportDeliveryChannelArrayOutput {
	return o.ApplyT(func(v LookupReportPlanResult) []GetReportPlanReportDeliveryChannel { return v.ReportDeliveryChannels }).(GetReportPlanReportDeliveryChannelArrayOutput)
}

func (o LookupReportPlanResultOutput) ReportSettings() GetReportPlanReportSettingArrayOutput {
	return o.ApplyT(func(v LookupReportPlanResult) []GetReportPlanReportSetting { return v.ReportSettings }).(GetReportPlanReportSettingArrayOutput)
}

func (o LookupReportPlanResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupReportPlanResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupReportPlanResultOutput{})
}
