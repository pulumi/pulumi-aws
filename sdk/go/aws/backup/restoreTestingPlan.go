// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package backup

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS Backup Restore Testing Plan.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/backup"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := backup.NewRestoreTestingPlan(ctx, "example", &backup.RestoreTestingPlanArgs{
//				Name: pulumi.String("example_restore_testing_plan"),
//				RecoveryPointSelection: &backup.RestoreTestingPlanRecoveryPointSelectionArgs{
//					Algorithm: pulumi.String("LATEST_WITHIN_WINDOW"),
//					IncludeVaults: pulumi.StringArray{
//						pulumi.String("*"),
//					},
//					RecoveryPointTypes: pulumi.StringArray{
//						pulumi.String("CONTINUOUS"),
//					},
//				},
//				ScheduleExpression: pulumi.String("cron(0 12 ? * * *)"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import Backup Restore Testing Plan using the `name`. For example:
//
// ```sh
// $ pulumi import aws:backup/restoreTestingPlan:RestoreTestingPlan example my_testing_plan
// ```
type RestoreTestingPlan struct {
	pulumi.CustomResourceState

	// ARN of the Restore Testing Plan.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The name of the restore testing plan. Must be between 1 and 50 characters long and contain only alphanumeric characters and underscores.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the recovery point selection configuration. See RecoveryPointSelection section for more details.
	RecoveryPointSelection RestoreTestingPlanRecoveryPointSelectionPtrOutput `pulumi:"recoveryPointSelection"`
	// The schedule expression for the restore testing plan.
	ScheduleExpression pulumi.StringOutput `pulumi:"scheduleExpression"`
	// The timezone for the schedule expression. If not provided, the state value will be used.
	ScheduleExpressionTimezone pulumi.StringOutput `pulumi:"scheduleExpressionTimezone"`
	// The number of hours in the start window for the restore testing plan. Must be between 1 and 168.
	StartWindowHours pulumi.IntOutput       `pulumi:"startWindowHours"`
	Tags             pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
}

// NewRestoreTestingPlan registers a new resource with the given unique name, arguments, and options.
func NewRestoreTestingPlan(ctx *pulumi.Context,
	name string, args *RestoreTestingPlanArgs, opts ...pulumi.ResourceOption) (*RestoreTestingPlan, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ScheduleExpression == nil {
		return nil, errors.New("invalid value for required argument 'ScheduleExpression'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RestoreTestingPlan
	err := ctx.RegisterResource("aws:backup/restoreTestingPlan:RestoreTestingPlan", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRestoreTestingPlan gets an existing RestoreTestingPlan resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRestoreTestingPlan(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RestoreTestingPlanState, opts ...pulumi.ResourceOption) (*RestoreTestingPlan, error) {
	var resource RestoreTestingPlan
	err := ctx.ReadResource("aws:backup/restoreTestingPlan:RestoreTestingPlan", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RestoreTestingPlan resources.
type restoreTestingPlanState struct {
	// ARN of the Restore Testing Plan.
	Arn *string `pulumi:"arn"`
	// The name of the restore testing plan. Must be between 1 and 50 characters long and contain only alphanumeric characters and underscores.
	Name *string `pulumi:"name"`
	// Specifies the recovery point selection configuration. See RecoveryPointSelection section for more details.
	RecoveryPointSelection *RestoreTestingPlanRecoveryPointSelection `pulumi:"recoveryPointSelection"`
	// The schedule expression for the restore testing plan.
	ScheduleExpression *string `pulumi:"scheduleExpression"`
	// The timezone for the schedule expression. If not provided, the state value will be used.
	ScheduleExpressionTimezone *string `pulumi:"scheduleExpressionTimezone"`
	// The number of hours in the start window for the restore testing plan. Must be between 1 and 168.
	StartWindowHours *int              `pulumi:"startWindowHours"`
	Tags             map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll map[string]string `pulumi:"tagsAll"`
}

type RestoreTestingPlanState struct {
	// ARN of the Restore Testing Plan.
	Arn pulumi.StringPtrInput
	// The name of the restore testing plan. Must be between 1 and 50 characters long and contain only alphanumeric characters and underscores.
	Name pulumi.StringPtrInput
	// Specifies the recovery point selection configuration. See RecoveryPointSelection section for more details.
	RecoveryPointSelection RestoreTestingPlanRecoveryPointSelectionPtrInput
	// The schedule expression for the restore testing plan.
	ScheduleExpression pulumi.StringPtrInput
	// The timezone for the schedule expression. If not provided, the state value will be used.
	ScheduleExpressionTimezone pulumi.StringPtrInput
	// The number of hours in the start window for the restore testing plan. Must be between 1 and 168.
	StartWindowHours pulumi.IntPtrInput
	Tags             pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapInput
}

func (RestoreTestingPlanState) ElementType() reflect.Type {
	return reflect.TypeOf((*restoreTestingPlanState)(nil)).Elem()
}

type restoreTestingPlanArgs struct {
	// The name of the restore testing plan. Must be between 1 and 50 characters long and contain only alphanumeric characters and underscores.
	Name *string `pulumi:"name"`
	// Specifies the recovery point selection configuration. See RecoveryPointSelection section for more details.
	RecoveryPointSelection *RestoreTestingPlanRecoveryPointSelection `pulumi:"recoveryPointSelection"`
	// The schedule expression for the restore testing plan.
	ScheduleExpression string `pulumi:"scheduleExpression"`
	// The timezone for the schedule expression. If not provided, the state value will be used.
	ScheduleExpressionTimezone *string `pulumi:"scheduleExpressionTimezone"`
	// The number of hours in the start window for the restore testing plan. Must be between 1 and 168.
	StartWindowHours *int              `pulumi:"startWindowHours"`
	Tags             map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a RestoreTestingPlan resource.
type RestoreTestingPlanArgs struct {
	// The name of the restore testing plan. Must be between 1 and 50 characters long and contain only alphanumeric characters and underscores.
	Name pulumi.StringPtrInput
	// Specifies the recovery point selection configuration. See RecoveryPointSelection section for more details.
	RecoveryPointSelection RestoreTestingPlanRecoveryPointSelectionPtrInput
	// The schedule expression for the restore testing plan.
	ScheduleExpression pulumi.StringInput
	// The timezone for the schedule expression. If not provided, the state value will be used.
	ScheduleExpressionTimezone pulumi.StringPtrInput
	// The number of hours in the start window for the restore testing plan. Must be between 1 and 168.
	StartWindowHours pulumi.IntPtrInput
	Tags             pulumi.StringMapInput
}

func (RestoreTestingPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*restoreTestingPlanArgs)(nil)).Elem()
}

type RestoreTestingPlanInput interface {
	pulumi.Input

	ToRestoreTestingPlanOutput() RestoreTestingPlanOutput
	ToRestoreTestingPlanOutputWithContext(ctx context.Context) RestoreTestingPlanOutput
}

func (*RestoreTestingPlan) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreTestingPlan)(nil)).Elem()
}

func (i *RestoreTestingPlan) ToRestoreTestingPlanOutput() RestoreTestingPlanOutput {
	return i.ToRestoreTestingPlanOutputWithContext(context.Background())
}

func (i *RestoreTestingPlan) ToRestoreTestingPlanOutputWithContext(ctx context.Context) RestoreTestingPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreTestingPlanOutput)
}

// RestoreTestingPlanArrayInput is an input type that accepts RestoreTestingPlanArray and RestoreTestingPlanArrayOutput values.
// You can construct a concrete instance of `RestoreTestingPlanArrayInput` via:
//
//	RestoreTestingPlanArray{ RestoreTestingPlanArgs{...} }
type RestoreTestingPlanArrayInput interface {
	pulumi.Input

	ToRestoreTestingPlanArrayOutput() RestoreTestingPlanArrayOutput
	ToRestoreTestingPlanArrayOutputWithContext(context.Context) RestoreTestingPlanArrayOutput
}

type RestoreTestingPlanArray []RestoreTestingPlanInput

func (RestoreTestingPlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RestoreTestingPlan)(nil)).Elem()
}

func (i RestoreTestingPlanArray) ToRestoreTestingPlanArrayOutput() RestoreTestingPlanArrayOutput {
	return i.ToRestoreTestingPlanArrayOutputWithContext(context.Background())
}

func (i RestoreTestingPlanArray) ToRestoreTestingPlanArrayOutputWithContext(ctx context.Context) RestoreTestingPlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreTestingPlanArrayOutput)
}

// RestoreTestingPlanMapInput is an input type that accepts RestoreTestingPlanMap and RestoreTestingPlanMapOutput values.
// You can construct a concrete instance of `RestoreTestingPlanMapInput` via:
//
//	RestoreTestingPlanMap{ "key": RestoreTestingPlanArgs{...} }
type RestoreTestingPlanMapInput interface {
	pulumi.Input

	ToRestoreTestingPlanMapOutput() RestoreTestingPlanMapOutput
	ToRestoreTestingPlanMapOutputWithContext(context.Context) RestoreTestingPlanMapOutput
}

type RestoreTestingPlanMap map[string]RestoreTestingPlanInput

func (RestoreTestingPlanMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RestoreTestingPlan)(nil)).Elem()
}

func (i RestoreTestingPlanMap) ToRestoreTestingPlanMapOutput() RestoreTestingPlanMapOutput {
	return i.ToRestoreTestingPlanMapOutputWithContext(context.Background())
}

func (i RestoreTestingPlanMap) ToRestoreTestingPlanMapOutputWithContext(ctx context.Context) RestoreTestingPlanMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreTestingPlanMapOutput)
}

type RestoreTestingPlanOutput struct{ *pulumi.OutputState }

func (RestoreTestingPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreTestingPlan)(nil)).Elem()
}

func (o RestoreTestingPlanOutput) ToRestoreTestingPlanOutput() RestoreTestingPlanOutput {
	return o
}

func (o RestoreTestingPlanOutput) ToRestoreTestingPlanOutputWithContext(ctx context.Context) RestoreTestingPlanOutput {
	return o
}

// ARN of the Restore Testing Plan.
func (o RestoreTestingPlanOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *RestoreTestingPlan) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The name of the restore testing plan. Must be between 1 and 50 characters long and contain only alphanumeric characters and underscores.
func (o RestoreTestingPlanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *RestoreTestingPlan) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the recovery point selection configuration. See RecoveryPointSelection section for more details.
func (o RestoreTestingPlanOutput) RecoveryPointSelection() RestoreTestingPlanRecoveryPointSelectionPtrOutput {
	return o.ApplyT(func(v *RestoreTestingPlan) RestoreTestingPlanRecoveryPointSelectionPtrOutput {
		return v.RecoveryPointSelection
	}).(RestoreTestingPlanRecoveryPointSelectionPtrOutput)
}

// The schedule expression for the restore testing plan.
func (o RestoreTestingPlanOutput) ScheduleExpression() pulumi.StringOutput {
	return o.ApplyT(func(v *RestoreTestingPlan) pulumi.StringOutput { return v.ScheduleExpression }).(pulumi.StringOutput)
}

// The timezone for the schedule expression. If not provided, the state value will be used.
func (o RestoreTestingPlanOutput) ScheduleExpressionTimezone() pulumi.StringOutput {
	return o.ApplyT(func(v *RestoreTestingPlan) pulumi.StringOutput { return v.ScheduleExpressionTimezone }).(pulumi.StringOutput)
}

// The number of hours in the start window for the restore testing plan. Must be between 1 and 168.
func (o RestoreTestingPlanOutput) StartWindowHours() pulumi.IntOutput {
	return o.ApplyT(func(v *RestoreTestingPlan) pulumi.IntOutput { return v.StartWindowHours }).(pulumi.IntOutput)
}

func (o RestoreTestingPlanOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RestoreTestingPlan) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
//
// Deprecated: Please use `tags` instead.
func (o RestoreTestingPlanOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *RestoreTestingPlan) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

type RestoreTestingPlanArrayOutput struct{ *pulumi.OutputState }

func (RestoreTestingPlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RestoreTestingPlan)(nil)).Elem()
}

func (o RestoreTestingPlanArrayOutput) ToRestoreTestingPlanArrayOutput() RestoreTestingPlanArrayOutput {
	return o
}

func (o RestoreTestingPlanArrayOutput) ToRestoreTestingPlanArrayOutputWithContext(ctx context.Context) RestoreTestingPlanArrayOutput {
	return o
}

func (o RestoreTestingPlanArrayOutput) Index(i pulumi.IntInput) RestoreTestingPlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RestoreTestingPlan {
		return vs[0].([]*RestoreTestingPlan)[vs[1].(int)]
	}).(RestoreTestingPlanOutput)
}

type RestoreTestingPlanMapOutput struct{ *pulumi.OutputState }

func (RestoreTestingPlanMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RestoreTestingPlan)(nil)).Elem()
}

func (o RestoreTestingPlanMapOutput) ToRestoreTestingPlanMapOutput() RestoreTestingPlanMapOutput {
	return o
}

func (o RestoreTestingPlanMapOutput) ToRestoreTestingPlanMapOutputWithContext(ctx context.Context) RestoreTestingPlanMapOutput {
	return o
}

func (o RestoreTestingPlanMapOutput) MapIndex(k pulumi.StringInput) RestoreTestingPlanOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RestoreTestingPlan {
		return vs[0].(map[string]*RestoreTestingPlan)[vs[1].(string)]
	}).(RestoreTestingPlanOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RestoreTestingPlanInput)(nil)).Elem(), &RestoreTestingPlan{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestoreTestingPlanArrayInput)(nil)).Elem(), RestoreTestingPlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestoreTestingPlanMapInput)(nil)).Elem(), RestoreTestingPlanMap{})
	pulumi.RegisterOutputType(RestoreTestingPlanOutput{})
	pulumi.RegisterOutputType(RestoreTestingPlanArrayOutput{})
	pulumi.RegisterOutputType(RestoreTestingPlanMapOutput{})
}
