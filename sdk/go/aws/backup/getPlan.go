// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package backup

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupPlan(ctx *pulumi.Context, args *LookupPlanArgs, opts ...pulumi.InvokeOption) (*LookupPlanResult, error) {
	var rv LookupPlanResult
	err := ctx.Invoke("aws:backup/getPlan:getPlan", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPlan.
type LookupPlanArgs struct {
	PlanId string            `pulumi:"planId"`
	Tags   map[string]string `pulumi:"tags"`
}

// A collection of values returned by getPlan.
type LookupPlanResult struct {
	Arn string `pulumi:"arn"`
	// The provider-assigned unique ID for this managed resource.
	Id      string            `pulumi:"id"`
	Name    string            `pulumi:"name"`
	PlanId  string            `pulumi:"planId"`
	Tags    map[string]string `pulumi:"tags"`
	Version string            `pulumi:"version"`
}

func LookupPlanOutput(ctx *pulumi.Context, args LookupPlanOutputArgs, opts ...pulumi.InvokeOption) LookupPlanResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPlanResult, error) {
			args := v.(LookupPlanArgs)
			r, err := LookupPlan(ctx, &args, opts...)
			var s LookupPlanResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPlanResultOutput)
}

// A collection of arguments for invoking getPlan.
type LookupPlanOutputArgs struct {
	PlanId pulumi.StringInput    `pulumi:"planId"`
	Tags   pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupPlanOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPlanArgs)(nil)).Elem()
}

// A collection of values returned by getPlan.
type LookupPlanResultOutput struct{ *pulumi.OutputState }

func (LookupPlanResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPlanResult)(nil)).Elem()
}

func (o LookupPlanResultOutput) ToLookupPlanResultOutput() LookupPlanResultOutput {
	return o
}

func (o LookupPlanResultOutput) ToLookupPlanResultOutputWithContext(ctx context.Context) LookupPlanResultOutput {
	return o
}

func (o LookupPlanResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlanResult) string { return v.Arn }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPlanResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlanResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupPlanResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlanResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupPlanResultOutput) PlanId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlanResult) string { return v.PlanId }).(pulumi.StringOutput)
}

func (o LookupPlanResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupPlanResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupPlanResultOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPlanResult) string { return v.Version }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPlanResultOutput{})
}
