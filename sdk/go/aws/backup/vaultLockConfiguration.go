// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package backup

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VaultLockConfiguration struct {
	pulumi.CustomResourceState

	BackupVaultArn    pulumi.StringOutput `pulumi:"backupVaultArn"`
	BackupVaultName   pulumi.StringOutput `pulumi:"backupVaultName"`
	ChangeableForDays pulumi.IntPtrOutput `pulumi:"changeableForDays"`
	MaxRetentionDays  pulumi.IntPtrOutput `pulumi:"maxRetentionDays"`
	MinRetentionDays  pulumi.IntPtrOutput `pulumi:"minRetentionDays"`
}

// NewVaultLockConfiguration registers a new resource with the given unique name, arguments, and options.
func NewVaultLockConfiguration(ctx *pulumi.Context,
	name string, args *VaultLockConfigurationArgs, opts ...pulumi.ResourceOption) (*VaultLockConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BackupVaultName == nil {
		return nil, errors.New("invalid value for required argument 'BackupVaultName'")
	}
	var resource VaultLockConfiguration
	err := ctx.RegisterResource("aws:backup/vaultLockConfiguration:VaultLockConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVaultLockConfiguration gets an existing VaultLockConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVaultLockConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VaultLockConfigurationState, opts ...pulumi.ResourceOption) (*VaultLockConfiguration, error) {
	var resource VaultLockConfiguration
	err := ctx.ReadResource("aws:backup/vaultLockConfiguration:VaultLockConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VaultLockConfiguration resources.
type vaultLockConfigurationState struct {
	BackupVaultArn    *string `pulumi:"backupVaultArn"`
	BackupVaultName   *string `pulumi:"backupVaultName"`
	ChangeableForDays *int    `pulumi:"changeableForDays"`
	MaxRetentionDays  *int    `pulumi:"maxRetentionDays"`
	MinRetentionDays  *int    `pulumi:"minRetentionDays"`
}

type VaultLockConfigurationState struct {
	BackupVaultArn    pulumi.StringPtrInput
	BackupVaultName   pulumi.StringPtrInput
	ChangeableForDays pulumi.IntPtrInput
	MaxRetentionDays  pulumi.IntPtrInput
	MinRetentionDays  pulumi.IntPtrInput
}

func (VaultLockConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*vaultLockConfigurationState)(nil)).Elem()
}

type vaultLockConfigurationArgs struct {
	BackupVaultName   string `pulumi:"backupVaultName"`
	ChangeableForDays *int   `pulumi:"changeableForDays"`
	MaxRetentionDays  *int   `pulumi:"maxRetentionDays"`
	MinRetentionDays  *int   `pulumi:"minRetentionDays"`
}

// The set of arguments for constructing a VaultLockConfiguration resource.
type VaultLockConfigurationArgs struct {
	BackupVaultName   pulumi.StringInput
	ChangeableForDays pulumi.IntPtrInput
	MaxRetentionDays  pulumi.IntPtrInput
	MinRetentionDays  pulumi.IntPtrInput
}

func (VaultLockConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vaultLockConfigurationArgs)(nil)).Elem()
}

type VaultLockConfigurationInput interface {
	pulumi.Input

	ToVaultLockConfigurationOutput() VaultLockConfigurationOutput
	ToVaultLockConfigurationOutputWithContext(ctx context.Context) VaultLockConfigurationOutput
}

func (*VaultLockConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultLockConfiguration)(nil)).Elem()
}

func (i *VaultLockConfiguration) ToVaultLockConfigurationOutput() VaultLockConfigurationOutput {
	return i.ToVaultLockConfigurationOutputWithContext(context.Background())
}

func (i *VaultLockConfiguration) ToVaultLockConfigurationOutputWithContext(ctx context.Context) VaultLockConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultLockConfigurationOutput)
}

// VaultLockConfigurationArrayInput is an input type that accepts VaultLockConfigurationArray and VaultLockConfigurationArrayOutput values.
// You can construct a concrete instance of `VaultLockConfigurationArrayInput` via:
//
//	VaultLockConfigurationArray{ VaultLockConfigurationArgs{...} }
type VaultLockConfigurationArrayInput interface {
	pulumi.Input

	ToVaultLockConfigurationArrayOutput() VaultLockConfigurationArrayOutput
	ToVaultLockConfigurationArrayOutputWithContext(context.Context) VaultLockConfigurationArrayOutput
}

type VaultLockConfigurationArray []VaultLockConfigurationInput

func (VaultLockConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VaultLockConfiguration)(nil)).Elem()
}

func (i VaultLockConfigurationArray) ToVaultLockConfigurationArrayOutput() VaultLockConfigurationArrayOutput {
	return i.ToVaultLockConfigurationArrayOutputWithContext(context.Background())
}

func (i VaultLockConfigurationArray) ToVaultLockConfigurationArrayOutputWithContext(ctx context.Context) VaultLockConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultLockConfigurationArrayOutput)
}

// VaultLockConfigurationMapInput is an input type that accepts VaultLockConfigurationMap and VaultLockConfigurationMapOutput values.
// You can construct a concrete instance of `VaultLockConfigurationMapInput` via:
//
//	VaultLockConfigurationMap{ "key": VaultLockConfigurationArgs{...} }
type VaultLockConfigurationMapInput interface {
	pulumi.Input

	ToVaultLockConfigurationMapOutput() VaultLockConfigurationMapOutput
	ToVaultLockConfigurationMapOutputWithContext(context.Context) VaultLockConfigurationMapOutput
}

type VaultLockConfigurationMap map[string]VaultLockConfigurationInput

func (VaultLockConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VaultLockConfiguration)(nil)).Elem()
}

func (i VaultLockConfigurationMap) ToVaultLockConfigurationMapOutput() VaultLockConfigurationMapOutput {
	return i.ToVaultLockConfigurationMapOutputWithContext(context.Background())
}

func (i VaultLockConfigurationMap) ToVaultLockConfigurationMapOutputWithContext(ctx context.Context) VaultLockConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VaultLockConfigurationMapOutput)
}

type VaultLockConfigurationOutput struct{ *pulumi.OutputState }

func (VaultLockConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VaultLockConfiguration)(nil)).Elem()
}

func (o VaultLockConfigurationOutput) ToVaultLockConfigurationOutput() VaultLockConfigurationOutput {
	return o
}

func (o VaultLockConfigurationOutput) ToVaultLockConfigurationOutputWithContext(ctx context.Context) VaultLockConfigurationOutput {
	return o
}

func (o VaultLockConfigurationOutput) BackupVaultArn() pulumi.StringOutput {
	return o.ApplyT(func(v *VaultLockConfiguration) pulumi.StringOutput { return v.BackupVaultArn }).(pulumi.StringOutput)
}

func (o VaultLockConfigurationOutput) BackupVaultName() pulumi.StringOutput {
	return o.ApplyT(func(v *VaultLockConfiguration) pulumi.StringOutput { return v.BackupVaultName }).(pulumi.StringOutput)
}

func (o VaultLockConfigurationOutput) ChangeableForDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VaultLockConfiguration) pulumi.IntPtrOutput { return v.ChangeableForDays }).(pulumi.IntPtrOutput)
}

func (o VaultLockConfigurationOutput) MaxRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VaultLockConfiguration) pulumi.IntPtrOutput { return v.MaxRetentionDays }).(pulumi.IntPtrOutput)
}

func (o VaultLockConfigurationOutput) MinRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *VaultLockConfiguration) pulumi.IntPtrOutput { return v.MinRetentionDays }).(pulumi.IntPtrOutput)
}

type VaultLockConfigurationArrayOutput struct{ *pulumi.OutputState }

func (VaultLockConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VaultLockConfiguration)(nil)).Elem()
}

func (o VaultLockConfigurationArrayOutput) ToVaultLockConfigurationArrayOutput() VaultLockConfigurationArrayOutput {
	return o
}

func (o VaultLockConfigurationArrayOutput) ToVaultLockConfigurationArrayOutputWithContext(ctx context.Context) VaultLockConfigurationArrayOutput {
	return o
}

func (o VaultLockConfigurationArrayOutput) Index(i pulumi.IntInput) VaultLockConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VaultLockConfiguration {
		return vs[0].([]*VaultLockConfiguration)[vs[1].(int)]
	}).(VaultLockConfigurationOutput)
}

type VaultLockConfigurationMapOutput struct{ *pulumi.OutputState }

func (VaultLockConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VaultLockConfiguration)(nil)).Elem()
}

func (o VaultLockConfigurationMapOutput) ToVaultLockConfigurationMapOutput() VaultLockConfigurationMapOutput {
	return o
}

func (o VaultLockConfigurationMapOutput) ToVaultLockConfigurationMapOutputWithContext(ctx context.Context) VaultLockConfigurationMapOutput {
	return o
}

func (o VaultLockConfigurationMapOutput) MapIndex(k pulumi.StringInput) VaultLockConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VaultLockConfiguration {
		return vs[0].(map[string]*VaultLockConfiguration)[vs[1].(string)]
	}).(VaultLockConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VaultLockConfigurationInput)(nil)).Elem(), &VaultLockConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*VaultLockConfigurationArrayInput)(nil)).Elem(), VaultLockConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VaultLockConfigurationMapInput)(nil)).Elem(), VaultLockConfigurationMap{})
	pulumi.RegisterOutputType(VaultLockConfigurationOutput{})
	pulumi.RegisterOutputType(VaultLockConfigurationArrayOutput{})
	pulumi.RegisterOutputType(VaultLockConfigurationMapOutput{})
}
