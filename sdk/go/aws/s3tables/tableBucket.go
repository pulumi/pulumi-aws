// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package s3tables

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an Amazon S3 Tables Table Bucket.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/s3tables"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := s3tables.NewTableBucket(ctx, "example", &s3tables.TableBucketArgs{
//				Name: pulumi.String("example-bucket"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import S3 Tables Table Bucket using the `arn`. For example:
//
// ```sh
// $ pulumi import aws:s3tables/tableBucket:TableBucket example arn:aws:s3tables:us-west-2:123456789012:bucket/example-bucket
// ```
type TableBucket struct {
	pulumi.CustomResourceState

	// ARN of the table bucket.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Date and time when the bucket was created.
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// A single table bucket maintenance configuration block.
	// See `maintenanceConfiguration` below
	MaintenanceConfiguration TableBucketMaintenanceConfigurationOutput `pulumi:"maintenanceConfiguration"`
	// Name of the table bucket.
	// Must be between 3 and 63 characters in length.
	// Can consist of lowercase letters, numbers, and hyphens, and must begin and end with a lowercase letter or number.
	// A full list of bucket naming rules may be found in S3 Tables documentation.
	//
	// The following argument is optional:
	Name pulumi.StringOutput `pulumi:"name"`
	// Account ID of the account that owns the table bucket.
	OwnerAccountId pulumi.StringOutput `pulumi:"ownerAccountId"`
}

// NewTableBucket registers a new resource with the given unique name, arguments, and options.
func NewTableBucket(ctx *pulumi.Context,
	name string, args *TableBucketArgs, opts ...pulumi.ResourceOption) (*TableBucket, error) {
	if args == nil {
		args = &TableBucketArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TableBucket
	err := ctx.RegisterResource("aws:s3tables/tableBucket:TableBucket", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTableBucket gets an existing TableBucket resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTableBucket(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TableBucketState, opts ...pulumi.ResourceOption) (*TableBucket, error) {
	var resource TableBucket
	err := ctx.ReadResource("aws:s3tables/tableBucket:TableBucket", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TableBucket resources.
type tableBucketState struct {
	// ARN of the table bucket.
	Arn *string `pulumi:"arn"`
	// Date and time when the bucket was created.
	CreatedAt *string `pulumi:"createdAt"`
	// A single table bucket maintenance configuration block.
	// See `maintenanceConfiguration` below
	MaintenanceConfiguration *TableBucketMaintenanceConfiguration `pulumi:"maintenanceConfiguration"`
	// Name of the table bucket.
	// Must be between 3 and 63 characters in length.
	// Can consist of lowercase letters, numbers, and hyphens, and must begin and end with a lowercase letter or number.
	// A full list of bucket naming rules may be found in S3 Tables documentation.
	//
	// The following argument is optional:
	Name *string `pulumi:"name"`
	// Account ID of the account that owns the table bucket.
	OwnerAccountId *string `pulumi:"ownerAccountId"`
}

type TableBucketState struct {
	// ARN of the table bucket.
	Arn pulumi.StringPtrInput
	// Date and time when the bucket was created.
	CreatedAt pulumi.StringPtrInput
	// A single table bucket maintenance configuration block.
	// See `maintenanceConfiguration` below
	MaintenanceConfiguration TableBucketMaintenanceConfigurationPtrInput
	// Name of the table bucket.
	// Must be between 3 and 63 characters in length.
	// Can consist of lowercase letters, numbers, and hyphens, and must begin and end with a lowercase letter or number.
	// A full list of bucket naming rules may be found in S3 Tables documentation.
	//
	// The following argument is optional:
	Name pulumi.StringPtrInput
	// Account ID of the account that owns the table bucket.
	OwnerAccountId pulumi.StringPtrInput
}

func (TableBucketState) ElementType() reflect.Type {
	return reflect.TypeOf((*tableBucketState)(nil)).Elem()
}

type tableBucketArgs struct {
	// A single table bucket maintenance configuration block.
	// See `maintenanceConfiguration` below
	MaintenanceConfiguration *TableBucketMaintenanceConfiguration `pulumi:"maintenanceConfiguration"`
	// Name of the table bucket.
	// Must be between 3 and 63 characters in length.
	// Can consist of lowercase letters, numbers, and hyphens, and must begin and end with a lowercase letter or number.
	// A full list of bucket naming rules may be found in S3 Tables documentation.
	//
	// The following argument is optional:
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a TableBucket resource.
type TableBucketArgs struct {
	// A single table bucket maintenance configuration block.
	// See `maintenanceConfiguration` below
	MaintenanceConfiguration TableBucketMaintenanceConfigurationPtrInput
	// Name of the table bucket.
	// Must be between 3 and 63 characters in length.
	// Can consist of lowercase letters, numbers, and hyphens, and must begin and end with a lowercase letter or number.
	// A full list of bucket naming rules may be found in S3 Tables documentation.
	//
	// The following argument is optional:
	Name pulumi.StringPtrInput
}

func (TableBucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tableBucketArgs)(nil)).Elem()
}

type TableBucketInput interface {
	pulumi.Input

	ToTableBucketOutput() TableBucketOutput
	ToTableBucketOutputWithContext(ctx context.Context) TableBucketOutput
}

func (*TableBucket) ElementType() reflect.Type {
	return reflect.TypeOf((**TableBucket)(nil)).Elem()
}

func (i *TableBucket) ToTableBucketOutput() TableBucketOutput {
	return i.ToTableBucketOutputWithContext(context.Background())
}

func (i *TableBucket) ToTableBucketOutputWithContext(ctx context.Context) TableBucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableBucketOutput)
}

// TableBucketArrayInput is an input type that accepts TableBucketArray and TableBucketArrayOutput values.
// You can construct a concrete instance of `TableBucketArrayInput` via:
//
//	TableBucketArray{ TableBucketArgs{...} }
type TableBucketArrayInput interface {
	pulumi.Input

	ToTableBucketArrayOutput() TableBucketArrayOutput
	ToTableBucketArrayOutputWithContext(context.Context) TableBucketArrayOutput
}

type TableBucketArray []TableBucketInput

func (TableBucketArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TableBucket)(nil)).Elem()
}

func (i TableBucketArray) ToTableBucketArrayOutput() TableBucketArrayOutput {
	return i.ToTableBucketArrayOutputWithContext(context.Background())
}

func (i TableBucketArray) ToTableBucketArrayOutputWithContext(ctx context.Context) TableBucketArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableBucketArrayOutput)
}

// TableBucketMapInput is an input type that accepts TableBucketMap and TableBucketMapOutput values.
// You can construct a concrete instance of `TableBucketMapInput` via:
//
//	TableBucketMap{ "key": TableBucketArgs{...} }
type TableBucketMapInput interface {
	pulumi.Input

	ToTableBucketMapOutput() TableBucketMapOutput
	ToTableBucketMapOutputWithContext(context.Context) TableBucketMapOutput
}

type TableBucketMap map[string]TableBucketInput

func (TableBucketMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TableBucket)(nil)).Elem()
}

func (i TableBucketMap) ToTableBucketMapOutput() TableBucketMapOutput {
	return i.ToTableBucketMapOutputWithContext(context.Background())
}

func (i TableBucketMap) ToTableBucketMapOutputWithContext(ctx context.Context) TableBucketMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableBucketMapOutput)
}

type TableBucketOutput struct{ *pulumi.OutputState }

func (TableBucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableBucket)(nil)).Elem()
}

func (o TableBucketOutput) ToTableBucketOutput() TableBucketOutput {
	return o
}

func (o TableBucketOutput) ToTableBucketOutputWithContext(ctx context.Context) TableBucketOutput {
	return o
}

// ARN of the table bucket.
func (o TableBucketOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *TableBucket) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Date and time when the bucket was created.
func (o TableBucketOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *TableBucket) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// A single table bucket maintenance configuration block.
// See `maintenanceConfiguration` below
func (o TableBucketOutput) MaintenanceConfiguration() TableBucketMaintenanceConfigurationOutput {
	return o.ApplyT(func(v *TableBucket) TableBucketMaintenanceConfigurationOutput { return v.MaintenanceConfiguration }).(TableBucketMaintenanceConfigurationOutput)
}

// Name of the table bucket.
// Must be between 3 and 63 characters in length.
// Can consist of lowercase letters, numbers, and hyphens, and must begin and end with a lowercase letter or number.
// A full list of bucket naming rules may be found in S3 Tables documentation.
//
// The following argument is optional:
func (o TableBucketOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *TableBucket) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Account ID of the account that owns the table bucket.
func (o TableBucketOutput) OwnerAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v *TableBucket) pulumi.StringOutput { return v.OwnerAccountId }).(pulumi.StringOutput)
}

type TableBucketArrayOutput struct{ *pulumi.OutputState }

func (TableBucketArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TableBucket)(nil)).Elem()
}

func (o TableBucketArrayOutput) ToTableBucketArrayOutput() TableBucketArrayOutput {
	return o
}

func (o TableBucketArrayOutput) ToTableBucketArrayOutputWithContext(ctx context.Context) TableBucketArrayOutput {
	return o
}

func (o TableBucketArrayOutput) Index(i pulumi.IntInput) TableBucketOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TableBucket {
		return vs[0].([]*TableBucket)[vs[1].(int)]
	}).(TableBucketOutput)
}

type TableBucketMapOutput struct{ *pulumi.OutputState }

func (TableBucketMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TableBucket)(nil)).Elem()
}

func (o TableBucketMapOutput) ToTableBucketMapOutput() TableBucketMapOutput {
	return o
}

func (o TableBucketMapOutput) ToTableBucketMapOutputWithContext(ctx context.Context) TableBucketMapOutput {
	return o
}

func (o TableBucketMapOutput) MapIndex(k pulumi.StringInput) TableBucketOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TableBucket {
		return vs[0].(map[string]*TableBucket)[vs[1].(string)]
	}).(TableBucketOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TableBucketInput)(nil)).Elem(), &TableBucket{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableBucketArrayInput)(nil)).Elem(), TableBucketArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TableBucketMapInput)(nil)).Elem(), TableBucketMap{})
	pulumi.RegisterOutputType(TableBucketOutput{})
	pulumi.RegisterOutputType(TableBucketArrayOutput{})
	pulumi.RegisterOutputType(TableBucketMapOutput{})
}
