// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package autoscaling

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Group struct {
	pulumi.CustomResourceState

	Arn                    pulumi.StringOutput                  `pulumi:"arn"`
	AvailabilityZones      pulumi.StringArrayOutput             `pulumi:"availabilityZones"`
	CapacityRebalance      pulumi.BoolPtrOutput                 `pulumi:"capacityRebalance"`
	Context                pulumi.StringPtrOutput               `pulumi:"context"`
	DefaultCooldown        pulumi.IntOutput                     `pulumi:"defaultCooldown"`
	DefaultInstanceWarmup  pulumi.IntPtrOutput                  `pulumi:"defaultInstanceWarmup"`
	DesiredCapacity        pulumi.IntOutput                     `pulumi:"desiredCapacity"`
	DesiredCapacityType    pulumi.StringPtrOutput               `pulumi:"desiredCapacityType"`
	EnabledMetrics         pulumi.StringArrayOutput             `pulumi:"enabledMetrics"`
	ForceDelete            pulumi.BoolPtrOutput                 `pulumi:"forceDelete"`
	ForceDeleteWarmPool    pulumi.BoolPtrOutput                 `pulumi:"forceDeleteWarmPool"`
	HealthCheckGracePeriod pulumi.IntPtrOutput                  `pulumi:"healthCheckGracePeriod"`
	HealthCheckType        pulumi.StringOutput                  `pulumi:"healthCheckType"`
	InitialLifecycleHooks  GroupInitialLifecycleHookArrayOutput `pulumi:"initialLifecycleHooks"`
	InstanceRefresh        GroupInstanceRefreshPtrOutput        `pulumi:"instanceRefresh"`
	LaunchConfiguration    pulumi.StringPtrOutput               `pulumi:"launchConfiguration"`
	LaunchTemplate         GroupLaunchTemplatePtrOutput         `pulumi:"launchTemplate"`
	LoadBalancers          pulumi.StringArrayOutput             `pulumi:"loadBalancers"`
	MaxInstanceLifetime    pulumi.IntPtrOutput                  `pulumi:"maxInstanceLifetime"`
	MaxSize                pulumi.IntOutput                     `pulumi:"maxSize"`
	MetricsGranularity     pulumi.StringPtrOutput               `pulumi:"metricsGranularity"`
	MinElbCapacity         pulumi.IntPtrOutput                  `pulumi:"minElbCapacity"`
	MinSize                pulumi.IntOutput                     `pulumi:"minSize"`
	MixedInstancesPolicy   GroupMixedInstancesPolicyPtrOutput   `pulumi:"mixedInstancesPolicy"`
	Name                   pulumi.StringOutput                  `pulumi:"name"`
	NamePrefix             pulumi.StringOutput                  `pulumi:"namePrefix"`
	PlacementGroup         pulumi.StringPtrOutput               `pulumi:"placementGroup"`
	ProtectFromScaleIn     pulumi.BoolPtrOutput                 `pulumi:"protectFromScaleIn"`
	ServiceLinkedRoleArn   pulumi.StringOutput                  `pulumi:"serviceLinkedRoleArn"`
	SuspendedProcesses     pulumi.StringArrayOutput             `pulumi:"suspendedProcesses"`
	Tags                   GroupTagArrayOutput                  `pulumi:"tags"`
	// Deprecated: Use tag instead
	TagsCollection         pulumi.StringMapArrayOutput `pulumi:"tagsCollection"`
	TargetGroupArns        pulumi.StringArrayOutput    `pulumi:"targetGroupArns"`
	TerminationPolicies    pulumi.StringArrayOutput    `pulumi:"terminationPolicies"`
	VpcZoneIdentifiers     pulumi.StringArrayOutput    `pulumi:"vpcZoneIdentifiers"`
	WaitForCapacityTimeout pulumi.StringPtrOutput      `pulumi:"waitForCapacityTimeout"`
	WaitForElbCapacity     pulumi.IntPtrOutput         `pulumi:"waitForElbCapacity"`
	WarmPool               GroupWarmPoolPtrOutput      `pulumi:"warmPool"`
}

// NewGroup registers a new resource with the given unique name, arguments, and options.
func NewGroup(ctx *pulumi.Context,
	name string, args *GroupArgs, opts ...pulumi.ResourceOption) (*Group, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MaxSize == nil {
		return nil, errors.New("invalid value for required argument 'MaxSize'")
	}
	if args.MinSize == nil {
		return nil, errors.New("invalid value for required argument 'MinSize'")
	}
	var resource Group
	err := ctx.RegisterResource("aws:autoscaling/group:Group", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGroup gets an existing Group resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GroupState, opts ...pulumi.ResourceOption) (*Group, error) {
	var resource Group
	err := ctx.ReadResource("aws:autoscaling/group:Group", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Group resources.
type groupState struct {
	Arn                    *string                     `pulumi:"arn"`
	AvailabilityZones      []string                    `pulumi:"availabilityZones"`
	CapacityRebalance      *bool                       `pulumi:"capacityRebalance"`
	Context                *string                     `pulumi:"context"`
	DefaultCooldown        *int                        `pulumi:"defaultCooldown"`
	DefaultInstanceWarmup  *int                        `pulumi:"defaultInstanceWarmup"`
	DesiredCapacity        *int                        `pulumi:"desiredCapacity"`
	DesiredCapacityType    *string                     `pulumi:"desiredCapacityType"`
	EnabledMetrics         []string                    `pulumi:"enabledMetrics"`
	ForceDelete            *bool                       `pulumi:"forceDelete"`
	ForceDeleteWarmPool    *bool                       `pulumi:"forceDeleteWarmPool"`
	HealthCheckGracePeriod *int                        `pulumi:"healthCheckGracePeriod"`
	HealthCheckType        *string                     `pulumi:"healthCheckType"`
	InitialLifecycleHooks  []GroupInitialLifecycleHook `pulumi:"initialLifecycleHooks"`
	InstanceRefresh        *GroupInstanceRefresh       `pulumi:"instanceRefresh"`
	LaunchConfiguration    interface{}                 `pulumi:"launchConfiguration"`
	LaunchTemplate         *GroupLaunchTemplate        `pulumi:"launchTemplate"`
	LoadBalancers          []string                    `pulumi:"loadBalancers"`
	MaxInstanceLifetime    *int                        `pulumi:"maxInstanceLifetime"`
	MaxSize                *int                        `pulumi:"maxSize"`
	MetricsGranularity     *string                     `pulumi:"metricsGranularity"`
	MinElbCapacity         *int                        `pulumi:"minElbCapacity"`
	MinSize                *int                        `pulumi:"minSize"`
	MixedInstancesPolicy   *GroupMixedInstancesPolicy  `pulumi:"mixedInstancesPolicy"`
	Name                   *string                     `pulumi:"name"`
	NamePrefix             *string                     `pulumi:"namePrefix"`
	PlacementGroup         interface{}                 `pulumi:"placementGroup"`
	ProtectFromScaleIn     *bool                       `pulumi:"protectFromScaleIn"`
	ServiceLinkedRoleArn   *string                     `pulumi:"serviceLinkedRoleArn"`
	SuspendedProcesses     []string                    `pulumi:"suspendedProcesses"`
	Tags                   []GroupTag                  `pulumi:"tags"`
	// Deprecated: Use tag instead
	TagsCollection         []map[string]string `pulumi:"tagsCollection"`
	TargetGroupArns        []string            `pulumi:"targetGroupArns"`
	TerminationPolicies    []string            `pulumi:"terminationPolicies"`
	VpcZoneIdentifiers     []string            `pulumi:"vpcZoneIdentifiers"`
	WaitForCapacityTimeout *string             `pulumi:"waitForCapacityTimeout"`
	WaitForElbCapacity     *int                `pulumi:"waitForElbCapacity"`
	WarmPool               *GroupWarmPool      `pulumi:"warmPool"`
}

type GroupState struct {
	Arn                    pulumi.StringPtrInput
	AvailabilityZones      pulumi.StringArrayInput
	CapacityRebalance      pulumi.BoolPtrInput
	Context                pulumi.StringPtrInput
	DefaultCooldown        pulumi.IntPtrInput
	DefaultInstanceWarmup  pulumi.IntPtrInput
	DesiredCapacity        pulumi.IntPtrInput
	DesiredCapacityType    pulumi.StringPtrInput
	EnabledMetrics         pulumi.StringArrayInput
	ForceDelete            pulumi.BoolPtrInput
	ForceDeleteWarmPool    pulumi.BoolPtrInput
	HealthCheckGracePeriod pulumi.IntPtrInput
	HealthCheckType        pulumi.StringPtrInput
	InitialLifecycleHooks  GroupInitialLifecycleHookArrayInput
	InstanceRefresh        GroupInstanceRefreshPtrInput
	LaunchConfiguration    pulumi.Input
	LaunchTemplate         GroupLaunchTemplatePtrInput
	LoadBalancers          pulumi.StringArrayInput
	MaxInstanceLifetime    pulumi.IntPtrInput
	MaxSize                pulumi.IntPtrInput
	MetricsGranularity     pulumi.StringPtrInput
	MinElbCapacity         pulumi.IntPtrInput
	MinSize                pulumi.IntPtrInput
	MixedInstancesPolicy   GroupMixedInstancesPolicyPtrInput
	Name                   pulumi.StringPtrInput
	NamePrefix             pulumi.StringPtrInput
	PlacementGroup         pulumi.Input
	ProtectFromScaleIn     pulumi.BoolPtrInput
	ServiceLinkedRoleArn   pulumi.StringPtrInput
	SuspendedProcesses     pulumi.StringArrayInput
	Tags                   GroupTagArrayInput
	// Deprecated: Use tag instead
	TagsCollection         pulumi.StringMapArrayInput
	TargetGroupArns        pulumi.StringArrayInput
	TerminationPolicies    pulumi.StringArrayInput
	VpcZoneIdentifiers     pulumi.StringArrayInput
	WaitForCapacityTimeout pulumi.StringPtrInput
	WaitForElbCapacity     pulumi.IntPtrInput
	WarmPool               GroupWarmPoolPtrInput
}

func (GroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*groupState)(nil)).Elem()
}

type groupArgs struct {
	AvailabilityZones      []string                    `pulumi:"availabilityZones"`
	CapacityRebalance      *bool                       `pulumi:"capacityRebalance"`
	Context                *string                     `pulumi:"context"`
	DefaultCooldown        *int                        `pulumi:"defaultCooldown"`
	DefaultInstanceWarmup  *int                        `pulumi:"defaultInstanceWarmup"`
	DesiredCapacity        *int                        `pulumi:"desiredCapacity"`
	DesiredCapacityType    *string                     `pulumi:"desiredCapacityType"`
	EnabledMetrics         []string                    `pulumi:"enabledMetrics"`
	ForceDelete            *bool                       `pulumi:"forceDelete"`
	ForceDeleteWarmPool    *bool                       `pulumi:"forceDeleteWarmPool"`
	HealthCheckGracePeriod *int                        `pulumi:"healthCheckGracePeriod"`
	HealthCheckType        *string                     `pulumi:"healthCheckType"`
	InitialLifecycleHooks  []GroupInitialLifecycleHook `pulumi:"initialLifecycleHooks"`
	InstanceRefresh        *GroupInstanceRefresh       `pulumi:"instanceRefresh"`
	LaunchConfiguration    interface{}                 `pulumi:"launchConfiguration"`
	LaunchTemplate         *GroupLaunchTemplate        `pulumi:"launchTemplate"`
	LoadBalancers          []string                    `pulumi:"loadBalancers"`
	MaxInstanceLifetime    *int                        `pulumi:"maxInstanceLifetime"`
	MaxSize                int                         `pulumi:"maxSize"`
	MetricsGranularity     *string                     `pulumi:"metricsGranularity"`
	MinElbCapacity         *int                        `pulumi:"minElbCapacity"`
	MinSize                int                         `pulumi:"minSize"`
	MixedInstancesPolicy   *GroupMixedInstancesPolicy  `pulumi:"mixedInstancesPolicy"`
	Name                   *string                     `pulumi:"name"`
	NamePrefix             *string                     `pulumi:"namePrefix"`
	PlacementGroup         interface{}                 `pulumi:"placementGroup"`
	ProtectFromScaleIn     *bool                       `pulumi:"protectFromScaleIn"`
	ServiceLinkedRoleArn   *string                     `pulumi:"serviceLinkedRoleArn"`
	SuspendedProcesses     []string                    `pulumi:"suspendedProcesses"`
	Tags                   []GroupTag                  `pulumi:"tags"`
	// Deprecated: Use tag instead
	TagsCollection         []map[string]string `pulumi:"tagsCollection"`
	TargetGroupArns        []string            `pulumi:"targetGroupArns"`
	TerminationPolicies    []string            `pulumi:"terminationPolicies"`
	VpcZoneIdentifiers     []string            `pulumi:"vpcZoneIdentifiers"`
	WaitForCapacityTimeout *string             `pulumi:"waitForCapacityTimeout"`
	WaitForElbCapacity     *int                `pulumi:"waitForElbCapacity"`
	WarmPool               *GroupWarmPool      `pulumi:"warmPool"`
}

// The set of arguments for constructing a Group resource.
type GroupArgs struct {
	AvailabilityZones      pulumi.StringArrayInput
	CapacityRebalance      pulumi.BoolPtrInput
	Context                pulumi.StringPtrInput
	DefaultCooldown        pulumi.IntPtrInput
	DefaultInstanceWarmup  pulumi.IntPtrInput
	DesiredCapacity        pulumi.IntPtrInput
	DesiredCapacityType    pulumi.StringPtrInput
	EnabledMetrics         pulumi.StringArrayInput
	ForceDelete            pulumi.BoolPtrInput
	ForceDeleteWarmPool    pulumi.BoolPtrInput
	HealthCheckGracePeriod pulumi.IntPtrInput
	HealthCheckType        pulumi.StringPtrInput
	InitialLifecycleHooks  GroupInitialLifecycleHookArrayInput
	InstanceRefresh        GroupInstanceRefreshPtrInput
	LaunchConfiguration    pulumi.Input
	LaunchTemplate         GroupLaunchTemplatePtrInput
	LoadBalancers          pulumi.StringArrayInput
	MaxInstanceLifetime    pulumi.IntPtrInput
	MaxSize                pulumi.IntInput
	MetricsGranularity     pulumi.StringPtrInput
	MinElbCapacity         pulumi.IntPtrInput
	MinSize                pulumi.IntInput
	MixedInstancesPolicy   GroupMixedInstancesPolicyPtrInput
	Name                   pulumi.StringPtrInput
	NamePrefix             pulumi.StringPtrInput
	PlacementGroup         pulumi.Input
	ProtectFromScaleIn     pulumi.BoolPtrInput
	ServiceLinkedRoleArn   pulumi.StringPtrInput
	SuspendedProcesses     pulumi.StringArrayInput
	Tags                   GroupTagArrayInput
	// Deprecated: Use tag instead
	TagsCollection         pulumi.StringMapArrayInput
	TargetGroupArns        pulumi.StringArrayInput
	TerminationPolicies    pulumi.StringArrayInput
	VpcZoneIdentifiers     pulumi.StringArrayInput
	WaitForCapacityTimeout pulumi.StringPtrInput
	WaitForElbCapacity     pulumi.IntPtrInput
	WarmPool               GroupWarmPoolPtrInput
}

func (GroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*groupArgs)(nil)).Elem()
}

type GroupInput interface {
	pulumi.Input

	ToGroupOutput() GroupOutput
	ToGroupOutputWithContext(ctx context.Context) GroupOutput
}

func (*Group) ElementType() reflect.Type {
	return reflect.TypeOf((**Group)(nil)).Elem()
}

func (i *Group) ToGroupOutput() GroupOutput {
	return i.ToGroupOutputWithContext(context.Background())
}

func (i *Group) ToGroupOutputWithContext(ctx context.Context) GroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupOutput)
}

// GroupArrayInput is an input type that accepts GroupArray and GroupArrayOutput values.
// You can construct a concrete instance of `GroupArrayInput` via:
//
//	GroupArray{ GroupArgs{...} }
type GroupArrayInput interface {
	pulumi.Input

	ToGroupArrayOutput() GroupArrayOutput
	ToGroupArrayOutputWithContext(context.Context) GroupArrayOutput
}

type GroupArray []GroupInput

func (GroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Group)(nil)).Elem()
}

func (i GroupArray) ToGroupArrayOutput() GroupArrayOutput {
	return i.ToGroupArrayOutputWithContext(context.Background())
}

func (i GroupArray) ToGroupArrayOutputWithContext(ctx context.Context) GroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupArrayOutput)
}

// GroupMapInput is an input type that accepts GroupMap and GroupMapOutput values.
// You can construct a concrete instance of `GroupMapInput` via:
//
//	GroupMap{ "key": GroupArgs{...} }
type GroupMapInput interface {
	pulumi.Input

	ToGroupMapOutput() GroupMapOutput
	ToGroupMapOutputWithContext(context.Context) GroupMapOutput
}

type GroupMap map[string]GroupInput

func (GroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Group)(nil)).Elem()
}

func (i GroupMap) ToGroupMapOutput() GroupMapOutput {
	return i.ToGroupMapOutputWithContext(context.Background())
}

func (i GroupMap) ToGroupMapOutputWithContext(ctx context.Context) GroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMapOutput)
}

type GroupOutput struct{ *pulumi.OutputState }

func (GroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Group)(nil)).Elem()
}

func (o GroupOutput) ToGroupOutput() GroupOutput {
	return o
}

func (o GroupOutput) ToGroupOutputWithContext(ctx context.Context) GroupOutput {
	return o
}

func (o GroupOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o GroupOutput) AvailabilityZones() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Group) pulumi.StringArrayOutput { return v.AvailabilityZones }).(pulumi.StringArrayOutput)
}

func (o GroupOutput) CapacityRebalance() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.BoolPtrOutput { return v.CapacityRebalance }).(pulumi.BoolPtrOutput)
}

func (o GroupOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.StringPtrOutput { return v.Context }).(pulumi.StringPtrOutput)
}

func (o GroupOutput) DefaultCooldown() pulumi.IntOutput {
	return o.ApplyT(func(v *Group) pulumi.IntOutput { return v.DefaultCooldown }).(pulumi.IntOutput)
}

func (o GroupOutput) DefaultInstanceWarmup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.IntPtrOutput { return v.DefaultInstanceWarmup }).(pulumi.IntPtrOutput)
}

func (o GroupOutput) DesiredCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v *Group) pulumi.IntOutput { return v.DesiredCapacity }).(pulumi.IntOutput)
}

func (o GroupOutput) DesiredCapacityType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.StringPtrOutput { return v.DesiredCapacityType }).(pulumi.StringPtrOutput)
}

func (o GroupOutput) EnabledMetrics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Group) pulumi.StringArrayOutput { return v.EnabledMetrics }).(pulumi.StringArrayOutput)
}

func (o GroupOutput) ForceDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.BoolPtrOutput { return v.ForceDelete }).(pulumi.BoolPtrOutput)
}

func (o GroupOutput) ForceDeleteWarmPool() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.BoolPtrOutput { return v.ForceDeleteWarmPool }).(pulumi.BoolPtrOutput)
}

func (o GroupOutput) HealthCheckGracePeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.IntPtrOutput { return v.HealthCheckGracePeriod }).(pulumi.IntPtrOutput)
}

func (o GroupOutput) HealthCheckType() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.HealthCheckType }).(pulumi.StringOutput)
}

func (o GroupOutput) InitialLifecycleHooks() GroupInitialLifecycleHookArrayOutput {
	return o.ApplyT(func(v *Group) GroupInitialLifecycleHookArrayOutput { return v.InitialLifecycleHooks }).(GroupInitialLifecycleHookArrayOutput)
}

func (o GroupOutput) InstanceRefresh() GroupInstanceRefreshPtrOutput {
	return o.ApplyT(func(v *Group) GroupInstanceRefreshPtrOutput { return v.InstanceRefresh }).(GroupInstanceRefreshPtrOutput)
}

func (o GroupOutput) LaunchConfiguration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.StringPtrOutput { return v.LaunchConfiguration }).(pulumi.StringPtrOutput)
}

func (o GroupOutput) LaunchTemplate() GroupLaunchTemplatePtrOutput {
	return o.ApplyT(func(v *Group) GroupLaunchTemplatePtrOutput { return v.LaunchTemplate }).(GroupLaunchTemplatePtrOutput)
}

func (o GroupOutput) LoadBalancers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Group) pulumi.StringArrayOutput { return v.LoadBalancers }).(pulumi.StringArrayOutput)
}

func (o GroupOutput) MaxInstanceLifetime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.IntPtrOutput { return v.MaxInstanceLifetime }).(pulumi.IntPtrOutput)
}

func (o GroupOutput) MaxSize() pulumi.IntOutput {
	return o.ApplyT(func(v *Group) pulumi.IntOutput { return v.MaxSize }).(pulumi.IntOutput)
}

func (o GroupOutput) MetricsGranularity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.StringPtrOutput { return v.MetricsGranularity }).(pulumi.StringPtrOutput)
}

func (o GroupOutput) MinElbCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.IntPtrOutput { return v.MinElbCapacity }).(pulumi.IntPtrOutput)
}

func (o GroupOutput) MinSize() pulumi.IntOutput {
	return o.ApplyT(func(v *Group) pulumi.IntOutput { return v.MinSize }).(pulumi.IntOutput)
}

func (o GroupOutput) MixedInstancesPolicy() GroupMixedInstancesPolicyPtrOutput {
	return o.ApplyT(func(v *Group) GroupMixedInstancesPolicyPtrOutput { return v.MixedInstancesPolicy }).(GroupMixedInstancesPolicyPtrOutput)
}

func (o GroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o GroupOutput) NamePrefix() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.NamePrefix }).(pulumi.StringOutput)
}

func (o GroupOutput) PlacementGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.StringPtrOutput { return v.PlacementGroup }).(pulumi.StringPtrOutput)
}

func (o GroupOutput) ProtectFromScaleIn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.BoolPtrOutput { return v.ProtectFromScaleIn }).(pulumi.BoolPtrOutput)
}

func (o GroupOutput) ServiceLinkedRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Group) pulumi.StringOutput { return v.ServiceLinkedRoleArn }).(pulumi.StringOutput)
}

func (o GroupOutput) SuspendedProcesses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Group) pulumi.StringArrayOutput { return v.SuspendedProcesses }).(pulumi.StringArrayOutput)
}

func (o GroupOutput) Tags() GroupTagArrayOutput {
	return o.ApplyT(func(v *Group) GroupTagArrayOutput { return v.Tags }).(GroupTagArrayOutput)
}

// Deprecated: Use tag instead
func (o GroupOutput) TagsCollection() pulumi.StringMapArrayOutput {
	return o.ApplyT(func(v *Group) pulumi.StringMapArrayOutput { return v.TagsCollection }).(pulumi.StringMapArrayOutput)
}

func (o GroupOutput) TargetGroupArns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Group) pulumi.StringArrayOutput { return v.TargetGroupArns }).(pulumi.StringArrayOutput)
}

func (o GroupOutput) TerminationPolicies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Group) pulumi.StringArrayOutput { return v.TerminationPolicies }).(pulumi.StringArrayOutput)
}

func (o GroupOutput) VpcZoneIdentifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Group) pulumi.StringArrayOutput { return v.VpcZoneIdentifiers }).(pulumi.StringArrayOutput)
}

func (o GroupOutput) WaitForCapacityTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.StringPtrOutput { return v.WaitForCapacityTimeout }).(pulumi.StringPtrOutput)
}

func (o GroupOutput) WaitForElbCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Group) pulumi.IntPtrOutput { return v.WaitForElbCapacity }).(pulumi.IntPtrOutput)
}

func (o GroupOutput) WarmPool() GroupWarmPoolPtrOutput {
	return o.ApplyT(func(v *Group) GroupWarmPoolPtrOutput { return v.WarmPool }).(GroupWarmPoolPtrOutput)
}

type GroupArrayOutput struct{ *pulumi.OutputState }

func (GroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Group)(nil)).Elem()
}

func (o GroupArrayOutput) ToGroupArrayOutput() GroupArrayOutput {
	return o
}

func (o GroupArrayOutput) ToGroupArrayOutputWithContext(ctx context.Context) GroupArrayOutput {
	return o
}

func (o GroupArrayOutput) Index(i pulumi.IntInput) GroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Group {
		return vs[0].([]*Group)[vs[1].(int)]
	}).(GroupOutput)
}

type GroupMapOutput struct{ *pulumi.OutputState }

func (GroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Group)(nil)).Elem()
}

func (o GroupMapOutput) ToGroupMapOutput() GroupMapOutput {
	return o
}

func (o GroupMapOutput) ToGroupMapOutputWithContext(ctx context.Context) GroupMapOutput {
	return o
}

func (o GroupMapOutput) MapIndex(k pulumi.StringInput) GroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Group {
		return vs[0].(map[string]*Group)[vs[1].(string)]
	}).(GroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GroupInput)(nil)).Elem(), &Group{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupArrayInput)(nil)).Elem(), GroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GroupMapInput)(nil)).Elem(), GroupMap{})
	pulumi.RegisterOutputType(GroupOutput{})
	pulumi.RegisterOutputType(GroupArrayOutput{})
	pulumi.RegisterOutputType(GroupMapOutput{})
}
