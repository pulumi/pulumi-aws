// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package autoscaling

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type GroupInitialLifecycleHook struct {
	DefaultResult       *string `pulumi:"defaultResult"`
	HeartbeatTimeout    *int    `pulumi:"heartbeatTimeout"`
	LifecycleTransition string  `pulumi:"lifecycleTransition"`
	// The name of the auto scaling group. By default generated by this provider.
	Name                  string  `pulumi:"name"`
	NotificationMetadata  *string `pulumi:"notificationMetadata"`
	NotificationTargetArn *string `pulumi:"notificationTargetArn"`
	RoleArn               *string `pulumi:"roleArn"`
}

// GroupInitialLifecycleHookInput is an input type that accepts GroupInitialLifecycleHookArgs and GroupInitialLifecycleHookOutput values.
// You can construct a concrete instance of `GroupInitialLifecycleHookInput` via:
//
// 		 GroupInitialLifecycleHookArgs{...}
//
type GroupInitialLifecycleHookInput interface {
	pulumi.Input

	ToGroupInitialLifecycleHookOutput() GroupInitialLifecycleHookOutput
	ToGroupInitialLifecycleHookOutputWithContext(context.Context) GroupInitialLifecycleHookOutput
}

type GroupInitialLifecycleHookArgs struct {
	DefaultResult       pulumi.StringPtrInput `pulumi:"defaultResult"`
	HeartbeatTimeout    pulumi.IntPtrInput    `pulumi:"heartbeatTimeout"`
	LifecycleTransition pulumi.StringInput    `pulumi:"lifecycleTransition"`
	// The name of the auto scaling group. By default generated by this provider.
	Name                  pulumi.StringInput    `pulumi:"name"`
	NotificationMetadata  pulumi.StringPtrInput `pulumi:"notificationMetadata"`
	NotificationTargetArn pulumi.StringPtrInput `pulumi:"notificationTargetArn"`
	RoleArn               pulumi.StringPtrInput `pulumi:"roleArn"`
}

func (GroupInitialLifecycleHookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupInitialLifecycleHook)(nil)).Elem()
}

func (i GroupInitialLifecycleHookArgs) ToGroupInitialLifecycleHookOutput() GroupInitialLifecycleHookOutput {
	return i.ToGroupInitialLifecycleHookOutputWithContext(context.Background())
}

func (i GroupInitialLifecycleHookArgs) ToGroupInitialLifecycleHookOutputWithContext(ctx context.Context) GroupInitialLifecycleHookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupInitialLifecycleHookOutput)
}

// GroupInitialLifecycleHookArrayInput is an input type that accepts GroupInitialLifecycleHookArray and GroupInitialLifecycleHookArrayOutput values.
// You can construct a concrete instance of `GroupInitialLifecycleHookArrayInput` via:
//
// 		 GroupInitialLifecycleHookArray{ GroupInitialLifecycleHookArgs{...} }
//
type GroupInitialLifecycleHookArrayInput interface {
	pulumi.Input

	ToGroupInitialLifecycleHookArrayOutput() GroupInitialLifecycleHookArrayOutput
	ToGroupInitialLifecycleHookArrayOutputWithContext(context.Context) GroupInitialLifecycleHookArrayOutput
}

type GroupInitialLifecycleHookArray []GroupInitialLifecycleHookInput

func (GroupInitialLifecycleHookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupInitialLifecycleHook)(nil)).Elem()
}

func (i GroupInitialLifecycleHookArray) ToGroupInitialLifecycleHookArrayOutput() GroupInitialLifecycleHookArrayOutput {
	return i.ToGroupInitialLifecycleHookArrayOutputWithContext(context.Background())
}

func (i GroupInitialLifecycleHookArray) ToGroupInitialLifecycleHookArrayOutputWithContext(ctx context.Context) GroupInitialLifecycleHookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupInitialLifecycleHookArrayOutput)
}

type GroupInitialLifecycleHookOutput struct{ *pulumi.OutputState }

func (GroupInitialLifecycleHookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupInitialLifecycleHook)(nil)).Elem()
}

func (o GroupInitialLifecycleHookOutput) ToGroupInitialLifecycleHookOutput() GroupInitialLifecycleHookOutput {
	return o
}

func (o GroupInitialLifecycleHookOutput) ToGroupInitialLifecycleHookOutputWithContext(ctx context.Context) GroupInitialLifecycleHookOutput {
	return o
}

func (o GroupInitialLifecycleHookOutput) DefaultResult() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupInitialLifecycleHook) *string { return v.DefaultResult }).(pulumi.StringPtrOutput)
}

func (o GroupInitialLifecycleHookOutput) HeartbeatTimeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupInitialLifecycleHook) *int { return v.HeartbeatTimeout }).(pulumi.IntPtrOutput)
}

func (o GroupInitialLifecycleHookOutput) LifecycleTransition() pulumi.StringOutput {
	return o.ApplyT(func(v GroupInitialLifecycleHook) string { return v.LifecycleTransition }).(pulumi.StringOutput)
}

// The name of the auto scaling group. By default generated by this provider.
func (o GroupInitialLifecycleHookOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GroupInitialLifecycleHook) string { return v.Name }).(pulumi.StringOutput)
}

func (o GroupInitialLifecycleHookOutput) NotificationMetadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupInitialLifecycleHook) *string { return v.NotificationMetadata }).(pulumi.StringPtrOutput)
}

func (o GroupInitialLifecycleHookOutput) NotificationTargetArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupInitialLifecycleHook) *string { return v.NotificationTargetArn }).(pulumi.StringPtrOutput)
}

func (o GroupInitialLifecycleHookOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupInitialLifecycleHook) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

type GroupInitialLifecycleHookArrayOutput struct{ *pulumi.OutputState }

func (GroupInitialLifecycleHookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupInitialLifecycleHook)(nil)).Elem()
}

func (o GroupInitialLifecycleHookArrayOutput) ToGroupInitialLifecycleHookArrayOutput() GroupInitialLifecycleHookArrayOutput {
	return o
}

func (o GroupInitialLifecycleHookArrayOutput) ToGroupInitialLifecycleHookArrayOutputWithContext(ctx context.Context) GroupInitialLifecycleHookArrayOutput {
	return o
}

func (o GroupInitialLifecycleHookArrayOutput) Index(i pulumi.IntInput) GroupInitialLifecycleHookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupInitialLifecycleHook {
		return vs[0].([]GroupInitialLifecycleHook)[vs[1].(int)]
	}).(GroupInitialLifecycleHookOutput)
}

type GroupLaunchTemplate struct {
	// The ID of the launch template. Conflicts with `name`.
	Id *string `pulumi:"id"`
	// The name of the auto scaling group. By default generated by this provider.
	Name *string `pulumi:"name"`
	// Template version. Can be version number, `$Latest`, or `$Default`. (Default: `$Default`).
	Version *string `pulumi:"version"`
}

// GroupLaunchTemplateInput is an input type that accepts GroupLaunchTemplateArgs and GroupLaunchTemplateOutput values.
// You can construct a concrete instance of `GroupLaunchTemplateInput` via:
//
// 		 GroupLaunchTemplateArgs{...}
//
type GroupLaunchTemplateInput interface {
	pulumi.Input

	ToGroupLaunchTemplateOutput() GroupLaunchTemplateOutput
	ToGroupLaunchTemplateOutputWithContext(context.Context) GroupLaunchTemplateOutput
}

type GroupLaunchTemplateArgs struct {
	// The ID of the launch template. Conflicts with `name`.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of the auto scaling group. By default generated by this provider.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Template version. Can be version number, `$Latest`, or `$Default`. (Default: `$Default`).
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GroupLaunchTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupLaunchTemplate)(nil)).Elem()
}

func (i GroupLaunchTemplateArgs) ToGroupLaunchTemplateOutput() GroupLaunchTemplateOutput {
	return i.ToGroupLaunchTemplateOutputWithContext(context.Background())
}

func (i GroupLaunchTemplateArgs) ToGroupLaunchTemplateOutputWithContext(ctx context.Context) GroupLaunchTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupLaunchTemplateOutput)
}

func (i GroupLaunchTemplateArgs) ToGroupLaunchTemplatePtrOutput() GroupLaunchTemplatePtrOutput {
	return i.ToGroupLaunchTemplatePtrOutputWithContext(context.Background())
}

func (i GroupLaunchTemplateArgs) ToGroupLaunchTemplatePtrOutputWithContext(ctx context.Context) GroupLaunchTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupLaunchTemplateOutput).ToGroupLaunchTemplatePtrOutputWithContext(ctx)
}

// GroupLaunchTemplatePtrInput is an input type that accepts GroupLaunchTemplateArgs, GroupLaunchTemplatePtr and GroupLaunchTemplatePtrOutput values.
// You can construct a concrete instance of `GroupLaunchTemplatePtrInput` via:
//
// 		 GroupLaunchTemplateArgs{...}
//
//  or:
//
// 		 nil
//
type GroupLaunchTemplatePtrInput interface {
	pulumi.Input

	ToGroupLaunchTemplatePtrOutput() GroupLaunchTemplatePtrOutput
	ToGroupLaunchTemplatePtrOutputWithContext(context.Context) GroupLaunchTemplatePtrOutput
}

type groupLaunchTemplatePtrType GroupLaunchTemplateArgs

func GroupLaunchTemplatePtr(v *GroupLaunchTemplateArgs) GroupLaunchTemplatePtrInput {
	return (*groupLaunchTemplatePtrType)(v)
}

func (*groupLaunchTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupLaunchTemplate)(nil)).Elem()
}

func (i *groupLaunchTemplatePtrType) ToGroupLaunchTemplatePtrOutput() GroupLaunchTemplatePtrOutput {
	return i.ToGroupLaunchTemplatePtrOutputWithContext(context.Background())
}

func (i *groupLaunchTemplatePtrType) ToGroupLaunchTemplatePtrOutputWithContext(ctx context.Context) GroupLaunchTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupLaunchTemplatePtrOutput)
}

type GroupLaunchTemplateOutput struct{ *pulumi.OutputState }

func (GroupLaunchTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupLaunchTemplate)(nil)).Elem()
}

func (o GroupLaunchTemplateOutput) ToGroupLaunchTemplateOutput() GroupLaunchTemplateOutput {
	return o
}

func (o GroupLaunchTemplateOutput) ToGroupLaunchTemplateOutputWithContext(ctx context.Context) GroupLaunchTemplateOutput {
	return o
}

func (o GroupLaunchTemplateOutput) ToGroupLaunchTemplatePtrOutput() GroupLaunchTemplatePtrOutput {
	return o.ToGroupLaunchTemplatePtrOutputWithContext(context.Background())
}

func (o GroupLaunchTemplateOutput) ToGroupLaunchTemplatePtrOutputWithContext(ctx context.Context) GroupLaunchTemplatePtrOutput {
	return o.ApplyT(func(v GroupLaunchTemplate) *GroupLaunchTemplate {
		return &v
	}).(GroupLaunchTemplatePtrOutput)
}

// The ID of the launch template. Conflicts with `name`.
func (o GroupLaunchTemplateOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupLaunchTemplate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the auto scaling group. By default generated by this provider.
func (o GroupLaunchTemplateOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupLaunchTemplate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Template version. Can be version number, `$Latest`, or `$Default`. (Default: `$Default`).
func (o GroupLaunchTemplateOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupLaunchTemplate) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GroupLaunchTemplatePtrOutput struct{ *pulumi.OutputState }

func (GroupLaunchTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupLaunchTemplate)(nil)).Elem()
}

func (o GroupLaunchTemplatePtrOutput) ToGroupLaunchTemplatePtrOutput() GroupLaunchTemplatePtrOutput {
	return o
}

func (o GroupLaunchTemplatePtrOutput) ToGroupLaunchTemplatePtrOutputWithContext(ctx context.Context) GroupLaunchTemplatePtrOutput {
	return o
}

func (o GroupLaunchTemplatePtrOutput) Elem() GroupLaunchTemplateOutput {
	return o.ApplyT(func(v *GroupLaunchTemplate) GroupLaunchTemplate { return *v }).(GroupLaunchTemplateOutput)
}

// The ID of the launch template. Conflicts with `name`.
func (o GroupLaunchTemplatePtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupLaunchTemplate) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The name of the auto scaling group. By default generated by this provider.
func (o GroupLaunchTemplatePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupLaunchTemplate) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Template version. Can be version number, `$Latest`, or `$Default`. (Default: `$Default`).
func (o GroupLaunchTemplatePtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupLaunchTemplate) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GroupMixedInstancesPolicy struct {
	// Nested argument containing settings on how to mix on-demand and Spot instances in the Auto Scaling group. Defined below.
	InstancesDistribution *GroupMixedInstancesPolicyInstancesDistribution `pulumi:"instancesDistribution"`
	// Nested argument containing launch template settings along with the overrides to specify multiple instance types and weights. Defined below.
	LaunchTemplate GroupMixedInstancesPolicyLaunchTemplate `pulumi:"launchTemplate"`
}

// GroupMixedInstancesPolicyInput is an input type that accepts GroupMixedInstancesPolicyArgs and GroupMixedInstancesPolicyOutput values.
// You can construct a concrete instance of `GroupMixedInstancesPolicyInput` via:
//
// 		 GroupMixedInstancesPolicyArgs{...}
//
type GroupMixedInstancesPolicyInput interface {
	pulumi.Input

	ToGroupMixedInstancesPolicyOutput() GroupMixedInstancesPolicyOutput
	ToGroupMixedInstancesPolicyOutputWithContext(context.Context) GroupMixedInstancesPolicyOutput
}

type GroupMixedInstancesPolicyArgs struct {
	// Nested argument containing settings on how to mix on-demand and Spot instances in the Auto Scaling group. Defined below.
	InstancesDistribution GroupMixedInstancesPolicyInstancesDistributionPtrInput `pulumi:"instancesDistribution"`
	// Nested argument containing launch template settings along with the overrides to specify multiple instance types and weights. Defined below.
	LaunchTemplate GroupMixedInstancesPolicyLaunchTemplateInput `pulumi:"launchTemplate"`
}

func (GroupMixedInstancesPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMixedInstancesPolicy)(nil)).Elem()
}

func (i GroupMixedInstancesPolicyArgs) ToGroupMixedInstancesPolicyOutput() GroupMixedInstancesPolicyOutput {
	return i.ToGroupMixedInstancesPolicyOutputWithContext(context.Background())
}

func (i GroupMixedInstancesPolicyArgs) ToGroupMixedInstancesPolicyOutputWithContext(ctx context.Context) GroupMixedInstancesPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMixedInstancesPolicyOutput)
}

func (i GroupMixedInstancesPolicyArgs) ToGroupMixedInstancesPolicyPtrOutput() GroupMixedInstancesPolicyPtrOutput {
	return i.ToGroupMixedInstancesPolicyPtrOutputWithContext(context.Background())
}

func (i GroupMixedInstancesPolicyArgs) ToGroupMixedInstancesPolicyPtrOutputWithContext(ctx context.Context) GroupMixedInstancesPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMixedInstancesPolicyOutput).ToGroupMixedInstancesPolicyPtrOutputWithContext(ctx)
}

// GroupMixedInstancesPolicyPtrInput is an input type that accepts GroupMixedInstancesPolicyArgs, GroupMixedInstancesPolicyPtr and GroupMixedInstancesPolicyPtrOutput values.
// You can construct a concrete instance of `GroupMixedInstancesPolicyPtrInput` via:
//
// 		 GroupMixedInstancesPolicyArgs{...}
//
//  or:
//
// 		 nil
//
type GroupMixedInstancesPolicyPtrInput interface {
	pulumi.Input

	ToGroupMixedInstancesPolicyPtrOutput() GroupMixedInstancesPolicyPtrOutput
	ToGroupMixedInstancesPolicyPtrOutputWithContext(context.Context) GroupMixedInstancesPolicyPtrOutput
}

type groupMixedInstancesPolicyPtrType GroupMixedInstancesPolicyArgs

func GroupMixedInstancesPolicyPtr(v *GroupMixedInstancesPolicyArgs) GroupMixedInstancesPolicyPtrInput {
	return (*groupMixedInstancesPolicyPtrType)(v)
}

func (*groupMixedInstancesPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMixedInstancesPolicy)(nil)).Elem()
}

func (i *groupMixedInstancesPolicyPtrType) ToGroupMixedInstancesPolicyPtrOutput() GroupMixedInstancesPolicyPtrOutput {
	return i.ToGroupMixedInstancesPolicyPtrOutputWithContext(context.Background())
}

func (i *groupMixedInstancesPolicyPtrType) ToGroupMixedInstancesPolicyPtrOutputWithContext(ctx context.Context) GroupMixedInstancesPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMixedInstancesPolicyPtrOutput)
}

type GroupMixedInstancesPolicyOutput struct{ *pulumi.OutputState }

func (GroupMixedInstancesPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMixedInstancesPolicy)(nil)).Elem()
}

func (o GroupMixedInstancesPolicyOutput) ToGroupMixedInstancesPolicyOutput() GroupMixedInstancesPolicyOutput {
	return o
}

func (o GroupMixedInstancesPolicyOutput) ToGroupMixedInstancesPolicyOutputWithContext(ctx context.Context) GroupMixedInstancesPolicyOutput {
	return o
}

func (o GroupMixedInstancesPolicyOutput) ToGroupMixedInstancesPolicyPtrOutput() GroupMixedInstancesPolicyPtrOutput {
	return o.ToGroupMixedInstancesPolicyPtrOutputWithContext(context.Background())
}

func (o GroupMixedInstancesPolicyOutput) ToGroupMixedInstancesPolicyPtrOutputWithContext(ctx context.Context) GroupMixedInstancesPolicyPtrOutput {
	return o.ApplyT(func(v GroupMixedInstancesPolicy) *GroupMixedInstancesPolicy {
		return &v
	}).(GroupMixedInstancesPolicyPtrOutput)
}

// Nested argument containing settings on how to mix on-demand and Spot instances in the Auto Scaling group. Defined below.
func (o GroupMixedInstancesPolicyOutput) InstancesDistribution() GroupMixedInstancesPolicyInstancesDistributionPtrOutput {
	return o.ApplyT(func(v GroupMixedInstancesPolicy) *GroupMixedInstancesPolicyInstancesDistribution {
		return v.InstancesDistribution
	}).(GroupMixedInstancesPolicyInstancesDistributionPtrOutput)
}

// Nested argument containing launch template settings along with the overrides to specify multiple instance types and weights. Defined below.
func (o GroupMixedInstancesPolicyOutput) LaunchTemplate() GroupMixedInstancesPolicyLaunchTemplateOutput {
	return o.ApplyT(func(v GroupMixedInstancesPolicy) GroupMixedInstancesPolicyLaunchTemplate { return v.LaunchTemplate }).(GroupMixedInstancesPolicyLaunchTemplateOutput)
}

type GroupMixedInstancesPolicyPtrOutput struct{ *pulumi.OutputState }

func (GroupMixedInstancesPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMixedInstancesPolicy)(nil)).Elem()
}

func (o GroupMixedInstancesPolicyPtrOutput) ToGroupMixedInstancesPolicyPtrOutput() GroupMixedInstancesPolicyPtrOutput {
	return o
}

func (o GroupMixedInstancesPolicyPtrOutput) ToGroupMixedInstancesPolicyPtrOutputWithContext(ctx context.Context) GroupMixedInstancesPolicyPtrOutput {
	return o
}

func (o GroupMixedInstancesPolicyPtrOutput) Elem() GroupMixedInstancesPolicyOutput {
	return o.ApplyT(func(v *GroupMixedInstancesPolicy) GroupMixedInstancesPolicy { return *v }).(GroupMixedInstancesPolicyOutput)
}

// Nested argument containing settings on how to mix on-demand and Spot instances in the Auto Scaling group. Defined below.
func (o GroupMixedInstancesPolicyPtrOutput) InstancesDistribution() GroupMixedInstancesPolicyInstancesDistributionPtrOutput {
	return o.ApplyT(func(v GroupMixedInstancesPolicy) *GroupMixedInstancesPolicyInstancesDistribution {
		return v.InstancesDistribution
	}).(GroupMixedInstancesPolicyInstancesDistributionPtrOutput)
}

// Nested argument containing launch template settings along with the overrides to specify multiple instance types and weights. Defined below.
func (o GroupMixedInstancesPolicyPtrOutput) LaunchTemplate() GroupMixedInstancesPolicyLaunchTemplateOutput {
	return o.ApplyT(func(v GroupMixedInstancesPolicy) GroupMixedInstancesPolicyLaunchTemplate { return v.LaunchTemplate }).(GroupMixedInstancesPolicyLaunchTemplateOutput)
}

type GroupMixedInstancesPolicyInstancesDistribution struct {
	// Strategy to use when launching on-demand instances. Valid values: `prioritized`. Default: `prioritized`.
	OnDemandAllocationStrategy *string `pulumi:"onDemandAllocationStrategy"`
	// Absolute minimum amount of desired capacity that must be fulfilled by on-demand instances. Default: `0`.
	OnDemandBaseCapacity *int `pulumi:"onDemandBaseCapacity"`
	// Percentage split between on-demand and Spot instances above the base on-demand capacity. Default: `100`.
	OnDemandPercentageAboveBaseCapacity *int `pulumi:"onDemandPercentageAboveBaseCapacity"`
	// How to allocate capacity across the Spot pools. Valid values: `lowest-price`, `capacity-optimized`. Default: `lowest-price`.
	SpotAllocationStrategy *string `pulumi:"spotAllocationStrategy"`
	// Number of Spot pools per availability zone to allocate capacity. EC2 Auto Scaling selects the cheapest Spot pools and evenly allocates Spot capacity across the number of Spot pools that you specify. Default: `2`.
	SpotInstancePools *int `pulumi:"spotInstancePools"`
	// Maximum price per unit hour that the user is willing to pay for the Spot instances. Default: an empty string which means the on-demand price.
	SpotMaxPrice *string `pulumi:"spotMaxPrice"`
}

// GroupMixedInstancesPolicyInstancesDistributionInput is an input type that accepts GroupMixedInstancesPolicyInstancesDistributionArgs and GroupMixedInstancesPolicyInstancesDistributionOutput values.
// You can construct a concrete instance of `GroupMixedInstancesPolicyInstancesDistributionInput` via:
//
// 		 GroupMixedInstancesPolicyInstancesDistributionArgs{...}
//
type GroupMixedInstancesPolicyInstancesDistributionInput interface {
	pulumi.Input

	ToGroupMixedInstancesPolicyInstancesDistributionOutput() GroupMixedInstancesPolicyInstancesDistributionOutput
	ToGroupMixedInstancesPolicyInstancesDistributionOutputWithContext(context.Context) GroupMixedInstancesPolicyInstancesDistributionOutput
}

type GroupMixedInstancesPolicyInstancesDistributionArgs struct {
	// Strategy to use when launching on-demand instances. Valid values: `prioritized`. Default: `prioritized`.
	OnDemandAllocationStrategy pulumi.StringPtrInput `pulumi:"onDemandAllocationStrategy"`
	// Absolute minimum amount of desired capacity that must be fulfilled by on-demand instances. Default: `0`.
	OnDemandBaseCapacity pulumi.IntPtrInput `pulumi:"onDemandBaseCapacity"`
	// Percentage split between on-demand and Spot instances above the base on-demand capacity. Default: `100`.
	OnDemandPercentageAboveBaseCapacity pulumi.IntPtrInput `pulumi:"onDemandPercentageAboveBaseCapacity"`
	// How to allocate capacity across the Spot pools. Valid values: `lowest-price`, `capacity-optimized`. Default: `lowest-price`.
	SpotAllocationStrategy pulumi.StringPtrInput `pulumi:"spotAllocationStrategy"`
	// Number of Spot pools per availability zone to allocate capacity. EC2 Auto Scaling selects the cheapest Spot pools and evenly allocates Spot capacity across the number of Spot pools that you specify. Default: `2`.
	SpotInstancePools pulumi.IntPtrInput `pulumi:"spotInstancePools"`
	// Maximum price per unit hour that the user is willing to pay for the Spot instances. Default: an empty string which means the on-demand price.
	SpotMaxPrice pulumi.StringPtrInput `pulumi:"spotMaxPrice"`
}

func (GroupMixedInstancesPolicyInstancesDistributionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMixedInstancesPolicyInstancesDistribution)(nil)).Elem()
}

func (i GroupMixedInstancesPolicyInstancesDistributionArgs) ToGroupMixedInstancesPolicyInstancesDistributionOutput() GroupMixedInstancesPolicyInstancesDistributionOutput {
	return i.ToGroupMixedInstancesPolicyInstancesDistributionOutputWithContext(context.Background())
}

func (i GroupMixedInstancesPolicyInstancesDistributionArgs) ToGroupMixedInstancesPolicyInstancesDistributionOutputWithContext(ctx context.Context) GroupMixedInstancesPolicyInstancesDistributionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMixedInstancesPolicyInstancesDistributionOutput)
}

func (i GroupMixedInstancesPolicyInstancesDistributionArgs) ToGroupMixedInstancesPolicyInstancesDistributionPtrOutput() GroupMixedInstancesPolicyInstancesDistributionPtrOutput {
	return i.ToGroupMixedInstancesPolicyInstancesDistributionPtrOutputWithContext(context.Background())
}

func (i GroupMixedInstancesPolicyInstancesDistributionArgs) ToGroupMixedInstancesPolicyInstancesDistributionPtrOutputWithContext(ctx context.Context) GroupMixedInstancesPolicyInstancesDistributionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMixedInstancesPolicyInstancesDistributionOutput).ToGroupMixedInstancesPolicyInstancesDistributionPtrOutputWithContext(ctx)
}

// GroupMixedInstancesPolicyInstancesDistributionPtrInput is an input type that accepts GroupMixedInstancesPolicyInstancesDistributionArgs, GroupMixedInstancesPolicyInstancesDistributionPtr and GroupMixedInstancesPolicyInstancesDistributionPtrOutput values.
// You can construct a concrete instance of `GroupMixedInstancesPolicyInstancesDistributionPtrInput` via:
//
// 		 GroupMixedInstancesPolicyInstancesDistributionArgs{...}
//
//  or:
//
// 		 nil
//
type GroupMixedInstancesPolicyInstancesDistributionPtrInput interface {
	pulumi.Input

	ToGroupMixedInstancesPolicyInstancesDistributionPtrOutput() GroupMixedInstancesPolicyInstancesDistributionPtrOutput
	ToGroupMixedInstancesPolicyInstancesDistributionPtrOutputWithContext(context.Context) GroupMixedInstancesPolicyInstancesDistributionPtrOutput
}

type groupMixedInstancesPolicyInstancesDistributionPtrType GroupMixedInstancesPolicyInstancesDistributionArgs

func GroupMixedInstancesPolicyInstancesDistributionPtr(v *GroupMixedInstancesPolicyInstancesDistributionArgs) GroupMixedInstancesPolicyInstancesDistributionPtrInput {
	return (*groupMixedInstancesPolicyInstancesDistributionPtrType)(v)
}

func (*groupMixedInstancesPolicyInstancesDistributionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMixedInstancesPolicyInstancesDistribution)(nil)).Elem()
}

func (i *groupMixedInstancesPolicyInstancesDistributionPtrType) ToGroupMixedInstancesPolicyInstancesDistributionPtrOutput() GroupMixedInstancesPolicyInstancesDistributionPtrOutput {
	return i.ToGroupMixedInstancesPolicyInstancesDistributionPtrOutputWithContext(context.Background())
}

func (i *groupMixedInstancesPolicyInstancesDistributionPtrType) ToGroupMixedInstancesPolicyInstancesDistributionPtrOutputWithContext(ctx context.Context) GroupMixedInstancesPolicyInstancesDistributionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMixedInstancesPolicyInstancesDistributionPtrOutput)
}

type GroupMixedInstancesPolicyInstancesDistributionOutput struct{ *pulumi.OutputState }

func (GroupMixedInstancesPolicyInstancesDistributionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMixedInstancesPolicyInstancesDistribution)(nil)).Elem()
}

func (o GroupMixedInstancesPolicyInstancesDistributionOutput) ToGroupMixedInstancesPolicyInstancesDistributionOutput() GroupMixedInstancesPolicyInstancesDistributionOutput {
	return o
}

func (o GroupMixedInstancesPolicyInstancesDistributionOutput) ToGroupMixedInstancesPolicyInstancesDistributionOutputWithContext(ctx context.Context) GroupMixedInstancesPolicyInstancesDistributionOutput {
	return o
}

func (o GroupMixedInstancesPolicyInstancesDistributionOutput) ToGroupMixedInstancesPolicyInstancesDistributionPtrOutput() GroupMixedInstancesPolicyInstancesDistributionPtrOutput {
	return o.ToGroupMixedInstancesPolicyInstancesDistributionPtrOutputWithContext(context.Background())
}

func (o GroupMixedInstancesPolicyInstancesDistributionOutput) ToGroupMixedInstancesPolicyInstancesDistributionPtrOutputWithContext(ctx context.Context) GroupMixedInstancesPolicyInstancesDistributionPtrOutput {
	return o.ApplyT(func(v GroupMixedInstancesPolicyInstancesDistribution) *GroupMixedInstancesPolicyInstancesDistribution {
		return &v
	}).(GroupMixedInstancesPolicyInstancesDistributionPtrOutput)
}

// Strategy to use when launching on-demand instances. Valid values: `prioritized`. Default: `prioritized`.
func (o GroupMixedInstancesPolicyInstancesDistributionOutput) OnDemandAllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMixedInstancesPolicyInstancesDistribution) *string { return v.OnDemandAllocationStrategy }).(pulumi.StringPtrOutput)
}

// Absolute minimum amount of desired capacity that must be fulfilled by on-demand instances. Default: `0`.
func (o GroupMixedInstancesPolicyInstancesDistributionOutput) OnDemandBaseCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupMixedInstancesPolicyInstancesDistribution) *int { return v.OnDemandBaseCapacity }).(pulumi.IntPtrOutput)
}

// Percentage split between on-demand and Spot instances above the base on-demand capacity. Default: `100`.
func (o GroupMixedInstancesPolicyInstancesDistributionOutput) OnDemandPercentageAboveBaseCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupMixedInstancesPolicyInstancesDistribution) *int {
		return v.OnDemandPercentageAboveBaseCapacity
	}).(pulumi.IntPtrOutput)
}

// How to allocate capacity across the Spot pools. Valid values: `lowest-price`, `capacity-optimized`. Default: `lowest-price`.
func (o GroupMixedInstancesPolicyInstancesDistributionOutput) SpotAllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMixedInstancesPolicyInstancesDistribution) *string { return v.SpotAllocationStrategy }).(pulumi.StringPtrOutput)
}

// Number of Spot pools per availability zone to allocate capacity. EC2 Auto Scaling selects the cheapest Spot pools and evenly allocates Spot capacity across the number of Spot pools that you specify. Default: `2`.
func (o GroupMixedInstancesPolicyInstancesDistributionOutput) SpotInstancePools() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupMixedInstancesPolicyInstancesDistribution) *int { return v.SpotInstancePools }).(pulumi.IntPtrOutput)
}

// Maximum price per unit hour that the user is willing to pay for the Spot instances. Default: an empty string which means the on-demand price.
func (o GroupMixedInstancesPolicyInstancesDistributionOutput) SpotMaxPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMixedInstancesPolicyInstancesDistribution) *string { return v.SpotMaxPrice }).(pulumi.StringPtrOutput)
}

type GroupMixedInstancesPolicyInstancesDistributionPtrOutput struct{ *pulumi.OutputState }

func (GroupMixedInstancesPolicyInstancesDistributionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GroupMixedInstancesPolicyInstancesDistribution)(nil)).Elem()
}

func (o GroupMixedInstancesPolicyInstancesDistributionPtrOutput) ToGroupMixedInstancesPolicyInstancesDistributionPtrOutput() GroupMixedInstancesPolicyInstancesDistributionPtrOutput {
	return o
}

func (o GroupMixedInstancesPolicyInstancesDistributionPtrOutput) ToGroupMixedInstancesPolicyInstancesDistributionPtrOutputWithContext(ctx context.Context) GroupMixedInstancesPolicyInstancesDistributionPtrOutput {
	return o
}

func (o GroupMixedInstancesPolicyInstancesDistributionPtrOutput) Elem() GroupMixedInstancesPolicyInstancesDistributionOutput {
	return o.ApplyT(func(v *GroupMixedInstancesPolicyInstancesDistribution) GroupMixedInstancesPolicyInstancesDistribution {
		return *v
	}).(GroupMixedInstancesPolicyInstancesDistributionOutput)
}

// Strategy to use when launching on-demand instances. Valid values: `prioritized`. Default: `prioritized`.
func (o GroupMixedInstancesPolicyInstancesDistributionPtrOutput) OnDemandAllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMixedInstancesPolicyInstancesDistribution) *string { return v.OnDemandAllocationStrategy }).(pulumi.StringPtrOutput)
}

// Absolute minimum amount of desired capacity that must be fulfilled by on-demand instances. Default: `0`.
func (o GroupMixedInstancesPolicyInstancesDistributionPtrOutput) OnDemandBaseCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupMixedInstancesPolicyInstancesDistribution) *int { return v.OnDemandBaseCapacity }).(pulumi.IntPtrOutput)
}

// Percentage split between on-demand and Spot instances above the base on-demand capacity. Default: `100`.
func (o GroupMixedInstancesPolicyInstancesDistributionPtrOutput) OnDemandPercentageAboveBaseCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupMixedInstancesPolicyInstancesDistribution) *int {
		return v.OnDemandPercentageAboveBaseCapacity
	}).(pulumi.IntPtrOutput)
}

// How to allocate capacity across the Spot pools. Valid values: `lowest-price`, `capacity-optimized`. Default: `lowest-price`.
func (o GroupMixedInstancesPolicyInstancesDistributionPtrOutput) SpotAllocationStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMixedInstancesPolicyInstancesDistribution) *string { return v.SpotAllocationStrategy }).(pulumi.StringPtrOutput)
}

// Number of Spot pools per availability zone to allocate capacity. EC2 Auto Scaling selects the cheapest Spot pools and evenly allocates Spot capacity across the number of Spot pools that you specify. Default: `2`.
func (o GroupMixedInstancesPolicyInstancesDistributionPtrOutput) SpotInstancePools() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GroupMixedInstancesPolicyInstancesDistribution) *int { return v.SpotInstancePools }).(pulumi.IntPtrOutput)
}

// Maximum price per unit hour that the user is willing to pay for the Spot instances. Default: an empty string which means the on-demand price.
func (o GroupMixedInstancesPolicyInstancesDistributionPtrOutput) SpotMaxPrice() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMixedInstancesPolicyInstancesDistribution) *string { return v.SpotMaxPrice }).(pulumi.StringPtrOutput)
}

type GroupMixedInstancesPolicyLaunchTemplate struct {
	// Nested argument defines the Launch Template. Defined below.
	LaunchTemplateSpecification GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification `pulumi:"launchTemplateSpecification"`
	// List of nested arguments provides the ability to specify multiple instance types. This will override the same parameter in the launch template. For on-demand instances, Auto Scaling considers the order of preference of instance types to launch based on the order specified in the overrides list. Defined below.
	Overrides []GroupMixedInstancesPolicyLaunchTemplateOverride `pulumi:"overrides"`
}

// GroupMixedInstancesPolicyLaunchTemplateInput is an input type that accepts GroupMixedInstancesPolicyLaunchTemplateArgs and GroupMixedInstancesPolicyLaunchTemplateOutput values.
// You can construct a concrete instance of `GroupMixedInstancesPolicyLaunchTemplateInput` via:
//
// 		 GroupMixedInstancesPolicyLaunchTemplateArgs{...}
//
type GroupMixedInstancesPolicyLaunchTemplateInput interface {
	pulumi.Input

	ToGroupMixedInstancesPolicyLaunchTemplateOutput() GroupMixedInstancesPolicyLaunchTemplateOutput
	ToGroupMixedInstancesPolicyLaunchTemplateOutputWithContext(context.Context) GroupMixedInstancesPolicyLaunchTemplateOutput
}

type GroupMixedInstancesPolicyLaunchTemplateArgs struct {
	// Nested argument defines the Launch Template. Defined below.
	LaunchTemplateSpecification GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationInput `pulumi:"launchTemplateSpecification"`
	// List of nested arguments provides the ability to specify multiple instance types. This will override the same parameter in the launch template. For on-demand instances, Auto Scaling considers the order of preference of instance types to launch based on the order specified in the overrides list. Defined below.
	Overrides GroupMixedInstancesPolicyLaunchTemplateOverrideArrayInput `pulumi:"overrides"`
}

func (GroupMixedInstancesPolicyLaunchTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMixedInstancesPolicyLaunchTemplate)(nil)).Elem()
}

func (i GroupMixedInstancesPolicyLaunchTemplateArgs) ToGroupMixedInstancesPolicyLaunchTemplateOutput() GroupMixedInstancesPolicyLaunchTemplateOutput {
	return i.ToGroupMixedInstancesPolicyLaunchTemplateOutputWithContext(context.Background())
}

func (i GroupMixedInstancesPolicyLaunchTemplateArgs) ToGroupMixedInstancesPolicyLaunchTemplateOutputWithContext(ctx context.Context) GroupMixedInstancesPolicyLaunchTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMixedInstancesPolicyLaunchTemplateOutput)
}

type GroupMixedInstancesPolicyLaunchTemplateOutput struct{ *pulumi.OutputState }

func (GroupMixedInstancesPolicyLaunchTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMixedInstancesPolicyLaunchTemplate)(nil)).Elem()
}

func (o GroupMixedInstancesPolicyLaunchTemplateOutput) ToGroupMixedInstancesPolicyLaunchTemplateOutput() GroupMixedInstancesPolicyLaunchTemplateOutput {
	return o
}

func (o GroupMixedInstancesPolicyLaunchTemplateOutput) ToGroupMixedInstancesPolicyLaunchTemplateOutputWithContext(ctx context.Context) GroupMixedInstancesPolicyLaunchTemplateOutput {
	return o
}

// Nested argument defines the Launch Template. Defined below.
func (o GroupMixedInstancesPolicyLaunchTemplateOutput) LaunchTemplateSpecification() GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationOutput {
	return o.ApplyT(func(v GroupMixedInstancesPolicyLaunchTemplate) GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification {
		return v.LaunchTemplateSpecification
	}).(GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationOutput)
}

// List of nested arguments provides the ability to specify multiple instance types. This will override the same parameter in the launch template. For on-demand instances, Auto Scaling considers the order of preference of instance types to launch based on the order specified in the overrides list. Defined below.
func (o GroupMixedInstancesPolicyLaunchTemplateOutput) Overrides() GroupMixedInstancesPolicyLaunchTemplateOverrideArrayOutput {
	return o.ApplyT(func(v GroupMixedInstancesPolicyLaunchTemplate) []GroupMixedInstancesPolicyLaunchTemplateOverride {
		return v.Overrides
	}).(GroupMixedInstancesPolicyLaunchTemplateOverrideArrayOutput)
}

type GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification struct {
	// The ID of the launch template. Conflicts with `launchTemplateName`.
	LaunchTemplateId *string `pulumi:"launchTemplateId"`
	// The name of the launch template. Conflicts with `launchTemplateId`.
	LaunchTemplateName *string `pulumi:"launchTemplateName"`
	// Template version. Can be version number, `$Latest`, or `$Default`. (Default: `$Default`).
	Version *string `pulumi:"version"`
}

// GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationInput is an input type that accepts GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationArgs and GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationOutput values.
// You can construct a concrete instance of `GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationInput` via:
//
// 		 GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationArgs{...}
//
type GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationInput interface {
	pulumi.Input

	ToGroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationOutput() GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationOutput
	ToGroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationOutputWithContext(context.Context) GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationOutput
}

type GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationArgs struct {
	// The ID of the launch template. Conflicts with `launchTemplateName`.
	LaunchTemplateId pulumi.StringPtrInput `pulumi:"launchTemplateId"`
	// The name of the launch template. Conflicts with `launchTemplateId`.
	LaunchTemplateName pulumi.StringPtrInput `pulumi:"launchTemplateName"`
	// Template version. Can be version number, `$Latest`, or `$Default`. (Default: `$Default`).
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification)(nil)).Elem()
}

func (i GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationArgs) ToGroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationOutput() GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationOutput {
	return i.ToGroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationOutputWithContext(context.Background())
}

func (i GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationArgs) ToGroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationOutputWithContext(ctx context.Context) GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationOutput)
}

type GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationOutput struct{ *pulumi.OutputState }

func (GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification)(nil)).Elem()
}

func (o GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationOutput) ToGroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationOutput() GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationOutput {
	return o
}

func (o GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationOutput) ToGroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationOutputWithContext(ctx context.Context) GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationOutput {
	return o
}

// The ID of the launch template. Conflicts with `launchTemplateName`.
func (o GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationOutput) LaunchTemplateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification) *string {
		return v.LaunchTemplateId
	}).(pulumi.StringPtrOutput)
}

// The name of the launch template. Conflicts with `launchTemplateId`.
func (o GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationOutput) LaunchTemplateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification) *string {
		return v.LaunchTemplateName
	}).(pulumi.StringPtrOutput)
}

// Template version. Can be version number, `$Latest`, or `$Default`. (Default: `$Default`).
func (o GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecification) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GroupMixedInstancesPolicyLaunchTemplateOverride struct {
	// Override the instance type in the Launch Template.
	InstanceType *string `pulumi:"instanceType"`
	// The number of capacity units, which gives the instance type a proportional weight to other instance types.
	WeightedCapacity *string `pulumi:"weightedCapacity"`
}

// GroupMixedInstancesPolicyLaunchTemplateOverrideInput is an input type that accepts GroupMixedInstancesPolicyLaunchTemplateOverrideArgs and GroupMixedInstancesPolicyLaunchTemplateOverrideOutput values.
// You can construct a concrete instance of `GroupMixedInstancesPolicyLaunchTemplateOverrideInput` via:
//
// 		 GroupMixedInstancesPolicyLaunchTemplateOverrideArgs{...}
//
type GroupMixedInstancesPolicyLaunchTemplateOverrideInput interface {
	pulumi.Input

	ToGroupMixedInstancesPolicyLaunchTemplateOverrideOutput() GroupMixedInstancesPolicyLaunchTemplateOverrideOutput
	ToGroupMixedInstancesPolicyLaunchTemplateOverrideOutputWithContext(context.Context) GroupMixedInstancesPolicyLaunchTemplateOverrideOutput
}

type GroupMixedInstancesPolicyLaunchTemplateOverrideArgs struct {
	// Override the instance type in the Launch Template.
	InstanceType pulumi.StringPtrInput `pulumi:"instanceType"`
	// The number of capacity units, which gives the instance type a proportional weight to other instance types.
	WeightedCapacity pulumi.StringPtrInput `pulumi:"weightedCapacity"`
}

func (GroupMixedInstancesPolicyLaunchTemplateOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMixedInstancesPolicyLaunchTemplateOverride)(nil)).Elem()
}

func (i GroupMixedInstancesPolicyLaunchTemplateOverrideArgs) ToGroupMixedInstancesPolicyLaunchTemplateOverrideOutput() GroupMixedInstancesPolicyLaunchTemplateOverrideOutput {
	return i.ToGroupMixedInstancesPolicyLaunchTemplateOverrideOutputWithContext(context.Background())
}

func (i GroupMixedInstancesPolicyLaunchTemplateOverrideArgs) ToGroupMixedInstancesPolicyLaunchTemplateOverrideOutputWithContext(ctx context.Context) GroupMixedInstancesPolicyLaunchTemplateOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMixedInstancesPolicyLaunchTemplateOverrideOutput)
}

// GroupMixedInstancesPolicyLaunchTemplateOverrideArrayInput is an input type that accepts GroupMixedInstancesPolicyLaunchTemplateOverrideArray and GroupMixedInstancesPolicyLaunchTemplateOverrideArrayOutput values.
// You can construct a concrete instance of `GroupMixedInstancesPolicyLaunchTemplateOverrideArrayInput` via:
//
// 		 GroupMixedInstancesPolicyLaunchTemplateOverrideArray{ GroupMixedInstancesPolicyLaunchTemplateOverrideArgs{...} }
//
type GroupMixedInstancesPolicyLaunchTemplateOverrideArrayInput interface {
	pulumi.Input

	ToGroupMixedInstancesPolicyLaunchTemplateOverrideArrayOutput() GroupMixedInstancesPolicyLaunchTemplateOverrideArrayOutput
	ToGroupMixedInstancesPolicyLaunchTemplateOverrideArrayOutputWithContext(context.Context) GroupMixedInstancesPolicyLaunchTemplateOverrideArrayOutput
}

type GroupMixedInstancesPolicyLaunchTemplateOverrideArray []GroupMixedInstancesPolicyLaunchTemplateOverrideInput

func (GroupMixedInstancesPolicyLaunchTemplateOverrideArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupMixedInstancesPolicyLaunchTemplateOverride)(nil)).Elem()
}

func (i GroupMixedInstancesPolicyLaunchTemplateOverrideArray) ToGroupMixedInstancesPolicyLaunchTemplateOverrideArrayOutput() GroupMixedInstancesPolicyLaunchTemplateOverrideArrayOutput {
	return i.ToGroupMixedInstancesPolicyLaunchTemplateOverrideArrayOutputWithContext(context.Background())
}

func (i GroupMixedInstancesPolicyLaunchTemplateOverrideArray) ToGroupMixedInstancesPolicyLaunchTemplateOverrideArrayOutputWithContext(ctx context.Context) GroupMixedInstancesPolicyLaunchTemplateOverrideArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupMixedInstancesPolicyLaunchTemplateOverrideArrayOutput)
}

type GroupMixedInstancesPolicyLaunchTemplateOverrideOutput struct{ *pulumi.OutputState }

func (GroupMixedInstancesPolicyLaunchTemplateOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupMixedInstancesPolicyLaunchTemplateOverride)(nil)).Elem()
}

func (o GroupMixedInstancesPolicyLaunchTemplateOverrideOutput) ToGroupMixedInstancesPolicyLaunchTemplateOverrideOutput() GroupMixedInstancesPolicyLaunchTemplateOverrideOutput {
	return o
}

func (o GroupMixedInstancesPolicyLaunchTemplateOverrideOutput) ToGroupMixedInstancesPolicyLaunchTemplateOverrideOutputWithContext(ctx context.Context) GroupMixedInstancesPolicyLaunchTemplateOverrideOutput {
	return o
}

// Override the instance type in the Launch Template.
func (o GroupMixedInstancesPolicyLaunchTemplateOverrideOutput) InstanceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMixedInstancesPolicyLaunchTemplateOverride) *string { return v.InstanceType }).(pulumi.StringPtrOutput)
}

// The number of capacity units, which gives the instance type a proportional weight to other instance types.
func (o GroupMixedInstancesPolicyLaunchTemplateOverrideOutput) WeightedCapacity() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GroupMixedInstancesPolicyLaunchTemplateOverride) *string { return v.WeightedCapacity }).(pulumi.StringPtrOutput)
}

type GroupMixedInstancesPolicyLaunchTemplateOverrideArrayOutput struct{ *pulumi.OutputState }

func (GroupMixedInstancesPolicyLaunchTemplateOverrideArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupMixedInstancesPolicyLaunchTemplateOverride)(nil)).Elem()
}

func (o GroupMixedInstancesPolicyLaunchTemplateOverrideArrayOutput) ToGroupMixedInstancesPolicyLaunchTemplateOverrideArrayOutput() GroupMixedInstancesPolicyLaunchTemplateOverrideArrayOutput {
	return o
}

func (o GroupMixedInstancesPolicyLaunchTemplateOverrideArrayOutput) ToGroupMixedInstancesPolicyLaunchTemplateOverrideArrayOutputWithContext(ctx context.Context) GroupMixedInstancesPolicyLaunchTemplateOverrideArrayOutput {
	return o
}

func (o GroupMixedInstancesPolicyLaunchTemplateOverrideArrayOutput) Index(i pulumi.IntInput) GroupMixedInstancesPolicyLaunchTemplateOverrideOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupMixedInstancesPolicyLaunchTemplateOverride {
		return vs[0].([]GroupMixedInstancesPolicyLaunchTemplateOverride)[vs[1].(int)]
	}).(GroupMixedInstancesPolicyLaunchTemplateOverrideOutput)
}

type GroupTag struct {
	// Key
	Key string `pulumi:"key"`
	// Enables propagation of the tag to
	// Amazon EC2 instances launched via this ASG
	PropagateAtLaunch bool `pulumi:"propagateAtLaunch"`
	// Value
	Value string `pulumi:"value"`
}

// GroupTagInput is an input type that accepts GroupTagArgs and GroupTagOutput values.
// You can construct a concrete instance of `GroupTagInput` via:
//
// 		 GroupTagArgs{...}
//
type GroupTagInput interface {
	pulumi.Input

	ToGroupTagOutput() GroupTagOutput
	ToGroupTagOutputWithContext(context.Context) GroupTagOutput
}

type GroupTagArgs struct {
	// Key
	Key pulumi.StringInput `pulumi:"key"`
	// Enables propagation of the tag to
	// Amazon EC2 instances launched via this ASG
	PropagateAtLaunch pulumi.BoolInput `pulumi:"propagateAtLaunch"`
	// Value
	Value pulumi.StringInput `pulumi:"value"`
}

func (GroupTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupTag)(nil)).Elem()
}

func (i GroupTagArgs) ToGroupTagOutput() GroupTagOutput {
	return i.ToGroupTagOutputWithContext(context.Background())
}

func (i GroupTagArgs) ToGroupTagOutputWithContext(ctx context.Context) GroupTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupTagOutput)
}

// GroupTagArrayInput is an input type that accepts GroupTagArray and GroupTagArrayOutput values.
// You can construct a concrete instance of `GroupTagArrayInput` via:
//
// 		 GroupTagArray{ GroupTagArgs{...} }
//
type GroupTagArrayInput interface {
	pulumi.Input

	ToGroupTagArrayOutput() GroupTagArrayOutput
	ToGroupTagArrayOutputWithContext(context.Context) GroupTagArrayOutput
}

type GroupTagArray []GroupTagInput

func (GroupTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupTag)(nil)).Elem()
}

func (i GroupTagArray) ToGroupTagArrayOutput() GroupTagArrayOutput {
	return i.ToGroupTagArrayOutputWithContext(context.Background())
}

func (i GroupTagArray) ToGroupTagArrayOutputWithContext(ctx context.Context) GroupTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupTagArrayOutput)
}

type GroupTagOutput struct{ *pulumi.OutputState }

func (GroupTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupTag)(nil)).Elem()
}

func (o GroupTagOutput) ToGroupTagOutput() GroupTagOutput {
	return o
}

func (o GroupTagOutput) ToGroupTagOutputWithContext(ctx context.Context) GroupTagOutput {
	return o
}

// Key
func (o GroupTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GroupTag) string { return v.Key }).(pulumi.StringOutput)
}

// Enables propagation of the tag to
// Amazon EC2 instances launched via this ASG
func (o GroupTagOutput) PropagateAtLaunch() pulumi.BoolOutput {
	return o.ApplyT(func(v GroupTag) bool { return v.PropagateAtLaunch }).(pulumi.BoolOutput)
}

// Value
func (o GroupTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GroupTag) string { return v.Value }).(pulumi.StringOutput)
}

type GroupTagArrayOutput struct{ *pulumi.OutputState }

func (GroupTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupTag)(nil)).Elem()
}

func (o GroupTagArrayOutput) ToGroupTagArrayOutput() GroupTagArrayOutput {
	return o
}

func (o GroupTagArrayOutput) ToGroupTagArrayOutputWithContext(ctx context.Context) GroupTagArrayOutput {
	return o
}

func (o GroupTagArrayOutput) Index(i pulumi.IntInput) GroupTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupTag {
		return vs[0].([]GroupTag)[vs[1].(int)]
	}).(GroupTagOutput)
}

type PolicyStepAdjustment struct {
	// The lower bound for the
	// difference between the alarm threshold and the CloudWatch metric.
	// Without a value, AWS will treat this bound as infinity.
	MetricIntervalLowerBound *string `pulumi:"metricIntervalLowerBound"`
	// The upper bound for the
	// difference between the alarm threshold and the CloudWatch metric.
	// Without a value, AWS will treat this bound as infinity. The upper bound
	// must be greater than the lower bound.
	MetricIntervalUpperBound *string `pulumi:"metricIntervalUpperBound"`
	// The number of members by which to
	// scale, when the adjustment bounds are breached. A positive value scales
	// up. A negative value scales down.
	ScalingAdjustment int `pulumi:"scalingAdjustment"`
}

// PolicyStepAdjustmentInput is an input type that accepts PolicyStepAdjustmentArgs and PolicyStepAdjustmentOutput values.
// You can construct a concrete instance of `PolicyStepAdjustmentInput` via:
//
// 		 PolicyStepAdjustmentArgs{...}
//
type PolicyStepAdjustmentInput interface {
	pulumi.Input

	ToPolicyStepAdjustmentOutput() PolicyStepAdjustmentOutput
	ToPolicyStepAdjustmentOutputWithContext(context.Context) PolicyStepAdjustmentOutput
}

type PolicyStepAdjustmentArgs struct {
	// The lower bound for the
	// difference between the alarm threshold and the CloudWatch metric.
	// Without a value, AWS will treat this bound as infinity.
	MetricIntervalLowerBound pulumi.StringPtrInput `pulumi:"metricIntervalLowerBound"`
	// The upper bound for the
	// difference between the alarm threshold and the CloudWatch metric.
	// Without a value, AWS will treat this bound as infinity. The upper bound
	// must be greater than the lower bound.
	MetricIntervalUpperBound pulumi.StringPtrInput `pulumi:"metricIntervalUpperBound"`
	// The number of members by which to
	// scale, when the adjustment bounds are breached. A positive value scales
	// up. A negative value scales down.
	ScalingAdjustment pulumi.IntInput `pulumi:"scalingAdjustment"`
}

func (PolicyStepAdjustmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStepAdjustment)(nil)).Elem()
}

func (i PolicyStepAdjustmentArgs) ToPolicyStepAdjustmentOutput() PolicyStepAdjustmentOutput {
	return i.ToPolicyStepAdjustmentOutputWithContext(context.Background())
}

func (i PolicyStepAdjustmentArgs) ToPolicyStepAdjustmentOutputWithContext(ctx context.Context) PolicyStepAdjustmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStepAdjustmentOutput)
}

// PolicyStepAdjustmentArrayInput is an input type that accepts PolicyStepAdjustmentArray and PolicyStepAdjustmentArrayOutput values.
// You can construct a concrete instance of `PolicyStepAdjustmentArrayInput` via:
//
// 		 PolicyStepAdjustmentArray{ PolicyStepAdjustmentArgs{...} }
//
type PolicyStepAdjustmentArrayInput interface {
	pulumi.Input

	ToPolicyStepAdjustmentArrayOutput() PolicyStepAdjustmentArrayOutput
	ToPolicyStepAdjustmentArrayOutputWithContext(context.Context) PolicyStepAdjustmentArrayOutput
}

type PolicyStepAdjustmentArray []PolicyStepAdjustmentInput

func (PolicyStepAdjustmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyStepAdjustment)(nil)).Elem()
}

func (i PolicyStepAdjustmentArray) ToPolicyStepAdjustmentArrayOutput() PolicyStepAdjustmentArrayOutput {
	return i.ToPolicyStepAdjustmentArrayOutputWithContext(context.Background())
}

func (i PolicyStepAdjustmentArray) ToPolicyStepAdjustmentArrayOutputWithContext(ctx context.Context) PolicyStepAdjustmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyStepAdjustmentArrayOutput)
}

type PolicyStepAdjustmentOutput struct{ *pulumi.OutputState }

func (PolicyStepAdjustmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyStepAdjustment)(nil)).Elem()
}

func (o PolicyStepAdjustmentOutput) ToPolicyStepAdjustmentOutput() PolicyStepAdjustmentOutput {
	return o
}

func (o PolicyStepAdjustmentOutput) ToPolicyStepAdjustmentOutputWithContext(ctx context.Context) PolicyStepAdjustmentOutput {
	return o
}

// The lower bound for the
// difference between the alarm threshold and the CloudWatch metric.
// Without a value, AWS will treat this bound as infinity.
func (o PolicyStepAdjustmentOutput) MetricIntervalLowerBound() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyStepAdjustment) *string { return v.MetricIntervalLowerBound }).(pulumi.StringPtrOutput)
}

// The upper bound for the
// difference between the alarm threshold and the CloudWatch metric.
// Without a value, AWS will treat this bound as infinity. The upper bound
// must be greater than the lower bound.
func (o PolicyStepAdjustmentOutput) MetricIntervalUpperBound() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyStepAdjustment) *string { return v.MetricIntervalUpperBound }).(pulumi.StringPtrOutput)
}

// The number of members by which to
// scale, when the adjustment bounds are breached. A positive value scales
// up. A negative value scales down.
func (o PolicyStepAdjustmentOutput) ScalingAdjustment() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyStepAdjustment) int { return v.ScalingAdjustment }).(pulumi.IntOutput)
}

type PolicyStepAdjustmentArrayOutput struct{ *pulumi.OutputState }

func (PolicyStepAdjustmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyStepAdjustment)(nil)).Elem()
}

func (o PolicyStepAdjustmentArrayOutput) ToPolicyStepAdjustmentArrayOutput() PolicyStepAdjustmentArrayOutput {
	return o
}

func (o PolicyStepAdjustmentArrayOutput) ToPolicyStepAdjustmentArrayOutputWithContext(ctx context.Context) PolicyStepAdjustmentArrayOutput {
	return o
}

func (o PolicyStepAdjustmentArrayOutput) Index(i pulumi.IntInput) PolicyStepAdjustmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyStepAdjustment {
		return vs[0].([]PolicyStepAdjustment)[vs[1].(int)]
	}).(PolicyStepAdjustmentOutput)
}

type PolicyTargetTrackingConfiguration struct {
	// A customized metric. Conflicts with `predefinedMetricSpecification`.
	CustomizedMetricSpecification *PolicyTargetTrackingConfigurationCustomizedMetricSpecification `pulumi:"customizedMetricSpecification"`
	// Indicates whether scale in by the target tracking policy is disabled.
	DisableScaleIn *bool `pulumi:"disableScaleIn"`
	// A predefined metric. Conflicts with `customizedMetricSpecification`.
	PredefinedMetricSpecification *PolicyTargetTrackingConfigurationPredefinedMetricSpecification `pulumi:"predefinedMetricSpecification"`
	// The target value for the metric.
	TargetValue float64 `pulumi:"targetValue"`
}

// PolicyTargetTrackingConfigurationInput is an input type that accepts PolicyTargetTrackingConfigurationArgs and PolicyTargetTrackingConfigurationOutput values.
// You can construct a concrete instance of `PolicyTargetTrackingConfigurationInput` via:
//
// 		 PolicyTargetTrackingConfigurationArgs{...}
//
type PolicyTargetTrackingConfigurationInput interface {
	pulumi.Input

	ToPolicyTargetTrackingConfigurationOutput() PolicyTargetTrackingConfigurationOutput
	ToPolicyTargetTrackingConfigurationOutputWithContext(context.Context) PolicyTargetTrackingConfigurationOutput
}

type PolicyTargetTrackingConfigurationArgs struct {
	// A customized metric. Conflicts with `predefinedMetricSpecification`.
	CustomizedMetricSpecification PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrInput `pulumi:"customizedMetricSpecification"`
	// Indicates whether scale in by the target tracking policy is disabled.
	DisableScaleIn pulumi.BoolPtrInput `pulumi:"disableScaleIn"`
	// A predefined metric. Conflicts with `customizedMetricSpecification`.
	PredefinedMetricSpecification PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrInput `pulumi:"predefinedMetricSpecification"`
	// The target value for the metric.
	TargetValue pulumi.Float64Input `pulumi:"targetValue"`
}

func (PolicyTargetTrackingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingConfiguration)(nil)).Elem()
}

func (i PolicyTargetTrackingConfigurationArgs) ToPolicyTargetTrackingConfigurationOutput() PolicyTargetTrackingConfigurationOutput {
	return i.ToPolicyTargetTrackingConfigurationOutputWithContext(context.Background())
}

func (i PolicyTargetTrackingConfigurationArgs) ToPolicyTargetTrackingConfigurationOutputWithContext(ctx context.Context) PolicyTargetTrackingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingConfigurationOutput)
}

func (i PolicyTargetTrackingConfigurationArgs) ToPolicyTargetTrackingConfigurationPtrOutput() PolicyTargetTrackingConfigurationPtrOutput {
	return i.ToPolicyTargetTrackingConfigurationPtrOutputWithContext(context.Background())
}

func (i PolicyTargetTrackingConfigurationArgs) ToPolicyTargetTrackingConfigurationPtrOutputWithContext(ctx context.Context) PolicyTargetTrackingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingConfigurationOutput).ToPolicyTargetTrackingConfigurationPtrOutputWithContext(ctx)
}

// PolicyTargetTrackingConfigurationPtrInput is an input type that accepts PolicyTargetTrackingConfigurationArgs, PolicyTargetTrackingConfigurationPtr and PolicyTargetTrackingConfigurationPtrOutput values.
// You can construct a concrete instance of `PolicyTargetTrackingConfigurationPtrInput` via:
//
// 		 PolicyTargetTrackingConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type PolicyTargetTrackingConfigurationPtrInput interface {
	pulumi.Input

	ToPolicyTargetTrackingConfigurationPtrOutput() PolicyTargetTrackingConfigurationPtrOutput
	ToPolicyTargetTrackingConfigurationPtrOutputWithContext(context.Context) PolicyTargetTrackingConfigurationPtrOutput
}

type policyTargetTrackingConfigurationPtrType PolicyTargetTrackingConfigurationArgs

func PolicyTargetTrackingConfigurationPtr(v *PolicyTargetTrackingConfigurationArgs) PolicyTargetTrackingConfigurationPtrInput {
	return (*policyTargetTrackingConfigurationPtrType)(v)
}

func (*policyTargetTrackingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTargetTrackingConfiguration)(nil)).Elem()
}

func (i *policyTargetTrackingConfigurationPtrType) ToPolicyTargetTrackingConfigurationPtrOutput() PolicyTargetTrackingConfigurationPtrOutput {
	return i.ToPolicyTargetTrackingConfigurationPtrOutputWithContext(context.Background())
}

func (i *policyTargetTrackingConfigurationPtrType) ToPolicyTargetTrackingConfigurationPtrOutputWithContext(ctx context.Context) PolicyTargetTrackingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingConfigurationPtrOutput)
}

type PolicyTargetTrackingConfigurationOutput struct{ *pulumi.OutputState }

func (PolicyTargetTrackingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingConfiguration)(nil)).Elem()
}

func (o PolicyTargetTrackingConfigurationOutput) ToPolicyTargetTrackingConfigurationOutput() PolicyTargetTrackingConfigurationOutput {
	return o
}

func (o PolicyTargetTrackingConfigurationOutput) ToPolicyTargetTrackingConfigurationOutputWithContext(ctx context.Context) PolicyTargetTrackingConfigurationOutput {
	return o
}

func (o PolicyTargetTrackingConfigurationOutput) ToPolicyTargetTrackingConfigurationPtrOutput() PolicyTargetTrackingConfigurationPtrOutput {
	return o.ToPolicyTargetTrackingConfigurationPtrOutputWithContext(context.Background())
}

func (o PolicyTargetTrackingConfigurationOutput) ToPolicyTargetTrackingConfigurationPtrOutputWithContext(ctx context.Context) PolicyTargetTrackingConfigurationPtrOutput {
	return o.ApplyT(func(v PolicyTargetTrackingConfiguration) *PolicyTargetTrackingConfiguration {
		return &v
	}).(PolicyTargetTrackingConfigurationPtrOutput)
}

// A customized metric. Conflicts with `predefinedMetricSpecification`.
func (o PolicyTargetTrackingConfigurationOutput) CustomizedMetricSpecification() PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput {
	return o.ApplyT(func(v PolicyTargetTrackingConfiguration) *PolicyTargetTrackingConfigurationCustomizedMetricSpecification {
		return v.CustomizedMetricSpecification
	}).(PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput)
}

// Indicates whether scale in by the target tracking policy is disabled.
func (o PolicyTargetTrackingConfigurationOutput) DisableScaleIn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyTargetTrackingConfiguration) *bool { return v.DisableScaleIn }).(pulumi.BoolPtrOutput)
}

// A predefined metric. Conflicts with `customizedMetricSpecification`.
func (o PolicyTargetTrackingConfigurationOutput) PredefinedMetricSpecification() PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput {
	return o.ApplyT(func(v PolicyTargetTrackingConfiguration) *PolicyTargetTrackingConfigurationPredefinedMetricSpecification {
		return v.PredefinedMetricSpecification
	}).(PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput)
}

// The target value for the metric.
func (o PolicyTargetTrackingConfigurationOutput) TargetValue() pulumi.Float64Output {
	return o.ApplyT(func(v PolicyTargetTrackingConfiguration) float64 { return v.TargetValue }).(pulumi.Float64Output)
}

type PolicyTargetTrackingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (PolicyTargetTrackingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTargetTrackingConfiguration)(nil)).Elem()
}

func (o PolicyTargetTrackingConfigurationPtrOutput) ToPolicyTargetTrackingConfigurationPtrOutput() PolicyTargetTrackingConfigurationPtrOutput {
	return o
}

func (o PolicyTargetTrackingConfigurationPtrOutput) ToPolicyTargetTrackingConfigurationPtrOutputWithContext(ctx context.Context) PolicyTargetTrackingConfigurationPtrOutput {
	return o
}

func (o PolicyTargetTrackingConfigurationPtrOutput) Elem() PolicyTargetTrackingConfigurationOutput {
	return o.ApplyT(func(v *PolicyTargetTrackingConfiguration) PolicyTargetTrackingConfiguration { return *v }).(PolicyTargetTrackingConfigurationOutput)
}

// A customized metric. Conflicts with `predefinedMetricSpecification`.
func (o PolicyTargetTrackingConfigurationPtrOutput) CustomizedMetricSpecification() PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput {
	return o.ApplyT(func(v PolicyTargetTrackingConfiguration) *PolicyTargetTrackingConfigurationCustomizedMetricSpecification {
		return v.CustomizedMetricSpecification
	}).(PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput)
}

// Indicates whether scale in by the target tracking policy is disabled.
func (o PolicyTargetTrackingConfigurationPtrOutput) DisableScaleIn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v PolicyTargetTrackingConfiguration) *bool { return v.DisableScaleIn }).(pulumi.BoolPtrOutput)
}

// A predefined metric. Conflicts with `customizedMetricSpecification`.
func (o PolicyTargetTrackingConfigurationPtrOutput) PredefinedMetricSpecification() PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput {
	return o.ApplyT(func(v PolicyTargetTrackingConfiguration) *PolicyTargetTrackingConfigurationPredefinedMetricSpecification {
		return v.PredefinedMetricSpecification
	}).(PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput)
}

// The target value for the metric.
func (o PolicyTargetTrackingConfigurationPtrOutput) TargetValue() pulumi.Float64Output {
	return o.ApplyT(func(v PolicyTargetTrackingConfiguration) float64 { return v.TargetValue }).(pulumi.Float64Output)
}

type PolicyTargetTrackingConfigurationCustomizedMetricSpecification struct {
	// The dimensions of the metric.
	MetricDimensions []PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimension `pulumi:"metricDimensions"`
	// The name of the metric.
	MetricName string `pulumi:"metricName"`
	// The namespace of the metric.
	Namespace string `pulumi:"namespace"`
	// The statistic of the metric.
	Statistic string `pulumi:"statistic"`
	// The unit of the metric.
	Unit *string `pulumi:"unit"`
}

// PolicyTargetTrackingConfigurationCustomizedMetricSpecificationInput is an input type that accepts PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs and PolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutput values.
// You can construct a concrete instance of `PolicyTargetTrackingConfigurationCustomizedMetricSpecificationInput` via:
//
// 		 PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs{...}
//
type PolicyTargetTrackingConfigurationCustomizedMetricSpecificationInput interface {
	pulumi.Input

	ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutput() PolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutput
	ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutputWithContext(context.Context) PolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutput
}

type PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs struct {
	// The dimensions of the metric.
	MetricDimensions PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayInput `pulumi:"metricDimensions"`
	// The name of the metric.
	MetricName pulumi.StringInput `pulumi:"metricName"`
	// The namespace of the metric.
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// The statistic of the metric.
	Statistic pulumi.StringInput `pulumi:"statistic"`
	// The unit of the metric.
	Unit pulumi.StringPtrInput `pulumi:"unit"`
}

func (PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingConfigurationCustomizedMetricSpecification)(nil)).Elem()
}

func (i PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs) ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutput() PolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutput {
	return i.ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutputWithContext(context.Background())
}

func (i PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs) ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutputWithContext(ctx context.Context) PolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutput)
}

func (i PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs) ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput() PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput {
	return i.ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutputWithContext(context.Background())
}

func (i PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs) ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutputWithContext(ctx context.Context) PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutput).ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutputWithContext(ctx)
}

// PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrInput is an input type that accepts PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs, PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtr and PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput values.
// You can construct a concrete instance of `PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrInput` via:
//
// 		 PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs{...}
//
//  or:
//
// 		 nil
//
type PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrInput interface {
	pulumi.Input

	ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput() PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput
	ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutputWithContext(context.Context) PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput
}

type policyTargetTrackingConfigurationCustomizedMetricSpecificationPtrType PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs

func PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtr(v *PolicyTargetTrackingConfigurationCustomizedMetricSpecificationArgs) PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrInput {
	return (*policyTargetTrackingConfigurationCustomizedMetricSpecificationPtrType)(v)
}

func (*policyTargetTrackingConfigurationCustomizedMetricSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTargetTrackingConfigurationCustomizedMetricSpecification)(nil)).Elem()
}

func (i *policyTargetTrackingConfigurationCustomizedMetricSpecificationPtrType) ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput() PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput {
	return i.ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutputWithContext(context.Background())
}

func (i *policyTargetTrackingConfigurationCustomizedMetricSpecificationPtrType) ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutputWithContext(ctx context.Context) PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput)
}

type PolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutput struct{ *pulumi.OutputState }

func (PolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingConfigurationCustomizedMetricSpecification)(nil)).Elem()
}

func (o PolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutput) ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutput() PolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutput {
	return o
}

func (o PolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutput) ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutputWithContext(ctx context.Context) PolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutput {
	return o
}

func (o PolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutput) ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput() PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput {
	return o.ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutputWithContext(context.Background())
}

func (o PolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutput) ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutputWithContext(ctx context.Context) PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput {
	return o.ApplyT(func(v PolicyTargetTrackingConfigurationCustomizedMetricSpecification) *PolicyTargetTrackingConfigurationCustomizedMetricSpecification {
		return &v
	}).(PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput)
}

// The dimensions of the metric.
func (o PolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutput) MetricDimensions() PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayOutput {
	return o.ApplyT(func(v PolicyTargetTrackingConfigurationCustomizedMetricSpecification) []PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimension {
		return v.MetricDimensions
	}).(PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayOutput)
}

// The name of the metric.
func (o PolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyTargetTrackingConfigurationCustomizedMetricSpecification) string { return v.MetricName }).(pulumi.StringOutput)
}

// The namespace of the metric.
func (o PolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyTargetTrackingConfigurationCustomizedMetricSpecification) string { return v.Namespace }).(pulumi.StringOutput)
}

// The statistic of the metric.
func (o PolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutput) Statistic() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyTargetTrackingConfigurationCustomizedMetricSpecification) string { return v.Statistic }).(pulumi.StringOutput)
}

// The unit of the metric.
func (o PolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTargetTrackingConfigurationCustomizedMetricSpecification) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput struct{ *pulumi.OutputState }

func (PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTargetTrackingConfigurationCustomizedMetricSpecification)(nil)).Elem()
}

func (o PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput) ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput() PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput {
	return o
}

func (o PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput) ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutputWithContext(ctx context.Context) PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput {
	return o
}

func (o PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput) Elem() PolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutput {
	return o.ApplyT(func(v *PolicyTargetTrackingConfigurationCustomizedMetricSpecification) PolicyTargetTrackingConfigurationCustomizedMetricSpecification {
		return *v
	}).(PolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutput)
}

// The dimensions of the metric.
func (o PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput) MetricDimensions() PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayOutput {
	return o.ApplyT(func(v PolicyTargetTrackingConfigurationCustomizedMetricSpecification) []PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimension {
		return v.MetricDimensions
	}).(PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayOutput)
}

// The name of the metric.
func (o PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput) MetricName() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyTargetTrackingConfigurationCustomizedMetricSpecification) string { return v.MetricName }).(pulumi.StringOutput)
}

// The namespace of the metric.
func (o PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyTargetTrackingConfigurationCustomizedMetricSpecification) string { return v.Namespace }).(pulumi.StringOutput)
}

// The statistic of the metric.
func (o PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput) Statistic() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyTargetTrackingConfigurationCustomizedMetricSpecification) string { return v.Statistic }).(pulumi.StringOutput)
}

// The unit of the metric.
func (o PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTargetTrackingConfigurationCustomizedMetricSpecification) *string { return v.Unit }).(pulumi.StringPtrOutput)
}

type PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimension struct {
	// The name of the dimension.
	Name string `pulumi:"name"`
	// The value of the dimension.
	Value string `pulumi:"value"`
}

// PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionInput is an input type that accepts PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArgs and PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionOutput values.
// You can construct a concrete instance of `PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionInput` via:
//
// 		 PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArgs{...}
//
type PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionInput interface {
	pulumi.Input

	ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionOutput() PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionOutput
	ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionOutputWithContext(context.Context) PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionOutput
}

type PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArgs struct {
	// The name of the dimension.
	Name pulumi.StringInput `pulumi:"name"`
	// The value of the dimension.
	Value pulumi.StringInput `pulumi:"value"`
}

func (PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimension)(nil)).Elem()
}

func (i PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArgs) ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionOutput() PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionOutput {
	return i.ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionOutputWithContext(context.Background())
}

func (i PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArgs) ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionOutputWithContext(ctx context.Context) PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionOutput)
}

// PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayInput is an input type that accepts PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArray and PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayOutput values.
// You can construct a concrete instance of `PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayInput` via:
//
// 		 PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArray{ PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArgs{...} }
//
type PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayInput interface {
	pulumi.Input

	ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayOutput() PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayOutput
	ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayOutputWithContext(context.Context) PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayOutput
}

type PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArray []PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionInput

func (PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimension)(nil)).Elem()
}

func (i PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArray) ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayOutput() PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayOutput {
	return i.ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayOutputWithContext(context.Background())
}

func (i PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArray) ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayOutputWithContext(ctx context.Context) PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayOutput)
}

type PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionOutput struct{ *pulumi.OutputState }

func (PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimension)(nil)).Elem()
}

func (o PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionOutput) ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionOutput() PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionOutput {
	return o
}

func (o PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionOutput) ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionOutputWithContext(ctx context.Context) PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionOutput {
	return o
}

// The name of the dimension.
func (o PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimension) string {
		return v.Name
	}).(pulumi.StringOutput)
}

// The value of the dimension.
func (o PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimension) string {
		return v.Value
	}).(pulumi.StringOutput)
}

type PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayOutput struct{ *pulumi.OutputState }

func (PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimension)(nil)).Elem()
}

func (o PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayOutput) ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayOutput() PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayOutput {
	return o
}

func (o PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayOutput) ToPolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayOutputWithContext(ctx context.Context) PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayOutput {
	return o
}

func (o PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayOutput) Index(i pulumi.IntInput) PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimension {
		return vs[0].([]PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimension)[vs[1].(int)]
	}).(PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionOutput)
}

type PolicyTargetTrackingConfigurationPredefinedMetricSpecification struct {
	// The metric type.
	PredefinedMetricType string `pulumi:"predefinedMetricType"`
	// Identifies the resource associated with the metric type.
	ResourceLabel *string `pulumi:"resourceLabel"`
}

// PolicyTargetTrackingConfigurationPredefinedMetricSpecificationInput is an input type that accepts PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs and PolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutput values.
// You can construct a concrete instance of `PolicyTargetTrackingConfigurationPredefinedMetricSpecificationInput` via:
//
// 		 PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs{...}
//
type PolicyTargetTrackingConfigurationPredefinedMetricSpecificationInput interface {
	pulumi.Input

	ToPolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutput() PolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutput
	ToPolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutputWithContext(context.Context) PolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutput
}

type PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs struct {
	// The metric type.
	PredefinedMetricType pulumi.StringInput `pulumi:"predefinedMetricType"`
	// Identifies the resource associated with the metric type.
	ResourceLabel pulumi.StringPtrInput `pulumi:"resourceLabel"`
}

func (PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingConfigurationPredefinedMetricSpecification)(nil)).Elem()
}

func (i PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs) ToPolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutput() PolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutput {
	return i.ToPolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutputWithContext(context.Background())
}

func (i PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs) ToPolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutputWithContext(ctx context.Context) PolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutput)
}

func (i PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs) ToPolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput() PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput {
	return i.ToPolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutputWithContext(context.Background())
}

func (i PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs) ToPolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutputWithContext(ctx context.Context) PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutput).ToPolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutputWithContext(ctx)
}

// PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrInput is an input type that accepts PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs, PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtr and PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput values.
// You can construct a concrete instance of `PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrInput` via:
//
// 		 PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs{...}
//
//  or:
//
// 		 nil
//
type PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrInput interface {
	pulumi.Input

	ToPolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput() PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput
	ToPolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutputWithContext(context.Context) PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput
}

type policyTargetTrackingConfigurationPredefinedMetricSpecificationPtrType PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs

func PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtr(v *PolicyTargetTrackingConfigurationPredefinedMetricSpecificationArgs) PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrInput {
	return (*policyTargetTrackingConfigurationPredefinedMetricSpecificationPtrType)(v)
}

func (*policyTargetTrackingConfigurationPredefinedMetricSpecificationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTargetTrackingConfigurationPredefinedMetricSpecification)(nil)).Elem()
}

func (i *policyTargetTrackingConfigurationPredefinedMetricSpecificationPtrType) ToPolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput() PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput {
	return i.ToPolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutputWithContext(context.Background())
}

func (i *policyTargetTrackingConfigurationPredefinedMetricSpecificationPtrType) ToPolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutputWithContext(ctx context.Context) PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput)
}

type PolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutput struct{ *pulumi.OutputState }

func (PolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyTargetTrackingConfigurationPredefinedMetricSpecification)(nil)).Elem()
}

func (o PolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutput) ToPolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutput() PolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutput {
	return o
}

func (o PolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutput) ToPolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutputWithContext(ctx context.Context) PolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutput {
	return o
}

func (o PolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutput) ToPolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput() PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput {
	return o.ToPolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutputWithContext(context.Background())
}

func (o PolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutput) ToPolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutputWithContext(ctx context.Context) PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput {
	return o.ApplyT(func(v PolicyTargetTrackingConfigurationPredefinedMetricSpecification) *PolicyTargetTrackingConfigurationPredefinedMetricSpecification {
		return &v
	}).(PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput)
}

// The metric type.
func (o PolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutput) PredefinedMetricType() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyTargetTrackingConfigurationPredefinedMetricSpecification) string {
		return v.PredefinedMetricType
	}).(pulumi.StringOutput)
}

// Identifies the resource associated with the metric type.
func (o PolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutput) ResourceLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTargetTrackingConfigurationPredefinedMetricSpecification) *string {
		return v.ResourceLabel
	}).(pulumi.StringPtrOutput)
}

type PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput struct{ *pulumi.OutputState }

func (PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyTargetTrackingConfigurationPredefinedMetricSpecification)(nil)).Elem()
}

func (o PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput) ToPolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput() PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput {
	return o
}

func (o PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput) ToPolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutputWithContext(ctx context.Context) PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput {
	return o
}

func (o PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput) Elem() PolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutput {
	return o.ApplyT(func(v *PolicyTargetTrackingConfigurationPredefinedMetricSpecification) PolicyTargetTrackingConfigurationPredefinedMetricSpecification {
		return *v
	}).(PolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutput)
}

// The metric type.
func (o PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput) PredefinedMetricType() pulumi.StringOutput {
	return o.ApplyT(func(v PolicyTargetTrackingConfigurationPredefinedMetricSpecification) string {
		return v.PredefinedMetricType
	}).(pulumi.StringOutput)
}

// Identifies the resource associated with the metric type.
func (o PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput) ResourceLabel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyTargetTrackingConfigurationPredefinedMetricSpecification) *string {
		return v.ResourceLabel
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GroupInitialLifecycleHookOutput{})
	pulumi.RegisterOutputType(GroupInitialLifecycleHookArrayOutput{})
	pulumi.RegisterOutputType(GroupLaunchTemplateOutput{})
	pulumi.RegisterOutputType(GroupLaunchTemplatePtrOutput{})
	pulumi.RegisterOutputType(GroupMixedInstancesPolicyOutput{})
	pulumi.RegisterOutputType(GroupMixedInstancesPolicyPtrOutput{})
	pulumi.RegisterOutputType(GroupMixedInstancesPolicyInstancesDistributionOutput{})
	pulumi.RegisterOutputType(GroupMixedInstancesPolicyInstancesDistributionPtrOutput{})
	pulumi.RegisterOutputType(GroupMixedInstancesPolicyLaunchTemplateOutput{})
	pulumi.RegisterOutputType(GroupMixedInstancesPolicyLaunchTemplateLaunchTemplateSpecificationOutput{})
	pulumi.RegisterOutputType(GroupMixedInstancesPolicyLaunchTemplateOverrideOutput{})
	pulumi.RegisterOutputType(GroupMixedInstancesPolicyLaunchTemplateOverrideArrayOutput{})
	pulumi.RegisterOutputType(GroupTagOutput{})
	pulumi.RegisterOutputType(GroupTagArrayOutput{})
	pulumi.RegisterOutputType(PolicyStepAdjustmentOutput{})
	pulumi.RegisterOutputType(PolicyStepAdjustmentArrayOutput{})
	pulumi.RegisterOutputType(PolicyTargetTrackingConfigurationOutput{})
	pulumi.RegisterOutputType(PolicyTargetTrackingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(PolicyTargetTrackingConfigurationCustomizedMetricSpecificationOutput{})
	pulumi.RegisterOutputType(PolicyTargetTrackingConfigurationCustomizedMetricSpecificationPtrOutput{})
	pulumi.RegisterOutputType(PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionOutput{})
	pulumi.RegisterOutputType(PolicyTargetTrackingConfigurationCustomizedMetricSpecificationMetricDimensionArrayOutput{})
	pulumi.RegisterOutputType(PolicyTargetTrackingConfigurationPredefinedMetricSpecificationOutput{})
	pulumi.RegisterOutputType(PolicyTargetTrackingConfigurationPredefinedMetricSpecificationPtrOutput{})
}
