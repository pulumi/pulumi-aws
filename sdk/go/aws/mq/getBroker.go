// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mq

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides information about a MQ Broker.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/mq"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi/config"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			cfg := config.New(ctx, "")
//			brokerId := ""
//			if param := cfg.Get("brokerId"); param != "" {
//				brokerId = param
//			}
//			brokerName := ""
//			if param := cfg.Get("brokerName"); param != "" {
//				brokerName = param
//			}
//			_, err := mq.LookupBroker(ctx, &mq.LookupBrokerArgs{
//				BrokerId: pulumi.StringRef(brokerId),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = mq.LookupBroker(ctx, &mq.LookupBrokerArgs{
//				BrokerName: pulumi.StringRef(brokerName),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupBroker(ctx *pulumi.Context, args *LookupBrokerArgs, opts ...pulumi.InvokeOption) (*LookupBrokerResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupBrokerResult
	err := ctx.Invoke("aws:mq/getBroker:getBroker", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBroker.
type LookupBrokerArgs struct {
	// Unique id of the mq broker.
	BrokerId *string `pulumi:"brokerId"`
	// Unique name of the mq broker.
	BrokerName *string           `pulumi:"brokerName"`
	Tags       map[string]string `pulumi:"tags"`
}

// A collection of values returned by getBroker.
type LookupBrokerResult struct {
	Arn                     string                      `pulumi:"arn"`
	AuthenticationStrategy  string                      `pulumi:"authenticationStrategy"`
	AutoMinorVersionUpgrade bool                        `pulumi:"autoMinorVersionUpgrade"`
	BrokerId                string                      `pulumi:"brokerId"`
	BrokerName              string                      `pulumi:"brokerName"`
	Configuration           GetBrokerConfiguration      `pulumi:"configuration"`
	DeploymentMode          string                      `pulumi:"deploymentMode"`
	EncryptionOptions       []GetBrokerEncryptionOption `pulumi:"encryptionOptions"`
	EngineType              string                      `pulumi:"engineType"`
	EngineVersion           string                      `pulumi:"engineVersion"`
	HostInstanceType        string                      `pulumi:"hostInstanceType"`
	// The provider-assigned unique ID for this managed resource.
	Id                         string                              `pulumi:"id"`
	Instances                  []GetBrokerInstance                 `pulumi:"instances"`
	LdapServerMetadatas        []GetBrokerLdapServerMetadata       `pulumi:"ldapServerMetadatas"`
	Logs                       GetBrokerLogs                       `pulumi:"logs"`
	MaintenanceWindowStartTime GetBrokerMaintenanceWindowStartTime `pulumi:"maintenanceWindowStartTime"`
	PubliclyAccessible         bool                                `pulumi:"publiclyAccessible"`
	SecurityGroups             []string                            `pulumi:"securityGroups"`
	StorageType                string                              `pulumi:"storageType"`
	SubnetIds                  []string                            `pulumi:"subnetIds"`
	Tags                       map[string]string                   `pulumi:"tags"`
	Users                      []GetBrokerUser                     `pulumi:"users"`
}

func LookupBrokerOutput(ctx *pulumi.Context, args LookupBrokerOutputArgs, opts ...pulumi.InvokeOption) LookupBrokerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupBrokerResult, error) {
			args := v.(LookupBrokerArgs)
			r, err := LookupBroker(ctx, &args, opts...)
			var s LookupBrokerResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupBrokerResultOutput)
}

// A collection of arguments for invoking getBroker.
type LookupBrokerOutputArgs struct {
	// Unique id of the mq broker.
	BrokerId pulumi.StringPtrInput `pulumi:"brokerId"`
	// Unique name of the mq broker.
	BrokerName pulumi.StringPtrInput `pulumi:"brokerName"`
	Tags       pulumi.StringMapInput `pulumi:"tags"`
}

func (LookupBrokerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBrokerArgs)(nil)).Elem()
}

// A collection of values returned by getBroker.
type LookupBrokerResultOutput struct{ *pulumi.OutputState }

func (LookupBrokerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupBrokerResult)(nil)).Elem()
}

func (o LookupBrokerResultOutput) ToLookupBrokerResultOutput() LookupBrokerResultOutput {
	return o
}

func (o LookupBrokerResultOutput) ToLookupBrokerResultOutputWithContext(ctx context.Context) LookupBrokerResultOutput {
	return o
}

func (o LookupBrokerResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBrokerResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupBrokerResultOutput) AuthenticationStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBrokerResult) string { return v.AuthenticationStrategy }).(pulumi.StringOutput)
}

func (o LookupBrokerResultOutput) AutoMinorVersionUpgrade() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBrokerResult) bool { return v.AutoMinorVersionUpgrade }).(pulumi.BoolOutput)
}

func (o LookupBrokerResultOutput) BrokerId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBrokerResult) string { return v.BrokerId }).(pulumi.StringOutput)
}

func (o LookupBrokerResultOutput) BrokerName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBrokerResult) string { return v.BrokerName }).(pulumi.StringOutput)
}

func (o LookupBrokerResultOutput) Configuration() GetBrokerConfigurationOutput {
	return o.ApplyT(func(v LookupBrokerResult) GetBrokerConfiguration { return v.Configuration }).(GetBrokerConfigurationOutput)
}

func (o LookupBrokerResultOutput) DeploymentMode() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBrokerResult) string { return v.DeploymentMode }).(pulumi.StringOutput)
}

func (o LookupBrokerResultOutput) EncryptionOptions() GetBrokerEncryptionOptionArrayOutput {
	return o.ApplyT(func(v LookupBrokerResult) []GetBrokerEncryptionOption { return v.EncryptionOptions }).(GetBrokerEncryptionOptionArrayOutput)
}

func (o LookupBrokerResultOutput) EngineType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBrokerResult) string { return v.EngineType }).(pulumi.StringOutput)
}

func (o LookupBrokerResultOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBrokerResult) string { return v.EngineVersion }).(pulumi.StringOutput)
}

func (o LookupBrokerResultOutput) HostInstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBrokerResult) string { return v.HostInstanceType }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupBrokerResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBrokerResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupBrokerResultOutput) Instances() GetBrokerInstanceArrayOutput {
	return o.ApplyT(func(v LookupBrokerResult) []GetBrokerInstance { return v.Instances }).(GetBrokerInstanceArrayOutput)
}

func (o LookupBrokerResultOutput) LdapServerMetadatas() GetBrokerLdapServerMetadataArrayOutput {
	return o.ApplyT(func(v LookupBrokerResult) []GetBrokerLdapServerMetadata { return v.LdapServerMetadatas }).(GetBrokerLdapServerMetadataArrayOutput)
}

func (o LookupBrokerResultOutput) Logs() GetBrokerLogsOutput {
	return o.ApplyT(func(v LookupBrokerResult) GetBrokerLogs { return v.Logs }).(GetBrokerLogsOutput)
}

func (o LookupBrokerResultOutput) MaintenanceWindowStartTime() GetBrokerMaintenanceWindowStartTimeOutput {
	return o.ApplyT(func(v LookupBrokerResult) GetBrokerMaintenanceWindowStartTime { return v.MaintenanceWindowStartTime }).(GetBrokerMaintenanceWindowStartTimeOutput)
}

func (o LookupBrokerResultOutput) PubliclyAccessible() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupBrokerResult) bool { return v.PubliclyAccessible }).(pulumi.BoolOutput)
}

func (o LookupBrokerResultOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBrokerResult) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o LookupBrokerResultOutput) StorageType() pulumi.StringOutput {
	return o.ApplyT(func(v LookupBrokerResult) string { return v.StorageType }).(pulumi.StringOutput)
}

func (o LookupBrokerResultOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupBrokerResult) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

func (o LookupBrokerResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupBrokerResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupBrokerResultOutput) Users() GetBrokerUserArrayOutput {
	return o.ApplyT(func(v LookupBrokerResult) []GetBrokerUser { return v.Users }).(GetBrokerUserArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupBrokerResultOutput{})
}
