// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpn

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetConnectionFilter struct {
	// Name of the filter field. Valid values can be found in the [EC2 `DescribeVPNConnections` API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnConnections.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values []string `pulumi:"values"`
}

// GetConnectionFilterInput is an input type that accepts GetConnectionFilterArgs and GetConnectionFilterOutput values.
// You can construct a concrete instance of `GetConnectionFilterInput` via:
//
//	GetConnectionFilterArgs{...}
type GetConnectionFilterInput interface {
	pulumi.Input

	ToGetConnectionFilterOutput() GetConnectionFilterOutput
	ToGetConnectionFilterOutputWithContext(context.Context) GetConnectionFilterOutput
}

type GetConnectionFilterArgs struct {
	// Name of the filter field. Valid values can be found in the [EC2 `DescribeVPNConnections` API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnConnections.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetConnectionFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionFilter)(nil)).Elem()
}

func (i GetConnectionFilterArgs) ToGetConnectionFilterOutput() GetConnectionFilterOutput {
	return i.ToGetConnectionFilterOutputWithContext(context.Background())
}

func (i GetConnectionFilterArgs) ToGetConnectionFilterOutputWithContext(ctx context.Context) GetConnectionFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionFilterOutput)
}

// GetConnectionFilterArrayInput is an input type that accepts GetConnectionFilterArray and GetConnectionFilterArrayOutput values.
// You can construct a concrete instance of `GetConnectionFilterArrayInput` via:
//
//	GetConnectionFilterArray{ GetConnectionFilterArgs{...} }
type GetConnectionFilterArrayInput interface {
	pulumi.Input

	ToGetConnectionFilterArrayOutput() GetConnectionFilterArrayOutput
	ToGetConnectionFilterArrayOutputWithContext(context.Context) GetConnectionFilterArrayOutput
}

type GetConnectionFilterArray []GetConnectionFilterInput

func (GetConnectionFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionFilter)(nil)).Elem()
}

func (i GetConnectionFilterArray) ToGetConnectionFilterArrayOutput() GetConnectionFilterArrayOutput {
	return i.ToGetConnectionFilterArrayOutputWithContext(context.Background())
}

func (i GetConnectionFilterArray) ToGetConnectionFilterArrayOutputWithContext(ctx context.Context) GetConnectionFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionFilterArrayOutput)
}

type GetConnectionFilterOutput struct{ *pulumi.OutputState }

func (GetConnectionFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionFilter)(nil)).Elem()
}

func (o GetConnectionFilterOutput) ToGetConnectionFilterOutput() GetConnectionFilterOutput {
	return o
}

func (o GetConnectionFilterOutput) ToGetConnectionFilterOutputWithContext(ctx context.Context) GetConnectionFilterOutput {
	return o
}

// Name of the filter field. Valid values can be found in the [EC2 `DescribeVPNConnections` API Reference](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeVpnConnections.html).
func (o GetConnectionFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given filter field. Results will be selected if any given value matches.
func (o GetConnectionFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetConnectionFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetConnectionFilterArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionFilter)(nil)).Elem()
}

func (o GetConnectionFilterArrayOutput) ToGetConnectionFilterArrayOutput() GetConnectionFilterArrayOutput {
	return o
}

func (o GetConnectionFilterArrayOutput) ToGetConnectionFilterArrayOutputWithContext(ctx context.Context) GetConnectionFilterArrayOutput {
	return o
}

func (o GetConnectionFilterArrayOutput) Index(i pulumi.IntInput) GetConnectionFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionFilter {
		return vs[0].([]GetConnectionFilter)[vs[1].(int)]
	}).(GetConnectionFilterOutput)
}

type GetConnectionRoute struct {
	DestinationCidrBlock string `pulumi:"destinationCidrBlock"`
	Source               string `pulumi:"source"`
	// Current state of the VPN connection.
	State string `pulumi:"state"`
}

// GetConnectionRouteInput is an input type that accepts GetConnectionRouteArgs and GetConnectionRouteOutput values.
// You can construct a concrete instance of `GetConnectionRouteInput` via:
//
//	GetConnectionRouteArgs{...}
type GetConnectionRouteInput interface {
	pulumi.Input

	ToGetConnectionRouteOutput() GetConnectionRouteOutput
	ToGetConnectionRouteOutputWithContext(context.Context) GetConnectionRouteOutput
}

type GetConnectionRouteArgs struct {
	DestinationCidrBlock pulumi.StringInput `pulumi:"destinationCidrBlock"`
	Source               pulumi.StringInput `pulumi:"source"`
	// Current state of the VPN connection.
	State pulumi.StringInput `pulumi:"state"`
}

func (GetConnectionRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionRoute)(nil)).Elem()
}

func (i GetConnectionRouteArgs) ToGetConnectionRouteOutput() GetConnectionRouteOutput {
	return i.ToGetConnectionRouteOutputWithContext(context.Background())
}

func (i GetConnectionRouteArgs) ToGetConnectionRouteOutputWithContext(ctx context.Context) GetConnectionRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionRouteOutput)
}

// GetConnectionRouteArrayInput is an input type that accepts GetConnectionRouteArray and GetConnectionRouteArrayOutput values.
// You can construct a concrete instance of `GetConnectionRouteArrayInput` via:
//
//	GetConnectionRouteArray{ GetConnectionRouteArgs{...} }
type GetConnectionRouteArrayInput interface {
	pulumi.Input

	ToGetConnectionRouteArrayOutput() GetConnectionRouteArrayOutput
	ToGetConnectionRouteArrayOutputWithContext(context.Context) GetConnectionRouteArrayOutput
}

type GetConnectionRouteArray []GetConnectionRouteInput

func (GetConnectionRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionRoute)(nil)).Elem()
}

func (i GetConnectionRouteArray) ToGetConnectionRouteArrayOutput() GetConnectionRouteArrayOutput {
	return i.ToGetConnectionRouteArrayOutputWithContext(context.Background())
}

func (i GetConnectionRouteArray) ToGetConnectionRouteArrayOutputWithContext(ctx context.Context) GetConnectionRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionRouteArrayOutput)
}

type GetConnectionRouteOutput struct{ *pulumi.OutputState }

func (GetConnectionRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionRoute)(nil)).Elem()
}

func (o GetConnectionRouteOutput) ToGetConnectionRouteOutput() GetConnectionRouteOutput {
	return o
}

func (o GetConnectionRouteOutput) ToGetConnectionRouteOutputWithContext(ctx context.Context) GetConnectionRouteOutput {
	return o
}

func (o GetConnectionRouteOutput) DestinationCidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionRoute) string { return v.DestinationCidrBlock }).(pulumi.StringOutput)
}

func (o GetConnectionRouteOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionRoute) string { return v.Source }).(pulumi.StringOutput)
}

// Current state of the VPN connection.
func (o GetConnectionRouteOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionRoute) string { return v.State }).(pulumi.StringOutput)
}

type GetConnectionRouteArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionRoute)(nil)).Elem()
}

func (o GetConnectionRouteArrayOutput) ToGetConnectionRouteArrayOutput() GetConnectionRouteArrayOutput {
	return o
}

func (o GetConnectionRouteArrayOutput) ToGetConnectionRouteArrayOutputWithContext(ctx context.Context) GetConnectionRouteArrayOutput {
	return o
}

func (o GetConnectionRouteArrayOutput) Index(i pulumi.IntInput) GetConnectionRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionRoute {
		return vs[0].([]GetConnectionRoute)[vs[1].(int)]
	}).(GetConnectionRouteOutput)
}

type GetConnectionVgwTelemetry struct {
	AcceptedRouteCount int    `pulumi:"acceptedRouteCount"`
	LastStatusChange   string `pulumi:"lastStatusChange"`
	OutsideIpAddress   string `pulumi:"outsideIpAddress"`
	Status             string `pulumi:"status"`
	StatusMessage      string `pulumi:"statusMessage"`
}

// GetConnectionVgwTelemetryInput is an input type that accepts GetConnectionVgwTelemetryArgs and GetConnectionVgwTelemetryOutput values.
// You can construct a concrete instance of `GetConnectionVgwTelemetryInput` via:
//
//	GetConnectionVgwTelemetryArgs{...}
type GetConnectionVgwTelemetryInput interface {
	pulumi.Input

	ToGetConnectionVgwTelemetryOutput() GetConnectionVgwTelemetryOutput
	ToGetConnectionVgwTelemetryOutputWithContext(context.Context) GetConnectionVgwTelemetryOutput
}

type GetConnectionVgwTelemetryArgs struct {
	AcceptedRouteCount pulumi.IntInput    `pulumi:"acceptedRouteCount"`
	LastStatusChange   pulumi.StringInput `pulumi:"lastStatusChange"`
	OutsideIpAddress   pulumi.StringInput `pulumi:"outsideIpAddress"`
	Status             pulumi.StringInput `pulumi:"status"`
	StatusMessage      pulumi.StringInput `pulumi:"statusMessage"`
}

func (GetConnectionVgwTelemetryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionVgwTelemetry)(nil)).Elem()
}

func (i GetConnectionVgwTelemetryArgs) ToGetConnectionVgwTelemetryOutput() GetConnectionVgwTelemetryOutput {
	return i.ToGetConnectionVgwTelemetryOutputWithContext(context.Background())
}

func (i GetConnectionVgwTelemetryArgs) ToGetConnectionVgwTelemetryOutputWithContext(ctx context.Context) GetConnectionVgwTelemetryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionVgwTelemetryOutput)
}

// GetConnectionVgwTelemetryArrayInput is an input type that accepts GetConnectionVgwTelemetryArray and GetConnectionVgwTelemetryArrayOutput values.
// You can construct a concrete instance of `GetConnectionVgwTelemetryArrayInput` via:
//
//	GetConnectionVgwTelemetryArray{ GetConnectionVgwTelemetryArgs{...} }
type GetConnectionVgwTelemetryArrayInput interface {
	pulumi.Input

	ToGetConnectionVgwTelemetryArrayOutput() GetConnectionVgwTelemetryArrayOutput
	ToGetConnectionVgwTelemetryArrayOutputWithContext(context.Context) GetConnectionVgwTelemetryArrayOutput
}

type GetConnectionVgwTelemetryArray []GetConnectionVgwTelemetryInput

func (GetConnectionVgwTelemetryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionVgwTelemetry)(nil)).Elem()
}

func (i GetConnectionVgwTelemetryArray) ToGetConnectionVgwTelemetryArrayOutput() GetConnectionVgwTelemetryArrayOutput {
	return i.ToGetConnectionVgwTelemetryArrayOutputWithContext(context.Background())
}

func (i GetConnectionVgwTelemetryArray) ToGetConnectionVgwTelemetryArrayOutputWithContext(ctx context.Context) GetConnectionVgwTelemetryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionVgwTelemetryArrayOutput)
}

type GetConnectionVgwTelemetryOutput struct{ *pulumi.OutputState }

func (GetConnectionVgwTelemetryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionVgwTelemetry)(nil)).Elem()
}

func (o GetConnectionVgwTelemetryOutput) ToGetConnectionVgwTelemetryOutput() GetConnectionVgwTelemetryOutput {
	return o
}

func (o GetConnectionVgwTelemetryOutput) ToGetConnectionVgwTelemetryOutputWithContext(ctx context.Context) GetConnectionVgwTelemetryOutput {
	return o
}

func (o GetConnectionVgwTelemetryOutput) AcceptedRouteCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectionVgwTelemetry) int { return v.AcceptedRouteCount }).(pulumi.IntOutput)
}

func (o GetConnectionVgwTelemetryOutput) LastStatusChange() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionVgwTelemetry) string { return v.LastStatusChange }).(pulumi.StringOutput)
}

func (o GetConnectionVgwTelemetryOutput) OutsideIpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionVgwTelemetry) string { return v.OutsideIpAddress }).(pulumi.StringOutput)
}

func (o GetConnectionVgwTelemetryOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionVgwTelemetry) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetConnectionVgwTelemetryOutput) StatusMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionVgwTelemetry) string { return v.StatusMessage }).(pulumi.StringOutput)
}

type GetConnectionVgwTelemetryArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionVgwTelemetryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionVgwTelemetry)(nil)).Elem()
}

func (o GetConnectionVgwTelemetryArrayOutput) ToGetConnectionVgwTelemetryArrayOutput() GetConnectionVgwTelemetryArrayOutput {
	return o
}

func (o GetConnectionVgwTelemetryArrayOutput) ToGetConnectionVgwTelemetryArrayOutputWithContext(ctx context.Context) GetConnectionVgwTelemetryArrayOutput {
	return o
}

func (o GetConnectionVgwTelemetryArrayOutput) Index(i pulumi.IntInput) GetConnectionVgwTelemetryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionVgwTelemetry {
		return vs[0].([]GetConnectionVgwTelemetry)[vs[1].(int)]
	}).(GetConnectionVgwTelemetryOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionFilterInput)(nil)).Elem(), GetConnectionFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionFilterArrayInput)(nil)).Elem(), GetConnectionFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionRouteInput)(nil)).Elem(), GetConnectionRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionRouteArrayInput)(nil)).Elem(), GetConnectionRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionVgwTelemetryInput)(nil)).Elem(), GetConnectionVgwTelemetryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionVgwTelemetryArrayInput)(nil)).Elem(), GetConnectionVgwTelemetryArray{})
	pulumi.RegisterOutputType(GetConnectionFilterOutput{})
	pulumi.RegisterOutputType(GetConnectionFilterArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionRouteOutput{})
	pulumi.RegisterOutputType(GetConnectionRouteArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionVgwTelemetryOutput{})
	pulumi.RegisterOutputType(GetConnectionVgwTelemetryArrayOutput{})
}
