// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ExternalKey struct {
	pulumi.CustomResourceState

	Arn                            pulumi.StringOutput    `pulumi:"arn"`
	BypassPolicyLockoutSafetyCheck pulumi.BoolPtrOutput   `pulumi:"bypassPolicyLockoutSafetyCheck"`
	DeletionWindowInDays           pulumi.IntPtrOutput    `pulumi:"deletionWindowInDays"`
	Description                    pulumi.StringPtrOutput `pulumi:"description"`
	Enabled                        pulumi.BoolOutput      `pulumi:"enabled"`
	ExpirationModel                pulumi.StringOutput    `pulumi:"expirationModel"`
	KeyMaterialBase64              pulumi.StringPtrOutput `pulumi:"keyMaterialBase64"`
	KeyState                       pulumi.StringOutput    `pulumi:"keyState"`
	KeyUsage                       pulumi.StringOutput    `pulumi:"keyUsage"`
	MultiRegion                    pulumi.BoolOutput      `pulumi:"multiRegion"`
	Policy                         pulumi.StringOutput    `pulumi:"policy"`
	Tags                           pulumi.StringMapOutput `pulumi:"tags"`
	TagsAll                        pulumi.StringMapOutput `pulumi:"tagsAll"`
	ValidTo                        pulumi.StringPtrOutput `pulumi:"validTo"`
}

// NewExternalKey registers a new resource with the given unique name, arguments, and options.
func NewExternalKey(ctx *pulumi.Context,
	name string, args *ExternalKeyArgs, opts ...pulumi.ResourceOption) (*ExternalKey, error) {
	if args == nil {
		args = &ExternalKeyArgs{}
	}

	if args.KeyMaterialBase64 != nil {
		args.KeyMaterialBase64 = pulumi.ToSecret(args.KeyMaterialBase64).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"keyMaterialBase64",
	})
	opts = append(opts, secrets)
	var resource ExternalKey
	err := ctx.RegisterResource("aws:kms/externalKey:ExternalKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetExternalKey gets an existing ExternalKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetExternalKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ExternalKeyState, opts ...pulumi.ResourceOption) (*ExternalKey, error) {
	var resource ExternalKey
	err := ctx.ReadResource("aws:kms/externalKey:ExternalKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ExternalKey resources.
type externalKeyState struct {
	Arn                            *string           `pulumi:"arn"`
	BypassPolicyLockoutSafetyCheck *bool             `pulumi:"bypassPolicyLockoutSafetyCheck"`
	DeletionWindowInDays           *int              `pulumi:"deletionWindowInDays"`
	Description                    *string           `pulumi:"description"`
	Enabled                        *bool             `pulumi:"enabled"`
	ExpirationModel                *string           `pulumi:"expirationModel"`
	KeyMaterialBase64              *string           `pulumi:"keyMaterialBase64"`
	KeyState                       *string           `pulumi:"keyState"`
	KeyUsage                       *string           `pulumi:"keyUsage"`
	MultiRegion                    *bool             `pulumi:"multiRegion"`
	Policy                         *string           `pulumi:"policy"`
	Tags                           map[string]string `pulumi:"tags"`
	TagsAll                        map[string]string `pulumi:"tagsAll"`
	ValidTo                        *string           `pulumi:"validTo"`
}

type ExternalKeyState struct {
	Arn                            pulumi.StringPtrInput
	BypassPolicyLockoutSafetyCheck pulumi.BoolPtrInput
	DeletionWindowInDays           pulumi.IntPtrInput
	Description                    pulumi.StringPtrInput
	Enabled                        pulumi.BoolPtrInput
	ExpirationModel                pulumi.StringPtrInput
	KeyMaterialBase64              pulumi.StringPtrInput
	KeyState                       pulumi.StringPtrInput
	KeyUsage                       pulumi.StringPtrInput
	MultiRegion                    pulumi.BoolPtrInput
	Policy                         pulumi.StringPtrInput
	Tags                           pulumi.StringMapInput
	TagsAll                        pulumi.StringMapInput
	ValidTo                        pulumi.StringPtrInput
}

func (ExternalKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*externalKeyState)(nil)).Elem()
}

type externalKeyArgs struct {
	BypassPolicyLockoutSafetyCheck *bool             `pulumi:"bypassPolicyLockoutSafetyCheck"`
	DeletionWindowInDays           *int              `pulumi:"deletionWindowInDays"`
	Description                    *string           `pulumi:"description"`
	Enabled                        *bool             `pulumi:"enabled"`
	KeyMaterialBase64              *string           `pulumi:"keyMaterialBase64"`
	MultiRegion                    *bool             `pulumi:"multiRegion"`
	Policy                         *string           `pulumi:"policy"`
	Tags                           map[string]string `pulumi:"tags"`
	ValidTo                        *string           `pulumi:"validTo"`
}

// The set of arguments for constructing a ExternalKey resource.
type ExternalKeyArgs struct {
	BypassPolicyLockoutSafetyCheck pulumi.BoolPtrInput
	DeletionWindowInDays           pulumi.IntPtrInput
	Description                    pulumi.StringPtrInput
	Enabled                        pulumi.BoolPtrInput
	KeyMaterialBase64              pulumi.StringPtrInput
	MultiRegion                    pulumi.BoolPtrInput
	Policy                         pulumi.StringPtrInput
	Tags                           pulumi.StringMapInput
	ValidTo                        pulumi.StringPtrInput
}

func (ExternalKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*externalKeyArgs)(nil)).Elem()
}

type ExternalKeyInput interface {
	pulumi.Input

	ToExternalKeyOutput() ExternalKeyOutput
	ToExternalKeyOutputWithContext(ctx context.Context) ExternalKeyOutput
}

func (*ExternalKey) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalKey)(nil)).Elem()
}

func (i *ExternalKey) ToExternalKeyOutput() ExternalKeyOutput {
	return i.ToExternalKeyOutputWithContext(context.Background())
}

func (i *ExternalKey) ToExternalKeyOutputWithContext(ctx context.Context) ExternalKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalKeyOutput)
}

// ExternalKeyArrayInput is an input type that accepts ExternalKeyArray and ExternalKeyArrayOutput values.
// You can construct a concrete instance of `ExternalKeyArrayInput` via:
//
//	ExternalKeyArray{ ExternalKeyArgs{...} }
type ExternalKeyArrayInput interface {
	pulumi.Input

	ToExternalKeyArrayOutput() ExternalKeyArrayOutput
	ToExternalKeyArrayOutputWithContext(context.Context) ExternalKeyArrayOutput
}

type ExternalKeyArray []ExternalKeyInput

func (ExternalKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalKey)(nil)).Elem()
}

func (i ExternalKeyArray) ToExternalKeyArrayOutput() ExternalKeyArrayOutput {
	return i.ToExternalKeyArrayOutputWithContext(context.Background())
}

func (i ExternalKeyArray) ToExternalKeyArrayOutputWithContext(ctx context.Context) ExternalKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalKeyArrayOutput)
}

// ExternalKeyMapInput is an input type that accepts ExternalKeyMap and ExternalKeyMapOutput values.
// You can construct a concrete instance of `ExternalKeyMapInput` via:
//
//	ExternalKeyMap{ "key": ExternalKeyArgs{...} }
type ExternalKeyMapInput interface {
	pulumi.Input

	ToExternalKeyMapOutput() ExternalKeyMapOutput
	ToExternalKeyMapOutputWithContext(context.Context) ExternalKeyMapOutput
}

type ExternalKeyMap map[string]ExternalKeyInput

func (ExternalKeyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalKey)(nil)).Elem()
}

func (i ExternalKeyMap) ToExternalKeyMapOutput() ExternalKeyMapOutput {
	return i.ToExternalKeyMapOutputWithContext(context.Background())
}

func (i ExternalKeyMap) ToExternalKeyMapOutputWithContext(ctx context.Context) ExternalKeyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalKeyMapOutput)
}

type ExternalKeyOutput struct{ *pulumi.OutputState }

func (ExternalKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalKey)(nil)).Elem()
}

func (o ExternalKeyOutput) ToExternalKeyOutput() ExternalKeyOutput {
	return o
}

func (o ExternalKeyOutput) ToExternalKeyOutputWithContext(ctx context.Context) ExternalKeyOutput {
	return o
}

func (o ExternalKeyOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalKey) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o ExternalKeyOutput) BypassPolicyLockoutSafetyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ExternalKey) pulumi.BoolPtrOutput { return v.BypassPolicyLockoutSafetyCheck }).(pulumi.BoolPtrOutput)
}

func (o ExternalKeyOutput) DeletionWindowInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ExternalKey) pulumi.IntPtrOutput { return v.DeletionWindowInDays }).(pulumi.IntPtrOutput)
}

func (o ExternalKeyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalKey) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ExternalKeyOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *ExternalKey) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

func (o ExternalKeyOutput) ExpirationModel() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalKey) pulumi.StringOutput { return v.ExpirationModel }).(pulumi.StringOutput)
}

func (o ExternalKeyOutput) KeyMaterialBase64() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalKey) pulumi.StringPtrOutput { return v.KeyMaterialBase64 }).(pulumi.StringPtrOutput)
}

func (o ExternalKeyOutput) KeyState() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalKey) pulumi.StringOutput { return v.KeyState }).(pulumi.StringOutput)
}

func (o ExternalKeyOutput) KeyUsage() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalKey) pulumi.StringOutput { return v.KeyUsage }).(pulumi.StringOutput)
}

func (o ExternalKeyOutput) MultiRegion() pulumi.BoolOutput {
	return o.ApplyT(func(v *ExternalKey) pulumi.BoolOutput { return v.MultiRegion }).(pulumi.BoolOutput)
}

func (o ExternalKeyOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v *ExternalKey) pulumi.StringOutput { return v.Policy }).(pulumi.StringOutput)
}

func (o ExternalKeyOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ExternalKey) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o ExternalKeyOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ExternalKey) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o ExternalKeyOutput) ValidTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalKey) pulumi.StringPtrOutput { return v.ValidTo }).(pulumi.StringPtrOutput)
}

type ExternalKeyArrayOutput struct{ *pulumi.OutputState }

func (ExternalKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ExternalKey)(nil)).Elem()
}

func (o ExternalKeyArrayOutput) ToExternalKeyArrayOutput() ExternalKeyArrayOutput {
	return o
}

func (o ExternalKeyArrayOutput) ToExternalKeyArrayOutputWithContext(ctx context.Context) ExternalKeyArrayOutput {
	return o
}

func (o ExternalKeyArrayOutput) Index(i pulumi.IntInput) ExternalKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ExternalKey {
		return vs[0].([]*ExternalKey)[vs[1].(int)]
	}).(ExternalKeyOutput)
}

type ExternalKeyMapOutput struct{ *pulumi.OutputState }

func (ExternalKeyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ExternalKey)(nil)).Elem()
}

func (o ExternalKeyMapOutput) ToExternalKeyMapOutput() ExternalKeyMapOutput {
	return o
}

func (o ExternalKeyMapOutput) ToExternalKeyMapOutputWithContext(ctx context.Context) ExternalKeyMapOutput {
	return o
}

func (o ExternalKeyMapOutput) MapIndex(k pulumi.StringInput) ExternalKeyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ExternalKey {
		return vs[0].(map[string]*ExternalKey)[vs[1].(string)]
	}).(ExternalKeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalKeyInput)(nil)).Elem(), &ExternalKey{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalKeyArrayInput)(nil)).Elem(), ExternalKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalKeyMapInput)(nil)).Elem(), ExternalKeyMap{})
	pulumi.RegisterOutputType(ExternalKeyOutput{})
	pulumi.RegisterOutputType(ExternalKeyArrayOutput{})
	pulumi.RegisterOutputType(ExternalKeyMapOutput{})
}
