// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// The KMS ciphertext data source allows you to encrypt plaintext into ciphertext
// by using an AWS KMS customer master key. The value returned by this data source
// changes every apply. For a stable ciphertext value, see the [`aws_kms_ciphertext`
// resource](https://www.terraform.io/docs/providers/aws/r/kms_ciphertext.html).
// 
// > **Note:** All arguments including the plaintext be stored in the raw state as plain-text.
// [Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).
func LookupCipherText(ctx *pulumi.Context, args *GetCipherTextArgs) (*GetCipherTextResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["context"] = args.Context
		inputs["keyId"] = args.KeyId
		inputs["plaintext"] = args.Plaintext
	}
	outputs, err := ctx.Invoke("aws:kms/getCipherText:getCipherText", inputs)
	if err != nil {
		return nil, err
	}
	return &GetCipherTextResult{
		CiphertextBlob: outputs["ciphertextBlob"],
		Context: outputs["context"],
		KeyId: outputs["keyId"],
		Plaintext: outputs["plaintext"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getCipherText.
type GetCipherTextArgs struct {
	// An optional mapping that makes up the encryption context.
	Context interface{}
	// Globally unique key ID for the customer master key.
	KeyId interface{}
	// Data to be encrypted. Note that this may show up in logs, and it will be stored in the state file.
	Plaintext interface{}
}

// A collection of values returned by getCipherText.
type GetCipherTextResult struct {
	// Base64 encoded ciphertext
	CiphertextBlob interface{}
	Context interface{}
	KeyId interface{}
	Plaintext interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
