// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the metadata KMS custom key store.
// By using this data source, you can reference KMS custom key store
// without having to hard code the ID as input.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/kms"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err = kms.LookupCustomKeyStore(ctx, &kms.LookupCustomKeyStoreArgs{
//				CustomKeyStoreName: pulumi.StringRef("my_cloudhsm"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupCustomKeyStore(ctx *pulumi.Context, args *LookupCustomKeyStoreArgs, opts ...pulumi.InvokeOption) (*LookupCustomKeyStoreResult, error) {
	var rv LookupCustomKeyStoreResult
	err := ctx.Invoke("aws:kms/getCustomKeyStore:getCustomKeyStore", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCustomKeyStore.
type LookupCustomKeyStoreArgs struct {
	// The ID for the custom key store.
	CustomKeyStoreId *string `pulumi:"customKeyStoreId"`
	// The user-specified friendly name for the custom key store.
	CustomKeyStoreName *string `pulumi:"customKeyStoreName"`
}

// A collection of values returned by getCustomKeyStore.
type LookupCustomKeyStoreResult struct {
	CloudHsmClusterId string `pulumi:"cloudHsmClusterId"`
	// Indicates whether the custom key store is connected to its CloudHSM cluster.
	ConnectionState string `pulumi:"connectionState"`
	// The date and time when the custom key store was created.
	CreationDate       string `pulumi:"creationDate"`
	CustomKeyStoreId   string `pulumi:"customKeyStoreId"`
	CustomKeyStoreName string `pulumi:"customKeyStoreName"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The trust anchor certificate of the associated CloudHSM cluster.
	TrustAnchorCertificate string `pulumi:"trustAnchorCertificate"`
}

func LookupCustomKeyStoreOutput(ctx *pulumi.Context, args LookupCustomKeyStoreOutputArgs, opts ...pulumi.InvokeOption) LookupCustomKeyStoreResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupCustomKeyStoreResult, error) {
			args := v.(LookupCustomKeyStoreArgs)
			r, err := LookupCustomKeyStore(ctx, &args, opts...)
			var s LookupCustomKeyStoreResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupCustomKeyStoreResultOutput)
}

// A collection of arguments for invoking getCustomKeyStore.
type LookupCustomKeyStoreOutputArgs struct {
	// The ID for the custom key store.
	CustomKeyStoreId pulumi.StringPtrInput `pulumi:"customKeyStoreId"`
	// The user-specified friendly name for the custom key store.
	CustomKeyStoreName pulumi.StringPtrInput `pulumi:"customKeyStoreName"`
}

func (LookupCustomKeyStoreOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCustomKeyStoreArgs)(nil)).Elem()
}

// A collection of values returned by getCustomKeyStore.
type LookupCustomKeyStoreResultOutput struct{ *pulumi.OutputState }

func (LookupCustomKeyStoreResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupCustomKeyStoreResult)(nil)).Elem()
}

func (o LookupCustomKeyStoreResultOutput) ToLookupCustomKeyStoreResultOutput() LookupCustomKeyStoreResultOutput {
	return o
}

func (o LookupCustomKeyStoreResultOutput) ToLookupCustomKeyStoreResultOutputWithContext(ctx context.Context) LookupCustomKeyStoreResultOutput {
	return o
}

func (o LookupCustomKeyStoreResultOutput) CloudHsmClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomKeyStoreResult) string { return v.CloudHsmClusterId }).(pulumi.StringOutput)
}

// Indicates whether the custom key store is connected to its CloudHSM cluster.
func (o LookupCustomKeyStoreResultOutput) ConnectionState() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomKeyStoreResult) string { return v.ConnectionState }).(pulumi.StringOutput)
}

// The date and time when the custom key store was created.
func (o LookupCustomKeyStoreResultOutput) CreationDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomKeyStoreResult) string { return v.CreationDate }).(pulumi.StringOutput)
}

func (o LookupCustomKeyStoreResultOutput) CustomKeyStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomKeyStoreResult) string { return v.CustomKeyStoreId }).(pulumi.StringOutput)
}

func (o LookupCustomKeyStoreResultOutput) CustomKeyStoreName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomKeyStoreResult) string { return v.CustomKeyStoreName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupCustomKeyStoreResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomKeyStoreResult) string { return v.Id }).(pulumi.StringOutput)
}

// The trust anchor certificate of the associated CloudHSM cluster.
func (o LookupCustomKeyStoreResultOutput) TrustAnchorCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupCustomKeyStoreResult) string { return v.TrustAnchorCertificate }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupCustomKeyStoreResultOutput{})
}
