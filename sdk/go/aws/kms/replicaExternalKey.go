// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ReplicaExternalKey struct {
	pulumi.CustomResourceState

	Arn                            pulumi.StringOutput    `pulumi:"arn"`
	BypassPolicyLockoutSafetyCheck pulumi.BoolPtrOutput   `pulumi:"bypassPolicyLockoutSafetyCheck"`
	DeletionWindowInDays           pulumi.IntPtrOutput    `pulumi:"deletionWindowInDays"`
	Description                    pulumi.StringPtrOutput `pulumi:"description"`
	Enabled                        pulumi.BoolOutput      `pulumi:"enabled"`
	ExpirationModel                pulumi.StringOutput    `pulumi:"expirationModel"`
	KeyId                          pulumi.StringOutput    `pulumi:"keyId"`
	KeyMaterialBase64              pulumi.StringPtrOutput `pulumi:"keyMaterialBase64"`
	KeyState                       pulumi.StringOutput    `pulumi:"keyState"`
	KeyUsage                       pulumi.StringOutput    `pulumi:"keyUsage"`
	Policy                         pulumi.StringOutput    `pulumi:"policy"`
	PrimaryKeyArn                  pulumi.StringOutput    `pulumi:"primaryKeyArn"`
	Tags                           pulumi.StringMapOutput `pulumi:"tags"`
	TagsAll                        pulumi.StringMapOutput `pulumi:"tagsAll"`
	ValidTo                        pulumi.StringPtrOutput `pulumi:"validTo"`
}

// NewReplicaExternalKey registers a new resource with the given unique name, arguments, and options.
func NewReplicaExternalKey(ctx *pulumi.Context,
	name string, args *ReplicaExternalKeyArgs, opts ...pulumi.ResourceOption) (*ReplicaExternalKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PrimaryKeyArn == nil {
		return nil, errors.New("invalid value for required argument 'PrimaryKeyArn'")
	}
	if args.KeyMaterialBase64 != nil {
		args.KeyMaterialBase64 = pulumi.ToSecret(args.KeyMaterialBase64).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"keyMaterialBase64",
	})
	opts = append(opts, secrets)
	var resource ReplicaExternalKey
	err := ctx.RegisterResource("aws:kms/replicaExternalKey:ReplicaExternalKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetReplicaExternalKey gets an existing ReplicaExternalKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetReplicaExternalKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ReplicaExternalKeyState, opts ...pulumi.ResourceOption) (*ReplicaExternalKey, error) {
	var resource ReplicaExternalKey
	err := ctx.ReadResource("aws:kms/replicaExternalKey:ReplicaExternalKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ReplicaExternalKey resources.
type replicaExternalKeyState struct {
	Arn                            *string           `pulumi:"arn"`
	BypassPolicyLockoutSafetyCheck *bool             `pulumi:"bypassPolicyLockoutSafetyCheck"`
	DeletionWindowInDays           *int              `pulumi:"deletionWindowInDays"`
	Description                    *string           `pulumi:"description"`
	Enabled                        *bool             `pulumi:"enabled"`
	ExpirationModel                *string           `pulumi:"expirationModel"`
	KeyId                          *string           `pulumi:"keyId"`
	KeyMaterialBase64              *string           `pulumi:"keyMaterialBase64"`
	KeyState                       *string           `pulumi:"keyState"`
	KeyUsage                       *string           `pulumi:"keyUsage"`
	Policy                         *string           `pulumi:"policy"`
	PrimaryKeyArn                  *string           `pulumi:"primaryKeyArn"`
	Tags                           map[string]string `pulumi:"tags"`
	TagsAll                        map[string]string `pulumi:"tagsAll"`
	ValidTo                        *string           `pulumi:"validTo"`
}

type ReplicaExternalKeyState struct {
	Arn                            pulumi.StringPtrInput
	BypassPolicyLockoutSafetyCheck pulumi.BoolPtrInput
	DeletionWindowInDays           pulumi.IntPtrInput
	Description                    pulumi.StringPtrInput
	Enabled                        pulumi.BoolPtrInput
	ExpirationModel                pulumi.StringPtrInput
	KeyId                          pulumi.StringPtrInput
	KeyMaterialBase64              pulumi.StringPtrInput
	KeyState                       pulumi.StringPtrInput
	KeyUsage                       pulumi.StringPtrInput
	Policy                         pulumi.StringPtrInput
	PrimaryKeyArn                  pulumi.StringPtrInput
	Tags                           pulumi.StringMapInput
	TagsAll                        pulumi.StringMapInput
	ValidTo                        pulumi.StringPtrInput
}

func (ReplicaExternalKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*replicaExternalKeyState)(nil)).Elem()
}

type replicaExternalKeyArgs struct {
	BypassPolicyLockoutSafetyCheck *bool             `pulumi:"bypassPolicyLockoutSafetyCheck"`
	DeletionWindowInDays           *int              `pulumi:"deletionWindowInDays"`
	Description                    *string           `pulumi:"description"`
	Enabled                        *bool             `pulumi:"enabled"`
	KeyMaterialBase64              *string           `pulumi:"keyMaterialBase64"`
	Policy                         *string           `pulumi:"policy"`
	PrimaryKeyArn                  string            `pulumi:"primaryKeyArn"`
	Tags                           map[string]string `pulumi:"tags"`
	ValidTo                        *string           `pulumi:"validTo"`
}

// The set of arguments for constructing a ReplicaExternalKey resource.
type ReplicaExternalKeyArgs struct {
	BypassPolicyLockoutSafetyCheck pulumi.BoolPtrInput
	DeletionWindowInDays           pulumi.IntPtrInput
	Description                    pulumi.StringPtrInput
	Enabled                        pulumi.BoolPtrInput
	KeyMaterialBase64              pulumi.StringPtrInput
	Policy                         pulumi.StringPtrInput
	PrimaryKeyArn                  pulumi.StringInput
	Tags                           pulumi.StringMapInput
	ValidTo                        pulumi.StringPtrInput
}

func (ReplicaExternalKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*replicaExternalKeyArgs)(nil)).Elem()
}

type ReplicaExternalKeyInput interface {
	pulumi.Input

	ToReplicaExternalKeyOutput() ReplicaExternalKeyOutput
	ToReplicaExternalKeyOutputWithContext(ctx context.Context) ReplicaExternalKeyOutput
}

func (*ReplicaExternalKey) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicaExternalKey)(nil)).Elem()
}

func (i *ReplicaExternalKey) ToReplicaExternalKeyOutput() ReplicaExternalKeyOutput {
	return i.ToReplicaExternalKeyOutputWithContext(context.Background())
}

func (i *ReplicaExternalKey) ToReplicaExternalKeyOutputWithContext(ctx context.Context) ReplicaExternalKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicaExternalKeyOutput)
}

// ReplicaExternalKeyArrayInput is an input type that accepts ReplicaExternalKeyArray and ReplicaExternalKeyArrayOutput values.
// You can construct a concrete instance of `ReplicaExternalKeyArrayInput` via:
//
//	ReplicaExternalKeyArray{ ReplicaExternalKeyArgs{...} }
type ReplicaExternalKeyArrayInput interface {
	pulumi.Input

	ToReplicaExternalKeyArrayOutput() ReplicaExternalKeyArrayOutput
	ToReplicaExternalKeyArrayOutputWithContext(context.Context) ReplicaExternalKeyArrayOutput
}

type ReplicaExternalKeyArray []ReplicaExternalKeyInput

func (ReplicaExternalKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReplicaExternalKey)(nil)).Elem()
}

func (i ReplicaExternalKeyArray) ToReplicaExternalKeyArrayOutput() ReplicaExternalKeyArrayOutput {
	return i.ToReplicaExternalKeyArrayOutputWithContext(context.Background())
}

func (i ReplicaExternalKeyArray) ToReplicaExternalKeyArrayOutputWithContext(ctx context.Context) ReplicaExternalKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicaExternalKeyArrayOutput)
}

// ReplicaExternalKeyMapInput is an input type that accepts ReplicaExternalKeyMap and ReplicaExternalKeyMapOutput values.
// You can construct a concrete instance of `ReplicaExternalKeyMapInput` via:
//
//	ReplicaExternalKeyMap{ "key": ReplicaExternalKeyArgs{...} }
type ReplicaExternalKeyMapInput interface {
	pulumi.Input

	ToReplicaExternalKeyMapOutput() ReplicaExternalKeyMapOutput
	ToReplicaExternalKeyMapOutputWithContext(context.Context) ReplicaExternalKeyMapOutput
}

type ReplicaExternalKeyMap map[string]ReplicaExternalKeyInput

func (ReplicaExternalKeyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReplicaExternalKey)(nil)).Elem()
}

func (i ReplicaExternalKeyMap) ToReplicaExternalKeyMapOutput() ReplicaExternalKeyMapOutput {
	return i.ToReplicaExternalKeyMapOutputWithContext(context.Background())
}

func (i ReplicaExternalKeyMap) ToReplicaExternalKeyMapOutputWithContext(ctx context.Context) ReplicaExternalKeyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReplicaExternalKeyMapOutput)
}

type ReplicaExternalKeyOutput struct{ *pulumi.OutputState }

func (ReplicaExternalKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReplicaExternalKey)(nil)).Elem()
}

func (o ReplicaExternalKeyOutput) ToReplicaExternalKeyOutput() ReplicaExternalKeyOutput {
	return o
}

func (o ReplicaExternalKeyOutput) ToReplicaExternalKeyOutputWithContext(ctx context.Context) ReplicaExternalKeyOutput {
	return o
}

func (o ReplicaExternalKeyOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicaExternalKey) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o ReplicaExternalKeyOutput) BypassPolicyLockoutSafetyCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ReplicaExternalKey) pulumi.BoolPtrOutput { return v.BypassPolicyLockoutSafetyCheck }).(pulumi.BoolPtrOutput)
}

func (o ReplicaExternalKeyOutput) DeletionWindowInDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ReplicaExternalKey) pulumi.IntPtrOutput { return v.DeletionWindowInDays }).(pulumi.IntPtrOutput)
}

func (o ReplicaExternalKeyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicaExternalKey) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ReplicaExternalKeyOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *ReplicaExternalKey) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

func (o ReplicaExternalKeyOutput) ExpirationModel() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicaExternalKey) pulumi.StringOutput { return v.ExpirationModel }).(pulumi.StringOutput)
}

func (o ReplicaExternalKeyOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicaExternalKey) pulumi.StringOutput { return v.KeyId }).(pulumi.StringOutput)
}

func (o ReplicaExternalKeyOutput) KeyMaterialBase64() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicaExternalKey) pulumi.StringPtrOutput { return v.KeyMaterialBase64 }).(pulumi.StringPtrOutput)
}

func (o ReplicaExternalKeyOutput) KeyState() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicaExternalKey) pulumi.StringOutput { return v.KeyState }).(pulumi.StringOutput)
}

func (o ReplicaExternalKeyOutput) KeyUsage() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicaExternalKey) pulumi.StringOutput { return v.KeyUsage }).(pulumi.StringOutput)
}

func (o ReplicaExternalKeyOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicaExternalKey) pulumi.StringOutput { return v.Policy }).(pulumi.StringOutput)
}

func (o ReplicaExternalKeyOutput) PrimaryKeyArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ReplicaExternalKey) pulumi.StringOutput { return v.PrimaryKeyArn }).(pulumi.StringOutput)
}

func (o ReplicaExternalKeyOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ReplicaExternalKey) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o ReplicaExternalKeyOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ReplicaExternalKey) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o ReplicaExternalKeyOutput) ValidTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReplicaExternalKey) pulumi.StringPtrOutput { return v.ValidTo }).(pulumi.StringPtrOutput)
}

type ReplicaExternalKeyArrayOutput struct{ *pulumi.OutputState }

func (ReplicaExternalKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ReplicaExternalKey)(nil)).Elem()
}

func (o ReplicaExternalKeyArrayOutput) ToReplicaExternalKeyArrayOutput() ReplicaExternalKeyArrayOutput {
	return o
}

func (o ReplicaExternalKeyArrayOutput) ToReplicaExternalKeyArrayOutputWithContext(ctx context.Context) ReplicaExternalKeyArrayOutput {
	return o
}

func (o ReplicaExternalKeyArrayOutput) Index(i pulumi.IntInput) ReplicaExternalKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ReplicaExternalKey {
		return vs[0].([]*ReplicaExternalKey)[vs[1].(int)]
	}).(ReplicaExternalKeyOutput)
}

type ReplicaExternalKeyMapOutput struct{ *pulumi.OutputState }

func (ReplicaExternalKeyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ReplicaExternalKey)(nil)).Elem()
}

func (o ReplicaExternalKeyMapOutput) ToReplicaExternalKeyMapOutput() ReplicaExternalKeyMapOutput {
	return o
}

func (o ReplicaExternalKeyMapOutput) ToReplicaExternalKeyMapOutputWithContext(ctx context.Context) ReplicaExternalKeyMapOutput {
	return o
}

func (o ReplicaExternalKeyMapOutput) MapIndex(k pulumi.StringInput) ReplicaExternalKeyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ReplicaExternalKey {
		return vs[0].(map[string]*ReplicaExternalKey)[vs[1].(string)]
	}).(ReplicaExternalKeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicaExternalKeyInput)(nil)).Elem(), &ReplicaExternalKey{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicaExternalKeyArrayInput)(nil)).Elem(), ReplicaExternalKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReplicaExternalKeyMapInput)(nil)).Elem(), ReplicaExternalKeyMap{})
	pulumi.RegisterOutputType(ReplicaExternalKeyOutput{})
	pulumi.RegisterOutputType(ReplicaExternalKeyArrayOutput{})
	pulumi.RegisterOutputType(ReplicaExternalKeyMapOutput{})
}
