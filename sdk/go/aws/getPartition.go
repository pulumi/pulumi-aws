// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package aws

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to lookup information about the current AWS partition in
// which the provider is working.
//
// ## Example Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws"
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/iam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			current, err := aws.GetPartition(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			_, err = iam.GetPolicyDocument(ctx, &iam.GetPolicyDocumentArgs{
//				Statements: []iam.GetPolicyDocumentStatement{
//					{
//						Sid: pulumi.StringRef("1"),
//						Actions: []string{
//							"s3:ListBucket",
//						},
//						Resources: []string{
//							fmt.Sprintf("arn:%v:s3:::my-bucket", current.Partition),
//						},
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetPartition(ctx *pulumi.Context, args *GetPartitionArgs, opts ...pulumi.InvokeOption) (*GetPartitionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPartitionResult
	err := ctx.Invoke("aws:index/getPartition:getPartition", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPartition.
type GetPartitionArgs struct {
	// Identifier of the current partition (e.g., `aws` in AWS Commercial, `aws-cn` in AWS China).
	Id *string `pulumi:"id"`
}

// A collection of values returned by getPartition.
type GetPartitionResult struct {
	// Base DNS domain name for the current partition (e.g., `amazonaws.com` in AWS Commercial, `amazonaws.com.cn` in AWS China).
	DnsSuffix string `pulumi:"dnsSuffix"`
	// Identifier of the current partition (e.g., `aws` in AWS Commercial, `aws-cn` in AWS China).
	Id string `pulumi:"id"`
	// Identifier of the current partition (e.g., `aws` in AWS Commercial, `aws-cn` in AWS China).
	Partition string `pulumi:"partition"`
	// Prefix of service names (e.g., `com.amazonaws` in AWS Commercial, `cn.com.amazonaws` in AWS China).
	ReverseDnsPrefix string `pulumi:"reverseDnsPrefix"`
}

func GetPartitionOutput(ctx *pulumi.Context, args GetPartitionOutputArgs, opts ...pulumi.InvokeOption) GetPartitionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPartitionResult, error) {
			args := v.(GetPartitionArgs)
			r, err := GetPartition(ctx, &args, opts...)
			var s GetPartitionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPartitionResultOutput)
}

// A collection of arguments for invoking getPartition.
type GetPartitionOutputArgs struct {
	// Identifier of the current partition (e.g., `aws` in AWS Commercial, `aws-cn` in AWS China).
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (GetPartitionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPartitionArgs)(nil)).Elem()
}

// A collection of values returned by getPartition.
type GetPartitionResultOutput struct{ *pulumi.OutputState }

func (GetPartitionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPartitionResult)(nil)).Elem()
}

func (o GetPartitionResultOutput) ToGetPartitionResultOutput() GetPartitionResultOutput {
	return o
}

func (o GetPartitionResultOutput) ToGetPartitionResultOutputWithContext(ctx context.Context) GetPartitionResultOutput {
	return o
}

// Base DNS domain name for the current partition (e.g., `amazonaws.com` in AWS Commercial, `amazonaws.com.cn` in AWS China).
func (o GetPartitionResultOutput) DnsSuffix() pulumi.StringOutput {
	return o.ApplyT(func(v GetPartitionResult) string { return v.DnsSuffix }).(pulumi.StringOutput)
}

// Identifier of the current partition (e.g., `aws` in AWS Commercial, `aws-cn` in AWS China).
func (o GetPartitionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPartitionResult) string { return v.Id }).(pulumi.StringOutput)
}

// Identifier of the current partition (e.g., `aws` in AWS Commercial, `aws-cn` in AWS China).
func (o GetPartitionResultOutput) Partition() pulumi.StringOutput {
	return o.ApplyT(func(v GetPartitionResult) string { return v.Partition }).(pulumi.StringOutput)
}

// Prefix of service names (e.g., `com.amazonaws` in AWS Commercial, `cn.com.amazonaws` in AWS China).
func (o GetPartitionResultOutput) ReverseDnsPrefix() pulumi.StringOutput {
	return o.ApplyT(func(v GetPartitionResult) string { return v.ReverseDnsPrefix }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPartitionResultOutput{})
}
