// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package athena

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an Athena Named Query resource.
type NamedQuery struct {
	s *pulumi.ResourceState
}

// NewNamedQuery registers a new resource with the given unique name, arguments, and options.
func NewNamedQuery(ctx *pulumi.Context,
	name string, args *NamedQueryArgs, opts ...pulumi.ResourceOpt) (*NamedQuery, error) {
	if args == nil || args.Database == nil {
		return nil, errors.New("missing required argument 'Database'")
	}
	if args == nil || args.Query == nil {
		return nil, errors.New("missing required argument 'Query'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["database"] = nil
		inputs["description"] = nil
		inputs["name"] = nil
		inputs["query"] = nil
	} else {
		inputs["database"] = args.Database
		inputs["description"] = args.Description
		inputs["name"] = args.Name
		inputs["query"] = args.Query
	}
	s, err := ctx.RegisterResource("aws:athena/namedQuery:NamedQuery", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &NamedQuery{s: s}, nil
}

// GetNamedQuery gets an existing NamedQuery resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetNamedQuery(ctx *pulumi.Context,
	name string, id pulumi.ID, state *NamedQueryState, opts ...pulumi.ResourceOpt) (*NamedQuery, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["database"] = state.Database
		inputs["description"] = state.Description
		inputs["name"] = state.Name
		inputs["query"] = state.Query
	}
	s, err := ctx.ReadResource("aws:athena/namedQuery:NamedQuery", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &NamedQuery{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *NamedQuery) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *NamedQuery) ID() *pulumi.IDOutput {
	return r.s.ID
}

// The database to which the query belongs.
func (r *NamedQuery) Database() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["database"])
}

// A brief explanation of the query. Maximum length of 1024.
func (r *NamedQuery) Description() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["description"])
}

// The plain language name for the query. Maximum length of 128.
func (r *NamedQuery) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The text of the query itself. In other words, all query statements. Maximum length of 262144.
func (r *NamedQuery) Query() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["query"])
}

// Input properties used for looking up and filtering NamedQuery resources.
type NamedQueryState struct {
	// The database to which the query belongs.
	Database interface{}
	// A brief explanation of the query. Maximum length of 1024.
	Description interface{}
	// The plain language name for the query. Maximum length of 128.
	Name interface{}
	// The text of the query itself. In other words, all query statements. Maximum length of 262144.
	Query interface{}
}

// The set of arguments for constructing a NamedQuery resource.
type NamedQueryArgs struct {
	// The database to which the query belongs.
	Database interface{}
	// A brief explanation of the query. Maximum length of 1024.
	Description interface{}
	// The plain language name for the query. Maximum length of 128.
	Name interface{}
	// The text of the query itself. In other words, all query statements. Maximum length of 262144.
	Query interface{}
}
