// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fsx

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type OntapFileSystemDiskIopsConfiguration struct {
	// - The total number of SSD IOPS provisioned for the file system.
	Iops *int `pulumi:"iops"`
	// - Specifies whether the number of IOPS for the file system is using the system. Valid values are `AUTOMATIC` and `USER_PROVISIONED`. Default value is `AUTOMATIC`.
	Mode *string `pulumi:"mode"`
}

// OntapFileSystemDiskIopsConfigurationInput is an input type that accepts OntapFileSystemDiskIopsConfigurationArgs and OntapFileSystemDiskIopsConfigurationOutput values.
// You can construct a concrete instance of `OntapFileSystemDiskIopsConfigurationInput` via:
//
//          OntapFileSystemDiskIopsConfigurationArgs{...}
type OntapFileSystemDiskIopsConfigurationInput interface {
	pulumi.Input

	ToOntapFileSystemDiskIopsConfigurationOutput() OntapFileSystemDiskIopsConfigurationOutput
	ToOntapFileSystemDiskIopsConfigurationOutputWithContext(context.Context) OntapFileSystemDiskIopsConfigurationOutput
}

type OntapFileSystemDiskIopsConfigurationArgs struct {
	// - The total number of SSD IOPS provisioned for the file system.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// - Specifies whether the number of IOPS for the file system is using the system. Valid values are `AUTOMATIC` and `USER_PROVISIONED`. Default value is `AUTOMATIC`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (OntapFileSystemDiskIopsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapFileSystemDiskIopsConfiguration)(nil)).Elem()
}

func (i OntapFileSystemDiskIopsConfigurationArgs) ToOntapFileSystemDiskIopsConfigurationOutput() OntapFileSystemDiskIopsConfigurationOutput {
	return i.ToOntapFileSystemDiskIopsConfigurationOutputWithContext(context.Background())
}

func (i OntapFileSystemDiskIopsConfigurationArgs) ToOntapFileSystemDiskIopsConfigurationOutputWithContext(ctx context.Context) OntapFileSystemDiskIopsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapFileSystemDiskIopsConfigurationOutput)
}

func (i OntapFileSystemDiskIopsConfigurationArgs) ToOntapFileSystemDiskIopsConfigurationPtrOutput() OntapFileSystemDiskIopsConfigurationPtrOutput {
	return i.ToOntapFileSystemDiskIopsConfigurationPtrOutputWithContext(context.Background())
}

func (i OntapFileSystemDiskIopsConfigurationArgs) ToOntapFileSystemDiskIopsConfigurationPtrOutputWithContext(ctx context.Context) OntapFileSystemDiskIopsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapFileSystemDiskIopsConfigurationOutput).ToOntapFileSystemDiskIopsConfigurationPtrOutputWithContext(ctx)
}

// OntapFileSystemDiskIopsConfigurationPtrInput is an input type that accepts OntapFileSystemDiskIopsConfigurationArgs, OntapFileSystemDiskIopsConfigurationPtr and OntapFileSystemDiskIopsConfigurationPtrOutput values.
// You can construct a concrete instance of `OntapFileSystemDiskIopsConfigurationPtrInput` via:
//
//          OntapFileSystemDiskIopsConfigurationArgs{...}
//
//  or:
//
//          nil
type OntapFileSystemDiskIopsConfigurationPtrInput interface {
	pulumi.Input

	ToOntapFileSystemDiskIopsConfigurationPtrOutput() OntapFileSystemDiskIopsConfigurationPtrOutput
	ToOntapFileSystemDiskIopsConfigurationPtrOutputWithContext(context.Context) OntapFileSystemDiskIopsConfigurationPtrOutput
}

type ontapFileSystemDiskIopsConfigurationPtrType OntapFileSystemDiskIopsConfigurationArgs

func OntapFileSystemDiskIopsConfigurationPtr(v *OntapFileSystemDiskIopsConfigurationArgs) OntapFileSystemDiskIopsConfigurationPtrInput {
	return (*ontapFileSystemDiskIopsConfigurationPtrType)(v)
}

func (*ontapFileSystemDiskIopsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OntapFileSystemDiskIopsConfiguration)(nil)).Elem()
}

func (i *ontapFileSystemDiskIopsConfigurationPtrType) ToOntapFileSystemDiskIopsConfigurationPtrOutput() OntapFileSystemDiskIopsConfigurationPtrOutput {
	return i.ToOntapFileSystemDiskIopsConfigurationPtrOutputWithContext(context.Background())
}

func (i *ontapFileSystemDiskIopsConfigurationPtrType) ToOntapFileSystemDiskIopsConfigurationPtrOutputWithContext(ctx context.Context) OntapFileSystemDiskIopsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapFileSystemDiskIopsConfigurationPtrOutput)
}

type OntapFileSystemDiskIopsConfigurationOutput struct{ *pulumi.OutputState }

func (OntapFileSystemDiskIopsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapFileSystemDiskIopsConfiguration)(nil)).Elem()
}

func (o OntapFileSystemDiskIopsConfigurationOutput) ToOntapFileSystemDiskIopsConfigurationOutput() OntapFileSystemDiskIopsConfigurationOutput {
	return o
}

func (o OntapFileSystemDiskIopsConfigurationOutput) ToOntapFileSystemDiskIopsConfigurationOutputWithContext(ctx context.Context) OntapFileSystemDiskIopsConfigurationOutput {
	return o
}

func (o OntapFileSystemDiskIopsConfigurationOutput) ToOntapFileSystemDiskIopsConfigurationPtrOutput() OntapFileSystemDiskIopsConfigurationPtrOutput {
	return o.ToOntapFileSystemDiskIopsConfigurationPtrOutputWithContext(context.Background())
}

func (o OntapFileSystemDiskIopsConfigurationOutput) ToOntapFileSystemDiskIopsConfigurationPtrOutputWithContext(ctx context.Context) OntapFileSystemDiskIopsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OntapFileSystemDiskIopsConfiguration) *OntapFileSystemDiskIopsConfiguration {
		return &v
	}).(OntapFileSystemDiskIopsConfigurationPtrOutput)
}

// - The total number of SSD IOPS provisioned for the file system.
func (o OntapFileSystemDiskIopsConfigurationOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OntapFileSystemDiskIopsConfiguration) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// - Specifies whether the number of IOPS for the file system is using the system. Valid values are `AUTOMATIC` and `USER_PROVISIONED`. Default value is `AUTOMATIC`.
func (o OntapFileSystemDiskIopsConfigurationOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OntapFileSystemDiskIopsConfiguration) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type OntapFileSystemDiskIopsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (OntapFileSystemDiskIopsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OntapFileSystemDiskIopsConfiguration)(nil)).Elem()
}

func (o OntapFileSystemDiskIopsConfigurationPtrOutput) ToOntapFileSystemDiskIopsConfigurationPtrOutput() OntapFileSystemDiskIopsConfigurationPtrOutput {
	return o
}

func (o OntapFileSystemDiskIopsConfigurationPtrOutput) ToOntapFileSystemDiskIopsConfigurationPtrOutputWithContext(ctx context.Context) OntapFileSystemDiskIopsConfigurationPtrOutput {
	return o
}

func (o OntapFileSystemDiskIopsConfigurationPtrOutput) Elem() OntapFileSystemDiskIopsConfigurationOutput {
	return o.ApplyT(func(v *OntapFileSystemDiskIopsConfiguration) OntapFileSystemDiskIopsConfiguration {
		if v != nil {
			return *v
		}
		var ret OntapFileSystemDiskIopsConfiguration
		return ret
	}).(OntapFileSystemDiskIopsConfigurationOutput)
}

// - The total number of SSD IOPS provisioned for the file system.
func (o OntapFileSystemDiskIopsConfigurationPtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OntapFileSystemDiskIopsConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

// - Specifies whether the number of IOPS for the file system is using the system. Valid values are `AUTOMATIC` and `USER_PROVISIONED`. Default value is `AUTOMATIC`.
func (o OntapFileSystemDiskIopsConfigurationPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OntapFileSystemDiskIopsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type OntapFileSystemEndpoint struct {
	// An endpoint for managing your file system by setting up NetApp SnapMirror with other ONTAP systems. See Endpoint.
	Interclusters []OntapFileSystemEndpointIntercluster `pulumi:"interclusters"`
	// An endpoint for managing your file system using the NetApp ONTAP CLI and NetApp ONTAP API. See Endpoint.
	Managements []OntapFileSystemEndpointManagement `pulumi:"managements"`
}

// OntapFileSystemEndpointInput is an input type that accepts OntapFileSystemEndpointArgs and OntapFileSystemEndpointOutput values.
// You can construct a concrete instance of `OntapFileSystemEndpointInput` via:
//
//          OntapFileSystemEndpointArgs{...}
type OntapFileSystemEndpointInput interface {
	pulumi.Input

	ToOntapFileSystemEndpointOutput() OntapFileSystemEndpointOutput
	ToOntapFileSystemEndpointOutputWithContext(context.Context) OntapFileSystemEndpointOutput
}

type OntapFileSystemEndpointArgs struct {
	// An endpoint for managing your file system by setting up NetApp SnapMirror with other ONTAP systems. See Endpoint.
	Interclusters OntapFileSystemEndpointInterclusterArrayInput `pulumi:"interclusters"`
	// An endpoint for managing your file system using the NetApp ONTAP CLI and NetApp ONTAP API. See Endpoint.
	Managements OntapFileSystemEndpointManagementArrayInput `pulumi:"managements"`
}

func (OntapFileSystemEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapFileSystemEndpoint)(nil)).Elem()
}

func (i OntapFileSystemEndpointArgs) ToOntapFileSystemEndpointOutput() OntapFileSystemEndpointOutput {
	return i.ToOntapFileSystemEndpointOutputWithContext(context.Background())
}

func (i OntapFileSystemEndpointArgs) ToOntapFileSystemEndpointOutputWithContext(ctx context.Context) OntapFileSystemEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapFileSystemEndpointOutput)
}

// OntapFileSystemEndpointArrayInput is an input type that accepts OntapFileSystemEndpointArray and OntapFileSystemEndpointArrayOutput values.
// You can construct a concrete instance of `OntapFileSystemEndpointArrayInput` via:
//
//          OntapFileSystemEndpointArray{ OntapFileSystemEndpointArgs{...} }
type OntapFileSystemEndpointArrayInput interface {
	pulumi.Input

	ToOntapFileSystemEndpointArrayOutput() OntapFileSystemEndpointArrayOutput
	ToOntapFileSystemEndpointArrayOutputWithContext(context.Context) OntapFileSystemEndpointArrayOutput
}

type OntapFileSystemEndpointArray []OntapFileSystemEndpointInput

func (OntapFileSystemEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapFileSystemEndpoint)(nil)).Elem()
}

func (i OntapFileSystemEndpointArray) ToOntapFileSystemEndpointArrayOutput() OntapFileSystemEndpointArrayOutput {
	return i.ToOntapFileSystemEndpointArrayOutputWithContext(context.Background())
}

func (i OntapFileSystemEndpointArray) ToOntapFileSystemEndpointArrayOutputWithContext(ctx context.Context) OntapFileSystemEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapFileSystemEndpointArrayOutput)
}

type OntapFileSystemEndpointOutput struct{ *pulumi.OutputState }

func (OntapFileSystemEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapFileSystemEndpoint)(nil)).Elem()
}

func (o OntapFileSystemEndpointOutput) ToOntapFileSystemEndpointOutput() OntapFileSystemEndpointOutput {
	return o
}

func (o OntapFileSystemEndpointOutput) ToOntapFileSystemEndpointOutputWithContext(ctx context.Context) OntapFileSystemEndpointOutput {
	return o
}

// An endpoint for managing your file system by setting up NetApp SnapMirror with other ONTAP systems. See Endpoint.
func (o OntapFileSystemEndpointOutput) Interclusters() OntapFileSystemEndpointInterclusterArrayOutput {
	return o.ApplyT(func(v OntapFileSystemEndpoint) []OntapFileSystemEndpointIntercluster { return v.Interclusters }).(OntapFileSystemEndpointInterclusterArrayOutput)
}

// An endpoint for managing your file system using the NetApp ONTAP CLI and NetApp ONTAP API. See Endpoint.
func (o OntapFileSystemEndpointOutput) Managements() OntapFileSystemEndpointManagementArrayOutput {
	return o.ApplyT(func(v OntapFileSystemEndpoint) []OntapFileSystemEndpointManagement { return v.Managements }).(OntapFileSystemEndpointManagementArrayOutput)
}

type OntapFileSystemEndpointArrayOutput struct{ *pulumi.OutputState }

func (OntapFileSystemEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapFileSystemEndpoint)(nil)).Elem()
}

func (o OntapFileSystemEndpointArrayOutput) ToOntapFileSystemEndpointArrayOutput() OntapFileSystemEndpointArrayOutput {
	return o
}

func (o OntapFileSystemEndpointArrayOutput) ToOntapFileSystemEndpointArrayOutputWithContext(ctx context.Context) OntapFileSystemEndpointArrayOutput {
	return o
}

func (o OntapFileSystemEndpointArrayOutput) Index(i pulumi.IntInput) OntapFileSystemEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OntapFileSystemEndpoint {
		return vs[0].([]OntapFileSystemEndpoint)[vs[1].(int)]
	}).(OntapFileSystemEndpointOutput)
}

type OntapFileSystemEndpointIntercluster struct {
	// The Domain Name Service (DNS) name for the file system. You can mount your file system using its DNS name.
	DnsName *string `pulumi:"dnsName"`
	// IP addresses of the file system endpoint.
	IpAddresses []string `pulumi:"ipAddresses"`
}

// OntapFileSystemEndpointInterclusterInput is an input type that accepts OntapFileSystemEndpointInterclusterArgs and OntapFileSystemEndpointInterclusterOutput values.
// You can construct a concrete instance of `OntapFileSystemEndpointInterclusterInput` via:
//
//          OntapFileSystemEndpointInterclusterArgs{...}
type OntapFileSystemEndpointInterclusterInput interface {
	pulumi.Input

	ToOntapFileSystemEndpointInterclusterOutput() OntapFileSystemEndpointInterclusterOutput
	ToOntapFileSystemEndpointInterclusterOutputWithContext(context.Context) OntapFileSystemEndpointInterclusterOutput
}

type OntapFileSystemEndpointInterclusterArgs struct {
	// The Domain Name Service (DNS) name for the file system. You can mount your file system using its DNS name.
	DnsName pulumi.StringPtrInput `pulumi:"dnsName"`
	// IP addresses of the file system endpoint.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (OntapFileSystemEndpointInterclusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapFileSystemEndpointIntercluster)(nil)).Elem()
}

func (i OntapFileSystemEndpointInterclusterArgs) ToOntapFileSystemEndpointInterclusterOutput() OntapFileSystemEndpointInterclusterOutput {
	return i.ToOntapFileSystemEndpointInterclusterOutputWithContext(context.Background())
}

func (i OntapFileSystemEndpointInterclusterArgs) ToOntapFileSystemEndpointInterclusterOutputWithContext(ctx context.Context) OntapFileSystemEndpointInterclusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapFileSystemEndpointInterclusterOutput)
}

// OntapFileSystemEndpointInterclusterArrayInput is an input type that accepts OntapFileSystemEndpointInterclusterArray and OntapFileSystemEndpointInterclusterArrayOutput values.
// You can construct a concrete instance of `OntapFileSystemEndpointInterclusterArrayInput` via:
//
//          OntapFileSystemEndpointInterclusterArray{ OntapFileSystemEndpointInterclusterArgs{...} }
type OntapFileSystemEndpointInterclusterArrayInput interface {
	pulumi.Input

	ToOntapFileSystemEndpointInterclusterArrayOutput() OntapFileSystemEndpointInterclusterArrayOutput
	ToOntapFileSystemEndpointInterclusterArrayOutputWithContext(context.Context) OntapFileSystemEndpointInterclusterArrayOutput
}

type OntapFileSystemEndpointInterclusterArray []OntapFileSystemEndpointInterclusterInput

func (OntapFileSystemEndpointInterclusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapFileSystemEndpointIntercluster)(nil)).Elem()
}

func (i OntapFileSystemEndpointInterclusterArray) ToOntapFileSystemEndpointInterclusterArrayOutput() OntapFileSystemEndpointInterclusterArrayOutput {
	return i.ToOntapFileSystemEndpointInterclusterArrayOutputWithContext(context.Background())
}

func (i OntapFileSystemEndpointInterclusterArray) ToOntapFileSystemEndpointInterclusterArrayOutputWithContext(ctx context.Context) OntapFileSystemEndpointInterclusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapFileSystemEndpointInterclusterArrayOutput)
}

type OntapFileSystemEndpointInterclusterOutput struct{ *pulumi.OutputState }

func (OntapFileSystemEndpointInterclusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapFileSystemEndpointIntercluster)(nil)).Elem()
}

func (o OntapFileSystemEndpointInterclusterOutput) ToOntapFileSystemEndpointInterclusterOutput() OntapFileSystemEndpointInterclusterOutput {
	return o
}

func (o OntapFileSystemEndpointInterclusterOutput) ToOntapFileSystemEndpointInterclusterOutputWithContext(ctx context.Context) OntapFileSystemEndpointInterclusterOutput {
	return o
}

// The Domain Name Service (DNS) name for the file system. You can mount your file system using its DNS name.
func (o OntapFileSystemEndpointInterclusterOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OntapFileSystemEndpointIntercluster) *string { return v.DnsName }).(pulumi.StringPtrOutput)
}

// IP addresses of the file system endpoint.
func (o OntapFileSystemEndpointInterclusterOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OntapFileSystemEndpointIntercluster) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type OntapFileSystemEndpointInterclusterArrayOutput struct{ *pulumi.OutputState }

func (OntapFileSystemEndpointInterclusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapFileSystemEndpointIntercluster)(nil)).Elem()
}

func (o OntapFileSystemEndpointInterclusterArrayOutput) ToOntapFileSystemEndpointInterclusterArrayOutput() OntapFileSystemEndpointInterclusterArrayOutput {
	return o
}

func (o OntapFileSystemEndpointInterclusterArrayOutput) ToOntapFileSystemEndpointInterclusterArrayOutputWithContext(ctx context.Context) OntapFileSystemEndpointInterclusterArrayOutput {
	return o
}

func (o OntapFileSystemEndpointInterclusterArrayOutput) Index(i pulumi.IntInput) OntapFileSystemEndpointInterclusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OntapFileSystemEndpointIntercluster {
		return vs[0].([]OntapFileSystemEndpointIntercluster)[vs[1].(int)]
	}).(OntapFileSystemEndpointInterclusterOutput)
}

type OntapFileSystemEndpointManagement struct {
	// The Domain Name Service (DNS) name for the file system. You can mount your file system using its DNS name.
	DnsName *string `pulumi:"dnsName"`
	// IP addresses of the file system endpoint.
	IpAddresses []string `pulumi:"ipAddresses"`
}

// OntapFileSystemEndpointManagementInput is an input type that accepts OntapFileSystemEndpointManagementArgs and OntapFileSystemEndpointManagementOutput values.
// You can construct a concrete instance of `OntapFileSystemEndpointManagementInput` via:
//
//          OntapFileSystemEndpointManagementArgs{...}
type OntapFileSystemEndpointManagementInput interface {
	pulumi.Input

	ToOntapFileSystemEndpointManagementOutput() OntapFileSystemEndpointManagementOutput
	ToOntapFileSystemEndpointManagementOutputWithContext(context.Context) OntapFileSystemEndpointManagementOutput
}

type OntapFileSystemEndpointManagementArgs struct {
	// The Domain Name Service (DNS) name for the file system. You can mount your file system using its DNS name.
	DnsName pulumi.StringPtrInput `pulumi:"dnsName"`
	// IP addresses of the file system endpoint.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (OntapFileSystemEndpointManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapFileSystemEndpointManagement)(nil)).Elem()
}

func (i OntapFileSystemEndpointManagementArgs) ToOntapFileSystemEndpointManagementOutput() OntapFileSystemEndpointManagementOutput {
	return i.ToOntapFileSystemEndpointManagementOutputWithContext(context.Background())
}

func (i OntapFileSystemEndpointManagementArgs) ToOntapFileSystemEndpointManagementOutputWithContext(ctx context.Context) OntapFileSystemEndpointManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapFileSystemEndpointManagementOutput)
}

// OntapFileSystemEndpointManagementArrayInput is an input type that accepts OntapFileSystemEndpointManagementArray and OntapFileSystemEndpointManagementArrayOutput values.
// You can construct a concrete instance of `OntapFileSystemEndpointManagementArrayInput` via:
//
//          OntapFileSystemEndpointManagementArray{ OntapFileSystemEndpointManagementArgs{...} }
type OntapFileSystemEndpointManagementArrayInput interface {
	pulumi.Input

	ToOntapFileSystemEndpointManagementArrayOutput() OntapFileSystemEndpointManagementArrayOutput
	ToOntapFileSystemEndpointManagementArrayOutputWithContext(context.Context) OntapFileSystemEndpointManagementArrayOutput
}

type OntapFileSystemEndpointManagementArray []OntapFileSystemEndpointManagementInput

func (OntapFileSystemEndpointManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapFileSystemEndpointManagement)(nil)).Elem()
}

func (i OntapFileSystemEndpointManagementArray) ToOntapFileSystemEndpointManagementArrayOutput() OntapFileSystemEndpointManagementArrayOutput {
	return i.ToOntapFileSystemEndpointManagementArrayOutputWithContext(context.Background())
}

func (i OntapFileSystemEndpointManagementArray) ToOntapFileSystemEndpointManagementArrayOutputWithContext(ctx context.Context) OntapFileSystemEndpointManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapFileSystemEndpointManagementArrayOutput)
}

type OntapFileSystemEndpointManagementOutput struct{ *pulumi.OutputState }

func (OntapFileSystemEndpointManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapFileSystemEndpointManagement)(nil)).Elem()
}

func (o OntapFileSystemEndpointManagementOutput) ToOntapFileSystemEndpointManagementOutput() OntapFileSystemEndpointManagementOutput {
	return o
}

func (o OntapFileSystemEndpointManagementOutput) ToOntapFileSystemEndpointManagementOutputWithContext(ctx context.Context) OntapFileSystemEndpointManagementOutput {
	return o
}

// The Domain Name Service (DNS) name for the file system. You can mount your file system using its DNS name.
func (o OntapFileSystemEndpointManagementOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OntapFileSystemEndpointManagement) *string { return v.DnsName }).(pulumi.StringPtrOutput)
}

// IP addresses of the file system endpoint.
func (o OntapFileSystemEndpointManagementOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OntapFileSystemEndpointManagement) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type OntapFileSystemEndpointManagementArrayOutput struct{ *pulumi.OutputState }

func (OntapFileSystemEndpointManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapFileSystemEndpointManagement)(nil)).Elem()
}

func (o OntapFileSystemEndpointManagementArrayOutput) ToOntapFileSystemEndpointManagementArrayOutput() OntapFileSystemEndpointManagementArrayOutput {
	return o
}

func (o OntapFileSystemEndpointManagementArrayOutput) ToOntapFileSystemEndpointManagementArrayOutputWithContext(ctx context.Context) OntapFileSystemEndpointManagementArrayOutput {
	return o
}

func (o OntapFileSystemEndpointManagementArrayOutput) Index(i pulumi.IntInput) OntapFileSystemEndpointManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OntapFileSystemEndpointManagement {
		return vs[0].([]OntapFileSystemEndpointManagement)[vs[1].(int)]
	}).(OntapFileSystemEndpointManagementOutput)
}

type OntapStorageVirtualMachineActiveDirectoryConfiguration struct {
	// The NetBIOS name of the Active Directory computer object that will be created for your SVM. This is often the same as the SVM name but can be different. It is limited to 15 characters because of standard NetBIOS naming limits.
	NetbiosName                             *string                                                                                        `pulumi:"netbiosName"`
	SelfManagedActiveDirectoryConfiguration *OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration `pulumi:"selfManagedActiveDirectoryConfiguration"`
}

// OntapStorageVirtualMachineActiveDirectoryConfigurationInput is an input type that accepts OntapStorageVirtualMachineActiveDirectoryConfigurationArgs and OntapStorageVirtualMachineActiveDirectoryConfigurationOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineActiveDirectoryConfigurationInput` via:
//
//          OntapStorageVirtualMachineActiveDirectoryConfigurationArgs{...}
type OntapStorageVirtualMachineActiveDirectoryConfigurationInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineActiveDirectoryConfigurationOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationOutput
	ToOntapStorageVirtualMachineActiveDirectoryConfigurationOutputWithContext(context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationOutput
}

type OntapStorageVirtualMachineActiveDirectoryConfigurationArgs struct {
	// The NetBIOS name of the Active Directory computer object that will be created for your SVM. This is often the same as the SVM name but can be different. It is limited to 15 characters because of standard NetBIOS naming limits.
	NetbiosName                             pulumi.StringPtrInput                                                                                 `pulumi:"netbiosName"`
	SelfManagedActiveDirectoryConfiguration OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrInput `pulumi:"selfManagedActiveDirectoryConfiguration"`
}

func (OntapStorageVirtualMachineActiveDirectoryConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineActiveDirectoryConfiguration)(nil)).Elem()
}

func (i OntapStorageVirtualMachineActiveDirectoryConfigurationArgs) ToOntapStorageVirtualMachineActiveDirectoryConfigurationOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationOutput {
	return i.ToOntapStorageVirtualMachineActiveDirectoryConfigurationOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineActiveDirectoryConfigurationArgs) ToOntapStorageVirtualMachineActiveDirectoryConfigurationOutputWithContext(ctx context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineActiveDirectoryConfigurationOutput)
}

func (i OntapStorageVirtualMachineActiveDirectoryConfigurationArgs) ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput {
	return i.ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineActiveDirectoryConfigurationArgs) ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutputWithContext(ctx context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineActiveDirectoryConfigurationOutput).ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutputWithContext(ctx)
}

// OntapStorageVirtualMachineActiveDirectoryConfigurationPtrInput is an input type that accepts OntapStorageVirtualMachineActiveDirectoryConfigurationArgs, OntapStorageVirtualMachineActiveDirectoryConfigurationPtr and OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineActiveDirectoryConfigurationPtrInput` via:
//
//          OntapStorageVirtualMachineActiveDirectoryConfigurationArgs{...}
//
//  or:
//
//          nil
type OntapStorageVirtualMachineActiveDirectoryConfigurationPtrInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput
	ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutputWithContext(context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput
}

type ontapStorageVirtualMachineActiveDirectoryConfigurationPtrType OntapStorageVirtualMachineActiveDirectoryConfigurationArgs

func OntapStorageVirtualMachineActiveDirectoryConfigurationPtr(v *OntapStorageVirtualMachineActiveDirectoryConfigurationArgs) OntapStorageVirtualMachineActiveDirectoryConfigurationPtrInput {
	return (*ontapStorageVirtualMachineActiveDirectoryConfigurationPtrType)(v)
}

func (*ontapStorageVirtualMachineActiveDirectoryConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OntapStorageVirtualMachineActiveDirectoryConfiguration)(nil)).Elem()
}

func (i *ontapStorageVirtualMachineActiveDirectoryConfigurationPtrType) ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput {
	return i.ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutputWithContext(context.Background())
}

func (i *ontapStorageVirtualMachineActiveDirectoryConfigurationPtrType) ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutputWithContext(ctx context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput)
}

type OntapStorageVirtualMachineActiveDirectoryConfigurationOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineActiveDirectoryConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineActiveDirectoryConfiguration)(nil)).Elem()
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationOutput) ToOntapStorageVirtualMachineActiveDirectoryConfigurationOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationOutput {
	return o
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationOutput) ToOntapStorageVirtualMachineActiveDirectoryConfigurationOutputWithContext(ctx context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationOutput {
	return o
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationOutput) ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput {
	return o.ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutputWithContext(context.Background())
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationOutput) ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutputWithContext(ctx context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OntapStorageVirtualMachineActiveDirectoryConfiguration) *OntapStorageVirtualMachineActiveDirectoryConfiguration {
		return &v
	}).(OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput)
}

// The NetBIOS name of the Active Directory computer object that will be created for your SVM. This is often the same as the SVM name but can be different. It is limited to 15 characters because of standard NetBIOS naming limits.
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationOutput) NetbiosName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineActiveDirectoryConfiguration) *string { return v.NetbiosName }).(pulumi.StringPtrOutput)
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationOutput) SelfManagedActiveDirectoryConfiguration() OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineActiveDirectoryConfiguration) *OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration {
		return v.SelfManagedActiveDirectoryConfiguration
	}).(OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput)
}

type OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OntapStorageVirtualMachineActiveDirectoryConfiguration)(nil)).Elem()
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput) ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput {
	return o
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput) ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutputWithContext(ctx context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput {
	return o
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput) Elem() OntapStorageVirtualMachineActiveDirectoryConfigurationOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachineActiveDirectoryConfiguration) OntapStorageVirtualMachineActiveDirectoryConfiguration {
		if v != nil {
			return *v
		}
		var ret OntapStorageVirtualMachineActiveDirectoryConfiguration
		return ret
	}).(OntapStorageVirtualMachineActiveDirectoryConfigurationOutput)
}

// The NetBIOS name of the Active Directory computer object that will be created for your SVM. This is often the same as the SVM name but can be different. It is limited to 15 characters because of standard NetBIOS naming limits.
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput) NetbiosName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachineActiveDirectoryConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.NetbiosName
	}).(pulumi.StringPtrOutput)
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput) SelfManagedActiveDirectoryConfiguration() OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachineActiveDirectoryConfiguration) *OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration {
		if v == nil {
			return nil
		}
		return v.SelfManagedActiveDirectoryConfiguration
	}).(OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput)
}

type OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration struct {
	// A list of up to three IP addresses of DNS servers or domain controllers in the self-managed AD directory.
	DnsIps []string `pulumi:"dnsIps"`
	// The fully qualified domain name of the self-managed AD directory. For example, `corp.example.com`.
	DomainName string `pulumi:"domainName"`
	// The name of the domain group whose members are granted administrative privileges for the SVM. The group that you specify must already exist in your domain. Defaults to `Domain Admins`.
	FileSystemAdministratorsGroup *string `pulumi:"fileSystemAdministratorsGroup"`
	// Deprecated: use 'organizational_unit_distinguished_name' instead
	OrganizationalUnitDistinguidshedName *string `pulumi:"organizationalUnitDistinguidshedName"`
	// The fully qualified distinguished name of the organizational unit within your self-managed AD directory that the Windows File Server instance will join. For example, `OU=FSx,DC=yourdomain,DC=corp,DC=com`. Only accepts OU as the direct parent of the SVM. If none is provided, the SVM is created in the default location of your self-managed AD directory. To learn more, see [RFC 2253](https://tools.ietf.org/html/rfc2253).
	OrganizationalUnitDistinguishedName *string `pulumi:"organizationalUnitDistinguishedName"`
	// The password for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
	Password string `pulumi:"password"`
	// The user name for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
	Username string `pulumi:"username"`
}

// OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationInput is an input type that accepts OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs and OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationInput` via:
//
//          OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs{...}
type OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput
	ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutputWithContext(context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput
}

type OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs struct {
	// A list of up to three IP addresses of DNS servers or domain controllers in the self-managed AD directory.
	DnsIps pulumi.StringArrayInput `pulumi:"dnsIps"`
	// The fully qualified domain name of the self-managed AD directory. For example, `corp.example.com`.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// The name of the domain group whose members are granted administrative privileges for the SVM. The group that you specify must already exist in your domain. Defaults to `Domain Admins`.
	FileSystemAdministratorsGroup pulumi.StringPtrInput `pulumi:"fileSystemAdministratorsGroup"`
	// Deprecated: use 'organizational_unit_distinguished_name' instead
	OrganizationalUnitDistinguidshedName pulumi.StringPtrInput `pulumi:"organizationalUnitDistinguidshedName"`
	// The fully qualified distinguished name of the organizational unit within your self-managed AD directory that the Windows File Server instance will join. For example, `OU=FSx,DC=yourdomain,DC=corp,DC=com`. Only accepts OU as the direct parent of the SVM. If none is provided, the SVM is created in the default location of your self-managed AD directory. To learn more, see [RFC 2253](https://tools.ietf.org/html/rfc2253).
	OrganizationalUnitDistinguishedName pulumi.StringPtrInput `pulumi:"organizationalUnitDistinguishedName"`
	// The password for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
	Password pulumi.StringInput `pulumi:"password"`
	// The user name for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
	Username pulumi.StringInput `pulumi:"username"`
}

func (OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration)(nil)).Elem()
}

func (i OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs) ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput {
	return i.ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs) ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutputWithContext(ctx context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput)
}

func (i OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs) ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput {
	return i.ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs) ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutputWithContext(ctx context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput).ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutputWithContext(ctx)
}

// OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrInput is an input type that accepts OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs, OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtr and OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrInput` via:
//
//          OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs{...}
//
//  or:
//
//          nil
type OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput
	ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutputWithContext(context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput
}

type ontapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrType OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs

func OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtr(v *OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs) OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrInput {
	return (*ontapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrType)(v)
}

func (*ontapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration)(nil)).Elem()
}

func (i *ontapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrType) ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput {
	return i.ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutputWithContext(context.Background())
}

func (i *ontapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrType) ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutputWithContext(ctx context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput)
}

type OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration)(nil)).Elem()
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput {
	return o
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutputWithContext(ctx context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput {
	return o
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput {
	return o.ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutputWithContext(context.Background())
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutputWithContext(ctx context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) *OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration {
		return &v
	}).(OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput)
}

// A list of up to three IP addresses of DNS servers or domain controllers in the self-managed AD directory.
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) DnsIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) []string {
		return v.DnsIps
	}).(pulumi.StringArrayOutput)
}

// The fully qualified domain name of the self-managed AD directory. For example, `corp.example.com`.
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) string {
		return v.DomainName
	}).(pulumi.StringOutput)
}

// The name of the domain group whose members are granted administrative privileges for the SVM. The group that you specify must already exist in your domain. Defaults to `Domain Admins`.
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) FileSystemAdministratorsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) *string {
		return v.FileSystemAdministratorsGroup
	}).(pulumi.StringPtrOutput)
}

// Deprecated: use 'organizational_unit_distinguished_name' instead
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) OrganizationalUnitDistinguidshedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) *string {
		return v.OrganizationalUnitDistinguidshedName
	}).(pulumi.StringPtrOutput)
}

// The fully qualified distinguished name of the organizational unit within your self-managed AD directory that the Windows File Server instance will join. For example, `OU=FSx,DC=yourdomain,DC=corp,DC=com`. Only accepts OU as the direct parent of the SVM. If none is provided, the SVM is created in the default location of your self-managed AD directory. To learn more, see [RFC 2253](https://tools.ietf.org/html/rfc2253).
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) OrganizationalUnitDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) *string {
		return v.OrganizationalUnitDistinguishedName
	}).(pulumi.StringPtrOutput)
}

// The password for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) string {
		return v.Password
	}).(pulumi.StringOutput)
}

// The user name for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) string {
		return v.Username
	}).(pulumi.StringOutput)
}

type OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration)(nil)).Elem()
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput) ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput {
	return o
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput) ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutputWithContext(ctx context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput {
	return o
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput) Elem() OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration {
		if v != nil {
			return *v
		}
		var ret OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration
		return ret
	}).(OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput)
}

// A list of up to three IP addresses of DNS servers or domain controllers in the self-managed AD directory.
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput) DnsIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.DnsIps
	}).(pulumi.StringArrayOutput)
}

// The fully qualified domain name of the self-managed AD directory. For example, `corp.example.com`.
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.DomainName
	}).(pulumi.StringPtrOutput)
}

// The name of the domain group whose members are granted administrative privileges for the SVM. The group that you specify must already exist in your domain. Defaults to `Domain Admins`.
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput) FileSystemAdministratorsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.FileSystemAdministratorsGroup
	}).(pulumi.StringPtrOutput)
}

// Deprecated: use 'organizational_unit_distinguished_name' instead
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput) OrganizationalUnitDistinguidshedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.OrganizationalUnitDistinguidshedName
	}).(pulumi.StringPtrOutput)
}

// The fully qualified distinguished name of the organizational unit within your self-managed AD directory that the Windows File Server instance will join. For example, `OU=FSx,DC=yourdomain,DC=corp,DC=com`. Only accepts OU as the direct parent of the SVM. If none is provided, the SVM is created in the default location of your self-managed AD directory. To learn more, see [RFC 2253](https://tools.ietf.org/html/rfc2253).
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput) OrganizationalUnitDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.OrganizationalUnitDistinguishedName
	}).(pulumi.StringPtrOutput)
}

// The password for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The user name for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type OntapStorageVirtualMachineEndpoint struct {
	// An endpoint for accessing data on your storage virtual machine via iSCSI protocol. See Endpoint.
	Iscses []OntapStorageVirtualMachineEndpointIscse `pulumi:"iscses"`
	// An endpoint for managing your file system using the NetApp ONTAP CLI and NetApp ONTAP API. See Endpoint.
	Managements []OntapStorageVirtualMachineEndpointManagement `pulumi:"managements"`
	// An endpoint for accessing data on your storage virtual machine via NFS protocol. See Endpoint.
	Nfs []OntapStorageVirtualMachineEndpointNf `pulumi:"nfs"`
	// An endpoint for accessing data on your storage virtual machine via SMB protocol. This is only set if an activeDirectoryConfiguration has been set. See Endpoint.
	Smbs []OntapStorageVirtualMachineEndpointSmb `pulumi:"smbs"`
}

// OntapStorageVirtualMachineEndpointInput is an input type that accepts OntapStorageVirtualMachineEndpointArgs and OntapStorageVirtualMachineEndpointOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineEndpointInput` via:
//
//          OntapStorageVirtualMachineEndpointArgs{...}
type OntapStorageVirtualMachineEndpointInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineEndpointOutput() OntapStorageVirtualMachineEndpointOutput
	ToOntapStorageVirtualMachineEndpointOutputWithContext(context.Context) OntapStorageVirtualMachineEndpointOutput
}

type OntapStorageVirtualMachineEndpointArgs struct {
	// An endpoint for accessing data on your storage virtual machine via iSCSI protocol. See Endpoint.
	Iscses OntapStorageVirtualMachineEndpointIscseArrayInput `pulumi:"iscses"`
	// An endpoint for managing your file system using the NetApp ONTAP CLI and NetApp ONTAP API. See Endpoint.
	Managements OntapStorageVirtualMachineEndpointManagementArrayInput `pulumi:"managements"`
	// An endpoint for accessing data on your storage virtual machine via NFS protocol. See Endpoint.
	Nfs OntapStorageVirtualMachineEndpointNfArrayInput `pulumi:"nfs"`
	// An endpoint for accessing data on your storage virtual machine via SMB protocol. This is only set if an activeDirectoryConfiguration has been set. See Endpoint.
	Smbs OntapStorageVirtualMachineEndpointSmbArrayInput `pulumi:"smbs"`
}

func (OntapStorageVirtualMachineEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineEndpoint)(nil)).Elem()
}

func (i OntapStorageVirtualMachineEndpointArgs) ToOntapStorageVirtualMachineEndpointOutput() OntapStorageVirtualMachineEndpointOutput {
	return i.ToOntapStorageVirtualMachineEndpointOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineEndpointArgs) ToOntapStorageVirtualMachineEndpointOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineEndpointOutput)
}

// OntapStorageVirtualMachineEndpointArrayInput is an input type that accepts OntapStorageVirtualMachineEndpointArray and OntapStorageVirtualMachineEndpointArrayOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineEndpointArrayInput` via:
//
//          OntapStorageVirtualMachineEndpointArray{ OntapStorageVirtualMachineEndpointArgs{...} }
type OntapStorageVirtualMachineEndpointArrayInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineEndpointArrayOutput() OntapStorageVirtualMachineEndpointArrayOutput
	ToOntapStorageVirtualMachineEndpointArrayOutputWithContext(context.Context) OntapStorageVirtualMachineEndpointArrayOutput
}

type OntapStorageVirtualMachineEndpointArray []OntapStorageVirtualMachineEndpointInput

func (OntapStorageVirtualMachineEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapStorageVirtualMachineEndpoint)(nil)).Elem()
}

func (i OntapStorageVirtualMachineEndpointArray) ToOntapStorageVirtualMachineEndpointArrayOutput() OntapStorageVirtualMachineEndpointArrayOutput {
	return i.ToOntapStorageVirtualMachineEndpointArrayOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineEndpointArray) ToOntapStorageVirtualMachineEndpointArrayOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineEndpointArrayOutput)
}

type OntapStorageVirtualMachineEndpointOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineEndpoint)(nil)).Elem()
}

func (o OntapStorageVirtualMachineEndpointOutput) ToOntapStorageVirtualMachineEndpointOutput() OntapStorageVirtualMachineEndpointOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointOutput) ToOntapStorageVirtualMachineEndpointOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointOutput {
	return o
}

// An endpoint for accessing data on your storage virtual machine via iSCSI protocol. See Endpoint.
func (o OntapStorageVirtualMachineEndpointOutput) Iscses() OntapStorageVirtualMachineEndpointIscseArrayOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineEndpoint) []OntapStorageVirtualMachineEndpointIscse { return v.Iscses }).(OntapStorageVirtualMachineEndpointIscseArrayOutput)
}

// An endpoint for managing your file system using the NetApp ONTAP CLI and NetApp ONTAP API. See Endpoint.
func (o OntapStorageVirtualMachineEndpointOutput) Managements() OntapStorageVirtualMachineEndpointManagementArrayOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineEndpoint) []OntapStorageVirtualMachineEndpointManagement {
		return v.Managements
	}).(OntapStorageVirtualMachineEndpointManagementArrayOutput)
}

// An endpoint for accessing data on your storage virtual machine via NFS protocol. See Endpoint.
func (o OntapStorageVirtualMachineEndpointOutput) Nfs() OntapStorageVirtualMachineEndpointNfArrayOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineEndpoint) []OntapStorageVirtualMachineEndpointNf { return v.Nfs }).(OntapStorageVirtualMachineEndpointNfArrayOutput)
}

// An endpoint for accessing data on your storage virtual machine via SMB protocol. This is only set if an activeDirectoryConfiguration has been set. See Endpoint.
func (o OntapStorageVirtualMachineEndpointOutput) Smbs() OntapStorageVirtualMachineEndpointSmbArrayOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineEndpoint) []OntapStorageVirtualMachineEndpointSmb { return v.Smbs }).(OntapStorageVirtualMachineEndpointSmbArrayOutput)
}

type OntapStorageVirtualMachineEndpointArrayOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapStorageVirtualMachineEndpoint)(nil)).Elem()
}

func (o OntapStorageVirtualMachineEndpointArrayOutput) ToOntapStorageVirtualMachineEndpointArrayOutput() OntapStorageVirtualMachineEndpointArrayOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointArrayOutput) ToOntapStorageVirtualMachineEndpointArrayOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointArrayOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointArrayOutput) Index(i pulumi.IntInput) OntapStorageVirtualMachineEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OntapStorageVirtualMachineEndpoint {
		return vs[0].([]OntapStorageVirtualMachineEndpoint)[vs[1].(int)]
	}).(OntapStorageVirtualMachineEndpointOutput)
}

type OntapStorageVirtualMachineEndpointIscse struct {
	// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
	DnsName *string `pulumi:"dnsName"`
	// IP addresses of the storage virtual machine endpoint.
	IpAddresses []string `pulumi:"ipAddresses"`
}

// OntapStorageVirtualMachineEndpointIscseInput is an input type that accepts OntapStorageVirtualMachineEndpointIscseArgs and OntapStorageVirtualMachineEndpointIscseOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineEndpointIscseInput` via:
//
//          OntapStorageVirtualMachineEndpointIscseArgs{...}
type OntapStorageVirtualMachineEndpointIscseInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineEndpointIscseOutput() OntapStorageVirtualMachineEndpointIscseOutput
	ToOntapStorageVirtualMachineEndpointIscseOutputWithContext(context.Context) OntapStorageVirtualMachineEndpointIscseOutput
}

type OntapStorageVirtualMachineEndpointIscseArgs struct {
	// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
	DnsName pulumi.StringPtrInput `pulumi:"dnsName"`
	// IP addresses of the storage virtual machine endpoint.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (OntapStorageVirtualMachineEndpointIscseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineEndpointIscse)(nil)).Elem()
}

func (i OntapStorageVirtualMachineEndpointIscseArgs) ToOntapStorageVirtualMachineEndpointIscseOutput() OntapStorageVirtualMachineEndpointIscseOutput {
	return i.ToOntapStorageVirtualMachineEndpointIscseOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineEndpointIscseArgs) ToOntapStorageVirtualMachineEndpointIscseOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointIscseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineEndpointIscseOutput)
}

// OntapStorageVirtualMachineEndpointIscseArrayInput is an input type that accepts OntapStorageVirtualMachineEndpointIscseArray and OntapStorageVirtualMachineEndpointIscseArrayOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineEndpointIscseArrayInput` via:
//
//          OntapStorageVirtualMachineEndpointIscseArray{ OntapStorageVirtualMachineEndpointIscseArgs{...} }
type OntapStorageVirtualMachineEndpointIscseArrayInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineEndpointIscseArrayOutput() OntapStorageVirtualMachineEndpointIscseArrayOutput
	ToOntapStorageVirtualMachineEndpointIscseArrayOutputWithContext(context.Context) OntapStorageVirtualMachineEndpointIscseArrayOutput
}

type OntapStorageVirtualMachineEndpointIscseArray []OntapStorageVirtualMachineEndpointIscseInput

func (OntapStorageVirtualMachineEndpointIscseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapStorageVirtualMachineEndpointIscse)(nil)).Elem()
}

func (i OntapStorageVirtualMachineEndpointIscseArray) ToOntapStorageVirtualMachineEndpointIscseArrayOutput() OntapStorageVirtualMachineEndpointIscseArrayOutput {
	return i.ToOntapStorageVirtualMachineEndpointIscseArrayOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineEndpointIscseArray) ToOntapStorageVirtualMachineEndpointIscseArrayOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointIscseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineEndpointIscseArrayOutput)
}

type OntapStorageVirtualMachineEndpointIscseOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineEndpointIscseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineEndpointIscse)(nil)).Elem()
}

func (o OntapStorageVirtualMachineEndpointIscseOutput) ToOntapStorageVirtualMachineEndpointIscseOutput() OntapStorageVirtualMachineEndpointIscseOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointIscseOutput) ToOntapStorageVirtualMachineEndpointIscseOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointIscseOutput {
	return o
}

// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
func (o OntapStorageVirtualMachineEndpointIscseOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineEndpointIscse) *string { return v.DnsName }).(pulumi.StringPtrOutput)
}

// IP addresses of the storage virtual machine endpoint.
func (o OntapStorageVirtualMachineEndpointIscseOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineEndpointIscse) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type OntapStorageVirtualMachineEndpointIscseArrayOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineEndpointIscseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapStorageVirtualMachineEndpointIscse)(nil)).Elem()
}

func (o OntapStorageVirtualMachineEndpointIscseArrayOutput) ToOntapStorageVirtualMachineEndpointIscseArrayOutput() OntapStorageVirtualMachineEndpointIscseArrayOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointIscseArrayOutput) ToOntapStorageVirtualMachineEndpointIscseArrayOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointIscseArrayOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointIscseArrayOutput) Index(i pulumi.IntInput) OntapStorageVirtualMachineEndpointIscseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OntapStorageVirtualMachineEndpointIscse {
		return vs[0].([]OntapStorageVirtualMachineEndpointIscse)[vs[1].(int)]
	}).(OntapStorageVirtualMachineEndpointIscseOutput)
}

type OntapStorageVirtualMachineEndpointManagement struct {
	// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
	DnsName *string `pulumi:"dnsName"`
	// IP addresses of the storage virtual machine endpoint.
	IpAddresses []string `pulumi:"ipAddresses"`
}

// OntapStorageVirtualMachineEndpointManagementInput is an input type that accepts OntapStorageVirtualMachineEndpointManagementArgs and OntapStorageVirtualMachineEndpointManagementOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineEndpointManagementInput` via:
//
//          OntapStorageVirtualMachineEndpointManagementArgs{...}
type OntapStorageVirtualMachineEndpointManagementInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineEndpointManagementOutput() OntapStorageVirtualMachineEndpointManagementOutput
	ToOntapStorageVirtualMachineEndpointManagementOutputWithContext(context.Context) OntapStorageVirtualMachineEndpointManagementOutput
}

type OntapStorageVirtualMachineEndpointManagementArgs struct {
	// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
	DnsName pulumi.StringPtrInput `pulumi:"dnsName"`
	// IP addresses of the storage virtual machine endpoint.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (OntapStorageVirtualMachineEndpointManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineEndpointManagement)(nil)).Elem()
}

func (i OntapStorageVirtualMachineEndpointManagementArgs) ToOntapStorageVirtualMachineEndpointManagementOutput() OntapStorageVirtualMachineEndpointManagementOutput {
	return i.ToOntapStorageVirtualMachineEndpointManagementOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineEndpointManagementArgs) ToOntapStorageVirtualMachineEndpointManagementOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineEndpointManagementOutput)
}

// OntapStorageVirtualMachineEndpointManagementArrayInput is an input type that accepts OntapStorageVirtualMachineEndpointManagementArray and OntapStorageVirtualMachineEndpointManagementArrayOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineEndpointManagementArrayInput` via:
//
//          OntapStorageVirtualMachineEndpointManagementArray{ OntapStorageVirtualMachineEndpointManagementArgs{...} }
type OntapStorageVirtualMachineEndpointManagementArrayInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineEndpointManagementArrayOutput() OntapStorageVirtualMachineEndpointManagementArrayOutput
	ToOntapStorageVirtualMachineEndpointManagementArrayOutputWithContext(context.Context) OntapStorageVirtualMachineEndpointManagementArrayOutput
}

type OntapStorageVirtualMachineEndpointManagementArray []OntapStorageVirtualMachineEndpointManagementInput

func (OntapStorageVirtualMachineEndpointManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapStorageVirtualMachineEndpointManagement)(nil)).Elem()
}

func (i OntapStorageVirtualMachineEndpointManagementArray) ToOntapStorageVirtualMachineEndpointManagementArrayOutput() OntapStorageVirtualMachineEndpointManagementArrayOutput {
	return i.ToOntapStorageVirtualMachineEndpointManagementArrayOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineEndpointManagementArray) ToOntapStorageVirtualMachineEndpointManagementArrayOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineEndpointManagementArrayOutput)
}

type OntapStorageVirtualMachineEndpointManagementOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineEndpointManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineEndpointManagement)(nil)).Elem()
}

func (o OntapStorageVirtualMachineEndpointManagementOutput) ToOntapStorageVirtualMachineEndpointManagementOutput() OntapStorageVirtualMachineEndpointManagementOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointManagementOutput) ToOntapStorageVirtualMachineEndpointManagementOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointManagementOutput {
	return o
}

// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
func (o OntapStorageVirtualMachineEndpointManagementOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineEndpointManagement) *string { return v.DnsName }).(pulumi.StringPtrOutput)
}

// IP addresses of the storage virtual machine endpoint.
func (o OntapStorageVirtualMachineEndpointManagementOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineEndpointManagement) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type OntapStorageVirtualMachineEndpointManagementArrayOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineEndpointManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapStorageVirtualMachineEndpointManagement)(nil)).Elem()
}

func (o OntapStorageVirtualMachineEndpointManagementArrayOutput) ToOntapStorageVirtualMachineEndpointManagementArrayOutput() OntapStorageVirtualMachineEndpointManagementArrayOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointManagementArrayOutput) ToOntapStorageVirtualMachineEndpointManagementArrayOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointManagementArrayOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointManagementArrayOutput) Index(i pulumi.IntInput) OntapStorageVirtualMachineEndpointManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OntapStorageVirtualMachineEndpointManagement {
		return vs[0].([]OntapStorageVirtualMachineEndpointManagement)[vs[1].(int)]
	}).(OntapStorageVirtualMachineEndpointManagementOutput)
}

type OntapStorageVirtualMachineEndpointNf struct {
	// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
	DnsName *string `pulumi:"dnsName"`
	// IP addresses of the storage virtual machine endpoint.
	IpAddresses []string `pulumi:"ipAddresses"`
}

// OntapStorageVirtualMachineEndpointNfInput is an input type that accepts OntapStorageVirtualMachineEndpointNfArgs and OntapStorageVirtualMachineEndpointNfOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineEndpointNfInput` via:
//
//          OntapStorageVirtualMachineEndpointNfArgs{...}
type OntapStorageVirtualMachineEndpointNfInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineEndpointNfOutput() OntapStorageVirtualMachineEndpointNfOutput
	ToOntapStorageVirtualMachineEndpointNfOutputWithContext(context.Context) OntapStorageVirtualMachineEndpointNfOutput
}

type OntapStorageVirtualMachineEndpointNfArgs struct {
	// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
	DnsName pulumi.StringPtrInput `pulumi:"dnsName"`
	// IP addresses of the storage virtual machine endpoint.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (OntapStorageVirtualMachineEndpointNfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineEndpointNf)(nil)).Elem()
}

func (i OntapStorageVirtualMachineEndpointNfArgs) ToOntapStorageVirtualMachineEndpointNfOutput() OntapStorageVirtualMachineEndpointNfOutput {
	return i.ToOntapStorageVirtualMachineEndpointNfOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineEndpointNfArgs) ToOntapStorageVirtualMachineEndpointNfOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointNfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineEndpointNfOutput)
}

// OntapStorageVirtualMachineEndpointNfArrayInput is an input type that accepts OntapStorageVirtualMachineEndpointNfArray and OntapStorageVirtualMachineEndpointNfArrayOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineEndpointNfArrayInput` via:
//
//          OntapStorageVirtualMachineEndpointNfArray{ OntapStorageVirtualMachineEndpointNfArgs{...} }
type OntapStorageVirtualMachineEndpointNfArrayInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineEndpointNfArrayOutput() OntapStorageVirtualMachineEndpointNfArrayOutput
	ToOntapStorageVirtualMachineEndpointNfArrayOutputWithContext(context.Context) OntapStorageVirtualMachineEndpointNfArrayOutput
}

type OntapStorageVirtualMachineEndpointNfArray []OntapStorageVirtualMachineEndpointNfInput

func (OntapStorageVirtualMachineEndpointNfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapStorageVirtualMachineEndpointNf)(nil)).Elem()
}

func (i OntapStorageVirtualMachineEndpointNfArray) ToOntapStorageVirtualMachineEndpointNfArrayOutput() OntapStorageVirtualMachineEndpointNfArrayOutput {
	return i.ToOntapStorageVirtualMachineEndpointNfArrayOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineEndpointNfArray) ToOntapStorageVirtualMachineEndpointNfArrayOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointNfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineEndpointNfArrayOutput)
}

type OntapStorageVirtualMachineEndpointNfOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineEndpointNfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineEndpointNf)(nil)).Elem()
}

func (o OntapStorageVirtualMachineEndpointNfOutput) ToOntapStorageVirtualMachineEndpointNfOutput() OntapStorageVirtualMachineEndpointNfOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointNfOutput) ToOntapStorageVirtualMachineEndpointNfOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointNfOutput {
	return o
}

// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
func (o OntapStorageVirtualMachineEndpointNfOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineEndpointNf) *string { return v.DnsName }).(pulumi.StringPtrOutput)
}

// IP addresses of the storage virtual machine endpoint.
func (o OntapStorageVirtualMachineEndpointNfOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineEndpointNf) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type OntapStorageVirtualMachineEndpointNfArrayOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineEndpointNfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapStorageVirtualMachineEndpointNf)(nil)).Elem()
}

func (o OntapStorageVirtualMachineEndpointNfArrayOutput) ToOntapStorageVirtualMachineEndpointNfArrayOutput() OntapStorageVirtualMachineEndpointNfArrayOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointNfArrayOutput) ToOntapStorageVirtualMachineEndpointNfArrayOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointNfArrayOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointNfArrayOutput) Index(i pulumi.IntInput) OntapStorageVirtualMachineEndpointNfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OntapStorageVirtualMachineEndpointNf {
		return vs[0].([]OntapStorageVirtualMachineEndpointNf)[vs[1].(int)]
	}).(OntapStorageVirtualMachineEndpointNfOutput)
}

type OntapStorageVirtualMachineEndpointSmb struct {
	// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
	DnsName *string `pulumi:"dnsName"`
	// IP addresses of the storage virtual machine endpoint.
	IpAddresses []string `pulumi:"ipAddresses"`
}

// OntapStorageVirtualMachineEndpointSmbInput is an input type that accepts OntapStorageVirtualMachineEndpointSmbArgs and OntapStorageVirtualMachineEndpointSmbOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineEndpointSmbInput` via:
//
//          OntapStorageVirtualMachineEndpointSmbArgs{...}
type OntapStorageVirtualMachineEndpointSmbInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineEndpointSmbOutput() OntapStorageVirtualMachineEndpointSmbOutput
	ToOntapStorageVirtualMachineEndpointSmbOutputWithContext(context.Context) OntapStorageVirtualMachineEndpointSmbOutput
}

type OntapStorageVirtualMachineEndpointSmbArgs struct {
	// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
	DnsName pulumi.StringPtrInput `pulumi:"dnsName"`
	// IP addresses of the storage virtual machine endpoint.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (OntapStorageVirtualMachineEndpointSmbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineEndpointSmb)(nil)).Elem()
}

func (i OntapStorageVirtualMachineEndpointSmbArgs) ToOntapStorageVirtualMachineEndpointSmbOutput() OntapStorageVirtualMachineEndpointSmbOutput {
	return i.ToOntapStorageVirtualMachineEndpointSmbOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineEndpointSmbArgs) ToOntapStorageVirtualMachineEndpointSmbOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointSmbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineEndpointSmbOutput)
}

// OntapStorageVirtualMachineEndpointSmbArrayInput is an input type that accepts OntapStorageVirtualMachineEndpointSmbArray and OntapStorageVirtualMachineEndpointSmbArrayOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineEndpointSmbArrayInput` via:
//
//          OntapStorageVirtualMachineEndpointSmbArray{ OntapStorageVirtualMachineEndpointSmbArgs{...} }
type OntapStorageVirtualMachineEndpointSmbArrayInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineEndpointSmbArrayOutput() OntapStorageVirtualMachineEndpointSmbArrayOutput
	ToOntapStorageVirtualMachineEndpointSmbArrayOutputWithContext(context.Context) OntapStorageVirtualMachineEndpointSmbArrayOutput
}

type OntapStorageVirtualMachineEndpointSmbArray []OntapStorageVirtualMachineEndpointSmbInput

func (OntapStorageVirtualMachineEndpointSmbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapStorageVirtualMachineEndpointSmb)(nil)).Elem()
}

func (i OntapStorageVirtualMachineEndpointSmbArray) ToOntapStorageVirtualMachineEndpointSmbArrayOutput() OntapStorageVirtualMachineEndpointSmbArrayOutput {
	return i.ToOntapStorageVirtualMachineEndpointSmbArrayOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineEndpointSmbArray) ToOntapStorageVirtualMachineEndpointSmbArrayOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointSmbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineEndpointSmbArrayOutput)
}

type OntapStorageVirtualMachineEndpointSmbOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineEndpointSmbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineEndpointSmb)(nil)).Elem()
}

func (o OntapStorageVirtualMachineEndpointSmbOutput) ToOntapStorageVirtualMachineEndpointSmbOutput() OntapStorageVirtualMachineEndpointSmbOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointSmbOutput) ToOntapStorageVirtualMachineEndpointSmbOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointSmbOutput {
	return o
}

// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
func (o OntapStorageVirtualMachineEndpointSmbOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineEndpointSmb) *string { return v.DnsName }).(pulumi.StringPtrOutput)
}

// IP addresses of the storage virtual machine endpoint.
func (o OntapStorageVirtualMachineEndpointSmbOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineEndpointSmb) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type OntapStorageVirtualMachineEndpointSmbArrayOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineEndpointSmbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapStorageVirtualMachineEndpointSmb)(nil)).Elem()
}

func (o OntapStorageVirtualMachineEndpointSmbArrayOutput) ToOntapStorageVirtualMachineEndpointSmbArrayOutput() OntapStorageVirtualMachineEndpointSmbArrayOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointSmbArrayOutput) ToOntapStorageVirtualMachineEndpointSmbArrayOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointSmbArrayOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointSmbArrayOutput) Index(i pulumi.IntInput) OntapStorageVirtualMachineEndpointSmbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OntapStorageVirtualMachineEndpointSmb {
		return vs[0].([]OntapStorageVirtualMachineEndpointSmb)[vs[1].(int)]
	}).(OntapStorageVirtualMachineEndpointSmbOutput)
}

type OntapVolumeTieringPolicy struct {
	CoolingPeriod *int `pulumi:"coolingPeriod"`
	// Specifies the tiering policy for the ONTAP volume for moving data to the capacity pool storage. Valid values are `SNAPSHOT_ONLY`, `AUTO`, `ALL`, `NONE`. Default value is `SNAPSHOT_ONLY`.
	Name *string `pulumi:"name"`
}

// OntapVolumeTieringPolicyInput is an input type that accepts OntapVolumeTieringPolicyArgs and OntapVolumeTieringPolicyOutput values.
// You can construct a concrete instance of `OntapVolumeTieringPolicyInput` via:
//
//          OntapVolumeTieringPolicyArgs{...}
type OntapVolumeTieringPolicyInput interface {
	pulumi.Input

	ToOntapVolumeTieringPolicyOutput() OntapVolumeTieringPolicyOutput
	ToOntapVolumeTieringPolicyOutputWithContext(context.Context) OntapVolumeTieringPolicyOutput
}

type OntapVolumeTieringPolicyArgs struct {
	CoolingPeriod pulumi.IntPtrInput `pulumi:"coolingPeriod"`
	// Specifies the tiering policy for the ONTAP volume for moving data to the capacity pool storage. Valid values are `SNAPSHOT_ONLY`, `AUTO`, `ALL`, `NONE`. Default value is `SNAPSHOT_ONLY`.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (OntapVolumeTieringPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapVolumeTieringPolicy)(nil)).Elem()
}

func (i OntapVolumeTieringPolicyArgs) ToOntapVolumeTieringPolicyOutput() OntapVolumeTieringPolicyOutput {
	return i.ToOntapVolumeTieringPolicyOutputWithContext(context.Background())
}

func (i OntapVolumeTieringPolicyArgs) ToOntapVolumeTieringPolicyOutputWithContext(ctx context.Context) OntapVolumeTieringPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapVolumeTieringPolicyOutput)
}

func (i OntapVolumeTieringPolicyArgs) ToOntapVolumeTieringPolicyPtrOutput() OntapVolumeTieringPolicyPtrOutput {
	return i.ToOntapVolumeTieringPolicyPtrOutputWithContext(context.Background())
}

func (i OntapVolumeTieringPolicyArgs) ToOntapVolumeTieringPolicyPtrOutputWithContext(ctx context.Context) OntapVolumeTieringPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapVolumeTieringPolicyOutput).ToOntapVolumeTieringPolicyPtrOutputWithContext(ctx)
}

// OntapVolumeTieringPolicyPtrInput is an input type that accepts OntapVolumeTieringPolicyArgs, OntapVolumeTieringPolicyPtr and OntapVolumeTieringPolicyPtrOutput values.
// You can construct a concrete instance of `OntapVolumeTieringPolicyPtrInput` via:
//
//          OntapVolumeTieringPolicyArgs{...}
//
//  or:
//
//          nil
type OntapVolumeTieringPolicyPtrInput interface {
	pulumi.Input

	ToOntapVolumeTieringPolicyPtrOutput() OntapVolumeTieringPolicyPtrOutput
	ToOntapVolumeTieringPolicyPtrOutputWithContext(context.Context) OntapVolumeTieringPolicyPtrOutput
}

type ontapVolumeTieringPolicyPtrType OntapVolumeTieringPolicyArgs

func OntapVolumeTieringPolicyPtr(v *OntapVolumeTieringPolicyArgs) OntapVolumeTieringPolicyPtrInput {
	return (*ontapVolumeTieringPolicyPtrType)(v)
}

func (*ontapVolumeTieringPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OntapVolumeTieringPolicy)(nil)).Elem()
}

func (i *ontapVolumeTieringPolicyPtrType) ToOntapVolumeTieringPolicyPtrOutput() OntapVolumeTieringPolicyPtrOutput {
	return i.ToOntapVolumeTieringPolicyPtrOutputWithContext(context.Background())
}

func (i *ontapVolumeTieringPolicyPtrType) ToOntapVolumeTieringPolicyPtrOutputWithContext(ctx context.Context) OntapVolumeTieringPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapVolumeTieringPolicyPtrOutput)
}

type OntapVolumeTieringPolicyOutput struct{ *pulumi.OutputState }

func (OntapVolumeTieringPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapVolumeTieringPolicy)(nil)).Elem()
}

func (o OntapVolumeTieringPolicyOutput) ToOntapVolumeTieringPolicyOutput() OntapVolumeTieringPolicyOutput {
	return o
}

func (o OntapVolumeTieringPolicyOutput) ToOntapVolumeTieringPolicyOutputWithContext(ctx context.Context) OntapVolumeTieringPolicyOutput {
	return o
}

func (o OntapVolumeTieringPolicyOutput) ToOntapVolumeTieringPolicyPtrOutput() OntapVolumeTieringPolicyPtrOutput {
	return o.ToOntapVolumeTieringPolicyPtrOutputWithContext(context.Background())
}

func (o OntapVolumeTieringPolicyOutput) ToOntapVolumeTieringPolicyPtrOutputWithContext(ctx context.Context) OntapVolumeTieringPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OntapVolumeTieringPolicy) *OntapVolumeTieringPolicy {
		return &v
	}).(OntapVolumeTieringPolicyPtrOutput)
}

func (o OntapVolumeTieringPolicyOutput) CoolingPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OntapVolumeTieringPolicy) *int { return v.CoolingPeriod }).(pulumi.IntPtrOutput)
}

// Specifies the tiering policy for the ONTAP volume for moving data to the capacity pool storage. Valid values are `SNAPSHOT_ONLY`, `AUTO`, `ALL`, `NONE`. Default value is `SNAPSHOT_ONLY`.
func (o OntapVolumeTieringPolicyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OntapVolumeTieringPolicy) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type OntapVolumeTieringPolicyPtrOutput struct{ *pulumi.OutputState }

func (OntapVolumeTieringPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OntapVolumeTieringPolicy)(nil)).Elem()
}

func (o OntapVolumeTieringPolicyPtrOutput) ToOntapVolumeTieringPolicyPtrOutput() OntapVolumeTieringPolicyPtrOutput {
	return o
}

func (o OntapVolumeTieringPolicyPtrOutput) ToOntapVolumeTieringPolicyPtrOutputWithContext(ctx context.Context) OntapVolumeTieringPolicyPtrOutput {
	return o
}

func (o OntapVolumeTieringPolicyPtrOutput) Elem() OntapVolumeTieringPolicyOutput {
	return o.ApplyT(func(v *OntapVolumeTieringPolicy) OntapVolumeTieringPolicy {
		if v != nil {
			return *v
		}
		var ret OntapVolumeTieringPolicy
		return ret
	}).(OntapVolumeTieringPolicyOutput)
}

func (o OntapVolumeTieringPolicyPtrOutput) CoolingPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OntapVolumeTieringPolicy) *int {
		if v == nil {
			return nil
		}
		return v.CoolingPeriod
	}).(pulumi.IntPtrOutput)
}

// Specifies the tiering policy for the ONTAP volume for moving data to the capacity pool storage. Valid values are `SNAPSHOT_ONLY`, `AUTO`, `ALL`, `NONE`. Default value is `SNAPSHOT_ONLY`.
func (o OntapVolumeTieringPolicyPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OntapVolumeTieringPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type WindowsFileSystemAuditLogConfiguration struct {
	// The Amazon Resource Name (ARN) for the destination of the audit logs. The destination can be any Amazon CloudWatch Logs log group ARN or Amazon Kinesis Data Firehose delivery stream ARN. Can be specified when `fileAccessAuditLogLevel` and `fileShareAccessAuditLogLevel` are not set to `DISABLED`. The name of the Amazon CloudWatch Logs log group must begin with the `/aws/fsx` prefix. The name of the Amazon Kinesis Data Firehouse delivery stream must begin with the `aws-fsx` prefix. If you do not provide a destination in `auditLogDestionation`, Amazon FSx will create and use a log stream in the CloudWatch Logs /aws/fsx/windows log group.
	AuditLogDestination *string `pulumi:"auditLogDestination"`
	// Sets which attempt type is logged by Amazon FSx for file and folder accesses. Valid values are `SUCCESS_ONLY`, `FAILURE_ONLY`, `SUCCESS_AND_FAILURE`, and `DISABLED`. Default value is `DISABLED`.
	FileAccessAuditLogLevel *string `pulumi:"fileAccessAuditLogLevel"`
	// Sets which attempt type is logged by Amazon FSx for file share accesses. Valid values are `SUCCESS_ONLY`, `FAILURE_ONLY`, `SUCCESS_AND_FAILURE`, and `DISABLED`. Default value is `DISABLED`.
	FileShareAccessAuditLogLevel *string `pulumi:"fileShareAccessAuditLogLevel"`
}

// WindowsFileSystemAuditLogConfigurationInput is an input type that accepts WindowsFileSystemAuditLogConfigurationArgs and WindowsFileSystemAuditLogConfigurationOutput values.
// You can construct a concrete instance of `WindowsFileSystemAuditLogConfigurationInput` via:
//
//          WindowsFileSystemAuditLogConfigurationArgs{...}
type WindowsFileSystemAuditLogConfigurationInput interface {
	pulumi.Input

	ToWindowsFileSystemAuditLogConfigurationOutput() WindowsFileSystemAuditLogConfigurationOutput
	ToWindowsFileSystemAuditLogConfigurationOutputWithContext(context.Context) WindowsFileSystemAuditLogConfigurationOutput
}

type WindowsFileSystemAuditLogConfigurationArgs struct {
	// The Amazon Resource Name (ARN) for the destination of the audit logs. The destination can be any Amazon CloudWatch Logs log group ARN or Amazon Kinesis Data Firehose delivery stream ARN. Can be specified when `fileAccessAuditLogLevel` and `fileShareAccessAuditLogLevel` are not set to `DISABLED`. The name of the Amazon CloudWatch Logs log group must begin with the `/aws/fsx` prefix. The name of the Amazon Kinesis Data Firehouse delivery stream must begin with the `aws-fsx` prefix. If you do not provide a destination in `auditLogDestionation`, Amazon FSx will create and use a log stream in the CloudWatch Logs /aws/fsx/windows log group.
	AuditLogDestination pulumi.StringPtrInput `pulumi:"auditLogDestination"`
	// Sets which attempt type is logged by Amazon FSx for file and folder accesses. Valid values are `SUCCESS_ONLY`, `FAILURE_ONLY`, `SUCCESS_AND_FAILURE`, and `DISABLED`. Default value is `DISABLED`.
	FileAccessAuditLogLevel pulumi.StringPtrInput `pulumi:"fileAccessAuditLogLevel"`
	// Sets which attempt type is logged by Amazon FSx for file share accesses. Valid values are `SUCCESS_ONLY`, `FAILURE_ONLY`, `SUCCESS_AND_FAILURE`, and `DISABLED`. Default value is `DISABLED`.
	FileShareAccessAuditLogLevel pulumi.StringPtrInput `pulumi:"fileShareAccessAuditLogLevel"`
}

func (WindowsFileSystemAuditLogConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsFileSystemAuditLogConfiguration)(nil)).Elem()
}

func (i WindowsFileSystemAuditLogConfigurationArgs) ToWindowsFileSystemAuditLogConfigurationOutput() WindowsFileSystemAuditLogConfigurationOutput {
	return i.ToWindowsFileSystemAuditLogConfigurationOutputWithContext(context.Background())
}

func (i WindowsFileSystemAuditLogConfigurationArgs) ToWindowsFileSystemAuditLogConfigurationOutputWithContext(ctx context.Context) WindowsFileSystemAuditLogConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsFileSystemAuditLogConfigurationOutput)
}

func (i WindowsFileSystemAuditLogConfigurationArgs) ToWindowsFileSystemAuditLogConfigurationPtrOutput() WindowsFileSystemAuditLogConfigurationPtrOutput {
	return i.ToWindowsFileSystemAuditLogConfigurationPtrOutputWithContext(context.Background())
}

func (i WindowsFileSystemAuditLogConfigurationArgs) ToWindowsFileSystemAuditLogConfigurationPtrOutputWithContext(ctx context.Context) WindowsFileSystemAuditLogConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsFileSystemAuditLogConfigurationOutput).ToWindowsFileSystemAuditLogConfigurationPtrOutputWithContext(ctx)
}

// WindowsFileSystemAuditLogConfigurationPtrInput is an input type that accepts WindowsFileSystemAuditLogConfigurationArgs, WindowsFileSystemAuditLogConfigurationPtr and WindowsFileSystemAuditLogConfigurationPtrOutput values.
// You can construct a concrete instance of `WindowsFileSystemAuditLogConfigurationPtrInput` via:
//
//          WindowsFileSystemAuditLogConfigurationArgs{...}
//
//  or:
//
//          nil
type WindowsFileSystemAuditLogConfigurationPtrInput interface {
	pulumi.Input

	ToWindowsFileSystemAuditLogConfigurationPtrOutput() WindowsFileSystemAuditLogConfigurationPtrOutput
	ToWindowsFileSystemAuditLogConfigurationPtrOutputWithContext(context.Context) WindowsFileSystemAuditLogConfigurationPtrOutput
}

type windowsFileSystemAuditLogConfigurationPtrType WindowsFileSystemAuditLogConfigurationArgs

func WindowsFileSystemAuditLogConfigurationPtr(v *WindowsFileSystemAuditLogConfigurationArgs) WindowsFileSystemAuditLogConfigurationPtrInput {
	return (*windowsFileSystemAuditLogConfigurationPtrType)(v)
}

func (*windowsFileSystemAuditLogConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsFileSystemAuditLogConfiguration)(nil)).Elem()
}

func (i *windowsFileSystemAuditLogConfigurationPtrType) ToWindowsFileSystemAuditLogConfigurationPtrOutput() WindowsFileSystemAuditLogConfigurationPtrOutput {
	return i.ToWindowsFileSystemAuditLogConfigurationPtrOutputWithContext(context.Background())
}

func (i *windowsFileSystemAuditLogConfigurationPtrType) ToWindowsFileSystemAuditLogConfigurationPtrOutputWithContext(ctx context.Context) WindowsFileSystemAuditLogConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsFileSystemAuditLogConfigurationPtrOutput)
}

type WindowsFileSystemAuditLogConfigurationOutput struct{ *pulumi.OutputState }

func (WindowsFileSystemAuditLogConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsFileSystemAuditLogConfiguration)(nil)).Elem()
}

func (o WindowsFileSystemAuditLogConfigurationOutput) ToWindowsFileSystemAuditLogConfigurationOutput() WindowsFileSystemAuditLogConfigurationOutput {
	return o
}

func (o WindowsFileSystemAuditLogConfigurationOutput) ToWindowsFileSystemAuditLogConfigurationOutputWithContext(ctx context.Context) WindowsFileSystemAuditLogConfigurationOutput {
	return o
}

func (o WindowsFileSystemAuditLogConfigurationOutput) ToWindowsFileSystemAuditLogConfigurationPtrOutput() WindowsFileSystemAuditLogConfigurationPtrOutput {
	return o.ToWindowsFileSystemAuditLogConfigurationPtrOutputWithContext(context.Background())
}

func (o WindowsFileSystemAuditLogConfigurationOutput) ToWindowsFileSystemAuditLogConfigurationPtrOutputWithContext(ctx context.Context) WindowsFileSystemAuditLogConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WindowsFileSystemAuditLogConfiguration) *WindowsFileSystemAuditLogConfiguration {
		return &v
	}).(WindowsFileSystemAuditLogConfigurationPtrOutput)
}

// The Amazon Resource Name (ARN) for the destination of the audit logs. The destination can be any Amazon CloudWatch Logs log group ARN or Amazon Kinesis Data Firehose delivery stream ARN. Can be specified when `fileAccessAuditLogLevel` and `fileShareAccessAuditLogLevel` are not set to `DISABLED`. The name of the Amazon CloudWatch Logs log group must begin with the `/aws/fsx` prefix. The name of the Amazon Kinesis Data Firehouse delivery stream must begin with the `aws-fsx` prefix. If you do not provide a destination in `auditLogDestionation`, Amazon FSx will create and use a log stream in the CloudWatch Logs /aws/fsx/windows log group.
func (o WindowsFileSystemAuditLogConfigurationOutput) AuditLogDestination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsFileSystemAuditLogConfiguration) *string { return v.AuditLogDestination }).(pulumi.StringPtrOutput)
}

// Sets which attempt type is logged by Amazon FSx for file and folder accesses. Valid values are `SUCCESS_ONLY`, `FAILURE_ONLY`, `SUCCESS_AND_FAILURE`, and `DISABLED`. Default value is `DISABLED`.
func (o WindowsFileSystemAuditLogConfigurationOutput) FileAccessAuditLogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsFileSystemAuditLogConfiguration) *string { return v.FileAccessAuditLogLevel }).(pulumi.StringPtrOutput)
}

// Sets which attempt type is logged by Amazon FSx for file share accesses. Valid values are `SUCCESS_ONLY`, `FAILURE_ONLY`, `SUCCESS_AND_FAILURE`, and `DISABLED`. Default value is `DISABLED`.
func (o WindowsFileSystemAuditLogConfigurationOutput) FileShareAccessAuditLogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsFileSystemAuditLogConfiguration) *string { return v.FileShareAccessAuditLogLevel }).(pulumi.StringPtrOutput)
}

type WindowsFileSystemAuditLogConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WindowsFileSystemAuditLogConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsFileSystemAuditLogConfiguration)(nil)).Elem()
}

func (o WindowsFileSystemAuditLogConfigurationPtrOutput) ToWindowsFileSystemAuditLogConfigurationPtrOutput() WindowsFileSystemAuditLogConfigurationPtrOutput {
	return o
}

func (o WindowsFileSystemAuditLogConfigurationPtrOutput) ToWindowsFileSystemAuditLogConfigurationPtrOutputWithContext(ctx context.Context) WindowsFileSystemAuditLogConfigurationPtrOutput {
	return o
}

func (o WindowsFileSystemAuditLogConfigurationPtrOutput) Elem() WindowsFileSystemAuditLogConfigurationOutput {
	return o.ApplyT(func(v *WindowsFileSystemAuditLogConfiguration) WindowsFileSystemAuditLogConfiguration {
		if v != nil {
			return *v
		}
		var ret WindowsFileSystemAuditLogConfiguration
		return ret
	}).(WindowsFileSystemAuditLogConfigurationOutput)
}

// The Amazon Resource Name (ARN) for the destination of the audit logs. The destination can be any Amazon CloudWatch Logs log group ARN or Amazon Kinesis Data Firehose delivery stream ARN. Can be specified when `fileAccessAuditLogLevel` and `fileShareAccessAuditLogLevel` are not set to `DISABLED`. The name of the Amazon CloudWatch Logs log group must begin with the `/aws/fsx` prefix. The name of the Amazon Kinesis Data Firehouse delivery stream must begin with the `aws-fsx` prefix. If you do not provide a destination in `auditLogDestionation`, Amazon FSx will create and use a log stream in the CloudWatch Logs /aws/fsx/windows log group.
func (o WindowsFileSystemAuditLogConfigurationPtrOutput) AuditLogDestination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFileSystemAuditLogConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AuditLogDestination
	}).(pulumi.StringPtrOutput)
}

// Sets which attempt type is logged by Amazon FSx for file and folder accesses. Valid values are `SUCCESS_ONLY`, `FAILURE_ONLY`, `SUCCESS_AND_FAILURE`, and `DISABLED`. Default value is `DISABLED`.
func (o WindowsFileSystemAuditLogConfigurationPtrOutput) FileAccessAuditLogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFileSystemAuditLogConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.FileAccessAuditLogLevel
	}).(pulumi.StringPtrOutput)
}

// Sets which attempt type is logged by Amazon FSx for file share accesses. Valid values are `SUCCESS_ONLY`, `FAILURE_ONLY`, `SUCCESS_AND_FAILURE`, and `DISABLED`. Default value is `DISABLED`.
func (o WindowsFileSystemAuditLogConfigurationPtrOutput) FileShareAccessAuditLogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFileSystemAuditLogConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.FileShareAccessAuditLogLevel
	}).(pulumi.StringPtrOutput)
}

type WindowsFileSystemSelfManagedActiveDirectory struct {
	// A list of up to two IP addresses of DNS servers or domain controllers in the self-managed AD directory. The IP addresses need to be either in the same VPC CIDR range as the file system or in the private IP version 4 (IPv4) address ranges as specified in [RFC 1918](https://tools.ietf.org/html/rfc1918).
	DnsIps []string `pulumi:"dnsIps"`
	// The fully qualified domain name of the self-managed AD directory. For example, `corp.example.com`.
	DomainName string `pulumi:"domainName"`
	// The name of the domain group whose members are granted administrative privileges for the file system. Administrative privileges include taking ownership of files and folders, and setting audit controls (audit ACLs) on files and folders. The group that you specify must already exist in your domain. Defaults to `Domain Admins`.
	FileSystemAdministratorsGroup *string `pulumi:"fileSystemAdministratorsGroup"`
	// The fully qualified distinguished name of the organizational unit within your self-managed AD directory that the Windows File Server instance will join. For example, `OU=FSx,DC=yourdomain,DC=corp,DC=com`. Only accepts OU as the direct parent of the file system. If none is provided, the FSx file system is created in the default location of your self-managed AD directory. To learn more, see [RFC 2253](https://tools.ietf.org/html/rfc2253).
	OrganizationalUnitDistinguishedName *string `pulumi:"organizationalUnitDistinguishedName"`
	// The password for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
	Password string `pulumi:"password"`
	// The user name for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
	Username string `pulumi:"username"`
}

// WindowsFileSystemSelfManagedActiveDirectoryInput is an input type that accepts WindowsFileSystemSelfManagedActiveDirectoryArgs and WindowsFileSystemSelfManagedActiveDirectoryOutput values.
// You can construct a concrete instance of `WindowsFileSystemSelfManagedActiveDirectoryInput` via:
//
//          WindowsFileSystemSelfManagedActiveDirectoryArgs{...}
type WindowsFileSystemSelfManagedActiveDirectoryInput interface {
	pulumi.Input

	ToWindowsFileSystemSelfManagedActiveDirectoryOutput() WindowsFileSystemSelfManagedActiveDirectoryOutput
	ToWindowsFileSystemSelfManagedActiveDirectoryOutputWithContext(context.Context) WindowsFileSystemSelfManagedActiveDirectoryOutput
}

type WindowsFileSystemSelfManagedActiveDirectoryArgs struct {
	// A list of up to two IP addresses of DNS servers or domain controllers in the self-managed AD directory. The IP addresses need to be either in the same VPC CIDR range as the file system or in the private IP version 4 (IPv4) address ranges as specified in [RFC 1918](https://tools.ietf.org/html/rfc1918).
	DnsIps pulumi.StringArrayInput `pulumi:"dnsIps"`
	// The fully qualified domain name of the self-managed AD directory. For example, `corp.example.com`.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// The name of the domain group whose members are granted administrative privileges for the file system. Administrative privileges include taking ownership of files and folders, and setting audit controls (audit ACLs) on files and folders. The group that you specify must already exist in your domain. Defaults to `Domain Admins`.
	FileSystemAdministratorsGroup pulumi.StringPtrInput `pulumi:"fileSystemAdministratorsGroup"`
	// The fully qualified distinguished name of the organizational unit within your self-managed AD directory that the Windows File Server instance will join. For example, `OU=FSx,DC=yourdomain,DC=corp,DC=com`. Only accepts OU as the direct parent of the file system. If none is provided, the FSx file system is created in the default location of your self-managed AD directory. To learn more, see [RFC 2253](https://tools.ietf.org/html/rfc2253).
	OrganizationalUnitDistinguishedName pulumi.StringPtrInput `pulumi:"organizationalUnitDistinguishedName"`
	// The password for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
	Password pulumi.StringInput `pulumi:"password"`
	// The user name for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
	Username pulumi.StringInput `pulumi:"username"`
}

func (WindowsFileSystemSelfManagedActiveDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsFileSystemSelfManagedActiveDirectory)(nil)).Elem()
}

func (i WindowsFileSystemSelfManagedActiveDirectoryArgs) ToWindowsFileSystemSelfManagedActiveDirectoryOutput() WindowsFileSystemSelfManagedActiveDirectoryOutput {
	return i.ToWindowsFileSystemSelfManagedActiveDirectoryOutputWithContext(context.Background())
}

func (i WindowsFileSystemSelfManagedActiveDirectoryArgs) ToWindowsFileSystemSelfManagedActiveDirectoryOutputWithContext(ctx context.Context) WindowsFileSystemSelfManagedActiveDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsFileSystemSelfManagedActiveDirectoryOutput)
}

func (i WindowsFileSystemSelfManagedActiveDirectoryArgs) ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutput() WindowsFileSystemSelfManagedActiveDirectoryPtrOutput {
	return i.ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutputWithContext(context.Background())
}

func (i WindowsFileSystemSelfManagedActiveDirectoryArgs) ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutputWithContext(ctx context.Context) WindowsFileSystemSelfManagedActiveDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsFileSystemSelfManagedActiveDirectoryOutput).ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutputWithContext(ctx)
}

// WindowsFileSystemSelfManagedActiveDirectoryPtrInput is an input type that accepts WindowsFileSystemSelfManagedActiveDirectoryArgs, WindowsFileSystemSelfManagedActiveDirectoryPtr and WindowsFileSystemSelfManagedActiveDirectoryPtrOutput values.
// You can construct a concrete instance of `WindowsFileSystemSelfManagedActiveDirectoryPtrInput` via:
//
//          WindowsFileSystemSelfManagedActiveDirectoryArgs{...}
//
//  or:
//
//          nil
type WindowsFileSystemSelfManagedActiveDirectoryPtrInput interface {
	pulumi.Input

	ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutput() WindowsFileSystemSelfManagedActiveDirectoryPtrOutput
	ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutputWithContext(context.Context) WindowsFileSystemSelfManagedActiveDirectoryPtrOutput
}

type windowsFileSystemSelfManagedActiveDirectoryPtrType WindowsFileSystemSelfManagedActiveDirectoryArgs

func WindowsFileSystemSelfManagedActiveDirectoryPtr(v *WindowsFileSystemSelfManagedActiveDirectoryArgs) WindowsFileSystemSelfManagedActiveDirectoryPtrInput {
	return (*windowsFileSystemSelfManagedActiveDirectoryPtrType)(v)
}

func (*windowsFileSystemSelfManagedActiveDirectoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsFileSystemSelfManagedActiveDirectory)(nil)).Elem()
}

func (i *windowsFileSystemSelfManagedActiveDirectoryPtrType) ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutput() WindowsFileSystemSelfManagedActiveDirectoryPtrOutput {
	return i.ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutputWithContext(context.Background())
}

func (i *windowsFileSystemSelfManagedActiveDirectoryPtrType) ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutputWithContext(ctx context.Context) WindowsFileSystemSelfManagedActiveDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsFileSystemSelfManagedActiveDirectoryPtrOutput)
}

type WindowsFileSystemSelfManagedActiveDirectoryOutput struct{ *pulumi.OutputState }

func (WindowsFileSystemSelfManagedActiveDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsFileSystemSelfManagedActiveDirectory)(nil)).Elem()
}

func (o WindowsFileSystemSelfManagedActiveDirectoryOutput) ToWindowsFileSystemSelfManagedActiveDirectoryOutput() WindowsFileSystemSelfManagedActiveDirectoryOutput {
	return o
}

func (o WindowsFileSystemSelfManagedActiveDirectoryOutput) ToWindowsFileSystemSelfManagedActiveDirectoryOutputWithContext(ctx context.Context) WindowsFileSystemSelfManagedActiveDirectoryOutput {
	return o
}

func (o WindowsFileSystemSelfManagedActiveDirectoryOutput) ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutput() WindowsFileSystemSelfManagedActiveDirectoryPtrOutput {
	return o.ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutputWithContext(context.Background())
}

func (o WindowsFileSystemSelfManagedActiveDirectoryOutput) ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutputWithContext(ctx context.Context) WindowsFileSystemSelfManagedActiveDirectoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WindowsFileSystemSelfManagedActiveDirectory) *WindowsFileSystemSelfManagedActiveDirectory {
		return &v
	}).(WindowsFileSystemSelfManagedActiveDirectoryPtrOutput)
}

// A list of up to two IP addresses of DNS servers or domain controllers in the self-managed AD directory. The IP addresses need to be either in the same VPC CIDR range as the file system or in the private IP version 4 (IPv4) address ranges as specified in [RFC 1918](https://tools.ietf.org/html/rfc1918).
func (o WindowsFileSystemSelfManagedActiveDirectoryOutput) DnsIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WindowsFileSystemSelfManagedActiveDirectory) []string { return v.DnsIps }).(pulumi.StringArrayOutput)
}

// The fully qualified domain name of the self-managed AD directory. For example, `corp.example.com`.
func (o WindowsFileSystemSelfManagedActiveDirectoryOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsFileSystemSelfManagedActiveDirectory) string { return v.DomainName }).(pulumi.StringOutput)
}

// The name of the domain group whose members are granted administrative privileges for the file system. Administrative privileges include taking ownership of files and folders, and setting audit controls (audit ACLs) on files and folders. The group that you specify must already exist in your domain. Defaults to `Domain Admins`.
func (o WindowsFileSystemSelfManagedActiveDirectoryOutput) FileSystemAdministratorsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsFileSystemSelfManagedActiveDirectory) *string { return v.FileSystemAdministratorsGroup }).(pulumi.StringPtrOutput)
}

// The fully qualified distinguished name of the organizational unit within your self-managed AD directory that the Windows File Server instance will join. For example, `OU=FSx,DC=yourdomain,DC=corp,DC=com`. Only accepts OU as the direct parent of the file system. If none is provided, the FSx file system is created in the default location of your self-managed AD directory. To learn more, see [RFC 2253](https://tools.ietf.org/html/rfc2253).
func (o WindowsFileSystemSelfManagedActiveDirectoryOutput) OrganizationalUnitDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsFileSystemSelfManagedActiveDirectory) *string {
		return v.OrganizationalUnitDistinguishedName
	}).(pulumi.StringPtrOutput)
}

// The password for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
func (o WindowsFileSystemSelfManagedActiveDirectoryOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsFileSystemSelfManagedActiveDirectory) string { return v.Password }).(pulumi.StringOutput)
}

// The user name for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
func (o WindowsFileSystemSelfManagedActiveDirectoryOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsFileSystemSelfManagedActiveDirectory) string { return v.Username }).(pulumi.StringOutput)
}

type WindowsFileSystemSelfManagedActiveDirectoryPtrOutput struct{ *pulumi.OutputState }

func (WindowsFileSystemSelfManagedActiveDirectoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsFileSystemSelfManagedActiveDirectory)(nil)).Elem()
}

func (o WindowsFileSystemSelfManagedActiveDirectoryPtrOutput) ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutput() WindowsFileSystemSelfManagedActiveDirectoryPtrOutput {
	return o
}

func (o WindowsFileSystemSelfManagedActiveDirectoryPtrOutput) ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutputWithContext(ctx context.Context) WindowsFileSystemSelfManagedActiveDirectoryPtrOutput {
	return o
}

func (o WindowsFileSystemSelfManagedActiveDirectoryPtrOutput) Elem() WindowsFileSystemSelfManagedActiveDirectoryOutput {
	return o.ApplyT(func(v *WindowsFileSystemSelfManagedActiveDirectory) WindowsFileSystemSelfManagedActiveDirectory {
		if v != nil {
			return *v
		}
		var ret WindowsFileSystemSelfManagedActiveDirectory
		return ret
	}).(WindowsFileSystemSelfManagedActiveDirectoryOutput)
}

// A list of up to two IP addresses of DNS servers or domain controllers in the self-managed AD directory. The IP addresses need to be either in the same VPC CIDR range as the file system or in the private IP version 4 (IPv4) address ranges as specified in [RFC 1918](https://tools.ietf.org/html/rfc1918).
func (o WindowsFileSystemSelfManagedActiveDirectoryPtrOutput) DnsIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WindowsFileSystemSelfManagedActiveDirectory) []string {
		if v == nil {
			return nil
		}
		return v.DnsIps
	}).(pulumi.StringArrayOutput)
}

// The fully qualified domain name of the self-managed AD directory. For example, `corp.example.com`.
func (o WindowsFileSystemSelfManagedActiveDirectoryPtrOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFileSystemSelfManagedActiveDirectory) *string {
		if v == nil {
			return nil
		}
		return &v.DomainName
	}).(pulumi.StringPtrOutput)
}

// The name of the domain group whose members are granted administrative privileges for the file system. Administrative privileges include taking ownership of files and folders, and setting audit controls (audit ACLs) on files and folders. The group that you specify must already exist in your domain. Defaults to `Domain Admins`.
func (o WindowsFileSystemSelfManagedActiveDirectoryPtrOutput) FileSystemAdministratorsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFileSystemSelfManagedActiveDirectory) *string {
		if v == nil {
			return nil
		}
		return v.FileSystemAdministratorsGroup
	}).(pulumi.StringPtrOutput)
}

// The fully qualified distinguished name of the organizational unit within your self-managed AD directory that the Windows File Server instance will join. For example, `OU=FSx,DC=yourdomain,DC=corp,DC=com`. Only accepts OU as the direct parent of the file system. If none is provided, the FSx file system is created in the default location of your self-managed AD directory. To learn more, see [RFC 2253](https://tools.ietf.org/html/rfc2253).
func (o WindowsFileSystemSelfManagedActiveDirectoryPtrOutput) OrganizationalUnitDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFileSystemSelfManagedActiveDirectory) *string {
		if v == nil {
			return nil
		}
		return v.OrganizationalUnitDistinguishedName
	}).(pulumi.StringPtrOutput)
}

// The password for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
func (o WindowsFileSystemSelfManagedActiveDirectoryPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFileSystemSelfManagedActiveDirectory) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The user name for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
func (o WindowsFileSystemSelfManagedActiveDirectoryPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFileSystemSelfManagedActiveDirectory) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OntapFileSystemDiskIopsConfigurationInput)(nil)).Elem(), OntapFileSystemDiskIopsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapFileSystemDiskIopsConfigurationPtrInput)(nil)).Elem(), OntapFileSystemDiskIopsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapFileSystemEndpointInput)(nil)).Elem(), OntapFileSystemEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapFileSystemEndpointArrayInput)(nil)).Elem(), OntapFileSystemEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapFileSystemEndpointInterclusterInput)(nil)).Elem(), OntapFileSystemEndpointInterclusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapFileSystemEndpointInterclusterArrayInput)(nil)).Elem(), OntapFileSystemEndpointInterclusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapFileSystemEndpointManagementInput)(nil)).Elem(), OntapFileSystemEndpointManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapFileSystemEndpointManagementArrayInput)(nil)).Elem(), OntapFileSystemEndpointManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineActiveDirectoryConfigurationInput)(nil)).Elem(), OntapStorageVirtualMachineActiveDirectoryConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineActiveDirectoryConfigurationPtrInput)(nil)).Elem(), OntapStorageVirtualMachineActiveDirectoryConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationInput)(nil)).Elem(), OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrInput)(nil)).Elem(), OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineEndpointInput)(nil)).Elem(), OntapStorageVirtualMachineEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineEndpointArrayInput)(nil)).Elem(), OntapStorageVirtualMachineEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineEndpointIscseInput)(nil)).Elem(), OntapStorageVirtualMachineEndpointIscseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineEndpointIscseArrayInput)(nil)).Elem(), OntapStorageVirtualMachineEndpointIscseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineEndpointManagementInput)(nil)).Elem(), OntapStorageVirtualMachineEndpointManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineEndpointManagementArrayInput)(nil)).Elem(), OntapStorageVirtualMachineEndpointManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineEndpointNfInput)(nil)).Elem(), OntapStorageVirtualMachineEndpointNfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineEndpointNfArrayInput)(nil)).Elem(), OntapStorageVirtualMachineEndpointNfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineEndpointSmbInput)(nil)).Elem(), OntapStorageVirtualMachineEndpointSmbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineEndpointSmbArrayInput)(nil)).Elem(), OntapStorageVirtualMachineEndpointSmbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapVolumeTieringPolicyInput)(nil)).Elem(), OntapVolumeTieringPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapVolumeTieringPolicyPtrInput)(nil)).Elem(), OntapVolumeTieringPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WindowsFileSystemAuditLogConfigurationInput)(nil)).Elem(), WindowsFileSystemAuditLogConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WindowsFileSystemAuditLogConfigurationPtrInput)(nil)).Elem(), WindowsFileSystemAuditLogConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WindowsFileSystemSelfManagedActiveDirectoryInput)(nil)).Elem(), WindowsFileSystemSelfManagedActiveDirectoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WindowsFileSystemSelfManagedActiveDirectoryPtrInput)(nil)).Elem(), WindowsFileSystemSelfManagedActiveDirectoryArgs{})
	pulumi.RegisterOutputType(OntapFileSystemDiskIopsConfigurationOutput{})
	pulumi.RegisterOutputType(OntapFileSystemDiskIopsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(OntapFileSystemEndpointOutput{})
	pulumi.RegisterOutputType(OntapFileSystemEndpointArrayOutput{})
	pulumi.RegisterOutputType(OntapFileSystemEndpointInterclusterOutput{})
	pulumi.RegisterOutputType(OntapFileSystemEndpointInterclusterArrayOutput{})
	pulumi.RegisterOutputType(OntapFileSystemEndpointManagementOutput{})
	pulumi.RegisterOutputType(OntapFileSystemEndpointManagementArrayOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineActiveDirectoryConfigurationOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineEndpointOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineEndpointArrayOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineEndpointIscseOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineEndpointIscseArrayOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineEndpointManagementOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineEndpointManagementArrayOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineEndpointNfOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineEndpointNfArrayOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineEndpointSmbOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineEndpointSmbArrayOutput{})
	pulumi.RegisterOutputType(OntapVolumeTieringPolicyOutput{})
	pulumi.RegisterOutputType(OntapVolumeTieringPolicyPtrOutput{})
	pulumi.RegisterOutputType(WindowsFileSystemAuditLogConfigurationOutput{})
	pulumi.RegisterOutputType(WindowsFileSystemAuditLogConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WindowsFileSystemSelfManagedActiveDirectoryOutput{})
	pulumi.RegisterOutputType(WindowsFileSystemSelfManagedActiveDirectoryPtrOutput{})
}
