// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fsx

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

var _ = internal.GetEnvOrDefault

type DataRepositoryAssociationS3 struct {
	// Specifies the type of updated objects that will be automatically exported from your file system to the linked S3 bucket. See the `events` configuration block.
	AutoExportPolicy *DataRepositoryAssociationS3AutoExportPolicy `pulumi:"autoExportPolicy"`
	// Specifies the type of updated objects that will be automatically imported from the linked S3 bucket to your file system. See the `events` configuration block.
	AutoImportPolicy *DataRepositoryAssociationS3AutoImportPolicy `pulumi:"autoImportPolicy"`
}

// DataRepositoryAssociationS3Input is an input type that accepts DataRepositoryAssociationS3Args and DataRepositoryAssociationS3Output values.
// You can construct a concrete instance of `DataRepositoryAssociationS3Input` via:
//
//	DataRepositoryAssociationS3Args{...}
type DataRepositoryAssociationS3Input interface {
	pulumi.Input

	ToDataRepositoryAssociationS3Output() DataRepositoryAssociationS3Output
	ToDataRepositoryAssociationS3OutputWithContext(context.Context) DataRepositoryAssociationS3Output
}

type DataRepositoryAssociationS3Args struct {
	// Specifies the type of updated objects that will be automatically exported from your file system to the linked S3 bucket. See the `events` configuration block.
	AutoExportPolicy DataRepositoryAssociationS3AutoExportPolicyPtrInput `pulumi:"autoExportPolicy"`
	// Specifies the type of updated objects that will be automatically imported from the linked S3 bucket to your file system. See the `events` configuration block.
	AutoImportPolicy DataRepositoryAssociationS3AutoImportPolicyPtrInput `pulumi:"autoImportPolicy"`
}

func (DataRepositoryAssociationS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*DataRepositoryAssociationS3)(nil)).Elem()
}

func (i DataRepositoryAssociationS3Args) ToDataRepositoryAssociationS3Output() DataRepositoryAssociationS3Output {
	return i.ToDataRepositoryAssociationS3OutputWithContext(context.Background())
}

func (i DataRepositoryAssociationS3Args) ToDataRepositoryAssociationS3OutputWithContext(ctx context.Context) DataRepositoryAssociationS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(DataRepositoryAssociationS3Output)
}

func (i DataRepositoryAssociationS3Args) ToOutput(ctx context.Context) pulumix.Output[DataRepositoryAssociationS3] {
	return pulumix.Output[DataRepositoryAssociationS3]{
		OutputState: i.ToDataRepositoryAssociationS3OutputWithContext(ctx).OutputState,
	}
}

func (i DataRepositoryAssociationS3Args) ToDataRepositoryAssociationS3PtrOutput() DataRepositoryAssociationS3PtrOutput {
	return i.ToDataRepositoryAssociationS3PtrOutputWithContext(context.Background())
}

func (i DataRepositoryAssociationS3Args) ToDataRepositoryAssociationS3PtrOutputWithContext(ctx context.Context) DataRepositoryAssociationS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataRepositoryAssociationS3Output).ToDataRepositoryAssociationS3PtrOutputWithContext(ctx)
}

// DataRepositoryAssociationS3PtrInput is an input type that accepts DataRepositoryAssociationS3Args, DataRepositoryAssociationS3Ptr and DataRepositoryAssociationS3PtrOutput values.
// You can construct a concrete instance of `DataRepositoryAssociationS3PtrInput` via:
//
//	        DataRepositoryAssociationS3Args{...}
//
//	or:
//
//	        nil
type DataRepositoryAssociationS3PtrInput interface {
	pulumi.Input

	ToDataRepositoryAssociationS3PtrOutput() DataRepositoryAssociationS3PtrOutput
	ToDataRepositoryAssociationS3PtrOutputWithContext(context.Context) DataRepositoryAssociationS3PtrOutput
}

type dataRepositoryAssociationS3PtrType DataRepositoryAssociationS3Args

func DataRepositoryAssociationS3Ptr(v *DataRepositoryAssociationS3Args) DataRepositoryAssociationS3PtrInput {
	return (*dataRepositoryAssociationS3PtrType)(v)
}

func (*dataRepositoryAssociationS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataRepositoryAssociationS3)(nil)).Elem()
}

func (i *dataRepositoryAssociationS3PtrType) ToDataRepositoryAssociationS3PtrOutput() DataRepositoryAssociationS3PtrOutput {
	return i.ToDataRepositoryAssociationS3PtrOutputWithContext(context.Background())
}

func (i *dataRepositoryAssociationS3PtrType) ToDataRepositoryAssociationS3PtrOutputWithContext(ctx context.Context) DataRepositoryAssociationS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataRepositoryAssociationS3PtrOutput)
}

func (i *dataRepositoryAssociationS3PtrType) ToOutput(ctx context.Context) pulumix.Output[*DataRepositoryAssociationS3] {
	return pulumix.Output[*DataRepositoryAssociationS3]{
		OutputState: i.ToDataRepositoryAssociationS3PtrOutputWithContext(ctx).OutputState,
	}
}

type DataRepositoryAssociationS3Output struct{ *pulumi.OutputState }

func (DataRepositoryAssociationS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*DataRepositoryAssociationS3)(nil)).Elem()
}

func (o DataRepositoryAssociationS3Output) ToDataRepositoryAssociationS3Output() DataRepositoryAssociationS3Output {
	return o
}

func (o DataRepositoryAssociationS3Output) ToDataRepositoryAssociationS3OutputWithContext(ctx context.Context) DataRepositoryAssociationS3Output {
	return o
}

func (o DataRepositoryAssociationS3Output) ToDataRepositoryAssociationS3PtrOutput() DataRepositoryAssociationS3PtrOutput {
	return o.ToDataRepositoryAssociationS3PtrOutputWithContext(context.Background())
}

func (o DataRepositoryAssociationS3Output) ToDataRepositoryAssociationS3PtrOutputWithContext(ctx context.Context) DataRepositoryAssociationS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataRepositoryAssociationS3) *DataRepositoryAssociationS3 {
		return &v
	}).(DataRepositoryAssociationS3PtrOutput)
}

func (o DataRepositoryAssociationS3Output) ToOutput(ctx context.Context) pulumix.Output[DataRepositoryAssociationS3] {
	return pulumix.Output[DataRepositoryAssociationS3]{
		OutputState: o.OutputState,
	}
}

// Specifies the type of updated objects that will be automatically exported from your file system to the linked S3 bucket. See the `events` configuration block.
func (o DataRepositoryAssociationS3Output) AutoExportPolicy() DataRepositoryAssociationS3AutoExportPolicyPtrOutput {
	return o.ApplyT(func(v DataRepositoryAssociationS3) *DataRepositoryAssociationS3AutoExportPolicy {
		return v.AutoExportPolicy
	}).(DataRepositoryAssociationS3AutoExportPolicyPtrOutput)
}

// Specifies the type of updated objects that will be automatically imported from the linked S3 bucket to your file system. See the `events` configuration block.
func (o DataRepositoryAssociationS3Output) AutoImportPolicy() DataRepositoryAssociationS3AutoImportPolicyPtrOutput {
	return o.ApplyT(func(v DataRepositoryAssociationS3) *DataRepositoryAssociationS3AutoImportPolicy {
		return v.AutoImportPolicy
	}).(DataRepositoryAssociationS3AutoImportPolicyPtrOutput)
}

type DataRepositoryAssociationS3PtrOutput struct{ *pulumi.OutputState }

func (DataRepositoryAssociationS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataRepositoryAssociationS3)(nil)).Elem()
}

func (o DataRepositoryAssociationS3PtrOutput) ToDataRepositoryAssociationS3PtrOutput() DataRepositoryAssociationS3PtrOutput {
	return o
}

func (o DataRepositoryAssociationS3PtrOutput) ToDataRepositoryAssociationS3PtrOutputWithContext(ctx context.Context) DataRepositoryAssociationS3PtrOutput {
	return o
}

func (o DataRepositoryAssociationS3PtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DataRepositoryAssociationS3] {
	return pulumix.Output[*DataRepositoryAssociationS3]{
		OutputState: o.OutputState,
	}
}

func (o DataRepositoryAssociationS3PtrOutput) Elem() DataRepositoryAssociationS3Output {
	return o.ApplyT(func(v *DataRepositoryAssociationS3) DataRepositoryAssociationS3 {
		if v != nil {
			return *v
		}
		var ret DataRepositoryAssociationS3
		return ret
	}).(DataRepositoryAssociationS3Output)
}

// Specifies the type of updated objects that will be automatically exported from your file system to the linked S3 bucket. See the `events` configuration block.
func (o DataRepositoryAssociationS3PtrOutput) AutoExportPolicy() DataRepositoryAssociationS3AutoExportPolicyPtrOutput {
	return o.ApplyT(func(v *DataRepositoryAssociationS3) *DataRepositoryAssociationS3AutoExportPolicy {
		if v == nil {
			return nil
		}
		return v.AutoExportPolicy
	}).(DataRepositoryAssociationS3AutoExportPolicyPtrOutput)
}

// Specifies the type of updated objects that will be automatically imported from the linked S3 bucket to your file system. See the `events` configuration block.
func (o DataRepositoryAssociationS3PtrOutput) AutoImportPolicy() DataRepositoryAssociationS3AutoImportPolicyPtrOutput {
	return o.ApplyT(func(v *DataRepositoryAssociationS3) *DataRepositoryAssociationS3AutoImportPolicy {
		if v == nil {
			return nil
		}
		return v.AutoImportPolicy
	}).(DataRepositoryAssociationS3AutoImportPolicyPtrOutput)
}

type DataRepositoryAssociationS3AutoExportPolicy struct {
	// A list of file event types to automatically export to your linked S3 bucket or import from the linked S3 bucket. Valid values are `NEW`, `CHANGED`, `DELETED`. Max of 3.
	Events []string `pulumi:"events"`
}

// DataRepositoryAssociationS3AutoExportPolicyInput is an input type that accepts DataRepositoryAssociationS3AutoExportPolicyArgs and DataRepositoryAssociationS3AutoExportPolicyOutput values.
// You can construct a concrete instance of `DataRepositoryAssociationS3AutoExportPolicyInput` via:
//
//	DataRepositoryAssociationS3AutoExportPolicyArgs{...}
type DataRepositoryAssociationS3AutoExportPolicyInput interface {
	pulumi.Input

	ToDataRepositoryAssociationS3AutoExportPolicyOutput() DataRepositoryAssociationS3AutoExportPolicyOutput
	ToDataRepositoryAssociationS3AutoExportPolicyOutputWithContext(context.Context) DataRepositoryAssociationS3AutoExportPolicyOutput
}

type DataRepositoryAssociationS3AutoExportPolicyArgs struct {
	// A list of file event types to automatically export to your linked S3 bucket or import from the linked S3 bucket. Valid values are `NEW`, `CHANGED`, `DELETED`. Max of 3.
	Events pulumi.StringArrayInput `pulumi:"events"`
}

func (DataRepositoryAssociationS3AutoExportPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataRepositoryAssociationS3AutoExportPolicy)(nil)).Elem()
}

func (i DataRepositoryAssociationS3AutoExportPolicyArgs) ToDataRepositoryAssociationS3AutoExportPolicyOutput() DataRepositoryAssociationS3AutoExportPolicyOutput {
	return i.ToDataRepositoryAssociationS3AutoExportPolicyOutputWithContext(context.Background())
}

func (i DataRepositoryAssociationS3AutoExportPolicyArgs) ToDataRepositoryAssociationS3AutoExportPolicyOutputWithContext(ctx context.Context) DataRepositoryAssociationS3AutoExportPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataRepositoryAssociationS3AutoExportPolicyOutput)
}

func (i DataRepositoryAssociationS3AutoExportPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[DataRepositoryAssociationS3AutoExportPolicy] {
	return pulumix.Output[DataRepositoryAssociationS3AutoExportPolicy]{
		OutputState: i.ToDataRepositoryAssociationS3AutoExportPolicyOutputWithContext(ctx).OutputState,
	}
}

func (i DataRepositoryAssociationS3AutoExportPolicyArgs) ToDataRepositoryAssociationS3AutoExportPolicyPtrOutput() DataRepositoryAssociationS3AutoExportPolicyPtrOutput {
	return i.ToDataRepositoryAssociationS3AutoExportPolicyPtrOutputWithContext(context.Background())
}

func (i DataRepositoryAssociationS3AutoExportPolicyArgs) ToDataRepositoryAssociationS3AutoExportPolicyPtrOutputWithContext(ctx context.Context) DataRepositoryAssociationS3AutoExportPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataRepositoryAssociationS3AutoExportPolicyOutput).ToDataRepositoryAssociationS3AutoExportPolicyPtrOutputWithContext(ctx)
}

// DataRepositoryAssociationS3AutoExportPolicyPtrInput is an input type that accepts DataRepositoryAssociationS3AutoExportPolicyArgs, DataRepositoryAssociationS3AutoExportPolicyPtr and DataRepositoryAssociationS3AutoExportPolicyPtrOutput values.
// You can construct a concrete instance of `DataRepositoryAssociationS3AutoExportPolicyPtrInput` via:
//
//	        DataRepositoryAssociationS3AutoExportPolicyArgs{...}
//
//	or:
//
//	        nil
type DataRepositoryAssociationS3AutoExportPolicyPtrInput interface {
	pulumi.Input

	ToDataRepositoryAssociationS3AutoExportPolicyPtrOutput() DataRepositoryAssociationS3AutoExportPolicyPtrOutput
	ToDataRepositoryAssociationS3AutoExportPolicyPtrOutputWithContext(context.Context) DataRepositoryAssociationS3AutoExportPolicyPtrOutput
}

type dataRepositoryAssociationS3AutoExportPolicyPtrType DataRepositoryAssociationS3AutoExportPolicyArgs

func DataRepositoryAssociationS3AutoExportPolicyPtr(v *DataRepositoryAssociationS3AutoExportPolicyArgs) DataRepositoryAssociationS3AutoExportPolicyPtrInput {
	return (*dataRepositoryAssociationS3AutoExportPolicyPtrType)(v)
}

func (*dataRepositoryAssociationS3AutoExportPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataRepositoryAssociationS3AutoExportPolicy)(nil)).Elem()
}

func (i *dataRepositoryAssociationS3AutoExportPolicyPtrType) ToDataRepositoryAssociationS3AutoExportPolicyPtrOutput() DataRepositoryAssociationS3AutoExportPolicyPtrOutput {
	return i.ToDataRepositoryAssociationS3AutoExportPolicyPtrOutputWithContext(context.Background())
}

func (i *dataRepositoryAssociationS3AutoExportPolicyPtrType) ToDataRepositoryAssociationS3AutoExportPolicyPtrOutputWithContext(ctx context.Context) DataRepositoryAssociationS3AutoExportPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataRepositoryAssociationS3AutoExportPolicyPtrOutput)
}

func (i *dataRepositoryAssociationS3AutoExportPolicyPtrType) ToOutput(ctx context.Context) pulumix.Output[*DataRepositoryAssociationS3AutoExportPolicy] {
	return pulumix.Output[*DataRepositoryAssociationS3AutoExportPolicy]{
		OutputState: i.ToDataRepositoryAssociationS3AutoExportPolicyPtrOutputWithContext(ctx).OutputState,
	}
}

type DataRepositoryAssociationS3AutoExportPolicyOutput struct{ *pulumi.OutputState }

func (DataRepositoryAssociationS3AutoExportPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataRepositoryAssociationS3AutoExportPolicy)(nil)).Elem()
}

func (o DataRepositoryAssociationS3AutoExportPolicyOutput) ToDataRepositoryAssociationS3AutoExportPolicyOutput() DataRepositoryAssociationS3AutoExportPolicyOutput {
	return o
}

func (o DataRepositoryAssociationS3AutoExportPolicyOutput) ToDataRepositoryAssociationS3AutoExportPolicyOutputWithContext(ctx context.Context) DataRepositoryAssociationS3AutoExportPolicyOutput {
	return o
}

func (o DataRepositoryAssociationS3AutoExportPolicyOutput) ToDataRepositoryAssociationS3AutoExportPolicyPtrOutput() DataRepositoryAssociationS3AutoExportPolicyPtrOutput {
	return o.ToDataRepositoryAssociationS3AutoExportPolicyPtrOutputWithContext(context.Background())
}

func (o DataRepositoryAssociationS3AutoExportPolicyOutput) ToDataRepositoryAssociationS3AutoExportPolicyPtrOutputWithContext(ctx context.Context) DataRepositoryAssociationS3AutoExportPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataRepositoryAssociationS3AutoExportPolicy) *DataRepositoryAssociationS3AutoExportPolicy {
		return &v
	}).(DataRepositoryAssociationS3AutoExportPolicyPtrOutput)
}

func (o DataRepositoryAssociationS3AutoExportPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[DataRepositoryAssociationS3AutoExportPolicy] {
	return pulumix.Output[DataRepositoryAssociationS3AutoExportPolicy]{
		OutputState: o.OutputState,
	}
}

// A list of file event types to automatically export to your linked S3 bucket or import from the linked S3 bucket. Valid values are `NEW`, `CHANGED`, `DELETED`. Max of 3.
func (o DataRepositoryAssociationS3AutoExportPolicyOutput) Events() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataRepositoryAssociationS3AutoExportPolicy) []string { return v.Events }).(pulumi.StringArrayOutput)
}

type DataRepositoryAssociationS3AutoExportPolicyPtrOutput struct{ *pulumi.OutputState }

func (DataRepositoryAssociationS3AutoExportPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataRepositoryAssociationS3AutoExportPolicy)(nil)).Elem()
}

func (o DataRepositoryAssociationS3AutoExportPolicyPtrOutput) ToDataRepositoryAssociationS3AutoExportPolicyPtrOutput() DataRepositoryAssociationS3AutoExportPolicyPtrOutput {
	return o
}

func (o DataRepositoryAssociationS3AutoExportPolicyPtrOutput) ToDataRepositoryAssociationS3AutoExportPolicyPtrOutputWithContext(ctx context.Context) DataRepositoryAssociationS3AutoExportPolicyPtrOutput {
	return o
}

func (o DataRepositoryAssociationS3AutoExportPolicyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DataRepositoryAssociationS3AutoExportPolicy] {
	return pulumix.Output[*DataRepositoryAssociationS3AutoExportPolicy]{
		OutputState: o.OutputState,
	}
}

func (o DataRepositoryAssociationS3AutoExportPolicyPtrOutput) Elem() DataRepositoryAssociationS3AutoExportPolicyOutput {
	return o.ApplyT(func(v *DataRepositoryAssociationS3AutoExportPolicy) DataRepositoryAssociationS3AutoExportPolicy {
		if v != nil {
			return *v
		}
		var ret DataRepositoryAssociationS3AutoExportPolicy
		return ret
	}).(DataRepositoryAssociationS3AutoExportPolicyOutput)
}

// A list of file event types to automatically export to your linked S3 bucket or import from the linked S3 bucket. Valid values are `NEW`, `CHANGED`, `DELETED`. Max of 3.
func (o DataRepositoryAssociationS3AutoExportPolicyPtrOutput) Events() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataRepositoryAssociationS3AutoExportPolicy) []string {
		if v == nil {
			return nil
		}
		return v.Events
	}).(pulumi.StringArrayOutput)
}

type DataRepositoryAssociationS3AutoImportPolicy struct {
	// A list of file event types to automatically export to your linked S3 bucket or import from the linked S3 bucket. Valid values are `NEW`, `CHANGED`, `DELETED`. Max of 3.
	Events []string `pulumi:"events"`
}

// DataRepositoryAssociationS3AutoImportPolicyInput is an input type that accepts DataRepositoryAssociationS3AutoImportPolicyArgs and DataRepositoryAssociationS3AutoImportPolicyOutput values.
// You can construct a concrete instance of `DataRepositoryAssociationS3AutoImportPolicyInput` via:
//
//	DataRepositoryAssociationS3AutoImportPolicyArgs{...}
type DataRepositoryAssociationS3AutoImportPolicyInput interface {
	pulumi.Input

	ToDataRepositoryAssociationS3AutoImportPolicyOutput() DataRepositoryAssociationS3AutoImportPolicyOutput
	ToDataRepositoryAssociationS3AutoImportPolicyOutputWithContext(context.Context) DataRepositoryAssociationS3AutoImportPolicyOutput
}

type DataRepositoryAssociationS3AutoImportPolicyArgs struct {
	// A list of file event types to automatically export to your linked S3 bucket or import from the linked S3 bucket. Valid values are `NEW`, `CHANGED`, `DELETED`. Max of 3.
	Events pulumi.StringArrayInput `pulumi:"events"`
}

func (DataRepositoryAssociationS3AutoImportPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataRepositoryAssociationS3AutoImportPolicy)(nil)).Elem()
}

func (i DataRepositoryAssociationS3AutoImportPolicyArgs) ToDataRepositoryAssociationS3AutoImportPolicyOutput() DataRepositoryAssociationS3AutoImportPolicyOutput {
	return i.ToDataRepositoryAssociationS3AutoImportPolicyOutputWithContext(context.Background())
}

func (i DataRepositoryAssociationS3AutoImportPolicyArgs) ToDataRepositoryAssociationS3AutoImportPolicyOutputWithContext(ctx context.Context) DataRepositoryAssociationS3AutoImportPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataRepositoryAssociationS3AutoImportPolicyOutput)
}

func (i DataRepositoryAssociationS3AutoImportPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[DataRepositoryAssociationS3AutoImportPolicy] {
	return pulumix.Output[DataRepositoryAssociationS3AutoImportPolicy]{
		OutputState: i.ToDataRepositoryAssociationS3AutoImportPolicyOutputWithContext(ctx).OutputState,
	}
}

func (i DataRepositoryAssociationS3AutoImportPolicyArgs) ToDataRepositoryAssociationS3AutoImportPolicyPtrOutput() DataRepositoryAssociationS3AutoImportPolicyPtrOutput {
	return i.ToDataRepositoryAssociationS3AutoImportPolicyPtrOutputWithContext(context.Background())
}

func (i DataRepositoryAssociationS3AutoImportPolicyArgs) ToDataRepositoryAssociationS3AutoImportPolicyPtrOutputWithContext(ctx context.Context) DataRepositoryAssociationS3AutoImportPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataRepositoryAssociationS3AutoImportPolicyOutput).ToDataRepositoryAssociationS3AutoImportPolicyPtrOutputWithContext(ctx)
}

// DataRepositoryAssociationS3AutoImportPolicyPtrInput is an input type that accepts DataRepositoryAssociationS3AutoImportPolicyArgs, DataRepositoryAssociationS3AutoImportPolicyPtr and DataRepositoryAssociationS3AutoImportPolicyPtrOutput values.
// You can construct a concrete instance of `DataRepositoryAssociationS3AutoImportPolicyPtrInput` via:
//
//	        DataRepositoryAssociationS3AutoImportPolicyArgs{...}
//
//	or:
//
//	        nil
type DataRepositoryAssociationS3AutoImportPolicyPtrInput interface {
	pulumi.Input

	ToDataRepositoryAssociationS3AutoImportPolicyPtrOutput() DataRepositoryAssociationS3AutoImportPolicyPtrOutput
	ToDataRepositoryAssociationS3AutoImportPolicyPtrOutputWithContext(context.Context) DataRepositoryAssociationS3AutoImportPolicyPtrOutput
}

type dataRepositoryAssociationS3AutoImportPolicyPtrType DataRepositoryAssociationS3AutoImportPolicyArgs

func DataRepositoryAssociationS3AutoImportPolicyPtr(v *DataRepositoryAssociationS3AutoImportPolicyArgs) DataRepositoryAssociationS3AutoImportPolicyPtrInput {
	return (*dataRepositoryAssociationS3AutoImportPolicyPtrType)(v)
}

func (*dataRepositoryAssociationS3AutoImportPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataRepositoryAssociationS3AutoImportPolicy)(nil)).Elem()
}

func (i *dataRepositoryAssociationS3AutoImportPolicyPtrType) ToDataRepositoryAssociationS3AutoImportPolicyPtrOutput() DataRepositoryAssociationS3AutoImportPolicyPtrOutput {
	return i.ToDataRepositoryAssociationS3AutoImportPolicyPtrOutputWithContext(context.Background())
}

func (i *dataRepositoryAssociationS3AutoImportPolicyPtrType) ToDataRepositoryAssociationS3AutoImportPolicyPtrOutputWithContext(ctx context.Context) DataRepositoryAssociationS3AutoImportPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataRepositoryAssociationS3AutoImportPolicyPtrOutput)
}

func (i *dataRepositoryAssociationS3AutoImportPolicyPtrType) ToOutput(ctx context.Context) pulumix.Output[*DataRepositoryAssociationS3AutoImportPolicy] {
	return pulumix.Output[*DataRepositoryAssociationS3AutoImportPolicy]{
		OutputState: i.ToDataRepositoryAssociationS3AutoImportPolicyPtrOutputWithContext(ctx).OutputState,
	}
}

type DataRepositoryAssociationS3AutoImportPolicyOutput struct{ *pulumi.OutputState }

func (DataRepositoryAssociationS3AutoImportPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataRepositoryAssociationS3AutoImportPolicy)(nil)).Elem()
}

func (o DataRepositoryAssociationS3AutoImportPolicyOutput) ToDataRepositoryAssociationS3AutoImportPolicyOutput() DataRepositoryAssociationS3AutoImportPolicyOutput {
	return o
}

func (o DataRepositoryAssociationS3AutoImportPolicyOutput) ToDataRepositoryAssociationS3AutoImportPolicyOutputWithContext(ctx context.Context) DataRepositoryAssociationS3AutoImportPolicyOutput {
	return o
}

func (o DataRepositoryAssociationS3AutoImportPolicyOutput) ToDataRepositoryAssociationS3AutoImportPolicyPtrOutput() DataRepositoryAssociationS3AutoImportPolicyPtrOutput {
	return o.ToDataRepositoryAssociationS3AutoImportPolicyPtrOutputWithContext(context.Background())
}

func (o DataRepositoryAssociationS3AutoImportPolicyOutput) ToDataRepositoryAssociationS3AutoImportPolicyPtrOutputWithContext(ctx context.Context) DataRepositoryAssociationS3AutoImportPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataRepositoryAssociationS3AutoImportPolicy) *DataRepositoryAssociationS3AutoImportPolicy {
		return &v
	}).(DataRepositoryAssociationS3AutoImportPolicyPtrOutput)
}

func (o DataRepositoryAssociationS3AutoImportPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[DataRepositoryAssociationS3AutoImportPolicy] {
	return pulumix.Output[DataRepositoryAssociationS3AutoImportPolicy]{
		OutputState: o.OutputState,
	}
}

// A list of file event types to automatically export to your linked S3 bucket or import from the linked S3 bucket. Valid values are `NEW`, `CHANGED`, `DELETED`. Max of 3.
func (o DataRepositoryAssociationS3AutoImportPolicyOutput) Events() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DataRepositoryAssociationS3AutoImportPolicy) []string { return v.Events }).(pulumi.StringArrayOutput)
}

type DataRepositoryAssociationS3AutoImportPolicyPtrOutput struct{ *pulumi.OutputState }

func (DataRepositoryAssociationS3AutoImportPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataRepositoryAssociationS3AutoImportPolicy)(nil)).Elem()
}

func (o DataRepositoryAssociationS3AutoImportPolicyPtrOutput) ToDataRepositoryAssociationS3AutoImportPolicyPtrOutput() DataRepositoryAssociationS3AutoImportPolicyPtrOutput {
	return o
}

func (o DataRepositoryAssociationS3AutoImportPolicyPtrOutput) ToDataRepositoryAssociationS3AutoImportPolicyPtrOutputWithContext(ctx context.Context) DataRepositoryAssociationS3AutoImportPolicyPtrOutput {
	return o
}

func (o DataRepositoryAssociationS3AutoImportPolicyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*DataRepositoryAssociationS3AutoImportPolicy] {
	return pulumix.Output[*DataRepositoryAssociationS3AutoImportPolicy]{
		OutputState: o.OutputState,
	}
}

func (o DataRepositoryAssociationS3AutoImportPolicyPtrOutput) Elem() DataRepositoryAssociationS3AutoImportPolicyOutput {
	return o.ApplyT(func(v *DataRepositoryAssociationS3AutoImportPolicy) DataRepositoryAssociationS3AutoImportPolicy {
		if v != nil {
			return *v
		}
		var ret DataRepositoryAssociationS3AutoImportPolicy
		return ret
	}).(DataRepositoryAssociationS3AutoImportPolicyOutput)
}

// A list of file event types to automatically export to your linked S3 bucket or import from the linked S3 bucket. Valid values are `NEW`, `CHANGED`, `DELETED`. Max of 3.
func (o DataRepositoryAssociationS3AutoImportPolicyPtrOutput) Events() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DataRepositoryAssociationS3AutoImportPolicy) []string {
		if v == nil {
			return nil
		}
		return v.Events
	}).(pulumi.StringArrayOutput)
}

type FileCacheDataRepositoryAssociation struct {
	AssociationId *string `pulumi:"associationId"`
	// The path to the S3 or NFS data repository that links to the cache.
	DataRepositoryPath string `pulumi:"dataRepositoryPath"`
	// A list of NFS Exports that will be linked with this data repository association. The Export paths are in the format /exportpath1. To use this parameter, you must configure DataRepositoryPath as the domain name of the NFS file system. The NFS file system domain name in effect is the root of the subdirectories. Note that DataRepositorySubdirectories is not supported for S3 data repositories. Max of 500.
	DataRepositorySubdirectories []string `pulumi:"dataRepositorySubdirectories"`
	// The system-generated, unique ID of the cache.
	FileCacheId *string `pulumi:"fileCacheId"`
	// A path on the cache that points to a high-level directory (such as /ns1/) or subdirectory (such as /ns1/subdir/) that will be mapped 1-1 with DataRepositoryPath. The leading forward slash in the name is required. Two data repository associations cannot have overlapping cache paths. For example, if a data repository is associated with cache path /ns1/, then you cannot link another data repository with cache path /ns1/ns2. This path specifies where in your cache files will be exported from. This cache directory can be linked to only one data repository, and no data repository other can be linked to the directory. Note: The cache path can only be set to root (/) on an NFS DRA when DataRepositorySubdirectories is specified. If you specify root (/) as the cache path, you can create only one DRA on the cache. The cache path cannot be set to root (/) for an S3 DRA.
	FileCachePath         string  `pulumi:"fileCachePath"`
	FileSystemId          *string `pulumi:"fileSystemId"`
	FileSystemPath        *string `pulumi:"fileSystemPath"`
	ImportedFileChunkSize *int    `pulumi:"importedFileChunkSize"`
	// (Optional) See the `nfs` configuration block.
	Nfs         []FileCacheDataRepositoryAssociationNf `pulumi:"nfs"`
	ResourceArn *string                                `pulumi:"resourceArn"`
	// A map of tags to assign to the file cache. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// FileCacheDataRepositoryAssociationInput is an input type that accepts FileCacheDataRepositoryAssociationArgs and FileCacheDataRepositoryAssociationOutput values.
// You can construct a concrete instance of `FileCacheDataRepositoryAssociationInput` via:
//
//	FileCacheDataRepositoryAssociationArgs{...}
type FileCacheDataRepositoryAssociationInput interface {
	pulumi.Input

	ToFileCacheDataRepositoryAssociationOutput() FileCacheDataRepositoryAssociationOutput
	ToFileCacheDataRepositoryAssociationOutputWithContext(context.Context) FileCacheDataRepositoryAssociationOutput
}

type FileCacheDataRepositoryAssociationArgs struct {
	AssociationId pulumi.StringPtrInput `pulumi:"associationId"`
	// The path to the S3 or NFS data repository that links to the cache.
	DataRepositoryPath pulumi.StringInput `pulumi:"dataRepositoryPath"`
	// A list of NFS Exports that will be linked with this data repository association. The Export paths are in the format /exportpath1. To use this parameter, you must configure DataRepositoryPath as the domain name of the NFS file system. The NFS file system domain name in effect is the root of the subdirectories. Note that DataRepositorySubdirectories is not supported for S3 data repositories. Max of 500.
	DataRepositorySubdirectories pulumi.StringArrayInput `pulumi:"dataRepositorySubdirectories"`
	// The system-generated, unique ID of the cache.
	FileCacheId pulumi.StringPtrInput `pulumi:"fileCacheId"`
	// A path on the cache that points to a high-level directory (such as /ns1/) or subdirectory (such as /ns1/subdir/) that will be mapped 1-1 with DataRepositoryPath. The leading forward slash in the name is required. Two data repository associations cannot have overlapping cache paths. For example, if a data repository is associated with cache path /ns1/, then you cannot link another data repository with cache path /ns1/ns2. This path specifies where in your cache files will be exported from. This cache directory can be linked to only one data repository, and no data repository other can be linked to the directory. Note: The cache path can only be set to root (/) on an NFS DRA when DataRepositorySubdirectories is specified. If you specify root (/) as the cache path, you can create only one DRA on the cache. The cache path cannot be set to root (/) for an S3 DRA.
	FileCachePath         pulumi.StringInput    `pulumi:"fileCachePath"`
	FileSystemId          pulumi.StringPtrInput `pulumi:"fileSystemId"`
	FileSystemPath        pulumi.StringPtrInput `pulumi:"fileSystemPath"`
	ImportedFileChunkSize pulumi.IntPtrInput    `pulumi:"importedFileChunkSize"`
	// (Optional) See the `nfs` configuration block.
	Nfs         FileCacheDataRepositoryAssociationNfArrayInput `pulumi:"nfs"`
	ResourceArn pulumi.StringPtrInput                          `pulumi:"resourceArn"`
	// A map of tags to assign to the file cache. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput `pulumi:"tags"`
}

func (FileCacheDataRepositoryAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileCacheDataRepositoryAssociation)(nil)).Elem()
}

func (i FileCacheDataRepositoryAssociationArgs) ToFileCacheDataRepositoryAssociationOutput() FileCacheDataRepositoryAssociationOutput {
	return i.ToFileCacheDataRepositoryAssociationOutputWithContext(context.Background())
}

func (i FileCacheDataRepositoryAssociationArgs) ToFileCacheDataRepositoryAssociationOutputWithContext(ctx context.Context) FileCacheDataRepositoryAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileCacheDataRepositoryAssociationOutput)
}

func (i FileCacheDataRepositoryAssociationArgs) ToOutput(ctx context.Context) pulumix.Output[FileCacheDataRepositoryAssociation] {
	return pulumix.Output[FileCacheDataRepositoryAssociation]{
		OutputState: i.ToFileCacheDataRepositoryAssociationOutputWithContext(ctx).OutputState,
	}
}

// FileCacheDataRepositoryAssociationArrayInput is an input type that accepts FileCacheDataRepositoryAssociationArray and FileCacheDataRepositoryAssociationArrayOutput values.
// You can construct a concrete instance of `FileCacheDataRepositoryAssociationArrayInput` via:
//
//	FileCacheDataRepositoryAssociationArray{ FileCacheDataRepositoryAssociationArgs{...} }
type FileCacheDataRepositoryAssociationArrayInput interface {
	pulumi.Input

	ToFileCacheDataRepositoryAssociationArrayOutput() FileCacheDataRepositoryAssociationArrayOutput
	ToFileCacheDataRepositoryAssociationArrayOutputWithContext(context.Context) FileCacheDataRepositoryAssociationArrayOutput
}

type FileCacheDataRepositoryAssociationArray []FileCacheDataRepositoryAssociationInput

func (FileCacheDataRepositoryAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileCacheDataRepositoryAssociation)(nil)).Elem()
}

func (i FileCacheDataRepositoryAssociationArray) ToFileCacheDataRepositoryAssociationArrayOutput() FileCacheDataRepositoryAssociationArrayOutput {
	return i.ToFileCacheDataRepositoryAssociationArrayOutputWithContext(context.Background())
}

func (i FileCacheDataRepositoryAssociationArray) ToFileCacheDataRepositoryAssociationArrayOutputWithContext(ctx context.Context) FileCacheDataRepositoryAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileCacheDataRepositoryAssociationArrayOutput)
}

func (i FileCacheDataRepositoryAssociationArray) ToOutput(ctx context.Context) pulumix.Output[[]FileCacheDataRepositoryAssociation] {
	return pulumix.Output[[]FileCacheDataRepositoryAssociation]{
		OutputState: i.ToFileCacheDataRepositoryAssociationArrayOutputWithContext(ctx).OutputState,
	}
}

type FileCacheDataRepositoryAssociationOutput struct{ *pulumi.OutputState }

func (FileCacheDataRepositoryAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileCacheDataRepositoryAssociation)(nil)).Elem()
}

func (o FileCacheDataRepositoryAssociationOutput) ToFileCacheDataRepositoryAssociationOutput() FileCacheDataRepositoryAssociationOutput {
	return o
}

func (o FileCacheDataRepositoryAssociationOutput) ToFileCacheDataRepositoryAssociationOutputWithContext(ctx context.Context) FileCacheDataRepositoryAssociationOutput {
	return o
}

func (o FileCacheDataRepositoryAssociationOutput) ToOutput(ctx context.Context) pulumix.Output[FileCacheDataRepositoryAssociation] {
	return pulumix.Output[FileCacheDataRepositoryAssociation]{
		OutputState: o.OutputState,
	}
}

func (o FileCacheDataRepositoryAssociationOutput) AssociationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileCacheDataRepositoryAssociation) *string { return v.AssociationId }).(pulumi.StringPtrOutput)
}

// The path to the S3 or NFS data repository that links to the cache.
func (o FileCacheDataRepositoryAssociationOutput) DataRepositoryPath() pulumi.StringOutput {
	return o.ApplyT(func(v FileCacheDataRepositoryAssociation) string { return v.DataRepositoryPath }).(pulumi.StringOutput)
}

// A list of NFS Exports that will be linked with this data repository association. The Export paths are in the format /exportpath1. To use this parameter, you must configure DataRepositoryPath as the domain name of the NFS file system. The NFS file system domain name in effect is the root of the subdirectories. Note that DataRepositorySubdirectories is not supported for S3 data repositories. Max of 500.
func (o FileCacheDataRepositoryAssociationOutput) DataRepositorySubdirectories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FileCacheDataRepositoryAssociation) []string { return v.DataRepositorySubdirectories }).(pulumi.StringArrayOutput)
}

// The system-generated, unique ID of the cache.
func (o FileCacheDataRepositoryAssociationOutput) FileCacheId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileCacheDataRepositoryAssociation) *string { return v.FileCacheId }).(pulumi.StringPtrOutput)
}

// A path on the cache that points to a high-level directory (such as /ns1/) or subdirectory (such as /ns1/subdir/) that will be mapped 1-1 with DataRepositoryPath. The leading forward slash in the name is required. Two data repository associations cannot have overlapping cache paths. For example, if a data repository is associated with cache path /ns1/, then you cannot link another data repository with cache path /ns1/ns2. This path specifies where in your cache files will be exported from. This cache directory can be linked to only one data repository, and no data repository other can be linked to the directory. Note: The cache path can only be set to root (/) on an NFS DRA when DataRepositorySubdirectories is specified. If you specify root (/) as the cache path, you can create only one DRA on the cache. The cache path cannot be set to root (/) for an S3 DRA.
func (o FileCacheDataRepositoryAssociationOutput) FileCachePath() pulumi.StringOutput {
	return o.ApplyT(func(v FileCacheDataRepositoryAssociation) string { return v.FileCachePath }).(pulumi.StringOutput)
}

func (o FileCacheDataRepositoryAssociationOutput) FileSystemId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileCacheDataRepositoryAssociation) *string { return v.FileSystemId }).(pulumi.StringPtrOutput)
}

func (o FileCacheDataRepositoryAssociationOutput) FileSystemPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileCacheDataRepositoryAssociation) *string { return v.FileSystemPath }).(pulumi.StringPtrOutput)
}

func (o FileCacheDataRepositoryAssociationOutput) ImportedFileChunkSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileCacheDataRepositoryAssociation) *int { return v.ImportedFileChunkSize }).(pulumi.IntPtrOutput)
}

// (Optional) See the `nfs` configuration block.
func (o FileCacheDataRepositoryAssociationOutput) Nfs() FileCacheDataRepositoryAssociationNfArrayOutput {
	return o.ApplyT(func(v FileCacheDataRepositoryAssociation) []FileCacheDataRepositoryAssociationNf { return v.Nfs }).(FileCacheDataRepositoryAssociationNfArrayOutput)
}

func (o FileCacheDataRepositoryAssociationOutput) ResourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileCacheDataRepositoryAssociation) *string { return v.ResourceArn }).(pulumi.StringPtrOutput)
}

// A map of tags to assign to the file cache. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o FileCacheDataRepositoryAssociationOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v FileCacheDataRepositoryAssociation) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

type FileCacheDataRepositoryAssociationArrayOutput struct{ *pulumi.OutputState }

func (FileCacheDataRepositoryAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileCacheDataRepositoryAssociation)(nil)).Elem()
}

func (o FileCacheDataRepositoryAssociationArrayOutput) ToFileCacheDataRepositoryAssociationArrayOutput() FileCacheDataRepositoryAssociationArrayOutput {
	return o
}

func (o FileCacheDataRepositoryAssociationArrayOutput) ToFileCacheDataRepositoryAssociationArrayOutputWithContext(ctx context.Context) FileCacheDataRepositoryAssociationArrayOutput {
	return o
}

func (o FileCacheDataRepositoryAssociationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FileCacheDataRepositoryAssociation] {
	return pulumix.Output[[]FileCacheDataRepositoryAssociation]{
		OutputState: o.OutputState,
	}
}

func (o FileCacheDataRepositoryAssociationArrayOutput) Index(i pulumi.IntInput) FileCacheDataRepositoryAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FileCacheDataRepositoryAssociation {
		return vs[0].([]FileCacheDataRepositoryAssociation)[vs[1].(int)]
	}).(FileCacheDataRepositoryAssociationOutput)
}

type FileCacheDataRepositoryAssociationNf struct {
	// A list of up to 2 IP addresses of DNS servers used to resolve the NFS file system domain name. The provided IP addresses can either be the IP addresses of a DNS forwarder or resolver that the customer manages and runs inside the customer VPC, or the IP addresses of the on-premises DNS servers.
	DnsIps []string `pulumi:"dnsIps"`
	// The version of the NFS (Network File System) protocol of the NFS data repository. The only supported value is NFS3, which indicates that the data repository must support the NFSv3 protocol. The only supported value is `NFS3`.
	Version string `pulumi:"version"`
}

// FileCacheDataRepositoryAssociationNfInput is an input type that accepts FileCacheDataRepositoryAssociationNfArgs and FileCacheDataRepositoryAssociationNfOutput values.
// You can construct a concrete instance of `FileCacheDataRepositoryAssociationNfInput` via:
//
//	FileCacheDataRepositoryAssociationNfArgs{...}
type FileCacheDataRepositoryAssociationNfInput interface {
	pulumi.Input

	ToFileCacheDataRepositoryAssociationNfOutput() FileCacheDataRepositoryAssociationNfOutput
	ToFileCacheDataRepositoryAssociationNfOutputWithContext(context.Context) FileCacheDataRepositoryAssociationNfOutput
}

type FileCacheDataRepositoryAssociationNfArgs struct {
	// A list of up to 2 IP addresses of DNS servers used to resolve the NFS file system domain name. The provided IP addresses can either be the IP addresses of a DNS forwarder or resolver that the customer manages and runs inside the customer VPC, or the IP addresses of the on-premises DNS servers.
	DnsIps pulumi.StringArrayInput `pulumi:"dnsIps"`
	// The version of the NFS (Network File System) protocol of the NFS data repository. The only supported value is NFS3, which indicates that the data repository must support the NFSv3 protocol. The only supported value is `NFS3`.
	Version pulumi.StringInput `pulumi:"version"`
}

func (FileCacheDataRepositoryAssociationNfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileCacheDataRepositoryAssociationNf)(nil)).Elem()
}

func (i FileCacheDataRepositoryAssociationNfArgs) ToFileCacheDataRepositoryAssociationNfOutput() FileCacheDataRepositoryAssociationNfOutput {
	return i.ToFileCacheDataRepositoryAssociationNfOutputWithContext(context.Background())
}

func (i FileCacheDataRepositoryAssociationNfArgs) ToFileCacheDataRepositoryAssociationNfOutputWithContext(ctx context.Context) FileCacheDataRepositoryAssociationNfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileCacheDataRepositoryAssociationNfOutput)
}

func (i FileCacheDataRepositoryAssociationNfArgs) ToOutput(ctx context.Context) pulumix.Output[FileCacheDataRepositoryAssociationNf] {
	return pulumix.Output[FileCacheDataRepositoryAssociationNf]{
		OutputState: i.ToFileCacheDataRepositoryAssociationNfOutputWithContext(ctx).OutputState,
	}
}

// FileCacheDataRepositoryAssociationNfArrayInput is an input type that accepts FileCacheDataRepositoryAssociationNfArray and FileCacheDataRepositoryAssociationNfArrayOutput values.
// You can construct a concrete instance of `FileCacheDataRepositoryAssociationNfArrayInput` via:
//
//	FileCacheDataRepositoryAssociationNfArray{ FileCacheDataRepositoryAssociationNfArgs{...} }
type FileCacheDataRepositoryAssociationNfArrayInput interface {
	pulumi.Input

	ToFileCacheDataRepositoryAssociationNfArrayOutput() FileCacheDataRepositoryAssociationNfArrayOutput
	ToFileCacheDataRepositoryAssociationNfArrayOutputWithContext(context.Context) FileCacheDataRepositoryAssociationNfArrayOutput
}

type FileCacheDataRepositoryAssociationNfArray []FileCacheDataRepositoryAssociationNfInput

func (FileCacheDataRepositoryAssociationNfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileCacheDataRepositoryAssociationNf)(nil)).Elem()
}

func (i FileCacheDataRepositoryAssociationNfArray) ToFileCacheDataRepositoryAssociationNfArrayOutput() FileCacheDataRepositoryAssociationNfArrayOutput {
	return i.ToFileCacheDataRepositoryAssociationNfArrayOutputWithContext(context.Background())
}

func (i FileCacheDataRepositoryAssociationNfArray) ToFileCacheDataRepositoryAssociationNfArrayOutputWithContext(ctx context.Context) FileCacheDataRepositoryAssociationNfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileCacheDataRepositoryAssociationNfArrayOutput)
}

func (i FileCacheDataRepositoryAssociationNfArray) ToOutput(ctx context.Context) pulumix.Output[[]FileCacheDataRepositoryAssociationNf] {
	return pulumix.Output[[]FileCacheDataRepositoryAssociationNf]{
		OutputState: i.ToFileCacheDataRepositoryAssociationNfArrayOutputWithContext(ctx).OutputState,
	}
}

type FileCacheDataRepositoryAssociationNfOutput struct{ *pulumi.OutputState }

func (FileCacheDataRepositoryAssociationNfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileCacheDataRepositoryAssociationNf)(nil)).Elem()
}

func (o FileCacheDataRepositoryAssociationNfOutput) ToFileCacheDataRepositoryAssociationNfOutput() FileCacheDataRepositoryAssociationNfOutput {
	return o
}

func (o FileCacheDataRepositoryAssociationNfOutput) ToFileCacheDataRepositoryAssociationNfOutputWithContext(ctx context.Context) FileCacheDataRepositoryAssociationNfOutput {
	return o
}

func (o FileCacheDataRepositoryAssociationNfOutput) ToOutput(ctx context.Context) pulumix.Output[FileCacheDataRepositoryAssociationNf] {
	return pulumix.Output[FileCacheDataRepositoryAssociationNf]{
		OutputState: o.OutputState,
	}
}

// A list of up to 2 IP addresses of DNS servers used to resolve the NFS file system domain name. The provided IP addresses can either be the IP addresses of a DNS forwarder or resolver that the customer manages and runs inside the customer VPC, or the IP addresses of the on-premises DNS servers.
func (o FileCacheDataRepositoryAssociationNfOutput) DnsIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FileCacheDataRepositoryAssociationNf) []string { return v.DnsIps }).(pulumi.StringArrayOutput)
}

// The version of the NFS (Network File System) protocol of the NFS data repository. The only supported value is NFS3, which indicates that the data repository must support the NFSv3 protocol. The only supported value is `NFS3`.
func (o FileCacheDataRepositoryAssociationNfOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v FileCacheDataRepositoryAssociationNf) string { return v.Version }).(pulumi.StringOutput)
}

type FileCacheDataRepositoryAssociationNfArrayOutput struct{ *pulumi.OutputState }

func (FileCacheDataRepositoryAssociationNfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileCacheDataRepositoryAssociationNf)(nil)).Elem()
}

func (o FileCacheDataRepositoryAssociationNfArrayOutput) ToFileCacheDataRepositoryAssociationNfArrayOutput() FileCacheDataRepositoryAssociationNfArrayOutput {
	return o
}

func (o FileCacheDataRepositoryAssociationNfArrayOutput) ToFileCacheDataRepositoryAssociationNfArrayOutputWithContext(ctx context.Context) FileCacheDataRepositoryAssociationNfArrayOutput {
	return o
}

func (o FileCacheDataRepositoryAssociationNfArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FileCacheDataRepositoryAssociationNf] {
	return pulumix.Output[[]FileCacheDataRepositoryAssociationNf]{
		OutputState: o.OutputState,
	}
}

func (o FileCacheDataRepositoryAssociationNfArrayOutput) Index(i pulumi.IntInput) FileCacheDataRepositoryAssociationNfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FileCacheDataRepositoryAssociationNf {
		return vs[0].([]FileCacheDataRepositoryAssociationNf)[vs[1].(int)]
	}).(FileCacheDataRepositoryAssociationNfOutput)
}

type FileCacheLustreConfiguration struct {
	// Specifies the cache deployment type. The only supported value is `CACHE_1`.
	DeploymentType    string                                         `pulumi:"deploymentType"`
	LogConfigurations []FileCacheLustreConfigurationLogConfiguration `pulumi:"logConfigurations"`
	// The configuration for a Lustre MDT (Metadata Target) storage volume. See the `metadataConfiguration` block.
	MetadataConfigurations []FileCacheLustreConfigurationMetadataConfiguration `pulumi:"metadataConfigurations"`
	MountName              *string                                             `pulumi:"mountName"`
	// Provisions the amount of read and write throughput for each 1 tebibyte (TiB) of cache storage capacity, in MB/s/TiB. The only supported value is `1000`.
	PerUnitStorageThroughput int `pulumi:"perUnitStorageThroughput"`
	// A recurring weekly time, in the format `D:HH:MM`. `D` is the day of the week, for which `1` represents Monday and `7` represents Sunday. `HH` is the zero-padded hour of the day (0-23), and `MM` is the zero-padded minute of the hour. For example, 1:05:00 specifies maintenance at 5 AM Monday. See the [ISO week date](https://en.wikipedia.org/wiki/ISO_week_date) for more information.
	WeeklyMaintenanceStartTime *string `pulumi:"weeklyMaintenanceStartTime"`
}

// FileCacheLustreConfigurationInput is an input type that accepts FileCacheLustreConfigurationArgs and FileCacheLustreConfigurationOutput values.
// You can construct a concrete instance of `FileCacheLustreConfigurationInput` via:
//
//	FileCacheLustreConfigurationArgs{...}
type FileCacheLustreConfigurationInput interface {
	pulumi.Input

	ToFileCacheLustreConfigurationOutput() FileCacheLustreConfigurationOutput
	ToFileCacheLustreConfigurationOutputWithContext(context.Context) FileCacheLustreConfigurationOutput
}

type FileCacheLustreConfigurationArgs struct {
	// Specifies the cache deployment type. The only supported value is `CACHE_1`.
	DeploymentType    pulumi.StringInput                                     `pulumi:"deploymentType"`
	LogConfigurations FileCacheLustreConfigurationLogConfigurationArrayInput `pulumi:"logConfigurations"`
	// The configuration for a Lustre MDT (Metadata Target) storage volume. See the `metadataConfiguration` block.
	MetadataConfigurations FileCacheLustreConfigurationMetadataConfigurationArrayInput `pulumi:"metadataConfigurations"`
	MountName              pulumi.StringPtrInput                                       `pulumi:"mountName"`
	// Provisions the amount of read and write throughput for each 1 tebibyte (TiB) of cache storage capacity, in MB/s/TiB. The only supported value is `1000`.
	PerUnitStorageThroughput pulumi.IntInput `pulumi:"perUnitStorageThroughput"`
	// A recurring weekly time, in the format `D:HH:MM`. `D` is the day of the week, for which `1` represents Monday and `7` represents Sunday. `HH` is the zero-padded hour of the day (0-23), and `MM` is the zero-padded minute of the hour. For example, 1:05:00 specifies maintenance at 5 AM Monday. See the [ISO week date](https://en.wikipedia.org/wiki/ISO_week_date) for more information.
	WeeklyMaintenanceStartTime pulumi.StringPtrInput `pulumi:"weeklyMaintenanceStartTime"`
}

func (FileCacheLustreConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileCacheLustreConfiguration)(nil)).Elem()
}

func (i FileCacheLustreConfigurationArgs) ToFileCacheLustreConfigurationOutput() FileCacheLustreConfigurationOutput {
	return i.ToFileCacheLustreConfigurationOutputWithContext(context.Background())
}

func (i FileCacheLustreConfigurationArgs) ToFileCacheLustreConfigurationOutputWithContext(ctx context.Context) FileCacheLustreConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileCacheLustreConfigurationOutput)
}

func (i FileCacheLustreConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FileCacheLustreConfiguration] {
	return pulumix.Output[FileCacheLustreConfiguration]{
		OutputState: i.ToFileCacheLustreConfigurationOutputWithContext(ctx).OutputState,
	}
}

// FileCacheLustreConfigurationArrayInput is an input type that accepts FileCacheLustreConfigurationArray and FileCacheLustreConfigurationArrayOutput values.
// You can construct a concrete instance of `FileCacheLustreConfigurationArrayInput` via:
//
//	FileCacheLustreConfigurationArray{ FileCacheLustreConfigurationArgs{...} }
type FileCacheLustreConfigurationArrayInput interface {
	pulumi.Input

	ToFileCacheLustreConfigurationArrayOutput() FileCacheLustreConfigurationArrayOutput
	ToFileCacheLustreConfigurationArrayOutputWithContext(context.Context) FileCacheLustreConfigurationArrayOutput
}

type FileCacheLustreConfigurationArray []FileCacheLustreConfigurationInput

func (FileCacheLustreConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileCacheLustreConfiguration)(nil)).Elem()
}

func (i FileCacheLustreConfigurationArray) ToFileCacheLustreConfigurationArrayOutput() FileCacheLustreConfigurationArrayOutput {
	return i.ToFileCacheLustreConfigurationArrayOutputWithContext(context.Background())
}

func (i FileCacheLustreConfigurationArray) ToFileCacheLustreConfigurationArrayOutputWithContext(ctx context.Context) FileCacheLustreConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileCacheLustreConfigurationArrayOutput)
}

func (i FileCacheLustreConfigurationArray) ToOutput(ctx context.Context) pulumix.Output[[]FileCacheLustreConfiguration] {
	return pulumix.Output[[]FileCacheLustreConfiguration]{
		OutputState: i.ToFileCacheLustreConfigurationArrayOutputWithContext(ctx).OutputState,
	}
}

type FileCacheLustreConfigurationOutput struct{ *pulumi.OutputState }

func (FileCacheLustreConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileCacheLustreConfiguration)(nil)).Elem()
}

func (o FileCacheLustreConfigurationOutput) ToFileCacheLustreConfigurationOutput() FileCacheLustreConfigurationOutput {
	return o
}

func (o FileCacheLustreConfigurationOutput) ToFileCacheLustreConfigurationOutputWithContext(ctx context.Context) FileCacheLustreConfigurationOutput {
	return o
}

func (o FileCacheLustreConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FileCacheLustreConfiguration] {
	return pulumix.Output[FileCacheLustreConfiguration]{
		OutputState: o.OutputState,
	}
}

// Specifies the cache deployment type. The only supported value is `CACHE_1`.
func (o FileCacheLustreConfigurationOutput) DeploymentType() pulumi.StringOutput {
	return o.ApplyT(func(v FileCacheLustreConfiguration) string { return v.DeploymentType }).(pulumi.StringOutput)
}

func (o FileCacheLustreConfigurationOutput) LogConfigurations() FileCacheLustreConfigurationLogConfigurationArrayOutput {
	return o.ApplyT(func(v FileCacheLustreConfiguration) []FileCacheLustreConfigurationLogConfiguration {
		return v.LogConfigurations
	}).(FileCacheLustreConfigurationLogConfigurationArrayOutput)
}

// The configuration for a Lustre MDT (Metadata Target) storage volume. See the `metadataConfiguration` block.
func (o FileCacheLustreConfigurationOutput) MetadataConfigurations() FileCacheLustreConfigurationMetadataConfigurationArrayOutput {
	return o.ApplyT(func(v FileCacheLustreConfiguration) []FileCacheLustreConfigurationMetadataConfiguration {
		return v.MetadataConfigurations
	}).(FileCacheLustreConfigurationMetadataConfigurationArrayOutput)
}

func (o FileCacheLustreConfigurationOutput) MountName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileCacheLustreConfiguration) *string { return v.MountName }).(pulumi.StringPtrOutput)
}

// Provisions the amount of read and write throughput for each 1 tebibyte (TiB) of cache storage capacity, in MB/s/TiB. The only supported value is `1000`.
func (o FileCacheLustreConfigurationOutput) PerUnitStorageThroughput() pulumi.IntOutput {
	return o.ApplyT(func(v FileCacheLustreConfiguration) int { return v.PerUnitStorageThroughput }).(pulumi.IntOutput)
}

// A recurring weekly time, in the format `D:HH:MM`. `D` is the day of the week, for which `1` represents Monday and `7` represents Sunday. `HH` is the zero-padded hour of the day (0-23), and `MM` is the zero-padded minute of the hour. For example, 1:05:00 specifies maintenance at 5 AM Monday. See the [ISO week date](https://en.wikipedia.org/wiki/ISO_week_date) for more information.
func (o FileCacheLustreConfigurationOutput) WeeklyMaintenanceStartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileCacheLustreConfiguration) *string { return v.WeeklyMaintenanceStartTime }).(pulumi.StringPtrOutput)
}

type FileCacheLustreConfigurationArrayOutput struct{ *pulumi.OutputState }

func (FileCacheLustreConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileCacheLustreConfiguration)(nil)).Elem()
}

func (o FileCacheLustreConfigurationArrayOutput) ToFileCacheLustreConfigurationArrayOutput() FileCacheLustreConfigurationArrayOutput {
	return o
}

func (o FileCacheLustreConfigurationArrayOutput) ToFileCacheLustreConfigurationArrayOutputWithContext(ctx context.Context) FileCacheLustreConfigurationArrayOutput {
	return o
}

func (o FileCacheLustreConfigurationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FileCacheLustreConfiguration] {
	return pulumix.Output[[]FileCacheLustreConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FileCacheLustreConfigurationArrayOutput) Index(i pulumi.IntInput) FileCacheLustreConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FileCacheLustreConfiguration {
		return vs[0].([]FileCacheLustreConfiguration)[vs[1].(int)]
	}).(FileCacheLustreConfigurationOutput)
}

type FileCacheLustreConfigurationLogConfiguration struct {
	Destination *string `pulumi:"destination"`
	Level       *string `pulumi:"level"`
}

// FileCacheLustreConfigurationLogConfigurationInput is an input type that accepts FileCacheLustreConfigurationLogConfigurationArgs and FileCacheLustreConfigurationLogConfigurationOutput values.
// You can construct a concrete instance of `FileCacheLustreConfigurationLogConfigurationInput` via:
//
//	FileCacheLustreConfigurationLogConfigurationArgs{...}
type FileCacheLustreConfigurationLogConfigurationInput interface {
	pulumi.Input

	ToFileCacheLustreConfigurationLogConfigurationOutput() FileCacheLustreConfigurationLogConfigurationOutput
	ToFileCacheLustreConfigurationLogConfigurationOutputWithContext(context.Context) FileCacheLustreConfigurationLogConfigurationOutput
}

type FileCacheLustreConfigurationLogConfigurationArgs struct {
	Destination pulumi.StringPtrInput `pulumi:"destination"`
	Level       pulumi.StringPtrInput `pulumi:"level"`
}

func (FileCacheLustreConfigurationLogConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileCacheLustreConfigurationLogConfiguration)(nil)).Elem()
}

func (i FileCacheLustreConfigurationLogConfigurationArgs) ToFileCacheLustreConfigurationLogConfigurationOutput() FileCacheLustreConfigurationLogConfigurationOutput {
	return i.ToFileCacheLustreConfigurationLogConfigurationOutputWithContext(context.Background())
}

func (i FileCacheLustreConfigurationLogConfigurationArgs) ToFileCacheLustreConfigurationLogConfigurationOutputWithContext(ctx context.Context) FileCacheLustreConfigurationLogConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileCacheLustreConfigurationLogConfigurationOutput)
}

func (i FileCacheLustreConfigurationLogConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FileCacheLustreConfigurationLogConfiguration] {
	return pulumix.Output[FileCacheLustreConfigurationLogConfiguration]{
		OutputState: i.ToFileCacheLustreConfigurationLogConfigurationOutputWithContext(ctx).OutputState,
	}
}

// FileCacheLustreConfigurationLogConfigurationArrayInput is an input type that accepts FileCacheLustreConfigurationLogConfigurationArray and FileCacheLustreConfigurationLogConfigurationArrayOutput values.
// You can construct a concrete instance of `FileCacheLustreConfigurationLogConfigurationArrayInput` via:
//
//	FileCacheLustreConfigurationLogConfigurationArray{ FileCacheLustreConfigurationLogConfigurationArgs{...} }
type FileCacheLustreConfigurationLogConfigurationArrayInput interface {
	pulumi.Input

	ToFileCacheLustreConfigurationLogConfigurationArrayOutput() FileCacheLustreConfigurationLogConfigurationArrayOutput
	ToFileCacheLustreConfigurationLogConfigurationArrayOutputWithContext(context.Context) FileCacheLustreConfigurationLogConfigurationArrayOutput
}

type FileCacheLustreConfigurationLogConfigurationArray []FileCacheLustreConfigurationLogConfigurationInput

func (FileCacheLustreConfigurationLogConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileCacheLustreConfigurationLogConfiguration)(nil)).Elem()
}

func (i FileCacheLustreConfigurationLogConfigurationArray) ToFileCacheLustreConfigurationLogConfigurationArrayOutput() FileCacheLustreConfigurationLogConfigurationArrayOutput {
	return i.ToFileCacheLustreConfigurationLogConfigurationArrayOutputWithContext(context.Background())
}

func (i FileCacheLustreConfigurationLogConfigurationArray) ToFileCacheLustreConfigurationLogConfigurationArrayOutputWithContext(ctx context.Context) FileCacheLustreConfigurationLogConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileCacheLustreConfigurationLogConfigurationArrayOutput)
}

func (i FileCacheLustreConfigurationLogConfigurationArray) ToOutput(ctx context.Context) pulumix.Output[[]FileCacheLustreConfigurationLogConfiguration] {
	return pulumix.Output[[]FileCacheLustreConfigurationLogConfiguration]{
		OutputState: i.ToFileCacheLustreConfigurationLogConfigurationArrayOutputWithContext(ctx).OutputState,
	}
}

type FileCacheLustreConfigurationLogConfigurationOutput struct{ *pulumi.OutputState }

func (FileCacheLustreConfigurationLogConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileCacheLustreConfigurationLogConfiguration)(nil)).Elem()
}

func (o FileCacheLustreConfigurationLogConfigurationOutput) ToFileCacheLustreConfigurationLogConfigurationOutput() FileCacheLustreConfigurationLogConfigurationOutput {
	return o
}

func (o FileCacheLustreConfigurationLogConfigurationOutput) ToFileCacheLustreConfigurationLogConfigurationOutputWithContext(ctx context.Context) FileCacheLustreConfigurationLogConfigurationOutput {
	return o
}

func (o FileCacheLustreConfigurationLogConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FileCacheLustreConfigurationLogConfiguration] {
	return pulumix.Output[FileCacheLustreConfigurationLogConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FileCacheLustreConfigurationLogConfigurationOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileCacheLustreConfigurationLogConfiguration) *string { return v.Destination }).(pulumi.StringPtrOutput)
}

func (o FileCacheLustreConfigurationLogConfigurationOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileCacheLustreConfigurationLogConfiguration) *string { return v.Level }).(pulumi.StringPtrOutput)
}

type FileCacheLustreConfigurationLogConfigurationArrayOutput struct{ *pulumi.OutputState }

func (FileCacheLustreConfigurationLogConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileCacheLustreConfigurationLogConfiguration)(nil)).Elem()
}

func (o FileCacheLustreConfigurationLogConfigurationArrayOutput) ToFileCacheLustreConfigurationLogConfigurationArrayOutput() FileCacheLustreConfigurationLogConfigurationArrayOutput {
	return o
}

func (o FileCacheLustreConfigurationLogConfigurationArrayOutput) ToFileCacheLustreConfigurationLogConfigurationArrayOutputWithContext(ctx context.Context) FileCacheLustreConfigurationLogConfigurationArrayOutput {
	return o
}

func (o FileCacheLustreConfigurationLogConfigurationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FileCacheLustreConfigurationLogConfiguration] {
	return pulumix.Output[[]FileCacheLustreConfigurationLogConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FileCacheLustreConfigurationLogConfigurationArrayOutput) Index(i pulumi.IntInput) FileCacheLustreConfigurationLogConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FileCacheLustreConfigurationLogConfiguration {
		return vs[0].([]FileCacheLustreConfigurationLogConfiguration)[vs[1].(int)]
	}).(FileCacheLustreConfigurationLogConfigurationOutput)
}

type FileCacheLustreConfigurationMetadataConfiguration struct {
	// The storage capacity of the Lustre MDT (Metadata Target) storage volume in gibibytes (GiB). The only supported value is `2400` GiB.
	StorageCapacity int `pulumi:"storageCapacity"`
}

// FileCacheLustreConfigurationMetadataConfigurationInput is an input type that accepts FileCacheLustreConfigurationMetadataConfigurationArgs and FileCacheLustreConfigurationMetadataConfigurationOutput values.
// You can construct a concrete instance of `FileCacheLustreConfigurationMetadataConfigurationInput` via:
//
//	FileCacheLustreConfigurationMetadataConfigurationArgs{...}
type FileCacheLustreConfigurationMetadataConfigurationInput interface {
	pulumi.Input

	ToFileCacheLustreConfigurationMetadataConfigurationOutput() FileCacheLustreConfigurationMetadataConfigurationOutput
	ToFileCacheLustreConfigurationMetadataConfigurationOutputWithContext(context.Context) FileCacheLustreConfigurationMetadataConfigurationOutput
}

type FileCacheLustreConfigurationMetadataConfigurationArgs struct {
	// The storage capacity of the Lustre MDT (Metadata Target) storage volume in gibibytes (GiB). The only supported value is `2400` GiB.
	StorageCapacity pulumi.IntInput `pulumi:"storageCapacity"`
}

func (FileCacheLustreConfigurationMetadataConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileCacheLustreConfigurationMetadataConfiguration)(nil)).Elem()
}

func (i FileCacheLustreConfigurationMetadataConfigurationArgs) ToFileCacheLustreConfigurationMetadataConfigurationOutput() FileCacheLustreConfigurationMetadataConfigurationOutput {
	return i.ToFileCacheLustreConfigurationMetadataConfigurationOutputWithContext(context.Background())
}

func (i FileCacheLustreConfigurationMetadataConfigurationArgs) ToFileCacheLustreConfigurationMetadataConfigurationOutputWithContext(ctx context.Context) FileCacheLustreConfigurationMetadataConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileCacheLustreConfigurationMetadataConfigurationOutput)
}

func (i FileCacheLustreConfigurationMetadataConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[FileCacheLustreConfigurationMetadataConfiguration] {
	return pulumix.Output[FileCacheLustreConfigurationMetadataConfiguration]{
		OutputState: i.ToFileCacheLustreConfigurationMetadataConfigurationOutputWithContext(ctx).OutputState,
	}
}

// FileCacheLustreConfigurationMetadataConfigurationArrayInput is an input type that accepts FileCacheLustreConfigurationMetadataConfigurationArray and FileCacheLustreConfigurationMetadataConfigurationArrayOutput values.
// You can construct a concrete instance of `FileCacheLustreConfigurationMetadataConfigurationArrayInput` via:
//
//	FileCacheLustreConfigurationMetadataConfigurationArray{ FileCacheLustreConfigurationMetadataConfigurationArgs{...} }
type FileCacheLustreConfigurationMetadataConfigurationArrayInput interface {
	pulumi.Input

	ToFileCacheLustreConfigurationMetadataConfigurationArrayOutput() FileCacheLustreConfigurationMetadataConfigurationArrayOutput
	ToFileCacheLustreConfigurationMetadataConfigurationArrayOutputWithContext(context.Context) FileCacheLustreConfigurationMetadataConfigurationArrayOutput
}

type FileCacheLustreConfigurationMetadataConfigurationArray []FileCacheLustreConfigurationMetadataConfigurationInput

func (FileCacheLustreConfigurationMetadataConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileCacheLustreConfigurationMetadataConfiguration)(nil)).Elem()
}

func (i FileCacheLustreConfigurationMetadataConfigurationArray) ToFileCacheLustreConfigurationMetadataConfigurationArrayOutput() FileCacheLustreConfigurationMetadataConfigurationArrayOutput {
	return i.ToFileCacheLustreConfigurationMetadataConfigurationArrayOutputWithContext(context.Background())
}

func (i FileCacheLustreConfigurationMetadataConfigurationArray) ToFileCacheLustreConfigurationMetadataConfigurationArrayOutputWithContext(ctx context.Context) FileCacheLustreConfigurationMetadataConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileCacheLustreConfigurationMetadataConfigurationArrayOutput)
}

func (i FileCacheLustreConfigurationMetadataConfigurationArray) ToOutput(ctx context.Context) pulumix.Output[[]FileCacheLustreConfigurationMetadataConfiguration] {
	return pulumix.Output[[]FileCacheLustreConfigurationMetadataConfiguration]{
		OutputState: i.ToFileCacheLustreConfigurationMetadataConfigurationArrayOutputWithContext(ctx).OutputState,
	}
}

type FileCacheLustreConfigurationMetadataConfigurationOutput struct{ *pulumi.OutputState }

func (FileCacheLustreConfigurationMetadataConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileCacheLustreConfigurationMetadataConfiguration)(nil)).Elem()
}

func (o FileCacheLustreConfigurationMetadataConfigurationOutput) ToFileCacheLustreConfigurationMetadataConfigurationOutput() FileCacheLustreConfigurationMetadataConfigurationOutput {
	return o
}

func (o FileCacheLustreConfigurationMetadataConfigurationOutput) ToFileCacheLustreConfigurationMetadataConfigurationOutputWithContext(ctx context.Context) FileCacheLustreConfigurationMetadataConfigurationOutput {
	return o
}

func (o FileCacheLustreConfigurationMetadataConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[FileCacheLustreConfigurationMetadataConfiguration] {
	return pulumix.Output[FileCacheLustreConfigurationMetadataConfiguration]{
		OutputState: o.OutputState,
	}
}

// The storage capacity of the Lustre MDT (Metadata Target) storage volume in gibibytes (GiB). The only supported value is `2400` GiB.
func (o FileCacheLustreConfigurationMetadataConfigurationOutput) StorageCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v FileCacheLustreConfigurationMetadataConfiguration) int { return v.StorageCapacity }).(pulumi.IntOutput)
}

type FileCacheLustreConfigurationMetadataConfigurationArrayOutput struct{ *pulumi.OutputState }

func (FileCacheLustreConfigurationMetadataConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileCacheLustreConfigurationMetadataConfiguration)(nil)).Elem()
}

func (o FileCacheLustreConfigurationMetadataConfigurationArrayOutput) ToFileCacheLustreConfigurationMetadataConfigurationArrayOutput() FileCacheLustreConfigurationMetadataConfigurationArrayOutput {
	return o
}

func (o FileCacheLustreConfigurationMetadataConfigurationArrayOutput) ToFileCacheLustreConfigurationMetadataConfigurationArrayOutputWithContext(ctx context.Context) FileCacheLustreConfigurationMetadataConfigurationArrayOutput {
	return o
}

func (o FileCacheLustreConfigurationMetadataConfigurationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]FileCacheLustreConfigurationMetadataConfiguration] {
	return pulumix.Output[[]FileCacheLustreConfigurationMetadataConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o FileCacheLustreConfigurationMetadataConfigurationArrayOutput) Index(i pulumi.IntInput) FileCacheLustreConfigurationMetadataConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FileCacheLustreConfigurationMetadataConfiguration {
		return vs[0].([]FileCacheLustreConfigurationMetadataConfiguration)[vs[1].(int)]
	}).(FileCacheLustreConfigurationMetadataConfigurationOutput)
}

type LustreFileSystemLogConfiguration struct {
	// The Amazon Resource Name (ARN) that specifies the destination of the logs. The name of the Amazon CloudWatch Logs log group must begin with the `/aws/fsx` prefix. If you do not provide a destination, Amazon FSx will create and use a log stream in the CloudWatch Logs `/aws/fsx/lustre` log group.
	Destination *string `pulumi:"destination"`
	// Sets which data repository events are logged by Amazon FSx. Valid values are `WARN_ONLY`, `FAILURE_ONLY`, `ERROR_ONLY`, `WARN_ERROR` and `DISABLED`. Default value is `DISABLED`.
	Level *string `pulumi:"level"`
}

// LustreFileSystemLogConfigurationInput is an input type that accepts LustreFileSystemLogConfigurationArgs and LustreFileSystemLogConfigurationOutput values.
// You can construct a concrete instance of `LustreFileSystemLogConfigurationInput` via:
//
//	LustreFileSystemLogConfigurationArgs{...}
type LustreFileSystemLogConfigurationInput interface {
	pulumi.Input

	ToLustreFileSystemLogConfigurationOutput() LustreFileSystemLogConfigurationOutput
	ToLustreFileSystemLogConfigurationOutputWithContext(context.Context) LustreFileSystemLogConfigurationOutput
}

type LustreFileSystemLogConfigurationArgs struct {
	// The Amazon Resource Name (ARN) that specifies the destination of the logs. The name of the Amazon CloudWatch Logs log group must begin with the `/aws/fsx` prefix. If you do not provide a destination, Amazon FSx will create and use a log stream in the CloudWatch Logs `/aws/fsx/lustre` log group.
	Destination pulumi.StringPtrInput `pulumi:"destination"`
	// Sets which data repository events are logged by Amazon FSx. Valid values are `WARN_ONLY`, `FAILURE_ONLY`, `ERROR_ONLY`, `WARN_ERROR` and `DISABLED`. Default value is `DISABLED`.
	Level pulumi.StringPtrInput `pulumi:"level"`
}

func (LustreFileSystemLogConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LustreFileSystemLogConfiguration)(nil)).Elem()
}

func (i LustreFileSystemLogConfigurationArgs) ToLustreFileSystemLogConfigurationOutput() LustreFileSystemLogConfigurationOutput {
	return i.ToLustreFileSystemLogConfigurationOutputWithContext(context.Background())
}

func (i LustreFileSystemLogConfigurationArgs) ToLustreFileSystemLogConfigurationOutputWithContext(ctx context.Context) LustreFileSystemLogConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LustreFileSystemLogConfigurationOutput)
}

func (i LustreFileSystemLogConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[LustreFileSystemLogConfiguration] {
	return pulumix.Output[LustreFileSystemLogConfiguration]{
		OutputState: i.ToLustreFileSystemLogConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i LustreFileSystemLogConfigurationArgs) ToLustreFileSystemLogConfigurationPtrOutput() LustreFileSystemLogConfigurationPtrOutput {
	return i.ToLustreFileSystemLogConfigurationPtrOutputWithContext(context.Background())
}

func (i LustreFileSystemLogConfigurationArgs) ToLustreFileSystemLogConfigurationPtrOutputWithContext(ctx context.Context) LustreFileSystemLogConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LustreFileSystemLogConfigurationOutput).ToLustreFileSystemLogConfigurationPtrOutputWithContext(ctx)
}

// LustreFileSystemLogConfigurationPtrInput is an input type that accepts LustreFileSystemLogConfigurationArgs, LustreFileSystemLogConfigurationPtr and LustreFileSystemLogConfigurationPtrOutput values.
// You can construct a concrete instance of `LustreFileSystemLogConfigurationPtrInput` via:
//
//	        LustreFileSystemLogConfigurationArgs{...}
//
//	or:
//
//	        nil
type LustreFileSystemLogConfigurationPtrInput interface {
	pulumi.Input

	ToLustreFileSystemLogConfigurationPtrOutput() LustreFileSystemLogConfigurationPtrOutput
	ToLustreFileSystemLogConfigurationPtrOutputWithContext(context.Context) LustreFileSystemLogConfigurationPtrOutput
}

type lustreFileSystemLogConfigurationPtrType LustreFileSystemLogConfigurationArgs

func LustreFileSystemLogConfigurationPtr(v *LustreFileSystemLogConfigurationArgs) LustreFileSystemLogConfigurationPtrInput {
	return (*lustreFileSystemLogConfigurationPtrType)(v)
}

func (*lustreFileSystemLogConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LustreFileSystemLogConfiguration)(nil)).Elem()
}

func (i *lustreFileSystemLogConfigurationPtrType) ToLustreFileSystemLogConfigurationPtrOutput() LustreFileSystemLogConfigurationPtrOutput {
	return i.ToLustreFileSystemLogConfigurationPtrOutputWithContext(context.Background())
}

func (i *lustreFileSystemLogConfigurationPtrType) ToLustreFileSystemLogConfigurationPtrOutputWithContext(ctx context.Context) LustreFileSystemLogConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LustreFileSystemLogConfigurationPtrOutput)
}

func (i *lustreFileSystemLogConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*LustreFileSystemLogConfiguration] {
	return pulumix.Output[*LustreFileSystemLogConfiguration]{
		OutputState: i.ToLustreFileSystemLogConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type LustreFileSystemLogConfigurationOutput struct{ *pulumi.OutputState }

func (LustreFileSystemLogConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LustreFileSystemLogConfiguration)(nil)).Elem()
}

func (o LustreFileSystemLogConfigurationOutput) ToLustreFileSystemLogConfigurationOutput() LustreFileSystemLogConfigurationOutput {
	return o
}

func (o LustreFileSystemLogConfigurationOutput) ToLustreFileSystemLogConfigurationOutputWithContext(ctx context.Context) LustreFileSystemLogConfigurationOutput {
	return o
}

func (o LustreFileSystemLogConfigurationOutput) ToLustreFileSystemLogConfigurationPtrOutput() LustreFileSystemLogConfigurationPtrOutput {
	return o.ToLustreFileSystemLogConfigurationPtrOutputWithContext(context.Background())
}

func (o LustreFileSystemLogConfigurationOutput) ToLustreFileSystemLogConfigurationPtrOutputWithContext(ctx context.Context) LustreFileSystemLogConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LustreFileSystemLogConfiguration) *LustreFileSystemLogConfiguration {
		return &v
	}).(LustreFileSystemLogConfigurationPtrOutput)
}

func (o LustreFileSystemLogConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[LustreFileSystemLogConfiguration] {
	return pulumix.Output[LustreFileSystemLogConfiguration]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) that specifies the destination of the logs. The name of the Amazon CloudWatch Logs log group must begin with the `/aws/fsx` prefix. If you do not provide a destination, Amazon FSx will create and use a log stream in the CloudWatch Logs `/aws/fsx/lustre` log group.
func (o LustreFileSystemLogConfigurationOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LustreFileSystemLogConfiguration) *string { return v.Destination }).(pulumi.StringPtrOutput)
}

// Sets which data repository events are logged by Amazon FSx. Valid values are `WARN_ONLY`, `FAILURE_ONLY`, `ERROR_ONLY`, `WARN_ERROR` and `DISABLED`. Default value is `DISABLED`.
func (o LustreFileSystemLogConfigurationOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LustreFileSystemLogConfiguration) *string { return v.Level }).(pulumi.StringPtrOutput)
}

type LustreFileSystemLogConfigurationPtrOutput struct{ *pulumi.OutputState }

func (LustreFileSystemLogConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LustreFileSystemLogConfiguration)(nil)).Elem()
}

func (o LustreFileSystemLogConfigurationPtrOutput) ToLustreFileSystemLogConfigurationPtrOutput() LustreFileSystemLogConfigurationPtrOutput {
	return o
}

func (o LustreFileSystemLogConfigurationPtrOutput) ToLustreFileSystemLogConfigurationPtrOutputWithContext(ctx context.Context) LustreFileSystemLogConfigurationPtrOutput {
	return o
}

func (o LustreFileSystemLogConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*LustreFileSystemLogConfiguration] {
	return pulumix.Output[*LustreFileSystemLogConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o LustreFileSystemLogConfigurationPtrOutput) Elem() LustreFileSystemLogConfigurationOutput {
	return o.ApplyT(func(v *LustreFileSystemLogConfiguration) LustreFileSystemLogConfiguration {
		if v != nil {
			return *v
		}
		var ret LustreFileSystemLogConfiguration
		return ret
	}).(LustreFileSystemLogConfigurationOutput)
}

// The Amazon Resource Name (ARN) that specifies the destination of the logs. The name of the Amazon CloudWatch Logs log group must begin with the `/aws/fsx` prefix. If you do not provide a destination, Amazon FSx will create and use a log stream in the CloudWatch Logs `/aws/fsx/lustre` log group.
func (o LustreFileSystemLogConfigurationPtrOutput) Destination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LustreFileSystemLogConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Destination
	}).(pulumi.StringPtrOutput)
}

// Sets which data repository events are logged by Amazon FSx. Valid values are `WARN_ONLY`, `FAILURE_ONLY`, `ERROR_ONLY`, `WARN_ERROR` and `DISABLED`. Default value is `DISABLED`.
func (o LustreFileSystemLogConfigurationPtrOutput) Level() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LustreFileSystemLogConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Level
	}).(pulumi.StringPtrOutput)
}

type LustreFileSystemRootSquashConfiguration struct {
	// When root squash is enabled, you can optionally specify an array of NIDs of clients for which root squash does not apply. A client NID is a Lustre Network Identifier used to uniquely identify a client. You can specify the NID as either a single address or a range of addresses: 1. A single address is described in standard Lustre NID format by specifying the client’s IP address followed by the Lustre network ID (for example, 10.0.1.6@tcp). 2. An address range is described using a dash to separate the range (for example, 10.0.[2-10].[1-255]@tcp).
	NoSquashNids []string `pulumi:"noSquashNids"`
	// You enable root squash by setting a user ID (UID) and group ID (GID) for the file system in the format UID:GID (for example, 365534:65534). The UID and GID values can range from 0 to 4294967294.
	RootSquash *string `pulumi:"rootSquash"`
}

// LustreFileSystemRootSquashConfigurationInput is an input type that accepts LustreFileSystemRootSquashConfigurationArgs and LustreFileSystemRootSquashConfigurationOutput values.
// You can construct a concrete instance of `LustreFileSystemRootSquashConfigurationInput` via:
//
//	LustreFileSystemRootSquashConfigurationArgs{...}
type LustreFileSystemRootSquashConfigurationInput interface {
	pulumi.Input

	ToLustreFileSystemRootSquashConfigurationOutput() LustreFileSystemRootSquashConfigurationOutput
	ToLustreFileSystemRootSquashConfigurationOutputWithContext(context.Context) LustreFileSystemRootSquashConfigurationOutput
}

type LustreFileSystemRootSquashConfigurationArgs struct {
	// When root squash is enabled, you can optionally specify an array of NIDs of clients for which root squash does not apply. A client NID is a Lustre Network Identifier used to uniquely identify a client. You can specify the NID as either a single address or a range of addresses: 1. A single address is described in standard Lustre NID format by specifying the client’s IP address followed by the Lustre network ID (for example, 10.0.1.6@tcp). 2. An address range is described using a dash to separate the range (for example, 10.0.[2-10].[1-255]@tcp).
	NoSquashNids pulumi.StringArrayInput `pulumi:"noSquashNids"`
	// You enable root squash by setting a user ID (UID) and group ID (GID) for the file system in the format UID:GID (for example, 365534:65534). The UID and GID values can range from 0 to 4294967294.
	RootSquash pulumi.StringPtrInput `pulumi:"rootSquash"`
}

func (LustreFileSystemRootSquashConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LustreFileSystemRootSquashConfiguration)(nil)).Elem()
}

func (i LustreFileSystemRootSquashConfigurationArgs) ToLustreFileSystemRootSquashConfigurationOutput() LustreFileSystemRootSquashConfigurationOutput {
	return i.ToLustreFileSystemRootSquashConfigurationOutputWithContext(context.Background())
}

func (i LustreFileSystemRootSquashConfigurationArgs) ToLustreFileSystemRootSquashConfigurationOutputWithContext(ctx context.Context) LustreFileSystemRootSquashConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LustreFileSystemRootSquashConfigurationOutput)
}

func (i LustreFileSystemRootSquashConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[LustreFileSystemRootSquashConfiguration] {
	return pulumix.Output[LustreFileSystemRootSquashConfiguration]{
		OutputState: i.ToLustreFileSystemRootSquashConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i LustreFileSystemRootSquashConfigurationArgs) ToLustreFileSystemRootSquashConfigurationPtrOutput() LustreFileSystemRootSquashConfigurationPtrOutput {
	return i.ToLustreFileSystemRootSquashConfigurationPtrOutputWithContext(context.Background())
}

func (i LustreFileSystemRootSquashConfigurationArgs) ToLustreFileSystemRootSquashConfigurationPtrOutputWithContext(ctx context.Context) LustreFileSystemRootSquashConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LustreFileSystemRootSquashConfigurationOutput).ToLustreFileSystemRootSquashConfigurationPtrOutputWithContext(ctx)
}

// LustreFileSystemRootSquashConfigurationPtrInput is an input type that accepts LustreFileSystemRootSquashConfigurationArgs, LustreFileSystemRootSquashConfigurationPtr and LustreFileSystemRootSquashConfigurationPtrOutput values.
// You can construct a concrete instance of `LustreFileSystemRootSquashConfigurationPtrInput` via:
//
//	        LustreFileSystemRootSquashConfigurationArgs{...}
//
//	or:
//
//	        nil
type LustreFileSystemRootSquashConfigurationPtrInput interface {
	pulumi.Input

	ToLustreFileSystemRootSquashConfigurationPtrOutput() LustreFileSystemRootSquashConfigurationPtrOutput
	ToLustreFileSystemRootSquashConfigurationPtrOutputWithContext(context.Context) LustreFileSystemRootSquashConfigurationPtrOutput
}

type lustreFileSystemRootSquashConfigurationPtrType LustreFileSystemRootSquashConfigurationArgs

func LustreFileSystemRootSquashConfigurationPtr(v *LustreFileSystemRootSquashConfigurationArgs) LustreFileSystemRootSquashConfigurationPtrInput {
	return (*lustreFileSystemRootSquashConfigurationPtrType)(v)
}

func (*lustreFileSystemRootSquashConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LustreFileSystemRootSquashConfiguration)(nil)).Elem()
}

func (i *lustreFileSystemRootSquashConfigurationPtrType) ToLustreFileSystemRootSquashConfigurationPtrOutput() LustreFileSystemRootSquashConfigurationPtrOutput {
	return i.ToLustreFileSystemRootSquashConfigurationPtrOutputWithContext(context.Background())
}

func (i *lustreFileSystemRootSquashConfigurationPtrType) ToLustreFileSystemRootSquashConfigurationPtrOutputWithContext(ctx context.Context) LustreFileSystemRootSquashConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LustreFileSystemRootSquashConfigurationPtrOutput)
}

func (i *lustreFileSystemRootSquashConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*LustreFileSystemRootSquashConfiguration] {
	return pulumix.Output[*LustreFileSystemRootSquashConfiguration]{
		OutputState: i.ToLustreFileSystemRootSquashConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type LustreFileSystemRootSquashConfigurationOutput struct{ *pulumi.OutputState }

func (LustreFileSystemRootSquashConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LustreFileSystemRootSquashConfiguration)(nil)).Elem()
}

func (o LustreFileSystemRootSquashConfigurationOutput) ToLustreFileSystemRootSquashConfigurationOutput() LustreFileSystemRootSquashConfigurationOutput {
	return o
}

func (o LustreFileSystemRootSquashConfigurationOutput) ToLustreFileSystemRootSquashConfigurationOutputWithContext(ctx context.Context) LustreFileSystemRootSquashConfigurationOutput {
	return o
}

func (o LustreFileSystemRootSquashConfigurationOutput) ToLustreFileSystemRootSquashConfigurationPtrOutput() LustreFileSystemRootSquashConfigurationPtrOutput {
	return o.ToLustreFileSystemRootSquashConfigurationPtrOutputWithContext(context.Background())
}

func (o LustreFileSystemRootSquashConfigurationOutput) ToLustreFileSystemRootSquashConfigurationPtrOutputWithContext(ctx context.Context) LustreFileSystemRootSquashConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LustreFileSystemRootSquashConfiguration) *LustreFileSystemRootSquashConfiguration {
		return &v
	}).(LustreFileSystemRootSquashConfigurationPtrOutput)
}

func (o LustreFileSystemRootSquashConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[LustreFileSystemRootSquashConfiguration] {
	return pulumix.Output[LustreFileSystemRootSquashConfiguration]{
		OutputState: o.OutputState,
	}
}

// When root squash is enabled, you can optionally specify an array of NIDs of clients for which root squash does not apply. A client NID is a Lustre Network Identifier used to uniquely identify a client. You can specify the NID as either a single address or a range of addresses: 1. A single address is described in standard Lustre NID format by specifying the client’s IP address followed by the Lustre network ID (for example, 10.0.1.6@tcp). 2. An address range is described using a dash to separate the range (for example, 10.0.[2-10].[1-255]@tcp).
func (o LustreFileSystemRootSquashConfigurationOutput) NoSquashNids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LustreFileSystemRootSquashConfiguration) []string { return v.NoSquashNids }).(pulumi.StringArrayOutput)
}

// You enable root squash by setting a user ID (UID) and group ID (GID) for the file system in the format UID:GID (for example, 365534:65534). The UID and GID values can range from 0 to 4294967294.
func (o LustreFileSystemRootSquashConfigurationOutput) RootSquash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LustreFileSystemRootSquashConfiguration) *string { return v.RootSquash }).(pulumi.StringPtrOutput)
}

type LustreFileSystemRootSquashConfigurationPtrOutput struct{ *pulumi.OutputState }

func (LustreFileSystemRootSquashConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LustreFileSystemRootSquashConfiguration)(nil)).Elem()
}

func (o LustreFileSystemRootSquashConfigurationPtrOutput) ToLustreFileSystemRootSquashConfigurationPtrOutput() LustreFileSystemRootSquashConfigurationPtrOutput {
	return o
}

func (o LustreFileSystemRootSquashConfigurationPtrOutput) ToLustreFileSystemRootSquashConfigurationPtrOutputWithContext(ctx context.Context) LustreFileSystemRootSquashConfigurationPtrOutput {
	return o
}

func (o LustreFileSystemRootSquashConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*LustreFileSystemRootSquashConfiguration] {
	return pulumix.Output[*LustreFileSystemRootSquashConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o LustreFileSystemRootSquashConfigurationPtrOutput) Elem() LustreFileSystemRootSquashConfigurationOutput {
	return o.ApplyT(func(v *LustreFileSystemRootSquashConfiguration) LustreFileSystemRootSquashConfiguration {
		if v != nil {
			return *v
		}
		var ret LustreFileSystemRootSquashConfiguration
		return ret
	}).(LustreFileSystemRootSquashConfigurationOutput)
}

// When root squash is enabled, you can optionally specify an array of NIDs of clients for which root squash does not apply. A client NID is a Lustre Network Identifier used to uniquely identify a client. You can specify the NID as either a single address or a range of addresses: 1. A single address is described in standard Lustre NID format by specifying the client’s IP address followed by the Lustre network ID (for example, 10.0.1.6@tcp). 2. An address range is described using a dash to separate the range (for example, 10.0.[2-10].[1-255]@tcp).
func (o LustreFileSystemRootSquashConfigurationPtrOutput) NoSquashNids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *LustreFileSystemRootSquashConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.NoSquashNids
	}).(pulumi.StringArrayOutput)
}

// You enable root squash by setting a user ID (UID) and group ID (GID) for the file system in the format UID:GID (for example, 365534:65534). The UID and GID values can range from 0 to 4294967294.
func (o LustreFileSystemRootSquashConfigurationPtrOutput) RootSquash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LustreFileSystemRootSquashConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RootSquash
	}).(pulumi.StringPtrOutput)
}

type OntapFileSystemDiskIopsConfiguration struct {
	// The total number of SSD IOPS provisioned for the file system.
	Iops *int `pulumi:"iops"`
	// Specifies whether the number of IOPS for the file system is using the system. Valid values are `AUTOMATIC` and `USER_PROVISIONED`. Default value is `AUTOMATIC`.
	Mode *string `pulumi:"mode"`
}

// OntapFileSystemDiskIopsConfigurationInput is an input type that accepts OntapFileSystemDiskIopsConfigurationArgs and OntapFileSystemDiskIopsConfigurationOutput values.
// You can construct a concrete instance of `OntapFileSystemDiskIopsConfigurationInput` via:
//
//	OntapFileSystemDiskIopsConfigurationArgs{...}
type OntapFileSystemDiskIopsConfigurationInput interface {
	pulumi.Input

	ToOntapFileSystemDiskIopsConfigurationOutput() OntapFileSystemDiskIopsConfigurationOutput
	ToOntapFileSystemDiskIopsConfigurationOutputWithContext(context.Context) OntapFileSystemDiskIopsConfigurationOutput
}

type OntapFileSystemDiskIopsConfigurationArgs struct {
	// The total number of SSD IOPS provisioned for the file system.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Specifies whether the number of IOPS for the file system is using the system. Valid values are `AUTOMATIC` and `USER_PROVISIONED`. Default value is `AUTOMATIC`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (OntapFileSystemDiskIopsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapFileSystemDiskIopsConfiguration)(nil)).Elem()
}

func (i OntapFileSystemDiskIopsConfigurationArgs) ToOntapFileSystemDiskIopsConfigurationOutput() OntapFileSystemDiskIopsConfigurationOutput {
	return i.ToOntapFileSystemDiskIopsConfigurationOutputWithContext(context.Background())
}

func (i OntapFileSystemDiskIopsConfigurationArgs) ToOntapFileSystemDiskIopsConfigurationOutputWithContext(ctx context.Context) OntapFileSystemDiskIopsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapFileSystemDiskIopsConfigurationOutput)
}

func (i OntapFileSystemDiskIopsConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[OntapFileSystemDiskIopsConfiguration] {
	return pulumix.Output[OntapFileSystemDiskIopsConfiguration]{
		OutputState: i.ToOntapFileSystemDiskIopsConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i OntapFileSystemDiskIopsConfigurationArgs) ToOntapFileSystemDiskIopsConfigurationPtrOutput() OntapFileSystemDiskIopsConfigurationPtrOutput {
	return i.ToOntapFileSystemDiskIopsConfigurationPtrOutputWithContext(context.Background())
}

func (i OntapFileSystemDiskIopsConfigurationArgs) ToOntapFileSystemDiskIopsConfigurationPtrOutputWithContext(ctx context.Context) OntapFileSystemDiskIopsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapFileSystemDiskIopsConfigurationOutput).ToOntapFileSystemDiskIopsConfigurationPtrOutputWithContext(ctx)
}

// OntapFileSystemDiskIopsConfigurationPtrInput is an input type that accepts OntapFileSystemDiskIopsConfigurationArgs, OntapFileSystemDiskIopsConfigurationPtr and OntapFileSystemDiskIopsConfigurationPtrOutput values.
// You can construct a concrete instance of `OntapFileSystemDiskIopsConfigurationPtrInput` via:
//
//	        OntapFileSystemDiskIopsConfigurationArgs{...}
//
//	or:
//
//	        nil
type OntapFileSystemDiskIopsConfigurationPtrInput interface {
	pulumi.Input

	ToOntapFileSystemDiskIopsConfigurationPtrOutput() OntapFileSystemDiskIopsConfigurationPtrOutput
	ToOntapFileSystemDiskIopsConfigurationPtrOutputWithContext(context.Context) OntapFileSystemDiskIopsConfigurationPtrOutput
}

type ontapFileSystemDiskIopsConfigurationPtrType OntapFileSystemDiskIopsConfigurationArgs

func OntapFileSystemDiskIopsConfigurationPtr(v *OntapFileSystemDiskIopsConfigurationArgs) OntapFileSystemDiskIopsConfigurationPtrInput {
	return (*ontapFileSystemDiskIopsConfigurationPtrType)(v)
}

func (*ontapFileSystemDiskIopsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OntapFileSystemDiskIopsConfiguration)(nil)).Elem()
}

func (i *ontapFileSystemDiskIopsConfigurationPtrType) ToOntapFileSystemDiskIopsConfigurationPtrOutput() OntapFileSystemDiskIopsConfigurationPtrOutput {
	return i.ToOntapFileSystemDiskIopsConfigurationPtrOutputWithContext(context.Background())
}

func (i *ontapFileSystemDiskIopsConfigurationPtrType) ToOntapFileSystemDiskIopsConfigurationPtrOutputWithContext(ctx context.Context) OntapFileSystemDiskIopsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapFileSystemDiskIopsConfigurationPtrOutput)
}

func (i *ontapFileSystemDiskIopsConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*OntapFileSystemDiskIopsConfiguration] {
	return pulumix.Output[*OntapFileSystemDiskIopsConfiguration]{
		OutputState: i.ToOntapFileSystemDiskIopsConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type OntapFileSystemDiskIopsConfigurationOutput struct{ *pulumi.OutputState }

func (OntapFileSystemDiskIopsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapFileSystemDiskIopsConfiguration)(nil)).Elem()
}

func (o OntapFileSystemDiskIopsConfigurationOutput) ToOntapFileSystemDiskIopsConfigurationOutput() OntapFileSystemDiskIopsConfigurationOutput {
	return o
}

func (o OntapFileSystemDiskIopsConfigurationOutput) ToOntapFileSystemDiskIopsConfigurationOutputWithContext(ctx context.Context) OntapFileSystemDiskIopsConfigurationOutput {
	return o
}

func (o OntapFileSystemDiskIopsConfigurationOutput) ToOntapFileSystemDiskIopsConfigurationPtrOutput() OntapFileSystemDiskIopsConfigurationPtrOutput {
	return o.ToOntapFileSystemDiskIopsConfigurationPtrOutputWithContext(context.Background())
}

func (o OntapFileSystemDiskIopsConfigurationOutput) ToOntapFileSystemDiskIopsConfigurationPtrOutputWithContext(ctx context.Context) OntapFileSystemDiskIopsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OntapFileSystemDiskIopsConfiguration) *OntapFileSystemDiskIopsConfiguration {
		return &v
	}).(OntapFileSystemDiskIopsConfigurationPtrOutput)
}

func (o OntapFileSystemDiskIopsConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[OntapFileSystemDiskIopsConfiguration] {
	return pulumix.Output[OntapFileSystemDiskIopsConfiguration]{
		OutputState: o.OutputState,
	}
}

// The total number of SSD IOPS provisioned for the file system.
func (o OntapFileSystemDiskIopsConfigurationOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OntapFileSystemDiskIopsConfiguration) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Specifies whether the number of IOPS for the file system is using the system. Valid values are `AUTOMATIC` and `USER_PROVISIONED`. Default value is `AUTOMATIC`.
func (o OntapFileSystemDiskIopsConfigurationOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OntapFileSystemDiskIopsConfiguration) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type OntapFileSystemDiskIopsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (OntapFileSystemDiskIopsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OntapFileSystemDiskIopsConfiguration)(nil)).Elem()
}

func (o OntapFileSystemDiskIopsConfigurationPtrOutput) ToOntapFileSystemDiskIopsConfigurationPtrOutput() OntapFileSystemDiskIopsConfigurationPtrOutput {
	return o
}

func (o OntapFileSystemDiskIopsConfigurationPtrOutput) ToOntapFileSystemDiskIopsConfigurationPtrOutputWithContext(ctx context.Context) OntapFileSystemDiskIopsConfigurationPtrOutput {
	return o
}

func (o OntapFileSystemDiskIopsConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OntapFileSystemDiskIopsConfiguration] {
	return pulumix.Output[*OntapFileSystemDiskIopsConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o OntapFileSystemDiskIopsConfigurationPtrOutput) Elem() OntapFileSystemDiskIopsConfigurationOutput {
	return o.ApplyT(func(v *OntapFileSystemDiskIopsConfiguration) OntapFileSystemDiskIopsConfiguration {
		if v != nil {
			return *v
		}
		var ret OntapFileSystemDiskIopsConfiguration
		return ret
	}).(OntapFileSystemDiskIopsConfigurationOutput)
}

// The total number of SSD IOPS provisioned for the file system.
func (o OntapFileSystemDiskIopsConfigurationPtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OntapFileSystemDiskIopsConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

// Specifies whether the number of IOPS for the file system is using the system. Valid values are `AUTOMATIC` and `USER_PROVISIONED`. Default value is `AUTOMATIC`.
func (o OntapFileSystemDiskIopsConfigurationPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OntapFileSystemDiskIopsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type OntapFileSystemEndpoint struct {
	// An endpoint for managing your file system by setting up NetApp SnapMirror with other ONTAP systems. See Endpoint.
	Interclusters []OntapFileSystemEndpointIntercluster `pulumi:"interclusters"`
	// An endpoint for managing your file system using the NetApp ONTAP CLI and NetApp ONTAP API. See Endpoint.
	Managements []OntapFileSystemEndpointManagement `pulumi:"managements"`
}

// OntapFileSystemEndpointInput is an input type that accepts OntapFileSystemEndpointArgs and OntapFileSystemEndpointOutput values.
// You can construct a concrete instance of `OntapFileSystemEndpointInput` via:
//
//	OntapFileSystemEndpointArgs{...}
type OntapFileSystemEndpointInput interface {
	pulumi.Input

	ToOntapFileSystemEndpointOutput() OntapFileSystemEndpointOutput
	ToOntapFileSystemEndpointOutputWithContext(context.Context) OntapFileSystemEndpointOutput
}

type OntapFileSystemEndpointArgs struct {
	// An endpoint for managing your file system by setting up NetApp SnapMirror with other ONTAP systems. See Endpoint.
	Interclusters OntapFileSystemEndpointInterclusterArrayInput `pulumi:"interclusters"`
	// An endpoint for managing your file system using the NetApp ONTAP CLI and NetApp ONTAP API. See Endpoint.
	Managements OntapFileSystemEndpointManagementArrayInput `pulumi:"managements"`
}

func (OntapFileSystemEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapFileSystemEndpoint)(nil)).Elem()
}

func (i OntapFileSystemEndpointArgs) ToOntapFileSystemEndpointOutput() OntapFileSystemEndpointOutput {
	return i.ToOntapFileSystemEndpointOutputWithContext(context.Background())
}

func (i OntapFileSystemEndpointArgs) ToOntapFileSystemEndpointOutputWithContext(ctx context.Context) OntapFileSystemEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapFileSystemEndpointOutput)
}

func (i OntapFileSystemEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[OntapFileSystemEndpoint] {
	return pulumix.Output[OntapFileSystemEndpoint]{
		OutputState: i.ToOntapFileSystemEndpointOutputWithContext(ctx).OutputState,
	}
}

// OntapFileSystemEndpointArrayInput is an input type that accepts OntapFileSystemEndpointArray and OntapFileSystemEndpointArrayOutput values.
// You can construct a concrete instance of `OntapFileSystemEndpointArrayInput` via:
//
//	OntapFileSystemEndpointArray{ OntapFileSystemEndpointArgs{...} }
type OntapFileSystemEndpointArrayInput interface {
	pulumi.Input

	ToOntapFileSystemEndpointArrayOutput() OntapFileSystemEndpointArrayOutput
	ToOntapFileSystemEndpointArrayOutputWithContext(context.Context) OntapFileSystemEndpointArrayOutput
}

type OntapFileSystemEndpointArray []OntapFileSystemEndpointInput

func (OntapFileSystemEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapFileSystemEndpoint)(nil)).Elem()
}

func (i OntapFileSystemEndpointArray) ToOntapFileSystemEndpointArrayOutput() OntapFileSystemEndpointArrayOutput {
	return i.ToOntapFileSystemEndpointArrayOutputWithContext(context.Background())
}

func (i OntapFileSystemEndpointArray) ToOntapFileSystemEndpointArrayOutputWithContext(ctx context.Context) OntapFileSystemEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapFileSystemEndpointArrayOutput)
}

func (i OntapFileSystemEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]OntapFileSystemEndpoint] {
	return pulumix.Output[[]OntapFileSystemEndpoint]{
		OutputState: i.ToOntapFileSystemEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type OntapFileSystemEndpointOutput struct{ *pulumi.OutputState }

func (OntapFileSystemEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapFileSystemEndpoint)(nil)).Elem()
}

func (o OntapFileSystemEndpointOutput) ToOntapFileSystemEndpointOutput() OntapFileSystemEndpointOutput {
	return o
}

func (o OntapFileSystemEndpointOutput) ToOntapFileSystemEndpointOutputWithContext(ctx context.Context) OntapFileSystemEndpointOutput {
	return o
}

func (o OntapFileSystemEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[OntapFileSystemEndpoint] {
	return pulumix.Output[OntapFileSystemEndpoint]{
		OutputState: o.OutputState,
	}
}

// An endpoint for managing your file system by setting up NetApp SnapMirror with other ONTAP systems. See Endpoint.
func (o OntapFileSystemEndpointOutput) Interclusters() OntapFileSystemEndpointInterclusterArrayOutput {
	return o.ApplyT(func(v OntapFileSystemEndpoint) []OntapFileSystemEndpointIntercluster { return v.Interclusters }).(OntapFileSystemEndpointInterclusterArrayOutput)
}

// An endpoint for managing your file system using the NetApp ONTAP CLI and NetApp ONTAP API. See Endpoint.
func (o OntapFileSystemEndpointOutput) Managements() OntapFileSystemEndpointManagementArrayOutput {
	return o.ApplyT(func(v OntapFileSystemEndpoint) []OntapFileSystemEndpointManagement { return v.Managements }).(OntapFileSystemEndpointManagementArrayOutput)
}

type OntapFileSystemEndpointArrayOutput struct{ *pulumi.OutputState }

func (OntapFileSystemEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapFileSystemEndpoint)(nil)).Elem()
}

func (o OntapFileSystemEndpointArrayOutput) ToOntapFileSystemEndpointArrayOutput() OntapFileSystemEndpointArrayOutput {
	return o
}

func (o OntapFileSystemEndpointArrayOutput) ToOntapFileSystemEndpointArrayOutputWithContext(ctx context.Context) OntapFileSystemEndpointArrayOutput {
	return o
}

func (o OntapFileSystemEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OntapFileSystemEndpoint] {
	return pulumix.Output[[]OntapFileSystemEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o OntapFileSystemEndpointArrayOutput) Index(i pulumi.IntInput) OntapFileSystemEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OntapFileSystemEndpoint {
		return vs[0].([]OntapFileSystemEndpoint)[vs[1].(int)]
	}).(OntapFileSystemEndpointOutput)
}

type OntapFileSystemEndpointIntercluster struct {
	// The Domain Name Service (DNS) name for the file system. You can mount your file system using its DNS name.
	DnsName *string `pulumi:"dnsName"`
	// IP addresses of the file system endpoint.
	IpAddresses []string `pulumi:"ipAddresses"`
}

// OntapFileSystemEndpointInterclusterInput is an input type that accepts OntapFileSystemEndpointInterclusterArgs and OntapFileSystemEndpointInterclusterOutput values.
// You can construct a concrete instance of `OntapFileSystemEndpointInterclusterInput` via:
//
//	OntapFileSystemEndpointInterclusterArgs{...}
type OntapFileSystemEndpointInterclusterInput interface {
	pulumi.Input

	ToOntapFileSystemEndpointInterclusterOutput() OntapFileSystemEndpointInterclusterOutput
	ToOntapFileSystemEndpointInterclusterOutputWithContext(context.Context) OntapFileSystemEndpointInterclusterOutput
}

type OntapFileSystemEndpointInterclusterArgs struct {
	// The Domain Name Service (DNS) name for the file system. You can mount your file system using its DNS name.
	DnsName pulumi.StringPtrInput `pulumi:"dnsName"`
	// IP addresses of the file system endpoint.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (OntapFileSystemEndpointInterclusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapFileSystemEndpointIntercluster)(nil)).Elem()
}

func (i OntapFileSystemEndpointInterclusterArgs) ToOntapFileSystemEndpointInterclusterOutput() OntapFileSystemEndpointInterclusterOutput {
	return i.ToOntapFileSystemEndpointInterclusterOutputWithContext(context.Background())
}

func (i OntapFileSystemEndpointInterclusterArgs) ToOntapFileSystemEndpointInterclusterOutputWithContext(ctx context.Context) OntapFileSystemEndpointInterclusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapFileSystemEndpointInterclusterOutput)
}

func (i OntapFileSystemEndpointInterclusterArgs) ToOutput(ctx context.Context) pulumix.Output[OntapFileSystemEndpointIntercluster] {
	return pulumix.Output[OntapFileSystemEndpointIntercluster]{
		OutputState: i.ToOntapFileSystemEndpointInterclusterOutputWithContext(ctx).OutputState,
	}
}

// OntapFileSystemEndpointInterclusterArrayInput is an input type that accepts OntapFileSystemEndpointInterclusterArray and OntapFileSystemEndpointInterclusterArrayOutput values.
// You can construct a concrete instance of `OntapFileSystemEndpointInterclusterArrayInput` via:
//
//	OntapFileSystemEndpointInterclusterArray{ OntapFileSystemEndpointInterclusterArgs{...} }
type OntapFileSystemEndpointInterclusterArrayInput interface {
	pulumi.Input

	ToOntapFileSystemEndpointInterclusterArrayOutput() OntapFileSystemEndpointInterclusterArrayOutput
	ToOntapFileSystemEndpointInterclusterArrayOutputWithContext(context.Context) OntapFileSystemEndpointInterclusterArrayOutput
}

type OntapFileSystemEndpointInterclusterArray []OntapFileSystemEndpointInterclusterInput

func (OntapFileSystemEndpointInterclusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapFileSystemEndpointIntercluster)(nil)).Elem()
}

func (i OntapFileSystemEndpointInterclusterArray) ToOntapFileSystemEndpointInterclusterArrayOutput() OntapFileSystemEndpointInterclusterArrayOutput {
	return i.ToOntapFileSystemEndpointInterclusterArrayOutputWithContext(context.Background())
}

func (i OntapFileSystemEndpointInterclusterArray) ToOntapFileSystemEndpointInterclusterArrayOutputWithContext(ctx context.Context) OntapFileSystemEndpointInterclusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapFileSystemEndpointInterclusterArrayOutput)
}

func (i OntapFileSystemEndpointInterclusterArray) ToOutput(ctx context.Context) pulumix.Output[[]OntapFileSystemEndpointIntercluster] {
	return pulumix.Output[[]OntapFileSystemEndpointIntercluster]{
		OutputState: i.ToOntapFileSystemEndpointInterclusterArrayOutputWithContext(ctx).OutputState,
	}
}

type OntapFileSystemEndpointInterclusterOutput struct{ *pulumi.OutputState }

func (OntapFileSystemEndpointInterclusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapFileSystemEndpointIntercluster)(nil)).Elem()
}

func (o OntapFileSystemEndpointInterclusterOutput) ToOntapFileSystemEndpointInterclusterOutput() OntapFileSystemEndpointInterclusterOutput {
	return o
}

func (o OntapFileSystemEndpointInterclusterOutput) ToOntapFileSystemEndpointInterclusterOutputWithContext(ctx context.Context) OntapFileSystemEndpointInterclusterOutput {
	return o
}

func (o OntapFileSystemEndpointInterclusterOutput) ToOutput(ctx context.Context) pulumix.Output[OntapFileSystemEndpointIntercluster] {
	return pulumix.Output[OntapFileSystemEndpointIntercluster]{
		OutputState: o.OutputState,
	}
}

// The Domain Name Service (DNS) name for the file system. You can mount your file system using its DNS name.
func (o OntapFileSystemEndpointInterclusterOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OntapFileSystemEndpointIntercluster) *string { return v.DnsName }).(pulumi.StringPtrOutput)
}

// IP addresses of the file system endpoint.
func (o OntapFileSystemEndpointInterclusterOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OntapFileSystemEndpointIntercluster) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type OntapFileSystemEndpointInterclusterArrayOutput struct{ *pulumi.OutputState }

func (OntapFileSystemEndpointInterclusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapFileSystemEndpointIntercluster)(nil)).Elem()
}

func (o OntapFileSystemEndpointInterclusterArrayOutput) ToOntapFileSystemEndpointInterclusterArrayOutput() OntapFileSystemEndpointInterclusterArrayOutput {
	return o
}

func (o OntapFileSystemEndpointInterclusterArrayOutput) ToOntapFileSystemEndpointInterclusterArrayOutputWithContext(ctx context.Context) OntapFileSystemEndpointInterclusterArrayOutput {
	return o
}

func (o OntapFileSystemEndpointInterclusterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OntapFileSystemEndpointIntercluster] {
	return pulumix.Output[[]OntapFileSystemEndpointIntercluster]{
		OutputState: o.OutputState,
	}
}

func (o OntapFileSystemEndpointInterclusterArrayOutput) Index(i pulumi.IntInput) OntapFileSystemEndpointInterclusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OntapFileSystemEndpointIntercluster {
		return vs[0].([]OntapFileSystemEndpointIntercluster)[vs[1].(int)]
	}).(OntapFileSystemEndpointInterclusterOutput)
}

type OntapFileSystemEndpointManagement struct {
	// The Domain Name Service (DNS) name for the file system. You can mount your file system using its DNS name.
	DnsName *string `pulumi:"dnsName"`
	// IP addresses of the file system endpoint.
	IpAddresses []string `pulumi:"ipAddresses"`
}

// OntapFileSystemEndpointManagementInput is an input type that accepts OntapFileSystemEndpointManagementArgs and OntapFileSystemEndpointManagementOutput values.
// You can construct a concrete instance of `OntapFileSystemEndpointManagementInput` via:
//
//	OntapFileSystemEndpointManagementArgs{...}
type OntapFileSystemEndpointManagementInput interface {
	pulumi.Input

	ToOntapFileSystemEndpointManagementOutput() OntapFileSystemEndpointManagementOutput
	ToOntapFileSystemEndpointManagementOutputWithContext(context.Context) OntapFileSystemEndpointManagementOutput
}

type OntapFileSystemEndpointManagementArgs struct {
	// The Domain Name Service (DNS) name for the file system. You can mount your file system using its DNS name.
	DnsName pulumi.StringPtrInput `pulumi:"dnsName"`
	// IP addresses of the file system endpoint.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (OntapFileSystemEndpointManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapFileSystemEndpointManagement)(nil)).Elem()
}

func (i OntapFileSystemEndpointManagementArgs) ToOntapFileSystemEndpointManagementOutput() OntapFileSystemEndpointManagementOutput {
	return i.ToOntapFileSystemEndpointManagementOutputWithContext(context.Background())
}

func (i OntapFileSystemEndpointManagementArgs) ToOntapFileSystemEndpointManagementOutputWithContext(ctx context.Context) OntapFileSystemEndpointManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapFileSystemEndpointManagementOutput)
}

func (i OntapFileSystemEndpointManagementArgs) ToOutput(ctx context.Context) pulumix.Output[OntapFileSystemEndpointManagement] {
	return pulumix.Output[OntapFileSystemEndpointManagement]{
		OutputState: i.ToOntapFileSystemEndpointManagementOutputWithContext(ctx).OutputState,
	}
}

// OntapFileSystemEndpointManagementArrayInput is an input type that accepts OntapFileSystemEndpointManagementArray and OntapFileSystemEndpointManagementArrayOutput values.
// You can construct a concrete instance of `OntapFileSystemEndpointManagementArrayInput` via:
//
//	OntapFileSystemEndpointManagementArray{ OntapFileSystemEndpointManagementArgs{...} }
type OntapFileSystemEndpointManagementArrayInput interface {
	pulumi.Input

	ToOntapFileSystemEndpointManagementArrayOutput() OntapFileSystemEndpointManagementArrayOutput
	ToOntapFileSystemEndpointManagementArrayOutputWithContext(context.Context) OntapFileSystemEndpointManagementArrayOutput
}

type OntapFileSystemEndpointManagementArray []OntapFileSystemEndpointManagementInput

func (OntapFileSystemEndpointManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapFileSystemEndpointManagement)(nil)).Elem()
}

func (i OntapFileSystemEndpointManagementArray) ToOntapFileSystemEndpointManagementArrayOutput() OntapFileSystemEndpointManagementArrayOutput {
	return i.ToOntapFileSystemEndpointManagementArrayOutputWithContext(context.Background())
}

func (i OntapFileSystemEndpointManagementArray) ToOntapFileSystemEndpointManagementArrayOutputWithContext(ctx context.Context) OntapFileSystemEndpointManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapFileSystemEndpointManagementArrayOutput)
}

func (i OntapFileSystemEndpointManagementArray) ToOutput(ctx context.Context) pulumix.Output[[]OntapFileSystemEndpointManagement] {
	return pulumix.Output[[]OntapFileSystemEndpointManagement]{
		OutputState: i.ToOntapFileSystemEndpointManagementArrayOutputWithContext(ctx).OutputState,
	}
}

type OntapFileSystemEndpointManagementOutput struct{ *pulumi.OutputState }

func (OntapFileSystemEndpointManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapFileSystemEndpointManagement)(nil)).Elem()
}

func (o OntapFileSystemEndpointManagementOutput) ToOntapFileSystemEndpointManagementOutput() OntapFileSystemEndpointManagementOutput {
	return o
}

func (o OntapFileSystemEndpointManagementOutput) ToOntapFileSystemEndpointManagementOutputWithContext(ctx context.Context) OntapFileSystemEndpointManagementOutput {
	return o
}

func (o OntapFileSystemEndpointManagementOutput) ToOutput(ctx context.Context) pulumix.Output[OntapFileSystemEndpointManagement] {
	return pulumix.Output[OntapFileSystemEndpointManagement]{
		OutputState: o.OutputState,
	}
}

// The Domain Name Service (DNS) name for the file system. You can mount your file system using its DNS name.
func (o OntapFileSystemEndpointManagementOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OntapFileSystemEndpointManagement) *string { return v.DnsName }).(pulumi.StringPtrOutput)
}

// IP addresses of the file system endpoint.
func (o OntapFileSystemEndpointManagementOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OntapFileSystemEndpointManagement) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type OntapFileSystemEndpointManagementArrayOutput struct{ *pulumi.OutputState }

func (OntapFileSystemEndpointManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapFileSystemEndpointManagement)(nil)).Elem()
}

func (o OntapFileSystemEndpointManagementArrayOutput) ToOntapFileSystemEndpointManagementArrayOutput() OntapFileSystemEndpointManagementArrayOutput {
	return o
}

func (o OntapFileSystemEndpointManagementArrayOutput) ToOntapFileSystemEndpointManagementArrayOutputWithContext(ctx context.Context) OntapFileSystemEndpointManagementArrayOutput {
	return o
}

func (o OntapFileSystemEndpointManagementArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OntapFileSystemEndpointManagement] {
	return pulumix.Output[[]OntapFileSystemEndpointManagement]{
		OutputState: o.OutputState,
	}
}

func (o OntapFileSystemEndpointManagementArrayOutput) Index(i pulumi.IntInput) OntapFileSystemEndpointManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OntapFileSystemEndpointManagement {
		return vs[0].([]OntapFileSystemEndpointManagement)[vs[1].(int)]
	}).(OntapFileSystemEndpointManagementOutput)
}

type OntapStorageVirtualMachineActiveDirectoryConfiguration struct {
	// The NetBIOS name of the Active Directory computer object that will be created for your SVM. This is often the same as the SVM name but can be different. AWS limits to 15 characters because of standard NetBIOS naming limits.
	NetbiosName                             *string                                                                                        `pulumi:"netbiosName"`
	SelfManagedActiveDirectoryConfiguration *OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration `pulumi:"selfManagedActiveDirectoryConfiguration"`
}

// OntapStorageVirtualMachineActiveDirectoryConfigurationInput is an input type that accepts OntapStorageVirtualMachineActiveDirectoryConfigurationArgs and OntapStorageVirtualMachineActiveDirectoryConfigurationOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineActiveDirectoryConfigurationInput` via:
//
//	OntapStorageVirtualMachineActiveDirectoryConfigurationArgs{...}
type OntapStorageVirtualMachineActiveDirectoryConfigurationInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineActiveDirectoryConfigurationOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationOutput
	ToOntapStorageVirtualMachineActiveDirectoryConfigurationOutputWithContext(context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationOutput
}

type OntapStorageVirtualMachineActiveDirectoryConfigurationArgs struct {
	// The NetBIOS name of the Active Directory computer object that will be created for your SVM. This is often the same as the SVM name but can be different. AWS limits to 15 characters because of standard NetBIOS naming limits.
	NetbiosName                             pulumi.StringPtrInput                                                                                 `pulumi:"netbiosName"`
	SelfManagedActiveDirectoryConfiguration OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrInput `pulumi:"selfManagedActiveDirectoryConfiguration"`
}

func (OntapStorageVirtualMachineActiveDirectoryConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineActiveDirectoryConfiguration)(nil)).Elem()
}

func (i OntapStorageVirtualMachineActiveDirectoryConfigurationArgs) ToOntapStorageVirtualMachineActiveDirectoryConfigurationOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationOutput {
	return i.ToOntapStorageVirtualMachineActiveDirectoryConfigurationOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineActiveDirectoryConfigurationArgs) ToOntapStorageVirtualMachineActiveDirectoryConfigurationOutputWithContext(ctx context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineActiveDirectoryConfigurationOutput)
}

func (i OntapStorageVirtualMachineActiveDirectoryConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[OntapStorageVirtualMachineActiveDirectoryConfiguration] {
	return pulumix.Output[OntapStorageVirtualMachineActiveDirectoryConfiguration]{
		OutputState: i.ToOntapStorageVirtualMachineActiveDirectoryConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i OntapStorageVirtualMachineActiveDirectoryConfigurationArgs) ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput {
	return i.ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineActiveDirectoryConfigurationArgs) ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutputWithContext(ctx context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineActiveDirectoryConfigurationOutput).ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutputWithContext(ctx)
}

// OntapStorageVirtualMachineActiveDirectoryConfigurationPtrInput is an input type that accepts OntapStorageVirtualMachineActiveDirectoryConfigurationArgs, OntapStorageVirtualMachineActiveDirectoryConfigurationPtr and OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineActiveDirectoryConfigurationPtrInput` via:
//
//	        OntapStorageVirtualMachineActiveDirectoryConfigurationArgs{...}
//
//	or:
//
//	        nil
type OntapStorageVirtualMachineActiveDirectoryConfigurationPtrInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput
	ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutputWithContext(context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput
}

type ontapStorageVirtualMachineActiveDirectoryConfigurationPtrType OntapStorageVirtualMachineActiveDirectoryConfigurationArgs

func OntapStorageVirtualMachineActiveDirectoryConfigurationPtr(v *OntapStorageVirtualMachineActiveDirectoryConfigurationArgs) OntapStorageVirtualMachineActiveDirectoryConfigurationPtrInput {
	return (*ontapStorageVirtualMachineActiveDirectoryConfigurationPtrType)(v)
}

func (*ontapStorageVirtualMachineActiveDirectoryConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OntapStorageVirtualMachineActiveDirectoryConfiguration)(nil)).Elem()
}

func (i *ontapStorageVirtualMachineActiveDirectoryConfigurationPtrType) ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput {
	return i.ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutputWithContext(context.Background())
}

func (i *ontapStorageVirtualMachineActiveDirectoryConfigurationPtrType) ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutputWithContext(ctx context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput)
}

func (i *ontapStorageVirtualMachineActiveDirectoryConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*OntapStorageVirtualMachineActiveDirectoryConfiguration] {
	return pulumix.Output[*OntapStorageVirtualMachineActiveDirectoryConfiguration]{
		OutputState: i.ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type OntapStorageVirtualMachineActiveDirectoryConfigurationOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineActiveDirectoryConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineActiveDirectoryConfiguration)(nil)).Elem()
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationOutput) ToOntapStorageVirtualMachineActiveDirectoryConfigurationOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationOutput {
	return o
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationOutput) ToOntapStorageVirtualMachineActiveDirectoryConfigurationOutputWithContext(ctx context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationOutput {
	return o
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationOutput) ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput {
	return o.ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutputWithContext(context.Background())
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationOutput) ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutputWithContext(ctx context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OntapStorageVirtualMachineActiveDirectoryConfiguration) *OntapStorageVirtualMachineActiveDirectoryConfiguration {
		return &v
	}).(OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput)
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[OntapStorageVirtualMachineActiveDirectoryConfiguration] {
	return pulumix.Output[OntapStorageVirtualMachineActiveDirectoryConfiguration]{
		OutputState: o.OutputState,
	}
}

// The NetBIOS name of the Active Directory computer object that will be created for your SVM. This is often the same as the SVM name but can be different. AWS limits to 15 characters because of standard NetBIOS naming limits.
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationOutput) NetbiosName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineActiveDirectoryConfiguration) *string { return v.NetbiosName }).(pulumi.StringPtrOutput)
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationOutput) SelfManagedActiveDirectoryConfiguration() OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineActiveDirectoryConfiguration) *OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration {
		return v.SelfManagedActiveDirectoryConfiguration
	}).(OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput)
}

type OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OntapStorageVirtualMachineActiveDirectoryConfiguration)(nil)).Elem()
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput) ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput {
	return o
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput) ToOntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutputWithContext(ctx context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput {
	return o
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OntapStorageVirtualMachineActiveDirectoryConfiguration] {
	return pulumix.Output[*OntapStorageVirtualMachineActiveDirectoryConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput) Elem() OntapStorageVirtualMachineActiveDirectoryConfigurationOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachineActiveDirectoryConfiguration) OntapStorageVirtualMachineActiveDirectoryConfiguration {
		if v != nil {
			return *v
		}
		var ret OntapStorageVirtualMachineActiveDirectoryConfiguration
		return ret
	}).(OntapStorageVirtualMachineActiveDirectoryConfigurationOutput)
}

// The NetBIOS name of the Active Directory computer object that will be created for your SVM. This is often the same as the SVM name but can be different. AWS limits to 15 characters because of standard NetBIOS naming limits.
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput) NetbiosName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachineActiveDirectoryConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.NetbiosName
	}).(pulumi.StringPtrOutput)
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput) SelfManagedActiveDirectoryConfiguration() OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachineActiveDirectoryConfiguration) *OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration {
		if v == nil {
			return nil
		}
		return v.SelfManagedActiveDirectoryConfiguration
	}).(OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput)
}

type OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration struct {
	// A list of up to three IP addresses of DNS servers or domain controllers in the self-managed AD directory.
	DnsIps []string `pulumi:"dnsIps"`
	// The fully qualified domain name of the self-managed AD directory. For example, `corp.example.com`.
	DomainName string `pulumi:"domainName"`
	// The name of the domain group whose members are granted administrative privileges for the SVM. The group that you specify must already exist in your domain. Defaults to `Domain Admins`.
	FileSystemAdministratorsGroup *string `pulumi:"fileSystemAdministratorsGroup"`
	// The fully qualified distinguished name of the organizational unit within your self-managed AD directory that the Windows File Server instance will join. For example, `OU=FSx,DC=yourdomain,DC=corp,DC=com`. Only accepts OU as the direct parent of the SVM. If none is provided, the SVM is created in the default location of your self-managed AD directory. To learn more, see [RFC 2253](https://tools.ietf.org/html/rfc2253).
	OrganizationalUnitDistinguishedName *string `pulumi:"organizationalUnitDistinguishedName"`
	// The password for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
	Password string `pulumi:"password"`
	// The user name for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
	Username string `pulumi:"username"`
}

// OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationInput is an input type that accepts OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs and OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationInput` via:
//
//	OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs{...}
type OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput
	ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutputWithContext(context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput
}

type OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs struct {
	// A list of up to three IP addresses of DNS servers or domain controllers in the self-managed AD directory.
	DnsIps pulumi.StringArrayInput `pulumi:"dnsIps"`
	// The fully qualified domain name of the self-managed AD directory. For example, `corp.example.com`.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// The name of the domain group whose members are granted administrative privileges for the SVM. The group that you specify must already exist in your domain. Defaults to `Domain Admins`.
	FileSystemAdministratorsGroup pulumi.StringPtrInput `pulumi:"fileSystemAdministratorsGroup"`
	// The fully qualified distinguished name of the organizational unit within your self-managed AD directory that the Windows File Server instance will join. For example, `OU=FSx,DC=yourdomain,DC=corp,DC=com`. Only accepts OU as the direct parent of the SVM. If none is provided, the SVM is created in the default location of your self-managed AD directory. To learn more, see [RFC 2253](https://tools.ietf.org/html/rfc2253).
	OrganizationalUnitDistinguishedName pulumi.StringPtrInput `pulumi:"organizationalUnitDistinguishedName"`
	// The password for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
	Password pulumi.StringInput `pulumi:"password"`
	// The user name for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
	Username pulumi.StringInput `pulumi:"username"`
}

func (OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration)(nil)).Elem()
}

func (i OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs) ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput {
	return i.ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs) ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutputWithContext(ctx context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput)
}

func (i OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration] {
	return pulumix.Output[OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration]{
		OutputState: i.ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs) ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput {
	return i.ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs) ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutputWithContext(ctx context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput).ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutputWithContext(ctx)
}

// OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrInput is an input type that accepts OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs, OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtr and OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrInput` via:
//
//	        OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs{...}
//
//	or:
//
//	        nil
type OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput
	ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutputWithContext(context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput
}

type ontapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrType OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs

func OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtr(v *OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs) OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrInput {
	return (*ontapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrType)(v)
}

func (*ontapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration)(nil)).Elem()
}

func (i *ontapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrType) ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput {
	return i.ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutputWithContext(context.Background())
}

func (i *ontapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrType) ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutputWithContext(ctx context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput)
}

func (i *ontapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration] {
	return pulumix.Output[*OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration]{
		OutputState: i.ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration)(nil)).Elem()
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput {
	return o
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutputWithContext(ctx context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput {
	return o
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput {
	return o.ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutputWithContext(context.Background())
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutputWithContext(ctx context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) *OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration {
		return &v
	}).(OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput)
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration] {
	return pulumix.Output[OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration]{
		OutputState: o.OutputState,
	}
}

// A list of up to three IP addresses of DNS servers or domain controllers in the self-managed AD directory.
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) DnsIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) []string {
		return v.DnsIps
	}).(pulumi.StringArrayOutput)
}

// The fully qualified domain name of the self-managed AD directory. For example, `corp.example.com`.
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) string {
		return v.DomainName
	}).(pulumi.StringOutput)
}

// The name of the domain group whose members are granted administrative privileges for the SVM. The group that you specify must already exist in your domain. Defaults to `Domain Admins`.
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) FileSystemAdministratorsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) *string {
		return v.FileSystemAdministratorsGroup
	}).(pulumi.StringPtrOutput)
}

// The fully qualified distinguished name of the organizational unit within your self-managed AD directory that the Windows File Server instance will join. For example, `OU=FSx,DC=yourdomain,DC=corp,DC=com`. Only accepts OU as the direct parent of the SVM. If none is provided, the SVM is created in the default location of your self-managed AD directory. To learn more, see [RFC 2253](https://tools.ietf.org/html/rfc2253).
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) OrganizationalUnitDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) *string {
		return v.OrganizationalUnitDistinguishedName
	}).(pulumi.StringPtrOutput)
}

// The password for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) string {
		return v.Password
	}).(pulumi.StringOutput)
}

// The user name for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) string {
		return v.Username
	}).(pulumi.StringOutput)
}

type OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration)(nil)).Elem()
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput) ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput() OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput {
	return o
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput) ToOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutputWithContext(ctx context.Context) OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput {
	return o
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration] {
	return pulumix.Output[*OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput) Elem() OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration {
		if v != nil {
			return *v
		}
		var ret OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration
		return ret
	}).(OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput)
}

// A list of up to three IP addresses of DNS servers or domain controllers in the self-managed AD directory.
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput) DnsIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.DnsIps
	}).(pulumi.StringArrayOutput)
}

// The fully qualified domain name of the self-managed AD directory. For example, `corp.example.com`.
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.DomainName
	}).(pulumi.StringPtrOutput)
}

// The name of the domain group whose members are granted administrative privileges for the SVM. The group that you specify must already exist in your domain. Defaults to `Domain Admins`.
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput) FileSystemAdministratorsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.FileSystemAdministratorsGroup
	}).(pulumi.StringPtrOutput)
}

// The fully qualified distinguished name of the organizational unit within your self-managed AD directory that the Windows File Server instance will join. For example, `OU=FSx,DC=yourdomain,DC=corp,DC=com`. Only accepts OU as the direct parent of the SVM. If none is provided, the SVM is created in the default location of your self-managed AD directory. To learn more, see [RFC 2253](https://tools.ietf.org/html/rfc2253).
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput) OrganizationalUnitDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.OrganizationalUnitDistinguishedName
	}).(pulumi.StringPtrOutput)
}

// The password for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The user name for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
func (o OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type OntapStorageVirtualMachineEndpoint struct {
	// An endpoint for accessing data on your storage virtual machine via iSCSI protocol. See Endpoint.
	Iscsis []OntapStorageVirtualMachineEndpointIscsi `pulumi:"iscsis"`
	// An endpoint for managing your file system using the NetApp ONTAP CLI and NetApp ONTAP API. See Endpoint.
	Managements []OntapStorageVirtualMachineEndpointManagement `pulumi:"managements"`
	// An endpoint for accessing data on your storage virtual machine via NFS protocol. See Endpoint.
	Nfs []OntapStorageVirtualMachineEndpointNf `pulumi:"nfs"`
	// An endpoint for accessing data on your storage virtual machine via SMB protocol. This is only set if an activeDirectoryConfiguration has been set. See Endpoint.
	Smbs []OntapStorageVirtualMachineEndpointSmb `pulumi:"smbs"`
}

// OntapStorageVirtualMachineEndpointInput is an input type that accepts OntapStorageVirtualMachineEndpointArgs and OntapStorageVirtualMachineEndpointOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineEndpointInput` via:
//
//	OntapStorageVirtualMachineEndpointArgs{...}
type OntapStorageVirtualMachineEndpointInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineEndpointOutput() OntapStorageVirtualMachineEndpointOutput
	ToOntapStorageVirtualMachineEndpointOutputWithContext(context.Context) OntapStorageVirtualMachineEndpointOutput
}

type OntapStorageVirtualMachineEndpointArgs struct {
	// An endpoint for accessing data on your storage virtual machine via iSCSI protocol. See Endpoint.
	Iscsis OntapStorageVirtualMachineEndpointIscsiArrayInput `pulumi:"iscsis"`
	// An endpoint for managing your file system using the NetApp ONTAP CLI and NetApp ONTAP API. See Endpoint.
	Managements OntapStorageVirtualMachineEndpointManagementArrayInput `pulumi:"managements"`
	// An endpoint for accessing data on your storage virtual machine via NFS protocol. See Endpoint.
	Nfs OntapStorageVirtualMachineEndpointNfArrayInput `pulumi:"nfs"`
	// An endpoint for accessing data on your storage virtual machine via SMB protocol. This is only set if an activeDirectoryConfiguration has been set. See Endpoint.
	Smbs OntapStorageVirtualMachineEndpointSmbArrayInput `pulumi:"smbs"`
}

func (OntapStorageVirtualMachineEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineEndpoint)(nil)).Elem()
}

func (i OntapStorageVirtualMachineEndpointArgs) ToOntapStorageVirtualMachineEndpointOutput() OntapStorageVirtualMachineEndpointOutput {
	return i.ToOntapStorageVirtualMachineEndpointOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineEndpointArgs) ToOntapStorageVirtualMachineEndpointOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineEndpointOutput)
}

func (i OntapStorageVirtualMachineEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[OntapStorageVirtualMachineEndpoint] {
	return pulumix.Output[OntapStorageVirtualMachineEndpoint]{
		OutputState: i.ToOntapStorageVirtualMachineEndpointOutputWithContext(ctx).OutputState,
	}
}

// OntapStorageVirtualMachineEndpointArrayInput is an input type that accepts OntapStorageVirtualMachineEndpointArray and OntapStorageVirtualMachineEndpointArrayOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineEndpointArrayInput` via:
//
//	OntapStorageVirtualMachineEndpointArray{ OntapStorageVirtualMachineEndpointArgs{...} }
type OntapStorageVirtualMachineEndpointArrayInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineEndpointArrayOutput() OntapStorageVirtualMachineEndpointArrayOutput
	ToOntapStorageVirtualMachineEndpointArrayOutputWithContext(context.Context) OntapStorageVirtualMachineEndpointArrayOutput
}

type OntapStorageVirtualMachineEndpointArray []OntapStorageVirtualMachineEndpointInput

func (OntapStorageVirtualMachineEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapStorageVirtualMachineEndpoint)(nil)).Elem()
}

func (i OntapStorageVirtualMachineEndpointArray) ToOntapStorageVirtualMachineEndpointArrayOutput() OntapStorageVirtualMachineEndpointArrayOutput {
	return i.ToOntapStorageVirtualMachineEndpointArrayOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineEndpointArray) ToOntapStorageVirtualMachineEndpointArrayOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineEndpointArrayOutput)
}

func (i OntapStorageVirtualMachineEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]OntapStorageVirtualMachineEndpoint] {
	return pulumix.Output[[]OntapStorageVirtualMachineEndpoint]{
		OutputState: i.ToOntapStorageVirtualMachineEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type OntapStorageVirtualMachineEndpointOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineEndpoint)(nil)).Elem()
}

func (o OntapStorageVirtualMachineEndpointOutput) ToOntapStorageVirtualMachineEndpointOutput() OntapStorageVirtualMachineEndpointOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointOutput) ToOntapStorageVirtualMachineEndpointOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[OntapStorageVirtualMachineEndpoint] {
	return pulumix.Output[OntapStorageVirtualMachineEndpoint]{
		OutputState: o.OutputState,
	}
}

// An endpoint for accessing data on your storage virtual machine via iSCSI protocol. See Endpoint.
func (o OntapStorageVirtualMachineEndpointOutput) Iscsis() OntapStorageVirtualMachineEndpointIscsiArrayOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineEndpoint) []OntapStorageVirtualMachineEndpointIscsi { return v.Iscsis }).(OntapStorageVirtualMachineEndpointIscsiArrayOutput)
}

// An endpoint for managing your file system using the NetApp ONTAP CLI and NetApp ONTAP API. See Endpoint.
func (o OntapStorageVirtualMachineEndpointOutput) Managements() OntapStorageVirtualMachineEndpointManagementArrayOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineEndpoint) []OntapStorageVirtualMachineEndpointManagement {
		return v.Managements
	}).(OntapStorageVirtualMachineEndpointManagementArrayOutput)
}

// An endpoint for accessing data on your storage virtual machine via NFS protocol. See Endpoint.
func (o OntapStorageVirtualMachineEndpointOutput) Nfs() OntapStorageVirtualMachineEndpointNfArrayOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineEndpoint) []OntapStorageVirtualMachineEndpointNf { return v.Nfs }).(OntapStorageVirtualMachineEndpointNfArrayOutput)
}

// An endpoint for accessing data on your storage virtual machine via SMB protocol. This is only set if an activeDirectoryConfiguration has been set. See Endpoint.
func (o OntapStorageVirtualMachineEndpointOutput) Smbs() OntapStorageVirtualMachineEndpointSmbArrayOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineEndpoint) []OntapStorageVirtualMachineEndpointSmb { return v.Smbs }).(OntapStorageVirtualMachineEndpointSmbArrayOutput)
}

type OntapStorageVirtualMachineEndpointArrayOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapStorageVirtualMachineEndpoint)(nil)).Elem()
}

func (o OntapStorageVirtualMachineEndpointArrayOutput) ToOntapStorageVirtualMachineEndpointArrayOutput() OntapStorageVirtualMachineEndpointArrayOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointArrayOutput) ToOntapStorageVirtualMachineEndpointArrayOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointArrayOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OntapStorageVirtualMachineEndpoint] {
	return pulumix.Output[[]OntapStorageVirtualMachineEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o OntapStorageVirtualMachineEndpointArrayOutput) Index(i pulumi.IntInput) OntapStorageVirtualMachineEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OntapStorageVirtualMachineEndpoint {
		return vs[0].([]OntapStorageVirtualMachineEndpoint)[vs[1].(int)]
	}).(OntapStorageVirtualMachineEndpointOutput)
}

type OntapStorageVirtualMachineEndpointIscsi struct {
	// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
	DnsName *string `pulumi:"dnsName"`
	// IP addresses of the storage virtual machine endpoint.
	IpAddresses []string `pulumi:"ipAddresses"`
}

// OntapStorageVirtualMachineEndpointIscsiInput is an input type that accepts OntapStorageVirtualMachineEndpointIscsiArgs and OntapStorageVirtualMachineEndpointIscsiOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineEndpointIscsiInput` via:
//
//	OntapStorageVirtualMachineEndpointIscsiArgs{...}
type OntapStorageVirtualMachineEndpointIscsiInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineEndpointIscsiOutput() OntapStorageVirtualMachineEndpointIscsiOutput
	ToOntapStorageVirtualMachineEndpointIscsiOutputWithContext(context.Context) OntapStorageVirtualMachineEndpointIscsiOutput
}

type OntapStorageVirtualMachineEndpointIscsiArgs struct {
	// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
	DnsName pulumi.StringPtrInput `pulumi:"dnsName"`
	// IP addresses of the storage virtual machine endpoint.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (OntapStorageVirtualMachineEndpointIscsiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineEndpointIscsi)(nil)).Elem()
}

func (i OntapStorageVirtualMachineEndpointIscsiArgs) ToOntapStorageVirtualMachineEndpointIscsiOutput() OntapStorageVirtualMachineEndpointIscsiOutput {
	return i.ToOntapStorageVirtualMachineEndpointIscsiOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineEndpointIscsiArgs) ToOntapStorageVirtualMachineEndpointIscsiOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointIscsiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineEndpointIscsiOutput)
}

func (i OntapStorageVirtualMachineEndpointIscsiArgs) ToOutput(ctx context.Context) pulumix.Output[OntapStorageVirtualMachineEndpointIscsi] {
	return pulumix.Output[OntapStorageVirtualMachineEndpointIscsi]{
		OutputState: i.ToOntapStorageVirtualMachineEndpointIscsiOutputWithContext(ctx).OutputState,
	}
}

// OntapStorageVirtualMachineEndpointIscsiArrayInput is an input type that accepts OntapStorageVirtualMachineEndpointIscsiArray and OntapStorageVirtualMachineEndpointIscsiArrayOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineEndpointIscsiArrayInput` via:
//
//	OntapStorageVirtualMachineEndpointIscsiArray{ OntapStorageVirtualMachineEndpointIscsiArgs{...} }
type OntapStorageVirtualMachineEndpointIscsiArrayInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineEndpointIscsiArrayOutput() OntapStorageVirtualMachineEndpointIscsiArrayOutput
	ToOntapStorageVirtualMachineEndpointIscsiArrayOutputWithContext(context.Context) OntapStorageVirtualMachineEndpointIscsiArrayOutput
}

type OntapStorageVirtualMachineEndpointIscsiArray []OntapStorageVirtualMachineEndpointIscsiInput

func (OntapStorageVirtualMachineEndpointIscsiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapStorageVirtualMachineEndpointIscsi)(nil)).Elem()
}

func (i OntapStorageVirtualMachineEndpointIscsiArray) ToOntapStorageVirtualMachineEndpointIscsiArrayOutput() OntapStorageVirtualMachineEndpointIscsiArrayOutput {
	return i.ToOntapStorageVirtualMachineEndpointIscsiArrayOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineEndpointIscsiArray) ToOntapStorageVirtualMachineEndpointIscsiArrayOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointIscsiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineEndpointIscsiArrayOutput)
}

func (i OntapStorageVirtualMachineEndpointIscsiArray) ToOutput(ctx context.Context) pulumix.Output[[]OntapStorageVirtualMachineEndpointIscsi] {
	return pulumix.Output[[]OntapStorageVirtualMachineEndpointIscsi]{
		OutputState: i.ToOntapStorageVirtualMachineEndpointIscsiArrayOutputWithContext(ctx).OutputState,
	}
}

type OntapStorageVirtualMachineEndpointIscsiOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineEndpointIscsiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineEndpointIscsi)(nil)).Elem()
}

func (o OntapStorageVirtualMachineEndpointIscsiOutput) ToOntapStorageVirtualMachineEndpointIscsiOutput() OntapStorageVirtualMachineEndpointIscsiOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointIscsiOutput) ToOntapStorageVirtualMachineEndpointIscsiOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointIscsiOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointIscsiOutput) ToOutput(ctx context.Context) pulumix.Output[OntapStorageVirtualMachineEndpointIscsi] {
	return pulumix.Output[OntapStorageVirtualMachineEndpointIscsi]{
		OutputState: o.OutputState,
	}
}

// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
func (o OntapStorageVirtualMachineEndpointIscsiOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineEndpointIscsi) *string { return v.DnsName }).(pulumi.StringPtrOutput)
}

// IP addresses of the storage virtual machine endpoint.
func (o OntapStorageVirtualMachineEndpointIscsiOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineEndpointIscsi) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type OntapStorageVirtualMachineEndpointIscsiArrayOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineEndpointIscsiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapStorageVirtualMachineEndpointIscsi)(nil)).Elem()
}

func (o OntapStorageVirtualMachineEndpointIscsiArrayOutput) ToOntapStorageVirtualMachineEndpointIscsiArrayOutput() OntapStorageVirtualMachineEndpointIscsiArrayOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointIscsiArrayOutput) ToOntapStorageVirtualMachineEndpointIscsiArrayOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointIscsiArrayOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointIscsiArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OntapStorageVirtualMachineEndpointIscsi] {
	return pulumix.Output[[]OntapStorageVirtualMachineEndpointIscsi]{
		OutputState: o.OutputState,
	}
}

func (o OntapStorageVirtualMachineEndpointIscsiArrayOutput) Index(i pulumi.IntInput) OntapStorageVirtualMachineEndpointIscsiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OntapStorageVirtualMachineEndpointIscsi {
		return vs[0].([]OntapStorageVirtualMachineEndpointIscsi)[vs[1].(int)]
	}).(OntapStorageVirtualMachineEndpointIscsiOutput)
}

type OntapStorageVirtualMachineEndpointManagement struct {
	// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
	DnsName *string `pulumi:"dnsName"`
	// IP addresses of the storage virtual machine endpoint.
	IpAddresses []string `pulumi:"ipAddresses"`
}

// OntapStorageVirtualMachineEndpointManagementInput is an input type that accepts OntapStorageVirtualMachineEndpointManagementArgs and OntapStorageVirtualMachineEndpointManagementOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineEndpointManagementInput` via:
//
//	OntapStorageVirtualMachineEndpointManagementArgs{...}
type OntapStorageVirtualMachineEndpointManagementInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineEndpointManagementOutput() OntapStorageVirtualMachineEndpointManagementOutput
	ToOntapStorageVirtualMachineEndpointManagementOutputWithContext(context.Context) OntapStorageVirtualMachineEndpointManagementOutput
}

type OntapStorageVirtualMachineEndpointManagementArgs struct {
	// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
	DnsName pulumi.StringPtrInput `pulumi:"dnsName"`
	// IP addresses of the storage virtual machine endpoint.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (OntapStorageVirtualMachineEndpointManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineEndpointManagement)(nil)).Elem()
}

func (i OntapStorageVirtualMachineEndpointManagementArgs) ToOntapStorageVirtualMachineEndpointManagementOutput() OntapStorageVirtualMachineEndpointManagementOutput {
	return i.ToOntapStorageVirtualMachineEndpointManagementOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineEndpointManagementArgs) ToOntapStorageVirtualMachineEndpointManagementOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineEndpointManagementOutput)
}

func (i OntapStorageVirtualMachineEndpointManagementArgs) ToOutput(ctx context.Context) pulumix.Output[OntapStorageVirtualMachineEndpointManagement] {
	return pulumix.Output[OntapStorageVirtualMachineEndpointManagement]{
		OutputState: i.ToOntapStorageVirtualMachineEndpointManagementOutputWithContext(ctx).OutputState,
	}
}

// OntapStorageVirtualMachineEndpointManagementArrayInput is an input type that accepts OntapStorageVirtualMachineEndpointManagementArray and OntapStorageVirtualMachineEndpointManagementArrayOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineEndpointManagementArrayInput` via:
//
//	OntapStorageVirtualMachineEndpointManagementArray{ OntapStorageVirtualMachineEndpointManagementArgs{...} }
type OntapStorageVirtualMachineEndpointManagementArrayInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineEndpointManagementArrayOutput() OntapStorageVirtualMachineEndpointManagementArrayOutput
	ToOntapStorageVirtualMachineEndpointManagementArrayOutputWithContext(context.Context) OntapStorageVirtualMachineEndpointManagementArrayOutput
}

type OntapStorageVirtualMachineEndpointManagementArray []OntapStorageVirtualMachineEndpointManagementInput

func (OntapStorageVirtualMachineEndpointManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapStorageVirtualMachineEndpointManagement)(nil)).Elem()
}

func (i OntapStorageVirtualMachineEndpointManagementArray) ToOntapStorageVirtualMachineEndpointManagementArrayOutput() OntapStorageVirtualMachineEndpointManagementArrayOutput {
	return i.ToOntapStorageVirtualMachineEndpointManagementArrayOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineEndpointManagementArray) ToOntapStorageVirtualMachineEndpointManagementArrayOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineEndpointManagementArrayOutput)
}

func (i OntapStorageVirtualMachineEndpointManagementArray) ToOutput(ctx context.Context) pulumix.Output[[]OntapStorageVirtualMachineEndpointManagement] {
	return pulumix.Output[[]OntapStorageVirtualMachineEndpointManagement]{
		OutputState: i.ToOntapStorageVirtualMachineEndpointManagementArrayOutputWithContext(ctx).OutputState,
	}
}

type OntapStorageVirtualMachineEndpointManagementOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineEndpointManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineEndpointManagement)(nil)).Elem()
}

func (o OntapStorageVirtualMachineEndpointManagementOutput) ToOntapStorageVirtualMachineEndpointManagementOutput() OntapStorageVirtualMachineEndpointManagementOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointManagementOutput) ToOntapStorageVirtualMachineEndpointManagementOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointManagementOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointManagementOutput) ToOutput(ctx context.Context) pulumix.Output[OntapStorageVirtualMachineEndpointManagement] {
	return pulumix.Output[OntapStorageVirtualMachineEndpointManagement]{
		OutputState: o.OutputState,
	}
}

// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
func (o OntapStorageVirtualMachineEndpointManagementOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineEndpointManagement) *string { return v.DnsName }).(pulumi.StringPtrOutput)
}

// IP addresses of the storage virtual machine endpoint.
func (o OntapStorageVirtualMachineEndpointManagementOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineEndpointManagement) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type OntapStorageVirtualMachineEndpointManagementArrayOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineEndpointManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapStorageVirtualMachineEndpointManagement)(nil)).Elem()
}

func (o OntapStorageVirtualMachineEndpointManagementArrayOutput) ToOntapStorageVirtualMachineEndpointManagementArrayOutput() OntapStorageVirtualMachineEndpointManagementArrayOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointManagementArrayOutput) ToOntapStorageVirtualMachineEndpointManagementArrayOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointManagementArrayOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointManagementArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OntapStorageVirtualMachineEndpointManagement] {
	return pulumix.Output[[]OntapStorageVirtualMachineEndpointManagement]{
		OutputState: o.OutputState,
	}
}

func (o OntapStorageVirtualMachineEndpointManagementArrayOutput) Index(i pulumi.IntInput) OntapStorageVirtualMachineEndpointManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OntapStorageVirtualMachineEndpointManagement {
		return vs[0].([]OntapStorageVirtualMachineEndpointManagement)[vs[1].(int)]
	}).(OntapStorageVirtualMachineEndpointManagementOutput)
}

type OntapStorageVirtualMachineEndpointNf struct {
	// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
	DnsName *string `pulumi:"dnsName"`
	// IP addresses of the storage virtual machine endpoint.
	IpAddresses []string `pulumi:"ipAddresses"`
}

// OntapStorageVirtualMachineEndpointNfInput is an input type that accepts OntapStorageVirtualMachineEndpointNfArgs and OntapStorageVirtualMachineEndpointNfOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineEndpointNfInput` via:
//
//	OntapStorageVirtualMachineEndpointNfArgs{...}
type OntapStorageVirtualMachineEndpointNfInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineEndpointNfOutput() OntapStorageVirtualMachineEndpointNfOutput
	ToOntapStorageVirtualMachineEndpointNfOutputWithContext(context.Context) OntapStorageVirtualMachineEndpointNfOutput
}

type OntapStorageVirtualMachineEndpointNfArgs struct {
	// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
	DnsName pulumi.StringPtrInput `pulumi:"dnsName"`
	// IP addresses of the storage virtual machine endpoint.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (OntapStorageVirtualMachineEndpointNfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineEndpointNf)(nil)).Elem()
}

func (i OntapStorageVirtualMachineEndpointNfArgs) ToOntapStorageVirtualMachineEndpointNfOutput() OntapStorageVirtualMachineEndpointNfOutput {
	return i.ToOntapStorageVirtualMachineEndpointNfOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineEndpointNfArgs) ToOntapStorageVirtualMachineEndpointNfOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointNfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineEndpointNfOutput)
}

func (i OntapStorageVirtualMachineEndpointNfArgs) ToOutput(ctx context.Context) pulumix.Output[OntapStorageVirtualMachineEndpointNf] {
	return pulumix.Output[OntapStorageVirtualMachineEndpointNf]{
		OutputState: i.ToOntapStorageVirtualMachineEndpointNfOutputWithContext(ctx).OutputState,
	}
}

// OntapStorageVirtualMachineEndpointNfArrayInput is an input type that accepts OntapStorageVirtualMachineEndpointNfArray and OntapStorageVirtualMachineEndpointNfArrayOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineEndpointNfArrayInput` via:
//
//	OntapStorageVirtualMachineEndpointNfArray{ OntapStorageVirtualMachineEndpointNfArgs{...} }
type OntapStorageVirtualMachineEndpointNfArrayInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineEndpointNfArrayOutput() OntapStorageVirtualMachineEndpointNfArrayOutput
	ToOntapStorageVirtualMachineEndpointNfArrayOutputWithContext(context.Context) OntapStorageVirtualMachineEndpointNfArrayOutput
}

type OntapStorageVirtualMachineEndpointNfArray []OntapStorageVirtualMachineEndpointNfInput

func (OntapStorageVirtualMachineEndpointNfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapStorageVirtualMachineEndpointNf)(nil)).Elem()
}

func (i OntapStorageVirtualMachineEndpointNfArray) ToOntapStorageVirtualMachineEndpointNfArrayOutput() OntapStorageVirtualMachineEndpointNfArrayOutput {
	return i.ToOntapStorageVirtualMachineEndpointNfArrayOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineEndpointNfArray) ToOntapStorageVirtualMachineEndpointNfArrayOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointNfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineEndpointNfArrayOutput)
}

func (i OntapStorageVirtualMachineEndpointNfArray) ToOutput(ctx context.Context) pulumix.Output[[]OntapStorageVirtualMachineEndpointNf] {
	return pulumix.Output[[]OntapStorageVirtualMachineEndpointNf]{
		OutputState: i.ToOntapStorageVirtualMachineEndpointNfArrayOutputWithContext(ctx).OutputState,
	}
}

type OntapStorageVirtualMachineEndpointNfOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineEndpointNfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineEndpointNf)(nil)).Elem()
}

func (o OntapStorageVirtualMachineEndpointNfOutput) ToOntapStorageVirtualMachineEndpointNfOutput() OntapStorageVirtualMachineEndpointNfOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointNfOutput) ToOntapStorageVirtualMachineEndpointNfOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointNfOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointNfOutput) ToOutput(ctx context.Context) pulumix.Output[OntapStorageVirtualMachineEndpointNf] {
	return pulumix.Output[OntapStorageVirtualMachineEndpointNf]{
		OutputState: o.OutputState,
	}
}

// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
func (o OntapStorageVirtualMachineEndpointNfOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineEndpointNf) *string { return v.DnsName }).(pulumi.StringPtrOutput)
}

// IP addresses of the storage virtual machine endpoint.
func (o OntapStorageVirtualMachineEndpointNfOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineEndpointNf) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type OntapStorageVirtualMachineEndpointNfArrayOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineEndpointNfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapStorageVirtualMachineEndpointNf)(nil)).Elem()
}

func (o OntapStorageVirtualMachineEndpointNfArrayOutput) ToOntapStorageVirtualMachineEndpointNfArrayOutput() OntapStorageVirtualMachineEndpointNfArrayOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointNfArrayOutput) ToOntapStorageVirtualMachineEndpointNfArrayOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointNfArrayOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointNfArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OntapStorageVirtualMachineEndpointNf] {
	return pulumix.Output[[]OntapStorageVirtualMachineEndpointNf]{
		OutputState: o.OutputState,
	}
}

func (o OntapStorageVirtualMachineEndpointNfArrayOutput) Index(i pulumi.IntInput) OntapStorageVirtualMachineEndpointNfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OntapStorageVirtualMachineEndpointNf {
		return vs[0].([]OntapStorageVirtualMachineEndpointNf)[vs[1].(int)]
	}).(OntapStorageVirtualMachineEndpointNfOutput)
}

type OntapStorageVirtualMachineEndpointSmb struct {
	// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
	DnsName *string `pulumi:"dnsName"`
	// IP addresses of the storage virtual machine endpoint.
	IpAddresses []string `pulumi:"ipAddresses"`
}

// OntapStorageVirtualMachineEndpointSmbInput is an input type that accepts OntapStorageVirtualMachineEndpointSmbArgs and OntapStorageVirtualMachineEndpointSmbOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineEndpointSmbInput` via:
//
//	OntapStorageVirtualMachineEndpointSmbArgs{...}
type OntapStorageVirtualMachineEndpointSmbInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineEndpointSmbOutput() OntapStorageVirtualMachineEndpointSmbOutput
	ToOntapStorageVirtualMachineEndpointSmbOutputWithContext(context.Context) OntapStorageVirtualMachineEndpointSmbOutput
}

type OntapStorageVirtualMachineEndpointSmbArgs struct {
	// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
	DnsName pulumi.StringPtrInput `pulumi:"dnsName"`
	// IP addresses of the storage virtual machine endpoint.
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (OntapStorageVirtualMachineEndpointSmbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineEndpointSmb)(nil)).Elem()
}

func (i OntapStorageVirtualMachineEndpointSmbArgs) ToOntapStorageVirtualMachineEndpointSmbOutput() OntapStorageVirtualMachineEndpointSmbOutput {
	return i.ToOntapStorageVirtualMachineEndpointSmbOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineEndpointSmbArgs) ToOntapStorageVirtualMachineEndpointSmbOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointSmbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineEndpointSmbOutput)
}

func (i OntapStorageVirtualMachineEndpointSmbArgs) ToOutput(ctx context.Context) pulumix.Output[OntapStorageVirtualMachineEndpointSmb] {
	return pulumix.Output[OntapStorageVirtualMachineEndpointSmb]{
		OutputState: i.ToOntapStorageVirtualMachineEndpointSmbOutputWithContext(ctx).OutputState,
	}
}

// OntapStorageVirtualMachineEndpointSmbArrayInput is an input type that accepts OntapStorageVirtualMachineEndpointSmbArray and OntapStorageVirtualMachineEndpointSmbArrayOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineEndpointSmbArrayInput` via:
//
//	OntapStorageVirtualMachineEndpointSmbArray{ OntapStorageVirtualMachineEndpointSmbArgs{...} }
type OntapStorageVirtualMachineEndpointSmbArrayInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineEndpointSmbArrayOutput() OntapStorageVirtualMachineEndpointSmbArrayOutput
	ToOntapStorageVirtualMachineEndpointSmbArrayOutputWithContext(context.Context) OntapStorageVirtualMachineEndpointSmbArrayOutput
}

type OntapStorageVirtualMachineEndpointSmbArray []OntapStorageVirtualMachineEndpointSmbInput

func (OntapStorageVirtualMachineEndpointSmbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapStorageVirtualMachineEndpointSmb)(nil)).Elem()
}

func (i OntapStorageVirtualMachineEndpointSmbArray) ToOntapStorageVirtualMachineEndpointSmbArrayOutput() OntapStorageVirtualMachineEndpointSmbArrayOutput {
	return i.ToOntapStorageVirtualMachineEndpointSmbArrayOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineEndpointSmbArray) ToOntapStorageVirtualMachineEndpointSmbArrayOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointSmbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineEndpointSmbArrayOutput)
}

func (i OntapStorageVirtualMachineEndpointSmbArray) ToOutput(ctx context.Context) pulumix.Output[[]OntapStorageVirtualMachineEndpointSmb] {
	return pulumix.Output[[]OntapStorageVirtualMachineEndpointSmb]{
		OutputState: i.ToOntapStorageVirtualMachineEndpointSmbArrayOutputWithContext(ctx).OutputState,
	}
}

type OntapStorageVirtualMachineEndpointSmbOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineEndpointSmbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapStorageVirtualMachineEndpointSmb)(nil)).Elem()
}

func (o OntapStorageVirtualMachineEndpointSmbOutput) ToOntapStorageVirtualMachineEndpointSmbOutput() OntapStorageVirtualMachineEndpointSmbOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointSmbOutput) ToOntapStorageVirtualMachineEndpointSmbOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointSmbOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointSmbOutput) ToOutput(ctx context.Context) pulumix.Output[OntapStorageVirtualMachineEndpointSmb] {
	return pulumix.Output[OntapStorageVirtualMachineEndpointSmb]{
		OutputState: o.OutputState,
	}
}

// The Domain Name Service (DNS) name for the storage virtual machine. You can mount your storage virtual machine using its DNS name.
func (o OntapStorageVirtualMachineEndpointSmbOutput) DnsName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineEndpointSmb) *string { return v.DnsName }).(pulumi.StringPtrOutput)
}

// IP addresses of the storage virtual machine endpoint.
func (o OntapStorageVirtualMachineEndpointSmbOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OntapStorageVirtualMachineEndpointSmb) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type OntapStorageVirtualMachineEndpointSmbArrayOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineEndpointSmbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OntapStorageVirtualMachineEndpointSmb)(nil)).Elem()
}

func (o OntapStorageVirtualMachineEndpointSmbArrayOutput) ToOntapStorageVirtualMachineEndpointSmbArrayOutput() OntapStorageVirtualMachineEndpointSmbArrayOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointSmbArrayOutput) ToOntapStorageVirtualMachineEndpointSmbArrayOutputWithContext(ctx context.Context) OntapStorageVirtualMachineEndpointSmbArrayOutput {
	return o
}

func (o OntapStorageVirtualMachineEndpointSmbArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OntapStorageVirtualMachineEndpointSmb] {
	return pulumix.Output[[]OntapStorageVirtualMachineEndpointSmb]{
		OutputState: o.OutputState,
	}
}

func (o OntapStorageVirtualMachineEndpointSmbArrayOutput) Index(i pulumi.IntInput) OntapStorageVirtualMachineEndpointSmbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OntapStorageVirtualMachineEndpointSmb {
		return vs[0].([]OntapStorageVirtualMachineEndpointSmb)[vs[1].(int)]
	}).(OntapStorageVirtualMachineEndpointSmbOutput)
}

type OntapVolumeTieringPolicy struct {
	// Specifies the number of days that user data in a volume must remain inactive before it is considered "cold" and moved to the capacity pool. Used with `AUTO` and `SNAPSHOT_ONLY` tiering policies only. Valid values are whole numbers between 2 and 183. Default values are 31 days for `AUTO` and 2 days for `SNAPSHOT_ONLY`.
	CoolingPeriod *int `pulumi:"coolingPeriod"`
	// Specifies the tiering policy for the ONTAP volume for moving data to the capacity pool storage. Valid values are `SNAPSHOT_ONLY`, `AUTO`, `ALL`, `NONE`. Default value is `SNAPSHOT_ONLY`.
	Name *string `pulumi:"name"`
}

// OntapVolumeTieringPolicyInput is an input type that accepts OntapVolumeTieringPolicyArgs and OntapVolumeTieringPolicyOutput values.
// You can construct a concrete instance of `OntapVolumeTieringPolicyInput` via:
//
//	OntapVolumeTieringPolicyArgs{...}
type OntapVolumeTieringPolicyInput interface {
	pulumi.Input

	ToOntapVolumeTieringPolicyOutput() OntapVolumeTieringPolicyOutput
	ToOntapVolumeTieringPolicyOutputWithContext(context.Context) OntapVolumeTieringPolicyOutput
}

type OntapVolumeTieringPolicyArgs struct {
	// Specifies the number of days that user data in a volume must remain inactive before it is considered "cold" and moved to the capacity pool. Used with `AUTO` and `SNAPSHOT_ONLY` tiering policies only. Valid values are whole numbers between 2 and 183. Default values are 31 days for `AUTO` and 2 days for `SNAPSHOT_ONLY`.
	CoolingPeriod pulumi.IntPtrInput `pulumi:"coolingPeriod"`
	// Specifies the tiering policy for the ONTAP volume for moving data to the capacity pool storage. Valid values are `SNAPSHOT_ONLY`, `AUTO`, `ALL`, `NONE`. Default value is `SNAPSHOT_ONLY`.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (OntapVolumeTieringPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapVolumeTieringPolicy)(nil)).Elem()
}

func (i OntapVolumeTieringPolicyArgs) ToOntapVolumeTieringPolicyOutput() OntapVolumeTieringPolicyOutput {
	return i.ToOntapVolumeTieringPolicyOutputWithContext(context.Background())
}

func (i OntapVolumeTieringPolicyArgs) ToOntapVolumeTieringPolicyOutputWithContext(ctx context.Context) OntapVolumeTieringPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapVolumeTieringPolicyOutput)
}

func (i OntapVolumeTieringPolicyArgs) ToOutput(ctx context.Context) pulumix.Output[OntapVolumeTieringPolicy] {
	return pulumix.Output[OntapVolumeTieringPolicy]{
		OutputState: i.ToOntapVolumeTieringPolicyOutputWithContext(ctx).OutputState,
	}
}

func (i OntapVolumeTieringPolicyArgs) ToOntapVolumeTieringPolicyPtrOutput() OntapVolumeTieringPolicyPtrOutput {
	return i.ToOntapVolumeTieringPolicyPtrOutputWithContext(context.Background())
}

func (i OntapVolumeTieringPolicyArgs) ToOntapVolumeTieringPolicyPtrOutputWithContext(ctx context.Context) OntapVolumeTieringPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapVolumeTieringPolicyOutput).ToOntapVolumeTieringPolicyPtrOutputWithContext(ctx)
}

// OntapVolumeTieringPolicyPtrInput is an input type that accepts OntapVolumeTieringPolicyArgs, OntapVolumeTieringPolicyPtr and OntapVolumeTieringPolicyPtrOutput values.
// You can construct a concrete instance of `OntapVolumeTieringPolicyPtrInput` via:
//
//	        OntapVolumeTieringPolicyArgs{...}
//
//	or:
//
//	        nil
type OntapVolumeTieringPolicyPtrInput interface {
	pulumi.Input

	ToOntapVolumeTieringPolicyPtrOutput() OntapVolumeTieringPolicyPtrOutput
	ToOntapVolumeTieringPolicyPtrOutputWithContext(context.Context) OntapVolumeTieringPolicyPtrOutput
}

type ontapVolumeTieringPolicyPtrType OntapVolumeTieringPolicyArgs

func OntapVolumeTieringPolicyPtr(v *OntapVolumeTieringPolicyArgs) OntapVolumeTieringPolicyPtrInput {
	return (*ontapVolumeTieringPolicyPtrType)(v)
}

func (*ontapVolumeTieringPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OntapVolumeTieringPolicy)(nil)).Elem()
}

func (i *ontapVolumeTieringPolicyPtrType) ToOntapVolumeTieringPolicyPtrOutput() OntapVolumeTieringPolicyPtrOutput {
	return i.ToOntapVolumeTieringPolicyPtrOutputWithContext(context.Background())
}

func (i *ontapVolumeTieringPolicyPtrType) ToOntapVolumeTieringPolicyPtrOutputWithContext(ctx context.Context) OntapVolumeTieringPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapVolumeTieringPolicyPtrOutput)
}

func (i *ontapVolumeTieringPolicyPtrType) ToOutput(ctx context.Context) pulumix.Output[*OntapVolumeTieringPolicy] {
	return pulumix.Output[*OntapVolumeTieringPolicy]{
		OutputState: i.ToOntapVolumeTieringPolicyPtrOutputWithContext(ctx).OutputState,
	}
}

type OntapVolumeTieringPolicyOutput struct{ *pulumi.OutputState }

func (OntapVolumeTieringPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OntapVolumeTieringPolicy)(nil)).Elem()
}

func (o OntapVolumeTieringPolicyOutput) ToOntapVolumeTieringPolicyOutput() OntapVolumeTieringPolicyOutput {
	return o
}

func (o OntapVolumeTieringPolicyOutput) ToOntapVolumeTieringPolicyOutputWithContext(ctx context.Context) OntapVolumeTieringPolicyOutput {
	return o
}

func (o OntapVolumeTieringPolicyOutput) ToOntapVolumeTieringPolicyPtrOutput() OntapVolumeTieringPolicyPtrOutput {
	return o.ToOntapVolumeTieringPolicyPtrOutputWithContext(context.Background())
}

func (o OntapVolumeTieringPolicyOutput) ToOntapVolumeTieringPolicyPtrOutputWithContext(ctx context.Context) OntapVolumeTieringPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OntapVolumeTieringPolicy) *OntapVolumeTieringPolicy {
		return &v
	}).(OntapVolumeTieringPolicyPtrOutput)
}

func (o OntapVolumeTieringPolicyOutput) ToOutput(ctx context.Context) pulumix.Output[OntapVolumeTieringPolicy] {
	return pulumix.Output[OntapVolumeTieringPolicy]{
		OutputState: o.OutputState,
	}
}

// Specifies the number of days that user data in a volume must remain inactive before it is considered "cold" and moved to the capacity pool. Used with `AUTO` and `SNAPSHOT_ONLY` tiering policies only. Valid values are whole numbers between 2 and 183. Default values are 31 days for `AUTO` and 2 days for `SNAPSHOT_ONLY`.
func (o OntapVolumeTieringPolicyOutput) CoolingPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OntapVolumeTieringPolicy) *int { return v.CoolingPeriod }).(pulumi.IntPtrOutput)
}

// Specifies the tiering policy for the ONTAP volume for moving data to the capacity pool storage. Valid values are `SNAPSHOT_ONLY`, `AUTO`, `ALL`, `NONE`. Default value is `SNAPSHOT_ONLY`.
func (o OntapVolumeTieringPolicyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OntapVolumeTieringPolicy) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type OntapVolumeTieringPolicyPtrOutput struct{ *pulumi.OutputState }

func (OntapVolumeTieringPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OntapVolumeTieringPolicy)(nil)).Elem()
}

func (o OntapVolumeTieringPolicyPtrOutput) ToOntapVolumeTieringPolicyPtrOutput() OntapVolumeTieringPolicyPtrOutput {
	return o
}

func (o OntapVolumeTieringPolicyPtrOutput) ToOntapVolumeTieringPolicyPtrOutputWithContext(ctx context.Context) OntapVolumeTieringPolicyPtrOutput {
	return o
}

func (o OntapVolumeTieringPolicyPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OntapVolumeTieringPolicy] {
	return pulumix.Output[*OntapVolumeTieringPolicy]{
		OutputState: o.OutputState,
	}
}

func (o OntapVolumeTieringPolicyPtrOutput) Elem() OntapVolumeTieringPolicyOutput {
	return o.ApplyT(func(v *OntapVolumeTieringPolicy) OntapVolumeTieringPolicy {
		if v != nil {
			return *v
		}
		var ret OntapVolumeTieringPolicy
		return ret
	}).(OntapVolumeTieringPolicyOutput)
}

// Specifies the number of days that user data in a volume must remain inactive before it is considered "cold" and moved to the capacity pool. Used with `AUTO` and `SNAPSHOT_ONLY` tiering policies only. Valid values are whole numbers between 2 and 183. Default values are 31 days for `AUTO` and 2 days for `SNAPSHOT_ONLY`.
func (o OntapVolumeTieringPolicyPtrOutput) CoolingPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OntapVolumeTieringPolicy) *int {
		if v == nil {
			return nil
		}
		return v.CoolingPeriod
	}).(pulumi.IntPtrOutput)
}

// Specifies the tiering policy for the ONTAP volume for moving data to the capacity pool storage. Valid values are `SNAPSHOT_ONLY`, `AUTO`, `ALL`, `NONE`. Default value is `SNAPSHOT_ONLY`.
func (o OntapVolumeTieringPolicyPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OntapVolumeTieringPolicy) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type OpenZfsFileSystemDiskIopsConfiguration struct {
	// The total number of SSD IOPS provisioned for the file system.
	Iops *int `pulumi:"iops"`
	// Specifies whether the number of IOPS for the file system is using the system. Valid values are `AUTOMATIC` and `USER_PROVISIONED`. Default value is `AUTOMATIC`.
	Mode *string `pulumi:"mode"`
}

// OpenZfsFileSystemDiskIopsConfigurationInput is an input type that accepts OpenZfsFileSystemDiskIopsConfigurationArgs and OpenZfsFileSystemDiskIopsConfigurationOutput values.
// You can construct a concrete instance of `OpenZfsFileSystemDiskIopsConfigurationInput` via:
//
//	OpenZfsFileSystemDiskIopsConfigurationArgs{...}
type OpenZfsFileSystemDiskIopsConfigurationInput interface {
	pulumi.Input

	ToOpenZfsFileSystemDiskIopsConfigurationOutput() OpenZfsFileSystemDiskIopsConfigurationOutput
	ToOpenZfsFileSystemDiskIopsConfigurationOutputWithContext(context.Context) OpenZfsFileSystemDiskIopsConfigurationOutput
}

type OpenZfsFileSystemDiskIopsConfigurationArgs struct {
	// The total number of SSD IOPS provisioned for the file system.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Specifies whether the number of IOPS for the file system is using the system. Valid values are `AUTOMATIC` and `USER_PROVISIONED`. Default value is `AUTOMATIC`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (OpenZfsFileSystemDiskIopsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenZfsFileSystemDiskIopsConfiguration)(nil)).Elem()
}

func (i OpenZfsFileSystemDiskIopsConfigurationArgs) ToOpenZfsFileSystemDiskIopsConfigurationOutput() OpenZfsFileSystemDiskIopsConfigurationOutput {
	return i.ToOpenZfsFileSystemDiskIopsConfigurationOutputWithContext(context.Background())
}

func (i OpenZfsFileSystemDiskIopsConfigurationArgs) ToOpenZfsFileSystemDiskIopsConfigurationOutputWithContext(ctx context.Context) OpenZfsFileSystemDiskIopsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenZfsFileSystemDiskIopsConfigurationOutput)
}

func (i OpenZfsFileSystemDiskIopsConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[OpenZfsFileSystemDiskIopsConfiguration] {
	return pulumix.Output[OpenZfsFileSystemDiskIopsConfiguration]{
		OutputState: i.ToOpenZfsFileSystemDiskIopsConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i OpenZfsFileSystemDiskIopsConfigurationArgs) ToOpenZfsFileSystemDiskIopsConfigurationPtrOutput() OpenZfsFileSystemDiskIopsConfigurationPtrOutput {
	return i.ToOpenZfsFileSystemDiskIopsConfigurationPtrOutputWithContext(context.Background())
}

func (i OpenZfsFileSystemDiskIopsConfigurationArgs) ToOpenZfsFileSystemDiskIopsConfigurationPtrOutputWithContext(ctx context.Context) OpenZfsFileSystemDiskIopsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenZfsFileSystemDiskIopsConfigurationOutput).ToOpenZfsFileSystemDiskIopsConfigurationPtrOutputWithContext(ctx)
}

// OpenZfsFileSystemDiskIopsConfigurationPtrInput is an input type that accepts OpenZfsFileSystemDiskIopsConfigurationArgs, OpenZfsFileSystemDiskIopsConfigurationPtr and OpenZfsFileSystemDiskIopsConfigurationPtrOutput values.
// You can construct a concrete instance of `OpenZfsFileSystemDiskIopsConfigurationPtrInput` via:
//
//	        OpenZfsFileSystemDiskIopsConfigurationArgs{...}
//
//	or:
//
//	        nil
type OpenZfsFileSystemDiskIopsConfigurationPtrInput interface {
	pulumi.Input

	ToOpenZfsFileSystemDiskIopsConfigurationPtrOutput() OpenZfsFileSystemDiskIopsConfigurationPtrOutput
	ToOpenZfsFileSystemDiskIopsConfigurationPtrOutputWithContext(context.Context) OpenZfsFileSystemDiskIopsConfigurationPtrOutput
}

type openZfsFileSystemDiskIopsConfigurationPtrType OpenZfsFileSystemDiskIopsConfigurationArgs

func OpenZfsFileSystemDiskIopsConfigurationPtr(v *OpenZfsFileSystemDiskIopsConfigurationArgs) OpenZfsFileSystemDiskIopsConfigurationPtrInput {
	return (*openZfsFileSystemDiskIopsConfigurationPtrType)(v)
}

func (*openZfsFileSystemDiskIopsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenZfsFileSystemDiskIopsConfiguration)(nil)).Elem()
}

func (i *openZfsFileSystemDiskIopsConfigurationPtrType) ToOpenZfsFileSystemDiskIopsConfigurationPtrOutput() OpenZfsFileSystemDiskIopsConfigurationPtrOutput {
	return i.ToOpenZfsFileSystemDiskIopsConfigurationPtrOutputWithContext(context.Background())
}

func (i *openZfsFileSystemDiskIopsConfigurationPtrType) ToOpenZfsFileSystemDiskIopsConfigurationPtrOutputWithContext(ctx context.Context) OpenZfsFileSystemDiskIopsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenZfsFileSystemDiskIopsConfigurationPtrOutput)
}

func (i *openZfsFileSystemDiskIopsConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*OpenZfsFileSystemDiskIopsConfiguration] {
	return pulumix.Output[*OpenZfsFileSystemDiskIopsConfiguration]{
		OutputState: i.ToOpenZfsFileSystemDiskIopsConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type OpenZfsFileSystemDiskIopsConfigurationOutput struct{ *pulumi.OutputState }

func (OpenZfsFileSystemDiskIopsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenZfsFileSystemDiskIopsConfiguration)(nil)).Elem()
}

func (o OpenZfsFileSystemDiskIopsConfigurationOutput) ToOpenZfsFileSystemDiskIopsConfigurationOutput() OpenZfsFileSystemDiskIopsConfigurationOutput {
	return o
}

func (o OpenZfsFileSystemDiskIopsConfigurationOutput) ToOpenZfsFileSystemDiskIopsConfigurationOutputWithContext(ctx context.Context) OpenZfsFileSystemDiskIopsConfigurationOutput {
	return o
}

func (o OpenZfsFileSystemDiskIopsConfigurationOutput) ToOpenZfsFileSystemDiskIopsConfigurationPtrOutput() OpenZfsFileSystemDiskIopsConfigurationPtrOutput {
	return o.ToOpenZfsFileSystemDiskIopsConfigurationPtrOutputWithContext(context.Background())
}

func (o OpenZfsFileSystemDiskIopsConfigurationOutput) ToOpenZfsFileSystemDiskIopsConfigurationPtrOutputWithContext(ctx context.Context) OpenZfsFileSystemDiskIopsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OpenZfsFileSystemDiskIopsConfiguration) *OpenZfsFileSystemDiskIopsConfiguration {
		return &v
	}).(OpenZfsFileSystemDiskIopsConfigurationPtrOutput)
}

func (o OpenZfsFileSystemDiskIopsConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[OpenZfsFileSystemDiskIopsConfiguration] {
	return pulumix.Output[OpenZfsFileSystemDiskIopsConfiguration]{
		OutputState: o.OutputState,
	}
}

// The total number of SSD IOPS provisioned for the file system.
func (o OpenZfsFileSystemDiskIopsConfigurationOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OpenZfsFileSystemDiskIopsConfiguration) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Specifies whether the number of IOPS for the file system is using the system. Valid values are `AUTOMATIC` and `USER_PROVISIONED`. Default value is `AUTOMATIC`.
func (o OpenZfsFileSystemDiskIopsConfigurationOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenZfsFileSystemDiskIopsConfiguration) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type OpenZfsFileSystemDiskIopsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (OpenZfsFileSystemDiskIopsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenZfsFileSystemDiskIopsConfiguration)(nil)).Elem()
}

func (o OpenZfsFileSystemDiskIopsConfigurationPtrOutput) ToOpenZfsFileSystemDiskIopsConfigurationPtrOutput() OpenZfsFileSystemDiskIopsConfigurationPtrOutput {
	return o
}

func (o OpenZfsFileSystemDiskIopsConfigurationPtrOutput) ToOpenZfsFileSystemDiskIopsConfigurationPtrOutputWithContext(ctx context.Context) OpenZfsFileSystemDiskIopsConfigurationPtrOutput {
	return o
}

func (o OpenZfsFileSystemDiskIopsConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OpenZfsFileSystemDiskIopsConfiguration] {
	return pulumix.Output[*OpenZfsFileSystemDiskIopsConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o OpenZfsFileSystemDiskIopsConfigurationPtrOutput) Elem() OpenZfsFileSystemDiskIopsConfigurationOutput {
	return o.ApplyT(func(v *OpenZfsFileSystemDiskIopsConfiguration) OpenZfsFileSystemDiskIopsConfiguration {
		if v != nil {
			return *v
		}
		var ret OpenZfsFileSystemDiskIopsConfiguration
		return ret
	}).(OpenZfsFileSystemDiskIopsConfigurationOutput)
}

// The total number of SSD IOPS provisioned for the file system.
func (o OpenZfsFileSystemDiskIopsConfigurationPtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OpenZfsFileSystemDiskIopsConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

// Specifies whether the number of IOPS for the file system is using the system. Valid values are `AUTOMATIC` and `USER_PROVISIONED`. Default value is `AUTOMATIC`.
func (o OpenZfsFileSystemDiskIopsConfigurationPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenZfsFileSystemDiskIopsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type OpenZfsFileSystemRootVolumeConfiguration struct {
	// A boolean flag indicating whether tags for the file system should be copied to snapshots. The default value is false.
	CopyTagsToSnapshots *bool `pulumi:"copyTagsToSnapshots"`
	// Method used to compress the data on the volume. Valid values are `LZ4`, `NONE` or `ZSTD`. Child volumes that don't specify compression option will inherit from parent volume. This option on file system applies to the root volume.
	DataCompressionType *string `pulumi:"dataCompressionType"`
	// NFS export configuration for the root volume. Exactly 1 item. See NFS Exports Below.
	NfsExports *OpenZfsFileSystemRootVolumeConfigurationNfsExports `pulumi:"nfsExports"`
	// specifies whether the volume is read-only. Default is false.
	ReadOnly *bool `pulumi:"readOnly"`
	// Specifies the record size of an OpenZFS root volume, in kibibytes (KiB). Valid values are `4`, `8`, `16`, `32`, `64`, `128`, `256`, `512`, or `1024` KiB. The default is `128` KiB.
	RecordSizeKib *int `pulumi:"recordSizeKib"`
	// Specify how much storage users or groups can use on the volume. Maximum of 100 items. See User and Group Quotas Below.
	UserAndGroupQuotas []OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuota `pulumi:"userAndGroupQuotas"`
}

// OpenZfsFileSystemRootVolumeConfigurationInput is an input type that accepts OpenZfsFileSystemRootVolumeConfigurationArgs and OpenZfsFileSystemRootVolumeConfigurationOutput values.
// You can construct a concrete instance of `OpenZfsFileSystemRootVolumeConfigurationInput` via:
//
//	OpenZfsFileSystemRootVolumeConfigurationArgs{...}
type OpenZfsFileSystemRootVolumeConfigurationInput interface {
	pulumi.Input

	ToOpenZfsFileSystemRootVolumeConfigurationOutput() OpenZfsFileSystemRootVolumeConfigurationOutput
	ToOpenZfsFileSystemRootVolumeConfigurationOutputWithContext(context.Context) OpenZfsFileSystemRootVolumeConfigurationOutput
}

type OpenZfsFileSystemRootVolumeConfigurationArgs struct {
	// A boolean flag indicating whether tags for the file system should be copied to snapshots. The default value is false.
	CopyTagsToSnapshots pulumi.BoolPtrInput `pulumi:"copyTagsToSnapshots"`
	// Method used to compress the data on the volume. Valid values are `LZ4`, `NONE` or `ZSTD`. Child volumes that don't specify compression option will inherit from parent volume. This option on file system applies to the root volume.
	DataCompressionType pulumi.StringPtrInput `pulumi:"dataCompressionType"`
	// NFS export configuration for the root volume. Exactly 1 item. See NFS Exports Below.
	NfsExports OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrInput `pulumi:"nfsExports"`
	// specifies whether the volume is read-only. Default is false.
	ReadOnly pulumi.BoolPtrInput `pulumi:"readOnly"`
	// Specifies the record size of an OpenZFS root volume, in kibibytes (KiB). Valid values are `4`, `8`, `16`, `32`, `64`, `128`, `256`, `512`, or `1024` KiB. The default is `128` KiB.
	RecordSizeKib pulumi.IntPtrInput `pulumi:"recordSizeKib"`
	// Specify how much storage users or groups can use on the volume. Maximum of 100 items. See User and Group Quotas Below.
	UserAndGroupQuotas OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayInput `pulumi:"userAndGroupQuotas"`
}

func (OpenZfsFileSystemRootVolumeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenZfsFileSystemRootVolumeConfiguration)(nil)).Elem()
}

func (i OpenZfsFileSystemRootVolumeConfigurationArgs) ToOpenZfsFileSystemRootVolumeConfigurationOutput() OpenZfsFileSystemRootVolumeConfigurationOutput {
	return i.ToOpenZfsFileSystemRootVolumeConfigurationOutputWithContext(context.Background())
}

func (i OpenZfsFileSystemRootVolumeConfigurationArgs) ToOpenZfsFileSystemRootVolumeConfigurationOutputWithContext(ctx context.Context) OpenZfsFileSystemRootVolumeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenZfsFileSystemRootVolumeConfigurationOutput)
}

func (i OpenZfsFileSystemRootVolumeConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[OpenZfsFileSystemRootVolumeConfiguration] {
	return pulumix.Output[OpenZfsFileSystemRootVolumeConfiguration]{
		OutputState: i.ToOpenZfsFileSystemRootVolumeConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i OpenZfsFileSystemRootVolumeConfigurationArgs) ToOpenZfsFileSystemRootVolumeConfigurationPtrOutput() OpenZfsFileSystemRootVolumeConfigurationPtrOutput {
	return i.ToOpenZfsFileSystemRootVolumeConfigurationPtrOutputWithContext(context.Background())
}

func (i OpenZfsFileSystemRootVolumeConfigurationArgs) ToOpenZfsFileSystemRootVolumeConfigurationPtrOutputWithContext(ctx context.Context) OpenZfsFileSystemRootVolumeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenZfsFileSystemRootVolumeConfigurationOutput).ToOpenZfsFileSystemRootVolumeConfigurationPtrOutputWithContext(ctx)
}

// OpenZfsFileSystemRootVolumeConfigurationPtrInput is an input type that accepts OpenZfsFileSystemRootVolumeConfigurationArgs, OpenZfsFileSystemRootVolumeConfigurationPtr and OpenZfsFileSystemRootVolumeConfigurationPtrOutput values.
// You can construct a concrete instance of `OpenZfsFileSystemRootVolumeConfigurationPtrInput` via:
//
//	        OpenZfsFileSystemRootVolumeConfigurationArgs{...}
//
//	or:
//
//	        nil
type OpenZfsFileSystemRootVolumeConfigurationPtrInput interface {
	pulumi.Input

	ToOpenZfsFileSystemRootVolumeConfigurationPtrOutput() OpenZfsFileSystemRootVolumeConfigurationPtrOutput
	ToOpenZfsFileSystemRootVolumeConfigurationPtrOutputWithContext(context.Context) OpenZfsFileSystemRootVolumeConfigurationPtrOutput
}

type openZfsFileSystemRootVolumeConfigurationPtrType OpenZfsFileSystemRootVolumeConfigurationArgs

func OpenZfsFileSystemRootVolumeConfigurationPtr(v *OpenZfsFileSystemRootVolumeConfigurationArgs) OpenZfsFileSystemRootVolumeConfigurationPtrInput {
	return (*openZfsFileSystemRootVolumeConfigurationPtrType)(v)
}

func (*openZfsFileSystemRootVolumeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenZfsFileSystemRootVolumeConfiguration)(nil)).Elem()
}

func (i *openZfsFileSystemRootVolumeConfigurationPtrType) ToOpenZfsFileSystemRootVolumeConfigurationPtrOutput() OpenZfsFileSystemRootVolumeConfigurationPtrOutput {
	return i.ToOpenZfsFileSystemRootVolumeConfigurationPtrOutputWithContext(context.Background())
}

func (i *openZfsFileSystemRootVolumeConfigurationPtrType) ToOpenZfsFileSystemRootVolumeConfigurationPtrOutputWithContext(ctx context.Context) OpenZfsFileSystemRootVolumeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenZfsFileSystemRootVolumeConfigurationPtrOutput)
}

func (i *openZfsFileSystemRootVolumeConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*OpenZfsFileSystemRootVolumeConfiguration] {
	return pulumix.Output[*OpenZfsFileSystemRootVolumeConfiguration]{
		OutputState: i.ToOpenZfsFileSystemRootVolumeConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type OpenZfsFileSystemRootVolumeConfigurationOutput struct{ *pulumi.OutputState }

func (OpenZfsFileSystemRootVolumeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenZfsFileSystemRootVolumeConfiguration)(nil)).Elem()
}

func (o OpenZfsFileSystemRootVolumeConfigurationOutput) ToOpenZfsFileSystemRootVolumeConfigurationOutput() OpenZfsFileSystemRootVolumeConfigurationOutput {
	return o
}

func (o OpenZfsFileSystemRootVolumeConfigurationOutput) ToOpenZfsFileSystemRootVolumeConfigurationOutputWithContext(ctx context.Context) OpenZfsFileSystemRootVolumeConfigurationOutput {
	return o
}

func (o OpenZfsFileSystemRootVolumeConfigurationOutput) ToOpenZfsFileSystemRootVolumeConfigurationPtrOutput() OpenZfsFileSystemRootVolumeConfigurationPtrOutput {
	return o.ToOpenZfsFileSystemRootVolumeConfigurationPtrOutputWithContext(context.Background())
}

func (o OpenZfsFileSystemRootVolumeConfigurationOutput) ToOpenZfsFileSystemRootVolumeConfigurationPtrOutputWithContext(ctx context.Context) OpenZfsFileSystemRootVolumeConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OpenZfsFileSystemRootVolumeConfiguration) *OpenZfsFileSystemRootVolumeConfiguration {
		return &v
	}).(OpenZfsFileSystemRootVolumeConfigurationPtrOutput)
}

func (o OpenZfsFileSystemRootVolumeConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[OpenZfsFileSystemRootVolumeConfiguration] {
	return pulumix.Output[OpenZfsFileSystemRootVolumeConfiguration]{
		OutputState: o.OutputState,
	}
}

// A boolean flag indicating whether tags for the file system should be copied to snapshots. The default value is false.
func (o OpenZfsFileSystemRootVolumeConfigurationOutput) CopyTagsToSnapshots() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OpenZfsFileSystemRootVolumeConfiguration) *bool { return v.CopyTagsToSnapshots }).(pulumi.BoolPtrOutput)
}

// Method used to compress the data on the volume. Valid values are `LZ4`, `NONE` or `ZSTD`. Child volumes that don't specify compression option will inherit from parent volume. This option on file system applies to the root volume.
func (o OpenZfsFileSystemRootVolumeConfigurationOutput) DataCompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OpenZfsFileSystemRootVolumeConfiguration) *string { return v.DataCompressionType }).(pulumi.StringPtrOutput)
}

// NFS export configuration for the root volume. Exactly 1 item. See NFS Exports Below.
func (o OpenZfsFileSystemRootVolumeConfigurationOutput) NfsExports() OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput {
	return o.ApplyT(func(v OpenZfsFileSystemRootVolumeConfiguration) *OpenZfsFileSystemRootVolumeConfigurationNfsExports {
		return v.NfsExports
	}).(OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput)
}

// specifies whether the volume is read-only. Default is false.
func (o OpenZfsFileSystemRootVolumeConfigurationOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OpenZfsFileSystemRootVolumeConfiguration) *bool { return v.ReadOnly }).(pulumi.BoolPtrOutput)
}

// Specifies the record size of an OpenZFS root volume, in kibibytes (KiB). Valid values are `4`, `8`, `16`, `32`, `64`, `128`, `256`, `512`, or `1024` KiB. The default is `128` KiB.
func (o OpenZfsFileSystemRootVolumeConfigurationOutput) RecordSizeKib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OpenZfsFileSystemRootVolumeConfiguration) *int { return v.RecordSizeKib }).(pulumi.IntPtrOutput)
}

// Specify how much storage users or groups can use on the volume. Maximum of 100 items. See User and Group Quotas Below.
func (o OpenZfsFileSystemRootVolumeConfigurationOutput) UserAndGroupQuotas() OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutput {
	return o.ApplyT(func(v OpenZfsFileSystemRootVolumeConfiguration) []OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuota {
		return v.UserAndGroupQuotas
	}).(OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutput)
}

type OpenZfsFileSystemRootVolumeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (OpenZfsFileSystemRootVolumeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenZfsFileSystemRootVolumeConfiguration)(nil)).Elem()
}

func (o OpenZfsFileSystemRootVolumeConfigurationPtrOutput) ToOpenZfsFileSystemRootVolumeConfigurationPtrOutput() OpenZfsFileSystemRootVolumeConfigurationPtrOutput {
	return o
}

func (o OpenZfsFileSystemRootVolumeConfigurationPtrOutput) ToOpenZfsFileSystemRootVolumeConfigurationPtrOutputWithContext(ctx context.Context) OpenZfsFileSystemRootVolumeConfigurationPtrOutput {
	return o
}

func (o OpenZfsFileSystemRootVolumeConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OpenZfsFileSystemRootVolumeConfiguration] {
	return pulumix.Output[*OpenZfsFileSystemRootVolumeConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o OpenZfsFileSystemRootVolumeConfigurationPtrOutput) Elem() OpenZfsFileSystemRootVolumeConfigurationOutput {
	return o.ApplyT(func(v *OpenZfsFileSystemRootVolumeConfiguration) OpenZfsFileSystemRootVolumeConfiguration {
		if v != nil {
			return *v
		}
		var ret OpenZfsFileSystemRootVolumeConfiguration
		return ret
	}).(OpenZfsFileSystemRootVolumeConfigurationOutput)
}

// A boolean flag indicating whether tags for the file system should be copied to snapshots. The default value is false.
func (o OpenZfsFileSystemRootVolumeConfigurationPtrOutput) CopyTagsToSnapshots() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OpenZfsFileSystemRootVolumeConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.CopyTagsToSnapshots
	}).(pulumi.BoolPtrOutput)
}

// Method used to compress the data on the volume. Valid values are `LZ4`, `NONE` or `ZSTD`. Child volumes that don't specify compression option will inherit from parent volume. This option on file system applies to the root volume.
func (o OpenZfsFileSystemRootVolumeConfigurationPtrOutput) DataCompressionType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenZfsFileSystemRootVolumeConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.DataCompressionType
	}).(pulumi.StringPtrOutput)
}

// NFS export configuration for the root volume. Exactly 1 item. See NFS Exports Below.
func (o OpenZfsFileSystemRootVolumeConfigurationPtrOutput) NfsExports() OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput {
	return o.ApplyT(func(v *OpenZfsFileSystemRootVolumeConfiguration) *OpenZfsFileSystemRootVolumeConfigurationNfsExports {
		if v == nil {
			return nil
		}
		return v.NfsExports
	}).(OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput)
}

// specifies whether the volume is read-only. Default is false.
func (o OpenZfsFileSystemRootVolumeConfigurationPtrOutput) ReadOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OpenZfsFileSystemRootVolumeConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.ReadOnly
	}).(pulumi.BoolPtrOutput)
}

// Specifies the record size of an OpenZFS root volume, in kibibytes (KiB). Valid values are `4`, `8`, `16`, `32`, `64`, `128`, `256`, `512`, or `1024` KiB. The default is `128` KiB.
func (o OpenZfsFileSystemRootVolumeConfigurationPtrOutput) RecordSizeKib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OpenZfsFileSystemRootVolumeConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.RecordSizeKib
	}).(pulumi.IntPtrOutput)
}

// Specify how much storage users or groups can use on the volume. Maximum of 100 items. See User and Group Quotas Below.
func (o OpenZfsFileSystemRootVolumeConfigurationPtrOutput) UserAndGroupQuotas() OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutput {
	return o.ApplyT(func(v *OpenZfsFileSystemRootVolumeConfiguration) []OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuota {
		if v == nil {
			return nil
		}
		return v.UserAndGroupQuotas
	}).(OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutput)
}

type OpenZfsFileSystemRootVolumeConfigurationNfsExports struct {
	// A list of configuration objects that contain the client and options for mounting the OpenZFS file system. Maximum of 25 items. See Client Configurations Below.
	ClientConfigurations []OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfiguration `pulumi:"clientConfigurations"`
}

// OpenZfsFileSystemRootVolumeConfigurationNfsExportsInput is an input type that accepts OpenZfsFileSystemRootVolumeConfigurationNfsExportsArgs and OpenZfsFileSystemRootVolumeConfigurationNfsExportsOutput values.
// You can construct a concrete instance of `OpenZfsFileSystemRootVolumeConfigurationNfsExportsInput` via:
//
//	OpenZfsFileSystemRootVolumeConfigurationNfsExportsArgs{...}
type OpenZfsFileSystemRootVolumeConfigurationNfsExportsInput interface {
	pulumi.Input

	ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsOutput() OpenZfsFileSystemRootVolumeConfigurationNfsExportsOutput
	ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsOutputWithContext(context.Context) OpenZfsFileSystemRootVolumeConfigurationNfsExportsOutput
}

type OpenZfsFileSystemRootVolumeConfigurationNfsExportsArgs struct {
	// A list of configuration objects that contain the client and options for mounting the OpenZFS file system. Maximum of 25 items. See Client Configurations Below.
	ClientConfigurations OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayInput `pulumi:"clientConfigurations"`
}

func (OpenZfsFileSystemRootVolumeConfigurationNfsExportsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenZfsFileSystemRootVolumeConfigurationNfsExports)(nil)).Elem()
}

func (i OpenZfsFileSystemRootVolumeConfigurationNfsExportsArgs) ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsOutput() OpenZfsFileSystemRootVolumeConfigurationNfsExportsOutput {
	return i.ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsOutputWithContext(context.Background())
}

func (i OpenZfsFileSystemRootVolumeConfigurationNfsExportsArgs) ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsOutputWithContext(ctx context.Context) OpenZfsFileSystemRootVolumeConfigurationNfsExportsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenZfsFileSystemRootVolumeConfigurationNfsExportsOutput)
}

func (i OpenZfsFileSystemRootVolumeConfigurationNfsExportsArgs) ToOutput(ctx context.Context) pulumix.Output[OpenZfsFileSystemRootVolumeConfigurationNfsExports] {
	return pulumix.Output[OpenZfsFileSystemRootVolumeConfigurationNfsExports]{
		OutputState: i.ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsOutputWithContext(ctx).OutputState,
	}
}

func (i OpenZfsFileSystemRootVolumeConfigurationNfsExportsArgs) ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput() OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput {
	return i.ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutputWithContext(context.Background())
}

func (i OpenZfsFileSystemRootVolumeConfigurationNfsExportsArgs) ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutputWithContext(ctx context.Context) OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenZfsFileSystemRootVolumeConfigurationNfsExportsOutput).ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutputWithContext(ctx)
}

// OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrInput is an input type that accepts OpenZfsFileSystemRootVolumeConfigurationNfsExportsArgs, OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtr and OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput values.
// You can construct a concrete instance of `OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrInput` via:
//
//	        OpenZfsFileSystemRootVolumeConfigurationNfsExportsArgs{...}
//
//	or:
//
//	        nil
type OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrInput interface {
	pulumi.Input

	ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput() OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput
	ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutputWithContext(context.Context) OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput
}

type openZfsFileSystemRootVolumeConfigurationNfsExportsPtrType OpenZfsFileSystemRootVolumeConfigurationNfsExportsArgs

func OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtr(v *OpenZfsFileSystemRootVolumeConfigurationNfsExportsArgs) OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrInput {
	return (*openZfsFileSystemRootVolumeConfigurationNfsExportsPtrType)(v)
}

func (*openZfsFileSystemRootVolumeConfigurationNfsExportsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenZfsFileSystemRootVolumeConfigurationNfsExports)(nil)).Elem()
}

func (i *openZfsFileSystemRootVolumeConfigurationNfsExportsPtrType) ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput() OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput {
	return i.ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutputWithContext(context.Background())
}

func (i *openZfsFileSystemRootVolumeConfigurationNfsExportsPtrType) ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutputWithContext(ctx context.Context) OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput)
}

func (i *openZfsFileSystemRootVolumeConfigurationNfsExportsPtrType) ToOutput(ctx context.Context) pulumix.Output[*OpenZfsFileSystemRootVolumeConfigurationNfsExports] {
	return pulumix.Output[*OpenZfsFileSystemRootVolumeConfigurationNfsExports]{
		OutputState: i.ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutputWithContext(ctx).OutputState,
	}
}

type OpenZfsFileSystemRootVolumeConfigurationNfsExportsOutput struct{ *pulumi.OutputState }

func (OpenZfsFileSystemRootVolumeConfigurationNfsExportsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenZfsFileSystemRootVolumeConfigurationNfsExports)(nil)).Elem()
}

func (o OpenZfsFileSystemRootVolumeConfigurationNfsExportsOutput) ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsOutput() OpenZfsFileSystemRootVolumeConfigurationNfsExportsOutput {
	return o
}

func (o OpenZfsFileSystemRootVolumeConfigurationNfsExportsOutput) ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsOutputWithContext(ctx context.Context) OpenZfsFileSystemRootVolumeConfigurationNfsExportsOutput {
	return o
}

func (o OpenZfsFileSystemRootVolumeConfigurationNfsExportsOutput) ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput() OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput {
	return o.ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutputWithContext(context.Background())
}

func (o OpenZfsFileSystemRootVolumeConfigurationNfsExportsOutput) ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutputWithContext(ctx context.Context) OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OpenZfsFileSystemRootVolumeConfigurationNfsExports) *OpenZfsFileSystemRootVolumeConfigurationNfsExports {
		return &v
	}).(OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput)
}

func (o OpenZfsFileSystemRootVolumeConfigurationNfsExportsOutput) ToOutput(ctx context.Context) pulumix.Output[OpenZfsFileSystemRootVolumeConfigurationNfsExports] {
	return pulumix.Output[OpenZfsFileSystemRootVolumeConfigurationNfsExports]{
		OutputState: o.OutputState,
	}
}

// A list of configuration objects that contain the client and options for mounting the OpenZFS file system. Maximum of 25 items. See Client Configurations Below.
func (o OpenZfsFileSystemRootVolumeConfigurationNfsExportsOutput) ClientConfigurations() OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutput {
	return o.ApplyT(func(v OpenZfsFileSystemRootVolumeConfigurationNfsExports) []OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfiguration {
		return v.ClientConfigurations
	}).(OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutput)
}

type OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput struct{ *pulumi.OutputState }

func (OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenZfsFileSystemRootVolumeConfigurationNfsExports)(nil)).Elem()
}

func (o OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput) ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput() OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput {
	return o
}

func (o OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput) ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutputWithContext(ctx context.Context) OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput {
	return o
}

func (o OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OpenZfsFileSystemRootVolumeConfigurationNfsExports] {
	return pulumix.Output[*OpenZfsFileSystemRootVolumeConfigurationNfsExports]{
		OutputState: o.OutputState,
	}
}

func (o OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput) Elem() OpenZfsFileSystemRootVolumeConfigurationNfsExportsOutput {
	return o.ApplyT(func(v *OpenZfsFileSystemRootVolumeConfigurationNfsExports) OpenZfsFileSystemRootVolumeConfigurationNfsExports {
		if v != nil {
			return *v
		}
		var ret OpenZfsFileSystemRootVolumeConfigurationNfsExports
		return ret
	}).(OpenZfsFileSystemRootVolumeConfigurationNfsExportsOutput)
}

// A list of configuration objects that contain the client and options for mounting the OpenZFS file system. Maximum of 25 items. See Client Configurations Below.
func (o OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput) ClientConfigurations() OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutput {
	return o.ApplyT(func(v *OpenZfsFileSystemRootVolumeConfigurationNfsExports) []OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfiguration {
		if v == nil {
			return nil
		}
		return v.ClientConfigurations
	}).(OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutput)
}

type OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfiguration struct {
	// A value that specifies who can mount the file system. You can provide a wildcard character (*), an IP address (0.0.0.0), or a CIDR address (192.0.2.0/24. By default, Amazon FSx uses the wildcard character when specifying the client.
	Clients string `pulumi:"clients"`
	// The options to use when mounting the file system. Maximum of 20 items. See the [Linix NFS exports man page](https://linux.die.net/man/5/exports) for more information. `crossmount` and `sync` are used by default.
	Options []string `pulumi:"options"`
}

// OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationInput is an input type that accepts OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArgs and OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationOutput values.
// You can construct a concrete instance of `OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationInput` via:
//
//	OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArgs{...}
type OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationInput interface {
	pulumi.Input

	ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationOutput() OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationOutput
	ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationOutputWithContext(context.Context) OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationOutput
}

type OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArgs struct {
	// A value that specifies who can mount the file system. You can provide a wildcard character (*), an IP address (0.0.0.0), or a CIDR address (192.0.2.0/24. By default, Amazon FSx uses the wildcard character when specifying the client.
	Clients pulumi.StringInput `pulumi:"clients"`
	// The options to use when mounting the file system. Maximum of 20 items. See the [Linix NFS exports man page](https://linux.die.net/man/5/exports) for more information. `crossmount` and `sync` are used by default.
	Options pulumi.StringArrayInput `pulumi:"options"`
}

func (OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfiguration)(nil)).Elem()
}

func (i OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArgs) ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationOutput() OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationOutput {
	return i.ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationOutputWithContext(context.Background())
}

func (i OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArgs) ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationOutputWithContext(ctx context.Context) OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationOutput)
}

func (i OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfiguration] {
	return pulumix.Output[OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfiguration]{
		OutputState: i.ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationOutputWithContext(ctx).OutputState,
	}
}

// OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayInput is an input type that accepts OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArray and OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutput values.
// You can construct a concrete instance of `OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayInput` via:
//
//	OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArray{ OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArgs{...} }
type OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayInput interface {
	pulumi.Input

	ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutput() OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutput
	ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutputWithContext(context.Context) OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutput
}

type OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArray []OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationInput

func (OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfiguration)(nil)).Elem()
}

func (i OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArray) ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutput() OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutput {
	return i.ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutputWithContext(context.Background())
}

func (i OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArray) ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutputWithContext(ctx context.Context) OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutput)
}

func (i OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArray) ToOutput(ctx context.Context) pulumix.Output[[]OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfiguration] {
	return pulumix.Output[[]OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfiguration]{
		OutputState: i.ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutputWithContext(ctx).OutputState,
	}
}

type OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationOutput struct{ *pulumi.OutputState }

func (OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfiguration)(nil)).Elem()
}

func (o OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationOutput) ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationOutput() OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationOutput {
	return o
}

func (o OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationOutput) ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationOutputWithContext(ctx context.Context) OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationOutput {
	return o
}

func (o OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfiguration] {
	return pulumix.Output[OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfiguration]{
		OutputState: o.OutputState,
	}
}

// A value that specifies who can mount the file system. You can provide a wildcard character (*), an IP address (0.0.0.0), or a CIDR address (192.0.2.0/24. By default, Amazon FSx uses the wildcard character when specifying the client.
func (o OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationOutput) Clients() pulumi.StringOutput {
	return o.ApplyT(func(v OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfiguration) string { return v.Clients }).(pulumi.StringOutput)
}

// The options to use when mounting the file system. Maximum of 20 items. See the [Linix NFS exports man page](https://linux.die.net/man/5/exports) for more information. `crossmount` and `sync` are used by default.
func (o OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationOutput) Options() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfiguration) []string {
		return v.Options
	}).(pulumi.StringArrayOutput)
}

type OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutput struct{ *pulumi.OutputState }

func (OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfiguration)(nil)).Elem()
}

func (o OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutput) ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutput() OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutput {
	return o
}

func (o OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutput) ToOpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutputWithContext(ctx context.Context) OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutput {
	return o
}

func (o OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfiguration] {
	return pulumix.Output[[]OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutput) Index(i pulumi.IntInput) OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfiguration {
		return vs[0].([]OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfiguration)[vs[1].(int)]
	}).(OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationOutput)
}

type OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuota struct {
	// The ID of the user or group. Valid values between `0` and `2147483647`
	Id int `pulumi:"id"`
	// The amount of storage that the user or group can use in gibibytes (GiB). Valid values between `0` and `2147483647`
	StorageCapacityQuotaGib int `pulumi:"storageCapacityQuotaGib"`
	// A value that specifies whether the quota applies to a user or group. Valid values are `USER` or `GROUP`.
	Type string `pulumi:"type"`
}

// OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaInput is an input type that accepts OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArgs and OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutput values.
// You can construct a concrete instance of `OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaInput` via:
//
//	OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArgs{...}
type OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaInput interface {
	pulumi.Input

	ToOpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutput() OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutput
	ToOpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutputWithContext(context.Context) OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutput
}

type OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArgs struct {
	// The ID of the user or group. Valid values between `0` and `2147483647`
	Id pulumi.IntInput `pulumi:"id"`
	// The amount of storage that the user or group can use in gibibytes (GiB). Valid values between `0` and `2147483647`
	StorageCapacityQuotaGib pulumi.IntInput `pulumi:"storageCapacityQuotaGib"`
	// A value that specifies whether the quota applies to a user or group. Valid values are `USER` or `GROUP`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuota)(nil)).Elem()
}

func (i OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArgs) ToOpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutput() OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutput {
	return i.ToOpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutputWithContext(context.Background())
}

func (i OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArgs) ToOpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutputWithContext(ctx context.Context) OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutput)
}

func (i OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArgs) ToOutput(ctx context.Context) pulumix.Output[OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuota] {
	return pulumix.Output[OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuota]{
		OutputState: i.ToOpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutputWithContext(ctx).OutputState,
	}
}

// OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayInput is an input type that accepts OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArray and OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutput values.
// You can construct a concrete instance of `OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayInput` via:
//
//	OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArray{ OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArgs{...} }
type OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayInput interface {
	pulumi.Input

	ToOpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutput() OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutput
	ToOpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutputWithContext(context.Context) OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutput
}

type OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArray []OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaInput

func (OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuota)(nil)).Elem()
}

func (i OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArray) ToOpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutput() OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutput {
	return i.ToOpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutputWithContext(context.Background())
}

func (i OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArray) ToOpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutputWithContext(ctx context.Context) OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutput)
}

func (i OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArray) ToOutput(ctx context.Context) pulumix.Output[[]OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuota] {
	return pulumix.Output[[]OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuota]{
		OutputState: i.ToOpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutputWithContext(ctx).OutputState,
	}
}

type OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutput struct{ *pulumi.OutputState }

func (OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuota)(nil)).Elem()
}

func (o OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutput) ToOpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutput() OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutput {
	return o
}

func (o OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutput) ToOpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutputWithContext(ctx context.Context) OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutput {
	return o
}

func (o OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutput) ToOutput(ctx context.Context) pulumix.Output[OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuota] {
	return pulumix.Output[OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuota]{
		OutputState: o.OutputState,
	}
}

// The ID of the user or group. Valid values between `0` and `2147483647`
func (o OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuota) int { return v.Id }).(pulumi.IntOutput)
}

// The amount of storage that the user or group can use in gibibytes (GiB). Valid values between `0` and `2147483647`
func (o OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutput) StorageCapacityQuotaGib() pulumi.IntOutput {
	return o.ApplyT(func(v OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuota) int {
		return v.StorageCapacityQuotaGib
	}).(pulumi.IntOutput)
}

// A value that specifies whether the quota applies to a user or group. Valid values are `USER` or `GROUP`.
func (o OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuota) string { return v.Type }).(pulumi.StringOutput)
}

type OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutput struct{ *pulumi.OutputState }

func (OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuota)(nil)).Elem()
}

func (o OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutput) ToOpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutput() OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutput {
	return o
}

func (o OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutput) ToOpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutputWithContext(ctx context.Context) OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutput {
	return o
}

func (o OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuota] {
	return pulumix.Output[[]OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuota]{
		OutputState: o.OutputState,
	}
}

func (o OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutput) Index(i pulumi.IntInput) OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuota {
		return vs[0].([]OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuota)[vs[1].(int)]
	}).(OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutput)
}

type OpenZfsVolumeNfsExports struct {
	// A list of configuration objects that contain the client and options for mounting the OpenZFS file system. Maximum of 25 items. See Client Configurations Below.
	ClientConfigurations []OpenZfsVolumeNfsExportsClientConfiguration `pulumi:"clientConfigurations"`
}

// OpenZfsVolumeNfsExportsInput is an input type that accepts OpenZfsVolumeNfsExportsArgs and OpenZfsVolumeNfsExportsOutput values.
// You can construct a concrete instance of `OpenZfsVolumeNfsExportsInput` via:
//
//	OpenZfsVolumeNfsExportsArgs{...}
type OpenZfsVolumeNfsExportsInput interface {
	pulumi.Input

	ToOpenZfsVolumeNfsExportsOutput() OpenZfsVolumeNfsExportsOutput
	ToOpenZfsVolumeNfsExportsOutputWithContext(context.Context) OpenZfsVolumeNfsExportsOutput
}

type OpenZfsVolumeNfsExportsArgs struct {
	// A list of configuration objects that contain the client and options for mounting the OpenZFS file system. Maximum of 25 items. See Client Configurations Below.
	ClientConfigurations OpenZfsVolumeNfsExportsClientConfigurationArrayInput `pulumi:"clientConfigurations"`
}

func (OpenZfsVolumeNfsExportsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenZfsVolumeNfsExports)(nil)).Elem()
}

func (i OpenZfsVolumeNfsExportsArgs) ToOpenZfsVolumeNfsExportsOutput() OpenZfsVolumeNfsExportsOutput {
	return i.ToOpenZfsVolumeNfsExportsOutputWithContext(context.Background())
}

func (i OpenZfsVolumeNfsExportsArgs) ToOpenZfsVolumeNfsExportsOutputWithContext(ctx context.Context) OpenZfsVolumeNfsExportsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenZfsVolumeNfsExportsOutput)
}

func (i OpenZfsVolumeNfsExportsArgs) ToOutput(ctx context.Context) pulumix.Output[OpenZfsVolumeNfsExports] {
	return pulumix.Output[OpenZfsVolumeNfsExports]{
		OutputState: i.ToOpenZfsVolumeNfsExportsOutputWithContext(ctx).OutputState,
	}
}

func (i OpenZfsVolumeNfsExportsArgs) ToOpenZfsVolumeNfsExportsPtrOutput() OpenZfsVolumeNfsExportsPtrOutput {
	return i.ToOpenZfsVolumeNfsExportsPtrOutputWithContext(context.Background())
}

func (i OpenZfsVolumeNfsExportsArgs) ToOpenZfsVolumeNfsExportsPtrOutputWithContext(ctx context.Context) OpenZfsVolumeNfsExportsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenZfsVolumeNfsExportsOutput).ToOpenZfsVolumeNfsExportsPtrOutputWithContext(ctx)
}

// OpenZfsVolumeNfsExportsPtrInput is an input type that accepts OpenZfsVolumeNfsExportsArgs, OpenZfsVolumeNfsExportsPtr and OpenZfsVolumeNfsExportsPtrOutput values.
// You can construct a concrete instance of `OpenZfsVolumeNfsExportsPtrInput` via:
//
//	        OpenZfsVolumeNfsExportsArgs{...}
//
//	or:
//
//	        nil
type OpenZfsVolumeNfsExportsPtrInput interface {
	pulumi.Input

	ToOpenZfsVolumeNfsExportsPtrOutput() OpenZfsVolumeNfsExportsPtrOutput
	ToOpenZfsVolumeNfsExportsPtrOutputWithContext(context.Context) OpenZfsVolumeNfsExportsPtrOutput
}

type openZfsVolumeNfsExportsPtrType OpenZfsVolumeNfsExportsArgs

func OpenZfsVolumeNfsExportsPtr(v *OpenZfsVolumeNfsExportsArgs) OpenZfsVolumeNfsExportsPtrInput {
	return (*openZfsVolumeNfsExportsPtrType)(v)
}

func (*openZfsVolumeNfsExportsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenZfsVolumeNfsExports)(nil)).Elem()
}

func (i *openZfsVolumeNfsExportsPtrType) ToOpenZfsVolumeNfsExportsPtrOutput() OpenZfsVolumeNfsExportsPtrOutput {
	return i.ToOpenZfsVolumeNfsExportsPtrOutputWithContext(context.Background())
}

func (i *openZfsVolumeNfsExportsPtrType) ToOpenZfsVolumeNfsExportsPtrOutputWithContext(ctx context.Context) OpenZfsVolumeNfsExportsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenZfsVolumeNfsExportsPtrOutput)
}

func (i *openZfsVolumeNfsExportsPtrType) ToOutput(ctx context.Context) pulumix.Output[*OpenZfsVolumeNfsExports] {
	return pulumix.Output[*OpenZfsVolumeNfsExports]{
		OutputState: i.ToOpenZfsVolumeNfsExportsPtrOutputWithContext(ctx).OutputState,
	}
}

type OpenZfsVolumeNfsExportsOutput struct{ *pulumi.OutputState }

func (OpenZfsVolumeNfsExportsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenZfsVolumeNfsExports)(nil)).Elem()
}

func (o OpenZfsVolumeNfsExportsOutput) ToOpenZfsVolumeNfsExportsOutput() OpenZfsVolumeNfsExportsOutput {
	return o
}

func (o OpenZfsVolumeNfsExportsOutput) ToOpenZfsVolumeNfsExportsOutputWithContext(ctx context.Context) OpenZfsVolumeNfsExportsOutput {
	return o
}

func (o OpenZfsVolumeNfsExportsOutput) ToOpenZfsVolumeNfsExportsPtrOutput() OpenZfsVolumeNfsExportsPtrOutput {
	return o.ToOpenZfsVolumeNfsExportsPtrOutputWithContext(context.Background())
}

func (o OpenZfsVolumeNfsExportsOutput) ToOpenZfsVolumeNfsExportsPtrOutputWithContext(ctx context.Context) OpenZfsVolumeNfsExportsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OpenZfsVolumeNfsExports) *OpenZfsVolumeNfsExports {
		return &v
	}).(OpenZfsVolumeNfsExportsPtrOutput)
}

func (o OpenZfsVolumeNfsExportsOutput) ToOutput(ctx context.Context) pulumix.Output[OpenZfsVolumeNfsExports] {
	return pulumix.Output[OpenZfsVolumeNfsExports]{
		OutputState: o.OutputState,
	}
}

// A list of configuration objects that contain the client and options for mounting the OpenZFS file system. Maximum of 25 items. See Client Configurations Below.
func (o OpenZfsVolumeNfsExportsOutput) ClientConfigurations() OpenZfsVolumeNfsExportsClientConfigurationArrayOutput {
	return o.ApplyT(func(v OpenZfsVolumeNfsExports) []OpenZfsVolumeNfsExportsClientConfiguration {
		return v.ClientConfigurations
	}).(OpenZfsVolumeNfsExportsClientConfigurationArrayOutput)
}

type OpenZfsVolumeNfsExportsPtrOutput struct{ *pulumi.OutputState }

func (OpenZfsVolumeNfsExportsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenZfsVolumeNfsExports)(nil)).Elem()
}

func (o OpenZfsVolumeNfsExportsPtrOutput) ToOpenZfsVolumeNfsExportsPtrOutput() OpenZfsVolumeNfsExportsPtrOutput {
	return o
}

func (o OpenZfsVolumeNfsExportsPtrOutput) ToOpenZfsVolumeNfsExportsPtrOutputWithContext(ctx context.Context) OpenZfsVolumeNfsExportsPtrOutput {
	return o
}

func (o OpenZfsVolumeNfsExportsPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OpenZfsVolumeNfsExports] {
	return pulumix.Output[*OpenZfsVolumeNfsExports]{
		OutputState: o.OutputState,
	}
}

func (o OpenZfsVolumeNfsExportsPtrOutput) Elem() OpenZfsVolumeNfsExportsOutput {
	return o.ApplyT(func(v *OpenZfsVolumeNfsExports) OpenZfsVolumeNfsExports {
		if v != nil {
			return *v
		}
		var ret OpenZfsVolumeNfsExports
		return ret
	}).(OpenZfsVolumeNfsExportsOutput)
}

// A list of configuration objects that contain the client and options for mounting the OpenZFS file system. Maximum of 25 items. See Client Configurations Below.
func (o OpenZfsVolumeNfsExportsPtrOutput) ClientConfigurations() OpenZfsVolumeNfsExportsClientConfigurationArrayOutput {
	return o.ApplyT(func(v *OpenZfsVolumeNfsExports) []OpenZfsVolumeNfsExportsClientConfiguration {
		if v == nil {
			return nil
		}
		return v.ClientConfigurations
	}).(OpenZfsVolumeNfsExportsClientConfigurationArrayOutput)
}

type OpenZfsVolumeNfsExportsClientConfiguration struct {
	// A value that specifies who can mount the file system. You can provide a wildcard character (*), an IP address (0.0.0.0), or a CIDR address (192.0.2.0/24. By default, Amazon FSx uses the wildcard character when specifying the client.
	Clients string `pulumi:"clients"`
	// The options to use when mounting the file system. Maximum of 20 items. See the [Linix NFS exports man page](https://linux.die.net/man/5/exports) for more information. `crossmount` and `sync` are used by default.
	Options []string `pulumi:"options"`
}

// OpenZfsVolumeNfsExportsClientConfigurationInput is an input type that accepts OpenZfsVolumeNfsExportsClientConfigurationArgs and OpenZfsVolumeNfsExportsClientConfigurationOutput values.
// You can construct a concrete instance of `OpenZfsVolumeNfsExportsClientConfigurationInput` via:
//
//	OpenZfsVolumeNfsExportsClientConfigurationArgs{...}
type OpenZfsVolumeNfsExportsClientConfigurationInput interface {
	pulumi.Input

	ToOpenZfsVolumeNfsExportsClientConfigurationOutput() OpenZfsVolumeNfsExportsClientConfigurationOutput
	ToOpenZfsVolumeNfsExportsClientConfigurationOutputWithContext(context.Context) OpenZfsVolumeNfsExportsClientConfigurationOutput
}

type OpenZfsVolumeNfsExportsClientConfigurationArgs struct {
	// A value that specifies who can mount the file system. You can provide a wildcard character (*), an IP address (0.0.0.0), or a CIDR address (192.0.2.0/24. By default, Amazon FSx uses the wildcard character when specifying the client.
	Clients pulumi.StringInput `pulumi:"clients"`
	// The options to use when mounting the file system. Maximum of 20 items. See the [Linix NFS exports man page](https://linux.die.net/man/5/exports) for more information. `crossmount` and `sync` are used by default.
	Options pulumi.StringArrayInput `pulumi:"options"`
}

func (OpenZfsVolumeNfsExportsClientConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenZfsVolumeNfsExportsClientConfiguration)(nil)).Elem()
}

func (i OpenZfsVolumeNfsExportsClientConfigurationArgs) ToOpenZfsVolumeNfsExportsClientConfigurationOutput() OpenZfsVolumeNfsExportsClientConfigurationOutput {
	return i.ToOpenZfsVolumeNfsExportsClientConfigurationOutputWithContext(context.Background())
}

func (i OpenZfsVolumeNfsExportsClientConfigurationArgs) ToOpenZfsVolumeNfsExportsClientConfigurationOutputWithContext(ctx context.Context) OpenZfsVolumeNfsExportsClientConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenZfsVolumeNfsExportsClientConfigurationOutput)
}

func (i OpenZfsVolumeNfsExportsClientConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[OpenZfsVolumeNfsExportsClientConfiguration] {
	return pulumix.Output[OpenZfsVolumeNfsExportsClientConfiguration]{
		OutputState: i.ToOpenZfsVolumeNfsExportsClientConfigurationOutputWithContext(ctx).OutputState,
	}
}

// OpenZfsVolumeNfsExportsClientConfigurationArrayInput is an input type that accepts OpenZfsVolumeNfsExportsClientConfigurationArray and OpenZfsVolumeNfsExportsClientConfigurationArrayOutput values.
// You can construct a concrete instance of `OpenZfsVolumeNfsExportsClientConfigurationArrayInput` via:
//
//	OpenZfsVolumeNfsExportsClientConfigurationArray{ OpenZfsVolumeNfsExportsClientConfigurationArgs{...} }
type OpenZfsVolumeNfsExportsClientConfigurationArrayInput interface {
	pulumi.Input

	ToOpenZfsVolumeNfsExportsClientConfigurationArrayOutput() OpenZfsVolumeNfsExportsClientConfigurationArrayOutput
	ToOpenZfsVolumeNfsExportsClientConfigurationArrayOutputWithContext(context.Context) OpenZfsVolumeNfsExportsClientConfigurationArrayOutput
}

type OpenZfsVolumeNfsExportsClientConfigurationArray []OpenZfsVolumeNfsExportsClientConfigurationInput

func (OpenZfsVolumeNfsExportsClientConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenZfsVolumeNfsExportsClientConfiguration)(nil)).Elem()
}

func (i OpenZfsVolumeNfsExportsClientConfigurationArray) ToOpenZfsVolumeNfsExportsClientConfigurationArrayOutput() OpenZfsVolumeNfsExportsClientConfigurationArrayOutput {
	return i.ToOpenZfsVolumeNfsExportsClientConfigurationArrayOutputWithContext(context.Background())
}

func (i OpenZfsVolumeNfsExportsClientConfigurationArray) ToOpenZfsVolumeNfsExportsClientConfigurationArrayOutputWithContext(ctx context.Context) OpenZfsVolumeNfsExportsClientConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenZfsVolumeNfsExportsClientConfigurationArrayOutput)
}

func (i OpenZfsVolumeNfsExportsClientConfigurationArray) ToOutput(ctx context.Context) pulumix.Output[[]OpenZfsVolumeNfsExportsClientConfiguration] {
	return pulumix.Output[[]OpenZfsVolumeNfsExportsClientConfiguration]{
		OutputState: i.ToOpenZfsVolumeNfsExportsClientConfigurationArrayOutputWithContext(ctx).OutputState,
	}
}

type OpenZfsVolumeNfsExportsClientConfigurationOutput struct{ *pulumi.OutputState }

func (OpenZfsVolumeNfsExportsClientConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenZfsVolumeNfsExportsClientConfiguration)(nil)).Elem()
}

func (o OpenZfsVolumeNfsExportsClientConfigurationOutput) ToOpenZfsVolumeNfsExportsClientConfigurationOutput() OpenZfsVolumeNfsExportsClientConfigurationOutput {
	return o
}

func (o OpenZfsVolumeNfsExportsClientConfigurationOutput) ToOpenZfsVolumeNfsExportsClientConfigurationOutputWithContext(ctx context.Context) OpenZfsVolumeNfsExportsClientConfigurationOutput {
	return o
}

func (o OpenZfsVolumeNfsExportsClientConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[OpenZfsVolumeNfsExportsClientConfiguration] {
	return pulumix.Output[OpenZfsVolumeNfsExportsClientConfiguration]{
		OutputState: o.OutputState,
	}
}

// A value that specifies who can mount the file system. You can provide a wildcard character (*), an IP address (0.0.0.0), or a CIDR address (192.0.2.0/24. By default, Amazon FSx uses the wildcard character when specifying the client.
func (o OpenZfsVolumeNfsExportsClientConfigurationOutput) Clients() pulumi.StringOutput {
	return o.ApplyT(func(v OpenZfsVolumeNfsExportsClientConfiguration) string { return v.Clients }).(pulumi.StringOutput)
}

// The options to use when mounting the file system. Maximum of 20 items. See the [Linix NFS exports man page](https://linux.die.net/man/5/exports) for more information. `crossmount` and `sync` are used by default.
func (o OpenZfsVolumeNfsExportsClientConfigurationOutput) Options() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OpenZfsVolumeNfsExportsClientConfiguration) []string { return v.Options }).(pulumi.StringArrayOutput)
}

type OpenZfsVolumeNfsExportsClientConfigurationArrayOutput struct{ *pulumi.OutputState }

func (OpenZfsVolumeNfsExportsClientConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenZfsVolumeNfsExportsClientConfiguration)(nil)).Elem()
}

func (o OpenZfsVolumeNfsExportsClientConfigurationArrayOutput) ToOpenZfsVolumeNfsExportsClientConfigurationArrayOutput() OpenZfsVolumeNfsExportsClientConfigurationArrayOutput {
	return o
}

func (o OpenZfsVolumeNfsExportsClientConfigurationArrayOutput) ToOpenZfsVolumeNfsExportsClientConfigurationArrayOutputWithContext(ctx context.Context) OpenZfsVolumeNfsExportsClientConfigurationArrayOutput {
	return o
}

func (o OpenZfsVolumeNfsExportsClientConfigurationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OpenZfsVolumeNfsExportsClientConfiguration] {
	return pulumix.Output[[]OpenZfsVolumeNfsExportsClientConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o OpenZfsVolumeNfsExportsClientConfigurationArrayOutput) Index(i pulumi.IntInput) OpenZfsVolumeNfsExportsClientConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OpenZfsVolumeNfsExportsClientConfiguration {
		return vs[0].([]OpenZfsVolumeNfsExportsClientConfiguration)[vs[1].(int)]
	}).(OpenZfsVolumeNfsExportsClientConfigurationOutput)
}

type OpenZfsVolumeOriginSnapshot struct {
	CopyStrategy string `pulumi:"copyStrategy"`
	SnapshotArn  string `pulumi:"snapshotArn"`
}

// OpenZfsVolumeOriginSnapshotInput is an input type that accepts OpenZfsVolumeOriginSnapshotArgs and OpenZfsVolumeOriginSnapshotOutput values.
// You can construct a concrete instance of `OpenZfsVolumeOriginSnapshotInput` via:
//
//	OpenZfsVolumeOriginSnapshotArgs{...}
type OpenZfsVolumeOriginSnapshotInput interface {
	pulumi.Input

	ToOpenZfsVolumeOriginSnapshotOutput() OpenZfsVolumeOriginSnapshotOutput
	ToOpenZfsVolumeOriginSnapshotOutputWithContext(context.Context) OpenZfsVolumeOriginSnapshotOutput
}

type OpenZfsVolumeOriginSnapshotArgs struct {
	CopyStrategy pulumi.StringInput `pulumi:"copyStrategy"`
	SnapshotArn  pulumi.StringInput `pulumi:"snapshotArn"`
}

func (OpenZfsVolumeOriginSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenZfsVolumeOriginSnapshot)(nil)).Elem()
}

func (i OpenZfsVolumeOriginSnapshotArgs) ToOpenZfsVolumeOriginSnapshotOutput() OpenZfsVolumeOriginSnapshotOutput {
	return i.ToOpenZfsVolumeOriginSnapshotOutputWithContext(context.Background())
}

func (i OpenZfsVolumeOriginSnapshotArgs) ToOpenZfsVolumeOriginSnapshotOutputWithContext(ctx context.Context) OpenZfsVolumeOriginSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenZfsVolumeOriginSnapshotOutput)
}

func (i OpenZfsVolumeOriginSnapshotArgs) ToOutput(ctx context.Context) pulumix.Output[OpenZfsVolumeOriginSnapshot] {
	return pulumix.Output[OpenZfsVolumeOriginSnapshot]{
		OutputState: i.ToOpenZfsVolumeOriginSnapshotOutputWithContext(ctx).OutputState,
	}
}

func (i OpenZfsVolumeOriginSnapshotArgs) ToOpenZfsVolumeOriginSnapshotPtrOutput() OpenZfsVolumeOriginSnapshotPtrOutput {
	return i.ToOpenZfsVolumeOriginSnapshotPtrOutputWithContext(context.Background())
}

func (i OpenZfsVolumeOriginSnapshotArgs) ToOpenZfsVolumeOriginSnapshotPtrOutputWithContext(ctx context.Context) OpenZfsVolumeOriginSnapshotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenZfsVolumeOriginSnapshotOutput).ToOpenZfsVolumeOriginSnapshotPtrOutputWithContext(ctx)
}

// OpenZfsVolumeOriginSnapshotPtrInput is an input type that accepts OpenZfsVolumeOriginSnapshotArgs, OpenZfsVolumeOriginSnapshotPtr and OpenZfsVolumeOriginSnapshotPtrOutput values.
// You can construct a concrete instance of `OpenZfsVolumeOriginSnapshotPtrInput` via:
//
//	        OpenZfsVolumeOriginSnapshotArgs{...}
//
//	or:
//
//	        nil
type OpenZfsVolumeOriginSnapshotPtrInput interface {
	pulumi.Input

	ToOpenZfsVolumeOriginSnapshotPtrOutput() OpenZfsVolumeOriginSnapshotPtrOutput
	ToOpenZfsVolumeOriginSnapshotPtrOutputWithContext(context.Context) OpenZfsVolumeOriginSnapshotPtrOutput
}

type openZfsVolumeOriginSnapshotPtrType OpenZfsVolumeOriginSnapshotArgs

func OpenZfsVolumeOriginSnapshotPtr(v *OpenZfsVolumeOriginSnapshotArgs) OpenZfsVolumeOriginSnapshotPtrInput {
	return (*openZfsVolumeOriginSnapshotPtrType)(v)
}

func (*openZfsVolumeOriginSnapshotPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenZfsVolumeOriginSnapshot)(nil)).Elem()
}

func (i *openZfsVolumeOriginSnapshotPtrType) ToOpenZfsVolumeOriginSnapshotPtrOutput() OpenZfsVolumeOriginSnapshotPtrOutput {
	return i.ToOpenZfsVolumeOriginSnapshotPtrOutputWithContext(context.Background())
}

func (i *openZfsVolumeOriginSnapshotPtrType) ToOpenZfsVolumeOriginSnapshotPtrOutputWithContext(ctx context.Context) OpenZfsVolumeOriginSnapshotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenZfsVolumeOriginSnapshotPtrOutput)
}

func (i *openZfsVolumeOriginSnapshotPtrType) ToOutput(ctx context.Context) pulumix.Output[*OpenZfsVolumeOriginSnapshot] {
	return pulumix.Output[*OpenZfsVolumeOriginSnapshot]{
		OutputState: i.ToOpenZfsVolumeOriginSnapshotPtrOutputWithContext(ctx).OutputState,
	}
}

type OpenZfsVolumeOriginSnapshotOutput struct{ *pulumi.OutputState }

func (OpenZfsVolumeOriginSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenZfsVolumeOriginSnapshot)(nil)).Elem()
}

func (o OpenZfsVolumeOriginSnapshotOutput) ToOpenZfsVolumeOriginSnapshotOutput() OpenZfsVolumeOriginSnapshotOutput {
	return o
}

func (o OpenZfsVolumeOriginSnapshotOutput) ToOpenZfsVolumeOriginSnapshotOutputWithContext(ctx context.Context) OpenZfsVolumeOriginSnapshotOutput {
	return o
}

func (o OpenZfsVolumeOriginSnapshotOutput) ToOpenZfsVolumeOriginSnapshotPtrOutput() OpenZfsVolumeOriginSnapshotPtrOutput {
	return o.ToOpenZfsVolumeOriginSnapshotPtrOutputWithContext(context.Background())
}

func (o OpenZfsVolumeOriginSnapshotOutput) ToOpenZfsVolumeOriginSnapshotPtrOutputWithContext(ctx context.Context) OpenZfsVolumeOriginSnapshotPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OpenZfsVolumeOriginSnapshot) *OpenZfsVolumeOriginSnapshot {
		return &v
	}).(OpenZfsVolumeOriginSnapshotPtrOutput)
}

func (o OpenZfsVolumeOriginSnapshotOutput) ToOutput(ctx context.Context) pulumix.Output[OpenZfsVolumeOriginSnapshot] {
	return pulumix.Output[OpenZfsVolumeOriginSnapshot]{
		OutputState: o.OutputState,
	}
}

func (o OpenZfsVolumeOriginSnapshotOutput) CopyStrategy() pulumi.StringOutput {
	return o.ApplyT(func(v OpenZfsVolumeOriginSnapshot) string { return v.CopyStrategy }).(pulumi.StringOutput)
}

func (o OpenZfsVolumeOriginSnapshotOutput) SnapshotArn() pulumi.StringOutput {
	return o.ApplyT(func(v OpenZfsVolumeOriginSnapshot) string { return v.SnapshotArn }).(pulumi.StringOutput)
}

type OpenZfsVolumeOriginSnapshotPtrOutput struct{ *pulumi.OutputState }

func (OpenZfsVolumeOriginSnapshotPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenZfsVolumeOriginSnapshot)(nil)).Elem()
}

func (o OpenZfsVolumeOriginSnapshotPtrOutput) ToOpenZfsVolumeOriginSnapshotPtrOutput() OpenZfsVolumeOriginSnapshotPtrOutput {
	return o
}

func (o OpenZfsVolumeOriginSnapshotPtrOutput) ToOpenZfsVolumeOriginSnapshotPtrOutputWithContext(ctx context.Context) OpenZfsVolumeOriginSnapshotPtrOutput {
	return o
}

func (o OpenZfsVolumeOriginSnapshotPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*OpenZfsVolumeOriginSnapshot] {
	return pulumix.Output[*OpenZfsVolumeOriginSnapshot]{
		OutputState: o.OutputState,
	}
}

func (o OpenZfsVolumeOriginSnapshotPtrOutput) Elem() OpenZfsVolumeOriginSnapshotOutput {
	return o.ApplyT(func(v *OpenZfsVolumeOriginSnapshot) OpenZfsVolumeOriginSnapshot {
		if v != nil {
			return *v
		}
		var ret OpenZfsVolumeOriginSnapshot
		return ret
	}).(OpenZfsVolumeOriginSnapshotOutput)
}

func (o OpenZfsVolumeOriginSnapshotPtrOutput) CopyStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenZfsVolumeOriginSnapshot) *string {
		if v == nil {
			return nil
		}
		return &v.CopyStrategy
	}).(pulumi.StringPtrOutput)
}

func (o OpenZfsVolumeOriginSnapshotPtrOutput) SnapshotArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenZfsVolumeOriginSnapshot) *string {
		if v == nil {
			return nil
		}
		return &v.SnapshotArn
	}).(pulumi.StringPtrOutput)
}

type OpenZfsVolumeUserAndGroupQuota struct {
	// The ID of the user or group. Valid values between `0` and `2147483647`
	Id int `pulumi:"id"`
	// The amount of storage that the user or group can use in gibibytes (GiB). Valid values between `0` and `2147483647`
	StorageCapacityQuotaGib int    `pulumi:"storageCapacityQuotaGib"`
	Type                    string `pulumi:"type"`
}

// OpenZfsVolumeUserAndGroupQuotaInput is an input type that accepts OpenZfsVolumeUserAndGroupQuotaArgs and OpenZfsVolumeUserAndGroupQuotaOutput values.
// You can construct a concrete instance of `OpenZfsVolumeUserAndGroupQuotaInput` via:
//
//	OpenZfsVolumeUserAndGroupQuotaArgs{...}
type OpenZfsVolumeUserAndGroupQuotaInput interface {
	pulumi.Input

	ToOpenZfsVolumeUserAndGroupQuotaOutput() OpenZfsVolumeUserAndGroupQuotaOutput
	ToOpenZfsVolumeUserAndGroupQuotaOutputWithContext(context.Context) OpenZfsVolumeUserAndGroupQuotaOutput
}

type OpenZfsVolumeUserAndGroupQuotaArgs struct {
	// The ID of the user or group. Valid values between `0` and `2147483647`
	Id pulumi.IntInput `pulumi:"id"`
	// The amount of storage that the user or group can use in gibibytes (GiB). Valid values between `0` and `2147483647`
	StorageCapacityQuotaGib pulumi.IntInput    `pulumi:"storageCapacityQuotaGib"`
	Type                    pulumi.StringInput `pulumi:"type"`
}

func (OpenZfsVolumeUserAndGroupQuotaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenZfsVolumeUserAndGroupQuota)(nil)).Elem()
}

func (i OpenZfsVolumeUserAndGroupQuotaArgs) ToOpenZfsVolumeUserAndGroupQuotaOutput() OpenZfsVolumeUserAndGroupQuotaOutput {
	return i.ToOpenZfsVolumeUserAndGroupQuotaOutputWithContext(context.Background())
}

func (i OpenZfsVolumeUserAndGroupQuotaArgs) ToOpenZfsVolumeUserAndGroupQuotaOutputWithContext(ctx context.Context) OpenZfsVolumeUserAndGroupQuotaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenZfsVolumeUserAndGroupQuotaOutput)
}

func (i OpenZfsVolumeUserAndGroupQuotaArgs) ToOutput(ctx context.Context) pulumix.Output[OpenZfsVolumeUserAndGroupQuota] {
	return pulumix.Output[OpenZfsVolumeUserAndGroupQuota]{
		OutputState: i.ToOpenZfsVolumeUserAndGroupQuotaOutputWithContext(ctx).OutputState,
	}
}

// OpenZfsVolumeUserAndGroupQuotaArrayInput is an input type that accepts OpenZfsVolumeUserAndGroupQuotaArray and OpenZfsVolumeUserAndGroupQuotaArrayOutput values.
// You can construct a concrete instance of `OpenZfsVolumeUserAndGroupQuotaArrayInput` via:
//
//	OpenZfsVolumeUserAndGroupQuotaArray{ OpenZfsVolumeUserAndGroupQuotaArgs{...} }
type OpenZfsVolumeUserAndGroupQuotaArrayInput interface {
	pulumi.Input

	ToOpenZfsVolumeUserAndGroupQuotaArrayOutput() OpenZfsVolumeUserAndGroupQuotaArrayOutput
	ToOpenZfsVolumeUserAndGroupQuotaArrayOutputWithContext(context.Context) OpenZfsVolumeUserAndGroupQuotaArrayOutput
}

type OpenZfsVolumeUserAndGroupQuotaArray []OpenZfsVolumeUserAndGroupQuotaInput

func (OpenZfsVolumeUserAndGroupQuotaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenZfsVolumeUserAndGroupQuota)(nil)).Elem()
}

func (i OpenZfsVolumeUserAndGroupQuotaArray) ToOpenZfsVolumeUserAndGroupQuotaArrayOutput() OpenZfsVolumeUserAndGroupQuotaArrayOutput {
	return i.ToOpenZfsVolumeUserAndGroupQuotaArrayOutputWithContext(context.Background())
}

func (i OpenZfsVolumeUserAndGroupQuotaArray) ToOpenZfsVolumeUserAndGroupQuotaArrayOutputWithContext(ctx context.Context) OpenZfsVolumeUserAndGroupQuotaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenZfsVolumeUserAndGroupQuotaArrayOutput)
}

func (i OpenZfsVolumeUserAndGroupQuotaArray) ToOutput(ctx context.Context) pulumix.Output[[]OpenZfsVolumeUserAndGroupQuota] {
	return pulumix.Output[[]OpenZfsVolumeUserAndGroupQuota]{
		OutputState: i.ToOpenZfsVolumeUserAndGroupQuotaArrayOutputWithContext(ctx).OutputState,
	}
}

type OpenZfsVolumeUserAndGroupQuotaOutput struct{ *pulumi.OutputState }

func (OpenZfsVolumeUserAndGroupQuotaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OpenZfsVolumeUserAndGroupQuota)(nil)).Elem()
}

func (o OpenZfsVolumeUserAndGroupQuotaOutput) ToOpenZfsVolumeUserAndGroupQuotaOutput() OpenZfsVolumeUserAndGroupQuotaOutput {
	return o
}

func (o OpenZfsVolumeUserAndGroupQuotaOutput) ToOpenZfsVolumeUserAndGroupQuotaOutputWithContext(ctx context.Context) OpenZfsVolumeUserAndGroupQuotaOutput {
	return o
}

func (o OpenZfsVolumeUserAndGroupQuotaOutput) ToOutput(ctx context.Context) pulumix.Output[OpenZfsVolumeUserAndGroupQuota] {
	return pulumix.Output[OpenZfsVolumeUserAndGroupQuota]{
		OutputState: o.OutputState,
	}
}

// The ID of the user or group. Valid values between `0` and `2147483647`
func (o OpenZfsVolumeUserAndGroupQuotaOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v OpenZfsVolumeUserAndGroupQuota) int { return v.Id }).(pulumi.IntOutput)
}

// The amount of storage that the user or group can use in gibibytes (GiB). Valid values between `0` and `2147483647`
func (o OpenZfsVolumeUserAndGroupQuotaOutput) StorageCapacityQuotaGib() pulumi.IntOutput {
	return o.ApplyT(func(v OpenZfsVolumeUserAndGroupQuota) int { return v.StorageCapacityQuotaGib }).(pulumi.IntOutput)
}

func (o OpenZfsVolumeUserAndGroupQuotaOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v OpenZfsVolumeUserAndGroupQuota) string { return v.Type }).(pulumi.StringOutput)
}

type OpenZfsVolumeUserAndGroupQuotaArrayOutput struct{ *pulumi.OutputState }

func (OpenZfsVolumeUserAndGroupQuotaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OpenZfsVolumeUserAndGroupQuota)(nil)).Elem()
}

func (o OpenZfsVolumeUserAndGroupQuotaArrayOutput) ToOpenZfsVolumeUserAndGroupQuotaArrayOutput() OpenZfsVolumeUserAndGroupQuotaArrayOutput {
	return o
}

func (o OpenZfsVolumeUserAndGroupQuotaArrayOutput) ToOpenZfsVolumeUserAndGroupQuotaArrayOutputWithContext(ctx context.Context) OpenZfsVolumeUserAndGroupQuotaArrayOutput {
	return o
}

func (o OpenZfsVolumeUserAndGroupQuotaArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]OpenZfsVolumeUserAndGroupQuota] {
	return pulumix.Output[[]OpenZfsVolumeUserAndGroupQuota]{
		OutputState: o.OutputState,
	}
}

func (o OpenZfsVolumeUserAndGroupQuotaArrayOutput) Index(i pulumi.IntInput) OpenZfsVolumeUserAndGroupQuotaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OpenZfsVolumeUserAndGroupQuota {
		return vs[0].([]OpenZfsVolumeUserAndGroupQuota)[vs[1].(int)]
	}).(OpenZfsVolumeUserAndGroupQuotaOutput)
}

type WindowsFileSystemAuditLogConfiguration struct {
	// The Amazon Resource Name (ARN) for the destination of the audit logs. The destination can be any Amazon CloudWatch Logs log group ARN or Amazon Kinesis Data Firehose delivery stream ARN. Can be specified when `fileAccessAuditLogLevel` and `fileShareAccessAuditLogLevel` are not set to `DISABLED`. The name of the Amazon CloudWatch Logs log group must begin with the `/aws/fsx` prefix. The name of the Amazon Kinesis Data Firehouse delivery stream must begin with the `aws-fsx` prefix. If you do not provide a destination in `auditLogDestionation`, Amazon FSx will create and use a log stream in the CloudWatch Logs /aws/fsx/windows log group.
	AuditLogDestination *string `pulumi:"auditLogDestination"`
	// Sets which attempt type is logged by Amazon FSx for file and folder accesses. Valid values are `SUCCESS_ONLY`, `FAILURE_ONLY`, `SUCCESS_AND_FAILURE`, and `DISABLED`. Default value is `DISABLED`.
	FileAccessAuditLogLevel *string `pulumi:"fileAccessAuditLogLevel"`
	// Sets which attempt type is logged by Amazon FSx for file share accesses. Valid values are `SUCCESS_ONLY`, `FAILURE_ONLY`, `SUCCESS_AND_FAILURE`, and `DISABLED`. Default value is `DISABLED`.
	FileShareAccessAuditLogLevel *string `pulumi:"fileShareAccessAuditLogLevel"`
}

// WindowsFileSystemAuditLogConfigurationInput is an input type that accepts WindowsFileSystemAuditLogConfigurationArgs and WindowsFileSystemAuditLogConfigurationOutput values.
// You can construct a concrete instance of `WindowsFileSystemAuditLogConfigurationInput` via:
//
//	WindowsFileSystemAuditLogConfigurationArgs{...}
type WindowsFileSystemAuditLogConfigurationInput interface {
	pulumi.Input

	ToWindowsFileSystemAuditLogConfigurationOutput() WindowsFileSystemAuditLogConfigurationOutput
	ToWindowsFileSystemAuditLogConfigurationOutputWithContext(context.Context) WindowsFileSystemAuditLogConfigurationOutput
}

type WindowsFileSystemAuditLogConfigurationArgs struct {
	// The Amazon Resource Name (ARN) for the destination of the audit logs. The destination can be any Amazon CloudWatch Logs log group ARN or Amazon Kinesis Data Firehose delivery stream ARN. Can be specified when `fileAccessAuditLogLevel` and `fileShareAccessAuditLogLevel` are not set to `DISABLED`. The name of the Amazon CloudWatch Logs log group must begin with the `/aws/fsx` prefix. The name of the Amazon Kinesis Data Firehouse delivery stream must begin with the `aws-fsx` prefix. If you do not provide a destination in `auditLogDestionation`, Amazon FSx will create and use a log stream in the CloudWatch Logs /aws/fsx/windows log group.
	AuditLogDestination pulumi.StringPtrInput `pulumi:"auditLogDestination"`
	// Sets which attempt type is logged by Amazon FSx for file and folder accesses. Valid values are `SUCCESS_ONLY`, `FAILURE_ONLY`, `SUCCESS_AND_FAILURE`, and `DISABLED`. Default value is `DISABLED`.
	FileAccessAuditLogLevel pulumi.StringPtrInput `pulumi:"fileAccessAuditLogLevel"`
	// Sets which attempt type is logged by Amazon FSx for file share accesses. Valid values are `SUCCESS_ONLY`, `FAILURE_ONLY`, `SUCCESS_AND_FAILURE`, and `DISABLED`. Default value is `DISABLED`.
	FileShareAccessAuditLogLevel pulumi.StringPtrInput `pulumi:"fileShareAccessAuditLogLevel"`
}

func (WindowsFileSystemAuditLogConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsFileSystemAuditLogConfiguration)(nil)).Elem()
}

func (i WindowsFileSystemAuditLogConfigurationArgs) ToWindowsFileSystemAuditLogConfigurationOutput() WindowsFileSystemAuditLogConfigurationOutput {
	return i.ToWindowsFileSystemAuditLogConfigurationOutputWithContext(context.Background())
}

func (i WindowsFileSystemAuditLogConfigurationArgs) ToWindowsFileSystemAuditLogConfigurationOutputWithContext(ctx context.Context) WindowsFileSystemAuditLogConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsFileSystemAuditLogConfigurationOutput)
}

func (i WindowsFileSystemAuditLogConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[WindowsFileSystemAuditLogConfiguration] {
	return pulumix.Output[WindowsFileSystemAuditLogConfiguration]{
		OutputState: i.ToWindowsFileSystemAuditLogConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i WindowsFileSystemAuditLogConfigurationArgs) ToWindowsFileSystemAuditLogConfigurationPtrOutput() WindowsFileSystemAuditLogConfigurationPtrOutput {
	return i.ToWindowsFileSystemAuditLogConfigurationPtrOutputWithContext(context.Background())
}

func (i WindowsFileSystemAuditLogConfigurationArgs) ToWindowsFileSystemAuditLogConfigurationPtrOutputWithContext(ctx context.Context) WindowsFileSystemAuditLogConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsFileSystemAuditLogConfigurationOutput).ToWindowsFileSystemAuditLogConfigurationPtrOutputWithContext(ctx)
}

// WindowsFileSystemAuditLogConfigurationPtrInput is an input type that accepts WindowsFileSystemAuditLogConfigurationArgs, WindowsFileSystemAuditLogConfigurationPtr and WindowsFileSystemAuditLogConfigurationPtrOutput values.
// You can construct a concrete instance of `WindowsFileSystemAuditLogConfigurationPtrInput` via:
//
//	        WindowsFileSystemAuditLogConfigurationArgs{...}
//
//	or:
//
//	        nil
type WindowsFileSystemAuditLogConfigurationPtrInput interface {
	pulumi.Input

	ToWindowsFileSystemAuditLogConfigurationPtrOutput() WindowsFileSystemAuditLogConfigurationPtrOutput
	ToWindowsFileSystemAuditLogConfigurationPtrOutputWithContext(context.Context) WindowsFileSystemAuditLogConfigurationPtrOutput
}

type windowsFileSystemAuditLogConfigurationPtrType WindowsFileSystemAuditLogConfigurationArgs

func WindowsFileSystemAuditLogConfigurationPtr(v *WindowsFileSystemAuditLogConfigurationArgs) WindowsFileSystemAuditLogConfigurationPtrInput {
	return (*windowsFileSystemAuditLogConfigurationPtrType)(v)
}

func (*windowsFileSystemAuditLogConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsFileSystemAuditLogConfiguration)(nil)).Elem()
}

func (i *windowsFileSystemAuditLogConfigurationPtrType) ToWindowsFileSystemAuditLogConfigurationPtrOutput() WindowsFileSystemAuditLogConfigurationPtrOutput {
	return i.ToWindowsFileSystemAuditLogConfigurationPtrOutputWithContext(context.Background())
}

func (i *windowsFileSystemAuditLogConfigurationPtrType) ToWindowsFileSystemAuditLogConfigurationPtrOutputWithContext(ctx context.Context) WindowsFileSystemAuditLogConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsFileSystemAuditLogConfigurationPtrOutput)
}

func (i *windowsFileSystemAuditLogConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*WindowsFileSystemAuditLogConfiguration] {
	return pulumix.Output[*WindowsFileSystemAuditLogConfiguration]{
		OutputState: i.ToWindowsFileSystemAuditLogConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type WindowsFileSystemAuditLogConfigurationOutput struct{ *pulumi.OutputState }

func (WindowsFileSystemAuditLogConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsFileSystemAuditLogConfiguration)(nil)).Elem()
}

func (o WindowsFileSystemAuditLogConfigurationOutput) ToWindowsFileSystemAuditLogConfigurationOutput() WindowsFileSystemAuditLogConfigurationOutput {
	return o
}

func (o WindowsFileSystemAuditLogConfigurationOutput) ToWindowsFileSystemAuditLogConfigurationOutputWithContext(ctx context.Context) WindowsFileSystemAuditLogConfigurationOutput {
	return o
}

func (o WindowsFileSystemAuditLogConfigurationOutput) ToWindowsFileSystemAuditLogConfigurationPtrOutput() WindowsFileSystemAuditLogConfigurationPtrOutput {
	return o.ToWindowsFileSystemAuditLogConfigurationPtrOutputWithContext(context.Background())
}

func (o WindowsFileSystemAuditLogConfigurationOutput) ToWindowsFileSystemAuditLogConfigurationPtrOutputWithContext(ctx context.Context) WindowsFileSystemAuditLogConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WindowsFileSystemAuditLogConfiguration) *WindowsFileSystemAuditLogConfiguration {
		return &v
	}).(WindowsFileSystemAuditLogConfigurationPtrOutput)
}

func (o WindowsFileSystemAuditLogConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[WindowsFileSystemAuditLogConfiguration] {
	return pulumix.Output[WindowsFileSystemAuditLogConfiguration]{
		OutputState: o.OutputState,
	}
}

// The Amazon Resource Name (ARN) for the destination of the audit logs. The destination can be any Amazon CloudWatch Logs log group ARN or Amazon Kinesis Data Firehose delivery stream ARN. Can be specified when `fileAccessAuditLogLevel` and `fileShareAccessAuditLogLevel` are not set to `DISABLED`. The name of the Amazon CloudWatch Logs log group must begin with the `/aws/fsx` prefix. The name of the Amazon Kinesis Data Firehouse delivery stream must begin with the `aws-fsx` prefix. If you do not provide a destination in `auditLogDestionation`, Amazon FSx will create and use a log stream in the CloudWatch Logs /aws/fsx/windows log group.
func (o WindowsFileSystemAuditLogConfigurationOutput) AuditLogDestination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsFileSystemAuditLogConfiguration) *string { return v.AuditLogDestination }).(pulumi.StringPtrOutput)
}

// Sets which attempt type is logged by Amazon FSx for file and folder accesses. Valid values are `SUCCESS_ONLY`, `FAILURE_ONLY`, `SUCCESS_AND_FAILURE`, and `DISABLED`. Default value is `DISABLED`.
func (o WindowsFileSystemAuditLogConfigurationOutput) FileAccessAuditLogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsFileSystemAuditLogConfiguration) *string { return v.FileAccessAuditLogLevel }).(pulumi.StringPtrOutput)
}

// Sets which attempt type is logged by Amazon FSx for file share accesses. Valid values are `SUCCESS_ONLY`, `FAILURE_ONLY`, `SUCCESS_AND_FAILURE`, and `DISABLED`. Default value is `DISABLED`.
func (o WindowsFileSystemAuditLogConfigurationOutput) FileShareAccessAuditLogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsFileSystemAuditLogConfiguration) *string { return v.FileShareAccessAuditLogLevel }).(pulumi.StringPtrOutput)
}

type WindowsFileSystemAuditLogConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WindowsFileSystemAuditLogConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsFileSystemAuditLogConfiguration)(nil)).Elem()
}

func (o WindowsFileSystemAuditLogConfigurationPtrOutput) ToWindowsFileSystemAuditLogConfigurationPtrOutput() WindowsFileSystemAuditLogConfigurationPtrOutput {
	return o
}

func (o WindowsFileSystemAuditLogConfigurationPtrOutput) ToWindowsFileSystemAuditLogConfigurationPtrOutputWithContext(ctx context.Context) WindowsFileSystemAuditLogConfigurationPtrOutput {
	return o
}

func (o WindowsFileSystemAuditLogConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WindowsFileSystemAuditLogConfiguration] {
	return pulumix.Output[*WindowsFileSystemAuditLogConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o WindowsFileSystemAuditLogConfigurationPtrOutput) Elem() WindowsFileSystemAuditLogConfigurationOutput {
	return o.ApplyT(func(v *WindowsFileSystemAuditLogConfiguration) WindowsFileSystemAuditLogConfiguration {
		if v != nil {
			return *v
		}
		var ret WindowsFileSystemAuditLogConfiguration
		return ret
	}).(WindowsFileSystemAuditLogConfigurationOutput)
}

// The Amazon Resource Name (ARN) for the destination of the audit logs. The destination can be any Amazon CloudWatch Logs log group ARN or Amazon Kinesis Data Firehose delivery stream ARN. Can be specified when `fileAccessAuditLogLevel` and `fileShareAccessAuditLogLevel` are not set to `DISABLED`. The name of the Amazon CloudWatch Logs log group must begin with the `/aws/fsx` prefix. The name of the Amazon Kinesis Data Firehouse delivery stream must begin with the `aws-fsx` prefix. If you do not provide a destination in `auditLogDestionation`, Amazon FSx will create and use a log stream in the CloudWatch Logs /aws/fsx/windows log group.
func (o WindowsFileSystemAuditLogConfigurationPtrOutput) AuditLogDestination() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFileSystemAuditLogConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.AuditLogDestination
	}).(pulumi.StringPtrOutput)
}

// Sets which attempt type is logged by Amazon FSx for file and folder accesses. Valid values are `SUCCESS_ONLY`, `FAILURE_ONLY`, `SUCCESS_AND_FAILURE`, and `DISABLED`. Default value is `DISABLED`.
func (o WindowsFileSystemAuditLogConfigurationPtrOutput) FileAccessAuditLogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFileSystemAuditLogConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.FileAccessAuditLogLevel
	}).(pulumi.StringPtrOutput)
}

// Sets which attempt type is logged by Amazon FSx for file share accesses. Valid values are `SUCCESS_ONLY`, `FAILURE_ONLY`, `SUCCESS_AND_FAILURE`, and `DISABLED`. Default value is `DISABLED`.
func (o WindowsFileSystemAuditLogConfigurationPtrOutput) FileShareAccessAuditLogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFileSystemAuditLogConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.FileShareAccessAuditLogLevel
	}).(pulumi.StringPtrOutput)
}

type WindowsFileSystemDiskIopsConfiguration struct {
	// The total number of SSD IOPS provisioned for the file system.
	Iops *int `pulumi:"iops"`
	// Specifies whether the number of IOPS for the file system is using the system. Valid values are `AUTOMATIC` and `USER_PROVISIONED`. Default value is `AUTOMATIC`.
	Mode *string `pulumi:"mode"`
}

// WindowsFileSystemDiskIopsConfigurationInput is an input type that accepts WindowsFileSystemDiskIopsConfigurationArgs and WindowsFileSystemDiskIopsConfigurationOutput values.
// You can construct a concrete instance of `WindowsFileSystemDiskIopsConfigurationInput` via:
//
//	WindowsFileSystemDiskIopsConfigurationArgs{...}
type WindowsFileSystemDiskIopsConfigurationInput interface {
	pulumi.Input

	ToWindowsFileSystemDiskIopsConfigurationOutput() WindowsFileSystemDiskIopsConfigurationOutput
	ToWindowsFileSystemDiskIopsConfigurationOutputWithContext(context.Context) WindowsFileSystemDiskIopsConfigurationOutput
}

type WindowsFileSystemDiskIopsConfigurationArgs struct {
	// The total number of SSD IOPS provisioned for the file system.
	Iops pulumi.IntPtrInput `pulumi:"iops"`
	// Specifies whether the number of IOPS for the file system is using the system. Valid values are `AUTOMATIC` and `USER_PROVISIONED`. Default value is `AUTOMATIC`.
	Mode pulumi.StringPtrInput `pulumi:"mode"`
}

func (WindowsFileSystemDiskIopsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsFileSystemDiskIopsConfiguration)(nil)).Elem()
}

func (i WindowsFileSystemDiskIopsConfigurationArgs) ToWindowsFileSystemDiskIopsConfigurationOutput() WindowsFileSystemDiskIopsConfigurationOutput {
	return i.ToWindowsFileSystemDiskIopsConfigurationOutputWithContext(context.Background())
}

func (i WindowsFileSystemDiskIopsConfigurationArgs) ToWindowsFileSystemDiskIopsConfigurationOutputWithContext(ctx context.Context) WindowsFileSystemDiskIopsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsFileSystemDiskIopsConfigurationOutput)
}

func (i WindowsFileSystemDiskIopsConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[WindowsFileSystemDiskIopsConfiguration] {
	return pulumix.Output[WindowsFileSystemDiskIopsConfiguration]{
		OutputState: i.ToWindowsFileSystemDiskIopsConfigurationOutputWithContext(ctx).OutputState,
	}
}

func (i WindowsFileSystemDiskIopsConfigurationArgs) ToWindowsFileSystemDiskIopsConfigurationPtrOutput() WindowsFileSystemDiskIopsConfigurationPtrOutput {
	return i.ToWindowsFileSystemDiskIopsConfigurationPtrOutputWithContext(context.Background())
}

func (i WindowsFileSystemDiskIopsConfigurationArgs) ToWindowsFileSystemDiskIopsConfigurationPtrOutputWithContext(ctx context.Context) WindowsFileSystemDiskIopsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsFileSystemDiskIopsConfigurationOutput).ToWindowsFileSystemDiskIopsConfigurationPtrOutputWithContext(ctx)
}

// WindowsFileSystemDiskIopsConfigurationPtrInput is an input type that accepts WindowsFileSystemDiskIopsConfigurationArgs, WindowsFileSystemDiskIopsConfigurationPtr and WindowsFileSystemDiskIopsConfigurationPtrOutput values.
// You can construct a concrete instance of `WindowsFileSystemDiskIopsConfigurationPtrInput` via:
//
//	        WindowsFileSystemDiskIopsConfigurationArgs{...}
//
//	or:
//
//	        nil
type WindowsFileSystemDiskIopsConfigurationPtrInput interface {
	pulumi.Input

	ToWindowsFileSystemDiskIopsConfigurationPtrOutput() WindowsFileSystemDiskIopsConfigurationPtrOutput
	ToWindowsFileSystemDiskIopsConfigurationPtrOutputWithContext(context.Context) WindowsFileSystemDiskIopsConfigurationPtrOutput
}

type windowsFileSystemDiskIopsConfigurationPtrType WindowsFileSystemDiskIopsConfigurationArgs

func WindowsFileSystemDiskIopsConfigurationPtr(v *WindowsFileSystemDiskIopsConfigurationArgs) WindowsFileSystemDiskIopsConfigurationPtrInput {
	return (*windowsFileSystemDiskIopsConfigurationPtrType)(v)
}

func (*windowsFileSystemDiskIopsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsFileSystemDiskIopsConfiguration)(nil)).Elem()
}

func (i *windowsFileSystemDiskIopsConfigurationPtrType) ToWindowsFileSystemDiskIopsConfigurationPtrOutput() WindowsFileSystemDiskIopsConfigurationPtrOutput {
	return i.ToWindowsFileSystemDiskIopsConfigurationPtrOutputWithContext(context.Background())
}

func (i *windowsFileSystemDiskIopsConfigurationPtrType) ToWindowsFileSystemDiskIopsConfigurationPtrOutputWithContext(ctx context.Context) WindowsFileSystemDiskIopsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsFileSystemDiskIopsConfigurationPtrOutput)
}

func (i *windowsFileSystemDiskIopsConfigurationPtrType) ToOutput(ctx context.Context) pulumix.Output[*WindowsFileSystemDiskIopsConfiguration] {
	return pulumix.Output[*WindowsFileSystemDiskIopsConfiguration]{
		OutputState: i.ToWindowsFileSystemDiskIopsConfigurationPtrOutputWithContext(ctx).OutputState,
	}
}

type WindowsFileSystemDiskIopsConfigurationOutput struct{ *pulumi.OutputState }

func (WindowsFileSystemDiskIopsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsFileSystemDiskIopsConfiguration)(nil)).Elem()
}

func (o WindowsFileSystemDiskIopsConfigurationOutput) ToWindowsFileSystemDiskIopsConfigurationOutput() WindowsFileSystemDiskIopsConfigurationOutput {
	return o
}

func (o WindowsFileSystemDiskIopsConfigurationOutput) ToWindowsFileSystemDiskIopsConfigurationOutputWithContext(ctx context.Context) WindowsFileSystemDiskIopsConfigurationOutput {
	return o
}

func (o WindowsFileSystemDiskIopsConfigurationOutput) ToWindowsFileSystemDiskIopsConfigurationPtrOutput() WindowsFileSystemDiskIopsConfigurationPtrOutput {
	return o.ToWindowsFileSystemDiskIopsConfigurationPtrOutputWithContext(context.Background())
}

func (o WindowsFileSystemDiskIopsConfigurationOutput) ToWindowsFileSystemDiskIopsConfigurationPtrOutputWithContext(ctx context.Context) WindowsFileSystemDiskIopsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WindowsFileSystemDiskIopsConfiguration) *WindowsFileSystemDiskIopsConfiguration {
		return &v
	}).(WindowsFileSystemDiskIopsConfigurationPtrOutput)
}

func (o WindowsFileSystemDiskIopsConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[WindowsFileSystemDiskIopsConfiguration] {
	return pulumix.Output[WindowsFileSystemDiskIopsConfiguration]{
		OutputState: o.OutputState,
	}
}

// The total number of SSD IOPS provisioned for the file system.
func (o WindowsFileSystemDiskIopsConfigurationOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WindowsFileSystemDiskIopsConfiguration) *int { return v.Iops }).(pulumi.IntPtrOutput)
}

// Specifies whether the number of IOPS for the file system is using the system. Valid values are `AUTOMATIC` and `USER_PROVISIONED`. Default value is `AUTOMATIC`.
func (o WindowsFileSystemDiskIopsConfigurationOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsFileSystemDiskIopsConfiguration) *string { return v.Mode }).(pulumi.StringPtrOutput)
}

type WindowsFileSystemDiskIopsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (WindowsFileSystemDiskIopsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsFileSystemDiskIopsConfiguration)(nil)).Elem()
}

func (o WindowsFileSystemDiskIopsConfigurationPtrOutput) ToWindowsFileSystemDiskIopsConfigurationPtrOutput() WindowsFileSystemDiskIopsConfigurationPtrOutput {
	return o
}

func (o WindowsFileSystemDiskIopsConfigurationPtrOutput) ToWindowsFileSystemDiskIopsConfigurationPtrOutputWithContext(ctx context.Context) WindowsFileSystemDiskIopsConfigurationPtrOutput {
	return o
}

func (o WindowsFileSystemDiskIopsConfigurationPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WindowsFileSystemDiskIopsConfiguration] {
	return pulumix.Output[*WindowsFileSystemDiskIopsConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o WindowsFileSystemDiskIopsConfigurationPtrOutput) Elem() WindowsFileSystemDiskIopsConfigurationOutput {
	return o.ApplyT(func(v *WindowsFileSystemDiskIopsConfiguration) WindowsFileSystemDiskIopsConfiguration {
		if v != nil {
			return *v
		}
		var ret WindowsFileSystemDiskIopsConfiguration
		return ret
	}).(WindowsFileSystemDiskIopsConfigurationOutput)
}

// The total number of SSD IOPS provisioned for the file system.
func (o WindowsFileSystemDiskIopsConfigurationPtrOutput) Iops() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WindowsFileSystemDiskIopsConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.Iops
	}).(pulumi.IntPtrOutput)
}

// Specifies whether the number of IOPS for the file system is using the system. Valid values are `AUTOMATIC` and `USER_PROVISIONED`. Default value is `AUTOMATIC`.
func (o WindowsFileSystemDiskIopsConfigurationPtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFileSystemDiskIopsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Mode
	}).(pulumi.StringPtrOutput)
}

type WindowsFileSystemSelfManagedActiveDirectory struct {
	// A list of up to two IP addresses of DNS servers or domain controllers in the self-managed AD directory. The IP addresses need to be either in the same VPC CIDR range as the file system or in the private IP version 4 (IPv4) address ranges as specified in [RFC 1918](https://tools.ietf.org/html/rfc1918).
	DnsIps []string `pulumi:"dnsIps"`
	// The fully qualified domain name of the self-managed AD directory. For example, `corp.example.com`.
	DomainName string `pulumi:"domainName"`
	// The name of the domain group whose members are granted administrative privileges for the file system. Administrative privileges include taking ownership of files and folders, and setting audit controls (audit ACLs) on files and folders. The group that you specify must already exist in your domain. Defaults to `Domain Admins`.
	FileSystemAdministratorsGroup *string `pulumi:"fileSystemAdministratorsGroup"`
	// The fully qualified distinguished name of the organizational unit within your self-managed AD directory that the Windows File Server instance will join. For example, `OU=FSx,DC=yourdomain,DC=corp,DC=com`. Only accepts OU as the direct parent of the file system. If none is provided, the FSx file system is created in the default location of your self-managed AD directory. To learn more, see [RFC 2253](https://tools.ietf.org/html/rfc2253).
	OrganizationalUnitDistinguishedName *string `pulumi:"organizationalUnitDistinguishedName"`
	// The password for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
	Password string `pulumi:"password"`
	// The user name for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
	Username string `pulumi:"username"`
}

// WindowsFileSystemSelfManagedActiveDirectoryInput is an input type that accepts WindowsFileSystemSelfManagedActiveDirectoryArgs and WindowsFileSystemSelfManagedActiveDirectoryOutput values.
// You can construct a concrete instance of `WindowsFileSystemSelfManagedActiveDirectoryInput` via:
//
//	WindowsFileSystemSelfManagedActiveDirectoryArgs{...}
type WindowsFileSystemSelfManagedActiveDirectoryInput interface {
	pulumi.Input

	ToWindowsFileSystemSelfManagedActiveDirectoryOutput() WindowsFileSystemSelfManagedActiveDirectoryOutput
	ToWindowsFileSystemSelfManagedActiveDirectoryOutputWithContext(context.Context) WindowsFileSystemSelfManagedActiveDirectoryOutput
}

type WindowsFileSystemSelfManagedActiveDirectoryArgs struct {
	// A list of up to two IP addresses of DNS servers or domain controllers in the self-managed AD directory. The IP addresses need to be either in the same VPC CIDR range as the file system or in the private IP version 4 (IPv4) address ranges as specified in [RFC 1918](https://tools.ietf.org/html/rfc1918).
	DnsIps pulumi.StringArrayInput `pulumi:"dnsIps"`
	// The fully qualified domain name of the self-managed AD directory. For example, `corp.example.com`.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// The name of the domain group whose members are granted administrative privileges for the file system. Administrative privileges include taking ownership of files and folders, and setting audit controls (audit ACLs) on files and folders. The group that you specify must already exist in your domain. Defaults to `Domain Admins`.
	FileSystemAdministratorsGroup pulumi.StringPtrInput `pulumi:"fileSystemAdministratorsGroup"`
	// The fully qualified distinguished name of the organizational unit within your self-managed AD directory that the Windows File Server instance will join. For example, `OU=FSx,DC=yourdomain,DC=corp,DC=com`. Only accepts OU as the direct parent of the file system. If none is provided, the FSx file system is created in the default location of your self-managed AD directory. To learn more, see [RFC 2253](https://tools.ietf.org/html/rfc2253).
	OrganizationalUnitDistinguishedName pulumi.StringPtrInput `pulumi:"organizationalUnitDistinguishedName"`
	// The password for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
	Password pulumi.StringInput `pulumi:"password"`
	// The user name for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
	Username pulumi.StringInput `pulumi:"username"`
}

func (WindowsFileSystemSelfManagedActiveDirectoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsFileSystemSelfManagedActiveDirectory)(nil)).Elem()
}

func (i WindowsFileSystemSelfManagedActiveDirectoryArgs) ToWindowsFileSystemSelfManagedActiveDirectoryOutput() WindowsFileSystemSelfManagedActiveDirectoryOutput {
	return i.ToWindowsFileSystemSelfManagedActiveDirectoryOutputWithContext(context.Background())
}

func (i WindowsFileSystemSelfManagedActiveDirectoryArgs) ToWindowsFileSystemSelfManagedActiveDirectoryOutputWithContext(ctx context.Context) WindowsFileSystemSelfManagedActiveDirectoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsFileSystemSelfManagedActiveDirectoryOutput)
}

func (i WindowsFileSystemSelfManagedActiveDirectoryArgs) ToOutput(ctx context.Context) pulumix.Output[WindowsFileSystemSelfManagedActiveDirectory] {
	return pulumix.Output[WindowsFileSystemSelfManagedActiveDirectory]{
		OutputState: i.ToWindowsFileSystemSelfManagedActiveDirectoryOutputWithContext(ctx).OutputState,
	}
}

func (i WindowsFileSystemSelfManagedActiveDirectoryArgs) ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutput() WindowsFileSystemSelfManagedActiveDirectoryPtrOutput {
	return i.ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutputWithContext(context.Background())
}

func (i WindowsFileSystemSelfManagedActiveDirectoryArgs) ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutputWithContext(ctx context.Context) WindowsFileSystemSelfManagedActiveDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsFileSystemSelfManagedActiveDirectoryOutput).ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutputWithContext(ctx)
}

// WindowsFileSystemSelfManagedActiveDirectoryPtrInput is an input type that accepts WindowsFileSystemSelfManagedActiveDirectoryArgs, WindowsFileSystemSelfManagedActiveDirectoryPtr and WindowsFileSystemSelfManagedActiveDirectoryPtrOutput values.
// You can construct a concrete instance of `WindowsFileSystemSelfManagedActiveDirectoryPtrInput` via:
//
//	        WindowsFileSystemSelfManagedActiveDirectoryArgs{...}
//
//	or:
//
//	        nil
type WindowsFileSystemSelfManagedActiveDirectoryPtrInput interface {
	pulumi.Input

	ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutput() WindowsFileSystemSelfManagedActiveDirectoryPtrOutput
	ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutputWithContext(context.Context) WindowsFileSystemSelfManagedActiveDirectoryPtrOutput
}

type windowsFileSystemSelfManagedActiveDirectoryPtrType WindowsFileSystemSelfManagedActiveDirectoryArgs

func WindowsFileSystemSelfManagedActiveDirectoryPtr(v *WindowsFileSystemSelfManagedActiveDirectoryArgs) WindowsFileSystemSelfManagedActiveDirectoryPtrInput {
	return (*windowsFileSystemSelfManagedActiveDirectoryPtrType)(v)
}

func (*windowsFileSystemSelfManagedActiveDirectoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsFileSystemSelfManagedActiveDirectory)(nil)).Elem()
}

func (i *windowsFileSystemSelfManagedActiveDirectoryPtrType) ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutput() WindowsFileSystemSelfManagedActiveDirectoryPtrOutput {
	return i.ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutputWithContext(context.Background())
}

func (i *windowsFileSystemSelfManagedActiveDirectoryPtrType) ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutputWithContext(ctx context.Context) WindowsFileSystemSelfManagedActiveDirectoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsFileSystemSelfManagedActiveDirectoryPtrOutput)
}

func (i *windowsFileSystemSelfManagedActiveDirectoryPtrType) ToOutput(ctx context.Context) pulumix.Output[*WindowsFileSystemSelfManagedActiveDirectory] {
	return pulumix.Output[*WindowsFileSystemSelfManagedActiveDirectory]{
		OutputState: i.ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutputWithContext(ctx).OutputState,
	}
}

type WindowsFileSystemSelfManagedActiveDirectoryOutput struct{ *pulumi.OutputState }

func (WindowsFileSystemSelfManagedActiveDirectoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WindowsFileSystemSelfManagedActiveDirectory)(nil)).Elem()
}

func (o WindowsFileSystemSelfManagedActiveDirectoryOutput) ToWindowsFileSystemSelfManagedActiveDirectoryOutput() WindowsFileSystemSelfManagedActiveDirectoryOutput {
	return o
}

func (o WindowsFileSystemSelfManagedActiveDirectoryOutput) ToWindowsFileSystemSelfManagedActiveDirectoryOutputWithContext(ctx context.Context) WindowsFileSystemSelfManagedActiveDirectoryOutput {
	return o
}

func (o WindowsFileSystemSelfManagedActiveDirectoryOutput) ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutput() WindowsFileSystemSelfManagedActiveDirectoryPtrOutput {
	return o.ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutputWithContext(context.Background())
}

func (o WindowsFileSystemSelfManagedActiveDirectoryOutput) ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutputWithContext(ctx context.Context) WindowsFileSystemSelfManagedActiveDirectoryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WindowsFileSystemSelfManagedActiveDirectory) *WindowsFileSystemSelfManagedActiveDirectory {
		return &v
	}).(WindowsFileSystemSelfManagedActiveDirectoryPtrOutput)
}

func (o WindowsFileSystemSelfManagedActiveDirectoryOutput) ToOutput(ctx context.Context) pulumix.Output[WindowsFileSystemSelfManagedActiveDirectory] {
	return pulumix.Output[WindowsFileSystemSelfManagedActiveDirectory]{
		OutputState: o.OutputState,
	}
}

// A list of up to two IP addresses of DNS servers or domain controllers in the self-managed AD directory. The IP addresses need to be either in the same VPC CIDR range as the file system or in the private IP version 4 (IPv4) address ranges as specified in [RFC 1918](https://tools.ietf.org/html/rfc1918).
func (o WindowsFileSystemSelfManagedActiveDirectoryOutput) DnsIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v WindowsFileSystemSelfManagedActiveDirectory) []string { return v.DnsIps }).(pulumi.StringArrayOutput)
}

// The fully qualified domain name of the self-managed AD directory. For example, `corp.example.com`.
func (o WindowsFileSystemSelfManagedActiveDirectoryOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsFileSystemSelfManagedActiveDirectory) string { return v.DomainName }).(pulumi.StringOutput)
}

// The name of the domain group whose members are granted administrative privileges for the file system. Administrative privileges include taking ownership of files and folders, and setting audit controls (audit ACLs) on files and folders. The group that you specify must already exist in your domain. Defaults to `Domain Admins`.
func (o WindowsFileSystemSelfManagedActiveDirectoryOutput) FileSystemAdministratorsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsFileSystemSelfManagedActiveDirectory) *string { return v.FileSystemAdministratorsGroup }).(pulumi.StringPtrOutput)
}

// The fully qualified distinguished name of the organizational unit within your self-managed AD directory that the Windows File Server instance will join. For example, `OU=FSx,DC=yourdomain,DC=corp,DC=com`. Only accepts OU as the direct parent of the file system. If none is provided, the FSx file system is created in the default location of your self-managed AD directory. To learn more, see [RFC 2253](https://tools.ietf.org/html/rfc2253).
func (o WindowsFileSystemSelfManagedActiveDirectoryOutput) OrganizationalUnitDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WindowsFileSystemSelfManagedActiveDirectory) *string {
		return v.OrganizationalUnitDistinguishedName
	}).(pulumi.StringPtrOutput)
}

// The password for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
func (o WindowsFileSystemSelfManagedActiveDirectoryOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsFileSystemSelfManagedActiveDirectory) string { return v.Password }).(pulumi.StringOutput)
}

// The user name for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
func (o WindowsFileSystemSelfManagedActiveDirectoryOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v WindowsFileSystemSelfManagedActiveDirectory) string { return v.Username }).(pulumi.StringOutput)
}

type WindowsFileSystemSelfManagedActiveDirectoryPtrOutput struct{ *pulumi.OutputState }

func (WindowsFileSystemSelfManagedActiveDirectoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsFileSystemSelfManagedActiveDirectory)(nil)).Elem()
}

func (o WindowsFileSystemSelfManagedActiveDirectoryPtrOutput) ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutput() WindowsFileSystemSelfManagedActiveDirectoryPtrOutput {
	return o
}

func (o WindowsFileSystemSelfManagedActiveDirectoryPtrOutput) ToWindowsFileSystemSelfManagedActiveDirectoryPtrOutputWithContext(ctx context.Context) WindowsFileSystemSelfManagedActiveDirectoryPtrOutput {
	return o
}

func (o WindowsFileSystemSelfManagedActiveDirectoryPtrOutput) ToOutput(ctx context.Context) pulumix.Output[*WindowsFileSystemSelfManagedActiveDirectory] {
	return pulumix.Output[*WindowsFileSystemSelfManagedActiveDirectory]{
		OutputState: o.OutputState,
	}
}

func (o WindowsFileSystemSelfManagedActiveDirectoryPtrOutput) Elem() WindowsFileSystemSelfManagedActiveDirectoryOutput {
	return o.ApplyT(func(v *WindowsFileSystemSelfManagedActiveDirectory) WindowsFileSystemSelfManagedActiveDirectory {
		if v != nil {
			return *v
		}
		var ret WindowsFileSystemSelfManagedActiveDirectory
		return ret
	}).(WindowsFileSystemSelfManagedActiveDirectoryOutput)
}

// A list of up to two IP addresses of DNS servers or domain controllers in the self-managed AD directory. The IP addresses need to be either in the same VPC CIDR range as the file system or in the private IP version 4 (IPv4) address ranges as specified in [RFC 1918](https://tools.ietf.org/html/rfc1918).
func (o WindowsFileSystemSelfManagedActiveDirectoryPtrOutput) DnsIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WindowsFileSystemSelfManagedActiveDirectory) []string {
		if v == nil {
			return nil
		}
		return v.DnsIps
	}).(pulumi.StringArrayOutput)
}

// The fully qualified domain name of the self-managed AD directory. For example, `corp.example.com`.
func (o WindowsFileSystemSelfManagedActiveDirectoryPtrOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFileSystemSelfManagedActiveDirectory) *string {
		if v == nil {
			return nil
		}
		return &v.DomainName
	}).(pulumi.StringPtrOutput)
}

// The name of the domain group whose members are granted administrative privileges for the file system. Administrative privileges include taking ownership of files and folders, and setting audit controls (audit ACLs) on files and folders. The group that you specify must already exist in your domain. Defaults to `Domain Admins`.
func (o WindowsFileSystemSelfManagedActiveDirectoryPtrOutput) FileSystemAdministratorsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFileSystemSelfManagedActiveDirectory) *string {
		if v == nil {
			return nil
		}
		return v.FileSystemAdministratorsGroup
	}).(pulumi.StringPtrOutput)
}

// The fully qualified distinguished name of the organizational unit within your self-managed AD directory that the Windows File Server instance will join. For example, `OU=FSx,DC=yourdomain,DC=corp,DC=com`. Only accepts OU as the direct parent of the file system. If none is provided, the FSx file system is created in the default location of your self-managed AD directory. To learn more, see [RFC 2253](https://tools.ietf.org/html/rfc2253).
func (o WindowsFileSystemSelfManagedActiveDirectoryPtrOutput) OrganizationalUnitDistinguishedName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFileSystemSelfManagedActiveDirectory) *string {
		if v == nil {
			return nil
		}
		return v.OrganizationalUnitDistinguishedName
	}).(pulumi.StringPtrOutput)
}

// The password for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
func (o WindowsFileSystemSelfManagedActiveDirectoryPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFileSystemSelfManagedActiveDirectory) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The user name for the service account on your self-managed AD domain that Amazon FSx will use to join to your AD domain.
func (o WindowsFileSystemSelfManagedActiveDirectoryPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFileSystemSelfManagedActiveDirectory) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type GetOntapFileSystemDiskIopsConfiguration struct {
	// The total number of SSD IOPS provisioned for the file system.
	Iops int `pulumi:"iops"`
	// Specifies whether the file system is using the `AUTOMATIC` setting of SSD IOPS of 3 IOPS per GB of storage capacity, or if it using a `USER_PROVISIONED` value.
	Mode string `pulumi:"mode"`
}

// GetOntapFileSystemDiskIopsConfigurationInput is an input type that accepts GetOntapFileSystemDiskIopsConfigurationArgs and GetOntapFileSystemDiskIopsConfigurationOutput values.
// You can construct a concrete instance of `GetOntapFileSystemDiskIopsConfigurationInput` via:
//
//	GetOntapFileSystemDiskIopsConfigurationArgs{...}
type GetOntapFileSystemDiskIopsConfigurationInput interface {
	pulumi.Input

	ToGetOntapFileSystemDiskIopsConfigurationOutput() GetOntapFileSystemDiskIopsConfigurationOutput
	ToGetOntapFileSystemDiskIopsConfigurationOutputWithContext(context.Context) GetOntapFileSystemDiskIopsConfigurationOutput
}

type GetOntapFileSystemDiskIopsConfigurationArgs struct {
	// The total number of SSD IOPS provisioned for the file system.
	Iops pulumi.IntInput `pulumi:"iops"`
	// Specifies whether the file system is using the `AUTOMATIC` setting of SSD IOPS of 3 IOPS per GB of storage capacity, or if it using a `USER_PROVISIONED` value.
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetOntapFileSystemDiskIopsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapFileSystemDiskIopsConfiguration)(nil)).Elem()
}

func (i GetOntapFileSystemDiskIopsConfigurationArgs) ToGetOntapFileSystemDiskIopsConfigurationOutput() GetOntapFileSystemDiskIopsConfigurationOutput {
	return i.ToGetOntapFileSystemDiskIopsConfigurationOutputWithContext(context.Background())
}

func (i GetOntapFileSystemDiskIopsConfigurationArgs) ToGetOntapFileSystemDiskIopsConfigurationOutputWithContext(ctx context.Context) GetOntapFileSystemDiskIopsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapFileSystemDiskIopsConfigurationOutput)
}

func (i GetOntapFileSystemDiskIopsConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[GetOntapFileSystemDiskIopsConfiguration] {
	return pulumix.Output[GetOntapFileSystemDiskIopsConfiguration]{
		OutputState: i.ToGetOntapFileSystemDiskIopsConfigurationOutputWithContext(ctx).OutputState,
	}
}

// GetOntapFileSystemDiskIopsConfigurationArrayInput is an input type that accepts GetOntapFileSystemDiskIopsConfigurationArray and GetOntapFileSystemDiskIopsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetOntapFileSystemDiskIopsConfigurationArrayInput` via:
//
//	GetOntapFileSystemDiskIopsConfigurationArray{ GetOntapFileSystemDiskIopsConfigurationArgs{...} }
type GetOntapFileSystemDiskIopsConfigurationArrayInput interface {
	pulumi.Input

	ToGetOntapFileSystemDiskIopsConfigurationArrayOutput() GetOntapFileSystemDiskIopsConfigurationArrayOutput
	ToGetOntapFileSystemDiskIopsConfigurationArrayOutputWithContext(context.Context) GetOntapFileSystemDiskIopsConfigurationArrayOutput
}

type GetOntapFileSystemDiskIopsConfigurationArray []GetOntapFileSystemDiskIopsConfigurationInput

func (GetOntapFileSystemDiskIopsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapFileSystemDiskIopsConfiguration)(nil)).Elem()
}

func (i GetOntapFileSystemDiskIopsConfigurationArray) ToGetOntapFileSystemDiskIopsConfigurationArrayOutput() GetOntapFileSystemDiskIopsConfigurationArrayOutput {
	return i.ToGetOntapFileSystemDiskIopsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetOntapFileSystemDiskIopsConfigurationArray) ToGetOntapFileSystemDiskIopsConfigurationArrayOutputWithContext(ctx context.Context) GetOntapFileSystemDiskIopsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapFileSystemDiskIopsConfigurationArrayOutput)
}

func (i GetOntapFileSystemDiskIopsConfigurationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapFileSystemDiskIopsConfiguration] {
	return pulumix.Output[[]GetOntapFileSystemDiskIopsConfiguration]{
		OutputState: i.ToGetOntapFileSystemDiskIopsConfigurationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOntapFileSystemDiskIopsConfigurationOutput struct{ *pulumi.OutputState }

func (GetOntapFileSystemDiskIopsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapFileSystemDiskIopsConfiguration)(nil)).Elem()
}

func (o GetOntapFileSystemDiskIopsConfigurationOutput) ToGetOntapFileSystemDiskIopsConfigurationOutput() GetOntapFileSystemDiskIopsConfigurationOutput {
	return o
}

func (o GetOntapFileSystemDiskIopsConfigurationOutput) ToGetOntapFileSystemDiskIopsConfigurationOutputWithContext(ctx context.Context) GetOntapFileSystemDiskIopsConfigurationOutput {
	return o
}

func (o GetOntapFileSystemDiskIopsConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GetOntapFileSystemDiskIopsConfiguration] {
	return pulumix.Output[GetOntapFileSystemDiskIopsConfiguration]{
		OutputState: o.OutputState,
	}
}

// The total number of SSD IOPS provisioned for the file system.
func (o GetOntapFileSystemDiskIopsConfigurationOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v GetOntapFileSystemDiskIopsConfiguration) int { return v.Iops }).(pulumi.IntOutput)
}

// Specifies whether the file system is using the `AUTOMATIC` setting of SSD IOPS of 3 IOPS per GB of storage capacity, or if it using a `USER_PROVISIONED` value.
func (o GetOntapFileSystemDiskIopsConfigurationOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetOntapFileSystemDiskIopsConfiguration) string { return v.Mode }).(pulumi.StringOutput)
}

type GetOntapFileSystemDiskIopsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetOntapFileSystemDiskIopsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapFileSystemDiskIopsConfiguration)(nil)).Elem()
}

func (o GetOntapFileSystemDiskIopsConfigurationArrayOutput) ToGetOntapFileSystemDiskIopsConfigurationArrayOutput() GetOntapFileSystemDiskIopsConfigurationArrayOutput {
	return o
}

func (o GetOntapFileSystemDiskIopsConfigurationArrayOutput) ToGetOntapFileSystemDiskIopsConfigurationArrayOutputWithContext(ctx context.Context) GetOntapFileSystemDiskIopsConfigurationArrayOutput {
	return o
}

func (o GetOntapFileSystemDiskIopsConfigurationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapFileSystemDiskIopsConfiguration] {
	return pulumix.Output[[]GetOntapFileSystemDiskIopsConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o GetOntapFileSystemDiskIopsConfigurationArrayOutput) Index(i pulumi.IntInput) GetOntapFileSystemDiskIopsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOntapFileSystemDiskIopsConfiguration {
		return vs[0].([]GetOntapFileSystemDiskIopsConfiguration)[vs[1].(int)]
	}).(GetOntapFileSystemDiskIopsConfigurationOutput)
}

type GetOntapFileSystemEndpoint struct {
	// A FileSystemEndpoint for managing your file system by setting up NetApp SnapMirror with other ONTAP systems. See FileSystemEndpoint below.
	Interclusters []GetOntapFileSystemEndpointIntercluster `pulumi:"interclusters"`
	// A FileSystemEndpoint for managing your file system using the NetApp ONTAP CLI and NetApp ONTAP API. See FileSystemEndpoint below.
	Managements []GetOntapFileSystemEndpointManagement `pulumi:"managements"`
}

// GetOntapFileSystemEndpointInput is an input type that accepts GetOntapFileSystemEndpointArgs and GetOntapFileSystemEndpointOutput values.
// You can construct a concrete instance of `GetOntapFileSystemEndpointInput` via:
//
//	GetOntapFileSystemEndpointArgs{...}
type GetOntapFileSystemEndpointInput interface {
	pulumi.Input

	ToGetOntapFileSystemEndpointOutput() GetOntapFileSystemEndpointOutput
	ToGetOntapFileSystemEndpointOutputWithContext(context.Context) GetOntapFileSystemEndpointOutput
}

type GetOntapFileSystemEndpointArgs struct {
	// A FileSystemEndpoint for managing your file system by setting up NetApp SnapMirror with other ONTAP systems. See FileSystemEndpoint below.
	Interclusters GetOntapFileSystemEndpointInterclusterArrayInput `pulumi:"interclusters"`
	// A FileSystemEndpoint for managing your file system using the NetApp ONTAP CLI and NetApp ONTAP API. See FileSystemEndpoint below.
	Managements GetOntapFileSystemEndpointManagementArrayInput `pulumi:"managements"`
}

func (GetOntapFileSystemEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapFileSystemEndpoint)(nil)).Elem()
}

func (i GetOntapFileSystemEndpointArgs) ToGetOntapFileSystemEndpointOutput() GetOntapFileSystemEndpointOutput {
	return i.ToGetOntapFileSystemEndpointOutputWithContext(context.Background())
}

func (i GetOntapFileSystemEndpointArgs) ToGetOntapFileSystemEndpointOutputWithContext(ctx context.Context) GetOntapFileSystemEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapFileSystemEndpointOutput)
}

func (i GetOntapFileSystemEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[GetOntapFileSystemEndpoint] {
	return pulumix.Output[GetOntapFileSystemEndpoint]{
		OutputState: i.ToGetOntapFileSystemEndpointOutputWithContext(ctx).OutputState,
	}
}

// GetOntapFileSystemEndpointArrayInput is an input type that accepts GetOntapFileSystemEndpointArray and GetOntapFileSystemEndpointArrayOutput values.
// You can construct a concrete instance of `GetOntapFileSystemEndpointArrayInput` via:
//
//	GetOntapFileSystemEndpointArray{ GetOntapFileSystemEndpointArgs{...} }
type GetOntapFileSystemEndpointArrayInput interface {
	pulumi.Input

	ToGetOntapFileSystemEndpointArrayOutput() GetOntapFileSystemEndpointArrayOutput
	ToGetOntapFileSystemEndpointArrayOutputWithContext(context.Context) GetOntapFileSystemEndpointArrayOutput
}

type GetOntapFileSystemEndpointArray []GetOntapFileSystemEndpointInput

func (GetOntapFileSystemEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapFileSystemEndpoint)(nil)).Elem()
}

func (i GetOntapFileSystemEndpointArray) ToGetOntapFileSystemEndpointArrayOutput() GetOntapFileSystemEndpointArrayOutput {
	return i.ToGetOntapFileSystemEndpointArrayOutputWithContext(context.Background())
}

func (i GetOntapFileSystemEndpointArray) ToGetOntapFileSystemEndpointArrayOutputWithContext(ctx context.Context) GetOntapFileSystemEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapFileSystemEndpointArrayOutput)
}

func (i GetOntapFileSystemEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapFileSystemEndpoint] {
	return pulumix.Output[[]GetOntapFileSystemEndpoint]{
		OutputState: i.ToGetOntapFileSystemEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOntapFileSystemEndpointOutput struct{ *pulumi.OutputState }

func (GetOntapFileSystemEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapFileSystemEndpoint)(nil)).Elem()
}

func (o GetOntapFileSystemEndpointOutput) ToGetOntapFileSystemEndpointOutput() GetOntapFileSystemEndpointOutput {
	return o
}

func (o GetOntapFileSystemEndpointOutput) ToGetOntapFileSystemEndpointOutputWithContext(ctx context.Context) GetOntapFileSystemEndpointOutput {
	return o
}

func (o GetOntapFileSystemEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[GetOntapFileSystemEndpoint] {
	return pulumix.Output[GetOntapFileSystemEndpoint]{
		OutputState: o.OutputState,
	}
}

// A FileSystemEndpoint for managing your file system by setting up NetApp SnapMirror with other ONTAP systems. See FileSystemEndpoint below.
func (o GetOntapFileSystemEndpointOutput) Interclusters() GetOntapFileSystemEndpointInterclusterArrayOutput {
	return o.ApplyT(func(v GetOntapFileSystemEndpoint) []GetOntapFileSystemEndpointIntercluster { return v.Interclusters }).(GetOntapFileSystemEndpointInterclusterArrayOutput)
}

// A FileSystemEndpoint for managing your file system using the NetApp ONTAP CLI and NetApp ONTAP API. See FileSystemEndpoint below.
func (o GetOntapFileSystemEndpointOutput) Managements() GetOntapFileSystemEndpointManagementArrayOutput {
	return o.ApplyT(func(v GetOntapFileSystemEndpoint) []GetOntapFileSystemEndpointManagement { return v.Managements }).(GetOntapFileSystemEndpointManagementArrayOutput)
}

type GetOntapFileSystemEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetOntapFileSystemEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapFileSystemEndpoint)(nil)).Elem()
}

func (o GetOntapFileSystemEndpointArrayOutput) ToGetOntapFileSystemEndpointArrayOutput() GetOntapFileSystemEndpointArrayOutput {
	return o
}

func (o GetOntapFileSystemEndpointArrayOutput) ToGetOntapFileSystemEndpointArrayOutputWithContext(ctx context.Context) GetOntapFileSystemEndpointArrayOutput {
	return o
}

func (o GetOntapFileSystemEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapFileSystemEndpoint] {
	return pulumix.Output[[]GetOntapFileSystemEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o GetOntapFileSystemEndpointArrayOutput) Index(i pulumi.IntInput) GetOntapFileSystemEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOntapFileSystemEndpoint {
		return vs[0].([]GetOntapFileSystemEndpoint)[vs[1].(int)]
	}).(GetOntapFileSystemEndpointOutput)
}

type GetOntapFileSystemEndpointIntercluster struct {
	// DNS name for the file system (e.g. `fs-12345678.corp.example.com`).
	DnsName     string   `pulumi:"dnsName"`
	IpAddresses []string `pulumi:"ipAddresses"`
}

// GetOntapFileSystemEndpointInterclusterInput is an input type that accepts GetOntapFileSystemEndpointInterclusterArgs and GetOntapFileSystemEndpointInterclusterOutput values.
// You can construct a concrete instance of `GetOntapFileSystemEndpointInterclusterInput` via:
//
//	GetOntapFileSystemEndpointInterclusterArgs{...}
type GetOntapFileSystemEndpointInterclusterInput interface {
	pulumi.Input

	ToGetOntapFileSystemEndpointInterclusterOutput() GetOntapFileSystemEndpointInterclusterOutput
	ToGetOntapFileSystemEndpointInterclusterOutputWithContext(context.Context) GetOntapFileSystemEndpointInterclusterOutput
}

type GetOntapFileSystemEndpointInterclusterArgs struct {
	// DNS name for the file system (e.g. `fs-12345678.corp.example.com`).
	DnsName     pulumi.StringInput      `pulumi:"dnsName"`
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (GetOntapFileSystemEndpointInterclusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapFileSystemEndpointIntercluster)(nil)).Elem()
}

func (i GetOntapFileSystemEndpointInterclusterArgs) ToGetOntapFileSystemEndpointInterclusterOutput() GetOntapFileSystemEndpointInterclusterOutput {
	return i.ToGetOntapFileSystemEndpointInterclusterOutputWithContext(context.Background())
}

func (i GetOntapFileSystemEndpointInterclusterArgs) ToGetOntapFileSystemEndpointInterclusterOutputWithContext(ctx context.Context) GetOntapFileSystemEndpointInterclusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapFileSystemEndpointInterclusterOutput)
}

func (i GetOntapFileSystemEndpointInterclusterArgs) ToOutput(ctx context.Context) pulumix.Output[GetOntapFileSystemEndpointIntercluster] {
	return pulumix.Output[GetOntapFileSystemEndpointIntercluster]{
		OutputState: i.ToGetOntapFileSystemEndpointInterclusterOutputWithContext(ctx).OutputState,
	}
}

// GetOntapFileSystemEndpointInterclusterArrayInput is an input type that accepts GetOntapFileSystemEndpointInterclusterArray and GetOntapFileSystemEndpointInterclusterArrayOutput values.
// You can construct a concrete instance of `GetOntapFileSystemEndpointInterclusterArrayInput` via:
//
//	GetOntapFileSystemEndpointInterclusterArray{ GetOntapFileSystemEndpointInterclusterArgs{...} }
type GetOntapFileSystemEndpointInterclusterArrayInput interface {
	pulumi.Input

	ToGetOntapFileSystemEndpointInterclusterArrayOutput() GetOntapFileSystemEndpointInterclusterArrayOutput
	ToGetOntapFileSystemEndpointInterclusterArrayOutputWithContext(context.Context) GetOntapFileSystemEndpointInterclusterArrayOutput
}

type GetOntapFileSystemEndpointInterclusterArray []GetOntapFileSystemEndpointInterclusterInput

func (GetOntapFileSystemEndpointInterclusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapFileSystemEndpointIntercluster)(nil)).Elem()
}

func (i GetOntapFileSystemEndpointInterclusterArray) ToGetOntapFileSystemEndpointInterclusterArrayOutput() GetOntapFileSystemEndpointInterclusterArrayOutput {
	return i.ToGetOntapFileSystemEndpointInterclusterArrayOutputWithContext(context.Background())
}

func (i GetOntapFileSystemEndpointInterclusterArray) ToGetOntapFileSystemEndpointInterclusterArrayOutputWithContext(ctx context.Context) GetOntapFileSystemEndpointInterclusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapFileSystemEndpointInterclusterArrayOutput)
}

func (i GetOntapFileSystemEndpointInterclusterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapFileSystemEndpointIntercluster] {
	return pulumix.Output[[]GetOntapFileSystemEndpointIntercluster]{
		OutputState: i.ToGetOntapFileSystemEndpointInterclusterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOntapFileSystemEndpointInterclusterOutput struct{ *pulumi.OutputState }

func (GetOntapFileSystemEndpointInterclusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapFileSystemEndpointIntercluster)(nil)).Elem()
}

func (o GetOntapFileSystemEndpointInterclusterOutput) ToGetOntapFileSystemEndpointInterclusterOutput() GetOntapFileSystemEndpointInterclusterOutput {
	return o
}

func (o GetOntapFileSystemEndpointInterclusterOutput) ToGetOntapFileSystemEndpointInterclusterOutputWithContext(ctx context.Context) GetOntapFileSystemEndpointInterclusterOutput {
	return o
}

func (o GetOntapFileSystemEndpointInterclusterOutput) ToOutput(ctx context.Context) pulumix.Output[GetOntapFileSystemEndpointIntercluster] {
	return pulumix.Output[GetOntapFileSystemEndpointIntercluster]{
		OutputState: o.OutputState,
	}
}

// DNS name for the file system (e.g. `fs-12345678.corp.example.com`).
func (o GetOntapFileSystemEndpointInterclusterOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOntapFileSystemEndpointIntercluster) string { return v.DnsName }).(pulumi.StringOutput)
}

func (o GetOntapFileSystemEndpointInterclusterOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOntapFileSystemEndpointIntercluster) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type GetOntapFileSystemEndpointInterclusterArrayOutput struct{ *pulumi.OutputState }

func (GetOntapFileSystemEndpointInterclusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapFileSystemEndpointIntercluster)(nil)).Elem()
}

func (o GetOntapFileSystemEndpointInterclusterArrayOutput) ToGetOntapFileSystemEndpointInterclusterArrayOutput() GetOntapFileSystemEndpointInterclusterArrayOutput {
	return o
}

func (o GetOntapFileSystemEndpointInterclusterArrayOutput) ToGetOntapFileSystemEndpointInterclusterArrayOutputWithContext(ctx context.Context) GetOntapFileSystemEndpointInterclusterArrayOutput {
	return o
}

func (o GetOntapFileSystemEndpointInterclusterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapFileSystemEndpointIntercluster] {
	return pulumix.Output[[]GetOntapFileSystemEndpointIntercluster]{
		OutputState: o.OutputState,
	}
}

func (o GetOntapFileSystemEndpointInterclusterArrayOutput) Index(i pulumi.IntInput) GetOntapFileSystemEndpointInterclusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOntapFileSystemEndpointIntercluster {
		return vs[0].([]GetOntapFileSystemEndpointIntercluster)[vs[1].(int)]
	}).(GetOntapFileSystemEndpointInterclusterOutput)
}

type GetOntapFileSystemEndpointManagement struct {
	// DNS name for the file system (e.g. `fs-12345678.corp.example.com`).
	DnsName     string   `pulumi:"dnsName"`
	IpAddresses []string `pulumi:"ipAddresses"`
}

// GetOntapFileSystemEndpointManagementInput is an input type that accepts GetOntapFileSystemEndpointManagementArgs and GetOntapFileSystemEndpointManagementOutput values.
// You can construct a concrete instance of `GetOntapFileSystemEndpointManagementInput` via:
//
//	GetOntapFileSystemEndpointManagementArgs{...}
type GetOntapFileSystemEndpointManagementInput interface {
	pulumi.Input

	ToGetOntapFileSystemEndpointManagementOutput() GetOntapFileSystemEndpointManagementOutput
	ToGetOntapFileSystemEndpointManagementOutputWithContext(context.Context) GetOntapFileSystemEndpointManagementOutput
}

type GetOntapFileSystemEndpointManagementArgs struct {
	// DNS name for the file system (e.g. `fs-12345678.corp.example.com`).
	DnsName     pulumi.StringInput      `pulumi:"dnsName"`
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (GetOntapFileSystemEndpointManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapFileSystemEndpointManagement)(nil)).Elem()
}

func (i GetOntapFileSystemEndpointManagementArgs) ToGetOntapFileSystemEndpointManagementOutput() GetOntapFileSystemEndpointManagementOutput {
	return i.ToGetOntapFileSystemEndpointManagementOutputWithContext(context.Background())
}

func (i GetOntapFileSystemEndpointManagementArgs) ToGetOntapFileSystemEndpointManagementOutputWithContext(ctx context.Context) GetOntapFileSystemEndpointManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapFileSystemEndpointManagementOutput)
}

func (i GetOntapFileSystemEndpointManagementArgs) ToOutput(ctx context.Context) pulumix.Output[GetOntapFileSystemEndpointManagement] {
	return pulumix.Output[GetOntapFileSystemEndpointManagement]{
		OutputState: i.ToGetOntapFileSystemEndpointManagementOutputWithContext(ctx).OutputState,
	}
}

// GetOntapFileSystemEndpointManagementArrayInput is an input type that accepts GetOntapFileSystemEndpointManagementArray and GetOntapFileSystemEndpointManagementArrayOutput values.
// You can construct a concrete instance of `GetOntapFileSystemEndpointManagementArrayInput` via:
//
//	GetOntapFileSystemEndpointManagementArray{ GetOntapFileSystemEndpointManagementArgs{...} }
type GetOntapFileSystemEndpointManagementArrayInput interface {
	pulumi.Input

	ToGetOntapFileSystemEndpointManagementArrayOutput() GetOntapFileSystemEndpointManagementArrayOutput
	ToGetOntapFileSystemEndpointManagementArrayOutputWithContext(context.Context) GetOntapFileSystemEndpointManagementArrayOutput
}

type GetOntapFileSystemEndpointManagementArray []GetOntapFileSystemEndpointManagementInput

func (GetOntapFileSystemEndpointManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapFileSystemEndpointManagement)(nil)).Elem()
}

func (i GetOntapFileSystemEndpointManagementArray) ToGetOntapFileSystemEndpointManagementArrayOutput() GetOntapFileSystemEndpointManagementArrayOutput {
	return i.ToGetOntapFileSystemEndpointManagementArrayOutputWithContext(context.Background())
}

func (i GetOntapFileSystemEndpointManagementArray) ToGetOntapFileSystemEndpointManagementArrayOutputWithContext(ctx context.Context) GetOntapFileSystemEndpointManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapFileSystemEndpointManagementArrayOutput)
}

func (i GetOntapFileSystemEndpointManagementArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapFileSystemEndpointManagement] {
	return pulumix.Output[[]GetOntapFileSystemEndpointManagement]{
		OutputState: i.ToGetOntapFileSystemEndpointManagementArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOntapFileSystemEndpointManagementOutput struct{ *pulumi.OutputState }

func (GetOntapFileSystemEndpointManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapFileSystemEndpointManagement)(nil)).Elem()
}

func (o GetOntapFileSystemEndpointManagementOutput) ToGetOntapFileSystemEndpointManagementOutput() GetOntapFileSystemEndpointManagementOutput {
	return o
}

func (o GetOntapFileSystemEndpointManagementOutput) ToGetOntapFileSystemEndpointManagementOutputWithContext(ctx context.Context) GetOntapFileSystemEndpointManagementOutput {
	return o
}

func (o GetOntapFileSystemEndpointManagementOutput) ToOutput(ctx context.Context) pulumix.Output[GetOntapFileSystemEndpointManagement] {
	return pulumix.Output[GetOntapFileSystemEndpointManagement]{
		OutputState: o.OutputState,
	}
}

// DNS name for the file system (e.g. `fs-12345678.corp.example.com`).
func (o GetOntapFileSystemEndpointManagementOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOntapFileSystemEndpointManagement) string { return v.DnsName }).(pulumi.StringOutput)
}

func (o GetOntapFileSystemEndpointManagementOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOntapFileSystemEndpointManagement) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type GetOntapFileSystemEndpointManagementArrayOutput struct{ *pulumi.OutputState }

func (GetOntapFileSystemEndpointManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapFileSystemEndpointManagement)(nil)).Elem()
}

func (o GetOntapFileSystemEndpointManagementArrayOutput) ToGetOntapFileSystemEndpointManagementArrayOutput() GetOntapFileSystemEndpointManagementArrayOutput {
	return o
}

func (o GetOntapFileSystemEndpointManagementArrayOutput) ToGetOntapFileSystemEndpointManagementArrayOutputWithContext(ctx context.Context) GetOntapFileSystemEndpointManagementArrayOutput {
	return o
}

func (o GetOntapFileSystemEndpointManagementArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapFileSystemEndpointManagement] {
	return pulumix.Output[[]GetOntapFileSystemEndpointManagement]{
		OutputState: o.OutputState,
	}
}

func (o GetOntapFileSystemEndpointManagementArrayOutput) Index(i pulumi.IntInput) GetOntapFileSystemEndpointManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOntapFileSystemEndpointManagement {
		return vs[0].([]GetOntapFileSystemEndpointManagement)[vs[1].(int)]
	}).(GetOntapFileSystemEndpointManagementOutput)
}

type GetOntapStorageVirtualMachineActiveDirectoryConfiguration struct {
	// The NetBIOS name of the AD computer object to which the SVM is joined.
	NetbiosName                              string                                                                                             `pulumi:"netbiosName"`
	SelfManagedActiveDirectoryConfigurations []GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration `pulumi:"selfManagedActiveDirectoryConfigurations"`
}

// GetOntapStorageVirtualMachineActiveDirectoryConfigurationInput is an input type that accepts GetOntapStorageVirtualMachineActiveDirectoryConfigurationArgs and GetOntapStorageVirtualMachineActiveDirectoryConfigurationOutput values.
// You can construct a concrete instance of `GetOntapStorageVirtualMachineActiveDirectoryConfigurationInput` via:
//
//	GetOntapStorageVirtualMachineActiveDirectoryConfigurationArgs{...}
type GetOntapStorageVirtualMachineActiveDirectoryConfigurationInput interface {
	pulumi.Input

	ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationOutput() GetOntapStorageVirtualMachineActiveDirectoryConfigurationOutput
	ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationOutputWithContext(context.Context) GetOntapStorageVirtualMachineActiveDirectoryConfigurationOutput
}

type GetOntapStorageVirtualMachineActiveDirectoryConfigurationArgs struct {
	// The NetBIOS name of the AD computer object to which the SVM is joined.
	NetbiosName                              pulumi.StringInput                                                                                         `pulumi:"netbiosName"`
	SelfManagedActiveDirectoryConfigurations GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayInput `pulumi:"selfManagedActiveDirectoryConfigurations"`
}

func (GetOntapStorageVirtualMachineActiveDirectoryConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapStorageVirtualMachineActiveDirectoryConfiguration)(nil)).Elem()
}

func (i GetOntapStorageVirtualMachineActiveDirectoryConfigurationArgs) ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationOutput() GetOntapStorageVirtualMachineActiveDirectoryConfigurationOutput {
	return i.ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationOutputWithContext(context.Background())
}

func (i GetOntapStorageVirtualMachineActiveDirectoryConfigurationArgs) ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineActiveDirectoryConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapStorageVirtualMachineActiveDirectoryConfigurationOutput)
}

func (i GetOntapStorageVirtualMachineActiveDirectoryConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[GetOntapStorageVirtualMachineActiveDirectoryConfiguration] {
	return pulumix.Output[GetOntapStorageVirtualMachineActiveDirectoryConfiguration]{
		OutputState: i.ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationOutputWithContext(ctx).OutputState,
	}
}

// GetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayInput is an input type that accepts GetOntapStorageVirtualMachineActiveDirectoryConfigurationArray and GetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayOutput values.
// You can construct a concrete instance of `GetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayInput` via:
//
//	GetOntapStorageVirtualMachineActiveDirectoryConfigurationArray{ GetOntapStorageVirtualMachineActiveDirectoryConfigurationArgs{...} }
type GetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayInput interface {
	pulumi.Input

	ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayOutput() GetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayOutput
	ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayOutputWithContext(context.Context) GetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayOutput
}

type GetOntapStorageVirtualMachineActiveDirectoryConfigurationArray []GetOntapStorageVirtualMachineActiveDirectoryConfigurationInput

func (GetOntapStorageVirtualMachineActiveDirectoryConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapStorageVirtualMachineActiveDirectoryConfiguration)(nil)).Elem()
}

func (i GetOntapStorageVirtualMachineActiveDirectoryConfigurationArray) ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayOutput() GetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayOutput {
	return i.ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayOutputWithContext(context.Background())
}

func (i GetOntapStorageVirtualMachineActiveDirectoryConfigurationArray) ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayOutput)
}

func (i GetOntapStorageVirtualMachineActiveDirectoryConfigurationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapStorageVirtualMachineActiveDirectoryConfiguration] {
	return pulumix.Output[[]GetOntapStorageVirtualMachineActiveDirectoryConfiguration]{
		OutputState: i.ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOntapStorageVirtualMachineActiveDirectoryConfigurationOutput struct{ *pulumi.OutputState }

func (GetOntapStorageVirtualMachineActiveDirectoryConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapStorageVirtualMachineActiveDirectoryConfiguration)(nil)).Elem()
}

func (o GetOntapStorageVirtualMachineActiveDirectoryConfigurationOutput) ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationOutput() GetOntapStorageVirtualMachineActiveDirectoryConfigurationOutput {
	return o
}

func (o GetOntapStorageVirtualMachineActiveDirectoryConfigurationOutput) ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineActiveDirectoryConfigurationOutput {
	return o
}

func (o GetOntapStorageVirtualMachineActiveDirectoryConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GetOntapStorageVirtualMachineActiveDirectoryConfiguration] {
	return pulumix.Output[GetOntapStorageVirtualMachineActiveDirectoryConfiguration]{
		OutputState: o.OutputState,
	}
}

// The NetBIOS name of the AD computer object to which the SVM is joined.
func (o GetOntapStorageVirtualMachineActiveDirectoryConfigurationOutput) NetbiosName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOntapStorageVirtualMachineActiveDirectoryConfiguration) string { return v.NetbiosName }).(pulumi.StringOutput)
}

func (o GetOntapStorageVirtualMachineActiveDirectoryConfigurationOutput) SelfManagedActiveDirectoryConfigurations() GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayOutput {
	return o.ApplyT(func(v GetOntapStorageVirtualMachineActiveDirectoryConfiguration) []GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration {
		return v.SelfManagedActiveDirectoryConfigurations
	}).(GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayOutput)
}

type GetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapStorageVirtualMachineActiveDirectoryConfiguration)(nil)).Elem()
}

func (o GetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayOutput) ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayOutput() GetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayOutput {
	return o
}

func (o GetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayOutput) ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayOutput {
	return o
}

func (o GetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapStorageVirtualMachineActiveDirectoryConfiguration] {
	return pulumix.Output[[]GetOntapStorageVirtualMachineActiveDirectoryConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o GetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayOutput) Index(i pulumi.IntInput) GetOntapStorageVirtualMachineActiveDirectoryConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOntapStorageVirtualMachineActiveDirectoryConfiguration {
		return vs[0].([]GetOntapStorageVirtualMachineActiveDirectoryConfiguration)[vs[1].(int)]
	}).(GetOntapStorageVirtualMachineActiveDirectoryConfigurationOutput)
}

type GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration struct {
	// A list of up to three IP addresses of DNS servers or domain controllers in the self-managed AD directory.
	DnsIps []string `pulumi:"dnsIps"`
	// The fully qualified domain name of the self-managed AD directory.
	DomainName string `pulumi:"domainName"`
	// The name of the domain group whose members have administrative privileges for the FSx file system.
	FileSystemAdministratorsGroup string `pulumi:"fileSystemAdministratorsGroup"`
	// The fully qualified distinguished name of the organizational unit within the self-managed AD directory to which the Windows File Server or ONTAP storage virtual machine (SVM) instance is joined.
	OrganizationalUnitDistinguishedName string `pulumi:"organizationalUnitDistinguishedName"`
	// The user name for the service account on your self-managed AD domain that FSx uses to join to your AD domain.
	Username string `pulumi:"username"`
}

// GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationInput is an input type that accepts GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs and GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput values.
// You can construct a concrete instance of `GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationInput` via:
//
//	GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs{...}
type GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationInput interface {
	pulumi.Input

	ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput() GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput
	ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutputWithContext(context.Context) GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput
}

type GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs struct {
	// A list of up to three IP addresses of DNS servers or domain controllers in the self-managed AD directory.
	DnsIps pulumi.StringArrayInput `pulumi:"dnsIps"`
	// The fully qualified domain name of the self-managed AD directory.
	DomainName pulumi.StringInput `pulumi:"domainName"`
	// The name of the domain group whose members have administrative privileges for the FSx file system.
	FileSystemAdministratorsGroup pulumi.StringInput `pulumi:"fileSystemAdministratorsGroup"`
	// The fully qualified distinguished name of the organizational unit within the self-managed AD directory to which the Windows File Server or ONTAP storage virtual machine (SVM) instance is joined.
	OrganizationalUnitDistinguishedName pulumi.StringInput `pulumi:"organizationalUnitDistinguishedName"`
	// The user name for the service account on your self-managed AD domain that FSx uses to join to your AD domain.
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration)(nil)).Elem()
}

func (i GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs) ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput() GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput {
	return i.ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutputWithContext(context.Background())
}

func (i GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs) ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput)
}

func (i GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration] {
	return pulumix.Output[GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration]{
		OutputState: i.ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutputWithContext(ctx).OutputState,
	}
}

// GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayInput is an input type that accepts GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArray and GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayOutput values.
// You can construct a concrete instance of `GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayInput` via:
//
//	GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArray{ GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs{...} }
type GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayInput interface {
	pulumi.Input

	ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayOutput() GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayOutput
	ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayOutputWithContext(context.Context) GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayOutput
}

type GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArray []GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationInput

func (GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration)(nil)).Elem()
}

func (i GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArray) ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayOutput() GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayOutput {
	return i.ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayOutputWithContext(context.Background())
}

func (i GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArray) ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayOutput)
}

func (i GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration] {
	return pulumix.Output[[]GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration]{
		OutputState: i.ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput struct{ *pulumi.OutputState }

func (GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration)(nil)).Elem()
}

func (o GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput() GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput {
	return o
}

func (o GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput {
	return o
}

func (o GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration] {
	return pulumix.Output[GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration]{
		OutputState: o.OutputState,
	}
}

// A list of up to three IP addresses of DNS servers or domain controllers in the self-managed AD directory.
func (o GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) DnsIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) []string {
		return v.DnsIps
	}).(pulumi.StringArrayOutput)
}

// The fully qualified domain name of the self-managed AD directory.
func (o GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) string {
		return v.DomainName
	}).(pulumi.StringOutput)
}

// The name of the domain group whose members have administrative privileges for the FSx file system.
func (o GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) FileSystemAdministratorsGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) string {
		return v.FileSystemAdministratorsGroup
	}).(pulumi.StringOutput)
}

// The fully qualified distinguished name of the organizational unit within the self-managed AD directory to which the Windows File Server or ONTAP storage virtual machine (SVM) instance is joined.
func (o GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) OrganizationalUnitDistinguishedName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) string {
		return v.OrganizationalUnitDistinguishedName
	}).(pulumi.StringOutput)
}

// The user name for the service account on your self-managed AD domain that FSx uses to join to your AD domain.
func (o GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration) string {
		return v.Username
	}).(pulumi.StringOutput)
}

type GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration)(nil)).Elem()
}

func (o GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayOutput) ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayOutput() GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayOutput {
	return o
}

func (o GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayOutput) ToGetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayOutput {
	return o
}

func (o GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration] {
	return pulumix.Output[[]GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayOutput) Index(i pulumi.IntInput) GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration {
		return vs[0].([]GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfiguration)[vs[1].(int)]
	}).(GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput)
}

type GetOntapStorageVirtualMachineEndpoint struct {
	Iscsis []GetOntapStorageVirtualMachineEndpointIscsi `pulumi:"iscsis"`
	// An endpoint for managing SVMs using the NetApp ONTAP CLI, NetApp ONTAP API, or NetApp CloudManager. See SVM Endpoint below.
	Managements []GetOntapStorageVirtualMachineEndpointManagement `pulumi:"managements"`
	// An endpoint for connecting using the Network File System (NFS) protocol. See SVM Endpoint below.
	Nfs []GetOntapStorageVirtualMachineEndpointNf `pulumi:"nfs"`
	// An endpoint for connecting using the Server Message Block (SMB) protocol. See SVM Endpoint below.
	Smbs []GetOntapStorageVirtualMachineEndpointSmb `pulumi:"smbs"`
}

// GetOntapStorageVirtualMachineEndpointInput is an input type that accepts GetOntapStorageVirtualMachineEndpointArgs and GetOntapStorageVirtualMachineEndpointOutput values.
// You can construct a concrete instance of `GetOntapStorageVirtualMachineEndpointInput` via:
//
//	GetOntapStorageVirtualMachineEndpointArgs{...}
type GetOntapStorageVirtualMachineEndpointInput interface {
	pulumi.Input

	ToGetOntapStorageVirtualMachineEndpointOutput() GetOntapStorageVirtualMachineEndpointOutput
	ToGetOntapStorageVirtualMachineEndpointOutputWithContext(context.Context) GetOntapStorageVirtualMachineEndpointOutput
}

type GetOntapStorageVirtualMachineEndpointArgs struct {
	Iscsis GetOntapStorageVirtualMachineEndpointIscsiArrayInput `pulumi:"iscsis"`
	// An endpoint for managing SVMs using the NetApp ONTAP CLI, NetApp ONTAP API, or NetApp CloudManager. See SVM Endpoint below.
	Managements GetOntapStorageVirtualMachineEndpointManagementArrayInput `pulumi:"managements"`
	// An endpoint for connecting using the Network File System (NFS) protocol. See SVM Endpoint below.
	Nfs GetOntapStorageVirtualMachineEndpointNfArrayInput `pulumi:"nfs"`
	// An endpoint for connecting using the Server Message Block (SMB) protocol. See SVM Endpoint below.
	Smbs GetOntapStorageVirtualMachineEndpointSmbArrayInput `pulumi:"smbs"`
}

func (GetOntapStorageVirtualMachineEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapStorageVirtualMachineEndpoint)(nil)).Elem()
}

func (i GetOntapStorageVirtualMachineEndpointArgs) ToGetOntapStorageVirtualMachineEndpointOutput() GetOntapStorageVirtualMachineEndpointOutput {
	return i.ToGetOntapStorageVirtualMachineEndpointOutputWithContext(context.Background())
}

func (i GetOntapStorageVirtualMachineEndpointArgs) ToGetOntapStorageVirtualMachineEndpointOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapStorageVirtualMachineEndpointOutput)
}

func (i GetOntapStorageVirtualMachineEndpointArgs) ToOutput(ctx context.Context) pulumix.Output[GetOntapStorageVirtualMachineEndpoint] {
	return pulumix.Output[GetOntapStorageVirtualMachineEndpoint]{
		OutputState: i.ToGetOntapStorageVirtualMachineEndpointOutputWithContext(ctx).OutputState,
	}
}

// GetOntapStorageVirtualMachineEndpointArrayInput is an input type that accepts GetOntapStorageVirtualMachineEndpointArray and GetOntapStorageVirtualMachineEndpointArrayOutput values.
// You can construct a concrete instance of `GetOntapStorageVirtualMachineEndpointArrayInput` via:
//
//	GetOntapStorageVirtualMachineEndpointArray{ GetOntapStorageVirtualMachineEndpointArgs{...} }
type GetOntapStorageVirtualMachineEndpointArrayInput interface {
	pulumi.Input

	ToGetOntapStorageVirtualMachineEndpointArrayOutput() GetOntapStorageVirtualMachineEndpointArrayOutput
	ToGetOntapStorageVirtualMachineEndpointArrayOutputWithContext(context.Context) GetOntapStorageVirtualMachineEndpointArrayOutput
}

type GetOntapStorageVirtualMachineEndpointArray []GetOntapStorageVirtualMachineEndpointInput

func (GetOntapStorageVirtualMachineEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapStorageVirtualMachineEndpoint)(nil)).Elem()
}

func (i GetOntapStorageVirtualMachineEndpointArray) ToGetOntapStorageVirtualMachineEndpointArrayOutput() GetOntapStorageVirtualMachineEndpointArrayOutput {
	return i.ToGetOntapStorageVirtualMachineEndpointArrayOutputWithContext(context.Background())
}

func (i GetOntapStorageVirtualMachineEndpointArray) ToGetOntapStorageVirtualMachineEndpointArrayOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapStorageVirtualMachineEndpointArrayOutput)
}

func (i GetOntapStorageVirtualMachineEndpointArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapStorageVirtualMachineEndpoint] {
	return pulumix.Output[[]GetOntapStorageVirtualMachineEndpoint]{
		OutputState: i.ToGetOntapStorageVirtualMachineEndpointArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOntapStorageVirtualMachineEndpointOutput struct{ *pulumi.OutputState }

func (GetOntapStorageVirtualMachineEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapStorageVirtualMachineEndpoint)(nil)).Elem()
}

func (o GetOntapStorageVirtualMachineEndpointOutput) ToGetOntapStorageVirtualMachineEndpointOutput() GetOntapStorageVirtualMachineEndpointOutput {
	return o
}

func (o GetOntapStorageVirtualMachineEndpointOutput) ToGetOntapStorageVirtualMachineEndpointOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineEndpointOutput {
	return o
}

func (o GetOntapStorageVirtualMachineEndpointOutput) ToOutput(ctx context.Context) pulumix.Output[GetOntapStorageVirtualMachineEndpoint] {
	return pulumix.Output[GetOntapStorageVirtualMachineEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o GetOntapStorageVirtualMachineEndpointOutput) Iscsis() GetOntapStorageVirtualMachineEndpointIscsiArrayOutput {
	return o.ApplyT(func(v GetOntapStorageVirtualMachineEndpoint) []GetOntapStorageVirtualMachineEndpointIscsi {
		return v.Iscsis
	}).(GetOntapStorageVirtualMachineEndpointIscsiArrayOutput)
}

// An endpoint for managing SVMs using the NetApp ONTAP CLI, NetApp ONTAP API, or NetApp CloudManager. See SVM Endpoint below.
func (o GetOntapStorageVirtualMachineEndpointOutput) Managements() GetOntapStorageVirtualMachineEndpointManagementArrayOutput {
	return o.ApplyT(func(v GetOntapStorageVirtualMachineEndpoint) []GetOntapStorageVirtualMachineEndpointManagement {
		return v.Managements
	}).(GetOntapStorageVirtualMachineEndpointManagementArrayOutput)
}

// An endpoint for connecting using the Network File System (NFS) protocol. See SVM Endpoint below.
func (o GetOntapStorageVirtualMachineEndpointOutput) Nfs() GetOntapStorageVirtualMachineEndpointNfArrayOutput {
	return o.ApplyT(func(v GetOntapStorageVirtualMachineEndpoint) []GetOntapStorageVirtualMachineEndpointNf { return v.Nfs }).(GetOntapStorageVirtualMachineEndpointNfArrayOutput)
}

// An endpoint for connecting using the Server Message Block (SMB) protocol. See SVM Endpoint below.
func (o GetOntapStorageVirtualMachineEndpointOutput) Smbs() GetOntapStorageVirtualMachineEndpointSmbArrayOutput {
	return o.ApplyT(func(v GetOntapStorageVirtualMachineEndpoint) []GetOntapStorageVirtualMachineEndpointSmb {
		return v.Smbs
	}).(GetOntapStorageVirtualMachineEndpointSmbArrayOutput)
}

type GetOntapStorageVirtualMachineEndpointArrayOutput struct{ *pulumi.OutputState }

func (GetOntapStorageVirtualMachineEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapStorageVirtualMachineEndpoint)(nil)).Elem()
}

func (o GetOntapStorageVirtualMachineEndpointArrayOutput) ToGetOntapStorageVirtualMachineEndpointArrayOutput() GetOntapStorageVirtualMachineEndpointArrayOutput {
	return o
}

func (o GetOntapStorageVirtualMachineEndpointArrayOutput) ToGetOntapStorageVirtualMachineEndpointArrayOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineEndpointArrayOutput {
	return o
}

func (o GetOntapStorageVirtualMachineEndpointArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapStorageVirtualMachineEndpoint] {
	return pulumix.Output[[]GetOntapStorageVirtualMachineEndpoint]{
		OutputState: o.OutputState,
	}
}

func (o GetOntapStorageVirtualMachineEndpointArrayOutput) Index(i pulumi.IntInput) GetOntapStorageVirtualMachineEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOntapStorageVirtualMachineEndpoint {
		return vs[0].([]GetOntapStorageVirtualMachineEndpoint)[vs[1].(int)]
	}).(GetOntapStorageVirtualMachineEndpointOutput)
}

type GetOntapStorageVirtualMachineEndpointIscsi struct {
	DnsName     string   `pulumi:"dnsName"`
	IpAddresses []string `pulumi:"ipAddresses"`
}

// GetOntapStorageVirtualMachineEndpointIscsiInput is an input type that accepts GetOntapStorageVirtualMachineEndpointIscsiArgs and GetOntapStorageVirtualMachineEndpointIscsiOutput values.
// You can construct a concrete instance of `GetOntapStorageVirtualMachineEndpointIscsiInput` via:
//
//	GetOntapStorageVirtualMachineEndpointIscsiArgs{...}
type GetOntapStorageVirtualMachineEndpointIscsiInput interface {
	pulumi.Input

	ToGetOntapStorageVirtualMachineEndpointIscsiOutput() GetOntapStorageVirtualMachineEndpointIscsiOutput
	ToGetOntapStorageVirtualMachineEndpointIscsiOutputWithContext(context.Context) GetOntapStorageVirtualMachineEndpointIscsiOutput
}

type GetOntapStorageVirtualMachineEndpointIscsiArgs struct {
	DnsName     pulumi.StringInput      `pulumi:"dnsName"`
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (GetOntapStorageVirtualMachineEndpointIscsiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapStorageVirtualMachineEndpointIscsi)(nil)).Elem()
}

func (i GetOntapStorageVirtualMachineEndpointIscsiArgs) ToGetOntapStorageVirtualMachineEndpointIscsiOutput() GetOntapStorageVirtualMachineEndpointIscsiOutput {
	return i.ToGetOntapStorageVirtualMachineEndpointIscsiOutputWithContext(context.Background())
}

func (i GetOntapStorageVirtualMachineEndpointIscsiArgs) ToGetOntapStorageVirtualMachineEndpointIscsiOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineEndpointIscsiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapStorageVirtualMachineEndpointIscsiOutput)
}

func (i GetOntapStorageVirtualMachineEndpointIscsiArgs) ToOutput(ctx context.Context) pulumix.Output[GetOntapStorageVirtualMachineEndpointIscsi] {
	return pulumix.Output[GetOntapStorageVirtualMachineEndpointIscsi]{
		OutputState: i.ToGetOntapStorageVirtualMachineEndpointIscsiOutputWithContext(ctx).OutputState,
	}
}

// GetOntapStorageVirtualMachineEndpointIscsiArrayInput is an input type that accepts GetOntapStorageVirtualMachineEndpointIscsiArray and GetOntapStorageVirtualMachineEndpointIscsiArrayOutput values.
// You can construct a concrete instance of `GetOntapStorageVirtualMachineEndpointIscsiArrayInput` via:
//
//	GetOntapStorageVirtualMachineEndpointIscsiArray{ GetOntapStorageVirtualMachineEndpointIscsiArgs{...} }
type GetOntapStorageVirtualMachineEndpointIscsiArrayInput interface {
	pulumi.Input

	ToGetOntapStorageVirtualMachineEndpointIscsiArrayOutput() GetOntapStorageVirtualMachineEndpointIscsiArrayOutput
	ToGetOntapStorageVirtualMachineEndpointIscsiArrayOutputWithContext(context.Context) GetOntapStorageVirtualMachineEndpointIscsiArrayOutput
}

type GetOntapStorageVirtualMachineEndpointIscsiArray []GetOntapStorageVirtualMachineEndpointIscsiInput

func (GetOntapStorageVirtualMachineEndpointIscsiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapStorageVirtualMachineEndpointIscsi)(nil)).Elem()
}

func (i GetOntapStorageVirtualMachineEndpointIscsiArray) ToGetOntapStorageVirtualMachineEndpointIscsiArrayOutput() GetOntapStorageVirtualMachineEndpointIscsiArrayOutput {
	return i.ToGetOntapStorageVirtualMachineEndpointIscsiArrayOutputWithContext(context.Background())
}

func (i GetOntapStorageVirtualMachineEndpointIscsiArray) ToGetOntapStorageVirtualMachineEndpointIscsiArrayOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineEndpointIscsiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapStorageVirtualMachineEndpointIscsiArrayOutput)
}

func (i GetOntapStorageVirtualMachineEndpointIscsiArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapStorageVirtualMachineEndpointIscsi] {
	return pulumix.Output[[]GetOntapStorageVirtualMachineEndpointIscsi]{
		OutputState: i.ToGetOntapStorageVirtualMachineEndpointIscsiArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOntapStorageVirtualMachineEndpointIscsiOutput struct{ *pulumi.OutputState }

func (GetOntapStorageVirtualMachineEndpointIscsiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapStorageVirtualMachineEndpointIscsi)(nil)).Elem()
}

func (o GetOntapStorageVirtualMachineEndpointIscsiOutput) ToGetOntapStorageVirtualMachineEndpointIscsiOutput() GetOntapStorageVirtualMachineEndpointIscsiOutput {
	return o
}

func (o GetOntapStorageVirtualMachineEndpointIscsiOutput) ToGetOntapStorageVirtualMachineEndpointIscsiOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineEndpointIscsiOutput {
	return o
}

func (o GetOntapStorageVirtualMachineEndpointIscsiOutput) ToOutput(ctx context.Context) pulumix.Output[GetOntapStorageVirtualMachineEndpointIscsi] {
	return pulumix.Output[GetOntapStorageVirtualMachineEndpointIscsi]{
		OutputState: o.OutputState,
	}
}

func (o GetOntapStorageVirtualMachineEndpointIscsiOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOntapStorageVirtualMachineEndpointIscsi) string { return v.DnsName }).(pulumi.StringOutput)
}

func (o GetOntapStorageVirtualMachineEndpointIscsiOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOntapStorageVirtualMachineEndpointIscsi) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type GetOntapStorageVirtualMachineEndpointIscsiArrayOutput struct{ *pulumi.OutputState }

func (GetOntapStorageVirtualMachineEndpointIscsiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapStorageVirtualMachineEndpointIscsi)(nil)).Elem()
}

func (o GetOntapStorageVirtualMachineEndpointIscsiArrayOutput) ToGetOntapStorageVirtualMachineEndpointIscsiArrayOutput() GetOntapStorageVirtualMachineEndpointIscsiArrayOutput {
	return o
}

func (o GetOntapStorageVirtualMachineEndpointIscsiArrayOutput) ToGetOntapStorageVirtualMachineEndpointIscsiArrayOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineEndpointIscsiArrayOutput {
	return o
}

func (o GetOntapStorageVirtualMachineEndpointIscsiArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapStorageVirtualMachineEndpointIscsi] {
	return pulumix.Output[[]GetOntapStorageVirtualMachineEndpointIscsi]{
		OutputState: o.OutputState,
	}
}

func (o GetOntapStorageVirtualMachineEndpointIscsiArrayOutput) Index(i pulumi.IntInput) GetOntapStorageVirtualMachineEndpointIscsiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOntapStorageVirtualMachineEndpointIscsi {
		return vs[0].([]GetOntapStorageVirtualMachineEndpointIscsi)[vs[1].(int)]
	}).(GetOntapStorageVirtualMachineEndpointIscsiOutput)
}

type GetOntapStorageVirtualMachineEndpointManagement struct {
	DnsName     string   `pulumi:"dnsName"`
	IpAddresses []string `pulumi:"ipAddresses"`
}

// GetOntapStorageVirtualMachineEndpointManagementInput is an input type that accepts GetOntapStorageVirtualMachineEndpointManagementArgs and GetOntapStorageVirtualMachineEndpointManagementOutput values.
// You can construct a concrete instance of `GetOntapStorageVirtualMachineEndpointManagementInput` via:
//
//	GetOntapStorageVirtualMachineEndpointManagementArgs{...}
type GetOntapStorageVirtualMachineEndpointManagementInput interface {
	pulumi.Input

	ToGetOntapStorageVirtualMachineEndpointManagementOutput() GetOntapStorageVirtualMachineEndpointManagementOutput
	ToGetOntapStorageVirtualMachineEndpointManagementOutputWithContext(context.Context) GetOntapStorageVirtualMachineEndpointManagementOutput
}

type GetOntapStorageVirtualMachineEndpointManagementArgs struct {
	DnsName     pulumi.StringInput      `pulumi:"dnsName"`
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (GetOntapStorageVirtualMachineEndpointManagementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapStorageVirtualMachineEndpointManagement)(nil)).Elem()
}

func (i GetOntapStorageVirtualMachineEndpointManagementArgs) ToGetOntapStorageVirtualMachineEndpointManagementOutput() GetOntapStorageVirtualMachineEndpointManagementOutput {
	return i.ToGetOntapStorageVirtualMachineEndpointManagementOutputWithContext(context.Background())
}

func (i GetOntapStorageVirtualMachineEndpointManagementArgs) ToGetOntapStorageVirtualMachineEndpointManagementOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineEndpointManagementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapStorageVirtualMachineEndpointManagementOutput)
}

func (i GetOntapStorageVirtualMachineEndpointManagementArgs) ToOutput(ctx context.Context) pulumix.Output[GetOntapStorageVirtualMachineEndpointManagement] {
	return pulumix.Output[GetOntapStorageVirtualMachineEndpointManagement]{
		OutputState: i.ToGetOntapStorageVirtualMachineEndpointManagementOutputWithContext(ctx).OutputState,
	}
}

// GetOntapStorageVirtualMachineEndpointManagementArrayInput is an input type that accepts GetOntapStorageVirtualMachineEndpointManagementArray and GetOntapStorageVirtualMachineEndpointManagementArrayOutput values.
// You can construct a concrete instance of `GetOntapStorageVirtualMachineEndpointManagementArrayInput` via:
//
//	GetOntapStorageVirtualMachineEndpointManagementArray{ GetOntapStorageVirtualMachineEndpointManagementArgs{...} }
type GetOntapStorageVirtualMachineEndpointManagementArrayInput interface {
	pulumi.Input

	ToGetOntapStorageVirtualMachineEndpointManagementArrayOutput() GetOntapStorageVirtualMachineEndpointManagementArrayOutput
	ToGetOntapStorageVirtualMachineEndpointManagementArrayOutputWithContext(context.Context) GetOntapStorageVirtualMachineEndpointManagementArrayOutput
}

type GetOntapStorageVirtualMachineEndpointManagementArray []GetOntapStorageVirtualMachineEndpointManagementInput

func (GetOntapStorageVirtualMachineEndpointManagementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapStorageVirtualMachineEndpointManagement)(nil)).Elem()
}

func (i GetOntapStorageVirtualMachineEndpointManagementArray) ToGetOntapStorageVirtualMachineEndpointManagementArrayOutput() GetOntapStorageVirtualMachineEndpointManagementArrayOutput {
	return i.ToGetOntapStorageVirtualMachineEndpointManagementArrayOutputWithContext(context.Background())
}

func (i GetOntapStorageVirtualMachineEndpointManagementArray) ToGetOntapStorageVirtualMachineEndpointManagementArrayOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineEndpointManagementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapStorageVirtualMachineEndpointManagementArrayOutput)
}

func (i GetOntapStorageVirtualMachineEndpointManagementArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapStorageVirtualMachineEndpointManagement] {
	return pulumix.Output[[]GetOntapStorageVirtualMachineEndpointManagement]{
		OutputState: i.ToGetOntapStorageVirtualMachineEndpointManagementArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOntapStorageVirtualMachineEndpointManagementOutput struct{ *pulumi.OutputState }

func (GetOntapStorageVirtualMachineEndpointManagementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapStorageVirtualMachineEndpointManagement)(nil)).Elem()
}

func (o GetOntapStorageVirtualMachineEndpointManagementOutput) ToGetOntapStorageVirtualMachineEndpointManagementOutput() GetOntapStorageVirtualMachineEndpointManagementOutput {
	return o
}

func (o GetOntapStorageVirtualMachineEndpointManagementOutput) ToGetOntapStorageVirtualMachineEndpointManagementOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineEndpointManagementOutput {
	return o
}

func (o GetOntapStorageVirtualMachineEndpointManagementOutput) ToOutput(ctx context.Context) pulumix.Output[GetOntapStorageVirtualMachineEndpointManagement] {
	return pulumix.Output[GetOntapStorageVirtualMachineEndpointManagement]{
		OutputState: o.OutputState,
	}
}

func (o GetOntapStorageVirtualMachineEndpointManagementOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOntapStorageVirtualMachineEndpointManagement) string { return v.DnsName }).(pulumi.StringOutput)
}

func (o GetOntapStorageVirtualMachineEndpointManagementOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOntapStorageVirtualMachineEndpointManagement) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type GetOntapStorageVirtualMachineEndpointManagementArrayOutput struct{ *pulumi.OutputState }

func (GetOntapStorageVirtualMachineEndpointManagementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapStorageVirtualMachineEndpointManagement)(nil)).Elem()
}

func (o GetOntapStorageVirtualMachineEndpointManagementArrayOutput) ToGetOntapStorageVirtualMachineEndpointManagementArrayOutput() GetOntapStorageVirtualMachineEndpointManagementArrayOutput {
	return o
}

func (o GetOntapStorageVirtualMachineEndpointManagementArrayOutput) ToGetOntapStorageVirtualMachineEndpointManagementArrayOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineEndpointManagementArrayOutput {
	return o
}

func (o GetOntapStorageVirtualMachineEndpointManagementArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapStorageVirtualMachineEndpointManagement] {
	return pulumix.Output[[]GetOntapStorageVirtualMachineEndpointManagement]{
		OutputState: o.OutputState,
	}
}

func (o GetOntapStorageVirtualMachineEndpointManagementArrayOutput) Index(i pulumi.IntInput) GetOntapStorageVirtualMachineEndpointManagementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOntapStorageVirtualMachineEndpointManagement {
		return vs[0].([]GetOntapStorageVirtualMachineEndpointManagement)[vs[1].(int)]
	}).(GetOntapStorageVirtualMachineEndpointManagementOutput)
}

type GetOntapStorageVirtualMachineEndpointNf struct {
	DnsName     string   `pulumi:"dnsName"`
	IpAddresses []string `pulumi:"ipAddresses"`
}

// GetOntapStorageVirtualMachineEndpointNfInput is an input type that accepts GetOntapStorageVirtualMachineEndpointNfArgs and GetOntapStorageVirtualMachineEndpointNfOutput values.
// You can construct a concrete instance of `GetOntapStorageVirtualMachineEndpointNfInput` via:
//
//	GetOntapStorageVirtualMachineEndpointNfArgs{...}
type GetOntapStorageVirtualMachineEndpointNfInput interface {
	pulumi.Input

	ToGetOntapStorageVirtualMachineEndpointNfOutput() GetOntapStorageVirtualMachineEndpointNfOutput
	ToGetOntapStorageVirtualMachineEndpointNfOutputWithContext(context.Context) GetOntapStorageVirtualMachineEndpointNfOutput
}

type GetOntapStorageVirtualMachineEndpointNfArgs struct {
	DnsName     pulumi.StringInput      `pulumi:"dnsName"`
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (GetOntapStorageVirtualMachineEndpointNfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapStorageVirtualMachineEndpointNf)(nil)).Elem()
}

func (i GetOntapStorageVirtualMachineEndpointNfArgs) ToGetOntapStorageVirtualMachineEndpointNfOutput() GetOntapStorageVirtualMachineEndpointNfOutput {
	return i.ToGetOntapStorageVirtualMachineEndpointNfOutputWithContext(context.Background())
}

func (i GetOntapStorageVirtualMachineEndpointNfArgs) ToGetOntapStorageVirtualMachineEndpointNfOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineEndpointNfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapStorageVirtualMachineEndpointNfOutput)
}

func (i GetOntapStorageVirtualMachineEndpointNfArgs) ToOutput(ctx context.Context) pulumix.Output[GetOntapStorageVirtualMachineEndpointNf] {
	return pulumix.Output[GetOntapStorageVirtualMachineEndpointNf]{
		OutputState: i.ToGetOntapStorageVirtualMachineEndpointNfOutputWithContext(ctx).OutputState,
	}
}

// GetOntapStorageVirtualMachineEndpointNfArrayInput is an input type that accepts GetOntapStorageVirtualMachineEndpointNfArray and GetOntapStorageVirtualMachineEndpointNfArrayOutput values.
// You can construct a concrete instance of `GetOntapStorageVirtualMachineEndpointNfArrayInput` via:
//
//	GetOntapStorageVirtualMachineEndpointNfArray{ GetOntapStorageVirtualMachineEndpointNfArgs{...} }
type GetOntapStorageVirtualMachineEndpointNfArrayInput interface {
	pulumi.Input

	ToGetOntapStorageVirtualMachineEndpointNfArrayOutput() GetOntapStorageVirtualMachineEndpointNfArrayOutput
	ToGetOntapStorageVirtualMachineEndpointNfArrayOutputWithContext(context.Context) GetOntapStorageVirtualMachineEndpointNfArrayOutput
}

type GetOntapStorageVirtualMachineEndpointNfArray []GetOntapStorageVirtualMachineEndpointNfInput

func (GetOntapStorageVirtualMachineEndpointNfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapStorageVirtualMachineEndpointNf)(nil)).Elem()
}

func (i GetOntapStorageVirtualMachineEndpointNfArray) ToGetOntapStorageVirtualMachineEndpointNfArrayOutput() GetOntapStorageVirtualMachineEndpointNfArrayOutput {
	return i.ToGetOntapStorageVirtualMachineEndpointNfArrayOutputWithContext(context.Background())
}

func (i GetOntapStorageVirtualMachineEndpointNfArray) ToGetOntapStorageVirtualMachineEndpointNfArrayOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineEndpointNfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapStorageVirtualMachineEndpointNfArrayOutput)
}

func (i GetOntapStorageVirtualMachineEndpointNfArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapStorageVirtualMachineEndpointNf] {
	return pulumix.Output[[]GetOntapStorageVirtualMachineEndpointNf]{
		OutputState: i.ToGetOntapStorageVirtualMachineEndpointNfArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOntapStorageVirtualMachineEndpointNfOutput struct{ *pulumi.OutputState }

func (GetOntapStorageVirtualMachineEndpointNfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapStorageVirtualMachineEndpointNf)(nil)).Elem()
}

func (o GetOntapStorageVirtualMachineEndpointNfOutput) ToGetOntapStorageVirtualMachineEndpointNfOutput() GetOntapStorageVirtualMachineEndpointNfOutput {
	return o
}

func (o GetOntapStorageVirtualMachineEndpointNfOutput) ToGetOntapStorageVirtualMachineEndpointNfOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineEndpointNfOutput {
	return o
}

func (o GetOntapStorageVirtualMachineEndpointNfOutput) ToOutput(ctx context.Context) pulumix.Output[GetOntapStorageVirtualMachineEndpointNf] {
	return pulumix.Output[GetOntapStorageVirtualMachineEndpointNf]{
		OutputState: o.OutputState,
	}
}

func (o GetOntapStorageVirtualMachineEndpointNfOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOntapStorageVirtualMachineEndpointNf) string { return v.DnsName }).(pulumi.StringOutput)
}

func (o GetOntapStorageVirtualMachineEndpointNfOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOntapStorageVirtualMachineEndpointNf) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type GetOntapStorageVirtualMachineEndpointNfArrayOutput struct{ *pulumi.OutputState }

func (GetOntapStorageVirtualMachineEndpointNfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapStorageVirtualMachineEndpointNf)(nil)).Elem()
}

func (o GetOntapStorageVirtualMachineEndpointNfArrayOutput) ToGetOntapStorageVirtualMachineEndpointNfArrayOutput() GetOntapStorageVirtualMachineEndpointNfArrayOutput {
	return o
}

func (o GetOntapStorageVirtualMachineEndpointNfArrayOutput) ToGetOntapStorageVirtualMachineEndpointNfArrayOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineEndpointNfArrayOutput {
	return o
}

func (o GetOntapStorageVirtualMachineEndpointNfArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapStorageVirtualMachineEndpointNf] {
	return pulumix.Output[[]GetOntapStorageVirtualMachineEndpointNf]{
		OutputState: o.OutputState,
	}
}

func (o GetOntapStorageVirtualMachineEndpointNfArrayOutput) Index(i pulumi.IntInput) GetOntapStorageVirtualMachineEndpointNfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOntapStorageVirtualMachineEndpointNf {
		return vs[0].([]GetOntapStorageVirtualMachineEndpointNf)[vs[1].(int)]
	}).(GetOntapStorageVirtualMachineEndpointNfOutput)
}

type GetOntapStorageVirtualMachineEndpointSmb struct {
	DnsName     string   `pulumi:"dnsName"`
	IpAddresses []string `pulumi:"ipAddresses"`
}

// GetOntapStorageVirtualMachineEndpointSmbInput is an input type that accepts GetOntapStorageVirtualMachineEndpointSmbArgs and GetOntapStorageVirtualMachineEndpointSmbOutput values.
// You can construct a concrete instance of `GetOntapStorageVirtualMachineEndpointSmbInput` via:
//
//	GetOntapStorageVirtualMachineEndpointSmbArgs{...}
type GetOntapStorageVirtualMachineEndpointSmbInput interface {
	pulumi.Input

	ToGetOntapStorageVirtualMachineEndpointSmbOutput() GetOntapStorageVirtualMachineEndpointSmbOutput
	ToGetOntapStorageVirtualMachineEndpointSmbOutputWithContext(context.Context) GetOntapStorageVirtualMachineEndpointSmbOutput
}

type GetOntapStorageVirtualMachineEndpointSmbArgs struct {
	DnsName     pulumi.StringInput      `pulumi:"dnsName"`
	IpAddresses pulumi.StringArrayInput `pulumi:"ipAddresses"`
}

func (GetOntapStorageVirtualMachineEndpointSmbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapStorageVirtualMachineEndpointSmb)(nil)).Elem()
}

func (i GetOntapStorageVirtualMachineEndpointSmbArgs) ToGetOntapStorageVirtualMachineEndpointSmbOutput() GetOntapStorageVirtualMachineEndpointSmbOutput {
	return i.ToGetOntapStorageVirtualMachineEndpointSmbOutputWithContext(context.Background())
}

func (i GetOntapStorageVirtualMachineEndpointSmbArgs) ToGetOntapStorageVirtualMachineEndpointSmbOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineEndpointSmbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapStorageVirtualMachineEndpointSmbOutput)
}

func (i GetOntapStorageVirtualMachineEndpointSmbArgs) ToOutput(ctx context.Context) pulumix.Output[GetOntapStorageVirtualMachineEndpointSmb] {
	return pulumix.Output[GetOntapStorageVirtualMachineEndpointSmb]{
		OutputState: i.ToGetOntapStorageVirtualMachineEndpointSmbOutputWithContext(ctx).OutputState,
	}
}

// GetOntapStorageVirtualMachineEndpointSmbArrayInput is an input type that accepts GetOntapStorageVirtualMachineEndpointSmbArray and GetOntapStorageVirtualMachineEndpointSmbArrayOutput values.
// You can construct a concrete instance of `GetOntapStorageVirtualMachineEndpointSmbArrayInput` via:
//
//	GetOntapStorageVirtualMachineEndpointSmbArray{ GetOntapStorageVirtualMachineEndpointSmbArgs{...} }
type GetOntapStorageVirtualMachineEndpointSmbArrayInput interface {
	pulumi.Input

	ToGetOntapStorageVirtualMachineEndpointSmbArrayOutput() GetOntapStorageVirtualMachineEndpointSmbArrayOutput
	ToGetOntapStorageVirtualMachineEndpointSmbArrayOutputWithContext(context.Context) GetOntapStorageVirtualMachineEndpointSmbArrayOutput
}

type GetOntapStorageVirtualMachineEndpointSmbArray []GetOntapStorageVirtualMachineEndpointSmbInput

func (GetOntapStorageVirtualMachineEndpointSmbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapStorageVirtualMachineEndpointSmb)(nil)).Elem()
}

func (i GetOntapStorageVirtualMachineEndpointSmbArray) ToGetOntapStorageVirtualMachineEndpointSmbArrayOutput() GetOntapStorageVirtualMachineEndpointSmbArrayOutput {
	return i.ToGetOntapStorageVirtualMachineEndpointSmbArrayOutputWithContext(context.Background())
}

func (i GetOntapStorageVirtualMachineEndpointSmbArray) ToGetOntapStorageVirtualMachineEndpointSmbArrayOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineEndpointSmbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapStorageVirtualMachineEndpointSmbArrayOutput)
}

func (i GetOntapStorageVirtualMachineEndpointSmbArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapStorageVirtualMachineEndpointSmb] {
	return pulumix.Output[[]GetOntapStorageVirtualMachineEndpointSmb]{
		OutputState: i.ToGetOntapStorageVirtualMachineEndpointSmbArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOntapStorageVirtualMachineEndpointSmbOutput struct{ *pulumi.OutputState }

func (GetOntapStorageVirtualMachineEndpointSmbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapStorageVirtualMachineEndpointSmb)(nil)).Elem()
}

func (o GetOntapStorageVirtualMachineEndpointSmbOutput) ToGetOntapStorageVirtualMachineEndpointSmbOutput() GetOntapStorageVirtualMachineEndpointSmbOutput {
	return o
}

func (o GetOntapStorageVirtualMachineEndpointSmbOutput) ToGetOntapStorageVirtualMachineEndpointSmbOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineEndpointSmbOutput {
	return o
}

func (o GetOntapStorageVirtualMachineEndpointSmbOutput) ToOutput(ctx context.Context) pulumix.Output[GetOntapStorageVirtualMachineEndpointSmb] {
	return pulumix.Output[GetOntapStorageVirtualMachineEndpointSmb]{
		OutputState: o.OutputState,
	}
}

func (o GetOntapStorageVirtualMachineEndpointSmbOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOntapStorageVirtualMachineEndpointSmb) string { return v.DnsName }).(pulumi.StringOutput)
}

func (o GetOntapStorageVirtualMachineEndpointSmbOutput) IpAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOntapStorageVirtualMachineEndpointSmb) []string { return v.IpAddresses }).(pulumi.StringArrayOutput)
}

type GetOntapStorageVirtualMachineEndpointSmbArrayOutput struct{ *pulumi.OutputState }

func (GetOntapStorageVirtualMachineEndpointSmbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapStorageVirtualMachineEndpointSmb)(nil)).Elem()
}

func (o GetOntapStorageVirtualMachineEndpointSmbArrayOutput) ToGetOntapStorageVirtualMachineEndpointSmbArrayOutput() GetOntapStorageVirtualMachineEndpointSmbArrayOutput {
	return o
}

func (o GetOntapStorageVirtualMachineEndpointSmbArrayOutput) ToGetOntapStorageVirtualMachineEndpointSmbArrayOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineEndpointSmbArrayOutput {
	return o
}

func (o GetOntapStorageVirtualMachineEndpointSmbArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapStorageVirtualMachineEndpointSmb] {
	return pulumix.Output[[]GetOntapStorageVirtualMachineEndpointSmb]{
		OutputState: o.OutputState,
	}
}

func (o GetOntapStorageVirtualMachineEndpointSmbArrayOutput) Index(i pulumi.IntInput) GetOntapStorageVirtualMachineEndpointSmbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOntapStorageVirtualMachineEndpointSmb {
		return vs[0].([]GetOntapStorageVirtualMachineEndpointSmb)[vs[1].(int)]
	}).(GetOntapStorageVirtualMachineEndpointSmbOutput)
}

type GetOntapStorageVirtualMachineFilter struct {
	// Name of the field to filter by, as defined by [the underlying AWS API](https://docs.aws.amazon.com/fsx/latest/APIReference/API_StorageVirtualMachineFilter.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field. An SVM will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

// GetOntapStorageVirtualMachineFilterInput is an input type that accepts GetOntapStorageVirtualMachineFilterArgs and GetOntapStorageVirtualMachineFilterOutput values.
// You can construct a concrete instance of `GetOntapStorageVirtualMachineFilterInput` via:
//
//	GetOntapStorageVirtualMachineFilterArgs{...}
type GetOntapStorageVirtualMachineFilterInput interface {
	pulumi.Input

	ToGetOntapStorageVirtualMachineFilterOutput() GetOntapStorageVirtualMachineFilterOutput
	ToGetOntapStorageVirtualMachineFilterOutputWithContext(context.Context) GetOntapStorageVirtualMachineFilterOutput
}

type GetOntapStorageVirtualMachineFilterArgs struct {
	// Name of the field to filter by, as defined by [the underlying AWS API](https://docs.aws.amazon.com/fsx/latest/APIReference/API_StorageVirtualMachineFilter.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field. An SVM will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetOntapStorageVirtualMachineFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapStorageVirtualMachineFilter)(nil)).Elem()
}

func (i GetOntapStorageVirtualMachineFilterArgs) ToGetOntapStorageVirtualMachineFilterOutput() GetOntapStorageVirtualMachineFilterOutput {
	return i.ToGetOntapStorageVirtualMachineFilterOutputWithContext(context.Background())
}

func (i GetOntapStorageVirtualMachineFilterArgs) ToGetOntapStorageVirtualMachineFilterOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapStorageVirtualMachineFilterOutput)
}

func (i GetOntapStorageVirtualMachineFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetOntapStorageVirtualMachineFilter] {
	return pulumix.Output[GetOntapStorageVirtualMachineFilter]{
		OutputState: i.ToGetOntapStorageVirtualMachineFilterOutputWithContext(ctx).OutputState,
	}
}

// GetOntapStorageVirtualMachineFilterArrayInput is an input type that accepts GetOntapStorageVirtualMachineFilterArray and GetOntapStorageVirtualMachineFilterArrayOutput values.
// You can construct a concrete instance of `GetOntapStorageVirtualMachineFilterArrayInput` via:
//
//	GetOntapStorageVirtualMachineFilterArray{ GetOntapStorageVirtualMachineFilterArgs{...} }
type GetOntapStorageVirtualMachineFilterArrayInput interface {
	pulumi.Input

	ToGetOntapStorageVirtualMachineFilterArrayOutput() GetOntapStorageVirtualMachineFilterArrayOutput
	ToGetOntapStorageVirtualMachineFilterArrayOutputWithContext(context.Context) GetOntapStorageVirtualMachineFilterArrayOutput
}

type GetOntapStorageVirtualMachineFilterArray []GetOntapStorageVirtualMachineFilterInput

func (GetOntapStorageVirtualMachineFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapStorageVirtualMachineFilter)(nil)).Elem()
}

func (i GetOntapStorageVirtualMachineFilterArray) ToGetOntapStorageVirtualMachineFilterArrayOutput() GetOntapStorageVirtualMachineFilterArrayOutput {
	return i.ToGetOntapStorageVirtualMachineFilterArrayOutputWithContext(context.Background())
}

func (i GetOntapStorageVirtualMachineFilterArray) ToGetOntapStorageVirtualMachineFilterArrayOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapStorageVirtualMachineFilterArrayOutput)
}

func (i GetOntapStorageVirtualMachineFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapStorageVirtualMachineFilter] {
	return pulumix.Output[[]GetOntapStorageVirtualMachineFilter]{
		OutputState: i.ToGetOntapStorageVirtualMachineFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOntapStorageVirtualMachineFilterOutput struct{ *pulumi.OutputState }

func (GetOntapStorageVirtualMachineFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapStorageVirtualMachineFilter)(nil)).Elem()
}

func (o GetOntapStorageVirtualMachineFilterOutput) ToGetOntapStorageVirtualMachineFilterOutput() GetOntapStorageVirtualMachineFilterOutput {
	return o
}

func (o GetOntapStorageVirtualMachineFilterOutput) ToGetOntapStorageVirtualMachineFilterOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineFilterOutput {
	return o
}

func (o GetOntapStorageVirtualMachineFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetOntapStorageVirtualMachineFilter] {
	return pulumix.Output[GetOntapStorageVirtualMachineFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by [the underlying AWS API](https://docs.aws.amazon.com/fsx/latest/APIReference/API_StorageVirtualMachineFilter.html).
func (o GetOntapStorageVirtualMachineFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOntapStorageVirtualMachineFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field. An SVM will be selected if any one of the given values matches.
func (o GetOntapStorageVirtualMachineFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOntapStorageVirtualMachineFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetOntapStorageVirtualMachineFilterArrayOutput struct{ *pulumi.OutputState }

func (GetOntapStorageVirtualMachineFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapStorageVirtualMachineFilter)(nil)).Elem()
}

func (o GetOntapStorageVirtualMachineFilterArrayOutput) ToGetOntapStorageVirtualMachineFilterArrayOutput() GetOntapStorageVirtualMachineFilterArrayOutput {
	return o
}

func (o GetOntapStorageVirtualMachineFilterArrayOutput) ToGetOntapStorageVirtualMachineFilterArrayOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineFilterArrayOutput {
	return o
}

func (o GetOntapStorageVirtualMachineFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapStorageVirtualMachineFilter] {
	return pulumix.Output[[]GetOntapStorageVirtualMachineFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetOntapStorageVirtualMachineFilterArrayOutput) Index(i pulumi.IntInput) GetOntapStorageVirtualMachineFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOntapStorageVirtualMachineFilter {
		return vs[0].([]GetOntapStorageVirtualMachineFilter)[vs[1].(int)]
	}).(GetOntapStorageVirtualMachineFilterOutput)
}

type GetOntapStorageVirtualMachineLifecycleTransitionReason struct {
	// A detailed message.
	Message string `pulumi:"message"`
}

// GetOntapStorageVirtualMachineLifecycleTransitionReasonInput is an input type that accepts GetOntapStorageVirtualMachineLifecycleTransitionReasonArgs and GetOntapStorageVirtualMachineLifecycleTransitionReasonOutput values.
// You can construct a concrete instance of `GetOntapStorageVirtualMachineLifecycleTransitionReasonInput` via:
//
//	GetOntapStorageVirtualMachineLifecycleTransitionReasonArgs{...}
type GetOntapStorageVirtualMachineLifecycleTransitionReasonInput interface {
	pulumi.Input

	ToGetOntapStorageVirtualMachineLifecycleTransitionReasonOutput() GetOntapStorageVirtualMachineLifecycleTransitionReasonOutput
	ToGetOntapStorageVirtualMachineLifecycleTransitionReasonOutputWithContext(context.Context) GetOntapStorageVirtualMachineLifecycleTransitionReasonOutput
}

type GetOntapStorageVirtualMachineLifecycleTransitionReasonArgs struct {
	// A detailed message.
	Message pulumi.StringInput `pulumi:"message"`
}

func (GetOntapStorageVirtualMachineLifecycleTransitionReasonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapStorageVirtualMachineLifecycleTransitionReason)(nil)).Elem()
}

func (i GetOntapStorageVirtualMachineLifecycleTransitionReasonArgs) ToGetOntapStorageVirtualMachineLifecycleTransitionReasonOutput() GetOntapStorageVirtualMachineLifecycleTransitionReasonOutput {
	return i.ToGetOntapStorageVirtualMachineLifecycleTransitionReasonOutputWithContext(context.Background())
}

func (i GetOntapStorageVirtualMachineLifecycleTransitionReasonArgs) ToGetOntapStorageVirtualMachineLifecycleTransitionReasonOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineLifecycleTransitionReasonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapStorageVirtualMachineLifecycleTransitionReasonOutput)
}

func (i GetOntapStorageVirtualMachineLifecycleTransitionReasonArgs) ToOutput(ctx context.Context) pulumix.Output[GetOntapStorageVirtualMachineLifecycleTransitionReason] {
	return pulumix.Output[GetOntapStorageVirtualMachineLifecycleTransitionReason]{
		OutputState: i.ToGetOntapStorageVirtualMachineLifecycleTransitionReasonOutputWithContext(ctx).OutputState,
	}
}

// GetOntapStorageVirtualMachineLifecycleTransitionReasonArrayInput is an input type that accepts GetOntapStorageVirtualMachineLifecycleTransitionReasonArray and GetOntapStorageVirtualMachineLifecycleTransitionReasonArrayOutput values.
// You can construct a concrete instance of `GetOntapStorageVirtualMachineLifecycleTransitionReasonArrayInput` via:
//
//	GetOntapStorageVirtualMachineLifecycleTransitionReasonArray{ GetOntapStorageVirtualMachineLifecycleTransitionReasonArgs{...} }
type GetOntapStorageVirtualMachineLifecycleTransitionReasonArrayInput interface {
	pulumi.Input

	ToGetOntapStorageVirtualMachineLifecycleTransitionReasonArrayOutput() GetOntapStorageVirtualMachineLifecycleTransitionReasonArrayOutput
	ToGetOntapStorageVirtualMachineLifecycleTransitionReasonArrayOutputWithContext(context.Context) GetOntapStorageVirtualMachineLifecycleTransitionReasonArrayOutput
}

type GetOntapStorageVirtualMachineLifecycleTransitionReasonArray []GetOntapStorageVirtualMachineLifecycleTransitionReasonInput

func (GetOntapStorageVirtualMachineLifecycleTransitionReasonArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapStorageVirtualMachineLifecycleTransitionReason)(nil)).Elem()
}

func (i GetOntapStorageVirtualMachineLifecycleTransitionReasonArray) ToGetOntapStorageVirtualMachineLifecycleTransitionReasonArrayOutput() GetOntapStorageVirtualMachineLifecycleTransitionReasonArrayOutput {
	return i.ToGetOntapStorageVirtualMachineLifecycleTransitionReasonArrayOutputWithContext(context.Background())
}

func (i GetOntapStorageVirtualMachineLifecycleTransitionReasonArray) ToGetOntapStorageVirtualMachineLifecycleTransitionReasonArrayOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineLifecycleTransitionReasonArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapStorageVirtualMachineLifecycleTransitionReasonArrayOutput)
}

func (i GetOntapStorageVirtualMachineLifecycleTransitionReasonArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapStorageVirtualMachineLifecycleTransitionReason] {
	return pulumix.Output[[]GetOntapStorageVirtualMachineLifecycleTransitionReason]{
		OutputState: i.ToGetOntapStorageVirtualMachineLifecycleTransitionReasonArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOntapStorageVirtualMachineLifecycleTransitionReasonOutput struct{ *pulumi.OutputState }

func (GetOntapStorageVirtualMachineLifecycleTransitionReasonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapStorageVirtualMachineLifecycleTransitionReason)(nil)).Elem()
}

func (o GetOntapStorageVirtualMachineLifecycleTransitionReasonOutput) ToGetOntapStorageVirtualMachineLifecycleTransitionReasonOutput() GetOntapStorageVirtualMachineLifecycleTransitionReasonOutput {
	return o
}

func (o GetOntapStorageVirtualMachineLifecycleTransitionReasonOutput) ToGetOntapStorageVirtualMachineLifecycleTransitionReasonOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineLifecycleTransitionReasonOutput {
	return o
}

func (o GetOntapStorageVirtualMachineLifecycleTransitionReasonOutput) ToOutput(ctx context.Context) pulumix.Output[GetOntapStorageVirtualMachineLifecycleTransitionReason] {
	return pulumix.Output[GetOntapStorageVirtualMachineLifecycleTransitionReason]{
		OutputState: o.OutputState,
	}
}

// A detailed message.
func (o GetOntapStorageVirtualMachineLifecycleTransitionReasonOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetOntapStorageVirtualMachineLifecycleTransitionReason) string { return v.Message }).(pulumi.StringOutput)
}

type GetOntapStorageVirtualMachineLifecycleTransitionReasonArrayOutput struct{ *pulumi.OutputState }

func (GetOntapStorageVirtualMachineLifecycleTransitionReasonArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapStorageVirtualMachineLifecycleTransitionReason)(nil)).Elem()
}

func (o GetOntapStorageVirtualMachineLifecycleTransitionReasonArrayOutput) ToGetOntapStorageVirtualMachineLifecycleTransitionReasonArrayOutput() GetOntapStorageVirtualMachineLifecycleTransitionReasonArrayOutput {
	return o
}

func (o GetOntapStorageVirtualMachineLifecycleTransitionReasonArrayOutput) ToGetOntapStorageVirtualMachineLifecycleTransitionReasonArrayOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachineLifecycleTransitionReasonArrayOutput {
	return o
}

func (o GetOntapStorageVirtualMachineLifecycleTransitionReasonArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapStorageVirtualMachineLifecycleTransitionReason] {
	return pulumix.Output[[]GetOntapStorageVirtualMachineLifecycleTransitionReason]{
		OutputState: o.OutputState,
	}
}

func (o GetOntapStorageVirtualMachineLifecycleTransitionReasonArrayOutput) Index(i pulumi.IntInput) GetOntapStorageVirtualMachineLifecycleTransitionReasonOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOntapStorageVirtualMachineLifecycleTransitionReason {
		return vs[0].([]GetOntapStorageVirtualMachineLifecycleTransitionReason)[vs[1].(int)]
	}).(GetOntapStorageVirtualMachineLifecycleTransitionReasonOutput)
}

type GetOntapStorageVirtualMachinesFilter struct {
	// Name of the field to filter by, as defined by [the underlying AWS API](https://docs.aws.amazon.com/fsx/latest/APIReference/API_StorageVirtualMachineFilter.html).
	Name string `pulumi:"name"`
	// Set of values that are accepted for the given field. An SVM will be selected if any one of the given values matches.
	Values []string `pulumi:"values"`
}

// GetOntapStorageVirtualMachinesFilterInput is an input type that accepts GetOntapStorageVirtualMachinesFilterArgs and GetOntapStorageVirtualMachinesFilterOutput values.
// You can construct a concrete instance of `GetOntapStorageVirtualMachinesFilterInput` via:
//
//	GetOntapStorageVirtualMachinesFilterArgs{...}
type GetOntapStorageVirtualMachinesFilterInput interface {
	pulumi.Input

	ToGetOntapStorageVirtualMachinesFilterOutput() GetOntapStorageVirtualMachinesFilterOutput
	ToGetOntapStorageVirtualMachinesFilterOutputWithContext(context.Context) GetOntapStorageVirtualMachinesFilterOutput
}

type GetOntapStorageVirtualMachinesFilterArgs struct {
	// Name of the field to filter by, as defined by [the underlying AWS API](https://docs.aws.amazon.com/fsx/latest/APIReference/API_StorageVirtualMachineFilter.html).
	Name pulumi.StringInput `pulumi:"name"`
	// Set of values that are accepted for the given field. An SVM will be selected if any one of the given values matches.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetOntapStorageVirtualMachinesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapStorageVirtualMachinesFilter)(nil)).Elem()
}

func (i GetOntapStorageVirtualMachinesFilterArgs) ToGetOntapStorageVirtualMachinesFilterOutput() GetOntapStorageVirtualMachinesFilterOutput {
	return i.ToGetOntapStorageVirtualMachinesFilterOutputWithContext(context.Background())
}

func (i GetOntapStorageVirtualMachinesFilterArgs) ToGetOntapStorageVirtualMachinesFilterOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachinesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapStorageVirtualMachinesFilterOutput)
}

func (i GetOntapStorageVirtualMachinesFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetOntapStorageVirtualMachinesFilter] {
	return pulumix.Output[GetOntapStorageVirtualMachinesFilter]{
		OutputState: i.ToGetOntapStorageVirtualMachinesFilterOutputWithContext(ctx).OutputState,
	}
}

// GetOntapStorageVirtualMachinesFilterArrayInput is an input type that accepts GetOntapStorageVirtualMachinesFilterArray and GetOntapStorageVirtualMachinesFilterArrayOutput values.
// You can construct a concrete instance of `GetOntapStorageVirtualMachinesFilterArrayInput` via:
//
//	GetOntapStorageVirtualMachinesFilterArray{ GetOntapStorageVirtualMachinesFilterArgs{...} }
type GetOntapStorageVirtualMachinesFilterArrayInput interface {
	pulumi.Input

	ToGetOntapStorageVirtualMachinesFilterArrayOutput() GetOntapStorageVirtualMachinesFilterArrayOutput
	ToGetOntapStorageVirtualMachinesFilterArrayOutputWithContext(context.Context) GetOntapStorageVirtualMachinesFilterArrayOutput
}

type GetOntapStorageVirtualMachinesFilterArray []GetOntapStorageVirtualMachinesFilterInput

func (GetOntapStorageVirtualMachinesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapStorageVirtualMachinesFilter)(nil)).Elem()
}

func (i GetOntapStorageVirtualMachinesFilterArray) ToGetOntapStorageVirtualMachinesFilterArrayOutput() GetOntapStorageVirtualMachinesFilterArrayOutput {
	return i.ToGetOntapStorageVirtualMachinesFilterArrayOutputWithContext(context.Background())
}

func (i GetOntapStorageVirtualMachinesFilterArray) ToGetOntapStorageVirtualMachinesFilterArrayOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachinesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOntapStorageVirtualMachinesFilterArrayOutput)
}

func (i GetOntapStorageVirtualMachinesFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapStorageVirtualMachinesFilter] {
	return pulumix.Output[[]GetOntapStorageVirtualMachinesFilter]{
		OutputState: i.ToGetOntapStorageVirtualMachinesFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOntapStorageVirtualMachinesFilterOutput struct{ *pulumi.OutputState }

func (GetOntapStorageVirtualMachinesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOntapStorageVirtualMachinesFilter)(nil)).Elem()
}

func (o GetOntapStorageVirtualMachinesFilterOutput) ToGetOntapStorageVirtualMachinesFilterOutput() GetOntapStorageVirtualMachinesFilterOutput {
	return o
}

func (o GetOntapStorageVirtualMachinesFilterOutput) ToGetOntapStorageVirtualMachinesFilterOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachinesFilterOutput {
	return o
}

func (o GetOntapStorageVirtualMachinesFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetOntapStorageVirtualMachinesFilter] {
	return pulumix.Output[GetOntapStorageVirtualMachinesFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the field to filter by, as defined by [the underlying AWS API](https://docs.aws.amazon.com/fsx/latest/APIReference/API_StorageVirtualMachineFilter.html).
func (o GetOntapStorageVirtualMachinesFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOntapStorageVirtualMachinesFilter) string { return v.Name }).(pulumi.StringOutput)
}

// Set of values that are accepted for the given field. An SVM will be selected if any one of the given values matches.
func (o GetOntapStorageVirtualMachinesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOntapStorageVirtualMachinesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetOntapStorageVirtualMachinesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetOntapStorageVirtualMachinesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOntapStorageVirtualMachinesFilter)(nil)).Elem()
}

func (o GetOntapStorageVirtualMachinesFilterArrayOutput) ToGetOntapStorageVirtualMachinesFilterArrayOutput() GetOntapStorageVirtualMachinesFilterArrayOutput {
	return o
}

func (o GetOntapStorageVirtualMachinesFilterArrayOutput) ToGetOntapStorageVirtualMachinesFilterArrayOutputWithContext(ctx context.Context) GetOntapStorageVirtualMachinesFilterArrayOutput {
	return o
}

func (o GetOntapStorageVirtualMachinesFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOntapStorageVirtualMachinesFilter] {
	return pulumix.Output[[]GetOntapStorageVirtualMachinesFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetOntapStorageVirtualMachinesFilterArrayOutput) Index(i pulumi.IntInput) GetOntapStorageVirtualMachinesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOntapStorageVirtualMachinesFilter {
		return vs[0].([]GetOntapStorageVirtualMachinesFilter)[vs[1].(int)]
	}).(GetOntapStorageVirtualMachinesFilterOutput)
}

type GetOpenZfsSnapshotFilter struct {
	// Name of the snapshot.
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// GetOpenZfsSnapshotFilterInput is an input type that accepts GetOpenZfsSnapshotFilterArgs and GetOpenZfsSnapshotFilterOutput values.
// You can construct a concrete instance of `GetOpenZfsSnapshotFilterInput` via:
//
//	GetOpenZfsSnapshotFilterArgs{...}
type GetOpenZfsSnapshotFilterInput interface {
	pulumi.Input

	ToGetOpenZfsSnapshotFilterOutput() GetOpenZfsSnapshotFilterOutput
	ToGetOpenZfsSnapshotFilterOutputWithContext(context.Context) GetOpenZfsSnapshotFilterOutput
}

type GetOpenZfsSnapshotFilterArgs struct {
	// Name of the snapshot.
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetOpenZfsSnapshotFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenZfsSnapshotFilter)(nil)).Elem()
}

func (i GetOpenZfsSnapshotFilterArgs) ToGetOpenZfsSnapshotFilterOutput() GetOpenZfsSnapshotFilterOutput {
	return i.ToGetOpenZfsSnapshotFilterOutputWithContext(context.Background())
}

func (i GetOpenZfsSnapshotFilterArgs) ToGetOpenZfsSnapshotFilterOutputWithContext(ctx context.Context) GetOpenZfsSnapshotFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpenZfsSnapshotFilterOutput)
}

func (i GetOpenZfsSnapshotFilterArgs) ToOutput(ctx context.Context) pulumix.Output[GetOpenZfsSnapshotFilter] {
	return pulumix.Output[GetOpenZfsSnapshotFilter]{
		OutputState: i.ToGetOpenZfsSnapshotFilterOutputWithContext(ctx).OutputState,
	}
}

// GetOpenZfsSnapshotFilterArrayInput is an input type that accepts GetOpenZfsSnapshotFilterArray and GetOpenZfsSnapshotFilterArrayOutput values.
// You can construct a concrete instance of `GetOpenZfsSnapshotFilterArrayInput` via:
//
//	GetOpenZfsSnapshotFilterArray{ GetOpenZfsSnapshotFilterArgs{...} }
type GetOpenZfsSnapshotFilterArrayInput interface {
	pulumi.Input

	ToGetOpenZfsSnapshotFilterArrayOutput() GetOpenZfsSnapshotFilterArrayOutput
	ToGetOpenZfsSnapshotFilterArrayOutputWithContext(context.Context) GetOpenZfsSnapshotFilterArrayOutput
}

type GetOpenZfsSnapshotFilterArray []GetOpenZfsSnapshotFilterInput

func (GetOpenZfsSnapshotFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpenZfsSnapshotFilter)(nil)).Elem()
}

func (i GetOpenZfsSnapshotFilterArray) ToGetOpenZfsSnapshotFilterArrayOutput() GetOpenZfsSnapshotFilterArrayOutput {
	return i.ToGetOpenZfsSnapshotFilterArrayOutputWithContext(context.Background())
}

func (i GetOpenZfsSnapshotFilterArray) ToGetOpenZfsSnapshotFilterArrayOutputWithContext(ctx context.Context) GetOpenZfsSnapshotFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOpenZfsSnapshotFilterArrayOutput)
}

func (i GetOpenZfsSnapshotFilterArray) ToOutput(ctx context.Context) pulumix.Output[[]GetOpenZfsSnapshotFilter] {
	return pulumix.Output[[]GetOpenZfsSnapshotFilter]{
		OutputState: i.ToGetOpenZfsSnapshotFilterArrayOutputWithContext(ctx).OutputState,
	}
}

type GetOpenZfsSnapshotFilterOutput struct{ *pulumi.OutputState }

func (GetOpenZfsSnapshotFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenZfsSnapshotFilter)(nil)).Elem()
}

func (o GetOpenZfsSnapshotFilterOutput) ToGetOpenZfsSnapshotFilterOutput() GetOpenZfsSnapshotFilterOutput {
	return o
}

func (o GetOpenZfsSnapshotFilterOutput) ToGetOpenZfsSnapshotFilterOutputWithContext(ctx context.Context) GetOpenZfsSnapshotFilterOutput {
	return o
}

func (o GetOpenZfsSnapshotFilterOutput) ToOutput(ctx context.Context) pulumix.Output[GetOpenZfsSnapshotFilter] {
	return pulumix.Output[GetOpenZfsSnapshotFilter]{
		OutputState: o.OutputState,
	}
}

// Name of the snapshot.
func (o GetOpenZfsSnapshotFilterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenZfsSnapshotFilter) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetOpenZfsSnapshotFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOpenZfsSnapshotFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetOpenZfsSnapshotFilterArrayOutput struct{ *pulumi.OutputState }

func (GetOpenZfsSnapshotFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOpenZfsSnapshotFilter)(nil)).Elem()
}

func (o GetOpenZfsSnapshotFilterArrayOutput) ToGetOpenZfsSnapshotFilterArrayOutput() GetOpenZfsSnapshotFilterArrayOutput {
	return o
}

func (o GetOpenZfsSnapshotFilterArrayOutput) ToGetOpenZfsSnapshotFilterArrayOutputWithContext(ctx context.Context) GetOpenZfsSnapshotFilterArrayOutput {
	return o
}

func (o GetOpenZfsSnapshotFilterArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetOpenZfsSnapshotFilter] {
	return pulumix.Output[[]GetOpenZfsSnapshotFilter]{
		OutputState: o.OutputState,
	}
}

func (o GetOpenZfsSnapshotFilterArrayOutput) Index(i pulumi.IntInput) GetOpenZfsSnapshotFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOpenZfsSnapshotFilter {
		return vs[0].([]GetOpenZfsSnapshotFilter)[vs[1].(int)]
	}).(GetOpenZfsSnapshotFilterOutput)
}

type GetWindowsFileSystemAuditLogConfiguration struct {
	AuditLogDestination          string `pulumi:"auditLogDestination"`
	FileAccessAuditLogLevel      string `pulumi:"fileAccessAuditLogLevel"`
	FileShareAccessAuditLogLevel string `pulumi:"fileShareAccessAuditLogLevel"`
}

// GetWindowsFileSystemAuditLogConfigurationInput is an input type that accepts GetWindowsFileSystemAuditLogConfigurationArgs and GetWindowsFileSystemAuditLogConfigurationOutput values.
// You can construct a concrete instance of `GetWindowsFileSystemAuditLogConfigurationInput` via:
//
//	GetWindowsFileSystemAuditLogConfigurationArgs{...}
type GetWindowsFileSystemAuditLogConfigurationInput interface {
	pulumi.Input

	ToGetWindowsFileSystemAuditLogConfigurationOutput() GetWindowsFileSystemAuditLogConfigurationOutput
	ToGetWindowsFileSystemAuditLogConfigurationOutputWithContext(context.Context) GetWindowsFileSystemAuditLogConfigurationOutput
}

type GetWindowsFileSystemAuditLogConfigurationArgs struct {
	AuditLogDestination          pulumi.StringInput `pulumi:"auditLogDestination"`
	FileAccessAuditLogLevel      pulumi.StringInput `pulumi:"fileAccessAuditLogLevel"`
	FileShareAccessAuditLogLevel pulumi.StringInput `pulumi:"fileShareAccessAuditLogLevel"`
}

func (GetWindowsFileSystemAuditLogConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWindowsFileSystemAuditLogConfiguration)(nil)).Elem()
}

func (i GetWindowsFileSystemAuditLogConfigurationArgs) ToGetWindowsFileSystemAuditLogConfigurationOutput() GetWindowsFileSystemAuditLogConfigurationOutput {
	return i.ToGetWindowsFileSystemAuditLogConfigurationOutputWithContext(context.Background())
}

func (i GetWindowsFileSystemAuditLogConfigurationArgs) ToGetWindowsFileSystemAuditLogConfigurationOutputWithContext(ctx context.Context) GetWindowsFileSystemAuditLogConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWindowsFileSystemAuditLogConfigurationOutput)
}

func (i GetWindowsFileSystemAuditLogConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[GetWindowsFileSystemAuditLogConfiguration] {
	return pulumix.Output[GetWindowsFileSystemAuditLogConfiguration]{
		OutputState: i.ToGetWindowsFileSystemAuditLogConfigurationOutputWithContext(ctx).OutputState,
	}
}

// GetWindowsFileSystemAuditLogConfigurationArrayInput is an input type that accepts GetWindowsFileSystemAuditLogConfigurationArray and GetWindowsFileSystemAuditLogConfigurationArrayOutput values.
// You can construct a concrete instance of `GetWindowsFileSystemAuditLogConfigurationArrayInput` via:
//
//	GetWindowsFileSystemAuditLogConfigurationArray{ GetWindowsFileSystemAuditLogConfigurationArgs{...} }
type GetWindowsFileSystemAuditLogConfigurationArrayInput interface {
	pulumi.Input

	ToGetWindowsFileSystemAuditLogConfigurationArrayOutput() GetWindowsFileSystemAuditLogConfigurationArrayOutput
	ToGetWindowsFileSystemAuditLogConfigurationArrayOutputWithContext(context.Context) GetWindowsFileSystemAuditLogConfigurationArrayOutput
}

type GetWindowsFileSystemAuditLogConfigurationArray []GetWindowsFileSystemAuditLogConfigurationInput

func (GetWindowsFileSystemAuditLogConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWindowsFileSystemAuditLogConfiguration)(nil)).Elem()
}

func (i GetWindowsFileSystemAuditLogConfigurationArray) ToGetWindowsFileSystemAuditLogConfigurationArrayOutput() GetWindowsFileSystemAuditLogConfigurationArrayOutput {
	return i.ToGetWindowsFileSystemAuditLogConfigurationArrayOutputWithContext(context.Background())
}

func (i GetWindowsFileSystemAuditLogConfigurationArray) ToGetWindowsFileSystemAuditLogConfigurationArrayOutputWithContext(ctx context.Context) GetWindowsFileSystemAuditLogConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWindowsFileSystemAuditLogConfigurationArrayOutput)
}

func (i GetWindowsFileSystemAuditLogConfigurationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetWindowsFileSystemAuditLogConfiguration] {
	return pulumix.Output[[]GetWindowsFileSystemAuditLogConfiguration]{
		OutputState: i.ToGetWindowsFileSystemAuditLogConfigurationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetWindowsFileSystemAuditLogConfigurationOutput struct{ *pulumi.OutputState }

func (GetWindowsFileSystemAuditLogConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWindowsFileSystemAuditLogConfiguration)(nil)).Elem()
}

func (o GetWindowsFileSystemAuditLogConfigurationOutput) ToGetWindowsFileSystemAuditLogConfigurationOutput() GetWindowsFileSystemAuditLogConfigurationOutput {
	return o
}

func (o GetWindowsFileSystemAuditLogConfigurationOutput) ToGetWindowsFileSystemAuditLogConfigurationOutputWithContext(ctx context.Context) GetWindowsFileSystemAuditLogConfigurationOutput {
	return o
}

func (o GetWindowsFileSystemAuditLogConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GetWindowsFileSystemAuditLogConfiguration] {
	return pulumix.Output[GetWindowsFileSystemAuditLogConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o GetWindowsFileSystemAuditLogConfigurationOutput) AuditLogDestination() pulumi.StringOutput {
	return o.ApplyT(func(v GetWindowsFileSystemAuditLogConfiguration) string { return v.AuditLogDestination }).(pulumi.StringOutput)
}

func (o GetWindowsFileSystemAuditLogConfigurationOutput) FileAccessAuditLogLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetWindowsFileSystemAuditLogConfiguration) string { return v.FileAccessAuditLogLevel }).(pulumi.StringOutput)
}

func (o GetWindowsFileSystemAuditLogConfigurationOutput) FileShareAccessAuditLogLevel() pulumi.StringOutput {
	return o.ApplyT(func(v GetWindowsFileSystemAuditLogConfiguration) string { return v.FileShareAccessAuditLogLevel }).(pulumi.StringOutput)
}

type GetWindowsFileSystemAuditLogConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetWindowsFileSystemAuditLogConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWindowsFileSystemAuditLogConfiguration)(nil)).Elem()
}

func (o GetWindowsFileSystemAuditLogConfigurationArrayOutput) ToGetWindowsFileSystemAuditLogConfigurationArrayOutput() GetWindowsFileSystemAuditLogConfigurationArrayOutput {
	return o
}

func (o GetWindowsFileSystemAuditLogConfigurationArrayOutput) ToGetWindowsFileSystemAuditLogConfigurationArrayOutputWithContext(ctx context.Context) GetWindowsFileSystemAuditLogConfigurationArrayOutput {
	return o
}

func (o GetWindowsFileSystemAuditLogConfigurationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetWindowsFileSystemAuditLogConfiguration] {
	return pulumix.Output[[]GetWindowsFileSystemAuditLogConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o GetWindowsFileSystemAuditLogConfigurationArrayOutput) Index(i pulumi.IntInput) GetWindowsFileSystemAuditLogConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWindowsFileSystemAuditLogConfiguration {
		return vs[0].([]GetWindowsFileSystemAuditLogConfiguration)[vs[1].(int)]
	}).(GetWindowsFileSystemAuditLogConfigurationOutput)
}

type GetWindowsFileSystemDiskIopsConfiguration struct {
	Iops int    `pulumi:"iops"`
	Mode string `pulumi:"mode"`
}

// GetWindowsFileSystemDiskIopsConfigurationInput is an input type that accepts GetWindowsFileSystemDiskIopsConfigurationArgs and GetWindowsFileSystemDiskIopsConfigurationOutput values.
// You can construct a concrete instance of `GetWindowsFileSystemDiskIopsConfigurationInput` via:
//
//	GetWindowsFileSystemDiskIopsConfigurationArgs{...}
type GetWindowsFileSystemDiskIopsConfigurationInput interface {
	pulumi.Input

	ToGetWindowsFileSystemDiskIopsConfigurationOutput() GetWindowsFileSystemDiskIopsConfigurationOutput
	ToGetWindowsFileSystemDiskIopsConfigurationOutputWithContext(context.Context) GetWindowsFileSystemDiskIopsConfigurationOutput
}

type GetWindowsFileSystemDiskIopsConfigurationArgs struct {
	Iops pulumi.IntInput    `pulumi:"iops"`
	Mode pulumi.StringInput `pulumi:"mode"`
}

func (GetWindowsFileSystemDiskIopsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWindowsFileSystemDiskIopsConfiguration)(nil)).Elem()
}

func (i GetWindowsFileSystemDiskIopsConfigurationArgs) ToGetWindowsFileSystemDiskIopsConfigurationOutput() GetWindowsFileSystemDiskIopsConfigurationOutput {
	return i.ToGetWindowsFileSystemDiskIopsConfigurationOutputWithContext(context.Background())
}

func (i GetWindowsFileSystemDiskIopsConfigurationArgs) ToGetWindowsFileSystemDiskIopsConfigurationOutputWithContext(ctx context.Context) GetWindowsFileSystemDiskIopsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWindowsFileSystemDiskIopsConfigurationOutput)
}

func (i GetWindowsFileSystemDiskIopsConfigurationArgs) ToOutput(ctx context.Context) pulumix.Output[GetWindowsFileSystemDiskIopsConfiguration] {
	return pulumix.Output[GetWindowsFileSystemDiskIopsConfiguration]{
		OutputState: i.ToGetWindowsFileSystemDiskIopsConfigurationOutputWithContext(ctx).OutputState,
	}
}

// GetWindowsFileSystemDiskIopsConfigurationArrayInput is an input type that accepts GetWindowsFileSystemDiskIopsConfigurationArray and GetWindowsFileSystemDiskIopsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetWindowsFileSystemDiskIopsConfigurationArrayInput` via:
//
//	GetWindowsFileSystemDiskIopsConfigurationArray{ GetWindowsFileSystemDiskIopsConfigurationArgs{...} }
type GetWindowsFileSystemDiskIopsConfigurationArrayInput interface {
	pulumi.Input

	ToGetWindowsFileSystemDiskIopsConfigurationArrayOutput() GetWindowsFileSystemDiskIopsConfigurationArrayOutput
	ToGetWindowsFileSystemDiskIopsConfigurationArrayOutputWithContext(context.Context) GetWindowsFileSystemDiskIopsConfigurationArrayOutput
}

type GetWindowsFileSystemDiskIopsConfigurationArray []GetWindowsFileSystemDiskIopsConfigurationInput

func (GetWindowsFileSystemDiskIopsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWindowsFileSystemDiskIopsConfiguration)(nil)).Elem()
}

func (i GetWindowsFileSystemDiskIopsConfigurationArray) ToGetWindowsFileSystemDiskIopsConfigurationArrayOutput() GetWindowsFileSystemDiskIopsConfigurationArrayOutput {
	return i.ToGetWindowsFileSystemDiskIopsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetWindowsFileSystemDiskIopsConfigurationArray) ToGetWindowsFileSystemDiskIopsConfigurationArrayOutputWithContext(ctx context.Context) GetWindowsFileSystemDiskIopsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWindowsFileSystemDiskIopsConfigurationArrayOutput)
}

func (i GetWindowsFileSystemDiskIopsConfigurationArray) ToOutput(ctx context.Context) pulumix.Output[[]GetWindowsFileSystemDiskIopsConfiguration] {
	return pulumix.Output[[]GetWindowsFileSystemDiskIopsConfiguration]{
		OutputState: i.ToGetWindowsFileSystemDiskIopsConfigurationArrayOutputWithContext(ctx).OutputState,
	}
}

type GetWindowsFileSystemDiskIopsConfigurationOutput struct{ *pulumi.OutputState }

func (GetWindowsFileSystemDiskIopsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWindowsFileSystemDiskIopsConfiguration)(nil)).Elem()
}

func (o GetWindowsFileSystemDiskIopsConfigurationOutput) ToGetWindowsFileSystemDiskIopsConfigurationOutput() GetWindowsFileSystemDiskIopsConfigurationOutput {
	return o
}

func (o GetWindowsFileSystemDiskIopsConfigurationOutput) ToGetWindowsFileSystemDiskIopsConfigurationOutputWithContext(ctx context.Context) GetWindowsFileSystemDiskIopsConfigurationOutput {
	return o
}

func (o GetWindowsFileSystemDiskIopsConfigurationOutput) ToOutput(ctx context.Context) pulumix.Output[GetWindowsFileSystemDiskIopsConfiguration] {
	return pulumix.Output[GetWindowsFileSystemDiskIopsConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o GetWindowsFileSystemDiskIopsConfigurationOutput) Iops() pulumi.IntOutput {
	return o.ApplyT(func(v GetWindowsFileSystemDiskIopsConfiguration) int { return v.Iops }).(pulumi.IntOutput)
}

func (o GetWindowsFileSystemDiskIopsConfigurationOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v GetWindowsFileSystemDiskIopsConfiguration) string { return v.Mode }).(pulumi.StringOutput)
}

type GetWindowsFileSystemDiskIopsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetWindowsFileSystemDiskIopsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWindowsFileSystemDiskIopsConfiguration)(nil)).Elem()
}

func (o GetWindowsFileSystemDiskIopsConfigurationArrayOutput) ToGetWindowsFileSystemDiskIopsConfigurationArrayOutput() GetWindowsFileSystemDiskIopsConfigurationArrayOutput {
	return o
}

func (o GetWindowsFileSystemDiskIopsConfigurationArrayOutput) ToGetWindowsFileSystemDiskIopsConfigurationArrayOutputWithContext(ctx context.Context) GetWindowsFileSystemDiskIopsConfigurationArrayOutput {
	return o
}

func (o GetWindowsFileSystemDiskIopsConfigurationArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]GetWindowsFileSystemDiskIopsConfiguration] {
	return pulumix.Output[[]GetWindowsFileSystemDiskIopsConfiguration]{
		OutputState: o.OutputState,
	}
}

func (o GetWindowsFileSystemDiskIopsConfigurationArrayOutput) Index(i pulumi.IntInput) GetWindowsFileSystemDiskIopsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWindowsFileSystemDiskIopsConfiguration {
		return vs[0].([]GetWindowsFileSystemDiskIopsConfiguration)[vs[1].(int)]
	}).(GetWindowsFileSystemDiskIopsConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataRepositoryAssociationS3Input)(nil)).Elem(), DataRepositoryAssociationS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataRepositoryAssociationS3PtrInput)(nil)).Elem(), DataRepositoryAssociationS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataRepositoryAssociationS3AutoExportPolicyInput)(nil)).Elem(), DataRepositoryAssociationS3AutoExportPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataRepositoryAssociationS3AutoExportPolicyPtrInput)(nil)).Elem(), DataRepositoryAssociationS3AutoExportPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataRepositoryAssociationS3AutoImportPolicyInput)(nil)).Elem(), DataRepositoryAssociationS3AutoImportPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataRepositoryAssociationS3AutoImportPolicyPtrInput)(nil)).Elem(), DataRepositoryAssociationS3AutoImportPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileCacheDataRepositoryAssociationInput)(nil)).Elem(), FileCacheDataRepositoryAssociationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileCacheDataRepositoryAssociationArrayInput)(nil)).Elem(), FileCacheDataRepositoryAssociationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileCacheDataRepositoryAssociationNfInput)(nil)).Elem(), FileCacheDataRepositoryAssociationNfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileCacheDataRepositoryAssociationNfArrayInput)(nil)).Elem(), FileCacheDataRepositoryAssociationNfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileCacheLustreConfigurationInput)(nil)).Elem(), FileCacheLustreConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileCacheLustreConfigurationArrayInput)(nil)).Elem(), FileCacheLustreConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileCacheLustreConfigurationLogConfigurationInput)(nil)).Elem(), FileCacheLustreConfigurationLogConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileCacheLustreConfigurationLogConfigurationArrayInput)(nil)).Elem(), FileCacheLustreConfigurationLogConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileCacheLustreConfigurationMetadataConfigurationInput)(nil)).Elem(), FileCacheLustreConfigurationMetadataConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileCacheLustreConfigurationMetadataConfigurationArrayInput)(nil)).Elem(), FileCacheLustreConfigurationMetadataConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LustreFileSystemLogConfigurationInput)(nil)).Elem(), LustreFileSystemLogConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LustreFileSystemLogConfigurationPtrInput)(nil)).Elem(), LustreFileSystemLogConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LustreFileSystemRootSquashConfigurationInput)(nil)).Elem(), LustreFileSystemRootSquashConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LustreFileSystemRootSquashConfigurationPtrInput)(nil)).Elem(), LustreFileSystemRootSquashConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapFileSystemDiskIopsConfigurationInput)(nil)).Elem(), OntapFileSystemDiskIopsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapFileSystemDiskIopsConfigurationPtrInput)(nil)).Elem(), OntapFileSystemDiskIopsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapFileSystemEndpointInput)(nil)).Elem(), OntapFileSystemEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapFileSystemEndpointArrayInput)(nil)).Elem(), OntapFileSystemEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapFileSystemEndpointInterclusterInput)(nil)).Elem(), OntapFileSystemEndpointInterclusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapFileSystemEndpointInterclusterArrayInput)(nil)).Elem(), OntapFileSystemEndpointInterclusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapFileSystemEndpointManagementInput)(nil)).Elem(), OntapFileSystemEndpointManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapFileSystemEndpointManagementArrayInput)(nil)).Elem(), OntapFileSystemEndpointManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineActiveDirectoryConfigurationInput)(nil)).Elem(), OntapStorageVirtualMachineActiveDirectoryConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineActiveDirectoryConfigurationPtrInput)(nil)).Elem(), OntapStorageVirtualMachineActiveDirectoryConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationInput)(nil)).Elem(), OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrInput)(nil)).Elem(), OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineEndpointInput)(nil)).Elem(), OntapStorageVirtualMachineEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineEndpointArrayInput)(nil)).Elem(), OntapStorageVirtualMachineEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineEndpointIscsiInput)(nil)).Elem(), OntapStorageVirtualMachineEndpointIscsiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineEndpointIscsiArrayInput)(nil)).Elem(), OntapStorageVirtualMachineEndpointIscsiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineEndpointManagementInput)(nil)).Elem(), OntapStorageVirtualMachineEndpointManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineEndpointManagementArrayInput)(nil)).Elem(), OntapStorageVirtualMachineEndpointManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineEndpointNfInput)(nil)).Elem(), OntapStorageVirtualMachineEndpointNfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineEndpointNfArrayInput)(nil)).Elem(), OntapStorageVirtualMachineEndpointNfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineEndpointSmbInput)(nil)).Elem(), OntapStorageVirtualMachineEndpointSmbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineEndpointSmbArrayInput)(nil)).Elem(), OntapStorageVirtualMachineEndpointSmbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapVolumeTieringPolicyInput)(nil)).Elem(), OntapVolumeTieringPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapVolumeTieringPolicyPtrInput)(nil)).Elem(), OntapVolumeTieringPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenZfsFileSystemDiskIopsConfigurationInput)(nil)).Elem(), OpenZfsFileSystemDiskIopsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenZfsFileSystemDiskIopsConfigurationPtrInput)(nil)).Elem(), OpenZfsFileSystemDiskIopsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenZfsFileSystemRootVolumeConfigurationInput)(nil)).Elem(), OpenZfsFileSystemRootVolumeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenZfsFileSystemRootVolumeConfigurationPtrInput)(nil)).Elem(), OpenZfsFileSystemRootVolumeConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenZfsFileSystemRootVolumeConfigurationNfsExportsInput)(nil)).Elem(), OpenZfsFileSystemRootVolumeConfigurationNfsExportsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrInput)(nil)).Elem(), OpenZfsFileSystemRootVolumeConfigurationNfsExportsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationInput)(nil)).Elem(), OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayInput)(nil)).Elem(), OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaInput)(nil)).Elem(), OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayInput)(nil)).Elem(), OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenZfsVolumeNfsExportsInput)(nil)).Elem(), OpenZfsVolumeNfsExportsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenZfsVolumeNfsExportsPtrInput)(nil)).Elem(), OpenZfsVolumeNfsExportsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenZfsVolumeNfsExportsClientConfigurationInput)(nil)).Elem(), OpenZfsVolumeNfsExportsClientConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenZfsVolumeNfsExportsClientConfigurationArrayInput)(nil)).Elem(), OpenZfsVolumeNfsExportsClientConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenZfsVolumeOriginSnapshotInput)(nil)).Elem(), OpenZfsVolumeOriginSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenZfsVolumeOriginSnapshotPtrInput)(nil)).Elem(), OpenZfsVolumeOriginSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenZfsVolumeUserAndGroupQuotaInput)(nil)).Elem(), OpenZfsVolumeUserAndGroupQuotaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenZfsVolumeUserAndGroupQuotaArrayInput)(nil)).Elem(), OpenZfsVolumeUserAndGroupQuotaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WindowsFileSystemAuditLogConfigurationInput)(nil)).Elem(), WindowsFileSystemAuditLogConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WindowsFileSystemAuditLogConfigurationPtrInput)(nil)).Elem(), WindowsFileSystemAuditLogConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WindowsFileSystemDiskIopsConfigurationInput)(nil)).Elem(), WindowsFileSystemDiskIopsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WindowsFileSystemDiskIopsConfigurationPtrInput)(nil)).Elem(), WindowsFileSystemDiskIopsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WindowsFileSystemSelfManagedActiveDirectoryInput)(nil)).Elem(), WindowsFileSystemSelfManagedActiveDirectoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WindowsFileSystemSelfManagedActiveDirectoryPtrInput)(nil)).Elem(), WindowsFileSystemSelfManagedActiveDirectoryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapFileSystemDiskIopsConfigurationInput)(nil)).Elem(), GetOntapFileSystemDiskIopsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapFileSystemDiskIopsConfigurationArrayInput)(nil)).Elem(), GetOntapFileSystemDiskIopsConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapFileSystemEndpointInput)(nil)).Elem(), GetOntapFileSystemEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapFileSystemEndpointArrayInput)(nil)).Elem(), GetOntapFileSystemEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapFileSystemEndpointInterclusterInput)(nil)).Elem(), GetOntapFileSystemEndpointInterclusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapFileSystemEndpointInterclusterArrayInput)(nil)).Elem(), GetOntapFileSystemEndpointInterclusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapFileSystemEndpointManagementInput)(nil)).Elem(), GetOntapFileSystemEndpointManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapFileSystemEndpointManagementArrayInput)(nil)).Elem(), GetOntapFileSystemEndpointManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapStorageVirtualMachineActiveDirectoryConfigurationInput)(nil)).Elem(), GetOntapStorageVirtualMachineActiveDirectoryConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayInput)(nil)).Elem(), GetOntapStorageVirtualMachineActiveDirectoryConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationInput)(nil)).Elem(), GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayInput)(nil)).Elem(), GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapStorageVirtualMachineEndpointInput)(nil)).Elem(), GetOntapStorageVirtualMachineEndpointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapStorageVirtualMachineEndpointArrayInput)(nil)).Elem(), GetOntapStorageVirtualMachineEndpointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapStorageVirtualMachineEndpointIscsiInput)(nil)).Elem(), GetOntapStorageVirtualMachineEndpointIscsiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapStorageVirtualMachineEndpointIscsiArrayInput)(nil)).Elem(), GetOntapStorageVirtualMachineEndpointIscsiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapStorageVirtualMachineEndpointManagementInput)(nil)).Elem(), GetOntapStorageVirtualMachineEndpointManagementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapStorageVirtualMachineEndpointManagementArrayInput)(nil)).Elem(), GetOntapStorageVirtualMachineEndpointManagementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapStorageVirtualMachineEndpointNfInput)(nil)).Elem(), GetOntapStorageVirtualMachineEndpointNfArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapStorageVirtualMachineEndpointNfArrayInput)(nil)).Elem(), GetOntapStorageVirtualMachineEndpointNfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapStorageVirtualMachineEndpointSmbInput)(nil)).Elem(), GetOntapStorageVirtualMachineEndpointSmbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapStorageVirtualMachineEndpointSmbArrayInput)(nil)).Elem(), GetOntapStorageVirtualMachineEndpointSmbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapStorageVirtualMachineFilterInput)(nil)).Elem(), GetOntapStorageVirtualMachineFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapStorageVirtualMachineFilterArrayInput)(nil)).Elem(), GetOntapStorageVirtualMachineFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapStorageVirtualMachineLifecycleTransitionReasonInput)(nil)).Elem(), GetOntapStorageVirtualMachineLifecycleTransitionReasonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapStorageVirtualMachineLifecycleTransitionReasonArrayInput)(nil)).Elem(), GetOntapStorageVirtualMachineLifecycleTransitionReasonArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapStorageVirtualMachinesFilterInput)(nil)).Elem(), GetOntapStorageVirtualMachinesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOntapStorageVirtualMachinesFilterArrayInput)(nil)).Elem(), GetOntapStorageVirtualMachinesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpenZfsSnapshotFilterInput)(nil)).Elem(), GetOpenZfsSnapshotFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOpenZfsSnapshotFilterArrayInput)(nil)).Elem(), GetOpenZfsSnapshotFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWindowsFileSystemAuditLogConfigurationInput)(nil)).Elem(), GetWindowsFileSystemAuditLogConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWindowsFileSystemAuditLogConfigurationArrayInput)(nil)).Elem(), GetWindowsFileSystemAuditLogConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWindowsFileSystemDiskIopsConfigurationInput)(nil)).Elem(), GetWindowsFileSystemDiskIopsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWindowsFileSystemDiskIopsConfigurationArrayInput)(nil)).Elem(), GetWindowsFileSystemDiskIopsConfigurationArray{})
	pulumi.RegisterOutputType(DataRepositoryAssociationS3Output{})
	pulumi.RegisterOutputType(DataRepositoryAssociationS3PtrOutput{})
	pulumi.RegisterOutputType(DataRepositoryAssociationS3AutoExportPolicyOutput{})
	pulumi.RegisterOutputType(DataRepositoryAssociationS3AutoExportPolicyPtrOutput{})
	pulumi.RegisterOutputType(DataRepositoryAssociationS3AutoImportPolicyOutput{})
	pulumi.RegisterOutputType(DataRepositoryAssociationS3AutoImportPolicyPtrOutput{})
	pulumi.RegisterOutputType(FileCacheDataRepositoryAssociationOutput{})
	pulumi.RegisterOutputType(FileCacheDataRepositoryAssociationArrayOutput{})
	pulumi.RegisterOutputType(FileCacheDataRepositoryAssociationNfOutput{})
	pulumi.RegisterOutputType(FileCacheDataRepositoryAssociationNfArrayOutput{})
	pulumi.RegisterOutputType(FileCacheLustreConfigurationOutput{})
	pulumi.RegisterOutputType(FileCacheLustreConfigurationArrayOutput{})
	pulumi.RegisterOutputType(FileCacheLustreConfigurationLogConfigurationOutput{})
	pulumi.RegisterOutputType(FileCacheLustreConfigurationLogConfigurationArrayOutput{})
	pulumi.RegisterOutputType(FileCacheLustreConfigurationMetadataConfigurationOutput{})
	pulumi.RegisterOutputType(FileCacheLustreConfigurationMetadataConfigurationArrayOutput{})
	pulumi.RegisterOutputType(LustreFileSystemLogConfigurationOutput{})
	pulumi.RegisterOutputType(LustreFileSystemLogConfigurationPtrOutput{})
	pulumi.RegisterOutputType(LustreFileSystemRootSquashConfigurationOutput{})
	pulumi.RegisterOutputType(LustreFileSystemRootSquashConfigurationPtrOutput{})
	pulumi.RegisterOutputType(OntapFileSystemDiskIopsConfigurationOutput{})
	pulumi.RegisterOutputType(OntapFileSystemDiskIopsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(OntapFileSystemEndpointOutput{})
	pulumi.RegisterOutputType(OntapFileSystemEndpointArrayOutput{})
	pulumi.RegisterOutputType(OntapFileSystemEndpointInterclusterOutput{})
	pulumi.RegisterOutputType(OntapFileSystemEndpointInterclusterArrayOutput{})
	pulumi.RegisterOutputType(OntapFileSystemEndpointManagementOutput{})
	pulumi.RegisterOutputType(OntapFileSystemEndpointManagementArrayOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineActiveDirectoryConfigurationOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationPtrOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineEndpointOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineEndpointArrayOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineEndpointIscsiOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineEndpointIscsiArrayOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineEndpointManagementOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineEndpointManagementArrayOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineEndpointNfOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineEndpointNfArrayOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineEndpointSmbOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineEndpointSmbArrayOutput{})
	pulumi.RegisterOutputType(OntapVolumeTieringPolicyOutput{})
	pulumi.RegisterOutputType(OntapVolumeTieringPolicyPtrOutput{})
	pulumi.RegisterOutputType(OpenZfsFileSystemDiskIopsConfigurationOutput{})
	pulumi.RegisterOutputType(OpenZfsFileSystemDiskIopsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(OpenZfsFileSystemRootVolumeConfigurationOutput{})
	pulumi.RegisterOutputType(OpenZfsFileSystemRootVolumeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(OpenZfsFileSystemRootVolumeConfigurationNfsExportsOutput{})
	pulumi.RegisterOutputType(OpenZfsFileSystemRootVolumeConfigurationNfsExportsPtrOutput{})
	pulumi.RegisterOutputType(OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationOutput{})
	pulumi.RegisterOutputType(OpenZfsFileSystemRootVolumeConfigurationNfsExportsClientConfigurationArrayOutput{})
	pulumi.RegisterOutputType(OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaOutput{})
	pulumi.RegisterOutputType(OpenZfsFileSystemRootVolumeConfigurationUserAndGroupQuotaArrayOutput{})
	pulumi.RegisterOutputType(OpenZfsVolumeNfsExportsOutput{})
	pulumi.RegisterOutputType(OpenZfsVolumeNfsExportsPtrOutput{})
	pulumi.RegisterOutputType(OpenZfsVolumeNfsExportsClientConfigurationOutput{})
	pulumi.RegisterOutputType(OpenZfsVolumeNfsExportsClientConfigurationArrayOutput{})
	pulumi.RegisterOutputType(OpenZfsVolumeOriginSnapshotOutput{})
	pulumi.RegisterOutputType(OpenZfsVolumeOriginSnapshotPtrOutput{})
	pulumi.RegisterOutputType(OpenZfsVolumeUserAndGroupQuotaOutput{})
	pulumi.RegisterOutputType(OpenZfsVolumeUserAndGroupQuotaArrayOutput{})
	pulumi.RegisterOutputType(WindowsFileSystemAuditLogConfigurationOutput{})
	pulumi.RegisterOutputType(WindowsFileSystemAuditLogConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WindowsFileSystemDiskIopsConfigurationOutput{})
	pulumi.RegisterOutputType(WindowsFileSystemDiskIopsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(WindowsFileSystemSelfManagedActiveDirectoryOutput{})
	pulumi.RegisterOutputType(WindowsFileSystemSelfManagedActiveDirectoryPtrOutput{})
	pulumi.RegisterOutputType(GetOntapFileSystemDiskIopsConfigurationOutput{})
	pulumi.RegisterOutputType(GetOntapFileSystemDiskIopsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetOntapFileSystemEndpointOutput{})
	pulumi.RegisterOutputType(GetOntapFileSystemEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetOntapFileSystemEndpointInterclusterOutput{})
	pulumi.RegisterOutputType(GetOntapFileSystemEndpointInterclusterArrayOutput{})
	pulumi.RegisterOutputType(GetOntapFileSystemEndpointManagementOutput{})
	pulumi.RegisterOutputType(GetOntapFileSystemEndpointManagementArrayOutput{})
	pulumi.RegisterOutputType(GetOntapStorageVirtualMachineActiveDirectoryConfigurationOutput{})
	pulumi.RegisterOutputType(GetOntapStorageVirtualMachineActiveDirectoryConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationOutput{})
	pulumi.RegisterOutputType(GetOntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetOntapStorageVirtualMachineEndpointOutput{})
	pulumi.RegisterOutputType(GetOntapStorageVirtualMachineEndpointArrayOutput{})
	pulumi.RegisterOutputType(GetOntapStorageVirtualMachineEndpointIscsiOutput{})
	pulumi.RegisterOutputType(GetOntapStorageVirtualMachineEndpointIscsiArrayOutput{})
	pulumi.RegisterOutputType(GetOntapStorageVirtualMachineEndpointManagementOutput{})
	pulumi.RegisterOutputType(GetOntapStorageVirtualMachineEndpointManagementArrayOutput{})
	pulumi.RegisterOutputType(GetOntapStorageVirtualMachineEndpointNfOutput{})
	pulumi.RegisterOutputType(GetOntapStorageVirtualMachineEndpointNfArrayOutput{})
	pulumi.RegisterOutputType(GetOntapStorageVirtualMachineEndpointSmbOutput{})
	pulumi.RegisterOutputType(GetOntapStorageVirtualMachineEndpointSmbArrayOutput{})
	pulumi.RegisterOutputType(GetOntapStorageVirtualMachineFilterOutput{})
	pulumi.RegisterOutputType(GetOntapStorageVirtualMachineFilterArrayOutput{})
	pulumi.RegisterOutputType(GetOntapStorageVirtualMachineLifecycleTransitionReasonOutput{})
	pulumi.RegisterOutputType(GetOntapStorageVirtualMachineLifecycleTransitionReasonArrayOutput{})
	pulumi.RegisterOutputType(GetOntapStorageVirtualMachinesFilterOutput{})
	pulumi.RegisterOutputType(GetOntapStorageVirtualMachinesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetOpenZfsSnapshotFilterOutput{})
	pulumi.RegisterOutputType(GetOpenZfsSnapshotFilterArrayOutput{})
	pulumi.RegisterOutputType(GetWindowsFileSystemAuditLogConfigurationOutput{})
	pulumi.RegisterOutputType(GetWindowsFileSystemAuditLogConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetWindowsFileSystemDiskIopsConfigurationOutput{})
	pulumi.RegisterOutputType(GetWindowsFileSystemDiskIopsConfigurationArrayOutput{})
}
