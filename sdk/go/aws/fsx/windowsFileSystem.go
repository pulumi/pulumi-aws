// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fsx

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type WindowsFileSystem struct {
	pulumi.CustomResourceState

	ActiveDirectoryId             pulumi.StringPtrOutput                               `pulumi:"activeDirectoryId"`
	Aliases                       pulumi.StringArrayOutput                             `pulumi:"aliases"`
	Arn                           pulumi.StringOutput                                  `pulumi:"arn"`
	AuditLogConfiguration         WindowsFileSystemAuditLogConfigurationOutput         `pulumi:"auditLogConfiguration"`
	AutomaticBackupRetentionDays  pulumi.IntPtrOutput                                  `pulumi:"automaticBackupRetentionDays"`
	BackupId                      pulumi.StringPtrOutput                               `pulumi:"backupId"`
	CopyTagsToBackups             pulumi.BoolPtrOutput                                 `pulumi:"copyTagsToBackups"`
	DailyAutomaticBackupStartTime pulumi.StringOutput                                  `pulumi:"dailyAutomaticBackupStartTime"`
	DeploymentType                pulumi.StringPtrOutput                               `pulumi:"deploymentType"`
	DnsName                       pulumi.StringOutput                                  `pulumi:"dnsName"`
	KmsKeyId                      pulumi.StringOutput                                  `pulumi:"kmsKeyId"`
	NetworkInterfaceIds           pulumi.StringArrayOutput                             `pulumi:"networkInterfaceIds"`
	OwnerId                       pulumi.StringOutput                                  `pulumi:"ownerId"`
	PreferredFileServerIp         pulumi.StringOutput                                  `pulumi:"preferredFileServerIp"`
	PreferredSubnetId             pulumi.StringOutput                                  `pulumi:"preferredSubnetId"`
	RemoteAdministrationEndpoint  pulumi.StringOutput                                  `pulumi:"remoteAdministrationEndpoint"`
	SecurityGroupIds              pulumi.StringArrayOutput                             `pulumi:"securityGroupIds"`
	SelfManagedActiveDirectory    WindowsFileSystemSelfManagedActiveDirectoryPtrOutput `pulumi:"selfManagedActiveDirectory"`
	SkipFinalBackup               pulumi.BoolPtrOutput                                 `pulumi:"skipFinalBackup"`
	StorageCapacity               pulumi.IntOutput                                     `pulumi:"storageCapacity"`
	StorageType                   pulumi.StringPtrOutput                               `pulumi:"storageType"`
	SubnetIds                     pulumi.StringArrayOutput                             `pulumi:"subnetIds"`
	Tags                          pulumi.StringMapOutput                               `pulumi:"tags"`
	TagsAll                       pulumi.StringMapOutput                               `pulumi:"tagsAll"`
	ThroughputCapacity            pulumi.IntOutput                                     `pulumi:"throughputCapacity"`
	VpcId                         pulumi.StringOutput                                  `pulumi:"vpcId"`
	WeeklyMaintenanceStartTime    pulumi.StringOutput                                  `pulumi:"weeklyMaintenanceStartTime"`
}

// NewWindowsFileSystem registers a new resource with the given unique name, arguments, and options.
func NewWindowsFileSystem(ctx *pulumi.Context,
	name string, args *WindowsFileSystemArgs, opts ...pulumi.ResourceOption) (*WindowsFileSystem, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SubnetIds == nil {
		return nil, errors.New("invalid value for required argument 'SubnetIds'")
	}
	if args.ThroughputCapacity == nil {
		return nil, errors.New("invalid value for required argument 'ThroughputCapacity'")
	}
	var resource WindowsFileSystem
	err := ctx.RegisterResource("aws:fsx/windowsFileSystem:WindowsFileSystem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWindowsFileSystem gets an existing WindowsFileSystem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWindowsFileSystem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WindowsFileSystemState, opts ...pulumi.ResourceOption) (*WindowsFileSystem, error) {
	var resource WindowsFileSystem
	err := ctx.ReadResource("aws:fsx/windowsFileSystem:WindowsFileSystem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WindowsFileSystem resources.
type windowsFileSystemState struct {
	ActiveDirectoryId             *string                                      `pulumi:"activeDirectoryId"`
	Aliases                       []string                                     `pulumi:"aliases"`
	Arn                           *string                                      `pulumi:"arn"`
	AuditLogConfiguration         *WindowsFileSystemAuditLogConfiguration      `pulumi:"auditLogConfiguration"`
	AutomaticBackupRetentionDays  *int                                         `pulumi:"automaticBackupRetentionDays"`
	BackupId                      *string                                      `pulumi:"backupId"`
	CopyTagsToBackups             *bool                                        `pulumi:"copyTagsToBackups"`
	DailyAutomaticBackupStartTime *string                                      `pulumi:"dailyAutomaticBackupStartTime"`
	DeploymentType                *string                                      `pulumi:"deploymentType"`
	DnsName                       *string                                      `pulumi:"dnsName"`
	KmsKeyId                      *string                                      `pulumi:"kmsKeyId"`
	NetworkInterfaceIds           []string                                     `pulumi:"networkInterfaceIds"`
	OwnerId                       *string                                      `pulumi:"ownerId"`
	PreferredFileServerIp         *string                                      `pulumi:"preferredFileServerIp"`
	PreferredSubnetId             *string                                      `pulumi:"preferredSubnetId"`
	RemoteAdministrationEndpoint  *string                                      `pulumi:"remoteAdministrationEndpoint"`
	SecurityGroupIds              []string                                     `pulumi:"securityGroupIds"`
	SelfManagedActiveDirectory    *WindowsFileSystemSelfManagedActiveDirectory `pulumi:"selfManagedActiveDirectory"`
	SkipFinalBackup               *bool                                        `pulumi:"skipFinalBackup"`
	StorageCapacity               *int                                         `pulumi:"storageCapacity"`
	StorageType                   *string                                      `pulumi:"storageType"`
	SubnetIds                     []string                                     `pulumi:"subnetIds"`
	Tags                          map[string]string                            `pulumi:"tags"`
	TagsAll                       map[string]string                            `pulumi:"tagsAll"`
	ThroughputCapacity            *int                                         `pulumi:"throughputCapacity"`
	VpcId                         *string                                      `pulumi:"vpcId"`
	WeeklyMaintenanceStartTime    *string                                      `pulumi:"weeklyMaintenanceStartTime"`
}

type WindowsFileSystemState struct {
	ActiveDirectoryId             pulumi.StringPtrInput
	Aliases                       pulumi.StringArrayInput
	Arn                           pulumi.StringPtrInput
	AuditLogConfiguration         WindowsFileSystemAuditLogConfigurationPtrInput
	AutomaticBackupRetentionDays  pulumi.IntPtrInput
	BackupId                      pulumi.StringPtrInput
	CopyTagsToBackups             pulumi.BoolPtrInput
	DailyAutomaticBackupStartTime pulumi.StringPtrInput
	DeploymentType                pulumi.StringPtrInput
	DnsName                       pulumi.StringPtrInput
	KmsKeyId                      pulumi.StringPtrInput
	NetworkInterfaceIds           pulumi.StringArrayInput
	OwnerId                       pulumi.StringPtrInput
	PreferredFileServerIp         pulumi.StringPtrInput
	PreferredSubnetId             pulumi.StringPtrInput
	RemoteAdministrationEndpoint  pulumi.StringPtrInput
	SecurityGroupIds              pulumi.StringArrayInput
	SelfManagedActiveDirectory    WindowsFileSystemSelfManagedActiveDirectoryPtrInput
	SkipFinalBackup               pulumi.BoolPtrInput
	StorageCapacity               pulumi.IntPtrInput
	StorageType                   pulumi.StringPtrInput
	SubnetIds                     pulumi.StringArrayInput
	Tags                          pulumi.StringMapInput
	TagsAll                       pulumi.StringMapInput
	ThroughputCapacity            pulumi.IntPtrInput
	VpcId                         pulumi.StringPtrInput
	WeeklyMaintenanceStartTime    pulumi.StringPtrInput
}

func (WindowsFileSystemState) ElementType() reflect.Type {
	return reflect.TypeOf((*windowsFileSystemState)(nil)).Elem()
}

type windowsFileSystemArgs struct {
	ActiveDirectoryId             *string                                      `pulumi:"activeDirectoryId"`
	Aliases                       []string                                     `pulumi:"aliases"`
	AuditLogConfiguration         *WindowsFileSystemAuditLogConfiguration      `pulumi:"auditLogConfiguration"`
	AutomaticBackupRetentionDays  *int                                         `pulumi:"automaticBackupRetentionDays"`
	BackupId                      *string                                      `pulumi:"backupId"`
	CopyTagsToBackups             *bool                                        `pulumi:"copyTagsToBackups"`
	DailyAutomaticBackupStartTime *string                                      `pulumi:"dailyAutomaticBackupStartTime"`
	DeploymentType                *string                                      `pulumi:"deploymentType"`
	KmsKeyId                      *string                                      `pulumi:"kmsKeyId"`
	PreferredSubnetId             *string                                      `pulumi:"preferredSubnetId"`
	SecurityGroupIds              []string                                     `pulumi:"securityGroupIds"`
	SelfManagedActiveDirectory    *WindowsFileSystemSelfManagedActiveDirectory `pulumi:"selfManagedActiveDirectory"`
	SkipFinalBackup               *bool                                        `pulumi:"skipFinalBackup"`
	StorageCapacity               *int                                         `pulumi:"storageCapacity"`
	StorageType                   *string                                      `pulumi:"storageType"`
	SubnetIds                     []string                                     `pulumi:"subnetIds"`
	Tags                          map[string]string                            `pulumi:"tags"`
	ThroughputCapacity            int                                          `pulumi:"throughputCapacity"`
	WeeklyMaintenanceStartTime    *string                                      `pulumi:"weeklyMaintenanceStartTime"`
}

// The set of arguments for constructing a WindowsFileSystem resource.
type WindowsFileSystemArgs struct {
	ActiveDirectoryId             pulumi.StringPtrInput
	Aliases                       pulumi.StringArrayInput
	AuditLogConfiguration         WindowsFileSystemAuditLogConfigurationPtrInput
	AutomaticBackupRetentionDays  pulumi.IntPtrInput
	BackupId                      pulumi.StringPtrInput
	CopyTagsToBackups             pulumi.BoolPtrInput
	DailyAutomaticBackupStartTime pulumi.StringPtrInput
	DeploymentType                pulumi.StringPtrInput
	KmsKeyId                      pulumi.StringPtrInput
	PreferredSubnetId             pulumi.StringPtrInput
	SecurityGroupIds              pulumi.StringArrayInput
	SelfManagedActiveDirectory    WindowsFileSystemSelfManagedActiveDirectoryPtrInput
	SkipFinalBackup               pulumi.BoolPtrInput
	StorageCapacity               pulumi.IntPtrInput
	StorageType                   pulumi.StringPtrInput
	SubnetIds                     pulumi.StringArrayInput
	Tags                          pulumi.StringMapInput
	ThroughputCapacity            pulumi.IntInput
	WeeklyMaintenanceStartTime    pulumi.StringPtrInput
}

func (WindowsFileSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*windowsFileSystemArgs)(nil)).Elem()
}

type WindowsFileSystemInput interface {
	pulumi.Input

	ToWindowsFileSystemOutput() WindowsFileSystemOutput
	ToWindowsFileSystemOutputWithContext(ctx context.Context) WindowsFileSystemOutput
}

func (*WindowsFileSystem) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsFileSystem)(nil)).Elem()
}

func (i *WindowsFileSystem) ToWindowsFileSystemOutput() WindowsFileSystemOutput {
	return i.ToWindowsFileSystemOutputWithContext(context.Background())
}

func (i *WindowsFileSystem) ToWindowsFileSystemOutputWithContext(ctx context.Context) WindowsFileSystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsFileSystemOutput)
}

// WindowsFileSystemArrayInput is an input type that accepts WindowsFileSystemArray and WindowsFileSystemArrayOutput values.
// You can construct a concrete instance of `WindowsFileSystemArrayInput` via:
//
//	WindowsFileSystemArray{ WindowsFileSystemArgs{...} }
type WindowsFileSystemArrayInput interface {
	pulumi.Input

	ToWindowsFileSystemArrayOutput() WindowsFileSystemArrayOutput
	ToWindowsFileSystemArrayOutputWithContext(context.Context) WindowsFileSystemArrayOutput
}

type WindowsFileSystemArray []WindowsFileSystemInput

func (WindowsFileSystemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WindowsFileSystem)(nil)).Elem()
}

func (i WindowsFileSystemArray) ToWindowsFileSystemArrayOutput() WindowsFileSystemArrayOutput {
	return i.ToWindowsFileSystemArrayOutputWithContext(context.Background())
}

func (i WindowsFileSystemArray) ToWindowsFileSystemArrayOutputWithContext(ctx context.Context) WindowsFileSystemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsFileSystemArrayOutput)
}

// WindowsFileSystemMapInput is an input type that accepts WindowsFileSystemMap and WindowsFileSystemMapOutput values.
// You can construct a concrete instance of `WindowsFileSystemMapInput` via:
//
//	WindowsFileSystemMap{ "key": WindowsFileSystemArgs{...} }
type WindowsFileSystemMapInput interface {
	pulumi.Input

	ToWindowsFileSystemMapOutput() WindowsFileSystemMapOutput
	ToWindowsFileSystemMapOutputWithContext(context.Context) WindowsFileSystemMapOutput
}

type WindowsFileSystemMap map[string]WindowsFileSystemInput

func (WindowsFileSystemMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WindowsFileSystem)(nil)).Elem()
}

func (i WindowsFileSystemMap) ToWindowsFileSystemMapOutput() WindowsFileSystemMapOutput {
	return i.ToWindowsFileSystemMapOutputWithContext(context.Background())
}

func (i WindowsFileSystemMap) ToWindowsFileSystemMapOutputWithContext(ctx context.Context) WindowsFileSystemMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WindowsFileSystemMapOutput)
}

type WindowsFileSystemOutput struct{ *pulumi.OutputState }

func (WindowsFileSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WindowsFileSystem)(nil)).Elem()
}

func (o WindowsFileSystemOutput) ToWindowsFileSystemOutput() WindowsFileSystemOutput {
	return o
}

func (o WindowsFileSystemOutput) ToWindowsFileSystemOutputWithContext(ctx context.Context) WindowsFileSystemOutput {
	return o
}

func (o WindowsFileSystemOutput) ActiveDirectoryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFileSystem) pulumi.StringPtrOutput { return v.ActiveDirectoryId }).(pulumi.StringPtrOutput)
}

func (o WindowsFileSystemOutput) Aliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WindowsFileSystem) pulumi.StringArrayOutput { return v.Aliases }).(pulumi.StringArrayOutput)
}

func (o WindowsFileSystemOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *WindowsFileSystem) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o WindowsFileSystemOutput) AuditLogConfiguration() WindowsFileSystemAuditLogConfigurationOutput {
	return o.ApplyT(func(v *WindowsFileSystem) WindowsFileSystemAuditLogConfigurationOutput {
		return v.AuditLogConfiguration
	}).(WindowsFileSystemAuditLogConfigurationOutput)
}

func (o WindowsFileSystemOutput) AutomaticBackupRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WindowsFileSystem) pulumi.IntPtrOutput { return v.AutomaticBackupRetentionDays }).(pulumi.IntPtrOutput)
}

func (o WindowsFileSystemOutput) BackupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFileSystem) pulumi.StringPtrOutput { return v.BackupId }).(pulumi.StringPtrOutput)
}

func (o WindowsFileSystemOutput) CopyTagsToBackups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsFileSystem) pulumi.BoolPtrOutput { return v.CopyTagsToBackups }).(pulumi.BoolPtrOutput)
}

func (o WindowsFileSystemOutput) DailyAutomaticBackupStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v *WindowsFileSystem) pulumi.StringOutput { return v.DailyAutomaticBackupStartTime }).(pulumi.StringOutput)
}

func (o WindowsFileSystemOutput) DeploymentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFileSystem) pulumi.StringPtrOutput { return v.DeploymentType }).(pulumi.StringPtrOutput)
}

func (o WindowsFileSystemOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v *WindowsFileSystem) pulumi.StringOutput { return v.DnsName }).(pulumi.StringOutput)
}

func (o WindowsFileSystemOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *WindowsFileSystem) pulumi.StringOutput { return v.KmsKeyId }).(pulumi.StringOutput)
}

func (o WindowsFileSystemOutput) NetworkInterfaceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WindowsFileSystem) pulumi.StringArrayOutput { return v.NetworkInterfaceIds }).(pulumi.StringArrayOutput)
}

func (o WindowsFileSystemOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *WindowsFileSystem) pulumi.StringOutput { return v.OwnerId }).(pulumi.StringOutput)
}

func (o WindowsFileSystemOutput) PreferredFileServerIp() pulumi.StringOutput {
	return o.ApplyT(func(v *WindowsFileSystem) pulumi.StringOutput { return v.PreferredFileServerIp }).(pulumi.StringOutput)
}

func (o WindowsFileSystemOutput) PreferredSubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *WindowsFileSystem) pulumi.StringOutput { return v.PreferredSubnetId }).(pulumi.StringOutput)
}

func (o WindowsFileSystemOutput) RemoteAdministrationEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *WindowsFileSystem) pulumi.StringOutput { return v.RemoteAdministrationEndpoint }).(pulumi.StringOutput)
}

func (o WindowsFileSystemOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WindowsFileSystem) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o WindowsFileSystemOutput) SelfManagedActiveDirectory() WindowsFileSystemSelfManagedActiveDirectoryPtrOutput {
	return o.ApplyT(func(v *WindowsFileSystem) WindowsFileSystemSelfManagedActiveDirectoryPtrOutput {
		return v.SelfManagedActiveDirectory
	}).(WindowsFileSystemSelfManagedActiveDirectoryPtrOutput)
}

func (o WindowsFileSystemOutput) SkipFinalBackup() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WindowsFileSystem) pulumi.BoolPtrOutput { return v.SkipFinalBackup }).(pulumi.BoolPtrOutput)
}

func (o WindowsFileSystemOutput) StorageCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v *WindowsFileSystem) pulumi.IntOutput { return v.StorageCapacity }).(pulumi.IntOutput)
}

func (o WindowsFileSystemOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WindowsFileSystem) pulumi.StringPtrOutput { return v.StorageType }).(pulumi.StringPtrOutput)
}

func (o WindowsFileSystemOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *WindowsFileSystem) pulumi.StringArrayOutput { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

func (o WindowsFileSystemOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WindowsFileSystem) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o WindowsFileSystemOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *WindowsFileSystem) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o WindowsFileSystemOutput) ThroughputCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v *WindowsFileSystem) pulumi.IntOutput { return v.ThroughputCapacity }).(pulumi.IntOutput)
}

func (o WindowsFileSystemOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *WindowsFileSystem) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

func (o WindowsFileSystemOutput) WeeklyMaintenanceStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v *WindowsFileSystem) pulumi.StringOutput { return v.WeeklyMaintenanceStartTime }).(pulumi.StringOutput)
}

type WindowsFileSystemArrayOutput struct{ *pulumi.OutputState }

func (WindowsFileSystemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WindowsFileSystem)(nil)).Elem()
}

func (o WindowsFileSystemArrayOutput) ToWindowsFileSystemArrayOutput() WindowsFileSystemArrayOutput {
	return o
}

func (o WindowsFileSystemArrayOutput) ToWindowsFileSystemArrayOutputWithContext(ctx context.Context) WindowsFileSystemArrayOutput {
	return o
}

func (o WindowsFileSystemArrayOutput) Index(i pulumi.IntInput) WindowsFileSystemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WindowsFileSystem {
		return vs[0].([]*WindowsFileSystem)[vs[1].(int)]
	}).(WindowsFileSystemOutput)
}

type WindowsFileSystemMapOutput struct{ *pulumi.OutputState }

func (WindowsFileSystemMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WindowsFileSystem)(nil)).Elem()
}

func (o WindowsFileSystemMapOutput) ToWindowsFileSystemMapOutput() WindowsFileSystemMapOutput {
	return o
}

func (o WindowsFileSystemMapOutput) ToWindowsFileSystemMapOutputWithContext(ctx context.Context) WindowsFileSystemMapOutput {
	return o
}

func (o WindowsFileSystemMapOutput) MapIndex(k pulumi.StringInput) WindowsFileSystemOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WindowsFileSystem {
		return vs[0].(map[string]*WindowsFileSystem)[vs[1].(string)]
	}).(WindowsFileSystemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WindowsFileSystemInput)(nil)).Elem(), &WindowsFileSystem{})
	pulumi.RegisterInputType(reflect.TypeOf((*WindowsFileSystemArrayInput)(nil)).Elem(), WindowsFileSystemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WindowsFileSystemMapInput)(nil)).Elem(), WindowsFileSystemMap{})
	pulumi.RegisterOutputType(WindowsFileSystemOutput{})
	pulumi.RegisterOutputType(WindowsFileSystemArrayOutput{})
	pulumi.RegisterOutputType(WindowsFileSystemMapOutput{})
}
