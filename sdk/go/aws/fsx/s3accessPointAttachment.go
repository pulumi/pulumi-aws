// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fsx

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Amazon FSx S3 Access Point attachment.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v7/go/aws/fsx"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fsx.NewS3AccessPointAttachment(ctx, "example", &fsx.S3AccessPointAttachmentArgs{
//				Name: pulumi.String("example-attachment"),
//				Type: pulumi.String("OPENZFS"),
//				OpenzfsConfiguration: &fsx.S3AccessPointAttachmentOpenzfsConfigurationArgs{
//					VolumeId: pulumi.Any(exampleAwsFsxOpenzfsVolume.Id),
//					FileSystemIdentity: &fsx.S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentityArgs{
//						Type: pulumi.String("POSIX"),
//						PosixUser: &fsx.S3AccessPointAttachmentOpenzfsConfigurationFileSystemIdentityPosixUserArgs{
//							Uid: pulumi.Int(1001),
//							Gid: pulumi.Int(1001),
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import FSx S3 Access Point attachments using the `name`. For example:
//
// ```sh
// $ pulumi import aws:fsx/s3AccessPointAttachment:S3AccessPointAttachment example example-attachment
// ```
type S3AccessPointAttachment struct {
	pulumi.CustomResourceState

	// Name of the S3 access point.
	Name pulumi.StringOutput `pulumi:"name"`
	// Configuration to use when creating and attaching an S3 access point to an FSx for OpenZFS volume. See `openzfsConfiguration` Block for details.
	OpenzfsConfiguration S3AccessPointAttachmentOpenzfsConfigurationPtrOutput `pulumi:"openzfsConfiguration"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringOutput `pulumi:"region"`
	// S3 access point configuration. See `s3AccessPoint` Block for details.
	S3AccessPoint S3AccessPointAttachmentS3AccessPointPtrOutput `pulumi:"s3AccessPoint"`
	// S3 access point's alias.
	S3AccessPointAlias pulumi.StringOutput `pulumi:"s3AccessPointAlias"`
	// S3 access point's ARN.
	S3AccessPointArn pulumi.StringOutput                      `pulumi:"s3AccessPointArn"`
	Timeouts         S3AccessPointAttachmentTimeoutsPtrOutput `pulumi:"timeouts"`
	// Type of S3 access point. Valid values: `OpenZFS`.
	//
	// The following arguments are optional:
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewS3AccessPointAttachment registers a new resource with the given unique name, arguments, and options.
func NewS3AccessPointAttachment(ctx *pulumi.Context,
	name string, args *S3AccessPointAttachmentArgs, opts ...pulumi.ResourceOption) (*S3AccessPointAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource S3AccessPointAttachment
	err := ctx.RegisterResource("aws:fsx/s3AccessPointAttachment:S3AccessPointAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetS3AccessPointAttachment gets an existing S3AccessPointAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetS3AccessPointAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *S3AccessPointAttachmentState, opts ...pulumi.ResourceOption) (*S3AccessPointAttachment, error) {
	var resource S3AccessPointAttachment
	err := ctx.ReadResource("aws:fsx/s3AccessPointAttachment:S3AccessPointAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering S3AccessPointAttachment resources.
type s3accessPointAttachmentState struct {
	// Name of the S3 access point.
	Name *string `pulumi:"name"`
	// Configuration to use when creating and attaching an S3 access point to an FSx for OpenZFS volume. See `openzfsConfiguration` Block for details.
	OpenzfsConfiguration *S3AccessPointAttachmentOpenzfsConfiguration `pulumi:"openzfsConfiguration"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// S3 access point configuration. See `s3AccessPoint` Block for details.
	S3AccessPoint *S3AccessPointAttachmentS3AccessPoint `pulumi:"s3AccessPoint"`
	// S3 access point's alias.
	S3AccessPointAlias *string `pulumi:"s3AccessPointAlias"`
	// S3 access point's ARN.
	S3AccessPointArn *string                          `pulumi:"s3AccessPointArn"`
	Timeouts         *S3AccessPointAttachmentTimeouts `pulumi:"timeouts"`
	// Type of S3 access point. Valid values: `OpenZFS`.
	//
	// The following arguments are optional:
	Type *string `pulumi:"type"`
}

type S3AccessPointAttachmentState struct {
	// Name of the S3 access point.
	Name pulumi.StringPtrInput
	// Configuration to use when creating and attaching an S3 access point to an FSx for OpenZFS volume. See `openzfsConfiguration` Block for details.
	OpenzfsConfiguration S3AccessPointAttachmentOpenzfsConfigurationPtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// S3 access point configuration. See `s3AccessPoint` Block for details.
	S3AccessPoint S3AccessPointAttachmentS3AccessPointPtrInput
	// S3 access point's alias.
	S3AccessPointAlias pulumi.StringPtrInput
	// S3 access point's ARN.
	S3AccessPointArn pulumi.StringPtrInput
	Timeouts         S3AccessPointAttachmentTimeoutsPtrInput
	// Type of S3 access point. Valid values: `OpenZFS`.
	//
	// The following arguments are optional:
	Type pulumi.StringPtrInput
}

func (S3AccessPointAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*s3accessPointAttachmentState)(nil)).Elem()
}

type s3accessPointAttachmentArgs struct {
	// Name of the S3 access point.
	Name *string `pulumi:"name"`
	// Configuration to use when creating and attaching an S3 access point to an FSx for OpenZFS volume. See `openzfsConfiguration` Block for details.
	OpenzfsConfiguration *S3AccessPointAttachmentOpenzfsConfiguration `pulumi:"openzfsConfiguration"`
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region *string `pulumi:"region"`
	// S3 access point configuration. See `s3AccessPoint` Block for details.
	S3AccessPoint *S3AccessPointAttachmentS3AccessPoint `pulumi:"s3AccessPoint"`
	Timeouts      *S3AccessPointAttachmentTimeouts      `pulumi:"timeouts"`
	// Type of S3 access point. Valid values: `OpenZFS`.
	//
	// The following arguments are optional:
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a S3AccessPointAttachment resource.
type S3AccessPointAttachmentArgs struct {
	// Name of the S3 access point.
	Name pulumi.StringPtrInput
	// Configuration to use when creating and attaching an S3 access point to an FSx for OpenZFS volume. See `openzfsConfiguration` Block for details.
	OpenzfsConfiguration S3AccessPointAttachmentOpenzfsConfigurationPtrInput
	// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
	Region pulumi.StringPtrInput
	// S3 access point configuration. See `s3AccessPoint` Block for details.
	S3AccessPoint S3AccessPointAttachmentS3AccessPointPtrInput
	Timeouts      S3AccessPointAttachmentTimeoutsPtrInput
	// Type of S3 access point. Valid values: `OpenZFS`.
	//
	// The following arguments are optional:
	Type pulumi.StringInput
}

func (S3AccessPointAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*s3accessPointAttachmentArgs)(nil)).Elem()
}

type S3AccessPointAttachmentInput interface {
	pulumi.Input

	ToS3AccessPointAttachmentOutput() S3AccessPointAttachmentOutput
	ToS3AccessPointAttachmentOutputWithContext(ctx context.Context) S3AccessPointAttachmentOutput
}

func (*S3AccessPointAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**S3AccessPointAttachment)(nil)).Elem()
}

func (i *S3AccessPointAttachment) ToS3AccessPointAttachmentOutput() S3AccessPointAttachmentOutput {
	return i.ToS3AccessPointAttachmentOutputWithContext(context.Background())
}

func (i *S3AccessPointAttachment) ToS3AccessPointAttachmentOutputWithContext(ctx context.Context) S3AccessPointAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AccessPointAttachmentOutput)
}

// S3AccessPointAttachmentArrayInput is an input type that accepts S3AccessPointAttachmentArray and S3AccessPointAttachmentArrayOutput values.
// You can construct a concrete instance of `S3AccessPointAttachmentArrayInput` via:
//
//	S3AccessPointAttachmentArray{ S3AccessPointAttachmentArgs{...} }
type S3AccessPointAttachmentArrayInput interface {
	pulumi.Input

	ToS3AccessPointAttachmentArrayOutput() S3AccessPointAttachmentArrayOutput
	ToS3AccessPointAttachmentArrayOutputWithContext(context.Context) S3AccessPointAttachmentArrayOutput
}

type S3AccessPointAttachmentArray []S3AccessPointAttachmentInput

func (S3AccessPointAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*S3AccessPointAttachment)(nil)).Elem()
}

func (i S3AccessPointAttachmentArray) ToS3AccessPointAttachmentArrayOutput() S3AccessPointAttachmentArrayOutput {
	return i.ToS3AccessPointAttachmentArrayOutputWithContext(context.Background())
}

func (i S3AccessPointAttachmentArray) ToS3AccessPointAttachmentArrayOutputWithContext(ctx context.Context) S3AccessPointAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AccessPointAttachmentArrayOutput)
}

// S3AccessPointAttachmentMapInput is an input type that accepts S3AccessPointAttachmentMap and S3AccessPointAttachmentMapOutput values.
// You can construct a concrete instance of `S3AccessPointAttachmentMapInput` via:
//
//	S3AccessPointAttachmentMap{ "key": S3AccessPointAttachmentArgs{...} }
type S3AccessPointAttachmentMapInput interface {
	pulumi.Input

	ToS3AccessPointAttachmentMapOutput() S3AccessPointAttachmentMapOutput
	ToS3AccessPointAttachmentMapOutputWithContext(context.Context) S3AccessPointAttachmentMapOutput
}

type S3AccessPointAttachmentMap map[string]S3AccessPointAttachmentInput

func (S3AccessPointAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*S3AccessPointAttachment)(nil)).Elem()
}

func (i S3AccessPointAttachmentMap) ToS3AccessPointAttachmentMapOutput() S3AccessPointAttachmentMapOutput {
	return i.ToS3AccessPointAttachmentMapOutputWithContext(context.Background())
}

func (i S3AccessPointAttachmentMap) ToS3AccessPointAttachmentMapOutputWithContext(ctx context.Context) S3AccessPointAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(S3AccessPointAttachmentMapOutput)
}

type S3AccessPointAttachmentOutput struct{ *pulumi.OutputState }

func (S3AccessPointAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**S3AccessPointAttachment)(nil)).Elem()
}

func (o S3AccessPointAttachmentOutput) ToS3AccessPointAttachmentOutput() S3AccessPointAttachmentOutput {
	return o
}

func (o S3AccessPointAttachmentOutput) ToS3AccessPointAttachmentOutputWithContext(ctx context.Context) S3AccessPointAttachmentOutput {
	return o
}

// Name of the S3 access point.
func (o S3AccessPointAttachmentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *S3AccessPointAttachment) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Configuration to use when creating and attaching an S3 access point to an FSx for OpenZFS volume. See `openzfsConfiguration` Block for details.
func (o S3AccessPointAttachmentOutput) OpenzfsConfiguration() S3AccessPointAttachmentOpenzfsConfigurationPtrOutput {
	return o.ApplyT(func(v *S3AccessPointAttachment) S3AccessPointAttachmentOpenzfsConfigurationPtrOutput {
		return v.OpenzfsConfiguration
	}).(S3AccessPointAttachmentOpenzfsConfigurationPtrOutput)
}

// Region where this resource will be [managed](https://docs.aws.amazon.com/general/latest/gr/rande.html#regional-endpoints). Defaults to the Region set in the provider configuration.
func (o S3AccessPointAttachmentOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *S3AccessPointAttachment) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// S3 access point configuration. See `s3AccessPoint` Block for details.
func (o S3AccessPointAttachmentOutput) S3AccessPoint() S3AccessPointAttachmentS3AccessPointPtrOutput {
	return o.ApplyT(func(v *S3AccessPointAttachment) S3AccessPointAttachmentS3AccessPointPtrOutput { return v.S3AccessPoint }).(S3AccessPointAttachmentS3AccessPointPtrOutput)
}

// S3 access point's alias.
func (o S3AccessPointAttachmentOutput) S3AccessPointAlias() pulumi.StringOutput {
	return o.ApplyT(func(v *S3AccessPointAttachment) pulumi.StringOutput { return v.S3AccessPointAlias }).(pulumi.StringOutput)
}

// S3 access point's ARN.
func (o S3AccessPointAttachmentOutput) S3AccessPointArn() pulumi.StringOutput {
	return o.ApplyT(func(v *S3AccessPointAttachment) pulumi.StringOutput { return v.S3AccessPointArn }).(pulumi.StringOutput)
}

func (o S3AccessPointAttachmentOutput) Timeouts() S3AccessPointAttachmentTimeoutsPtrOutput {
	return o.ApplyT(func(v *S3AccessPointAttachment) S3AccessPointAttachmentTimeoutsPtrOutput { return v.Timeouts }).(S3AccessPointAttachmentTimeoutsPtrOutput)
}

// Type of S3 access point. Valid values: `OpenZFS`.
//
// The following arguments are optional:
func (o S3AccessPointAttachmentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *S3AccessPointAttachment) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type S3AccessPointAttachmentArrayOutput struct{ *pulumi.OutputState }

func (S3AccessPointAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*S3AccessPointAttachment)(nil)).Elem()
}

func (o S3AccessPointAttachmentArrayOutput) ToS3AccessPointAttachmentArrayOutput() S3AccessPointAttachmentArrayOutput {
	return o
}

func (o S3AccessPointAttachmentArrayOutput) ToS3AccessPointAttachmentArrayOutputWithContext(ctx context.Context) S3AccessPointAttachmentArrayOutput {
	return o
}

func (o S3AccessPointAttachmentArrayOutput) Index(i pulumi.IntInput) S3AccessPointAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *S3AccessPointAttachment {
		return vs[0].([]*S3AccessPointAttachment)[vs[1].(int)]
	}).(S3AccessPointAttachmentOutput)
}

type S3AccessPointAttachmentMapOutput struct{ *pulumi.OutputState }

func (S3AccessPointAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*S3AccessPointAttachment)(nil)).Elem()
}

func (o S3AccessPointAttachmentMapOutput) ToS3AccessPointAttachmentMapOutput() S3AccessPointAttachmentMapOutput {
	return o
}

func (o S3AccessPointAttachmentMapOutput) ToS3AccessPointAttachmentMapOutputWithContext(ctx context.Context) S3AccessPointAttachmentMapOutput {
	return o
}

func (o S3AccessPointAttachmentMapOutput) MapIndex(k pulumi.StringInput) S3AccessPointAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *S3AccessPointAttachment {
		return vs[0].(map[string]*S3AccessPointAttachment)[vs[1].(string)]
	}).(S3AccessPointAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*S3AccessPointAttachmentInput)(nil)).Elem(), &S3AccessPointAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AccessPointAttachmentArrayInput)(nil)).Elem(), S3AccessPointAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*S3AccessPointAttachmentMapInput)(nil)).Elem(), S3AccessPointAttachmentMap{})
	pulumi.RegisterOutputType(S3AccessPointAttachmentOutput{})
	pulumi.RegisterOutputType(S3AccessPointAttachmentArrayOutput{})
	pulumi.RegisterOutputType(S3AccessPointAttachmentMapOutput{})
}
