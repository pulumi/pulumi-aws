// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fsx

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type OpenZfsFileSystem struct {
	pulumi.CustomResourceState

	Arn                           pulumi.StringOutput                            `pulumi:"arn"`
	AutomaticBackupRetentionDays  pulumi.IntPtrOutput                            `pulumi:"automaticBackupRetentionDays"`
	BackupId                      pulumi.StringPtrOutput                         `pulumi:"backupId"`
	CopyTagsToBackups             pulumi.BoolPtrOutput                           `pulumi:"copyTagsToBackups"`
	CopyTagsToVolumes             pulumi.BoolPtrOutput                           `pulumi:"copyTagsToVolumes"`
	DailyAutomaticBackupStartTime pulumi.StringOutput                            `pulumi:"dailyAutomaticBackupStartTime"`
	DeploymentType                pulumi.StringOutput                            `pulumi:"deploymentType"`
	DiskIopsConfiguration         OpenZfsFileSystemDiskIopsConfigurationOutput   `pulumi:"diskIopsConfiguration"`
	DnsName                       pulumi.StringOutput                            `pulumi:"dnsName"`
	KmsKeyId                      pulumi.StringOutput                            `pulumi:"kmsKeyId"`
	NetworkInterfaceIds           pulumi.StringArrayOutput                       `pulumi:"networkInterfaceIds"`
	OwnerId                       pulumi.StringOutput                            `pulumi:"ownerId"`
	RootVolumeConfiguration       OpenZfsFileSystemRootVolumeConfigurationOutput `pulumi:"rootVolumeConfiguration"`
	RootVolumeId                  pulumi.StringOutput                            `pulumi:"rootVolumeId"`
	SecurityGroupIds              pulumi.StringArrayOutput                       `pulumi:"securityGroupIds"`
	StorageCapacity               pulumi.IntPtrOutput                            `pulumi:"storageCapacity"`
	StorageType                   pulumi.StringPtrOutput                         `pulumi:"storageType"`
	SubnetIds                     pulumi.StringOutput                            `pulumi:"subnetIds"`
	Tags                          pulumi.StringMapOutput                         `pulumi:"tags"`
	TagsAll                       pulumi.StringMapOutput                         `pulumi:"tagsAll"`
	ThroughputCapacity            pulumi.IntOutput                               `pulumi:"throughputCapacity"`
	VpcId                         pulumi.StringOutput                            `pulumi:"vpcId"`
	WeeklyMaintenanceStartTime    pulumi.StringOutput                            `pulumi:"weeklyMaintenanceStartTime"`
}

// NewOpenZfsFileSystem registers a new resource with the given unique name, arguments, and options.
func NewOpenZfsFileSystem(ctx *pulumi.Context,
	name string, args *OpenZfsFileSystemArgs, opts ...pulumi.ResourceOption) (*OpenZfsFileSystem, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DeploymentType == nil {
		return nil, errors.New("invalid value for required argument 'DeploymentType'")
	}
	if args.SubnetIds == nil {
		return nil, errors.New("invalid value for required argument 'SubnetIds'")
	}
	if args.ThroughputCapacity == nil {
		return nil, errors.New("invalid value for required argument 'ThroughputCapacity'")
	}
	var resource OpenZfsFileSystem
	err := ctx.RegisterResource("aws:fsx/openZfsFileSystem:OpenZfsFileSystem", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOpenZfsFileSystem gets an existing OpenZfsFileSystem resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOpenZfsFileSystem(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OpenZfsFileSystemState, opts ...pulumi.ResourceOption) (*OpenZfsFileSystem, error) {
	var resource OpenZfsFileSystem
	err := ctx.ReadResource("aws:fsx/openZfsFileSystem:OpenZfsFileSystem", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OpenZfsFileSystem resources.
type openZfsFileSystemState struct {
	Arn                           *string                                   `pulumi:"arn"`
	AutomaticBackupRetentionDays  *int                                      `pulumi:"automaticBackupRetentionDays"`
	BackupId                      *string                                   `pulumi:"backupId"`
	CopyTagsToBackups             *bool                                     `pulumi:"copyTagsToBackups"`
	CopyTagsToVolumes             *bool                                     `pulumi:"copyTagsToVolumes"`
	DailyAutomaticBackupStartTime *string                                   `pulumi:"dailyAutomaticBackupStartTime"`
	DeploymentType                *string                                   `pulumi:"deploymentType"`
	DiskIopsConfiguration         *OpenZfsFileSystemDiskIopsConfiguration   `pulumi:"diskIopsConfiguration"`
	DnsName                       *string                                   `pulumi:"dnsName"`
	KmsKeyId                      *string                                   `pulumi:"kmsKeyId"`
	NetworkInterfaceIds           []string                                  `pulumi:"networkInterfaceIds"`
	OwnerId                       *string                                   `pulumi:"ownerId"`
	RootVolumeConfiguration       *OpenZfsFileSystemRootVolumeConfiguration `pulumi:"rootVolumeConfiguration"`
	RootVolumeId                  *string                                   `pulumi:"rootVolumeId"`
	SecurityGroupIds              []string                                  `pulumi:"securityGroupIds"`
	StorageCapacity               *int                                      `pulumi:"storageCapacity"`
	StorageType                   *string                                   `pulumi:"storageType"`
	SubnetIds                     *string                                   `pulumi:"subnetIds"`
	Tags                          map[string]string                         `pulumi:"tags"`
	TagsAll                       map[string]string                         `pulumi:"tagsAll"`
	ThroughputCapacity            *int                                      `pulumi:"throughputCapacity"`
	VpcId                         *string                                   `pulumi:"vpcId"`
	WeeklyMaintenanceStartTime    *string                                   `pulumi:"weeklyMaintenanceStartTime"`
}

type OpenZfsFileSystemState struct {
	Arn                           pulumi.StringPtrInput
	AutomaticBackupRetentionDays  pulumi.IntPtrInput
	BackupId                      pulumi.StringPtrInput
	CopyTagsToBackups             pulumi.BoolPtrInput
	CopyTagsToVolumes             pulumi.BoolPtrInput
	DailyAutomaticBackupStartTime pulumi.StringPtrInput
	DeploymentType                pulumi.StringPtrInput
	DiskIopsConfiguration         OpenZfsFileSystemDiskIopsConfigurationPtrInput
	DnsName                       pulumi.StringPtrInput
	KmsKeyId                      pulumi.StringPtrInput
	NetworkInterfaceIds           pulumi.StringArrayInput
	OwnerId                       pulumi.StringPtrInput
	RootVolumeConfiguration       OpenZfsFileSystemRootVolumeConfigurationPtrInput
	RootVolumeId                  pulumi.StringPtrInput
	SecurityGroupIds              pulumi.StringArrayInput
	StorageCapacity               pulumi.IntPtrInput
	StorageType                   pulumi.StringPtrInput
	SubnetIds                     pulumi.StringPtrInput
	Tags                          pulumi.StringMapInput
	TagsAll                       pulumi.StringMapInput
	ThroughputCapacity            pulumi.IntPtrInput
	VpcId                         pulumi.StringPtrInput
	WeeklyMaintenanceStartTime    pulumi.StringPtrInput
}

func (OpenZfsFileSystemState) ElementType() reflect.Type {
	return reflect.TypeOf((*openZfsFileSystemState)(nil)).Elem()
}

type openZfsFileSystemArgs struct {
	AutomaticBackupRetentionDays  *int                                      `pulumi:"automaticBackupRetentionDays"`
	BackupId                      *string                                   `pulumi:"backupId"`
	CopyTagsToBackups             *bool                                     `pulumi:"copyTagsToBackups"`
	CopyTagsToVolumes             *bool                                     `pulumi:"copyTagsToVolumes"`
	DailyAutomaticBackupStartTime *string                                   `pulumi:"dailyAutomaticBackupStartTime"`
	DeploymentType                string                                    `pulumi:"deploymentType"`
	DiskIopsConfiguration         *OpenZfsFileSystemDiskIopsConfiguration   `pulumi:"diskIopsConfiguration"`
	KmsKeyId                      *string                                   `pulumi:"kmsKeyId"`
	RootVolumeConfiguration       *OpenZfsFileSystemRootVolumeConfiguration `pulumi:"rootVolumeConfiguration"`
	SecurityGroupIds              []string                                  `pulumi:"securityGroupIds"`
	StorageCapacity               *int                                      `pulumi:"storageCapacity"`
	StorageType                   *string                                   `pulumi:"storageType"`
	SubnetIds                     string                                    `pulumi:"subnetIds"`
	Tags                          map[string]string                         `pulumi:"tags"`
	ThroughputCapacity            int                                       `pulumi:"throughputCapacity"`
	WeeklyMaintenanceStartTime    *string                                   `pulumi:"weeklyMaintenanceStartTime"`
}

// The set of arguments for constructing a OpenZfsFileSystem resource.
type OpenZfsFileSystemArgs struct {
	AutomaticBackupRetentionDays  pulumi.IntPtrInput
	BackupId                      pulumi.StringPtrInput
	CopyTagsToBackups             pulumi.BoolPtrInput
	CopyTagsToVolumes             pulumi.BoolPtrInput
	DailyAutomaticBackupStartTime pulumi.StringPtrInput
	DeploymentType                pulumi.StringInput
	DiskIopsConfiguration         OpenZfsFileSystemDiskIopsConfigurationPtrInput
	KmsKeyId                      pulumi.StringPtrInput
	RootVolumeConfiguration       OpenZfsFileSystemRootVolumeConfigurationPtrInput
	SecurityGroupIds              pulumi.StringArrayInput
	StorageCapacity               pulumi.IntPtrInput
	StorageType                   pulumi.StringPtrInput
	SubnetIds                     pulumi.StringInput
	Tags                          pulumi.StringMapInput
	ThroughputCapacity            pulumi.IntInput
	WeeklyMaintenanceStartTime    pulumi.StringPtrInput
}

func (OpenZfsFileSystemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*openZfsFileSystemArgs)(nil)).Elem()
}

type OpenZfsFileSystemInput interface {
	pulumi.Input

	ToOpenZfsFileSystemOutput() OpenZfsFileSystemOutput
	ToOpenZfsFileSystemOutputWithContext(ctx context.Context) OpenZfsFileSystemOutput
}

func (*OpenZfsFileSystem) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenZfsFileSystem)(nil)).Elem()
}

func (i *OpenZfsFileSystem) ToOpenZfsFileSystemOutput() OpenZfsFileSystemOutput {
	return i.ToOpenZfsFileSystemOutputWithContext(context.Background())
}

func (i *OpenZfsFileSystem) ToOpenZfsFileSystemOutputWithContext(ctx context.Context) OpenZfsFileSystemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenZfsFileSystemOutput)
}

// OpenZfsFileSystemArrayInput is an input type that accepts OpenZfsFileSystemArray and OpenZfsFileSystemArrayOutput values.
// You can construct a concrete instance of `OpenZfsFileSystemArrayInput` via:
//
//	OpenZfsFileSystemArray{ OpenZfsFileSystemArgs{...} }
type OpenZfsFileSystemArrayInput interface {
	pulumi.Input

	ToOpenZfsFileSystemArrayOutput() OpenZfsFileSystemArrayOutput
	ToOpenZfsFileSystemArrayOutputWithContext(context.Context) OpenZfsFileSystemArrayOutput
}

type OpenZfsFileSystemArray []OpenZfsFileSystemInput

func (OpenZfsFileSystemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OpenZfsFileSystem)(nil)).Elem()
}

func (i OpenZfsFileSystemArray) ToOpenZfsFileSystemArrayOutput() OpenZfsFileSystemArrayOutput {
	return i.ToOpenZfsFileSystemArrayOutputWithContext(context.Background())
}

func (i OpenZfsFileSystemArray) ToOpenZfsFileSystemArrayOutputWithContext(ctx context.Context) OpenZfsFileSystemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenZfsFileSystemArrayOutput)
}

// OpenZfsFileSystemMapInput is an input type that accepts OpenZfsFileSystemMap and OpenZfsFileSystemMapOutput values.
// You can construct a concrete instance of `OpenZfsFileSystemMapInput` via:
//
//	OpenZfsFileSystemMap{ "key": OpenZfsFileSystemArgs{...} }
type OpenZfsFileSystemMapInput interface {
	pulumi.Input

	ToOpenZfsFileSystemMapOutput() OpenZfsFileSystemMapOutput
	ToOpenZfsFileSystemMapOutputWithContext(context.Context) OpenZfsFileSystemMapOutput
}

type OpenZfsFileSystemMap map[string]OpenZfsFileSystemInput

func (OpenZfsFileSystemMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OpenZfsFileSystem)(nil)).Elem()
}

func (i OpenZfsFileSystemMap) ToOpenZfsFileSystemMapOutput() OpenZfsFileSystemMapOutput {
	return i.ToOpenZfsFileSystemMapOutputWithContext(context.Background())
}

func (i OpenZfsFileSystemMap) ToOpenZfsFileSystemMapOutputWithContext(ctx context.Context) OpenZfsFileSystemMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OpenZfsFileSystemMapOutput)
}

type OpenZfsFileSystemOutput struct{ *pulumi.OutputState }

func (OpenZfsFileSystemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OpenZfsFileSystem)(nil)).Elem()
}

func (o OpenZfsFileSystemOutput) ToOpenZfsFileSystemOutput() OpenZfsFileSystemOutput {
	return o
}

func (o OpenZfsFileSystemOutput) ToOpenZfsFileSystemOutputWithContext(ctx context.Context) OpenZfsFileSystemOutput {
	return o
}

func (o OpenZfsFileSystemOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenZfsFileSystem) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o OpenZfsFileSystemOutput) AutomaticBackupRetentionDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OpenZfsFileSystem) pulumi.IntPtrOutput { return v.AutomaticBackupRetentionDays }).(pulumi.IntPtrOutput)
}

func (o OpenZfsFileSystemOutput) BackupId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenZfsFileSystem) pulumi.StringPtrOutput { return v.BackupId }).(pulumi.StringPtrOutput)
}

func (o OpenZfsFileSystemOutput) CopyTagsToBackups() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OpenZfsFileSystem) pulumi.BoolPtrOutput { return v.CopyTagsToBackups }).(pulumi.BoolPtrOutput)
}

func (o OpenZfsFileSystemOutput) CopyTagsToVolumes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *OpenZfsFileSystem) pulumi.BoolPtrOutput { return v.CopyTagsToVolumes }).(pulumi.BoolPtrOutput)
}

func (o OpenZfsFileSystemOutput) DailyAutomaticBackupStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenZfsFileSystem) pulumi.StringOutput { return v.DailyAutomaticBackupStartTime }).(pulumi.StringOutput)
}

func (o OpenZfsFileSystemOutput) DeploymentType() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenZfsFileSystem) pulumi.StringOutput { return v.DeploymentType }).(pulumi.StringOutput)
}

func (o OpenZfsFileSystemOutput) DiskIopsConfiguration() OpenZfsFileSystemDiskIopsConfigurationOutput {
	return o.ApplyT(func(v *OpenZfsFileSystem) OpenZfsFileSystemDiskIopsConfigurationOutput {
		return v.DiskIopsConfiguration
	}).(OpenZfsFileSystemDiskIopsConfigurationOutput)
}

func (o OpenZfsFileSystemOutput) DnsName() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenZfsFileSystem) pulumi.StringOutput { return v.DnsName }).(pulumi.StringOutput)
}

func (o OpenZfsFileSystemOutput) KmsKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenZfsFileSystem) pulumi.StringOutput { return v.KmsKeyId }).(pulumi.StringOutput)
}

func (o OpenZfsFileSystemOutput) NetworkInterfaceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OpenZfsFileSystem) pulumi.StringArrayOutput { return v.NetworkInterfaceIds }).(pulumi.StringArrayOutput)
}

func (o OpenZfsFileSystemOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenZfsFileSystem) pulumi.StringOutput { return v.OwnerId }).(pulumi.StringOutput)
}

func (o OpenZfsFileSystemOutput) RootVolumeConfiguration() OpenZfsFileSystemRootVolumeConfigurationOutput {
	return o.ApplyT(func(v *OpenZfsFileSystem) OpenZfsFileSystemRootVolumeConfigurationOutput {
		return v.RootVolumeConfiguration
	}).(OpenZfsFileSystemRootVolumeConfigurationOutput)
}

func (o OpenZfsFileSystemOutput) RootVolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenZfsFileSystem) pulumi.StringOutput { return v.RootVolumeId }).(pulumi.StringOutput)
}

func (o OpenZfsFileSystemOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OpenZfsFileSystem) pulumi.StringArrayOutput { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o OpenZfsFileSystemOutput) StorageCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *OpenZfsFileSystem) pulumi.IntPtrOutput { return v.StorageCapacity }).(pulumi.IntPtrOutput)
}

func (o OpenZfsFileSystemOutput) StorageType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OpenZfsFileSystem) pulumi.StringPtrOutput { return v.StorageType }).(pulumi.StringPtrOutput)
}

func (o OpenZfsFileSystemOutput) SubnetIds() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenZfsFileSystem) pulumi.StringOutput { return v.SubnetIds }).(pulumi.StringOutput)
}

func (o OpenZfsFileSystemOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OpenZfsFileSystem) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o OpenZfsFileSystemOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OpenZfsFileSystem) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o OpenZfsFileSystemOutput) ThroughputCapacity() pulumi.IntOutput {
	return o.ApplyT(func(v *OpenZfsFileSystem) pulumi.IntOutput { return v.ThroughputCapacity }).(pulumi.IntOutput)
}

func (o OpenZfsFileSystemOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenZfsFileSystem) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

func (o OpenZfsFileSystemOutput) WeeklyMaintenanceStartTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OpenZfsFileSystem) pulumi.StringOutput { return v.WeeklyMaintenanceStartTime }).(pulumi.StringOutput)
}

type OpenZfsFileSystemArrayOutput struct{ *pulumi.OutputState }

func (OpenZfsFileSystemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OpenZfsFileSystem)(nil)).Elem()
}

func (o OpenZfsFileSystemArrayOutput) ToOpenZfsFileSystemArrayOutput() OpenZfsFileSystemArrayOutput {
	return o
}

func (o OpenZfsFileSystemArrayOutput) ToOpenZfsFileSystemArrayOutputWithContext(ctx context.Context) OpenZfsFileSystemArrayOutput {
	return o
}

func (o OpenZfsFileSystemArrayOutput) Index(i pulumi.IntInput) OpenZfsFileSystemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OpenZfsFileSystem {
		return vs[0].([]*OpenZfsFileSystem)[vs[1].(int)]
	}).(OpenZfsFileSystemOutput)
}

type OpenZfsFileSystemMapOutput struct{ *pulumi.OutputState }

func (OpenZfsFileSystemMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OpenZfsFileSystem)(nil)).Elem()
}

func (o OpenZfsFileSystemMapOutput) ToOpenZfsFileSystemMapOutput() OpenZfsFileSystemMapOutput {
	return o
}

func (o OpenZfsFileSystemMapOutput) ToOpenZfsFileSystemMapOutputWithContext(ctx context.Context) OpenZfsFileSystemMapOutput {
	return o
}

func (o OpenZfsFileSystemMapOutput) MapIndex(k pulumi.StringInput) OpenZfsFileSystemOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OpenZfsFileSystem {
		return vs[0].(map[string]*OpenZfsFileSystem)[vs[1].(string)]
	}).(OpenZfsFileSystemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OpenZfsFileSystemInput)(nil)).Elem(), &OpenZfsFileSystem{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenZfsFileSystemArrayInput)(nil)).Elem(), OpenZfsFileSystemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OpenZfsFileSystemMapInput)(nil)).Elem(), OpenZfsFileSystemMap{})
	pulumi.RegisterOutputType(OpenZfsFileSystemOutput{})
	pulumi.RegisterOutputType(OpenZfsFileSystemArrayOutput{})
	pulumi.RegisterOutputType(OpenZfsFileSystemMapOutput{})
}
