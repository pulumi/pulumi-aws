// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fsx

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupOpenZfsSnapshot(ctx *pulumi.Context, args *LookupOpenZfsSnapshotArgs, opts ...pulumi.InvokeOption) (*LookupOpenZfsSnapshotResult, error) {
	var rv LookupOpenZfsSnapshotResult
	err := ctx.Invoke("aws:fsx/getOpenZfsSnapshot:getOpenZfsSnapshot", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOpenZfsSnapshot.
type LookupOpenZfsSnapshotArgs struct {
	Filters     []GetOpenZfsSnapshotFilter `pulumi:"filters"`
	MostRecent  *bool                      `pulumi:"mostRecent"`
	Name        *string                    `pulumi:"name"`
	SnapshotIds []string                   `pulumi:"snapshotIds"`
	Tags        map[string]string          `pulumi:"tags"`
}

// A collection of values returned by getOpenZfsSnapshot.
type LookupOpenZfsSnapshotResult struct {
	Arn          string                     `pulumi:"arn"`
	CreationTime string                     `pulumi:"creationTime"`
	Filters      []GetOpenZfsSnapshotFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id          string            `pulumi:"id"`
	MostRecent  *bool             `pulumi:"mostRecent"`
	Name        *string           `pulumi:"name"`
	SnapshotId  string            `pulumi:"snapshotId"`
	SnapshotIds []string          `pulumi:"snapshotIds"`
	Tags        map[string]string `pulumi:"tags"`
	VolumeId    string            `pulumi:"volumeId"`
}

func LookupOpenZfsSnapshotOutput(ctx *pulumi.Context, args LookupOpenZfsSnapshotOutputArgs, opts ...pulumi.InvokeOption) LookupOpenZfsSnapshotResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupOpenZfsSnapshotResult, error) {
			args := v.(LookupOpenZfsSnapshotArgs)
			r, err := LookupOpenZfsSnapshot(ctx, &args, opts...)
			var s LookupOpenZfsSnapshotResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupOpenZfsSnapshotResultOutput)
}

// A collection of arguments for invoking getOpenZfsSnapshot.
type LookupOpenZfsSnapshotOutputArgs struct {
	Filters     GetOpenZfsSnapshotFilterArrayInput `pulumi:"filters"`
	MostRecent  pulumi.BoolPtrInput                `pulumi:"mostRecent"`
	Name        pulumi.StringPtrInput              `pulumi:"name"`
	SnapshotIds pulumi.StringArrayInput            `pulumi:"snapshotIds"`
	Tags        pulumi.StringMapInput              `pulumi:"tags"`
}

func (LookupOpenZfsSnapshotOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOpenZfsSnapshotArgs)(nil)).Elem()
}

// A collection of values returned by getOpenZfsSnapshot.
type LookupOpenZfsSnapshotResultOutput struct{ *pulumi.OutputState }

func (LookupOpenZfsSnapshotResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupOpenZfsSnapshotResult)(nil)).Elem()
}

func (o LookupOpenZfsSnapshotResultOutput) ToLookupOpenZfsSnapshotResultOutput() LookupOpenZfsSnapshotResultOutput {
	return o
}

func (o LookupOpenZfsSnapshotResultOutput) ToLookupOpenZfsSnapshotResultOutputWithContext(ctx context.Context) LookupOpenZfsSnapshotResultOutput {
	return o
}

func (o LookupOpenZfsSnapshotResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenZfsSnapshotResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o LookupOpenZfsSnapshotResultOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenZfsSnapshotResult) string { return v.CreationTime }).(pulumi.StringOutput)
}

func (o LookupOpenZfsSnapshotResultOutput) Filters() GetOpenZfsSnapshotFilterArrayOutput {
	return o.ApplyT(func(v LookupOpenZfsSnapshotResult) []GetOpenZfsSnapshotFilter { return v.Filters }).(GetOpenZfsSnapshotFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupOpenZfsSnapshotResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenZfsSnapshotResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupOpenZfsSnapshotResultOutput) MostRecent() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LookupOpenZfsSnapshotResult) *bool { return v.MostRecent }).(pulumi.BoolPtrOutput)
}

func (o LookupOpenZfsSnapshotResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupOpenZfsSnapshotResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupOpenZfsSnapshotResultOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenZfsSnapshotResult) string { return v.SnapshotId }).(pulumi.StringOutput)
}

func (o LookupOpenZfsSnapshotResultOutput) SnapshotIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupOpenZfsSnapshotResult) []string { return v.SnapshotIds }).(pulumi.StringArrayOutput)
}

func (o LookupOpenZfsSnapshotResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupOpenZfsSnapshotResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o LookupOpenZfsSnapshotResultOutput) VolumeId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupOpenZfsSnapshotResult) string { return v.VolumeId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupOpenZfsSnapshotResultOutput{})
}
