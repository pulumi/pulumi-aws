// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package fsx

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "aws:fsx/backup:Backup":
		r = &Backup{}
	case "aws:fsx/dataRepositoryAssociation:DataRepositoryAssociation":
		r = &DataRepositoryAssociation{}
	case "aws:fsx/lustreFileSystem:LustreFileSystem":
		r = &LustreFileSystem{}
	case "aws:fsx/ontapFileSystem:OntapFileSystem":
		r = &OntapFileSystem{}
	case "aws:fsx/ontapStorageVirtualMachine:OntapStorageVirtualMachine":
		r = &OntapStorageVirtualMachine{}
	case "aws:fsx/ontapVolume:OntapVolume":
		r = &OntapVolume{}
	case "aws:fsx/openZfsFileSystem:OpenZfsFileSystem":
		r = &OpenZfsFileSystem{}
	case "aws:fsx/openZfsSnapshot:OpenZfsSnapshot":
		r = &OpenZfsSnapshot{}
	case "aws:fsx/openZfsVolume:OpenZfsVolume":
		r = &OpenZfsVolume{}
	case "aws:fsx/windowsFileSystem:WindowsFileSystem":
		r = &WindowsFileSystem{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := aws.PkgVersion()
	if err != nil {
		fmt.Printf("failed to determine package version. defaulting to v1: %v\n", err)
	}
	pulumi.RegisterResourceModule(
		"aws",
		"fsx/backup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"fsx/dataRepositoryAssociation",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"fsx/lustreFileSystem",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"fsx/ontapFileSystem",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"fsx/ontapStorageVirtualMachine",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"fsx/ontapVolume",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"fsx/openZfsFileSystem",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"fsx/openZfsSnapshot",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"fsx/openZfsVolume",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"fsx/windowsFileSystem",
		&module{version},
	)
}
