// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fsx

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Manages a FSx Storage Virtual Machine.
// See the [FSx ONTAP User Guide](https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/managing-svms.html) for more information.
//
// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/fsx"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fsx.NewOntapStorageVirtualMachine(ctx, "test", &fsx.OntapStorageVirtualMachineArgs{
//				FileSystemId: pulumi.Any(aws_fsx_ontap_file_system.Test.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Using a Self-Managed Microsoft Active Directory
//
// Additional information for using AWS Directory Service with ONTAP File Systems can be found in the [FSx ONTAP Guide](https://docs.aws.amazon.com/fsx/latest/ONTAPGuide/self-managed-AD.html).
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/fsx"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fsx.NewOntapStorageVirtualMachine(ctx, "test", &fsx.OntapStorageVirtualMachineArgs{
//				FileSystemId: pulumi.Any(aws_fsx_ontap_file_system.Test.Id),
//				ActiveDirectoryConfiguration: &fsx.OntapStorageVirtualMachineActiveDirectoryConfigurationArgs{
//					NetbiosName: pulumi.String("mysvm"),
//					SelfManagedActiveDirectoryConfiguration: &fsx.OntapStorageVirtualMachineActiveDirectoryConfigurationSelfManagedActiveDirectoryConfigurationArgs{
//						DnsIps: pulumi.StringArray{
//							pulumi.String("10.0.0.111"),
//							pulumi.String("10.0.0.222"),
//						},
//						DomainName: pulumi.String("corp.example.com"),
//						Password:   pulumi.String("avoid-plaintext-passwords"),
//						Username:   pulumi.String("Admin"),
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import FSx Storage Virtual Machine using the `id`. For example:
//
// ```sh
//
//	$ pulumi import aws:fsx/ontapStorageVirtualMachine:OntapStorageVirtualMachine example svm-12345678abcdef123
//
// ```
//
//	Certain resource arguments, like `svm_admin_password` and the `self_managed_active_directory` configuation block `password`, do not have a FSx API method for reading the information after creation. If these arguments are set in the Pulumi program on an imported resource, Pulumi will always show a difference. To workaround this behavior, either omit the argument from the Pulumi program or use `ignore_changes` to hide the difference. For example:
type OntapStorageVirtualMachine struct {
	pulumi.CustomResourceState

	// Configuration block that Amazon FSx uses to join the FSx ONTAP Storage Virtual Machine(SVM) to your Microsoft Active Directory (AD) directory. Detailed below.
	ActiveDirectoryConfiguration OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput `pulumi:"activeDirectoryConfiguration"`
	// Amazon Resource Name of the storage virtual machine.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// The endpoints that are used to access data or to manage the storage virtual machine using the NetApp ONTAP CLI, REST API, or NetApp SnapMirror. See Endpoints below.
	Endpoints OntapStorageVirtualMachineEndpointArrayOutput `pulumi:"endpoints"`
	// The ID of the Amazon FSx ONTAP File System that this SVM will be created on.
	FileSystemId pulumi.StringOutput `pulumi:"fileSystemId"`
	// The name of the SVM. You can use a maximum of 47 alphanumeric characters, plus the underscore (_) special character.
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the root volume security style, Valid values are `UNIX`, `NTFS`, and `MIXED`. All volumes created under this SVM will inherit the root security style unless the security style is specified on the volume. Default value is `UNIX`.
	RootVolumeSecurityStyle pulumi.StringPtrOutput `pulumi:"rootVolumeSecurityStyle"`
	// Describes the SVM's subtype, e.g. `DEFAULT`
	Subtype          pulumi.StringOutput    `pulumi:"subtype"`
	SvmAdminPassword pulumi.StringPtrOutput `pulumi:"svmAdminPassword"`
	// A map of tags to assign to the storage virtual machine. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
	// The SVM's UUID (universally unique identifier).
	Uuid pulumi.StringOutput `pulumi:"uuid"`
}

// NewOntapStorageVirtualMachine registers a new resource with the given unique name, arguments, and options.
func NewOntapStorageVirtualMachine(ctx *pulumi.Context,
	name string, args *OntapStorageVirtualMachineArgs, opts ...pulumi.ResourceOption) (*OntapStorageVirtualMachine, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FileSystemId == nil {
		return nil, errors.New("invalid value for required argument 'FileSystemId'")
	}
	if args.SvmAdminPassword != nil {
		args.SvmAdminPassword = pulumi.ToSecret(args.SvmAdminPassword).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"svmAdminPassword",
		"tagsAll",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OntapStorageVirtualMachine
	err := ctx.RegisterResource("aws:fsx/ontapStorageVirtualMachine:OntapStorageVirtualMachine", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOntapStorageVirtualMachine gets an existing OntapStorageVirtualMachine resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOntapStorageVirtualMachine(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OntapStorageVirtualMachineState, opts ...pulumi.ResourceOption) (*OntapStorageVirtualMachine, error) {
	var resource OntapStorageVirtualMachine
	err := ctx.ReadResource("aws:fsx/ontapStorageVirtualMachine:OntapStorageVirtualMachine", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OntapStorageVirtualMachine resources.
type ontapStorageVirtualMachineState struct {
	// Configuration block that Amazon FSx uses to join the FSx ONTAP Storage Virtual Machine(SVM) to your Microsoft Active Directory (AD) directory. Detailed below.
	ActiveDirectoryConfiguration *OntapStorageVirtualMachineActiveDirectoryConfiguration `pulumi:"activeDirectoryConfiguration"`
	// Amazon Resource Name of the storage virtual machine.
	Arn *string `pulumi:"arn"`
	// The endpoints that are used to access data or to manage the storage virtual machine using the NetApp ONTAP CLI, REST API, or NetApp SnapMirror. See Endpoints below.
	Endpoints []OntapStorageVirtualMachineEndpoint `pulumi:"endpoints"`
	// The ID of the Amazon FSx ONTAP File System that this SVM will be created on.
	FileSystemId *string `pulumi:"fileSystemId"`
	// The name of the SVM. You can use a maximum of 47 alphanumeric characters, plus the underscore (_) special character.
	Name *string `pulumi:"name"`
	// Specifies the root volume security style, Valid values are `UNIX`, `NTFS`, and `MIXED`. All volumes created under this SVM will inherit the root security style unless the security style is specified on the volume. Default value is `UNIX`.
	RootVolumeSecurityStyle *string `pulumi:"rootVolumeSecurityStyle"`
	// Describes the SVM's subtype, e.g. `DEFAULT`
	Subtype          *string `pulumi:"subtype"`
	SvmAdminPassword *string `pulumi:"svmAdminPassword"`
	// A map of tags to assign to the storage virtual machine. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// The SVM's UUID (universally unique identifier).
	Uuid *string `pulumi:"uuid"`
}

type OntapStorageVirtualMachineState struct {
	// Configuration block that Amazon FSx uses to join the FSx ONTAP Storage Virtual Machine(SVM) to your Microsoft Active Directory (AD) directory. Detailed below.
	ActiveDirectoryConfiguration OntapStorageVirtualMachineActiveDirectoryConfigurationPtrInput
	// Amazon Resource Name of the storage virtual machine.
	Arn pulumi.StringPtrInput
	// The endpoints that are used to access data or to manage the storage virtual machine using the NetApp ONTAP CLI, REST API, or NetApp SnapMirror. See Endpoints below.
	Endpoints OntapStorageVirtualMachineEndpointArrayInput
	// The ID of the Amazon FSx ONTAP File System that this SVM will be created on.
	FileSystemId pulumi.StringPtrInput
	// The name of the SVM. You can use a maximum of 47 alphanumeric characters, plus the underscore (_) special character.
	Name pulumi.StringPtrInput
	// Specifies the root volume security style, Valid values are `UNIX`, `NTFS`, and `MIXED`. All volumes created under this SVM will inherit the root security style unless the security style is specified on the volume. Default value is `UNIX`.
	RootVolumeSecurityStyle pulumi.StringPtrInput
	// Describes the SVM's subtype, e.g. `DEFAULT`
	Subtype          pulumi.StringPtrInput
	SvmAdminPassword pulumi.StringPtrInput
	// A map of tags to assign to the storage virtual machine. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapInput
	// The SVM's UUID (universally unique identifier).
	Uuid pulumi.StringPtrInput
}

func (OntapStorageVirtualMachineState) ElementType() reflect.Type {
	return reflect.TypeOf((*ontapStorageVirtualMachineState)(nil)).Elem()
}

type ontapStorageVirtualMachineArgs struct {
	// Configuration block that Amazon FSx uses to join the FSx ONTAP Storage Virtual Machine(SVM) to your Microsoft Active Directory (AD) directory. Detailed below.
	ActiveDirectoryConfiguration *OntapStorageVirtualMachineActiveDirectoryConfiguration `pulumi:"activeDirectoryConfiguration"`
	// The ID of the Amazon FSx ONTAP File System that this SVM will be created on.
	FileSystemId string `pulumi:"fileSystemId"`
	// The name of the SVM. You can use a maximum of 47 alphanumeric characters, plus the underscore (_) special character.
	Name *string `pulumi:"name"`
	// Specifies the root volume security style, Valid values are `UNIX`, `NTFS`, and `MIXED`. All volumes created under this SVM will inherit the root security style unless the security style is specified on the volume. Default value is `UNIX`.
	RootVolumeSecurityStyle *string `pulumi:"rootVolumeSecurityStyle"`
	SvmAdminPassword        *string `pulumi:"svmAdminPassword"`
	// A map of tags to assign to the storage virtual machine. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
}

// The set of arguments for constructing a OntapStorageVirtualMachine resource.
type OntapStorageVirtualMachineArgs struct {
	// Configuration block that Amazon FSx uses to join the FSx ONTAP Storage Virtual Machine(SVM) to your Microsoft Active Directory (AD) directory. Detailed below.
	ActiveDirectoryConfiguration OntapStorageVirtualMachineActiveDirectoryConfigurationPtrInput
	// The ID of the Amazon FSx ONTAP File System that this SVM will be created on.
	FileSystemId pulumi.StringInput
	// The name of the SVM. You can use a maximum of 47 alphanumeric characters, plus the underscore (_) special character.
	Name pulumi.StringPtrInput
	// Specifies the root volume security style, Valid values are `UNIX`, `NTFS`, and `MIXED`. All volumes created under this SVM will inherit the root security style unless the security style is specified on the volume. Default value is `UNIX`.
	RootVolumeSecurityStyle pulumi.StringPtrInput
	SvmAdminPassword        pulumi.StringPtrInput
	// A map of tags to assign to the storage virtual machine. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
}

func (OntapStorageVirtualMachineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ontapStorageVirtualMachineArgs)(nil)).Elem()
}

type OntapStorageVirtualMachineInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineOutput() OntapStorageVirtualMachineOutput
	ToOntapStorageVirtualMachineOutputWithContext(ctx context.Context) OntapStorageVirtualMachineOutput
}

func (*OntapStorageVirtualMachine) ElementType() reflect.Type {
	return reflect.TypeOf((**OntapStorageVirtualMachine)(nil)).Elem()
}

func (i *OntapStorageVirtualMachine) ToOntapStorageVirtualMachineOutput() OntapStorageVirtualMachineOutput {
	return i.ToOntapStorageVirtualMachineOutputWithContext(context.Background())
}

func (i *OntapStorageVirtualMachine) ToOntapStorageVirtualMachineOutputWithContext(ctx context.Context) OntapStorageVirtualMachineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineOutput)
}

func (i *OntapStorageVirtualMachine) ToOutput(ctx context.Context) pulumix.Output[*OntapStorageVirtualMachine] {
	return pulumix.Output[*OntapStorageVirtualMachine]{
		OutputState: i.ToOntapStorageVirtualMachineOutputWithContext(ctx).OutputState,
	}
}

// OntapStorageVirtualMachineArrayInput is an input type that accepts OntapStorageVirtualMachineArray and OntapStorageVirtualMachineArrayOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineArrayInput` via:
//
//	OntapStorageVirtualMachineArray{ OntapStorageVirtualMachineArgs{...} }
type OntapStorageVirtualMachineArrayInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineArrayOutput() OntapStorageVirtualMachineArrayOutput
	ToOntapStorageVirtualMachineArrayOutputWithContext(context.Context) OntapStorageVirtualMachineArrayOutput
}

type OntapStorageVirtualMachineArray []OntapStorageVirtualMachineInput

func (OntapStorageVirtualMachineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OntapStorageVirtualMachine)(nil)).Elem()
}

func (i OntapStorageVirtualMachineArray) ToOntapStorageVirtualMachineArrayOutput() OntapStorageVirtualMachineArrayOutput {
	return i.ToOntapStorageVirtualMachineArrayOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineArray) ToOntapStorageVirtualMachineArrayOutputWithContext(ctx context.Context) OntapStorageVirtualMachineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineArrayOutput)
}

func (i OntapStorageVirtualMachineArray) ToOutput(ctx context.Context) pulumix.Output[[]*OntapStorageVirtualMachine] {
	return pulumix.Output[[]*OntapStorageVirtualMachine]{
		OutputState: i.ToOntapStorageVirtualMachineArrayOutputWithContext(ctx).OutputState,
	}
}

// OntapStorageVirtualMachineMapInput is an input type that accepts OntapStorageVirtualMachineMap and OntapStorageVirtualMachineMapOutput values.
// You can construct a concrete instance of `OntapStorageVirtualMachineMapInput` via:
//
//	OntapStorageVirtualMachineMap{ "key": OntapStorageVirtualMachineArgs{...} }
type OntapStorageVirtualMachineMapInput interface {
	pulumi.Input

	ToOntapStorageVirtualMachineMapOutput() OntapStorageVirtualMachineMapOutput
	ToOntapStorageVirtualMachineMapOutputWithContext(context.Context) OntapStorageVirtualMachineMapOutput
}

type OntapStorageVirtualMachineMap map[string]OntapStorageVirtualMachineInput

func (OntapStorageVirtualMachineMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OntapStorageVirtualMachine)(nil)).Elem()
}

func (i OntapStorageVirtualMachineMap) ToOntapStorageVirtualMachineMapOutput() OntapStorageVirtualMachineMapOutput {
	return i.ToOntapStorageVirtualMachineMapOutputWithContext(context.Background())
}

func (i OntapStorageVirtualMachineMap) ToOntapStorageVirtualMachineMapOutputWithContext(ctx context.Context) OntapStorageVirtualMachineMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OntapStorageVirtualMachineMapOutput)
}

func (i OntapStorageVirtualMachineMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*OntapStorageVirtualMachine] {
	return pulumix.Output[map[string]*OntapStorageVirtualMachine]{
		OutputState: i.ToOntapStorageVirtualMachineMapOutputWithContext(ctx).OutputState,
	}
}

type OntapStorageVirtualMachineOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OntapStorageVirtualMachine)(nil)).Elem()
}

func (o OntapStorageVirtualMachineOutput) ToOntapStorageVirtualMachineOutput() OntapStorageVirtualMachineOutput {
	return o
}

func (o OntapStorageVirtualMachineOutput) ToOntapStorageVirtualMachineOutputWithContext(ctx context.Context) OntapStorageVirtualMachineOutput {
	return o
}

func (o OntapStorageVirtualMachineOutput) ToOutput(ctx context.Context) pulumix.Output[*OntapStorageVirtualMachine] {
	return pulumix.Output[*OntapStorageVirtualMachine]{
		OutputState: o.OutputState,
	}
}

// Configuration block that Amazon FSx uses to join the FSx ONTAP Storage Virtual Machine(SVM) to your Microsoft Active Directory (AD) directory. Detailed below.
func (o OntapStorageVirtualMachineOutput) ActiveDirectoryConfiguration() OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachine) OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput {
		return v.ActiveDirectoryConfiguration
	}).(OntapStorageVirtualMachineActiveDirectoryConfigurationPtrOutput)
}

// Amazon Resource Name of the storage virtual machine.
func (o OntapStorageVirtualMachineOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachine) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// The endpoints that are used to access data or to manage the storage virtual machine using the NetApp ONTAP CLI, REST API, or NetApp SnapMirror. See Endpoints below.
func (o OntapStorageVirtualMachineOutput) Endpoints() OntapStorageVirtualMachineEndpointArrayOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachine) OntapStorageVirtualMachineEndpointArrayOutput { return v.Endpoints }).(OntapStorageVirtualMachineEndpointArrayOutput)
}

// The ID of the Amazon FSx ONTAP File System that this SVM will be created on.
func (o OntapStorageVirtualMachineOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachine) pulumi.StringOutput { return v.FileSystemId }).(pulumi.StringOutput)
}

// The name of the SVM. You can use a maximum of 47 alphanumeric characters, plus the underscore (_) special character.
func (o OntapStorageVirtualMachineOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachine) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Specifies the root volume security style, Valid values are `UNIX`, `NTFS`, and `MIXED`. All volumes created under this SVM will inherit the root security style unless the security style is specified on the volume. Default value is `UNIX`.
func (o OntapStorageVirtualMachineOutput) RootVolumeSecurityStyle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachine) pulumi.StringPtrOutput { return v.RootVolumeSecurityStyle }).(pulumi.StringPtrOutput)
}

// Describes the SVM's subtype, e.g. `DEFAULT`
func (o OntapStorageVirtualMachineOutput) Subtype() pulumi.StringOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachine) pulumi.StringOutput { return v.Subtype }).(pulumi.StringOutput)
}

func (o OntapStorageVirtualMachineOutput) SvmAdminPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachine) pulumi.StringPtrOutput { return v.SvmAdminPassword }).(pulumi.StringPtrOutput)
}

// A map of tags to assign to the storage virtual machine. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o OntapStorageVirtualMachineOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachine) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// A map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
//
// Deprecated: Please use `tags` instead.
func (o OntapStorageVirtualMachineOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachine) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

// The SVM's UUID (universally unique identifier).
func (o OntapStorageVirtualMachineOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v *OntapStorageVirtualMachine) pulumi.StringOutput { return v.Uuid }).(pulumi.StringOutput)
}

type OntapStorageVirtualMachineArrayOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OntapStorageVirtualMachine)(nil)).Elem()
}

func (o OntapStorageVirtualMachineArrayOutput) ToOntapStorageVirtualMachineArrayOutput() OntapStorageVirtualMachineArrayOutput {
	return o
}

func (o OntapStorageVirtualMachineArrayOutput) ToOntapStorageVirtualMachineArrayOutputWithContext(ctx context.Context) OntapStorageVirtualMachineArrayOutput {
	return o
}

func (o OntapStorageVirtualMachineArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*OntapStorageVirtualMachine] {
	return pulumix.Output[[]*OntapStorageVirtualMachine]{
		OutputState: o.OutputState,
	}
}

func (o OntapStorageVirtualMachineArrayOutput) Index(i pulumi.IntInput) OntapStorageVirtualMachineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OntapStorageVirtualMachine {
		return vs[0].([]*OntapStorageVirtualMachine)[vs[1].(int)]
	}).(OntapStorageVirtualMachineOutput)
}

type OntapStorageVirtualMachineMapOutput struct{ *pulumi.OutputState }

func (OntapStorageVirtualMachineMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OntapStorageVirtualMachine)(nil)).Elem()
}

func (o OntapStorageVirtualMachineMapOutput) ToOntapStorageVirtualMachineMapOutput() OntapStorageVirtualMachineMapOutput {
	return o
}

func (o OntapStorageVirtualMachineMapOutput) ToOntapStorageVirtualMachineMapOutputWithContext(ctx context.Context) OntapStorageVirtualMachineMapOutput {
	return o
}

func (o OntapStorageVirtualMachineMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*OntapStorageVirtualMachine] {
	return pulumix.Output[map[string]*OntapStorageVirtualMachine]{
		OutputState: o.OutputState,
	}
}

func (o OntapStorageVirtualMachineMapOutput) MapIndex(k pulumi.StringInput) OntapStorageVirtualMachineOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OntapStorageVirtualMachine {
		return vs[0].(map[string]*OntapStorageVirtualMachine)[vs[1].(string)]
	}).(OntapStorageVirtualMachineOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineInput)(nil)).Elem(), &OntapStorageVirtualMachine{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineArrayInput)(nil)).Elem(), OntapStorageVirtualMachineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OntapStorageVirtualMachineMapInput)(nil)).Elem(), OntapStorageVirtualMachineMap{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineArrayOutput{})
	pulumi.RegisterOutputType(OntapStorageVirtualMachineMapOutput{})
}
