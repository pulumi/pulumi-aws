// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type TaskDefinition struct {
	pulumi.CustomResourceState

	Arn                     pulumi.StringOutput                           `pulumi:"arn"`
	ContainerDefinitions    pulumi.StringOutput                           `pulumi:"containerDefinitions"`
	Cpu                     pulumi.StringPtrOutput                        `pulumi:"cpu"`
	EphemeralStorage        TaskDefinitionEphemeralStoragePtrOutput       `pulumi:"ephemeralStorage"`
	ExecutionRoleArn        pulumi.StringPtrOutput                        `pulumi:"executionRoleArn"`
	Family                  pulumi.StringOutput                           `pulumi:"family"`
	InferenceAccelerators   TaskDefinitionInferenceAcceleratorArrayOutput `pulumi:"inferenceAccelerators"`
	IpcMode                 pulumi.StringPtrOutput                        `pulumi:"ipcMode"`
	Memory                  pulumi.StringPtrOutput                        `pulumi:"memory"`
	NetworkMode             pulumi.StringOutput                           `pulumi:"networkMode"`
	PidMode                 pulumi.StringPtrOutput                        `pulumi:"pidMode"`
	PlacementConstraints    TaskDefinitionPlacementConstraintArrayOutput  `pulumi:"placementConstraints"`
	ProxyConfiguration      TaskDefinitionProxyConfigurationPtrOutput     `pulumi:"proxyConfiguration"`
	RequiresCompatibilities pulumi.StringArrayOutput                      `pulumi:"requiresCompatibilities"`
	Revision                pulumi.IntOutput                              `pulumi:"revision"`
	RuntimePlatform         TaskDefinitionRuntimePlatformPtrOutput        `pulumi:"runtimePlatform"`
	SkipDestroy             pulumi.BoolPtrOutput                          `pulumi:"skipDestroy"`
	Tags                    pulumi.StringMapOutput                        `pulumi:"tags"`
	TagsAll                 pulumi.StringMapOutput                        `pulumi:"tagsAll"`
	TaskRoleArn             pulumi.StringPtrOutput                        `pulumi:"taskRoleArn"`
	Volumes                 TaskDefinitionVolumeArrayOutput               `pulumi:"volumes"`
}

// NewTaskDefinition registers a new resource with the given unique name, arguments, and options.
func NewTaskDefinition(ctx *pulumi.Context,
	name string, args *TaskDefinitionArgs, opts ...pulumi.ResourceOption) (*TaskDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ContainerDefinitions == nil {
		return nil, errors.New("invalid value for required argument 'ContainerDefinitions'")
	}
	if args.Family == nil {
		return nil, errors.New("invalid value for required argument 'Family'")
	}
	var resource TaskDefinition
	err := ctx.RegisterResource("aws:ecs/taskDefinition:TaskDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTaskDefinition gets an existing TaskDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTaskDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TaskDefinitionState, opts ...pulumi.ResourceOption) (*TaskDefinition, error) {
	var resource TaskDefinition
	err := ctx.ReadResource("aws:ecs/taskDefinition:TaskDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TaskDefinition resources.
type taskDefinitionState struct {
	Arn                     *string                              `pulumi:"arn"`
	ContainerDefinitions    *string                              `pulumi:"containerDefinitions"`
	Cpu                     *string                              `pulumi:"cpu"`
	EphemeralStorage        *TaskDefinitionEphemeralStorage      `pulumi:"ephemeralStorage"`
	ExecutionRoleArn        *string                              `pulumi:"executionRoleArn"`
	Family                  *string                              `pulumi:"family"`
	InferenceAccelerators   []TaskDefinitionInferenceAccelerator `pulumi:"inferenceAccelerators"`
	IpcMode                 *string                              `pulumi:"ipcMode"`
	Memory                  *string                              `pulumi:"memory"`
	NetworkMode             *string                              `pulumi:"networkMode"`
	PidMode                 *string                              `pulumi:"pidMode"`
	PlacementConstraints    []TaskDefinitionPlacementConstraint  `pulumi:"placementConstraints"`
	ProxyConfiguration      *TaskDefinitionProxyConfiguration    `pulumi:"proxyConfiguration"`
	RequiresCompatibilities []string                             `pulumi:"requiresCompatibilities"`
	Revision                *int                                 `pulumi:"revision"`
	RuntimePlatform         *TaskDefinitionRuntimePlatform       `pulumi:"runtimePlatform"`
	SkipDestroy             *bool                                `pulumi:"skipDestroy"`
	Tags                    map[string]string                    `pulumi:"tags"`
	TagsAll                 map[string]string                    `pulumi:"tagsAll"`
	TaskRoleArn             *string                              `pulumi:"taskRoleArn"`
	Volumes                 []TaskDefinitionVolume               `pulumi:"volumes"`
}

type TaskDefinitionState struct {
	Arn                     pulumi.StringPtrInput
	ContainerDefinitions    pulumi.StringPtrInput
	Cpu                     pulumi.StringPtrInput
	EphemeralStorage        TaskDefinitionEphemeralStoragePtrInput
	ExecutionRoleArn        pulumi.StringPtrInput
	Family                  pulumi.StringPtrInput
	InferenceAccelerators   TaskDefinitionInferenceAcceleratorArrayInput
	IpcMode                 pulumi.StringPtrInput
	Memory                  pulumi.StringPtrInput
	NetworkMode             pulumi.StringPtrInput
	PidMode                 pulumi.StringPtrInput
	PlacementConstraints    TaskDefinitionPlacementConstraintArrayInput
	ProxyConfiguration      TaskDefinitionProxyConfigurationPtrInput
	RequiresCompatibilities pulumi.StringArrayInput
	Revision                pulumi.IntPtrInput
	RuntimePlatform         TaskDefinitionRuntimePlatformPtrInput
	SkipDestroy             pulumi.BoolPtrInput
	Tags                    pulumi.StringMapInput
	TagsAll                 pulumi.StringMapInput
	TaskRoleArn             pulumi.StringPtrInput
	Volumes                 TaskDefinitionVolumeArrayInput
}

func (TaskDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*taskDefinitionState)(nil)).Elem()
}

type taskDefinitionArgs struct {
	ContainerDefinitions    string                               `pulumi:"containerDefinitions"`
	Cpu                     *string                              `pulumi:"cpu"`
	EphemeralStorage        *TaskDefinitionEphemeralStorage      `pulumi:"ephemeralStorage"`
	ExecutionRoleArn        *string                              `pulumi:"executionRoleArn"`
	Family                  string                               `pulumi:"family"`
	InferenceAccelerators   []TaskDefinitionInferenceAccelerator `pulumi:"inferenceAccelerators"`
	IpcMode                 *string                              `pulumi:"ipcMode"`
	Memory                  *string                              `pulumi:"memory"`
	NetworkMode             *string                              `pulumi:"networkMode"`
	PidMode                 *string                              `pulumi:"pidMode"`
	PlacementConstraints    []TaskDefinitionPlacementConstraint  `pulumi:"placementConstraints"`
	ProxyConfiguration      *TaskDefinitionProxyConfiguration    `pulumi:"proxyConfiguration"`
	RequiresCompatibilities []string                             `pulumi:"requiresCompatibilities"`
	RuntimePlatform         *TaskDefinitionRuntimePlatform       `pulumi:"runtimePlatform"`
	SkipDestroy             *bool                                `pulumi:"skipDestroy"`
	Tags                    map[string]string                    `pulumi:"tags"`
	TaskRoleArn             *string                              `pulumi:"taskRoleArn"`
	Volumes                 []TaskDefinitionVolume               `pulumi:"volumes"`
}

// The set of arguments for constructing a TaskDefinition resource.
type TaskDefinitionArgs struct {
	ContainerDefinitions    pulumi.StringInput
	Cpu                     pulumi.StringPtrInput
	EphemeralStorage        TaskDefinitionEphemeralStoragePtrInput
	ExecutionRoleArn        pulumi.StringPtrInput
	Family                  pulumi.StringInput
	InferenceAccelerators   TaskDefinitionInferenceAcceleratorArrayInput
	IpcMode                 pulumi.StringPtrInput
	Memory                  pulumi.StringPtrInput
	NetworkMode             pulumi.StringPtrInput
	PidMode                 pulumi.StringPtrInput
	PlacementConstraints    TaskDefinitionPlacementConstraintArrayInput
	ProxyConfiguration      TaskDefinitionProxyConfigurationPtrInput
	RequiresCompatibilities pulumi.StringArrayInput
	RuntimePlatform         TaskDefinitionRuntimePlatformPtrInput
	SkipDestroy             pulumi.BoolPtrInput
	Tags                    pulumi.StringMapInput
	TaskRoleArn             pulumi.StringPtrInput
	Volumes                 TaskDefinitionVolumeArrayInput
}

func (TaskDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*taskDefinitionArgs)(nil)).Elem()
}

type TaskDefinitionInput interface {
	pulumi.Input

	ToTaskDefinitionOutput() TaskDefinitionOutput
	ToTaskDefinitionOutputWithContext(ctx context.Context) TaskDefinitionOutput
}

func (*TaskDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinition)(nil)).Elem()
}

func (i *TaskDefinition) ToTaskDefinitionOutput() TaskDefinitionOutput {
	return i.ToTaskDefinitionOutputWithContext(context.Background())
}

func (i *TaskDefinition) ToTaskDefinitionOutputWithContext(ctx context.Context) TaskDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionOutput)
}

// TaskDefinitionArrayInput is an input type that accepts TaskDefinitionArray and TaskDefinitionArrayOutput values.
// You can construct a concrete instance of `TaskDefinitionArrayInput` via:
//
//	TaskDefinitionArray{ TaskDefinitionArgs{...} }
type TaskDefinitionArrayInput interface {
	pulumi.Input

	ToTaskDefinitionArrayOutput() TaskDefinitionArrayOutput
	ToTaskDefinitionArrayOutputWithContext(context.Context) TaskDefinitionArrayOutput
}

type TaskDefinitionArray []TaskDefinitionInput

func (TaskDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TaskDefinition)(nil)).Elem()
}

func (i TaskDefinitionArray) ToTaskDefinitionArrayOutput() TaskDefinitionArrayOutput {
	return i.ToTaskDefinitionArrayOutputWithContext(context.Background())
}

func (i TaskDefinitionArray) ToTaskDefinitionArrayOutputWithContext(ctx context.Context) TaskDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionArrayOutput)
}

// TaskDefinitionMapInput is an input type that accepts TaskDefinitionMap and TaskDefinitionMapOutput values.
// You can construct a concrete instance of `TaskDefinitionMapInput` via:
//
//	TaskDefinitionMap{ "key": TaskDefinitionArgs{...} }
type TaskDefinitionMapInput interface {
	pulumi.Input

	ToTaskDefinitionMapOutput() TaskDefinitionMapOutput
	ToTaskDefinitionMapOutputWithContext(context.Context) TaskDefinitionMapOutput
}

type TaskDefinitionMap map[string]TaskDefinitionInput

func (TaskDefinitionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TaskDefinition)(nil)).Elem()
}

func (i TaskDefinitionMap) ToTaskDefinitionMapOutput() TaskDefinitionMapOutput {
	return i.ToTaskDefinitionMapOutputWithContext(context.Background())
}

func (i TaskDefinitionMap) ToTaskDefinitionMapOutputWithContext(ctx context.Context) TaskDefinitionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionMapOutput)
}

type TaskDefinitionOutput struct{ *pulumi.OutputState }

func (TaskDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinition)(nil)).Elem()
}

func (o TaskDefinitionOutput) ToTaskDefinitionOutput() TaskDefinitionOutput {
	return o
}

func (o TaskDefinitionOutput) ToTaskDefinitionOutputWithContext(ctx context.Context) TaskDefinitionOutput {
	return o
}

func (o TaskDefinitionOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskDefinition) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o TaskDefinitionOutput) ContainerDefinitions() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskDefinition) pulumi.StringOutput { return v.ContainerDefinitions }).(pulumi.StringOutput)
}

func (o TaskDefinitionOutput) Cpu() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskDefinition) pulumi.StringPtrOutput { return v.Cpu }).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionOutput) EphemeralStorage() TaskDefinitionEphemeralStoragePtrOutput {
	return o.ApplyT(func(v *TaskDefinition) TaskDefinitionEphemeralStoragePtrOutput { return v.EphemeralStorage }).(TaskDefinitionEphemeralStoragePtrOutput)
}

func (o TaskDefinitionOutput) ExecutionRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskDefinition) pulumi.StringPtrOutput { return v.ExecutionRoleArn }).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionOutput) Family() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskDefinition) pulumi.StringOutput { return v.Family }).(pulumi.StringOutput)
}

func (o TaskDefinitionOutput) InferenceAccelerators() TaskDefinitionInferenceAcceleratorArrayOutput {
	return o.ApplyT(func(v *TaskDefinition) TaskDefinitionInferenceAcceleratorArrayOutput { return v.InferenceAccelerators }).(TaskDefinitionInferenceAcceleratorArrayOutput)
}

func (o TaskDefinitionOutput) IpcMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskDefinition) pulumi.StringPtrOutput { return v.IpcMode }).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionOutput) Memory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskDefinition) pulumi.StringPtrOutput { return v.Memory }).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionOutput) NetworkMode() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskDefinition) pulumi.StringOutput { return v.NetworkMode }).(pulumi.StringOutput)
}

func (o TaskDefinitionOutput) PidMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskDefinition) pulumi.StringPtrOutput { return v.PidMode }).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionOutput) PlacementConstraints() TaskDefinitionPlacementConstraintArrayOutput {
	return o.ApplyT(func(v *TaskDefinition) TaskDefinitionPlacementConstraintArrayOutput { return v.PlacementConstraints }).(TaskDefinitionPlacementConstraintArrayOutput)
}

func (o TaskDefinitionOutput) ProxyConfiguration() TaskDefinitionProxyConfigurationPtrOutput {
	return o.ApplyT(func(v *TaskDefinition) TaskDefinitionProxyConfigurationPtrOutput { return v.ProxyConfiguration }).(TaskDefinitionProxyConfigurationPtrOutput)
}

func (o TaskDefinitionOutput) RequiresCompatibilities() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *TaskDefinition) pulumi.StringArrayOutput { return v.RequiresCompatibilities }).(pulumi.StringArrayOutput)
}

func (o TaskDefinitionOutput) Revision() pulumi.IntOutput {
	return o.ApplyT(func(v *TaskDefinition) pulumi.IntOutput { return v.Revision }).(pulumi.IntOutput)
}

func (o TaskDefinitionOutput) RuntimePlatform() TaskDefinitionRuntimePlatformPtrOutput {
	return o.ApplyT(func(v *TaskDefinition) TaskDefinitionRuntimePlatformPtrOutput { return v.RuntimePlatform }).(TaskDefinitionRuntimePlatformPtrOutput)
}

func (o TaskDefinitionOutput) SkipDestroy() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TaskDefinition) pulumi.BoolPtrOutput { return v.SkipDestroy }).(pulumi.BoolPtrOutput)
}

func (o TaskDefinitionOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TaskDefinition) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o TaskDefinitionOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TaskDefinition) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o TaskDefinitionOutput) TaskRoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskDefinition) pulumi.StringPtrOutput { return v.TaskRoleArn }).(pulumi.StringPtrOutput)
}

func (o TaskDefinitionOutput) Volumes() TaskDefinitionVolumeArrayOutput {
	return o.ApplyT(func(v *TaskDefinition) TaskDefinitionVolumeArrayOutput { return v.Volumes }).(TaskDefinitionVolumeArrayOutput)
}

type TaskDefinitionArrayOutput struct{ *pulumi.OutputState }

func (TaskDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TaskDefinition)(nil)).Elem()
}

func (o TaskDefinitionArrayOutput) ToTaskDefinitionArrayOutput() TaskDefinitionArrayOutput {
	return o
}

func (o TaskDefinitionArrayOutput) ToTaskDefinitionArrayOutputWithContext(ctx context.Context) TaskDefinitionArrayOutput {
	return o
}

func (o TaskDefinitionArrayOutput) Index(i pulumi.IntInput) TaskDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TaskDefinition {
		return vs[0].([]*TaskDefinition)[vs[1].(int)]
	}).(TaskDefinitionOutput)
}

type TaskDefinitionMapOutput struct{ *pulumi.OutputState }

func (TaskDefinitionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TaskDefinition)(nil)).Elem()
}

func (o TaskDefinitionMapOutput) ToTaskDefinitionMapOutput() TaskDefinitionMapOutput {
	return o
}

func (o TaskDefinitionMapOutput) ToTaskDefinitionMapOutputWithContext(ctx context.Context) TaskDefinitionMapOutput {
	return o
}

func (o TaskDefinitionMapOutput) MapIndex(k pulumi.StringInput) TaskDefinitionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TaskDefinition {
		return vs[0].(map[string]*TaskDefinition)[vs[1].(string)]
	}).(TaskDefinitionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionInput)(nil)).Elem(), &TaskDefinition{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionArrayInput)(nil)).Elem(), TaskDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskDefinitionMapInput)(nil)).Elem(), TaskDefinitionMap{})
	pulumi.RegisterOutputType(TaskDefinitionOutput{})
	pulumi.RegisterOutputType(TaskDefinitionArrayOutput{})
	pulumi.RegisterOutputType(TaskDefinitionMapOutput{})
}
