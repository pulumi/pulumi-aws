// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type TaskSet struct {
	pulumi.CustomResourceState

	Arn                        pulumi.StringOutput                        `pulumi:"arn"`
	CapacityProviderStrategies TaskSetCapacityProviderStrategyArrayOutput `pulumi:"capacityProviderStrategies"`
	Cluster                    pulumi.StringOutput                        `pulumi:"cluster"`
	ExternalId                 pulumi.StringOutput                        `pulumi:"externalId"`
	ForceDelete                pulumi.BoolPtrOutput                       `pulumi:"forceDelete"`
	LaunchType                 pulumi.StringOutput                        `pulumi:"launchType"`
	LoadBalancers              TaskSetLoadBalancerArrayOutput             `pulumi:"loadBalancers"`
	NetworkConfiguration       TaskSetNetworkConfigurationPtrOutput       `pulumi:"networkConfiguration"`
	PlatformVersion            pulumi.StringOutput                        `pulumi:"platformVersion"`
	Scale                      TaskSetScaleOutput                         `pulumi:"scale"`
	Service                    pulumi.StringOutput                        `pulumi:"service"`
	ServiceRegistries          TaskSetServiceRegistriesPtrOutput          `pulumi:"serviceRegistries"`
	StabilityStatus            pulumi.StringOutput                        `pulumi:"stabilityStatus"`
	Status                     pulumi.StringOutput                        `pulumi:"status"`
	Tags                       pulumi.StringMapOutput                     `pulumi:"tags"`
	TagsAll                    pulumi.StringMapOutput                     `pulumi:"tagsAll"`
	TaskDefinition             pulumi.StringOutput                        `pulumi:"taskDefinition"`
	TaskSetId                  pulumi.StringOutput                        `pulumi:"taskSetId"`
	WaitUntilStable            pulumi.BoolPtrOutput                       `pulumi:"waitUntilStable"`
	WaitUntilStableTimeout     pulumi.StringPtrOutput                     `pulumi:"waitUntilStableTimeout"`
}

// NewTaskSet registers a new resource with the given unique name, arguments, and options.
func NewTaskSet(ctx *pulumi.Context,
	name string, args *TaskSetArgs, opts ...pulumi.ResourceOption) (*TaskSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Cluster == nil {
		return nil, errors.New("invalid value for required argument 'Cluster'")
	}
	if args.Service == nil {
		return nil, errors.New("invalid value for required argument 'Service'")
	}
	if args.TaskDefinition == nil {
		return nil, errors.New("invalid value for required argument 'TaskDefinition'")
	}
	var resource TaskSet
	err := ctx.RegisterResource("aws:ecs/taskSet:TaskSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTaskSet gets an existing TaskSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTaskSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TaskSetState, opts ...pulumi.ResourceOption) (*TaskSet, error) {
	var resource TaskSet
	err := ctx.ReadResource("aws:ecs/taskSet:TaskSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TaskSet resources.
type taskSetState struct {
	Arn                        *string                           `pulumi:"arn"`
	CapacityProviderStrategies []TaskSetCapacityProviderStrategy `pulumi:"capacityProviderStrategies"`
	Cluster                    *string                           `pulumi:"cluster"`
	ExternalId                 *string                           `pulumi:"externalId"`
	ForceDelete                *bool                             `pulumi:"forceDelete"`
	LaunchType                 *string                           `pulumi:"launchType"`
	LoadBalancers              []TaskSetLoadBalancer             `pulumi:"loadBalancers"`
	NetworkConfiguration       *TaskSetNetworkConfiguration      `pulumi:"networkConfiguration"`
	PlatformVersion            *string                           `pulumi:"platformVersion"`
	Scale                      *TaskSetScale                     `pulumi:"scale"`
	Service                    *string                           `pulumi:"service"`
	ServiceRegistries          *TaskSetServiceRegistries         `pulumi:"serviceRegistries"`
	StabilityStatus            *string                           `pulumi:"stabilityStatus"`
	Status                     *string                           `pulumi:"status"`
	Tags                       map[string]string                 `pulumi:"tags"`
	TagsAll                    map[string]string                 `pulumi:"tagsAll"`
	TaskDefinition             *string                           `pulumi:"taskDefinition"`
	TaskSetId                  *string                           `pulumi:"taskSetId"`
	WaitUntilStable            *bool                             `pulumi:"waitUntilStable"`
	WaitUntilStableTimeout     *string                           `pulumi:"waitUntilStableTimeout"`
}

type TaskSetState struct {
	Arn                        pulumi.StringPtrInput
	CapacityProviderStrategies TaskSetCapacityProviderStrategyArrayInput
	Cluster                    pulumi.StringPtrInput
	ExternalId                 pulumi.StringPtrInput
	ForceDelete                pulumi.BoolPtrInput
	LaunchType                 pulumi.StringPtrInput
	LoadBalancers              TaskSetLoadBalancerArrayInput
	NetworkConfiguration       TaskSetNetworkConfigurationPtrInput
	PlatformVersion            pulumi.StringPtrInput
	Scale                      TaskSetScalePtrInput
	Service                    pulumi.StringPtrInput
	ServiceRegistries          TaskSetServiceRegistriesPtrInput
	StabilityStatus            pulumi.StringPtrInput
	Status                     pulumi.StringPtrInput
	Tags                       pulumi.StringMapInput
	TagsAll                    pulumi.StringMapInput
	TaskDefinition             pulumi.StringPtrInput
	TaskSetId                  pulumi.StringPtrInput
	WaitUntilStable            pulumi.BoolPtrInput
	WaitUntilStableTimeout     pulumi.StringPtrInput
}

func (TaskSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*taskSetState)(nil)).Elem()
}

type taskSetArgs struct {
	CapacityProviderStrategies []TaskSetCapacityProviderStrategy `pulumi:"capacityProviderStrategies"`
	Cluster                    string                            `pulumi:"cluster"`
	ExternalId                 *string                           `pulumi:"externalId"`
	ForceDelete                *bool                             `pulumi:"forceDelete"`
	LaunchType                 *string                           `pulumi:"launchType"`
	LoadBalancers              []TaskSetLoadBalancer             `pulumi:"loadBalancers"`
	NetworkConfiguration       *TaskSetNetworkConfiguration      `pulumi:"networkConfiguration"`
	PlatformVersion            *string                           `pulumi:"platformVersion"`
	Scale                      *TaskSetScale                     `pulumi:"scale"`
	Service                    string                            `pulumi:"service"`
	ServiceRegistries          *TaskSetServiceRegistries         `pulumi:"serviceRegistries"`
	Tags                       map[string]string                 `pulumi:"tags"`
	TaskDefinition             string                            `pulumi:"taskDefinition"`
	WaitUntilStable            *bool                             `pulumi:"waitUntilStable"`
	WaitUntilStableTimeout     *string                           `pulumi:"waitUntilStableTimeout"`
}

// The set of arguments for constructing a TaskSet resource.
type TaskSetArgs struct {
	CapacityProviderStrategies TaskSetCapacityProviderStrategyArrayInput
	Cluster                    pulumi.StringInput
	ExternalId                 pulumi.StringPtrInput
	ForceDelete                pulumi.BoolPtrInput
	LaunchType                 pulumi.StringPtrInput
	LoadBalancers              TaskSetLoadBalancerArrayInput
	NetworkConfiguration       TaskSetNetworkConfigurationPtrInput
	PlatformVersion            pulumi.StringPtrInput
	Scale                      TaskSetScalePtrInput
	Service                    pulumi.StringInput
	ServiceRegistries          TaskSetServiceRegistriesPtrInput
	Tags                       pulumi.StringMapInput
	TaskDefinition             pulumi.StringInput
	WaitUntilStable            pulumi.BoolPtrInput
	WaitUntilStableTimeout     pulumi.StringPtrInput
}

func (TaskSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*taskSetArgs)(nil)).Elem()
}

type TaskSetInput interface {
	pulumi.Input

	ToTaskSetOutput() TaskSetOutput
	ToTaskSetOutputWithContext(ctx context.Context) TaskSetOutput
}

func (*TaskSet) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskSet)(nil)).Elem()
}

func (i *TaskSet) ToTaskSetOutput() TaskSetOutput {
	return i.ToTaskSetOutputWithContext(context.Background())
}

func (i *TaskSet) ToTaskSetOutputWithContext(ctx context.Context) TaskSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskSetOutput)
}

// TaskSetArrayInput is an input type that accepts TaskSetArray and TaskSetArrayOutput values.
// You can construct a concrete instance of `TaskSetArrayInput` via:
//
//	TaskSetArray{ TaskSetArgs{...} }
type TaskSetArrayInput interface {
	pulumi.Input

	ToTaskSetArrayOutput() TaskSetArrayOutput
	ToTaskSetArrayOutputWithContext(context.Context) TaskSetArrayOutput
}

type TaskSetArray []TaskSetInput

func (TaskSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TaskSet)(nil)).Elem()
}

func (i TaskSetArray) ToTaskSetArrayOutput() TaskSetArrayOutput {
	return i.ToTaskSetArrayOutputWithContext(context.Background())
}

func (i TaskSetArray) ToTaskSetArrayOutputWithContext(ctx context.Context) TaskSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskSetArrayOutput)
}

// TaskSetMapInput is an input type that accepts TaskSetMap and TaskSetMapOutput values.
// You can construct a concrete instance of `TaskSetMapInput` via:
//
//	TaskSetMap{ "key": TaskSetArgs{...} }
type TaskSetMapInput interface {
	pulumi.Input

	ToTaskSetMapOutput() TaskSetMapOutput
	ToTaskSetMapOutputWithContext(context.Context) TaskSetMapOutput
}

type TaskSetMap map[string]TaskSetInput

func (TaskSetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TaskSet)(nil)).Elem()
}

func (i TaskSetMap) ToTaskSetMapOutput() TaskSetMapOutput {
	return i.ToTaskSetMapOutputWithContext(context.Background())
}

func (i TaskSetMap) ToTaskSetMapOutputWithContext(ctx context.Context) TaskSetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskSetMapOutput)
}

type TaskSetOutput struct{ *pulumi.OutputState }

func (TaskSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskSet)(nil)).Elem()
}

func (o TaskSetOutput) ToTaskSetOutput() TaskSetOutput {
	return o
}

func (o TaskSetOutput) ToTaskSetOutputWithContext(ctx context.Context) TaskSetOutput {
	return o
}

func (o TaskSetOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskSet) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o TaskSetOutput) CapacityProviderStrategies() TaskSetCapacityProviderStrategyArrayOutput {
	return o.ApplyT(func(v *TaskSet) TaskSetCapacityProviderStrategyArrayOutput { return v.CapacityProviderStrategies }).(TaskSetCapacityProviderStrategyArrayOutput)
}

func (o TaskSetOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskSet) pulumi.StringOutput { return v.Cluster }).(pulumi.StringOutput)
}

func (o TaskSetOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskSet) pulumi.StringOutput { return v.ExternalId }).(pulumi.StringOutput)
}

func (o TaskSetOutput) ForceDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TaskSet) pulumi.BoolPtrOutput { return v.ForceDelete }).(pulumi.BoolPtrOutput)
}

func (o TaskSetOutput) LaunchType() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskSet) pulumi.StringOutput { return v.LaunchType }).(pulumi.StringOutput)
}

func (o TaskSetOutput) LoadBalancers() TaskSetLoadBalancerArrayOutput {
	return o.ApplyT(func(v *TaskSet) TaskSetLoadBalancerArrayOutput { return v.LoadBalancers }).(TaskSetLoadBalancerArrayOutput)
}

func (o TaskSetOutput) NetworkConfiguration() TaskSetNetworkConfigurationPtrOutput {
	return o.ApplyT(func(v *TaskSet) TaskSetNetworkConfigurationPtrOutput { return v.NetworkConfiguration }).(TaskSetNetworkConfigurationPtrOutput)
}

func (o TaskSetOutput) PlatformVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskSet) pulumi.StringOutput { return v.PlatformVersion }).(pulumi.StringOutput)
}

func (o TaskSetOutput) Scale() TaskSetScaleOutput {
	return o.ApplyT(func(v *TaskSet) TaskSetScaleOutput { return v.Scale }).(TaskSetScaleOutput)
}

func (o TaskSetOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskSet) pulumi.StringOutput { return v.Service }).(pulumi.StringOutput)
}

func (o TaskSetOutput) ServiceRegistries() TaskSetServiceRegistriesPtrOutput {
	return o.ApplyT(func(v *TaskSet) TaskSetServiceRegistriesPtrOutput { return v.ServiceRegistries }).(TaskSetServiceRegistriesPtrOutput)
}

func (o TaskSetOutput) StabilityStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskSet) pulumi.StringOutput { return v.StabilityStatus }).(pulumi.StringOutput)
}

func (o TaskSetOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskSet) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

func (o TaskSetOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TaskSet) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o TaskSetOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *TaskSet) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o TaskSetOutput) TaskDefinition() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskSet) pulumi.StringOutput { return v.TaskDefinition }).(pulumi.StringOutput)
}

func (o TaskSetOutput) TaskSetId() pulumi.StringOutput {
	return o.ApplyT(func(v *TaskSet) pulumi.StringOutput { return v.TaskSetId }).(pulumi.StringOutput)
}

func (o TaskSetOutput) WaitUntilStable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *TaskSet) pulumi.BoolPtrOutput { return v.WaitUntilStable }).(pulumi.BoolPtrOutput)
}

func (o TaskSetOutput) WaitUntilStableTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TaskSet) pulumi.StringPtrOutput { return v.WaitUntilStableTimeout }).(pulumi.StringPtrOutput)
}

type TaskSetArrayOutput struct{ *pulumi.OutputState }

func (TaskSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TaskSet)(nil)).Elem()
}

func (o TaskSetArrayOutput) ToTaskSetArrayOutput() TaskSetArrayOutput {
	return o
}

func (o TaskSetArrayOutput) ToTaskSetArrayOutputWithContext(ctx context.Context) TaskSetArrayOutput {
	return o
}

func (o TaskSetArrayOutput) Index(i pulumi.IntInput) TaskSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TaskSet {
		return vs[0].([]*TaskSet)[vs[1].(int)]
	}).(TaskSetOutput)
}

type TaskSetMapOutput struct{ *pulumi.OutputState }

func (TaskSetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TaskSet)(nil)).Elem()
}

func (o TaskSetMapOutput) ToTaskSetMapOutput() TaskSetMapOutput {
	return o
}

func (o TaskSetMapOutput) ToTaskSetMapOutputWithContext(ctx context.Context) TaskSetMapOutput {
	return o
}

func (o TaskSetMapOutput) MapIndex(k pulumi.StringInput) TaskSetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TaskSet {
		return vs[0].(map[string]*TaskSet)[vs[1].(string)]
	}).(TaskSetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TaskSetInput)(nil)).Elem(), &TaskSet{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskSetArrayInput)(nil)).Elem(), TaskSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TaskSetMapInput)(nil)).Elem(), TaskSetMap{})
	pulumi.RegisterOutputType(TaskSetOutput{})
	pulumi.RegisterOutputType(TaskSetArrayOutput{})
	pulumi.RegisterOutputType(TaskSetMapOutput{})
}
