// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type CapacityProviderAutoScalingGroupProvider struct {
	AutoScalingGroupArn          string                                                  `pulumi:"autoScalingGroupArn"`
	ManagedScaling               *CapacityProviderAutoScalingGroupProviderManagedScaling `pulumi:"managedScaling"`
	ManagedTerminationProtection *string                                                 `pulumi:"managedTerminationProtection"`
}

// CapacityProviderAutoScalingGroupProviderInput is an input type that accepts CapacityProviderAutoScalingGroupProviderArgs and CapacityProviderAutoScalingGroupProviderOutput values.
// You can construct a concrete instance of `CapacityProviderAutoScalingGroupProviderInput` via:
//
// 		 CapacityProviderAutoScalingGroupProviderArgs{...}
//
type CapacityProviderAutoScalingGroupProviderInput interface {
	pulumi.Input

	ToCapacityProviderAutoScalingGroupProviderOutput() CapacityProviderAutoScalingGroupProviderOutput
	ToCapacityProviderAutoScalingGroupProviderOutputWithContext(context.Context) CapacityProviderAutoScalingGroupProviderOutput
}

type CapacityProviderAutoScalingGroupProviderArgs struct {
	AutoScalingGroupArn          pulumi.StringInput                                             `pulumi:"autoScalingGroupArn"`
	ManagedScaling               CapacityProviderAutoScalingGroupProviderManagedScalingPtrInput `pulumi:"managedScaling"`
	ManagedTerminationProtection pulumi.StringPtrInput                                          `pulumi:"managedTerminationProtection"`
}

func (CapacityProviderAutoScalingGroupProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CapacityProviderAutoScalingGroupProvider)(nil)).Elem()
}

func (i CapacityProviderAutoScalingGroupProviderArgs) ToCapacityProviderAutoScalingGroupProviderOutput() CapacityProviderAutoScalingGroupProviderOutput {
	return i.ToCapacityProviderAutoScalingGroupProviderOutputWithContext(context.Background())
}

func (i CapacityProviderAutoScalingGroupProviderArgs) ToCapacityProviderAutoScalingGroupProviderOutputWithContext(ctx context.Context) CapacityProviderAutoScalingGroupProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityProviderAutoScalingGroupProviderOutput)
}

func (i CapacityProviderAutoScalingGroupProviderArgs) ToCapacityProviderAutoScalingGroupProviderPtrOutput() CapacityProviderAutoScalingGroupProviderPtrOutput {
	return i.ToCapacityProviderAutoScalingGroupProviderPtrOutputWithContext(context.Background())
}

func (i CapacityProviderAutoScalingGroupProviderArgs) ToCapacityProviderAutoScalingGroupProviderPtrOutputWithContext(ctx context.Context) CapacityProviderAutoScalingGroupProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityProviderAutoScalingGroupProviderOutput).ToCapacityProviderAutoScalingGroupProviderPtrOutputWithContext(ctx)
}

// CapacityProviderAutoScalingGroupProviderPtrInput is an input type that accepts CapacityProviderAutoScalingGroupProviderArgs, CapacityProviderAutoScalingGroupProviderPtr and CapacityProviderAutoScalingGroupProviderPtrOutput values.
// You can construct a concrete instance of `CapacityProviderAutoScalingGroupProviderPtrInput` via:
//
// 		 CapacityProviderAutoScalingGroupProviderArgs{...}
//
//  or:
//
// 		 nil
//
type CapacityProviderAutoScalingGroupProviderPtrInput interface {
	pulumi.Input

	ToCapacityProviderAutoScalingGroupProviderPtrOutput() CapacityProviderAutoScalingGroupProviderPtrOutput
	ToCapacityProviderAutoScalingGroupProviderPtrOutputWithContext(context.Context) CapacityProviderAutoScalingGroupProviderPtrOutput
}

type capacityProviderAutoScalingGroupProviderPtrType CapacityProviderAutoScalingGroupProviderArgs

func CapacityProviderAutoScalingGroupProviderPtr(v *CapacityProviderAutoScalingGroupProviderArgs) CapacityProviderAutoScalingGroupProviderPtrInput {
	return (*capacityProviderAutoScalingGroupProviderPtrType)(v)
}

func (*capacityProviderAutoScalingGroupProviderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityProviderAutoScalingGroupProvider)(nil)).Elem()
}

func (i *capacityProviderAutoScalingGroupProviderPtrType) ToCapacityProviderAutoScalingGroupProviderPtrOutput() CapacityProviderAutoScalingGroupProviderPtrOutput {
	return i.ToCapacityProviderAutoScalingGroupProviderPtrOutputWithContext(context.Background())
}

func (i *capacityProviderAutoScalingGroupProviderPtrType) ToCapacityProviderAutoScalingGroupProviderPtrOutputWithContext(ctx context.Context) CapacityProviderAutoScalingGroupProviderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityProviderAutoScalingGroupProviderPtrOutput)
}

type CapacityProviderAutoScalingGroupProviderOutput struct{ *pulumi.OutputState }

func (CapacityProviderAutoScalingGroupProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapacityProviderAutoScalingGroupProvider)(nil)).Elem()
}

func (o CapacityProviderAutoScalingGroupProviderOutput) ToCapacityProviderAutoScalingGroupProviderOutput() CapacityProviderAutoScalingGroupProviderOutput {
	return o
}

func (o CapacityProviderAutoScalingGroupProviderOutput) ToCapacityProviderAutoScalingGroupProviderOutputWithContext(ctx context.Context) CapacityProviderAutoScalingGroupProviderOutput {
	return o
}

func (o CapacityProviderAutoScalingGroupProviderOutput) ToCapacityProviderAutoScalingGroupProviderPtrOutput() CapacityProviderAutoScalingGroupProviderPtrOutput {
	return o.ToCapacityProviderAutoScalingGroupProviderPtrOutputWithContext(context.Background())
}

func (o CapacityProviderAutoScalingGroupProviderOutput) ToCapacityProviderAutoScalingGroupProviderPtrOutputWithContext(ctx context.Context) CapacityProviderAutoScalingGroupProviderPtrOutput {
	return o.ApplyT(func(v CapacityProviderAutoScalingGroupProvider) *CapacityProviderAutoScalingGroupProvider {
		return &v
	}).(CapacityProviderAutoScalingGroupProviderPtrOutput)
}
func (o CapacityProviderAutoScalingGroupProviderOutput) AutoScalingGroupArn() pulumi.StringOutput {
	return o.ApplyT(func(v CapacityProviderAutoScalingGroupProvider) string { return v.AutoScalingGroupArn }).(pulumi.StringOutput)
}

func (o CapacityProviderAutoScalingGroupProviderOutput) ManagedScaling() CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput {
	return o.ApplyT(func(v CapacityProviderAutoScalingGroupProvider) *CapacityProviderAutoScalingGroupProviderManagedScaling {
		return v.ManagedScaling
	}).(CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput)
}

func (o CapacityProviderAutoScalingGroupProviderOutput) ManagedTerminationProtection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapacityProviderAutoScalingGroupProvider) *string { return v.ManagedTerminationProtection }).(pulumi.StringPtrOutput)
}

type CapacityProviderAutoScalingGroupProviderPtrOutput struct{ *pulumi.OutputState }

func (CapacityProviderAutoScalingGroupProviderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityProviderAutoScalingGroupProvider)(nil)).Elem()
}

func (o CapacityProviderAutoScalingGroupProviderPtrOutput) ToCapacityProviderAutoScalingGroupProviderPtrOutput() CapacityProviderAutoScalingGroupProviderPtrOutput {
	return o
}

func (o CapacityProviderAutoScalingGroupProviderPtrOutput) ToCapacityProviderAutoScalingGroupProviderPtrOutputWithContext(ctx context.Context) CapacityProviderAutoScalingGroupProviderPtrOutput {
	return o
}

func (o CapacityProviderAutoScalingGroupProviderPtrOutput) Elem() CapacityProviderAutoScalingGroupProviderOutput {
	return o.ApplyT(func(v *CapacityProviderAutoScalingGroupProvider) CapacityProviderAutoScalingGroupProvider { return *v }).(CapacityProviderAutoScalingGroupProviderOutput)
}

func (o CapacityProviderAutoScalingGroupProviderPtrOutput) AutoScalingGroupArn() pulumi.StringOutput {
	return o.ApplyT(func(v CapacityProviderAutoScalingGroupProvider) string { return v.AutoScalingGroupArn }).(pulumi.StringOutput)
}

func (o CapacityProviderAutoScalingGroupProviderPtrOutput) ManagedScaling() CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput {
	return o.ApplyT(func(v CapacityProviderAutoScalingGroupProvider) *CapacityProviderAutoScalingGroupProviderManagedScaling {
		return v.ManagedScaling
	}).(CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput)
}

func (o CapacityProviderAutoScalingGroupProviderPtrOutput) ManagedTerminationProtection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapacityProviderAutoScalingGroupProvider) *string { return v.ManagedTerminationProtection }).(pulumi.StringPtrOutput)
}

type CapacityProviderAutoScalingGroupProviderManagedScaling struct {
	MaximumScalingStepSize *int    `pulumi:"maximumScalingStepSize"`
	MinimumScalingStepSize *int    `pulumi:"minimumScalingStepSize"`
	Status                 *string `pulumi:"status"`
	TargetCapacity         *int    `pulumi:"targetCapacity"`
}

// CapacityProviderAutoScalingGroupProviderManagedScalingInput is an input type that accepts CapacityProviderAutoScalingGroupProviderManagedScalingArgs and CapacityProviderAutoScalingGroupProviderManagedScalingOutput values.
// You can construct a concrete instance of `CapacityProviderAutoScalingGroupProviderManagedScalingInput` via:
//
// 		 CapacityProviderAutoScalingGroupProviderManagedScalingArgs{...}
//
type CapacityProviderAutoScalingGroupProviderManagedScalingInput interface {
	pulumi.Input

	ToCapacityProviderAutoScalingGroupProviderManagedScalingOutput() CapacityProviderAutoScalingGroupProviderManagedScalingOutput
	ToCapacityProviderAutoScalingGroupProviderManagedScalingOutputWithContext(context.Context) CapacityProviderAutoScalingGroupProviderManagedScalingOutput
}

type CapacityProviderAutoScalingGroupProviderManagedScalingArgs struct {
	MaximumScalingStepSize pulumi.IntPtrInput    `pulumi:"maximumScalingStepSize"`
	MinimumScalingStepSize pulumi.IntPtrInput    `pulumi:"minimumScalingStepSize"`
	Status                 pulumi.StringPtrInput `pulumi:"status"`
	TargetCapacity         pulumi.IntPtrInput    `pulumi:"targetCapacity"`
}

func (CapacityProviderAutoScalingGroupProviderManagedScalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CapacityProviderAutoScalingGroupProviderManagedScaling)(nil)).Elem()
}

func (i CapacityProviderAutoScalingGroupProviderManagedScalingArgs) ToCapacityProviderAutoScalingGroupProviderManagedScalingOutput() CapacityProviderAutoScalingGroupProviderManagedScalingOutput {
	return i.ToCapacityProviderAutoScalingGroupProviderManagedScalingOutputWithContext(context.Background())
}

func (i CapacityProviderAutoScalingGroupProviderManagedScalingArgs) ToCapacityProviderAutoScalingGroupProviderManagedScalingOutputWithContext(ctx context.Context) CapacityProviderAutoScalingGroupProviderManagedScalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityProviderAutoScalingGroupProviderManagedScalingOutput)
}

func (i CapacityProviderAutoScalingGroupProviderManagedScalingArgs) ToCapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput() CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput {
	return i.ToCapacityProviderAutoScalingGroupProviderManagedScalingPtrOutputWithContext(context.Background())
}

func (i CapacityProviderAutoScalingGroupProviderManagedScalingArgs) ToCapacityProviderAutoScalingGroupProviderManagedScalingPtrOutputWithContext(ctx context.Context) CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityProviderAutoScalingGroupProviderManagedScalingOutput).ToCapacityProviderAutoScalingGroupProviderManagedScalingPtrOutputWithContext(ctx)
}

// CapacityProviderAutoScalingGroupProviderManagedScalingPtrInput is an input type that accepts CapacityProviderAutoScalingGroupProviderManagedScalingArgs, CapacityProviderAutoScalingGroupProviderManagedScalingPtr and CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput values.
// You can construct a concrete instance of `CapacityProviderAutoScalingGroupProviderManagedScalingPtrInput` via:
//
// 		 CapacityProviderAutoScalingGroupProviderManagedScalingArgs{...}
//
//  or:
//
// 		 nil
//
type CapacityProviderAutoScalingGroupProviderManagedScalingPtrInput interface {
	pulumi.Input

	ToCapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput() CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput
	ToCapacityProviderAutoScalingGroupProviderManagedScalingPtrOutputWithContext(context.Context) CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput
}

type capacityProviderAutoScalingGroupProviderManagedScalingPtrType CapacityProviderAutoScalingGroupProviderManagedScalingArgs

func CapacityProviderAutoScalingGroupProviderManagedScalingPtr(v *CapacityProviderAutoScalingGroupProviderManagedScalingArgs) CapacityProviderAutoScalingGroupProviderManagedScalingPtrInput {
	return (*capacityProviderAutoScalingGroupProviderManagedScalingPtrType)(v)
}

func (*capacityProviderAutoScalingGroupProviderManagedScalingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityProviderAutoScalingGroupProviderManagedScaling)(nil)).Elem()
}

func (i *capacityProviderAutoScalingGroupProviderManagedScalingPtrType) ToCapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput() CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput {
	return i.ToCapacityProviderAutoScalingGroupProviderManagedScalingPtrOutputWithContext(context.Background())
}

func (i *capacityProviderAutoScalingGroupProviderManagedScalingPtrType) ToCapacityProviderAutoScalingGroupProviderManagedScalingPtrOutputWithContext(ctx context.Context) CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput)
}

type CapacityProviderAutoScalingGroupProviderManagedScalingOutput struct{ *pulumi.OutputState }

func (CapacityProviderAutoScalingGroupProviderManagedScalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CapacityProviderAutoScalingGroupProviderManagedScaling)(nil)).Elem()
}

func (o CapacityProviderAutoScalingGroupProviderManagedScalingOutput) ToCapacityProviderAutoScalingGroupProviderManagedScalingOutput() CapacityProviderAutoScalingGroupProviderManagedScalingOutput {
	return o
}

func (o CapacityProviderAutoScalingGroupProviderManagedScalingOutput) ToCapacityProviderAutoScalingGroupProviderManagedScalingOutputWithContext(ctx context.Context) CapacityProviderAutoScalingGroupProviderManagedScalingOutput {
	return o
}

func (o CapacityProviderAutoScalingGroupProviderManagedScalingOutput) ToCapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput() CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput {
	return o.ToCapacityProviderAutoScalingGroupProviderManagedScalingPtrOutputWithContext(context.Background())
}

func (o CapacityProviderAutoScalingGroupProviderManagedScalingOutput) ToCapacityProviderAutoScalingGroupProviderManagedScalingPtrOutputWithContext(ctx context.Context) CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput {
	return o.ApplyT(func(v CapacityProviderAutoScalingGroupProviderManagedScaling) *CapacityProviderAutoScalingGroupProviderManagedScaling {
		return &v
	}).(CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput)
}
func (o CapacityProviderAutoScalingGroupProviderManagedScalingOutput) MaximumScalingStepSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CapacityProviderAutoScalingGroupProviderManagedScaling) *int { return v.MaximumScalingStepSize }).(pulumi.IntPtrOutput)
}

func (o CapacityProviderAutoScalingGroupProviderManagedScalingOutput) MinimumScalingStepSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CapacityProviderAutoScalingGroupProviderManagedScaling) *int { return v.MinimumScalingStepSize }).(pulumi.IntPtrOutput)
}

func (o CapacityProviderAutoScalingGroupProviderManagedScalingOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapacityProviderAutoScalingGroupProviderManagedScaling) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o CapacityProviderAutoScalingGroupProviderManagedScalingOutput) TargetCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CapacityProviderAutoScalingGroupProviderManagedScaling) *int { return v.TargetCapacity }).(pulumi.IntPtrOutput)
}

type CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput struct{ *pulumi.OutputState }

func (CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CapacityProviderAutoScalingGroupProviderManagedScaling)(nil)).Elem()
}

func (o CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput) ToCapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput() CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput {
	return o
}

func (o CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput) ToCapacityProviderAutoScalingGroupProviderManagedScalingPtrOutputWithContext(ctx context.Context) CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput {
	return o
}

func (o CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput) Elem() CapacityProviderAutoScalingGroupProviderManagedScalingOutput {
	return o.ApplyT(func(v *CapacityProviderAutoScalingGroupProviderManagedScaling) CapacityProviderAutoScalingGroupProviderManagedScaling {
		return *v
	}).(CapacityProviderAutoScalingGroupProviderManagedScalingOutput)
}

func (o CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput) MaximumScalingStepSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CapacityProviderAutoScalingGroupProviderManagedScaling) *int { return v.MaximumScalingStepSize }).(pulumi.IntPtrOutput)
}

func (o CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput) MinimumScalingStepSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CapacityProviderAutoScalingGroupProviderManagedScaling) *int { return v.MinimumScalingStepSize }).(pulumi.IntPtrOutput)
}

func (o CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CapacityProviderAutoScalingGroupProviderManagedScaling) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput) TargetCapacity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CapacityProviderAutoScalingGroupProviderManagedScaling) *int { return v.TargetCapacity }).(pulumi.IntPtrOutput)
}

type ClusterDefaultCapacityProviderStrategy struct {
	Base             *int   `pulumi:"base"`
	CapacityProvider string `pulumi:"capacityProvider"`
	Weight           *int   `pulumi:"weight"`
}

// ClusterDefaultCapacityProviderStrategyInput is an input type that accepts ClusterDefaultCapacityProviderStrategyArgs and ClusterDefaultCapacityProviderStrategyOutput values.
// You can construct a concrete instance of `ClusterDefaultCapacityProviderStrategyInput` via:
//
// 		 ClusterDefaultCapacityProviderStrategyArgs{...}
//
type ClusterDefaultCapacityProviderStrategyInput interface {
	pulumi.Input

	ToClusterDefaultCapacityProviderStrategyOutput() ClusterDefaultCapacityProviderStrategyOutput
	ToClusterDefaultCapacityProviderStrategyOutputWithContext(context.Context) ClusterDefaultCapacityProviderStrategyOutput
}

type ClusterDefaultCapacityProviderStrategyArgs struct {
	Base             pulumi.IntPtrInput `pulumi:"base"`
	CapacityProvider pulumi.StringInput `pulumi:"capacityProvider"`
	Weight           pulumi.IntPtrInput `pulumi:"weight"`
}

func (ClusterDefaultCapacityProviderStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDefaultCapacityProviderStrategy)(nil)).Elem()
}

func (i ClusterDefaultCapacityProviderStrategyArgs) ToClusterDefaultCapacityProviderStrategyOutput() ClusterDefaultCapacityProviderStrategyOutput {
	return i.ToClusterDefaultCapacityProviderStrategyOutputWithContext(context.Background())
}

func (i ClusterDefaultCapacityProviderStrategyArgs) ToClusterDefaultCapacityProviderStrategyOutputWithContext(ctx context.Context) ClusterDefaultCapacityProviderStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDefaultCapacityProviderStrategyOutput)
}

// ClusterDefaultCapacityProviderStrategyArrayInput is an input type that accepts ClusterDefaultCapacityProviderStrategyArray and ClusterDefaultCapacityProviderStrategyArrayOutput values.
// You can construct a concrete instance of `ClusterDefaultCapacityProviderStrategyArrayInput` via:
//
// 		 ClusterDefaultCapacityProviderStrategyArray{ ClusterDefaultCapacityProviderStrategyArgs{...} }
//
type ClusterDefaultCapacityProviderStrategyArrayInput interface {
	pulumi.Input

	ToClusterDefaultCapacityProviderStrategyArrayOutput() ClusterDefaultCapacityProviderStrategyArrayOutput
	ToClusterDefaultCapacityProviderStrategyArrayOutputWithContext(context.Context) ClusterDefaultCapacityProviderStrategyArrayOutput
}

type ClusterDefaultCapacityProviderStrategyArray []ClusterDefaultCapacityProviderStrategyInput

func (ClusterDefaultCapacityProviderStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterDefaultCapacityProviderStrategy)(nil)).Elem()
}

func (i ClusterDefaultCapacityProviderStrategyArray) ToClusterDefaultCapacityProviderStrategyArrayOutput() ClusterDefaultCapacityProviderStrategyArrayOutput {
	return i.ToClusterDefaultCapacityProviderStrategyArrayOutputWithContext(context.Background())
}

func (i ClusterDefaultCapacityProviderStrategyArray) ToClusterDefaultCapacityProviderStrategyArrayOutputWithContext(ctx context.Context) ClusterDefaultCapacityProviderStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterDefaultCapacityProviderStrategyArrayOutput)
}

type ClusterDefaultCapacityProviderStrategyOutput struct{ *pulumi.OutputState }

func (ClusterDefaultCapacityProviderStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterDefaultCapacityProviderStrategy)(nil)).Elem()
}

func (o ClusterDefaultCapacityProviderStrategyOutput) ToClusterDefaultCapacityProviderStrategyOutput() ClusterDefaultCapacityProviderStrategyOutput {
	return o
}

func (o ClusterDefaultCapacityProviderStrategyOutput) ToClusterDefaultCapacityProviderStrategyOutputWithContext(ctx context.Context) ClusterDefaultCapacityProviderStrategyOutput {
	return o
}

func (o ClusterDefaultCapacityProviderStrategyOutput) Base() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterDefaultCapacityProviderStrategy) *int { return v.Base }).(pulumi.IntPtrOutput)
}

func (o ClusterDefaultCapacityProviderStrategyOutput) CapacityProvider() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterDefaultCapacityProviderStrategy) string { return v.CapacityProvider }).(pulumi.StringOutput)
}

func (o ClusterDefaultCapacityProviderStrategyOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterDefaultCapacityProviderStrategy) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type ClusterDefaultCapacityProviderStrategyArrayOutput struct{ *pulumi.OutputState }

func (ClusterDefaultCapacityProviderStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterDefaultCapacityProviderStrategy)(nil)).Elem()
}

func (o ClusterDefaultCapacityProviderStrategyArrayOutput) ToClusterDefaultCapacityProviderStrategyArrayOutput() ClusterDefaultCapacityProviderStrategyArrayOutput {
	return o
}

func (o ClusterDefaultCapacityProviderStrategyArrayOutput) ToClusterDefaultCapacityProviderStrategyArrayOutputWithContext(ctx context.Context) ClusterDefaultCapacityProviderStrategyArrayOutput {
	return o
}

func (o ClusterDefaultCapacityProviderStrategyArrayOutput) Index(i pulumi.IntInput) ClusterDefaultCapacityProviderStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterDefaultCapacityProviderStrategy {
		return vs[0].([]ClusterDefaultCapacityProviderStrategy)[vs[1].(int)]
	}).(ClusterDefaultCapacityProviderStrategyOutput)
}

type ClusterSetting struct {
	// The name of the cluster (up to 255 letters, numbers, hyphens, and underscores)
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// ClusterSettingInput is an input type that accepts ClusterSettingArgs and ClusterSettingOutput values.
// You can construct a concrete instance of `ClusterSettingInput` via:
//
// 		 ClusterSettingArgs{...}
//
type ClusterSettingInput interface {
	pulumi.Input

	ToClusterSettingOutput() ClusterSettingOutput
	ToClusterSettingOutputWithContext(context.Context) ClusterSettingOutput
}

type ClusterSettingArgs struct {
	// The name of the cluster (up to 255 letters, numbers, hyphens, and underscores)
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ClusterSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSetting)(nil)).Elem()
}

func (i ClusterSettingArgs) ToClusterSettingOutput() ClusterSettingOutput {
	return i.ToClusterSettingOutputWithContext(context.Background())
}

func (i ClusterSettingArgs) ToClusterSettingOutputWithContext(ctx context.Context) ClusterSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSettingOutput)
}

// ClusterSettingArrayInput is an input type that accepts ClusterSettingArray and ClusterSettingArrayOutput values.
// You can construct a concrete instance of `ClusterSettingArrayInput` via:
//
// 		 ClusterSettingArray{ ClusterSettingArgs{...} }
//
type ClusterSettingArrayInput interface {
	pulumi.Input

	ToClusterSettingArrayOutput() ClusterSettingArrayOutput
	ToClusterSettingArrayOutputWithContext(context.Context) ClusterSettingArrayOutput
}

type ClusterSettingArray []ClusterSettingInput

func (ClusterSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSetting)(nil)).Elem()
}

func (i ClusterSettingArray) ToClusterSettingArrayOutput() ClusterSettingArrayOutput {
	return i.ToClusterSettingArrayOutputWithContext(context.Background())
}

func (i ClusterSettingArray) ToClusterSettingArrayOutputWithContext(ctx context.Context) ClusterSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterSettingArrayOutput)
}

type ClusterSettingOutput struct{ *pulumi.OutputState }

func (ClusterSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterSetting)(nil)).Elem()
}

func (o ClusterSettingOutput) ToClusterSettingOutput() ClusterSettingOutput {
	return o
}

func (o ClusterSettingOutput) ToClusterSettingOutputWithContext(ctx context.Context) ClusterSettingOutput {
	return o
}

// The name of the cluster (up to 255 letters, numbers, hyphens, and underscores)
func (o ClusterSettingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSetting) string { return v.Name }).(pulumi.StringOutput)
}

func (o ClusterSettingOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ClusterSetting) string { return v.Value }).(pulumi.StringOutput)
}

type ClusterSettingArrayOutput struct{ *pulumi.OutputState }

func (ClusterSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClusterSetting)(nil)).Elem()
}

func (o ClusterSettingArrayOutput) ToClusterSettingArrayOutput() ClusterSettingArrayOutput {
	return o
}

func (o ClusterSettingArrayOutput) ToClusterSettingArrayOutputWithContext(ctx context.Context) ClusterSettingArrayOutput {
	return o
}

func (o ClusterSettingArrayOutput) Index(i pulumi.IntInput) ClusterSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClusterSetting {
		return vs[0].([]ClusterSetting)[vs[1].(int)]
	}).(ClusterSettingOutput)
}

type ServiceCapacityProviderStrategy struct {
	Base             *int   `pulumi:"base"`
	CapacityProvider string `pulumi:"capacityProvider"`
	Weight           *int   `pulumi:"weight"`
}

// ServiceCapacityProviderStrategyInput is an input type that accepts ServiceCapacityProviderStrategyArgs and ServiceCapacityProviderStrategyOutput values.
// You can construct a concrete instance of `ServiceCapacityProviderStrategyInput` via:
//
// 		 ServiceCapacityProviderStrategyArgs{...}
//
type ServiceCapacityProviderStrategyInput interface {
	pulumi.Input

	ToServiceCapacityProviderStrategyOutput() ServiceCapacityProviderStrategyOutput
	ToServiceCapacityProviderStrategyOutputWithContext(context.Context) ServiceCapacityProviderStrategyOutput
}

type ServiceCapacityProviderStrategyArgs struct {
	Base             pulumi.IntPtrInput `pulumi:"base"`
	CapacityProvider pulumi.StringInput `pulumi:"capacityProvider"`
	Weight           pulumi.IntPtrInput `pulumi:"weight"`
}

func (ServiceCapacityProviderStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCapacityProviderStrategy)(nil)).Elem()
}

func (i ServiceCapacityProviderStrategyArgs) ToServiceCapacityProviderStrategyOutput() ServiceCapacityProviderStrategyOutput {
	return i.ToServiceCapacityProviderStrategyOutputWithContext(context.Background())
}

func (i ServiceCapacityProviderStrategyArgs) ToServiceCapacityProviderStrategyOutputWithContext(ctx context.Context) ServiceCapacityProviderStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCapacityProviderStrategyOutput)
}

// ServiceCapacityProviderStrategyArrayInput is an input type that accepts ServiceCapacityProviderStrategyArray and ServiceCapacityProviderStrategyArrayOutput values.
// You can construct a concrete instance of `ServiceCapacityProviderStrategyArrayInput` via:
//
// 		 ServiceCapacityProviderStrategyArray{ ServiceCapacityProviderStrategyArgs{...} }
//
type ServiceCapacityProviderStrategyArrayInput interface {
	pulumi.Input

	ToServiceCapacityProviderStrategyArrayOutput() ServiceCapacityProviderStrategyArrayOutput
	ToServiceCapacityProviderStrategyArrayOutputWithContext(context.Context) ServiceCapacityProviderStrategyArrayOutput
}

type ServiceCapacityProviderStrategyArray []ServiceCapacityProviderStrategyInput

func (ServiceCapacityProviderStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceCapacityProviderStrategy)(nil)).Elem()
}

func (i ServiceCapacityProviderStrategyArray) ToServiceCapacityProviderStrategyArrayOutput() ServiceCapacityProviderStrategyArrayOutput {
	return i.ToServiceCapacityProviderStrategyArrayOutputWithContext(context.Background())
}

func (i ServiceCapacityProviderStrategyArray) ToServiceCapacityProviderStrategyArrayOutputWithContext(ctx context.Context) ServiceCapacityProviderStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCapacityProviderStrategyArrayOutput)
}

type ServiceCapacityProviderStrategyOutput struct{ *pulumi.OutputState }

func (ServiceCapacityProviderStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceCapacityProviderStrategy)(nil)).Elem()
}

func (o ServiceCapacityProviderStrategyOutput) ToServiceCapacityProviderStrategyOutput() ServiceCapacityProviderStrategyOutput {
	return o
}

func (o ServiceCapacityProviderStrategyOutput) ToServiceCapacityProviderStrategyOutputWithContext(ctx context.Context) ServiceCapacityProviderStrategyOutput {
	return o
}

func (o ServiceCapacityProviderStrategyOutput) Base() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceCapacityProviderStrategy) *int { return v.Base }).(pulumi.IntPtrOutput)
}

func (o ServiceCapacityProviderStrategyOutput) CapacityProvider() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceCapacityProviderStrategy) string { return v.CapacityProvider }).(pulumi.StringOutput)
}

func (o ServiceCapacityProviderStrategyOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceCapacityProviderStrategy) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type ServiceCapacityProviderStrategyArrayOutput struct{ *pulumi.OutputState }

func (ServiceCapacityProviderStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceCapacityProviderStrategy)(nil)).Elem()
}

func (o ServiceCapacityProviderStrategyArrayOutput) ToServiceCapacityProviderStrategyArrayOutput() ServiceCapacityProviderStrategyArrayOutput {
	return o
}

func (o ServiceCapacityProviderStrategyArrayOutput) ToServiceCapacityProviderStrategyArrayOutputWithContext(ctx context.Context) ServiceCapacityProviderStrategyArrayOutput {
	return o
}

func (o ServiceCapacityProviderStrategyArrayOutput) Index(i pulumi.IntInput) ServiceCapacityProviderStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceCapacityProviderStrategy {
		return vs[0].([]ServiceCapacityProviderStrategy)[vs[1].(int)]
	}).(ServiceCapacityProviderStrategyOutput)
}

type ServiceDeploymentController struct {
	Type *string `pulumi:"type"`
}

// ServiceDeploymentControllerInput is an input type that accepts ServiceDeploymentControllerArgs and ServiceDeploymentControllerOutput values.
// You can construct a concrete instance of `ServiceDeploymentControllerInput` via:
//
// 		 ServiceDeploymentControllerArgs{...}
//
type ServiceDeploymentControllerInput interface {
	pulumi.Input

	ToServiceDeploymentControllerOutput() ServiceDeploymentControllerOutput
	ToServiceDeploymentControllerOutputWithContext(context.Context) ServiceDeploymentControllerOutput
}

type ServiceDeploymentControllerArgs struct {
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ServiceDeploymentControllerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDeploymentController)(nil)).Elem()
}

func (i ServiceDeploymentControllerArgs) ToServiceDeploymentControllerOutput() ServiceDeploymentControllerOutput {
	return i.ToServiceDeploymentControllerOutputWithContext(context.Background())
}

func (i ServiceDeploymentControllerArgs) ToServiceDeploymentControllerOutputWithContext(ctx context.Context) ServiceDeploymentControllerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDeploymentControllerOutput)
}

func (i ServiceDeploymentControllerArgs) ToServiceDeploymentControllerPtrOutput() ServiceDeploymentControllerPtrOutput {
	return i.ToServiceDeploymentControllerPtrOutputWithContext(context.Background())
}

func (i ServiceDeploymentControllerArgs) ToServiceDeploymentControllerPtrOutputWithContext(ctx context.Context) ServiceDeploymentControllerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDeploymentControllerOutput).ToServiceDeploymentControllerPtrOutputWithContext(ctx)
}

// ServiceDeploymentControllerPtrInput is an input type that accepts ServiceDeploymentControllerArgs, ServiceDeploymentControllerPtr and ServiceDeploymentControllerPtrOutput values.
// You can construct a concrete instance of `ServiceDeploymentControllerPtrInput` via:
//
// 		 ServiceDeploymentControllerArgs{...}
//
//  or:
//
// 		 nil
//
type ServiceDeploymentControllerPtrInput interface {
	pulumi.Input

	ToServiceDeploymentControllerPtrOutput() ServiceDeploymentControllerPtrOutput
	ToServiceDeploymentControllerPtrOutputWithContext(context.Context) ServiceDeploymentControllerPtrOutput
}

type serviceDeploymentControllerPtrType ServiceDeploymentControllerArgs

func ServiceDeploymentControllerPtr(v *ServiceDeploymentControllerArgs) ServiceDeploymentControllerPtrInput {
	return (*serviceDeploymentControllerPtrType)(v)
}

func (*serviceDeploymentControllerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDeploymentController)(nil)).Elem()
}

func (i *serviceDeploymentControllerPtrType) ToServiceDeploymentControllerPtrOutput() ServiceDeploymentControllerPtrOutput {
	return i.ToServiceDeploymentControllerPtrOutputWithContext(context.Background())
}

func (i *serviceDeploymentControllerPtrType) ToServiceDeploymentControllerPtrOutputWithContext(ctx context.Context) ServiceDeploymentControllerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDeploymentControllerPtrOutput)
}

type ServiceDeploymentControllerOutput struct{ *pulumi.OutputState }

func (ServiceDeploymentControllerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDeploymentController)(nil)).Elem()
}

func (o ServiceDeploymentControllerOutput) ToServiceDeploymentControllerOutput() ServiceDeploymentControllerOutput {
	return o
}

func (o ServiceDeploymentControllerOutput) ToServiceDeploymentControllerOutputWithContext(ctx context.Context) ServiceDeploymentControllerOutput {
	return o
}

func (o ServiceDeploymentControllerOutput) ToServiceDeploymentControllerPtrOutput() ServiceDeploymentControllerPtrOutput {
	return o.ToServiceDeploymentControllerPtrOutputWithContext(context.Background())
}

func (o ServiceDeploymentControllerOutput) ToServiceDeploymentControllerPtrOutputWithContext(ctx context.Context) ServiceDeploymentControllerPtrOutput {
	return o.ApplyT(func(v ServiceDeploymentController) *ServiceDeploymentController {
		return &v
	}).(ServiceDeploymentControllerPtrOutput)
}
func (o ServiceDeploymentControllerOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDeploymentController) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ServiceDeploymentControllerPtrOutput struct{ *pulumi.OutputState }

func (ServiceDeploymentControllerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDeploymentController)(nil)).Elem()
}

func (o ServiceDeploymentControllerPtrOutput) ToServiceDeploymentControllerPtrOutput() ServiceDeploymentControllerPtrOutput {
	return o
}

func (o ServiceDeploymentControllerPtrOutput) ToServiceDeploymentControllerPtrOutputWithContext(ctx context.Context) ServiceDeploymentControllerPtrOutput {
	return o
}

func (o ServiceDeploymentControllerPtrOutput) Elem() ServiceDeploymentControllerOutput {
	return o.ApplyT(func(v *ServiceDeploymentController) ServiceDeploymentController { return *v }).(ServiceDeploymentControllerOutput)
}

func (o ServiceDeploymentControllerPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDeploymentController) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ServiceLoadBalancer struct {
	ContainerName  string  `pulumi:"containerName"`
	ContainerPort  int     `pulumi:"containerPort"`
	ElbName        *string `pulumi:"elbName"`
	TargetGroupArn *string `pulumi:"targetGroupArn"`
}

// ServiceLoadBalancerInput is an input type that accepts ServiceLoadBalancerArgs and ServiceLoadBalancerOutput values.
// You can construct a concrete instance of `ServiceLoadBalancerInput` via:
//
// 		 ServiceLoadBalancerArgs{...}
//
type ServiceLoadBalancerInput interface {
	pulumi.Input

	ToServiceLoadBalancerOutput() ServiceLoadBalancerOutput
	ToServiceLoadBalancerOutputWithContext(context.Context) ServiceLoadBalancerOutput
}

type ServiceLoadBalancerArgs struct {
	ContainerName  pulumi.StringInput    `pulumi:"containerName"`
	ContainerPort  pulumi.IntInput       `pulumi:"containerPort"`
	ElbName        pulumi.StringPtrInput `pulumi:"elbName"`
	TargetGroupArn pulumi.StringPtrInput `pulumi:"targetGroupArn"`
}

func (ServiceLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLoadBalancer)(nil)).Elem()
}

func (i ServiceLoadBalancerArgs) ToServiceLoadBalancerOutput() ServiceLoadBalancerOutput {
	return i.ToServiceLoadBalancerOutputWithContext(context.Background())
}

func (i ServiceLoadBalancerArgs) ToServiceLoadBalancerOutputWithContext(ctx context.Context) ServiceLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLoadBalancerOutput)
}

// ServiceLoadBalancerArrayInput is an input type that accepts ServiceLoadBalancerArray and ServiceLoadBalancerArrayOutput values.
// You can construct a concrete instance of `ServiceLoadBalancerArrayInput` via:
//
// 		 ServiceLoadBalancerArray{ ServiceLoadBalancerArgs{...} }
//
type ServiceLoadBalancerArrayInput interface {
	pulumi.Input

	ToServiceLoadBalancerArrayOutput() ServiceLoadBalancerArrayOutput
	ToServiceLoadBalancerArrayOutputWithContext(context.Context) ServiceLoadBalancerArrayOutput
}

type ServiceLoadBalancerArray []ServiceLoadBalancerInput

func (ServiceLoadBalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceLoadBalancer)(nil)).Elem()
}

func (i ServiceLoadBalancerArray) ToServiceLoadBalancerArrayOutput() ServiceLoadBalancerArrayOutput {
	return i.ToServiceLoadBalancerArrayOutputWithContext(context.Background())
}

func (i ServiceLoadBalancerArray) ToServiceLoadBalancerArrayOutputWithContext(ctx context.Context) ServiceLoadBalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLoadBalancerArrayOutput)
}

type ServiceLoadBalancerOutput struct{ *pulumi.OutputState }

func (ServiceLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLoadBalancer)(nil)).Elem()
}

func (o ServiceLoadBalancerOutput) ToServiceLoadBalancerOutput() ServiceLoadBalancerOutput {
	return o
}

func (o ServiceLoadBalancerOutput) ToServiceLoadBalancerOutputWithContext(ctx context.Context) ServiceLoadBalancerOutput {
	return o
}

func (o ServiceLoadBalancerOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceLoadBalancer) string { return v.ContainerName }).(pulumi.StringOutput)
}

func (o ServiceLoadBalancerOutput) ContainerPort() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceLoadBalancer) int { return v.ContainerPort }).(pulumi.IntOutput)
}

func (o ServiceLoadBalancerOutput) ElbName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceLoadBalancer) *string { return v.ElbName }).(pulumi.StringPtrOutput)
}

func (o ServiceLoadBalancerOutput) TargetGroupArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceLoadBalancer) *string { return v.TargetGroupArn }).(pulumi.StringPtrOutput)
}

type ServiceLoadBalancerArrayOutput struct{ *pulumi.OutputState }

func (ServiceLoadBalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceLoadBalancer)(nil)).Elem()
}

func (o ServiceLoadBalancerArrayOutput) ToServiceLoadBalancerArrayOutput() ServiceLoadBalancerArrayOutput {
	return o
}

func (o ServiceLoadBalancerArrayOutput) ToServiceLoadBalancerArrayOutputWithContext(ctx context.Context) ServiceLoadBalancerArrayOutput {
	return o
}

func (o ServiceLoadBalancerArrayOutput) Index(i pulumi.IntInput) ServiceLoadBalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceLoadBalancer {
		return vs[0].([]ServiceLoadBalancer)[vs[1].(int)]
	}).(ServiceLoadBalancerOutput)
}

type ServiceNetworkConfiguration struct {
	AssignPublicIp *bool    `pulumi:"assignPublicIp"`
	SecurityGroups []string `pulumi:"securityGroups"`
	Subnets        []string `pulumi:"subnets"`
}

// ServiceNetworkConfigurationInput is an input type that accepts ServiceNetworkConfigurationArgs and ServiceNetworkConfigurationOutput values.
// You can construct a concrete instance of `ServiceNetworkConfigurationInput` via:
//
// 		 ServiceNetworkConfigurationArgs{...}
//
type ServiceNetworkConfigurationInput interface {
	pulumi.Input

	ToServiceNetworkConfigurationOutput() ServiceNetworkConfigurationOutput
	ToServiceNetworkConfigurationOutputWithContext(context.Context) ServiceNetworkConfigurationOutput
}

type ServiceNetworkConfigurationArgs struct {
	AssignPublicIp pulumi.BoolPtrInput     `pulumi:"assignPublicIp"`
	SecurityGroups pulumi.StringArrayInput `pulumi:"securityGroups"`
	Subnets        pulumi.StringArrayInput `pulumi:"subnets"`
}

func (ServiceNetworkConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNetworkConfiguration)(nil)).Elem()
}

func (i ServiceNetworkConfigurationArgs) ToServiceNetworkConfigurationOutput() ServiceNetworkConfigurationOutput {
	return i.ToServiceNetworkConfigurationOutputWithContext(context.Background())
}

func (i ServiceNetworkConfigurationArgs) ToServiceNetworkConfigurationOutputWithContext(ctx context.Context) ServiceNetworkConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkConfigurationOutput)
}

func (i ServiceNetworkConfigurationArgs) ToServiceNetworkConfigurationPtrOutput() ServiceNetworkConfigurationPtrOutput {
	return i.ToServiceNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i ServiceNetworkConfigurationArgs) ToServiceNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServiceNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkConfigurationOutput).ToServiceNetworkConfigurationPtrOutputWithContext(ctx)
}

// ServiceNetworkConfigurationPtrInput is an input type that accepts ServiceNetworkConfigurationArgs, ServiceNetworkConfigurationPtr and ServiceNetworkConfigurationPtrOutput values.
// You can construct a concrete instance of `ServiceNetworkConfigurationPtrInput` via:
//
// 		 ServiceNetworkConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type ServiceNetworkConfigurationPtrInput interface {
	pulumi.Input

	ToServiceNetworkConfigurationPtrOutput() ServiceNetworkConfigurationPtrOutput
	ToServiceNetworkConfigurationPtrOutputWithContext(context.Context) ServiceNetworkConfigurationPtrOutput
}

type serviceNetworkConfigurationPtrType ServiceNetworkConfigurationArgs

func ServiceNetworkConfigurationPtr(v *ServiceNetworkConfigurationArgs) ServiceNetworkConfigurationPtrInput {
	return (*serviceNetworkConfigurationPtrType)(v)
}

func (*serviceNetworkConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNetworkConfiguration)(nil)).Elem()
}

func (i *serviceNetworkConfigurationPtrType) ToServiceNetworkConfigurationPtrOutput() ServiceNetworkConfigurationPtrOutput {
	return i.ToServiceNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (i *serviceNetworkConfigurationPtrType) ToServiceNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServiceNetworkConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceNetworkConfigurationPtrOutput)
}

type ServiceNetworkConfigurationOutput struct{ *pulumi.OutputState }

func (ServiceNetworkConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceNetworkConfiguration)(nil)).Elem()
}

func (o ServiceNetworkConfigurationOutput) ToServiceNetworkConfigurationOutput() ServiceNetworkConfigurationOutput {
	return o
}

func (o ServiceNetworkConfigurationOutput) ToServiceNetworkConfigurationOutputWithContext(ctx context.Context) ServiceNetworkConfigurationOutput {
	return o
}

func (o ServiceNetworkConfigurationOutput) ToServiceNetworkConfigurationPtrOutput() ServiceNetworkConfigurationPtrOutput {
	return o.ToServiceNetworkConfigurationPtrOutputWithContext(context.Background())
}

func (o ServiceNetworkConfigurationOutput) ToServiceNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServiceNetworkConfigurationPtrOutput {
	return o.ApplyT(func(v ServiceNetworkConfiguration) *ServiceNetworkConfiguration {
		return &v
	}).(ServiceNetworkConfigurationPtrOutput)
}
func (o ServiceNetworkConfigurationOutput) AssignPublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNetworkConfiguration) *bool { return v.AssignPublicIp }).(pulumi.BoolPtrOutput)
}

func (o ServiceNetworkConfigurationOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceNetworkConfiguration) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o ServiceNetworkConfigurationOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceNetworkConfiguration) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

type ServiceNetworkConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ServiceNetworkConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceNetworkConfiguration)(nil)).Elem()
}

func (o ServiceNetworkConfigurationPtrOutput) ToServiceNetworkConfigurationPtrOutput() ServiceNetworkConfigurationPtrOutput {
	return o
}

func (o ServiceNetworkConfigurationPtrOutput) ToServiceNetworkConfigurationPtrOutputWithContext(ctx context.Context) ServiceNetworkConfigurationPtrOutput {
	return o
}

func (o ServiceNetworkConfigurationPtrOutput) Elem() ServiceNetworkConfigurationOutput {
	return o.ApplyT(func(v *ServiceNetworkConfiguration) ServiceNetworkConfiguration { return *v }).(ServiceNetworkConfigurationOutput)
}

func (o ServiceNetworkConfigurationPtrOutput) AssignPublicIp() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceNetworkConfiguration) *bool { return v.AssignPublicIp }).(pulumi.BoolPtrOutput)
}

func (o ServiceNetworkConfigurationPtrOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceNetworkConfiguration) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o ServiceNetworkConfigurationPtrOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceNetworkConfiguration) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

type ServiceOrderedPlacementStrategy struct {
	Field *string `pulumi:"field"`
	Type  string  `pulumi:"type"`
}

// ServiceOrderedPlacementStrategyInput is an input type that accepts ServiceOrderedPlacementStrategyArgs and ServiceOrderedPlacementStrategyOutput values.
// You can construct a concrete instance of `ServiceOrderedPlacementStrategyInput` via:
//
// 		 ServiceOrderedPlacementStrategyArgs{...}
//
type ServiceOrderedPlacementStrategyInput interface {
	pulumi.Input

	ToServiceOrderedPlacementStrategyOutput() ServiceOrderedPlacementStrategyOutput
	ToServiceOrderedPlacementStrategyOutputWithContext(context.Context) ServiceOrderedPlacementStrategyOutput
}

type ServiceOrderedPlacementStrategyArgs struct {
	Field pulumi.StringPtrInput `pulumi:"field"`
	Type  pulumi.StringInput    `pulumi:"type"`
}

func (ServiceOrderedPlacementStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceOrderedPlacementStrategy)(nil)).Elem()
}

func (i ServiceOrderedPlacementStrategyArgs) ToServiceOrderedPlacementStrategyOutput() ServiceOrderedPlacementStrategyOutput {
	return i.ToServiceOrderedPlacementStrategyOutputWithContext(context.Background())
}

func (i ServiceOrderedPlacementStrategyArgs) ToServiceOrderedPlacementStrategyOutputWithContext(ctx context.Context) ServiceOrderedPlacementStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceOrderedPlacementStrategyOutput)
}

// ServiceOrderedPlacementStrategyArrayInput is an input type that accepts ServiceOrderedPlacementStrategyArray and ServiceOrderedPlacementStrategyArrayOutput values.
// You can construct a concrete instance of `ServiceOrderedPlacementStrategyArrayInput` via:
//
// 		 ServiceOrderedPlacementStrategyArray{ ServiceOrderedPlacementStrategyArgs{...} }
//
type ServiceOrderedPlacementStrategyArrayInput interface {
	pulumi.Input

	ToServiceOrderedPlacementStrategyArrayOutput() ServiceOrderedPlacementStrategyArrayOutput
	ToServiceOrderedPlacementStrategyArrayOutputWithContext(context.Context) ServiceOrderedPlacementStrategyArrayOutput
}

type ServiceOrderedPlacementStrategyArray []ServiceOrderedPlacementStrategyInput

func (ServiceOrderedPlacementStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceOrderedPlacementStrategy)(nil)).Elem()
}

func (i ServiceOrderedPlacementStrategyArray) ToServiceOrderedPlacementStrategyArrayOutput() ServiceOrderedPlacementStrategyArrayOutput {
	return i.ToServiceOrderedPlacementStrategyArrayOutputWithContext(context.Background())
}

func (i ServiceOrderedPlacementStrategyArray) ToServiceOrderedPlacementStrategyArrayOutputWithContext(ctx context.Context) ServiceOrderedPlacementStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceOrderedPlacementStrategyArrayOutput)
}

type ServiceOrderedPlacementStrategyOutput struct{ *pulumi.OutputState }

func (ServiceOrderedPlacementStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceOrderedPlacementStrategy)(nil)).Elem()
}

func (o ServiceOrderedPlacementStrategyOutput) ToServiceOrderedPlacementStrategyOutput() ServiceOrderedPlacementStrategyOutput {
	return o
}

func (o ServiceOrderedPlacementStrategyOutput) ToServiceOrderedPlacementStrategyOutputWithContext(ctx context.Context) ServiceOrderedPlacementStrategyOutput {
	return o
}

func (o ServiceOrderedPlacementStrategyOutput) Field() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceOrderedPlacementStrategy) *string { return v.Field }).(pulumi.StringPtrOutput)
}

func (o ServiceOrderedPlacementStrategyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceOrderedPlacementStrategy) string { return v.Type }).(pulumi.StringOutput)
}

type ServiceOrderedPlacementStrategyArrayOutput struct{ *pulumi.OutputState }

func (ServiceOrderedPlacementStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceOrderedPlacementStrategy)(nil)).Elem()
}

func (o ServiceOrderedPlacementStrategyArrayOutput) ToServiceOrderedPlacementStrategyArrayOutput() ServiceOrderedPlacementStrategyArrayOutput {
	return o
}

func (o ServiceOrderedPlacementStrategyArrayOutput) ToServiceOrderedPlacementStrategyArrayOutputWithContext(ctx context.Context) ServiceOrderedPlacementStrategyArrayOutput {
	return o
}

func (o ServiceOrderedPlacementStrategyArrayOutput) Index(i pulumi.IntInput) ServiceOrderedPlacementStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceOrderedPlacementStrategy {
		return vs[0].([]ServiceOrderedPlacementStrategy)[vs[1].(int)]
	}).(ServiceOrderedPlacementStrategyOutput)
}

type ServicePlacementConstraint struct {
	Expression *string `pulumi:"expression"`
	Type       string  `pulumi:"type"`
}

// ServicePlacementConstraintInput is an input type that accepts ServicePlacementConstraintArgs and ServicePlacementConstraintOutput values.
// You can construct a concrete instance of `ServicePlacementConstraintInput` via:
//
// 		 ServicePlacementConstraintArgs{...}
//
type ServicePlacementConstraintInput interface {
	pulumi.Input

	ToServicePlacementConstraintOutput() ServicePlacementConstraintOutput
	ToServicePlacementConstraintOutputWithContext(context.Context) ServicePlacementConstraintOutput
}

type ServicePlacementConstraintArgs struct {
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	Type       pulumi.StringInput    `pulumi:"type"`
}

func (ServicePlacementConstraintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePlacementConstraint)(nil)).Elem()
}

func (i ServicePlacementConstraintArgs) ToServicePlacementConstraintOutput() ServicePlacementConstraintOutput {
	return i.ToServicePlacementConstraintOutputWithContext(context.Background())
}

func (i ServicePlacementConstraintArgs) ToServicePlacementConstraintOutputWithContext(ctx context.Context) ServicePlacementConstraintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePlacementConstraintOutput)
}

// ServicePlacementConstraintArrayInput is an input type that accepts ServicePlacementConstraintArray and ServicePlacementConstraintArrayOutput values.
// You can construct a concrete instance of `ServicePlacementConstraintArrayInput` via:
//
// 		 ServicePlacementConstraintArray{ ServicePlacementConstraintArgs{...} }
//
type ServicePlacementConstraintArrayInput interface {
	pulumi.Input

	ToServicePlacementConstraintArrayOutput() ServicePlacementConstraintArrayOutput
	ToServicePlacementConstraintArrayOutputWithContext(context.Context) ServicePlacementConstraintArrayOutput
}

type ServicePlacementConstraintArray []ServicePlacementConstraintInput

func (ServicePlacementConstraintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServicePlacementConstraint)(nil)).Elem()
}

func (i ServicePlacementConstraintArray) ToServicePlacementConstraintArrayOutput() ServicePlacementConstraintArrayOutput {
	return i.ToServicePlacementConstraintArrayOutputWithContext(context.Background())
}

func (i ServicePlacementConstraintArray) ToServicePlacementConstraintArrayOutputWithContext(ctx context.Context) ServicePlacementConstraintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServicePlacementConstraintArrayOutput)
}

type ServicePlacementConstraintOutput struct{ *pulumi.OutputState }

func (ServicePlacementConstraintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServicePlacementConstraint)(nil)).Elem()
}

func (o ServicePlacementConstraintOutput) ToServicePlacementConstraintOutput() ServicePlacementConstraintOutput {
	return o
}

func (o ServicePlacementConstraintOutput) ToServicePlacementConstraintOutputWithContext(ctx context.Context) ServicePlacementConstraintOutput {
	return o
}

func (o ServicePlacementConstraintOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServicePlacementConstraint) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

func (o ServicePlacementConstraintOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServicePlacementConstraint) string { return v.Type }).(pulumi.StringOutput)
}

type ServicePlacementConstraintArrayOutput struct{ *pulumi.OutputState }

func (ServicePlacementConstraintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServicePlacementConstraint)(nil)).Elem()
}

func (o ServicePlacementConstraintArrayOutput) ToServicePlacementConstraintArrayOutput() ServicePlacementConstraintArrayOutput {
	return o
}

func (o ServicePlacementConstraintArrayOutput) ToServicePlacementConstraintArrayOutputWithContext(ctx context.Context) ServicePlacementConstraintArrayOutput {
	return o
}

func (o ServicePlacementConstraintArrayOutput) Index(i pulumi.IntInput) ServicePlacementConstraintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServicePlacementConstraint {
		return vs[0].([]ServicePlacementConstraint)[vs[1].(int)]
	}).(ServicePlacementConstraintOutput)
}

type ServiceServiceRegistries struct {
	ContainerName *string `pulumi:"containerName"`
	ContainerPort *int    `pulumi:"containerPort"`
	Port          *int    `pulumi:"port"`
	RegistryArn   string  `pulumi:"registryArn"`
}

// ServiceServiceRegistriesInput is an input type that accepts ServiceServiceRegistriesArgs and ServiceServiceRegistriesOutput values.
// You can construct a concrete instance of `ServiceServiceRegistriesInput` via:
//
// 		 ServiceServiceRegistriesArgs{...}
//
type ServiceServiceRegistriesInput interface {
	pulumi.Input

	ToServiceServiceRegistriesOutput() ServiceServiceRegistriesOutput
	ToServiceServiceRegistriesOutputWithContext(context.Context) ServiceServiceRegistriesOutput
}

type ServiceServiceRegistriesArgs struct {
	ContainerName pulumi.StringPtrInput `pulumi:"containerName"`
	ContainerPort pulumi.IntPtrInput    `pulumi:"containerPort"`
	Port          pulumi.IntPtrInput    `pulumi:"port"`
	RegistryArn   pulumi.StringInput    `pulumi:"registryArn"`
}

func (ServiceServiceRegistriesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceServiceRegistries)(nil)).Elem()
}

func (i ServiceServiceRegistriesArgs) ToServiceServiceRegistriesOutput() ServiceServiceRegistriesOutput {
	return i.ToServiceServiceRegistriesOutputWithContext(context.Background())
}

func (i ServiceServiceRegistriesArgs) ToServiceServiceRegistriesOutputWithContext(ctx context.Context) ServiceServiceRegistriesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceServiceRegistriesOutput)
}

func (i ServiceServiceRegistriesArgs) ToServiceServiceRegistriesPtrOutput() ServiceServiceRegistriesPtrOutput {
	return i.ToServiceServiceRegistriesPtrOutputWithContext(context.Background())
}

func (i ServiceServiceRegistriesArgs) ToServiceServiceRegistriesPtrOutputWithContext(ctx context.Context) ServiceServiceRegistriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceServiceRegistriesOutput).ToServiceServiceRegistriesPtrOutputWithContext(ctx)
}

// ServiceServiceRegistriesPtrInput is an input type that accepts ServiceServiceRegistriesArgs, ServiceServiceRegistriesPtr and ServiceServiceRegistriesPtrOutput values.
// You can construct a concrete instance of `ServiceServiceRegistriesPtrInput` via:
//
// 		 ServiceServiceRegistriesArgs{...}
//
//  or:
//
// 		 nil
//
type ServiceServiceRegistriesPtrInput interface {
	pulumi.Input

	ToServiceServiceRegistriesPtrOutput() ServiceServiceRegistriesPtrOutput
	ToServiceServiceRegistriesPtrOutputWithContext(context.Context) ServiceServiceRegistriesPtrOutput
}

type serviceServiceRegistriesPtrType ServiceServiceRegistriesArgs

func ServiceServiceRegistriesPtr(v *ServiceServiceRegistriesArgs) ServiceServiceRegistriesPtrInput {
	return (*serviceServiceRegistriesPtrType)(v)
}

func (*serviceServiceRegistriesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceServiceRegistries)(nil)).Elem()
}

func (i *serviceServiceRegistriesPtrType) ToServiceServiceRegistriesPtrOutput() ServiceServiceRegistriesPtrOutput {
	return i.ToServiceServiceRegistriesPtrOutputWithContext(context.Background())
}

func (i *serviceServiceRegistriesPtrType) ToServiceServiceRegistriesPtrOutputWithContext(ctx context.Context) ServiceServiceRegistriesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceServiceRegistriesPtrOutput)
}

type ServiceServiceRegistriesOutput struct{ *pulumi.OutputState }

func (ServiceServiceRegistriesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceServiceRegistries)(nil)).Elem()
}

func (o ServiceServiceRegistriesOutput) ToServiceServiceRegistriesOutput() ServiceServiceRegistriesOutput {
	return o
}

func (o ServiceServiceRegistriesOutput) ToServiceServiceRegistriesOutputWithContext(ctx context.Context) ServiceServiceRegistriesOutput {
	return o
}

func (o ServiceServiceRegistriesOutput) ToServiceServiceRegistriesPtrOutput() ServiceServiceRegistriesPtrOutput {
	return o.ToServiceServiceRegistriesPtrOutputWithContext(context.Background())
}

func (o ServiceServiceRegistriesOutput) ToServiceServiceRegistriesPtrOutputWithContext(ctx context.Context) ServiceServiceRegistriesPtrOutput {
	return o.ApplyT(func(v ServiceServiceRegistries) *ServiceServiceRegistries {
		return &v
	}).(ServiceServiceRegistriesPtrOutput)
}
func (o ServiceServiceRegistriesOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceServiceRegistries) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

func (o ServiceServiceRegistriesOutput) ContainerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceServiceRegistries) *int { return v.ContainerPort }).(pulumi.IntPtrOutput)
}

func (o ServiceServiceRegistriesOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceServiceRegistries) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o ServiceServiceRegistriesOutput) RegistryArn() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceServiceRegistries) string { return v.RegistryArn }).(pulumi.StringOutput)
}

type ServiceServiceRegistriesPtrOutput struct{ *pulumi.OutputState }

func (ServiceServiceRegistriesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceServiceRegistries)(nil)).Elem()
}

func (o ServiceServiceRegistriesPtrOutput) ToServiceServiceRegistriesPtrOutput() ServiceServiceRegistriesPtrOutput {
	return o
}

func (o ServiceServiceRegistriesPtrOutput) ToServiceServiceRegistriesPtrOutputWithContext(ctx context.Context) ServiceServiceRegistriesPtrOutput {
	return o
}

func (o ServiceServiceRegistriesPtrOutput) Elem() ServiceServiceRegistriesOutput {
	return o.ApplyT(func(v *ServiceServiceRegistries) ServiceServiceRegistries { return *v }).(ServiceServiceRegistriesOutput)
}

func (o ServiceServiceRegistriesPtrOutput) ContainerName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceServiceRegistries) *string { return v.ContainerName }).(pulumi.StringPtrOutput)
}

func (o ServiceServiceRegistriesPtrOutput) ContainerPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceServiceRegistries) *int { return v.ContainerPort }).(pulumi.IntPtrOutput)
}

func (o ServiceServiceRegistriesPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceServiceRegistries) *int { return v.Port }).(pulumi.IntPtrOutput)
}

func (o ServiceServiceRegistriesPtrOutput) RegistryArn() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceServiceRegistries) string { return v.RegistryArn }).(pulumi.StringOutput)
}

type TaskDefinitionInferenceAccelerator struct {
	// The Elastic Inference accelerator device name. The deviceName must also be referenced in a container definition as a ResourceRequirement.
	DeviceName string `pulumi:"deviceName"`
	// The Elastic Inference accelerator type to use.
	DeviceType string `pulumi:"deviceType"`
}

// TaskDefinitionInferenceAcceleratorInput is an input type that accepts TaskDefinitionInferenceAcceleratorArgs and TaskDefinitionInferenceAcceleratorOutput values.
// You can construct a concrete instance of `TaskDefinitionInferenceAcceleratorInput` via:
//
// 		 TaskDefinitionInferenceAcceleratorArgs{...}
//
type TaskDefinitionInferenceAcceleratorInput interface {
	pulumi.Input

	ToTaskDefinitionInferenceAcceleratorOutput() TaskDefinitionInferenceAcceleratorOutput
	ToTaskDefinitionInferenceAcceleratorOutputWithContext(context.Context) TaskDefinitionInferenceAcceleratorOutput
}

type TaskDefinitionInferenceAcceleratorArgs struct {
	// The Elastic Inference accelerator device name. The deviceName must also be referenced in a container definition as a ResourceRequirement.
	DeviceName pulumi.StringInput `pulumi:"deviceName"`
	// The Elastic Inference accelerator type to use.
	DeviceType pulumi.StringInput `pulumi:"deviceType"`
}

func (TaskDefinitionInferenceAcceleratorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionInferenceAccelerator)(nil)).Elem()
}

func (i TaskDefinitionInferenceAcceleratorArgs) ToTaskDefinitionInferenceAcceleratorOutput() TaskDefinitionInferenceAcceleratorOutput {
	return i.ToTaskDefinitionInferenceAcceleratorOutputWithContext(context.Background())
}

func (i TaskDefinitionInferenceAcceleratorArgs) ToTaskDefinitionInferenceAcceleratorOutputWithContext(ctx context.Context) TaskDefinitionInferenceAcceleratorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionInferenceAcceleratorOutput)
}

// TaskDefinitionInferenceAcceleratorArrayInput is an input type that accepts TaskDefinitionInferenceAcceleratorArray and TaskDefinitionInferenceAcceleratorArrayOutput values.
// You can construct a concrete instance of `TaskDefinitionInferenceAcceleratorArrayInput` via:
//
// 		 TaskDefinitionInferenceAcceleratorArray{ TaskDefinitionInferenceAcceleratorArgs{...} }
//
type TaskDefinitionInferenceAcceleratorArrayInput interface {
	pulumi.Input

	ToTaskDefinitionInferenceAcceleratorArrayOutput() TaskDefinitionInferenceAcceleratorArrayOutput
	ToTaskDefinitionInferenceAcceleratorArrayOutputWithContext(context.Context) TaskDefinitionInferenceAcceleratorArrayOutput
}

type TaskDefinitionInferenceAcceleratorArray []TaskDefinitionInferenceAcceleratorInput

func (TaskDefinitionInferenceAcceleratorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionInferenceAccelerator)(nil)).Elem()
}

func (i TaskDefinitionInferenceAcceleratorArray) ToTaskDefinitionInferenceAcceleratorArrayOutput() TaskDefinitionInferenceAcceleratorArrayOutput {
	return i.ToTaskDefinitionInferenceAcceleratorArrayOutputWithContext(context.Background())
}

func (i TaskDefinitionInferenceAcceleratorArray) ToTaskDefinitionInferenceAcceleratorArrayOutputWithContext(ctx context.Context) TaskDefinitionInferenceAcceleratorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionInferenceAcceleratorArrayOutput)
}

type TaskDefinitionInferenceAcceleratorOutput struct{ *pulumi.OutputState }

func (TaskDefinitionInferenceAcceleratorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionInferenceAccelerator)(nil)).Elem()
}

func (o TaskDefinitionInferenceAcceleratorOutput) ToTaskDefinitionInferenceAcceleratorOutput() TaskDefinitionInferenceAcceleratorOutput {
	return o
}

func (o TaskDefinitionInferenceAcceleratorOutput) ToTaskDefinitionInferenceAcceleratorOutputWithContext(ctx context.Context) TaskDefinitionInferenceAcceleratorOutput {
	return o
}

// The Elastic Inference accelerator device name. The deviceName must also be referenced in a container definition as a ResourceRequirement.
func (o TaskDefinitionInferenceAcceleratorOutput) DeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v TaskDefinitionInferenceAccelerator) string { return v.DeviceName }).(pulumi.StringOutput)
}

// The Elastic Inference accelerator type to use.
func (o TaskDefinitionInferenceAcceleratorOutput) DeviceType() pulumi.StringOutput {
	return o.ApplyT(func(v TaskDefinitionInferenceAccelerator) string { return v.DeviceType }).(pulumi.StringOutput)
}

type TaskDefinitionInferenceAcceleratorArrayOutput struct{ *pulumi.OutputState }

func (TaskDefinitionInferenceAcceleratorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionInferenceAccelerator)(nil)).Elem()
}

func (o TaskDefinitionInferenceAcceleratorArrayOutput) ToTaskDefinitionInferenceAcceleratorArrayOutput() TaskDefinitionInferenceAcceleratorArrayOutput {
	return o
}

func (o TaskDefinitionInferenceAcceleratorArrayOutput) ToTaskDefinitionInferenceAcceleratorArrayOutputWithContext(ctx context.Context) TaskDefinitionInferenceAcceleratorArrayOutput {
	return o
}

func (o TaskDefinitionInferenceAcceleratorArrayOutput) Index(i pulumi.IntInput) TaskDefinitionInferenceAcceleratorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskDefinitionInferenceAccelerator {
		return vs[0].([]TaskDefinitionInferenceAccelerator)[vs[1].(int)]
	}).(TaskDefinitionInferenceAcceleratorOutput)
}

type TaskDefinitionPlacementConstraint struct {
	// Cluster Query Language expression to apply to the constraint.
	// For more information, see [Cluster Query Language in the Amazon EC2 Container
	// Service Developer
	// Guide](http://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html).
	Expression *string `pulumi:"expression"`
	// The proxy type. The default value is `APPMESH`. The only supported value is `APPMESH`.
	Type string `pulumi:"type"`
}

// TaskDefinitionPlacementConstraintInput is an input type that accepts TaskDefinitionPlacementConstraintArgs and TaskDefinitionPlacementConstraintOutput values.
// You can construct a concrete instance of `TaskDefinitionPlacementConstraintInput` via:
//
// 		 TaskDefinitionPlacementConstraintArgs{...}
//
type TaskDefinitionPlacementConstraintInput interface {
	pulumi.Input

	ToTaskDefinitionPlacementConstraintOutput() TaskDefinitionPlacementConstraintOutput
	ToTaskDefinitionPlacementConstraintOutputWithContext(context.Context) TaskDefinitionPlacementConstraintOutput
}

type TaskDefinitionPlacementConstraintArgs struct {
	// Cluster Query Language expression to apply to the constraint.
	// For more information, see [Cluster Query Language in the Amazon EC2 Container
	// Service Developer
	// Guide](http://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html).
	Expression pulumi.StringPtrInput `pulumi:"expression"`
	// The proxy type. The default value is `APPMESH`. The only supported value is `APPMESH`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (TaskDefinitionPlacementConstraintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionPlacementConstraint)(nil)).Elem()
}

func (i TaskDefinitionPlacementConstraintArgs) ToTaskDefinitionPlacementConstraintOutput() TaskDefinitionPlacementConstraintOutput {
	return i.ToTaskDefinitionPlacementConstraintOutputWithContext(context.Background())
}

func (i TaskDefinitionPlacementConstraintArgs) ToTaskDefinitionPlacementConstraintOutputWithContext(ctx context.Context) TaskDefinitionPlacementConstraintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionPlacementConstraintOutput)
}

// TaskDefinitionPlacementConstraintArrayInput is an input type that accepts TaskDefinitionPlacementConstraintArray and TaskDefinitionPlacementConstraintArrayOutput values.
// You can construct a concrete instance of `TaskDefinitionPlacementConstraintArrayInput` via:
//
// 		 TaskDefinitionPlacementConstraintArray{ TaskDefinitionPlacementConstraintArgs{...} }
//
type TaskDefinitionPlacementConstraintArrayInput interface {
	pulumi.Input

	ToTaskDefinitionPlacementConstraintArrayOutput() TaskDefinitionPlacementConstraintArrayOutput
	ToTaskDefinitionPlacementConstraintArrayOutputWithContext(context.Context) TaskDefinitionPlacementConstraintArrayOutput
}

type TaskDefinitionPlacementConstraintArray []TaskDefinitionPlacementConstraintInput

func (TaskDefinitionPlacementConstraintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionPlacementConstraint)(nil)).Elem()
}

func (i TaskDefinitionPlacementConstraintArray) ToTaskDefinitionPlacementConstraintArrayOutput() TaskDefinitionPlacementConstraintArrayOutput {
	return i.ToTaskDefinitionPlacementConstraintArrayOutputWithContext(context.Background())
}

func (i TaskDefinitionPlacementConstraintArray) ToTaskDefinitionPlacementConstraintArrayOutputWithContext(ctx context.Context) TaskDefinitionPlacementConstraintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionPlacementConstraintArrayOutput)
}

type TaskDefinitionPlacementConstraintOutput struct{ *pulumi.OutputState }

func (TaskDefinitionPlacementConstraintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionPlacementConstraint)(nil)).Elem()
}

func (o TaskDefinitionPlacementConstraintOutput) ToTaskDefinitionPlacementConstraintOutput() TaskDefinitionPlacementConstraintOutput {
	return o
}

func (o TaskDefinitionPlacementConstraintOutput) ToTaskDefinitionPlacementConstraintOutputWithContext(ctx context.Context) TaskDefinitionPlacementConstraintOutput {
	return o
}

// Cluster Query Language expression to apply to the constraint.
// For more information, see [Cluster Query Language in the Amazon EC2 Container
// Service Developer
// Guide](http://docs.aws.amazon.com/AmazonECS/latest/developerguide/cluster-query-language.html).
func (o TaskDefinitionPlacementConstraintOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionPlacementConstraint) *string { return v.Expression }).(pulumi.StringPtrOutput)
}

// The proxy type. The default value is `APPMESH`. The only supported value is `APPMESH`.
func (o TaskDefinitionPlacementConstraintOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v TaskDefinitionPlacementConstraint) string { return v.Type }).(pulumi.StringOutput)
}

type TaskDefinitionPlacementConstraintArrayOutput struct{ *pulumi.OutputState }

func (TaskDefinitionPlacementConstraintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionPlacementConstraint)(nil)).Elem()
}

func (o TaskDefinitionPlacementConstraintArrayOutput) ToTaskDefinitionPlacementConstraintArrayOutput() TaskDefinitionPlacementConstraintArrayOutput {
	return o
}

func (o TaskDefinitionPlacementConstraintArrayOutput) ToTaskDefinitionPlacementConstraintArrayOutputWithContext(ctx context.Context) TaskDefinitionPlacementConstraintArrayOutput {
	return o
}

func (o TaskDefinitionPlacementConstraintArrayOutput) Index(i pulumi.IntInput) TaskDefinitionPlacementConstraintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskDefinitionPlacementConstraint {
		return vs[0].([]TaskDefinitionPlacementConstraint)[vs[1].(int)]
	}).(TaskDefinitionPlacementConstraintOutput)
}

type TaskDefinitionProxyConfiguration struct {
	// The name of the container that will serve as the App Mesh proxy.
	ContainerName string `pulumi:"containerName"`
	// The set of network configuration parameters to provide the Container Network Interface (CNI) plugin, specified a key-value mapping.
	Properties map[string]string `pulumi:"properties"`
	// The proxy type. The default value is `APPMESH`. The only supported value is `APPMESH`.
	Type *string `pulumi:"type"`
}

// TaskDefinitionProxyConfigurationInput is an input type that accepts TaskDefinitionProxyConfigurationArgs and TaskDefinitionProxyConfigurationOutput values.
// You can construct a concrete instance of `TaskDefinitionProxyConfigurationInput` via:
//
// 		 TaskDefinitionProxyConfigurationArgs{...}
//
type TaskDefinitionProxyConfigurationInput interface {
	pulumi.Input

	ToTaskDefinitionProxyConfigurationOutput() TaskDefinitionProxyConfigurationOutput
	ToTaskDefinitionProxyConfigurationOutputWithContext(context.Context) TaskDefinitionProxyConfigurationOutput
}

type TaskDefinitionProxyConfigurationArgs struct {
	// The name of the container that will serve as the App Mesh proxy.
	ContainerName pulumi.StringInput `pulumi:"containerName"`
	// The set of network configuration parameters to provide the Container Network Interface (CNI) plugin, specified a key-value mapping.
	Properties pulumi.StringMapInput `pulumi:"properties"`
	// The proxy type. The default value is `APPMESH`. The only supported value is `APPMESH`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (TaskDefinitionProxyConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionProxyConfiguration)(nil)).Elem()
}

func (i TaskDefinitionProxyConfigurationArgs) ToTaskDefinitionProxyConfigurationOutput() TaskDefinitionProxyConfigurationOutput {
	return i.ToTaskDefinitionProxyConfigurationOutputWithContext(context.Background())
}

func (i TaskDefinitionProxyConfigurationArgs) ToTaskDefinitionProxyConfigurationOutputWithContext(ctx context.Context) TaskDefinitionProxyConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionProxyConfigurationOutput)
}

func (i TaskDefinitionProxyConfigurationArgs) ToTaskDefinitionProxyConfigurationPtrOutput() TaskDefinitionProxyConfigurationPtrOutput {
	return i.ToTaskDefinitionProxyConfigurationPtrOutputWithContext(context.Background())
}

func (i TaskDefinitionProxyConfigurationArgs) ToTaskDefinitionProxyConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionProxyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionProxyConfigurationOutput).ToTaskDefinitionProxyConfigurationPtrOutputWithContext(ctx)
}

// TaskDefinitionProxyConfigurationPtrInput is an input type that accepts TaskDefinitionProxyConfigurationArgs, TaskDefinitionProxyConfigurationPtr and TaskDefinitionProxyConfigurationPtrOutput values.
// You can construct a concrete instance of `TaskDefinitionProxyConfigurationPtrInput` via:
//
// 		 TaskDefinitionProxyConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type TaskDefinitionProxyConfigurationPtrInput interface {
	pulumi.Input

	ToTaskDefinitionProxyConfigurationPtrOutput() TaskDefinitionProxyConfigurationPtrOutput
	ToTaskDefinitionProxyConfigurationPtrOutputWithContext(context.Context) TaskDefinitionProxyConfigurationPtrOutput
}

type taskDefinitionProxyConfigurationPtrType TaskDefinitionProxyConfigurationArgs

func TaskDefinitionProxyConfigurationPtr(v *TaskDefinitionProxyConfigurationArgs) TaskDefinitionProxyConfigurationPtrInput {
	return (*taskDefinitionProxyConfigurationPtrType)(v)
}

func (*taskDefinitionProxyConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionProxyConfiguration)(nil)).Elem()
}

func (i *taskDefinitionProxyConfigurationPtrType) ToTaskDefinitionProxyConfigurationPtrOutput() TaskDefinitionProxyConfigurationPtrOutput {
	return i.ToTaskDefinitionProxyConfigurationPtrOutputWithContext(context.Background())
}

func (i *taskDefinitionProxyConfigurationPtrType) ToTaskDefinitionProxyConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionProxyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionProxyConfigurationPtrOutput)
}

type TaskDefinitionProxyConfigurationOutput struct{ *pulumi.OutputState }

func (TaskDefinitionProxyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionProxyConfiguration)(nil)).Elem()
}

func (o TaskDefinitionProxyConfigurationOutput) ToTaskDefinitionProxyConfigurationOutput() TaskDefinitionProxyConfigurationOutput {
	return o
}

func (o TaskDefinitionProxyConfigurationOutput) ToTaskDefinitionProxyConfigurationOutputWithContext(ctx context.Context) TaskDefinitionProxyConfigurationOutput {
	return o
}

func (o TaskDefinitionProxyConfigurationOutput) ToTaskDefinitionProxyConfigurationPtrOutput() TaskDefinitionProxyConfigurationPtrOutput {
	return o.ToTaskDefinitionProxyConfigurationPtrOutputWithContext(context.Background())
}

func (o TaskDefinitionProxyConfigurationOutput) ToTaskDefinitionProxyConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionProxyConfigurationPtrOutput {
	return o.ApplyT(func(v TaskDefinitionProxyConfiguration) *TaskDefinitionProxyConfiguration {
		return &v
	}).(TaskDefinitionProxyConfigurationPtrOutput)
}

// The name of the container that will serve as the App Mesh proxy.
func (o TaskDefinitionProxyConfigurationOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v TaskDefinitionProxyConfiguration) string { return v.ContainerName }).(pulumi.StringOutput)
}

// The set of network configuration parameters to provide the Container Network Interface (CNI) plugin, specified a key-value mapping.
func (o TaskDefinitionProxyConfigurationOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v TaskDefinitionProxyConfiguration) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The proxy type. The default value is `APPMESH`. The only supported value is `APPMESH`.
func (o TaskDefinitionProxyConfigurationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionProxyConfiguration) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type TaskDefinitionProxyConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TaskDefinitionProxyConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionProxyConfiguration)(nil)).Elem()
}

func (o TaskDefinitionProxyConfigurationPtrOutput) ToTaskDefinitionProxyConfigurationPtrOutput() TaskDefinitionProxyConfigurationPtrOutput {
	return o
}

func (o TaskDefinitionProxyConfigurationPtrOutput) ToTaskDefinitionProxyConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionProxyConfigurationPtrOutput {
	return o
}

func (o TaskDefinitionProxyConfigurationPtrOutput) Elem() TaskDefinitionProxyConfigurationOutput {
	return o.ApplyT(func(v *TaskDefinitionProxyConfiguration) TaskDefinitionProxyConfiguration { return *v }).(TaskDefinitionProxyConfigurationOutput)
}

// The name of the container that will serve as the App Mesh proxy.
func (o TaskDefinitionProxyConfigurationPtrOutput) ContainerName() pulumi.StringOutput {
	return o.ApplyT(func(v TaskDefinitionProxyConfiguration) string { return v.ContainerName }).(pulumi.StringOutput)
}

// The set of network configuration parameters to provide the Container Network Interface (CNI) plugin, specified a key-value mapping.
func (o TaskDefinitionProxyConfigurationPtrOutput) Properties() pulumi.StringMapOutput {
	return o.ApplyT(func(v TaskDefinitionProxyConfiguration) map[string]string { return v.Properties }).(pulumi.StringMapOutput)
}

// The proxy type. The default value is `APPMESH`. The only supported value is `APPMESH`.
func (o TaskDefinitionProxyConfigurationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionProxyConfiguration) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type TaskDefinitionVolume struct {
	// Used to configure a docker volume
	DockerVolumeConfiguration *TaskDefinitionVolumeDockerVolumeConfiguration `pulumi:"dockerVolumeConfiguration"`
	// Used to configure a EFS volume. Can be used only with an EC2 type task.
	EfsVolumeConfiguration *TaskDefinitionVolumeEfsVolumeConfiguration `pulumi:"efsVolumeConfiguration"`
	// The path on the host container instance that is presented to the container. If not set, ECS will create a nonpersistent data volume that starts empty and is deleted after the task has finished.
	HostPath *string `pulumi:"hostPath"`
	// The name of the volume. This name is referenced in the `sourceVolume`
	// parameter of container definition in the `mountPoints` section.
	Name string `pulumi:"name"`
}

// TaskDefinitionVolumeInput is an input type that accepts TaskDefinitionVolumeArgs and TaskDefinitionVolumeOutput values.
// You can construct a concrete instance of `TaskDefinitionVolumeInput` via:
//
// 		 TaskDefinitionVolumeArgs{...}
//
type TaskDefinitionVolumeInput interface {
	pulumi.Input

	ToTaskDefinitionVolumeOutput() TaskDefinitionVolumeOutput
	ToTaskDefinitionVolumeOutputWithContext(context.Context) TaskDefinitionVolumeOutput
}

type TaskDefinitionVolumeArgs struct {
	// Used to configure a docker volume
	DockerVolumeConfiguration TaskDefinitionVolumeDockerVolumeConfigurationPtrInput `pulumi:"dockerVolumeConfiguration"`
	// Used to configure a EFS volume. Can be used only with an EC2 type task.
	EfsVolumeConfiguration TaskDefinitionVolumeEfsVolumeConfigurationPtrInput `pulumi:"efsVolumeConfiguration"`
	// The path on the host container instance that is presented to the container. If not set, ECS will create a nonpersistent data volume that starts empty and is deleted after the task has finished.
	HostPath pulumi.StringPtrInput `pulumi:"hostPath"`
	// The name of the volume. This name is referenced in the `sourceVolume`
	// parameter of container definition in the `mountPoints` section.
	Name pulumi.StringInput `pulumi:"name"`
}

func (TaskDefinitionVolumeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionVolume)(nil)).Elem()
}

func (i TaskDefinitionVolumeArgs) ToTaskDefinitionVolumeOutput() TaskDefinitionVolumeOutput {
	return i.ToTaskDefinitionVolumeOutputWithContext(context.Background())
}

func (i TaskDefinitionVolumeArgs) ToTaskDefinitionVolumeOutputWithContext(ctx context.Context) TaskDefinitionVolumeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionVolumeOutput)
}

// TaskDefinitionVolumeArrayInput is an input type that accepts TaskDefinitionVolumeArray and TaskDefinitionVolumeArrayOutput values.
// You can construct a concrete instance of `TaskDefinitionVolumeArrayInput` via:
//
// 		 TaskDefinitionVolumeArray{ TaskDefinitionVolumeArgs{...} }
//
type TaskDefinitionVolumeArrayInput interface {
	pulumi.Input

	ToTaskDefinitionVolumeArrayOutput() TaskDefinitionVolumeArrayOutput
	ToTaskDefinitionVolumeArrayOutputWithContext(context.Context) TaskDefinitionVolumeArrayOutput
}

type TaskDefinitionVolumeArray []TaskDefinitionVolumeInput

func (TaskDefinitionVolumeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionVolume)(nil)).Elem()
}

func (i TaskDefinitionVolumeArray) ToTaskDefinitionVolumeArrayOutput() TaskDefinitionVolumeArrayOutput {
	return i.ToTaskDefinitionVolumeArrayOutputWithContext(context.Background())
}

func (i TaskDefinitionVolumeArray) ToTaskDefinitionVolumeArrayOutputWithContext(ctx context.Context) TaskDefinitionVolumeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionVolumeArrayOutput)
}

type TaskDefinitionVolumeOutput struct{ *pulumi.OutputState }

func (TaskDefinitionVolumeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionVolume)(nil)).Elem()
}

func (o TaskDefinitionVolumeOutput) ToTaskDefinitionVolumeOutput() TaskDefinitionVolumeOutput {
	return o
}

func (o TaskDefinitionVolumeOutput) ToTaskDefinitionVolumeOutputWithContext(ctx context.Context) TaskDefinitionVolumeOutput {
	return o
}

// Used to configure a docker volume
func (o TaskDefinitionVolumeOutput) DockerVolumeConfiguration() TaskDefinitionVolumeDockerVolumeConfigurationPtrOutput {
	return o.ApplyT(func(v TaskDefinitionVolume) *TaskDefinitionVolumeDockerVolumeConfiguration {
		return v.DockerVolumeConfiguration
	}).(TaskDefinitionVolumeDockerVolumeConfigurationPtrOutput)
}

// Used to configure a EFS volume. Can be used only with an EC2 type task.
func (o TaskDefinitionVolumeOutput) EfsVolumeConfiguration() TaskDefinitionVolumeEfsVolumeConfigurationPtrOutput {
	return o.ApplyT(func(v TaskDefinitionVolume) *TaskDefinitionVolumeEfsVolumeConfiguration {
		return v.EfsVolumeConfiguration
	}).(TaskDefinitionVolumeEfsVolumeConfigurationPtrOutput)
}

// The path on the host container instance that is presented to the container. If not set, ECS will create a nonpersistent data volume that starts empty and is deleted after the task has finished.
func (o TaskDefinitionVolumeOutput) HostPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionVolume) *string { return v.HostPath }).(pulumi.StringPtrOutput)
}

// The name of the volume. This name is referenced in the `sourceVolume`
// parameter of container definition in the `mountPoints` section.
func (o TaskDefinitionVolumeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v TaskDefinitionVolume) string { return v.Name }).(pulumi.StringOutput)
}

type TaskDefinitionVolumeArrayOutput struct{ *pulumi.OutputState }

func (TaskDefinitionVolumeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TaskDefinitionVolume)(nil)).Elem()
}

func (o TaskDefinitionVolumeArrayOutput) ToTaskDefinitionVolumeArrayOutput() TaskDefinitionVolumeArrayOutput {
	return o
}

func (o TaskDefinitionVolumeArrayOutput) ToTaskDefinitionVolumeArrayOutputWithContext(ctx context.Context) TaskDefinitionVolumeArrayOutput {
	return o
}

func (o TaskDefinitionVolumeArrayOutput) Index(i pulumi.IntInput) TaskDefinitionVolumeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TaskDefinitionVolume {
		return vs[0].([]TaskDefinitionVolume)[vs[1].(int)]
	}).(TaskDefinitionVolumeOutput)
}

type TaskDefinitionVolumeDockerVolumeConfiguration struct {
	// If this value is `true`, the Docker volume is created if it does not already exist. *Note*: This field is only used if the scope is `shared`.
	Autoprovision *bool `pulumi:"autoprovision"`
	// The Docker volume driver to use. The driver value must match the driver name provided by Docker because it is used for task placement.
	Driver *string `pulumi:"driver"`
	// A map of Docker driver specific options.
	DriverOpts map[string]string `pulumi:"driverOpts"`
	// A map of custom metadata to add to your Docker volume.
	Labels map[string]string `pulumi:"labels"`
	// The scope for the Docker volume, which determines its lifecycle, either `task` or `shared`.  Docker volumes that are scoped to a `task` are automatically provisioned when the task starts and destroyed when the task stops. Docker volumes that are `scoped` as shared persist after the task stops.
	Scope *string `pulumi:"scope"`
}

// TaskDefinitionVolumeDockerVolumeConfigurationInput is an input type that accepts TaskDefinitionVolumeDockerVolumeConfigurationArgs and TaskDefinitionVolumeDockerVolumeConfigurationOutput values.
// You can construct a concrete instance of `TaskDefinitionVolumeDockerVolumeConfigurationInput` via:
//
// 		 TaskDefinitionVolumeDockerVolumeConfigurationArgs{...}
//
type TaskDefinitionVolumeDockerVolumeConfigurationInput interface {
	pulumi.Input

	ToTaskDefinitionVolumeDockerVolumeConfigurationOutput() TaskDefinitionVolumeDockerVolumeConfigurationOutput
	ToTaskDefinitionVolumeDockerVolumeConfigurationOutputWithContext(context.Context) TaskDefinitionVolumeDockerVolumeConfigurationOutput
}

type TaskDefinitionVolumeDockerVolumeConfigurationArgs struct {
	// If this value is `true`, the Docker volume is created if it does not already exist. *Note*: This field is only used if the scope is `shared`.
	Autoprovision pulumi.BoolPtrInput `pulumi:"autoprovision"`
	// The Docker volume driver to use. The driver value must match the driver name provided by Docker because it is used for task placement.
	Driver pulumi.StringPtrInput `pulumi:"driver"`
	// A map of Docker driver specific options.
	DriverOpts pulumi.StringMapInput `pulumi:"driverOpts"`
	// A map of custom metadata to add to your Docker volume.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// The scope for the Docker volume, which determines its lifecycle, either `task` or `shared`.  Docker volumes that are scoped to a `task` are automatically provisioned when the task starts and destroyed when the task stops. Docker volumes that are `scoped` as shared persist after the task stops.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
}

func (TaskDefinitionVolumeDockerVolumeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionVolumeDockerVolumeConfiguration)(nil)).Elem()
}

func (i TaskDefinitionVolumeDockerVolumeConfigurationArgs) ToTaskDefinitionVolumeDockerVolumeConfigurationOutput() TaskDefinitionVolumeDockerVolumeConfigurationOutput {
	return i.ToTaskDefinitionVolumeDockerVolumeConfigurationOutputWithContext(context.Background())
}

func (i TaskDefinitionVolumeDockerVolumeConfigurationArgs) ToTaskDefinitionVolumeDockerVolumeConfigurationOutputWithContext(ctx context.Context) TaskDefinitionVolumeDockerVolumeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionVolumeDockerVolumeConfigurationOutput)
}

func (i TaskDefinitionVolumeDockerVolumeConfigurationArgs) ToTaskDefinitionVolumeDockerVolumeConfigurationPtrOutput() TaskDefinitionVolumeDockerVolumeConfigurationPtrOutput {
	return i.ToTaskDefinitionVolumeDockerVolumeConfigurationPtrOutputWithContext(context.Background())
}

func (i TaskDefinitionVolumeDockerVolumeConfigurationArgs) ToTaskDefinitionVolumeDockerVolumeConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionVolumeDockerVolumeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionVolumeDockerVolumeConfigurationOutput).ToTaskDefinitionVolumeDockerVolumeConfigurationPtrOutputWithContext(ctx)
}

// TaskDefinitionVolumeDockerVolumeConfigurationPtrInput is an input type that accepts TaskDefinitionVolumeDockerVolumeConfigurationArgs, TaskDefinitionVolumeDockerVolumeConfigurationPtr and TaskDefinitionVolumeDockerVolumeConfigurationPtrOutput values.
// You can construct a concrete instance of `TaskDefinitionVolumeDockerVolumeConfigurationPtrInput` via:
//
// 		 TaskDefinitionVolumeDockerVolumeConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type TaskDefinitionVolumeDockerVolumeConfigurationPtrInput interface {
	pulumi.Input

	ToTaskDefinitionVolumeDockerVolumeConfigurationPtrOutput() TaskDefinitionVolumeDockerVolumeConfigurationPtrOutput
	ToTaskDefinitionVolumeDockerVolumeConfigurationPtrOutputWithContext(context.Context) TaskDefinitionVolumeDockerVolumeConfigurationPtrOutput
}

type taskDefinitionVolumeDockerVolumeConfigurationPtrType TaskDefinitionVolumeDockerVolumeConfigurationArgs

func TaskDefinitionVolumeDockerVolumeConfigurationPtr(v *TaskDefinitionVolumeDockerVolumeConfigurationArgs) TaskDefinitionVolumeDockerVolumeConfigurationPtrInput {
	return (*taskDefinitionVolumeDockerVolumeConfigurationPtrType)(v)
}

func (*taskDefinitionVolumeDockerVolumeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionVolumeDockerVolumeConfiguration)(nil)).Elem()
}

func (i *taskDefinitionVolumeDockerVolumeConfigurationPtrType) ToTaskDefinitionVolumeDockerVolumeConfigurationPtrOutput() TaskDefinitionVolumeDockerVolumeConfigurationPtrOutput {
	return i.ToTaskDefinitionVolumeDockerVolumeConfigurationPtrOutputWithContext(context.Background())
}

func (i *taskDefinitionVolumeDockerVolumeConfigurationPtrType) ToTaskDefinitionVolumeDockerVolumeConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionVolumeDockerVolumeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionVolumeDockerVolumeConfigurationPtrOutput)
}

type TaskDefinitionVolumeDockerVolumeConfigurationOutput struct{ *pulumi.OutputState }

func (TaskDefinitionVolumeDockerVolumeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionVolumeDockerVolumeConfiguration)(nil)).Elem()
}

func (o TaskDefinitionVolumeDockerVolumeConfigurationOutput) ToTaskDefinitionVolumeDockerVolumeConfigurationOutput() TaskDefinitionVolumeDockerVolumeConfigurationOutput {
	return o
}

func (o TaskDefinitionVolumeDockerVolumeConfigurationOutput) ToTaskDefinitionVolumeDockerVolumeConfigurationOutputWithContext(ctx context.Context) TaskDefinitionVolumeDockerVolumeConfigurationOutput {
	return o
}

func (o TaskDefinitionVolumeDockerVolumeConfigurationOutput) ToTaskDefinitionVolumeDockerVolumeConfigurationPtrOutput() TaskDefinitionVolumeDockerVolumeConfigurationPtrOutput {
	return o.ToTaskDefinitionVolumeDockerVolumeConfigurationPtrOutputWithContext(context.Background())
}

func (o TaskDefinitionVolumeDockerVolumeConfigurationOutput) ToTaskDefinitionVolumeDockerVolumeConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionVolumeDockerVolumeConfigurationPtrOutput {
	return o.ApplyT(func(v TaskDefinitionVolumeDockerVolumeConfiguration) *TaskDefinitionVolumeDockerVolumeConfiguration {
		return &v
	}).(TaskDefinitionVolumeDockerVolumeConfigurationPtrOutput)
}

// If this value is `true`, the Docker volume is created if it does not already exist. *Note*: This field is only used if the scope is `shared`.
func (o TaskDefinitionVolumeDockerVolumeConfigurationOutput) Autoprovision() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TaskDefinitionVolumeDockerVolumeConfiguration) *bool { return v.Autoprovision }).(pulumi.BoolPtrOutput)
}

// The Docker volume driver to use. The driver value must match the driver name provided by Docker because it is used for task placement.
func (o TaskDefinitionVolumeDockerVolumeConfigurationOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionVolumeDockerVolumeConfiguration) *string { return v.Driver }).(pulumi.StringPtrOutput)
}

// A map of Docker driver specific options.
func (o TaskDefinitionVolumeDockerVolumeConfigurationOutput) DriverOpts() pulumi.StringMapOutput {
	return o.ApplyT(func(v TaskDefinitionVolumeDockerVolumeConfiguration) map[string]string { return v.DriverOpts }).(pulumi.StringMapOutput)
}

// A map of custom metadata to add to your Docker volume.
func (o TaskDefinitionVolumeDockerVolumeConfigurationOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v TaskDefinitionVolumeDockerVolumeConfiguration) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The scope for the Docker volume, which determines its lifecycle, either `task` or `shared`.  Docker volumes that are scoped to a `task` are automatically provisioned when the task starts and destroyed when the task stops. Docker volumes that are `scoped` as shared persist after the task stops.
func (o TaskDefinitionVolumeDockerVolumeConfigurationOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionVolumeDockerVolumeConfiguration) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

type TaskDefinitionVolumeDockerVolumeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TaskDefinitionVolumeDockerVolumeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionVolumeDockerVolumeConfiguration)(nil)).Elem()
}

func (o TaskDefinitionVolumeDockerVolumeConfigurationPtrOutput) ToTaskDefinitionVolumeDockerVolumeConfigurationPtrOutput() TaskDefinitionVolumeDockerVolumeConfigurationPtrOutput {
	return o
}

func (o TaskDefinitionVolumeDockerVolumeConfigurationPtrOutput) ToTaskDefinitionVolumeDockerVolumeConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionVolumeDockerVolumeConfigurationPtrOutput {
	return o
}

func (o TaskDefinitionVolumeDockerVolumeConfigurationPtrOutput) Elem() TaskDefinitionVolumeDockerVolumeConfigurationOutput {
	return o.ApplyT(func(v *TaskDefinitionVolumeDockerVolumeConfiguration) TaskDefinitionVolumeDockerVolumeConfiguration {
		return *v
	}).(TaskDefinitionVolumeDockerVolumeConfigurationOutput)
}

// If this value is `true`, the Docker volume is created if it does not already exist. *Note*: This field is only used if the scope is `shared`.
func (o TaskDefinitionVolumeDockerVolumeConfigurationPtrOutput) Autoprovision() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v TaskDefinitionVolumeDockerVolumeConfiguration) *bool { return v.Autoprovision }).(pulumi.BoolPtrOutput)
}

// The Docker volume driver to use. The driver value must match the driver name provided by Docker because it is used for task placement.
func (o TaskDefinitionVolumeDockerVolumeConfigurationPtrOutput) Driver() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionVolumeDockerVolumeConfiguration) *string { return v.Driver }).(pulumi.StringPtrOutput)
}

// A map of Docker driver specific options.
func (o TaskDefinitionVolumeDockerVolumeConfigurationPtrOutput) DriverOpts() pulumi.StringMapOutput {
	return o.ApplyT(func(v TaskDefinitionVolumeDockerVolumeConfiguration) map[string]string { return v.DriverOpts }).(pulumi.StringMapOutput)
}

// A map of custom metadata to add to your Docker volume.
func (o TaskDefinitionVolumeDockerVolumeConfigurationPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v TaskDefinitionVolumeDockerVolumeConfiguration) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// The scope for the Docker volume, which determines its lifecycle, either `task` or `shared`.  Docker volumes that are scoped to a `task` are automatically provisioned when the task starts and destroyed when the task stops. Docker volumes that are `scoped` as shared persist after the task stops.
func (o TaskDefinitionVolumeDockerVolumeConfigurationPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionVolumeDockerVolumeConfiguration) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

type TaskDefinitionVolumeEfsVolumeConfiguration struct {
	// The ID of the EFS File System.
	FileSystemId string `pulumi:"fileSystemId"`
	// The path to mount on the host
	RootDirectory *string `pulumi:"rootDirectory"`
}

// TaskDefinitionVolumeEfsVolumeConfigurationInput is an input type that accepts TaskDefinitionVolumeEfsVolumeConfigurationArgs and TaskDefinitionVolumeEfsVolumeConfigurationOutput values.
// You can construct a concrete instance of `TaskDefinitionVolumeEfsVolumeConfigurationInput` via:
//
// 		 TaskDefinitionVolumeEfsVolumeConfigurationArgs{...}
//
type TaskDefinitionVolumeEfsVolumeConfigurationInput interface {
	pulumi.Input

	ToTaskDefinitionVolumeEfsVolumeConfigurationOutput() TaskDefinitionVolumeEfsVolumeConfigurationOutput
	ToTaskDefinitionVolumeEfsVolumeConfigurationOutputWithContext(context.Context) TaskDefinitionVolumeEfsVolumeConfigurationOutput
}

type TaskDefinitionVolumeEfsVolumeConfigurationArgs struct {
	// The ID of the EFS File System.
	FileSystemId pulumi.StringInput `pulumi:"fileSystemId"`
	// The path to mount on the host
	RootDirectory pulumi.StringPtrInput `pulumi:"rootDirectory"`
}

func (TaskDefinitionVolumeEfsVolumeConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionVolumeEfsVolumeConfiguration)(nil)).Elem()
}

func (i TaskDefinitionVolumeEfsVolumeConfigurationArgs) ToTaskDefinitionVolumeEfsVolumeConfigurationOutput() TaskDefinitionVolumeEfsVolumeConfigurationOutput {
	return i.ToTaskDefinitionVolumeEfsVolumeConfigurationOutputWithContext(context.Background())
}

func (i TaskDefinitionVolumeEfsVolumeConfigurationArgs) ToTaskDefinitionVolumeEfsVolumeConfigurationOutputWithContext(ctx context.Context) TaskDefinitionVolumeEfsVolumeConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionVolumeEfsVolumeConfigurationOutput)
}

func (i TaskDefinitionVolumeEfsVolumeConfigurationArgs) ToTaskDefinitionVolumeEfsVolumeConfigurationPtrOutput() TaskDefinitionVolumeEfsVolumeConfigurationPtrOutput {
	return i.ToTaskDefinitionVolumeEfsVolumeConfigurationPtrOutputWithContext(context.Background())
}

func (i TaskDefinitionVolumeEfsVolumeConfigurationArgs) ToTaskDefinitionVolumeEfsVolumeConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionVolumeEfsVolumeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionVolumeEfsVolumeConfigurationOutput).ToTaskDefinitionVolumeEfsVolumeConfigurationPtrOutputWithContext(ctx)
}

// TaskDefinitionVolumeEfsVolumeConfigurationPtrInput is an input type that accepts TaskDefinitionVolumeEfsVolumeConfigurationArgs, TaskDefinitionVolumeEfsVolumeConfigurationPtr and TaskDefinitionVolumeEfsVolumeConfigurationPtrOutput values.
// You can construct a concrete instance of `TaskDefinitionVolumeEfsVolumeConfigurationPtrInput` via:
//
// 		 TaskDefinitionVolumeEfsVolumeConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type TaskDefinitionVolumeEfsVolumeConfigurationPtrInput interface {
	pulumi.Input

	ToTaskDefinitionVolumeEfsVolumeConfigurationPtrOutput() TaskDefinitionVolumeEfsVolumeConfigurationPtrOutput
	ToTaskDefinitionVolumeEfsVolumeConfigurationPtrOutputWithContext(context.Context) TaskDefinitionVolumeEfsVolumeConfigurationPtrOutput
}

type taskDefinitionVolumeEfsVolumeConfigurationPtrType TaskDefinitionVolumeEfsVolumeConfigurationArgs

func TaskDefinitionVolumeEfsVolumeConfigurationPtr(v *TaskDefinitionVolumeEfsVolumeConfigurationArgs) TaskDefinitionVolumeEfsVolumeConfigurationPtrInput {
	return (*taskDefinitionVolumeEfsVolumeConfigurationPtrType)(v)
}

func (*taskDefinitionVolumeEfsVolumeConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionVolumeEfsVolumeConfiguration)(nil)).Elem()
}

func (i *taskDefinitionVolumeEfsVolumeConfigurationPtrType) ToTaskDefinitionVolumeEfsVolumeConfigurationPtrOutput() TaskDefinitionVolumeEfsVolumeConfigurationPtrOutput {
	return i.ToTaskDefinitionVolumeEfsVolumeConfigurationPtrOutputWithContext(context.Background())
}

func (i *taskDefinitionVolumeEfsVolumeConfigurationPtrType) ToTaskDefinitionVolumeEfsVolumeConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionVolumeEfsVolumeConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TaskDefinitionVolumeEfsVolumeConfigurationPtrOutput)
}

type TaskDefinitionVolumeEfsVolumeConfigurationOutput struct{ *pulumi.OutputState }

func (TaskDefinitionVolumeEfsVolumeConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TaskDefinitionVolumeEfsVolumeConfiguration)(nil)).Elem()
}

func (o TaskDefinitionVolumeEfsVolumeConfigurationOutput) ToTaskDefinitionVolumeEfsVolumeConfigurationOutput() TaskDefinitionVolumeEfsVolumeConfigurationOutput {
	return o
}

func (o TaskDefinitionVolumeEfsVolumeConfigurationOutput) ToTaskDefinitionVolumeEfsVolumeConfigurationOutputWithContext(ctx context.Context) TaskDefinitionVolumeEfsVolumeConfigurationOutput {
	return o
}

func (o TaskDefinitionVolumeEfsVolumeConfigurationOutput) ToTaskDefinitionVolumeEfsVolumeConfigurationPtrOutput() TaskDefinitionVolumeEfsVolumeConfigurationPtrOutput {
	return o.ToTaskDefinitionVolumeEfsVolumeConfigurationPtrOutputWithContext(context.Background())
}

func (o TaskDefinitionVolumeEfsVolumeConfigurationOutput) ToTaskDefinitionVolumeEfsVolumeConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionVolumeEfsVolumeConfigurationPtrOutput {
	return o.ApplyT(func(v TaskDefinitionVolumeEfsVolumeConfiguration) *TaskDefinitionVolumeEfsVolumeConfiguration {
		return &v
	}).(TaskDefinitionVolumeEfsVolumeConfigurationPtrOutput)
}

// The ID of the EFS File System.
func (o TaskDefinitionVolumeEfsVolumeConfigurationOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v TaskDefinitionVolumeEfsVolumeConfiguration) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// The path to mount on the host
func (o TaskDefinitionVolumeEfsVolumeConfigurationOutput) RootDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionVolumeEfsVolumeConfiguration) *string { return v.RootDirectory }).(pulumi.StringPtrOutput)
}

type TaskDefinitionVolumeEfsVolumeConfigurationPtrOutput struct{ *pulumi.OutputState }

func (TaskDefinitionVolumeEfsVolumeConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TaskDefinitionVolumeEfsVolumeConfiguration)(nil)).Elem()
}

func (o TaskDefinitionVolumeEfsVolumeConfigurationPtrOutput) ToTaskDefinitionVolumeEfsVolumeConfigurationPtrOutput() TaskDefinitionVolumeEfsVolumeConfigurationPtrOutput {
	return o
}

func (o TaskDefinitionVolumeEfsVolumeConfigurationPtrOutput) ToTaskDefinitionVolumeEfsVolumeConfigurationPtrOutputWithContext(ctx context.Context) TaskDefinitionVolumeEfsVolumeConfigurationPtrOutput {
	return o
}

func (o TaskDefinitionVolumeEfsVolumeConfigurationPtrOutput) Elem() TaskDefinitionVolumeEfsVolumeConfigurationOutput {
	return o.ApplyT(func(v *TaskDefinitionVolumeEfsVolumeConfiguration) TaskDefinitionVolumeEfsVolumeConfiguration {
		return *v
	}).(TaskDefinitionVolumeEfsVolumeConfigurationOutput)
}

// The ID of the EFS File System.
func (o TaskDefinitionVolumeEfsVolumeConfigurationPtrOutput) FileSystemId() pulumi.StringOutput {
	return o.ApplyT(func(v TaskDefinitionVolumeEfsVolumeConfiguration) string { return v.FileSystemId }).(pulumi.StringOutput)
}

// The path to mount on the host
func (o TaskDefinitionVolumeEfsVolumeConfigurationPtrOutput) RootDirectory() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TaskDefinitionVolumeEfsVolumeConfiguration) *string { return v.RootDirectory }).(pulumi.StringPtrOutput)
}

type GetClusterSetting struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// GetClusterSettingInput is an input type that accepts GetClusterSettingArgs and GetClusterSettingOutput values.
// You can construct a concrete instance of `GetClusterSettingInput` via:
//
// 		 GetClusterSettingArgs{...}
//
type GetClusterSettingInput interface {
	pulumi.Input

	ToGetClusterSettingOutput() GetClusterSettingOutput
	ToGetClusterSettingOutputWithContext(context.Context) GetClusterSettingOutput
}

type GetClusterSettingArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetClusterSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSetting)(nil)).Elem()
}

func (i GetClusterSettingArgs) ToGetClusterSettingOutput() GetClusterSettingOutput {
	return i.ToGetClusterSettingOutputWithContext(context.Background())
}

func (i GetClusterSettingArgs) ToGetClusterSettingOutputWithContext(ctx context.Context) GetClusterSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSettingOutput)
}

// GetClusterSettingArrayInput is an input type that accepts GetClusterSettingArray and GetClusterSettingArrayOutput values.
// You can construct a concrete instance of `GetClusterSettingArrayInput` via:
//
// 		 GetClusterSettingArray{ GetClusterSettingArgs{...} }
//
type GetClusterSettingArrayInput interface {
	pulumi.Input

	ToGetClusterSettingArrayOutput() GetClusterSettingArrayOutput
	ToGetClusterSettingArrayOutputWithContext(context.Context) GetClusterSettingArrayOutput
}

type GetClusterSettingArray []GetClusterSettingInput

func (GetClusterSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSetting)(nil)).Elem()
}

func (i GetClusterSettingArray) ToGetClusterSettingArrayOutput() GetClusterSettingArrayOutput {
	return i.ToGetClusterSettingArrayOutputWithContext(context.Background())
}

func (i GetClusterSettingArray) ToGetClusterSettingArrayOutputWithContext(ctx context.Context) GetClusterSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetClusterSettingArrayOutput)
}

type GetClusterSettingOutput struct{ *pulumi.OutputState }

func (GetClusterSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClusterSetting)(nil)).Elem()
}

func (o GetClusterSettingOutput) ToGetClusterSettingOutput() GetClusterSettingOutput {
	return o
}

func (o GetClusterSettingOutput) ToGetClusterSettingOutputWithContext(ctx context.Context) GetClusterSettingOutput {
	return o
}

func (o GetClusterSettingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSetting) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetClusterSettingOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetClusterSetting) string { return v.Value }).(pulumi.StringOutput)
}

type GetClusterSettingArrayOutput struct{ *pulumi.OutputState }

func (GetClusterSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetClusterSetting)(nil)).Elem()
}

func (o GetClusterSettingArrayOutput) ToGetClusterSettingArrayOutput() GetClusterSettingArrayOutput {
	return o
}

func (o GetClusterSettingArrayOutput) ToGetClusterSettingArrayOutputWithContext(ctx context.Context) GetClusterSettingArrayOutput {
	return o
}

func (o GetClusterSettingArrayOutput) Index(i pulumi.IntInput) GetClusterSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetClusterSetting {
		return vs[0].([]GetClusterSetting)[vs[1].(int)]
	}).(GetClusterSettingOutput)
}

func init() {
	pulumi.RegisterOutputType(CapacityProviderAutoScalingGroupProviderOutput{})
	pulumi.RegisterOutputType(CapacityProviderAutoScalingGroupProviderPtrOutput{})
	pulumi.RegisterOutputType(CapacityProviderAutoScalingGroupProviderManagedScalingOutput{})
	pulumi.RegisterOutputType(CapacityProviderAutoScalingGroupProviderManagedScalingPtrOutput{})
	pulumi.RegisterOutputType(ClusterDefaultCapacityProviderStrategyOutput{})
	pulumi.RegisterOutputType(ClusterDefaultCapacityProviderStrategyArrayOutput{})
	pulumi.RegisterOutputType(ClusterSettingOutput{})
	pulumi.RegisterOutputType(ClusterSettingArrayOutput{})
	pulumi.RegisterOutputType(ServiceCapacityProviderStrategyOutput{})
	pulumi.RegisterOutputType(ServiceCapacityProviderStrategyArrayOutput{})
	pulumi.RegisterOutputType(ServiceDeploymentControllerOutput{})
	pulumi.RegisterOutputType(ServiceDeploymentControllerPtrOutput{})
	pulumi.RegisterOutputType(ServiceLoadBalancerOutput{})
	pulumi.RegisterOutputType(ServiceLoadBalancerArrayOutput{})
	pulumi.RegisterOutputType(ServiceNetworkConfigurationOutput{})
	pulumi.RegisterOutputType(ServiceNetworkConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ServiceOrderedPlacementStrategyOutput{})
	pulumi.RegisterOutputType(ServiceOrderedPlacementStrategyArrayOutput{})
	pulumi.RegisterOutputType(ServicePlacementConstraintOutput{})
	pulumi.RegisterOutputType(ServicePlacementConstraintArrayOutput{})
	pulumi.RegisterOutputType(ServiceServiceRegistriesOutput{})
	pulumi.RegisterOutputType(ServiceServiceRegistriesPtrOutput{})
	pulumi.RegisterOutputType(TaskDefinitionInferenceAcceleratorOutput{})
	pulumi.RegisterOutputType(TaskDefinitionInferenceAcceleratorArrayOutput{})
	pulumi.RegisterOutputType(TaskDefinitionPlacementConstraintOutput{})
	pulumi.RegisterOutputType(TaskDefinitionPlacementConstraintArrayOutput{})
	pulumi.RegisterOutputType(TaskDefinitionProxyConfigurationOutput{})
	pulumi.RegisterOutputType(TaskDefinitionProxyConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TaskDefinitionVolumeOutput{})
	pulumi.RegisterOutputType(TaskDefinitionVolumeArrayOutput{})
	pulumi.RegisterOutputType(TaskDefinitionVolumeDockerVolumeConfigurationOutput{})
	pulumi.RegisterOutputType(TaskDefinitionVolumeDockerVolumeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(TaskDefinitionVolumeEfsVolumeConfigurationOutput{})
	pulumi.RegisterOutputType(TaskDefinitionVolumeEfsVolumeConfigurationPtrOutput{})
	pulumi.RegisterOutputType(GetClusterSettingOutput{})
	pulumi.RegisterOutputType(GetClusterSettingArrayOutput{})
}
