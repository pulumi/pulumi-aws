// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// The ECS Service data source allows access to details of a specific
// Service within a AWS ECS Cluster.
func Lookupervice(ctx *pulumi.Context, args *GetServiceArgs) (*GetServiceResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["clusterArn"] = args.ClusterArn
		inputs["serviceName"] = args.ServiceName
	}
	outputs, err := ctx.Invoke("aws:ecs/getService:getService", inputs)
	if err != nil {
		return nil, err
	}
	ret := GetServiceResult{}
	if v, ok := outputs["arn"]; ok {
		ret.Arn = v
	}
	if v, ok := outputs["desiredCount"]; ok {
		ret.DesiredCount = v
	}
	if v, ok := outputs["launchType"]; ok {
		ret.LaunchType = v
	}
	if v, ok := outputs["taskDefinition"]; ok {
		ret.TaskDefinition = v
	}
	return &ret, nil
}

// A collection of arguments for invoking getService.
type GetServiceArgs struct {
	// The arn of the ECS Cluster
	ClusterArn interface{}
	// The name of the ECS Service
	ServiceName interface{}
}

// A collection of values returned by getService.
type GetServiceResult struct {
	// The ARN of the ECS Service
	Arn interface{}
	// The number of tasks for the ECS Service
	DesiredCount interface{}
	// The launch type for the ECS Service
	LaunchType interface{}
	// The family for the latest ACTIVE revision
	TaskDefinition interface{}
}
