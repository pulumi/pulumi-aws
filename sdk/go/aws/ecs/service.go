// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ecs

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Service struct {
	pulumi.CustomResourceState

	Alarms                          ServiceAlarmsPtrOutput                      `pulumi:"alarms"`
	CapacityProviderStrategies      ServiceCapacityProviderStrategyArrayOutput  `pulumi:"capacityProviderStrategies"`
	Cluster                         pulumi.StringOutput                         `pulumi:"cluster"`
	DeploymentCircuitBreaker        ServiceDeploymentCircuitBreakerPtrOutput    `pulumi:"deploymentCircuitBreaker"`
	DeploymentController            ServiceDeploymentControllerPtrOutput        `pulumi:"deploymentController"`
	DeploymentMaximumPercent        pulumi.IntPtrOutput                         `pulumi:"deploymentMaximumPercent"`
	DeploymentMinimumHealthyPercent pulumi.IntPtrOutput                         `pulumi:"deploymentMinimumHealthyPercent"`
	DesiredCount                    pulumi.IntPtrOutput                         `pulumi:"desiredCount"`
	EnableEcsManagedTags            pulumi.BoolPtrOutput                        `pulumi:"enableEcsManagedTags"`
	EnableExecuteCommand            pulumi.BoolPtrOutput                        `pulumi:"enableExecuteCommand"`
	ForceNewDeployment              pulumi.BoolPtrOutput                        `pulumi:"forceNewDeployment"`
	HealthCheckGracePeriodSeconds   pulumi.IntPtrOutput                         `pulumi:"healthCheckGracePeriodSeconds"`
	IamRole                         pulumi.StringOutput                         `pulumi:"iamRole"`
	LaunchType                      pulumi.StringOutput                         `pulumi:"launchType"`
	LoadBalancers                   ServiceLoadBalancerArrayOutput              `pulumi:"loadBalancers"`
	Name                            pulumi.StringOutput                         `pulumi:"name"`
	NetworkConfiguration            ServiceNetworkConfigurationPtrOutput        `pulumi:"networkConfiguration"`
	OrderedPlacementStrategies      ServiceOrderedPlacementStrategyArrayOutput  `pulumi:"orderedPlacementStrategies"`
	PlacementConstraints            ServicePlacementConstraintArrayOutput       `pulumi:"placementConstraints"`
	PlatformVersion                 pulumi.StringOutput                         `pulumi:"platformVersion"`
	PropagateTags                   pulumi.StringPtrOutput                      `pulumi:"propagateTags"`
	SchedulingStrategy              pulumi.StringPtrOutput                      `pulumi:"schedulingStrategy"`
	ServiceConnectConfiguration     ServiceServiceConnectConfigurationPtrOutput `pulumi:"serviceConnectConfiguration"`
	ServiceRegistries               ServiceServiceRegistriesPtrOutput           `pulumi:"serviceRegistries"`
	Tags                            pulumi.StringMapOutput                      `pulumi:"tags"`
	TagsAll                         pulumi.StringMapOutput                      `pulumi:"tagsAll"`
	TaskDefinition                  pulumi.StringPtrOutput                      `pulumi:"taskDefinition"`
	Triggers                        pulumi.StringMapOutput                      `pulumi:"triggers"`
	WaitForSteadyState              pulumi.BoolPtrOutput                        `pulumi:"waitForSteadyState"`
}

// NewService registers a new resource with the given unique name, arguments, and options.
func NewService(ctx *pulumi.Context,
	name string, args *ServiceArgs, opts ...pulumi.ResourceOption) (*Service, error) {
	if args == nil {
		args = &ServiceArgs{}
	}

	var resource Service
	err := ctx.RegisterResource("aws:ecs/service:Service", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetService gets an existing Service resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetService(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceState, opts ...pulumi.ResourceOption) (*Service, error) {
	var resource Service
	err := ctx.ReadResource("aws:ecs/service:Service", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Service resources.
type serviceState struct {
	Alarms                          *ServiceAlarms                      `pulumi:"alarms"`
	CapacityProviderStrategies      []ServiceCapacityProviderStrategy   `pulumi:"capacityProviderStrategies"`
	Cluster                         *string                             `pulumi:"cluster"`
	DeploymentCircuitBreaker        *ServiceDeploymentCircuitBreaker    `pulumi:"deploymentCircuitBreaker"`
	DeploymentController            *ServiceDeploymentController        `pulumi:"deploymentController"`
	DeploymentMaximumPercent        *int                                `pulumi:"deploymentMaximumPercent"`
	DeploymentMinimumHealthyPercent *int                                `pulumi:"deploymentMinimumHealthyPercent"`
	DesiredCount                    *int                                `pulumi:"desiredCount"`
	EnableEcsManagedTags            *bool                               `pulumi:"enableEcsManagedTags"`
	EnableExecuteCommand            *bool                               `pulumi:"enableExecuteCommand"`
	ForceNewDeployment              *bool                               `pulumi:"forceNewDeployment"`
	HealthCheckGracePeriodSeconds   *int                                `pulumi:"healthCheckGracePeriodSeconds"`
	IamRole                         *string                             `pulumi:"iamRole"`
	LaunchType                      *string                             `pulumi:"launchType"`
	LoadBalancers                   []ServiceLoadBalancer               `pulumi:"loadBalancers"`
	Name                            *string                             `pulumi:"name"`
	NetworkConfiguration            *ServiceNetworkConfiguration        `pulumi:"networkConfiguration"`
	OrderedPlacementStrategies      []ServiceOrderedPlacementStrategy   `pulumi:"orderedPlacementStrategies"`
	PlacementConstraints            []ServicePlacementConstraint        `pulumi:"placementConstraints"`
	PlatformVersion                 *string                             `pulumi:"platformVersion"`
	PropagateTags                   *string                             `pulumi:"propagateTags"`
	SchedulingStrategy              *string                             `pulumi:"schedulingStrategy"`
	ServiceConnectConfiguration     *ServiceServiceConnectConfiguration `pulumi:"serviceConnectConfiguration"`
	ServiceRegistries               *ServiceServiceRegistries           `pulumi:"serviceRegistries"`
	Tags                            map[string]string                   `pulumi:"tags"`
	TagsAll                         map[string]string                   `pulumi:"tagsAll"`
	TaskDefinition                  *string                             `pulumi:"taskDefinition"`
	Triggers                        map[string]string                   `pulumi:"triggers"`
	WaitForSteadyState              *bool                               `pulumi:"waitForSteadyState"`
}

type ServiceState struct {
	Alarms                          ServiceAlarmsPtrInput
	CapacityProviderStrategies      ServiceCapacityProviderStrategyArrayInput
	Cluster                         pulumi.StringPtrInput
	DeploymentCircuitBreaker        ServiceDeploymentCircuitBreakerPtrInput
	DeploymentController            ServiceDeploymentControllerPtrInput
	DeploymentMaximumPercent        pulumi.IntPtrInput
	DeploymentMinimumHealthyPercent pulumi.IntPtrInput
	DesiredCount                    pulumi.IntPtrInput
	EnableEcsManagedTags            pulumi.BoolPtrInput
	EnableExecuteCommand            pulumi.BoolPtrInput
	ForceNewDeployment              pulumi.BoolPtrInput
	HealthCheckGracePeriodSeconds   pulumi.IntPtrInput
	IamRole                         pulumi.StringPtrInput
	LaunchType                      pulumi.StringPtrInput
	LoadBalancers                   ServiceLoadBalancerArrayInput
	Name                            pulumi.StringPtrInput
	NetworkConfiguration            ServiceNetworkConfigurationPtrInput
	OrderedPlacementStrategies      ServiceOrderedPlacementStrategyArrayInput
	PlacementConstraints            ServicePlacementConstraintArrayInput
	PlatformVersion                 pulumi.StringPtrInput
	PropagateTags                   pulumi.StringPtrInput
	SchedulingStrategy              pulumi.StringPtrInput
	ServiceConnectConfiguration     ServiceServiceConnectConfigurationPtrInput
	ServiceRegistries               ServiceServiceRegistriesPtrInput
	Tags                            pulumi.StringMapInput
	TagsAll                         pulumi.StringMapInput
	TaskDefinition                  pulumi.StringPtrInput
	Triggers                        pulumi.StringMapInput
	WaitForSteadyState              pulumi.BoolPtrInput
}

func (ServiceState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceState)(nil)).Elem()
}

type serviceArgs struct {
	Alarms                          *ServiceAlarms                      `pulumi:"alarms"`
	CapacityProviderStrategies      []ServiceCapacityProviderStrategy   `pulumi:"capacityProviderStrategies"`
	Cluster                         *string                             `pulumi:"cluster"`
	DeploymentCircuitBreaker        *ServiceDeploymentCircuitBreaker    `pulumi:"deploymentCircuitBreaker"`
	DeploymentController            *ServiceDeploymentController        `pulumi:"deploymentController"`
	DeploymentMaximumPercent        *int                                `pulumi:"deploymentMaximumPercent"`
	DeploymentMinimumHealthyPercent *int                                `pulumi:"deploymentMinimumHealthyPercent"`
	DesiredCount                    *int                                `pulumi:"desiredCount"`
	EnableEcsManagedTags            *bool                               `pulumi:"enableEcsManagedTags"`
	EnableExecuteCommand            *bool                               `pulumi:"enableExecuteCommand"`
	ForceNewDeployment              *bool                               `pulumi:"forceNewDeployment"`
	HealthCheckGracePeriodSeconds   *int                                `pulumi:"healthCheckGracePeriodSeconds"`
	IamRole                         *string                             `pulumi:"iamRole"`
	LaunchType                      *string                             `pulumi:"launchType"`
	LoadBalancers                   []ServiceLoadBalancer               `pulumi:"loadBalancers"`
	Name                            *string                             `pulumi:"name"`
	NetworkConfiguration            *ServiceNetworkConfiguration        `pulumi:"networkConfiguration"`
	OrderedPlacementStrategies      []ServiceOrderedPlacementStrategy   `pulumi:"orderedPlacementStrategies"`
	PlacementConstraints            []ServicePlacementConstraint        `pulumi:"placementConstraints"`
	PlatformVersion                 *string                             `pulumi:"platformVersion"`
	PropagateTags                   *string                             `pulumi:"propagateTags"`
	SchedulingStrategy              *string                             `pulumi:"schedulingStrategy"`
	ServiceConnectConfiguration     *ServiceServiceConnectConfiguration `pulumi:"serviceConnectConfiguration"`
	ServiceRegistries               *ServiceServiceRegistries           `pulumi:"serviceRegistries"`
	Tags                            map[string]string                   `pulumi:"tags"`
	TaskDefinition                  *string                             `pulumi:"taskDefinition"`
	Triggers                        map[string]string                   `pulumi:"triggers"`
	WaitForSteadyState              *bool                               `pulumi:"waitForSteadyState"`
}

// The set of arguments for constructing a Service resource.
type ServiceArgs struct {
	Alarms                          ServiceAlarmsPtrInput
	CapacityProviderStrategies      ServiceCapacityProviderStrategyArrayInput
	Cluster                         pulumi.StringPtrInput
	DeploymentCircuitBreaker        ServiceDeploymentCircuitBreakerPtrInput
	DeploymentController            ServiceDeploymentControllerPtrInput
	DeploymentMaximumPercent        pulumi.IntPtrInput
	DeploymentMinimumHealthyPercent pulumi.IntPtrInput
	DesiredCount                    pulumi.IntPtrInput
	EnableEcsManagedTags            pulumi.BoolPtrInput
	EnableExecuteCommand            pulumi.BoolPtrInput
	ForceNewDeployment              pulumi.BoolPtrInput
	HealthCheckGracePeriodSeconds   pulumi.IntPtrInput
	IamRole                         pulumi.StringPtrInput
	LaunchType                      pulumi.StringPtrInput
	LoadBalancers                   ServiceLoadBalancerArrayInput
	Name                            pulumi.StringPtrInput
	NetworkConfiguration            ServiceNetworkConfigurationPtrInput
	OrderedPlacementStrategies      ServiceOrderedPlacementStrategyArrayInput
	PlacementConstraints            ServicePlacementConstraintArrayInput
	PlatformVersion                 pulumi.StringPtrInput
	PropagateTags                   pulumi.StringPtrInput
	SchedulingStrategy              pulumi.StringPtrInput
	ServiceConnectConfiguration     ServiceServiceConnectConfigurationPtrInput
	ServiceRegistries               ServiceServiceRegistriesPtrInput
	Tags                            pulumi.StringMapInput
	TaskDefinition                  pulumi.StringPtrInput
	Triggers                        pulumi.StringMapInput
	WaitForSteadyState              pulumi.BoolPtrInput
}

func (ServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceArgs)(nil)).Elem()
}

type ServiceInput interface {
	pulumi.Input

	ToServiceOutput() ServiceOutput
	ToServiceOutputWithContext(ctx context.Context) ServiceOutput
}

func (*Service) ElementType() reflect.Type {
	return reflect.TypeOf((**Service)(nil)).Elem()
}

func (i *Service) ToServiceOutput() ServiceOutput {
	return i.ToServiceOutputWithContext(context.Background())
}

func (i *Service) ToServiceOutputWithContext(ctx context.Context) ServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceOutput)
}

// ServiceArrayInput is an input type that accepts ServiceArray and ServiceArrayOutput values.
// You can construct a concrete instance of `ServiceArrayInput` via:
//
//	ServiceArray{ ServiceArgs{...} }
type ServiceArrayInput interface {
	pulumi.Input

	ToServiceArrayOutput() ServiceArrayOutput
	ToServiceArrayOutputWithContext(context.Context) ServiceArrayOutput
}

type ServiceArray []ServiceInput

func (ServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Service)(nil)).Elem()
}

func (i ServiceArray) ToServiceArrayOutput() ServiceArrayOutput {
	return i.ToServiceArrayOutputWithContext(context.Background())
}

func (i ServiceArray) ToServiceArrayOutputWithContext(ctx context.Context) ServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceArrayOutput)
}

// ServiceMapInput is an input type that accepts ServiceMap and ServiceMapOutput values.
// You can construct a concrete instance of `ServiceMapInput` via:
//
//	ServiceMap{ "key": ServiceArgs{...} }
type ServiceMapInput interface {
	pulumi.Input

	ToServiceMapOutput() ServiceMapOutput
	ToServiceMapOutputWithContext(context.Context) ServiceMapOutput
}

type ServiceMap map[string]ServiceInput

func (ServiceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Service)(nil)).Elem()
}

func (i ServiceMap) ToServiceMapOutput() ServiceMapOutput {
	return i.ToServiceMapOutputWithContext(context.Background())
}

func (i ServiceMap) ToServiceMapOutputWithContext(ctx context.Context) ServiceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceMapOutput)
}

type ServiceOutput struct{ *pulumi.OutputState }

func (ServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Service)(nil)).Elem()
}

func (o ServiceOutput) ToServiceOutput() ServiceOutput {
	return o
}

func (o ServiceOutput) ToServiceOutputWithContext(ctx context.Context) ServiceOutput {
	return o
}

func (o ServiceOutput) Alarms() ServiceAlarmsPtrOutput {
	return o.ApplyT(func(v *Service) ServiceAlarmsPtrOutput { return v.Alarms }).(ServiceAlarmsPtrOutput)
}

func (o ServiceOutput) CapacityProviderStrategies() ServiceCapacityProviderStrategyArrayOutput {
	return o.ApplyT(func(v *Service) ServiceCapacityProviderStrategyArrayOutput { return v.CapacityProviderStrategies }).(ServiceCapacityProviderStrategyArrayOutput)
}

func (o ServiceOutput) Cluster() pulumi.StringOutput {
	return o.ApplyT(func(v *Service) pulumi.StringOutput { return v.Cluster }).(pulumi.StringOutput)
}

func (o ServiceOutput) DeploymentCircuitBreaker() ServiceDeploymentCircuitBreakerPtrOutput {
	return o.ApplyT(func(v *Service) ServiceDeploymentCircuitBreakerPtrOutput { return v.DeploymentCircuitBreaker }).(ServiceDeploymentCircuitBreakerPtrOutput)
}

func (o ServiceOutput) DeploymentController() ServiceDeploymentControllerPtrOutput {
	return o.ApplyT(func(v *Service) ServiceDeploymentControllerPtrOutput { return v.DeploymentController }).(ServiceDeploymentControllerPtrOutput)
}

func (o ServiceOutput) DeploymentMaximumPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Service) pulumi.IntPtrOutput { return v.DeploymentMaximumPercent }).(pulumi.IntPtrOutput)
}

func (o ServiceOutput) DeploymentMinimumHealthyPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Service) pulumi.IntPtrOutput { return v.DeploymentMinimumHealthyPercent }).(pulumi.IntPtrOutput)
}

func (o ServiceOutput) DesiredCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Service) pulumi.IntPtrOutput { return v.DesiredCount }).(pulumi.IntPtrOutput)
}

func (o ServiceOutput) EnableEcsManagedTags() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Service) pulumi.BoolPtrOutput { return v.EnableEcsManagedTags }).(pulumi.BoolPtrOutput)
}

func (o ServiceOutput) EnableExecuteCommand() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Service) pulumi.BoolPtrOutput { return v.EnableExecuteCommand }).(pulumi.BoolPtrOutput)
}

func (o ServiceOutput) ForceNewDeployment() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Service) pulumi.BoolPtrOutput { return v.ForceNewDeployment }).(pulumi.BoolPtrOutput)
}

func (o ServiceOutput) HealthCheckGracePeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Service) pulumi.IntPtrOutput { return v.HealthCheckGracePeriodSeconds }).(pulumi.IntPtrOutput)
}

func (o ServiceOutput) IamRole() pulumi.StringOutput {
	return o.ApplyT(func(v *Service) pulumi.StringOutput { return v.IamRole }).(pulumi.StringOutput)
}

func (o ServiceOutput) LaunchType() pulumi.StringOutput {
	return o.ApplyT(func(v *Service) pulumi.StringOutput { return v.LaunchType }).(pulumi.StringOutput)
}

func (o ServiceOutput) LoadBalancers() ServiceLoadBalancerArrayOutput {
	return o.ApplyT(func(v *Service) ServiceLoadBalancerArrayOutput { return v.LoadBalancers }).(ServiceLoadBalancerArrayOutput)
}

func (o ServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Service) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ServiceOutput) NetworkConfiguration() ServiceNetworkConfigurationPtrOutput {
	return o.ApplyT(func(v *Service) ServiceNetworkConfigurationPtrOutput { return v.NetworkConfiguration }).(ServiceNetworkConfigurationPtrOutput)
}

func (o ServiceOutput) OrderedPlacementStrategies() ServiceOrderedPlacementStrategyArrayOutput {
	return o.ApplyT(func(v *Service) ServiceOrderedPlacementStrategyArrayOutput { return v.OrderedPlacementStrategies }).(ServiceOrderedPlacementStrategyArrayOutput)
}

func (o ServiceOutput) PlacementConstraints() ServicePlacementConstraintArrayOutput {
	return o.ApplyT(func(v *Service) ServicePlacementConstraintArrayOutput { return v.PlacementConstraints }).(ServicePlacementConstraintArrayOutput)
}

func (o ServiceOutput) PlatformVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Service) pulumi.StringOutput { return v.PlatformVersion }).(pulumi.StringOutput)
}

func (o ServiceOutput) PropagateTags() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Service) pulumi.StringPtrOutput { return v.PropagateTags }).(pulumi.StringPtrOutput)
}

func (o ServiceOutput) SchedulingStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Service) pulumi.StringPtrOutput { return v.SchedulingStrategy }).(pulumi.StringPtrOutput)
}

func (o ServiceOutput) ServiceConnectConfiguration() ServiceServiceConnectConfigurationPtrOutput {
	return o.ApplyT(func(v *Service) ServiceServiceConnectConfigurationPtrOutput { return v.ServiceConnectConfiguration }).(ServiceServiceConnectConfigurationPtrOutput)
}

func (o ServiceOutput) ServiceRegistries() ServiceServiceRegistriesPtrOutput {
	return o.ApplyT(func(v *Service) ServiceServiceRegistriesPtrOutput { return v.ServiceRegistries }).(ServiceServiceRegistriesPtrOutput)
}

func (o ServiceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Service) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o ServiceOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Service) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o ServiceOutput) TaskDefinition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Service) pulumi.StringPtrOutput { return v.TaskDefinition }).(pulumi.StringPtrOutput)
}

func (o ServiceOutput) Triggers() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Service) pulumi.StringMapOutput { return v.Triggers }).(pulumi.StringMapOutput)
}

func (o ServiceOutput) WaitForSteadyState() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Service) pulumi.BoolPtrOutput { return v.WaitForSteadyState }).(pulumi.BoolPtrOutput)
}

type ServiceArrayOutput struct{ *pulumi.OutputState }

func (ServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Service)(nil)).Elem()
}

func (o ServiceArrayOutput) ToServiceArrayOutput() ServiceArrayOutput {
	return o
}

func (o ServiceArrayOutput) ToServiceArrayOutputWithContext(ctx context.Context) ServiceArrayOutput {
	return o
}

func (o ServiceArrayOutput) Index(i pulumi.IntInput) ServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Service {
		return vs[0].([]*Service)[vs[1].(int)]
	}).(ServiceOutput)
}

type ServiceMapOutput struct{ *pulumi.OutputState }

func (ServiceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Service)(nil)).Elem()
}

func (o ServiceMapOutput) ToServiceMapOutput() ServiceMapOutput {
	return o
}

func (o ServiceMapOutput) ToServiceMapOutputWithContext(ctx context.Context) ServiceMapOutput {
	return o
}

func (o ServiceMapOutput) MapIndex(k pulumi.StringInput) ServiceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Service {
		return vs[0].(map[string]*Service)[vs[1].(string)]
	}).(ServiceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceInput)(nil)).Elem(), &Service{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceArrayInput)(nil)).Elem(), ServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceMapInput)(nil)).Elem(), ServiceMap{})
	pulumi.RegisterOutputType(ServiceOutput{})
	pulumi.RegisterOutputType(ServiceArrayOutput{})
	pulumi.RegisterOutputType(ServiceMapOutput{})
}
