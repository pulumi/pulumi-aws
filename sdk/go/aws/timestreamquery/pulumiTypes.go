// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package timestreamquery

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ScheduledQueryErrorReportConfiguration struct {
	// Configuration block for the S3 configuration for the error reports. See below.
	S3Configuration ScheduledQueryErrorReportConfigurationS3Configuration `pulumi:"s3Configuration"`
}

// ScheduledQueryErrorReportConfigurationInput is an input type that accepts ScheduledQueryErrorReportConfigurationArgs and ScheduledQueryErrorReportConfigurationOutput values.
// You can construct a concrete instance of `ScheduledQueryErrorReportConfigurationInput` via:
//
//	ScheduledQueryErrorReportConfigurationArgs{...}
type ScheduledQueryErrorReportConfigurationInput interface {
	pulumi.Input

	ToScheduledQueryErrorReportConfigurationOutput() ScheduledQueryErrorReportConfigurationOutput
	ToScheduledQueryErrorReportConfigurationOutputWithContext(context.Context) ScheduledQueryErrorReportConfigurationOutput
}

type ScheduledQueryErrorReportConfigurationArgs struct {
	// Configuration block for the S3 configuration for the error reports. See below.
	S3Configuration ScheduledQueryErrorReportConfigurationS3ConfigurationInput `pulumi:"s3Configuration"`
}

func (ScheduledQueryErrorReportConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryErrorReportConfiguration)(nil)).Elem()
}

func (i ScheduledQueryErrorReportConfigurationArgs) ToScheduledQueryErrorReportConfigurationOutput() ScheduledQueryErrorReportConfigurationOutput {
	return i.ToScheduledQueryErrorReportConfigurationOutputWithContext(context.Background())
}

func (i ScheduledQueryErrorReportConfigurationArgs) ToScheduledQueryErrorReportConfigurationOutputWithContext(ctx context.Context) ScheduledQueryErrorReportConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryErrorReportConfigurationOutput)
}

func (i ScheduledQueryErrorReportConfigurationArgs) ToScheduledQueryErrorReportConfigurationPtrOutput() ScheduledQueryErrorReportConfigurationPtrOutput {
	return i.ToScheduledQueryErrorReportConfigurationPtrOutputWithContext(context.Background())
}

func (i ScheduledQueryErrorReportConfigurationArgs) ToScheduledQueryErrorReportConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryErrorReportConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryErrorReportConfigurationOutput).ToScheduledQueryErrorReportConfigurationPtrOutputWithContext(ctx)
}

// ScheduledQueryErrorReportConfigurationPtrInput is an input type that accepts ScheduledQueryErrorReportConfigurationArgs, ScheduledQueryErrorReportConfigurationPtr and ScheduledQueryErrorReportConfigurationPtrOutput values.
// You can construct a concrete instance of `ScheduledQueryErrorReportConfigurationPtrInput` via:
//
//	        ScheduledQueryErrorReportConfigurationArgs{...}
//
//	or:
//
//	        nil
type ScheduledQueryErrorReportConfigurationPtrInput interface {
	pulumi.Input

	ToScheduledQueryErrorReportConfigurationPtrOutput() ScheduledQueryErrorReportConfigurationPtrOutput
	ToScheduledQueryErrorReportConfigurationPtrOutputWithContext(context.Context) ScheduledQueryErrorReportConfigurationPtrOutput
}

type scheduledQueryErrorReportConfigurationPtrType ScheduledQueryErrorReportConfigurationArgs

func ScheduledQueryErrorReportConfigurationPtr(v *ScheduledQueryErrorReportConfigurationArgs) ScheduledQueryErrorReportConfigurationPtrInput {
	return (*scheduledQueryErrorReportConfigurationPtrType)(v)
}

func (*scheduledQueryErrorReportConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledQueryErrorReportConfiguration)(nil)).Elem()
}

func (i *scheduledQueryErrorReportConfigurationPtrType) ToScheduledQueryErrorReportConfigurationPtrOutput() ScheduledQueryErrorReportConfigurationPtrOutput {
	return i.ToScheduledQueryErrorReportConfigurationPtrOutputWithContext(context.Background())
}

func (i *scheduledQueryErrorReportConfigurationPtrType) ToScheduledQueryErrorReportConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryErrorReportConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryErrorReportConfigurationPtrOutput)
}

type ScheduledQueryErrorReportConfigurationOutput struct{ *pulumi.OutputState }

func (ScheduledQueryErrorReportConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryErrorReportConfiguration)(nil)).Elem()
}

func (o ScheduledQueryErrorReportConfigurationOutput) ToScheduledQueryErrorReportConfigurationOutput() ScheduledQueryErrorReportConfigurationOutput {
	return o
}

func (o ScheduledQueryErrorReportConfigurationOutput) ToScheduledQueryErrorReportConfigurationOutputWithContext(ctx context.Context) ScheduledQueryErrorReportConfigurationOutput {
	return o
}

func (o ScheduledQueryErrorReportConfigurationOutput) ToScheduledQueryErrorReportConfigurationPtrOutput() ScheduledQueryErrorReportConfigurationPtrOutput {
	return o.ToScheduledQueryErrorReportConfigurationPtrOutputWithContext(context.Background())
}

func (o ScheduledQueryErrorReportConfigurationOutput) ToScheduledQueryErrorReportConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryErrorReportConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledQueryErrorReportConfiguration) *ScheduledQueryErrorReportConfiguration {
		return &v
	}).(ScheduledQueryErrorReportConfigurationPtrOutput)
}

// Configuration block for the S3 configuration for the error reports. See below.
func (o ScheduledQueryErrorReportConfigurationOutput) S3Configuration() ScheduledQueryErrorReportConfigurationS3ConfigurationOutput {
	return o.ApplyT(func(v ScheduledQueryErrorReportConfiguration) ScheduledQueryErrorReportConfigurationS3Configuration {
		return v.S3Configuration
	}).(ScheduledQueryErrorReportConfigurationS3ConfigurationOutput)
}

type ScheduledQueryErrorReportConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ScheduledQueryErrorReportConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledQueryErrorReportConfiguration)(nil)).Elem()
}

func (o ScheduledQueryErrorReportConfigurationPtrOutput) ToScheduledQueryErrorReportConfigurationPtrOutput() ScheduledQueryErrorReportConfigurationPtrOutput {
	return o
}

func (o ScheduledQueryErrorReportConfigurationPtrOutput) ToScheduledQueryErrorReportConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryErrorReportConfigurationPtrOutput {
	return o
}

func (o ScheduledQueryErrorReportConfigurationPtrOutput) Elem() ScheduledQueryErrorReportConfigurationOutput {
	return o.ApplyT(func(v *ScheduledQueryErrorReportConfiguration) ScheduledQueryErrorReportConfiguration {
		if v != nil {
			return *v
		}
		var ret ScheduledQueryErrorReportConfiguration
		return ret
	}).(ScheduledQueryErrorReportConfigurationOutput)
}

// Configuration block for the S3 configuration for the error reports. See below.
func (o ScheduledQueryErrorReportConfigurationPtrOutput) S3Configuration() ScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput {
	return o.ApplyT(func(v *ScheduledQueryErrorReportConfiguration) *ScheduledQueryErrorReportConfigurationS3Configuration {
		if v == nil {
			return nil
		}
		return &v.S3Configuration
	}).(ScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput)
}

type ScheduledQueryErrorReportConfigurationS3Configuration struct {
	// Name of the S3 bucket under which error reports will be created.
	BucketName string `pulumi:"bucketName"`
	// Encryption at rest options for the error reports. If no encryption option is specified, Timestream will choose `SSE_S3` as default. Valid values are `SSE_S3`, `SSE_KMS`.
	EncryptionOption *string `pulumi:"encryptionOption"`
	// Prefix for the error report key.
	ObjectKeyPrefix *string `pulumi:"objectKeyPrefix"`
}

// ScheduledQueryErrorReportConfigurationS3ConfigurationInput is an input type that accepts ScheduledQueryErrorReportConfigurationS3ConfigurationArgs and ScheduledQueryErrorReportConfigurationS3ConfigurationOutput values.
// You can construct a concrete instance of `ScheduledQueryErrorReportConfigurationS3ConfigurationInput` via:
//
//	ScheduledQueryErrorReportConfigurationS3ConfigurationArgs{...}
type ScheduledQueryErrorReportConfigurationS3ConfigurationInput interface {
	pulumi.Input

	ToScheduledQueryErrorReportConfigurationS3ConfigurationOutput() ScheduledQueryErrorReportConfigurationS3ConfigurationOutput
	ToScheduledQueryErrorReportConfigurationS3ConfigurationOutputWithContext(context.Context) ScheduledQueryErrorReportConfigurationS3ConfigurationOutput
}

type ScheduledQueryErrorReportConfigurationS3ConfigurationArgs struct {
	// Name of the S3 bucket under which error reports will be created.
	BucketName pulumi.StringInput `pulumi:"bucketName"`
	// Encryption at rest options for the error reports. If no encryption option is specified, Timestream will choose `SSE_S3` as default. Valid values are `SSE_S3`, `SSE_KMS`.
	EncryptionOption pulumi.StringPtrInput `pulumi:"encryptionOption"`
	// Prefix for the error report key.
	ObjectKeyPrefix pulumi.StringPtrInput `pulumi:"objectKeyPrefix"`
}

func (ScheduledQueryErrorReportConfigurationS3ConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryErrorReportConfigurationS3Configuration)(nil)).Elem()
}

func (i ScheduledQueryErrorReportConfigurationS3ConfigurationArgs) ToScheduledQueryErrorReportConfigurationS3ConfigurationOutput() ScheduledQueryErrorReportConfigurationS3ConfigurationOutput {
	return i.ToScheduledQueryErrorReportConfigurationS3ConfigurationOutputWithContext(context.Background())
}

func (i ScheduledQueryErrorReportConfigurationS3ConfigurationArgs) ToScheduledQueryErrorReportConfigurationS3ConfigurationOutputWithContext(ctx context.Context) ScheduledQueryErrorReportConfigurationS3ConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryErrorReportConfigurationS3ConfigurationOutput)
}

func (i ScheduledQueryErrorReportConfigurationS3ConfigurationArgs) ToScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput() ScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput {
	return i.ToScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i ScheduledQueryErrorReportConfigurationS3ConfigurationArgs) ToScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryErrorReportConfigurationS3ConfigurationOutput).ToScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutputWithContext(ctx)
}

// ScheduledQueryErrorReportConfigurationS3ConfigurationPtrInput is an input type that accepts ScheduledQueryErrorReportConfigurationS3ConfigurationArgs, ScheduledQueryErrorReportConfigurationS3ConfigurationPtr and ScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput values.
// You can construct a concrete instance of `ScheduledQueryErrorReportConfigurationS3ConfigurationPtrInput` via:
//
//	        ScheduledQueryErrorReportConfigurationS3ConfigurationArgs{...}
//
//	or:
//
//	        nil
type ScheduledQueryErrorReportConfigurationS3ConfigurationPtrInput interface {
	pulumi.Input

	ToScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput() ScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput
	ToScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutputWithContext(context.Context) ScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput
}

type scheduledQueryErrorReportConfigurationS3ConfigurationPtrType ScheduledQueryErrorReportConfigurationS3ConfigurationArgs

func ScheduledQueryErrorReportConfigurationS3ConfigurationPtr(v *ScheduledQueryErrorReportConfigurationS3ConfigurationArgs) ScheduledQueryErrorReportConfigurationS3ConfigurationPtrInput {
	return (*scheduledQueryErrorReportConfigurationS3ConfigurationPtrType)(v)
}

func (*scheduledQueryErrorReportConfigurationS3ConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledQueryErrorReportConfigurationS3Configuration)(nil)).Elem()
}

func (i *scheduledQueryErrorReportConfigurationS3ConfigurationPtrType) ToScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput() ScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput {
	return i.ToScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutputWithContext(context.Background())
}

func (i *scheduledQueryErrorReportConfigurationS3ConfigurationPtrType) ToScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput)
}

type ScheduledQueryErrorReportConfigurationS3ConfigurationOutput struct{ *pulumi.OutputState }

func (ScheduledQueryErrorReportConfigurationS3ConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryErrorReportConfigurationS3Configuration)(nil)).Elem()
}

func (o ScheduledQueryErrorReportConfigurationS3ConfigurationOutput) ToScheduledQueryErrorReportConfigurationS3ConfigurationOutput() ScheduledQueryErrorReportConfigurationS3ConfigurationOutput {
	return o
}

func (o ScheduledQueryErrorReportConfigurationS3ConfigurationOutput) ToScheduledQueryErrorReportConfigurationS3ConfigurationOutputWithContext(ctx context.Context) ScheduledQueryErrorReportConfigurationS3ConfigurationOutput {
	return o
}

func (o ScheduledQueryErrorReportConfigurationS3ConfigurationOutput) ToScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput() ScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput {
	return o.ToScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutputWithContext(context.Background())
}

func (o ScheduledQueryErrorReportConfigurationS3ConfigurationOutput) ToScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledQueryErrorReportConfigurationS3Configuration) *ScheduledQueryErrorReportConfigurationS3Configuration {
		return &v
	}).(ScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput)
}

// Name of the S3 bucket under which error reports will be created.
func (o ScheduledQueryErrorReportConfigurationS3ConfigurationOutput) BucketName() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledQueryErrorReportConfigurationS3Configuration) string { return v.BucketName }).(pulumi.StringOutput)
}

// Encryption at rest options for the error reports. If no encryption option is specified, Timestream will choose `SSE_S3` as default. Valid values are `SSE_S3`, `SSE_KMS`.
func (o ScheduledQueryErrorReportConfigurationS3ConfigurationOutput) EncryptionOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryErrorReportConfigurationS3Configuration) *string { return v.EncryptionOption }).(pulumi.StringPtrOutput)
}

// Prefix for the error report key.
func (o ScheduledQueryErrorReportConfigurationS3ConfigurationOutput) ObjectKeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryErrorReportConfigurationS3Configuration) *string { return v.ObjectKeyPrefix }).(pulumi.StringPtrOutput)
}

type ScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledQueryErrorReportConfigurationS3Configuration)(nil)).Elem()
}

func (o ScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput) ToScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput() ScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput {
	return o
}

func (o ScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput) ToScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput {
	return o
}

func (o ScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput) Elem() ScheduledQueryErrorReportConfigurationS3ConfigurationOutput {
	return o.ApplyT(func(v *ScheduledQueryErrorReportConfigurationS3Configuration) ScheduledQueryErrorReportConfigurationS3Configuration {
		if v != nil {
			return *v
		}
		var ret ScheduledQueryErrorReportConfigurationS3Configuration
		return ret
	}).(ScheduledQueryErrorReportConfigurationS3ConfigurationOutput)
}

// Name of the S3 bucket under which error reports will be created.
func (o ScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledQueryErrorReportConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return &v.BucketName
	}).(pulumi.StringPtrOutput)
}

// Encryption at rest options for the error reports. If no encryption option is specified, Timestream will choose `SSE_S3` as default. Valid values are `SSE_S3`, `SSE_KMS`.
func (o ScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput) EncryptionOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledQueryErrorReportConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.EncryptionOption
	}).(pulumi.StringPtrOutput)
}

// Prefix for the error report key.
func (o ScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput) ObjectKeyPrefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledQueryErrorReportConfigurationS3Configuration) *string {
		if v == nil {
			return nil
		}
		return v.ObjectKeyPrefix
	}).(pulumi.StringPtrOutput)
}

type ScheduledQueryLastRunSummary struct {
	// S3 location for error report.
	ErrorReportLocations []ScheduledQueryLastRunSummaryErrorReportLocation `pulumi:"errorReportLocations"`
	// Statistics for a single scheduled query run.
	ExecutionStats []ScheduledQueryLastRunSummaryExecutionStat `pulumi:"executionStats"`
	// Error message for the scheduled query in case of failure. You might have to look at the error report to get more detailed error reasons.
	FailureReason *string `pulumi:"failureReason"`
	// InvocationTime for this run. This is the time at which the query is scheduled to run. Parameter `@scheduled_runtime` can be used in the query to get the value.
	InvocationTime *string `pulumi:"invocationTime"`
	// Various insights and metrics related to the run summary of the scheduled query.
	QueryInsightsResponses []ScheduledQueryLastRunSummaryQueryInsightsResponse `pulumi:"queryInsightsResponses"`
	// Status of a scheduled query run. Valid values: `AUTO_TRIGGER_SUCCESS`, `AUTO_TRIGGER_FAILURE`, `MANUAL_TRIGGER_SUCCESS`, `MANUAL_TRIGGER_FAILURE`.
	RunStatus *string `pulumi:"runStatus"`
	// Actual time when the query was run.
	TriggerTime *string `pulumi:"triggerTime"`
}

// ScheduledQueryLastRunSummaryInput is an input type that accepts ScheduledQueryLastRunSummaryArgs and ScheduledQueryLastRunSummaryOutput values.
// You can construct a concrete instance of `ScheduledQueryLastRunSummaryInput` via:
//
//	ScheduledQueryLastRunSummaryArgs{...}
type ScheduledQueryLastRunSummaryInput interface {
	pulumi.Input

	ToScheduledQueryLastRunSummaryOutput() ScheduledQueryLastRunSummaryOutput
	ToScheduledQueryLastRunSummaryOutputWithContext(context.Context) ScheduledQueryLastRunSummaryOutput
}

type ScheduledQueryLastRunSummaryArgs struct {
	// S3 location for error report.
	ErrorReportLocations ScheduledQueryLastRunSummaryErrorReportLocationArrayInput `pulumi:"errorReportLocations"`
	// Statistics for a single scheduled query run.
	ExecutionStats ScheduledQueryLastRunSummaryExecutionStatArrayInput `pulumi:"executionStats"`
	// Error message for the scheduled query in case of failure. You might have to look at the error report to get more detailed error reasons.
	FailureReason pulumi.StringPtrInput `pulumi:"failureReason"`
	// InvocationTime for this run. This is the time at which the query is scheduled to run. Parameter `@scheduled_runtime` can be used in the query to get the value.
	InvocationTime pulumi.StringPtrInput `pulumi:"invocationTime"`
	// Various insights and metrics related to the run summary of the scheduled query.
	QueryInsightsResponses ScheduledQueryLastRunSummaryQueryInsightsResponseArrayInput `pulumi:"queryInsightsResponses"`
	// Status of a scheduled query run. Valid values: `AUTO_TRIGGER_SUCCESS`, `AUTO_TRIGGER_FAILURE`, `MANUAL_TRIGGER_SUCCESS`, `MANUAL_TRIGGER_FAILURE`.
	RunStatus pulumi.StringPtrInput `pulumi:"runStatus"`
	// Actual time when the query was run.
	TriggerTime pulumi.StringPtrInput `pulumi:"triggerTime"`
}

func (ScheduledQueryLastRunSummaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryLastRunSummary)(nil)).Elem()
}

func (i ScheduledQueryLastRunSummaryArgs) ToScheduledQueryLastRunSummaryOutput() ScheduledQueryLastRunSummaryOutput {
	return i.ToScheduledQueryLastRunSummaryOutputWithContext(context.Background())
}

func (i ScheduledQueryLastRunSummaryArgs) ToScheduledQueryLastRunSummaryOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryLastRunSummaryOutput)
}

// ScheduledQueryLastRunSummaryArrayInput is an input type that accepts ScheduledQueryLastRunSummaryArray and ScheduledQueryLastRunSummaryArrayOutput values.
// You can construct a concrete instance of `ScheduledQueryLastRunSummaryArrayInput` via:
//
//	ScheduledQueryLastRunSummaryArray{ ScheduledQueryLastRunSummaryArgs{...} }
type ScheduledQueryLastRunSummaryArrayInput interface {
	pulumi.Input

	ToScheduledQueryLastRunSummaryArrayOutput() ScheduledQueryLastRunSummaryArrayOutput
	ToScheduledQueryLastRunSummaryArrayOutputWithContext(context.Context) ScheduledQueryLastRunSummaryArrayOutput
}

type ScheduledQueryLastRunSummaryArray []ScheduledQueryLastRunSummaryInput

func (ScheduledQueryLastRunSummaryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryLastRunSummary)(nil)).Elem()
}

func (i ScheduledQueryLastRunSummaryArray) ToScheduledQueryLastRunSummaryArrayOutput() ScheduledQueryLastRunSummaryArrayOutput {
	return i.ToScheduledQueryLastRunSummaryArrayOutputWithContext(context.Background())
}

func (i ScheduledQueryLastRunSummaryArray) ToScheduledQueryLastRunSummaryArrayOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryLastRunSummaryArrayOutput)
}

type ScheduledQueryLastRunSummaryOutput struct{ *pulumi.OutputState }

func (ScheduledQueryLastRunSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryLastRunSummary)(nil)).Elem()
}

func (o ScheduledQueryLastRunSummaryOutput) ToScheduledQueryLastRunSummaryOutput() ScheduledQueryLastRunSummaryOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryOutput) ToScheduledQueryLastRunSummaryOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryOutput {
	return o
}

// S3 location for error report.
func (o ScheduledQueryLastRunSummaryOutput) ErrorReportLocations() ScheduledQueryLastRunSummaryErrorReportLocationArrayOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummary) []ScheduledQueryLastRunSummaryErrorReportLocation {
		return v.ErrorReportLocations
	}).(ScheduledQueryLastRunSummaryErrorReportLocationArrayOutput)
}

// Statistics for a single scheduled query run.
func (o ScheduledQueryLastRunSummaryOutput) ExecutionStats() ScheduledQueryLastRunSummaryExecutionStatArrayOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummary) []ScheduledQueryLastRunSummaryExecutionStat {
		return v.ExecutionStats
	}).(ScheduledQueryLastRunSummaryExecutionStatArrayOutput)
}

// Error message for the scheduled query in case of failure. You might have to look at the error report to get more detailed error reasons.
func (o ScheduledQueryLastRunSummaryOutput) FailureReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummary) *string { return v.FailureReason }).(pulumi.StringPtrOutput)
}

// InvocationTime for this run. This is the time at which the query is scheduled to run. Parameter `@scheduled_runtime` can be used in the query to get the value.
func (o ScheduledQueryLastRunSummaryOutput) InvocationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummary) *string { return v.InvocationTime }).(pulumi.StringPtrOutput)
}

// Various insights and metrics related to the run summary of the scheduled query.
func (o ScheduledQueryLastRunSummaryOutput) QueryInsightsResponses() ScheduledQueryLastRunSummaryQueryInsightsResponseArrayOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummary) []ScheduledQueryLastRunSummaryQueryInsightsResponse {
		return v.QueryInsightsResponses
	}).(ScheduledQueryLastRunSummaryQueryInsightsResponseArrayOutput)
}

// Status of a scheduled query run. Valid values: `AUTO_TRIGGER_SUCCESS`, `AUTO_TRIGGER_FAILURE`, `MANUAL_TRIGGER_SUCCESS`, `MANUAL_TRIGGER_FAILURE`.
func (o ScheduledQueryLastRunSummaryOutput) RunStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummary) *string { return v.RunStatus }).(pulumi.StringPtrOutput)
}

// Actual time when the query was run.
func (o ScheduledQueryLastRunSummaryOutput) TriggerTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummary) *string { return v.TriggerTime }).(pulumi.StringPtrOutput)
}

type ScheduledQueryLastRunSummaryArrayOutput struct{ *pulumi.OutputState }

func (ScheduledQueryLastRunSummaryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryLastRunSummary)(nil)).Elem()
}

func (o ScheduledQueryLastRunSummaryArrayOutput) ToScheduledQueryLastRunSummaryArrayOutput() ScheduledQueryLastRunSummaryArrayOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryArrayOutput) ToScheduledQueryLastRunSummaryArrayOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryArrayOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryArrayOutput) Index(i pulumi.IntInput) ScheduledQueryLastRunSummaryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledQueryLastRunSummary {
		return vs[0].([]ScheduledQueryLastRunSummary)[vs[1].(int)]
	}).(ScheduledQueryLastRunSummaryOutput)
}

type ScheduledQueryLastRunSummaryErrorReportLocation struct {
	// S3 location where error reports are written.
	S3ReportLocations []ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocation `pulumi:"s3ReportLocations"`
}

// ScheduledQueryLastRunSummaryErrorReportLocationInput is an input type that accepts ScheduledQueryLastRunSummaryErrorReportLocationArgs and ScheduledQueryLastRunSummaryErrorReportLocationOutput values.
// You can construct a concrete instance of `ScheduledQueryLastRunSummaryErrorReportLocationInput` via:
//
//	ScheduledQueryLastRunSummaryErrorReportLocationArgs{...}
type ScheduledQueryLastRunSummaryErrorReportLocationInput interface {
	pulumi.Input

	ToScheduledQueryLastRunSummaryErrorReportLocationOutput() ScheduledQueryLastRunSummaryErrorReportLocationOutput
	ToScheduledQueryLastRunSummaryErrorReportLocationOutputWithContext(context.Context) ScheduledQueryLastRunSummaryErrorReportLocationOutput
}

type ScheduledQueryLastRunSummaryErrorReportLocationArgs struct {
	// S3 location where error reports are written.
	S3ReportLocations ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayInput `pulumi:"s3ReportLocations"`
}

func (ScheduledQueryLastRunSummaryErrorReportLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryLastRunSummaryErrorReportLocation)(nil)).Elem()
}

func (i ScheduledQueryLastRunSummaryErrorReportLocationArgs) ToScheduledQueryLastRunSummaryErrorReportLocationOutput() ScheduledQueryLastRunSummaryErrorReportLocationOutput {
	return i.ToScheduledQueryLastRunSummaryErrorReportLocationOutputWithContext(context.Background())
}

func (i ScheduledQueryLastRunSummaryErrorReportLocationArgs) ToScheduledQueryLastRunSummaryErrorReportLocationOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryErrorReportLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryLastRunSummaryErrorReportLocationOutput)
}

// ScheduledQueryLastRunSummaryErrorReportLocationArrayInput is an input type that accepts ScheduledQueryLastRunSummaryErrorReportLocationArray and ScheduledQueryLastRunSummaryErrorReportLocationArrayOutput values.
// You can construct a concrete instance of `ScheduledQueryLastRunSummaryErrorReportLocationArrayInput` via:
//
//	ScheduledQueryLastRunSummaryErrorReportLocationArray{ ScheduledQueryLastRunSummaryErrorReportLocationArgs{...} }
type ScheduledQueryLastRunSummaryErrorReportLocationArrayInput interface {
	pulumi.Input

	ToScheduledQueryLastRunSummaryErrorReportLocationArrayOutput() ScheduledQueryLastRunSummaryErrorReportLocationArrayOutput
	ToScheduledQueryLastRunSummaryErrorReportLocationArrayOutputWithContext(context.Context) ScheduledQueryLastRunSummaryErrorReportLocationArrayOutput
}

type ScheduledQueryLastRunSummaryErrorReportLocationArray []ScheduledQueryLastRunSummaryErrorReportLocationInput

func (ScheduledQueryLastRunSummaryErrorReportLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryLastRunSummaryErrorReportLocation)(nil)).Elem()
}

func (i ScheduledQueryLastRunSummaryErrorReportLocationArray) ToScheduledQueryLastRunSummaryErrorReportLocationArrayOutput() ScheduledQueryLastRunSummaryErrorReportLocationArrayOutput {
	return i.ToScheduledQueryLastRunSummaryErrorReportLocationArrayOutputWithContext(context.Background())
}

func (i ScheduledQueryLastRunSummaryErrorReportLocationArray) ToScheduledQueryLastRunSummaryErrorReportLocationArrayOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryErrorReportLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryLastRunSummaryErrorReportLocationArrayOutput)
}

type ScheduledQueryLastRunSummaryErrorReportLocationOutput struct{ *pulumi.OutputState }

func (ScheduledQueryLastRunSummaryErrorReportLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryLastRunSummaryErrorReportLocation)(nil)).Elem()
}

func (o ScheduledQueryLastRunSummaryErrorReportLocationOutput) ToScheduledQueryLastRunSummaryErrorReportLocationOutput() ScheduledQueryLastRunSummaryErrorReportLocationOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryErrorReportLocationOutput) ToScheduledQueryLastRunSummaryErrorReportLocationOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryErrorReportLocationOutput {
	return o
}

// S3 location where error reports are written.
func (o ScheduledQueryLastRunSummaryErrorReportLocationOutput) S3ReportLocations() ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummaryErrorReportLocation) []ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocation {
		return v.S3ReportLocations
	}).(ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayOutput)
}

type ScheduledQueryLastRunSummaryErrorReportLocationArrayOutput struct{ *pulumi.OutputState }

func (ScheduledQueryLastRunSummaryErrorReportLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryLastRunSummaryErrorReportLocation)(nil)).Elem()
}

func (o ScheduledQueryLastRunSummaryErrorReportLocationArrayOutput) ToScheduledQueryLastRunSummaryErrorReportLocationArrayOutput() ScheduledQueryLastRunSummaryErrorReportLocationArrayOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryErrorReportLocationArrayOutput) ToScheduledQueryLastRunSummaryErrorReportLocationArrayOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryErrorReportLocationArrayOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryErrorReportLocationArrayOutput) Index(i pulumi.IntInput) ScheduledQueryLastRunSummaryErrorReportLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledQueryLastRunSummaryErrorReportLocation {
		return vs[0].([]ScheduledQueryLastRunSummaryErrorReportLocation)[vs[1].(int)]
	}).(ScheduledQueryLastRunSummaryErrorReportLocationOutput)
}

type ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocation struct {
	// S3 bucket name.
	BucketName *string `pulumi:"bucketName"`
	// S3 key.
	ObjectKey *string `pulumi:"objectKey"`
}

// ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationInput is an input type that accepts ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArgs and ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationOutput values.
// You can construct a concrete instance of `ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationInput` via:
//
//	ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArgs{...}
type ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationInput interface {
	pulumi.Input

	ToScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationOutput() ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationOutput
	ToScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationOutputWithContext(context.Context) ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationOutput
}

type ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArgs struct {
	// S3 bucket name.
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// S3 key.
	ObjectKey pulumi.StringPtrInput `pulumi:"objectKey"`
}

func (ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocation)(nil)).Elem()
}

func (i ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArgs) ToScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationOutput() ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationOutput {
	return i.ToScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationOutputWithContext(context.Background())
}

func (i ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArgs) ToScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationOutput)
}

// ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayInput is an input type that accepts ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArray and ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayOutput values.
// You can construct a concrete instance of `ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayInput` via:
//
//	ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArray{ ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArgs{...} }
type ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayInput interface {
	pulumi.Input

	ToScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayOutput() ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayOutput
	ToScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayOutputWithContext(context.Context) ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayOutput
}

type ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArray []ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationInput

func (ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocation)(nil)).Elem()
}

func (i ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArray) ToScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayOutput() ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayOutput {
	return i.ToScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayOutputWithContext(context.Background())
}

func (i ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArray) ToScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayOutput)
}

type ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationOutput struct{ *pulumi.OutputState }

func (ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocation)(nil)).Elem()
}

func (o ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationOutput) ToScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationOutput() ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationOutput) ToScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationOutput {
	return o
}

// S3 bucket name.
func (o ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocation) *string { return v.BucketName }).(pulumi.StringPtrOutput)
}

// S3 key.
func (o ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationOutput) ObjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocation) *string { return v.ObjectKey }).(pulumi.StringPtrOutput)
}

type ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayOutput struct{ *pulumi.OutputState }

func (ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocation)(nil)).Elem()
}

func (o ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayOutput) ToScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayOutput() ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayOutput) ToScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayOutput) Index(i pulumi.IntInput) ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocation {
		return vs[0].([]ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocation)[vs[1].(int)]
	}).(ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationOutput)
}

type ScheduledQueryLastRunSummaryExecutionStat struct {
	// Bytes metered for a single scheduled query run.
	BytesMetered *int `pulumi:"bytesMetered"`
	// Bytes scanned for a single scheduled query run.
	CumulativeBytesScanned *int `pulumi:"cumulativeBytesScanned"`
	// Data writes metered for records ingested in a single scheduled query run.
	DataWrites *int `pulumi:"dataWrites"`
	// Total time, measured in milliseconds, that was needed for the scheduled query run to complete.
	ExecutionTimeInMillis *int `pulumi:"executionTimeInMillis"`
	// Number of rows present in the output from running a query before ingestion to destination data source.
	QueryResultRows *int `pulumi:"queryResultRows"`
	// Number of records ingested for a single scheduled query run.
	RecordsIngested *int `pulumi:"recordsIngested"`
}

// ScheduledQueryLastRunSummaryExecutionStatInput is an input type that accepts ScheduledQueryLastRunSummaryExecutionStatArgs and ScheduledQueryLastRunSummaryExecutionStatOutput values.
// You can construct a concrete instance of `ScheduledQueryLastRunSummaryExecutionStatInput` via:
//
//	ScheduledQueryLastRunSummaryExecutionStatArgs{...}
type ScheduledQueryLastRunSummaryExecutionStatInput interface {
	pulumi.Input

	ToScheduledQueryLastRunSummaryExecutionStatOutput() ScheduledQueryLastRunSummaryExecutionStatOutput
	ToScheduledQueryLastRunSummaryExecutionStatOutputWithContext(context.Context) ScheduledQueryLastRunSummaryExecutionStatOutput
}

type ScheduledQueryLastRunSummaryExecutionStatArgs struct {
	// Bytes metered for a single scheduled query run.
	BytesMetered pulumi.IntPtrInput `pulumi:"bytesMetered"`
	// Bytes scanned for a single scheduled query run.
	CumulativeBytesScanned pulumi.IntPtrInput `pulumi:"cumulativeBytesScanned"`
	// Data writes metered for records ingested in a single scheduled query run.
	DataWrites pulumi.IntPtrInput `pulumi:"dataWrites"`
	// Total time, measured in milliseconds, that was needed for the scheduled query run to complete.
	ExecutionTimeInMillis pulumi.IntPtrInput `pulumi:"executionTimeInMillis"`
	// Number of rows present in the output from running a query before ingestion to destination data source.
	QueryResultRows pulumi.IntPtrInput `pulumi:"queryResultRows"`
	// Number of records ingested for a single scheduled query run.
	RecordsIngested pulumi.IntPtrInput `pulumi:"recordsIngested"`
}

func (ScheduledQueryLastRunSummaryExecutionStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryLastRunSummaryExecutionStat)(nil)).Elem()
}

func (i ScheduledQueryLastRunSummaryExecutionStatArgs) ToScheduledQueryLastRunSummaryExecutionStatOutput() ScheduledQueryLastRunSummaryExecutionStatOutput {
	return i.ToScheduledQueryLastRunSummaryExecutionStatOutputWithContext(context.Background())
}

func (i ScheduledQueryLastRunSummaryExecutionStatArgs) ToScheduledQueryLastRunSummaryExecutionStatOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryExecutionStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryLastRunSummaryExecutionStatOutput)
}

// ScheduledQueryLastRunSummaryExecutionStatArrayInput is an input type that accepts ScheduledQueryLastRunSummaryExecutionStatArray and ScheduledQueryLastRunSummaryExecutionStatArrayOutput values.
// You can construct a concrete instance of `ScheduledQueryLastRunSummaryExecutionStatArrayInput` via:
//
//	ScheduledQueryLastRunSummaryExecutionStatArray{ ScheduledQueryLastRunSummaryExecutionStatArgs{...} }
type ScheduledQueryLastRunSummaryExecutionStatArrayInput interface {
	pulumi.Input

	ToScheduledQueryLastRunSummaryExecutionStatArrayOutput() ScheduledQueryLastRunSummaryExecutionStatArrayOutput
	ToScheduledQueryLastRunSummaryExecutionStatArrayOutputWithContext(context.Context) ScheduledQueryLastRunSummaryExecutionStatArrayOutput
}

type ScheduledQueryLastRunSummaryExecutionStatArray []ScheduledQueryLastRunSummaryExecutionStatInput

func (ScheduledQueryLastRunSummaryExecutionStatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryLastRunSummaryExecutionStat)(nil)).Elem()
}

func (i ScheduledQueryLastRunSummaryExecutionStatArray) ToScheduledQueryLastRunSummaryExecutionStatArrayOutput() ScheduledQueryLastRunSummaryExecutionStatArrayOutput {
	return i.ToScheduledQueryLastRunSummaryExecutionStatArrayOutputWithContext(context.Background())
}

func (i ScheduledQueryLastRunSummaryExecutionStatArray) ToScheduledQueryLastRunSummaryExecutionStatArrayOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryExecutionStatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryLastRunSummaryExecutionStatArrayOutput)
}

type ScheduledQueryLastRunSummaryExecutionStatOutput struct{ *pulumi.OutputState }

func (ScheduledQueryLastRunSummaryExecutionStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryLastRunSummaryExecutionStat)(nil)).Elem()
}

func (o ScheduledQueryLastRunSummaryExecutionStatOutput) ToScheduledQueryLastRunSummaryExecutionStatOutput() ScheduledQueryLastRunSummaryExecutionStatOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryExecutionStatOutput) ToScheduledQueryLastRunSummaryExecutionStatOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryExecutionStatOutput {
	return o
}

// Bytes metered for a single scheduled query run.
func (o ScheduledQueryLastRunSummaryExecutionStatOutput) BytesMetered() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummaryExecutionStat) *int { return v.BytesMetered }).(pulumi.IntPtrOutput)
}

// Bytes scanned for a single scheduled query run.
func (o ScheduledQueryLastRunSummaryExecutionStatOutput) CumulativeBytesScanned() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummaryExecutionStat) *int { return v.CumulativeBytesScanned }).(pulumi.IntPtrOutput)
}

// Data writes metered for records ingested in a single scheduled query run.
func (o ScheduledQueryLastRunSummaryExecutionStatOutput) DataWrites() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummaryExecutionStat) *int { return v.DataWrites }).(pulumi.IntPtrOutput)
}

// Total time, measured in milliseconds, that was needed for the scheduled query run to complete.
func (o ScheduledQueryLastRunSummaryExecutionStatOutput) ExecutionTimeInMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummaryExecutionStat) *int { return v.ExecutionTimeInMillis }).(pulumi.IntPtrOutput)
}

// Number of rows present in the output from running a query before ingestion to destination data source.
func (o ScheduledQueryLastRunSummaryExecutionStatOutput) QueryResultRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummaryExecutionStat) *int { return v.QueryResultRows }).(pulumi.IntPtrOutput)
}

// Number of records ingested for a single scheduled query run.
func (o ScheduledQueryLastRunSummaryExecutionStatOutput) RecordsIngested() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummaryExecutionStat) *int { return v.RecordsIngested }).(pulumi.IntPtrOutput)
}

type ScheduledQueryLastRunSummaryExecutionStatArrayOutput struct{ *pulumi.OutputState }

func (ScheduledQueryLastRunSummaryExecutionStatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryLastRunSummaryExecutionStat)(nil)).Elem()
}

func (o ScheduledQueryLastRunSummaryExecutionStatArrayOutput) ToScheduledQueryLastRunSummaryExecutionStatArrayOutput() ScheduledQueryLastRunSummaryExecutionStatArrayOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryExecutionStatArrayOutput) ToScheduledQueryLastRunSummaryExecutionStatArrayOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryExecutionStatArrayOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryExecutionStatArrayOutput) Index(i pulumi.IntInput) ScheduledQueryLastRunSummaryExecutionStatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledQueryLastRunSummaryExecutionStat {
		return vs[0].([]ScheduledQueryLastRunSummaryExecutionStat)[vs[1].(int)]
	}).(ScheduledQueryLastRunSummaryExecutionStatOutput)
}

type ScheduledQueryLastRunSummaryQueryInsightsResponse struct {
	// Size of query result set in bytes. You can use this data to validate if the result set has changed as part of the query tuning exercise.
	OutputBytes *int `pulumi:"outputBytes"`
	// Total number of rows returned as part of the query result set. You can use this data to validate if the number of rows in the result set have changed as part of the query tuning exercise.
	OutputRows *int `pulumi:"outputRows"`
	// Insights into the spatial coverage of the query, including the table with sub-optimal (max) spatial pruning. This information can help you identify areas for improvement in your partitioning strategy to enhance spatial pruning.
	QuerySpatialCoverages []ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverage `pulumi:"querySpatialCoverages"`
	// Number of tables in the query.
	QueryTableCount *int `pulumi:"queryTableCount"`
	// Insights into the temporal range of the query, including the table with the largest (max) time range. Following are some of the potential options for optimizing time-based pruning: add missing time-predicates, remove functions around the time predicates, add time predicates to all the sub-queries.
	QueryTemporalRanges []ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRange `pulumi:"queryTemporalRanges"`
}

// ScheduledQueryLastRunSummaryQueryInsightsResponseInput is an input type that accepts ScheduledQueryLastRunSummaryQueryInsightsResponseArgs and ScheduledQueryLastRunSummaryQueryInsightsResponseOutput values.
// You can construct a concrete instance of `ScheduledQueryLastRunSummaryQueryInsightsResponseInput` via:
//
//	ScheduledQueryLastRunSummaryQueryInsightsResponseArgs{...}
type ScheduledQueryLastRunSummaryQueryInsightsResponseInput interface {
	pulumi.Input

	ToScheduledQueryLastRunSummaryQueryInsightsResponseOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseOutput
	ToScheduledQueryLastRunSummaryQueryInsightsResponseOutputWithContext(context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseOutput
}

type ScheduledQueryLastRunSummaryQueryInsightsResponseArgs struct {
	// Size of query result set in bytes. You can use this data to validate if the result set has changed as part of the query tuning exercise.
	OutputBytes pulumi.IntPtrInput `pulumi:"outputBytes"`
	// Total number of rows returned as part of the query result set. You can use this data to validate if the number of rows in the result set have changed as part of the query tuning exercise.
	OutputRows pulumi.IntPtrInput `pulumi:"outputRows"`
	// Insights into the spatial coverage of the query, including the table with sub-optimal (max) spatial pruning. This information can help you identify areas for improvement in your partitioning strategy to enhance spatial pruning.
	QuerySpatialCoverages ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayInput `pulumi:"querySpatialCoverages"`
	// Number of tables in the query.
	QueryTableCount pulumi.IntPtrInput `pulumi:"queryTableCount"`
	// Insights into the temporal range of the query, including the table with the largest (max) time range. Following are some of the potential options for optimizing time-based pruning: add missing time-predicates, remove functions around the time predicates, add time predicates to all the sub-queries.
	QueryTemporalRanges ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayInput `pulumi:"queryTemporalRanges"`
}

func (ScheduledQueryLastRunSummaryQueryInsightsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryLastRunSummaryQueryInsightsResponse)(nil)).Elem()
}

func (i ScheduledQueryLastRunSummaryQueryInsightsResponseArgs) ToScheduledQueryLastRunSummaryQueryInsightsResponseOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseOutput {
	return i.ToScheduledQueryLastRunSummaryQueryInsightsResponseOutputWithContext(context.Background())
}

func (i ScheduledQueryLastRunSummaryQueryInsightsResponseArgs) ToScheduledQueryLastRunSummaryQueryInsightsResponseOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryLastRunSummaryQueryInsightsResponseOutput)
}

// ScheduledQueryLastRunSummaryQueryInsightsResponseArrayInput is an input type that accepts ScheduledQueryLastRunSummaryQueryInsightsResponseArray and ScheduledQueryLastRunSummaryQueryInsightsResponseArrayOutput values.
// You can construct a concrete instance of `ScheduledQueryLastRunSummaryQueryInsightsResponseArrayInput` via:
//
//	ScheduledQueryLastRunSummaryQueryInsightsResponseArray{ ScheduledQueryLastRunSummaryQueryInsightsResponseArgs{...} }
type ScheduledQueryLastRunSummaryQueryInsightsResponseArrayInput interface {
	pulumi.Input

	ToScheduledQueryLastRunSummaryQueryInsightsResponseArrayOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseArrayOutput
	ToScheduledQueryLastRunSummaryQueryInsightsResponseArrayOutputWithContext(context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseArrayOutput
}

type ScheduledQueryLastRunSummaryQueryInsightsResponseArray []ScheduledQueryLastRunSummaryQueryInsightsResponseInput

func (ScheduledQueryLastRunSummaryQueryInsightsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryLastRunSummaryQueryInsightsResponse)(nil)).Elem()
}

func (i ScheduledQueryLastRunSummaryQueryInsightsResponseArray) ToScheduledQueryLastRunSummaryQueryInsightsResponseArrayOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseArrayOutput {
	return i.ToScheduledQueryLastRunSummaryQueryInsightsResponseArrayOutputWithContext(context.Background())
}

func (i ScheduledQueryLastRunSummaryQueryInsightsResponseArray) ToScheduledQueryLastRunSummaryQueryInsightsResponseArrayOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryLastRunSummaryQueryInsightsResponseArrayOutput)
}

type ScheduledQueryLastRunSummaryQueryInsightsResponseOutput struct{ *pulumi.OutputState }

func (ScheduledQueryLastRunSummaryQueryInsightsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryLastRunSummaryQueryInsightsResponse)(nil)).Elem()
}

func (o ScheduledQueryLastRunSummaryQueryInsightsResponseOutput) ToScheduledQueryLastRunSummaryQueryInsightsResponseOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryQueryInsightsResponseOutput) ToScheduledQueryLastRunSummaryQueryInsightsResponseOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseOutput {
	return o
}

// Size of query result set in bytes. You can use this data to validate if the result set has changed as part of the query tuning exercise.
func (o ScheduledQueryLastRunSummaryQueryInsightsResponseOutput) OutputBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummaryQueryInsightsResponse) *int { return v.OutputBytes }).(pulumi.IntPtrOutput)
}

// Total number of rows returned as part of the query result set. You can use this data to validate if the number of rows in the result set have changed as part of the query tuning exercise.
func (o ScheduledQueryLastRunSummaryQueryInsightsResponseOutput) OutputRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummaryQueryInsightsResponse) *int { return v.OutputRows }).(pulumi.IntPtrOutput)
}

// Insights into the spatial coverage of the query, including the table with sub-optimal (max) spatial pruning. This information can help you identify areas for improvement in your partitioning strategy to enhance spatial pruning.
func (o ScheduledQueryLastRunSummaryQueryInsightsResponseOutput) QuerySpatialCoverages() ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummaryQueryInsightsResponse) []ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverage {
		return v.QuerySpatialCoverages
	}).(ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayOutput)
}

// Number of tables in the query.
func (o ScheduledQueryLastRunSummaryQueryInsightsResponseOutput) QueryTableCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummaryQueryInsightsResponse) *int { return v.QueryTableCount }).(pulumi.IntPtrOutput)
}

// Insights into the temporal range of the query, including the table with the largest (max) time range. Following are some of the potential options for optimizing time-based pruning: add missing time-predicates, remove functions around the time predicates, add time predicates to all the sub-queries.
func (o ScheduledQueryLastRunSummaryQueryInsightsResponseOutput) QueryTemporalRanges() ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummaryQueryInsightsResponse) []ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRange {
		return v.QueryTemporalRanges
	}).(ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayOutput)
}

type ScheduledQueryLastRunSummaryQueryInsightsResponseArrayOutput struct{ *pulumi.OutputState }

func (ScheduledQueryLastRunSummaryQueryInsightsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryLastRunSummaryQueryInsightsResponse)(nil)).Elem()
}

func (o ScheduledQueryLastRunSummaryQueryInsightsResponseArrayOutput) ToScheduledQueryLastRunSummaryQueryInsightsResponseArrayOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseArrayOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryQueryInsightsResponseArrayOutput) ToScheduledQueryLastRunSummaryQueryInsightsResponseArrayOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseArrayOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryQueryInsightsResponseArrayOutput) Index(i pulumi.IntInput) ScheduledQueryLastRunSummaryQueryInsightsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledQueryLastRunSummaryQueryInsightsResponse {
		return vs[0].([]ScheduledQueryLastRunSummaryQueryInsightsResponse)[vs[1].(int)]
	}).(ScheduledQueryLastRunSummaryQueryInsightsResponseOutput)
}

type ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverage struct {
	// Insights into the most sub-optimal performing table on the temporal axis:
	Maxes []ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxis `pulumi:"maxes"`
}

// ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageInput is an input type that accepts ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArgs and ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageOutput values.
// You can construct a concrete instance of `ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageInput` via:
//
//	ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArgs{...}
type ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageInput interface {
	pulumi.Input

	ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageOutput
	ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageOutputWithContext(context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageOutput
}

type ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArgs struct {
	// Insights into the most sub-optimal performing table on the temporal axis:
	Maxes ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayInput `pulumi:"maxes"`
}

func (ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverage)(nil)).Elem()
}

func (i ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArgs) ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageOutput {
	return i.ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageOutputWithContext(context.Background())
}

func (i ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArgs) ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageOutput)
}

// ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayInput is an input type that accepts ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArray and ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayOutput values.
// You can construct a concrete instance of `ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayInput` via:
//
//	ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArray{ ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArgs{...} }
type ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayInput interface {
	pulumi.Input

	ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayOutput
	ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayOutputWithContext(context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayOutput
}

type ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArray []ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageInput

func (ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverage)(nil)).Elem()
}

func (i ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArray) ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayOutput {
	return i.ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayOutputWithContext(context.Background())
}

func (i ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArray) ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayOutput)
}

type ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageOutput struct{ *pulumi.OutputState }

func (ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverage)(nil)).Elem()
}

func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageOutput) ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageOutput) ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageOutput {
	return o
}

// Insights into the most sub-optimal performing table on the temporal axis:
func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageOutput) Maxes() ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverage) []ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxis {
		return v.Maxes
	}).(ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput)
}

type ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayOutput struct{ *pulumi.OutputState }

func (ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverage)(nil)).Elem()
}

func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayOutput) ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayOutput) ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayOutput) Index(i pulumi.IntInput) ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverage {
		return vs[0].([]ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverage)[vs[1].(int)]
	}).(ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageOutput)
}

type ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxis struct {
	// Partition key used for partitioning, which can be a default measureName or a customer defined partition key.
	PartitionKeys []string `pulumi:"partitionKeys"`
	// ARN of the table which is queried with the largest time range.
	TableArn *string `pulumi:"tableArn"`
	// Maximum duration in nanoseconds between the start and end of the query.
	Value *float64 `pulumi:"value"`
}

// ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisInput is an input type that accepts ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArgs and ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisOutput values.
// You can construct a concrete instance of `ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisInput` via:
//
//	ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArgs{...}
type ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisInput interface {
	pulumi.Input

	ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisOutput
	ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisOutputWithContext(context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisOutput
}

type ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArgs struct {
	// Partition key used for partitioning, which can be a default measureName or a customer defined partition key.
	PartitionKeys pulumi.StringArrayInput `pulumi:"partitionKeys"`
	// ARN of the table which is queried with the largest time range.
	TableArn pulumi.StringPtrInput `pulumi:"tableArn"`
	// Maximum duration in nanoseconds between the start and end of the query.
	Value pulumi.Float64PtrInput `pulumi:"value"`
}

func (ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxis)(nil)).Elem()
}

func (i ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArgs) ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisOutput {
	return i.ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisOutputWithContext(context.Background())
}

func (i ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArgs) ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisOutput)
}

// ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayInput is an input type that accepts ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArray and ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput values.
// You can construct a concrete instance of `ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayInput` via:
//
//	ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArray{ ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArgs{...} }
type ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayInput interface {
	pulumi.Input

	ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput
	ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutputWithContext(context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput
}

type ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArray []ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisInput

func (ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxis)(nil)).Elem()
}

func (i ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArray) ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput {
	return i.ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutputWithContext(context.Background())
}

func (i ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArray) ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput)
}

type ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisOutput struct{ *pulumi.OutputState }

func (ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxis)(nil)).Elem()
}

func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisOutput) ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisOutput) ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisOutput {
	return o
}

// Partition key used for partitioning, which can be a default measureName or a customer defined partition key.
func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisOutput) PartitionKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxis) []string {
		return v.PartitionKeys
	}).(pulumi.StringArrayOutput)
}

// ARN of the table which is queried with the largest time range.
func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisOutput) TableArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxis) *string {
		return v.TableArn
	}).(pulumi.StringPtrOutput)
}

// Maximum duration in nanoseconds between the start and end of the query.
func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxis) *float64 {
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

type ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput struct{ *pulumi.OutputState }

func (ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxis)(nil)).Elem()
}

func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput) ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput) ToScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput) Index(i pulumi.IntInput) ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxis {
		return vs[0].([]ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxis)[vs[1].(int)]
	}).(ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisOutput)
}

type ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRange struct {
	// Insights into the most sub-optimal performing table on the temporal axis:
	Maxes []ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxis `pulumi:"maxes"`
}

// ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeInput is an input type that accepts ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArgs and ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeOutput values.
// You can construct a concrete instance of `ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeInput` via:
//
//	ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArgs{...}
type ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeInput interface {
	pulumi.Input

	ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeOutput
	ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeOutputWithContext(context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeOutput
}

type ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArgs struct {
	// Insights into the most sub-optimal performing table on the temporal axis:
	Maxes ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayInput `pulumi:"maxes"`
}

func (ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRange)(nil)).Elem()
}

func (i ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArgs) ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeOutput {
	return i.ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeOutputWithContext(context.Background())
}

func (i ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArgs) ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeOutput)
}

// ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayInput is an input type that accepts ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArray and ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayOutput values.
// You can construct a concrete instance of `ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayInput` via:
//
//	ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArray{ ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArgs{...} }
type ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayInput interface {
	pulumi.Input

	ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayOutput
	ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayOutputWithContext(context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayOutput
}

type ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArray []ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeInput

func (ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRange)(nil)).Elem()
}

func (i ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArray) ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayOutput {
	return i.ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayOutputWithContext(context.Background())
}

func (i ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArray) ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayOutput)
}

type ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeOutput struct{ *pulumi.OutputState }

func (ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRange)(nil)).Elem()
}

func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeOutput) ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeOutput) ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeOutput {
	return o
}

// Insights into the most sub-optimal performing table on the temporal axis:
func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeOutput) Maxes() ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRange) []ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxis {
		return v.Maxes
	}).(ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput)
}

type ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayOutput struct{ *pulumi.OutputState }

func (ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRange)(nil)).Elem()
}

func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayOutput) ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayOutput) ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayOutput) Index(i pulumi.IntInput) ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRange {
		return vs[0].([]ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRange)[vs[1].(int)]
	}).(ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeOutput)
}

type ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxis struct {
	// ARN of the table which is queried with the largest time range.
	TableArn *string `pulumi:"tableArn"`
	// Maximum duration in nanoseconds between the start and end of the query.
	Value *int `pulumi:"value"`
}

// ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisInput is an input type that accepts ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArgs and ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisOutput values.
// You can construct a concrete instance of `ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisInput` via:
//
//	ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArgs{...}
type ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisInput interface {
	pulumi.Input

	ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisOutput
	ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisOutputWithContext(context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisOutput
}

type ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArgs struct {
	// ARN of the table which is queried with the largest time range.
	TableArn pulumi.StringPtrInput `pulumi:"tableArn"`
	// Maximum duration in nanoseconds between the start and end of the query.
	Value pulumi.IntPtrInput `pulumi:"value"`
}

func (ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxis)(nil)).Elem()
}

func (i ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArgs) ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisOutput {
	return i.ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisOutputWithContext(context.Background())
}

func (i ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArgs) ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisOutput)
}

// ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayInput is an input type that accepts ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArray and ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput values.
// You can construct a concrete instance of `ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayInput` via:
//
//	ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArray{ ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArgs{...} }
type ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayInput interface {
	pulumi.Input

	ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput
	ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayOutputWithContext(context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput
}

type ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArray []ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisInput

func (ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxis)(nil)).Elem()
}

func (i ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArray) ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput {
	return i.ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayOutputWithContext(context.Background())
}

func (i ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArray) ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput)
}

type ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisOutput struct{ *pulumi.OutputState }

func (ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxis)(nil)).Elem()
}

func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisOutput) ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisOutput) ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisOutput {
	return o
}

// ARN of the table which is queried with the largest time range.
func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisOutput) TableArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxis) *string {
		return v.TableArn
	}).(pulumi.StringPtrOutput)
}

// Maximum duration in nanoseconds between the start and end of the query.
func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxis) *int { return v.Value }).(pulumi.IntPtrOutput)
}

type ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput struct{ *pulumi.OutputState }

func (ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxis)(nil)).Elem()
}

func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput) ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput() ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput) ToScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayOutputWithContext(ctx context.Context) ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput {
	return o
}

func (o ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput) Index(i pulumi.IntInput) ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxis {
		return vs[0].([]ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxis)[vs[1].(int)]
	}).(ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisOutput)
}

type ScheduledQueryNotificationConfiguration struct {
	// Configuration block for details about the Amazon Simple Notification Service (SNS) configuration. See below.
	SnsConfiguration ScheduledQueryNotificationConfigurationSnsConfiguration `pulumi:"snsConfiguration"`
}

// ScheduledQueryNotificationConfigurationInput is an input type that accepts ScheduledQueryNotificationConfigurationArgs and ScheduledQueryNotificationConfigurationOutput values.
// You can construct a concrete instance of `ScheduledQueryNotificationConfigurationInput` via:
//
//	ScheduledQueryNotificationConfigurationArgs{...}
type ScheduledQueryNotificationConfigurationInput interface {
	pulumi.Input

	ToScheduledQueryNotificationConfigurationOutput() ScheduledQueryNotificationConfigurationOutput
	ToScheduledQueryNotificationConfigurationOutputWithContext(context.Context) ScheduledQueryNotificationConfigurationOutput
}

type ScheduledQueryNotificationConfigurationArgs struct {
	// Configuration block for details about the Amazon Simple Notification Service (SNS) configuration. See below.
	SnsConfiguration ScheduledQueryNotificationConfigurationSnsConfigurationInput `pulumi:"snsConfiguration"`
}

func (ScheduledQueryNotificationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryNotificationConfiguration)(nil)).Elem()
}

func (i ScheduledQueryNotificationConfigurationArgs) ToScheduledQueryNotificationConfigurationOutput() ScheduledQueryNotificationConfigurationOutput {
	return i.ToScheduledQueryNotificationConfigurationOutputWithContext(context.Background())
}

func (i ScheduledQueryNotificationConfigurationArgs) ToScheduledQueryNotificationConfigurationOutputWithContext(ctx context.Context) ScheduledQueryNotificationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryNotificationConfigurationOutput)
}

func (i ScheduledQueryNotificationConfigurationArgs) ToScheduledQueryNotificationConfigurationPtrOutput() ScheduledQueryNotificationConfigurationPtrOutput {
	return i.ToScheduledQueryNotificationConfigurationPtrOutputWithContext(context.Background())
}

func (i ScheduledQueryNotificationConfigurationArgs) ToScheduledQueryNotificationConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryNotificationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryNotificationConfigurationOutput).ToScheduledQueryNotificationConfigurationPtrOutputWithContext(ctx)
}

// ScheduledQueryNotificationConfigurationPtrInput is an input type that accepts ScheduledQueryNotificationConfigurationArgs, ScheduledQueryNotificationConfigurationPtr and ScheduledQueryNotificationConfigurationPtrOutput values.
// You can construct a concrete instance of `ScheduledQueryNotificationConfigurationPtrInput` via:
//
//	        ScheduledQueryNotificationConfigurationArgs{...}
//
//	or:
//
//	        nil
type ScheduledQueryNotificationConfigurationPtrInput interface {
	pulumi.Input

	ToScheduledQueryNotificationConfigurationPtrOutput() ScheduledQueryNotificationConfigurationPtrOutput
	ToScheduledQueryNotificationConfigurationPtrOutputWithContext(context.Context) ScheduledQueryNotificationConfigurationPtrOutput
}

type scheduledQueryNotificationConfigurationPtrType ScheduledQueryNotificationConfigurationArgs

func ScheduledQueryNotificationConfigurationPtr(v *ScheduledQueryNotificationConfigurationArgs) ScheduledQueryNotificationConfigurationPtrInput {
	return (*scheduledQueryNotificationConfigurationPtrType)(v)
}

func (*scheduledQueryNotificationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledQueryNotificationConfiguration)(nil)).Elem()
}

func (i *scheduledQueryNotificationConfigurationPtrType) ToScheduledQueryNotificationConfigurationPtrOutput() ScheduledQueryNotificationConfigurationPtrOutput {
	return i.ToScheduledQueryNotificationConfigurationPtrOutputWithContext(context.Background())
}

func (i *scheduledQueryNotificationConfigurationPtrType) ToScheduledQueryNotificationConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryNotificationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryNotificationConfigurationPtrOutput)
}

type ScheduledQueryNotificationConfigurationOutput struct{ *pulumi.OutputState }

func (ScheduledQueryNotificationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryNotificationConfiguration)(nil)).Elem()
}

func (o ScheduledQueryNotificationConfigurationOutput) ToScheduledQueryNotificationConfigurationOutput() ScheduledQueryNotificationConfigurationOutput {
	return o
}

func (o ScheduledQueryNotificationConfigurationOutput) ToScheduledQueryNotificationConfigurationOutputWithContext(ctx context.Context) ScheduledQueryNotificationConfigurationOutput {
	return o
}

func (o ScheduledQueryNotificationConfigurationOutput) ToScheduledQueryNotificationConfigurationPtrOutput() ScheduledQueryNotificationConfigurationPtrOutput {
	return o.ToScheduledQueryNotificationConfigurationPtrOutputWithContext(context.Background())
}

func (o ScheduledQueryNotificationConfigurationOutput) ToScheduledQueryNotificationConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryNotificationConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledQueryNotificationConfiguration) *ScheduledQueryNotificationConfiguration {
		return &v
	}).(ScheduledQueryNotificationConfigurationPtrOutput)
}

// Configuration block for details about the Amazon Simple Notification Service (SNS) configuration. See below.
func (o ScheduledQueryNotificationConfigurationOutput) SnsConfiguration() ScheduledQueryNotificationConfigurationSnsConfigurationOutput {
	return o.ApplyT(func(v ScheduledQueryNotificationConfiguration) ScheduledQueryNotificationConfigurationSnsConfiguration {
		return v.SnsConfiguration
	}).(ScheduledQueryNotificationConfigurationSnsConfigurationOutput)
}

type ScheduledQueryNotificationConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ScheduledQueryNotificationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledQueryNotificationConfiguration)(nil)).Elem()
}

func (o ScheduledQueryNotificationConfigurationPtrOutput) ToScheduledQueryNotificationConfigurationPtrOutput() ScheduledQueryNotificationConfigurationPtrOutput {
	return o
}

func (o ScheduledQueryNotificationConfigurationPtrOutput) ToScheduledQueryNotificationConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryNotificationConfigurationPtrOutput {
	return o
}

func (o ScheduledQueryNotificationConfigurationPtrOutput) Elem() ScheduledQueryNotificationConfigurationOutput {
	return o.ApplyT(func(v *ScheduledQueryNotificationConfiguration) ScheduledQueryNotificationConfiguration {
		if v != nil {
			return *v
		}
		var ret ScheduledQueryNotificationConfiguration
		return ret
	}).(ScheduledQueryNotificationConfigurationOutput)
}

// Configuration block for details about the Amazon Simple Notification Service (SNS) configuration. See below.
func (o ScheduledQueryNotificationConfigurationPtrOutput) SnsConfiguration() ScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput {
	return o.ApplyT(func(v *ScheduledQueryNotificationConfiguration) *ScheduledQueryNotificationConfigurationSnsConfiguration {
		if v == nil {
			return nil
		}
		return &v.SnsConfiguration
	}).(ScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput)
}

type ScheduledQueryNotificationConfigurationSnsConfiguration struct {
	// SNS topic ARN that the scheduled query status notifications will be sent to.
	TopicArn string `pulumi:"topicArn"`
}

// ScheduledQueryNotificationConfigurationSnsConfigurationInput is an input type that accepts ScheduledQueryNotificationConfigurationSnsConfigurationArgs and ScheduledQueryNotificationConfigurationSnsConfigurationOutput values.
// You can construct a concrete instance of `ScheduledQueryNotificationConfigurationSnsConfigurationInput` via:
//
//	ScheduledQueryNotificationConfigurationSnsConfigurationArgs{...}
type ScheduledQueryNotificationConfigurationSnsConfigurationInput interface {
	pulumi.Input

	ToScheduledQueryNotificationConfigurationSnsConfigurationOutput() ScheduledQueryNotificationConfigurationSnsConfigurationOutput
	ToScheduledQueryNotificationConfigurationSnsConfigurationOutputWithContext(context.Context) ScheduledQueryNotificationConfigurationSnsConfigurationOutput
}

type ScheduledQueryNotificationConfigurationSnsConfigurationArgs struct {
	// SNS topic ARN that the scheduled query status notifications will be sent to.
	TopicArn pulumi.StringInput `pulumi:"topicArn"`
}

func (ScheduledQueryNotificationConfigurationSnsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryNotificationConfigurationSnsConfiguration)(nil)).Elem()
}

func (i ScheduledQueryNotificationConfigurationSnsConfigurationArgs) ToScheduledQueryNotificationConfigurationSnsConfigurationOutput() ScheduledQueryNotificationConfigurationSnsConfigurationOutput {
	return i.ToScheduledQueryNotificationConfigurationSnsConfigurationOutputWithContext(context.Background())
}

func (i ScheduledQueryNotificationConfigurationSnsConfigurationArgs) ToScheduledQueryNotificationConfigurationSnsConfigurationOutputWithContext(ctx context.Context) ScheduledQueryNotificationConfigurationSnsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryNotificationConfigurationSnsConfigurationOutput)
}

func (i ScheduledQueryNotificationConfigurationSnsConfigurationArgs) ToScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput() ScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput {
	return i.ToScheduledQueryNotificationConfigurationSnsConfigurationPtrOutputWithContext(context.Background())
}

func (i ScheduledQueryNotificationConfigurationSnsConfigurationArgs) ToScheduledQueryNotificationConfigurationSnsConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryNotificationConfigurationSnsConfigurationOutput).ToScheduledQueryNotificationConfigurationSnsConfigurationPtrOutputWithContext(ctx)
}

// ScheduledQueryNotificationConfigurationSnsConfigurationPtrInput is an input type that accepts ScheduledQueryNotificationConfigurationSnsConfigurationArgs, ScheduledQueryNotificationConfigurationSnsConfigurationPtr and ScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput values.
// You can construct a concrete instance of `ScheduledQueryNotificationConfigurationSnsConfigurationPtrInput` via:
//
//	        ScheduledQueryNotificationConfigurationSnsConfigurationArgs{...}
//
//	or:
//
//	        nil
type ScheduledQueryNotificationConfigurationSnsConfigurationPtrInput interface {
	pulumi.Input

	ToScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput() ScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput
	ToScheduledQueryNotificationConfigurationSnsConfigurationPtrOutputWithContext(context.Context) ScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput
}

type scheduledQueryNotificationConfigurationSnsConfigurationPtrType ScheduledQueryNotificationConfigurationSnsConfigurationArgs

func ScheduledQueryNotificationConfigurationSnsConfigurationPtr(v *ScheduledQueryNotificationConfigurationSnsConfigurationArgs) ScheduledQueryNotificationConfigurationSnsConfigurationPtrInput {
	return (*scheduledQueryNotificationConfigurationSnsConfigurationPtrType)(v)
}

func (*scheduledQueryNotificationConfigurationSnsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledQueryNotificationConfigurationSnsConfiguration)(nil)).Elem()
}

func (i *scheduledQueryNotificationConfigurationSnsConfigurationPtrType) ToScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput() ScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput {
	return i.ToScheduledQueryNotificationConfigurationSnsConfigurationPtrOutputWithContext(context.Background())
}

func (i *scheduledQueryNotificationConfigurationSnsConfigurationPtrType) ToScheduledQueryNotificationConfigurationSnsConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput)
}

type ScheduledQueryNotificationConfigurationSnsConfigurationOutput struct{ *pulumi.OutputState }

func (ScheduledQueryNotificationConfigurationSnsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryNotificationConfigurationSnsConfiguration)(nil)).Elem()
}

func (o ScheduledQueryNotificationConfigurationSnsConfigurationOutput) ToScheduledQueryNotificationConfigurationSnsConfigurationOutput() ScheduledQueryNotificationConfigurationSnsConfigurationOutput {
	return o
}

func (o ScheduledQueryNotificationConfigurationSnsConfigurationOutput) ToScheduledQueryNotificationConfigurationSnsConfigurationOutputWithContext(ctx context.Context) ScheduledQueryNotificationConfigurationSnsConfigurationOutput {
	return o
}

func (o ScheduledQueryNotificationConfigurationSnsConfigurationOutput) ToScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput() ScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput {
	return o.ToScheduledQueryNotificationConfigurationSnsConfigurationPtrOutputWithContext(context.Background())
}

func (o ScheduledQueryNotificationConfigurationSnsConfigurationOutput) ToScheduledQueryNotificationConfigurationSnsConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledQueryNotificationConfigurationSnsConfiguration) *ScheduledQueryNotificationConfigurationSnsConfiguration {
		return &v
	}).(ScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput)
}

// SNS topic ARN that the scheduled query status notifications will be sent to.
func (o ScheduledQueryNotificationConfigurationSnsConfigurationOutput) TopicArn() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledQueryNotificationConfigurationSnsConfiguration) string { return v.TopicArn }).(pulumi.StringOutput)
}

type ScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledQueryNotificationConfigurationSnsConfiguration)(nil)).Elem()
}

func (o ScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput) ToScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput() ScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput {
	return o
}

func (o ScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput) ToScheduledQueryNotificationConfigurationSnsConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput {
	return o
}

func (o ScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput) Elem() ScheduledQueryNotificationConfigurationSnsConfigurationOutput {
	return o.ApplyT(func(v *ScheduledQueryNotificationConfigurationSnsConfiguration) ScheduledQueryNotificationConfigurationSnsConfiguration {
		if v != nil {
			return *v
		}
		var ret ScheduledQueryNotificationConfigurationSnsConfiguration
		return ret
	}).(ScheduledQueryNotificationConfigurationSnsConfigurationOutput)
}

// SNS topic ARN that the scheduled query status notifications will be sent to.
func (o ScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput) TopicArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledQueryNotificationConfigurationSnsConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.TopicArn
	}).(pulumi.StringPtrOutput)
}

type ScheduledQueryRecentlyFailedRun struct {
	// S3 location for error report.
	ErrorReportLocations []ScheduledQueryRecentlyFailedRunErrorReportLocation `pulumi:"errorReportLocations"`
	// Statistics for a single scheduled query run.
	ExecutionStats []ScheduledQueryRecentlyFailedRunExecutionStat `pulumi:"executionStats"`
	// Error message for the scheduled query in case of failure. You might have to look at the error report to get more detailed error reasons.
	FailureReason *string `pulumi:"failureReason"`
	// InvocationTime for this run. This is the time at which the query is scheduled to run. Parameter `@scheduled_runtime` can be used in the query to get the value.
	InvocationTime *string `pulumi:"invocationTime"`
	// Various insights and metrics related to the run summary of the scheduled query.
	QueryInsightsResponses []ScheduledQueryRecentlyFailedRunQueryInsightsResponse `pulumi:"queryInsightsResponses"`
	// Status of a scheduled query run. Valid values: `AUTO_TRIGGER_SUCCESS`, `AUTO_TRIGGER_FAILURE`, `MANUAL_TRIGGER_SUCCESS`, `MANUAL_TRIGGER_FAILURE`.
	RunStatus *string `pulumi:"runStatus"`
	// Actual time when the query was run.
	TriggerTime *string `pulumi:"triggerTime"`
}

// ScheduledQueryRecentlyFailedRunInput is an input type that accepts ScheduledQueryRecentlyFailedRunArgs and ScheduledQueryRecentlyFailedRunOutput values.
// You can construct a concrete instance of `ScheduledQueryRecentlyFailedRunInput` via:
//
//	ScheduledQueryRecentlyFailedRunArgs{...}
type ScheduledQueryRecentlyFailedRunInput interface {
	pulumi.Input

	ToScheduledQueryRecentlyFailedRunOutput() ScheduledQueryRecentlyFailedRunOutput
	ToScheduledQueryRecentlyFailedRunOutputWithContext(context.Context) ScheduledQueryRecentlyFailedRunOutput
}

type ScheduledQueryRecentlyFailedRunArgs struct {
	// S3 location for error report.
	ErrorReportLocations ScheduledQueryRecentlyFailedRunErrorReportLocationArrayInput `pulumi:"errorReportLocations"`
	// Statistics for a single scheduled query run.
	ExecutionStats ScheduledQueryRecentlyFailedRunExecutionStatArrayInput `pulumi:"executionStats"`
	// Error message for the scheduled query in case of failure. You might have to look at the error report to get more detailed error reasons.
	FailureReason pulumi.StringPtrInput `pulumi:"failureReason"`
	// InvocationTime for this run. This is the time at which the query is scheduled to run. Parameter `@scheduled_runtime` can be used in the query to get the value.
	InvocationTime pulumi.StringPtrInput `pulumi:"invocationTime"`
	// Various insights and metrics related to the run summary of the scheduled query.
	QueryInsightsResponses ScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayInput `pulumi:"queryInsightsResponses"`
	// Status of a scheduled query run. Valid values: `AUTO_TRIGGER_SUCCESS`, `AUTO_TRIGGER_FAILURE`, `MANUAL_TRIGGER_SUCCESS`, `MANUAL_TRIGGER_FAILURE`.
	RunStatus pulumi.StringPtrInput `pulumi:"runStatus"`
	// Actual time when the query was run.
	TriggerTime pulumi.StringPtrInput `pulumi:"triggerTime"`
}

func (ScheduledQueryRecentlyFailedRunArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryRecentlyFailedRun)(nil)).Elem()
}

func (i ScheduledQueryRecentlyFailedRunArgs) ToScheduledQueryRecentlyFailedRunOutput() ScheduledQueryRecentlyFailedRunOutput {
	return i.ToScheduledQueryRecentlyFailedRunOutputWithContext(context.Background())
}

func (i ScheduledQueryRecentlyFailedRunArgs) ToScheduledQueryRecentlyFailedRunOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryRecentlyFailedRunOutput)
}

// ScheduledQueryRecentlyFailedRunArrayInput is an input type that accepts ScheduledQueryRecentlyFailedRunArray and ScheduledQueryRecentlyFailedRunArrayOutput values.
// You can construct a concrete instance of `ScheduledQueryRecentlyFailedRunArrayInput` via:
//
//	ScheduledQueryRecentlyFailedRunArray{ ScheduledQueryRecentlyFailedRunArgs{...} }
type ScheduledQueryRecentlyFailedRunArrayInput interface {
	pulumi.Input

	ToScheduledQueryRecentlyFailedRunArrayOutput() ScheduledQueryRecentlyFailedRunArrayOutput
	ToScheduledQueryRecentlyFailedRunArrayOutputWithContext(context.Context) ScheduledQueryRecentlyFailedRunArrayOutput
}

type ScheduledQueryRecentlyFailedRunArray []ScheduledQueryRecentlyFailedRunInput

func (ScheduledQueryRecentlyFailedRunArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryRecentlyFailedRun)(nil)).Elem()
}

func (i ScheduledQueryRecentlyFailedRunArray) ToScheduledQueryRecentlyFailedRunArrayOutput() ScheduledQueryRecentlyFailedRunArrayOutput {
	return i.ToScheduledQueryRecentlyFailedRunArrayOutputWithContext(context.Background())
}

func (i ScheduledQueryRecentlyFailedRunArray) ToScheduledQueryRecentlyFailedRunArrayOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryRecentlyFailedRunArrayOutput)
}

type ScheduledQueryRecentlyFailedRunOutput struct{ *pulumi.OutputState }

func (ScheduledQueryRecentlyFailedRunOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryRecentlyFailedRun)(nil)).Elem()
}

func (o ScheduledQueryRecentlyFailedRunOutput) ToScheduledQueryRecentlyFailedRunOutput() ScheduledQueryRecentlyFailedRunOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunOutput) ToScheduledQueryRecentlyFailedRunOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunOutput {
	return o
}

// S3 location for error report.
func (o ScheduledQueryRecentlyFailedRunOutput) ErrorReportLocations() ScheduledQueryRecentlyFailedRunErrorReportLocationArrayOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRun) []ScheduledQueryRecentlyFailedRunErrorReportLocation {
		return v.ErrorReportLocations
	}).(ScheduledQueryRecentlyFailedRunErrorReportLocationArrayOutput)
}

// Statistics for a single scheduled query run.
func (o ScheduledQueryRecentlyFailedRunOutput) ExecutionStats() ScheduledQueryRecentlyFailedRunExecutionStatArrayOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRun) []ScheduledQueryRecentlyFailedRunExecutionStat {
		return v.ExecutionStats
	}).(ScheduledQueryRecentlyFailedRunExecutionStatArrayOutput)
}

// Error message for the scheduled query in case of failure. You might have to look at the error report to get more detailed error reasons.
func (o ScheduledQueryRecentlyFailedRunOutput) FailureReason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRun) *string { return v.FailureReason }).(pulumi.StringPtrOutput)
}

// InvocationTime for this run. This is the time at which the query is scheduled to run. Parameter `@scheduled_runtime` can be used in the query to get the value.
func (o ScheduledQueryRecentlyFailedRunOutput) InvocationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRun) *string { return v.InvocationTime }).(pulumi.StringPtrOutput)
}

// Various insights and metrics related to the run summary of the scheduled query.
func (o ScheduledQueryRecentlyFailedRunOutput) QueryInsightsResponses() ScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRun) []ScheduledQueryRecentlyFailedRunQueryInsightsResponse {
		return v.QueryInsightsResponses
	}).(ScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayOutput)
}

// Status of a scheduled query run. Valid values: `AUTO_TRIGGER_SUCCESS`, `AUTO_TRIGGER_FAILURE`, `MANUAL_TRIGGER_SUCCESS`, `MANUAL_TRIGGER_FAILURE`.
func (o ScheduledQueryRecentlyFailedRunOutput) RunStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRun) *string { return v.RunStatus }).(pulumi.StringPtrOutput)
}

// Actual time when the query was run.
func (o ScheduledQueryRecentlyFailedRunOutput) TriggerTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRun) *string { return v.TriggerTime }).(pulumi.StringPtrOutput)
}

type ScheduledQueryRecentlyFailedRunArrayOutput struct{ *pulumi.OutputState }

func (ScheduledQueryRecentlyFailedRunArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryRecentlyFailedRun)(nil)).Elem()
}

func (o ScheduledQueryRecentlyFailedRunArrayOutput) ToScheduledQueryRecentlyFailedRunArrayOutput() ScheduledQueryRecentlyFailedRunArrayOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunArrayOutput) ToScheduledQueryRecentlyFailedRunArrayOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunArrayOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunArrayOutput) Index(i pulumi.IntInput) ScheduledQueryRecentlyFailedRunOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledQueryRecentlyFailedRun {
		return vs[0].([]ScheduledQueryRecentlyFailedRun)[vs[1].(int)]
	}).(ScheduledQueryRecentlyFailedRunOutput)
}

type ScheduledQueryRecentlyFailedRunErrorReportLocation struct {
	// S3 location where error reports are written.
	S3ReportLocations []ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocation `pulumi:"s3ReportLocations"`
}

// ScheduledQueryRecentlyFailedRunErrorReportLocationInput is an input type that accepts ScheduledQueryRecentlyFailedRunErrorReportLocationArgs and ScheduledQueryRecentlyFailedRunErrorReportLocationOutput values.
// You can construct a concrete instance of `ScheduledQueryRecentlyFailedRunErrorReportLocationInput` via:
//
//	ScheduledQueryRecentlyFailedRunErrorReportLocationArgs{...}
type ScheduledQueryRecentlyFailedRunErrorReportLocationInput interface {
	pulumi.Input

	ToScheduledQueryRecentlyFailedRunErrorReportLocationOutput() ScheduledQueryRecentlyFailedRunErrorReportLocationOutput
	ToScheduledQueryRecentlyFailedRunErrorReportLocationOutputWithContext(context.Context) ScheduledQueryRecentlyFailedRunErrorReportLocationOutput
}

type ScheduledQueryRecentlyFailedRunErrorReportLocationArgs struct {
	// S3 location where error reports are written.
	S3ReportLocations ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayInput `pulumi:"s3ReportLocations"`
}

func (ScheduledQueryRecentlyFailedRunErrorReportLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryRecentlyFailedRunErrorReportLocation)(nil)).Elem()
}

func (i ScheduledQueryRecentlyFailedRunErrorReportLocationArgs) ToScheduledQueryRecentlyFailedRunErrorReportLocationOutput() ScheduledQueryRecentlyFailedRunErrorReportLocationOutput {
	return i.ToScheduledQueryRecentlyFailedRunErrorReportLocationOutputWithContext(context.Background())
}

func (i ScheduledQueryRecentlyFailedRunErrorReportLocationArgs) ToScheduledQueryRecentlyFailedRunErrorReportLocationOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunErrorReportLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryRecentlyFailedRunErrorReportLocationOutput)
}

// ScheduledQueryRecentlyFailedRunErrorReportLocationArrayInput is an input type that accepts ScheduledQueryRecentlyFailedRunErrorReportLocationArray and ScheduledQueryRecentlyFailedRunErrorReportLocationArrayOutput values.
// You can construct a concrete instance of `ScheduledQueryRecentlyFailedRunErrorReportLocationArrayInput` via:
//
//	ScheduledQueryRecentlyFailedRunErrorReportLocationArray{ ScheduledQueryRecentlyFailedRunErrorReportLocationArgs{...} }
type ScheduledQueryRecentlyFailedRunErrorReportLocationArrayInput interface {
	pulumi.Input

	ToScheduledQueryRecentlyFailedRunErrorReportLocationArrayOutput() ScheduledQueryRecentlyFailedRunErrorReportLocationArrayOutput
	ToScheduledQueryRecentlyFailedRunErrorReportLocationArrayOutputWithContext(context.Context) ScheduledQueryRecentlyFailedRunErrorReportLocationArrayOutput
}

type ScheduledQueryRecentlyFailedRunErrorReportLocationArray []ScheduledQueryRecentlyFailedRunErrorReportLocationInput

func (ScheduledQueryRecentlyFailedRunErrorReportLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryRecentlyFailedRunErrorReportLocation)(nil)).Elem()
}

func (i ScheduledQueryRecentlyFailedRunErrorReportLocationArray) ToScheduledQueryRecentlyFailedRunErrorReportLocationArrayOutput() ScheduledQueryRecentlyFailedRunErrorReportLocationArrayOutput {
	return i.ToScheduledQueryRecentlyFailedRunErrorReportLocationArrayOutputWithContext(context.Background())
}

func (i ScheduledQueryRecentlyFailedRunErrorReportLocationArray) ToScheduledQueryRecentlyFailedRunErrorReportLocationArrayOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunErrorReportLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryRecentlyFailedRunErrorReportLocationArrayOutput)
}

type ScheduledQueryRecentlyFailedRunErrorReportLocationOutput struct{ *pulumi.OutputState }

func (ScheduledQueryRecentlyFailedRunErrorReportLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryRecentlyFailedRunErrorReportLocation)(nil)).Elem()
}

func (o ScheduledQueryRecentlyFailedRunErrorReportLocationOutput) ToScheduledQueryRecentlyFailedRunErrorReportLocationOutput() ScheduledQueryRecentlyFailedRunErrorReportLocationOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunErrorReportLocationOutput) ToScheduledQueryRecentlyFailedRunErrorReportLocationOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunErrorReportLocationOutput {
	return o
}

// S3 location where error reports are written.
func (o ScheduledQueryRecentlyFailedRunErrorReportLocationOutput) S3ReportLocations() ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRunErrorReportLocation) []ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocation {
		return v.S3ReportLocations
	}).(ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayOutput)
}

type ScheduledQueryRecentlyFailedRunErrorReportLocationArrayOutput struct{ *pulumi.OutputState }

func (ScheduledQueryRecentlyFailedRunErrorReportLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryRecentlyFailedRunErrorReportLocation)(nil)).Elem()
}

func (o ScheduledQueryRecentlyFailedRunErrorReportLocationArrayOutput) ToScheduledQueryRecentlyFailedRunErrorReportLocationArrayOutput() ScheduledQueryRecentlyFailedRunErrorReportLocationArrayOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunErrorReportLocationArrayOutput) ToScheduledQueryRecentlyFailedRunErrorReportLocationArrayOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunErrorReportLocationArrayOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunErrorReportLocationArrayOutput) Index(i pulumi.IntInput) ScheduledQueryRecentlyFailedRunErrorReportLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledQueryRecentlyFailedRunErrorReportLocation {
		return vs[0].([]ScheduledQueryRecentlyFailedRunErrorReportLocation)[vs[1].(int)]
	}).(ScheduledQueryRecentlyFailedRunErrorReportLocationOutput)
}

type ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocation struct {
	// S3 bucket name.
	BucketName *string `pulumi:"bucketName"`
	// S3 key.
	ObjectKey *string `pulumi:"objectKey"`
}

// ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationInput is an input type that accepts ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArgs and ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationOutput values.
// You can construct a concrete instance of `ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationInput` via:
//
//	ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArgs{...}
type ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationInput interface {
	pulumi.Input

	ToScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationOutput() ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationOutput
	ToScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationOutputWithContext(context.Context) ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationOutput
}

type ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArgs struct {
	// S3 bucket name.
	BucketName pulumi.StringPtrInput `pulumi:"bucketName"`
	// S3 key.
	ObjectKey pulumi.StringPtrInput `pulumi:"objectKey"`
}

func (ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocation)(nil)).Elem()
}

func (i ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArgs) ToScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationOutput() ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationOutput {
	return i.ToScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationOutputWithContext(context.Background())
}

func (i ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArgs) ToScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationOutput)
}

// ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayInput is an input type that accepts ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArray and ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayOutput values.
// You can construct a concrete instance of `ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayInput` via:
//
//	ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArray{ ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArgs{...} }
type ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayInput interface {
	pulumi.Input

	ToScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayOutput() ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayOutput
	ToScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayOutputWithContext(context.Context) ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayOutput
}

type ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArray []ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationInput

func (ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocation)(nil)).Elem()
}

func (i ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArray) ToScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayOutput() ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayOutput {
	return i.ToScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayOutputWithContext(context.Background())
}

func (i ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArray) ToScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayOutput)
}

type ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationOutput struct{ *pulumi.OutputState }

func (ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocation)(nil)).Elem()
}

func (o ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationOutput) ToScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationOutput() ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationOutput) ToScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationOutput {
	return o
}

// S3 bucket name.
func (o ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationOutput) BucketName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocation) *string {
		return v.BucketName
	}).(pulumi.StringPtrOutput)
}

// S3 key.
func (o ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationOutput) ObjectKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocation) *string { return v.ObjectKey }).(pulumi.StringPtrOutput)
}

type ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayOutput struct{ *pulumi.OutputState }

func (ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocation)(nil)).Elem()
}

func (o ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayOutput) ToScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayOutput() ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayOutput) ToScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayOutput) Index(i pulumi.IntInput) ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocation {
		return vs[0].([]ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocation)[vs[1].(int)]
	}).(ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationOutput)
}

type ScheduledQueryRecentlyFailedRunExecutionStat struct {
	// Bytes metered for a single scheduled query run.
	BytesMetered *int `pulumi:"bytesMetered"`
	// Bytes scanned for a single scheduled query run.
	CumulativeBytesScanned *int `pulumi:"cumulativeBytesScanned"`
	// Data writes metered for records ingested in a single scheduled query run.
	DataWrites *int `pulumi:"dataWrites"`
	// Total time, measured in milliseconds, that was needed for the scheduled query run to complete.
	ExecutionTimeInMillis *int `pulumi:"executionTimeInMillis"`
	// Number of rows present in the output from running a query before ingestion to destination data source.
	QueryResultRows *int `pulumi:"queryResultRows"`
	// Number of records ingested for a single scheduled query run.
	RecordsIngested *int `pulumi:"recordsIngested"`
}

// ScheduledQueryRecentlyFailedRunExecutionStatInput is an input type that accepts ScheduledQueryRecentlyFailedRunExecutionStatArgs and ScheduledQueryRecentlyFailedRunExecutionStatOutput values.
// You can construct a concrete instance of `ScheduledQueryRecentlyFailedRunExecutionStatInput` via:
//
//	ScheduledQueryRecentlyFailedRunExecutionStatArgs{...}
type ScheduledQueryRecentlyFailedRunExecutionStatInput interface {
	pulumi.Input

	ToScheduledQueryRecentlyFailedRunExecutionStatOutput() ScheduledQueryRecentlyFailedRunExecutionStatOutput
	ToScheduledQueryRecentlyFailedRunExecutionStatOutputWithContext(context.Context) ScheduledQueryRecentlyFailedRunExecutionStatOutput
}

type ScheduledQueryRecentlyFailedRunExecutionStatArgs struct {
	// Bytes metered for a single scheduled query run.
	BytesMetered pulumi.IntPtrInput `pulumi:"bytesMetered"`
	// Bytes scanned for a single scheduled query run.
	CumulativeBytesScanned pulumi.IntPtrInput `pulumi:"cumulativeBytesScanned"`
	// Data writes metered for records ingested in a single scheduled query run.
	DataWrites pulumi.IntPtrInput `pulumi:"dataWrites"`
	// Total time, measured in milliseconds, that was needed for the scheduled query run to complete.
	ExecutionTimeInMillis pulumi.IntPtrInput `pulumi:"executionTimeInMillis"`
	// Number of rows present in the output from running a query before ingestion to destination data source.
	QueryResultRows pulumi.IntPtrInput `pulumi:"queryResultRows"`
	// Number of records ingested for a single scheduled query run.
	RecordsIngested pulumi.IntPtrInput `pulumi:"recordsIngested"`
}

func (ScheduledQueryRecentlyFailedRunExecutionStatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryRecentlyFailedRunExecutionStat)(nil)).Elem()
}

func (i ScheduledQueryRecentlyFailedRunExecutionStatArgs) ToScheduledQueryRecentlyFailedRunExecutionStatOutput() ScheduledQueryRecentlyFailedRunExecutionStatOutput {
	return i.ToScheduledQueryRecentlyFailedRunExecutionStatOutputWithContext(context.Background())
}

func (i ScheduledQueryRecentlyFailedRunExecutionStatArgs) ToScheduledQueryRecentlyFailedRunExecutionStatOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunExecutionStatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryRecentlyFailedRunExecutionStatOutput)
}

// ScheduledQueryRecentlyFailedRunExecutionStatArrayInput is an input type that accepts ScheduledQueryRecentlyFailedRunExecutionStatArray and ScheduledQueryRecentlyFailedRunExecutionStatArrayOutput values.
// You can construct a concrete instance of `ScheduledQueryRecentlyFailedRunExecutionStatArrayInput` via:
//
//	ScheduledQueryRecentlyFailedRunExecutionStatArray{ ScheduledQueryRecentlyFailedRunExecutionStatArgs{...} }
type ScheduledQueryRecentlyFailedRunExecutionStatArrayInput interface {
	pulumi.Input

	ToScheduledQueryRecentlyFailedRunExecutionStatArrayOutput() ScheduledQueryRecentlyFailedRunExecutionStatArrayOutput
	ToScheduledQueryRecentlyFailedRunExecutionStatArrayOutputWithContext(context.Context) ScheduledQueryRecentlyFailedRunExecutionStatArrayOutput
}

type ScheduledQueryRecentlyFailedRunExecutionStatArray []ScheduledQueryRecentlyFailedRunExecutionStatInput

func (ScheduledQueryRecentlyFailedRunExecutionStatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryRecentlyFailedRunExecutionStat)(nil)).Elem()
}

func (i ScheduledQueryRecentlyFailedRunExecutionStatArray) ToScheduledQueryRecentlyFailedRunExecutionStatArrayOutput() ScheduledQueryRecentlyFailedRunExecutionStatArrayOutput {
	return i.ToScheduledQueryRecentlyFailedRunExecutionStatArrayOutputWithContext(context.Background())
}

func (i ScheduledQueryRecentlyFailedRunExecutionStatArray) ToScheduledQueryRecentlyFailedRunExecutionStatArrayOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunExecutionStatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryRecentlyFailedRunExecutionStatArrayOutput)
}

type ScheduledQueryRecentlyFailedRunExecutionStatOutput struct{ *pulumi.OutputState }

func (ScheduledQueryRecentlyFailedRunExecutionStatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryRecentlyFailedRunExecutionStat)(nil)).Elem()
}

func (o ScheduledQueryRecentlyFailedRunExecutionStatOutput) ToScheduledQueryRecentlyFailedRunExecutionStatOutput() ScheduledQueryRecentlyFailedRunExecutionStatOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunExecutionStatOutput) ToScheduledQueryRecentlyFailedRunExecutionStatOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunExecutionStatOutput {
	return o
}

// Bytes metered for a single scheduled query run.
func (o ScheduledQueryRecentlyFailedRunExecutionStatOutput) BytesMetered() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRunExecutionStat) *int { return v.BytesMetered }).(pulumi.IntPtrOutput)
}

// Bytes scanned for a single scheduled query run.
func (o ScheduledQueryRecentlyFailedRunExecutionStatOutput) CumulativeBytesScanned() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRunExecutionStat) *int { return v.CumulativeBytesScanned }).(pulumi.IntPtrOutput)
}

// Data writes metered for records ingested in a single scheduled query run.
func (o ScheduledQueryRecentlyFailedRunExecutionStatOutput) DataWrites() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRunExecutionStat) *int { return v.DataWrites }).(pulumi.IntPtrOutput)
}

// Total time, measured in milliseconds, that was needed for the scheduled query run to complete.
func (o ScheduledQueryRecentlyFailedRunExecutionStatOutput) ExecutionTimeInMillis() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRunExecutionStat) *int { return v.ExecutionTimeInMillis }).(pulumi.IntPtrOutput)
}

// Number of rows present in the output from running a query before ingestion to destination data source.
func (o ScheduledQueryRecentlyFailedRunExecutionStatOutput) QueryResultRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRunExecutionStat) *int { return v.QueryResultRows }).(pulumi.IntPtrOutput)
}

// Number of records ingested for a single scheduled query run.
func (o ScheduledQueryRecentlyFailedRunExecutionStatOutput) RecordsIngested() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRunExecutionStat) *int { return v.RecordsIngested }).(pulumi.IntPtrOutput)
}

type ScheduledQueryRecentlyFailedRunExecutionStatArrayOutput struct{ *pulumi.OutputState }

func (ScheduledQueryRecentlyFailedRunExecutionStatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryRecentlyFailedRunExecutionStat)(nil)).Elem()
}

func (o ScheduledQueryRecentlyFailedRunExecutionStatArrayOutput) ToScheduledQueryRecentlyFailedRunExecutionStatArrayOutput() ScheduledQueryRecentlyFailedRunExecutionStatArrayOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunExecutionStatArrayOutput) ToScheduledQueryRecentlyFailedRunExecutionStatArrayOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunExecutionStatArrayOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunExecutionStatArrayOutput) Index(i pulumi.IntInput) ScheduledQueryRecentlyFailedRunExecutionStatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledQueryRecentlyFailedRunExecutionStat {
		return vs[0].([]ScheduledQueryRecentlyFailedRunExecutionStat)[vs[1].(int)]
	}).(ScheduledQueryRecentlyFailedRunExecutionStatOutput)
}

type ScheduledQueryRecentlyFailedRunQueryInsightsResponse struct {
	// Size of query result set in bytes. You can use this data to validate if the result set has changed as part of the query tuning exercise.
	OutputBytes *int `pulumi:"outputBytes"`
	// Total number of rows returned as part of the query result set. You can use this data to validate if the number of rows in the result set have changed as part of the query tuning exercise.
	OutputRows *int `pulumi:"outputRows"`
	// Insights into the spatial coverage of the query, including the table with sub-optimal (max) spatial pruning. This information can help you identify areas for improvement in your partitioning strategy to enhance spatial pruning.
	QuerySpatialCoverages []ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverage `pulumi:"querySpatialCoverages"`
	// Number of tables in the query.
	QueryTableCount *int `pulumi:"queryTableCount"`
	// Insights into the temporal range of the query, including the table with the largest (max) time range. Following are some of the potential options for optimizing time-based pruning: add missing time-predicates, remove functions around the time predicates, add time predicates to all the sub-queries.
	QueryTemporalRanges []ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRange `pulumi:"queryTemporalRanges"`
}

// ScheduledQueryRecentlyFailedRunQueryInsightsResponseInput is an input type that accepts ScheduledQueryRecentlyFailedRunQueryInsightsResponseArgs and ScheduledQueryRecentlyFailedRunQueryInsightsResponseOutput values.
// You can construct a concrete instance of `ScheduledQueryRecentlyFailedRunQueryInsightsResponseInput` via:
//
//	ScheduledQueryRecentlyFailedRunQueryInsightsResponseArgs{...}
type ScheduledQueryRecentlyFailedRunQueryInsightsResponseInput interface {
	pulumi.Input

	ToScheduledQueryRecentlyFailedRunQueryInsightsResponseOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseOutput
	ToScheduledQueryRecentlyFailedRunQueryInsightsResponseOutputWithContext(context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseOutput
}

type ScheduledQueryRecentlyFailedRunQueryInsightsResponseArgs struct {
	// Size of query result set in bytes. You can use this data to validate if the result set has changed as part of the query tuning exercise.
	OutputBytes pulumi.IntPtrInput `pulumi:"outputBytes"`
	// Total number of rows returned as part of the query result set. You can use this data to validate if the number of rows in the result set have changed as part of the query tuning exercise.
	OutputRows pulumi.IntPtrInput `pulumi:"outputRows"`
	// Insights into the spatial coverage of the query, including the table with sub-optimal (max) spatial pruning. This information can help you identify areas for improvement in your partitioning strategy to enhance spatial pruning.
	QuerySpatialCoverages ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayInput `pulumi:"querySpatialCoverages"`
	// Number of tables in the query.
	QueryTableCount pulumi.IntPtrInput `pulumi:"queryTableCount"`
	// Insights into the temporal range of the query, including the table with the largest (max) time range. Following are some of the potential options for optimizing time-based pruning: add missing time-predicates, remove functions around the time predicates, add time predicates to all the sub-queries.
	QueryTemporalRanges ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayInput `pulumi:"queryTemporalRanges"`
}

func (ScheduledQueryRecentlyFailedRunQueryInsightsResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryRecentlyFailedRunQueryInsightsResponse)(nil)).Elem()
}

func (i ScheduledQueryRecentlyFailedRunQueryInsightsResponseArgs) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseOutput {
	return i.ToScheduledQueryRecentlyFailedRunQueryInsightsResponseOutputWithContext(context.Background())
}

func (i ScheduledQueryRecentlyFailedRunQueryInsightsResponseArgs) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryRecentlyFailedRunQueryInsightsResponseOutput)
}

// ScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayInput is an input type that accepts ScheduledQueryRecentlyFailedRunQueryInsightsResponseArray and ScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayOutput values.
// You can construct a concrete instance of `ScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayInput` via:
//
//	ScheduledQueryRecentlyFailedRunQueryInsightsResponseArray{ ScheduledQueryRecentlyFailedRunQueryInsightsResponseArgs{...} }
type ScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayInput interface {
	pulumi.Input

	ToScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayOutput
	ToScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayOutputWithContext(context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayOutput
}

type ScheduledQueryRecentlyFailedRunQueryInsightsResponseArray []ScheduledQueryRecentlyFailedRunQueryInsightsResponseInput

func (ScheduledQueryRecentlyFailedRunQueryInsightsResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryRecentlyFailedRunQueryInsightsResponse)(nil)).Elem()
}

func (i ScheduledQueryRecentlyFailedRunQueryInsightsResponseArray) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayOutput {
	return i.ToScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayOutputWithContext(context.Background())
}

func (i ScheduledQueryRecentlyFailedRunQueryInsightsResponseArray) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayOutput)
}

type ScheduledQueryRecentlyFailedRunQueryInsightsResponseOutput struct{ *pulumi.OutputState }

func (ScheduledQueryRecentlyFailedRunQueryInsightsResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryRecentlyFailedRunQueryInsightsResponse)(nil)).Elem()
}

func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseOutput) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseOutput) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseOutput {
	return o
}

// Size of query result set in bytes. You can use this data to validate if the result set has changed as part of the query tuning exercise.
func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseOutput) OutputBytes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRunQueryInsightsResponse) *int { return v.OutputBytes }).(pulumi.IntPtrOutput)
}

// Total number of rows returned as part of the query result set. You can use this data to validate if the number of rows in the result set have changed as part of the query tuning exercise.
func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseOutput) OutputRows() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRunQueryInsightsResponse) *int { return v.OutputRows }).(pulumi.IntPtrOutput)
}

// Insights into the spatial coverage of the query, including the table with sub-optimal (max) spatial pruning. This information can help you identify areas for improvement in your partitioning strategy to enhance spatial pruning.
func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseOutput) QuerySpatialCoverages() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRunQueryInsightsResponse) []ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverage {
		return v.QuerySpatialCoverages
	}).(ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayOutput)
}

// Number of tables in the query.
func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseOutput) QueryTableCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRunQueryInsightsResponse) *int { return v.QueryTableCount }).(pulumi.IntPtrOutput)
}

// Insights into the temporal range of the query, including the table with the largest (max) time range. Following are some of the potential options for optimizing time-based pruning: add missing time-predicates, remove functions around the time predicates, add time predicates to all the sub-queries.
func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseOutput) QueryTemporalRanges() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRunQueryInsightsResponse) []ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRange {
		return v.QueryTemporalRanges
	}).(ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayOutput)
}

type ScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayOutput struct{ *pulumi.OutputState }

func (ScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryRecentlyFailedRunQueryInsightsResponse)(nil)).Elem()
}

func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayOutput) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayOutput) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayOutput) Index(i pulumi.IntInput) ScheduledQueryRecentlyFailedRunQueryInsightsResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledQueryRecentlyFailedRunQueryInsightsResponse {
		return vs[0].([]ScheduledQueryRecentlyFailedRunQueryInsightsResponse)[vs[1].(int)]
	}).(ScheduledQueryRecentlyFailedRunQueryInsightsResponseOutput)
}

type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverage struct {
	// Insights into the most sub-optimal performing table on the temporal axis:
	Maxes []ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxis `pulumi:"maxes"`
}

// ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageInput is an input type that accepts ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArgs and ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageOutput values.
// You can construct a concrete instance of `ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageInput` via:
//
//	ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArgs{...}
type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageInput interface {
	pulumi.Input

	ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageOutput
	ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageOutputWithContext(context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageOutput
}

type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArgs struct {
	// Insights into the most sub-optimal performing table on the temporal axis:
	Maxes ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayInput `pulumi:"maxes"`
}

func (ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverage)(nil)).Elem()
}

func (i ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArgs) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageOutput {
	return i.ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageOutputWithContext(context.Background())
}

func (i ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArgs) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageOutput)
}

// ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayInput is an input type that accepts ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArray and ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayOutput values.
// You can construct a concrete instance of `ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayInput` via:
//
//	ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArray{ ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArgs{...} }
type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayInput interface {
	pulumi.Input

	ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayOutput
	ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayOutputWithContext(context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayOutput
}

type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArray []ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageInput

func (ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverage)(nil)).Elem()
}

func (i ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArray) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayOutput {
	return i.ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayOutputWithContext(context.Background())
}

func (i ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArray) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayOutput)
}

type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageOutput struct{ *pulumi.OutputState }

func (ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverage)(nil)).Elem()
}

func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageOutput) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageOutput) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageOutput {
	return o
}

// Insights into the most sub-optimal performing table on the temporal axis:
func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageOutput) Maxes() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverage) []ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxis {
		return v.Maxes
	}).(ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput)
}

type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayOutput struct{ *pulumi.OutputState }

func (ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverage)(nil)).Elem()
}

func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayOutput) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayOutput) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayOutput) Index(i pulumi.IntInput) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverage {
		return vs[0].([]ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverage)[vs[1].(int)]
	}).(ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageOutput)
}

type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxis struct {
	// Partition key used for partitioning, which can be a default measureName or a customer defined partition key.
	PartitionKeys []string `pulumi:"partitionKeys"`
	// ARN of the table which is queried with the largest time range.
	TableArn *string `pulumi:"tableArn"`
	// Maximum duration in nanoseconds between the start and end of the query.
	Value *float64 `pulumi:"value"`
}

// ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisInput is an input type that accepts ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArgs and ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisOutput values.
// You can construct a concrete instance of `ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisInput` via:
//
//	ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArgs{...}
type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisInput interface {
	pulumi.Input

	ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisOutput
	ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisOutputWithContext(context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisOutput
}

type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArgs struct {
	// Partition key used for partitioning, which can be a default measureName or a customer defined partition key.
	PartitionKeys pulumi.StringArrayInput `pulumi:"partitionKeys"`
	// ARN of the table which is queried with the largest time range.
	TableArn pulumi.StringPtrInput `pulumi:"tableArn"`
	// Maximum duration in nanoseconds between the start and end of the query.
	Value pulumi.Float64PtrInput `pulumi:"value"`
}

func (ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxis)(nil)).Elem()
}

func (i ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArgs) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisOutput {
	return i.ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisOutputWithContext(context.Background())
}

func (i ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArgs) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisOutput)
}

// ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayInput is an input type that accepts ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArray and ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput values.
// You can construct a concrete instance of `ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayInput` via:
//
//	ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArray{ ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArgs{...} }
type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayInput interface {
	pulumi.Input

	ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput
	ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutputWithContext(context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput
}

type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArray []ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisInput

func (ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxis)(nil)).Elem()
}

func (i ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArray) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput {
	return i.ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutputWithContext(context.Background())
}

func (i ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArray) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput)
}

type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisOutput struct{ *pulumi.OutputState }

func (ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxis)(nil)).Elem()
}

func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisOutput) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisOutput) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisOutput {
	return o
}

// Partition key used for partitioning, which can be a default measureName or a customer defined partition key.
func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisOutput) PartitionKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxis) []string {
		return v.PartitionKeys
	}).(pulumi.StringArrayOutput)
}

// ARN of the table which is queried with the largest time range.
func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisOutput) TableArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxis) *string {
		return v.TableArn
	}).(pulumi.StringPtrOutput)
}

// Maximum duration in nanoseconds between the start and end of the query.
func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxis) *float64 {
		return v.Value
	}).(pulumi.Float64PtrOutput)
}

type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput struct{ *pulumi.OutputState }

func (ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxis)(nil)).Elem()
}

func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput) Index(i pulumi.IntInput) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxis {
		return vs[0].([]ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxis)[vs[1].(int)]
	}).(ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisOutput)
}

type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRange struct {
	// Insights into the most sub-optimal performing table on the temporal axis:
	Maxes []ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxis `pulumi:"maxes"`
}

// ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeInput is an input type that accepts ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArgs and ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeOutput values.
// You can construct a concrete instance of `ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeInput` via:
//
//	ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArgs{...}
type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeInput interface {
	pulumi.Input

	ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeOutput
	ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeOutputWithContext(context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeOutput
}

type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArgs struct {
	// Insights into the most sub-optimal performing table on the temporal axis:
	Maxes ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayInput `pulumi:"maxes"`
}

func (ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRange)(nil)).Elem()
}

func (i ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArgs) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeOutput {
	return i.ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeOutputWithContext(context.Background())
}

func (i ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArgs) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeOutput)
}

// ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayInput is an input type that accepts ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArray and ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayOutput values.
// You can construct a concrete instance of `ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayInput` via:
//
//	ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArray{ ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArgs{...} }
type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayInput interface {
	pulumi.Input

	ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayOutput
	ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayOutputWithContext(context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayOutput
}

type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArray []ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeInput

func (ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRange)(nil)).Elem()
}

func (i ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArray) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayOutput {
	return i.ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayOutputWithContext(context.Background())
}

func (i ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArray) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayOutput)
}

type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeOutput struct{ *pulumi.OutputState }

func (ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRange)(nil)).Elem()
}

func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeOutput) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeOutput) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeOutput {
	return o
}

// Insights into the most sub-optimal performing table on the temporal axis:
func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeOutput) Maxes() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRange) []ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxis {
		return v.Maxes
	}).(ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput)
}

type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayOutput struct{ *pulumi.OutputState }

func (ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRange)(nil)).Elem()
}

func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayOutput) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayOutput) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayOutput) Index(i pulumi.IntInput) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRange {
		return vs[0].([]ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRange)[vs[1].(int)]
	}).(ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeOutput)
}

type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxis struct {
	// ARN of the table which is queried with the largest time range.
	TableArn *string `pulumi:"tableArn"`
	// Maximum duration in nanoseconds between the start and end of the query.
	Value *int `pulumi:"value"`
}

// ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisInput is an input type that accepts ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArgs and ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisOutput values.
// You can construct a concrete instance of `ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisInput` via:
//
//	ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArgs{...}
type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisInput interface {
	pulumi.Input

	ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisOutput
	ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisOutputWithContext(context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisOutput
}

type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArgs struct {
	// ARN of the table which is queried with the largest time range.
	TableArn pulumi.StringPtrInput `pulumi:"tableArn"`
	// Maximum duration in nanoseconds between the start and end of the query.
	Value pulumi.IntPtrInput `pulumi:"value"`
}

func (ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxis)(nil)).Elem()
}

func (i ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArgs) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisOutput {
	return i.ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisOutputWithContext(context.Background())
}

func (i ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArgs) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisOutput)
}

// ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayInput is an input type that accepts ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArray and ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput values.
// You can construct a concrete instance of `ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayInput` via:
//
//	ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArray{ ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArgs{...} }
type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayInput interface {
	pulumi.Input

	ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput
	ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayOutputWithContext(context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput
}

type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArray []ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisInput

func (ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxis)(nil)).Elem()
}

func (i ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArray) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput {
	return i.ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayOutputWithContext(context.Background())
}

func (i ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArray) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput)
}

type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisOutput struct{ *pulumi.OutputState }

func (ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxis)(nil)).Elem()
}

func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisOutput) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisOutput) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisOutput {
	return o
}

// ARN of the table which is queried with the largest time range.
func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisOutput) TableArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxis) *string {
		return v.TableArn
	}).(pulumi.StringPtrOutput)
}

// Maximum duration in nanoseconds between the start and end of the query.
func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxis) *int {
		return v.Value
	}).(pulumi.IntPtrOutput)
}

type ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput struct{ *pulumi.OutputState }

func (ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxis)(nil)).Elem()
}

func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput() ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput) ToScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayOutputWithContext(ctx context.Context) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput {
	return o
}

func (o ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput) Index(i pulumi.IntInput) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxis {
		return vs[0].([]ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxis)[vs[1].(int)]
	}).(ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisOutput)
}

type ScheduledQueryScheduleConfiguration struct {
	// When to trigger the scheduled query run. This can be a cron expression or a rate expression.
	ScheduleExpression string `pulumi:"scheduleExpression"`
}

// ScheduledQueryScheduleConfigurationInput is an input type that accepts ScheduledQueryScheduleConfigurationArgs and ScheduledQueryScheduleConfigurationOutput values.
// You can construct a concrete instance of `ScheduledQueryScheduleConfigurationInput` via:
//
//	ScheduledQueryScheduleConfigurationArgs{...}
type ScheduledQueryScheduleConfigurationInput interface {
	pulumi.Input

	ToScheduledQueryScheduleConfigurationOutput() ScheduledQueryScheduleConfigurationOutput
	ToScheduledQueryScheduleConfigurationOutputWithContext(context.Context) ScheduledQueryScheduleConfigurationOutput
}

type ScheduledQueryScheduleConfigurationArgs struct {
	// When to trigger the scheduled query run. This can be a cron expression or a rate expression.
	ScheduleExpression pulumi.StringInput `pulumi:"scheduleExpression"`
}

func (ScheduledQueryScheduleConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryScheduleConfiguration)(nil)).Elem()
}

func (i ScheduledQueryScheduleConfigurationArgs) ToScheduledQueryScheduleConfigurationOutput() ScheduledQueryScheduleConfigurationOutput {
	return i.ToScheduledQueryScheduleConfigurationOutputWithContext(context.Background())
}

func (i ScheduledQueryScheduleConfigurationArgs) ToScheduledQueryScheduleConfigurationOutputWithContext(ctx context.Context) ScheduledQueryScheduleConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryScheduleConfigurationOutput)
}

func (i ScheduledQueryScheduleConfigurationArgs) ToScheduledQueryScheduleConfigurationPtrOutput() ScheduledQueryScheduleConfigurationPtrOutput {
	return i.ToScheduledQueryScheduleConfigurationPtrOutputWithContext(context.Background())
}

func (i ScheduledQueryScheduleConfigurationArgs) ToScheduledQueryScheduleConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryScheduleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryScheduleConfigurationOutput).ToScheduledQueryScheduleConfigurationPtrOutputWithContext(ctx)
}

// ScheduledQueryScheduleConfigurationPtrInput is an input type that accepts ScheduledQueryScheduleConfigurationArgs, ScheduledQueryScheduleConfigurationPtr and ScheduledQueryScheduleConfigurationPtrOutput values.
// You can construct a concrete instance of `ScheduledQueryScheduleConfigurationPtrInput` via:
//
//	        ScheduledQueryScheduleConfigurationArgs{...}
//
//	or:
//
//	        nil
type ScheduledQueryScheduleConfigurationPtrInput interface {
	pulumi.Input

	ToScheduledQueryScheduleConfigurationPtrOutput() ScheduledQueryScheduleConfigurationPtrOutput
	ToScheduledQueryScheduleConfigurationPtrOutputWithContext(context.Context) ScheduledQueryScheduleConfigurationPtrOutput
}

type scheduledQueryScheduleConfigurationPtrType ScheduledQueryScheduleConfigurationArgs

func ScheduledQueryScheduleConfigurationPtr(v *ScheduledQueryScheduleConfigurationArgs) ScheduledQueryScheduleConfigurationPtrInput {
	return (*scheduledQueryScheduleConfigurationPtrType)(v)
}

func (*scheduledQueryScheduleConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledQueryScheduleConfiguration)(nil)).Elem()
}

func (i *scheduledQueryScheduleConfigurationPtrType) ToScheduledQueryScheduleConfigurationPtrOutput() ScheduledQueryScheduleConfigurationPtrOutput {
	return i.ToScheduledQueryScheduleConfigurationPtrOutputWithContext(context.Background())
}

func (i *scheduledQueryScheduleConfigurationPtrType) ToScheduledQueryScheduleConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryScheduleConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryScheduleConfigurationPtrOutput)
}

type ScheduledQueryScheduleConfigurationOutput struct{ *pulumi.OutputState }

func (ScheduledQueryScheduleConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryScheduleConfiguration)(nil)).Elem()
}

func (o ScheduledQueryScheduleConfigurationOutput) ToScheduledQueryScheduleConfigurationOutput() ScheduledQueryScheduleConfigurationOutput {
	return o
}

func (o ScheduledQueryScheduleConfigurationOutput) ToScheduledQueryScheduleConfigurationOutputWithContext(ctx context.Context) ScheduledQueryScheduleConfigurationOutput {
	return o
}

func (o ScheduledQueryScheduleConfigurationOutput) ToScheduledQueryScheduleConfigurationPtrOutput() ScheduledQueryScheduleConfigurationPtrOutput {
	return o.ToScheduledQueryScheduleConfigurationPtrOutputWithContext(context.Background())
}

func (o ScheduledQueryScheduleConfigurationOutput) ToScheduledQueryScheduleConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryScheduleConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledQueryScheduleConfiguration) *ScheduledQueryScheduleConfiguration {
		return &v
	}).(ScheduledQueryScheduleConfigurationPtrOutput)
}

// When to trigger the scheduled query run. This can be a cron expression or a rate expression.
func (o ScheduledQueryScheduleConfigurationOutput) ScheduleExpression() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledQueryScheduleConfiguration) string { return v.ScheduleExpression }).(pulumi.StringOutput)
}

type ScheduledQueryScheduleConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ScheduledQueryScheduleConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledQueryScheduleConfiguration)(nil)).Elem()
}

func (o ScheduledQueryScheduleConfigurationPtrOutput) ToScheduledQueryScheduleConfigurationPtrOutput() ScheduledQueryScheduleConfigurationPtrOutput {
	return o
}

func (o ScheduledQueryScheduleConfigurationPtrOutput) ToScheduledQueryScheduleConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryScheduleConfigurationPtrOutput {
	return o
}

func (o ScheduledQueryScheduleConfigurationPtrOutput) Elem() ScheduledQueryScheduleConfigurationOutput {
	return o.ApplyT(func(v *ScheduledQueryScheduleConfiguration) ScheduledQueryScheduleConfiguration {
		if v != nil {
			return *v
		}
		var ret ScheduledQueryScheduleConfiguration
		return ret
	}).(ScheduledQueryScheduleConfigurationOutput)
}

// When to trigger the scheduled query run. This can be a cron expression or a rate expression.
func (o ScheduledQueryScheduleConfigurationPtrOutput) ScheduleExpression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledQueryScheduleConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ScheduleExpression
	}).(pulumi.StringPtrOutput)
}

type ScheduledQueryTargetConfiguration struct {
	// Configuration block for information needed to write data into the Timestream database and table. See below.
	TimestreamConfiguration *ScheduledQueryTargetConfigurationTimestreamConfiguration `pulumi:"timestreamConfiguration"`
}

// ScheduledQueryTargetConfigurationInput is an input type that accepts ScheduledQueryTargetConfigurationArgs and ScheduledQueryTargetConfigurationOutput values.
// You can construct a concrete instance of `ScheduledQueryTargetConfigurationInput` via:
//
//	ScheduledQueryTargetConfigurationArgs{...}
type ScheduledQueryTargetConfigurationInput interface {
	pulumi.Input

	ToScheduledQueryTargetConfigurationOutput() ScheduledQueryTargetConfigurationOutput
	ToScheduledQueryTargetConfigurationOutputWithContext(context.Context) ScheduledQueryTargetConfigurationOutput
}

type ScheduledQueryTargetConfigurationArgs struct {
	// Configuration block for information needed to write data into the Timestream database and table. See below.
	TimestreamConfiguration ScheduledQueryTargetConfigurationTimestreamConfigurationPtrInput `pulumi:"timestreamConfiguration"`
}

func (ScheduledQueryTargetConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryTargetConfiguration)(nil)).Elem()
}

func (i ScheduledQueryTargetConfigurationArgs) ToScheduledQueryTargetConfigurationOutput() ScheduledQueryTargetConfigurationOutput {
	return i.ToScheduledQueryTargetConfigurationOutputWithContext(context.Background())
}

func (i ScheduledQueryTargetConfigurationArgs) ToScheduledQueryTargetConfigurationOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryTargetConfigurationOutput)
}

func (i ScheduledQueryTargetConfigurationArgs) ToScheduledQueryTargetConfigurationPtrOutput() ScheduledQueryTargetConfigurationPtrOutput {
	return i.ToScheduledQueryTargetConfigurationPtrOutputWithContext(context.Background())
}

func (i ScheduledQueryTargetConfigurationArgs) ToScheduledQueryTargetConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryTargetConfigurationOutput).ToScheduledQueryTargetConfigurationPtrOutputWithContext(ctx)
}

// ScheduledQueryTargetConfigurationPtrInput is an input type that accepts ScheduledQueryTargetConfigurationArgs, ScheduledQueryTargetConfigurationPtr and ScheduledQueryTargetConfigurationPtrOutput values.
// You can construct a concrete instance of `ScheduledQueryTargetConfigurationPtrInput` via:
//
//	        ScheduledQueryTargetConfigurationArgs{...}
//
//	or:
//
//	        nil
type ScheduledQueryTargetConfigurationPtrInput interface {
	pulumi.Input

	ToScheduledQueryTargetConfigurationPtrOutput() ScheduledQueryTargetConfigurationPtrOutput
	ToScheduledQueryTargetConfigurationPtrOutputWithContext(context.Context) ScheduledQueryTargetConfigurationPtrOutput
}

type scheduledQueryTargetConfigurationPtrType ScheduledQueryTargetConfigurationArgs

func ScheduledQueryTargetConfigurationPtr(v *ScheduledQueryTargetConfigurationArgs) ScheduledQueryTargetConfigurationPtrInput {
	return (*scheduledQueryTargetConfigurationPtrType)(v)
}

func (*scheduledQueryTargetConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledQueryTargetConfiguration)(nil)).Elem()
}

func (i *scheduledQueryTargetConfigurationPtrType) ToScheduledQueryTargetConfigurationPtrOutput() ScheduledQueryTargetConfigurationPtrOutput {
	return i.ToScheduledQueryTargetConfigurationPtrOutputWithContext(context.Background())
}

func (i *scheduledQueryTargetConfigurationPtrType) ToScheduledQueryTargetConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryTargetConfigurationPtrOutput)
}

type ScheduledQueryTargetConfigurationOutput struct{ *pulumi.OutputState }

func (ScheduledQueryTargetConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryTargetConfiguration)(nil)).Elem()
}

func (o ScheduledQueryTargetConfigurationOutput) ToScheduledQueryTargetConfigurationOutput() ScheduledQueryTargetConfigurationOutput {
	return o
}

func (o ScheduledQueryTargetConfigurationOutput) ToScheduledQueryTargetConfigurationOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationOutput {
	return o
}

func (o ScheduledQueryTargetConfigurationOutput) ToScheduledQueryTargetConfigurationPtrOutput() ScheduledQueryTargetConfigurationPtrOutput {
	return o.ToScheduledQueryTargetConfigurationPtrOutputWithContext(context.Background())
}

func (o ScheduledQueryTargetConfigurationOutput) ToScheduledQueryTargetConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledQueryTargetConfiguration) *ScheduledQueryTargetConfiguration {
		return &v
	}).(ScheduledQueryTargetConfigurationPtrOutput)
}

// Configuration block for information needed to write data into the Timestream database and table. See below.
func (o ScheduledQueryTargetConfigurationOutput) TimestreamConfiguration() ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput {
	return o.ApplyT(func(v ScheduledQueryTargetConfiguration) *ScheduledQueryTargetConfigurationTimestreamConfiguration {
		return v.TimestreamConfiguration
	}).(ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput)
}

type ScheduledQueryTargetConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ScheduledQueryTargetConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledQueryTargetConfiguration)(nil)).Elem()
}

func (o ScheduledQueryTargetConfigurationPtrOutput) ToScheduledQueryTargetConfigurationPtrOutput() ScheduledQueryTargetConfigurationPtrOutput {
	return o
}

func (o ScheduledQueryTargetConfigurationPtrOutput) ToScheduledQueryTargetConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationPtrOutput {
	return o
}

func (o ScheduledQueryTargetConfigurationPtrOutput) Elem() ScheduledQueryTargetConfigurationOutput {
	return o.ApplyT(func(v *ScheduledQueryTargetConfiguration) ScheduledQueryTargetConfiguration {
		if v != nil {
			return *v
		}
		var ret ScheduledQueryTargetConfiguration
		return ret
	}).(ScheduledQueryTargetConfigurationOutput)
}

// Configuration block for information needed to write data into the Timestream database and table. See below.
func (o ScheduledQueryTargetConfigurationPtrOutput) TimestreamConfiguration() ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput {
	return o.ApplyT(func(v *ScheduledQueryTargetConfiguration) *ScheduledQueryTargetConfigurationTimestreamConfiguration {
		if v == nil {
			return nil
		}
		return v.TimestreamConfiguration
	}).(ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput)
}

type ScheduledQueryTargetConfigurationTimestreamConfiguration struct {
	// Name of Timestream database to which the query result will be written.
	DatabaseName string `pulumi:"databaseName"`
	// Configuration block for mapping of column(s) from the query result to the dimension in the destination table. See below.
	DimensionMappings []ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMapping `pulumi:"dimensionMappings"`
	// Name of the measure column.
	MeasureNameColumn *string `pulumi:"measureNameColumn"`
	// Configuration block for how to map measures to multi-measure records. See below.
	MixedMeasureMappings []ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMapping `pulumi:"mixedMeasureMappings"`
	// Configuration block for multi-measure mappings. Only one of `mixedMeasureMappings` or `multiMeasureMappings` can be provided. `multiMeasureMappings` can be used to ingest data as multi measures in the derived table. See below.
	MultiMeasureMappings *ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappings `pulumi:"multiMeasureMappings"`
	// Name of Timestream table that the query result will be written to. The table should be within the same database that is provided in Timestream configuration.
	TableName string `pulumi:"tableName"`
	// Column from query result that should be used as the time column in destination table. Column type for this should be TIMESTAMP.
	TimeColumn string `pulumi:"timeColumn"`
}

// ScheduledQueryTargetConfigurationTimestreamConfigurationInput is an input type that accepts ScheduledQueryTargetConfigurationTimestreamConfigurationArgs and ScheduledQueryTargetConfigurationTimestreamConfigurationOutput values.
// You can construct a concrete instance of `ScheduledQueryTargetConfigurationTimestreamConfigurationInput` via:
//
//	ScheduledQueryTargetConfigurationTimestreamConfigurationArgs{...}
type ScheduledQueryTargetConfigurationTimestreamConfigurationInput interface {
	pulumi.Input

	ToScheduledQueryTargetConfigurationTimestreamConfigurationOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationOutput
	ToScheduledQueryTargetConfigurationTimestreamConfigurationOutputWithContext(context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationOutput
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationArgs struct {
	// Name of Timestream database to which the query result will be written.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Configuration block for mapping of column(s) from the query result to the dimension in the destination table. See below.
	DimensionMappings ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayInput `pulumi:"dimensionMappings"`
	// Name of the measure column.
	MeasureNameColumn pulumi.StringPtrInput `pulumi:"measureNameColumn"`
	// Configuration block for how to map measures to multi-measure records. See below.
	MixedMeasureMappings ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayInput `pulumi:"mixedMeasureMappings"`
	// Configuration block for multi-measure mappings. Only one of `mixedMeasureMappings` or `multiMeasureMappings` can be provided. `multiMeasureMappings` can be used to ingest data as multi measures in the derived table. See below.
	MultiMeasureMappings ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrInput `pulumi:"multiMeasureMappings"`
	// Name of Timestream table that the query result will be written to. The table should be within the same database that is provided in Timestream configuration.
	TableName pulumi.StringInput `pulumi:"tableName"`
	// Column from query result that should be used as the time column in destination table. Column type for this should be TIMESTAMP.
	TimeColumn pulumi.StringInput `pulumi:"timeColumn"`
}

func (ScheduledQueryTargetConfigurationTimestreamConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryTargetConfigurationTimestreamConfiguration)(nil)).Elem()
}

func (i ScheduledQueryTargetConfigurationTimestreamConfigurationArgs) ToScheduledQueryTargetConfigurationTimestreamConfigurationOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationOutput {
	return i.ToScheduledQueryTargetConfigurationTimestreamConfigurationOutputWithContext(context.Background())
}

func (i ScheduledQueryTargetConfigurationTimestreamConfigurationArgs) ToScheduledQueryTargetConfigurationTimestreamConfigurationOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryTargetConfigurationTimestreamConfigurationOutput)
}

func (i ScheduledQueryTargetConfigurationTimestreamConfigurationArgs) ToScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput {
	return i.ToScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutputWithContext(context.Background())
}

func (i ScheduledQueryTargetConfigurationTimestreamConfigurationArgs) ToScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryTargetConfigurationTimestreamConfigurationOutput).ToScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutputWithContext(ctx)
}

// ScheduledQueryTargetConfigurationTimestreamConfigurationPtrInput is an input type that accepts ScheduledQueryTargetConfigurationTimestreamConfigurationArgs, ScheduledQueryTargetConfigurationTimestreamConfigurationPtr and ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput values.
// You can construct a concrete instance of `ScheduledQueryTargetConfigurationTimestreamConfigurationPtrInput` via:
//
//	        ScheduledQueryTargetConfigurationTimestreamConfigurationArgs{...}
//
//	or:
//
//	        nil
type ScheduledQueryTargetConfigurationTimestreamConfigurationPtrInput interface {
	pulumi.Input

	ToScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput
	ToScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutputWithContext(context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput
}

type scheduledQueryTargetConfigurationTimestreamConfigurationPtrType ScheduledQueryTargetConfigurationTimestreamConfigurationArgs

func ScheduledQueryTargetConfigurationTimestreamConfigurationPtr(v *ScheduledQueryTargetConfigurationTimestreamConfigurationArgs) ScheduledQueryTargetConfigurationTimestreamConfigurationPtrInput {
	return (*scheduledQueryTargetConfigurationTimestreamConfigurationPtrType)(v)
}

func (*scheduledQueryTargetConfigurationTimestreamConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledQueryTargetConfigurationTimestreamConfiguration)(nil)).Elem()
}

func (i *scheduledQueryTargetConfigurationTimestreamConfigurationPtrType) ToScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput {
	return i.ToScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutputWithContext(context.Background())
}

func (i *scheduledQueryTargetConfigurationTimestreamConfigurationPtrType) ToScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput)
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationOutput struct{ *pulumi.OutputState }

func (ScheduledQueryTargetConfigurationTimestreamConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryTargetConfigurationTimestreamConfiguration)(nil)).Elem()
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationOutput {
	return o
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationOutput {
	return o
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput {
	return o.ToScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutputWithContext(context.Background())
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledQueryTargetConfigurationTimestreamConfiguration) *ScheduledQueryTargetConfigurationTimestreamConfiguration {
		return &v
	}).(ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput)
}

// Name of Timestream database to which the query result will be written.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledQueryTargetConfigurationTimestreamConfiguration) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Configuration block for mapping of column(s) from the query result to the dimension in the destination table. See below.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationOutput) DimensionMappings() ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayOutput {
	return o.ApplyT(func(v ScheduledQueryTargetConfigurationTimestreamConfiguration) []ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMapping {
		return v.DimensionMappings
	}).(ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayOutput)
}

// Name of the measure column.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationOutput) MeasureNameColumn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryTargetConfigurationTimestreamConfiguration) *string { return v.MeasureNameColumn }).(pulumi.StringPtrOutput)
}

// Configuration block for how to map measures to multi-measure records. See below.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationOutput) MixedMeasureMappings() ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayOutput {
	return o.ApplyT(func(v ScheduledQueryTargetConfigurationTimestreamConfiguration) []ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMapping {
		return v.MixedMeasureMappings
	}).(ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayOutput)
}

// Configuration block for multi-measure mappings. Only one of `mixedMeasureMappings` or `multiMeasureMappings` can be provided. `multiMeasureMappings` can be used to ingest data as multi measures in the derived table. See below.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationOutput) MultiMeasureMappings() ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput {
	return o.ApplyT(func(v ScheduledQueryTargetConfigurationTimestreamConfiguration) *ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappings {
		return v.MultiMeasureMappings
	}).(ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput)
}

// Name of Timestream table that the query result will be written to. The table should be within the same database that is provided in Timestream configuration.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationOutput) TableName() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledQueryTargetConfigurationTimestreamConfiguration) string { return v.TableName }).(pulumi.StringOutput)
}

// Column from query result that should be used as the time column in destination table. Column type for this should be TIMESTAMP.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationOutput) TimeColumn() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledQueryTargetConfigurationTimestreamConfiguration) string { return v.TimeColumn }).(pulumi.StringOutput)
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledQueryTargetConfigurationTimestreamConfiguration)(nil)).Elem()
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput {
	return o
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput {
	return o
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput) Elem() ScheduledQueryTargetConfigurationTimestreamConfigurationOutput {
	return o.ApplyT(func(v *ScheduledQueryTargetConfigurationTimestreamConfiguration) ScheduledQueryTargetConfigurationTimestreamConfiguration {
		if v != nil {
			return *v
		}
		var ret ScheduledQueryTargetConfigurationTimestreamConfiguration
		return ret
	}).(ScheduledQueryTargetConfigurationTimestreamConfigurationOutput)
}

// Name of Timestream database to which the query result will be written.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput) DatabaseName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledQueryTargetConfigurationTimestreamConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.DatabaseName
	}).(pulumi.StringPtrOutput)
}

// Configuration block for mapping of column(s) from the query result to the dimension in the destination table. See below.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput) DimensionMappings() ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayOutput {
	return o.ApplyT(func(v *ScheduledQueryTargetConfigurationTimestreamConfiguration) []ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMapping {
		if v == nil {
			return nil
		}
		return v.DimensionMappings
	}).(ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayOutput)
}

// Name of the measure column.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput) MeasureNameColumn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledQueryTargetConfigurationTimestreamConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.MeasureNameColumn
	}).(pulumi.StringPtrOutput)
}

// Configuration block for how to map measures to multi-measure records. See below.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput) MixedMeasureMappings() ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayOutput {
	return o.ApplyT(func(v *ScheduledQueryTargetConfigurationTimestreamConfiguration) []ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMapping {
		if v == nil {
			return nil
		}
		return v.MixedMeasureMappings
	}).(ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayOutput)
}

// Configuration block for multi-measure mappings. Only one of `mixedMeasureMappings` or `multiMeasureMappings` can be provided. `multiMeasureMappings` can be used to ingest data as multi measures in the derived table. See below.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput) MultiMeasureMappings() ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput {
	return o.ApplyT(func(v *ScheduledQueryTargetConfigurationTimestreamConfiguration) *ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappings {
		if v == nil {
			return nil
		}
		return v.MultiMeasureMappings
	}).(ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput)
}

// Name of Timestream table that the query result will be written to. The table should be within the same database that is provided in Timestream configuration.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledQueryTargetConfigurationTimestreamConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.TableName
	}).(pulumi.StringPtrOutput)
}

// Column from query result that should be used as the time column in destination table. Column type for this should be TIMESTAMP.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput) TimeColumn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledQueryTargetConfigurationTimestreamConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.TimeColumn
	}).(pulumi.StringPtrOutput)
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMapping struct {
	// Type for the dimension. Valid value: `VARCHAR`.
	DimensionValueType string `pulumi:"dimensionValueType"`
	// Column name from query result.
	Name string `pulumi:"name"`
}

// ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingInput is an input type that accepts ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArgs and ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingOutput values.
// You can construct a concrete instance of `ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingInput` via:
//
//	ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArgs{...}
type ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingInput interface {
	pulumi.Input

	ToScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingOutput
	ToScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingOutputWithContext(context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingOutput
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArgs struct {
	// Type for the dimension. Valid value: `VARCHAR`.
	DimensionValueType pulumi.StringInput `pulumi:"dimensionValueType"`
	// Column name from query result.
	Name pulumi.StringInput `pulumi:"name"`
}

func (ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMapping)(nil)).Elem()
}

func (i ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArgs) ToScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingOutput {
	return i.ToScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingOutputWithContext(context.Background())
}

func (i ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArgs) ToScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingOutput)
}

// ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayInput is an input type that accepts ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArray and ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayOutput values.
// You can construct a concrete instance of `ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayInput` via:
//
//	ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArray{ ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArgs{...} }
type ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayInput interface {
	pulumi.Input

	ToScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayOutput
	ToScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayOutputWithContext(context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayOutput
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArray []ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingInput

func (ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMapping)(nil)).Elem()
}

func (i ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArray) ToScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayOutput {
	return i.ToScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayOutputWithContext(context.Background())
}

func (i ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArray) ToScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayOutput)
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingOutput struct{ *pulumi.OutputState }

func (ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMapping)(nil)).Elem()
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingOutput {
	return o
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingOutput {
	return o
}

// Type for the dimension. Valid value: `VARCHAR`.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingOutput) DimensionValueType() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMapping) string {
		return v.DimensionValueType
	}).(pulumi.StringOutput)
}

// Column name from query result.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMapping) string { return v.Name }).(pulumi.StringOutput)
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayOutput struct{ *pulumi.OutputState }

func (ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMapping)(nil)).Elem()
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayOutput {
	return o
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayOutput {
	return o
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayOutput) Index(i pulumi.IntInput) ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMapping {
		return vs[0].([]ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMapping)[vs[1].(int)]
	}).(ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingOutput)
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMapping struct {
	// Refers to the value of measureName in a result row. This field is required if `measureNameColumn` is provided.
	MeasureName *string `pulumi:"measureName"`
	// Type of the value that is to be read from `sourceColumn`. Valid values are `BIGINT`, `BOOLEAN`, `DOUBLE`, `VARCHAR`, `MULTI`.
	MeasureValueType string `pulumi:"measureValueType"`
	// Configuration block for attribute mappings for `MULTI` value measures. Required when `measureValueType` is `MULTI`. See below.
	MultiMeasureAttributeMappings []ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMapping `pulumi:"multiMeasureAttributeMappings"`
	// Source column from which measure-value is to be read for result materialization.
	SourceColumn *string `pulumi:"sourceColumn"`
	// Target measure name to be used. If not provided, the target measure name by default is `measureName`, if provided, or `sourceColumn` otherwise.
	TargetMeasureName *string `pulumi:"targetMeasureName"`
}

// ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingInput is an input type that accepts ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArgs and ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutput values.
// You can construct a concrete instance of `ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingInput` via:
//
//	ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArgs{...}
type ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingInput interface {
	pulumi.Input

	ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutput
	ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutputWithContext(context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutput
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArgs struct {
	// Refers to the value of measureName in a result row. This field is required if `measureNameColumn` is provided.
	MeasureName pulumi.StringPtrInput `pulumi:"measureName"`
	// Type of the value that is to be read from `sourceColumn`. Valid values are `BIGINT`, `BOOLEAN`, `DOUBLE`, `VARCHAR`, `MULTI`.
	MeasureValueType pulumi.StringInput `pulumi:"measureValueType"`
	// Configuration block for attribute mappings for `MULTI` value measures. Required when `measureValueType` is `MULTI`. See below.
	MultiMeasureAttributeMappings ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayInput `pulumi:"multiMeasureAttributeMappings"`
	// Source column from which measure-value is to be read for result materialization.
	SourceColumn pulumi.StringPtrInput `pulumi:"sourceColumn"`
	// Target measure name to be used. If not provided, the target measure name by default is `measureName`, if provided, or `sourceColumn` otherwise.
	TargetMeasureName pulumi.StringPtrInput `pulumi:"targetMeasureName"`
}

func (ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMapping)(nil)).Elem()
}

func (i ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArgs) ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutput {
	return i.ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutputWithContext(context.Background())
}

func (i ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArgs) ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutput)
}

// ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayInput is an input type that accepts ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArray and ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayOutput values.
// You can construct a concrete instance of `ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayInput` via:
//
//	ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArray{ ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArgs{...} }
type ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayInput interface {
	pulumi.Input

	ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayOutput
	ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayOutputWithContext(context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayOutput
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArray []ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingInput

func (ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMapping)(nil)).Elem()
}

func (i ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArray) ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayOutput {
	return i.ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayOutputWithContext(context.Background())
}

func (i ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArray) ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayOutput)
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutput struct{ *pulumi.OutputState }

func (ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMapping)(nil)).Elem()
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutput {
	return o
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutput {
	return o
}

// Refers to the value of measureName in a result row. This field is required if `measureNameColumn` is provided.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutput) MeasureName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMapping) *string {
		return v.MeasureName
	}).(pulumi.StringPtrOutput)
}

// Type of the value that is to be read from `sourceColumn`. Valid values are `BIGINT`, `BOOLEAN`, `DOUBLE`, `VARCHAR`, `MULTI`.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutput) MeasureValueType() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMapping) string {
		return v.MeasureValueType
	}).(pulumi.StringOutput)
}

// Configuration block for attribute mappings for `MULTI` value measures. Required when `measureValueType` is `MULTI`. See below.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutput) MultiMeasureAttributeMappings() ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayOutput {
	return o.ApplyT(func(v ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMapping) []ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMapping {
		return v.MultiMeasureAttributeMappings
	}).(ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayOutput)
}

// Source column from which measure-value is to be read for result materialization.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutput) SourceColumn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMapping) *string {
		return v.SourceColumn
	}).(pulumi.StringPtrOutput)
}

// Target measure name to be used. If not provided, the target measure name by default is `measureName`, if provided, or `sourceColumn` otherwise.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutput) TargetMeasureName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMapping) *string {
		return v.TargetMeasureName
	}).(pulumi.StringPtrOutput)
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayOutput struct{ *pulumi.OutputState }

func (ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMapping)(nil)).Elem()
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayOutput {
	return o
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayOutput {
	return o
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayOutput) Index(i pulumi.IntInput) ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMapping {
		return vs[0].([]ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMapping)[vs[1].(int)]
	}).(ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutput)
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMapping struct {
	// Type of the attribute to be read from the source column. Valid values are `BIGINT`, `BOOLEAN`, `DOUBLE`, `VARCHAR`, `TIMESTAMP`.
	MeasureValueType string `pulumi:"measureValueType"`
	// Source column from where the attribute value is to be read.
	SourceColumn string `pulumi:"sourceColumn"`
	// Custom name to be used for attribute name in derived table. If not provided, `sourceColumn` is used.
	TargetMultiMeasureAttributeName *string `pulumi:"targetMultiMeasureAttributeName"`
}

// ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingInput is an input type that accepts ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArgs and ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingOutput values.
// You can construct a concrete instance of `ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingInput` via:
//
//	ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArgs{...}
type ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingInput interface {
	pulumi.Input

	ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingOutput
	ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingOutputWithContext(context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingOutput
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArgs struct {
	// Type of the attribute to be read from the source column. Valid values are `BIGINT`, `BOOLEAN`, `DOUBLE`, `VARCHAR`, `TIMESTAMP`.
	MeasureValueType pulumi.StringInput `pulumi:"measureValueType"`
	// Source column from where the attribute value is to be read.
	SourceColumn pulumi.StringInput `pulumi:"sourceColumn"`
	// Custom name to be used for attribute name in derived table. If not provided, `sourceColumn` is used.
	TargetMultiMeasureAttributeName pulumi.StringPtrInput `pulumi:"targetMultiMeasureAttributeName"`
}

func (ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMapping)(nil)).Elem()
}

func (i ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArgs) ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingOutput {
	return i.ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingOutputWithContext(context.Background())
}

func (i ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArgs) ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingOutput)
}

// ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayInput is an input type that accepts ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArray and ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayOutput values.
// You can construct a concrete instance of `ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayInput` via:
//
//	ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArray{ ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArgs{...} }
type ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayInput interface {
	pulumi.Input

	ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayOutput
	ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayOutputWithContext(context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayOutput
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArray []ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingInput

func (ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMapping)(nil)).Elem()
}

func (i ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArray) ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayOutput {
	return i.ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayOutputWithContext(context.Background())
}

func (i ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArray) ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayOutput)
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingOutput struct{ *pulumi.OutputState }

func (ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMapping)(nil)).Elem()
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingOutput {
	return o
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingOutput {
	return o
}

// Type of the attribute to be read from the source column. Valid values are `BIGINT`, `BOOLEAN`, `DOUBLE`, `VARCHAR`, `TIMESTAMP`.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingOutput) MeasureValueType() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMapping) string {
		return v.MeasureValueType
	}).(pulumi.StringOutput)
}

// Source column from where the attribute value is to be read.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingOutput) SourceColumn() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMapping) string {
		return v.SourceColumn
	}).(pulumi.StringOutput)
}

// Custom name to be used for attribute name in derived table. If not provided, `sourceColumn` is used.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingOutput) TargetMultiMeasureAttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMapping) *string {
		return v.TargetMultiMeasureAttributeName
	}).(pulumi.StringPtrOutput)
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayOutput struct{ *pulumi.OutputState }

func (ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMapping)(nil)).Elem()
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayOutput {
	return o
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayOutput {
	return o
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayOutput) Index(i pulumi.IntInput) ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMapping {
		return vs[0].([]ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMapping)[vs[1].(int)]
	}).(ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingOutput)
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappings struct {
	// Attribute mappings to be used for mapping query results to ingest data for multi-measure attributes. See above.
	MultiMeasureAttributeMappings []ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMapping `pulumi:"multiMeasureAttributeMappings"`
	// Name of the target multi-measure name in the derived table. This input is required when `measureNameColumn` is not provided. If `measureNameColumn` is provided, then the value from that column will be used as the multi-measure name.
	TargetMultiMeasureName *string `pulumi:"targetMultiMeasureName"`
}

// ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsInput is an input type that accepts ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs and ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutput values.
// You can construct a concrete instance of `ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsInput` via:
//
//	ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs{...}
type ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsInput interface {
	pulumi.Input

	ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutput
	ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutputWithContext(context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutput
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs struct {
	// Attribute mappings to be used for mapping query results to ingest data for multi-measure attributes. See above.
	MultiMeasureAttributeMappings ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayInput `pulumi:"multiMeasureAttributeMappings"`
	// Name of the target multi-measure name in the derived table. This input is required when `measureNameColumn` is not provided. If `measureNameColumn` is provided, then the value from that column will be used as the multi-measure name.
	TargetMultiMeasureName pulumi.StringPtrInput `pulumi:"targetMultiMeasureName"`
}

func (ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappings)(nil)).Elem()
}

func (i ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs) ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutput {
	return i.ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutputWithContext(context.Background())
}

func (i ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs) ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutput)
}

func (i ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs) ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput {
	return i.ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutputWithContext(context.Background())
}

func (i ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs) ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutput).ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutputWithContext(ctx)
}

// ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrInput is an input type that accepts ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs, ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtr and ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput values.
// You can construct a concrete instance of `ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrInput` via:
//
//	        ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs{...}
//
//	or:
//
//	        nil
type ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrInput interface {
	pulumi.Input

	ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput
	ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutputWithContext(context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput
}

type scheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrType ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs

func ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtr(v *ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs) ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrInput {
	return (*scheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrType)(v)
}

func (*scheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappings)(nil)).Elem()
}

func (i *scheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrType) ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput {
	return i.ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutputWithContext(context.Background())
}

func (i *scheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrType) ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput)
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutput struct{ *pulumi.OutputState }

func (ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappings)(nil)).Elem()
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutput {
	return o
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutput {
	return o
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput {
	return o.ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutputWithContext(context.Background())
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappings) *ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappings {
		return &v
	}).(ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput)
}

// Attribute mappings to be used for mapping query results to ingest data for multi-measure attributes. See above.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutput) MultiMeasureAttributeMappings() ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayOutput {
	return o.ApplyT(func(v ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappings) []ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMapping {
		return v.MultiMeasureAttributeMappings
	}).(ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayOutput)
}

// Name of the target multi-measure name in the derived table. This input is required when `measureNameColumn` is not provided. If `measureNameColumn` is provided, then the value from that column will be used as the multi-measure name.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutput) TargetMultiMeasureName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappings) *string {
		return v.TargetMultiMeasureName
	}).(pulumi.StringPtrOutput)
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput struct{ *pulumi.OutputState }

func (ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappings)(nil)).Elem()
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput {
	return o
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput {
	return o
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput) Elem() ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutput {
	return o.ApplyT(func(v *ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappings) ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappings {
		if v != nil {
			return *v
		}
		var ret ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappings
		return ret
	}).(ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutput)
}

// Attribute mappings to be used for mapping query results to ingest data for multi-measure attributes. See above.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput) MultiMeasureAttributeMappings() ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayOutput {
	return o.ApplyT(func(v *ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappings) []ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMapping {
		if v == nil {
			return nil
		}
		return v.MultiMeasureAttributeMappings
	}).(ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayOutput)
}

// Name of the target multi-measure name in the derived table. This input is required when `measureNameColumn` is not provided. If `measureNameColumn` is provided, then the value from that column will be used as the multi-measure name.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput) TargetMultiMeasureName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappings) *string {
		if v == nil {
			return nil
		}
		return v.TargetMultiMeasureName
	}).(pulumi.StringPtrOutput)
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMapping struct {
	// Type of the attribute to be read from the source column. Valid values are `BIGINT`, `BOOLEAN`, `DOUBLE`, `VARCHAR`, `TIMESTAMP`.
	MeasureValueType string `pulumi:"measureValueType"`
	// Source column from where the attribute value is to be read.
	SourceColumn string `pulumi:"sourceColumn"`
	// Custom name to be used for attribute name in derived table. If not provided, `sourceColumn` is used.
	TargetMultiMeasureAttributeName *string `pulumi:"targetMultiMeasureAttributeName"`
}

// ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingInput is an input type that accepts ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArgs and ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingOutput values.
// You can construct a concrete instance of `ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingInput` via:
//
//	ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArgs{...}
type ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingInput interface {
	pulumi.Input

	ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingOutput
	ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingOutputWithContext(context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingOutput
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArgs struct {
	// Type of the attribute to be read from the source column. Valid values are `BIGINT`, `BOOLEAN`, `DOUBLE`, `VARCHAR`, `TIMESTAMP`.
	MeasureValueType pulumi.StringInput `pulumi:"measureValueType"`
	// Source column from where the attribute value is to be read.
	SourceColumn pulumi.StringInput `pulumi:"sourceColumn"`
	// Custom name to be used for attribute name in derived table. If not provided, `sourceColumn` is used.
	TargetMultiMeasureAttributeName pulumi.StringPtrInput `pulumi:"targetMultiMeasureAttributeName"`
}

func (ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMapping)(nil)).Elem()
}

func (i ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArgs) ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingOutput {
	return i.ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingOutputWithContext(context.Background())
}

func (i ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArgs) ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingOutput)
}

// ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayInput is an input type that accepts ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArray and ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayOutput values.
// You can construct a concrete instance of `ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayInput` via:
//
//	ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArray{ ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArgs{...} }
type ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayInput interface {
	pulumi.Input

	ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayOutput
	ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayOutputWithContext(context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayOutput
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArray []ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingInput

func (ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMapping)(nil)).Elem()
}

func (i ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArray) ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayOutput {
	return i.ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayOutputWithContext(context.Background())
}

func (i ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArray) ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayOutput)
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingOutput struct{ *pulumi.OutputState }

func (ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMapping)(nil)).Elem()
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingOutput {
	return o
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingOutput {
	return o
}

// Type of the attribute to be read from the source column. Valid values are `BIGINT`, `BOOLEAN`, `DOUBLE`, `VARCHAR`, `TIMESTAMP`.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingOutput) MeasureValueType() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMapping) string {
		return v.MeasureValueType
	}).(pulumi.StringOutput)
}

// Source column from where the attribute value is to be read.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingOutput) SourceColumn() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMapping) string {
		return v.SourceColumn
	}).(pulumi.StringOutput)
}

// Custom name to be used for attribute name in derived table. If not provided, `sourceColumn` is used.
func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingOutput) TargetMultiMeasureAttributeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMapping) *string {
		return v.TargetMultiMeasureAttributeName
	}).(pulumi.StringPtrOutput)
}

type ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayOutput struct{ *pulumi.OutputState }

func (ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMapping)(nil)).Elem()
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayOutput() ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayOutput {
	return o
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayOutput) ToScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayOutputWithContext(ctx context.Context) ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayOutput {
	return o
}

func (o ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayOutput) Index(i pulumi.IntInput) ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMapping {
		return vs[0].([]ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMapping)[vs[1].(int)]
	}).(ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingOutput)
}

type ScheduledQueryTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update *string `pulumi:"update"`
}

// ScheduledQueryTimeoutsInput is an input type that accepts ScheduledQueryTimeoutsArgs and ScheduledQueryTimeoutsOutput values.
// You can construct a concrete instance of `ScheduledQueryTimeoutsInput` via:
//
//	ScheduledQueryTimeoutsArgs{...}
type ScheduledQueryTimeoutsInput interface {
	pulumi.Input

	ToScheduledQueryTimeoutsOutput() ScheduledQueryTimeoutsOutput
	ToScheduledQueryTimeoutsOutputWithContext(context.Context) ScheduledQueryTimeoutsOutput
}

type ScheduledQueryTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Update pulumi.StringPtrInput `pulumi:"update"`
}

func (ScheduledQueryTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryTimeouts)(nil)).Elem()
}

func (i ScheduledQueryTimeoutsArgs) ToScheduledQueryTimeoutsOutput() ScheduledQueryTimeoutsOutput {
	return i.ToScheduledQueryTimeoutsOutputWithContext(context.Background())
}

func (i ScheduledQueryTimeoutsArgs) ToScheduledQueryTimeoutsOutputWithContext(ctx context.Context) ScheduledQueryTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryTimeoutsOutput)
}

func (i ScheduledQueryTimeoutsArgs) ToScheduledQueryTimeoutsPtrOutput() ScheduledQueryTimeoutsPtrOutput {
	return i.ToScheduledQueryTimeoutsPtrOutputWithContext(context.Background())
}

func (i ScheduledQueryTimeoutsArgs) ToScheduledQueryTimeoutsPtrOutputWithContext(ctx context.Context) ScheduledQueryTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryTimeoutsOutput).ToScheduledQueryTimeoutsPtrOutputWithContext(ctx)
}

// ScheduledQueryTimeoutsPtrInput is an input type that accepts ScheduledQueryTimeoutsArgs, ScheduledQueryTimeoutsPtr and ScheduledQueryTimeoutsPtrOutput values.
// You can construct a concrete instance of `ScheduledQueryTimeoutsPtrInput` via:
//
//	        ScheduledQueryTimeoutsArgs{...}
//
//	or:
//
//	        nil
type ScheduledQueryTimeoutsPtrInput interface {
	pulumi.Input

	ToScheduledQueryTimeoutsPtrOutput() ScheduledQueryTimeoutsPtrOutput
	ToScheduledQueryTimeoutsPtrOutputWithContext(context.Context) ScheduledQueryTimeoutsPtrOutput
}

type scheduledQueryTimeoutsPtrType ScheduledQueryTimeoutsArgs

func ScheduledQueryTimeoutsPtr(v *ScheduledQueryTimeoutsArgs) ScheduledQueryTimeoutsPtrInput {
	return (*scheduledQueryTimeoutsPtrType)(v)
}

func (*scheduledQueryTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledQueryTimeouts)(nil)).Elem()
}

func (i *scheduledQueryTimeoutsPtrType) ToScheduledQueryTimeoutsPtrOutput() ScheduledQueryTimeoutsPtrOutput {
	return i.ToScheduledQueryTimeoutsPtrOutputWithContext(context.Background())
}

func (i *scheduledQueryTimeoutsPtrType) ToScheduledQueryTimeoutsPtrOutputWithContext(ctx context.Context) ScheduledQueryTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledQueryTimeoutsPtrOutput)
}

type ScheduledQueryTimeoutsOutput struct{ *pulumi.OutputState }

func (ScheduledQueryTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledQueryTimeouts)(nil)).Elem()
}

func (o ScheduledQueryTimeoutsOutput) ToScheduledQueryTimeoutsOutput() ScheduledQueryTimeoutsOutput {
	return o
}

func (o ScheduledQueryTimeoutsOutput) ToScheduledQueryTimeoutsOutputWithContext(ctx context.Context) ScheduledQueryTimeoutsOutput {
	return o
}

func (o ScheduledQueryTimeoutsOutput) ToScheduledQueryTimeoutsPtrOutput() ScheduledQueryTimeoutsPtrOutput {
	return o.ToScheduledQueryTimeoutsPtrOutputWithContext(context.Background())
}

func (o ScheduledQueryTimeoutsOutput) ToScheduledQueryTimeoutsPtrOutputWithContext(ctx context.Context) ScheduledQueryTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledQueryTimeouts) *ScheduledQueryTimeouts {
		return &v
	}).(ScheduledQueryTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ScheduledQueryTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o ScheduledQueryTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ScheduledQueryTimeoutsOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledQueryTimeouts) *string { return v.Update }).(pulumi.StringPtrOutput)
}

type ScheduledQueryTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (ScheduledQueryTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledQueryTimeouts)(nil)).Elem()
}

func (o ScheduledQueryTimeoutsPtrOutput) ToScheduledQueryTimeoutsPtrOutput() ScheduledQueryTimeoutsPtrOutput {
	return o
}

func (o ScheduledQueryTimeoutsPtrOutput) ToScheduledQueryTimeoutsPtrOutputWithContext(ctx context.Context) ScheduledQueryTimeoutsPtrOutput {
	return o
}

func (o ScheduledQueryTimeoutsPtrOutput) Elem() ScheduledQueryTimeoutsOutput {
	return o.ApplyT(func(v *ScheduledQueryTimeouts) ScheduledQueryTimeouts {
		if v != nil {
			return *v
		}
		var ret ScheduledQueryTimeouts
		return ret
	}).(ScheduledQueryTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ScheduledQueryTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledQueryTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o ScheduledQueryTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledQueryTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o ScheduledQueryTimeoutsPtrOutput) Update() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledQueryTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Update
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryErrorReportConfigurationInput)(nil)).Elem(), ScheduledQueryErrorReportConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryErrorReportConfigurationPtrInput)(nil)).Elem(), ScheduledQueryErrorReportConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryErrorReportConfigurationS3ConfigurationInput)(nil)).Elem(), ScheduledQueryErrorReportConfigurationS3ConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryErrorReportConfigurationS3ConfigurationPtrInput)(nil)).Elem(), ScheduledQueryErrorReportConfigurationS3ConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryLastRunSummaryInput)(nil)).Elem(), ScheduledQueryLastRunSummaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryLastRunSummaryArrayInput)(nil)).Elem(), ScheduledQueryLastRunSummaryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryLastRunSummaryErrorReportLocationInput)(nil)).Elem(), ScheduledQueryLastRunSummaryErrorReportLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryLastRunSummaryErrorReportLocationArrayInput)(nil)).Elem(), ScheduledQueryLastRunSummaryErrorReportLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationInput)(nil)).Elem(), ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayInput)(nil)).Elem(), ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryLastRunSummaryExecutionStatInput)(nil)).Elem(), ScheduledQueryLastRunSummaryExecutionStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryLastRunSummaryExecutionStatArrayInput)(nil)).Elem(), ScheduledQueryLastRunSummaryExecutionStatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryLastRunSummaryQueryInsightsResponseInput)(nil)).Elem(), ScheduledQueryLastRunSummaryQueryInsightsResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryLastRunSummaryQueryInsightsResponseArrayInput)(nil)).Elem(), ScheduledQueryLastRunSummaryQueryInsightsResponseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageInput)(nil)).Elem(), ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayInput)(nil)).Elem(), ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisInput)(nil)).Elem(), ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayInput)(nil)).Elem(), ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeInput)(nil)).Elem(), ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayInput)(nil)).Elem(), ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisInput)(nil)).Elem(), ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayInput)(nil)).Elem(), ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryNotificationConfigurationInput)(nil)).Elem(), ScheduledQueryNotificationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryNotificationConfigurationPtrInput)(nil)).Elem(), ScheduledQueryNotificationConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryNotificationConfigurationSnsConfigurationInput)(nil)).Elem(), ScheduledQueryNotificationConfigurationSnsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryNotificationConfigurationSnsConfigurationPtrInput)(nil)).Elem(), ScheduledQueryNotificationConfigurationSnsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryRecentlyFailedRunInput)(nil)).Elem(), ScheduledQueryRecentlyFailedRunArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryRecentlyFailedRunArrayInput)(nil)).Elem(), ScheduledQueryRecentlyFailedRunArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryRecentlyFailedRunErrorReportLocationInput)(nil)).Elem(), ScheduledQueryRecentlyFailedRunErrorReportLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryRecentlyFailedRunErrorReportLocationArrayInput)(nil)).Elem(), ScheduledQueryRecentlyFailedRunErrorReportLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationInput)(nil)).Elem(), ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayInput)(nil)).Elem(), ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryRecentlyFailedRunExecutionStatInput)(nil)).Elem(), ScheduledQueryRecentlyFailedRunExecutionStatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryRecentlyFailedRunExecutionStatArrayInput)(nil)).Elem(), ScheduledQueryRecentlyFailedRunExecutionStatArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryRecentlyFailedRunQueryInsightsResponseInput)(nil)).Elem(), ScheduledQueryRecentlyFailedRunQueryInsightsResponseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayInput)(nil)).Elem(), ScheduledQueryRecentlyFailedRunQueryInsightsResponseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageInput)(nil)).Elem(), ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayInput)(nil)).Elem(), ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisInput)(nil)).Elem(), ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayInput)(nil)).Elem(), ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeInput)(nil)).Elem(), ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayInput)(nil)).Elem(), ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisInput)(nil)).Elem(), ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayInput)(nil)).Elem(), ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryScheduleConfigurationInput)(nil)).Elem(), ScheduledQueryScheduleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryScheduleConfigurationPtrInput)(nil)).Elem(), ScheduledQueryScheduleConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryTargetConfigurationInput)(nil)).Elem(), ScheduledQueryTargetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryTargetConfigurationPtrInput)(nil)).Elem(), ScheduledQueryTargetConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryTargetConfigurationTimestreamConfigurationInput)(nil)).Elem(), ScheduledQueryTargetConfigurationTimestreamConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryTargetConfigurationTimestreamConfigurationPtrInput)(nil)).Elem(), ScheduledQueryTargetConfigurationTimestreamConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingInput)(nil)).Elem(), ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayInput)(nil)).Elem(), ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingInput)(nil)).Elem(), ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayInput)(nil)).Elem(), ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingInput)(nil)).Elem(), ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayInput)(nil)).Elem(), ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsInput)(nil)).Elem(), ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrInput)(nil)).Elem(), ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingInput)(nil)).Elem(), ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayInput)(nil)).Elem(), ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryTimeoutsInput)(nil)).Elem(), ScheduledQueryTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledQueryTimeoutsPtrInput)(nil)).Elem(), ScheduledQueryTimeoutsArgs{})
	pulumi.RegisterOutputType(ScheduledQueryErrorReportConfigurationOutput{})
	pulumi.RegisterOutputType(ScheduledQueryErrorReportConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ScheduledQueryErrorReportConfigurationS3ConfigurationOutput{})
	pulumi.RegisterOutputType(ScheduledQueryErrorReportConfigurationS3ConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ScheduledQueryLastRunSummaryOutput{})
	pulumi.RegisterOutputType(ScheduledQueryLastRunSummaryArrayOutput{})
	pulumi.RegisterOutputType(ScheduledQueryLastRunSummaryErrorReportLocationOutput{})
	pulumi.RegisterOutputType(ScheduledQueryLastRunSummaryErrorReportLocationArrayOutput{})
	pulumi.RegisterOutputType(ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationOutput{})
	pulumi.RegisterOutputType(ScheduledQueryLastRunSummaryErrorReportLocationS3ReportLocationArrayOutput{})
	pulumi.RegisterOutputType(ScheduledQueryLastRunSummaryExecutionStatOutput{})
	pulumi.RegisterOutputType(ScheduledQueryLastRunSummaryExecutionStatArrayOutput{})
	pulumi.RegisterOutputType(ScheduledQueryLastRunSummaryQueryInsightsResponseOutput{})
	pulumi.RegisterOutputType(ScheduledQueryLastRunSummaryQueryInsightsResponseArrayOutput{})
	pulumi.RegisterOutputType(ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageOutput{})
	pulumi.RegisterOutputType(ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageArrayOutput{})
	pulumi.RegisterOutputType(ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisOutput{})
	pulumi.RegisterOutputType(ScheduledQueryLastRunSummaryQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput{})
	pulumi.RegisterOutputType(ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeOutput{})
	pulumi.RegisterOutputType(ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeArrayOutput{})
	pulumi.RegisterOutputType(ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisOutput{})
	pulumi.RegisterOutputType(ScheduledQueryLastRunSummaryQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput{})
	pulumi.RegisterOutputType(ScheduledQueryNotificationConfigurationOutput{})
	pulumi.RegisterOutputType(ScheduledQueryNotificationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ScheduledQueryNotificationConfigurationSnsConfigurationOutput{})
	pulumi.RegisterOutputType(ScheduledQueryNotificationConfigurationSnsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ScheduledQueryRecentlyFailedRunOutput{})
	pulumi.RegisterOutputType(ScheduledQueryRecentlyFailedRunArrayOutput{})
	pulumi.RegisterOutputType(ScheduledQueryRecentlyFailedRunErrorReportLocationOutput{})
	pulumi.RegisterOutputType(ScheduledQueryRecentlyFailedRunErrorReportLocationArrayOutput{})
	pulumi.RegisterOutputType(ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationOutput{})
	pulumi.RegisterOutputType(ScheduledQueryRecentlyFailedRunErrorReportLocationS3ReportLocationArrayOutput{})
	pulumi.RegisterOutputType(ScheduledQueryRecentlyFailedRunExecutionStatOutput{})
	pulumi.RegisterOutputType(ScheduledQueryRecentlyFailedRunExecutionStatArrayOutput{})
	pulumi.RegisterOutputType(ScheduledQueryRecentlyFailedRunQueryInsightsResponseOutput{})
	pulumi.RegisterOutputType(ScheduledQueryRecentlyFailedRunQueryInsightsResponseArrayOutput{})
	pulumi.RegisterOutputType(ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageOutput{})
	pulumi.RegisterOutputType(ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageArrayOutput{})
	pulumi.RegisterOutputType(ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisOutput{})
	pulumi.RegisterOutputType(ScheduledQueryRecentlyFailedRunQueryInsightsResponseQuerySpatialCoverageMaxisArrayOutput{})
	pulumi.RegisterOutputType(ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeOutput{})
	pulumi.RegisterOutputType(ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeArrayOutput{})
	pulumi.RegisterOutputType(ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisOutput{})
	pulumi.RegisterOutputType(ScheduledQueryRecentlyFailedRunQueryInsightsResponseQueryTemporalRangeMaxisArrayOutput{})
	pulumi.RegisterOutputType(ScheduledQueryScheduleConfigurationOutput{})
	pulumi.RegisterOutputType(ScheduledQueryScheduleConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ScheduledQueryTargetConfigurationOutput{})
	pulumi.RegisterOutputType(ScheduledQueryTargetConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ScheduledQueryTargetConfigurationTimestreamConfigurationOutput{})
	pulumi.RegisterOutputType(ScheduledQueryTargetConfigurationTimestreamConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingOutput{})
	pulumi.RegisterOutputType(ScheduledQueryTargetConfigurationTimestreamConfigurationDimensionMappingArrayOutput{})
	pulumi.RegisterOutputType(ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingOutput{})
	pulumi.RegisterOutputType(ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingArrayOutput{})
	pulumi.RegisterOutputType(ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingOutput{})
	pulumi.RegisterOutputType(ScheduledQueryTargetConfigurationTimestreamConfigurationMixedMeasureMappingMultiMeasureAttributeMappingArrayOutput{})
	pulumi.RegisterOutputType(ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsOutput{})
	pulumi.RegisterOutputType(ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsPtrOutput{})
	pulumi.RegisterOutputType(ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingOutput{})
	pulumi.RegisterOutputType(ScheduledQueryTargetConfigurationTimestreamConfigurationMultiMeasureMappingsMultiMeasureAttributeMappingArrayOutput{})
	pulumi.RegisterOutputType(ScheduledQueryTimeoutsOutput{})
	pulumi.RegisterOutputType(ScheduledQueryTimeoutsPtrOutput{})
}
