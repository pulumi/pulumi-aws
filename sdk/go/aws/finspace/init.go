// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package finspace

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "aws:finspace/kxCluster:KxCluster":
		r = &KxCluster{}
	case "aws:finspace/kxDatabase:KxDatabase":
		r = &KxDatabase{}
	case "aws:finspace/kxDataview:KxDataview":
		r = &KxDataview{}
	case "aws:finspace/kxEnvironment:KxEnvironment":
		r = &KxEnvironment{}
	case "aws:finspace/kxScalingGroup:KxScalingGroup":
		r = &KxScalingGroup{}
	case "aws:finspace/kxUser:KxUser":
		r = &KxUser{}
	case "aws:finspace/kxVolume:KxVolume":
		r = &KxVolume{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"aws",
		"finspace/kxCluster",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"finspace/kxDatabase",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"finspace/kxDataview",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"finspace/kxEnvironment",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"finspace/kxScalingGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"finspace/kxUser",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"aws",
		"finspace/kxVolume",
		&module{version},
	)
}
