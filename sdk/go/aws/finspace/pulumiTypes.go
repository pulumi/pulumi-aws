// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package finspace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type KxClusterAutoScalingConfiguration struct {
	// Metric your cluster will track in order to scale in and out. For example, CPU_UTILIZATION_PERCENTAGE is the average CPU usage across all nodes in a cluster.
	AutoScalingMetric string `pulumi:"autoScalingMetric"`
	// Highest number of nodes to scale. Cannot be greater than 5
	MaxNodeCount int `pulumi:"maxNodeCount"`
	// Desired value of chosen `autoScalingMetric`. When metric drops below this value, cluster will scale in. When metric goes above this value, cluster will scale out. Can be set between 0 and 100 percent.
	MetricTarget float64 `pulumi:"metricTarget"`
	// Lowest number of nodes to scale. Must be at least 1 and less than the `maxNodeCount`. If nodes in cluster belong to multiple availability zones, then `minNodeCount` must be at least 3.
	MinNodeCount int `pulumi:"minNodeCount"`
	// Duration in seconds that FinSpace will wait after a scale in event before initiating another scaling event.
	ScaleInCooldownSeconds float64 `pulumi:"scaleInCooldownSeconds"`
	// Duration in seconds that FinSpace will wait after a scale out event before initiating another scaling event.
	ScaleOutCooldownSeconds float64 `pulumi:"scaleOutCooldownSeconds"`
}

// KxClusterAutoScalingConfigurationInput is an input type that accepts KxClusterAutoScalingConfigurationArgs and KxClusterAutoScalingConfigurationOutput values.
// You can construct a concrete instance of `KxClusterAutoScalingConfigurationInput` via:
//
//	KxClusterAutoScalingConfigurationArgs{...}
type KxClusterAutoScalingConfigurationInput interface {
	pulumi.Input

	ToKxClusterAutoScalingConfigurationOutput() KxClusterAutoScalingConfigurationOutput
	ToKxClusterAutoScalingConfigurationOutputWithContext(context.Context) KxClusterAutoScalingConfigurationOutput
}

type KxClusterAutoScalingConfigurationArgs struct {
	// Metric your cluster will track in order to scale in and out. For example, CPU_UTILIZATION_PERCENTAGE is the average CPU usage across all nodes in a cluster.
	AutoScalingMetric pulumi.StringInput `pulumi:"autoScalingMetric"`
	// Highest number of nodes to scale. Cannot be greater than 5
	MaxNodeCount pulumi.IntInput `pulumi:"maxNodeCount"`
	// Desired value of chosen `autoScalingMetric`. When metric drops below this value, cluster will scale in. When metric goes above this value, cluster will scale out. Can be set between 0 and 100 percent.
	MetricTarget pulumi.Float64Input `pulumi:"metricTarget"`
	// Lowest number of nodes to scale. Must be at least 1 and less than the `maxNodeCount`. If nodes in cluster belong to multiple availability zones, then `minNodeCount` must be at least 3.
	MinNodeCount pulumi.IntInput `pulumi:"minNodeCount"`
	// Duration in seconds that FinSpace will wait after a scale in event before initiating another scaling event.
	ScaleInCooldownSeconds pulumi.Float64Input `pulumi:"scaleInCooldownSeconds"`
	// Duration in seconds that FinSpace will wait after a scale out event before initiating another scaling event.
	ScaleOutCooldownSeconds pulumi.Float64Input `pulumi:"scaleOutCooldownSeconds"`
}

func (KxClusterAutoScalingConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KxClusterAutoScalingConfiguration)(nil)).Elem()
}

func (i KxClusterAutoScalingConfigurationArgs) ToKxClusterAutoScalingConfigurationOutput() KxClusterAutoScalingConfigurationOutput {
	return i.ToKxClusterAutoScalingConfigurationOutputWithContext(context.Background())
}

func (i KxClusterAutoScalingConfigurationArgs) ToKxClusterAutoScalingConfigurationOutputWithContext(ctx context.Context) KxClusterAutoScalingConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxClusterAutoScalingConfigurationOutput)
}

func (i KxClusterAutoScalingConfigurationArgs) ToKxClusterAutoScalingConfigurationPtrOutput() KxClusterAutoScalingConfigurationPtrOutput {
	return i.ToKxClusterAutoScalingConfigurationPtrOutputWithContext(context.Background())
}

func (i KxClusterAutoScalingConfigurationArgs) ToKxClusterAutoScalingConfigurationPtrOutputWithContext(ctx context.Context) KxClusterAutoScalingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxClusterAutoScalingConfigurationOutput).ToKxClusterAutoScalingConfigurationPtrOutputWithContext(ctx)
}

// KxClusterAutoScalingConfigurationPtrInput is an input type that accepts KxClusterAutoScalingConfigurationArgs, KxClusterAutoScalingConfigurationPtr and KxClusterAutoScalingConfigurationPtrOutput values.
// You can construct a concrete instance of `KxClusterAutoScalingConfigurationPtrInput` via:
//
//	        KxClusterAutoScalingConfigurationArgs{...}
//
//	or:
//
//	        nil
type KxClusterAutoScalingConfigurationPtrInput interface {
	pulumi.Input

	ToKxClusterAutoScalingConfigurationPtrOutput() KxClusterAutoScalingConfigurationPtrOutput
	ToKxClusterAutoScalingConfigurationPtrOutputWithContext(context.Context) KxClusterAutoScalingConfigurationPtrOutput
}

type kxClusterAutoScalingConfigurationPtrType KxClusterAutoScalingConfigurationArgs

func KxClusterAutoScalingConfigurationPtr(v *KxClusterAutoScalingConfigurationArgs) KxClusterAutoScalingConfigurationPtrInput {
	return (*kxClusterAutoScalingConfigurationPtrType)(v)
}

func (*kxClusterAutoScalingConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KxClusterAutoScalingConfiguration)(nil)).Elem()
}

func (i *kxClusterAutoScalingConfigurationPtrType) ToKxClusterAutoScalingConfigurationPtrOutput() KxClusterAutoScalingConfigurationPtrOutput {
	return i.ToKxClusterAutoScalingConfigurationPtrOutputWithContext(context.Background())
}

func (i *kxClusterAutoScalingConfigurationPtrType) ToKxClusterAutoScalingConfigurationPtrOutputWithContext(ctx context.Context) KxClusterAutoScalingConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxClusterAutoScalingConfigurationPtrOutput)
}

type KxClusterAutoScalingConfigurationOutput struct{ *pulumi.OutputState }

func (KxClusterAutoScalingConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KxClusterAutoScalingConfiguration)(nil)).Elem()
}

func (o KxClusterAutoScalingConfigurationOutput) ToKxClusterAutoScalingConfigurationOutput() KxClusterAutoScalingConfigurationOutput {
	return o
}

func (o KxClusterAutoScalingConfigurationOutput) ToKxClusterAutoScalingConfigurationOutputWithContext(ctx context.Context) KxClusterAutoScalingConfigurationOutput {
	return o
}

func (o KxClusterAutoScalingConfigurationOutput) ToKxClusterAutoScalingConfigurationPtrOutput() KxClusterAutoScalingConfigurationPtrOutput {
	return o.ToKxClusterAutoScalingConfigurationPtrOutputWithContext(context.Background())
}

func (o KxClusterAutoScalingConfigurationOutput) ToKxClusterAutoScalingConfigurationPtrOutputWithContext(ctx context.Context) KxClusterAutoScalingConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KxClusterAutoScalingConfiguration) *KxClusterAutoScalingConfiguration {
		return &v
	}).(KxClusterAutoScalingConfigurationPtrOutput)
}

// Metric your cluster will track in order to scale in and out. For example, CPU_UTILIZATION_PERCENTAGE is the average CPU usage across all nodes in a cluster.
func (o KxClusterAutoScalingConfigurationOutput) AutoScalingMetric() pulumi.StringOutput {
	return o.ApplyT(func(v KxClusterAutoScalingConfiguration) string { return v.AutoScalingMetric }).(pulumi.StringOutput)
}

// Highest number of nodes to scale. Cannot be greater than 5
func (o KxClusterAutoScalingConfigurationOutput) MaxNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v KxClusterAutoScalingConfiguration) int { return v.MaxNodeCount }).(pulumi.IntOutput)
}

// Desired value of chosen `autoScalingMetric`. When metric drops below this value, cluster will scale in. When metric goes above this value, cluster will scale out. Can be set between 0 and 100 percent.
func (o KxClusterAutoScalingConfigurationOutput) MetricTarget() pulumi.Float64Output {
	return o.ApplyT(func(v KxClusterAutoScalingConfiguration) float64 { return v.MetricTarget }).(pulumi.Float64Output)
}

// Lowest number of nodes to scale. Must be at least 1 and less than the `maxNodeCount`. If nodes in cluster belong to multiple availability zones, then `minNodeCount` must be at least 3.
func (o KxClusterAutoScalingConfigurationOutput) MinNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v KxClusterAutoScalingConfiguration) int { return v.MinNodeCount }).(pulumi.IntOutput)
}

// Duration in seconds that FinSpace will wait after a scale in event before initiating another scaling event.
func (o KxClusterAutoScalingConfigurationOutput) ScaleInCooldownSeconds() pulumi.Float64Output {
	return o.ApplyT(func(v KxClusterAutoScalingConfiguration) float64 { return v.ScaleInCooldownSeconds }).(pulumi.Float64Output)
}

// Duration in seconds that FinSpace will wait after a scale out event before initiating another scaling event.
func (o KxClusterAutoScalingConfigurationOutput) ScaleOutCooldownSeconds() pulumi.Float64Output {
	return o.ApplyT(func(v KxClusterAutoScalingConfiguration) float64 { return v.ScaleOutCooldownSeconds }).(pulumi.Float64Output)
}

type KxClusterAutoScalingConfigurationPtrOutput struct{ *pulumi.OutputState }

func (KxClusterAutoScalingConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KxClusterAutoScalingConfiguration)(nil)).Elem()
}

func (o KxClusterAutoScalingConfigurationPtrOutput) ToKxClusterAutoScalingConfigurationPtrOutput() KxClusterAutoScalingConfigurationPtrOutput {
	return o
}

func (o KxClusterAutoScalingConfigurationPtrOutput) ToKxClusterAutoScalingConfigurationPtrOutputWithContext(ctx context.Context) KxClusterAutoScalingConfigurationPtrOutput {
	return o
}

func (o KxClusterAutoScalingConfigurationPtrOutput) Elem() KxClusterAutoScalingConfigurationOutput {
	return o.ApplyT(func(v *KxClusterAutoScalingConfiguration) KxClusterAutoScalingConfiguration {
		if v != nil {
			return *v
		}
		var ret KxClusterAutoScalingConfiguration
		return ret
	}).(KxClusterAutoScalingConfigurationOutput)
}

// Metric your cluster will track in order to scale in and out. For example, CPU_UTILIZATION_PERCENTAGE is the average CPU usage across all nodes in a cluster.
func (o KxClusterAutoScalingConfigurationPtrOutput) AutoScalingMetric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KxClusterAutoScalingConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.AutoScalingMetric
	}).(pulumi.StringPtrOutput)
}

// Highest number of nodes to scale. Cannot be greater than 5
func (o KxClusterAutoScalingConfigurationPtrOutput) MaxNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KxClusterAutoScalingConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.MaxNodeCount
	}).(pulumi.IntPtrOutput)
}

// Desired value of chosen `autoScalingMetric`. When metric drops below this value, cluster will scale in. When metric goes above this value, cluster will scale out. Can be set between 0 and 100 percent.
func (o KxClusterAutoScalingConfigurationPtrOutput) MetricTarget() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *KxClusterAutoScalingConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return &v.MetricTarget
	}).(pulumi.Float64PtrOutput)
}

// Lowest number of nodes to scale. Must be at least 1 and less than the `maxNodeCount`. If nodes in cluster belong to multiple availability zones, then `minNodeCount` must be at least 3.
func (o KxClusterAutoScalingConfigurationPtrOutput) MinNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KxClusterAutoScalingConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.MinNodeCount
	}).(pulumi.IntPtrOutput)
}

// Duration in seconds that FinSpace will wait after a scale in event before initiating another scaling event.
func (o KxClusterAutoScalingConfigurationPtrOutput) ScaleInCooldownSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *KxClusterAutoScalingConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return &v.ScaleInCooldownSeconds
	}).(pulumi.Float64PtrOutput)
}

// Duration in seconds that FinSpace will wait after a scale out event before initiating another scaling event.
func (o KxClusterAutoScalingConfigurationPtrOutput) ScaleOutCooldownSeconds() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *KxClusterAutoScalingConfiguration) *float64 {
		if v == nil {
			return nil
		}
		return &v.ScaleOutCooldownSeconds
	}).(pulumi.Float64PtrOutput)
}

type KxClusterCacheStorageConfiguration struct {
	// Size of cache in Gigabytes.
	Size int `pulumi:"size"`
	// Type of KDB database. The following types are available:
	// * HDB - Historical Database. The data is only accessible with read-only permissions from one of the FinSpace managed KX databases mounted to the cluster.
	// * RDB - Realtime Database. This type of database captures all the data from a ticker plant and stores it in memory until the end of day, after which it writes all of its data to a disk and reloads the HDB. This cluster type requires local storage for temporary storage of data during the savedown process. If you specify this field in your request, you must provide the `savedownStorageConfiguration` parameter.
	// * GATEWAY - A gateway cluster allows you to access data across processes in kdb systems. It allows you to create your own routing logic using the initialization scripts and custom code. This type of cluster does not require a  writable local storage.
	Type string `pulumi:"type"`
}

// KxClusterCacheStorageConfigurationInput is an input type that accepts KxClusterCacheStorageConfigurationArgs and KxClusterCacheStorageConfigurationOutput values.
// You can construct a concrete instance of `KxClusterCacheStorageConfigurationInput` via:
//
//	KxClusterCacheStorageConfigurationArgs{...}
type KxClusterCacheStorageConfigurationInput interface {
	pulumi.Input

	ToKxClusterCacheStorageConfigurationOutput() KxClusterCacheStorageConfigurationOutput
	ToKxClusterCacheStorageConfigurationOutputWithContext(context.Context) KxClusterCacheStorageConfigurationOutput
}

type KxClusterCacheStorageConfigurationArgs struct {
	// Size of cache in Gigabytes.
	Size pulumi.IntInput `pulumi:"size"`
	// Type of KDB database. The following types are available:
	// * HDB - Historical Database. The data is only accessible with read-only permissions from one of the FinSpace managed KX databases mounted to the cluster.
	// * RDB - Realtime Database. This type of database captures all the data from a ticker plant and stores it in memory until the end of day, after which it writes all of its data to a disk and reloads the HDB. This cluster type requires local storage for temporary storage of data during the savedown process. If you specify this field in your request, you must provide the `savedownStorageConfiguration` parameter.
	// * GATEWAY - A gateway cluster allows you to access data across processes in kdb systems. It allows you to create your own routing logic using the initialization scripts and custom code. This type of cluster does not require a  writable local storage.
	Type pulumi.StringInput `pulumi:"type"`
}

func (KxClusterCacheStorageConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KxClusterCacheStorageConfiguration)(nil)).Elem()
}

func (i KxClusterCacheStorageConfigurationArgs) ToKxClusterCacheStorageConfigurationOutput() KxClusterCacheStorageConfigurationOutput {
	return i.ToKxClusterCacheStorageConfigurationOutputWithContext(context.Background())
}

func (i KxClusterCacheStorageConfigurationArgs) ToKxClusterCacheStorageConfigurationOutputWithContext(ctx context.Context) KxClusterCacheStorageConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxClusterCacheStorageConfigurationOutput)
}

// KxClusterCacheStorageConfigurationArrayInput is an input type that accepts KxClusterCacheStorageConfigurationArray and KxClusterCacheStorageConfigurationArrayOutput values.
// You can construct a concrete instance of `KxClusterCacheStorageConfigurationArrayInput` via:
//
//	KxClusterCacheStorageConfigurationArray{ KxClusterCacheStorageConfigurationArgs{...} }
type KxClusterCacheStorageConfigurationArrayInput interface {
	pulumi.Input

	ToKxClusterCacheStorageConfigurationArrayOutput() KxClusterCacheStorageConfigurationArrayOutput
	ToKxClusterCacheStorageConfigurationArrayOutputWithContext(context.Context) KxClusterCacheStorageConfigurationArrayOutput
}

type KxClusterCacheStorageConfigurationArray []KxClusterCacheStorageConfigurationInput

func (KxClusterCacheStorageConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KxClusterCacheStorageConfiguration)(nil)).Elem()
}

func (i KxClusterCacheStorageConfigurationArray) ToKxClusterCacheStorageConfigurationArrayOutput() KxClusterCacheStorageConfigurationArrayOutput {
	return i.ToKxClusterCacheStorageConfigurationArrayOutputWithContext(context.Background())
}

func (i KxClusterCacheStorageConfigurationArray) ToKxClusterCacheStorageConfigurationArrayOutputWithContext(ctx context.Context) KxClusterCacheStorageConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxClusterCacheStorageConfigurationArrayOutput)
}

type KxClusterCacheStorageConfigurationOutput struct{ *pulumi.OutputState }

func (KxClusterCacheStorageConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KxClusterCacheStorageConfiguration)(nil)).Elem()
}

func (o KxClusterCacheStorageConfigurationOutput) ToKxClusterCacheStorageConfigurationOutput() KxClusterCacheStorageConfigurationOutput {
	return o
}

func (o KxClusterCacheStorageConfigurationOutput) ToKxClusterCacheStorageConfigurationOutputWithContext(ctx context.Context) KxClusterCacheStorageConfigurationOutput {
	return o
}

// Size of cache in Gigabytes.
func (o KxClusterCacheStorageConfigurationOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v KxClusterCacheStorageConfiguration) int { return v.Size }).(pulumi.IntOutput)
}

// Type of KDB database. The following types are available:
// * HDB - Historical Database. The data is only accessible with read-only permissions from one of the FinSpace managed KX databases mounted to the cluster.
// * RDB - Realtime Database. This type of database captures all the data from a ticker plant and stores it in memory until the end of day, after which it writes all of its data to a disk and reloads the HDB. This cluster type requires local storage for temporary storage of data during the savedown process. If you specify this field in your request, you must provide the `savedownStorageConfiguration` parameter.
// * GATEWAY - A gateway cluster allows you to access data across processes in kdb systems. It allows you to create your own routing logic using the initialization scripts and custom code. This type of cluster does not require a  writable local storage.
func (o KxClusterCacheStorageConfigurationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KxClusterCacheStorageConfiguration) string { return v.Type }).(pulumi.StringOutput)
}

type KxClusterCacheStorageConfigurationArrayOutput struct{ *pulumi.OutputState }

func (KxClusterCacheStorageConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KxClusterCacheStorageConfiguration)(nil)).Elem()
}

func (o KxClusterCacheStorageConfigurationArrayOutput) ToKxClusterCacheStorageConfigurationArrayOutput() KxClusterCacheStorageConfigurationArrayOutput {
	return o
}

func (o KxClusterCacheStorageConfigurationArrayOutput) ToKxClusterCacheStorageConfigurationArrayOutputWithContext(ctx context.Context) KxClusterCacheStorageConfigurationArrayOutput {
	return o
}

func (o KxClusterCacheStorageConfigurationArrayOutput) Index(i pulumi.IntInput) KxClusterCacheStorageConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KxClusterCacheStorageConfiguration {
		return vs[0].([]KxClusterCacheStorageConfiguration)[vs[1].(int)]
	}).(KxClusterCacheStorageConfigurationOutput)
}

type KxClusterCapacityConfiguration struct {
	// Number of instances running in a cluster. Must be at least 1 and at most 5.
	NodeCount int `pulumi:"nodeCount"`
	// Determines the hardware of the host computer used for your cluster instance. Each node type offers different memory and storage capabilities. Choose a node type based on the requirements of the application or software that you plan to run on your instance.
	//
	// You can only specify one of the following values:
	// * kx.s.large – The node type with a configuration of 12 GiB memory and 2 vCPUs.
	// * kx.s.xlarge – The node type with a configuration of 27 GiB memory and 4 vCPUs.
	// * kx.s.2xlarge – The node type with a configuration of 54 GiB memory and 8 vCPUs.
	// * kx.s.4xlarge – The node type with a configuration of 108 GiB memory and 16 vCPUs.
	// * kx.s.8xlarge – The node type with a configuration of 216 GiB memory and 32 vCPUs.
	// * kx.s.16xlarge – The node type with a configuration of 432 GiB memory and 64 vCPUs.
	// * kx.s.32xlarge – The node type with a configuration of 864 GiB memory and 128 vCPUs.
	NodeType string `pulumi:"nodeType"`
}

// KxClusterCapacityConfigurationInput is an input type that accepts KxClusterCapacityConfigurationArgs and KxClusterCapacityConfigurationOutput values.
// You can construct a concrete instance of `KxClusterCapacityConfigurationInput` via:
//
//	KxClusterCapacityConfigurationArgs{...}
type KxClusterCapacityConfigurationInput interface {
	pulumi.Input

	ToKxClusterCapacityConfigurationOutput() KxClusterCapacityConfigurationOutput
	ToKxClusterCapacityConfigurationOutputWithContext(context.Context) KxClusterCapacityConfigurationOutput
}

type KxClusterCapacityConfigurationArgs struct {
	// Number of instances running in a cluster. Must be at least 1 and at most 5.
	NodeCount pulumi.IntInput `pulumi:"nodeCount"`
	// Determines the hardware of the host computer used for your cluster instance. Each node type offers different memory and storage capabilities. Choose a node type based on the requirements of the application or software that you plan to run on your instance.
	//
	// You can only specify one of the following values:
	// * kx.s.large – The node type with a configuration of 12 GiB memory and 2 vCPUs.
	// * kx.s.xlarge – The node type with a configuration of 27 GiB memory and 4 vCPUs.
	// * kx.s.2xlarge – The node type with a configuration of 54 GiB memory and 8 vCPUs.
	// * kx.s.4xlarge – The node type with a configuration of 108 GiB memory and 16 vCPUs.
	// * kx.s.8xlarge – The node type with a configuration of 216 GiB memory and 32 vCPUs.
	// * kx.s.16xlarge – The node type with a configuration of 432 GiB memory and 64 vCPUs.
	// * kx.s.32xlarge – The node type with a configuration of 864 GiB memory and 128 vCPUs.
	NodeType pulumi.StringInput `pulumi:"nodeType"`
}

func (KxClusterCapacityConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KxClusterCapacityConfiguration)(nil)).Elem()
}

func (i KxClusterCapacityConfigurationArgs) ToKxClusterCapacityConfigurationOutput() KxClusterCapacityConfigurationOutput {
	return i.ToKxClusterCapacityConfigurationOutputWithContext(context.Background())
}

func (i KxClusterCapacityConfigurationArgs) ToKxClusterCapacityConfigurationOutputWithContext(ctx context.Context) KxClusterCapacityConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxClusterCapacityConfigurationOutput)
}

func (i KxClusterCapacityConfigurationArgs) ToKxClusterCapacityConfigurationPtrOutput() KxClusterCapacityConfigurationPtrOutput {
	return i.ToKxClusterCapacityConfigurationPtrOutputWithContext(context.Background())
}

func (i KxClusterCapacityConfigurationArgs) ToKxClusterCapacityConfigurationPtrOutputWithContext(ctx context.Context) KxClusterCapacityConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxClusterCapacityConfigurationOutput).ToKxClusterCapacityConfigurationPtrOutputWithContext(ctx)
}

// KxClusterCapacityConfigurationPtrInput is an input type that accepts KxClusterCapacityConfigurationArgs, KxClusterCapacityConfigurationPtr and KxClusterCapacityConfigurationPtrOutput values.
// You can construct a concrete instance of `KxClusterCapacityConfigurationPtrInput` via:
//
//	        KxClusterCapacityConfigurationArgs{...}
//
//	or:
//
//	        nil
type KxClusterCapacityConfigurationPtrInput interface {
	pulumi.Input

	ToKxClusterCapacityConfigurationPtrOutput() KxClusterCapacityConfigurationPtrOutput
	ToKxClusterCapacityConfigurationPtrOutputWithContext(context.Context) KxClusterCapacityConfigurationPtrOutput
}

type kxClusterCapacityConfigurationPtrType KxClusterCapacityConfigurationArgs

func KxClusterCapacityConfigurationPtr(v *KxClusterCapacityConfigurationArgs) KxClusterCapacityConfigurationPtrInput {
	return (*kxClusterCapacityConfigurationPtrType)(v)
}

func (*kxClusterCapacityConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KxClusterCapacityConfiguration)(nil)).Elem()
}

func (i *kxClusterCapacityConfigurationPtrType) ToKxClusterCapacityConfigurationPtrOutput() KxClusterCapacityConfigurationPtrOutput {
	return i.ToKxClusterCapacityConfigurationPtrOutputWithContext(context.Background())
}

func (i *kxClusterCapacityConfigurationPtrType) ToKxClusterCapacityConfigurationPtrOutputWithContext(ctx context.Context) KxClusterCapacityConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxClusterCapacityConfigurationPtrOutput)
}

type KxClusterCapacityConfigurationOutput struct{ *pulumi.OutputState }

func (KxClusterCapacityConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KxClusterCapacityConfiguration)(nil)).Elem()
}

func (o KxClusterCapacityConfigurationOutput) ToKxClusterCapacityConfigurationOutput() KxClusterCapacityConfigurationOutput {
	return o
}

func (o KxClusterCapacityConfigurationOutput) ToKxClusterCapacityConfigurationOutputWithContext(ctx context.Context) KxClusterCapacityConfigurationOutput {
	return o
}

func (o KxClusterCapacityConfigurationOutput) ToKxClusterCapacityConfigurationPtrOutput() KxClusterCapacityConfigurationPtrOutput {
	return o.ToKxClusterCapacityConfigurationPtrOutputWithContext(context.Background())
}

func (o KxClusterCapacityConfigurationOutput) ToKxClusterCapacityConfigurationPtrOutputWithContext(ctx context.Context) KxClusterCapacityConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KxClusterCapacityConfiguration) *KxClusterCapacityConfiguration {
		return &v
	}).(KxClusterCapacityConfigurationPtrOutput)
}

// Number of instances running in a cluster. Must be at least 1 and at most 5.
func (o KxClusterCapacityConfigurationOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v KxClusterCapacityConfiguration) int { return v.NodeCount }).(pulumi.IntOutput)
}

// Determines the hardware of the host computer used for your cluster instance. Each node type offers different memory and storage capabilities. Choose a node type based on the requirements of the application or software that you plan to run on your instance.
//
// You can only specify one of the following values:
// * kx.s.large – The node type with a configuration of 12 GiB memory and 2 vCPUs.
// * kx.s.xlarge – The node type with a configuration of 27 GiB memory and 4 vCPUs.
// * kx.s.2xlarge – The node type with a configuration of 54 GiB memory and 8 vCPUs.
// * kx.s.4xlarge – The node type with a configuration of 108 GiB memory and 16 vCPUs.
// * kx.s.8xlarge – The node type with a configuration of 216 GiB memory and 32 vCPUs.
// * kx.s.16xlarge – The node type with a configuration of 432 GiB memory and 64 vCPUs.
// * kx.s.32xlarge – The node type with a configuration of 864 GiB memory and 128 vCPUs.
func (o KxClusterCapacityConfigurationOutput) NodeType() pulumi.StringOutput {
	return o.ApplyT(func(v KxClusterCapacityConfiguration) string { return v.NodeType }).(pulumi.StringOutput)
}

type KxClusterCapacityConfigurationPtrOutput struct{ *pulumi.OutputState }

func (KxClusterCapacityConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KxClusterCapacityConfiguration)(nil)).Elem()
}

func (o KxClusterCapacityConfigurationPtrOutput) ToKxClusterCapacityConfigurationPtrOutput() KxClusterCapacityConfigurationPtrOutput {
	return o
}

func (o KxClusterCapacityConfigurationPtrOutput) ToKxClusterCapacityConfigurationPtrOutputWithContext(ctx context.Context) KxClusterCapacityConfigurationPtrOutput {
	return o
}

func (o KxClusterCapacityConfigurationPtrOutput) Elem() KxClusterCapacityConfigurationOutput {
	return o.ApplyT(func(v *KxClusterCapacityConfiguration) KxClusterCapacityConfiguration {
		if v != nil {
			return *v
		}
		var ret KxClusterCapacityConfiguration
		return ret
	}).(KxClusterCapacityConfigurationOutput)
}

// Number of instances running in a cluster. Must be at least 1 and at most 5.
func (o KxClusterCapacityConfigurationPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KxClusterCapacityConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.NodeCount
	}).(pulumi.IntPtrOutput)
}

// Determines the hardware of the host computer used for your cluster instance. Each node type offers different memory and storage capabilities. Choose a node type based on the requirements of the application or software that you plan to run on your instance.
//
// You can only specify one of the following values:
// * kx.s.large – The node type with a configuration of 12 GiB memory and 2 vCPUs.
// * kx.s.xlarge – The node type with a configuration of 27 GiB memory and 4 vCPUs.
// * kx.s.2xlarge – The node type with a configuration of 54 GiB memory and 8 vCPUs.
// * kx.s.4xlarge – The node type with a configuration of 108 GiB memory and 16 vCPUs.
// * kx.s.8xlarge – The node type with a configuration of 216 GiB memory and 32 vCPUs.
// * kx.s.16xlarge – The node type with a configuration of 432 GiB memory and 64 vCPUs.
// * kx.s.32xlarge – The node type with a configuration of 864 GiB memory and 128 vCPUs.
func (o KxClusterCapacityConfigurationPtrOutput) NodeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KxClusterCapacityConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.NodeType
	}).(pulumi.StringPtrOutput)
}

type KxClusterCode struct {
	// Unique name for the S3 bucket.
	S3Bucket string `pulumi:"s3Bucket"`
	// Full S3 path (excluding bucket) to the .zip file that contains the code to be loaded onto the cluster when it’s started.
	S3Key string `pulumi:"s3Key"`
	// Version of an S3 Object.
	S3ObjectVersion *string `pulumi:"s3ObjectVersion"`
}

// KxClusterCodeInput is an input type that accepts KxClusterCodeArgs and KxClusterCodeOutput values.
// You can construct a concrete instance of `KxClusterCodeInput` via:
//
//	KxClusterCodeArgs{...}
type KxClusterCodeInput interface {
	pulumi.Input

	ToKxClusterCodeOutput() KxClusterCodeOutput
	ToKxClusterCodeOutputWithContext(context.Context) KxClusterCodeOutput
}

type KxClusterCodeArgs struct {
	// Unique name for the S3 bucket.
	S3Bucket pulumi.StringInput `pulumi:"s3Bucket"`
	// Full S3 path (excluding bucket) to the .zip file that contains the code to be loaded onto the cluster when it’s started.
	S3Key pulumi.StringInput `pulumi:"s3Key"`
	// Version of an S3 Object.
	S3ObjectVersion pulumi.StringPtrInput `pulumi:"s3ObjectVersion"`
}

func (KxClusterCodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KxClusterCode)(nil)).Elem()
}

func (i KxClusterCodeArgs) ToKxClusterCodeOutput() KxClusterCodeOutput {
	return i.ToKxClusterCodeOutputWithContext(context.Background())
}

func (i KxClusterCodeArgs) ToKxClusterCodeOutputWithContext(ctx context.Context) KxClusterCodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxClusterCodeOutput)
}

func (i KxClusterCodeArgs) ToKxClusterCodePtrOutput() KxClusterCodePtrOutput {
	return i.ToKxClusterCodePtrOutputWithContext(context.Background())
}

func (i KxClusterCodeArgs) ToKxClusterCodePtrOutputWithContext(ctx context.Context) KxClusterCodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxClusterCodeOutput).ToKxClusterCodePtrOutputWithContext(ctx)
}

// KxClusterCodePtrInput is an input type that accepts KxClusterCodeArgs, KxClusterCodePtr and KxClusterCodePtrOutput values.
// You can construct a concrete instance of `KxClusterCodePtrInput` via:
//
//	        KxClusterCodeArgs{...}
//
//	or:
//
//	        nil
type KxClusterCodePtrInput interface {
	pulumi.Input

	ToKxClusterCodePtrOutput() KxClusterCodePtrOutput
	ToKxClusterCodePtrOutputWithContext(context.Context) KxClusterCodePtrOutput
}

type kxClusterCodePtrType KxClusterCodeArgs

func KxClusterCodePtr(v *KxClusterCodeArgs) KxClusterCodePtrInput {
	return (*kxClusterCodePtrType)(v)
}

func (*kxClusterCodePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KxClusterCode)(nil)).Elem()
}

func (i *kxClusterCodePtrType) ToKxClusterCodePtrOutput() KxClusterCodePtrOutput {
	return i.ToKxClusterCodePtrOutputWithContext(context.Background())
}

func (i *kxClusterCodePtrType) ToKxClusterCodePtrOutputWithContext(ctx context.Context) KxClusterCodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxClusterCodePtrOutput)
}

type KxClusterCodeOutput struct{ *pulumi.OutputState }

func (KxClusterCodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KxClusterCode)(nil)).Elem()
}

func (o KxClusterCodeOutput) ToKxClusterCodeOutput() KxClusterCodeOutput {
	return o
}

func (o KxClusterCodeOutput) ToKxClusterCodeOutputWithContext(ctx context.Context) KxClusterCodeOutput {
	return o
}

func (o KxClusterCodeOutput) ToKxClusterCodePtrOutput() KxClusterCodePtrOutput {
	return o.ToKxClusterCodePtrOutputWithContext(context.Background())
}

func (o KxClusterCodeOutput) ToKxClusterCodePtrOutputWithContext(ctx context.Context) KxClusterCodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KxClusterCode) *KxClusterCode {
		return &v
	}).(KxClusterCodePtrOutput)
}

// Unique name for the S3 bucket.
func (o KxClusterCodeOutput) S3Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v KxClusterCode) string { return v.S3Bucket }).(pulumi.StringOutput)
}

// Full S3 path (excluding bucket) to the .zip file that contains the code to be loaded onto the cluster when it’s started.
func (o KxClusterCodeOutput) S3Key() pulumi.StringOutput {
	return o.ApplyT(func(v KxClusterCode) string { return v.S3Key }).(pulumi.StringOutput)
}

// Version of an S3 Object.
func (o KxClusterCodeOutput) S3ObjectVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KxClusterCode) *string { return v.S3ObjectVersion }).(pulumi.StringPtrOutput)
}

type KxClusterCodePtrOutput struct{ *pulumi.OutputState }

func (KxClusterCodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KxClusterCode)(nil)).Elem()
}

func (o KxClusterCodePtrOutput) ToKxClusterCodePtrOutput() KxClusterCodePtrOutput {
	return o
}

func (o KxClusterCodePtrOutput) ToKxClusterCodePtrOutputWithContext(ctx context.Context) KxClusterCodePtrOutput {
	return o
}

func (o KxClusterCodePtrOutput) Elem() KxClusterCodeOutput {
	return o.ApplyT(func(v *KxClusterCode) KxClusterCode {
		if v != nil {
			return *v
		}
		var ret KxClusterCode
		return ret
	}).(KxClusterCodeOutput)
}

// Unique name for the S3 bucket.
func (o KxClusterCodePtrOutput) S3Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KxClusterCode) *string {
		if v == nil {
			return nil
		}
		return &v.S3Bucket
	}).(pulumi.StringPtrOutput)
}

// Full S3 path (excluding bucket) to the .zip file that contains the code to be loaded onto the cluster when it’s started.
func (o KxClusterCodePtrOutput) S3Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KxClusterCode) *string {
		if v == nil {
			return nil
		}
		return &v.S3Key
	}).(pulumi.StringPtrOutput)
}

// Version of an S3 Object.
func (o KxClusterCodePtrOutput) S3ObjectVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KxClusterCode) *string {
		if v == nil {
			return nil
		}
		return v.S3ObjectVersion
	}).(pulumi.StringPtrOutput)
}

type KxClusterDatabase struct {
	// Configuration details for the disk cache to increase performance reading from a KX database mounted to the cluster. See cache_configurations.
	CacheConfigurations []KxClusterDatabaseCacheConfiguration `pulumi:"cacheConfigurations"`
	// A unique identifier of the changeset that is associated with the cluster.
	ChangesetId *string `pulumi:"changesetId"`
	// Name of the KX database.
	DatabaseName string `pulumi:"databaseName"`
}

// KxClusterDatabaseInput is an input type that accepts KxClusterDatabaseArgs and KxClusterDatabaseOutput values.
// You can construct a concrete instance of `KxClusterDatabaseInput` via:
//
//	KxClusterDatabaseArgs{...}
type KxClusterDatabaseInput interface {
	pulumi.Input

	ToKxClusterDatabaseOutput() KxClusterDatabaseOutput
	ToKxClusterDatabaseOutputWithContext(context.Context) KxClusterDatabaseOutput
}

type KxClusterDatabaseArgs struct {
	// Configuration details for the disk cache to increase performance reading from a KX database mounted to the cluster. See cache_configurations.
	CacheConfigurations KxClusterDatabaseCacheConfigurationArrayInput `pulumi:"cacheConfigurations"`
	// A unique identifier of the changeset that is associated with the cluster.
	ChangesetId pulumi.StringPtrInput `pulumi:"changesetId"`
	// Name of the KX database.
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
}

func (KxClusterDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KxClusterDatabase)(nil)).Elem()
}

func (i KxClusterDatabaseArgs) ToKxClusterDatabaseOutput() KxClusterDatabaseOutput {
	return i.ToKxClusterDatabaseOutputWithContext(context.Background())
}

func (i KxClusterDatabaseArgs) ToKxClusterDatabaseOutputWithContext(ctx context.Context) KxClusterDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxClusterDatabaseOutput)
}

// KxClusterDatabaseArrayInput is an input type that accepts KxClusterDatabaseArray and KxClusterDatabaseArrayOutput values.
// You can construct a concrete instance of `KxClusterDatabaseArrayInput` via:
//
//	KxClusterDatabaseArray{ KxClusterDatabaseArgs{...} }
type KxClusterDatabaseArrayInput interface {
	pulumi.Input

	ToKxClusterDatabaseArrayOutput() KxClusterDatabaseArrayOutput
	ToKxClusterDatabaseArrayOutputWithContext(context.Context) KxClusterDatabaseArrayOutput
}

type KxClusterDatabaseArray []KxClusterDatabaseInput

func (KxClusterDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KxClusterDatabase)(nil)).Elem()
}

func (i KxClusterDatabaseArray) ToKxClusterDatabaseArrayOutput() KxClusterDatabaseArrayOutput {
	return i.ToKxClusterDatabaseArrayOutputWithContext(context.Background())
}

func (i KxClusterDatabaseArray) ToKxClusterDatabaseArrayOutputWithContext(ctx context.Context) KxClusterDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxClusterDatabaseArrayOutput)
}

type KxClusterDatabaseOutput struct{ *pulumi.OutputState }

func (KxClusterDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KxClusterDatabase)(nil)).Elem()
}

func (o KxClusterDatabaseOutput) ToKxClusterDatabaseOutput() KxClusterDatabaseOutput {
	return o
}

func (o KxClusterDatabaseOutput) ToKxClusterDatabaseOutputWithContext(ctx context.Context) KxClusterDatabaseOutput {
	return o
}

// Configuration details for the disk cache to increase performance reading from a KX database mounted to the cluster. See cache_configurations.
func (o KxClusterDatabaseOutput) CacheConfigurations() KxClusterDatabaseCacheConfigurationArrayOutput {
	return o.ApplyT(func(v KxClusterDatabase) []KxClusterDatabaseCacheConfiguration { return v.CacheConfigurations }).(KxClusterDatabaseCacheConfigurationArrayOutput)
}

// A unique identifier of the changeset that is associated with the cluster.
func (o KxClusterDatabaseOutput) ChangesetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KxClusterDatabase) *string { return v.ChangesetId }).(pulumi.StringPtrOutput)
}

// Name of the KX database.
func (o KxClusterDatabaseOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v KxClusterDatabase) string { return v.DatabaseName }).(pulumi.StringOutput)
}

type KxClusterDatabaseArrayOutput struct{ *pulumi.OutputState }

func (KxClusterDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KxClusterDatabase)(nil)).Elem()
}

func (o KxClusterDatabaseArrayOutput) ToKxClusterDatabaseArrayOutput() KxClusterDatabaseArrayOutput {
	return o
}

func (o KxClusterDatabaseArrayOutput) ToKxClusterDatabaseArrayOutputWithContext(ctx context.Context) KxClusterDatabaseArrayOutput {
	return o
}

func (o KxClusterDatabaseArrayOutput) Index(i pulumi.IntInput) KxClusterDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KxClusterDatabase {
		return vs[0].([]KxClusterDatabase)[vs[1].(int)]
	}).(KxClusterDatabaseOutput)
}

type KxClusterDatabaseCacheConfiguration struct {
	// Type of disk cache.
	CacheType string `pulumi:"cacheType"`
	// Paths within the database to cache.
	DbPaths []string `pulumi:"dbPaths"`
}

// KxClusterDatabaseCacheConfigurationInput is an input type that accepts KxClusterDatabaseCacheConfigurationArgs and KxClusterDatabaseCacheConfigurationOutput values.
// You can construct a concrete instance of `KxClusterDatabaseCacheConfigurationInput` via:
//
//	KxClusterDatabaseCacheConfigurationArgs{...}
type KxClusterDatabaseCacheConfigurationInput interface {
	pulumi.Input

	ToKxClusterDatabaseCacheConfigurationOutput() KxClusterDatabaseCacheConfigurationOutput
	ToKxClusterDatabaseCacheConfigurationOutputWithContext(context.Context) KxClusterDatabaseCacheConfigurationOutput
}

type KxClusterDatabaseCacheConfigurationArgs struct {
	// Type of disk cache.
	CacheType pulumi.StringInput `pulumi:"cacheType"`
	// Paths within the database to cache.
	DbPaths pulumi.StringArrayInput `pulumi:"dbPaths"`
}

func (KxClusterDatabaseCacheConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KxClusterDatabaseCacheConfiguration)(nil)).Elem()
}

func (i KxClusterDatabaseCacheConfigurationArgs) ToKxClusterDatabaseCacheConfigurationOutput() KxClusterDatabaseCacheConfigurationOutput {
	return i.ToKxClusterDatabaseCacheConfigurationOutputWithContext(context.Background())
}

func (i KxClusterDatabaseCacheConfigurationArgs) ToKxClusterDatabaseCacheConfigurationOutputWithContext(ctx context.Context) KxClusterDatabaseCacheConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxClusterDatabaseCacheConfigurationOutput)
}

// KxClusterDatabaseCacheConfigurationArrayInput is an input type that accepts KxClusterDatabaseCacheConfigurationArray and KxClusterDatabaseCacheConfigurationArrayOutput values.
// You can construct a concrete instance of `KxClusterDatabaseCacheConfigurationArrayInput` via:
//
//	KxClusterDatabaseCacheConfigurationArray{ KxClusterDatabaseCacheConfigurationArgs{...} }
type KxClusterDatabaseCacheConfigurationArrayInput interface {
	pulumi.Input

	ToKxClusterDatabaseCacheConfigurationArrayOutput() KxClusterDatabaseCacheConfigurationArrayOutput
	ToKxClusterDatabaseCacheConfigurationArrayOutputWithContext(context.Context) KxClusterDatabaseCacheConfigurationArrayOutput
}

type KxClusterDatabaseCacheConfigurationArray []KxClusterDatabaseCacheConfigurationInput

func (KxClusterDatabaseCacheConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KxClusterDatabaseCacheConfiguration)(nil)).Elem()
}

func (i KxClusterDatabaseCacheConfigurationArray) ToKxClusterDatabaseCacheConfigurationArrayOutput() KxClusterDatabaseCacheConfigurationArrayOutput {
	return i.ToKxClusterDatabaseCacheConfigurationArrayOutputWithContext(context.Background())
}

func (i KxClusterDatabaseCacheConfigurationArray) ToKxClusterDatabaseCacheConfigurationArrayOutputWithContext(ctx context.Context) KxClusterDatabaseCacheConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxClusterDatabaseCacheConfigurationArrayOutput)
}

type KxClusterDatabaseCacheConfigurationOutput struct{ *pulumi.OutputState }

func (KxClusterDatabaseCacheConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KxClusterDatabaseCacheConfiguration)(nil)).Elem()
}

func (o KxClusterDatabaseCacheConfigurationOutput) ToKxClusterDatabaseCacheConfigurationOutput() KxClusterDatabaseCacheConfigurationOutput {
	return o
}

func (o KxClusterDatabaseCacheConfigurationOutput) ToKxClusterDatabaseCacheConfigurationOutputWithContext(ctx context.Context) KxClusterDatabaseCacheConfigurationOutput {
	return o
}

// Type of disk cache.
func (o KxClusterDatabaseCacheConfigurationOutput) CacheType() pulumi.StringOutput {
	return o.ApplyT(func(v KxClusterDatabaseCacheConfiguration) string { return v.CacheType }).(pulumi.StringOutput)
}

// Paths within the database to cache.
func (o KxClusterDatabaseCacheConfigurationOutput) DbPaths() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KxClusterDatabaseCacheConfiguration) []string { return v.DbPaths }).(pulumi.StringArrayOutput)
}

type KxClusterDatabaseCacheConfigurationArrayOutput struct{ *pulumi.OutputState }

func (KxClusterDatabaseCacheConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KxClusterDatabaseCacheConfiguration)(nil)).Elem()
}

func (o KxClusterDatabaseCacheConfigurationArrayOutput) ToKxClusterDatabaseCacheConfigurationArrayOutput() KxClusterDatabaseCacheConfigurationArrayOutput {
	return o
}

func (o KxClusterDatabaseCacheConfigurationArrayOutput) ToKxClusterDatabaseCacheConfigurationArrayOutputWithContext(ctx context.Context) KxClusterDatabaseCacheConfigurationArrayOutput {
	return o
}

func (o KxClusterDatabaseCacheConfigurationArrayOutput) Index(i pulumi.IntInput) KxClusterDatabaseCacheConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KxClusterDatabaseCacheConfiguration {
		return vs[0].([]KxClusterDatabaseCacheConfiguration)[vs[1].(int)]
	}).(KxClusterDatabaseCacheConfigurationOutput)
}

type KxClusterSavedownStorageConfiguration struct {
	// Size of temporary storage in gigabytes. Must be between 10 and 16000.
	Size int `pulumi:"size"`
	// Type of writeable storage space for temporarily storing your savedown data. The valid values are:
	// * SDS01 - This type represents 3000 IOPS and io2 ebs volume type.
	Type string `pulumi:"type"`
}

// KxClusterSavedownStorageConfigurationInput is an input type that accepts KxClusterSavedownStorageConfigurationArgs and KxClusterSavedownStorageConfigurationOutput values.
// You can construct a concrete instance of `KxClusterSavedownStorageConfigurationInput` via:
//
//	KxClusterSavedownStorageConfigurationArgs{...}
type KxClusterSavedownStorageConfigurationInput interface {
	pulumi.Input

	ToKxClusterSavedownStorageConfigurationOutput() KxClusterSavedownStorageConfigurationOutput
	ToKxClusterSavedownStorageConfigurationOutputWithContext(context.Context) KxClusterSavedownStorageConfigurationOutput
}

type KxClusterSavedownStorageConfigurationArgs struct {
	// Size of temporary storage in gigabytes. Must be between 10 and 16000.
	Size pulumi.IntInput `pulumi:"size"`
	// Type of writeable storage space for temporarily storing your savedown data. The valid values are:
	// * SDS01 - This type represents 3000 IOPS and io2 ebs volume type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (KxClusterSavedownStorageConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KxClusterSavedownStorageConfiguration)(nil)).Elem()
}

func (i KxClusterSavedownStorageConfigurationArgs) ToKxClusterSavedownStorageConfigurationOutput() KxClusterSavedownStorageConfigurationOutput {
	return i.ToKxClusterSavedownStorageConfigurationOutputWithContext(context.Background())
}

func (i KxClusterSavedownStorageConfigurationArgs) ToKxClusterSavedownStorageConfigurationOutputWithContext(ctx context.Context) KxClusterSavedownStorageConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxClusterSavedownStorageConfigurationOutput)
}

func (i KxClusterSavedownStorageConfigurationArgs) ToKxClusterSavedownStorageConfigurationPtrOutput() KxClusterSavedownStorageConfigurationPtrOutput {
	return i.ToKxClusterSavedownStorageConfigurationPtrOutputWithContext(context.Background())
}

func (i KxClusterSavedownStorageConfigurationArgs) ToKxClusterSavedownStorageConfigurationPtrOutputWithContext(ctx context.Context) KxClusterSavedownStorageConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxClusterSavedownStorageConfigurationOutput).ToKxClusterSavedownStorageConfigurationPtrOutputWithContext(ctx)
}

// KxClusterSavedownStorageConfigurationPtrInput is an input type that accepts KxClusterSavedownStorageConfigurationArgs, KxClusterSavedownStorageConfigurationPtr and KxClusterSavedownStorageConfigurationPtrOutput values.
// You can construct a concrete instance of `KxClusterSavedownStorageConfigurationPtrInput` via:
//
//	        KxClusterSavedownStorageConfigurationArgs{...}
//
//	or:
//
//	        nil
type KxClusterSavedownStorageConfigurationPtrInput interface {
	pulumi.Input

	ToKxClusterSavedownStorageConfigurationPtrOutput() KxClusterSavedownStorageConfigurationPtrOutput
	ToKxClusterSavedownStorageConfigurationPtrOutputWithContext(context.Context) KxClusterSavedownStorageConfigurationPtrOutput
}

type kxClusterSavedownStorageConfigurationPtrType KxClusterSavedownStorageConfigurationArgs

func KxClusterSavedownStorageConfigurationPtr(v *KxClusterSavedownStorageConfigurationArgs) KxClusterSavedownStorageConfigurationPtrInput {
	return (*kxClusterSavedownStorageConfigurationPtrType)(v)
}

func (*kxClusterSavedownStorageConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KxClusterSavedownStorageConfiguration)(nil)).Elem()
}

func (i *kxClusterSavedownStorageConfigurationPtrType) ToKxClusterSavedownStorageConfigurationPtrOutput() KxClusterSavedownStorageConfigurationPtrOutput {
	return i.ToKxClusterSavedownStorageConfigurationPtrOutputWithContext(context.Background())
}

func (i *kxClusterSavedownStorageConfigurationPtrType) ToKxClusterSavedownStorageConfigurationPtrOutputWithContext(ctx context.Context) KxClusterSavedownStorageConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxClusterSavedownStorageConfigurationPtrOutput)
}

type KxClusterSavedownStorageConfigurationOutput struct{ *pulumi.OutputState }

func (KxClusterSavedownStorageConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KxClusterSavedownStorageConfiguration)(nil)).Elem()
}

func (o KxClusterSavedownStorageConfigurationOutput) ToKxClusterSavedownStorageConfigurationOutput() KxClusterSavedownStorageConfigurationOutput {
	return o
}

func (o KxClusterSavedownStorageConfigurationOutput) ToKxClusterSavedownStorageConfigurationOutputWithContext(ctx context.Context) KxClusterSavedownStorageConfigurationOutput {
	return o
}

func (o KxClusterSavedownStorageConfigurationOutput) ToKxClusterSavedownStorageConfigurationPtrOutput() KxClusterSavedownStorageConfigurationPtrOutput {
	return o.ToKxClusterSavedownStorageConfigurationPtrOutputWithContext(context.Background())
}

func (o KxClusterSavedownStorageConfigurationOutput) ToKxClusterSavedownStorageConfigurationPtrOutputWithContext(ctx context.Context) KxClusterSavedownStorageConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KxClusterSavedownStorageConfiguration) *KxClusterSavedownStorageConfiguration {
		return &v
	}).(KxClusterSavedownStorageConfigurationPtrOutput)
}

// Size of temporary storage in gigabytes. Must be between 10 and 16000.
func (o KxClusterSavedownStorageConfigurationOutput) Size() pulumi.IntOutput {
	return o.ApplyT(func(v KxClusterSavedownStorageConfiguration) int { return v.Size }).(pulumi.IntOutput)
}

// Type of writeable storage space for temporarily storing your savedown data. The valid values are:
// * SDS01 - This type represents 3000 IOPS and io2 ebs volume type.
func (o KxClusterSavedownStorageConfigurationOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v KxClusterSavedownStorageConfiguration) string { return v.Type }).(pulumi.StringOutput)
}

type KxClusterSavedownStorageConfigurationPtrOutput struct{ *pulumi.OutputState }

func (KxClusterSavedownStorageConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KxClusterSavedownStorageConfiguration)(nil)).Elem()
}

func (o KxClusterSavedownStorageConfigurationPtrOutput) ToKxClusterSavedownStorageConfigurationPtrOutput() KxClusterSavedownStorageConfigurationPtrOutput {
	return o
}

func (o KxClusterSavedownStorageConfigurationPtrOutput) ToKxClusterSavedownStorageConfigurationPtrOutputWithContext(ctx context.Context) KxClusterSavedownStorageConfigurationPtrOutput {
	return o
}

func (o KxClusterSavedownStorageConfigurationPtrOutput) Elem() KxClusterSavedownStorageConfigurationOutput {
	return o.ApplyT(func(v *KxClusterSavedownStorageConfiguration) KxClusterSavedownStorageConfiguration {
		if v != nil {
			return *v
		}
		var ret KxClusterSavedownStorageConfiguration
		return ret
	}).(KxClusterSavedownStorageConfigurationOutput)
}

// Size of temporary storage in gigabytes. Must be between 10 and 16000.
func (o KxClusterSavedownStorageConfigurationPtrOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KxClusterSavedownStorageConfiguration) *int {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.IntPtrOutput)
}

// Type of writeable storage space for temporarily storing your savedown data. The valid values are:
// * SDS01 - This type represents 3000 IOPS and io2 ebs volume type.
func (o KxClusterSavedownStorageConfigurationPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KxClusterSavedownStorageConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type KxClusterVpcConfiguration struct {
	// IP address type for cluster network configuration parameters. The following type is available: IP_V4 - IP address version 4.
	IpAddressType string `pulumi:"ipAddressType"`
	// Unique identifier of the VPC security group applied to the VPC endpoint ENI for the cluster.
	// * ` subnetIds  `- (Required) Identifier of the subnet that the Privatelink VPC endpoint uses to connect to the cluster.
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	SubnetIds        []string `pulumi:"subnetIds"`
	// Identifier of the VPC endpoint
	VpcId string `pulumi:"vpcId"`
}

// KxClusterVpcConfigurationInput is an input type that accepts KxClusterVpcConfigurationArgs and KxClusterVpcConfigurationOutput values.
// You can construct a concrete instance of `KxClusterVpcConfigurationInput` via:
//
//	KxClusterVpcConfigurationArgs{...}
type KxClusterVpcConfigurationInput interface {
	pulumi.Input

	ToKxClusterVpcConfigurationOutput() KxClusterVpcConfigurationOutput
	ToKxClusterVpcConfigurationOutputWithContext(context.Context) KxClusterVpcConfigurationOutput
}

type KxClusterVpcConfigurationArgs struct {
	// IP address type for cluster network configuration parameters. The following type is available: IP_V4 - IP address version 4.
	IpAddressType pulumi.StringInput `pulumi:"ipAddressType"`
	// Unique identifier of the VPC security group applied to the VPC endpoint ENI for the cluster.
	// * ` subnetIds  `- (Required) Identifier of the subnet that the Privatelink VPC endpoint uses to connect to the cluster.
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	SubnetIds        pulumi.StringArrayInput `pulumi:"subnetIds"`
	// Identifier of the VPC endpoint
	VpcId pulumi.StringInput `pulumi:"vpcId"`
}

func (KxClusterVpcConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KxClusterVpcConfiguration)(nil)).Elem()
}

func (i KxClusterVpcConfigurationArgs) ToKxClusterVpcConfigurationOutput() KxClusterVpcConfigurationOutput {
	return i.ToKxClusterVpcConfigurationOutputWithContext(context.Background())
}

func (i KxClusterVpcConfigurationArgs) ToKxClusterVpcConfigurationOutputWithContext(ctx context.Context) KxClusterVpcConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxClusterVpcConfigurationOutput)
}

func (i KxClusterVpcConfigurationArgs) ToKxClusterVpcConfigurationPtrOutput() KxClusterVpcConfigurationPtrOutput {
	return i.ToKxClusterVpcConfigurationPtrOutputWithContext(context.Background())
}

func (i KxClusterVpcConfigurationArgs) ToKxClusterVpcConfigurationPtrOutputWithContext(ctx context.Context) KxClusterVpcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxClusterVpcConfigurationOutput).ToKxClusterVpcConfigurationPtrOutputWithContext(ctx)
}

// KxClusterVpcConfigurationPtrInput is an input type that accepts KxClusterVpcConfigurationArgs, KxClusterVpcConfigurationPtr and KxClusterVpcConfigurationPtrOutput values.
// You can construct a concrete instance of `KxClusterVpcConfigurationPtrInput` via:
//
//	        KxClusterVpcConfigurationArgs{...}
//
//	or:
//
//	        nil
type KxClusterVpcConfigurationPtrInput interface {
	pulumi.Input

	ToKxClusterVpcConfigurationPtrOutput() KxClusterVpcConfigurationPtrOutput
	ToKxClusterVpcConfigurationPtrOutputWithContext(context.Context) KxClusterVpcConfigurationPtrOutput
}

type kxClusterVpcConfigurationPtrType KxClusterVpcConfigurationArgs

func KxClusterVpcConfigurationPtr(v *KxClusterVpcConfigurationArgs) KxClusterVpcConfigurationPtrInput {
	return (*kxClusterVpcConfigurationPtrType)(v)
}

func (*kxClusterVpcConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KxClusterVpcConfiguration)(nil)).Elem()
}

func (i *kxClusterVpcConfigurationPtrType) ToKxClusterVpcConfigurationPtrOutput() KxClusterVpcConfigurationPtrOutput {
	return i.ToKxClusterVpcConfigurationPtrOutputWithContext(context.Background())
}

func (i *kxClusterVpcConfigurationPtrType) ToKxClusterVpcConfigurationPtrOutputWithContext(ctx context.Context) KxClusterVpcConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxClusterVpcConfigurationPtrOutput)
}

type KxClusterVpcConfigurationOutput struct{ *pulumi.OutputState }

func (KxClusterVpcConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KxClusterVpcConfiguration)(nil)).Elem()
}

func (o KxClusterVpcConfigurationOutput) ToKxClusterVpcConfigurationOutput() KxClusterVpcConfigurationOutput {
	return o
}

func (o KxClusterVpcConfigurationOutput) ToKxClusterVpcConfigurationOutputWithContext(ctx context.Context) KxClusterVpcConfigurationOutput {
	return o
}

func (o KxClusterVpcConfigurationOutput) ToKxClusterVpcConfigurationPtrOutput() KxClusterVpcConfigurationPtrOutput {
	return o.ToKxClusterVpcConfigurationPtrOutputWithContext(context.Background())
}

func (o KxClusterVpcConfigurationOutput) ToKxClusterVpcConfigurationPtrOutputWithContext(ctx context.Context) KxClusterVpcConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KxClusterVpcConfiguration) *KxClusterVpcConfiguration {
		return &v
	}).(KxClusterVpcConfigurationPtrOutput)
}

// IP address type for cluster network configuration parameters. The following type is available: IP_V4 - IP address version 4.
func (o KxClusterVpcConfigurationOutput) IpAddressType() pulumi.StringOutput {
	return o.ApplyT(func(v KxClusterVpcConfiguration) string { return v.IpAddressType }).(pulumi.StringOutput)
}

// Unique identifier of the VPC security group applied to the VPC endpoint ENI for the cluster.
// * ` subnetIds  `- (Required) Identifier of the subnet that the Privatelink VPC endpoint uses to connect to the cluster.
func (o KxClusterVpcConfigurationOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KxClusterVpcConfiguration) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o KxClusterVpcConfigurationOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KxClusterVpcConfiguration) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

// Identifier of the VPC endpoint
func (o KxClusterVpcConfigurationOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v KxClusterVpcConfiguration) string { return v.VpcId }).(pulumi.StringOutput)
}

type KxClusterVpcConfigurationPtrOutput struct{ *pulumi.OutputState }

func (KxClusterVpcConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KxClusterVpcConfiguration)(nil)).Elem()
}

func (o KxClusterVpcConfigurationPtrOutput) ToKxClusterVpcConfigurationPtrOutput() KxClusterVpcConfigurationPtrOutput {
	return o
}

func (o KxClusterVpcConfigurationPtrOutput) ToKxClusterVpcConfigurationPtrOutputWithContext(ctx context.Context) KxClusterVpcConfigurationPtrOutput {
	return o
}

func (o KxClusterVpcConfigurationPtrOutput) Elem() KxClusterVpcConfigurationOutput {
	return o.ApplyT(func(v *KxClusterVpcConfiguration) KxClusterVpcConfiguration {
		if v != nil {
			return *v
		}
		var ret KxClusterVpcConfiguration
		return ret
	}).(KxClusterVpcConfigurationOutput)
}

// IP address type for cluster network configuration parameters. The following type is available: IP_V4 - IP address version 4.
func (o KxClusterVpcConfigurationPtrOutput) IpAddressType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KxClusterVpcConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.IpAddressType
	}).(pulumi.StringPtrOutput)
}

// Unique identifier of the VPC security group applied to the VPC endpoint ENI for the cluster.
// * ` subnetIds  `- (Required) Identifier of the subnet that the Privatelink VPC endpoint uses to connect to the cluster.
func (o KxClusterVpcConfigurationPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KxClusterVpcConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

func (o KxClusterVpcConfigurationPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KxClusterVpcConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

// Identifier of the VPC endpoint
func (o KxClusterVpcConfigurationPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KxClusterVpcConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.VpcId
	}).(pulumi.StringPtrOutput)
}

type KxEnvironmentCustomDnsConfiguration struct {
	// IP address of the DNS server.
	CustomDnsServerIp string `pulumi:"customDnsServerIp"`
	// Name of the DNS server.
	CustomDnsServerName string `pulumi:"customDnsServerName"`
}

// KxEnvironmentCustomDnsConfigurationInput is an input type that accepts KxEnvironmentCustomDnsConfigurationArgs and KxEnvironmentCustomDnsConfigurationOutput values.
// You can construct a concrete instance of `KxEnvironmentCustomDnsConfigurationInput` via:
//
//	KxEnvironmentCustomDnsConfigurationArgs{...}
type KxEnvironmentCustomDnsConfigurationInput interface {
	pulumi.Input

	ToKxEnvironmentCustomDnsConfigurationOutput() KxEnvironmentCustomDnsConfigurationOutput
	ToKxEnvironmentCustomDnsConfigurationOutputWithContext(context.Context) KxEnvironmentCustomDnsConfigurationOutput
}

type KxEnvironmentCustomDnsConfigurationArgs struct {
	// IP address of the DNS server.
	CustomDnsServerIp pulumi.StringInput `pulumi:"customDnsServerIp"`
	// Name of the DNS server.
	CustomDnsServerName pulumi.StringInput `pulumi:"customDnsServerName"`
}

func (KxEnvironmentCustomDnsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KxEnvironmentCustomDnsConfiguration)(nil)).Elem()
}

func (i KxEnvironmentCustomDnsConfigurationArgs) ToKxEnvironmentCustomDnsConfigurationOutput() KxEnvironmentCustomDnsConfigurationOutput {
	return i.ToKxEnvironmentCustomDnsConfigurationOutputWithContext(context.Background())
}

func (i KxEnvironmentCustomDnsConfigurationArgs) ToKxEnvironmentCustomDnsConfigurationOutputWithContext(ctx context.Context) KxEnvironmentCustomDnsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxEnvironmentCustomDnsConfigurationOutput)
}

// KxEnvironmentCustomDnsConfigurationArrayInput is an input type that accepts KxEnvironmentCustomDnsConfigurationArray and KxEnvironmentCustomDnsConfigurationArrayOutput values.
// You can construct a concrete instance of `KxEnvironmentCustomDnsConfigurationArrayInput` via:
//
//	KxEnvironmentCustomDnsConfigurationArray{ KxEnvironmentCustomDnsConfigurationArgs{...} }
type KxEnvironmentCustomDnsConfigurationArrayInput interface {
	pulumi.Input

	ToKxEnvironmentCustomDnsConfigurationArrayOutput() KxEnvironmentCustomDnsConfigurationArrayOutput
	ToKxEnvironmentCustomDnsConfigurationArrayOutputWithContext(context.Context) KxEnvironmentCustomDnsConfigurationArrayOutput
}

type KxEnvironmentCustomDnsConfigurationArray []KxEnvironmentCustomDnsConfigurationInput

func (KxEnvironmentCustomDnsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KxEnvironmentCustomDnsConfiguration)(nil)).Elem()
}

func (i KxEnvironmentCustomDnsConfigurationArray) ToKxEnvironmentCustomDnsConfigurationArrayOutput() KxEnvironmentCustomDnsConfigurationArrayOutput {
	return i.ToKxEnvironmentCustomDnsConfigurationArrayOutputWithContext(context.Background())
}

func (i KxEnvironmentCustomDnsConfigurationArray) ToKxEnvironmentCustomDnsConfigurationArrayOutputWithContext(ctx context.Context) KxEnvironmentCustomDnsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxEnvironmentCustomDnsConfigurationArrayOutput)
}

type KxEnvironmentCustomDnsConfigurationOutput struct{ *pulumi.OutputState }

func (KxEnvironmentCustomDnsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KxEnvironmentCustomDnsConfiguration)(nil)).Elem()
}

func (o KxEnvironmentCustomDnsConfigurationOutput) ToKxEnvironmentCustomDnsConfigurationOutput() KxEnvironmentCustomDnsConfigurationOutput {
	return o
}

func (o KxEnvironmentCustomDnsConfigurationOutput) ToKxEnvironmentCustomDnsConfigurationOutputWithContext(ctx context.Context) KxEnvironmentCustomDnsConfigurationOutput {
	return o
}

// IP address of the DNS server.
func (o KxEnvironmentCustomDnsConfigurationOutput) CustomDnsServerIp() pulumi.StringOutput {
	return o.ApplyT(func(v KxEnvironmentCustomDnsConfiguration) string { return v.CustomDnsServerIp }).(pulumi.StringOutput)
}

// Name of the DNS server.
func (o KxEnvironmentCustomDnsConfigurationOutput) CustomDnsServerName() pulumi.StringOutput {
	return o.ApplyT(func(v KxEnvironmentCustomDnsConfiguration) string { return v.CustomDnsServerName }).(pulumi.StringOutput)
}

type KxEnvironmentCustomDnsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (KxEnvironmentCustomDnsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KxEnvironmentCustomDnsConfiguration)(nil)).Elem()
}

func (o KxEnvironmentCustomDnsConfigurationArrayOutput) ToKxEnvironmentCustomDnsConfigurationArrayOutput() KxEnvironmentCustomDnsConfigurationArrayOutput {
	return o
}

func (o KxEnvironmentCustomDnsConfigurationArrayOutput) ToKxEnvironmentCustomDnsConfigurationArrayOutputWithContext(ctx context.Context) KxEnvironmentCustomDnsConfigurationArrayOutput {
	return o
}

func (o KxEnvironmentCustomDnsConfigurationArrayOutput) Index(i pulumi.IntInput) KxEnvironmentCustomDnsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KxEnvironmentCustomDnsConfiguration {
		return vs[0].([]KxEnvironmentCustomDnsConfiguration)[vs[1].(int)]
	}).(KxEnvironmentCustomDnsConfigurationOutput)
}

type KxEnvironmentTransitGatewayConfiguration struct {
	// Rules that define how you manage outbound traffic from kdb network to your internal network. Defined below.
	AttachmentNetworkAclConfigurations []KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfiguration `pulumi:"attachmentNetworkAclConfigurations"`
	// Routing CIDR on behalf of KX environment. It could be any “/26 range in the 100.64.0.0 CIDR space. After providing, it will be added to the customer’s transit gateway routing table so that the traffics could be routed to KX network.
	RoutableCidrSpace string `pulumi:"routableCidrSpace"`
	// Identifier of the transit gateway created by the customer to connect outbound traffics from KX network to your internal network.
	TransitGatewayId string `pulumi:"transitGatewayId"`
}

// KxEnvironmentTransitGatewayConfigurationInput is an input type that accepts KxEnvironmentTransitGatewayConfigurationArgs and KxEnvironmentTransitGatewayConfigurationOutput values.
// You can construct a concrete instance of `KxEnvironmentTransitGatewayConfigurationInput` via:
//
//	KxEnvironmentTransitGatewayConfigurationArgs{...}
type KxEnvironmentTransitGatewayConfigurationInput interface {
	pulumi.Input

	ToKxEnvironmentTransitGatewayConfigurationOutput() KxEnvironmentTransitGatewayConfigurationOutput
	ToKxEnvironmentTransitGatewayConfigurationOutputWithContext(context.Context) KxEnvironmentTransitGatewayConfigurationOutput
}

type KxEnvironmentTransitGatewayConfigurationArgs struct {
	// Rules that define how you manage outbound traffic from kdb network to your internal network. Defined below.
	AttachmentNetworkAclConfigurations KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayInput `pulumi:"attachmentNetworkAclConfigurations"`
	// Routing CIDR on behalf of KX environment. It could be any “/26 range in the 100.64.0.0 CIDR space. After providing, it will be added to the customer’s transit gateway routing table so that the traffics could be routed to KX network.
	RoutableCidrSpace pulumi.StringInput `pulumi:"routableCidrSpace"`
	// Identifier of the transit gateway created by the customer to connect outbound traffics from KX network to your internal network.
	TransitGatewayId pulumi.StringInput `pulumi:"transitGatewayId"`
}

func (KxEnvironmentTransitGatewayConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KxEnvironmentTransitGatewayConfiguration)(nil)).Elem()
}

func (i KxEnvironmentTransitGatewayConfigurationArgs) ToKxEnvironmentTransitGatewayConfigurationOutput() KxEnvironmentTransitGatewayConfigurationOutput {
	return i.ToKxEnvironmentTransitGatewayConfigurationOutputWithContext(context.Background())
}

func (i KxEnvironmentTransitGatewayConfigurationArgs) ToKxEnvironmentTransitGatewayConfigurationOutputWithContext(ctx context.Context) KxEnvironmentTransitGatewayConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxEnvironmentTransitGatewayConfigurationOutput)
}

func (i KxEnvironmentTransitGatewayConfigurationArgs) ToKxEnvironmentTransitGatewayConfigurationPtrOutput() KxEnvironmentTransitGatewayConfigurationPtrOutput {
	return i.ToKxEnvironmentTransitGatewayConfigurationPtrOutputWithContext(context.Background())
}

func (i KxEnvironmentTransitGatewayConfigurationArgs) ToKxEnvironmentTransitGatewayConfigurationPtrOutputWithContext(ctx context.Context) KxEnvironmentTransitGatewayConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxEnvironmentTransitGatewayConfigurationOutput).ToKxEnvironmentTransitGatewayConfigurationPtrOutputWithContext(ctx)
}

// KxEnvironmentTransitGatewayConfigurationPtrInput is an input type that accepts KxEnvironmentTransitGatewayConfigurationArgs, KxEnvironmentTransitGatewayConfigurationPtr and KxEnvironmentTransitGatewayConfigurationPtrOutput values.
// You can construct a concrete instance of `KxEnvironmentTransitGatewayConfigurationPtrInput` via:
//
//	        KxEnvironmentTransitGatewayConfigurationArgs{...}
//
//	or:
//
//	        nil
type KxEnvironmentTransitGatewayConfigurationPtrInput interface {
	pulumi.Input

	ToKxEnvironmentTransitGatewayConfigurationPtrOutput() KxEnvironmentTransitGatewayConfigurationPtrOutput
	ToKxEnvironmentTransitGatewayConfigurationPtrOutputWithContext(context.Context) KxEnvironmentTransitGatewayConfigurationPtrOutput
}

type kxEnvironmentTransitGatewayConfigurationPtrType KxEnvironmentTransitGatewayConfigurationArgs

func KxEnvironmentTransitGatewayConfigurationPtr(v *KxEnvironmentTransitGatewayConfigurationArgs) KxEnvironmentTransitGatewayConfigurationPtrInput {
	return (*kxEnvironmentTransitGatewayConfigurationPtrType)(v)
}

func (*kxEnvironmentTransitGatewayConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KxEnvironmentTransitGatewayConfiguration)(nil)).Elem()
}

func (i *kxEnvironmentTransitGatewayConfigurationPtrType) ToKxEnvironmentTransitGatewayConfigurationPtrOutput() KxEnvironmentTransitGatewayConfigurationPtrOutput {
	return i.ToKxEnvironmentTransitGatewayConfigurationPtrOutputWithContext(context.Background())
}

func (i *kxEnvironmentTransitGatewayConfigurationPtrType) ToKxEnvironmentTransitGatewayConfigurationPtrOutputWithContext(ctx context.Context) KxEnvironmentTransitGatewayConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxEnvironmentTransitGatewayConfigurationPtrOutput)
}

type KxEnvironmentTransitGatewayConfigurationOutput struct{ *pulumi.OutputState }

func (KxEnvironmentTransitGatewayConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KxEnvironmentTransitGatewayConfiguration)(nil)).Elem()
}

func (o KxEnvironmentTransitGatewayConfigurationOutput) ToKxEnvironmentTransitGatewayConfigurationOutput() KxEnvironmentTransitGatewayConfigurationOutput {
	return o
}

func (o KxEnvironmentTransitGatewayConfigurationOutput) ToKxEnvironmentTransitGatewayConfigurationOutputWithContext(ctx context.Context) KxEnvironmentTransitGatewayConfigurationOutput {
	return o
}

func (o KxEnvironmentTransitGatewayConfigurationOutput) ToKxEnvironmentTransitGatewayConfigurationPtrOutput() KxEnvironmentTransitGatewayConfigurationPtrOutput {
	return o.ToKxEnvironmentTransitGatewayConfigurationPtrOutputWithContext(context.Background())
}

func (o KxEnvironmentTransitGatewayConfigurationOutput) ToKxEnvironmentTransitGatewayConfigurationPtrOutputWithContext(ctx context.Context) KxEnvironmentTransitGatewayConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KxEnvironmentTransitGatewayConfiguration) *KxEnvironmentTransitGatewayConfiguration {
		return &v
	}).(KxEnvironmentTransitGatewayConfigurationPtrOutput)
}

// Rules that define how you manage outbound traffic from kdb network to your internal network. Defined below.
func (o KxEnvironmentTransitGatewayConfigurationOutput) AttachmentNetworkAclConfigurations() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayOutput {
	return o.ApplyT(func(v KxEnvironmentTransitGatewayConfiguration) []KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfiguration {
		return v.AttachmentNetworkAclConfigurations
	}).(KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayOutput)
}

// Routing CIDR on behalf of KX environment. It could be any “/26 range in the 100.64.0.0 CIDR space. After providing, it will be added to the customer’s transit gateway routing table so that the traffics could be routed to KX network.
func (o KxEnvironmentTransitGatewayConfigurationOutput) RoutableCidrSpace() pulumi.StringOutput {
	return o.ApplyT(func(v KxEnvironmentTransitGatewayConfiguration) string { return v.RoutableCidrSpace }).(pulumi.StringOutput)
}

// Identifier of the transit gateway created by the customer to connect outbound traffics from KX network to your internal network.
func (o KxEnvironmentTransitGatewayConfigurationOutput) TransitGatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v KxEnvironmentTransitGatewayConfiguration) string { return v.TransitGatewayId }).(pulumi.StringOutput)
}

type KxEnvironmentTransitGatewayConfigurationPtrOutput struct{ *pulumi.OutputState }

func (KxEnvironmentTransitGatewayConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KxEnvironmentTransitGatewayConfiguration)(nil)).Elem()
}

func (o KxEnvironmentTransitGatewayConfigurationPtrOutput) ToKxEnvironmentTransitGatewayConfigurationPtrOutput() KxEnvironmentTransitGatewayConfigurationPtrOutput {
	return o
}

func (o KxEnvironmentTransitGatewayConfigurationPtrOutput) ToKxEnvironmentTransitGatewayConfigurationPtrOutputWithContext(ctx context.Context) KxEnvironmentTransitGatewayConfigurationPtrOutput {
	return o
}

func (o KxEnvironmentTransitGatewayConfigurationPtrOutput) Elem() KxEnvironmentTransitGatewayConfigurationOutput {
	return o.ApplyT(func(v *KxEnvironmentTransitGatewayConfiguration) KxEnvironmentTransitGatewayConfiguration {
		if v != nil {
			return *v
		}
		var ret KxEnvironmentTransitGatewayConfiguration
		return ret
	}).(KxEnvironmentTransitGatewayConfigurationOutput)
}

// Rules that define how you manage outbound traffic from kdb network to your internal network. Defined below.
func (o KxEnvironmentTransitGatewayConfigurationPtrOutput) AttachmentNetworkAclConfigurations() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayOutput {
	return o.ApplyT(func(v *KxEnvironmentTransitGatewayConfiguration) []KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfiguration {
		if v == nil {
			return nil
		}
		return v.AttachmentNetworkAclConfigurations
	}).(KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayOutput)
}

// Routing CIDR on behalf of KX environment. It could be any “/26 range in the 100.64.0.0 CIDR space. After providing, it will be added to the customer’s transit gateway routing table so that the traffics could be routed to KX network.
func (o KxEnvironmentTransitGatewayConfigurationPtrOutput) RoutableCidrSpace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KxEnvironmentTransitGatewayConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.RoutableCidrSpace
	}).(pulumi.StringPtrOutput)
}

// Identifier of the transit gateway created by the customer to connect outbound traffics from KX network to your internal network.
func (o KxEnvironmentTransitGatewayConfigurationPtrOutput) TransitGatewayId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KxEnvironmentTransitGatewayConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.TransitGatewayId
	}).(pulumi.StringPtrOutput)
}

type KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfiguration struct {
	// The IPv4 network range to allow or deny, in CIDR notation. The specified CIDR block is modified to its canonical form. For example, `100.68.0.18/18` will be converted to `100.68.0.0/18`.
	CidrBlock string `pulumi:"cidrBlock"`
	// Defines the ICMP protocol that consists of the ICMP type and code. Defined below.
	IcmpTypeCode *KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCode `pulumi:"icmpTypeCode"`
	// Range of ports the rule applies to. Defined below.
	PortRange *KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRange `pulumi:"portRange"`
	// Protocol number. A value of `1` means all the protocols.
	Protocol string `pulumi:"protocol"`
	// Indicates whether to `allow` or `deny` the traffic that matches the rule.
	RuleAction string `pulumi:"ruleAction"`
	// Rule number for the entry. All the network ACL entries are processed in ascending order by rule number.
	RuleNumber int `pulumi:"ruleNumber"`
}

// KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationInput is an input type that accepts KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArgs and KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutput values.
// You can construct a concrete instance of `KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationInput` via:
//
//	KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArgs{...}
type KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationInput interface {
	pulumi.Input

	ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutput() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutput
	ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutputWithContext(context.Context) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutput
}

type KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArgs struct {
	// The IPv4 network range to allow or deny, in CIDR notation. The specified CIDR block is modified to its canonical form. For example, `100.68.0.18/18` will be converted to `100.68.0.0/18`.
	CidrBlock pulumi.StringInput `pulumi:"cidrBlock"`
	// Defines the ICMP protocol that consists of the ICMP type and code. Defined below.
	IcmpTypeCode KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrInput `pulumi:"icmpTypeCode"`
	// Range of ports the rule applies to. Defined below.
	PortRange KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrInput `pulumi:"portRange"`
	// Protocol number. A value of `1` means all the protocols.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// Indicates whether to `allow` or `deny` the traffic that matches the rule.
	RuleAction pulumi.StringInput `pulumi:"ruleAction"`
	// Rule number for the entry. All the network ACL entries are processed in ascending order by rule number.
	RuleNumber pulumi.IntInput `pulumi:"ruleNumber"`
}

func (KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfiguration)(nil)).Elem()
}

func (i KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArgs) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutput() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutput {
	return i.ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutputWithContext(context.Background())
}

func (i KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArgs) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutputWithContext(ctx context.Context) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutput)
}

// KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayInput is an input type that accepts KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArray and KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayOutput values.
// You can construct a concrete instance of `KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayInput` via:
//
//	KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArray{ KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArgs{...} }
type KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayInput interface {
	pulumi.Input

	ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayOutput() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayOutput
	ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayOutputWithContext(context.Context) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayOutput
}

type KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArray []KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationInput

func (KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfiguration)(nil)).Elem()
}

func (i KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArray) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayOutput() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayOutput {
	return i.ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayOutputWithContext(context.Background())
}

func (i KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArray) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayOutputWithContext(ctx context.Context) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayOutput)
}

type KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutput struct{ *pulumi.OutputState }

func (KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfiguration)(nil)).Elem()
}

func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutput) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutput() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutput {
	return o
}

func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutput) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutputWithContext(ctx context.Context) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutput {
	return o
}

// The IPv4 network range to allow or deny, in CIDR notation. The specified CIDR block is modified to its canonical form. For example, `100.68.0.18/18` will be converted to `100.68.0.0/18`.
func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutput) CidrBlock() pulumi.StringOutput {
	return o.ApplyT(func(v KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfiguration) string {
		return v.CidrBlock
	}).(pulumi.StringOutput)
}

// Defines the ICMP protocol that consists of the ICMP type and code. Defined below.
func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutput) IcmpTypeCode() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput {
	return o.ApplyT(func(v KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfiguration) *KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCode {
		return v.IcmpTypeCode
	}).(KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput)
}

// Range of ports the rule applies to. Defined below.
func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutput) PortRange() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput {
	return o.ApplyT(func(v KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfiguration) *KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRange {
		return v.PortRange
	}).(KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput)
}

// Protocol number. A value of `1` means all the protocols.
func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfiguration) string {
		return v.Protocol
	}).(pulumi.StringOutput)
}

// Indicates whether to `allow` or `deny` the traffic that matches the rule.
func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutput) RuleAction() pulumi.StringOutput {
	return o.ApplyT(func(v KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfiguration) string {
		return v.RuleAction
	}).(pulumi.StringOutput)
}

// Rule number for the entry. All the network ACL entries are processed in ascending order by rule number.
func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutput) RuleNumber() pulumi.IntOutput {
	return o.ApplyT(func(v KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfiguration) int {
		return v.RuleNumber
	}).(pulumi.IntOutput)
}

type KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayOutput struct{ *pulumi.OutputState }

func (KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfiguration)(nil)).Elem()
}

func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayOutput) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayOutput() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayOutput {
	return o
}

func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayOutput) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayOutputWithContext(ctx context.Context) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayOutput {
	return o
}

func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayOutput) Index(i pulumi.IntInput) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfiguration {
		return vs[0].([]KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfiguration)[vs[1].(int)]
	}).(KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutput)
}

type KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCode struct {
	// ICMP code. A value of `-1` means all codes for the specified ICMP type.
	Code int `pulumi:"code"`
	// ICMP type. A value of `-1` means all types.
	Type int `pulumi:"type"`
}

// KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeInput is an input type that accepts KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeArgs and KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutput values.
// You can construct a concrete instance of `KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeInput` via:
//
//	KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeArgs{...}
type KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeInput interface {
	pulumi.Input

	ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutput() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutput
	ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutputWithContext(context.Context) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutput
}

type KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeArgs struct {
	// ICMP code. A value of `-1` means all codes for the specified ICMP type.
	Code pulumi.IntInput `pulumi:"code"`
	// ICMP type. A value of `-1` means all types.
	Type pulumi.IntInput `pulumi:"type"`
}

func (KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCode)(nil)).Elem()
}

func (i KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeArgs) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutput() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutput {
	return i.ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutputWithContext(context.Background())
}

func (i KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeArgs) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutputWithContext(ctx context.Context) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutput)
}

func (i KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeArgs) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput {
	return i.ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutputWithContext(context.Background())
}

func (i KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeArgs) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutputWithContext(ctx context.Context) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutput).ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutputWithContext(ctx)
}

// KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrInput is an input type that accepts KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeArgs, KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtr and KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput values.
// You can construct a concrete instance of `KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrInput` via:
//
//	        KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeArgs{...}
//
//	or:
//
//	        nil
type KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrInput interface {
	pulumi.Input

	ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput
	ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutputWithContext(context.Context) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput
}

type kxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrType KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeArgs

func KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtr(v *KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeArgs) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrInput {
	return (*kxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrType)(v)
}

func (*kxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCode)(nil)).Elem()
}

func (i *kxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrType) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput {
	return i.ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutputWithContext(context.Background())
}

func (i *kxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrType) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutputWithContext(ctx context.Context) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput)
}

type KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutput struct{ *pulumi.OutputState }

func (KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCode)(nil)).Elem()
}

func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutput) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutput() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutput {
	return o
}

func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutput) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutputWithContext(ctx context.Context) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutput {
	return o
}

func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutput) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput {
	return o.ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutputWithContext(context.Background())
}

func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutput) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutputWithContext(ctx context.Context) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCode) *KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCode {
		return &v
	}).(KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput)
}

// ICMP code. A value of `-1` means all codes for the specified ICMP type.
func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutput) Code() pulumi.IntOutput {
	return o.ApplyT(func(v KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCode) int {
		return v.Code
	}).(pulumi.IntOutput)
}

// ICMP type. A value of `-1` means all types.
func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutput) Type() pulumi.IntOutput {
	return o.ApplyT(func(v KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCode) int {
		return v.Type
	}).(pulumi.IntOutput)
}

type KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput struct{ *pulumi.OutputState }

func (KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCode)(nil)).Elem()
}

func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput {
	return o
}

func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutputWithContext(ctx context.Context) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput {
	return o
}

func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput) Elem() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutput {
	return o.ApplyT(func(v *KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCode) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCode {
		if v != nil {
			return *v
		}
		var ret KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCode
		return ret
	}).(KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutput)
}

// ICMP code. A value of `-1` means all codes for the specified ICMP type.
func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput) Code() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCode) *int {
		if v == nil {
			return nil
		}
		return &v.Code
	}).(pulumi.IntPtrOutput)
}

// ICMP type. A value of `-1` means all types.
func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput) Type() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCode) *int {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.IntPtrOutput)
}

type KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRange struct {
	// First port in the range.
	From int `pulumi:"from"`
	// Last port in the range.
	To int `pulumi:"to"`
}

// KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeInput is an input type that accepts KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeArgs and KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutput values.
// You can construct a concrete instance of `KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeInput` via:
//
//	KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeArgs{...}
type KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeInput interface {
	pulumi.Input

	ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutput() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutput
	ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutputWithContext(context.Context) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutput
}

type KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeArgs struct {
	// First port in the range.
	From pulumi.IntInput `pulumi:"from"`
	// Last port in the range.
	To pulumi.IntInput `pulumi:"to"`
}

func (KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRange)(nil)).Elem()
}

func (i KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeArgs) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutput() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutput {
	return i.ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutputWithContext(context.Background())
}

func (i KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeArgs) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutputWithContext(ctx context.Context) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutput)
}

func (i KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeArgs) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput {
	return i.ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutputWithContext(context.Background())
}

func (i KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeArgs) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutputWithContext(ctx context.Context) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutput).ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutputWithContext(ctx)
}

// KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrInput is an input type that accepts KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeArgs, KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtr and KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput values.
// You can construct a concrete instance of `KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrInput` via:
//
//	        KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeArgs{...}
//
//	or:
//
//	        nil
type KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrInput interface {
	pulumi.Input

	ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput
	ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutputWithContext(context.Context) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput
}

type kxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrType KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeArgs

func KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtr(v *KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeArgs) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrInput {
	return (*kxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrType)(v)
}

func (*kxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRange)(nil)).Elem()
}

func (i *kxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrType) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput {
	return i.ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutputWithContext(context.Background())
}

func (i *kxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrType) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutputWithContext(ctx context.Context) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput)
}

type KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutput struct{ *pulumi.OutputState }

func (KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRange)(nil)).Elem()
}

func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutput) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutput() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutput {
	return o
}

func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutput) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutputWithContext(ctx context.Context) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutput {
	return o
}

func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutput) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput {
	return o.ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutputWithContext(context.Background())
}

func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutput) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutputWithContext(ctx context.Context) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRange) *KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRange {
		return &v
	}).(KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput)
}

// First port in the range.
func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutput) From() pulumi.IntOutput {
	return o.ApplyT(func(v KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRange) int {
		return v.From
	}).(pulumi.IntOutput)
}

// Last port in the range.
func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutput) To() pulumi.IntOutput {
	return o.ApplyT(func(v KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRange) int {
		return v.To
	}).(pulumi.IntOutput)
}

type KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput struct{ *pulumi.OutputState }

func (KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRange)(nil)).Elem()
}

func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput {
	return o
}

func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput) ToKxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutputWithContext(ctx context.Context) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput {
	return o
}

func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput) Elem() KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutput {
	return o.ApplyT(func(v *KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRange) KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRange {
		if v != nil {
			return *v
		}
		var ret KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRange
		return ret
	}).(KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutput)
}

// First port in the range.
func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput) From() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRange) *int {
		if v == nil {
			return nil
		}
		return &v.From
	}).(pulumi.IntPtrOutput)
}

// Last port in the range.
func (o KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput) To() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRange) *int {
		if v == nil {
			return nil
		}
		return &v.To
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KxClusterAutoScalingConfigurationInput)(nil)).Elem(), KxClusterAutoScalingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KxClusterAutoScalingConfigurationPtrInput)(nil)).Elem(), KxClusterAutoScalingConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KxClusterCacheStorageConfigurationInput)(nil)).Elem(), KxClusterCacheStorageConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KxClusterCacheStorageConfigurationArrayInput)(nil)).Elem(), KxClusterCacheStorageConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KxClusterCapacityConfigurationInput)(nil)).Elem(), KxClusterCapacityConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KxClusterCapacityConfigurationPtrInput)(nil)).Elem(), KxClusterCapacityConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KxClusterCodeInput)(nil)).Elem(), KxClusterCodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KxClusterCodePtrInput)(nil)).Elem(), KxClusterCodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KxClusterDatabaseInput)(nil)).Elem(), KxClusterDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KxClusterDatabaseArrayInput)(nil)).Elem(), KxClusterDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KxClusterDatabaseCacheConfigurationInput)(nil)).Elem(), KxClusterDatabaseCacheConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KxClusterDatabaseCacheConfigurationArrayInput)(nil)).Elem(), KxClusterDatabaseCacheConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KxClusterSavedownStorageConfigurationInput)(nil)).Elem(), KxClusterSavedownStorageConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KxClusterSavedownStorageConfigurationPtrInput)(nil)).Elem(), KxClusterSavedownStorageConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KxClusterVpcConfigurationInput)(nil)).Elem(), KxClusterVpcConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KxClusterVpcConfigurationPtrInput)(nil)).Elem(), KxClusterVpcConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KxEnvironmentCustomDnsConfigurationInput)(nil)).Elem(), KxEnvironmentCustomDnsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KxEnvironmentCustomDnsConfigurationArrayInput)(nil)).Elem(), KxEnvironmentCustomDnsConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KxEnvironmentTransitGatewayConfigurationInput)(nil)).Elem(), KxEnvironmentTransitGatewayConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KxEnvironmentTransitGatewayConfigurationPtrInput)(nil)).Elem(), KxEnvironmentTransitGatewayConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationInput)(nil)).Elem(), KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayInput)(nil)).Elem(), KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeInput)(nil)).Elem(), KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrInput)(nil)).Elem(), KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeInput)(nil)).Elem(), KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrInput)(nil)).Elem(), KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeArgs{})
	pulumi.RegisterOutputType(KxClusterAutoScalingConfigurationOutput{})
	pulumi.RegisterOutputType(KxClusterAutoScalingConfigurationPtrOutput{})
	pulumi.RegisterOutputType(KxClusterCacheStorageConfigurationOutput{})
	pulumi.RegisterOutputType(KxClusterCacheStorageConfigurationArrayOutput{})
	pulumi.RegisterOutputType(KxClusterCapacityConfigurationOutput{})
	pulumi.RegisterOutputType(KxClusterCapacityConfigurationPtrOutput{})
	pulumi.RegisterOutputType(KxClusterCodeOutput{})
	pulumi.RegisterOutputType(KxClusterCodePtrOutput{})
	pulumi.RegisterOutputType(KxClusterDatabaseOutput{})
	pulumi.RegisterOutputType(KxClusterDatabaseArrayOutput{})
	pulumi.RegisterOutputType(KxClusterDatabaseCacheConfigurationOutput{})
	pulumi.RegisterOutputType(KxClusterDatabaseCacheConfigurationArrayOutput{})
	pulumi.RegisterOutputType(KxClusterSavedownStorageConfigurationOutput{})
	pulumi.RegisterOutputType(KxClusterSavedownStorageConfigurationPtrOutput{})
	pulumi.RegisterOutputType(KxClusterVpcConfigurationOutput{})
	pulumi.RegisterOutputType(KxClusterVpcConfigurationPtrOutput{})
	pulumi.RegisterOutputType(KxEnvironmentCustomDnsConfigurationOutput{})
	pulumi.RegisterOutputType(KxEnvironmentCustomDnsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(KxEnvironmentTransitGatewayConfigurationOutput{})
	pulumi.RegisterOutputType(KxEnvironmentTransitGatewayConfigurationPtrOutput{})
	pulumi.RegisterOutputType(KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationOutput{})
	pulumi.RegisterOutputType(KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationArrayOutput{})
	pulumi.RegisterOutputType(KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodeOutput{})
	pulumi.RegisterOutputType(KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationIcmpTypeCodePtrOutput{})
	pulumi.RegisterOutputType(KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangeOutput{})
	pulumi.RegisterOutputType(KxEnvironmentTransitGatewayConfigurationAttachmentNetworkAclConfigurationPortRangePtrOutput{})
}
