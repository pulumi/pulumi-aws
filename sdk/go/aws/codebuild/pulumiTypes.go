// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package codebuild

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ProjectArtifacts struct {
	ArtifactIdentifier   *string `pulumi:"artifactIdentifier"`
	BucketOwnerAccess    *string `pulumi:"bucketOwnerAccess"`
	EncryptionDisabled   *bool   `pulumi:"encryptionDisabled"`
	Location             *string `pulumi:"location"`
	Name                 *string `pulumi:"name"`
	NamespaceType        *string `pulumi:"namespaceType"`
	OverrideArtifactName *bool   `pulumi:"overrideArtifactName"`
	Packaging            *string `pulumi:"packaging"`
	Path                 *string `pulumi:"path"`
	Type                 string  `pulumi:"type"`
}

// ProjectArtifactsInput is an input type that accepts ProjectArtifactsArgs and ProjectArtifactsOutput values.
// You can construct a concrete instance of `ProjectArtifactsInput` via:
//
//	ProjectArtifactsArgs{...}
type ProjectArtifactsInput interface {
	pulumi.Input

	ToProjectArtifactsOutput() ProjectArtifactsOutput
	ToProjectArtifactsOutputWithContext(context.Context) ProjectArtifactsOutput
}

type ProjectArtifactsArgs struct {
	ArtifactIdentifier   pulumi.StringPtrInput `pulumi:"artifactIdentifier"`
	BucketOwnerAccess    pulumi.StringPtrInput `pulumi:"bucketOwnerAccess"`
	EncryptionDisabled   pulumi.BoolPtrInput   `pulumi:"encryptionDisabled"`
	Location             pulumi.StringPtrInput `pulumi:"location"`
	Name                 pulumi.StringPtrInput `pulumi:"name"`
	NamespaceType        pulumi.StringPtrInput `pulumi:"namespaceType"`
	OverrideArtifactName pulumi.BoolPtrInput   `pulumi:"overrideArtifactName"`
	Packaging            pulumi.StringPtrInput `pulumi:"packaging"`
	Path                 pulumi.StringPtrInput `pulumi:"path"`
	Type                 pulumi.StringInput    `pulumi:"type"`
}

func (ProjectArtifactsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectArtifacts)(nil)).Elem()
}

func (i ProjectArtifactsArgs) ToProjectArtifactsOutput() ProjectArtifactsOutput {
	return i.ToProjectArtifactsOutputWithContext(context.Background())
}

func (i ProjectArtifactsArgs) ToProjectArtifactsOutputWithContext(ctx context.Context) ProjectArtifactsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectArtifactsOutput)
}

func (i ProjectArtifactsArgs) ToProjectArtifactsPtrOutput() ProjectArtifactsPtrOutput {
	return i.ToProjectArtifactsPtrOutputWithContext(context.Background())
}

func (i ProjectArtifactsArgs) ToProjectArtifactsPtrOutputWithContext(ctx context.Context) ProjectArtifactsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectArtifactsOutput).ToProjectArtifactsPtrOutputWithContext(ctx)
}

// ProjectArtifactsPtrInput is an input type that accepts ProjectArtifactsArgs, ProjectArtifactsPtr and ProjectArtifactsPtrOutput values.
// You can construct a concrete instance of `ProjectArtifactsPtrInput` via:
//
//	        ProjectArtifactsArgs{...}
//
//	or:
//
//	        nil
type ProjectArtifactsPtrInput interface {
	pulumi.Input

	ToProjectArtifactsPtrOutput() ProjectArtifactsPtrOutput
	ToProjectArtifactsPtrOutputWithContext(context.Context) ProjectArtifactsPtrOutput
}

type projectArtifactsPtrType ProjectArtifactsArgs

func ProjectArtifactsPtr(v *ProjectArtifactsArgs) ProjectArtifactsPtrInput {
	return (*projectArtifactsPtrType)(v)
}

func (*projectArtifactsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectArtifacts)(nil)).Elem()
}

func (i *projectArtifactsPtrType) ToProjectArtifactsPtrOutput() ProjectArtifactsPtrOutput {
	return i.ToProjectArtifactsPtrOutputWithContext(context.Background())
}

func (i *projectArtifactsPtrType) ToProjectArtifactsPtrOutputWithContext(ctx context.Context) ProjectArtifactsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectArtifactsPtrOutput)
}

type ProjectArtifactsOutput struct{ *pulumi.OutputState }

func (ProjectArtifactsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectArtifacts)(nil)).Elem()
}

func (o ProjectArtifactsOutput) ToProjectArtifactsOutput() ProjectArtifactsOutput {
	return o
}

func (o ProjectArtifactsOutput) ToProjectArtifactsOutputWithContext(ctx context.Context) ProjectArtifactsOutput {
	return o
}

func (o ProjectArtifactsOutput) ToProjectArtifactsPtrOutput() ProjectArtifactsPtrOutput {
	return o.ToProjectArtifactsPtrOutputWithContext(context.Background())
}

func (o ProjectArtifactsOutput) ToProjectArtifactsPtrOutputWithContext(ctx context.Context) ProjectArtifactsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectArtifacts) *ProjectArtifacts {
		return &v
	}).(ProjectArtifactsPtrOutput)
}

func (o ProjectArtifactsOutput) ArtifactIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectArtifacts) *string { return v.ArtifactIdentifier }).(pulumi.StringPtrOutput)
}

func (o ProjectArtifactsOutput) BucketOwnerAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectArtifacts) *string { return v.BucketOwnerAccess }).(pulumi.StringPtrOutput)
}

func (o ProjectArtifactsOutput) EncryptionDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectArtifacts) *bool { return v.EncryptionDisabled }).(pulumi.BoolPtrOutput)
}

func (o ProjectArtifactsOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectArtifacts) *string { return v.Location }).(pulumi.StringPtrOutput)
}

func (o ProjectArtifactsOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectArtifacts) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ProjectArtifactsOutput) NamespaceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectArtifacts) *string { return v.NamespaceType }).(pulumi.StringPtrOutput)
}

func (o ProjectArtifactsOutput) OverrideArtifactName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectArtifacts) *bool { return v.OverrideArtifactName }).(pulumi.BoolPtrOutput)
}

func (o ProjectArtifactsOutput) Packaging() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectArtifacts) *string { return v.Packaging }).(pulumi.StringPtrOutput)
}

func (o ProjectArtifactsOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectArtifacts) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o ProjectArtifactsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectArtifacts) string { return v.Type }).(pulumi.StringOutput)
}

type ProjectArtifactsPtrOutput struct{ *pulumi.OutputState }

func (ProjectArtifactsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectArtifacts)(nil)).Elem()
}

func (o ProjectArtifactsPtrOutput) ToProjectArtifactsPtrOutput() ProjectArtifactsPtrOutput {
	return o
}

func (o ProjectArtifactsPtrOutput) ToProjectArtifactsPtrOutputWithContext(ctx context.Context) ProjectArtifactsPtrOutput {
	return o
}

func (o ProjectArtifactsPtrOutput) Elem() ProjectArtifactsOutput {
	return o.ApplyT(func(v *ProjectArtifacts) ProjectArtifacts {
		if v != nil {
			return *v
		}
		var ret ProjectArtifacts
		return ret
	}).(ProjectArtifactsOutput)
}

func (o ProjectArtifactsPtrOutput) ArtifactIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectArtifacts) *string {
		if v == nil {
			return nil
		}
		return v.ArtifactIdentifier
	}).(pulumi.StringPtrOutput)
}

func (o ProjectArtifactsPtrOutput) BucketOwnerAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectArtifacts) *string {
		if v == nil {
			return nil
		}
		return v.BucketOwnerAccess
	}).(pulumi.StringPtrOutput)
}

func (o ProjectArtifactsPtrOutput) EncryptionDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectArtifacts) *bool {
		if v == nil {
			return nil
		}
		return v.EncryptionDisabled
	}).(pulumi.BoolPtrOutput)
}

func (o ProjectArtifactsPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectArtifacts) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

func (o ProjectArtifactsPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectArtifacts) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

func (o ProjectArtifactsPtrOutput) NamespaceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectArtifacts) *string {
		if v == nil {
			return nil
		}
		return v.NamespaceType
	}).(pulumi.StringPtrOutput)
}

func (o ProjectArtifactsPtrOutput) OverrideArtifactName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectArtifacts) *bool {
		if v == nil {
			return nil
		}
		return v.OverrideArtifactName
	}).(pulumi.BoolPtrOutput)
}

func (o ProjectArtifactsPtrOutput) Packaging() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectArtifacts) *string {
		if v == nil {
			return nil
		}
		return v.Packaging
	}).(pulumi.StringPtrOutput)
}

func (o ProjectArtifactsPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectArtifacts) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

func (o ProjectArtifactsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectArtifacts) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ProjectBuildBatchConfig struct {
	CombineArtifacts *bool                                `pulumi:"combineArtifacts"`
	Restrictions     *ProjectBuildBatchConfigRestrictions `pulumi:"restrictions"`
	ServiceRole      string                               `pulumi:"serviceRole"`
	TimeoutInMins    *int                                 `pulumi:"timeoutInMins"`
}

// ProjectBuildBatchConfigInput is an input type that accepts ProjectBuildBatchConfigArgs and ProjectBuildBatchConfigOutput values.
// You can construct a concrete instance of `ProjectBuildBatchConfigInput` via:
//
//	ProjectBuildBatchConfigArgs{...}
type ProjectBuildBatchConfigInput interface {
	pulumi.Input

	ToProjectBuildBatchConfigOutput() ProjectBuildBatchConfigOutput
	ToProjectBuildBatchConfigOutputWithContext(context.Context) ProjectBuildBatchConfigOutput
}

type ProjectBuildBatchConfigArgs struct {
	CombineArtifacts pulumi.BoolPtrInput                         `pulumi:"combineArtifacts"`
	Restrictions     ProjectBuildBatchConfigRestrictionsPtrInput `pulumi:"restrictions"`
	ServiceRole      pulumi.StringInput                          `pulumi:"serviceRole"`
	TimeoutInMins    pulumi.IntPtrInput                          `pulumi:"timeoutInMins"`
}

func (ProjectBuildBatchConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectBuildBatchConfig)(nil)).Elem()
}

func (i ProjectBuildBatchConfigArgs) ToProjectBuildBatchConfigOutput() ProjectBuildBatchConfigOutput {
	return i.ToProjectBuildBatchConfigOutputWithContext(context.Background())
}

func (i ProjectBuildBatchConfigArgs) ToProjectBuildBatchConfigOutputWithContext(ctx context.Context) ProjectBuildBatchConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectBuildBatchConfigOutput)
}

func (i ProjectBuildBatchConfigArgs) ToProjectBuildBatchConfigPtrOutput() ProjectBuildBatchConfigPtrOutput {
	return i.ToProjectBuildBatchConfigPtrOutputWithContext(context.Background())
}

func (i ProjectBuildBatchConfigArgs) ToProjectBuildBatchConfigPtrOutputWithContext(ctx context.Context) ProjectBuildBatchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectBuildBatchConfigOutput).ToProjectBuildBatchConfigPtrOutputWithContext(ctx)
}

// ProjectBuildBatchConfigPtrInput is an input type that accepts ProjectBuildBatchConfigArgs, ProjectBuildBatchConfigPtr and ProjectBuildBatchConfigPtrOutput values.
// You can construct a concrete instance of `ProjectBuildBatchConfigPtrInput` via:
//
//	        ProjectBuildBatchConfigArgs{...}
//
//	or:
//
//	        nil
type ProjectBuildBatchConfigPtrInput interface {
	pulumi.Input

	ToProjectBuildBatchConfigPtrOutput() ProjectBuildBatchConfigPtrOutput
	ToProjectBuildBatchConfigPtrOutputWithContext(context.Context) ProjectBuildBatchConfigPtrOutput
}

type projectBuildBatchConfigPtrType ProjectBuildBatchConfigArgs

func ProjectBuildBatchConfigPtr(v *ProjectBuildBatchConfigArgs) ProjectBuildBatchConfigPtrInput {
	return (*projectBuildBatchConfigPtrType)(v)
}

func (*projectBuildBatchConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectBuildBatchConfig)(nil)).Elem()
}

func (i *projectBuildBatchConfigPtrType) ToProjectBuildBatchConfigPtrOutput() ProjectBuildBatchConfigPtrOutput {
	return i.ToProjectBuildBatchConfigPtrOutputWithContext(context.Background())
}

func (i *projectBuildBatchConfigPtrType) ToProjectBuildBatchConfigPtrOutputWithContext(ctx context.Context) ProjectBuildBatchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectBuildBatchConfigPtrOutput)
}

type ProjectBuildBatchConfigOutput struct{ *pulumi.OutputState }

func (ProjectBuildBatchConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectBuildBatchConfig)(nil)).Elem()
}

func (o ProjectBuildBatchConfigOutput) ToProjectBuildBatchConfigOutput() ProjectBuildBatchConfigOutput {
	return o
}

func (o ProjectBuildBatchConfigOutput) ToProjectBuildBatchConfigOutputWithContext(ctx context.Context) ProjectBuildBatchConfigOutput {
	return o
}

func (o ProjectBuildBatchConfigOutput) ToProjectBuildBatchConfigPtrOutput() ProjectBuildBatchConfigPtrOutput {
	return o.ToProjectBuildBatchConfigPtrOutputWithContext(context.Background())
}

func (o ProjectBuildBatchConfigOutput) ToProjectBuildBatchConfigPtrOutputWithContext(ctx context.Context) ProjectBuildBatchConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectBuildBatchConfig) *ProjectBuildBatchConfig {
		return &v
	}).(ProjectBuildBatchConfigPtrOutput)
}

func (o ProjectBuildBatchConfigOutput) CombineArtifacts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectBuildBatchConfig) *bool { return v.CombineArtifacts }).(pulumi.BoolPtrOutput)
}

func (o ProjectBuildBatchConfigOutput) Restrictions() ProjectBuildBatchConfigRestrictionsPtrOutput {
	return o.ApplyT(func(v ProjectBuildBatchConfig) *ProjectBuildBatchConfigRestrictions { return v.Restrictions }).(ProjectBuildBatchConfigRestrictionsPtrOutput)
}

func (o ProjectBuildBatchConfigOutput) ServiceRole() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectBuildBatchConfig) string { return v.ServiceRole }).(pulumi.StringOutput)
}

func (o ProjectBuildBatchConfigOutput) TimeoutInMins() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectBuildBatchConfig) *int { return v.TimeoutInMins }).(pulumi.IntPtrOutput)
}

type ProjectBuildBatchConfigPtrOutput struct{ *pulumi.OutputState }

func (ProjectBuildBatchConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectBuildBatchConfig)(nil)).Elem()
}

func (o ProjectBuildBatchConfigPtrOutput) ToProjectBuildBatchConfigPtrOutput() ProjectBuildBatchConfigPtrOutput {
	return o
}

func (o ProjectBuildBatchConfigPtrOutput) ToProjectBuildBatchConfigPtrOutputWithContext(ctx context.Context) ProjectBuildBatchConfigPtrOutput {
	return o
}

func (o ProjectBuildBatchConfigPtrOutput) Elem() ProjectBuildBatchConfigOutput {
	return o.ApplyT(func(v *ProjectBuildBatchConfig) ProjectBuildBatchConfig {
		if v != nil {
			return *v
		}
		var ret ProjectBuildBatchConfig
		return ret
	}).(ProjectBuildBatchConfigOutput)
}

func (o ProjectBuildBatchConfigPtrOutput) CombineArtifacts() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectBuildBatchConfig) *bool {
		if v == nil {
			return nil
		}
		return v.CombineArtifacts
	}).(pulumi.BoolPtrOutput)
}

func (o ProjectBuildBatchConfigPtrOutput) Restrictions() ProjectBuildBatchConfigRestrictionsPtrOutput {
	return o.ApplyT(func(v *ProjectBuildBatchConfig) *ProjectBuildBatchConfigRestrictions {
		if v == nil {
			return nil
		}
		return v.Restrictions
	}).(ProjectBuildBatchConfigRestrictionsPtrOutput)
}

func (o ProjectBuildBatchConfigPtrOutput) ServiceRole() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectBuildBatchConfig) *string {
		if v == nil {
			return nil
		}
		return &v.ServiceRole
	}).(pulumi.StringPtrOutput)
}

func (o ProjectBuildBatchConfigPtrOutput) TimeoutInMins() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectBuildBatchConfig) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutInMins
	}).(pulumi.IntPtrOutput)
}

type ProjectBuildBatchConfigRestrictions struct {
	ComputeTypesAlloweds []string `pulumi:"computeTypesAlloweds"`
	MaximumBuildsAllowed *int     `pulumi:"maximumBuildsAllowed"`
}

// ProjectBuildBatchConfigRestrictionsInput is an input type that accepts ProjectBuildBatchConfigRestrictionsArgs and ProjectBuildBatchConfigRestrictionsOutput values.
// You can construct a concrete instance of `ProjectBuildBatchConfigRestrictionsInput` via:
//
//	ProjectBuildBatchConfigRestrictionsArgs{...}
type ProjectBuildBatchConfigRestrictionsInput interface {
	pulumi.Input

	ToProjectBuildBatchConfigRestrictionsOutput() ProjectBuildBatchConfigRestrictionsOutput
	ToProjectBuildBatchConfigRestrictionsOutputWithContext(context.Context) ProjectBuildBatchConfigRestrictionsOutput
}

type ProjectBuildBatchConfigRestrictionsArgs struct {
	ComputeTypesAlloweds pulumi.StringArrayInput `pulumi:"computeTypesAlloweds"`
	MaximumBuildsAllowed pulumi.IntPtrInput      `pulumi:"maximumBuildsAllowed"`
}

func (ProjectBuildBatchConfigRestrictionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectBuildBatchConfigRestrictions)(nil)).Elem()
}

func (i ProjectBuildBatchConfigRestrictionsArgs) ToProjectBuildBatchConfigRestrictionsOutput() ProjectBuildBatchConfigRestrictionsOutput {
	return i.ToProjectBuildBatchConfigRestrictionsOutputWithContext(context.Background())
}

func (i ProjectBuildBatchConfigRestrictionsArgs) ToProjectBuildBatchConfigRestrictionsOutputWithContext(ctx context.Context) ProjectBuildBatchConfigRestrictionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectBuildBatchConfigRestrictionsOutput)
}

func (i ProjectBuildBatchConfigRestrictionsArgs) ToProjectBuildBatchConfigRestrictionsPtrOutput() ProjectBuildBatchConfigRestrictionsPtrOutput {
	return i.ToProjectBuildBatchConfigRestrictionsPtrOutputWithContext(context.Background())
}

func (i ProjectBuildBatchConfigRestrictionsArgs) ToProjectBuildBatchConfigRestrictionsPtrOutputWithContext(ctx context.Context) ProjectBuildBatchConfigRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectBuildBatchConfigRestrictionsOutput).ToProjectBuildBatchConfigRestrictionsPtrOutputWithContext(ctx)
}

// ProjectBuildBatchConfigRestrictionsPtrInput is an input type that accepts ProjectBuildBatchConfigRestrictionsArgs, ProjectBuildBatchConfigRestrictionsPtr and ProjectBuildBatchConfigRestrictionsPtrOutput values.
// You can construct a concrete instance of `ProjectBuildBatchConfigRestrictionsPtrInput` via:
//
//	        ProjectBuildBatchConfigRestrictionsArgs{...}
//
//	or:
//
//	        nil
type ProjectBuildBatchConfigRestrictionsPtrInput interface {
	pulumi.Input

	ToProjectBuildBatchConfigRestrictionsPtrOutput() ProjectBuildBatchConfigRestrictionsPtrOutput
	ToProjectBuildBatchConfigRestrictionsPtrOutputWithContext(context.Context) ProjectBuildBatchConfigRestrictionsPtrOutput
}

type projectBuildBatchConfigRestrictionsPtrType ProjectBuildBatchConfigRestrictionsArgs

func ProjectBuildBatchConfigRestrictionsPtr(v *ProjectBuildBatchConfigRestrictionsArgs) ProjectBuildBatchConfigRestrictionsPtrInput {
	return (*projectBuildBatchConfigRestrictionsPtrType)(v)
}

func (*projectBuildBatchConfigRestrictionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectBuildBatchConfigRestrictions)(nil)).Elem()
}

func (i *projectBuildBatchConfigRestrictionsPtrType) ToProjectBuildBatchConfigRestrictionsPtrOutput() ProjectBuildBatchConfigRestrictionsPtrOutput {
	return i.ToProjectBuildBatchConfigRestrictionsPtrOutputWithContext(context.Background())
}

func (i *projectBuildBatchConfigRestrictionsPtrType) ToProjectBuildBatchConfigRestrictionsPtrOutputWithContext(ctx context.Context) ProjectBuildBatchConfigRestrictionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectBuildBatchConfigRestrictionsPtrOutput)
}

type ProjectBuildBatchConfigRestrictionsOutput struct{ *pulumi.OutputState }

func (ProjectBuildBatchConfigRestrictionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectBuildBatchConfigRestrictions)(nil)).Elem()
}

func (o ProjectBuildBatchConfigRestrictionsOutput) ToProjectBuildBatchConfigRestrictionsOutput() ProjectBuildBatchConfigRestrictionsOutput {
	return o
}

func (o ProjectBuildBatchConfigRestrictionsOutput) ToProjectBuildBatchConfigRestrictionsOutputWithContext(ctx context.Context) ProjectBuildBatchConfigRestrictionsOutput {
	return o
}

func (o ProjectBuildBatchConfigRestrictionsOutput) ToProjectBuildBatchConfigRestrictionsPtrOutput() ProjectBuildBatchConfigRestrictionsPtrOutput {
	return o.ToProjectBuildBatchConfigRestrictionsPtrOutputWithContext(context.Background())
}

func (o ProjectBuildBatchConfigRestrictionsOutput) ToProjectBuildBatchConfigRestrictionsPtrOutputWithContext(ctx context.Context) ProjectBuildBatchConfigRestrictionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectBuildBatchConfigRestrictions) *ProjectBuildBatchConfigRestrictions {
		return &v
	}).(ProjectBuildBatchConfigRestrictionsPtrOutput)
}

func (o ProjectBuildBatchConfigRestrictionsOutput) ComputeTypesAlloweds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectBuildBatchConfigRestrictions) []string { return v.ComputeTypesAlloweds }).(pulumi.StringArrayOutput)
}

func (o ProjectBuildBatchConfigRestrictionsOutput) MaximumBuildsAllowed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectBuildBatchConfigRestrictions) *int { return v.MaximumBuildsAllowed }).(pulumi.IntPtrOutput)
}

type ProjectBuildBatchConfigRestrictionsPtrOutput struct{ *pulumi.OutputState }

func (ProjectBuildBatchConfigRestrictionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectBuildBatchConfigRestrictions)(nil)).Elem()
}

func (o ProjectBuildBatchConfigRestrictionsPtrOutput) ToProjectBuildBatchConfigRestrictionsPtrOutput() ProjectBuildBatchConfigRestrictionsPtrOutput {
	return o
}

func (o ProjectBuildBatchConfigRestrictionsPtrOutput) ToProjectBuildBatchConfigRestrictionsPtrOutputWithContext(ctx context.Context) ProjectBuildBatchConfigRestrictionsPtrOutput {
	return o
}

func (o ProjectBuildBatchConfigRestrictionsPtrOutput) Elem() ProjectBuildBatchConfigRestrictionsOutput {
	return o.ApplyT(func(v *ProjectBuildBatchConfigRestrictions) ProjectBuildBatchConfigRestrictions {
		if v != nil {
			return *v
		}
		var ret ProjectBuildBatchConfigRestrictions
		return ret
	}).(ProjectBuildBatchConfigRestrictionsOutput)
}

func (o ProjectBuildBatchConfigRestrictionsPtrOutput) ComputeTypesAlloweds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProjectBuildBatchConfigRestrictions) []string {
		if v == nil {
			return nil
		}
		return v.ComputeTypesAlloweds
	}).(pulumi.StringArrayOutput)
}

func (o ProjectBuildBatchConfigRestrictionsPtrOutput) MaximumBuildsAllowed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectBuildBatchConfigRestrictions) *int {
		if v == nil {
			return nil
		}
		return v.MaximumBuildsAllowed
	}).(pulumi.IntPtrOutput)
}

type ProjectCache struct {
	Location *string  `pulumi:"location"`
	Modes    []string `pulumi:"modes"`
	Type     *string  `pulumi:"type"`
}

// ProjectCacheInput is an input type that accepts ProjectCacheArgs and ProjectCacheOutput values.
// You can construct a concrete instance of `ProjectCacheInput` via:
//
//	ProjectCacheArgs{...}
type ProjectCacheInput interface {
	pulumi.Input

	ToProjectCacheOutput() ProjectCacheOutput
	ToProjectCacheOutputWithContext(context.Context) ProjectCacheOutput
}

type ProjectCacheArgs struct {
	Location pulumi.StringPtrInput   `pulumi:"location"`
	Modes    pulumi.StringArrayInput `pulumi:"modes"`
	Type     pulumi.StringPtrInput   `pulumi:"type"`
}

func (ProjectCacheArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectCache)(nil)).Elem()
}

func (i ProjectCacheArgs) ToProjectCacheOutput() ProjectCacheOutput {
	return i.ToProjectCacheOutputWithContext(context.Background())
}

func (i ProjectCacheArgs) ToProjectCacheOutputWithContext(ctx context.Context) ProjectCacheOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCacheOutput)
}

func (i ProjectCacheArgs) ToProjectCachePtrOutput() ProjectCachePtrOutput {
	return i.ToProjectCachePtrOutputWithContext(context.Background())
}

func (i ProjectCacheArgs) ToProjectCachePtrOutputWithContext(ctx context.Context) ProjectCachePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCacheOutput).ToProjectCachePtrOutputWithContext(ctx)
}

// ProjectCachePtrInput is an input type that accepts ProjectCacheArgs, ProjectCachePtr and ProjectCachePtrOutput values.
// You can construct a concrete instance of `ProjectCachePtrInput` via:
//
//	        ProjectCacheArgs{...}
//
//	or:
//
//	        nil
type ProjectCachePtrInput interface {
	pulumi.Input

	ToProjectCachePtrOutput() ProjectCachePtrOutput
	ToProjectCachePtrOutputWithContext(context.Context) ProjectCachePtrOutput
}

type projectCachePtrType ProjectCacheArgs

func ProjectCachePtr(v *ProjectCacheArgs) ProjectCachePtrInput {
	return (*projectCachePtrType)(v)
}

func (*projectCachePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectCache)(nil)).Elem()
}

func (i *projectCachePtrType) ToProjectCachePtrOutput() ProjectCachePtrOutput {
	return i.ToProjectCachePtrOutputWithContext(context.Background())
}

func (i *projectCachePtrType) ToProjectCachePtrOutputWithContext(ctx context.Context) ProjectCachePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectCachePtrOutput)
}

type ProjectCacheOutput struct{ *pulumi.OutputState }

func (ProjectCacheOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectCache)(nil)).Elem()
}

func (o ProjectCacheOutput) ToProjectCacheOutput() ProjectCacheOutput {
	return o
}

func (o ProjectCacheOutput) ToProjectCacheOutputWithContext(ctx context.Context) ProjectCacheOutput {
	return o
}

func (o ProjectCacheOutput) ToProjectCachePtrOutput() ProjectCachePtrOutput {
	return o.ToProjectCachePtrOutputWithContext(context.Background())
}

func (o ProjectCacheOutput) ToProjectCachePtrOutputWithContext(ctx context.Context) ProjectCachePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectCache) *ProjectCache {
		return &v
	}).(ProjectCachePtrOutput)
}

func (o ProjectCacheOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectCache) *string { return v.Location }).(pulumi.StringPtrOutput)
}

func (o ProjectCacheOutput) Modes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectCache) []string { return v.Modes }).(pulumi.StringArrayOutput)
}

func (o ProjectCacheOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectCache) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ProjectCachePtrOutput struct{ *pulumi.OutputState }

func (ProjectCachePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectCache)(nil)).Elem()
}

func (o ProjectCachePtrOutput) ToProjectCachePtrOutput() ProjectCachePtrOutput {
	return o
}

func (o ProjectCachePtrOutput) ToProjectCachePtrOutputWithContext(ctx context.Context) ProjectCachePtrOutput {
	return o
}

func (o ProjectCachePtrOutput) Elem() ProjectCacheOutput {
	return o.ApplyT(func(v *ProjectCache) ProjectCache {
		if v != nil {
			return *v
		}
		var ret ProjectCache
		return ret
	}).(ProjectCacheOutput)
}

func (o ProjectCachePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectCache) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

func (o ProjectCachePtrOutput) Modes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProjectCache) []string {
		if v == nil {
			return nil
		}
		return v.Modes
	}).(pulumi.StringArrayOutput)
}

func (o ProjectCachePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectCache) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ProjectEnvironment struct {
	Certificate              *string                                 `pulumi:"certificate"`
	ComputeType              string                                  `pulumi:"computeType"`
	EnvironmentVariables     []ProjectEnvironmentEnvironmentVariable `pulumi:"environmentVariables"`
	Image                    string                                  `pulumi:"image"`
	ImagePullCredentialsType *string                                 `pulumi:"imagePullCredentialsType"`
	PrivilegedMode           *bool                                   `pulumi:"privilegedMode"`
	RegistryCredential       *ProjectEnvironmentRegistryCredential   `pulumi:"registryCredential"`
	Type                     string                                  `pulumi:"type"`
}

// ProjectEnvironmentInput is an input type that accepts ProjectEnvironmentArgs and ProjectEnvironmentOutput values.
// You can construct a concrete instance of `ProjectEnvironmentInput` via:
//
//	ProjectEnvironmentArgs{...}
type ProjectEnvironmentInput interface {
	pulumi.Input

	ToProjectEnvironmentOutput() ProjectEnvironmentOutput
	ToProjectEnvironmentOutputWithContext(context.Context) ProjectEnvironmentOutput
}

type ProjectEnvironmentArgs struct {
	Certificate              pulumi.StringPtrInput                           `pulumi:"certificate"`
	ComputeType              pulumi.StringInput                              `pulumi:"computeType"`
	EnvironmentVariables     ProjectEnvironmentEnvironmentVariableArrayInput `pulumi:"environmentVariables"`
	Image                    pulumi.StringInput                              `pulumi:"image"`
	ImagePullCredentialsType pulumi.StringPtrInput                           `pulumi:"imagePullCredentialsType"`
	PrivilegedMode           pulumi.BoolPtrInput                             `pulumi:"privilegedMode"`
	RegistryCredential       ProjectEnvironmentRegistryCredentialPtrInput    `pulumi:"registryCredential"`
	Type                     pulumi.StringInput                              `pulumi:"type"`
}

func (ProjectEnvironmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectEnvironment)(nil)).Elem()
}

func (i ProjectEnvironmentArgs) ToProjectEnvironmentOutput() ProjectEnvironmentOutput {
	return i.ToProjectEnvironmentOutputWithContext(context.Background())
}

func (i ProjectEnvironmentArgs) ToProjectEnvironmentOutputWithContext(ctx context.Context) ProjectEnvironmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentOutput)
}

func (i ProjectEnvironmentArgs) ToProjectEnvironmentPtrOutput() ProjectEnvironmentPtrOutput {
	return i.ToProjectEnvironmentPtrOutputWithContext(context.Background())
}

func (i ProjectEnvironmentArgs) ToProjectEnvironmentPtrOutputWithContext(ctx context.Context) ProjectEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentOutput).ToProjectEnvironmentPtrOutputWithContext(ctx)
}

// ProjectEnvironmentPtrInput is an input type that accepts ProjectEnvironmentArgs, ProjectEnvironmentPtr and ProjectEnvironmentPtrOutput values.
// You can construct a concrete instance of `ProjectEnvironmentPtrInput` via:
//
//	        ProjectEnvironmentArgs{...}
//
//	or:
//
//	        nil
type ProjectEnvironmentPtrInput interface {
	pulumi.Input

	ToProjectEnvironmentPtrOutput() ProjectEnvironmentPtrOutput
	ToProjectEnvironmentPtrOutputWithContext(context.Context) ProjectEnvironmentPtrOutput
}

type projectEnvironmentPtrType ProjectEnvironmentArgs

func ProjectEnvironmentPtr(v *ProjectEnvironmentArgs) ProjectEnvironmentPtrInput {
	return (*projectEnvironmentPtrType)(v)
}

func (*projectEnvironmentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectEnvironment)(nil)).Elem()
}

func (i *projectEnvironmentPtrType) ToProjectEnvironmentPtrOutput() ProjectEnvironmentPtrOutput {
	return i.ToProjectEnvironmentPtrOutputWithContext(context.Background())
}

func (i *projectEnvironmentPtrType) ToProjectEnvironmentPtrOutputWithContext(ctx context.Context) ProjectEnvironmentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentPtrOutput)
}

type ProjectEnvironmentOutput struct{ *pulumi.OutputState }

func (ProjectEnvironmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectEnvironment)(nil)).Elem()
}

func (o ProjectEnvironmentOutput) ToProjectEnvironmentOutput() ProjectEnvironmentOutput {
	return o
}

func (o ProjectEnvironmentOutput) ToProjectEnvironmentOutputWithContext(ctx context.Context) ProjectEnvironmentOutput {
	return o
}

func (o ProjectEnvironmentOutput) ToProjectEnvironmentPtrOutput() ProjectEnvironmentPtrOutput {
	return o.ToProjectEnvironmentPtrOutputWithContext(context.Background())
}

func (o ProjectEnvironmentOutput) ToProjectEnvironmentPtrOutputWithContext(ctx context.Context) ProjectEnvironmentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectEnvironment) *ProjectEnvironment {
		return &v
	}).(ProjectEnvironmentPtrOutput)
}

func (o ProjectEnvironmentOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectEnvironment) *string { return v.Certificate }).(pulumi.StringPtrOutput)
}

func (o ProjectEnvironmentOutput) ComputeType() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectEnvironment) string { return v.ComputeType }).(pulumi.StringOutput)
}

func (o ProjectEnvironmentOutput) EnvironmentVariables() ProjectEnvironmentEnvironmentVariableArrayOutput {
	return o.ApplyT(func(v ProjectEnvironment) []ProjectEnvironmentEnvironmentVariable { return v.EnvironmentVariables }).(ProjectEnvironmentEnvironmentVariableArrayOutput)
}

func (o ProjectEnvironmentOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectEnvironment) string { return v.Image }).(pulumi.StringOutput)
}

func (o ProjectEnvironmentOutput) ImagePullCredentialsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectEnvironment) *string { return v.ImagePullCredentialsType }).(pulumi.StringPtrOutput)
}

func (o ProjectEnvironmentOutput) PrivilegedMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectEnvironment) *bool { return v.PrivilegedMode }).(pulumi.BoolPtrOutput)
}

func (o ProjectEnvironmentOutput) RegistryCredential() ProjectEnvironmentRegistryCredentialPtrOutput {
	return o.ApplyT(func(v ProjectEnvironment) *ProjectEnvironmentRegistryCredential { return v.RegistryCredential }).(ProjectEnvironmentRegistryCredentialPtrOutput)
}

func (o ProjectEnvironmentOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectEnvironment) string { return v.Type }).(pulumi.StringOutput)
}

type ProjectEnvironmentPtrOutput struct{ *pulumi.OutputState }

func (ProjectEnvironmentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectEnvironment)(nil)).Elem()
}

func (o ProjectEnvironmentPtrOutput) ToProjectEnvironmentPtrOutput() ProjectEnvironmentPtrOutput {
	return o
}

func (o ProjectEnvironmentPtrOutput) ToProjectEnvironmentPtrOutputWithContext(ctx context.Context) ProjectEnvironmentPtrOutput {
	return o
}

func (o ProjectEnvironmentPtrOutput) Elem() ProjectEnvironmentOutput {
	return o.ApplyT(func(v *ProjectEnvironment) ProjectEnvironment {
		if v != nil {
			return *v
		}
		var ret ProjectEnvironment
		return ret
	}).(ProjectEnvironmentOutput)
}

func (o ProjectEnvironmentPtrOutput) Certificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectEnvironment) *string {
		if v == nil {
			return nil
		}
		return v.Certificate
	}).(pulumi.StringPtrOutput)
}

func (o ProjectEnvironmentPtrOutput) ComputeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.ComputeType
	}).(pulumi.StringPtrOutput)
}

func (o ProjectEnvironmentPtrOutput) EnvironmentVariables() ProjectEnvironmentEnvironmentVariableArrayOutput {
	return o.ApplyT(func(v *ProjectEnvironment) []ProjectEnvironmentEnvironmentVariable {
		if v == nil {
			return nil
		}
		return v.EnvironmentVariables
	}).(ProjectEnvironmentEnvironmentVariableArrayOutput)
}

func (o ProjectEnvironmentPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Image
	}).(pulumi.StringPtrOutput)
}

func (o ProjectEnvironmentPtrOutput) ImagePullCredentialsType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectEnvironment) *string {
		if v == nil {
			return nil
		}
		return v.ImagePullCredentialsType
	}).(pulumi.StringPtrOutput)
}

func (o ProjectEnvironmentPtrOutput) PrivilegedMode() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectEnvironment) *bool {
		if v == nil {
			return nil
		}
		return v.PrivilegedMode
	}).(pulumi.BoolPtrOutput)
}

func (o ProjectEnvironmentPtrOutput) RegistryCredential() ProjectEnvironmentRegistryCredentialPtrOutput {
	return o.ApplyT(func(v *ProjectEnvironment) *ProjectEnvironmentRegistryCredential {
		if v == nil {
			return nil
		}
		return v.RegistryCredential
	}).(ProjectEnvironmentRegistryCredentialPtrOutput)
}

func (o ProjectEnvironmentPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectEnvironment) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ProjectEnvironmentEnvironmentVariable struct {
	Name  string  `pulumi:"name"`
	Type  *string `pulumi:"type"`
	Value string  `pulumi:"value"`
}

// ProjectEnvironmentEnvironmentVariableInput is an input type that accepts ProjectEnvironmentEnvironmentVariableArgs and ProjectEnvironmentEnvironmentVariableOutput values.
// You can construct a concrete instance of `ProjectEnvironmentEnvironmentVariableInput` via:
//
//	ProjectEnvironmentEnvironmentVariableArgs{...}
type ProjectEnvironmentEnvironmentVariableInput interface {
	pulumi.Input

	ToProjectEnvironmentEnvironmentVariableOutput() ProjectEnvironmentEnvironmentVariableOutput
	ToProjectEnvironmentEnvironmentVariableOutputWithContext(context.Context) ProjectEnvironmentEnvironmentVariableOutput
}

type ProjectEnvironmentEnvironmentVariableArgs struct {
	Name  pulumi.StringInput    `pulumi:"name"`
	Type  pulumi.StringPtrInput `pulumi:"type"`
	Value pulumi.StringInput    `pulumi:"value"`
}

func (ProjectEnvironmentEnvironmentVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectEnvironmentEnvironmentVariable)(nil)).Elem()
}

func (i ProjectEnvironmentEnvironmentVariableArgs) ToProjectEnvironmentEnvironmentVariableOutput() ProjectEnvironmentEnvironmentVariableOutput {
	return i.ToProjectEnvironmentEnvironmentVariableOutputWithContext(context.Background())
}

func (i ProjectEnvironmentEnvironmentVariableArgs) ToProjectEnvironmentEnvironmentVariableOutputWithContext(ctx context.Context) ProjectEnvironmentEnvironmentVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentEnvironmentVariableOutput)
}

// ProjectEnvironmentEnvironmentVariableArrayInput is an input type that accepts ProjectEnvironmentEnvironmentVariableArray and ProjectEnvironmentEnvironmentVariableArrayOutput values.
// You can construct a concrete instance of `ProjectEnvironmentEnvironmentVariableArrayInput` via:
//
//	ProjectEnvironmentEnvironmentVariableArray{ ProjectEnvironmentEnvironmentVariableArgs{...} }
type ProjectEnvironmentEnvironmentVariableArrayInput interface {
	pulumi.Input

	ToProjectEnvironmentEnvironmentVariableArrayOutput() ProjectEnvironmentEnvironmentVariableArrayOutput
	ToProjectEnvironmentEnvironmentVariableArrayOutputWithContext(context.Context) ProjectEnvironmentEnvironmentVariableArrayOutput
}

type ProjectEnvironmentEnvironmentVariableArray []ProjectEnvironmentEnvironmentVariableInput

func (ProjectEnvironmentEnvironmentVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectEnvironmentEnvironmentVariable)(nil)).Elem()
}

func (i ProjectEnvironmentEnvironmentVariableArray) ToProjectEnvironmentEnvironmentVariableArrayOutput() ProjectEnvironmentEnvironmentVariableArrayOutput {
	return i.ToProjectEnvironmentEnvironmentVariableArrayOutputWithContext(context.Background())
}

func (i ProjectEnvironmentEnvironmentVariableArray) ToProjectEnvironmentEnvironmentVariableArrayOutputWithContext(ctx context.Context) ProjectEnvironmentEnvironmentVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentEnvironmentVariableArrayOutput)
}

type ProjectEnvironmentEnvironmentVariableOutput struct{ *pulumi.OutputState }

func (ProjectEnvironmentEnvironmentVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectEnvironmentEnvironmentVariable)(nil)).Elem()
}

func (o ProjectEnvironmentEnvironmentVariableOutput) ToProjectEnvironmentEnvironmentVariableOutput() ProjectEnvironmentEnvironmentVariableOutput {
	return o
}

func (o ProjectEnvironmentEnvironmentVariableOutput) ToProjectEnvironmentEnvironmentVariableOutputWithContext(ctx context.Context) ProjectEnvironmentEnvironmentVariableOutput {
	return o
}

func (o ProjectEnvironmentEnvironmentVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectEnvironmentEnvironmentVariable) string { return v.Name }).(pulumi.StringOutput)
}

func (o ProjectEnvironmentEnvironmentVariableOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectEnvironmentEnvironmentVariable) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ProjectEnvironmentEnvironmentVariableOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectEnvironmentEnvironmentVariable) string { return v.Value }).(pulumi.StringOutput)
}

type ProjectEnvironmentEnvironmentVariableArrayOutput struct{ *pulumi.OutputState }

func (ProjectEnvironmentEnvironmentVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectEnvironmentEnvironmentVariable)(nil)).Elem()
}

func (o ProjectEnvironmentEnvironmentVariableArrayOutput) ToProjectEnvironmentEnvironmentVariableArrayOutput() ProjectEnvironmentEnvironmentVariableArrayOutput {
	return o
}

func (o ProjectEnvironmentEnvironmentVariableArrayOutput) ToProjectEnvironmentEnvironmentVariableArrayOutputWithContext(ctx context.Context) ProjectEnvironmentEnvironmentVariableArrayOutput {
	return o
}

func (o ProjectEnvironmentEnvironmentVariableArrayOutput) Index(i pulumi.IntInput) ProjectEnvironmentEnvironmentVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectEnvironmentEnvironmentVariable {
		return vs[0].([]ProjectEnvironmentEnvironmentVariable)[vs[1].(int)]
	}).(ProjectEnvironmentEnvironmentVariableOutput)
}

type ProjectEnvironmentRegistryCredential struct {
	Credential         string `pulumi:"credential"`
	CredentialProvider string `pulumi:"credentialProvider"`
}

// ProjectEnvironmentRegistryCredentialInput is an input type that accepts ProjectEnvironmentRegistryCredentialArgs and ProjectEnvironmentRegistryCredentialOutput values.
// You can construct a concrete instance of `ProjectEnvironmentRegistryCredentialInput` via:
//
//	ProjectEnvironmentRegistryCredentialArgs{...}
type ProjectEnvironmentRegistryCredentialInput interface {
	pulumi.Input

	ToProjectEnvironmentRegistryCredentialOutput() ProjectEnvironmentRegistryCredentialOutput
	ToProjectEnvironmentRegistryCredentialOutputWithContext(context.Context) ProjectEnvironmentRegistryCredentialOutput
}

type ProjectEnvironmentRegistryCredentialArgs struct {
	Credential         pulumi.StringInput `pulumi:"credential"`
	CredentialProvider pulumi.StringInput `pulumi:"credentialProvider"`
}

func (ProjectEnvironmentRegistryCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectEnvironmentRegistryCredential)(nil)).Elem()
}

func (i ProjectEnvironmentRegistryCredentialArgs) ToProjectEnvironmentRegistryCredentialOutput() ProjectEnvironmentRegistryCredentialOutput {
	return i.ToProjectEnvironmentRegistryCredentialOutputWithContext(context.Background())
}

func (i ProjectEnvironmentRegistryCredentialArgs) ToProjectEnvironmentRegistryCredentialOutputWithContext(ctx context.Context) ProjectEnvironmentRegistryCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentRegistryCredentialOutput)
}

func (i ProjectEnvironmentRegistryCredentialArgs) ToProjectEnvironmentRegistryCredentialPtrOutput() ProjectEnvironmentRegistryCredentialPtrOutput {
	return i.ToProjectEnvironmentRegistryCredentialPtrOutputWithContext(context.Background())
}

func (i ProjectEnvironmentRegistryCredentialArgs) ToProjectEnvironmentRegistryCredentialPtrOutputWithContext(ctx context.Context) ProjectEnvironmentRegistryCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentRegistryCredentialOutput).ToProjectEnvironmentRegistryCredentialPtrOutputWithContext(ctx)
}

// ProjectEnvironmentRegistryCredentialPtrInput is an input type that accepts ProjectEnvironmentRegistryCredentialArgs, ProjectEnvironmentRegistryCredentialPtr and ProjectEnvironmentRegistryCredentialPtrOutput values.
// You can construct a concrete instance of `ProjectEnvironmentRegistryCredentialPtrInput` via:
//
//	        ProjectEnvironmentRegistryCredentialArgs{...}
//
//	or:
//
//	        nil
type ProjectEnvironmentRegistryCredentialPtrInput interface {
	pulumi.Input

	ToProjectEnvironmentRegistryCredentialPtrOutput() ProjectEnvironmentRegistryCredentialPtrOutput
	ToProjectEnvironmentRegistryCredentialPtrOutputWithContext(context.Context) ProjectEnvironmentRegistryCredentialPtrOutput
}

type projectEnvironmentRegistryCredentialPtrType ProjectEnvironmentRegistryCredentialArgs

func ProjectEnvironmentRegistryCredentialPtr(v *ProjectEnvironmentRegistryCredentialArgs) ProjectEnvironmentRegistryCredentialPtrInput {
	return (*projectEnvironmentRegistryCredentialPtrType)(v)
}

func (*projectEnvironmentRegistryCredentialPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectEnvironmentRegistryCredential)(nil)).Elem()
}

func (i *projectEnvironmentRegistryCredentialPtrType) ToProjectEnvironmentRegistryCredentialPtrOutput() ProjectEnvironmentRegistryCredentialPtrOutput {
	return i.ToProjectEnvironmentRegistryCredentialPtrOutputWithContext(context.Background())
}

func (i *projectEnvironmentRegistryCredentialPtrType) ToProjectEnvironmentRegistryCredentialPtrOutputWithContext(ctx context.Context) ProjectEnvironmentRegistryCredentialPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectEnvironmentRegistryCredentialPtrOutput)
}

type ProjectEnvironmentRegistryCredentialOutput struct{ *pulumi.OutputState }

func (ProjectEnvironmentRegistryCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectEnvironmentRegistryCredential)(nil)).Elem()
}

func (o ProjectEnvironmentRegistryCredentialOutput) ToProjectEnvironmentRegistryCredentialOutput() ProjectEnvironmentRegistryCredentialOutput {
	return o
}

func (o ProjectEnvironmentRegistryCredentialOutput) ToProjectEnvironmentRegistryCredentialOutputWithContext(ctx context.Context) ProjectEnvironmentRegistryCredentialOutput {
	return o
}

func (o ProjectEnvironmentRegistryCredentialOutput) ToProjectEnvironmentRegistryCredentialPtrOutput() ProjectEnvironmentRegistryCredentialPtrOutput {
	return o.ToProjectEnvironmentRegistryCredentialPtrOutputWithContext(context.Background())
}

func (o ProjectEnvironmentRegistryCredentialOutput) ToProjectEnvironmentRegistryCredentialPtrOutputWithContext(ctx context.Context) ProjectEnvironmentRegistryCredentialPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectEnvironmentRegistryCredential) *ProjectEnvironmentRegistryCredential {
		return &v
	}).(ProjectEnvironmentRegistryCredentialPtrOutput)
}

func (o ProjectEnvironmentRegistryCredentialOutput) Credential() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectEnvironmentRegistryCredential) string { return v.Credential }).(pulumi.StringOutput)
}

func (o ProjectEnvironmentRegistryCredentialOutput) CredentialProvider() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectEnvironmentRegistryCredential) string { return v.CredentialProvider }).(pulumi.StringOutput)
}

type ProjectEnvironmentRegistryCredentialPtrOutput struct{ *pulumi.OutputState }

func (ProjectEnvironmentRegistryCredentialPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectEnvironmentRegistryCredential)(nil)).Elem()
}

func (o ProjectEnvironmentRegistryCredentialPtrOutput) ToProjectEnvironmentRegistryCredentialPtrOutput() ProjectEnvironmentRegistryCredentialPtrOutput {
	return o
}

func (o ProjectEnvironmentRegistryCredentialPtrOutput) ToProjectEnvironmentRegistryCredentialPtrOutputWithContext(ctx context.Context) ProjectEnvironmentRegistryCredentialPtrOutput {
	return o
}

func (o ProjectEnvironmentRegistryCredentialPtrOutput) Elem() ProjectEnvironmentRegistryCredentialOutput {
	return o.ApplyT(func(v *ProjectEnvironmentRegistryCredential) ProjectEnvironmentRegistryCredential {
		if v != nil {
			return *v
		}
		var ret ProjectEnvironmentRegistryCredential
		return ret
	}).(ProjectEnvironmentRegistryCredentialOutput)
}

func (o ProjectEnvironmentRegistryCredentialPtrOutput) Credential() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectEnvironmentRegistryCredential) *string {
		if v == nil {
			return nil
		}
		return &v.Credential
	}).(pulumi.StringPtrOutput)
}

func (o ProjectEnvironmentRegistryCredentialPtrOutput) CredentialProvider() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectEnvironmentRegistryCredential) *string {
		if v == nil {
			return nil
		}
		return &v.CredentialProvider
	}).(pulumi.StringPtrOutput)
}

type ProjectFileSystemLocation struct {
	Identifier   *string `pulumi:"identifier"`
	Location     *string `pulumi:"location"`
	MountOptions *string `pulumi:"mountOptions"`
	MountPoint   *string `pulumi:"mountPoint"`
	Type         *string `pulumi:"type"`
}

// ProjectFileSystemLocationInput is an input type that accepts ProjectFileSystemLocationArgs and ProjectFileSystemLocationOutput values.
// You can construct a concrete instance of `ProjectFileSystemLocationInput` via:
//
//	ProjectFileSystemLocationArgs{...}
type ProjectFileSystemLocationInput interface {
	pulumi.Input

	ToProjectFileSystemLocationOutput() ProjectFileSystemLocationOutput
	ToProjectFileSystemLocationOutputWithContext(context.Context) ProjectFileSystemLocationOutput
}

type ProjectFileSystemLocationArgs struct {
	Identifier   pulumi.StringPtrInput `pulumi:"identifier"`
	Location     pulumi.StringPtrInput `pulumi:"location"`
	MountOptions pulumi.StringPtrInput `pulumi:"mountOptions"`
	MountPoint   pulumi.StringPtrInput `pulumi:"mountPoint"`
	Type         pulumi.StringPtrInput `pulumi:"type"`
}

func (ProjectFileSystemLocationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectFileSystemLocation)(nil)).Elem()
}

func (i ProjectFileSystemLocationArgs) ToProjectFileSystemLocationOutput() ProjectFileSystemLocationOutput {
	return i.ToProjectFileSystemLocationOutputWithContext(context.Background())
}

func (i ProjectFileSystemLocationArgs) ToProjectFileSystemLocationOutputWithContext(ctx context.Context) ProjectFileSystemLocationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectFileSystemLocationOutput)
}

// ProjectFileSystemLocationArrayInput is an input type that accepts ProjectFileSystemLocationArray and ProjectFileSystemLocationArrayOutput values.
// You can construct a concrete instance of `ProjectFileSystemLocationArrayInput` via:
//
//	ProjectFileSystemLocationArray{ ProjectFileSystemLocationArgs{...} }
type ProjectFileSystemLocationArrayInput interface {
	pulumi.Input

	ToProjectFileSystemLocationArrayOutput() ProjectFileSystemLocationArrayOutput
	ToProjectFileSystemLocationArrayOutputWithContext(context.Context) ProjectFileSystemLocationArrayOutput
}

type ProjectFileSystemLocationArray []ProjectFileSystemLocationInput

func (ProjectFileSystemLocationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectFileSystemLocation)(nil)).Elem()
}

func (i ProjectFileSystemLocationArray) ToProjectFileSystemLocationArrayOutput() ProjectFileSystemLocationArrayOutput {
	return i.ToProjectFileSystemLocationArrayOutputWithContext(context.Background())
}

func (i ProjectFileSystemLocationArray) ToProjectFileSystemLocationArrayOutputWithContext(ctx context.Context) ProjectFileSystemLocationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectFileSystemLocationArrayOutput)
}

type ProjectFileSystemLocationOutput struct{ *pulumi.OutputState }

func (ProjectFileSystemLocationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectFileSystemLocation)(nil)).Elem()
}

func (o ProjectFileSystemLocationOutput) ToProjectFileSystemLocationOutput() ProjectFileSystemLocationOutput {
	return o
}

func (o ProjectFileSystemLocationOutput) ToProjectFileSystemLocationOutputWithContext(ctx context.Context) ProjectFileSystemLocationOutput {
	return o
}

func (o ProjectFileSystemLocationOutput) Identifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectFileSystemLocation) *string { return v.Identifier }).(pulumi.StringPtrOutput)
}

func (o ProjectFileSystemLocationOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectFileSystemLocation) *string { return v.Location }).(pulumi.StringPtrOutput)
}

func (o ProjectFileSystemLocationOutput) MountOptions() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectFileSystemLocation) *string { return v.MountOptions }).(pulumi.StringPtrOutput)
}

func (o ProjectFileSystemLocationOutput) MountPoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectFileSystemLocation) *string { return v.MountPoint }).(pulumi.StringPtrOutput)
}

func (o ProjectFileSystemLocationOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectFileSystemLocation) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ProjectFileSystemLocationArrayOutput struct{ *pulumi.OutputState }

func (ProjectFileSystemLocationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectFileSystemLocation)(nil)).Elem()
}

func (o ProjectFileSystemLocationArrayOutput) ToProjectFileSystemLocationArrayOutput() ProjectFileSystemLocationArrayOutput {
	return o
}

func (o ProjectFileSystemLocationArrayOutput) ToProjectFileSystemLocationArrayOutputWithContext(ctx context.Context) ProjectFileSystemLocationArrayOutput {
	return o
}

func (o ProjectFileSystemLocationArrayOutput) Index(i pulumi.IntInput) ProjectFileSystemLocationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectFileSystemLocation {
		return vs[0].([]ProjectFileSystemLocation)[vs[1].(int)]
	}).(ProjectFileSystemLocationOutput)
}

type ProjectLogsConfig struct {
	CloudwatchLogs *ProjectLogsConfigCloudwatchLogs `pulumi:"cloudwatchLogs"`
	S3Logs         *ProjectLogsConfigS3Logs         `pulumi:"s3Logs"`
}

// ProjectLogsConfigInput is an input type that accepts ProjectLogsConfigArgs and ProjectLogsConfigOutput values.
// You can construct a concrete instance of `ProjectLogsConfigInput` via:
//
//	ProjectLogsConfigArgs{...}
type ProjectLogsConfigInput interface {
	pulumi.Input

	ToProjectLogsConfigOutput() ProjectLogsConfigOutput
	ToProjectLogsConfigOutputWithContext(context.Context) ProjectLogsConfigOutput
}

type ProjectLogsConfigArgs struct {
	CloudwatchLogs ProjectLogsConfigCloudwatchLogsPtrInput `pulumi:"cloudwatchLogs"`
	S3Logs         ProjectLogsConfigS3LogsPtrInput         `pulumi:"s3Logs"`
}

func (ProjectLogsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectLogsConfig)(nil)).Elem()
}

func (i ProjectLogsConfigArgs) ToProjectLogsConfigOutput() ProjectLogsConfigOutput {
	return i.ToProjectLogsConfigOutputWithContext(context.Background())
}

func (i ProjectLogsConfigArgs) ToProjectLogsConfigOutputWithContext(ctx context.Context) ProjectLogsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectLogsConfigOutput)
}

func (i ProjectLogsConfigArgs) ToProjectLogsConfigPtrOutput() ProjectLogsConfigPtrOutput {
	return i.ToProjectLogsConfigPtrOutputWithContext(context.Background())
}

func (i ProjectLogsConfigArgs) ToProjectLogsConfigPtrOutputWithContext(ctx context.Context) ProjectLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectLogsConfigOutput).ToProjectLogsConfigPtrOutputWithContext(ctx)
}

// ProjectLogsConfigPtrInput is an input type that accepts ProjectLogsConfigArgs, ProjectLogsConfigPtr and ProjectLogsConfigPtrOutput values.
// You can construct a concrete instance of `ProjectLogsConfigPtrInput` via:
//
//	        ProjectLogsConfigArgs{...}
//
//	or:
//
//	        nil
type ProjectLogsConfigPtrInput interface {
	pulumi.Input

	ToProjectLogsConfigPtrOutput() ProjectLogsConfigPtrOutput
	ToProjectLogsConfigPtrOutputWithContext(context.Context) ProjectLogsConfigPtrOutput
}

type projectLogsConfigPtrType ProjectLogsConfigArgs

func ProjectLogsConfigPtr(v *ProjectLogsConfigArgs) ProjectLogsConfigPtrInput {
	return (*projectLogsConfigPtrType)(v)
}

func (*projectLogsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectLogsConfig)(nil)).Elem()
}

func (i *projectLogsConfigPtrType) ToProjectLogsConfigPtrOutput() ProjectLogsConfigPtrOutput {
	return i.ToProjectLogsConfigPtrOutputWithContext(context.Background())
}

func (i *projectLogsConfigPtrType) ToProjectLogsConfigPtrOutputWithContext(ctx context.Context) ProjectLogsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectLogsConfigPtrOutput)
}

type ProjectLogsConfigOutput struct{ *pulumi.OutputState }

func (ProjectLogsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectLogsConfig)(nil)).Elem()
}

func (o ProjectLogsConfigOutput) ToProjectLogsConfigOutput() ProjectLogsConfigOutput {
	return o
}

func (o ProjectLogsConfigOutput) ToProjectLogsConfigOutputWithContext(ctx context.Context) ProjectLogsConfigOutput {
	return o
}

func (o ProjectLogsConfigOutput) ToProjectLogsConfigPtrOutput() ProjectLogsConfigPtrOutput {
	return o.ToProjectLogsConfigPtrOutputWithContext(context.Background())
}

func (o ProjectLogsConfigOutput) ToProjectLogsConfigPtrOutputWithContext(ctx context.Context) ProjectLogsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectLogsConfig) *ProjectLogsConfig {
		return &v
	}).(ProjectLogsConfigPtrOutput)
}

func (o ProjectLogsConfigOutput) CloudwatchLogs() ProjectLogsConfigCloudwatchLogsPtrOutput {
	return o.ApplyT(func(v ProjectLogsConfig) *ProjectLogsConfigCloudwatchLogs { return v.CloudwatchLogs }).(ProjectLogsConfigCloudwatchLogsPtrOutput)
}

func (o ProjectLogsConfigOutput) S3Logs() ProjectLogsConfigS3LogsPtrOutput {
	return o.ApplyT(func(v ProjectLogsConfig) *ProjectLogsConfigS3Logs { return v.S3Logs }).(ProjectLogsConfigS3LogsPtrOutput)
}

type ProjectLogsConfigPtrOutput struct{ *pulumi.OutputState }

func (ProjectLogsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectLogsConfig)(nil)).Elem()
}

func (o ProjectLogsConfigPtrOutput) ToProjectLogsConfigPtrOutput() ProjectLogsConfigPtrOutput {
	return o
}

func (o ProjectLogsConfigPtrOutput) ToProjectLogsConfigPtrOutputWithContext(ctx context.Context) ProjectLogsConfigPtrOutput {
	return o
}

func (o ProjectLogsConfigPtrOutput) Elem() ProjectLogsConfigOutput {
	return o.ApplyT(func(v *ProjectLogsConfig) ProjectLogsConfig {
		if v != nil {
			return *v
		}
		var ret ProjectLogsConfig
		return ret
	}).(ProjectLogsConfigOutput)
}

func (o ProjectLogsConfigPtrOutput) CloudwatchLogs() ProjectLogsConfigCloudwatchLogsPtrOutput {
	return o.ApplyT(func(v *ProjectLogsConfig) *ProjectLogsConfigCloudwatchLogs {
		if v == nil {
			return nil
		}
		return v.CloudwatchLogs
	}).(ProjectLogsConfigCloudwatchLogsPtrOutput)
}

func (o ProjectLogsConfigPtrOutput) S3Logs() ProjectLogsConfigS3LogsPtrOutput {
	return o.ApplyT(func(v *ProjectLogsConfig) *ProjectLogsConfigS3Logs {
		if v == nil {
			return nil
		}
		return v.S3Logs
	}).(ProjectLogsConfigS3LogsPtrOutput)
}

type ProjectLogsConfigCloudwatchLogs struct {
	GroupName  *string `pulumi:"groupName"`
	Status     *string `pulumi:"status"`
	StreamName *string `pulumi:"streamName"`
}

// ProjectLogsConfigCloudwatchLogsInput is an input type that accepts ProjectLogsConfigCloudwatchLogsArgs and ProjectLogsConfigCloudwatchLogsOutput values.
// You can construct a concrete instance of `ProjectLogsConfigCloudwatchLogsInput` via:
//
//	ProjectLogsConfigCloudwatchLogsArgs{...}
type ProjectLogsConfigCloudwatchLogsInput interface {
	pulumi.Input

	ToProjectLogsConfigCloudwatchLogsOutput() ProjectLogsConfigCloudwatchLogsOutput
	ToProjectLogsConfigCloudwatchLogsOutputWithContext(context.Context) ProjectLogsConfigCloudwatchLogsOutput
}

type ProjectLogsConfigCloudwatchLogsArgs struct {
	GroupName  pulumi.StringPtrInput `pulumi:"groupName"`
	Status     pulumi.StringPtrInput `pulumi:"status"`
	StreamName pulumi.StringPtrInput `pulumi:"streamName"`
}

func (ProjectLogsConfigCloudwatchLogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectLogsConfigCloudwatchLogs)(nil)).Elem()
}

func (i ProjectLogsConfigCloudwatchLogsArgs) ToProjectLogsConfigCloudwatchLogsOutput() ProjectLogsConfigCloudwatchLogsOutput {
	return i.ToProjectLogsConfigCloudwatchLogsOutputWithContext(context.Background())
}

func (i ProjectLogsConfigCloudwatchLogsArgs) ToProjectLogsConfigCloudwatchLogsOutputWithContext(ctx context.Context) ProjectLogsConfigCloudwatchLogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectLogsConfigCloudwatchLogsOutput)
}

func (i ProjectLogsConfigCloudwatchLogsArgs) ToProjectLogsConfigCloudwatchLogsPtrOutput() ProjectLogsConfigCloudwatchLogsPtrOutput {
	return i.ToProjectLogsConfigCloudwatchLogsPtrOutputWithContext(context.Background())
}

func (i ProjectLogsConfigCloudwatchLogsArgs) ToProjectLogsConfigCloudwatchLogsPtrOutputWithContext(ctx context.Context) ProjectLogsConfigCloudwatchLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectLogsConfigCloudwatchLogsOutput).ToProjectLogsConfigCloudwatchLogsPtrOutputWithContext(ctx)
}

// ProjectLogsConfigCloudwatchLogsPtrInput is an input type that accepts ProjectLogsConfigCloudwatchLogsArgs, ProjectLogsConfigCloudwatchLogsPtr and ProjectLogsConfigCloudwatchLogsPtrOutput values.
// You can construct a concrete instance of `ProjectLogsConfigCloudwatchLogsPtrInput` via:
//
//	        ProjectLogsConfigCloudwatchLogsArgs{...}
//
//	or:
//
//	        nil
type ProjectLogsConfigCloudwatchLogsPtrInput interface {
	pulumi.Input

	ToProjectLogsConfigCloudwatchLogsPtrOutput() ProjectLogsConfigCloudwatchLogsPtrOutput
	ToProjectLogsConfigCloudwatchLogsPtrOutputWithContext(context.Context) ProjectLogsConfigCloudwatchLogsPtrOutput
}

type projectLogsConfigCloudwatchLogsPtrType ProjectLogsConfigCloudwatchLogsArgs

func ProjectLogsConfigCloudwatchLogsPtr(v *ProjectLogsConfigCloudwatchLogsArgs) ProjectLogsConfigCloudwatchLogsPtrInput {
	return (*projectLogsConfigCloudwatchLogsPtrType)(v)
}

func (*projectLogsConfigCloudwatchLogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectLogsConfigCloudwatchLogs)(nil)).Elem()
}

func (i *projectLogsConfigCloudwatchLogsPtrType) ToProjectLogsConfigCloudwatchLogsPtrOutput() ProjectLogsConfigCloudwatchLogsPtrOutput {
	return i.ToProjectLogsConfigCloudwatchLogsPtrOutputWithContext(context.Background())
}

func (i *projectLogsConfigCloudwatchLogsPtrType) ToProjectLogsConfigCloudwatchLogsPtrOutputWithContext(ctx context.Context) ProjectLogsConfigCloudwatchLogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectLogsConfigCloudwatchLogsPtrOutput)
}

type ProjectLogsConfigCloudwatchLogsOutput struct{ *pulumi.OutputState }

func (ProjectLogsConfigCloudwatchLogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectLogsConfigCloudwatchLogs)(nil)).Elem()
}

func (o ProjectLogsConfigCloudwatchLogsOutput) ToProjectLogsConfigCloudwatchLogsOutput() ProjectLogsConfigCloudwatchLogsOutput {
	return o
}

func (o ProjectLogsConfigCloudwatchLogsOutput) ToProjectLogsConfigCloudwatchLogsOutputWithContext(ctx context.Context) ProjectLogsConfigCloudwatchLogsOutput {
	return o
}

func (o ProjectLogsConfigCloudwatchLogsOutput) ToProjectLogsConfigCloudwatchLogsPtrOutput() ProjectLogsConfigCloudwatchLogsPtrOutput {
	return o.ToProjectLogsConfigCloudwatchLogsPtrOutputWithContext(context.Background())
}

func (o ProjectLogsConfigCloudwatchLogsOutput) ToProjectLogsConfigCloudwatchLogsPtrOutputWithContext(ctx context.Context) ProjectLogsConfigCloudwatchLogsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectLogsConfigCloudwatchLogs) *ProjectLogsConfigCloudwatchLogs {
		return &v
	}).(ProjectLogsConfigCloudwatchLogsPtrOutput)
}

func (o ProjectLogsConfigCloudwatchLogsOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectLogsConfigCloudwatchLogs) *string { return v.GroupName }).(pulumi.StringPtrOutput)
}

func (o ProjectLogsConfigCloudwatchLogsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectLogsConfigCloudwatchLogs) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o ProjectLogsConfigCloudwatchLogsOutput) StreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectLogsConfigCloudwatchLogs) *string { return v.StreamName }).(pulumi.StringPtrOutput)
}

type ProjectLogsConfigCloudwatchLogsPtrOutput struct{ *pulumi.OutputState }

func (ProjectLogsConfigCloudwatchLogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectLogsConfigCloudwatchLogs)(nil)).Elem()
}

func (o ProjectLogsConfigCloudwatchLogsPtrOutput) ToProjectLogsConfigCloudwatchLogsPtrOutput() ProjectLogsConfigCloudwatchLogsPtrOutput {
	return o
}

func (o ProjectLogsConfigCloudwatchLogsPtrOutput) ToProjectLogsConfigCloudwatchLogsPtrOutputWithContext(ctx context.Context) ProjectLogsConfigCloudwatchLogsPtrOutput {
	return o
}

func (o ProjectLogsConfigCloudwatchLogsPtrOutput) Elem() ProjectLogsConfigCloudwatchLogsOutput {
	return o.ApplyT(func(v *ProjectLogsConfigCloudwatchLogs) ProjectLogsConfigCloudwatchLogs {
		if v != nil {
			return *v
		}
		var ret ProjectLogsConfigCloudwatchLogs
		return ret
	}).(ProjectLogsConfigCloudwatchLogsOutput)
}

func (o ProjectLogsConfigCloudwatchLogsPtrOutput) GroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectLogsConfigCloudwatchLogs) *string {
		if v == nil {
			return nil
		}
		return v.GroupName
	}).(pulumi.StringPtrOutput)
}

func (o ProjectLogsConfigCloudwatchLogsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectLogsConfigCloudwatchLogs) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

func (o ProjectLogsConfigCloudwatchLogsPtrOutput) StreamName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectLogsConfigCloudwatchLogs) *string {
		if v == nil {
			return nil
		}
		return v.StreamName
	}).(pulumi.StringPtrOutput)
}

type ProjectLogsConfigS3Logs struct {
	BucketOwnerAccess  *string `pulumi:"bucketOwnerAccess"`
	EncryptionDisabled *bool   `pulumi:"encryptionDisabled"`
	Location           *string `pulumi:"location"`
	Status             *string `pulumi:"status"`
}

// ProjectLogsConfigS3LogsInput is an input type that accepts ProjectLogsConfigS3LogsArgs and ProjectLogsConfigS3LogsOutput values.
// You can construct a concrete instance of `ProjectLogsConfigS3LogsInput` via:
//
//	ProjectLogsConfigS3LogsArgs{...}
type ProjectLogsConfigS3LogsInput interface {
	pulumi.Input

	ToProjectLogsConfigS3LogsOutput() ProjectLogsConfigS3LogsOutput
	ToProjectLogsConfigS3LogsOutputWithContext(context.Context) ProjectLogsConfigS3LogsOutput
}

type ProjectLogsConfigS3LogsArgs struct {
	BucketOwnerAccess  pulumi.StringPtrInput `pulumi:"bucketOwnerAccess"`
	EncryptionDisabled pulumi.BoolPtrInput   `pulumi:"encryptionDisabled"`
	Location           pulumi.StringPtrInput `pulumi:"location"`
	Status             pulumi.StringPtrInput `pulumi:"status"`
}

func (ProjectLogsConfigS3LogsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectLogsConfigS3Logs)(nil)).Elem()
}

func (i ProjectLogsConfigS3LogsArgs) ToProjectLogsConfigS3LogsOutput() ProjectLogsConfigS3LogsOutput {
	return i.ToProjectLogsConfigS3LogsOutputWithContext(context.Background())
}

func (i ProjectLogsConfigS3LogsArgs) ToProjectLogsConfigS3LogsOutputWithContext(ctx context.Context) ProjectLogsConfigS3LogsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectLogsConfigS3LogsOutput)
}

func (i ProjectLogsConfigS3LogsArgs) ToProjectLogsConfigS3LogsPtrOutput() ProjectLogsConfigS3LogsPtrOutput {
	return i.ToProjectLogsConfigS3LogsPtrOutputWithContext(context.Background())
}

func (i ProjectLogsConfigS3LogsArgs) ToProjectLogsConfigS3LogsPtrOutputWithContext(ctx context.Context) ProjectLogsConfigS3LogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectLogsConfigS3LogsOutput).ToProjectLogsConfigS3LogsPtrOutputWithContext(ctx)
}

// ProjectLogsConfigS3LogsPtrInput is an input type that accepts ProjectLogsConfigS3LogsArgs, ProjectLogsConfigS3LogsPtr and ProjectLogsConfigS3LogsPtrOutput values.
// You can construct a concrete instance of `ProjectLogsConfigS3LogsPtrInput` via:
//
//	        ProjectLogsConfigS3LogsArgs{...}
//
//	or:
//
//	        nil
type ProjectLogsConfigS3LogsPtrInput interface {
	pulumi.Input

	ToProjectLogsConfigS3LogsPtrOutput() ProjectLogsConfigS3LogsPtrOutput
	ToProjectLogsConfigS3LogsPtrOutputWithContext(context.Context) ProjectLogsConfigS3LogsPtrOutput
}

type projectLogsConfigS3LogsPtrType ProjectLogsConfigS3LogsArgs

func ProjectLogsConfigS3LogsPtr(v *ProjectLogsConfigS3LogsArgs) ProjectLogsConfigS3LogsPtrInput {
	return (*projectLogsConfigS3LogsPtrType)(v)
}

func (*projectLogsConfigS3LogsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectLogsConfigS3Logs)(nil)).Elem()
}

func (i *projectLogsConfigS3LogsPtrType) ToProjectLogsConfigS3LogsPtrOutput() ProjectLogsConfigS3LogsPtrOutput {
	return i.ToProjectLogsConfigS3LogsPtrOutputWithContext(context.Background())
}

func (i *projectLogsConfigS3LogsPtrType) ToProjectLogsConfigS3LogsPtrOutputWithContext(ctx context.Context) ProjectLogsConfigS3LogsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectLogsConfigS3LogsPtrOutput)
}

type ProjectLogsConfigS3LogsOutput struct{ *pulumi.OutputState }

func (ProjectLogsConfigS3LogsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectLogsConfigS3Logs)(nil)).Elem()
}

func (o ProjectLogsConfigS3LogsOutput) ToProjectLogsConfigS3LogsOutput() ProjectLogsConfigS3LogsOutput {
	return o
}

func (o ProjectLogsConfigS3LogsOutput) ToProjectLogsConfigS3LogsOutputWithContext(ctx context.Context) ProjectLogsConfigS3LogsOutput {
	return o
}

func (o ProjectLogsConfigS3LogsOutput) ToProjectLogsConfigS3LogsPtrOutput() ProjectLogsConfigS3LogsPtrOutput {
	return o.ToProjectLogsConfigS3LogsPtrOutputWithContext(context.Background())
}

func (o ProjectLogsConfigS3LogsOutput) ToProjectLogsConfigS3LogsPtrOutputWithContext(ctx context.Context) ProjectLogsConfigS3LogsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectLogsConfigS3Logs) *ProjectLogsConfigS3Logs {
		return &v
	}).(ProjectLogsConfigS3LogsPtrOutput)
}

func (o ProjectLogsConfigS3LogsOutput) BucketOwnerAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectLogsConfigS3Logs) *string { return v.BucketOwnerAccess }).(pulumi.StringPtrOutput)
}

func (o ProjectLogsConfigS3LogsOutput) EncryptionDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectLogsConfigS3Logs) *bool { return v.EncryptionDisabled }).(pulumi.BoolPtrOutput)
}

func (o ProjectLogsConfigS3LogsOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectLogsConfigS3Logs) *string { return v.Location }).(pulumi.StringPtrOutput)
}

func (o ProjectLogsConfigS3LogsOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectLogsConfigS3Logs) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ProjectLogsConfigS3LogsPtrOutput struct{ *pulumi.OutputState }

func (ProjectLogsConfigS3LogsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectLogsConfigS3Logs)(nil)).Elem()
}

func (o ProjectLogsConfigS3LogsPtrOutput) ToProjectLogsConfigS3LogsPtrOutput() ProjectLogsConfigS3LogsPtrOutput {
	return o
}

func (o ProjectLogsConfigS3LogsPtrOutput) ToProjectLogsConfigS3LogsPtrOutputWithContext(ctx context.Context) ProjectLogsConfigS3LogsPtrOutput {
	return o
}

func (o ProjectLogsConfigS3LogsPtrOutput) Elem() ProjectLogsConfigS3LogsOutput {
	return o.ApplyT(func(v *ProjectLogsConfigS3Logs) ProjectLogsConfigS3Logs {
		if v != nil {
			return *v
		}
		var ret ProjectLogsConfigS3Logs
		return ret
	}).(ProjectLogsConfigS3LogsOutput)
}

func (o ProjectLogsConfigS3LogsPtrOutput) BucketOwnerAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectLogsConfigS3Logs) *string {
		if v == nil {
			return nil
		}
		return v.BucketOwnerAccess
	}).(pulumi.StringPtrOutput)
}

func (o ProjectLogsConfigS3LogsPtrOutput) EncryptionDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectLogsConfigS3Logs) *bool {
		if v == nil {
			return nil
		}
		return v.EncryptionDisabled
	}).(pulumi.BoolPtrOutput)
}

func (o ProjectLogsConfigS3LogsPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectLogsConfigS3Logs) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

func (o ProjectLogsConfigS3LogsPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectLogsConfigS3Logs) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type ProjectSecondaryArtifact struct {
	ArtifactIdentifier   string  `pulumi:"artifactIdentifier"`
	BucketOwnerAccess    *string `pulumi:"bucketOwnerAccess"`
	EncryptionDisabled   *bool   `pulumi:"encryptionDisabled"`
	Location             *string `pulumi:"location"`
	Name                 *string `pulumi:"name"`
	NamespaceType        *string `pulumi:"namespaceType"`
	OverrideArtifactName *bool   `pulumi:"overrideArtifactName"`
	Packaging            *string `pulumi:"packaging"`
	Path                 *string `pulumi:"path"`
	Type                 string  `pulumi:"type"`
}

// ProjectSecondaryArtifactInput is an input type that accepts ProjectSecondaryArtifactArgs and ProjectSecondaryArtifactOutput values.
// You can construct a concrete instance of `ProjectSecondaryArtifactInput` via:
//
//	ProjectSecondaryArtifactArgs{...}
type ProjectSecondaryArtifactInput interface {
	pulumi.Input

	ToProjectSecondaryArtifactOutput() ProjectSecondaryArtifactOutput
	ToProjectSecondaryArtifactOutputWithContext(context.Context) ProjectSecondaryArtifactOutput
}

type ProjectSecondaryArtifactArgs struct {
	ArtifactIdentifier   pulumi.StringInput    `pulumi:"artifactIdentifier"`
	BucketOwnerAccess    pulumi.StringPtrInput `pulumi:"bucketOwnerAccess"`
	EncryptionDisabled   pulumi.BoolPtrInput   `pulumi:"encryptionDisabled"`
	Location             pulumi.StringPtrInput `pulumi:"location"`
	Name                 pulumi.StringPtrInput `pulumi:"name"`
	NamespaceType        pulumi.StringPtrInput `pulumi:"namespaceType"`
	OverrideArtifactName pulumi.BoolPtrInput   `pulumi:"overrideArtifactName"`
	Packaging            pulumi.StringPtrInput `pulumi:"packaging"`
	Path                 pulumi.StringPtrInput `pulumi:"path"`
	Type                 pulumi.StringInput    `pulumi:"type"`
}

func (ProjectSecondaryArtifactArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSecondaryArtifact)(nil)).Elem()
}

func (i ProjectSecondaryArtifactArgs) ToProjectSecondaryArtifactOutput() ProjectSecondaryArtifactOutput {
	return i.ToProjectSecondaryArtifactOutputWithContext(context.Background())
}

func (i ProjectSecondaryArtifactArgs) ToProjectSecondaryArtifactOutputWithContext(ctx context.Context) ProjectSecondaryArtifactOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSecondaryArtifactOutput)
}

// ProjectSecondaryArtifactArrayInput is an input type that accepts ProjectSecondaryArtifactArray and ProjectSecondaryArtifactArrayOutput values.
// You can construct a concrete instance of `ProjectSecondaryArtifactArrayInput` via:
//
//	ProjectSecondaryArtifactArray{ ProjectSecondaryArtifactArgs{...} }
type ProjectSecondaryArtifactArrayInput interface {
	pulumi.Input

	ToProjectSecondaryArtifactArrayOutput() ProjectSecondaryArtifactArrayOutput
	ToProjectSecondaryArtifactArrayOutputWithContext(context.Context) ProjectSecondaryArtifactArrayOutput
}

type ProjectSecondaryArtifactArray []ProjectSecondaryArtifactInput

func (ProjectSecondaryArtifactArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSecondaryArtifact)(nil)).Elem()
}

func (i ProjectSecondaryArtifactArray) ToProjectSecondaryArtifactArrayOutput() ProjectSecondaryArtifactArrayOutput {
	return i.ToProjectSecondaryArtifactArrayOutputWithContext(context.Background())
}

func (i ProjectSecondaryArtifactArray) ToProjectSecondaryArtifactArrayOutputWithContext(ctx context.Context) ProjectSecondaryArtifactArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSecondaryArtifactArrayOutput)
}

type ProjectSecondaryArtifactOutput struct{ *pulumi.OutputState }

func (ProjectSecondaryArtifactOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSecondaryArtifact)(nil)).Elem()
}

func (o ProjectSecondaryArtifactOutput) ToProjectSecondaryArtifactOutput() ProjectSecondaryArtifactOutput {
	return o
}

func (o ProjectSecondaryArtifactOutput) ToProjectSecondaryArtifactOutputWithContext(ctx context.Context) ProjectSecondaryArtifactOutput {
	return o
}

func (o ProjectSecondaryArtifactOutput) ArtifactIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectSecondaryArtifact) string { return v.ArtifactIdentifier }).(pulumi.StringOutput)
}

func (o ProjectSecondaryArtifactOutput) BucketOwnerAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSecondaryArtifact) *string { return v.BucketOwnerAccess }).(pulumi.StringPtrOutput)
}

func (o ProjectSecondaryArtifactOutput) EncryptionDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectSecondaryArtifact) *bool { return v.EncryptionDisabled }).(pulumi.BoolPtrOutput)
}

func (o ProjectSecondaryArtifactOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSecondaryArtifact) *string { return v.Location }).(pulumi.StringPtrOutput)
}

func (o ProjectSecondaryArtifactOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSecondaryArtifact) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ProjectSecondaryArtifactOutput) NamespaceType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSecondaryArtifact) *string { return v.NamespaceType }).(pulumi.StringPtrOutput)
}

func (o ProjectSecondaryArtifactOutput) OverrideArtifactName() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectSecondaryArtifact) *bool { return v.OverrideArtifactName }).(pulumi.BoolPtrOutput)
}

func (o ProjectSecondaryArtifactOutput) Packaging() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSecondaryArtifact) *string { return v.Packaging }).(pulumi.StringPtrOutput)
}

func (o ProjectSecondaryArtifactOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSecondaryArtifact) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o ProjectSecondaryArtifactOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectSecondaryArtifact) string { return v.Type }).(pulumi.StringOutput)
}

type ProjectSecondaryArtifactArrayOutput struct{ *pulumi.OutputState }

func (ProjectSecondaryArtifactArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSecondaryArtifact)(nil)).Elem()
}

func (o ProjectSecondaryArtifactArrayOutput) ToProjectSecondaryArtifactArrayOutput() ProjectSecondaryArtifactArrayOutput {
	return o
}

func (o ProjectSecondaryArtifactArrayOutput) ToProjectSecondaryArtifactArrayOutputWithContext(ctx context.Context) ProjectSecondaryArtifactArrayOutput {
	return o
}

func (o ProjectSecondaryArtifactArrayOutput) Index(i pulumi.IntInput) ProjectSecondaryArtifactOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectSecondaryArtifact {
		return vs[0].([]ProjectSecondaryArtifact)[vs[1].(int)]
	}).(ProjectSecondaryArtifactOutput)
}

type ProjectSecondarySource struct {
	// Deprecated: Use the aws_codebuild_source_credential resource instead
	Auth                *ProjectSecondarySourceAuth                `pulumi:"auth"`
	BuildStatusConfig   *ProjectSecondarySourceBuildStatusConfig   `pulumi:"buildStatusConfig"`
	Buildspec           *string                                    `pulumi:"buildspec"`
	GitCloneDepth       *int                                       `pulumi:"gitCloneDepth"`
	GitSubmodulesConfig *ProjectSecondarySourceGitSubmodulesConfig `pulumi:"gitSubmodulesConfig"`
	InsecureSsl         *bool                                      `pulumi:"insecureSsl"`
	Location            *string                                    `pulumi:"location"`
	ReportBuildStatus   *bool                                      `pulumi:"reportBuildStatus"`
	SourceIdentifier    string                                     `pulumi:"sourceIdentifier"`
	Type                string                                     `pulumi:"type"`
}

// ProjectSecondarySourceInput is an input type that accepts ProjectSecondarySourceArgs and ProjectSecondarySourceOutput values.
// You can construct a concrete instance of `ProjectSecondarySourceInput` via:
//
//	ProjectSecondarySourceArgs{...}
type ProjectSecondarySourceInput interface {
	pulumi.Input

	ToProjectSecondarySourceOutput() ProjectSecondarySourceOutput
	ToProjectSecondarySourceOutputWithContext(context.Context) ProjectSecondarySourceOutput
}

type ProjectSecondarySourceArgs struct {
	// Deprecated: Use the aws_codebuild_source_credential resource instead
	Auth                ProjectSecondarySourceAuthPtrInput                `pulumi:"auth"`
	BuildStatusConfig   ProjectSecondarySourceBuildStatusConfigPtrInput   `pulumi:"buildStatusConfig"`
	Buildspec           pulumi.StringPtrInput                             `pulumi:"buildspec"`
	GitCloneDepth       pulumi.IntPtrInput                                `pulumi:"gitCloneDepth"`
	GitSubmodulesConfig ProjectSecondarySourceGitSubmodulesConfigPtrInput `pulumi:"gitSubmodulesConfig"`
	InsecureSsl         pulumi.BoolPtrInput                               `pulumi:"insecureSsl"`
	Location            pulumi.StringPtrInput                             `pulumi:"location"`
	ReportBuildStatus   pulumi.BoolPtrInput                               `pulumi:"reportBuildStatus"`
	SourceIdentifier    pulumi.StringInput                                `pulumi:"sourceIdentifier"`
	Type                pulumi.StringInput                                `pulumi:"type"`
}

func (ProjectSecondarySourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSecondarySource)(nil)).Elem()
}

func (i ProjectSecondarySourceArgs) ToProjectSecondarySourceOutput() ProjectSecondarySourceOutput {
	return i.ToProjectSecondarySourceOutputWithContext(context.Background())
}

func (i ProjectSecondarySourceArgs) ToProjectSecondarySourceOutputWithContext(ctx context.Context) ProjectSecondarySourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSecondarySourceOutput)
}

// ProjectSecondarySourceArrayInput is an input type that accepts ProjectSecondarySourceArray and ProjectSecondarySourceArrayOutput values.
// You can construct a concrete instance of `ProjectSecondarySourceArrayInput` via:
//
//	ProjectSecondarySourceArray{ ProjectSecondarySourceArgs{...} }
type ProjectSecondarySourceArrayInput interface {
	pulumi.Input

	ToProjectSecondarySourceArrayOutput() ProjectSecondarySourceArrayOutput
	ToProjectSecondarySourceArrayOutputWithContext(context.Context) ProjectSecondarySourceArrayOutput
}

type ProjectSecondarySourceArray []ProjectSecondarySourceInput

func (ProjectSecondarySourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSecondarySource)(nil)).Elem()
}

func (i ProjectSecondarySourceArray) ToProjectSecondarySourceArrayOutput() ProjectSecondarySourceArrayOutput {
	return i.ToProjectSecondarySourceArrayOutputWithContext(context.Background())
}

func (i ProjectSecondarySourceArray) ToProjectSecondarySourceArrayOutputWithContext(ctx context.Context) ProjectSecondarySourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSecondarySourceArrayOutput)
}

type ProjectSecondarySourceOutput struct{ *pulumi.OutputState }

func (ProjectSecondarySourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSecondarySource)(nil)).Elem()
}

func (o ProjectSecondarySourceOutput) ToProjectSecondarySourceOutput() ProjectSecondarySourceOutput {
	return o
}

func (o ProjectSecondarySourceOutput) ToProjectSecondarySourceOutputWithContext(ctx context.Context) ProjectSecondarySourceOutput {
	return o
}

// Deprecated: Use the aws_codebuild_source_credential resource instead
func (o ProjectSecondarySourceOutput) Auth() ProjectSecondarySourceAuthPtrOutput {
	return o.ApplyT(func(v ProjectSecondarySource) *ProjectSecondarySourceAuth { return v.Auth }).(ProjectSecondarySourceAuthPtrOutput)
}

func (o ProjectSecondarySourceOutput) BuildStatusConfig() ProjectSecondarySourceBuildStatusConfigPtrOutput {
	return o.ApplyT(func(v ProjectSecondarySource) *ProjectSecondarySourceBuildStatusConfig { return v.BuildStatusConfig }).(ProjectSecondarySourceBuildStatusConfigPtrOutput)
}

func (o ProjectSecondarySourceOutput) Buildspec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSecondarySource) *string { return v.Buildspec }).(pulumi.StringPtrOutput)
}

func (o ProjectSecondarySourceOutput) GitCloneDepth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectSecondarySource) *int { return v.GitCloneDepth }).(pulumi.IntPtrOutput)
}

func (o ProjectSecondarySourceOutput) GitSubmodulesConfig() ProjectSecondarySourceGitSubmodulesConfigPtrOutput {
	return o.ApplyT(func(v ProjectSecondarySource) *ProjectSecondarySourceGitSubmodulesConfig {
		return v.GitSubmodulesConfig
	}).(ProjectSecondarySourceGitSubmodulesConfigPtrOutput)
}

func (o ProjectSecondarySourceOutput) InsecureSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectSecondarySource) *bool { return v.InsecureSsl }).(pulumi.BoolPtrOutput)
}

func (o ProjectSecondarySourceOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSecondarySource) *string { return v.Location }).(pulumi.StringPtrOutput)
}

func (o ProjectSecondarySourceOutput) ReportBuildStatus() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectSecondarySource) *bool { return v.ReportBuildStatus }).(pulumi.BoolPtrOutput)
}

func (o ProjectSecondarySourceOutput) SourceIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectSecondarySource) string { return v.SourceIdentifier }).(pulumi.StringOutput)
}

func (o ProjectSecondarySourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectSecondarySource) string { return v.Type }).(pulumi.StringOutput)
}

type ProjectSecondarySourceArrayOutput struct{ *pulumi.OutputState }

func (ProjectSecondarySourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSecondarySource)(nil)).Elem()
}

func (o ProjectSecondarySourceArrayOutput) ToProjectSecondarySourceArrayOutput() ProjectSecondarySourceArrayOutput {
	return o
}

func (o ProjectSecondarySourceArrayOutput) ToProjectSecondarySourceArrayOutputWithContext(ctx context.Context) ProjectSecondarySourceArrayOutput {
	return o
}

func (o ProjectSecondarySourceArrayOutput) Index(i pulumi.IntInput) ProjectSecondarySourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectSecondarySource {
		return vs[0].([]ProjectSecondarySource)[vs[1].(int)]
	}).(ProjectSecondarySourceOutput)
}

type ProjectSecondarySourceAuth struct {
	// Deprecated: Use the aws_codebuild_source_credential resource instead
	Resource *string `pulumi:"resource"`
	// Deprecated: Use the aws_codebuild_source_credential resource instead
	Type string `pulumi:"type"`
}

// ProjectSecondarySourceAuthInput is an input type that accepts ProjectSecondarySourceAuthArgs and ProjectSecondarySourceAuthOutput values.
// You can construct a concrete instance of `ProjectSecondarySourceAuthInput` via:
//
//	ProjectSecondarySourceAuthArgs{...}
type ProjectSecondarySourceAuthInput interface {
	pulumi.Input

	ToProjectSecondarySourceAuthOutput() ProjectSecondarySourceAuthOutput
	ToProjectSecondarySourceAuthOutputWithContext(context.Context) ProjectSecondarySourceAuthOutput
}

type ProjectSecondarySourceAuthArgs struct {
	// Deprecated: Use the aws_codebuild_source_credential resource instead
	Resource pulumi.StringPtrInput `pulumi:"resource"`
	// Deprecated: Use the aws_codebuild_source_credential resource instead
	Type pulumi.StringInput `pulumi:"type"`
}

func (ProjectSecondarySourceAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSecondarySourceAuth)(nil)).Elem()
}

func (i ProjectSecondarySourceAuthArgs) ToProjectSecondarySourceAuthOutput() ProjectSecondarySourceAuthOutput {
	return i.ToProjectSecondarySourceAuthOutputWithContext(context.Background())
}

func (i ProjectSecondarySourceAuthArgs) ToProjectSecondarySourceAuthOutputWithContext(ctx context.Context) ProjectSecondarySourceAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSecondarySourceAuthOutput)
}

func (i ProjectSecondarySourceAuthArgs) ToProjectSecondarySourceAuthPtrOutput() ProjectSecondarySourceAuthPtrOutput {
	return i.ToProjectSecondarySourceAuthPtrOutputWithContext(context.Background())
}

func (i ProjectSecondarySourceAuthArgs) ToProjectSecondarySourceAuthPtrOutputWithContext(ctx context.Context) ProjectSecondarySourceAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSecondarySourceAuthOutput).ToProjectSecondarySourceAuthPtrOutputWithContext(ctx)
}

// ProjectSecondarySourceAuthPtrInput is an input type that accepts ProjectSecondarySourceAuthArgs, ProjectSecondarySourceAuthPtr and ProjectSecondarySourceAuthPtrOutput values.
// You can construct a concrete instance of `ProjectSecondarySourceAuthPtrInput` via:
//
//	        ProjectSecondarySourceAuthArgs{...}
//
//	or:
//
//	        nil
type ProjectSecondarySourceAuthPtrInput interface {
	pulumi.Input

	ToProjectSecondarySourceAuthPtrOutput() ProjectSecondarySourceAuthPtrOutput
	ToProjectSecondarySourceAuthPtrOutputWithContext(context.Context) ProjectSecondarySourceAuthPtrOutput
}

type projectSecondarySourceAuthPtrType ProjectSecondarySourceAuthArgs

func ProjectSecondarySourceAuthPtr(v *ProjectSecondarySourceAuthArgs) ProjectSecondarySourceAuthPtrInput {
	return (*projectSecondarySourceAuthPtrType)(v)
}

func (*projectSecondarySourceAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSecondarySourceAuth)(nil)).Elem()
}

func (i *projectSecondarySourceAuthPtrType) ToProjectSecondarySourceAuthPtrOutput() ProjectSecondarySourceAuthPtrOutput {
	return i.ToProjectSecondarySourceAuthPtrOutputWithContext(context.Background())
}

func (i *projectSecondarySourceAuthPtrType) ToProjectSecondarySourceAuthPtrOutputWithContext(ctx context.Context) ProjectSecondarySourceAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSecondarySourceAuthPtrOutput)
}

type ProjectSecondarySourceAuthOutput struct{ *pulumi.OutputState }

func (ProjectSecondarySourceAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSecondarySourceAuth)(nil)).Elem()
}

func (o ProjectSecondarySourceAuthOutput) ToProjectSecondarySourceAuthOutput() ProjectSecondarySourceAuthOutput {
	return o
}

func (o ProjectSecondarySourceAuthOutput) ToProjectSecondarySourceAuthOutputWithContext(ctx context.Context) ProjectSecondarySourceAuthOutput {
	return o
}

func (o ProjectSecondarySourceAuthOutput) ToProjectSecondarySourceAuthPtrOutput() ProjectSecondarySourceAuthPtrOutput {
	return o.ToProjectSecondarySourceAuthPtrOutputWithContext(context.Background())
}

func (o ProjectSecondarySourceAuthOutput) ToProjectSecondarySourceAuthPtrOutputWithContext(ctx context.Context) ProjectSecondarySourceAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectSecondarySourceAuth) *ProjectSecondarySourceAuth {
		return &v
	}).(ProjectSecondarySourceAuthPtrOutput)
}

// Deprecated: Use the aws_codebuild_source_credential resource instead
func (o ProjectSecondarySourceAuthOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSecondarySourceAuth) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

// Deprecated: Use the aws_codebuild_source_credential resource instead
func (o ProjectSecondarySourceAuthOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectSecondarySourceAuth) string { return v.Type }).(pulumi.StringOutput)
}

type ProjectSecondarySourceAuthPtrOutput struct{ *pulumi.OutputState }

func (ProjectSecondarySourceAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSecondarySourceAuth)(nil)).Elem()
}

func (o ProjectSecondarySourceAuthPtrOutput) ToProjectSecondarySourceAuthPtrOutput() ProjectSecondarySourceAuthPtrOutput {
	return o
}

func (o ProjectSecondarySourceAuthPtrOutput) ToProjectSecondarySourceAuthPtrOutputWithContext(ctx context.Context) ProjectSecondarySourceAuthPtrOutput {
	return o
}

func (o ProjectSecondarySourceAuthPtrOutput) Elem() ProjectSecondarySourceAuthOutput {
	return o.ApplyT(func(v *ProjectSecondarySourceAuth) ProjectSecondarySourceAuth {
		if v != nil {
			return *v
		}
		var ret ProjectSecondarySourceAuth
		return ret
	}).(ProjectSecondarySourceAuthOutput)
}

// Deprecated: Use the aws_codebuild_source_credential resource instead
func (o ProjectSecondarySourceAuthPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSecondarySourceAuth) *string {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

// Deprecated: Use the aws_codebuild_source_credential resource instead
func (o ProjectSecondarySourceAuthPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSecondarySourceAuth) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ProjectSecondarySourceBuildStatusConfig struct {
	Context   *string `pulumi:"context"`
	TargetUrl *string `pulumi:"targetUrl"`
}

// ProjectSecondarySourceBuildStatusConfigInput is an input type that accepts ProjectSecondarySourceBuildStatusConfigArgs and ProjectSecondarySourceBuildStatusConfigOutput values.
// You can construct a concrete instance of `ProjectSecondarySourceBuildStatusConfigInput` via:
//
//	ProjectSecondarySourceBuildStatusConfigArgs{...}
type ProjectSecondarySourceBuildStatusConfigInput interface {
	pulumi.Input

	ToProjectSecondarySourceBuildStatusConfigOutput() ProjectSecondarySourceBuildStatusConfigOutput
	ToProjectSecondarySourceBuildStatusConfigOutputWithContext(context.Context) ProjectSecondarySourceBuildStatusConfigOutput
}

type ProjectSecondarySourceBuildStatusConfigArgs struct {
	Context   pulumi.StringPtrInput `pulumi:"context"`
	TargetUrl pulumi.StringPtrInput `pulumi:"targetUrl"`
}

func (ProjectSecondarySourceBuildStatusConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSecondarySourceBuildStatusConfig)(nil)).Elem()
}

func (i ProjectSecondarySourceBuildStatusConfigArgs) ToProjectSecondarySourceBuildStatusConfigOutput() ProjectSecondarySourceBuildStatusConfigOutput {
	return i.ToProjectSecondarySourceBuildStatusConfigOutputWithContext(context.Background())
}

func (i ProjectSecondarySourceBuildStatusConfigArgs) ToProjectSecondarySourceBuildStatusConfigOutputWithContext(ctx context.Context) ProjectSecondarySourceBuildStatusConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSecondarySourceBuildStatusConfigOutput)
}

func (i ProjectSecondarySourceBuildStatusConfigArgs) ToProjectSecondarySourceBuildStatusConfigPtrOutput() ProjectSecondarySourceBuildStatusConfigPtrOutput {
	return i.ToProjectSecondarySourceBuildStatusConfigPtrOutputWithContext(context.Background())
}

func (i ProjectSecondarySourceBuildStatusConfigArgs) ToProjectSecondarySourceBuildStatusConfigPtrOutputWithContext(ctx context.Context) ProjectSecondarySourceBuildStatusConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSecondarySourceBuildStatusConfigOutput).ToProjectSecondarySourceBuildStatusConfigPtrOutputWithContext(ctx)
}

// ProjectSecondarySourceBuildStatusConfigPtrInput is an input type that accepts ProjectSecondarySourceBuildStatusConfigArgs, ProjectSecondarySourceBuildStatusConfigPtr and ProjectSecondarySourceBuildStatusConfigPtrOutput values.
// You can construct a concrete instance of `ProjectSecondarySourceBuildStatusConfigPtrInput` via:
//
//	        ProjectSecondarySourceBuildStatusConfigArgs{...}
//
//	or:
//
//	        nil
type ProjectSecondarySourceBuildStatusConfigPtrInput interface {
	pulumi.Input

	ToProjectSecondarySourceBuildStatusConfigPtrOutput() ProjectSecondarySourceBuildStatusConfigPtrOutput
	ToProjectSecondarySourceBuildStatusConfigPtrOutputWithContext(context.Context) ProjectSecondarySourceBuildStatusConfigPtrOutput
}

type projectSecondarySourceBuildStatusConfigPtrType ProjectSecondarySourceBuildStatusConfigArgs

func ProjectSecondarySourceBuildStatusConfigPtr(v *ProjectSecondarySourceBuildStatusConfigArgs) ProjectSecondarySourceBuildStatusConfigPtrInput {
	return (*projectSecondarySourceBuildStatusConfigPtrType)(v)
}

func (*projectSecondarySourceBuildStatusConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSecondarySourceBuildStatusConfig)(nil)).Elem()
}

func (i *projectSecondarySourceBuildStatusConfigPtrType) ToProjectSecondarySourceBuildStatusConfigPtrOutput() ProjectSecondarySourceBuildStatusConfigPtrOutput {
	return i.ToProjectSecondarySourceBuildStatusConfigPtrOutputWithContext(context.Background())
}

func (i *projectSecondarySourceBuildStatusConfigPtrType) ToProjectSecondarySourceBuildStatusConfigPtrOutputWithContext(ctx context.Context) ProjectSecondarySourceBuildStatusConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSecondarySourceBuildStatusConfigPtrOutput)
}

type ProjectSecondarySourceBuildStatusConfigOutput struct{ *pulumi.OutputState }

func (ProjectSecondarySourceBuildStatusConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSecondarySourceBuildStatusConfig)(nil)).Elem()
}

func (o ProjectSecondarySourceBuildStatusConfigOutput) ToProjectSecondarySourceBuildStatusConfigOutput() ProjectSecondarySourceBuildStatusConfigOutput {
	return o
}

func (o ProjectSecondarySourceBuildStatusConfigOutput) ToProjectSecondarySourceBuildStatusConfigOutputWithContext(ctx context.Context) ProjectSecondarySourceBuildStatusConfigOutput {
	return o
}

func (o ProjectSecondarySourceBuildStatusConfigOutput) ToProjectSecondarySourceBuildStatusConfigPtrOutput() ProjectSecondarySourceBuildStatusConfigPtrOutput {
	return o.ToProjectSecondarySourceBuildStatusConfigPtrOutputWithContext(context.Background())
}

func (o ProjectSecondarySourceBuildStatusConfigOutput) ToProjectSecondarySourceBuildStatusConfigPtrOutputWithContext(ctx context.Context) ProjectSecondarySourceBuildStatusConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectSecondarySourceBuildStatusConfig) *ProjectSecondarySourceBuildStatusConfig {
		return &v
	}).(ProjectSecondarySourceBuildStatusConfigPtrOutput)
}

func (o ProjectSecondarySourceBuildStatusConfigOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSecondarySourceBuildStatusConfig) *string { return v.Context }).(pulumi.StringPtrOutput)
}

func (o ProjectSecondarySourceBuildStatusConfigOutput) TargetUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSecondarySourceBuildStatusConfig) *string { return v.TargetUrl }).(pulumi.StringPtrOutput)
}

type ProjectSecondarySourceBuildStatusConfigPtrOutput struct{ *pulumi.OutputState }

func (ProjectSecondarySourceBuildStatusConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSecondarySourceBuildStatusConfig)(nil)).Elem()
}

func (o ProjectSecondarySourceBuildStatusConfigPtrOutput) ToProjectSecondarySourceBuildStatusConfigPtrOutput() ProjectSecondarySourceBuildStatusConfigPtrOutput {
	return o
}

func (o ProjectSecondarySourceBuildStatusConfigPtrOutput) ToProjectSecondarySourceBuildStatusConfigPtrOutputWithContext(ctx context.Context) ProjectSecondarySourceBuildStatusConfigPtrOutput {
	return o
}

func (o ProjectSecondarySourceBuildStatusConfigPtrOutput) Elem() ProjectSecondarySourceBuildStatusConfigOutput {
	return o.ApplyT(func(v *ProjectSecondarySourceBuildStatusConfig) ProjectSecondarySourceBuildStatusConfig {
		if v != nil {
			return *v
		}
		var ret ProjectSecondarySourceBuildStatusConfig
		return ret
	}).(ProjectSecondarySourceBuildStatusConfigOutput)
}

func (o ProjectSecondarySourceBuildStatusConfigPtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSecondarySourceBuildStatusConfig) *string {
		if v == nil {
			return nil
		}
		return v.Context
	}).(pulumi.StringPtrOutput)
}

func (o ProjectSecondarySourceBuildStatusConfigPtrOutput) TargetUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSecondarySourceBuildStatusConfig) *string {
		if v == nil {
			return nil
		}
		return v.TargetUrl
	}).(pulumi.StringPtrOutput)
}

type ProjectSecondarySourceGitSubmodulesConfig struct {
	FetchSubmodules bool `pulumi:"fetchSubmodules"`
}

// ProjectSecondarySourceGitSubmodulesConfigInput is an input type that accepts ProjectSecondarySourceGitSubmodulesConfigArgs and ProjectSecondarySourceGitSubmodulesConfigOutput values.
// You can construct a concrete instance of `ProjectSecondarySourceGitSubmodulesConfigInput` via:
//
//	ProjectSecondarySourceGitSubmodulesConfigArgs{...}
type ProjectSecondarySourceGitSubmodulesConfigInput interface {
	pulumi.Input

	ToProjectSecondarySourceGitSubmodulesConfigOutput() ProjectSecondarySourceGitSubmodulesConfigOutput
	ToProjectSecondarySourceGitSubmodulesConfigOutputWithContext(context.Context) ProjectSecondarySourceGitSubmodulesConfigOutput
}

type ProjectSecondarySourceGitSubmodulesConfigArgs struct {
	FetchSubmodules pulumi.BoolInput `pulumi:"fetchSubmodules"`
}

func (ProjectSecondarySourceGitSubmodulesConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSecondarySourceGitSubmodulesConfig)(nil)).Elem()
}

func (i ProjectSecondarySourceGitSubmodulesConfigArgs) ToProjectSecondarySourceGitSubmodulesConfigOutput() ProjectSecondarySourceGitSubmodulesConfigOutput {
	return i.ToProjectSecondarySourceGitSubmodulesConfigOutputWithContext(context.Background())
}

func (i ProjectSecondarySourceGitSubmodulesConfigArgs) ToProjectSecondarySourceGitSubmodulesConfigOutputWithContext(ctx context.Context) ProjectSecondarySourceGitSubmodulesConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSecondarySourceGitSubmodulesConfigOutput)
}

func (i ProjectSecondarySourceGitSubmodulesConfigArgs) ToProjectSecondarySourceGitSubmodulesConfigPtrOutput() ProjectSecondarySourceGitSubmodulesConfigPtrOutput {
	return i.ToProjectSecondarySourceGitSubmodulesConfigPtrOutputWithContext(context.Background())
}

func (i ProjectSecondarySourceGitSubmodulesConfigArgs) ToProjectSecondarySourceGitSubmodulesConfigPtrOutputWithContext(ctx context.Context) ProjectSecondarySourceGitSubmodulesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSecondarySourceGitSubmodulesConfigOutput).ToProjectSecondarySourceGitSubmodulesConfigPtrOutputWithContext(ctx)
}

// ProjectSecondarySourceGitSubmodulesConfigPtrInput is an input type that accepts ProjectSecondarySourceGitSubmodulesConfigArgs, ProjectSecondarySourceGitSubmodulesConfigPtr and ProjectSecondarySourceGitSubmodulesConfigPtrOutput values.
// You can construct a concrete instance of `ProjectSecondarySourceGitSubmodulesConfigPtrInput` via:
//
//	        ProjectSecondarySourceGitSubmodulesConfigArgs{...}
//
//	or:
//
//	        nil
type ProjectSecondarySourceGitSubmodulesConfigPtrInput interface {
	pulumi.Input

	ToProjectSecondarySourceGitSubmodulesConfigPtrOutput() ProjectSecondarySourceGitSubmodulesConfigPtrOutput
	ToProjectSecondarySourceGitSubmodulesConfigPtrOutputWithContext(context.Context) ProjectSecondarySourceGitSubmodulesConfigPtrOutput
}

type projectSecondarySourceGitSubmodulesConfigPtrType ProjectSecondarySourceGitSubmodulesConfigArgs

func ProjectSecondarySourceGitSubmodulesConfigPtr(v *ProjectSecondarySourceGitSubmodulesConfigArgs) ProjectSecondarySourceGitSubmodulesConfigPtrInput {
	return (*projectSecondarySourceGitSubmodulesConfigPtrType)(v)
}

func (*projectSecondarySourceGitSubmodulesConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSecondarySourceGitSubmodulesConfig)(nil)).Elem()
}

func (i *projectSecondarySourceGitSubmodulesConfigPtrType) ToProjectSecondarySourceGitSubmodulesConfigPtrOutput() ProjectSecondarySourceGitSubmodulesConfigPtrOutput {
	return i.ToProjectSecondarySourceGitSubmodulesConfigPtrOutputWithContext(context.Background())
}

func (i *projectSecondarySourceGitSubmodulesConfigPtrType) ToProjectSecondarySourceGitSubmodulesConfigPtrOutputWithContext(ctx context.Context) ProjectSecondarySourceGitSubmodulesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSecondarySourceGitSubmodulesConfigPtrOutput)
}

type ProjectSecondarySourceGitSubmodulesConfigOutput struct{ *pulumi.OutputState }

func (ProjectSecondarySourceGitSubmodulesConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSecondarySourceGitSubmodulesConfig)(nil)).Elem()
}

func (o ProjectSecondarySourceGitSubmodulesConfigOutput) ToProjectSecondarySourceGitSubmodulesConfigOutput() ProjectSecondarySourceGitSubmodulesConfigOutput {
	return o
}

func (o ProjectSecondarySourceGitSubmodulesConfigOutput) ToProjectSecondarySourceGitSubmodulesConfigOutputWithContext(ctx context.Context) ProjectSecondarySourceGitSubmodulesConfigOutput {
	return o
}

func (o ProjectSecondarySourceGitSubmodulesConfigOutput) ToProjectSecondarySourceGitSubmodulesConfigPtrOutput() ProjectSecondarySourceGitSubmodulesConfigPtrOutput {
	return o.ToProjectSecondarySourceGitSubmodulesConfigPtrOutputWithContext(context.Background())
}

func (o ProjectSecondarySourceGitSubmodulesConfigOutput) ToProjectSecondarySourceGitSubmodulesConfigPtrOutputWithContext(ctx context.Context) ProjectSecondarySourceGitSubmodulesConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectSecondarySourceGitSubmodulesConfig) *ProjectSecondarySourceGitSubmodulesConfig {
		return &v
	}).(ProjectSecondarySourceGitSubmodulesConfigPtrOutput)
}

func (o ProjectSecondarySourceGitSubmodulesConfigOutput) FetchSubmodules() pulumi.BoolOutput {
	return o.ApplyT(func(v ProjectSecondarySourceGitSubmodulesConfig) bool { return v.FetchSubmodules }).(pulumi.BoolOutput)
}

type ProjectSecondarySourceGitSubmodulesConfigPtrOutput struct{ *pulumi.OutputState }

func (ProjectSecondarySourceGitSubmodulesConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSecondarySourceGitSubmodulesConfig)(nil)).Elem()
}

func (o ProjectSecondarySourceGitSubmodulesConfigPtrOutput) ToProjectSecondarySourceGitSubmodulesConfigPtrOutput() ProjectSecondarySourceGitSubmodulesConfigPtrOutput {
	return o
}

func (o ProjectSecondarySourceGitSubmodulesConfigPtrOutput) ToProjectSecondarySourceGitSubmodulesConfigPtrOutputWithContext(ctx context.Context) ProjectSecondarySourceGitSubmodulesConfigPtrOutput {
	return o
}

func (o ProjectSecondarySourceGitSubmodulesConfigPtrOutput) Elem() ProjectSecondarySourceGitSubmodulesConfigOutput {
	return o.ApplyT(func(v *ProjectSecondarySourceGitSubmodulesConfig) ProjectSecondarySourceGitSubmodulesConfig {
		if v != nil {
			return *v
		}
		var ret ProjectSecondarySourceGitSubmodulesConfig
		return ret
	}).(ProjectSecondarySourceGitSubmodulesConfigOutput)
}

func (o ProjectSecondarySourceGitSubmodulesConfigPtrOutput) FetchSubmodules() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectSecondarySourceGitSubmodulesConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.FetchSubmodules
	}).(pulumi.BoolPtrOutput)
}

type ProjectSecondarySourceVersion struct {
	SourceIdentifier string `pulumi:"sourceIdentifier"`
	SourceVersion    string `pulumi:"sourceVersion"`
}

// ProjectSecondarySourceVersionInput is an input type that accepts ProjectSecondarySourceVersionArgs and ProjectSecondarySourceVersionOutput values.
// You can construct a concrete instance of `ProjectSecondarySourceVersionInput` via:
//
//	ProjectSecondarySourceVersionArgs{...}
type ProjectSecondarySourceVersionInput interface {
	pulumi.Input

	ToProjectSecondarySourceVersionOutput() ProjectSecondarySourceVersionOutput
	ToProjectSecondarySourceVersionOutputWithContext(context.Context) ProjectSecondarySourceVersionOutput
}

type ProjectSecondarySourceVersionArgs struct {
	SourceIdentifier pulumi.StringInput `pulumi:"sourceIdentifier"`
	SourceVersion    pulumi.StringInput `pulumi:"sourceVersion"`
}

func (ProjectSecondarySourceVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSecondarySourceVersion)(nil)).Elem()
}

func (i ProjectSecondarySourceVersionArgs) ToProjectSecondarySourceVersionOutput() ProjectSecondarySourceVersionOutput {
	return i.ToProjectSecondarySourceVersionOutputWithContext(context.Background())
}

func (i ProjectSecondarySourceVersionArgs) ToProjectSecondarySourceVersionOutputWithContext(ctx context.Context) ProjectSecondarySourceVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSecondarySourceVersionOutput)
}

// ProjectSecondarySourceVersionArrayInput is an input type that accepts ProjectSecondarySourceVersionArray and ProjectSecondarySourceVersionArrayOutput values.
// You can construct a concrete instance of `ProjectSecondarySourceVersionArrayInput` via:
//
//	ProjectSecondarySourceVersionArray{ ProjectSecondarySourceVersionArgs{...} }
type ProjectSecondarySourceVersionArrayInput interface {
	pulumi.Input

	ToProjectSecondarySourceVersionArrayOutput() ProjectSecondarySourceVersionArrayOutput
	ToProjectSecondarySourceVersionArrayOutputWithContext(context.Context) ProjectSecondarySourceVersionArrayOutput
}

type ProjectSecondarySourceVersionArray []ProjectSecondarySourceVersionInput

func (ProjectSecondarySourceVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSecondarySourceVersion)(nil)).Elem()
}

func (i ProjectSecondarySourceVersionArray) ToProjectSecondarySourceVersionArrayOutput() ProjectSecondarySourceVersionArrayOutput {
	return i.ToProjectSecondarySourceVersionArrayOutputWithContext(context.Background())
}

func (i ProjectSecondarySourceVersionArray) ToProjectSecondarySourceVersionArrayOutputWithContext(ctx context.Context) ProjectSecondarySourceVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSecondarySourceVersionArrayOutput)
}

type ProjectSecondarySourceVersionOutput struct{ *pulumi.OutputState }

func (ProjectSecondarySourceVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSecondarySourceVersion)(nil)).Elem()
}

func (o ProjectSecondarySourceVersionOutput) ToProjectSecondarySourceVersionOutput() ProjectSecondarySourceVersionOutput {
	return o
}

func (o ProjectSecondarySourceVersionOutput) ToProjectSecondarySourceVersionOutputWithContext(ctx context.Context) ProjectSecondarySourceVersionOutput {
	return o
}

func (o ProjectSecondarySourceVersionOutput) SourceIdentifier() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectSecondarySourceVersion) string { return v.SourceIdentifier }).(pulumi.StringOutput)
}

func (o ProjectSecondarySourceVersionOutput) SourceVersion() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectSecondarySourceVersion) string { return v.SourceVersion }).(pulumi.StringOutput)
}

type ProjectSecondarySourceVersionArrayOutput struct{ *pulumi.OutputState }

func (ProjectSecondarySourceVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectSecondarySourceVersion)(nil)).Elem()
}

func (o ProjectSecondarySourceVersionArrayOutput) ToProjectSecondarySourceVersionArrayOutput() ProjectSecondarySourceVersionArrayOutput {
	return o
}

func (o ProjectSecondarySourceVersionArrayOutput) ToProjectSecondarySourceVersionArrayOutputWithContext(ctx context.Context) ProjectSecondarySourceVersionArrayOutput {
	return o
}

func (o ProjectSecondarySourceVersionArrayOutput) Index(i pulumi.IntInput) ProjectSecondarySourceVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectSecondarySourceVersion {
		return vs[0].([]ProjectSecondarySourceVersion)[vs[1].(int)]
	}).(ProjectSecondarySourceVersionOutput)
}

type ProjectSource struct {
	// Deprecated: Use the aws_codebuild_source_credential resource instead
	Auth                *ProjectSourceAuth                `pulumi:"auth"`
	BuildStatusConfig   *ProjectSourceBuildStatusConfig   `pulumi:"buildStatusConfig"`
	Buildspec           *string                           `pulumi:"buildspec"`
	GitCloneDepth       *int                              `pulumi:"gitCloneDepth"`
	GitSubmodulesConfig *ProjectSourceGitSubmodulesConfig `pulumi:"gitSubmodulesConfig"`
	InsecureSsl         *bool                             `pulumi:"insecureSsl"`
	Location            *string                           `pulumi:"location"`
	ReportBuildStatus   *bool                             `pulumi:"reportBuildStatus"`
	Type                string                            `pulumi:"type"`
}

// ProjectSourceInput is an input type that accepts ProjectSourceArgs and ProjectSourceOutput values.
// You can construct a concrete instance of `ProjectSourceInput` via:
//
//	ProjectSourceArgs{...}
type ProjectSourceInput interface {
	pulumi.Input

	ToProjectSourceOutput() ProjectSourceOutput
	ToProjectSourceOutputWithContext(context.Context) ProjectSourceOutput
}

type ProjectSourceArgs struct {
	// Deprecated: Use the aws_codebuild_source_credential resource instead
	Auth                ProjectSourceAuthPtrInput                `pulumi:"auth"`
	BuildStatusConfig   ProjectSourceBuildStatusConfigPtrInput   `pulumi:"buildStatusConfig"`
	Buildspec           pulumi.StringPtrInput                    `pulumi:"buildspec"`
	GitCloneDepth       pulumi.IntPtrInput                       `pulumi:"gitCloneDepth"`
	GitSubmodulesConfig ProjectSourceGitSubmodulesConfigPtrInput `pulumi:"gitSubmodulesConfig"`
	InsecureSsl         pulumi.BoolPtrInput                      `pulumi:"insecureSsl"`
	Location            pulumi.StringPtrInput                    `pulumi:"location"`
	ReportBuildStatus   pulumi.BoolPtrInput                      `pulumi:"reportBuildStatus"`
	Type                pulumi.StringInput                       `pulumi:"type"`
}

func (ProjectSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSource)(nil)).Elem()
}

func (i ProjectSourceArgs) ToProjectSourceOutput() ProjectSourceOutput {
	return i.ToProjectSourceOutputWithContext(context.Background())
}

func (i ProjectSourceArgs) ToProjectSourceOutputWithContext(ctx context.Context) ProjectSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSourceOutput)
}

func (i ProjectSourceArgs) ToProjectSourcePtrOutput() ProjectSourcePtrOutput {
	return i.ToProjectSourcePtrOutputWithContext(context.Background())
}

func (i ProjectSourceArgs) ToProjectSourcePtrOutputWithContext(ctx context.Context) ProjectSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSourceOutput).ToProjectSourcePtrOutputWithContext(ctx)
}

// ProjectSourcePtrInput is an input type that accepts ProjectSourceArgs, ProjectSourcePtr and ProjectSourcePtrOutput values.
// You can construct a concrete instance of `ProjectSourcePtrInput` via:
//
//	        ProjectSourceArgs{...}
//
//	or:
//
//	        nil
type ProjectSourcePtrInput interface {
	pulumi.Input

	ToProjectSourcePtrOutput() ProjectSourcePtrOutput
	ToProjectSourcePtrOutputWithContext(context.Context) ProjectSourcePtrOutput
}

type projectSourcePtrType ProjectSourceArgs

func ProjectSourcePtr(v *ProjectSourceArgs) ProjectSourcePtrInput {
	return (*projectSourcePtrType)(v)
}

func (*projectSourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSource)(nil)).Elem()
}

func (i *projectSourcePtrType) ToProjectSourcePtrOutput() ProjectSourcePtrOutput {
	return i.ToProjectSourcePtrOutputWithContext(context.Background())
}

func (i *projectSourcePtrType) ToProjectSourcePtrOutputWithContext(ctx context.Context) ProjectSourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSourcePtrOutput)
}

type ProjectSourceOutput struct{ *pulumi.OutputState }

func (ProjectSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSource)(nil)).Elem()
}

func (o ProjectSourceOutput) ToProjectSourceOutput() ProjectSourceOutput {
	return o
}

func (o ProjectSourceOutput) ToProjectSourceOutputWithContext(ctx context.Context) ProjectSourceOutput {
	return o
}

func (o ProjectSourceOutput) ToProjectSourcePtrOutput() ProjectSourcePtrOutput {
	return o.ToProjectSourcePtrOutputWithContext(context.Background())
}

func (o ProjectSourceOutput) ToProjectSourcePtrOutputWithContext(ctx context.Context) ProjectSourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectSource) *ProjectSource {
		return &v
	}).(ProjectSourcePtrOutput)
}

// Deprecated: Use the aws_codebuild_source_credential resource instead
func (o ProjectSourceOutput) Auth() ProjectSourceAuthPtrOutput {
	return o.ApplyT(func(v ProjectSource) *ProjectSourceAuth { return v.Auth }).(ProjectSourceAuthPtrOutput)
}

func (o ProjectSourceOutput) BuildStatusConfig() ProjectSourceBuildStatusConfigPtrOutput {
	return o.ApplyT(func(v ProjectSource) *ProjectSourceBuildStatusConfig { return v.BuildStatusConfig }).(ProjectSourceBuildStatusConfigPtrOutput)
}

func (o ProjectSourceOutput) Buildspec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSource) *string { return v.Buildspec }).(pulumi.StringPtrOutput)
}

func (o ProjectSourceOutput) GitCloneDepth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectSource) *int { return v.GitCloneDepth }).(pulumi.IntPtrOutput)
}

func (o ProjectSourceOutput) GitSubmodulesConfig() ProjectSourceGitSubmodulesConfigPtrOutput {
	return o.ApplyT(func(v ProjectSource) *ProjectSourceGitSubmodulesConfig { return v.GitSubmodulesConfig }).(ProjectSourceGitSubmodulesConfigPtrOutput)
}

func (o ProjectSourceOutput) InsecureSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectSource) *bool { return v.InsecureSsl }).(pulumi.BoolPtrOutput)
}

func (o ProjectSourceOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSource) *string { return v.Location }).(pulumi.StringPtrOutput)
}

func (o ProjectSourceOutput) ReportBuildStatus() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProjectSource) *bool { return v.ReportBuildStatus }).(pulumi.BoolPtrOutput)
}

func (o ProjectSourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectSource) string { return v.Type }).(pulumi.StringOutput)
}

type ProjectSourcePtrOutput struct{ *pulumi.OutputState }

func (ProjectSourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSource)(nil)).Elem()
}

func (o ProjectSourcePtrOutput) ToProjectSourcePtrOutput() ProjectSourcePtrOutput {
	return o
}

func (o ProjectSourcePtrOutput) ToProjectSourcePtrOutputWithContext(ctx context.Context) ProjectSourcePtrOutput {
	return o
}

func (o ProjectSourcePtrOutput) Elem() ProjectSourceOutput {
	return o.ApplyT(func(v *ProjectSource) ProjectSource {
		if v != nil {
			return *v
		}
		var ret ProjectSource
		return ret
	}).(ProjectSourceOutput)
}

// Deprecated: Use the aws_codebuild_source_credential resource instead
func (o ProjectSourcePtrOutput) Auth() ProjectSourceAuthPtrOutput {
	return o.ApplyT(func(v *ProjectSource) *ProjectSourceAuth {
		if v == nil {
			return nil
		}
		return v.Auth
	}).(ProjectSourceAuthPtrOutput)
}

func (o ProjectSourcePtrOutput) BuildStatusConfig() ProjectSourceBuildStatusConfigPtrOutput {
	return o.ApplyT(func(v *ProjectSource) *ProjectSourceBuildStatusConfig {
		if v == nil {
			return nil
		}
		return v.BuildStatusConfig
	}).(ProjectSourceBuildStatusConfigPtrOutput)
}

func (o ProjectSourcePtrOutput) Buildspec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSource) *string {
		if v == nil {
			return nil
		}
		return v.Buildspec
	}).(pulumi.StringPtrOutput)
}

func (o ProjectSourcePtrOutput) GitCloneDepth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectSource) *int {
		if v == nil {
			return nil
		}
		return v.GitCloneDepth
	}).(pulumi.IntPtrOutput)
}

func (o ProjectSourcePtrOutput) GitSubmodulesConfig() ProjectSourceGitSubmodulesConfigPtrOutput {
	return o.ApplyT(func(v *ProjectSource) *ProjectSourceGitSubmodulesConfig {
		if v == nil {
			return nil
		}
		return v.GitSubmodulesConfig
	}).(ProjectSourceGitSubmodulesConfigPtrOutput)
}

func (o ProjectSourcePtrOutput) InsecureSsl() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectSource) *bool {
		if v == nil {
			return nil
		}
		return v.InsecureSsl
	}).(pulumi.BoolPtrOutput)
}

func (o ProjectSourcePtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSource) *string {
		if v == nil {
			return nil
		}
		return v.Location
	}).(pulumi.StringPtrOutput)
}

func (o ProjectSourcePtrOutput) ReportBuildStatus() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectSource) *bool {
		if v == nil {
			return nil
		}
		return v.ReportBuildStatus
	}).(pulumi.BoolPtrOutput)
}

func (o ProjectSourcePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSource) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ProjectSourceAuth struct {
	// Deprecated: Use the aws_codebuild_source_credential resource instead
	Resource *string `pulumi:"resource"`
	// Deprecated: Use the aws_codebuild_source_credential resource instead
	Type string `pulumi:"type"`
}

// ProjectSourceAuthInput is an input type that accepts ProjectSourceAuthArgs and ProjectSourceAuthOutput values.
// You can construct a concrete instance of `ProjectSourceAuthInput` via:
//
//	ProjectSourceAuthArgs{...}
type ProjectSourceAuthInput interface {
	pulumi.Input

	ToProjectSourceAuthOutput() ProjectSourceAuthOutput
	ToProjectSourceAuthOutputWithContext(context.Context) ProjectSourceAuthOutput
}

type ProjectSourceAuthArgs struct {
	// Deprecated: Use the aws_codebuild_source_credential resource instead
	Resource pulumi.StringPtrInput `pulumi:"resource"`
	// Deprecated: Use the aws_codebuild_source_credential resource instead
	Type pulumi.StringInput `pulumi:"type"`
}

func (ProjectSourceAuthArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSourceAuth)(nil)).Elem()
}

func (i ProjectSourceAuthArgs) ToProjectSourceAuthOutput() ProjectSourceAuthOutput {
	return i.ToProjectSourceAuthOutputWithContext(context.Background())
}

func (i ProjectSourceAuthArgs) ToProjectSourceAuthOutputWithContext(ctx context.Context) ProjectSourceAuthOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSourceAuthOutput)
}

func (i ProjectSourceAuthArgs) ToProjectSourceAuthPtrOutput() ProjectSourceAuthPtrOutput {
	return i.ToProjectSourceAuthPtrOutputWithContext(context.Background())
}

func (i ProjectSourceAuthArgs) ToProjectSourceAuthPtrOutputWithContext(ctx context.Context) ProjectSourceAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSourceAuthOutput).ToProjectSourceAuthPtrOutputWithContext(ctx)
}

// ProjectSourceAuthPtrInput is an input type that accepts ProjectSourceAuthArgs, ProjectSourceAuthPtr and ProjectSourceAuthPtrOutput values.
// You can construct a concrete instance of `ProjectSourceAuthPtrInput` via:
//
//	        ProjectSourceAuthArgs{...}
//
//	or:
//
//	        nil
type ProjectSourceAuthPtrInput interface {
	pulumi.Input

	ToProjectSourceAuthPtrOutput() ProjectSourceAuthPtrOutput
	ToProjectSourceAuthPtrOutputWithContext(context.Context) ProjectSourceAuthPtrOutput
}

type projectSourceAuthPtrType ProjectSourceAuthArgs

func ProjectSourceAuthPtr(v *ProjectSourceAuthArgs) ProjectSourceAuthPtrInput {
	return (*projectSourceAuthPtrType)(v)
}

func (*projectSourceAuthPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSourceAuth)(nil)).Elem()
}

func (i *projectSourceAuthPtrType) ToProjectSourceAuthPtrOutput() ProjectSourceAuthPtrOutput {
	return i.ToProjectSourceAuthPtrOutputWithContext(context.Background())
}

func (i *projectSourceAuthPtrType) ToProjectSourceAuthPtrOutputWithContext(ctx context.Context) ProjectSourceAuthPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSourceAuthPtrOutput)
}

type ProjectSourceAuthOutput struct{ *pulumi.OutputState }

func (ProjectSourceAuthOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSourceAuth)(nil)).Elem()
}

func (o ProjectSourceAuthOutput) ToProjectSourceAuthOutput() ProjectSourceAuthOutput {
	return o
}

func (o ProjectSourceAuthOutput) ToProjectSourceAuthOutputWithContext(ctx context.Context) ProjectSourceAuthOutput {
	return o
}

func (o ProjectSourceAuthOutput) ToProjectSourceAuthPtrOutput() ProjectSourceAuthPtrOutput {
	return o.ToProjectSourceAuthPtrOutputWithContext(context.Background())
}

func (o ProjectSourceAuthOutput) ToProjectSourceAuthPtrOutputWithContext(ctx context.Context) ProjectSourceAuthPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectSourceAuth) *ProjectSourceAuth {
		return &v
	}).(ProjectSourceAuthPtrOutput)
}

// Deprecated: Use the aws_codebuild_source_credential resource instead
func (o ProjectSourceAuthOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSourceAuth) *string { return v.Resource }).(pulumi.StringPtrOutput)
}

// Deprecated: Use the aws_codebuild_source_credential resource instead
func (o ProjectSourceAuthOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectSourceAuth) string { return v.Type }).(pulumi.StringOutput)
}

type ProjectSourceAuthPtrOutput struct{ *pulumi.OutputState }

func (ProjectSourceAuthPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSourceAuth)(nil)).Elem()
}

func (o ProjectSourceAuthPtrOutput) ToProjectSourceAuthPtrOutput() ProjectSourceAuthPtrOutput {
	return o
}

func (o ProjectSourceAuthPtrOutput) ToProjectSourceAuthPtrOutputWithContext(ctx context.Context) ProjectSourceAuthPtrOutput {
	return o
}

func (o ProjectSourceAuthPtrOutput) Elem() ProjectSourceAuthOutput {
	return o.ApplyT(func(v *ProjectSourceAuth) ProjectSourceAuth {
		if v != nil {
			return *v
		}
		var ret ProjectSourceAuth
		return ret
	}).(ProjectSourceAuthOutput)
}

// Deprecated: Use the aws_codebuild_source_credential resource instead
func (o ProjectSourceAuthPtrOutput) Resource() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSourceAuth) *string {
		if v == nil {
			return nil
		}
		return v.Resource
	}).(pulumi.StringPtrOutput)
}

// Deprecated: Use the aws_codebuild_source_credential resource instead
func (o ProjectSourceAuthPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSourceAuth) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ProjectSourceBuildStatusConfig struct {
	Context   *string `pulumi:"context"`
	TargetUrl *string `pulumi:"targetUrl"`
}

// ProjectSourceBuildStatusConfigInput is an input type that accepts ProjectSourceBuildStatusConfigArgs and ProjectSourceBuildStatusConfigOutput values.
// You can construct a concrete instance of `ProjectSourceBuildStatusConfigInput` via:
//
//	ProjectSourceBuildStatusConfigArgs{...}
type ProjectSourceBuildStatusConfigInput interface {
	pulumi.Input

	ToProjectSourceBuildStatusConfigOutput() ProjectSourceBuildStatusConfigOutput
	ToProjectSourceBuildStatusConfigOutputWithContext(context.Context) ProjectSourceBuildStatusConfigOutput
}

type ProjectSourceBuildStatusConfigArgs struct {
	Context   pulumi.StringPtrInput `pulumi:"context"`
	TargetUrl pulumi.StringPtrInput `pulumi:"targetUrl"`
}

func (ProjectSourceBuildStatusConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSourceBuildStatusConfig)(nil)).Elem()
}

func (i ProjectSourceBuildStatusConfigArgs) ToProjectSourceBuildStatusConfigOutput() ProjectSourceBuildStatusConfigOutput {
	return i.ToProjectSourceBuildStatusConfigOutputWithContext(context.Background())
}

func (i ProjectSourceBuildStatusConfigArgs) ToProjectSourceBuildStatusConfigOutputWithContext(ctx context.Context) ProjectSourceBuildStatusConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSourceBuildStatusConfigOutput)
}

func (i ProjectSourceBuildStatusConfigArgs) ToProjectSourceBuildStatusConfigPtrOutput() ProjectSourceBuildStatusConfigPtrOutput {
	return i.ToProjectSourceBuildStatusConfigPtrOutputWithContext(context.Background())
}

func (i ProjectSourceBuildStatusConfigArgs) ToProjectSourceBuildStatusConfigPtrOutputWithContext(ctx context.Context) ProjectSourceBuildStatusConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSourceBuildStatusConfigOutput).ToProjectSourceBuildStatusConfigPtrOutputWithContext(ctx)
}

// ProjectSourceBuildStatusConfigPtrInput is an input type that accepts ProjectSourceBuildStatusConfigArgs, ProjectSourceBuildStatusConfigPtr and ProjectSourceBuildStatusConfigPtrOutput values.
// You can construct a concrete instance of `ProjectSourceBuildStatusConfigPtrInput` via:
//
//	        ProjectSourceBuildStatusConfigArgs{...}
//
//	or:
//
//	        nil
type ProjectSourceBuildStatusConfigPtrInput interface {
	pulumi.Input

	ToProjectSourceBuildStatusConfigPtrOutput() ProjectSourceBuildStatusConfigPtrOutput
	ToProjectSourceBuildStatusConfigPtrOutputWithContext(context.Context) ProjectSourceBuildStatusConfigPtrOutput
}

type projectSourceBuildStatusConfigPtrType ProjectSourceBuildStatusConfigArgs

func ProjectSourceBuildStatusConfigPtr(v *ProjectSourceBuildStatusConfigArgs) ProjectSourceBuildStatusConfigPtrInput {
	return (*projectSourceBuildStatusConfigPtrType)(v)
}

func (*projectSourceBuildStatusConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSourceBuildStatusConfig)(nil)).Elem()
}

func (i *projectSourceBuildStatusConfigPtrType) ToProjectSourceBuildStatusConfigPtrOutput() ProjectSourceBuildStatusConfigPtrOutput {
	return i.ToProjectSourceBuildStatusConfigPtrOutputWithContext(context.Background())
}

func (i *projectSourceBuildStatusConfigPtrType) ToProjectSourceBuildStatusConfigPtrOutputWithContext(ctx context.Context) ProjectSourceBuildStatusConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSourceBuildStatusConfigPtrOutput)
}

type ProjectSourceBuildStatusConfigOutput struct{ *pulumi.OutputState }

func (ProjectSourceBuildStatusConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSourceBuildStatusConfig)(nil)).Elem()
}

func (o ProjectSourceBuildStatusConfigOutput) ToProjectSourceBuildStatusConfigOutput() ProjectSourceBuildStatusConfigOutput {
	return o
}

func (o ProjectSourceBuildStatusConfigOutput) ToProjectSourceBuildStatusConfigOutputWithContext(ctx context.Context) ProjectSourceBuildStatusConfigOutput {
	return o
}

func (o ProjectSourceBuildStatusConfigOutput) ToProjectSourceBuildStatusConfigPtrOutput() ProjectSourceBuildStatusConfigPtrOutput {
	return o.ToProjectSourceBuildStatusConfigPtrOutputWithContext(context.Background())
}

func (o ProjectSourceBuildStatusConfigOutput) ToProjectSourceBuildStatusConfigPtrOutputWithContext(ctx context.Context) ProjectSourceBuildStatusConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectSourceBuildStatusConfig) *ProjectSourceBuildStatusConfig {
		return &v
	}).(ProjectSourceBuildStatusConfigPtrOutput)
}

func (o ProjectSourceBuildStatusConfigOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSourceBuildStatusConfig) *string { return v.Context }).(pulumi.StringPtrOutput)
}

func (o ProjectSourceBuildStatusConfigOutput) TargetUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectSourceBuildStatusConfig) *string { return v.TargetUrl }).(pulumi.StringPtrOutput)
}

type ProjectSourceBuildStatusConfigPtrOutput struct{ *pulumi.OutputState }

func (ProjectSourceBuildStatusConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSourceBuildStatusConfig)(nil)).Elem()
}

func (o ProjectSourceBuildStatusConfigPtrOutput) ToProjectSourceBuildStatusConfigPtrOutput() ProjectSourceBuildStatusConfigPtrOutput {
	return o
}

func (o ProjectSourceBuildStatusConfigPtrOutput) ToProjectSourceBuildStatusConfigPtrOutputWithContext(ctx context.Context) ProjectSourceBuildStatusConfigPtrOutput {
	return o
}

func (o ProjectSourceBuildStatusConfigPtrOutput) Elem() ProjectSourceBuildStatusConfigOutput {
	return o.ApplyT(func(v *ProjectSourceBuildStatusConfig) ProjectSourceBuildStatusConfig {
		if v != nil {
			return *v
		}
		var ret ProjectSourceBuildStatusConfig
		return ret
	}).(ProjectSourceBuildStatusConfigOutput)
}

func (o ProjectSourceBuildStatusConfigPtrOutput) Context() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSourceBuildStatusConfig) *string {
		if v == nil {
			return nil
		}
		return v.Context
	}).(pulumi.StringPtrOutput)
}

func (o ProjectSourceBuildStatusConfigPtrOutput) TargetUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectSourceBuildStatusConfig) *string {
		if v == nil {
			return nil
		}
		return v.TargetUrl
	}).(pulumi.StringPtrOutput)
}

type ProjectSourceGitSubmodulesConfig struct {
	FetchSubmodules bool `pulumi:"fetchSubmodules"`
}

// ProjectSourceGitSubmodulesConfigInput is an input type that accepts ProjectSourceGitSubmodulesConfigArgs and ProjectSourceGitSubmodulesConfigOutput values.
// You can construct a concrete instance of `ProjectSourceGitSubmodulesConfigInput` via:
//
//	ProjectSourceGitSubmodulesConfigArgs{...}
type ProjectSourceGitSubmodulesConfigInput interface {
	pulumi.Input

	ToProjectSourceGitSubmodulesConfigOutput() ProjectSourceGitSubmodulesConfigOutput
	ToProjectSourceGitSubmodulesConfigOutputWithContext(context.Context) ProjectSourceGitSubmodulesConfigOutput
}

type ProjectSourceGitSubmodulesConfigArgs struct {
	FetchSubmodules pulumi.BoolInput `pulumi:"fetchSubmodules"`
}

func (ProjectSourceGitSubmodulesConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSourceGitSubmodulesConfig)(nil)).Elem()
}

func (i ProjectSourceGitSubmodulesConfigArgs) ToProjectSourceGitSubmodulesConfigOutput() ProjectSourceGitSubmodulesConfigOutput {
	return i.ToProjectSourceGitSubmodulesConfigOutputWithContext(context.Background())
}

func (i ProjectSourceGitSubmodulesConfigArgs) ToProjectSourceGitSubmodulesConfigOutputWithContext(ctx context.Context) ProjectSourceGitSubmodulesConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSourceGitSubmodulesConfigOutput)
}

func (i ProjectSourceGitSubmodulesConfigArgs) ToProjectSourceGitSubmodulesConfigPtrOutput() ProjectSourceGitSubmodulesConfigPtrOutput {
	return i.ToProjectSourceGitSubmodulesConfigPtrOutputWithContext(context.Background())
}

func (i ProjectSourceGitSubmodulesConfigArgs) ToProjectSourceGitSubmodulesConfigPtrOutputWithContext(ctx context.Context) ProjectSourceGitSubmodulesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSourceGitSubmodulesConfigOutput).ToProjectSourceGitSubmodulesConfigPtrOutputWithContext(ctx)
}

// ProjectSourceGitSubmodulesConfigPtrInput is an input type that accepts ProjectSourceGitSubmodulesConfigArgs, ProjectSourceGitSubmodulesConfigPtr and ProjectSourceGitSubmodulesConfigPtrOutput values.
// You can construct a concrete instance of `ProjectSourceGitSubmodulesConfigPtrInput` via:
//
//	        ProjectSourceGitSubmodulesConfigArgs{...}
//
//	or:
//
//	        nil
type ProjectSourceGitSubmodulesConfigPtrInput interface {
	pulumi.Input

	ToProjectSourceGitSubmodulesConfigPtrOutput() ProjectSourceGitSubmodulesConfigPtrOutput
	ToProjectSourceGitSubmodulesConfigPtrOutputWithContext(context.Context) ProjectSourceGitSubmodulesConfigPtrOutput
}

type projectSourceGitSubmodulesConfigPtrType ProjectSourceGitSubmodulesConfigArgs

func ProjectSourceGitSubmodulesConfigPtr(v *ProjectSourceGitSubmodulesConfigArgs) ProjectSourceGitSubmodulesConfigPtrInput {
	return (*projectSourceGitSubmodulesConfigPtrType)(v)
}

func (*projectSourceGitSubmodulesConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSourceGitSubmodulesConfig)(nil)).Elem()
}

func (i *projectSourceGitSubmodulesConfigPtrType) ToProjectSourceGitSubmodulesConfigPtrOutput() ProjectSourceGitSubmodulesConfigPtrOutput {
	return i.ToProjectSourceGitSubmodulesConfigPtrOutputWithContext(context.Background())
}

func (i *projectSourceGitSubmodulesConfigPtrType) ToProjectSourceGitSubmodulesConfigPtrOutputWithContext(ctx context.Context) ProjectSourceGitSubmodulesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectSourceGitSubmodulesConfigPtrOutput)
}

type ProjectSourceGitSubmodulesConfigOutput struct{ *pulumi.OutputState }

func (ProjectSourceGitSubmodulesConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectSourceGitSubmodulesConfig)(nil)).Elem()
}

func (o ProjectSourceGitSubmodulesConfigOutput) ToProjectSourceGitSubmodulesConfigOutput() ProjectSourceGitSubmodulesConfigOutput {
	return o
}

func (o ProjectSourceGitSubmodulesConfigOutput) ToProjectSourceGitSubmodulesConfigOutputWithContext(ctx context.Context) ProjectSourceGitSubmodulesConfigOutput {
	return o
}

func (o ProjectSourceGitSubmodulesConfigOutput) ToProjectSourceGitSubmodulesConfigPtrOutput() ProjectSourceGitSubmodulesConfigPtrOutput {
	return o.ToProjectSourceGitSubmodulesConfigPtrOutputWithContext(context.Background())
}

func (o ProjectSourceGitSubmodulesConfigOutput) ToProjectSourceGitSubmodulesConfigPtrOutputWithContext(ctx context.Context) ProjectSourceGitSubmodulesConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectSourceGitSubmodulesConfig) *ProjectSourceGitSubmodulesConfig {
		return &v
	}).(ProjectSourceGitSubmodulesConfigPtrOutput)
}

func (o ProjectSourceGitSubmodulesConfigOutput) FetchSubmodules() pulumi.BoolOutput {
	return o.ApplyT(func(v ProjectSourceGitSubmodulesConfig) bool { return v.FetchSubmodules }).(pulumi.BoolOutput)
}

type ProjectSourceGitSubmodulesConfigPtrOutput struct{ *pulumi.OutputState }

func (ProjectSourceGitSubmodulesConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectSourceGitSubmodulesConfig)(nil)).Elem()
}

func (o ProjectSourceGitSubmodulesConfigPtrOutput) ToProjectSourceGitSubmodulesConfigPtrOutput() ProjectSourceGitSubmodulesConfigPtrOutput {
	return o
}

func (o ProjectSourceGitSubmodulesConfigPtrOutput) ToProjectSourceGitSubmodulesConfigPtrOutputWithContext(ctx context.Context) ProjectSourceGitSubmodulesConfigPtrOutput {
	return o
}

func (o ProjectSourceGitSubmodulesConfigPtrOutput) Elem() ProjectSourceGitSubmodulesConfigOutput {
	return o.ApplyT(func(v *ProjectSourceGitSubmodulesConfig) ProjectSourceGitSubmodulesConfig {
		if v != nil {
			return *v
		}
		var ret ProjectSourceGitSubmodulesConfig
		return ret
	}).(ProjectSourceGitSubmodulesConfigOutput)
}

func (o ProjectSourceGitSubmodulesConfigPtrOutput) FetchSubmodules() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProjectSourceGitSubmodulesConfig) *bool {
		if v == nil {
			return nil
		}
		return &v.FetchSubmodules
	}).(pulumi.BoolPtrOutput)
}

type ProjectVpcConfig struct {
	SecurityGroupIds []string `pulumi:"securityGroupIds"`
	Subnets          []string `pulumi:"subnets"`
	VpcId            string   `pulumi:"vpcId"`
}

// ProjectVpcConfigInput is an input type that accepts ProjectVpcConfigArgs and ProjectVpcConfigOutput values.
// You can construct a concrete instance of `ProjectVpcConfigInput` via:
//
//	ProjectVpcConfigArgs{...}
type ProjectVpcConfigInput interface {
	pulumi.Input

	ToProjectVpcConfigOutput() ProjectVpcConfigOutput
	ToProjectVpcConfigOutputWithContext(context.Context) ProjectVpcConfigOutput
}

type ProjectVpcConfigArgs struct {
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"securityGroupIds"`
	Subnets          pulumi.StringArrayInput `pulumi:"subnets"`
	VpcId            pulumi.StringInput      `pulumi:"vpcId"`
}

func (ProjectVpcConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectVpcConfig)(nil)).Elem()
}

func (i ProjectVpcConfigArgs) ToProjectVpcConfigOutput() ProjectVpcConfigOutput {
	return i.ToProjectVpcConfigOutputWithContext(context.Background())
}

func (i ProjectVpcConfigArgs) ToProjectVpcConfigOutputWithContext(ctx context.Context) ProjectVpcConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectVpcConfigOutput)
}

func (i ProjectVpcConfigArgs) ToProjectVpcConfigPtrOutput() ProjectVpcConfigPtrOutput {
	return i.ToProjectVpcConfigPtrOutputWithContext(context.Background())
}

func (i ProjectVpcConfigArgs) ToProjectVpcConfigPtrOutputWithContext(ctx context.Context) ProjectVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectVpcConfigOutput).ToProjectVpcConfigPtrOutputWithContext(ctx)
}

// ProjectVpcConfigPtrInput is an input type that accepts ProjectVpcConfigArgs, ProjectVpcConfigPtr and ProjectVpcConfigPtrOutput values.
// You can construct a concrete instance of `ProjectVpcConfigPtrInput` via:
//
//	        ProjectVpcConfigArgs{...}
//
//	or:
//
//	        nil
type ProjectVpcConfigPtrInput interface {
	pulumi.Input

	ToProjectVpcConfigPtrOutput() ProjectVpcConfigPtrOutput
	ToProjectVpcConfigPtrOutputWithContext(context.Context) ProjectVpcConfigPtrOutput
}

type projectVpcConfigPtrType ProjectVpcConfigArgs

func ProjectVpcConfigPtr(v *ProjectVpcConfigArgs) ProjectVpcConfigPtrInput {
	return (*projectVpcConfigPtrType)(v)
}

func (*projectVpcConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectVpcConfig)(nil)).Elem()
}

func (i *projectVpcConfigPtrType) ToProjectVpcConfigPtrOutput() ProjectVpcConfigPtrOutput {
	return i.ToProjectVpcConfigPtrOutputWithContext(context.Background())
}

func (i *projectVpcConfigPtrType) ToProjectVpcConfigPtrOutputWithContext(ctx context.Context) ProjectVpcConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectVpcConfigPtrOutput)
}

type ProjectVpcConfigOutput struct{ *pulumi.OutputState }

func (ProjectVpcConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectVpcConfig)(nil)).Elem()
}

func (o ProjectVpcConfigOutput) ToProjectVpcConfigOutput() ProjectVpcConfigOutput {
	return o
}

func (o ProjectVpcConfigOutput) ToProjectVpcConfigOutputWithContext(ctx context.Context) ProjectVpcConfigOutput {
	return o
}

func (o ProjectVpcConfigOutput) ToProjectVpcConfigPtrOutput() ProjectVpcConfigPtrOutput {
	return o.ToProjectVpcConfigPtrOutputWithContext(context.Background())
}

func (o ProjectVpcConfigOutput) ToProjectVpcConfigPtrOutputWithContext(ctx context.Context) ProjectVpcConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectVpcConfig) *ProjectVpcConfig {
		return &v
	}).(ProjectVpcConfigPtrOutput)
}

func (o ProjectVpcConfigOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectVpcConfig) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

func (o ProjectVpcConfigOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectVpcConfig) []string { return v.Subnets }).(pulumi.StringArrayOutput)
}

func (o ProjectVpcConfigOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectVpcConfig) string { return v.VpcId }).(pulumi.StringOutput)
}

type ProjectVpcConfigPtrOutput struct{ *pulumi.OutputState }

func (ProjectVpcConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectVpcConfig)(nil)).Elem()
}

func (o ProjectVpcConfigPtrOutput) ToProjectVpcConfigPtrOutput() ProjectVpcConfigPtrOutput {
	return o
}

func (o ProjectVpcConfigPtrOutput) ToProjectVpcConfigPtrOutputWithContext(ctx context.Context) ProjectVpcConfigPtrOutput {
	return o
}

func (o ProjectVpcConfigPtrOutput) Elem() ProjectVpcConfigOutput {
	return o.ApplyT(func(v *ProjectVpcConfig) ProjectVpcConfig {
		if v != nil {
			return *v
		}
		var ret ProjectVpcConfig
		return ret
	}).(ProjectVpcConfigOutput)
}

func (o ProjectVpcConfigPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProjectVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

func (o ProjectVpcConfigPtrOutput) Subnets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProjectVpcConfig) []string {
		if v == nil {
			return nil
		}
		return v.Subnets
	}).(pulumi.StringArrayOutput)
}

func (o ProjectVpcConfigPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectVpcConfig) *string {
		if v == nil {
			return nil
		}
		return &v.VpcId
	}).(pulumi.StringPtrOutput)
}

type ReportGroupExportConfig struct {
	S3Destination *ReportGroupExportConfigS3Destination `pulumi:"s3Destination"`
	Type          string                                `pulumi:"type"`
}

// ReportGroupExportConfigInput is an input type that accepts ReportGroupExportConfigArgs and ReportGroupExportConfigOutput values.
// You can construct a concrete instance of `ReportGroupExportConfigInput` via:
//
//	ReportGroupExportConfigArgs{...}
type ReportGroupExportConfigInput interface {
	pulumi.Input

	ToReportGroupExportConfigOutput() ReportGroupExportConfigOutput
	ToReportGroupExportConfigOutputWithContext(context.Context) ReportGroupExportConfigOutput
}

type ReportGroupExportConfigArgs struct {
	S3Destination ReportGroupExportConfigS3DestinationPtrInput `pulumi:"s3Destination"`
	Type          pulumi.StringInput                           `pulumi:"type"`
}

func (ReportGroupExportConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportGroupExportConfig)(nil)).Elem()
}

func (i ReportGroupExportConfigArgs) ToReportGroupExportConfigOutput() ReportGroupExportConfigOutput {
	return i.ToReportGroupExportConfigOutputWithContext(context.Background())
}

func (i ReportGroupExportConfigArgs) ToReportGroupExportConfigOutputWithContext(ctx context.Context) ReportGroupExportConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportGroupExportConfigOutput)
}

func (i ReportGroupExportConfigArgs) ToReportGroupExportConfigPtrOutput() ReportGroupExportConfigPtrOutput {
	return i.ToReportGroupExportConfigPtrOutputWithContext(context.Background())
}

func (i ReportGroupExportConfigArgs) ToReportGroupExportConfigPtrOutputWithContext(ctx context.Context) ReportGroupExportConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportGroupExportConfigOutput).ToReportGroupExportConfigPtrOutputWithContext(ctx)
}

// ReportGroupExportConfigPtrInput is an input type that accepts ReportGroupExportConfigArgs, ReportGroupExportConfigPtr and ReportGroupExportConfigPtrOutput values.
// You can construct a concrete instance of `ReportGroupExportConfigPtrInput` via:
//
//	        ReportGroupExportConfigArgs{...}
//
//	or:
//
//	        nil
type ReportGroupExportConfigPtrInput interface {
	pulumi.Input

	ToReportGroupExportConfigPtrOutput() ReportGroupExportConfigPtrOutput
	ToReportGroupExportConfigPtrOutputWithContext(context.Context) ReportGroupExportConfigPtrOutput
}

type reportGroupExportConfigPtrType ReportGroupExportConfigArgs

func ReportGroupExportConfigPtr(v *ReportGroupExportConfigArgs) ReportGroupExportConfigPtrInput {
	return (*reportGroupExportConfigPtrType)(v)
}

func (*reportGroupExportConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportGroupExportConfig)(nil)).Elem()
}

func (i *reportGroupExportConfigPtrType) ToReportGroupExportConfigPtrOutput() ReportGroupExportConfigPtrOutput {
	return i.ToReportGroupExportConfigPtrOutputWithContext(context.Background())
}

func (i *reportGroupExportConfigPtrType) ToReportGroupExportConfigPtrOutputWithContext(ctx context.Context) ReportGroupExportConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportGroupExportConfigPtrOutput)
}

type ReportGroupExportConfigOutput struct{ *pulumi.OutputState }

func (ReportGroupExportConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportGroupExportConfig)(nil)).Elem()
}

func (o ReportGroupExportConfigOutput) ToReportGroupExportConfigOutput() ReportGroupExportConfigOutput {
	return o
}

func (o ReportGroupExportConfigOutput) ToReportGroupExportConfigOutputWithContext(ctx context.Context) ReportGroupExportConfigOutput {
	return o
}

func (o ReportGroupExportConfigOutput) ToReportGroupExportConfigPtrOutput() ReportGroupExportConfigPtrOutput {
	return o.ToReportGroupExportConfigPtrOutputWithContext(context.Background())
}

func (o ReportGroupExportConfigOutput) ToReportGroupExportConfigPtrOutputWithContext(ctx context.Context) ReportGroupExportConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReportGroupExportConfig) *ReportGroupExportConfig {
		return &v
	}).(ReportGroupExportConfigPtrOutput)
}

func (o ReportGroupExportConfigOutput) S3Destination() ReportGroupExportConfigS3DestinationPtrOutput {
	return o.ApplyT(func(v ReportGroupExportConfig) *ReportGroupExportConfigS3Destination { return v.S3Destination }).(ReportGroupExportConfigS3DestinationPtrOutput)
}

func (o ReportGroupExportConfigOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ReportGroupExportConfig) string { return v.Type }).(pulumi.StringOutput)
}

type ReportGroupExportConfigPtrOutput struct{ *pulumi.OutputState }

func (ReportGroupExportConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportGroupExportConfig)(nil)).Elem()
}

func (o ReportGroupExportConfigPtrOutput) ToReportGroupExportConfigPtrOutput() ReportGroupExportConfigPtrOutput {
	return o
}

func (o ReportGroupExportConfigPtrOutput) ToReportGroupExportConfigPtrOutputWithContext(ctx context.Context) ReportGroupExportConfigPtrOutput {
	return o
}

func (o ReportGroupExportConfigPtrOutput) Elem() ReportGroupExportConfigOutput {
	return o.ApplyT(func(v *ReportGroupExportConfig) ReportGroupExportConfig {
		if v != nil {
			return *v
		}
		var ret ReportGroupExportConfig
		return ret
	}).(ReportGroupExportConfigOutput)
}

func (o ReportGroupExportConfigPtrOutput) S3Destination() ReportGroupExportConfigS3DestinationPtrOutput {
	return o.ApplyT(func(v *ReportGroupExportConfig) *ReportGroupExportConfigS3Destination {
		if v == nil {
			return nil
		}
		return v.S3Destination
	}).(ReportGroupExportConfigS3DestinationPtrOutput)
}

func (o ReportGroupExportConfigPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportGroupExportConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type ReportGroupExportConfigS3Destination struct {
	Bucket             string  `pulumi:"bucket"`
	EncryptionDisabled *bool   `pulumi:"encryptionDisabled"`
	EncryptionKey      string  `pulumi:"encryptionKey"`
	Packaging          *string `pulumi:"packaging"`
	Path               *string `pulumi:"path"`
}

// ReportGroupExportConfigS3DestinationInput is an input type that accepts ReportGroupExportConfigS3DestinationArgs and ReportGroupExportConfigS3DestinationOutput values.
// You can construct a concrete instance of `ReportGroupExportConfigS3DestinationInput` via:
//
//	ReportGroupExportConfigS3DestinationArgs{...}
type ReportGroupExportConfigS3DestinationInput interface {
	pulumi.Input

	ToReportGroupExportConfigS3DestinationOutput() ReportGroupExportConfigS3DestinationOutput
	ToReportGroupExportConfigS3DestinationOutputWithContext(context.Context) ReportGroupExportConfigS3DestinationOutput
}

type ReportGroupExportConfigS3DestinationArgs struct {
	Bucket             pulumi.StringInput    `pulumi:"bucket"`
	EncryptionDisabled pulumi.BoolPtrInput   `pulumi:"encryptionDisabled"`
	EncryptionKey      pulumi.StringInput    `pulumi:"encryptionKey"`
	Packaging          pulumi.StringPtrInput `pulumi:"packaging"`
	Path               pulumi.StringPtrInput `pulumi:"path"`
}

func (ReportGroupExportConfigS3DestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportGroupExportConfigS3Destination)(nil)).Elem()
}

func (i ReportGroupExportConfigS3DestinationArgs) ToReportGroupExportConfigS3DestinationOutput() ReportGroupExportConfigS3DestinationOutput {
	return i.ToReportGroupExportConfigS3DestinationOutputWithContext(context.Background())
}

func (i ReportGroupExportConfigS3DestinationArgs) ToReportGroupExportConfigS3DestinationOutputWithContext(ctx context.Context) ReportGroupExportConfigS3DestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportGroupExportConfigS3DestinationOutput)
}

func (i ReportGroupExportConfigS3DestinationArgs) ToReportGroupExportConfigS3DestinationPtrOutput() ReportGroupExportConfigS3DestinationPtrOutput {
	return i.ToReportGroupExportConfigS3DestinationPtrOutputWithContext(context.Background())
}

func (i ReportGroupExportConfigS3DestinationArgs) ToReportGroupExportConfigS3DestinationPtrOutputWithContext(ctx context.Context) ReportGroupExportConfigS3DestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportGroupExportConfigS3DestinationOutput).ToReportGroupExportConfigS3DestinationPtrOutputWithContext(ctx)
}

// ReportGroupExportConfigS3DestinationPtrInput is an input type that accepts ReportGroupExportConfigS3DestinationArgs, ReportGroupExportConfigS3DestinationPtr and ReportGroupExportConfigS3DestinationPtrOutput values.
// You can construct a concrete instance of `ReportGroupExportConfigS3DestinationPtrInput` via:
//
//	        ReportGroupExportConfigS3DestinationArgs{...}
//
//	or:
//
//	        nil
type ReportGroupExportConfigS3DestinationPtrInput interface {
	pulumi.Input

	ToReportGroupExportConfigS3DestinationPtrOutput() ReportGroupExportConfigS3DestinationPtrOutput
	ToReportGroupExportConfigS3DestinationPtrOutputWithContext(context.Context) ReportGroupExportConfigS3DestinationPtrOutput
}

type reportGroupExportConfigS3DestinationPtrType ReportGroupExportConfigS3DestinationArgs

func ReportGroupExportConfigS3DestinationPtr(v *ReportGroupExportConfigS3DestinationArgs) ReportGroupExportConfigS3DestinationPtrInput {
	return (*reportGroupExportConfigS3DestinationPtrType)(v)
}

func (*reportGroupExportConfigS3DestinationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportGroupExportConfigS3Destination)(nil)).Elem()
}

func (i *reportGroupExportConfigS3DestinationPtrType) ToReportGroupExportConfigS3DestinationPtrOutput() ReportGroupExportConfigS3DestinationPtrOutput {
	return i.ToReportGroupExportConfigS3DestinationPtrOutputWithContext(context.Background())
}

func (i *reportGroupExportConfigS3DestinationPtrType) ToReportGroupExportConfigS3DestinationPtrOutputWithContext(ctx context.Context) ReportGroupExportConfigS3DestinationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ReportGroupExportConfigS3DestinationPtrOutput)
}

type ReportGroupExportConfigS3DestinationOutput struct{ *pulumi.OutputState }

func (ReportGroupExportConfigS3DestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ReportGroupExportConfigS3Destination)(nil)).Elem()
}

func (o ReportGroupExportConfigS3DestinationOutput) ToReportGroupExportConfigS3DestinationOutput() ReportGroupExportConfigS3DestinationOutput {
	return o
}

func (o ReportGroupExportConfigS3DestinationOutput) ToReportGroupExportConfigS3DestinationOutputWithContext(ctx context.Context) ReportGroupExportConfigS3DestinationOutput {
	return o
}

func (o ReportGroupExportConfigS3DestinationOutput) ToReportGroupExportConfigS3DestinationPtrOutput() ReportGroupExportConfigS3DestinationPtrOutput {
	return o.ToReportGroupExportConfigS3DestinationPtrOutputWithContext(context.Background())
}

func (o ReportGroupExportConfigS3DestinationOutput) ToReportGroupExportConfigS3DestinationPtrOutputWithContext(ctx context.Context) ReportGroupExportConfigS3DestinationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ReportGroupExportConfigS3Destination) *ReportGroupExportConfigS3Destination {
		return &v
	}).(ReportGroupExportConfigS3DestinationPtrOutput)
}

func (o ReportGroupExportConfigS3DestinationOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v ReportGroupExportConfigS3Destination) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o ReportGroupExportConfigS3DestinationOutput) EncryptionDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ReportGroupExportConfigS3Destination) *bool { return v.EncryptionDisabled }).(pulumi.BoolPtrOutput)
}

func (o ReportGroupExportConfigS3DestinationOutput) EncryptionKey() pulumi.StringOutput {
	return o.ApplyT(func(v ReportGroupExportConfigS3Destination) string { return v.EncryptionKey }).(pulumi.StringOutput)
}

func (o ReportGroupExportConfigS3DestinationOutput) Packaging() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportGroupExportConfigS3Destination) *string { return v.Packaging }).(pulumi.StringPtrOutput)
}

func (o ReportGroupExportConfigS3DestinationOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ReportGroupExportConfigS3Destination) *string { return v.Path }).(pulumi.StringPtrOutput)
}

type ReportGroupExportConfigS3DestinationPtrOutput struct{ *pulumi.OutputState }

func (ReportGroupExportConfigS3DestinationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ReportGroupExportConfigS3Destination)(nil)).Elem()
}

func (o ReportGroupExportConfigS3DestinationPtrOutput) ToReportGroupExportConfigS3DestinationPtrOutput() ReportGroupExportConfigS3DestinationPtrOutput {
	return o
}

func (o ReportGroupExportConfigS3DestinationPtrOutput) ToReportGroupExportConfigS3DestinationPtrOutputWithContext(ctx context.Context) ReportGroupExportConfigS3DestinationPtrOutput {
	return o
}

func (o ReportGroupExportConfigS3DestinationPtrOutput) Elem() ReportGroupExportConfigS3DestinationOutput {
	return o.ApplyT(func(v *ReportGroupExportConfigS3Destination) ReportGroupExportConfigS3Destination {
		if v != nil {
			return *v
		}
		var ret ReportGroupExportConfigS3Destination
		return ret
	}).(ReportGroupExportConfigS3DestinationOutput)
}

func (o ReportGroupExportConfigS3DestinationPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportGroupExportConfigS3Destination) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

func (o ReportGroupExportConfigS3DestinationPtrOutput) EncryptionDisabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ReportGroupExportConfigS3Destination) *bool {
		if v == nil {
			return nil
		}
		return v.EncryptionDisabled
	}).(pulumi.BoolPtrOutput)
}

func (o ReportGroupExportConfigS3DestinationPtrOutput) EncryptionKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportGroupExportConfigS3Destination) *string {
		if v == nil {
			return nil
		}
		return &v.EncryptionKey
	}).(pulumi.StringPtrOutput)
}

func (o ReportGroupExportConfigS3DestinationPtrOutput) Packaging() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportGroupExportConfigS3Destination) *string {
		if v == nil {
			return nil
		}
		return v.Packaging
	}).(pulumi.StringPtrOutput)
}

func (o ReportGroupExportConfigS3DestinationPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ReportGroupExportConfigS3Destination) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

type WebhookFilterGroup struct {
	Filters []WebhookFilterGroupFilter `pulumi:"filters"`
}

// WebhookFilterGroupInput is an input type that accepts WebhookFilterGroupArgs and WebhookFilterGroupOutput values.
// You can construct a concrete instance of `WebhookFilterGroupInput` via:
//
//	WebhookFilterGroupArgs{...}
type WebhookFilterGroupInput interface {
	pulumi.Input

	ToWebhookFilterGroupOutput() WebhookFilterGroupOutput
	ToWebhookFilterGroupOutputWithContext(context.Context) WebhookFilterGroupOutput
}

type WebhookFilterGroupArgs struct {
	Filters WebhookFilterGroupFilterArrayInput `pulumi:"filters"`
}

func (WebhookFilterGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookFilterGroup)(nil)).Elem()
}

func (i WebhookFilterGroupArgs) ToWebhookFilterGroupOutput() WebhookFilterGroupOutput {
	return i.ToWebhookFilterGroupOutputWithContext(context.Background())
}

func (i WebhookFilterGroupArgs) ToWebhookFilterGroupOutputWithContext(ctx context.Context) WebhookFilterGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookFilterGroupOutput)
}

// WebhookFilterGroupArrayInput is an input type that accepts WebhookFilterGroupArray and WebhookFilterGroupArrayOutput values.
// You can construct a concrete instance of `WebhookFilterGroupArrayInput` via:
//
//	WebhookFilterGroupArray{ WebhookFilterGroupArgs{...} }
type WebhookFilterGroupArrayInput interface {
	pulumi.Input

	ToWebhookFilterGroupArrayOutput() WebhookFilterGroupArrayOutput
	ToWebhookFilterGroupArrayOutputWithContext(context.Context) WebhookFilterGroupArrayOutput
}

type WebhookFilterGroupArray []WebhookFilterGroupInput

func (WebhookFilterGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookFilterGroup)(nil)).Elem()
}

func (i WebhookFilterGroupArray) ToWebhookFilterGroupArrayOutput() WebhookFilterGroupArrayOutput {
	return i.ToWebhookFilterGroupArrayOutputWithContext(context.Background())
}

func (i WebhookFilterGroupArray) ToWebhookFilterGroupArrayOutputWithContext(ctx context.Context) WebhookFilterGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookFilterGroupArrayOutput)
}

type WebhookFilterGroupOutput struct{ *pulumi.OutputState }

func (WebhookFilterGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookFilterGroup)(nil)).Elem()
}

func (o WebhookFilterGroupOutput) ToWebhookFilterGroupOutput() WebhookFilterGroupOutput {
	return o
}

func (o WebhookFilterGroupOutput) ToWebhookFilterGroupOutputWithContext(ctx context.Context) WebhookFilterGroupOutput {
	return o
}

func (o WebhookFilterGroupOutput) Filters() WebhookFilterGroupFilterArrayOutput {
	return o.ApplyT(func(v WebhookFilterGroup) []WebhookFilterGroupFilter { return v.Filters }).(WebhookFilterGroupFilterArrayOutput)
}

type WebhookFilterGroupArrayOutput struct{ *pulumi.OutputState }

func (WebhookFilterGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookFilterGroup)(nil)).Elem()
}

func (o WebhookFilterGroupArrayOutput) ToWebhookFilterGroupArrayOutput() WebhookFilterGroupArrayOutput {
	return o
}

func (o WebhookFilterGroupArrayOutput) ToWebhookFilterGroupArrayOutputWithContext(ctx context.Context) WebhookFilterGroupArrayOutput {
	return o
}

func (o WebhookFilterGroupArrayOutput) Index(i pulumi.IntInput) WebhookFilterGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebhookFilterGroup {
		return vs[0].([]WebhookFilterGroup)[vs[1].(int)]
	}).(WebhookFilterGroupOutput)
}

type WebhookFilterGroupFilter struct {
	ExcludeMatchedPattern *bool  `pulumi:"excludeMatchedPattern"`
	Pattern               string `pulumi:"pattern"`
	Type                  string `pulumi:"type"`
}

// WebhookFilterGroupFilterInput is an input type that accepts WebhookFilterGroupFilterArgs and WebhookFilterGroupFilterOutput values.
// You can construct a concrete instance of `WebhookFilterGroupFilterInput` via:
//
//	WebhookFilterGroupFilterArgs{...}
type WebhookFilterGroupFilterInput interface {
	pulumi.Input

	ToWebhookFilterGroupFilterOutput() WebhookFilterGroupFilterOutput
	ToWebhookFilterGroupFilterOutputWithContext(context.Context) WebhookFilterGroupFilterOutput
}

type WebhookFilterGroupFilterArgs struct {
	ExcludeMatchedPattern pulumi.BoolPtrInput `pulumi:"excludeMatchedPattern"`
	Pattern               pulumi.StringInput  `pulumi:"pattern"`
	Type                  pulumi.StringInput  `pulumi:"type"`
}

func (WebhookFilterGroupFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookFilterGroupFilter)(nil)).Elem()
}

func (i WebhookFilterGroupFilterArgs) ToWebhookFilterGroupFilterOutput() WebhookFilterGroupFilterOutput {
	return i.ToWebhookFilterGroupFilterOutputWithContext(context.Background())
}

func (i WebhookFilterGroupFilterArgs) ToWebhookFilterGroupFilterOutputWithContext(ctx context.Context) WebhookFilterGroupFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookFilterGroupFilterOutput)
}

// WebhookFilterGroupFilterArrayInput is an input type that accepts WebhookFilterGroupFilterArray and WebhookFilterGroupFilterArrayOutput values.
// You can construct a concrete instance of `WebhookFilterGroupFilterArrayInput` via:
//
//	WebhookFilterGroupFilterArray{ WebhookFilterGroupFilterArgs{...} }
type WebhookFilterGroupFilterArrayInput interface {
	pulumi.Input

	ToWebhookFilterGroupFilterArrayOutput() WebhookFilterGroupFilterArrayOutput
	ToWebhookFilterGroupFilterArrayOutputWithContext(context.Context) WebhookFilterGroupFilterArrayOutput
}

type WebhookFilterGroupFilterArray []WebhookFilterGroupFilterInput

func (WebhookFilterGroupFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookFilterGroupFilter)(nil)).Elem()
}

func (i WebhookFilterGroupFilterArray) ToWebhookFilterGroupFilterArrayOutput() WebhookFilterGroupFilterArrayOutput {
	return i.ToWebhookFilterGroupFilterArrayOutputWithContext(context.Background())
}

func (i WebhookFilterGroupFilterArray) ToWebhookFilterGroupFilterArrayOutputWithContext(ctx context.Context) WebhookFilterGroupFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookFilterGroupFilterArrayOutput)
}

type WebhookFilterGroupFilterOutput struct{ *pulumi.OutputState }

func (WebhookFilterGroupFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookFilterGroupFilter)(nil)).Elem()
}

func (o WebhookFilterGroupFilterOutput) ToWebhookFilterGroupFilterOutput() WebhookFilterGroupFilterOutput {
	return o
}

func (o WebhookFilterGroupFilterOutput) ToWebhookFilterGroupFilterOutputWithContext(ctx context.Context) WebhookFilterGroupFilterOutput {
	return o
}

func (o WebhookFilterGroupFilterOutput) ExcludeMatchedPattern() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WebhookFilterGroupFilter) *bool { return v.ExcludeMatchedPattern }).(pulumi.BoolPtrOutput)
}

func (o WebhookFilterGroupFilterOutput) Pattern() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookFilterGroupFilter) string { return v.Pattern }).(pulumi.StringOutput)
}

func (o WebhookFilterGroupFilterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v WebhookFilterGroupFilter) string { return v.Type }).(pulumi.StringOutput)
}

type WebhookFilterGroupFilterArrayOutput struct{ *pulumi.OutputState }

func (WebhookFilterGroupFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WebhookFilterGroupFilter)(nil)).Elem()
}

func (o WebhookFilterGroupFilterArrayOutput) ToWebhookFilterGroupFilterArrayOutput() WebhookFilterGroupFilterArrayOutput {
	return o
}

func (o WebhookFilterGroupFilterArrayOutput) ToWebhookFilterGroupFilterArrayOutputWithContext(ctx context.Context) WebhookFilterGroupFilterArrayOutput {
	return o
}

func (o WebhookFilterGroupFilterArrayOutput) Index(i pulumi.IntInput) WebhookFilterGroupFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WebhookFilterGroupFilter {
		return vs[0].([]WebhookFilterGroupFilter)[vs[1].(int)]
	}).(WebhookFilterGroupFilterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectArtifactsInput)(nil)).Elem(), ProjectArtifactsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectArtifactsPtrInput)(nil)).Elem(), ProjectArtifactsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectBuildBatchConfigInput)(nil)).Elem(), ProjectBuildBatchConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectBuildBatchConfigPtrInput)(nil)).Elem(), ProjectBuildBatchConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectBuildBatchConfigRestrictionsInput)(nil)).Elem(), ProjectBuildBatchConfigRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectBuildBatchConfigRestrictionsPtrInput)(nil)).Elem(), ProjectBuildBatchConfigRestrictionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectCacheInput)(nil)).Elem(), ProjectCacheArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectCachePtrInput)(nil)).Elem(), ProjectCacheArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectEnvironmentInput)(nil)).Elem(), ProjectEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectEnvironmentPtrInput)(nil)).Elem(), ProjectEnvironmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectEnvironmentEnvironmentVariableInput)(nil)).Elem(), ProjectEnvironmentEnvironmentVariableArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectEnvironmentEnvironmentVariableArrayInput)(nil)).Elem(), ProjectEnvironmentEnvironmentVariableArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectEnvironmentRegistryCredentialInput)(nil)).Elem(), ProjectEnvironmentRegistryCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectEnvironmentRegistryCredentialPtrInput)(nil)).Elem(), ProjectEnvironmentRegistryCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectFileSystemLocationInput)(nil)).Elem(), ProjectFileSystemLocationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectFileSystemLocationArrayInput)(nil)).Elem(), ProjectFileSystemLocationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectLogsConfigInput)(nil)).Elem(), ProjectLogsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectLogsConfigPtrInput)(nil)).Elem(), ProjectLogsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectLogsConfigCloudwatchLogsInput)(nil)).Elem(), ProjectLogsConfigCloudwatchLogsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectLogsConfigCloudwatchLogsPtrInput)(nil)).Elem(), ProjectLogsConfigCloudwatchLogsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectLogsConfigS3LogsInput)(nil)).Elem(), ProjectLogsConfigS3LogsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectLogsConfigS3LogsPtrInput)(nil)).Elem(), ProjectLogsConfigS3LogsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSecondaryArtifactInput)(nil)).Elem(), ProjectSecondaryArtifactArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSecondaryArtifactArrayInput)(nil)).Elem(), ProjectSecondaryArtifactArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSecondarySourceInput)(nil)).Elem(), ProjectSecondarySourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSecondarySourceArrayInput)(nil)).Elem(), ProjectSecondarySourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSecondarySourceAuthInput)(nil)).Elem(), ProjectSecondarySourceAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSecondarySourceAuthPtrInput)(nil)).Elem(), ProjectSecondarySourceAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSecondarySourceBuildStatusConfigInput)(nil)).Elem(), ProjectSecondarySourceBuildStatusConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSecondarySourceBuildStatusConfigPtrInput)(nil)).Elem(), ProjectSecondarySourceBuildStatusConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSecondarySourceGitSubmodulesConfigInput)(nil)).Elem(), ProjectSecondarySourceGitSubmodulesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSecondarySourceGitSubmodulesConfigPtrInput)(nil)).Elem(), ProjectSecondarySourceGitSubmodulesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSecondarySourceVersionInput)(nil)).Elem(), ProjectSecondarySourceVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSecondarySourceVersionArrayInput)(nil)).Elem(), ProjectSecondarySourceVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSourceInput)(nil)).Elem(), ProjectSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSourcePtrInput)(nil)).Elem(), ProjectSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSourceAuthInput)(nil)).Elem(), ProjectSourceAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSourceAuthPtrInput)(nil)).Elem(), ProjectSourceAuthArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSourceBuildStatusConfigInput)(nil)).Elem(), ProjectSourceBuildStatusConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSourceBuildStatusConfigPtrInput)(nil)).Elem(), ProjectSourceBuildStatusConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSourceGitSubmodulesConfigInput)(nil)).Elem(), ProjectSourceGitSubmodulesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectSourceGitSubmodulesConfigPtrInput)(nil)).Elem(), ProjectSourceGitSubmodulesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectVpcConfigInput)(nil)).Elem(), ProjectVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectVpcConfigPtrInput)(nil)).Elem(), ProjectVpcConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportGroupExportConfigInput)(nil)).Elem(), ReportGroupExportConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportGroupExportConfigPtrInput)(nil)).Elem(), ReportGroupExportConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportGroupExportConfigS3DestinationInput)(nil)).Elem(), ReportGroupExportConfigS3DestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ReportGroupExportConfigS3DestinationPtrInput)(nil)).Elem(), ReportGroupExportConfigS3DestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookFilterGroupInput)(nil)).Elem(), WebhookFilterGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookFilterGroupArrayInput)(nil)).Elem(), WebhookFilterGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookFilterGroupFilterInput)(nil)).Elem(), WebhookFilterGroupFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookFilterGroupFilterArrayInput)(nil)).Elem(), WebhookFilterGroupFilterArray{})
	pulumi.RegisterOutputType(ProjectArtifactsOutput{})
	pulumi.RegisterOutputType(ProjectArtifactsPtrOutput{})
	pulumi.RegisterOutputType(ProjectBuildBatchConfigOutput{})
	pulumi.RegisterOutputType(ProjectBuildBatchConfigPtrOutput{})
	pulumi.RegisterOutputType(ProjectBuildBatchConfigRestrictionsOutput{})
	pulumi.RegisterOutputType(ProjectBuildBatchConfigRestrictionsPtrOutput{})
	pulumi.RegisterOutputType(ProjectCacheOutput{})
	pulumi.RegisterOutputType(ProjectCachePtrOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentPtrOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentEnvironmentVariableOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentEnvironmentVariableArrayOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentRegistryCredentialOutput{})
	pulumi.RegisterOutputType(ProjectEnvironmentRegistryCredentialPtrOutput{})
	pulumi.RegisterOutputType(ProjectFileSystemLocationOutput{})
	pulumi.RegisterOutputType(ProjectFileSystemLocationArrayOutput{})
	pulumi.RegisterOutputType(ProjectLogsConfigOutput{})
	pulumi.RegisterOutputType(ProjectLogsConfigPtrOutput{})
	pulumi.RegisterOutputType(ProjectLogsConfigCloudwatchLogsOutput{})
	pulumi.RegisterOutputType(ProjectLogsConfigCloudwatchLogsPtrOutput{})
	pulumi.RegisterOutputType(ProjectLogsConfigS3LogsOutput{})
	pulumi.RegisterOutputType(ProjectLogsConfigS3LogsPtrOutput{})
	pulumi.RegisterOutputType(ProjectSecondaryArtifactOutput{})
	pulumi.RegisterOutputType(ProjectSecondaryArtifactArrayOutput{})
	pulumi.RegisterOutputType(ProjectSecondarySourceOutput{})
	pulumi.RegisterOutputType(ProjectSecondarySourceArrayOutput{})
	pulumi.RegisterOutputType(ProjectSecondarySourceAuthOutput{})
	pulumi.RegisterOutputType(ProjectSecondarySourceAuthPtrOutput{})
	pulumi.RegisterOutputType(ProjectSecondarySourceBuildStatusConfigOutput{})
	pulumi.RegisterOutputType(ProjectSecondarySourceBuildStatusConfigPtrOutput{})
	pulumi.RegisterOutputType(ProjectSecondarySourceGitSubmodulesConfigOutput{})
	pulumi.RegisterOutputType(ProjectSecondarySourceGitSubmodulesConfigPtrOutput{})
	pulumi.RegisterOutputType(ProjectSecondarySourceVersionOutput{})
	pulumi.RegisterOutputType(ProjectSecondarySourceVersionArrayOutput{})
	pulumi.RegisterOutputType(ProjectSourceOutput{})
	pulumi.RegisterOutputType(ProjectSourcePtrOutput{})
	pulumi.RegisterOutputType(ProjectSourceAuthOutput{})
	pulumi.RegisterOutputType(ProjectSourceAuthPtrOutput{})
	pulumi.RegisterOutputType(ProjectSourceBuildStatusConfigOutput{})
	pulumi.RegisterOutputType(ProjectSourceBuildStatusConfigPtrOutput{})
	pulumi.RegisterOutputType(ProjectSourceGitSubmodulesConfigOutput{})
	pulumi.RegisterOutputType(ProjectSourceGitSubmodulesConfigPtrOutput{})
	pulumi.RegisterOutputType(ProjectVpcConfigOutput{})
	pulumi.RegisterOutputType(ProjectVpcConfigPtrOutput{})
	pulumi.RegisterOutputType(ReportGroupExportConfigOutput{})
	pulumi.RegisterOutputType(ReportGroupExportConfigPtrOutput{})
	pulumi.RegisterOutputType(ReportGroupExportConfigS3DestinationOutput{})
	pulumi.RegisterOutputType(ReportGroupExportConfigS3DestinationPtrOutput{})
	pulumi.RegisterOutputType(WebhookFilterGroupOutput{})
	pulumi.RegisterOutputType(WebhookFilterGroupArrayOutput{})
	pulumi.RegisterOutputType(WebhookFilterGroupFilterOutput{})
	pulumi.RegisterOutputType(WebhookFilterGroupFilterArrayOutput{})
}
