// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package codebuild

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a CodeBuild Project resource. See also the `codebuild.Webhook` resource, which manages the webhook to the source (e.g. the "rebuild every time a code change is pushed" option in the CodeBuild web console).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/codebuild"
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/iam"
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/s3"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		exampleBucket, err := s3.NewBucket(ctx, "exampleBucket", &s3.BucketArgs{
// 			Acl: pulumi.String("private"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		exampleRole, err := iam.NewRole(ctx, "exampleRole", &iam.RoleArgs{
// 			AssumeRolePolicy: pulumi.Any(fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v", "{\n", "  \"Version\": \"2012-10-17\",\n", "  \"Statement\": [\n", "    {\n", "      \"Effect\": \"Allow\",\n", "      \"Principal\": {\n", "        \"Service\": \"codebuild.amazonaws.com\"\n", "      },\n", "      \"Action\": \"sts:AssumeRole\"\n", "    }\n", "  ]\n", "}\n")),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = iam.NewRolePolicy(ctx, "exampleRolePolicy", &iam.RolePolicyArgs{
// 			Role: exampleRole.Name,
// 			Policy: pulumi.All(exampleBucket.Arn, exampleBucket.Arn).ApplyT(func(_args []interface{}) (string, error) {
// 				exampleBucketArn := _args[0].(string)
// 				exampleBucketArn1 := _args[1].(string)
// 				return fmt.Sprintf("%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v%v", "{\n", "  \"Version\": \"2012-10-17\",\n", "  \"Statement\": [\n", "    {\n", "      \"Effect\": \"Allow\",\n", "      \"Resource\": [\n", "        \"*\"\n", "      ],\n", "      \"Action\": [\n", "        \"logs:CreateLogGroup\",\n", "        \"logs:CreateLogStream\",\n", "        \"logs:PutLogEvents\"\n", "      ]\n", "    },\n", "    {\n", "      \"Effect\": \"Allow\",\n", "      \"Action\": [\n", "        \"ec2:CreateNetworkInterface\",\n", "        \"ec2:DescribeDhcpOptions\",\n", "        \"ec2:DescribeNetworkInterfaces\",\n", "        \"ec2:DeleteNetworkInterface\",\n", "        \"ec2:DescribeSubnets\",\n", "        \"ec2:DescribeSecurityGroups\",\n", "        \"ec2:DescribeVpcs\"\n", "      ],\n", "      \"Resource\": \"*\"\n", "    },\n", "    {\n", "      \"Effect\": \"Allow\",\n", "      \"Action\": [\n", "        \"ec2:CreateNetworkInterfacePermission\"\n", "      ],\n", "      \"Resource\": [\n", "        \"arn:aws:ec2:us-east-1:123456789012:network-interface/*\"\n", "      ],\n", "      \"Condition\": {\n", "        \"StringEquals\": {\n", "          \"ec2:Subnet\": [\n", "            \"", aws_subnet.Example1.Arn, "\",\n", "            \"", aws_subnet.Example2.Arn, "\"\n", "          ],\n", "          \"ec2:AuthorizedService\": \"codebuild.amazonaws.com\"\n", "        }\n", "      }\n", "    },\n", "    {\n", "      \"Effect\": \"Allow\",\n", "      \"Action\": [\n", "        \"s3:*\"\n", "      ],\n", "      \"Resource\": [\n", "        \"", exampleBucketArn, "\",\n", "        \"", exampleBucketArn1, "/*\"\n", "      ]\n", "    }\n", "  ]\n", "}\n"), nil
// 			}).(pulumi.StringOutput),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = codebuild.NewProject(ctx, "exampleProject", &codebuild.ProjectArgs{
// 			Description:  pulumi.String("test_codebuild_project"),
// 			BuildTimeout: pulumi.Int(5),
// 			ServiceRole:  exampleRole.Arn,
// 			Artifacts: &codebuild.ProjectArtifactsArgs{
// 				Type: pulumi.String("NO_ARTIFACTS"),
// 			},
// 			Cache: &codebuild.ProjectCacheArgs{
// 				Type:     pulumi.String("S3"),
// 				Location: exampleBucket.Bucket,
// 			},
// 			Environment: &codebuild.ProjectEnvironmentArgs{
// 				ComputeType:              pulumi.String("BUILD_GENERAL1_SMALL"),
// 				Image:                    pulumi.String("aws/codebuild/standard:1.0"),
// 				Type:                     pulumi.String("LINUX_CONTAINER"),
// 				ImagePullCredentialsType: pulumi.String("CODEBUILD"),
// 				EnvironmentVariables: codebuild.ProjectEnvironmentEnvironmentVariableArray{
// 					&codebuild.ProjectEnvironmentEnvironmentVariableArgs{
// 						Name:  pulumi.String("SOME_KEY1"),
// 						Value: pulumi.String("SOME_VALUE1"),
// 					},
// 					&codebuild.ProjectEnvironmentEnvironmentVariableArgs{
// 						Name:  pulumi.String("SOME_KEY2"),
// 						Value: pulumi.String("SOME_VALUE2"),
// 						Type:  pulumi.String("PARAMETER_STORE"),
// 					},
// 				},
// 			},
// 			LogsConfig: &codebuild.ProjectLogsConfigArgs{
// 				CloudwatchLogs: &codebuild.ProjectLogsConfigCloudwatchLogsArgs{
// 					GroupName:  pulumi.String("log-group"),
// 					StreamName: pulumi.String("log-stream"),
// 				},
// 				S3Logs: &codebuild.ProjectLogsConfigS3LogsArgs{
// 					Status: pulumi.String("ENABLED"),
// 					Location: exampleBucket.ID().ApplyT(func(id string) (string, error) {
// 						return fmt.Sprintf("%v%v", id, "/build-log"), nil
// 					}).(pulumi.StringOutput),
// 				},
// 			},
// 			Source: &codebuild.ProjectSourceArgs{
// 				Type:          pulumi.String("GITHUB"),
// 				Location:      pulumi.String("https://github.com/mitchellh/packer.git"),
// 				GitCloneDepth: pulumi.Int(1),
// 				GitSubmodulesConfig: &codebuild.ProjectSourceGitSubmodulesConfigArgs{
// 					FetchSubmodules: pulumi.Bool(true),
// 				},
// 			},
// 			SourceVersion: pulumi.String("master"),
// 			VpcConfig: &codebuild.ProjectVpcConfigArgs{
// 				VpcId: pulumi.Any(aws_vpc.Example.Id),
// 				Subnets: pulumi.StringArray{
// 					pulumi.Any(aws_subnet.Example1.Id),
// 					pulumi.Any(aws_subnet.Example2.Id),
// 				},
// 				SecurityGroupIds: pulumi.StringArray{
// 					pulumi.Any(aws_security_group.Example1.Id),
// 					pulumi.Any(aws_security_group.Example2.Id),
// 				},
// 			},
// 			Tags: pulumi.StringMap{
// 				"Environment": pulumi.String("Test"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = codebuild.NewProject(ctx, "project_with_cache", &codebuild.ProjectArgs{
// 			Description:   pulumi.String("test_codebuild_project_cache"),
// 			BuildTimeout:  pulumi.Int(5),
// 			QueuedTimeout: pulumi.Int(5),
// 			ServiceRole:   exampleRole.Arn,
// 			Artifacts: &codebuild.ProjectArtifactsArgs{
// 				Type: pulumi.String("NO_ARTIFACTS"),
// 			},
// 			Cache: &codebuild.ProjectCacheArgs{
// 				Type: pulumi.String("LOCAL"),
// 				Modes: pulumi.StringArray{
// 					pulumi.String("LOCAL_DOCKER_LAYER_CACHE"),
// 					pulumi.String("LOCAL_SOURCE_CACHE"),
// 				},
// 			},
// 			Environment: &codebuild.ProjectEnvironmentArgs{
// 				ComputeType:              pulumi.String("BUILD_GENERAL1_SMALL"),
// 				Image:                    pulumi.String("aws/codebuild/standard:1.0"),
// 				Type:                     pulumi.String("LINUX_CONTAINER"),
// 				ImagePullCredentialsType: pulumi.String("CODEBUILD"),
// 				EnvironmentVariables: codebuild.ProjectEnvironmentEnvironmentVariableArray{
// 					&codebuild.ProjectEnvironmentEnvironmentVariableArgs{
// 						Name:  pulumi.String("SOME_KEY1"),
// 						Value: pulumi.String("SOME_VALUE1"),
// 					},
// 				},
// 			},
// 			Source: &codebuild.ProjectSourceArgs{
// 				Type:          pulumi.String("GITHUB"),
// 				Location:      pulumi.String("https://github.com/mitchellh/packer.git"),
// 				GitCloneDepth: pulumi.Int(1),
// 			},
// 			Tags: pulumi.StringMap{
// 				"Environment": pulumi.String("Test"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// CodeBuild Project can be imported using the `name`, e.g.
//
// ```sh
//  $ pulumi import aws:codebuild/project:Project name project-name
// ```
type Project struct {
	pulumi.CustomResourceState

	// ARN of the CodeBuild project.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Configuration block. Detailed below.
	Artifacts ProjectArtifactsOutput `pulumi:"artifacts"`
	// Generates a publicly-accessible URL for the projects build badge. Available as `badgeUrl` attribute when enabled.
	BadgeEnabled pulumi.BoolPtrOutput `pulumi:"badgeEnabled"`
	// URL of the build badge when `badgeEnabled` is enabled.
	BadgeUrl pulumi.StringOutput `pulumi:"badgeUrl"`
	// Defines the batch build options for the project.
	BuildBatchConfig ProjectBuildBatchConfigPtrOutput `pulumi:"buildBatchConfig"`
	// Number of minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait until timing out any related build that does not get marked as completed. The default is 60 minutes.
	BuildTimeout pulumi.IntPtrOutput `pulumi:"buildTimeout"`
	// Configuration block. Detailed below.
	Cache ProjectCachePtrOutput `pulumi:"cache"`
	// Specify a maximum number of concurrent builds for the project. The value specified must be greater than 0 and less than the account concurrent running builds limit.
	ConcurrentBuildLimit pulumi.IntPtrOutput `pulumi:"concurrentBuildLimit"`
	// Short description of the project.
	Description pulumi.StringOutput `pulumi:"description"`
	// AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build project's build output artifacts.
	EncryptionKey pulumi.StringOutput `pulumi:"encryptionKey"`
	// Configuration block. Detailed below.
	Environment ProjectEnvironmentOutput `pulumi:"environment"`
	// A set of file system locations to to mount inside the build. File system locations are documented below.
	FileSystemLocations ProjectFileSystemLocationArrayOutput `pulumi:"fileSystemLocations"`
	// Configuration block. Detailed below.
	LogsConfig ProjectLogsConfigPtrOutput `pulumi:"logsConfig"`
	// Name of the project. If `type` is set to `S3`, this is the name of the output artifact object
	Name pulumi.StringOutput `pulumi:"name"`
	// Number of minutes, from 5 to 480 (8 hours), a build is allowed to be queued before it times out. The default is 8 hours.
	QueuedTimeout pulumi.IntPtrOutput `pulumi:"queuedTimeout"`
	// Configuration block. Detailed below.
	SecondaryArtifacts ProjectSecondaryArtifactArrayOutput `pulumi:"secondaryArtifacts"`
	// Configuration block. Detailed below.
	SecondarySources ProjectSecondarySourceArrayOutput `pulumi:"secondarySources"`
	// Specifies the service role ARN for the batch build project.
	ServiceRole pulumi.StringOutput `pulumi:"serviceRole"`
	// Configuration block. Detailed below.
	Source ProjectSourceOutput `pulumi:"source"`
	// Version of the build input to be built for this project. If not specified, the latest version is used.
	SourceVersion pulumi.StringPtrOutput `pulumi:"sourceVersion"`
	// Map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
	// Configuration block. Detailed below.
	VpcConfig ProjectVpcConfigPtrOutput `pulumi:"vpcConfig"`
}

// NewProject registers a new resource with the given unique name, arguments, and options.
func NewProject(ctx *pulumi.Context,
	name string, args *ProjectArgs, opts ...pulumi.ResourceOption) (*Project, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Artifacts == nil {
		return nil, errors.New("invalid value for required argument 'Artifacts'")
	}
	if args.Environment == nil {
		return nil, errors.New("invalid value for required argument 'Environment'")
	}
	if args.ServiceRole == nil {
		return nil, errors.New("invalid value for required argument 'ServiceRole'")
	}
	if args.Source == nil {
		return nil, errors.New("invalid value for required argument 'Source'")
	}
	var resource Project
	err := ctx.RegisterResource("aws:codebuild/project:Project", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProject gets an existing Project resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProject(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProjectState, opts ...pulumi.ResourceOption) (*Project, error) {
	var resource Project
	err := ctx.ReadResource("aws:codebuild/project:Project", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Project resources.
type projectState struct {
	// ARN of the CodeBuild project.
	Arn *string `pulumi:"arn"`
	// Configuration block. Detailed below.
	Artifacts *ProjectArtifacts `pulumi:"artifacts"`
	// Generates a publicly-accessible URL for the projects build badge. Available as `badgeUrl` attribute when enabled.
	BadgeEnabled *bool `pulumi:"badgeEnabled"`
	// URL of the build badge when `badgeEnabled` is enabled.
	BadgeUrl *string `pulumi:"badgeUrl"`
	// Defines the batch build options for the project.
	BuildBatchConfig *ProjectBuildBatchConfig `pulumi:"buildBatchConfig"`
	// Number of minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait until timing out any related build that does not get marked as completed. The default is 60 minutes.
	BuildTimeout *int `pulumi:"buildTimeout"`
	// Configuration block. Detailed below.
	Cache *ProjectCache `pulumi:"cache"`
	// Specify a maximum number of concurrent builds for the project. The value specified must be greater than 0 and less than the account concurrent running builds limit.
	ConcurrentBuildLimit *int `pulumi:"concurrentBuildLimit"`
	// Short description of the project.
	Description *string `pulumi:"description"`
	// AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build project's build output artifacts.
	EncryptionKey *string `pulumi:"encryptionKey"`
	// Configuration block. Detailed below.
	Environment *ProjectEnvironment `pulumi:"environment"`
	// A set of file system locations to to mount inside the build. File system locations are documented below.
	FileSystemLocations []ProjectFileSystemLocation `pulumi:"fileSystemLocations"`
	// Configuration block. Detailed below.
	LogsConfig *ProjectLogsConfig `pulumi:"logsConfig"`
	// Name of the project. If `type` is set to `S3`, this is the name of the output artifact object
	Name *string `pulumi:"name"`
	// Number of minutes, from 5 to 480 (8 hours), a build is allowed to be queued before it times out. The default is 8 hours.
	QueuedTimeout *int `pulumi:"queuedTimeout"`
	// Configuration block. Detailed below.
	SecondaryArtifacts []ProjectSecondaryArtifact `pulumi:"secondaryArtifacts"`
	// Configuration block. Detailed below.
	SecondarySources []ProjectSecondarySource `pulumi:"secondarySources"`
	// Specifies the service role ARN for the batch build project.
	ServiceRole *string `pulumi:"serviceRole"`
	// Configuration block. Detailed below.
	Source *ProjectSource `pulumi:"source"`
	// Version of the build input to be built for this project. If not specified, the latest version is used.
	SourceVersion *string `pulumi:"sourceVersion"`
	// Map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Configuration block. Detailed below.
	VpcConfig *ProjectVpcConfig `pulumi:"vpcConfig"`
}

type ProjectState struct {
	// ARN of the CodeBuild project.
	Arn pulumi.StringPtrInput
	// Configuration block. Detailed below.
	Artifacts ProjectArtifactsPtrInput
	// Generates a publicly-accessible URL for the projects build badge. Available as `badgeUrl` attribute when enabled.
	BadgeEnabled pulumi.BoolPtrInput
	// URL of the build badge when `badgeEnabled` is enabled.
	BadgeUrl pulumi.StringPtrInput
	// Defines the batch build options for the project.
	BuildBatchConfig ProjectBuildBatchConfigPtrInput
	// Number of minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait until timing out any related build that does not get marked as completed. The default is 60 minutes.
	BuildTimeout pulumi.IntPtrInput
	// Configuration block. Detailed below.
	Cache ProjectCachePtrInput
	// Specify a maximum number of concurrent builds for the project. The value specified must be greater than 0 and less than the account concurrent running builds limit.
	ConcurrentBuildLimit pulumi.IntPtrInput
	// Short description of the project.
	Description pulumi.StringPtrInput
	// AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build project's build output artifacts.
	EncryptionKey pulumi.StringPtrInput
	// Configuration block. Detailed below.
	Environment ProjectEnvironmentPtrInput
	// A set of file system locations to to mount inside the build. File system locations are documented below.
	FileSystemLocations ProjectFileSystemLocationArrayInput
	// Configuration block. Detailed below.
	LogsConfig ProjectLogsConfigPtrInput
	// Name of the project. If `type` is set to `S3`, this is the name of the output artifact object
	Name pulumi.StringPtrInput
	// Number of minutes, from 5 to 480 (8 hours), a build is allowed to be queued before it times out. The default is 8 hours.
	QueuedTimeout pulumi.IntPtrInput
	// Configuration block. Detailed below.
	SecondaryArtifacts ProjectSecondaryArtifactArrayInput
	// Configuration block. Detailed below.
	SecondarySources ProjectSecondarySourceArrayInput
	// Specifies the service role ARN for the batch build project.
	ServiceRole pulumi.StringPtrInput
	// Configuration block. Detailed below.
	Source ProjectSourcePtrInput
	// Version of the build input to be built for this project. If not specified, the latest version is used.
	SourceVersion pulumi.StringPtrInput
	// Map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider.
	TagsAll pulumi.StringMapInput
	// Configuration block. Detailed below.
	VpcConfig ProjectVpcConfigPtrInput
}

func (ProjectState) ElementType() reflect.Type {
	return reflect.TypeOf((*projectState)(nil)).Elem()
}

type projectArgs struct {
	// Configuration block. Detailed below.
	Artifacts ProjectArtifacts `pulumi:"artifacts"`
	// Generates a publicly-accessible URL for the projects build badge. Available as `badgeUrl` attribute when enabled.
	BadgeEnabled *bool `pulumi:"badgeEnabled"`
	// Defines the batch build options for the project.
	BuildBatchConfig *ProjectBuildBatchConfig `pulumi:"buildBatchConfig"`
	// Number of minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait until timing out any related build that does not get marked as completed. The default is 60 minutes.
	BuildTimeout *int `pulumi:"buildTimeout"`
	// Configuration block. Detailed below.
	Cache *ProjectCache `pulumi:"cache"`
	// Specify a maximum number of concurrent builds for the project. The value specified must be greater than 0 and less than the account concurrent running builds limit.
	ConcurrentBuildLimit *int `pulumi:"concurrentBuildLimit"`
	// Short description of the project.
	Description *string `pulumi:"description"`
	// AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build project's build output artifacts.
	EncryptionKey *string `pulumi:"encryptionKey"`
	// Configuration block. Detailed below.
	Environment ProjectEnvironment `pulumi:"environment"`
	// A set of file system locations to to mount inside the build. File system locations are documented below.
	FileSystemLocations []ProjectFileSystemLocation `pulumi:"fileSystemLocations"`
	// Configuration block. Detailed below.
	LogsConfig *ProjectLogsConfig `pulumi:"logsConfig"`
	// Name of the project. If `type` is set to `S3`, this is the name of the output artifact object
	Name *string `pulumi:"name"`
	// Number of minutes, from 5 to 480 (8 hours), a build is allowed to be queued before it times out. The default is 8 hours.
	QueuedTimeout *int `pulumi:"queuedTimeout"`
	// Configuration block. Detailed below.
	SecondaryArtifacts []ProjectSecondaryArtifact `pulumi:"secondaryArtifacts"`
	// Configuration block. Detailed below.
	SecondarySources []ProjectSecondarySource `pulumi:"secondarySources"`
	// Specifies the service role ARN for the batch build project.
	ServiceRole string `pulumi:"serviceRole"`
	// Configuration block. Detailed below.
	Source ProjectSource `pulumi:"source"`
	// Version of the build input to be built for this project. If not specified, the latest version is used.
	SourceVersion *string `pulumi:"sourceVersion"`
	// Map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// A map of tags assigned to the resource, including those inherited from the provider.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Configuration block. Detailed below.
	VpcConfig *ProjectVpcConfig `pulumi:"vpcConfig"`
}

// The set of arguments for constructing a Project resource.
type ProjectArgs struct {
	// Configuration block. Detailed below.
	Artifacts ProjectArtifactsInput
	// Generates a publicly-accessible URL for the projects build badge. Available as `badgeUrl` attribute when enabled.
	BadgeEnabled pulumi.BoolPtrInput
	// Defines the batch build options for the project.
	BuildBatchConfig ProjectBuildBatchConfigPtrInput
	// Number of minutes, from 5 to 480 (8 hours), for AWS CodeBuild to wait until timing out any related build that does not get marked as completed. The default is 60 minutes.
	BuildTimeout pulumi.IntPtrInput
	// Configuration block. Detailed below.
	Cache ProjectCachePtrInput
	// Specify a maximum number of concurrent builds for the project. The value specified must be greater than 0 and less than the account concurrent running builds limit.
	ConcurrentBuildLimit pulumi.IntPtrInput
	// Short description of the project.
	Description pulumi.StringPtrInput
	// AWS Key Management Service (AWS KMS) customer master key (CMK) to be used for encrypting the build project's build output artifacts.
	EncryptionKey pulumi.StringPtrInput
	// Configuration block. Detailed below.
	Environment ProjectEnvironmentInput
	// A set of file system locations to to mount inside the build. File system locations are documented below.
	FileSystemLocations ProjectFileSystemLocationArrayInput
	// Configuration block. Detailed below.
	LogsConfig ProjectLogsConfigPtrInput
	// Name of the project. If `type` is set to `S3`, this is the name of the output artifact object
	Name pulumi.StringPtrInput
	// Number of minutes, from 5 to 480 (8 hours), a build is allowed to be queued before it times out. The default is 8 hours.
	QueuedTimeout pulumi.IntPtrInput
	// Configuration block. Detailed below.
	SecondaryArtifacts ProjectSecondaryArtifactArrayInput
	// Configuration block. Detailed below.
	SecondarySources ProjectSecondarySourceArrayInput
	// Specifies the service role ARN for the batch build project.
	ServiceRole pulumi.StringInput
	// Configuration block. Detailed below.
	Source ProjectSourceInput
	// Version of the build input to be built for this project. If not specified, the latest version is used.
	SourceVersion pulumi.StringPtrInput
	// Map of tags to assign to the resource. .If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// A map of tags assigned to the resource, including those inherited from the provider.
	TagsAll pulumi.StringMapInput
	// Configuration block. Detailed below.
	VpcConfig ProjectVpcConfigPtrInput
}

func (ProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*projectArgs)(nil)).Elem()
}

type ProjectInput interface {
	pulumi.Input

	ToProjectOutput() ProjectOutput
	ToProjectOutputWithContext(ctx context.Context) ProjectOutput
}

func (*Project) ElementType() reflect.Type {
	return reflect.TypeOf((*Project)(nil))
}

func (i *Project) ToProjectOutput() ProjectOutput {
	return i.ToProjectOutputWithContext(context.Background())
}

func (i *Project) ToProjectOutputWithContext(ctx context.Context) ProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectOutput)
}

func (i *Project) ToProjectPtrOutput() ProjectPtrOutput {
	return i.ToProjectPtrOutputWithContext(context.Background())
}

func (i *Project) ToProjectPtrOutputWithContext(ctx context.Context) ProjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectPtrOutput)
}

type ProjectPtrInput interface {
	pulumi.Input

	ToProjectPtrOutput() ProjectPtrOutput
	ToProjectPtrOutputWithContext(ctx context.Context) ProjectPtrOutput
}

type projectPtrType ProjectArgs

func (*projectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**Project)(nil))
}

func (i *projectPtrType) ToProjectPtrOutput() ProjectPtrOutput {
	return i.ToProjectPtrOutputWithContext(context.Background())
}

func (i *projectPtrType) ToProjectPtrOutputWithContext(ctx context.Context) ProjectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectPtrOutput)
}

// ProjectArrayInput is an input type that accepts ProjectArray and ProjectArrayOutput values.
// You can construct a concrete instance of `ProjectArrayInput` via:
//
//          ProjectArray{ ProjectArgs{...} }
type ProjectArrayInput interface {
	pulumi.Input

	ToProjectArrayOutput() ProjectArrayOutput
	ToProjectArrayOutputWithContext(context.Context) ProjectArrayOutput
}

type ProjectArray []ProjectInput

func (ProjectArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*Project)(nil))
}

func (i ProjectArray) ToProjectArrayOutput() ProjectArrayOutput {
	return i.ToProjectArrayOutputWithContext(context.Background())
}

func (i ProjectArray) ToProjectArrayOutputWithContext(ctx context.Context) ProjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectArrayOutput)
}

// ProjectMapInput is an input type that accepts ProjectMap and ProjectMapOutput values.
// You can construct a concrete instance of `ProjectMapInput` via:
//
//          ProjectMap{ "key": ProjectArgs{...} }
type ProjectMapInput interface {
	pulumi.Input

	ToProjectMapOutput() ProjectMapOutput
	ToProjectMapOutputWithContext(context.Context) ProjectMapOutput
}

type ProjectMap map[string]ProjectInput

func (ProjectMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*Project)(nil))
}

func (i ProjectMap) ToProjectMapOutput() ProjectMapOutput {
	return i.ToProjectMapOutputWithContext(context.Background())
}

func (i ProjectMap) ToProjectMapOutputWithContext(ctx context.Context) ProjectMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectMapOutput)
}

type ProjectOutput struct {
	*pulumi.OutputState
}

func (ProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Project)(nil))
}

func (o ProjectOutput) ToProjectOutput() ProjectOutput {
	return o
}

func (o ProjectOutput) ToProjectOutputWithContext(ctx context.Context) ProjectOutput {
	return o
}

func (o ProjectOutput) ToProjectPtrOutput() ProjectPtrOutput {
	return o.ToProjectPtrOutputWithContext(context.Background())
}

func (o ProjectOutput) ToProjectPtrOutputWithContext(ctx context.Context) ProjectPtrOutput {
	return o.ApplyT(func(v Project) *Project {
		return &v
	}).(ProjectPtrOutput)
}

type ProjectPtrOutput struct {
	*pulumi.OutputState
}

func (ProjectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Project)(nil))
}

func (o ProjectPtrOutput) ToProjectPtrOutput() ProjectPtrOutput {
	return o
}

func (o ProjectPtrOutput) ToProjectPtrOutputWithContext(ctx context.Context) ProjectPtrOutput {
	return o
}

type ProjectArrayOutput struct{ *pulumi.OutputState }

func (ProjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Project)(nil))
}

func (o ProjectArrayOutput) ToProjectArrayOutput() ProjectArrayOutput {
	return o
}

func (o ProjectArrayOutput) ToProjectArrayOutputWithContext(ctx context.Context) ProjectArrayOutput {
	return o
}

func (o ProjectArrayOutput) Index(i pulumi.IntInput) ProjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Project {
		return vs[0].([]Project)[vs[1].(int)]
	}).(ProjectOutput)
}

type ProjectMapOutput struct{ *pulumi.OutputState }

func (ProjectMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]Project)(nil))
}

func (o ProjectMapOutput) ToProjectMapOutput() ProjectMapOutput {
	return o
}

func (o ProjectMapOutput) ToProjectMapOutputWithContext(ctx context.Context) ProjectMapOutput {
	return o
}

func (o ProjectMapOutput) MapIndex(k pulumi.StringInput) ProjectOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) Project {
		return vs[0].(map[string]Project)[vs[1].(string)]
	}).(ProjectOutput)
}

func init() {
	pulumi.RegisterOutputType(ProjectOutput{})
	pulumi.RegisterOutputType(ProjectPtrOutput{})
	pulumi.RegisterOutputType(ProjectArrayOutput{})
	pulumi.RegisterOutputType(ProjectMapOutput{})
}
