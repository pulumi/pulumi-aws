// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AccountPasswordPolicy struct {
	pulumi.CustomResourceState

	AllowUsersToChangePassword pulumi.BoolPtrOutput `pulumi:"allowUsersToChangePassword"`
	ExpirePasswords            pulumi.BoolOutput    `pulumi:"expirePasswords"`
	HardExpiry                 pulumi.BoolOutput    `pulumi:"hardExpiry"`
	MaxPasswordAge             pulumi.IntOutput     `pulumi:"maxPasswordAge"`
	MinimumPasswordLength      pulumi.IntPtrOutput  `pulumi:"minimumPasswordLength"`
	PasswordReusePrevention    pulumi.IntOutput     `pulumi:"passwordReusePrevention"`
	RequireLowercaseCharacters pulumi.BoolOutput    `pulumi:"requireLowercaseCharacters"`
	RequireNumbers             pulumi.BoolOutput    `pulumi:"requireNumbers"`
	RequireSymbols             pulumi.BoolOutput    `pulumi:"requireSymbols"`
	RequireUppercaseCharacters pulumi.BoolOutput    `pulumi:"requireUppercaseCharacters"`
}

// NewAccountPasswordPolicy registers a new resource with the given unique name, arguments, and options.
func NewAccountPasswordPolicy(ctx *pulumi.Context,
	name string, args *AccountPasswordPolicyArgs, opts ...pulumi.ResourceOption) (*AccountPasswordPolicy, error) {
	if args == nil {
		args = &AccountPasswordPolicyArgs{}
	}

	var resource AccountPasswordPolicy
	err := ctx.RegisterResource("aws:iam/accountPasswordPolicy:AccountPasswordPolicy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountPasswordPolicy gets an existing AccountPasswordPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountPasswordPolicy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountPasswordPolicyState, opts ...pulumi.ResourceOption) (*AccountPasswordPolicy, error) {
	var resource AccountPasswordPolicy
	err := ctx.ReadResource("aws:iam/accountPasswordPolicy:AccountPasswordPolicy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountPasswordPolicy resources.
type accountPasswordPolicyState struct {
	AllowUsersToChangePassword *bool `pulumi:"allowUsersToChangePassword"`
	ExpirePasswords            *bool `pulumi:"expirePasswords"`
	HardExpiry                 *bool `pulumi:"hardExpiry"`
	MaxPasswordAge             *int  `pulumi:"maxPasswordAge"`
	MinimumPasswordLength      *int  `pulumi:"minimumPasswordLength"`
	PasswordReusePrevention    *int  `pulumi:"passwordReusePrevention"`
	RequireLowercaseCharacters *bool `pulumi:"requireLowercaseCharacters"`
	RequireNumbers             *bool `pulumi:"requireNumbers"`
	RequireSymbols             *bool `pulumi:"requireSymbols"`
	RequireUppercaseCharacters *bool `pulumi:"requireUppercaseCharacters"`
}

type AccountPasswordPolicyState struct {
	AllowUsersToChangePassword pulumi.BoolPtrInput
	ExpirePasswords            pulumi.BoolPtrInput
	HardExpiry                 pulumi.BoolPtrInput
	MaxPasswordAge             pulumi.IntPtrInput
	MinimumPasswordLength      pulumi.IntPtrInput
	PasswordReusePrevention    pulumi.IntPtrInput
	RequireLowercaseCharacters pulumi.BoolPtrInput
	RequireNumbers             pulumi.BoolPtrInput
	RequireSymbols             pulumi.BoolPtrInput
	RequireUppercaseCharacters pulumi.BoolPtrInput
}

func (AccountPasswordPolicyState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountPasswordPolicyState)(nil)).Elem()
}

type accountPasswordPolicyArgs struct {
	AllowUsersToChangePassword *bool `pulumi:"allowUsersToChangePassword"`
	HardExpiry                 *bool `pulumi:"hardExpiry"`
	MaxPasswordAge             *int  `pulumi:"maxPasswordAge"`
	MinimumPasswordLength      *int  `pulumi:"minimumPasswordLength"`
	PasswordReusePrevention    *int  `pulumi:"passwordReusePrevention"`
	RequireLowercaseCharacters *bool `pulumi:"requireLowercaseCharacters"`
	RequireNumbers             *bool `pulumi:"requireNumbers"`
	RequireSymbols             *bool `pulumi:"requireSymbols"`
	RequireUppercaseCharacters *bool `pulumi:"requireUppercaseCharacters"`
}

// The set of arguments for constructing a AccountPasswordPolicy resource.
type AccountPasswordPolicyArgs struct {
	AllowUsersToChangePassword pulumi.BoolPtrInput
	HardExpiry                 pulumi.BoolPtrInput
	MaxPasswordAge             pulumi.IntPtrInput
	MinimumPasswordLength      pulumi.IntPtrInput
	PasswordReusePrevention    pulumi.IntPtrInput
	RequireLowercaseCharacters pulumi.BoolPtrInput
	RequireNumbers             pulumi.BoolPtrInput
	RequireSymbols             pulumi.BoolPtrInput
	RequireUppercaseCharacters pulumi.BoolPtrInput
}

func (AccountPasswordPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountPasswordPolicyArgs)(nil)).Elem()
}

type AccountPasswordPolicyInput interface {
	pulumi.Input

	ToAccountPasswordPolicyOutput() AccountPasswordPolicyOutput
	ToAccountPasswordPolicyOutputWithContext(ctx context.Context) AccountPasswordPolicyOutput
}

func (*AccountPasswordPolicy) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountPasswordPolicy)(nil)).Elem()
}

func (i *AccountPasswordPolicy) ToAccountPasswordPolicyOutput() AccountPasswordPolicyOutput {
	return i.ToAccountPasswordPolicyOutputWithContext(context.Background())
}

func (i *AccountPasswordPolicy) ToAccountPasswordPolicyOutputWithContext(ctx context.Context) AccountPasswordPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPasswordPolicyOutput)
}

// AccountPasswordPolicyArrayInput is an input type that accepts AccountPasswordPolicyArray and AccountPasswordPolicyArrayOutput values.
// You can construct a concrete instance of `AccountPasswordPolicyArrayInput` via:
//
//	AccountPasswordPolicyArray{ AccountPasswordPolicyArgs{...} }
type AccountPasswordPolicyArrayInput interface {
	pulumi.Input

	ToAccountPasswordPolicyArrayOutput() AccountPasswordPolicyArrayOutput
	ToAccountPasswordPolicyArrayOutputWithContext(context.Context) AccountPasswordPolicyArrayOutput
}

type AccountPasswordPolicyArray []AccountPasswordPolicyInput

func (AccountPasswordPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountPasswordPolicy)(nil)).Elem()
}

func (i AccountPasswordPolicyArray) ToAccountPasswordPolicyArrayOutput() AccountPasswordPolicyArrayOutput {
	return i.ToAccountPasswordPolicyArrayOutputWithContext(context.Background())
}

func (i AccountPasswordPolicyArray) ToAccountPasswordPolicyArrayOutputWithContext(ctx context.Context) AccountPasswordPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPasswordPolicyArrayOutput)
}

// AccountPasswordPolicyMapInput is an input type that accepts AccountPasswordPolicyMap and AccountPasswordPolicyMapOutput values.
// You can construct a concrete instance of `AccountPasswordPolicyMapInput` via:
//
//	AccountPasswordPolicyMap{ "key": AccountPasswordPolicyArgs{...} }
type AccountPasswordPolicyMapInput interface {
	pulumi.Input

	ToAccountPasswordPolicyMapOutput() AccountPasswordPolicyMapOutput
	ToAccountPasswordPolicyMapOutputWithContext(context.Context) AccountPasswordPolicyMapOutput
}

type AccountPasswordPolicyMap map[string]AccountPasswordPolicyInput

func (AccountPasswordPolicyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountPasswordPolicy)(nil)).Elem()
}

func (i AccountPasswordPolicyMap) ToAccountPasswordPolicyMapOutput() AccountPasswordPolicyMapOutput {
	return i.ToAccountPasswordPolicyMapOutputWithContext(context.Background())
}

func (i AccountPasswordPolicyMap) ToAccountPasswordPolicyMapOutputWithContext(ctx context.Context) AccountPasswordPolicyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountPasswordPolicyMapOutput)
}

type AccountPasswordPolicyOutput struct{ *pulumi.OutputState }

func (AccountPasswordPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountPasswordPolicy)(nil)).Elem()
}

func (o AccountPasswordPolicyOutput) ToAccountPasswordPolicyOutput() AccountPasswordPolicyOutput {
	return o
}

func (o AccountPasswordPolicyOutput) ToAccountPasswordPolicyOutputWithContext(ctx context.Context) AccountPasswordPolicyOutput {
	return o
}

func (o AccountPasswordPolicyOutput) AllowUsersToChangePassword() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AccountPasswordPolicy) pulumi.BoolPtrOutput { return v.AllowUsersToChangePassword }).(pulumi.BoolPtrOutput)
}

func (o AccountPasswordPolicyOutput) ExpirePasswords() pulumi.BoolOutput {
	return o.ApplyT(func(v *AccountPasswordPolicy) pulumi.BoolOutput { return v.ExpirePasswords }).(pulumi.BoolOutput)
}

func (o AccountPasswordPolicyOutput) HardExpiry() pulumi.BoolOutput {
	return o.ApplyT(func(v *AccountPasswordPolicy) pulumi.BoolOutput { return v.HardExpiry }).(pulumi.BoolOutput)
}

func (o AccountPasswordPolicyOutput) MaxPasswordAge() pulumi.IntOutput {
	return o.ApplyT(func(v *AccountPasswordPolicy) pulumi.IntOutput { return v.MaxPasswordAge }).(pulumi.IntOutput)
}

func (o AccountPasswordPolicyOutput) MinimumPasswordLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AccountPasswordPolicy) pulumi.IntPtrOutput { return v.MinimumPasswordLength }).(pulumi.IntPtrOutput)
}

func (o AccountPasswordPolicyOutput) PasswordReusePrevention() pulumi.IntOutput {
	return o.ApplyT(func(v *AccountPasswordPolicy) pulumi.IntOutput { return v.PasswordReusePrevention }).(pulumi.IntOutput)
}

func (o AccountPasswordPolicyOutput) RequireLowercaseCharacters() pulumi.BoolOutput {
	return o.ApplyT(func(v *AccountPasswordPolicy) pulumi.BoolOutput { return v.RequireLowercaseCharacters }).(pulumi.BoolOutput)
}

func (o AccountPasswordPolicyOutput) RequireNumbers() pulumi.BoolOutput {
	return o.ApplyT(func(v *AccountPasswordPolicy) pulumi.BoolOutput { return v.RequireNumbers }).(pulumi.BoolOutput)
}

func (o AccountPasswordPolicyOutput) RequireSymbols() pulumi.BoolOutput {
	return o.ApplyT(func(v *AccountPasswordPolicy) pulumi.BoolOutput { return v.RequireSymbols }).(pulumi.BoolOutput)
}

func (o AccountPasswordPolicyOutput) RequireUppercaseCharacters() pulumi.BoolOutput {
	return o.ApplyT(func(v *AccountPasswordPolicy) pulumi.BoolOutput { return v.RequireUppercaseCharacters }).(pulumi.BoolOutput)
}

type AccountPasswordPolicyArrayOutput struct{ *pulumi.OutputState }

func (AccountPasswordPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountPasswordPolicy)(nil)).Elem()
}

func (o AccountPasswordPolicyArrayOutput) ToAccountPasswordPolicyArrayOutput() AccountPasswordPolicyArrayOutput {
	return o
}

func (o AccountPasswordPolicyArrayOutput) ToAccountPasswordPolicyArrayOutputWithContext(ctx context.Context) AccountPasswordPolicyArrayOutput {
	return o
}

func (o AccountPasswordPolicyArrayOutput) Index(i pulumi.IntInput) AccountPasswordPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccountPasswordPolicy {
		return vs[0].([]*AccountPasswordPolicy)[vs[1].(int)]
	}).(AccountPasswordPolicyOutput)
}

type AccountPasswordPolicyMapOutput struct{ *pulumi.OutputState }

func (AccountPasswordPolicyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountPasswordPolicy)(nil)).Elem()
}

func (o AccountPasswordPolicyMapOutput) ToAccountPasswordPolicyMapOutput() AccountPasswordPolicyMapOutput {
	return o
}

func (o AccountPasswordPolicyMapOutput) ToAccountPasswordPolicyMapOutputWithContext(ctx context.Context) AccountPasswordPolicyMapOutput {
	return o
}

func (o AccountPasswordPolicyMapOutput) MapIndex(k pulumi.StringInput) AccountPasswordPolicyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccountPasswordPolicy {
		return vs[0].(map[string]*AccountPasswordPolicy)[vs[1].(string)]
	}).(AccountPasswordPolicyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountPasswordPolicyInput)(nil)).Elem(), &AccountPasswordPolicy{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountPasswordPolicyArrayInput)(nil)).Elem(), AccountPasswordPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountPasswordPolicyMapInput)(nil)).Elem(), AccountPasswordPolicyMap{})
	pulumi.RegisterOutputType(AccountPasswordPolicyOutput{})
	pulumi.RegisterOutputType(AccountPasswordPolicyArrayOutput{})
	pulumi.RegisterOutputType(AccountPasswordPolicyMapOutput{})
}
