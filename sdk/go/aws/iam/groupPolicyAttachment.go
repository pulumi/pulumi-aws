// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Attaches a Managed IAM Policy to an IAM group
type GroupPolicyAttachment struct {
	s *pulumi.ResourceState
}

// NewGroupPolicyAttachment registers a new resource with the given unique name, arguments, and options.
func NewGroupPolicyAttachment(ctx *pulumi.Context,
	name string, args *GroupPolicyAttachmentArgs, opts ...pulumi.ResourceOpt) (*GroupPolicyAttachment, error) {
	if args == nil || args.Group == nil {
		return nil, errors.New("missing required argument 'Group'")
	}
	if args == nil || args.PolicyArn == nil {
		return nil, errors.New("missing required argument 'PolicyArn'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["group"] = nil
		inputs["policyArn"] = nil
	} else {
		inputs["group"] = args.Group
		inputs["policyArn"] = args.PolicyArn
	}
	s, err := ctx.RegisterResource("aws:iam/groupPolicyAttachment:GroupPolicyAttachment", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &GroupPolicyAttachment{s: s}, nil
}

// GetGroupPolicyAttachment gets an existing GroupPolicyAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGroupPolicyAttachment(ctx *pulumi.Context,
	name string, id pulumi.ID, state *GroupPolicyAttachmentState, opts ...pulumi.ResourceOpt) (*GroupPolicyAttachment, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["group"] = state.Group
		inputs["policyArn"] = state.PolicyArn
	}
	s, err := ctx.ReadResource("aws:iam/groupPolicyAttachment:GroupPolicyAttachment", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &GroupPolicyAttachment{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *GroupPolicyAttachment) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *GroupPolicyAttachment) ID() *pulumi.IDOutput {
	return r.s.ID
}

// The group the policy should be applied to
func (r *GroupPolicyAttachment) Group() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["group"])
}

// The ARN of the policy you want to apply
func (r *GroupPolicyAttachment) PolicyArn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["policyArn"])
}

// Input properties used for looking up and filtering GroupPolicyAttachment resources.
type GroupPolicyAttachmentState struct {
	// The group the policy should be applied to
	Group interface{}
	// The ARN of the policy you want to apply
	PolicyArn interface{}
}

// The set of arguments for constructing a GroupPolicyAttachment resource.
type GroupPolicyAttachmentArgs struct {
	// The group the policy should be applied to
	Group interface{}
	// The ARN of the policy you want to apply
	PolicyArn interface{}
}
