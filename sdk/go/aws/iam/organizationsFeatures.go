// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages centralized root access features across AWS member accounts managed using AWS Organizations. More information about managing root access in IAM can be found in the [Centralize root access for member accounts](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-enable-root-access.html).
//
// > **NOTE:** The AWS account utilizing this resource must be an Organizations management account. Also, you must enable trusted access for AWS Identity and Access Management in AWS Organizations.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/iam"
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/organizations"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := organizations.NewOrganization(ctx, "example", &organizations.OrganizationArgs{
//				AwsServiceAccessPrincipals: pulumi.StringArray{
//					pulumi.String("iam.amazonaws.com"),
//				},
//				FeatureSet: pulumi.String("ALL"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = iam.NewOrganizationsFeatures(ctx, "example", &iam.OrganizationsFeaturesArgs{
//				EnabledFeatures: pulumi.StringArray{
//					pulumi.String("RootCredentialsManagement"),
//					pulumi.String("RootSessions"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import root access features using the `id`. For example:
//
// ```sh
// $ pulumi import aws:iam/organizationsFeatures:OrganizationsFeatures example o-1234567
// ```
type OrganizationsFeatures struct {
	pulumi.CustomResourceState

	// List of IAM features to enable. Valid values are `RootCredentialsManagement` and `RootSessions`.
	EnabledFeatures pulumi.StringArrayOutput `pulumi:"enabledFeatures"`
}

// NewOrganizationsFeatures registers a new resource with the given unique name, arguments, and options.
func NewOrganizationsFeatures(ctx *pulumi.Context,
	name string, args *OrganizationsFeaturesArgs, opts ...pulumi.ResourceOption) (*OrganizationsFeatures, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EnabledFeatures == nil {
		return nil, errors.New("invalid value for required argument 'EnabledFeatures'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OrganizationsFeatures
	err := ctx.RegisterResource("aws:iam/organizationsFeatures:OrganizationsFeatures", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationsFeatures gets an existing OrganizationsFeatures resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationsFeatures(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationsFeaturesState, opts ...pulumi.ResourceOption) (*OrganizationsFeatures, error) {
	var resource OrganizationsFeatures
	err := ctx.ReadResource("aws:iam/organizationsFeatures:OrganizationsFeatures", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationsFeatures resources.
type organizationsFeaturesState struct {
	// List of IAM features to enable. Valid values are `RootCredentialsManagement` and `RootSessions`.
	EnabledFeatures []string `pulumi:"enabledFeatures"`
}

type OrganizationsFeaturesState struct {
	// List of IAM features to enable. Valid values are `RootCredentialsManagement` and `RootSessions`.
	EnabledFeatures pulumi.StringArrayInput
}

func (OrganizationsFeaturesState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationsFeaturesState)(nil)).Elem()
}

type organizationsFeaturesArgs struct {
	// List of IAM features to enable. Valid values are `RootCredentialsManagement` and `RootSessions`.
	EnabledFeatures []string `pulumi:"enabledFeatures"`
}

// The set of arguments for constructing a OrganizationsFeatures resource.
type OrganizationsFeaturesArgs struct {
	// List of IAM features to enable. Valid values are `RootCredentialsManagement` and `RootSessions`.
	EnabledFeatures pulumi.StringArrayInput
}

func (OrganizationsFeaturesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationsFeaturesArgs)(nil)).Elem()
}

type OrganizationsFeaturesInput interface {
	pulumi.Input

	ToOrganizationsFeaturesOutput() OrganizationsFeaturesOutput
	ToOrganizationsFeaturesOutputWithContext(ctx context.Context) OrganizationsFeaturesOutput
}

func (*OrganizationsFeatures) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationsFeatures)(nil)).Elem()
}

func (i *OrganizationsFeatures) ToOrganizationsFeaturesOutput() OrganizationsFeaturesOutput {
	return i.ToOrganizationsFeaturesOutputWithContext(context.Background())
}

func (i *OrganizationsFeatures) ToOrganizationsFeaturesOutputWithContext(ctx context.Context) OrganizationsFeaturesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationsFeaturesOutput)
}

// OrganizationsFeaturesArrayInput is an input type that accepts OrganizationsFeaturesArray and OrganizationsFeaturesArrayOutput values.
// You can construct a concrete instance of `OrganizationsFeaturesArrayInput` via:
//
//	OrganizationsFeaturesArray{ OrganizationsFeaturesArgs{...} }
type OrganizationsFeaturesArrayInput interface {
	pulumi.Input

	ToOrganizationsFeaturesArrayOutput() OrganizationsFeaturesArrayOutput
	ToOrganizationsFeaturesArrayOutputWithContext(context.Context) OrganizationsFeaturesArrayOutput
}

type OrganizationsFeaturesArray []OrganizationsFeaturesInput

func (OrganizationsFeaturesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationsFeatures)(nil)).Elem()
}

func (i OrganizationsFeaturesArray) ToOrganizationsFeaturesArrayOutput() OrganizationsFeaturesArrayOutput {
	return i.ToOrganizationsFeaturesArrayOutputWithContext(context.Background())
}

func (i OrganizationsFeaturesArray) ToOrganizationsFeaturesArrayOutputWithContext(ctx context.Context) OrganizationsFeaturesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationsFeaturesArrayOutput)
}

// OrganizationsFeaturesMapInput is an input type that accepts OrganizationsFeaturesMap and OrganizationsFeaturesMapOutput values.
// You can construct a concrete instance of `OrganizationsFeaturesMapInput` via:
//
//	OrganizationsFeaturesMap{ "key": OrganizationsFeaturesArgs{...} }
type OrganizationsFeaturesMapInput interface {
	pulumi.Input

	ToOrganizationsFeaturesMapOutput() OrganizationsFeaturesMapOutput
	ToOrganizationsFeaturesMapOutputWithContext(context.Context) OrganizationsFeaturesMapOutput
}

type OrganizationsFeaturesMap map[string]OrganizationsFeaturesInput

func (OrganizationsFeaturesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationsFeatures)(nil)).Elem()
}

func (i OrganizationsFeaturesMap) ToOrganizationsFeaturesMapOutput() OrganizationsFeaturesMapOutput {
	return i.ToOrganizationsFeaturesMapOutputWithContext(context.Background())
}

func (i OrganizationsFeaturesMap) ToOrganizationsFeaturesMapOutputWithContext(ctx context.Context) OrganizationsFeaturesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationsFeaturesMapOutput)
}

type OrganizationsFeaturesOutput struct{ *pulumi.OutputState }

func (OrganizationsFeaturesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationsFeatures)(nil)).Elem()
}

func (o OrganizationsFeaturesOutput) ToOrganizationsFeaturesOutput() OrganizationsFeaturesOutput {
	return o
}

func (o OrganizationsFeaturesOutput) ToOrganizationsFeaturesOutputWithContext(ctx context.Context) OrganizationsFeaturesOutput {
	return o
}

// List of IAM features to enable. Valid values are `RootCredentialsManagement` and `RootSessions`.
func (o OrganizationsFeaturesOutput) EnabledFeatures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *OrganizationsFeatures) pulumi.StringArrayOutput { return v.EnabledFeatures }).(pulumi.StringArrayOutput)
}

type OrganizationsFeaturesArrayOutput struct{ *pulumi.OutputState }

func (OrganizationsFeaturesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationsFeatures)(nil)).Elem()
}

func (o OrganizationsFeaturesArrayOutput) ToOrganizationsFeaturesArrayOutput() OrganizationsFeaturesArrayOutput {
	return o
}

func (o OrganizationsFeaturesArrayOutput) ToOrganizationsFeaturesArrayOutputWithContext(ctx context.Context) OrganizationsFeaturesArrayOutput {
	return o
}

func (o OrganizationsFeaturesArrayOutput) Index(i pulumi.IntInput) OrganizationsFeaturesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OrganizationsFeatures {
		return vs[0].([]*OrganizationsFeatures)[vs[1].(int)]
	}).(OrganizationsFeaturesOutput)
}

type OrganizationsFeaturesMapOutput struct{ *pulumi.OutputState }

func (OrganizationsFeaturesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationsFeatures)(nil)).Elem()
}

func (o OrganizationsFeaturesMapOutput) ToOrganizationsFeaturesMapOutput() OrganizationsFeaturesMapOutput {
	return o
}

func (o OrganizationsFeaturesMapOutput) ToOrganizationsFeaturesMapOutputWithContext(ctx context.Context) OrganizationsFeaturesMapOutput {
	return o
}

func (o OrganizationsFeaturesMapOutput) MapIndex(k pulumi.StringInput) OrganizationsFeaturesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OrganizationsFeatures {
		return vs[0].(map[string]*OrganizationsFeatures)[vs[1].(string)]
	}).(OrganizationsFeaturesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationsFeaturesInput)(nil)).Elem(), &OrganizationsFeatures{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationsFeaturesArrayInput)(nil)).Elem(), OrganizationsFeaturesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationsFeaturesMapInput)(nil)).Elem(), OrganizationsFeaturesMap{})
	pulumi.RegisterOutputType(OrganizationsFeaturesOutput{})
	pulumi.RegisterOutputType(OrganizationsFeaturesArrayOutput{})
	pulumi.RegisterOutputType(OrganizationsFeaturesMapOutput{})
}
