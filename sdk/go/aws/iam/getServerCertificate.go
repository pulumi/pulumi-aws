// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Use this data source to lookup information about IAM Server Certificates.
// 
// ## Import 
// 
// The terraform import function will read in certificate body, certificate chain (if it exists), id, name, path, and arn. 
// It will not retrieve the private key which is not available through the AWS API.   
func LookupServerCertificate(ctx *pulumi.Context, args *GetServerCertificateArgs) (*GetServerCertificateResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["latest"] = args.Latest
		inputs["name"] = args.Name
		inputs["namePrefix"] = args.NamePrefix
		inputs["pathPrefix"] = args.PathPrefix
	}
	outputs, err := ctx.Invoke("aws:iam/getServerCertificate:getServerCertificate", inputs)
	if err != nil {
		return nil, err
	}
	return &GetServerCertificateResult{
		Arn: outputs["arn"],
		CertificateBody: outputs["certificateBody"],
		CertificateChain: outputs["certificateChain"],
		ExpirationDate: outputs["expirationDate"],
		Latest: outputs["latest"],
		Name: outputs["name"],
		NamePrefix: outputs["namePrefix"],
		Path: outputs["path"],
		PathPrefix: outputs["pathPrefix"],
		UploadDate: outputs["uploadDate"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getServerCertificate.
type GetServerCertificateArgs struct {
	// sort results by expiration date. returns the certificate with expiration date in furthest in the future.
	Latest interface{}
	// exact name of the cert to lookup
	Name interface{}
	// prefix of cert to filter by
	NamePrefix interface{}
	// prefix of path to filter by
	PathPrefix interface{}
}

// A collection of values returned by getServerCertificate.
type GetServerCertificateResult struct {
	Arn interface{}
	CertificateBody interface{}
	CertificateChain interface{}
	ExpirationDate interface{}
	Latest interface{}
	Name interface{}
	NamePrefix interface{}
	Path interface{}
	PathPrefix interface{}
	UploadDate interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
