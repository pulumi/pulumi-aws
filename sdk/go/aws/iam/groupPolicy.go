// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides an IAM policy attached to a group.
type GroupPolicy struct {
	s *pulumi.ResourceState
}

// NewGroupPolicy registers a new resource with the given unique name, arguments, and options.
func NewGroupPolicy(ctx *pulumi.Context,
	name string, args *GroupPolicyArgs, opts ...pulumi.ResourceOpt) (*GroupPolicy, error) {
	if args == nil || args.Group == nil {
		return nil, errors.New("missing required argument 'Group'")
	}
	if args == nil || args.Policy == nil {
		return nil, errors.New("missing required argument 'Policy'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["group"] = nil
		inputs["name"] = nil
		inputs["namePrefix"] = nil
		inputs["policy"] = nil
	} else {
		inputs["group"] = args.Group
		inputs["name"] = args.Name
		inputs["namePrefix"] = args.NamePrefix
		inputs["policy"] = args.Policy
	}
	s, err := ctx.RegisterResource("aws:iam/groupPolicy:GroupPolicy", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &GroupPolicy{s: s}, nil
}

// GetGroupPolicy gets an existing GroupPolicy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGroupPolicy(ctx *pulumi.Context,
	name string, id pulumi.ID, state *GroupPolicyState, opts ...pulumi.ResourceOpt) (*GroupPolicy, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["group"] = state.Group
		inputs["name"] = state.Name
		inputs["namePrefix"] = state.NamePrefix
		inputs["policy"] = state.Policy
	}
	s, err := ctx.ReadResource("aws:iam/groupPolicy:GroupPolicy", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &GroupPolicy{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *GroupPolicy) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *GroupPolicy) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The IAM group to attach to the policy.
func (r *GroupPolicy) Group() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["group"])
}

// The name of the policy. If omitted, Terraform will
// assign a random, unique name.
func (r *GroupPolicy) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// Creates a unique name beginning with the specified
// prefix. Conflicts with `name`.
func (r *GroupPolicy) NamePrefix() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["namePrefix"])
}

// The policy document. This is a JSON formatted string. For more information about building IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://www.terraform.io/docs/providers/aws/guides/iam-policy-documents.html)
func (r *GroupPolicy) Policy() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["policy"])
}

// Input properties used for looking up and filtering GroupPolicy resources.
type GroupPolicyState struct {
	// The IAM group to attach to the policy.
	Group interface{}
	// The name of the policy. If omitted, Terraform will
	// assign a random, unique name.
	Name interface{}
	// Creates a unique name beginning with the specified
	// prefix. Conflicts with `name`.
	NamePrefix interface{}
	// The policy document. This is a JSON formatted string. For more information about building IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://www.terraform.io/docs/providers/aws/guides/iam-policy-documents.html)
	Policy interface{}
}

// The set of arguments for constructing a GroupPolicy resource.
type GroupPolicyArgs struct {
	// The IAM group to attach to the policy.
	Group interface{}
	// The name of the policy. If omitted, Terraform will
	// assign a random, unique name.
	Name interface{}
	// Creates a unique name beginning with the specified
	// prefix. Conflicts with `name`.
	NamePrefix interface{}
	// The policy document. This is a JSON formatted string. For more information about building IAM policy documents with Terraform, see the [AWS IAM Policy Document Guide](https://www.terraform.io/docs/providers/aws/guides/iam-policy-documents.html)
	Policy interface{}
}
