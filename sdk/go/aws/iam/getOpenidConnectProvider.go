// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// This data source can be used to fetch information about a specific
// IAM OpenID Connect provider. By using this data source, you can retrieve the
// the resource information by either its `arn` or `url`.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/iam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iam.GetOpenidConnectProvider(ctx, &iam.GetOpenidConnectProviderArgs{
//				Arn: pulumi.StringRef("arn:aws:iam::123456789012:oidc-provider/accounts.google.com"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/iam"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := iam.GetOpenidConnectProvider(ctx, &iam.GetOpenidConnectProviderArgs{
//				Url: pulumi.StringRef("https://accounts.google.com"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetOpenidConnectProvider(ctx *pulumi.Context, args *GetOpenidConnectProviderArgs, opts ...pulumi.InvokeOption) (*GetOpenidConnectProviderResult, error) {
	var rv GetOpenidConnectProviderResult
	err := ctx.Invoke("aws:iam/getOpenidConnectProvider:getOpenidConnectProvider", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOpenidConnectProvider.
type GetOpenidConnectProviderArgs struct {
	// ARN of the OpenID Connect provider.
	Arn *string `pulumi:"arn"`
	// Map of resource tags for the IAM OIDC provider.
	Tags map[string]string `pulumi:"tags"`
	// URL of the OpenID Connect provider.
	Url *string `pulumi:"url"`
}

// A collection of values returned by getOpenidConnectProvider.
type GetOpenidConnectProviderResult struct {
	Arn string `pulumi:"arn"`
	// List of client IDs (also known as audiences). When a mobile or web app registers with an OpenID Connect provider, they establish a value that identifies the application. (This is the value that's sent as the clientId parameter on OAuth requests.)
	ClientIdLists []string `pulumi:"clientIdLists"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Map of resource tags for the IAM OIDC provider.
	Tags map[string]string `pulumi:"tags"`
	// List of server certificate thumbprints for the OpenID Connect (OIDC) identity provider's server certificate(s).
	ThumbprintLists []string `pulumi:"thumbprintLists"`
	Url             string   `pulumi:"url"`
}

func GetOpenidConnectProviderOutput(ctx *pulumi.Context, args GetOpenidConnectProviderOutputArgs, opts ...pulumi.InvokeOption) GetOpenidConnectProviderResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetOpenidConnectProviderResult, error) {
			args := v.(GetOpenidConnectProviderArgs)
			r, err := GetOpenidConnectProvider(ctx, &args, opts...)
			var s GetOpenidConnectProviderResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetOpenidConnectProviderResultOutput)
}

// A collection of arguments for invoking getOpenidConnectProvider.
type GetOpenidConnectProviderOutputArgs struct {
	// ARN of the OpenID Connect provider.
	Arn pulumi.StringPtrInput `pulumi:"arn"`
	// Map of resource tags for the IAM OIDC provider.
	Tags pulumi.StringMapInput `pulumi:"tags"`
	// URL of the OpenID Connect provider.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (GetOpenidConnectProviderOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenidConnectProviderArgs)(nil)).Elem()
}

// A collection of values returned by getOpenidConnectProvider.
type GetOpenidConnectProviderResultOutput struct{ *pulumi.OutputState }

func (GetOpenidConnectProviderResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenidConnectProviderResult)(nil)).Elem()
}

func (o GetOpenidConnectProviderResultOutput) ToGetOpenidConnectProviderResultOutput() GetOpenidConnectProviderResultOutput {
	return o
}

func (o GetOpenidConnectProviderResultOutput) ToGetOpenidConnectProviderResultOutputWithContext(ctx context.Context) GetOpenidConnectProviderResultOutput {
	return o
}

func (o GetOpenidConnectProviderResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenidConnectProviderResult) string { return v.Arn }).(pulumi.StringOutput)
}

// List of client IDs (also known as audiences). When a mobile or web app registers with an OpenID Connect provider, they establish a value that identifies the application. (This is the value that's sent as the clientId parameter on OAuth requests.)
func (o GetOpenidConnectProviderResultOutput) ClientIdLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOpenidConnectProviderResult) []string { return v.ClientIdLists }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetOpenidConnectProviderResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenidConnectProviderResult) string { return v.Id }).(pulumi.StringOutput)
}

// Map of resource tags for the IAM OIDC provider.
func (o GetOpenidConnectProviderResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetOpenidConnectProviderResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// List of server certificate thumbprints for the OpenID Connect (OIDC) identity provider's server certificate(s).
func (o GetOpenidConnectProviderResultOutput) ThumbprintLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOpenidConnectProviderResult) []string { return v.ThumbprintLists }).(pulumi.StringArrayOutput)
}

func (o GetOpenidConnectProviderResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenidConnectProviderResult) string { return v.Url }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOpenidConnectProviderResultOutput{})
}
