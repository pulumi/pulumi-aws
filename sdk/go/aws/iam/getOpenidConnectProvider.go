// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetOpenidConnectProvider(ctx *pulumi.Context, args *GetOpenidConnectProviderArgs, opts ...pulumi.InvokeOption) (*GetOpenidConnectProviderResult, error) {
	var rv GetOpenidConnectProviderResult
	err := ctx.Invoke("aws:iam/getOpenidConnectProvider:getOpenidConnectProvider", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getOpenidConnectProvider.
type GetOpenidConnectProviderArgs struct {
	Arn  *string           `pulumi:"arn"`
	Tags map[string]string `pulumi:"tags"`
	Url  *string           `pulumi:"url"`
}

// A collection of values returned by getOpenidConnectProvider.
type GetOpenidConnectProviderResult struct {
	Arn           string   `pulumi:"arn"`
	ClientIdLists []string `pulumi:"clientIdLists"`
	// The provider-assigned unique ID for this managed resource.
	Id              string            `pulumi:"id"`
	Tags            map[string]string `pulumi:"tags"`
	ThumbprintLists []string          `pulumi:"thumbprintLists"`
	Url             string            `pulumi:"url"`
}

func GetOpenidConnectProviderOutput(ctx *pulumi.Context, args GetOpenidConnectProviderOutputArgs, opts ...pulumi.InvokeOption) GetOpenidConnectProviderResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetOpenidConnectProviderResult, error) {
			args := v.(GetOpenidConnectProviderArgs)
			r, err := GetOpenidConnectProvider(ctx, &args, opts...)
			var s GetOpenidConnectProviderResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetOpenidConnectProviderResultOutput)
}

// A collection of arguments for invoking getOpenidConnectProvider.
type GetOpenidConnectProviderOutputArgs struct {
	Arn  pulumi.StringPtrInput `pulumi:"arn"`
	Tags pulumi.StringMapInput `pulumi:"tags"`
	Url  pulumi.StringPtrInput `pulumi:"url"`
}

func (GetOpenidConnectProviderOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenidConnectProviderArgs)(nil)).Elem()
}

// A collection of values returned by getOpenidConnectProvider.
type GetOpenidConnectProviderResultOutput struct{ *pulumi.OutputState }

func (GetOpenidConnectProviderResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOpenidConnectProviderResult)(nil)).Elem()
}

func (o GetOpenidConnectProviderResultOutput) ToGetOpenidConnectProviderResultOutput() GetOpenidConnectProviderResultOutput {
	return o
}

func (o GetOpenidConnectProviderResultOutput) ToGetOpenidConnectProviderResultOutputWithContext(ctx context.Context) GetOpenidConnectProviderResultOutput {
	return o
}

func (o GetOpenidConnectProviderResultOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenidConnectProviderResult) string { return v.Arn }).(pulumi.StringOutput)
}

func (o GetOpenidConnectProviderResultOutput) ClientIdLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOpenidConnectProviderResult) []string { return v.ClientIdLists }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetOpenidConnectProviderResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenidConnectProviderResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetOpenidConnectProviderResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetOpenidConnectProviderResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

func (o GetOpenidConnectProviderResultOutput) ThumbprintLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetOpenidConnectProviderResult) []string { return v.ThumbprintLists }).(pulumi.StringArrayOutput)
}

func (o GetOpenidConnectProviderResultOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetOpenidConnectProviderResult) string { return v.Url }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetOpenidConnectProviderResultOutput{})
}
