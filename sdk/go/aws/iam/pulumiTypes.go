// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RoleInlinePolicy struct {
	Name   *string `pulumi:"name"`
	Policy *string `pulumi:"policy"`
}

// RoleInlinePolicyInput is an input type that accepts RoleInlinePolicyArgs and RoleInlinePolicyOutput values.
// You can construct a concrete instance of `RoleInlinePolicyInput` via:
//
//	RoleInlinePolicyArgs{...}
type RoleInlinePolicyInput interface {
	pulumi.Input

	ToRoleInlinePolicyOutput() RoleInlinePolicyOutput
	ToRoleInlinePolicyOutputWithContext(context.Context) RoleInlinePolicyOutput
}

type RoleInlinePolicyArgs struct {
	Name   pulumi.StringPtrInput `pulumi:"name"`
	Policy pulumi.StringPtrInput `pulumi:"policy"`
}

func (RoleInlinePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleInlinePolicy)(nil)).Elem()
}

func (i RoleInlinePolicyArgs) ToRoleInlinePolicyOutput() RoleInlinePolicyOutput {
	return i.ToRoleInlinePolicyOutputWithContext(context.Background())
}

func (i RoleInlinePolicyArgs) ToRoleInlinePolicyOutputWithContext(ctx context.Context) RoleInlinePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleInlinePolicyOutput)
}

// RoleInlinePolicyArrayInput is an input type that accepts RoleInlinePolicyArray and RoleInlinePolicyArrayOutput values.
// You can construct a concrete instance of `RoleInlinePolicyArrayInput` via:
//
//	RoleInlinePolicyArray{ RoleInlinePolicyArgs{...} }
type RoleInlinePolicyArrayInput interface {
	pulumi.Input

	ToRoleInlinePolicyArrayOutput() RoleInlinePolicyArrayOutput
	ToRoleInlinePolicyArrayOutputWithContext(context.Context) RoleInlinePolicyArrayOutput
}

type RoleInlinePolicyArray []RoleInlinePolicyInput

func (RoleInlinePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoleInlinePolicy)(nil)).Elem()
}

func (i RoleInlinePolicyArray) ToRoleInlinePolicyArrayOutput() RoleInlinePolicyArrayOutput {
	return i.ToRoleInlinePolicyArrayOutputWithContext(context.Background())
}

func (i RoleInlinePolicyArray) ToRoleInlinePolicyArrayOutputWithContext(ctx context.Context) RoleInlinePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoleInlinePolicyArrayOutput)
}

type RoleInlinePolicyOutput struct{ *pulumi.OutputState }

func (RoleInlinePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RoleInlinePolicy)(nil)).Elem()
}

func (o RoleInlinePolicyOutput) ToRoleInlinePolicyOutput() RoleInlinePolicyOutput {
	return o
}

func (o RoleInlinePolicyOutput) ToRoleInlinePolicyOutputWithContext(ctx context.Context) RoleInlinePolicyOutput {
	return o
}

func (o RoleInlinePolicyOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleInlinePolicy) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RoleInlinePolicyOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RoleInlinePolicy) *string { return v.Policy }).(pulumi.StringPtrOutput)
}

type RoleInlinePolicyArrayOutput struct{ *pulumi.OutputState }

func (RoleInlinePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RoleInlinePolicy)(nil)).Elem()
}

func (o RoleInlinePolicyArrayOutput) ToRoleInlinePolicyArrayOutput() RoleInlinePolicyArrayOutput {
	return o
}

func (o RoleInlinePolicyArrayOutput) ToRoleInlinePolicyArrayOutputWithContext(ctx context.Context) RoleInlinePolicyArrayOutput {
	return o
}

func (o RoleInlinePolicyArrayOutput) Index(i pulumi.IntInput) RoleInlinePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RoleInlinePolicy {
		return vs[0].([]RoleInlinePolicy)[vs[1].(int)]
	}).(RoleInlinePolicyOutput)
}

type GetGroupUser struct {
	Arn      string `pulumi:"arn"`
	Path     string `pulumi:"path"`
	UserId   string `pulumi:"userId"`
	UserName string `pulumi:"userName"`
}

// GetGroupUserInput is an input type that accepts GetGroupUserArgs and GetGroupUserOutput values.
// You can construct a concrete instance of `GetGroupUserInput` via:
//
//	GetGroupUserArgs{...}
type GetGroupUserInput interface {
	pulumi.Input

	ToGetGroupUserOutput() GetGroupUserOutput
	ToGetGroupUserOutputWithContext(context.Context) GetGroupUserOutput
}

type GetGroupUserArgs struct {
	Arn      pulumi.StringInput `pulumi:"arn"`
	Path     pulumi.StringInput `pulumi:"path"`
	UserId   pulumi.StringInput `pulumi:"userId"`
	UserName pulumi.StringInput `pulumi:"userName"`
}

func (GetGroupUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupUser)(nil)).Elem()
}

func (i GetGroupUserArgs) ToGetGroupUserOutput() GetGroupUserOutput {
	return i.ToGetGroupUserOutputWithContext(context.Background())
}

func (i GetGroupUserArgs) ToGetGroupUserOutputWithContext(ctx context.Context) GetGroupUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupUserOutput)
}

// GetGroupUserArrayInput is an input type that accepts GetGroupUserArray and GetGroupUserArrayOutput values.
// You can construct a concrete instance of `GetGroupUserArrayInput` via:
//
//	GetGroupUserArray{ GetGroupUserArgs{...} }
type GetGroupUserArrayInput interface {
	pulumi.Input

	ToGetGroupUserArrayOutput() GetGroupUserArrayOutput
	ToGetGroupUserArrayOutputWithContext(context.Context) GetGroupUserArrayOutput
}

type GetGroupUserArray []GetGroupUserInput

func (GetGroupUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupUser)(nil)).Elem()
}

func (i GetGroupUserArray) ToGetGroupUserArrayOutput() GetGroupUserArrayOutput {
	return i.ToGetGroupUserArrayOutputWithContext(context.Background())
}

func (i GetGroupUserArray) ToGetGroupUserArrayOutputWithContext(ctx context.Context) GetGroupUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetGroupUserArrayOutput)
}

type GetGroupUserOutput struct{ *pulumi.OutputState }

func (GetGroupUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupUser)(nil)).Elem()
}

func (o GetGroupUserOutput) ToGetGroupUserOutput() GetGroupUserOutput {
	return o
}

func (o GetGroupUserOutput) ToGetGroupUserOutputWithContext(ctx context.Context) GetGroupUserOutput {
	return o
}

func (o GetGroupUserOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupUser) string { return v.Arn }).(pulumi.StringOutput)
}

func (o GetGroupUserOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupUser) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetGroupUserOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupUser) string { return v.UserId }).(pulumi.StringOutput)
}

func (o GetGroupUserOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupUser) string { return v.UserName }).(pulumi.StringOutput)
}

type GetGroupUserArrayOutput struct{ *pulumi.OutputState }

func (GetGroupUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetGroupUser)(nil)).Elem()
}

func (o GetGroupUserArrayOutput) ToGetGroupUserArrayOutput() GetGroupUserArrayOutput {
	return o
}

func (o GetGroupUserArrayOutput) ToGetGroupUserArrayOutputWithContext(ctx context.Context) GetGroupUserArrayOutput {
	return o
}

func (o GetGroupUserArrayOutput) Index(i pulumi.IntInput) GetGroupUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetGroupUser {
		return vs[0].([]GetGroupUser)[vs[1].(int)]
	}).(GetGroupUserOutput)
}

type GetPolicyDocumentStatement struct {
	Actions       []string                                 `pulumi:"actions"`
	Conditions    []GetPolicyDocumentStatementCondition    `pulumi:"conditions"`
	Effect        *string                                  `pulumi:"effect"`
	NotActions    []string                                 `pulumi:"notActions"`
	NotPrincipals []GetPolicyDocumentStatementNotPrincipal `pulumi:"notPrincipals"`
	NotResources  []string                                 `pulumi:"notResources"`
	Principals    []GetPolicyDocumentStatementPrincipal    `pulumi:"principals"`
	Resources     []string                                 `pulumi:"resources"`
	Sid           *string                                  `pulumi:"sid"`
}

// GetPolicyDocumentStatementInput is an input type that accepts GetPolicyDocumentStatementArgs and GetPolicyDocumentStatementOutput values.
// You can construct a concrete instance of `GetPolicyDocumentStatementInput` via:
//
//	GetPolicyDocumentStatementArgs{...}
type GetPolicyDocumentStatementInput interface {
	pulumi.Input

	ToGetPolicyDocumentStatementOutput() GetPolicyDocumentStatementOutput
	ToGetPolicyDocumentStatementOutputWithContext(context.Context) GetPolicyDocumentStatementOutput
}

type GetPolicyDocumentStatementArgs struct {
	Actions       pulumi.StringArrayInput                          `pulumi:"actions"`
	Conditions    GetPolicyDocumentStatementConditionArrayInput    `pulumi:"conditions"`
	Effect        pulumi.StringPtrInput                            `pulumi:"effect"`
	NotActions    pulumi.StringArrayInput                          `pulumi:"notActions"`
	NotPrincipals GetPolicyDocumentStatementNotPrincipalArrayInput `pulumi:"notPrincipals"`
	NotResources  pulumi.StringArrayInput                          `pulumi:"notResources"`
	Principals    GetPolicyDocumentStatementPrincipalArrayInput    `pulumi:"principals"`
	Resources     pulumi.StringArrayInput                          `pulumi:"resources"`
	Sid           pulumi.StringPtrInput                            `pulumi:"sid"`
}

func (GetPolicyDocumentStatementArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDocumentStatement)(nil)).Elem()
}

func (i GetPolicyDocumentStatementArgs) ToGetPolicyDocumentStatementOutput() GetPolicyDocumentStatementOutput {
	return i.ToGetPolicyDocumentStatementOutputWithContext(context.Background())
}

func (i GetPolicyDocumentStatementArgs) ToGetPolicyDocumentStatementOutputWithContext(ctx context.Context) GetPolicyDocumentStatementOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDocumentStatementOutput)
}

// GetPolicyDocumentStatementArrayInput is an input type that accepts GetPolicyDocumentStatementArray and GetPolicyDocumentStatementArrayOutput values.
// You can construct a concrete instance of `GetPolicyDocumentStatementArrayInput` via:
//
//	GetPolicyDocumentStatementArray{ GetPolicyDocumentStatementArgs{...} }
type GetPolicyDocumentStatementArrayInput interface {
	pulumi.Input

	ToGetPolicyDocumentStatementArrayOutput() GetPolicyDocumentStatementArrayOutput
	ToGetPolicyDocumentStatementArrayOutputWithContext(context.Context) GetPolicyDocumentStatementArrayOutput
}

type GetPolicyDocumentStatementArray []GetPolicyDocumentStatementInput

func (GetPolicyDocumentStatementArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDocumentStatement)(nil)).Elem()
}

func (i GetPolicyDocumentStatementArray) ToGetPolicyDocumentStatementArrayOutput() GetPolicyDocumentStatementArrayOutput {
	return i.ToGetPolicyDocumentStatementArrayOutputWithContext(context.Background())
}

func (i GetPolicyDocumentStatementArray) ToGetPolicyDocumentStatementArrayOutputWithContext(ctx context.Context) GetPolicyDocumentStatementArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDocumentStatementArrayOutput)
}

type GetPolicyDocumentStatementOutput struct{ *pulumi.OutputState }

func (GetPolicyDocumentStatementOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDocumentStatement)(nil)).Elem()
}

func (o GetPolicyDocumentStatementOutput) ToGetPolicyDocumentStatementOutput() GetPolicyDocumentStatementOutput {
	return o
}

func (o GetPolicyDocumentStatementOutput) ToGetPolicyDocumentStatementOutputWithContext(ctx context.Context) GetPolicyDocumentStatementOutput {
	return o
}

func (o GetPolicyDocumentStatementOutput) Actions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPolicyDocumentStatement) []string { return v.Actions }).(pulumi.StringArrayOutput)
}

func (o GetPolicyDocumentStatementOutput) Conditions() GetPolicyDocumentStatementConditionArrayOutput {
	return o.ApplyT(func(v GetPolicyDocumentStatement) []GetPolicyDocumentStatementCondition { return v.Conditions }).(GetPolicyDocumentStatementConditionArrayOutput)
}

func (o GetPolicyDocumentStatementOutput) Effect() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPolicyDocumentStatement) *string { return v.Effect }).(pulumi.StringPtrOutput)
}

func (o GetPolicyDocumentStatementOutput) NotActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPolicyDocumentStatement) []string { return v.NotActions }).(pulumi.StringArrayOutput)
}

func (o GetPolicyDocumentStatementOutput) NotPrincipals() GetPolicyDocumentStatementNotPrincipalArrayOutput {
	return o.ApplyT(func(v GetPolicyDocumentStatement) []GetPolicyDocumentStatementNotPrincipal { return v.NotPrincipals }).(GetPolicyDocumentStatementNotPrincipalArrayOutput)
}

func (o GetPolicyDocumentStatementOutput) NotResources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPolicyDocumentStatement) []string { return v.NotResources }).(pulumi.StringArrayOutput)
}

func (o GetPolicyDocumentStatementOutput) Principals() GetPolicyDocumentStatementPrincipalArrayOutput {
	return o.ApplyT(func(v GetPolicyDocumentStatement) []GetPolicyDocumentStatementPrincipal { return v.Principals }).(GetPolicyDocumentStatementPrincipalArrayOutput)
}

func (o GetPolicyDocumentStatementOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPolicyDocumentStatement) []string { return v.Resources }).(pulumi.StringArrayOutput)
}

func (o GetPolicyDocumentStatementOutput) Sid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPolicyDocumentStatement) *string { return v.Sid }).(pulumi.StringPtrOutput)
}

type GetPolicyDocumentStatementArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyDocumentStatementArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDocumentStatement)(nil)).Elem()
}

func (o GetPolicyDocumentStatementArrayOutput) ToGetPolicyDocumentStatementArrayOutput() GetPolicyDocumentStatementArrayOutput {
	return o
}

func (o GetPolicyDocumentStatementArrayOutput) ToGetPolicyDocumentStatementArrayOutputWithContext(ctx context.Context) GetPolicyDocumentStatementArrayOutput {
	return o
}

func (o GetPolicyDocumentStatementArrayOutput) Index(i pulumi.IntInput) GetPolicyDocumentStatementOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyDocumentStatement {
		return vs[0].([]GetPolicyDocumentStatement)[vs[1].(int)]
	}).(GetPolicyDocumentStatementOutput)
}

type GetPolicyDocumentStatementCondition struct {
	Test     string   `pulumi:"test"`
	Values   []string `pulumi:"values"`
	Variable string   `pulumi:"variable"`
}

// GetPolicyDocumentStatementConditionInput is an input type that accepts GetPolicyDocumentStatementConditionArgs and GetPolicyDocumentStatementConditionOutput values.
// You can construct a concrete instance of `GetPolicyDocumentStatementConditionInput` via:
//
//	GetPolicyDocumentStatementConditionArgs{...}
type GetPolicyDocumentStatementConditionInput interface {
	pulumi.Input

	ToGetPolicyDocumentStatementConditionOutput() GetPolicyDocumentStatementConditionOutput
	ToGetPolicyDocumentStatementConditionOutputWithContext(context.Context) GetPolicyDocumentStatementConditionOutput
}

type GetPolicyDocumentStatementConditionArgs struct {
	Test     pulumi.StringInput      `pulumi:"test"`
	Values   pulumi.StringArrayInput `pulumi:"values"`
	Variable pulumi.StringInput      `pulumi:"variable"`
}

func (GetPolicyDocumentStatementConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDocumentStatementCondition)(nil)).Elem()
}

func (i GetPolicyDocumentStatementConditionArgs) ToGetPolicyDocumentStatementConditionOutput() GetPolicyDocumentStatementConditionOutput {
	return i.ToGetPolicyDocumentStatementConditionOutputWithContext(context.Background())
}

func (i GetPolicyDocumentStatementConditionArgs) ToGetPolicyDocumentStatementConditionOutputWithContext(ctx context.Context) GetPolicyDocumentStatementConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDocumentStatementConditionOutput)
}

// GetPolicyDocumentStatementConditionArrayInput is an input type that accepts GetPolicyDocumentStatementConditionArray and GetPolicyDocumentStatementConditionArrayOutput values.
// You can construct a concrete instance of `GetPolicyDocumentStatementConditionArrayInput` via:
//
//	GetPolicyDocumentStatementConditionArray{ GetPolicyDocumentStatementConditionArgs{...} }
type GetPolicyDocumentStatementConditionArrayInput interface {
	pulumi.Input

	ToGetPolicyDocumentStatementConditionArrayOutput() GetPolicyDocumentStatementConditionArrayOutput
	ToGetPolicyDocumentStatementConditionArrayOutputWithContext(context.Context) GetPolicyDocumentStatementConditionArrayOutput
}

type GetPolicyDocumentStatementConditionArray []GetPolicyDocumentStatementConditionInput

func (GetPolicyDocumentStatementConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDocumentStatementCondition)(nil)).Elem()
}

func (i GetPolicyDocumentStatementConditionArray) ToGetPolicyDocumentStatementConditionArrayOutput() GetPolicyDocumentStatementConditionArrayOutput {
	return i.ToGetPolicyDocumentStatementConditionArrayOutputWithContext(context.Background())
}

func (i GetPolicyDocumentStatementConditionArray) ToGetPolicyDocumentStatementConditionArrayOutputWithContext(ctx context.Context) GetPolicyDocumentStatementConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDocumentStatementConditionArrayOutput)
}

type GetPolicyDocumentStatementConditionOutput struct{ *pulumi.OutputState }

func (GetPolicyDocumentStatementConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDocumentStatementCondition)(nil)).Elem()
}

func (o GetPolicyDocumentStatementConditionOutput) ToGetPolicyDocumentStatementConditionOutput() GetPolicyDocumentStatementConditionOutput {
	return o
}

func (o GetPolicyDocumentStatementConditionOutput) ToGetPolicyDocumentStatementConditionOutputWithContext(ctx context.Context) GetPolicyDocumentStatementConditionOutput {
	return o
}

func (o GetPolicyDocumentStatementConditionOutput) Test() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyDocumentStatementCondition) string { return v.Test }).(pulumi.StringOutput)
}

func (o GetPolicyDocumentStatementConditionOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPolicyDocumentStatementCondition) []string { return v.Values }).(pulumi.StringArrayOutput)
}

func (o GetPolicyDocumentStatementConditionOutput) Variable() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyDocumentStatementCondition) string { return v.Variable }).(pulumi.StringOutput)
}

type GetPolicyDocumentStatementConditionArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyDocumentStatementConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDocumentStatementCondition)(nil)).Elem()
}

func (o GetPolicyDocumentStatementConditionArrayOutput) ToGetPolicyDocumentStatementConditionArrayOutput() GetPolicyDocumentStatementConditionArrayOutput {
	return o
}

func (o GetPolicyDocumentStatementConditionArrayOutput) ToGetPolicyDocumentStatementConditionArrayOutputWithContext(ctx context.Context) GetPolicyDocumentStatementConditionArrayOutput {
	return o
}

func (o GetPolicyDocumentStatementConditionArrayOutput) Index(i pulumi.IntInput) GetPolicyDocumentStatementConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyDocumentStatementCondition {
		return vs[0].([]GetPolicyDocumentStatementCondition)[vs[1].(int)]
	}).(GetPolicyDocumentStatementConditionOutput)
}

type GetPolicyDocumentStatementNotPrincipal struct {
	Identifiers []string `pulumi:"identifiers"`
	Type        string   `pulumi:"type"`
}

// GetPolicyDocumentStatementNotPrincipalInput is an input type that accepts GetPolicyDocumentStatementNotPrincipalArgs and GetPolicyDocumentStatementNotPrincipalOutput values.
// You can construct a concrete instance of `GetPolicyDocumentStatementNotPrincipalInput` via:
//
//	GetPolicyDocumentStatementNotPrincipalArgs{...}
type GetPolicyDocumentStatementNotPrincipalInput interface {
	pulumi.Input

	ToGetPolicyDocumentStatementNotPrincipalOutput() GetPolicyDocumentStatementNotPrincipalOutput
	ToGetPolicyDocumentStatementNotPrincipalOutputWithContext(context.Context) GetPolicyDocumentStatementNotPrincipalOutput
}

type GetPolicyDocumentStatementNotPrincipalArgs struct {
	Identifiers pulumi.StringArrayInput `pulumi:"identifiers"`
	Type        pulumi.StringInput      `pulumi:"type"`
}

func (GetPolicyDocumentStatementNotPrincipalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDocumentStatementNotPrincipal)(nil)).Elem()
}

func (i GetPolicyDocumentStatementNotPrincipalArgs) ToGetPolicyDocumentStatementNotPrincipalOutput() GetPolicyDocumentStatementNotPrincipalOutput {
	return i.ToGetPolicyDocumentStatementNotPrincipalOutputWithContext(context.Background())
}

func (i GetPolicyDocumentStatementNotPrincipalArgs) ToGetPolicyDocumentStatementNotPrincipalOutputWithContext(ctx context.Context) GetPolicyDocumentStatementNotPrincipalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDocumentStatementNotPrincipalOutput)
}

// GetPolicyDocumentStatementNotPrincipalArrayInput is an input type that accepts GetPolicyDocumentStatementNotPrincipalArray and GetPolicyDocumentStatementNotPrincipalArrayOutput values.
// You can construct a concrete instance of `GetPolicyDocumentStatementNotPrincipalArrayInput` via:
//
//	GetPolicyDocumentStatementNotPrincipalArray{ GetPolicyDocumentStatementNotPrincipalArgs{...} }
type GetPolicyDocumentStatementNotPrincipalArrayInput interface {
	pulumi.Input

	ToGetPolicyDocumentStatementNotPrincipalArrayOutput() GetPolicyDocumentStatementNotPrincipalArrayOutput
	ToGetPolicyDocumentStatementNotPrincipalArrayOutputWithContext(context.Context) GetPolicyDocumentStatementNotPrincipalArrayOutput
}

type GetPolicyDocumentStatementNotPrincipalArray []GetPolicyDocumentStatementNotPrincipalInput

func (GetPolicyDocumentStatementNotPrincipalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDocumentStatementNotPrincipal)(nil)).Elem()
}

func (i GetPolicyDocumentStatementNotPrincipalArray) ToGetPolicyDocumentStatementNotPrincipalArrayOutput() GetPolicyDocumentStatementNotPrincipalArrayOutput {
	return i.ToGetPolicyDocumentStatementNotPrincipalArrayOutputWithContext(context.Background())
}

func (i GetPolicyDocumentStatementNotPrincipalArray) ToGetPolicyDocumentStatementNotPrincipalArrayOutputWithContext(ctx context.Context) GetPolicyDocumentStatementNotPrincipalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDocumentStatementNotPrincipalArrayOutput)
}

type GetPolicyDocumentStatementNotPrincipalOutput struct{ *pulumi.OutputState }

func (GetPolicyDocumentStatementNotPrincipalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDocumentStatementNotPrincipal)(nil)).Elem()
}

func (o GetPolicyDocumentStatementNotPrincipalOutput) ToGetPolicyDocumentStatementNotPrincipalOutput() GetPolicyDocumentStatementNotPrincipalOutput {
	return o
}

func (o GetPolicyDocumentStatementNotPrincipalOutput) ToGetPolicyDocumentStatementNotPrincipalOutputWithContext(ctx context.Context) GetPolicyDocumentStatementNotPrincipalOutput {
	return o
}

func (o GetPolicyDocumentStatementNotPrincipalOutput) Identifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPolicyDocumentStatementNotPrincipal) []string { return v.Identifiers }).(pulumi.StringArrayOutput)
}

func (o GetPolicyDocumentStatementNotPrincipalOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyDocumentStatementNotPrincipal) string { return v.Type }).(pulumi.StringOutput)
}

type GetPolicyDocumentStatementNotPrincipalArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyDocumentStatementNotPrincipalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDocumentStatementNotPrincipal)(nil)).Elem()
}

func (o GetPolicyDocumentStatementNotPrincipalArrayOutput) ToGetPolicyDocumentStatementNotPrincipalArrayOutput() GetPolicyDocumentStatementNotPrincipalArrayOutput {
	return o
}

func (o GetPolicyDocumentStatementNotPrincipalArrayOutput) ToGetPolicyDocumentStatementNotPrincipalArrayOutputWithContext(ctx context.Context) GetPolicyDocumentStatementNotPrincipalArrayOutput {
	return o
}

func (o GetPolicyDocumentStatementNotPrincipalArrayOutput) Index(i pulumi.IntInput) GetPolicyDocumentStatementNotPrincipalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyDocumentStatementNotPrincipal {
		return vs[0].([]GetPolicyDocumentStatementNotPrincipal)[vs[1].(int)]
	}).(GetPolicyDocumentStatementNotPrincipalOutput)
}

type GetPolicyDocumentStatementPrincipal struct {
	Identifiers []string `pulumi:"identifiers"`
	Type        string   `pulumi:"type"`
}

// GetPolicyDocumentStatementPrincipalInput is an input type that accepts GetPolicyDocumentStatementPrincipalArgs and GetPolicyDocumentStatementPrincipalOutput values.
// You can construct a concrete instance of `GetPolicyDocumentStatementPrincipalInput` via:
//
//	GetPolicyDocumentStatementPrincipalArgs{...}
type GetPolicyDocumentStatementPrincipalInput interface {
	pulumi.Input

	ToGetPolicyDocumentStatementPrincipalOutput() GetPolicyDocumentStatementPrincipalOutput
	ToGetPolicyDocumentStatementPrincipalOutputWithContext(context.Context) GetPolicyDocumentStatementPrincipalOutput
}

type GetPolicyDocumentStatementPrincipalArgs struct {
	Identifiers pulumi.StringArrayInput `pulumi:"identifiers"`
	Type        pulumi.StringInput      `pulumi:"type"`
}

func (GetPolicyDocumentStatementPrincipalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDocumentStatementPrincipal)(nil)).Elem()
}

func (i GetPolicyDocumentStatementPrincipalArgs) ToGetPolicyDocumentStatementPrincipalOutput() GetPolicyDocumentStatementPrincipalOutput {
	return i.ToGetPolicyDocumentStatementPrincipalOutputWithContext(context.Background())
}

func (i GetPolicyDocumentStatementPrincipalArgs) ToGetPolicyDocumentStatementPrincipalOutputWithContext(ctx context.Context) GetPolicyDocumentStatementPrincipalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDocumentStatementPrincipalOutput)
}

// GetPolicyDocumentStatementPrincipalArrayInput is an input type that accepts GetPolicyDocumentStatementPrincipalArray and GetPolicyDocumentStatementPrincipalArrayOutput values.
// You can construct a concrete instance of `GetPolicyDocumentStatementPrincipalArrayInput` via:
//
//	GetPolicyDocumentStatementPrincipalArray{ GetPolicyDocumentStatementPrincipalArgs{...} }
type GetPolicyDocumentStatementPrincipalArrayInput interface {
	pulumi.Input

	ToGetPolicyDocumentStatementPrincipalArrayOutput() GetPolicyDocumentStatementPrincipalArrayOutput
	ToGetPolicyDocumentStatementPrincipalArrayOutputWithContext(context.Context) GetPolicyDocumentStatementPrincipalArrayOutput
}

type GetPolicyDocumentStatementPrincipalArray []GetPolicyDocumentStatementPrincipalInput

func (GetPolicyDocumentStatementPrincipalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDocumentStatementPrincipal)(nil)).Elem()
}

func (i GetPolicyDocumentStatementPrincipalArray) ToGetPolicyDocumentStatementPrincipalArrayOutput() GetPolicyDocumentStatementPrincipalArrayOutput {
	return i.ToGetPolicyDocumentStatementPrincipalArrayOutputWithContext(context.Background())
}

func (i GetPolicyDocumentStatementPrincipalArray) ToGetPolicyDocumentStatementPrincipalArrayOutputWithContext(ctx context.Context) GetPolicyDocumentStatementPrincipalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPolicyDocumentStatementPrincipalArrayOutput)
}

type GetPolicyDocumentStatementPrincipalOutput struct{ *pulumi.OutputState }

func (GetPolicyDocumentStatementPrincipalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPolicyDocumentStatementPrincipal)(nil)).Elem()
}

func (o GetPolicyDocumentStatementPrincipalOutput) ToGetPolicyDocumentStatementPrincipalOutput() GetPolicyDocumentStatementPrincipalOutput {
	return o
}

func (o GetPolicyDocumentStatementPrincipalOutput) ToGetPolicyDocumentStatementPrincipalOutputWithContext(ctx context.Context) GetPolicyDocumentStatementPrincipalOutput {
	return o
}

func (o GetPolicyDocumentStatementPrincipalOutput) Identifiers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPolicyDocumentStatementPrincipal) []string { return v.Identifiers }).(pulumi.StringArrayOutput)
}

func (o GetPolicyDocumentStatementPrincipalOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetPolicyDocumentStatementPrincipal) string { return v.Type }).(pulumi.StringOutput)
}

type GetPolicyDocumentStatementPrincipalArrayOutput struct{ *pulumi.OutputState }

func (GetPolicyDocumentStatementPrincipalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPolicyDocumentStatementPrincipal)(nil)).Elem()
}

func (o GetPolicyDocumentStatementPrincipalArrayOutput) ToGetPolicyDocumentStatementPrincipalArrayOutput() GetPolicyDocumentStatementPrincipalArrayOutput {
	return o
}

func (o GetPolicyDocumentStatementPrincipalArrayOutput) ToGetPolicyDocumentStatementPrincipalArrayOutputWithContext(ctx context.Context) GetPolicyDocumentStatementPrincipalArrayOutput {
	return o
}

func (o GetPolicyDocumentStatementPrincipalArrayOutput) Index(i pulumi.IntInput) GetPolicyDocumentStatementPrincipalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPolicyDocumentStatementPrincipal {
		return vs[0].([]GetPolicyDocumentStatementPrincipal)[vs[1].(int)]
	}).(GetPolicyDocumentStatementPrincipalOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RoleInlinePolicyInput)(nil)).Elem(), RoleInlinePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoleInlinePolicyArrayInput)(nil)).Elem(), RoleInlinePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupUserInput)(nil)).Elem(), GetGroupUserArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetGroupUserArrayInput)(nil)).Elem(), GetGroupUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDocumentStatementInput)(nil)).Elem(), GetPolicyDocumentStatementArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDocumentStatementArrayInput)(nil)).Elem(), GetPolicyDocumentStatementArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDocumentStatementConditionInput)(nil)).Elem(), GetPolicyDocumentStatementConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDocumentStatementConditionArrayInput)(nil)).Elem(), GetPolicyDocumentStatementConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDocumentStatementNotPrincipalInput)(nil)).Elem(), GetPolicyDocumentStatementNotPrincipalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDocumentStatementNotPrincipalArrayInput)(nil)).Elem(), GetPolicyDocumentStatementNotPrincipalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDocumentStatementPrincipalInput)(nil)).Elem(), GetPolicyDocumentStatementPrincipalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPolicyDocumentStatementPrincipalArrayInput)(nil)).Elem(), GetPolicyDocumentStatementPrincipalArray{})
	pulumi.RegisterOutputType(RoleInlinePolicyOutput{})
	pulumi.RegisterOutputType(RoleInlinePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetGroupUserOutput{})
	pulumi.RegisterOutputType(GetGroupUserArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyDocumentStatementOutput{})
	pulumi.RegisterOutputType(GetPolicyDocumentStatementArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyDocumentStatementConditionOutput{})
	pulumi.RegisterOutputType(GetPolicyDocumentStatementConditionArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyDocumentStatementNotPrincipalOutput{})
	pulumi.RegisterOutputType(GetPolicyDocumentStatementNotPrincipalArrayOutput{})
	pulumi.RegisterOutputType(GetPolicyDocumentStatementPrincipalOutput{})
	pulumi.RegisterOutputType(GetPolicyDocumentStatementPrincipalArrayOutput{})
}
