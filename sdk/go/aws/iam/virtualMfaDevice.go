// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type VirtualMfaDevice struct {
	pulumi.CustomResourceState

	Arn                  pulumi.StringOutput    `pulumi:"arn"`
	Base32StringSeed     pulumi.StringOutput    `pulumi:"base32StringSeed"`
	Path                 pulumi.StringPtrOutput `pulumi:"path"`
	QrCodePng            pulumi.StringOutput    `pulumi:"qrCodePng"`
	Tags                 pulumi.StringMapOutput `pulumi:"tags"`
	TagsAll              pulumi.StringMapOutput `pulumi:"tagsAll"`
	VirtualMfaDeviceName pulumi.StringOutput    `pulumi:"virtualMfaDeviceName"`
}

// NewVirtualMfaDevice registers a new resource with the given unique name, arguments, and options.
func NewVirtualMfaDevice(ctx *pulumi.Context,
	name string, args *VirtualMfaDeviceArgs, opts ...pulumi.ResourceOption) (*VirtualMfaDevice, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.VirtualMfaDeviceName == nil {
		return nil, errors.New("invalid value for required argument 'VirtualMfaDeviceName'")
	}
	var resource VirtualMfaDevice
	err := ctx.RegisterResource("aws:iam/virtualMfaDevice:VirtualMfaDevice", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVirtualMfaDevice gets an existing VirtualMfaDevice resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVirtualMfaDevice(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VirtualMfaDeviceState, opts ...pulumi.ResourceOption) (*VirtualMfaDevice, error) {
	var resource VirtualMfaDevice
	err := ctx.ReadResource("aws:iam/virtualMfaDevice:VirtualMfaDevice", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VirtualMfaDevice resources.
type virtualMfaDeviceState struct {
	Arn                  *string           `pulumi:"arn"`
	Base32StringSeed     *string           `pulumi:"base32StringSeed"`
	Path                 *string           `pulumi:"path"`
	QrCodePng            *string           `pulumi:"qrCodePng"`
	Tags                 map[string]string `pulumi:"tags"`
	TagsAll              map[string]string `pulumi:"tagsAll"`
	VirtualMfaDeviceName *string           `pulumi:"virtualMfaDeviceName"`
}

type VirtualMfaDeviceState struct {
	Arn                  pulumi.StringPtrInput
	Base32StringSeed     pulumi.StringPtrInput
	Path                 pulumi.StringPtrInput
	QrCodePng            pulumi.StringPtrInput
	Tags                 pulumi.StringMapInput
	TagsAll              pulumi.StringMapInput
	VirtualMfaDeviceName pulumi.StringPtrInput
}

func (VirtualMfaDeviceState) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMfaDeviceState)(nil)).Elem()
}

type virtualMfaDeviceArgs struct {
	Path                 *string           `pulumi:"path"`
	Tags                 map[string]string `pulumi:"tags"`
	VirtualMfaDeviceName string            `pulumi:"virtualMfaDeviceName"`
}

// The set of arguments for constructing a VirtualMfaDevice resource.
type VirtualMfaDeviceArgs struct {
	Path                 pulumi.StringPtrInput
	Tags                 pulumi.StringMapInput
	VirtualMfaDeviceName pulumi.StringInput
}

func (VirtualMfaDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*virtualMfaDeviceArgs)(nil)).Elem()
}

type VirtualMfaDeviceInput interface {
	pulumi.Input

	ToVirtualMfaDeviceOutput() VirtualMfaDeviceOutput
	ToVirtualMfaDeviceOutputWithContext(ctx context.Context) VirtualMfaDeviceOutput
}

func (*VirtualMfaDevice) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMfaDevice)(nil)).Elem()
}

func (i *VirtualMfaDevice) ToVirtualMfaDeviceOutput() VirtualMfaDeviceOutput {
	return i.ToVirtualMfaDeviceOutputWithContext(context.Background())
}

func (i *VirtualMfaDevice) ToVirtualMfaDeviceOutputWithContext(ctx context.Context) VirtualMfaDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMfaDeviceOutput)
}

// VirtualMfaDeviceArrayInput is an input type that accepts VirtualMfaDeviceArray and VirtualMfaDeviceArrayOutput values.
// You can construct a concrete instance of `VirtualMfaDeviceArrayInput` via:
//
//	VirtualMfaDeviceArray{ VirtualMfaDeviceArgs{...} }
type VirtualMfaDeviceArrayInput interface {
	pulumi.Input

	ToVirtualMfaDeviceArrayOutput() VirtualMfaDeviceArrayOutput
	ToVirtualMfaDeviceArrayOutputWithContext(context.Context) VirtualMfaDeviceArrayOutput
}

type VirtualMfaDeviceArray []VirtualMfaDeviceInput

func (VirtualMfaDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VirtualMfaDevice)(nil)).Elem()
}

func (i VirtualMfaDeviceArray) ToVirtualMfaDeviceArrayOutput() VirtualMfaDeviceArrayOutput {
	return i.ToVirtualMfaDeviceArrayOutputWithContext(context.Background())
}

func (i VirtualMfaDeviceArray) ToVirtualMfaDeviceArrayOutputWithContext(ctx context.Context) VirtualMfaDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMfaDeviceArrayOutput)
}

// VirtualMfaDeviceMapInput is an input type that accepts VirtualMfaDeviceMap and VirtualMfaDeviceMapOutput values.
// You can construct a concrete instance of `VirtualMfaDeviceMapInput` via:
//
//	VirtualMfaDeviceMap{ "key": VirtualMfaDeviceArgs{...} }
type VirtualMfaDeviceMapInput interface {
	pulumi.Input

	ToVirtualMfaDeviceMapOutput() VirtualMfaDeviceMapOutput
	ToVirtualMfaDeviceMapOutputWithContext(context.Context) VirtualMfaDeviceMapOutput
}

type VirtualMfaDeviceMap map[string]VirtualMfaDeviceInput

func (VirtualMfaDeviceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VirtualMfaDevice)(nil)).Elem()
}

func (i VirtualMfaDeviceMap) ToVirtualMfaDeviceMapOutput() VirtualMfaDeviceMapOutput {
	return i.ToVirtualMfaDeviceMapOutputWithContext(context.Background())
}

func (i VirtualMfaDeviceMap) ToVirtualMfaDeviceMapOutputWithContext(ctx context.Context) VirtualMfaDeviceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VirtualMfaDeviceMapOutput)
}

type VirtualMfaDeviceOutput struct{ *pulumi.OutputState }

func (VirtualMfaDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**VirtualMfaDevice)(nil)).Elem()
}

func (o VirtualMfaDeviceOutput) ToVirtualMfaDeviceOutput() VirtualMfaDeviceOutput {
	return o
}

func (o VirtualMfaDeviceOutput) ToVirtualMfaDeviceOutputWithContext(ctx context.Context) VirtualMfaDeviceOutput {
	return o
}

func (o VirtualMfaDeviceOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMfaDevice) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o VirtualMfaDeviceOutput) Base32StringSeed() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMfaDevice) pulumi.StringOutput { return v.Base32StringSeed }).(pulumi.StringOutput)
}

func (o VirtualMfaDeviceOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *VirtualMfaDevice) pulumi.StringPtrOutput { return v.Path }).(pulumi.StringPtrOutput)
}

func (o VirtualMfaDeviceOutput) QrCodePng() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMfaDevice) pulumi.StringOutput { return v.QrCodePng }).(pulumi.StringOutput)
}

func (o VirtualMfaDeviceOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualMfaDevice) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o VirtualMfaDeviceOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *VirtualMfaDevice) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o VirtualMfaDeviceOutput) VirtualMfaDeviceName() pulumi.StringOutput {
	return o.ApplyT(func(v *VirtualMfaDevice) pulumi.StringOutput { return v.VirtualMfaDeviceName }).(pulumi.StringOutput)
}

type VirtualMfaDeviceArrayOutput struct{ *pulumi.OutputState }

func (VirtualMfaDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*VirtualMfaDevice)(nil)).Elem()
}

func (o VirtualMfaDeviceArrayOutput) ToVirtualMfaDeviceArrayOutput() VirtualMfaDeviceArrayOutput {
	return o
}

func (o VirtualMfaDeviceArrayOutput) ToVirtualMfaDeviceArrayOutputWithContext(ctx context.Context) VirtualMfaDeviceArrayOutput {
	return o
}

func (o VirtualMfaDeviceArrayOutput) Index(i pulumi.IntInput) VirtualMfaDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *VirtualMfaDevice {
		return vs[0].([]*VirtualMfaDevice)[vs[1].(int)]
	}).(VirtualMfaDeviceOutput)
}

type VirtualMfaDeviceMapOutput struct{ *pulumi.OutputState }

func (VirtualMfaDeviceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*VirtualMfaDevice)(nil)).Elem()
}

func (o VirtualMfaDeviceMapOutput) ToVirtualMfaDeviceMapOutput() VirtualMfaDeviceMapOutput {
	return o
}

func (o VirtualMfaDeviceMapOutput) ToVirtualMfaDeviceMapOutputWithContext(ctx context.Context) VirtualMfaDeviceMapOutput {
	return o
}

func (o VirtualMfaDeviceMapOutput) MapIndex(k pulumi.StringInput) VirtualMfaDeviceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *VirtualMfaDevice {
		return vs[0].(map[string]*VirtualMfaDevice)[vs[1].(string)]
	}).(VirtualMfaDeviceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMfaDeviceInput)(nil)).Elem(), &VirtualMfaDevice{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMfaDeviceArrayInput)(nil)).Elem(), VirtualMfaDeviceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*VirtualMfaDeviceMapInput)(nil)).Elem(), VirtualMfaDeviceMap{})
	pulumi.RegisterOutputType(VirtualMfaDeviceOutput{})
	pulumi.RegisterOutputType(VirtualMfaDeviceArrayOutput{})
	pulumi.RegisterOutputType(VirtualMfaDeviceMapOutput{})
}
