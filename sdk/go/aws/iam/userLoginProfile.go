// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type UserLoginProfile struct {
	pulumi.CustomResourceState

	EncryptedPassword     pulumi.StringOutput    `pulumi:"encryptedPassword"`
	KeyFingerprint        pulumi.StringOutput    `pulumi:"keyFingerprint"`
	Password              pulumi.StringOutput    `pulumi:"password"`
	PasswordLength        pulumi.IntPtrOutput    `pulumi:"passwordLength"`
	PasswordResetRequired pulumi.BoolOutput      `pulumi:"passwordResetRequired"`
	PgpKey                pulumi.StringPtrOutput `pulumi:"pgpKey"`
	User                  pulumi.StringOutput    `pulumi:"user"`
}

// NewUserLoginProfile registers a new resource with the given unique name, arguments, and options.
func NewUserLoginProfile(ctx *pulumi.Context,
	name string, args *UserLoginProfileArgs, opts ...pulumi.ResourceOption) (*UserLoginProfile, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.User == nil {
		return nil, errors.New("invalid value for required argument 'User'")
	}
	var resource UserLoginProfile
	err := ctx.RegisterResource("aws:iam/userLoginProfile:UserLoginProfile", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserLoginProfile gets an existing UserLoginProfile resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserLoginProfile(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserLoginProfileState, opts ...pulumi.ResourceOption) (*UserLoginProfile, error) {
	var resource UserLoginProfile
	err := ctx.ReadResource("aws:iam/userLoginProfile:UserLoginProfile", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserLoginProfile resources.
type userLoginProfileState struct {
	EncryptedPassword     *string `pulumi:"encryptedPassword"`
	KeyFingerprint        *string `pulumi:"keyFingerprint"`
	Password              *string `pulumi:"password"`
	PasswordLength        *int    `pulumi:"passwordLength"`
	PasswordResetRequired *bool   `pulumi:"passwordResetRequired"`
	PgpKey                *string `pulumi:"pgpKey"`
	User                  *string `pulumi:"user"`
}

type UserLoginProfileState struct {
	EncryptedPassword     pulumi.StringPtrInput
	KeyFingerprint        pulumi.StringPtrInput
	Password              pulumi.StringPtrInput
	PasswordLength        pulumi.IntPtrInput
	PasswordResetRequired pulumi.BoolPtrInput
	PgpKey                pulumi.StringPtrInput
	User                  pulumi.StringPtrInput
}

func (UserLoginProfileState) ElementType() reflect.Type {
	return reflect.TypeOf((*userLoginProfileState)(nil)).Elem()
}

type userLoginProfileArgs struct {
	PasswordLength        *int    `pulumi:"passwordLength"`
	PasswordResetRequired *bool   `pulumi:"passwordResetRequired"`
	PgpKey                *string `pulumi:"pgpKey"`
	User                  string  `pulumi:"user"`
}

// The set of arguments for constructing a UserLoginProfile resource.
type UserLoginProfileArgs struct {
	PasswordLength        pulumi.IntPtrInput
	PasswordResetRequired pulumi.BoolPtrInput
	PgpKey                pulumi.StringPtrInput
	User                  pulumi.StringInput
}

func (UserLoginProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userLoginProfileArgs)(nil)).Elem()
}

type UserLoginProfileInput interface {
	pulumi.Input

	ToUserLoginProfileOutput() UserLoginProfileOutput
	ToUserLoginProfileOutputWithContext(ctx context.Context) UserLoginProfileOutput
}

func (*UserLoginProfile) ElementType() reflect.Type {
	return reflect.TypeOf((**UserLoginProfile)(nil)).Elem()
}

func (i *UserLoginProfile) ToUserLoginProfileOutput() UserLoginProfileOutput {
	return i.ToUserLoginProfileOutputWithContext(context.Background())
}

func (i *UserLoginProfile) ToUserLoginProfileOutputWithContext(ctx context.Context) UserLoginProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserLoginProfileOutput)
}

// UserLoginProfileArrayInput is an input type that accepts UserLoginProfileArray and UserLoginProfileArrayOutput values.
// You can construct a concrete instance of `UserLoginProfileArrayInput` via:
//
//	UserLoginProfileArray{ UserLoginProfileArgs{...} }
type UserLoginProfileArrayInput interface {
	pulumi.Input

	ToUserLoginProfileArrayOutput() UserLoginProfileArrayOutput
	ToUserLoginProfileArrayOutputWithContext(context.Context) UserLoginProfileArrayOutput
}

type UserLoginProfileArray []UserLoginProfileInput

func (UserLoginProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserLoginProfile)(nil)).Elem()
}

func (i UserLoginProfileArray) ToUserLoginProfileArrayOutput() UserLoginProfileArrayOutput {
	return i.ToUserLoginProfileArrayOutputWithContext(context.Background())
}

func (i UserLoginProfileArray) ToUserLoginProfileArrayOutputWithContext(ctx context.Context) UserLoginProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserLoginProfileArrayOutput)
}

// UserLoginProfileMapInput is an input type that accepts UserLoginProfileMap and UserLoginProfileMapOutput values.
// You can construct a concrete instance of `UserLoginProfileMapInput` via:
//
//	UserLoginProfileMap{ "key": UserLoginProfileArgs{...} }
type UserLoginProfileMapInput interface {
	pulumi.Input

	ToUserLoginProfileMapOutput() UserLoginProfileMapOutput
	ToUserLoginProfileMapOutputWithContext(context.Context) UserLoginProfileMapOutput
}

type UserLoginProfileMap map[string]UserLoginProfileInput

func (UserLoginProfileMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserLoginProfile)(nil)).Elem()
}

func (i UserLoginProfileMap) ToUserLoginProfileMapOutput() UserLoginProfileMapOutput {
	return i.ToUserLoginProfileMapOutputWithContext(context.Background())
}

func (i UserLoginProfileMap) ToUserLoginProfileMapOutputWithContext(ctx context.Context) UserLoginProfileMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserLoginProfileMapOutput)
}

type UserLoginProfileOutput struct{ *pulumi.OutputState }

func (UserLoginProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserLoginProfile)(nil)).Elem()
}

func (o UserLoginProfileOutput) ToUserLoginProfileOutput() UserLoginProfileOutput {
	return o
}

func (o UserLoginProfileOutput) ToUserLoginProfileOutputWithContext(ctx context.Context) UserLoginProfileOutput {
	return o
}

func (o UserLoginProfileOutput) EncryptedPassword() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLoginProfile) pulumi.StringOutput { return v.EncryptedPassword }).(pulumi.StringOutput)
}

func (o UserLoginProfileOutput) KeyFingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLoginProfile) pulumi.StringOutput { return v.KeyFingerprint }).(pulumi.StringOutput)
}

func (o UserLoginProfileOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLoginProfile) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

func (o UserLoginProfileOutput) PasswordLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UserLoginProfile) pulumi.IntPtrOutput { return v.PasswordLength }).(pulumi.IntPtrOutput)
}

func (o UserLoginProfileOutput) PasswordResetRequired() pulumi.BoolOutput {
	return o.ApplyT(func(v *UserLoginProfile) pulumi.BoolOutput { return v.PasswordResetRequired }).(pulumi.BoolOutput)
}

func (o UserLoginProfileOutput) PgpKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserLoginProfile) pulumi.StringPtrOutput { return v.PgpKey }).(pulumi.StringPtrOutput)
}

func (o UserLoginProfileOutput) User() pulumi.StringOutput {
	return o.ApplyT(func(v *UserLoginProfile) pulumi.StringOutput { return v.User }).(pulumi.StringOutput)
}

type UserLoginProfileArrayOutput struct{ *pulumi.OutputState }

func (UserLoginProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UserLoginProfile)(nil)).Elem()
}

func (o UserLoginProfileArrayOutput) ToUserLoginProfileArrayOutput() UserLoginProfileArrayOutput {
	return o
}

func (o UserLoginProfileArrayOutput) ToUserLoginProfileArrayOutputWithContext(ctx context.Context) UserLoginProfileArrayOutput {
	return o
}

func (o UserLoginProfileArrayOutput) Index(i pulumi.IntInput) UserLoginProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UserLoginProfile {
		return vs[0].([]*UserLoginProfile)[vs[1].(int)]
	}).(UserLoginProfileOutput)
}

type UserLoginProfileMapOutput struct{ *pulumi.OutputState }

func (UserLoginProfileMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UserLoginProfile)(nil)).Elem()
}

func (o UserLoginProfileMapOutput) ToUserLoginProfileMapOutput() UserLoginProfileMapOutput {
	return o
}

func (o UserLoginProfileMapOutput) ToUserLoginProfileMapOutputWithContext(ctx context.Context) UserLoginProfileMapOutput {
	return o
}

func (o UserLoginProfileMapOutput) MapIndex(k pulumi.StringInput) UserLoginProfileOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UserLoginProfile {
		return vs[0].(map[string]*UserLoginProfile)[vs[1].(string)]
	}).(UserLoginProfileOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UserLoginProfileInput)(nil)).Elem(), &UserLoginProfile{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserLoginProfileArrayInput)(nil)).Elem(), UserLoginProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserLoginProfileMapInput)(nil)).Elem(), UserLoginProfileMap{})
	pulumi.RegisterOutputType(UserLoginProfileOutput{})
	pulumi.RegisterOutputType(UserLoginProfileArrayOutput{})
	pulumi.RegisterOutputType(UserLoginProfileMapOutput{})
}
