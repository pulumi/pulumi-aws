// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssoadmin

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source returning the ARN of all AWS SSO Admin Permission Sets.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ssoadmin"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := ssoadmin.GetInstances(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			_, err = ssoadmin.GetPermissionSets(ctx, &ssoadmin.GetPermissionSetsArgs{
//				InstanceArn: example.Arns[0],
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetPermissionSets(ctx *pulumi.Context, args *GetPermissionSetsArgs, opts ...pulumi.InvokeOption) (*GetPermissionSetsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPermissionSetsResult
	err := ctx.Invoke("aws:ssoadmin/getPermissionSets:getPermissionSets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPermissionSets.
type GetPermissionSetsArgs struct {
	// ARN of the SSO Instance associated with the permission set.
	InstanceArn string `pulumi:"instanceArn"`
}

// A collection of values returned by getPermissionSets.
type GetPermissionSetsResult struct {
	// Set of string contain the ARN of all Permission Sets.
	Arns        []string `pulumi:"arns"`
	Id          string   `pulumi:"id"`
	InstanceArn string   `pulumi:"instanceArn"`
}

func GetPermissionSetsOutput(ctx *pulumi.Context, args GetPermissionSetsOutputArgs, opts ...pulumi.InvokeOption) GetPermissionSetsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPermissionSetsResult, error) {
			args := v.(GetPermissionSetsArgs)
			r, err := GetPermissionSets(ctx, &args, opts...)
			var s GetPermissionSetsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPermissionSetsResultOutput)
}

// A collection of arguments for invoking getPermissionSets.
type GetPermissionSetsOutputArgs struct {
	// ARN of the SSO Instance associated with the permission set.
	InstanceArn pulumi.StringInput `pulumi:"instanceArn"`
}

func (GetPermissionSetsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPermissionSetsArgs)(nil)).Elem()
}

// A collection of values returned by getPermissionSets.
type GetPermissionSetsResultOutput struct{ *pulumi.OutputState }

func (GetPermissionSetsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPermissionSetsResult)(nil)).Elem()
}

func (o GetPermissionSetsResultOutput) ToGetPermissionSetsResultOutput() GetPermissionSetsResultOutput {
	return o
}

func (o GetPermissionSetsResultOutput) ToGetPermissionSetsResultOutputWithContext(ctx context.Context) GetPermissionSetsResultOutput {
	return o
}

// Set of string contain the ARN of all Permission Sets.
func (o GetPermissionSetsResultOutput) Arns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPermissionSetsResult) []string { return v.Arns }).(pulumi.StringArrayOutput)
}

func (o GetPermissionSetsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionSetsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPermissionSetsResultOutput) InstanceArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetPermissionSetsResult) string { return v.InstanceArn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPermissionSetsResultOutput{})
}
