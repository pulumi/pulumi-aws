// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssoadmin

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS SSO Admin Application Assignment.
//
// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ssoadmin"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ssoadmin.NewApplicationAssignment(ctx, "example", &ssoadmin.ApplicationAssignmentArgs{
//				ApplicationArn: pulumi.Any(aws_ssoadmin_application.Example.Application_arn),
//				PrincipalId:    pulumi.Any(aws_identitystore_user.Example.User_id),
//				PrincipalType:  pulumi.String("USER"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ### Group Type
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/ssoadmin"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ssoadmin.NewApplicationAssignment(ctx, "example", &ssoadmin.ApplicationAssignmentArgs{
//				ApplicationArn: pulumi.Any(aws_ssoadmin_application.Example.Application_arn),
//				PrincipalId:    pulumi.Any(aws_identitystore_group.Example.Group_id),
//				PrincipalType:  pulumi.String("GROUP"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import SSO Admin Application Assignment using the `id`. For example:
//
// ```sh
//
//	$ pulumi import aws:ssoadmin/applicationAssignment:ApplicationAssignment example arn:aws:sso::012345678901:application/id-12345678,abcd1234,USER
//
// ```
type ApplicationAssignment struct {
	pulumi.CustomResourceState

	// ARN of the application.
	ApplicationArn pulumi.StringOutput `pulumi:"applicationArn"`
	// An identifier for an object in IAM Identity Center, such as a user or group.
	PrincipalId pulumi.StringOutput `pulumi:"principalId"`
	// Entity type for which the assignment will be created. Valid values are `USER` or `GROUP`.
	PrincipalType pulumi.StringOutput `pulumi:"principalType"`
}

// NewApplicationAssignment registers a new resource with the given unique name, arguments, and options.
func NewApplicationAssignment(ctx *pulumi.Context,
	name string, args *ApplicationAssignmentArgs, opts ...pulumi.ResourceOption) (*ApplicationAssignment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationArn == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationArn'")
	}
	if args.PrincipalId == nil {
		return nil, errors.New("invalid value for required argument 'PrincipalId'")
	}
	if args.PrincipalType == nil {
		return nil, errors.New("invalid value for required argument 'PrincipalType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApplicationAssignment
	err := ctx.RegisterResource("aws:ssoadmin/applicationAssignment:ApplicationAssignment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplicationAssignment gets an existing ApplicationAssignment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplicationAssignment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationAssignmentState, opts ...pulumi.ResourceOption) (*ApplicationAssignment, error) {
	var resource ApplicationAssignment
	err := ctx.ReadResource("aws:ssoadmin/applicationAssignment:ApplicationAssignment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplicationAssignment resources.
type applicationAssignmentState struct {
	// ARN of the application.
	ApplicationArn *string `pulumi:"applicationArn"`
	// An identifier for an object in IAM Identity Center, such as a user or group.
	PrincipalId *string `pulumi:"principalId"`
	// Entity type for which the assignment will be created. Valid values are `USER` or `GROUP`.
	PrincipalType *string `pulumi:"principalType"`
}

type ApplicationAssignmentState struct {
	// ARN of the application.
	ApplicationArn pulumi.StringPtrInput
	// An identifier for an object in IAM Identity Center, such as a user or group.
	PrincipalId pulumi.StringPtrInput
	// Entity type for which the assignment will be created. Valid values are `USER` or `GROUP`.
	PrincipalType pulumi.StringPtrInput
}

func (ApplicationAssignmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationAssignmentState)(nil)).Elem()
}

type applicationAssignmentArgs struct {
	// ARN of the application.
	ApplicationArn string `pulumi:"applicationArn"`
	// An identifier for an object in IAM Identity Center, such as a user or group.
	PrincipalId string `pulumi:"principalId"`
	// Entity type for which the assignment will be created. Valid values are `USER` or `GROUP`.
	PrincipalType string `pulumi:"principalType"`
}

// The set of arguments for constructing a ApplicationAssignment resource.
type ApplicationAssignmentArgs struct {
	// ARN of the application.
	ApplicationArn pulumi.StringInput
	// An identifier for an object in IAM Identity Center, such as a user or group.
	PrincipalId pulumi.StringInput
	// Entity type for which the assignment will be created. Valid values are `USER` or `GROUP`.
	PrincipalType pulumi.StringInput
}

func (ApplicationAssignmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationAssignmentArgs)(nil)).Elem()
}

type ApplicationAssignmentInput interface {
	pulumi.Input

	ToApplicationAssignmentOutput() ApplicationAssignmentOutput
	ToApplicationAssignmentOutputWithContext(ctx context.Context) ApplicationAssignmentOutput
}

func (*ApplicationAssignment) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationAssignment)(nil)).Elem()
}

func (i *ApplicationAssignment) ToApplicationAssignmentOutput() ApplicationAssignmentOutput {
	return i.ToApplicationAssignmentOutputWithContext(context.Background())
}

func (i *ApplicationAssignment) ToApplicationAssignmentOutputWithContext(ctx context.Context) ApplicationAssignmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAssignmentOutput)
}

// ApplicationAssignmentArrayInput is an input type that accepts ApplicationAssignmentArray and ApplicationAssignmentArrayOutput values.
// You can construct a concrete instance of `ApplicationAssignmentArrayInput` via:
//
//	ApplicationAssignmentArray{ ApplicationAssignmentArgs{...} }
type ApplicationAssignmentArrayInput interface {
	pulumi.Input

	ToApplicationAssignmentArrayOutput() ApplicationAssignmentArrayOutput
	ToApplicationAssignmentArrayOutputWithContext(context.Context) ApplicationAssignmentArrayOutput
}

type ApplicationAssignmentArray []ApplicationAssignmentInput

func (ApplicationAssignmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationAssignment)(nil)).Elem()
}

func (i ApplicationAssignmentArray) ToApplicationAssignmentArrayOutput() ApplicationAssignmentArrayOutput {
	return i.ToApplicationAssignmentArrayOutputWithContext(context.Background())
}

func (i ApplicationAssignmentArray) ToApplicationAssignmentArrayOutputWithContext(ctx context.Context) ApplicationAssignmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAssignmentArrayOutput)
}

// ApplicationAssignmentMapInput is an input type that accepts ApplicationAssignmentMap and ApplicationAssignmentMapOutput values.
// You can construct a concrete instance of `ApplicationAssignmentMapInput` via:
//
//	ApplicationAssignmentMap{ "key": ApplicationAssignmentArgs{...} }
type ApplicationAssignmentMapInput interface {
	pulumi.Input

	ToApplicationAssignmentMapOutput() ApplicationAssignmentMapOutput
	ToApplicationAssignmentMapOutputWithContext(context.Context) ApplicationAssignmentMapOutput
}

type ApplicationAssignmentMap map[string]ApplicationAssignmentInput

func (ApplicationAssignmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationAssignment)(nil)).Elem()
}

func (i ApplicationAssignmentMap) ToApplicationAssignmentMapOutput() ApplicationAssignmentMapOutput {
	return i.ToApplicationAssignmentMapOutputWithContext(context.Background())
}

func (i ApplicationAssignmentMap) ToApplicationAssignmentMapOutputWithContext(ctx context.Context) ApplicationAssignmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationAssignmentMapOutput)
}

type ApplicationAssignmentOutput struct{ *pulumi.OutputState }

func (ApplicationAssignmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationAssignment)(nil)).Elem()
}

func (o ApplicationAssignmentOutput) ToApplicationAssignmentOutput() ApplicationAssignmentOutput {
	return o
}

func (o ApplicationAssignmentOutput) ToApplicationAssignmentOutputWithContext(ctx context.Context) ApplicationAssignmentOutput {
	return o
}

// ARN of the application.
func (o ApplicationAssignmentOutput) ApplicationArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationAssignment) pulumi.StringOutput { return v.ApplicationArn }).(pulumi.StringOutput)
}

// An identifier for an object in IAM Identity Center, such as a user or group.
func (o ApplicationAssignmentOutput) PrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationAssignment) pulumi.StringOutput { return v.PrincipalId }).(pulumi.StringOutput)
}

// Entity type for which the assignment will be created. Valid values are `USER` or `GROUP`.
func (o ApplicationAssignmentOutput) PrincipalType() pulumi.StringOutput {
	return o.ApplyT(func(v *ApplicationAssignment) pulumi.StringOutput { return v.PrincipalType }).(pulumi.StringOutput)
}

type ApplicationAssignmentArrayOutput struct{ *pulumi.OutputState }

func (ApplicationAssignmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApplicationAssignment)(nil)).Elem()
}

func (o ApplicationAssignmentArrayOutput) ToApplicationAssignmentArrayOutput() ApplicationAssignmentArrayOutput {
	return o
}

func (o ApplicationAssignmentArrayOutput) ToApplicationAssignmentArrayOutputWithContext(ctx context.Context) ApplicationAssignmentArrayOutput {
	return o
}

func (o ApplicationAssignmentArrayOutput) Index(i pulumi.IntInput) ApplicationAssignmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApplicationAssignment {
		return vs[0].([]*ApplicationAssignment)[vs[1].(int)]
	}).(ApplicationAssignmentOutput)
}

type ApplicationAssignmentMapOutput struct{ *pulumi.OutputState }

func (ApplicationAssignmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApplicationAssignment)(nil)).Elem()
}

func (o ApplicationAssignmentMapOutput) ToApplicationAssignmentMapOutput() ApplicationAssignmentMapOutput {
	return o
}

func (o ApplicationAssignmentMapOutput) ToApplicationAssignmentMapOutputWithContext(ctx context.Context) ApplicationAssignmentMapOutput {
	return o
}

func (o ApplicationAssignmentMapOutput) MapIndex(k pulumi.StringInput) ApplicationAssignmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApplicationAssignment {
		return vs[0].(map[string]*ApplicationAssignment)[vs[1].(string)]
	}).(ApplicationAssignmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationAssignmentInput)(nil)).Elem(), &ApplicationAssignment{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationAssignmentArrayInput)(nil)).Elem(), ApplicationAssignmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationAssignmentMapInput)(nil)).Elem(), ApplicationAssignmentMap{})
	pulumi.RegisterOutputType(ApplicationAssignmentOutput{})
	pulumi.RegisterOutputType(ApplicationAssignmentArrayOutput{})
	pulumi.RegisterOutputType(ApplicationAssignmentMapOutput{})
}
