// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssoadmin

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ManagedPolicyAttachment struct {
	pulumi.CustomResourceState

	InstanceArn       pulumi.StringOutput `pulumi:"instanceArn"`
	ManagedPolicyArn  pulumi.StringOutput `pulumi:"managedPolicyArn"`
	ManagedPolicyName pulumi.StringOutput `pulumi:"managedPolicyName"`
	PermissionSetArn  pulumi.StringOutput `pulumi:"permissionSetArn"`
}

// NewManagedPolicyAttachment registers a new resource with the given unique name, arguments, and options.
func NewManagedPolicyAttachment(ctx *pulumi.Context,
	name string, args *ManagedPolicyAttachmentArgs, opts ...pulumi.ResourceOption) (*ManagedPolicyAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceArn == nil {
		return nil, errors.New("invalid value for required argument 'InstanceArn'")
	}
	if args.ManagedPolicyArn == nil {
		return nil, errors.New("invalid value for required argument 'ManagedPolicyArn'")
	}
	if args.PermissionSetArn == nil {
		return nil, errors.New("invalid value for required argument 'PermissionSetArn'")
	}
	var resource ManagedPolicyAttachment
	err := ctx.RegisterResource("aws:ssoadmin/managedPolicyAttachment:ManagedPolicyAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedPolicyAttachment gets an existing ManagedPolicyAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedPolicyAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedPolicyAttachmentState, opts ...pulumi.ResourceOption) (*ManagedPolicyAttachment, error) {
	var resource ManagedPolicyAttachment
	err := ctx.ReadResource("aws:ssoadmin/managedPolicyAttachment:ManagedPolicyAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedPolicyAttachment resources.
type managedPolicyAttachmentState struct {
	InstanceArn       *string `pulumi:"instanceArn"`
	ManagedPolicyArn  *string `pulumi:"managedPolicyArn"`
	ManagedPolicyName *string `pulumi:"managedPolicyName"`
	PermissionSetArn  *string `pulumi:"permissionSetArn"`
}

type ManagedPolicyAttachmentState struct {
	InstanceArn       pulumi.StringPtrInput
	ManagedPolicyArn  pulumi.StringPtrInput
	ManagedPolicyName pulumi.StringPtrInput
	PermissionSetArn  pulumi.StringPtrInput
}

func (ManagedPolicyAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedPolicyAttachmentState)(nil)).Elem()
}

type managedPolicyAttachmentArgs struct {
	InstanceArn      string `pulumi:"instanceArn"`
	ManagedPolicyArn string `pulumi:"managedPolicyArn"`
	PermissionSetArn string `pulumi:"permissionSetArn"`
}

// The set of arguments for constructing a ManagedPolicyAttachment resource.
type ManagedPolicyAttachmentArgs struct {
	InstanceArn      pulumi.StringInput
	ManagedPolicyArn pulumi.StringInput
	PermissionSetArn pulumi.StringInput
}

func (ManagedPolicyAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedPolicyAttachmentArgs)(nil)).Elem()
}

type ManagedPolicyAttachmentInput interface {
	pulumi.Input

	ToManagedPolicyAttachmentOutput() ManagedPolicyAttachmentOutput
	ToManagedPolicyAttachmentOutputWithContext(ctx context.Context) ManagedPolicyAttachmentOutput
}

func (*ManagedPolicyAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedPolicyAttachment)(nil)).Elem()
}

func (i *ManagedPolicyAttachment) ToManagedPolicyAttachmentOutput() ManagedPolicyAttachmentOutput {
	return i.ToManagedPolicyAttachmentOutputWithContext(context.Background())
}

func (i *ManagedPolicyAttachment) ToManagedPolicyAttachmentOutputWithContext(ctx context.Context) ManagedPolicyAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedPolicyAttachmentOutput)
}

// ManagedPolicyAttachmentArrayInput is an input type that accepts ManagedPolicyAttachmentArray and ManagedPolicyAttachmentArrayOutput values.
// You can construct a concrete instance of `ManagedPolicyAttachmentArrayInput` via:
//
//	ManagedPolicyAttachmentArray{ ManagedPolicyAttachmentArgs{...} }
type ManagedPolicyAttachmentArrayInput interface {
	pulumi.Input

	ToManagedPolicyAttachmentArrayOutput() ManagedPolicyAttachmentArrayOutput
	ToManagedPolicyAttachmentArrayOutputWithContext(context.Context) ManagedPolicyAttachmentArrayOutput
}

type ManagedPolicyAttachmentArray []ManagedPolicyAttachmentInput

func (ManagedPolicyAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedPolicyAttachment)(nil)).Elem()
}

func (i ManagedPolicyAttachmentArray) ToManagedPolicyAttachmentArrayOutput() ManagedPolicyAttachmentArrayOutput {
	return i.ToManagedPolicyAttachmentArrayOutputWithContext(context.Background())
}

func (i ManagedPolicyAttachmentArray) ToManagedPolicyAttachmentArrayOutputWithContext(ctx context.Context) ManagedPolicyAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedPolicyAttachmentArrayOutput)
}

// ManagedPolicyAttachmentMapInput is an input type that accepts ManagedPolicyAttachmentMap and ManagedPolicyAttachmentMapOutput values.
// You can construct a concrete instance of `ManagedPolicyAttachmentMapInput` via:
//
//	ManagedPolicyAttachmentMap{ "key": ManagedPolicyAttachmentArgs{...} }
type ManagedPolicyAttachmentMapInput interface {
	pulumi.Input

	ToManagedPolicyAttachmentMapOutput() ManagedPolicyAttachmentMapOutput
	ToManagedPolicyAttachmentMapOutputWithContext(context.Context) ManagedPolicyAttachmentMapOutput
}

type ManagedPolicyAttachmentMap map[string]ManagedPolicyAttachmentInput

func (ManagedPolicyAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedPolicyAttachment)(nil)).Elem()
}

func (i ManagedPolicyAttachmentMap) ToManagedPolicyAttachmentMapOutput() ManagedPolicyAttachmentMapOutput {
	return i.ToManagedPolicyAttachmentMapOutputWithContext(context.Background())
}

func (i ManagedPolicyAttachmentMap) ToManagedPolicyAttachmentMapOutputWithContext(ctx context.Context) ManagedPolicyAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedPolicyAttachmentMapOutput)
}

type ManagedPolicyAttachmentOutput struct{ *pulumi.OutputState }

func (ManagedPolicyAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedPolicyAttachment)(nil)).Elem()
}

func (o ManagedPolicyAttachmentOutput) ToManagedPolicyAttachmentOutput() ManagedPolicyAttachmentOutput {
	return o
}

func (o ManagedPolicyAttachmentOutput) ToManagedPolicyAttachmentOutputWithContext(ctx context.Context) ManagedPolicyAttachmentOutput {
	return o
}

func (o ManagedPolicyAttachmentOutput) InstanceArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedPolicyAttachment) pulumi.StringOutput { return v.InstanceArn }).(pulumi.StringOutput)
}

func (o ManagedPolicyAttachmentOutput) ManagedPolicyArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedPolicyAttachment) pulumi.StringOutput { return v.ManagedPolicyArn }).(pulumi.StringOutput)
}

func (o ManagedPolicyAttachmentOutput) ManagedPolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedPolicyAttachment) pulumi.StringOutput { return v.ManagedPolicyName }).(pulumi.StringOutput)
}

func (o ManagedPolicyAttachmentOutput) PermissionSetArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedPolicyAttachment) pulumi.StringOutput { return v.PermissionSetArn }).(pulumi.StringOutput)
}

type ManagedPolicyAttachmentArrayOutput struct{ *pulumi.OutputState }

func (ManagedPolicyAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedPolicyAttachment)(nil)).Elem()
}

func (o ManagedPolicyAttachmentArrayOutput) ToManagedPolicyAttachmentArrayOutput() ManagedPolicyAttachmentArrayOutput {
	return o
}

func (o ManagedPolicyAttachmentArrayOutput) ToManagedPolicyAttachmentArrayOutputWithContext(ctx context.Context) ManagedPolicyAttachmentArrayOutput {
	return o
}

func (o ManagedPolicyAttachmentArrayOutput) Index(i pulumi.IntInput) ManagedPolicyAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ManagedPolicyAttachment {
		return vs[0].([]*ManagedPolicyAttachment)[vs[1].(int)]
	}).(ManagedPolicyAttachmentOutput)
}

type ManagedPolicyAttachmentMapOutput struct{ *pulumi.OutputState }

func (ManagedPolicyAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedPolicyAttachment)(nil)).Elem()
}

func (o ManagedPolicyAttachmentMapOutput) ToManagedPolicyAttachmentMapOutput() ManagedPolicyAttachmentMapOutput {
	return o
}

func (o ManagedPolicyAttachmentMapOutput) ToManagedPolicyAttachmentMapOutputWithContext(ctx context.Context) ManagedPolicyAttachmentMapOutput {
	return o
}

func (o ManagedPolicyAttachmentMapOutput) MapIndex(k pulumi.StringInput) ManagedPolicyAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ManagedPolicyAttachment {
		return vs[0].(map[string]*ManagedPolicyAttachment)[vs[1].(string)]
	}).(ManagedPolicyAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedPolicyAttachmentInput)(nil)).Elem(), &ManagedPolicyAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedPolicyAttachmentArrayInput)(nil)).Elem(), ManagedPolicyAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedPolicyAttachmentMapInput)(nil)).Elem(), ManagedPolicyAttachmentMap{})
	pulumi.RegisterOutputType(ManagedPolicyAttachmentOutput{})
	pulumi.RegisterOutputType(ManagedPolicyAttachmentArrayOutput{})
	pulumi.RegisterOutputType(ManagedPolicyAttachmentMapOutput{})
}
