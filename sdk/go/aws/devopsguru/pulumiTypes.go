// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package devopsguru

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type EventSourcesConfigEventSource struct {
	// Stores whether DevOps Guru is configured to consume recommendations which are generated from AWS CodeGuru Profiler. See `amazonCodeGuruProfiler` below.
	AmazonCodeGuruProfilers []EventSourcesConfigEventSourceAmazonCodeGuruProfiler `pulumi:"amazonCodeGuruProfilers"`
}

// EventSourcesConfigEventSourceInput is an input type that accepts EventSourcesConfigEventSourceArgs and EventSourcesConfigEventSourceOutput values.
// You can construct a concrete instance of `EventSourcesConfigEventSourceInput` via:
//
//	EventSourcesConfigEventSourceArgs{...}
type EventSourcesConfigEventSourceInput interface {
	pulumi.Input

	ToEventSourcesConfigEventSourceOutput() EventSourcesConfigEventSourceOutput
	ToEventSourcesConfigEventSourceOutputWithContext(context.Context) EventSourcesConfigEventSourceOutput
}

type EventSourcesConfigEventSourceArgs struct {
	// Stores whether DevOps Guru is configured to consume recommendations which are generated from AWS CodeGuru Profiler. See `amazonCodeGuruProfiler` below.
	AmazonCodeGuruProfilers EventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayInput `pulumi:"amazonCodeGuruProfilers"`
}

func (EventSourcesConfigEventSourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourcesConfigEventSource)(nil)).Elem()
}

func (i EventSourcesConfigEventSourceArgs) ToEventSourcesConfigEventSourceOutput() EventSourcesConfigEventSourceOutput {
	return i.ToEventSourcesConfigEventSourceOutputWithContext(context.Background())
}

func (i EventSourcesConfigEventSourceArgs) ToEventSourcesConfigEventSourceOutputWithContext(ctx context.Context) EventSourcesConfigEventSourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourcesConfigEventSourceOutput)
}

// EventSourcesConfigEventSourceArrayInput is an input type that accepts EventSourcesConfigEventSourceArray and EventSourcesConfigEventSourceArrayOutput values.
// You can construct a concrete instance of `EventSourcesConfigEventSourceArrayInput` via:
//
//	EventSourcesConfigEventSourceArray{ EventSourcesConfigEventSourceArgs{...} }
type EventSourcesConfigEventSourceArrayInput interface {
	pulumi.Input

	ToEventSourcesConfigEventSourceArrayOutput() EventSourcesConfigEventSourceArrayOutput
	ToEventSourcesConfigEventSourceArrayOutputWithContext(context.Context) EventSourcesConfigEventSourceArrayOutput
}

type EventSourcesConfigEventSourceArray []EventSourcesConfigEventSourceInput

func (EventSourcesConfigEventSourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventSourcesConfigEventSource)(nil)).Elem()
}

func (i EventSourcesConfigEventSourceArray) ToEventSourcesConfigEventSourceArrayOutput() EventSourcesConfigEventSourceArrayOutput {
	return i.ToEventSourcesConfigEventSourceArrayOutputWithContext(context.Background())
}

func (i EventSourcesConfigEventSourceArray) ToEventSourcesConfigEventSourceArrayOutputWithContext(ctx context.Context) EventSourcesConfigEventSourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourcesConfigEventSourceArrayOutput)
}

type EventSourcesConfigEventSourceOutput struct{ *pulumi.OutputState }

func (EventSourcesConfigEventSourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourcesConfigEventSource)(nil)).Elem()
}

func (o EventSourcesConfigEventSourceOutput) ToEventSourcesConfigEventSourceOutput() EventSourcesConfigEventSourceOutput {
	return o
}

func (o EventSourcesConfigEventSourceOutput) ToEventSourcesConfigEventSourceOutputWithContext(ctx context.Context) EventSourcesConfigEventSourceOutput {
	return o
}

// Stores whether DevOps Guru is configured to consume recommendations which are generated from AWS CodeGuru Profiler. See `amazonCodeGuruProfiler` below.
func (o EventSourcesConfigEventSourceOutput) AmazonCodeGuruProfilers() EventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayOutput {
	return o.ApplyT(func(v EventSourcesConfigEventSource) []EventSourcesConfigEventSourceAmazonCodeGuruProfiler {
		return v.AmazonCodeGuruProfilers
	}).(EventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayOutput)
}

type EventSourcesConfigEventSourceArrayOutput struct{ *pulumi.OutputState }

func (EventSourcesConfigEventSourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventSourcesConfigEventSource)(nil)).Elem()
}

func (o EventSourcesConfigEventSourceArrayOutput) ToEventSourcesConfigEventSourceArrayOutput() EventSourcesConfigEventSourceArrayOutput {
	return o
}

func (o EventSourcesConfigEventSourceArrayOutput) ToEventSourcesConfigEventSourceArrayOutputWithContext(ctx context.Context) EventSourcesConfigEventSourceArrayOutput {
	return o
}

func (o EventSourcesConfigEventSourceArrayOutput) Index(i pulumi.IntInput) EventSourcesConfigEventSourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventSourcesConfigEventSource {
		return vs[0].([]EventSourcesConfigEventSource)[vs[1].(int)]
	}).(EventSourcesConfigEventSourceOutput)
}

type EventSourcesConfigEventSourceAmazonCodeGuruProfiler struct {
	// Status of the CodeGuru Profiler integration. Valid values are `ENABLED` and `DISABLED`.
	Status string `pulumi:"status"`
}

// EventSourcesConfigEventSourceAmazonCodeGuruProfilerInput is an input type that accepts EventSourcesConfigEventSourceAmazonCodeGuruProfilerArgs and EventSourcesConfigEventSourceAmazonCodeGuruProfilerOutput values.
// You can construct a concrete instance of `EventSourcesConfigEventSourceAmazonCodeGuruProfilerInput` via:
//
//	EventSourcesConfigEventSourceAmazonCodeGuruProfilerArgs{...}
type EventSourcesConfigEventSourceAmazonCodeGuruProfilerInput interface {
	pulumi.Input

	ToEventSourcesConfigEventSourceAmazonCodeGuruProfilerOutput() EventSourcesConfigEventSourceAmazonCodeGuruProfilerOutput
	ToEventSourcesConfigEventSourceAmazonCodeGuruProfilerOutputWithContext(context.Context) EventSourcesConfigEventSourceAmazonCodeGuruProfilerOutput
}

type EventSourcesConfigEventSourceAmazonCodeGuruProfilerArgs struct {
	// Status of the CodeGuru Profiler integration. Valid values are `ENABLED` and `DISABLED`.
	Status pulumi.StringInput `pulumi:"status"`
}

func (EventSourcesConfigEventSourceAmazonCodeGuruProfilerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourcesConfigEventSourceAmazonCodeGuruProfiler)(nil)).Elem()
}

func (i EventSourcesConfigEventSourceAmazonCodeGuruProfilerArgs) ToEventSourcesConfigEventSourceAmazonCodeGuruProfilerOutput() EventSourcesConfigEventSourceAmazonCodeGuruProfilerOutput {
	return i.ToEventSourcesConfigEventSourceAmazonCodeGuruProfilerOutputWithContext(context.Background())
}

func (i EventSourcesConfigEventSourceAmazonCodeGuruProfilerArgs) ToEventSourcesConfigEventSourceAmazonCodeGuruProfilerOutputWithContext(ctx context.Context) EventSourcesConfigEventSourceAmazonCodeGuruProfilerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourcesConfigEventSourceAmazonCodeGuruProfilerOutput)
}

// EventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayInput is an input type that accepts EventSourcesConfigEventSourceAmazonCodeGuruProfilerArray and EventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayOutput values.
// You can construct a concrete instance of `EventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayInput` via:
//
//	EventSourcesConfigEventSourceAmazonCodeGuruProfilerArray{ EventSourcesConfigEventSourceAmazonCodeGuruProfilerArgs{...} }
type EventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayInput interface {
	pulumi.Input

	ToEventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayOutput() EventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayOutput
	ToEventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayOutputWithContext(context.Context) EventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayOutput
}

type EventSourcesConfigEventSourceAmazonCodeGuruProfilerArray []EventSourcesConfigEventSourceAmazonCodeGuruProfilerInput

func (EventSourcesConfigEventSourceAmazonCodeGuruProfilerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventSourcesConfigEventSourceAmazonCodeGuruProfiler)(nil)).Elem()
}

func (i EventSourcesConfigEventSourceAmazonCodeGuruProfilerArray) ToEventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayOutput() EventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayOutput {
	return i.ToEventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayOutputWithContext(context.Background())
}

func (i EventSourcesConfigEventSourceAmazonCodeGuruProfilerArray) ToEventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayOutputWithContext(ctx context.Context) EventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayOutput)
}

type EventSourcesConfigEventSourceAmazonCodeGuruProfilerOutput struct{ *pulumi.OutputState }

func (EventSourcesConfigEventSourceAmazonCodeGuruProfilerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventSourcesConfigEventSourceAmazonCodeGuruProfiler)(nil)).Elem()
}

func (o EventSourcesConfigEventSourceAmazonCodeGuruProfilerOutput) ToEventSourcesConfigEventSourceAmazonCodeGuruProfilerOutput() EventSourcesConfigEventSourceAmazonCodeGuruProfilerOutput {
	return o
}

func (o EventSourcesConfigEventSourceAmazonCodeGuruProfilerOutput) ToEventSourcesConfigEventSourceAmazonCodeGuruProfilerOutputWithContext(ctx context.Context) EventSourcesConfigEventSourceAmazonCodeGuruProfilerOutput {
	return o
}

// Status of the CodeGuru Profiler integration. Valid values are `ENABLED` and `DISABLED`.
func (o EventSourcesConfigEventSourceAmazonCodeGuruProfilerOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v EventSourcesConfigEventSourceAmazonCodeGuruProfiler) string { return v.Status }).(pulumi.StringOutput)
}

type EventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayOutput struct{ *pulumi.OutputState }

func (EventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventSourcesConfigEventSourceAmazonCodeGuruProfiler)(nil)).Elem()
}

func (o EventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayOutput) ToEventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayOutput() EventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayOutput {
	return o
}

func (o EventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayOutput) ToEventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayOutputWithContext(ctx context.Context) EventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayOutput {
	return o
}

func (o EventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayOutput) Index(i pulumi.IntInput) EventSourcesConfigEventSourceAmazonCodeGuruProfilerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventSourcesConfigEventSourceAmazonCodeGuruProfiler {
		return vs[0].([]EventSourcesConfigEventSourceAmazonCodeGuruProfiler)[vs[1].(int)]
	}).(EventSourcesConfigEventSourceAmazonCodeGuruProfilerOutput)
}

type ResourceCollectionCloudformation struct {
	// Array of the names of the AWS CloudFormation stacks. If `type` is `AWS_SERVICE` (all acccount resources) this array should be a single item containing a wildcard (`"*"`).
	StackNames []string `pulumi:"stackNames"`
}

// ResourceCollectionCloudformationInput is an input type that accepts ResourceCollectionCloudformationArgs and ResourceCollectionCloudformationOutput values.
// You can construct a concrete instance of `ResourceCollectionCloudformationInput` via:
//
//	ResourceCollectionCloudformationArgs{...}
type ResourceCollectionCloudformationInput interface {
	pulumi.Input

	ToResourceCollectionCloudformationOutput() ResourceCollectionCloudformationOutput
	ToResourceCollectionCloudformationOutputWithContext(context.Context) ResourceCollectionCloudformationOutput
}

type ResourceCollectionCloudformationArgs struct {
	// Array of the names of the AWS CloudFormation stacks. If `type` is `AWS_SERVICE` (all acccount resources) this array should be a single item containing a wildcard (`"*"`).
	StackNames pulumi.StringArrayInput `pulumi:"stackNames"`
}

func (ResourceCollectionCloudformationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceCollectionCloudformation)(nil)).Elem()
}

func (i ResourceCollectionCloudformationArgs) ToResourceCollectionCloudformationOutput() ResourceCollectionCloudformationOutput {
	return i.ToResourceCollectionCloudformationOutputWithContext(context.Background())
}

func (i ResourceCollectionCloudformationArgs) ToResourceCollectionCloudformationOutputWithContext(ctx context.Context) ResourceCollectionCloudformationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceCollectionCloudformationOutput)
}

func (i ResourceCollectionCloudformationArgs) ToResourceCollectionCloudformationPtrOutput() ResourceCollectionCloudformationPtrOutput {
	return i.ToResourceCollectionCloudformationPtrOutputWithContext(context.Background())
}

func (i ResourceCollectionCloudformationArgs) ToResourceCollectionCloudformationPtrOutputWithContext(ctx context.Context) ResourceCollectionCloudformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceCollectionCloudformationOutput).ToResourceCollectionCloudformationPtrOutputWithContext(ctx)
}

// ResourceCollectionCloudformationPtrInput is an input type that accepts ResourceCollectionCloudformationArgs, ResourceCollectionCloudformationPtr and ResourceCollectionCloudformationPtrOutput values.
// You can construct a concrete instance of `ResourceCollectionCloudformationPtrInput` via:
//
//	        ResourceCollectionCloudformationArgs{...}
//
//	or:
//
//	        nil
type ResourceCollectionCloudformationPtrInput interface {
	pulumi.Input

	ToResourceCollectionCloudformationPtrOutput() ResourceCollectionCloudformationPtrOutput
	ToResourceCollectionCloudformationPtrOutputWithContext(context.Context) ResourceCollectionCloudformationPtrOutput
}

type resourceCollectionCloudformationPtrType ResourceCollectionCloudformationArgs

func ResourceCollectionCloudformationPtr(v *ResourceCollectionCloudformationArgs) ResourceCollectionCloudformationPtrInput {
	return (*resourceCollectionCloudformationPtrType)(v)
}

func (*resourceCollectionCloudformationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceCollectionCloudformation)(nil)).Elem()
}

func (i *resourceCollectionCloudformationPtrType) ToResourceCollectionCloudformationPtrOutput() ResourceCollectionCloudformationPtrOutput {
	return i.ToResourceCollectionCloudformationPtrOutputWithContext(context.Background())
}

func (i *resourceCollectionCloudformationPtrType) ToResourceCollectionCloudformationPtrOutputWithContext(ctx context.Context) ResourceCollectionCloudformationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceCollectionCloudformationPtrOutput)
}

type ResourceCollectionCloudformationOutput struct{ *pulumi.OutputState }

func (ResourceCollectionCloudformationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceCollectionCloudformation)(nil)).Elem()
}

func (o ResourceCollectionCloudformationOutput) ToResourceCollectionCloudformationOutput() ResourceCollectionCloudformationOutput {
	return o
}

func (o ResourceCollectionCloudformationOutput) ToResourceCollectionCloudformationOutputWithContext(ctx context.Context) ResourceCollectionCloudformationOutput {
	return o
}

func (o ResourceCollectionCloudformationOutput) ToResourceCollectionCloudformationPtrOutput() ResourceCollectionCloudformationPtrOutput {
	return o.ToResourceCollectionCloudformationPtrOutputWithContext(context.Background())
}

func (o ResourceCollectionCloudformationOutput) ToResourceCollectionCloudformationPtrOutputWithContext(ctx context.Context) ResourceCollectionCloudformationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceCollectionCloudformation) *ResourceCollectionCloudformation {
		return &v
	}).(ResourceCollectionCloudformationPtrOutput)
}

// Array of the names of the AWS CloudFormation stacks. If `type` is `AWS_SERVICE` (all acccount resources) this array should be a single item containing a wildcard (`"*"`).
func (o ResourceCollectionCloudformationOutput) StackNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceCollectionCloudformation) []string { return v.StackNames }).(pulumi.StringArrayOutput)
}

type ResourceCollectionCloudformationPtrOutput struct{ *pulumi.OutputState }

func (ResourceCollectionCloudformationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceCollectionCloudformation)(nil)).Elem()
}

func (o ResourceCollectionCloudformationPtrOutput) ToResourceCollectionCloudformationPtrOutput() ResourceCollectionCloudformationPtrOutput {
	return o
}

func (o ResourceCollectionCloudformationPtrOutput) ToResourceCollectionCloudformationPtrOutputWithContext(ctx context.Context) ResourceCollectionCloudformationPtrOutput {
	return o
}

func (o ResourceCollectionCloudformationPtrOutput) Elem() ResourceCollectionCloudformationOutput {
	return o.ApplyT(func(v *ResourceCollectionCloudformation) ResourceCollectionCloudformation {
		if v != nil {
			return *v
		}
		var ret ResourceCollectionCloudformation
		return ret
	}).(ResourceCollectionCloudformationOutput)
}

// Array of the names of the AWS CloudFormation stacks. If `type` is `AWS_SERVICE` (all acccount resources) this array should be a single item containing a wildcard (`"*"`).
func (o ResourceCollectionCloudformationPtrOutput) StackNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceCollectionCloudformation) []string {
		if v == nil {
			return nil
		}
		return v.StackNames
	}).(pulumi.StringArrayOutput)
}

type ResourceCollectionTags struct {
	// An AWS tag key that is used to identify the AWS resources that DevOps Guru analyzes. All AWS resources in your account and Region tagged with this key make up your DevOps Guru application and analysis boundary. The key must begin with the prefix `DevOps-Guru-`. Any casing can be used for the prefix, but the associated tags __must use the same casing__ in their tag key.
	AppBoundaryKey string `pulumi:"appBoundaryKey"`
	// Array of tag values. These can be used to further filter for specific resources within the application boundary. To analyze all resources tagged with the `appBoundaryKey` regardless of the corresponding tag value, this array should be a single item containing a wildcard (`"*"`).
	TagValues []string `pulumi:"tagValues"`
}

// ResourceCollectionTagsInput is an input type that accepts ResourceCollectionTagsArgs and ResourceCollectionTagsOutput values.
// You can construct a concrete instance of `ResourceCollectionTagsInput` via:
//
//	ResourceCollectionTagsArgs{...}
type ResourceCollectionTagsInput interface {
	pulumi.Input

	ToResourceCollectionTagsOutput() ResourceCollectionTagsOutput
	ToResourceCollectionTagsOutputWithContext(context.Context) ResourceCollectionTagsOutput
}

type ResourceCollectionTagsArgs struct {
	// An AWS tag key that is used to identify the AWS resources that DevOps Guru analyzes. All AWS resources in your account and Region tagged with this key make up your DevOps Guru application and analysis boundary. The key must begin with the prefix `DevOps-Guru-`. Any casing can be used for the prefix, but the associated tags __must use the same casing__ in their tag key.
	AppBoundaryKey pulumi.StringInput `pulumi:"appBoundaryKey"`
	// Array of tag values. These can be used to further filter for specific resources within the application boundary. To analyze all resources tagged with the `appBoundaryKey` regardless of the corresponding tag value, this array should be a single item containing a wildcard (`"*"`).
	TagValues pulumi.StringArrayInput `pulumi:"tagValues"`
}

func (ResourceCollectionTagsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceCollectionTags)(nil)).Elem()
}

func (i ResourceCollectionTagsArgs) ToResourceCollectionTagsOutput() ResourceCollectionTagsOutput {
	return i.ToResourceCollectionTagsOutputWithContext(context.Background())
}

func (i ResourceCollectionTagsArgs) ToResourceCollectionTagsOutputWithContext(ctx context.Context) ResourceCollectionTagsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceCollectionTagsOutput)
}

func (i ResourceCollectionTagsArgs) ToResourceCollectionTagsPtrOutput() ResourceCollectionTagsPtrOutput {
	return i.ToResourceCollectionTagsPtrOutputWithContext(context.Background())
}

func (i ResourceCollectionTagsArgs) ToResourceCollectionTagsPtrOutputWithContext(ctx context.Context) ResourceCollectionTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceCollectionTagsOutput).ToResourceCollectionTagsPtrOutputWithContext(ctx)
}

// ResourceCollectionTagsPtrInput is an input type that accepts ResourceCollectionTagsArgs, ResourceCollectionTagsPtr and ResourceCollectionTagsPtrOutput values.
// You can construct a concrete instance of `ResourceCollectionTagsPtrInput` via:
//
//	        ResourceCollectionTagsArgs{...}
//
//	or:
//
//	        nil
type ResourceCollectionTagsPtrInput interface {
	pulumi.Input

	ToResourceCollectionTagsPtrOutput() ResourceCollectionTagsPtrOutput
	ToResourceCollectionTagsPtrOutputWithContext(context.Context) ResourceCollectionTagsPtrOutput
}

type resourceCollectionTagsPtrType ResourceCollectionTagsArgs

func ResourceCollectionTagsPtr(v *ResourceCollectionTagsArgs) ResourceCollectionTagsPtrInput {
	return (*resourceCollectionTagsPtrType)(v)
}

func (*resourceCollectionTagsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceCollectionTags)(nil)).Elem()
}

func (i *resourceCollectionTagsPtrType) ToResourceCollectionTagsPtrOutput() ResourceCollectionTagsPtrOutput {
	return i.ToResourceCollectionTagsPtrOutputWithContext(context.Background())
}

func (i *resourceCollectionTagsPtrType) ToResourceCollectionTagsPtrOutputWithContext(ctx context.Context) ResourceCollectionTagsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceCollectionTagsPtrOutput)
}

type ResourceCollectionTagsOutput struct{ *pulumi.OutputState }

func (ResourceCollectionTagsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceCollectionTags)(nil)).Elem()
}

func (o ResourceCollectionTagsOutput) ToResourceCollectionTagsOutput() ResourceCollectionTagsOutput {
	return o
}

func (o ResourceCollectionTagsOutput) ToResourceCollectionTagsOutputWithContext(ctx context.Context) ResourceCollectionTagsOutput {
	return o
}

func (o ResourceCollectionTagsOutput) ToResourceCollectionTagsPtrOutput() ResourceCollectionTagsPtrOutput {
	return o.ToResourceCollectionTagsPtrOutputWithContext(context.Background())
}

func (o ResourceCollectionTagsOutput) ToResourceCollectionTagsPtrOutputWithContext(ctx context.Context) ResourceCollectionTagsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ResourceCollectionTags) *ResourceCollectionTags {
		return &v
	}).(ResourceCollectionTagsPtrOutput)
}

// An AWS tag key that is used to identify the AWS resources that DevOps Guru analyzes. All AWS resources in your account and Region tagged with this key make up your DevOps Guru application and analysis boundary. The key must begin with the prefix `DevOps-Guru-`. Any casing can be used for the prefix, but the associated tags __must use the same casing__ in their tag key.
func (o ResourceCollectionTagsOutput) AppBoundaryKey() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceCollectionTags) string { return v.AppBoundaryKey }).(pulumi.StringOutput)
}

// Array of tag values. These can be used to further filter for specific resources within the application boundary. To analyze all resources tagged with the `appBoundaryKey` regardless of the corresponding tag value, this array should be a single item containing a wildcard (`"*"`).
func (o ResourceCollectionTagsOutput) TagValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResourceCollectionTags) []string { return v.TagValues }).(pulumi.StringArrayOutput)
}

type ResourceCollectionTagsPtrOutput struct{ *pulumi.OutputState }

func (ResourceCollectionTagsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceCollectionTags)(nil)).Elem()
}

func (o ResourceCollectionTagsPtrOutput) ToResourceCollectionTagsPtrOutput() ResourceCollectionTagsPtrOutput {
	return o
}

func (o ResourceCollectionTagsPtrOutput) ToResourceCollectionTagsPtrOutputWithContext(ctx context.Context) ResourceCollectionTagsPtrOutput {
	return o
}

func (o ResourceCollectionTagsPtrOutput) Elem() ResourceCollectionTagsOutput {
	return o.ApplyT(func(v *ResourceCollectionTags) ResourceCollectionTags {
		if v != nil {
			return *v
		}
		var ret ResourceCollectionTags
		return ret
	}).(ResourceCollectionTagsOutput)
}

// An AWS tag key that is used to identify the AWS resources that DevOps Guru analyzes. All AWS resources in your account and Region tagged with this key make up your DevOps Guru application and analysis boundary. The key must begin with the prefix `DevOps-Guru-`. Any casing can be used for the prefix, but the associated tags __must use the same casing__ in their tag key.
func (o ResourceCollectionTagsPtrOutput) AppBoundaryKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceCollectionTags) *string {
		if v == nil {
			return nil
		}
		return &v.AppBoundaryKey
	}).(pulumi.StringPtrOutput)
}

// Array of tag values. These can be used to further filter for specific resources within the application boundary. To analyze all resources tagged with the `appBoundaryKey` regardless of the corresponding tag value, this array should be a single item containing a wildcard (`"*"`).
func (o ResourceCollectionTagsPtrOutput) TagValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResourceCollectionTags) []string {
		if v == nil {
			return nil
		}
		return v.TagValues
	}).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourcesConfigEventSourceInput)(nil)).Elem(), EventSourcesConfigEventSourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourcesConfigEventSourceArrayInput)(nil)).Elem(), EventSourcesConfigEventSourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourcesConfigEventSourceAmazonCodeGuruProfilerInput)(nil)).Elem(), EventSourcesConfigEventSourceAmazonCodeGuruProfilerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayInput)(nil)).Elem(), EventSourcesConfigEventSourceAmazonCodeGuruProfilerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceCollectionCloudformationInput)(nil)).Elem(), ResourceCollectionCloudformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceCollectionCloudformationPtrInput)(nil)).Elem(), ResourceCollectionCloudformationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceCollectionTagsInput)(nil)).Elem(), ResourceCollectionTagsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceCollectionTagsPtrInput)(nil)).Elem(), ResourceCollectionTagsArgs{})
	pulumi.RegisterOutputType(EventSourcesConfigEventSourceOutput{})
	pulumi.RegisterOutputType(EventSourcesConfigEventSourceArrayOutput{})
	pulumi.RegisterOutputType(EventSourcesConfigEventSourceAmazonCodeGuruProfilerOutput{})
	pulumi.RegisterOutputType(EventSourcesConfigEventSourceAmazonCodeGuruProfilerArrayOutput{})
	pulumi.RegisterOutputType(ResourceCollectionCloudformationOutput{})
	pulumi.RegisterOutputType(ResourceCollectionCloudformationPtrOutput{})
	pulumi.RegisterOutputType(ResourceCollectionTagsOutput{})
	pulumi.RegisterOutputType(ResourceCollectionTagsPtrOutput{})
}
