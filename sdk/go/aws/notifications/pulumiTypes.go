// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package notifications

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type NotificationHubTimeouts struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create *string `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete *string `pulumi:"delete"`
}

// NotificationHubTimeoutsInput is an input type that accepts NotificationHubTimeoutsArgs and NotificationHubTimeoutsOutput values.
// You can construct a concrete instance of `NotificationHubTimeoutsInput` via:
//
//	NotificationHubTimeoutsArgs{...}
type NotificationHubTimeoutsInput interface {
	pulumi.Input

	ToNotificationHubTimeoutsOutput() NotificationHubTimeoutsOutput
	ToNotificationHubTimeoutsOutputWithContext(context.Context) NotificationHubTimeoutsOutput
}

type NotificationHubTimeoutsArgs struct {
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
	Create pulumi.StringPtrInput `pulumi:"create"`
	// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
	Delete pulumi.StringPtrInput `pulumi:"delete"`
}

func (NotificationHubTimeoutsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationHubTimeouts)(nil)).Elem()
}

func (i NotificationHubTimeoutsArgs) ToNotificationHubTimeoutsOutput() NotificationHubTimeoutsOutput {
	return i.ToNotificationHubTimeoutsOutputWithContext(context.Background())
}

func (i NotificationHubTimeoutsArgs) ToNotificationHubTimeoutsOutputWithContext(ctx context.Context) NotificationHubTimeoutsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationHubTimeoutsOutput)
}

func (i NotificationHubTimeoutsArgs) ToNotificationHubTimeoutsPtrOutput() NotificationHubTimeoutsPtrOutput {
	return i.ToNotificationHubTimeoutsPtrOutputWithContext(context.Background())
}

func (i NotificationHubTimeoutsArgs) ToNotificationHubTimeoutsPtrOutputWithContext(ctx context.Context) NotificationHubTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationHubTimeoutsOutput).ToNotificationHubTimeoutsPtrOutputWithContext(ctx)
}

// NotificationHubTimeoutsPtrInput is an input type that accepts NotificationHubTimeoutsArgs, NotificationHubTimeoutsPtr and NotificationHubTimeoutsPtrOutput values.
// You can construct a concrete instance of `NotificationHubTimeoutsPtrInput` via:
//
//	        NotificationHubTimeoutsArgs{...}
//
//	or:
//
//	        nil
type NotificationHubTimeoutsPtrInput interface {
	pulumi.Input

	ToNotificationHubTimeoutsPtrOutput() NotificationHubTimeoutsPtrOutput
	ToNotificationHubTimeoutsPtrOutputWithContext(context.Context) NotificationHubTimeoutsPtrOutput
}

type notificationHubTimeoutsPtrType NotificationHubTimeoutsArgs

func NotificationHubTimeoutsPtr(v *NotificationHubTimeoutsArgs) NotificationHubTimeoutsPtrInput {
	return (*notificationHubTimeoutsPtrType)(v)
}

func (*notificationHubTimeoutsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationHubTimeouts)(nil)).Elem()
}

func (i *notificationHubTimeoutsPtrType) ToNotificationHubTimeoutsPtrOutput() NotificationHubTimeoutsPtrOutput {
	return i.ToNotificationHubTimeoutsPtrOutputWithContext(context.Background())
}

func (i *notificationHubTimeoutsPtrType) ToNotificationHubTimeoutsPtrOutputWithContext(ctx context.Context) NotificationHubTimeoutsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(NotificationHubTimeoutsPtrOutput)
}

type NotificationHubTimeoutsOutput struct{ *pulumi.OutputState }

func (NotificationHubTimeoutsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*NotificationHubTimeouts)(nil)).Elem()
}

func (o NotificationHubTimeoutsOutput) ToNotificationHubTimeoutsOutput() NotificationHubTimeoutsOutput {
	return o
}

func (o NotificationHubTimeoutsOutput) ToNotificationHubTimeoutsOutputWithContext(ctx context.Context) NotificationHubTimeoutsOutput {
	return o
}

func (o NotificationHubTimeoutsOutput) ToNotificationHubTimeoutsPtrOutput() NotificationHubTimeoutsPtrOutput {
	return o.ToNotificationHubTimeoutsPtrOutputWithContext(context.Background())
}

func (o NotificationHubTimeoutsOutput) ToNotificationHubTimeoutsPtrOutputWithContext(ctx context.Context) NotificationHubTimeoutsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v NotificationHubTimeouts) *NotificationHubTimeouts {
		return &v
	}).(NotificationHubTimeoutsPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o NotificationHubTimeoutsOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationHubTimeouts) *string { return v.Create }).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o NotificationHubTimeoutsOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v NotificationHubTimeouts) *string { return v.Delete }).(pulumi.StringPtrOutput)
}

type NotificationHubTimeoutsPtrOutput struct{ *pulumi.OutputState }

func (NotificationHubTimeoutsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**NotificationHubTimeouts)(nil)).Elem()
}

func (o NotificationHubTimeoutsPtrOutput) ToNotificationHubTimeoutsPtrOutput() NotificationHubTimeoutsPtrOutput {
	return o
}

func (o NotificationHubTimeoutsPtrOutput) ToNotificationHubTimeoutsPtrOutputWithContext(ctx context.Context) NotificationHubTimeoutsPtrOutput {
	return o
}

func (o NotificationHubTimeoutsPtrOutput) Elem() NotificationHubTimeoutsOutput {
	return o.ApplyT(func(v *NotificationHubTimeouts) NotificationHubTimeouts {
		if v != nil {
			return *v
		}
		var ret NotificationHubTimeouts
		return ret
	}).(NotificationHubTimeoutsOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours).
func (o NotificationHubTimeoutsPtrOutput) Create() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationHubTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Create
	}).(pulumi.StringPtrOutput)
}

// A string that can be [parsed as a duration](https://pkg.go.dev/time#ParseDuration) consisting of numbers and unit suffixes, such as "30s" or "2h45m". Valid time units are "s" (seconds), "m" (minutes), "h" (hours). Setting a timeout for a Delete operation is only applicable if changes are saved into state before the destroy operation occurs.
func (o NotificationHubTimeoutsPtrOutput) Delete() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *NotificationHubTimeouts) *string {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationHubTimeoutsInput)(nil)).Elem(), NotificationHubTimeoutsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*NotificationHubTimeoutsPtrInput)(nil)).Elem(), NotificationHubTimeoutsArgs{})
	pulumi.RegisterOutputType(NotificationHubTimeoutsOutput{})
	pulumi.RegisterOutputType(NotificationHubTimeoutsPtrOutput{})
}
