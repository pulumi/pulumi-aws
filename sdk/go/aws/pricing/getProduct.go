// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package pricing

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get the pricing information of all products in AWS.
// This data source is only available in a us-east-1 or ap-south-1 provider.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/pricing"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := pricing.GetProduct(ctx, &pricing.GetProductArgs{
// 			Filters: []pricing.GetProductFilter{
// 				pricing.GetProductFilter{
// 					Field: "instanceType",
// 					Value: "c5.xlarge",
// 				},
// 				pricing.GetProductFilter{
// 					Field: "operatingSystem",
// 					Value: "Linux",
// 				},
// 				pricing.GetProductFilter{
// 					Field: "location",
// 					Value: "US East (N. Virginia)",
// 				},
// 				pricing.GetProductFilter{
// 					Field: "preInstalledSw",
// 					Value: "NA",
// 				},
// 				pricing.GetProductFilter{
// 					Field: "licenseModel",
// 					Value: "No License required",
// 				},
// 				pricing.GetProductFilter{
// 					Field: "tenancy",
// 					Value: "Shared",
// 				},
// 				pricing.GetProductFilter{
// 					Field: "capacitystatus",
// 					Value: "Used",
// 				},
// 			},
// 			ServiceCode: "AmazonEC2",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/pricing"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := pricing.GetProduct(ctx, &pricing.GetProductArgs{
// 			Filters: []pricing.GetProductFilter{
// 				pricing.GetProductFilter{
// 					Field: "instanceType",
// 					Value: "ds1.xlarge",
// 				},
// 				pricing.GetProductFilter{
// 					Field: "location",
// 					Value: "US East (N. Virginia)",
// 				},
// 			},
// 			ServiceCode: "AmazonRedshift",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetProduct(ctx *pulumi.Context, args *GetProductArgs, opts ...pulumi.InvokeOption) (*GetProductResult, error) {
	var rv GetProductResult
	err := ctx.Invoke("aws:pricing/getProduct:getProduct", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProduct.
type GetProductArgs struct {
	// A list of filters. Passed directly to the API (see GetProducts API reference). These filters must describe a single product, this resource will fail if more than one product is returned by the API.
	Filters []GetProductFilter `pulumi:"filters"`
	// The code of the service. Available service codes can be fetched using the DescribeServices pricing API call.
	ServiceCode string `pulumi:"serviceCode"`
}

// A collection of values returned by getProduct.
type GetProductResult struct {
	Filters []GetProductFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Set to the product returned from the API.
	Result      string `pulumi:"result"`
	ServiceCode string `pulumi:"serviceCode"`
}

func GetProductOutput(ctx *pulumi.Context, args GetProductOutputArgs, opts ...pulumi.InvokeOption) GetProductResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetProductResult, error) {
			args := v.(GetProductArgs)
			r, err := GetProduct(ctx, &args, opts...)
			return *r, err
		}).(GetProductResultOutput)
}

// A collection of arguments for invoking getProduct.
type GetProductOutputArgs struct {
	// A list of filters. Passed directly to the API (see GetProducts API reference). These filters must describe a single product, this resource will fail if more than one product is returned by the API.
	Filters GetProductFilterArrayInput `pulumi:"filters"`
	// The code of the service. Available service codes can be fetched using the DescribeServices pricing API call.
	ServiceCode pulumi.StringInput `pulumi:"serviceCode"`
}

func (GetProductOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductArgs)(nil)).Elem()
}

// A collection of values returned by getProduct.
type GetProductResultOutput struct{ *pulumi.OutputState }

func (GetProductResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductResult)(nil)).Elem()
}

func (o GetProductResultOutput) ToGetProductResultOutput() GetProductResultOutput {
	return o
}

func (o GetProductResultOutput) ToGetProductResultOutputWithContext(ctx context.Context) GetProductResultOutput {
	return o
}

func (o GetProductResultOutput) Filters() GetProductFilterArrayOutput {
	return o.ApplyT(func(v GetProductResult) []GetProductFilter { return v.Filters }).(GetProductFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetProductResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductResult) string { return v.Id }).(pulumi.StringOutput)
}

// Set to the product returned from the API.
func (o GetProductResultOutput) Result() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductResult) string { return v.Result }).(pulumi.StringOutput)
}

func (o GetProductResultOutput) ServiceCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductResult) string { return v.ServiceCode }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetProductResultOutput{})
}
