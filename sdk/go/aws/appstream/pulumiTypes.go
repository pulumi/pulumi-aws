// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appstream

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type StackAccessEndpoint struct {
	EndpointType string  `pulumi:"endpointType"`
	VpceId       *string `pulumi:"vpceId"`
}

// StackAccessEndpointInput is an input type that accepts StackAccessEndpointArgs and StackAccessEndpointOutput values.
// You can construct a concrete instance of `StackAccessEndpointInput` via:
//
//          StackAccessEndpointArgs{...}
type StackAccessEndpointInput interface {
	pulumi.Input

	ToStackAccessEndpointOutput() StackAccessEndpointOutput
	ToStackAccessEndpointOutputWithContext(context.Context) StackAccessEndpointOutput
}

type StackAccessEndpointArgs struct {
	EndpointType pulumi.StringInput    `pulumi:"endpointType"`
	VpceId       pulumi.StringPtrInput `pulumi:"vpceId"`
}

func (StackAccessEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackAccessEndpoint)(nil)).Elem()
}

func (i StackAccessEndpointArgs) ToStackAccessEndpointOutput() StackAccessEndpointOutput {
	return i.ToStackAccessEndpointOutputWithContext(context.Background())
}

func (i StackAccessEndpointArgs) ToStackAccessEndpointOutputWithContext(ctx context.Context) StackAccessEndpointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackAccessEndpointOutput)
}

// StackAccessEndpointArrayInput is an input type that accepts StackAccessEndpointArray and StackAccessEndpointArrayOutput values.
// You can construct a concrete instance of `StackAccessEndpointArrayInput` via:
//
//          StackAccessEndpointArray{ StackAccessEndpointArgs{...} }
type StackAccessEndpointArrayInput interface {
	pulumi.Input

	ToStackAccessEndpointArrayOutput() StackAccessEndpointArrayOutput
	ToStackAccessEndpointArrayOutputWithContext(context.Context) StackAccessEndpointArrayOutput
}

type StackAccessEndpointArray []StackAccessEndpointInput

func (StackAccessEndpointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackAccessEndpoint)(nil)).Elem()
}

func (i StackAccessEndpointArray) ToStackAccessEndpointArrayOutput() StackAccessEndpointArrayOutput {
	return i.ToStackAccessEndpointArrayOutputWithContext(context.Background())
}

func (i StackAccessEndpointArray) ToStackAccessEndpointArrayOutputWithContext(ctx context.Context) StackAccessEndpointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackAccessEndpointArrayOutput)
}

type StackAccessEndpointOutput struct{ *pulumi.OutputState }

func (StackAccessEndpointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackAccessEndpoint)(nil)).Elem()
}

func (o StackAccessEndpointOutput) ToStackAccessEndpointOutput() StackAccessEndpointOutput {
	return o
}

func (o StackAccessEndpointOutput) ToStackAccessEndpointOutputWithContext(ctx context.Context) StackAccessEndpointOutput {
	return o
}

func (o StackAccessEndpointOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v StackAccessEndpoint) string { return v.EndpointType }).(pulumi.StringOutput)
}

func (o StackAccessEndpointOutput) VpceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackAccessEndpoint) *string { return v.VpceId }).(pulumi.StringPtrOutput)
}

type StackAccessEndpointArrayOutput struct{ *pulumi.OutputState }

func (StackAccessEndpointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackAccessEndpoint)(nil)).Elem()
}

func (o StackAccessEndpointArrayOutput) ToStackAccessEndpointArrayOutput() StackAccessEndpointArrayOutput {
	return o
}

func (o StackAccessEndpointArrayOutput) ToStackAccessEndpointArrayOutputWithContext(ctx context.Context) StackAccessEndpointArrayOutput {
	return o
}

func (o StackAccessEndpointArrayOutput) Index(i pulumi.IntInput) StackAccessEndpointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StackAccessEndpoint {
		return vs[0].([]StackAccessEndpoint)[vs[1].(int)]
	}).(StackAccessEndpointOutput)
}

type StackApplicationSettings struct {
	Enabled       *bool   `pulumi:"enabled"`
	SettingsGroup *string `pulumi:"settingsGroup"`
}

// StackApplicationSettingsInput is an input type that accepts StackApplicationSettingsArgs and StackApplicationSettingsOutput values.
// You can construct a concrete instance of `StackApplicationSettingsInput` via:
//
//          StackApplicationSettingsArgs{...}
type StackApplicationSettingsInput interface {
	pulumi.Input

	ToStackApplicationSettingsOutput() StackApplicationSettingsOutput
	ToStackApplicationSettingsOutputWithContext(context.Context) StackApplicationSettingsOutput
}

type StackApplicationSettingsArgs struct {
	Enabled       pulumi.BoolPtrInput   `pulumi:"enabled"`
	SettingsGroup pulumi.StringPtrInput `pulumi:"settingsGroup"`
}

func (StackApplicationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackApplicationSettings)(nil)).Elem()
}

func (i StackApplicationSettingsArgs) ToStackApplicationSettingsOutput() StackApplicationSettingsOutput {
	return i.ToStackApplicationSettingsOutputWithContext(context.Background())
}

func (i StackApplicationSettingsArgs) ToStackApplicationSettingsOutputWithContext(ctx context.Context) StackApplicationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackApplicationSettingsOutput)
}

func (i StackApplicationSettingsArgs) ToStackApplicationSettingsPtrOutput() StackApplicationSettingsPtrOutput {
	return i.ToStackApplicationSettingsPtrOutputWithContext(context.Background())
}

func (i StackApplicationSettingsArgs) ToStackApplicationSettingsPtrOutputWithContext(ctx context.Context) StackApplicationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackApplicationSettingsOutput).ToStackApplicationSettingsPtrOutputWithContext(ctx)
}

// StackApplicationSettingsPtrInput is an input type that accepts StackApplicationSettingsArgs, StackApplicationSettingsPtr and StackApplicationSettingsPtrOutput values.
// You can construct a concrete instance of `StackApplicationSettingsPtrInput` via:
//
//          StackApplicationSettingsArgs{...}
//
//  or:
//
//          nil
type StackApplicationSettingsPtrInput interface {
	pulumi.Input

	ToStackApplicationSettingsPtrOutput() StackApplicationSettingsPtrOutput
	ToStackApplicationSettingsPtrOutputWithContext(context.Context) StackApplicationSettingsPtrOutput
}

type stackApplicationSettingsPtrType StackApplicationSettingsArgs

func StackApplicationSettingsPtr(v *StackApplicationSettingsArgs) StackApplicationSettingsPtrInput {
	return (*stackApplicationSettingsPtrType)(v)
}

func (*stackApplicationSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StackApplicationSettings)(nil)).Elem()
}

func (i *stackApplicationSettingsPtrType) ToStackApplicationSettingsPtrOutput() StackApplicationSettingsPtrOutput {
	return i.ToStackApplicationSettingsPtrOutputWithContext(context.Background())
}

func (i *stackApplicationSettingsPtrType) ToStackApplicationSettingsPtrOutputWithContext(ctx context.Context) StackApplicationSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackApplicationSettingsPtrOutput)
}

type StackApplicationSettingsOutput struct{ *pulumi.OutputState }

func (StackApplicationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackApplicationSettings)(nil)).Elem()
}

func (o StackApplicationSettingsOutput) ToStackApplicationSettingsOutput() StackApplicationSettingsOutput {
	return o
}

func (o StackApplicationSettingsOutput) ToStackApplicationSettingsOutputWithContext(ctx context.Context) StackApplicationSettingsOutput {
	return o
}

func (o StackApplicationSettingsOutput) ToStackApplicationSettingsPtrOutput() StackApplicationSettingsPtrOutput {
	return o.ToStackApplicationSettingsPtrOutputWithContext(context.Background())
}

func (o StackApplicationSettingsOutput) ToStackApplicationSettingsPtrOutputWithContext(ctx context.Context) StackApplicationSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v StackApplicationSettings) *StackApplicationSettings {
		return &v
	}).(StackApplicationSettingsPtrOutput)
}

func (o StackApplicationSettingsOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StackApplicationSettings) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

func (o StackApplicationSettingsOutput) SettingsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackApplicationSettings) *string { return v.SettingsGroup }).(pulumi.StringPtrOutput)
}

type StackApplicationSettingsPtrOutput struct{ *pulumi.OutputState }

func (StackApplicationSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StackApplicationSettings)(nil)).Elem()
}

func (o StackApplicationSettingsPtrOutput) ToStackApplicationSettingsPtrOutput() StackApplicationSettingsPtrOutput {
	return o
}

func (o StackApplicationSettingsPtrOutput) ToStackApplicationSettingsPtrOutputWithContext(ctx context.Context) StackApplicationSettingsPtrOutput {
	return o
}

func (o StackApplicationSettingsPtrOutput) Elem() StackApplicationSettingsOutput {
	return o.ApplyT(func(v *StackApplicationSettings) StackApplicationSettings {
		if v != nil {
			return *v
		}
		var ret StackApplicationSettings
		return ret
	}).(StackApplicationSettingsOutput)
}

func (o StackApplicationSettingsPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StackApplicationSettings) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

func (o StackApplicationSettingsPtrOutput) SettingsGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StackApplicationSettings) *string {
		if v == nil {
			return nil
		}
		return v.SettingsGroup
	}).(pulumi.StringPtrOutput)
}

type StackStorageConnector struct {
	// Type of storage connector. Valid values are: `HOMEFOLDERS`, `GOOGLE_DRIVE`, `ONE_DRIVE`.
	ConnectorType string `pulumi:"connectorType"`
	// Names of the domains for the account.
	Domains []string `pulumi:"domains"`
	// ARN of the storage connector.
	ResourceIdentifier *string `pulumi:"resourceIdentifier"`
}

// StackStorageConnectorInput is an input type that accepts StackStorageConnectorArgs and StackStorageConnectorOutput values.
// You can construct a concrete instance of `StackStorageConnectorInput` via:
//
//          StackStorageConnectorArgs{...}
type StackStorageConnectorInput interface {
	pulumi.Input

	ToStackStorageConnectorOutput() StackStorageConnectorOutput
	ToStackStorageConnectorOutputWithContext(context.Context) StackStorageConnectorOutput
}

type StackStorageConnectorArgs struct {
	// Type of storage connector. Valid values are: `HOMEFOLDERS`, `GOOGLE_DRIVE`, `ONE_DRIVE`.
	ConnectorType pulumi.StringInput `pulumi:"connectorType"`
	// Names of the domains for the account.
	Domains pulumi.StringArrayInput `pulumi:"domains"`
	// ARN of the storage connector.
	ResourceIdentifier pulumi.StringPtrInput `pulumi:"resourceIdentifier"`
}

func (StackStorageConnectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackStorageConnector)(nil)).Elem()
}

func (i StackStorageConnectorArgs) ToStackStorageConnectorOutput() StackStorageConnectorOutput {
	return i.ToStackStorageConnectorOutputWithContext(context.Background())
}

func (i StackStorageConnectorArgs) ToStackStorageConnectorOutputWithContext(ctx context.Context) StackStorageConnectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackStorageConnectorOutput)
}

// StackStorageConnectorArrayInput is an input type that accepts StackStorageConnectorArray and StackStorageConnectorArrayOutput values.
// You can construct a concrete instance of `StackStorageConnectorArrayInput` via:
//
//          StackStorageConnectorArray{ StackStorageConnectorArgs{...} }
type StackStorageConnectorArrayInput interface {
	pulumi.Input

	ToStackStorageConnectorArrayOutput() StackStorageConnectorArrayOutput
	ToStackStorageConnectorArrayOutputWithContext(context.Context) StackStorageConnectorArrayOutput
}

type StackStorageConnectorArray []StackStorageConnectorInput

func (StackStorageConnectorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackStorageConnector)(nil)).Elem()
}

func (i StackStorageConnectorArray) ToStackStorageConnectorArrayOutput() StackStorageConnectorArrayOutput {
	return i.ToStackStorageConnectorArrayOutputWithContext(context.Background())
}

func (i StackStorageConnectorArray) ToStackStorageConnectorArrayOutputWithContext(ctx context.Context) StackStorageConnectorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackStorageConnectorArrayOutput)
}

type StackStorageConnectorOutput struct{ *pulumi.OutputState }

func (StackStorageConnectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackStorageConnector)(nil)).Elem()
}

func (o StackStorageConnectorOutput) ToStackStorageConnectorOutput() StackStorageConnectorOutput {
	return o
}

func (o StackStorageConnectorOutput) ToStackStorageConnectorOutputWithContext(ctx context.Context) StackStorageConnectorOutput {
	return o
}

// Type of storage connector. Valid values are: `HOMEFOLDERS`, `GOOGLE_DRIVE`, `ONE_DRIVE`.
func (o StackStorageConnectorOutput) ConnectorType() pulumi.StringOutput {
	return o.ApplyT(func(v StackStorageConnector) string { return v.ConnectorType }).(pulumi.StringOutput)
}

// Names of the domains for the account.
func (o StackStorageConnectorOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v StackStorageConnector) []string { return v.Domains }).(pulumi.StringArrayOutput)
}

// ARN of the storage connector.
func (o StackStorageConnectorOutput) ResourceIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StackStorageConnector) *string { return v.ResourceIdentifier }).(pulumi.StringPtrOutput)
}

type StackStorageConnectorArrayOutput struct{ *pulumi.OutputState }

func (StackStorageConnectorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackStorageConnector)(nil)).Elem()
}

func (o StackStorageConnectorArrayOutput) ToStackStorageConnectorArrayOutput() StackStorageConnectorArrayOutput {
	return o
}

func (o StackStorageConnectorArrayOutput) ToStackStorageConnectorArrayOutputWithContext(ctx context.Context) StackStorageConnectorArrayOutput {
	return o
}

func (o StackStorageConnectorArrayOutput) Index(i pulumi.IntInput) StackStorageConnectorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StackStorageConnector {
		return vs[0].([]StackStorageConnector)[vs[1].(int)]
	}).(StackStorageConnectorOutput)
}

type StackUserSetting struct {
	// Action that is enabled or disabled. Valid values are: `CLIPBOARD_COPY_FROM_LOCAL_DEVICE`,  `CLIPBOARD_COPY_TO_LOCAL_DEVICE`, `FILE_UPLOAD`, `FILE_DOWNLOAD`, `PRINTING_TO_LOCAL_DEVICE`, `DOMAIN_PASSWORD_SIGNIN`, `DOMAIN_SMART_CARD_SIGNIN`.
	Action string `pulumi:"action"`
	// Indicates whether the action is enabled or disabled. Valid values are: `ENABLED`, `DISABLED`.
	Permission string `pulumi:"permission"`
}

// StackUserSettingInput is an input type that accepts StackUserSettingArgs and StackUserSettingOutput values.
// You can construct a concrete instance of `StackUserSettingInput` via:
//
//          StackUserSettingArgs{...}
type StackUserSettingInput interface {
	pulumi.Input

	ToStackUserSettingOutput() StackUserSettingOutput
	ToStackUserSettingOutputWithContext(context.Context) StackUserSettingOutput
}

type StackUserSettingArgs struct {
	// Action that is enabled or disabled. Valid values are: `CLIPBOARD_COPY_FROM_LOCAL_DEVICE`,  `CLIPBOARD_COPY_TO_LOCAL_DEVICE`, `FILE_UPLOAD`, `FILE_DOWNLOAD`, `PRINTING_TO_LOCAL_DEVICE`, `DOMAIN_PASSWORD_SIGNIN`, `DOMAIN_SMART_CARD_SIGNIN`.
	Action pulumi.StringInput `pulumi:"action"`
	// Indicates whether the action is enabled or disabled. Valid values are: `ENABLED`, `DISABLED`.
	Permission pulumi.StringInput `pulumi:"permission"`
}

func (StackUserSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StackUserSetting)(nil)).Elem()
}

func (i StackUserSettingArgs) ToStackUserSettingOutput() StackUserSettingOutput {
	return i.ToStackUserSettingOutputWithContext(context.Background())
}

func (i StackUserSettingArgs) ToStackUserSettingOutputWithContext(ctx context.Context) StackUserSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackUserSettingOutput)
}

// StackUserSettingArrayInput is an input type that accepts StackUserSettingArray and StackUserSettingArrayOutput values.
// You can construct a concrete instance of `StackUserSettingArrayInput` via:
//
//          StackUserSettingArray{ StackUserSettingArgs{...} }
type StackUserSettingArrayInput interface {
	pulumi.Input

	ToStackUserSettingArrayOutput() StackUserSettingArrayOutput
	ToStackUserSettingArrayOutputWithContext(context.Context) StackUserSettingArrayOutput
}

type StackUserSettingArray []StackUserSettingInput

func (StackUserSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackUserSetting)(nil)).Elem()
}

func (i StackUserSettingArray) ToStackUserSettingArrayOutput() StackUserSettingArrayOutput {
	return i.ToStackUserSettingArrayOutputWithContext(context.Background())
}

func (i StackUserSettingArray) ToStackUserSettingArrayOutputWithContext(ctx context.Context) StackUserSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StackUserSettingArrayOutput)
}

type StackUserSettingOutput struct{ *pulumi.OutputState }

func (StackUserSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StackUserSetting)(nil)).Elem()
}

func (o StackUserSettingOutput) ToStackUserSettingOutput() StackUserSettingOutput {
	return o
}

func (o StackUserSettingOutput) ToStackUserSettingOutputWithContext(ctx context.Context) StackUserSettingOutput {
	return o
}

// Action that is enabled or disabled. Valid values are: `CLIPBOARD_COPY_FROM_LOCAL_DEVICE`,  `CLIPBOARD_COPY_TO_LOCAL_DEVICE`, `FILE_UPLOAD`, `FILE_DOWNLOAD`, `PRINTING_TO_LOCAL_DEVICE`, `DOMAIN_PASSWORD_SIGNIN`, `DOMAIN_SMART_CARD_SIGNIN`.
func (o StackUserSettingOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v StackUserSetting) string { return v.Action }).(pulumi.StringOutput)
}

// Indicates whether the action is enabled or disabled. Valid values are: `ENABLED`, `DISABLED`.
func (o StackUserSettingOutput) Permission() pulumi.StringOutput {
	return o.ApplyT(func(v StackUserSetting) string { return v.Permission }).(pulumi.StringOutput)
}

type StackUserSettingArrayOutput struct{ *pulumi.OutputState }

func (StackUserSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StackUserSetting)(nil)).Elem()
}

func (o StackUserSettingArrayOutput) ToStackUserSettingArrayOutput() StackUserSettingArrayOutput {
	return o
}

func (o StackUserSettingArrayOutput) ToStackUserSettingArrayOutputWithContext(ctx context.Context) StackUserSettingArrayOutput {
	return o
}

func (o StackUserSettingArrayOutput) Index(i pulumi.IntInput) StackUserSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StackUserSetting {
		return vs[0].([]StackUserSetting)[vs[1].(int)]
	}).(StackUserSettingOutput)
}

func init() {
	pulumi.RegisterOutputType(StackAccessEndpointOutput{})
	pulumi.RegisterOutputType(StackAccessEndpointArrayOutput{})
	pulumi.RegisterOutputType(StackApplicationSettingsOutput{})
	pulumi.RegisterOutputType(StackApplicationSettingsPtrOutput{})
	pulumi.RegisterOutputType(StackStorageConnectorOutput{})
	pulumi.RegisterOutputType(StackStorageConnectorArrayOutput{})
	pulumi.RegisterOutputType(StackUserSettingOutput{})
	pulumi.RegisterOutputType(StackUserSettingArrayOutput{})
}
