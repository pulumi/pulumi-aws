// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appstream

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Fleet struct {
	pulumi.CustomResourceState

	Arn                            pulumi.StringOutput        `pulumi:"arn"`
	ComputeCapacity                FleetComputeCapacityOutput `pulumi:"computeCapacity"`
	CreatedTime                    pulumi.StringOutput        `pulumi:"createdTime"`
	Description                    pulumi.StringOutput        `pulumi:"description"`
	DisconnectTimeoutInSeconds     pulumi.IntOutput           `pulumi:"disconnectTimeoutInSeconds"`
	DisplayName                    pulumi.StringOutput        `pulumi:"displayName"`
	DomainJoinInfo                 FleetDomainJoinInfoOutput  `pulumi:"domainJoinInfo"`
	EnableDefaultInternetAccess    pulumi.BoolOutput          `pulumi:"enableDefaultInternetAccess"`
	FleetType                      pulumi.StringOutput        `pulumi:"fleetType"`
	IamRoleArn                     pulumi.StringOutput        `pulumi:"iamRoleArn"`
	IdleDisconnectTimeoutInSeconds pulumi.IntPtrOutput        `pulumi:"idleDisconnectTimeoutInSeconds"`
	ImageArn                       pulumi.StringOutput        `pulumi:"imageArn"`
	ImageName                      pulumi.StringOutput        `pulumi:"imageName"`
	InstanceType                   pulumi.StringOutput        `pulumi:"instanceType"`
	MaxUserDurationInSeconds       pulumi.IntOutput           `pulumi:"maxUserDurationInSeconds"`
	Name                           pulumi.StringOutput        `pulumi:"name"`
	State                          pulumi.StringOutput        `pulumi:"state"`
	StreamView                     pulumi.StringOutput        `pulumi:"streamView"`
	Tags                           pulumi.StringMapOutput     `pulumi:"tags"`
	TagsAll                        pulumi.StringMapOutput     `pulumi:"tagsAll"`
	VpcConfig                      FleetVpcConfigOutput       `pulumi:"vpcConfig"`
}

// NewFleet registers a new resource with the given unique name, arguments, and options.
func NewFleet(ctx *pulumi.Context,
	name string, args *FleetArgs, opts ...pulumi.ResourceOption) (*Fleet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ComputeCapacity == nil {
		return nil, errors.New("invalid value for required argument 'ComputeCapacity'")
	}
	if args.InstanceType == nil {
		return nil, errors.New("invalid value for required argument 'InstanceType'")
	}
	var resource Fleet
	err := ctx.RegisterResource("aws:appstream/fleet:Fleet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFleet gets an existing Fleet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFleet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FleetState, opts ...pulumi.ResourceOption) (*Fleet, error) {
	var resource Fleet
	err := ctx.ReadResource("aws:appstream/fleet:Fleet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Fleet resources.
type fleetState struct {
	Arn                            *string               `pulumi:"arn"`
	ComputeCapacity                *FleetComputeCapacity `pulumi:"computeCapacity"`
	CreatedTime                    *string               `pulumi:"createdTime"`
	Description                    *string               `pulumi:"description"`
	DisconnectTimeoutInSeconds     *int                  `pulumi:"disconnectTimeoutInSeconds"`
	DisplayName                    *string               `pulumi:"displayName"`
	DomainJoinInfo                 *FleetDomainJoinInfo  `pulumi:"domainJoinInfo"`
	EnableDefaultInternetAccess    *bool                 `pulumi:"enableDefaultInternetAccess"`
	FleetType                      *string               `pulumi:"fleetType"`
	IamRoleArn                     *string               `pulumi:"iamRoleArn"`
	IdleDisconnectTimeoutInSeconds *int                  `pulumi:"idleDisconnectTimeoutInSeconds"`
	ImageArn                       *string               `pulumi:"imageArn"`
	ImageName                      *string               `pulumi:"imageName"`
	InstanceType                   *string               `pulumi:"instanceType"`
	MaxUserDurationInSeconds       *int                  `pulumi:"maxUserDurationInSeconds"`
	Name                           *string               `pulumi:"name"`
	State                          *string               `pulumi:"state"`
	StreamView                     *string               `pulumi:"streamView"`
	Tags                           map[string]string     `pulumi:"tags"`
	TagsAll                        map[string]string     `pulumi:"tagsAll"`
	VpcConfig                      *FleetVpcConfig       `pulumi:"vpcConfig"`
}

type FleetState struct {
	Arn                            pulumi.StringPtrInput
	ComputeCapacity                FleetComputeCapacityPtrInput
	CreatedTime                    pulumi.StringPtrInput
	Description                    pulumi.StringPtrInput
	DisconnectTimeoutInSeconds     pulumi.IntPtrInput
	DisplayName                    pulumi.StringPtrInput
	DomainJoinInfo                 FleetDomainJoinInfoPtrInput
	EnableDefaultInternetAccess    pulumi.BoolPtrInput
	FleetType                      pulumi.StringPtrInput
	IamRoleArn                     pulumi.StringPtrInput
	IdleDisconnectTimeoutInSeconds pulumi.IntPtrInput
	ImageArn                       pulumi.StringPtrInput
	ImageName                      pulumi.StringPtrInput
	InstanceType                   pulumi.StringPtrInput
	MaxUserDurationInSeconds       pulumi.IntPtrInput
	Name                           pulumi.StringPtrInput
	State                          pulumi.StringPtrInput
	StreamView                     pulumi.StringPtrInput
	Tags                           pulumi.StringMapInput
	TagsAll                        pulumi.StringMapInput
	VpcConfig                      FleetVpcConfigPtrInput
}

func (FleetState) ElementType() reflect.Type {
	return reflect.TypeOf((*fleetState)(nil)).Elem()
}

type fleetArgs struct {
	ComputeCapacity                FleetComputeCapacity `pulumi:"computeCapacity"`
	Description                    *string              `pulumi:"description"`
	DisconnectTimeoutInSeconds     *int                 `pulumi:"disconnectTimeoutInSeconds"`
	DisplayName                    *string              `pulumi:"displayName"`
	DomainJoinInfo                 *FleetDomainJoinInfo `pulumi:"domainJoinInfo"`
	EnableDefaultInternetAccess    *bool                `pulumi:"enableDefaultInternetAccess"`
	FleetType                      *string              `pulumi:"fleetType"`
	IamRoleArn                     *string              `pulumi:"iamRoleArn"`
	IdleDisconnectTimeoutInSeconds *int                 `pulumi:"idleDisconnectTimeoutInSeconds"`
	ImageArn                       *string              `pulumi:"imageArn"`
	ImageName                      *string              `pulumi:"imageName"`
	InstanceType                   string               `pulumi:"instanceType"`
	MaxUserDurationInSeconds       *int                 `pulumi:"maxUserDurationInSeconds"`
	Name                           *string              `pulumi:"name"`
	StreamView                     *string              `pulumi:"streamView"`
	Tags                           map[string]string    `pulumi:"tags"`
	VpcConfig                      *FleetVpcConfig      `pulumi:"vpcConfig"`
}

// The set of arguments for constructing a Fleet resource.
type FleetArgs struct {
	ComputeCapacity                FleetComputeCapacityInput
	Description                    pulumi.StringPtrInput
	DisconnectTimeoutInSeconds     pulumi.IntPtrInput
	DisplayName                    pulumi.StringPtrInput
	DomainJoinInfo                 FleetDomainJoinInfoPtrInput
	EnableDefaultInternetAccess    pulumi.BoolPtrInput
	FleetType                      pulumi.StringPtrInput
	IamRoleArn                     pulumi.StringPtrInput
	IdleDisconnectTimeoutInSeconds pulumi.IntPtrInput
	ImageArn                       pulumi.StringPtrInput
	ImageName                      pulumi.StringPtrInput
	InstanceType                   pulumi.StringInput
	MaxUserDurationInSeconds       pulumi.IntPtrInput
	Name                           pulumi.StringPtrInput
	StreamView                     pulumi.StringPtrInput
	Tags                           pulumi.StringMapInput
	VpcConfig                      FleetVpcConfigPtrInput
}

func (FleetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fleetArgs)(nil)).Elem()
}

type FleetInput interface {
	pulumi.Input

	ToFleetOutput() FleetOutput
	ToFleetOutputWithContext(ctx context.Context) FleetOutput
}

func (*Fleet) ElementType() reflect.Type {
	return reflect.TypeOf((**Fleet)(nil)).Elem()
}

func (i *Fleet) ToFleetOutput() FleetOutput {
	return i.ToFleetOutputWithContext(context.Background())
}

func (i *Fleet) ToFleetOutputWithContext(ctx context.Context) FleetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetOutput)
}

// FleetArrayInput is an input type that accepts FleetArray and FleetArrayOutput values.
// You can construct a concrete instance of `FleetArrayInput` via:
//
//	FleetArray{ FleetArgs{...} }
type FleetArrayInput interface {
	pulumi.Input

	ToFleetArrayOutput() FleetArrayOutput
	ToFleetArrayOutputWithContext(context.Context) FleetArrayOutput
}

type FleetArray []FleetInput

func (FleetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Fleet)(nil)).Elem()
}

func (i FleetArray) ToFleetArrayOutput() FleetArrayOutput {
	return i.ToFleetArrayOutputWithContext(context.Background())
}

func (i FleetArray) ToFleetArrayOutputWithContext(ctx context.Context) FleetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetArrayOutput)
}

// FleetMapInput is an input type that accepts FleetMap and FleetMapOutput values.
// You can construct a concrete instance of `FleetMapInput` via:
//
//	FleetMap{ "key": FleetArgs{...} }
type FleetMapInput interface {
	pulumi.Input

	ToFleetMapOutput() FleetMapOutput
	ToFleetMapOutputWithContext(context.Context) FleetMapOutput
}

type FleetMap map[string]FleetInput

func (FleetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Fleet)(nil)).Elem()
}

func (i FleetMap) ToFleetMapOutput() FleetMapOutput {
	return i.ToFleetMapOutputWithContext(context.Background())
}

func (i FleetMap) ToFleetMapOutputWithContext(ctx context.Context) FleetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FleetMapOutput)
}

type FleetOutput struct{ *pulumi.OutputState }

func (FleetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Fleet)(nil)).Elem()
}

func (o FleetOutput) ToFleetOutput() FleetOutput {
	return o
}

func (o FleetOutput) ToFleetOutputWithContext(ctx context.Context) FleetOutput {
	return o
}

func (o FleetOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Fleet) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o FleetOutput) ComputeCapacity() FleetComputeCapacityOutput {
	return o.ApplyT(func(v *Fleet) FleetComputeCapacityOutput { return v.ComputeCapacity }).(FleetComputeCapacityOutput)
}

func (o FleetOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *Fleet) pulumi.StringOutput { return v.CreatedTime }).(pulumi.StringOutput)
}

func (o FleetOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *Fleet) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o FleetOutput) DisconnectTimeoutInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v *Fleet) pulumi.IntOutput { return v.DisconnectTimeoutInSeconds }).(pulumi.IntOutput)
}

func (o FleetOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *Fleet) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

func (o FleetOutput) DomainJoinInfo() FleetDomainJoinInfoOutput {
	return o.ApplyT(func(v *Fleet) FleetDomainJoinInfoOutput { return v.DomainJoinInfo }).(FleetDomainJoinInfoOutput)
}

func (o FleetOutput) EnableDefaultInternetAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v *Fleet) pulumi.BoolOutput { return v.EnableDefaultInternetAccess }).(pulumi.BoolOutput)
}

func (o FleetOutput) FleetType() pulumi.StringOutput {
	return o.ApplyT(func(v *Fleet) pulumi.StringOutput { return v.FleetType }).(pulumi.StringOutput)
}

func (o FleetOutput) IamRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Fleet) pulumi.StringOutput { return v.IamRoleArn }).(pulumi.StringOutput)
}

func (o FleetOutput) IdleDisconnectTimeoutInSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Fleet) pulumi.IntPtrOutput { return v.IdleDisconnectTimeoutInSeconds }).(pulumi.IntPtrOutput)
}

func (o FleetOutput) ImageArn() pulumi.StringOutput {
	return o.ApplyT(func(v *Fleet) pulumi.StringOutput { return v.ImageArn }).(pulumi.StringOutput)
}

func (o FleetOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v *Fleet) pulumi.StringOutput { return v.ImageName }).(pulumi.StringOutput)
}

func (o FleetOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v *Fleet) pulumi.StringOutput { return v.InstanceType }).(pulumi.StringOutput)
}

func (o FleetOutput) MaxUserDurationInSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v *Fleet) pulumi.IntOutput { return v.MaxUserDurationInSeconds }).(pulumi.IntOutput)
}

func (o FleetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Fleet) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FleetOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *Fleet) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

func (o FleetOutput) StreamView() pulumi.StringOutput {
	return o.ApplyT(func(v *Fleet) pulumi.StringOutput { return v.StreamView }).(pulumi.StringOutput)
}

func (o FleetOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Fleet) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o FleetOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Fleet) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o FleetOutput) VpcConfig() FleetVpcConfigOutput {
	return o.ApplyT(func(v *Fleet) FleetVpcConfigOutput { return v.VpcConfig }).(FleetVpcConfigOutput)
}

type FleetArrayOutput struct{ *pulumi.OutputState }

func (FleetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Fleet)(nil)).Elem()
}

func (o FleetArrayOutput) ToFleetArrayOutput() FleetArrayOutput {
	return o
}

func (o FleetArrayOutput) ToFleetArrayOutputWithContext(ctx context.Context) FleetArrayOutput {
	return o
}

func (o FleetArrayOutput) Index(i pulumi.IntInput) FleetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Fleet {
		return vs[0].([]*Fleet)[vs[1].(int)]
	}).(FleetOutput)
}

type FleetMapOutput struct{ *pulumi.OutputState }

func (FleetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Fleet)(nil)).Elem()
}

func (o FleetMapOutput) ToFleetMapOutput() FleetMapOutput {
	return o
}

func (o FleetMapOutput) ToFleetMapOutputWithContext(ctx context.Context) FleetMapOutput {
	return o
}

func (o FleetMapOutput) MapIndex(k pulumi.StringInput) FleetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Fleet {
		return vs[0].(map[string]*Fleet)[vs[1].(string)]
	}).(FleetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FleetInput)(nil)).Elem(), &Fleet{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetArrayInput)(nil)).Elem(), FleetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FleetMapInput)(nil)).Elem(), FleetMap{})
	pulumi.RegisterOutputType(FleetOutput{})
	pulumi.RegisterOutputType(FleetArrayOutput{})
	pulumi.RegisterOutputType(FleetMapOutput{})
}
