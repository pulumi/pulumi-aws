// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package appstream

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ImageBuilder struct {
	pulumi.CustomResourceState

	AccessEndpoints             ImageBuilderAccessEndpointArrayOutput `pulumi:"accessEndpoints"`
	AppstreamAgentVersion       pulumi.StringOutput                   `pulumi:"appstreamAgentVersion"`
	Arn                         pulumi.StringOutput                   `pulumi:"arn"`
	CreatedTime                 pulumi.StringOutput                   `pulumi:"createdTime"`
	Description                 pulumi.StringOutput                   `pulumi:"description"`
	DisplayName                 pulumi.StringOutput                   `pulumi:"displayName"`
	DomainJoinInfo              ImageBuilderDomainJoinInfoOutput      `pulumi:"domainJoinInfo"`
	EnableDefaultInternetAccess pulumi.BoolOutput                     `pulumi:"enableDefaultInternetAccess"`
	IamRoleArn                  pulumi.StringOutput                   `pulumi:"iamRoleArn"`
	ImageArn                    pulumi.StringOutput                   `pulumi:"imageArn"`
	ImageName                   pulumi.StringOutput                   `pulumi:"imageName"`
	InstanceType                pulumi.StringOutput                   `pulumi:"instanceType"`
	Name                        pulumi.StringOutput                   `pulumi:"name"`
	State                       pulumi.StringOutput                   `pulumi:"state"`
	Tags                        pulumi.StringMapOutput                `pulumi:"tags"`
	TagsAll                     pulumi.StringMapOutput                `pulumi:"tagsAll"`
	VpcConfig                   ImageBuilderVpcConfigOutput           `pulumi:"vpcConfig"`
}

// NewImageBuilder registers a new resource with the given unique name, arguments, and options.
func NewImageBuilder(ctx *pulumi.Context,
	name string, args *ImageBuilderArgs, opts ...pulumi.ResourceOption) (*ImageBuilder, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceType == nil {
		return nil, errors.New("invalid value for required argument 'InstanceType'")
	}
	var resource ImageBuilder
	err := ctx.RegisterResource("aws:appstream/imageBuilder:ImageBuilder", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetImageBuilder gets an existing ImageBuilder resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetImageBuilder(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ImageBuilderState, opts ...pulumi.ResourceOption) (*ImageBuilder, error) {
	var resource ImageBuilder
	err := ctx.ReadResource("aws:appstream/imageBuilder:ImageBuilder", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ImageBuilder resources.
type imageBuilderState struct {
	AccessEndpoints             []ImageBuilderAccessEndpoint `pulumi:"accessEndpoints"`
	AppstreamAgentVersion       *string                      `pulumi:"appstreamAgentVersion"`
	Arn                         *string                      `pulumi:"arn"`
	CreatedTime                 *string                      `pulumi:"createdTime"`
	Description                 *string                      `pulumi:"description"`
	DisplayName                 *string                      `pulumi:"displayName"`
	DomainJoinInfo              *ImageBuilderDomainJoinInfo  `pulumi:"domainJoinInfo"`
	EnableDefaultInternetAccess *bool                        `pulumi:"enableDefaultInternetAccess"`
	IamRoleArn                  *string                      `pulumi:"iamRoleArn"`
	ImageArn                    *string                      `pulumi:"imageArn"`
	ImageName                   *string                      `pulumi:"imageName"`
	InstanceType                *string                      `pulumi:"instanceType"`
	Name                        *string                      `pulumi:"name"`
	State                       *string                      `pulumi:"state"`
	Tags                        map[string]string            `pulumi:"tags"`
	TagsAll                     map[string]string            `pulumi:"tagsAll"`
	VpcConfig                   *ImageBuilderVpcConfig       `pulumi:"vpcConfig"`
}

type ImageBuilderState struct {
	AccessEndpoints             ImageBuilderAccessEndpointArrayInput
	AppstreamAgentVersion       pulumi.StringPtrInput
	Arn                         pulumi.StringPtrInput
	CreatedTime                 pulumi.StringPtrInput
	Description                 pulumi.StringPtrInput
	DisplayName                 pulumi.StringPtrInput
	DomainJoinInfo              ImageBuilderDomainJoinInfoPtrInput
	EnableDefaultInternetAccess pulumi.BoolPtrInput
	IamRoleArn                  pulumi.StringPtrInput
	ImageArn                    pulumi.StringPtrInput
	ImageName                   pulumi.StringPtrInput
	InstanceType                pulumi.StringPtrInput
	Name                        pulumi.StringPtrInput
	State                       pulumi.StringPtrInput
	Tags                        pulumi.StringMapInput
	TagsAll                     pulumi.StringMapInput
	VpcConfig                   ImageBuilderVpcConfigPtrInput
}

func (ImageBuilderState) ElementType() reflect.Type {
	return reflect.TypeOf((*imageBuilderState)(nil)).Elem()
}

type imageBuilderArgs struct {
	AccessEndpoints             []ImageBuilderAccessEndpoint `pulumi:"accessEndpoints"`
	AppstreamAgentVersion       *string                      `pulumi:"appstreamAgentVersion"`
	Description                 *string                      `pulumi:"description"`
	DisplayName                 *string                      `pulumi:"displayName"`
	DomainJoinInfo              *ImageBuilderDomainJoinInfo  `pulumi:"domainJoinInfo"`
	EnableDefaultInternetAccess *bool                        `pulumi:"enableDefaultInternetAccess"`
	IamRoleArn                  *string                      `pulumi:"iamRoleArn"`
	ImageArn                    *string                      `pulumi:"imageArn"`
	ImageName                   *string                      `pulumi:"imageName"`
	InstanceType                string                       `pulumi:"instanceType"`
	Name                        *string                      `pulumi:"name"`
	Tags                        map[string]string            `pulumi:"tags"`
	VpcConfig                   *ImageBuilderVpcConfig       `pulumi:"vpcConfig"`
}

// The set of arguments for constructing a ImageBuilder resource.
type ImageBuilderArgs struct {
	AccessEndpoints             ImageBuilderAccessEndpointArrayInput
	AppstreamAgentVersion       pulumi.StringPtrInput
	Description                 pulumi.StringPtrInput
	DisplayName                 pulumi.StringPtrInput
	DomainJoinInfo              ImageBuilderDomainJoinInfoPtrInput
	EnableDefaultInternetAccess pulumi.BoolPtrInput
	IamRoleArn                  pulumi.StringPtrInput
	ImageArn                    pulumi.StringPtrInput
	ImageName                   pulumi.StringPtrInput
	InstanceType                pulumi.StringInput
	Name                        pulumi.StringPtrInput
	Tags                        pulumi.StringMapInput
	VpcConfig                   ImageBuilderVpcConfigPtrInput
}

func (ImageBuilderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*imageBuilderArgs)(nil)).Elem()
}

type ImageBuilderInput interface {
	pulumi.Input

	ToImageBuilderOutput() ImageBuilderOutput
	ToImageBuilderOutputWithContext(ctx context.Context) ImageBuilderOutput
}

func (*ImageBuilder) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageBuilder)(nil)).Elem()
}

func (i *ImageBuilder) ToImageBuilderOutput() ImageBuilderOutput {
	return i.ToImageBuilderOutputWithContext(context.Background())
}

func (i *ImageBuilder) ToImageBuilderOutputWithContext(ctx context.Context) ImageBuilderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBuilderOutput)
}

// ImageBuilderArrayInput is an input type that accepts ImageBuilderArray and ImageBuilderArrayOutput values.
// You can construct a concrete instance of `ImageBuilderArrayInput` via:
//
//	ImageBuilderArray{ ImageBuilderArgs{...} }
type ImageBuilderArrayInput interface {
	pulumi.Input

	ToImageBuilderArrayOutput() ImageBuilderArrayOutput
	ToImageBuilderArrayOutputWithContext(context.Context) ImageBuilderArrayOutput
}

type ImageBuilderArray []ImageBuilderInput

func (ImageBuilderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ImageBuilder)(nil)).Elem()
}

func (i ImageBuilderArray) ToImageBuilderArrayOutput() ImageBuilderArrayOutput {
	return i.ToImageBuilderArrayOutputWithContext(context.Background())
}

func (i ImageBuilderArray) ToImageBuilderArrayOutputWithContext(ctx context.Context) ImageBuilderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBuilderArrayOutput)
}

// ImageBuilderMapInput is an input type that accepts ImageBuilderMap and ImageBuilderMapOutput values.
// You can construct a concrete instance of `ImageBuilderMapInput` via:
//
//	ImageBuilderMap{ "key": ImageBuilderArgs{...} }
type ImageBuilderMapInput interface {
	pulumi.Input

	ToImageBuilderMapOutput() ImageBuilderMapOutput
	ToImageBuilderMapOutputWithContext(context.Context) ImageBuilderMapOutput
}

type ImageBuilderMap map[string]ImageBuilderInput

func (ImageBuilderMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ImageBuilder)(nil)).Elem()
}

func (i ImageBuilderMap) ToImageBuilderMapOutput() ImageBuilderMapOutput {
	return i.ToImageBuilderMapOutputWithContext(context.Background())
}

func (i ImageBuilderMap) ToImageBuilderMapOutputWithContext(ctx context.Context) ImageBuilderMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ImageBuilderMapOutput)
}

type ImageBuilderOutput struct{ *pulumi.OutputState }

func (ImageBuilderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ImageBuilder)(nil)).Elem()
}

func (o ImageBuilderOutput) ToImageBuilderOutput() ImageBuilderOutput {
	return o
}

func (o ImageBuilderOutput) ToImageBuilderOutputWithContext(ctx context.Context) ImageBuilderOutput {
	return o
}

func (o ImageBuilderOutput) AccessEndpoints() ImageBuilderAccessEndpointArrayOutput {
	return o.ApplyT(func(v *ImageBuilder) ImageBuilderAccessEndpointArrayOutput { return v.AccessEndpoints }).(ImageBuilderAccessEndpointArrayOutput)
}

func (o ImageBuilderOutput) AppstreamAgentVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ImageBuilder) pulumi.StringOutput { return v.AppstreamAgentVersion }).(pulumi.StringOutput)
}

func (o ImageBuilderOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *ImageBuilder) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

func (o ImageBuilderOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v *ImageBuilder) pulumi.StringOutput { return v.CreatedTime }).(pulumi.StringOutput)
}

func (o ImageBuilderOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v *ImageBuilder) pulumi.StringOutput { return v.Description }).(pulumi.StringOutput)
}

func (o ImageBuilderOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v *ImageBuilder) pulumi.StringOutput { return v.DisplayName }).(pulumi.StringOutput)
}

func (o ImageBuilderOutput) DomainJoinInfo() ImageBuilderDomainJoinInfoOutput {
	return o.ApplyT(func(v *ImageBuilder) ImageBuilderDomainJoinInfoOutput { return v.DomainJoinInfo }).(ImageBuilderDomainJoinInfoOutput)
}

func (o ImageBuilderOutput) EnableDefaultInternetAccess() pulumi.BoolOutput {
	return o.ApplyT(func(v *ImageBuilder) pulumi.BoolOutput { return v.EnableDefaultInternetAccess }).(pulumi.BoolOutput)
}

func (o ImageBuilderOutput) IamRoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ImageBuilder) pulumi.StringOutput { return v.IamRoleArn }).(pulumi.StringOutput)
}

func (o ImageBuilderOutput) ImageArn() pulumi.StringOutput {
	return o.ApplyT(func(v *ImageBuilder) pulumi.StringOutput { return v.ImageArn }).(pulumi.StringOutput)
}

func (o ImageBuilderOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v *ImageBuilder) pulumi.StringOutput { return v.ImageName }).(pulumi.StringOutput)
}

func (o ImageBuilderOutput) InstanceType() pulumi.StringOutput {
	return o.ApplyT(func(v *ImageBuilder) pulumi.StringOutput { return v.InstanceType }).(pulumi.StringOutput)
}

func (o ImageBuilderOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ImageBuilder) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o ImageBuilderOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v *ImageBuilder) pulumi.StringOutput { return v.State }).(pulumi.StringOutput)
}

func (o ImageBuilderOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ImageBuilder) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

func (o ImageBuilderOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ImageBuilder) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

func (o ImageBuilderOutput) VpcConfig() ImageBuilderVpcConfigOutput {
	return o.ApplyT(func(v *ImageBuilder) ImageBuilderVpcConfigOutput { return v.VpcConfig }).(ImageBuilderVpcConfigOutput)
}

type ImageBuilderArrayOutput struct{ *pulumi.OutputState }

func (ImageBuilderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ImageBuilder)(nil)).Elem()
}

func (o ImageBuilderArrayOutput) ToImageBuilderArrayOutput() ImageBuilderArrayOutput {
	return o
}

func (o ImageBuilderArrayOutput) ToImageBuilderArrayOutputWithContext(ctx context.Context) ImageBuilderArrayOutput {
	return o
}

func (o ImageBuilderArrayOutput) Index(i pulumi.IntInput) ImageBuilderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ImageBuilder {
		return vs[0].([]*ImageBuilder)[vs[1].(int)]
	}).(ImageBuilderOutput)
}

type ImageBuilderMapOutput struct{ *pulumi.OutputState }

func (ImageBuilderMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ImageBuilder)(nil)).Elem()
}

func (o ImageBuilderMapOutput) ToImageBuilderMapOutput() ImageBuilderMapOutput {
	return o
}

func (o ImageBuilderMapOutput) ToImageBuilderMapOutputWithContext(ctx context.Context) ImageBuilderMapOutput {
	return o
}

func (o ImageBuilderMapOutput) MapIndex(k pulumi.StringInput) ImageBuilderOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ImageBuilder {
		return vs[0].(map[string]*ImageBuilder)[vs[1].(string)]
	}).(ImageBuilderOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ImageBuilderInput)(nil)).Elem(), &ImageBuilder{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageBuilderArrayInput)(nil)).Elem(), ImageBuilderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ImageBuilderMapInput)(nil)).Elem(), ImageBuilderMap{})
	pulumi.RegisterOutputType(ImageBuilderOutput{})
	pulumi.RegisterOutputType(ImageBuilderArrayOutput{})
	pulumi.RegisterOutputType(ImageBuilderMapOutput{})
}
