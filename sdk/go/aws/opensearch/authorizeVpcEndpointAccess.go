// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opensearch

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Resource for managing an AWS OpenSearch Authorize Vpc Endpoint Access.
//
// ## Example Usage
//
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws"
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/opensearch"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			current, err := aws.GetCallerIdentity(ctx, &aws.GetCallerIdentityArgs{}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = opensearch.NewAuthorizeVpcEndpointAccess(ctx, "test", &opensearch.AuthorizeVpcEndpointAccessArgs{
//				DomainName: pulumi.Any(testAwsOpensearchDomain.DomainName),
//				Account:    pulumi.String(current.AccountId),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Using `pulumi import`, import OpenSearch Authorize Vpc Endpoint Access using the `example_id_arg`. For example:
//
// ```sh
// $ pulumi import aws:opensearch/authorizeVpcEndpointAccess:AuthorizeVpcEndpointAccess example authorize_vpc_endpoint_access-id-12345678
// ```
type AuthorizeVpcEndpointAccess struct {
	pulumi.CustomResourceState

	// AWS account ID to grant access to.
	Account pulumi.StringOutput `pulumi:"account"`
	// Information about the Amazon Web Services account or service that was provided access to the domain. See authorized principal attribute for further details.
	AuthorizedPrincipals AuthorizeVpcEndpointAccessAuthorizedPrincipalArrayOutput `pulumi:"authorizedPrincipals"`
	// Name of OpenSearch Service domain to provide access to.
	DomainName pulumi.StringOutput `pulumi:"domainName"`
}

// NewAuthorizeVpcEndpointAccess registers a new resource with the given unique name, arguments, and options.
func NewAuthorizeVpcEndpointAccess(ctx *pulumi.Context,
	name string, args *AuthorizeVpcEndpointAccessArgs, opts ...pulumi.ResourceOption) (*AuthorizeVpcEndpointAccess, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Account == nil {
		return nil, errors.New("invalid value for required argument 'Account'")
	}
	if args.DomainName == nil {
		return nil, errors.New("invalid value for required argument 'DomainName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AuthorizeVpcEndpointAccess
	err := ctx.RegisterResource("aws:opensearch/authorizeVpcEndpointAccess:AuthorizeVpcEndpointAccess", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAuthorizeVpcEndpointAccess gets an existing AuthorizeVpcEndpointAccess resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAuthorizeVpcEndpointAccess(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AuthorizeVpcEndpointAccessState, opts ...pulumi.ResourceOption) (*AuthorizeVpcEndpointAccess, error) {
	var resource AuthorizeVpcEndpointAccess
	err := ctx.ReadResource("aws:opensearch/authorizeVpcEndpointAccess:AuthorizeVpcEndpointAccess", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AuthorizeVpcEndpointAccess resources.
type authorizeVpcEndpointAccessState struct {
	// AWS account ID to grant access to.
	Account *string `pulumi:"account"`
	// Information about the Amazon Web Services account or service that was provided access to the domain. See authorized principal attribute for further details.
	AuthorizedPrincipals []AuthorizeVpcEndpointAccessAuthorizedPrincipal `pulumi:"authorizedPrincipals"`
	// Name of OpenSearch Service domain to provide access to.
	DomainName *string `pulumi:"domainName"`
}

type AuthorizeVpcEndpointAccessState struct {
	// AWS account ID to grant access to.
	Account pulumi.StringPtrInput
	// Information about the Amazon Web Services account or service that was provided access to the domain. See authorized principal attribute for further details.
	AuthorizedPrincipals AuthorizeVpcEndpointAccessAuthorizedPrincipalArrayInput
	// Name of OpenSearch Service domain to provide access to.
	DomainName pulumi.StringPtrInput
}

func (AuthorizeVpcEndpointAccessState) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizeVpcEndpointAccessState)(nil)).Elem()
}

type authorizeVpcEndpointAccessArgs struct {
	// AWS account ID to grant access to.
	Account string `pulumi:"account"`
	// Name of OpenSearch Service domain to provide access to.
	DomainName string `pulumi:"domainName"`
}

// The set of arguments for constructing a AuthorizeVpcEndpointAccess resource.
type AuthorizeVpcEndpointAccessArgs struct {
	// AWS account ID to grant access to.
	Account pulumi.StringInput
	// Name of OpenSearch Service domain to provide access to.
	DomainName pulumi.StringInput
}

func (AuthorizeVpcEndpointAccessArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*authorizeVpcEndpointAccessArgs)(nil)).Elem()
}

type AuthorizeVpcEndpointAccessInput interface {
	pulumi.Input

	ToAuthorizeVpcEndpointAccessOutput() AuthorizeVpcEndpointAccessOutput
	ToAuthorizeVpcEndpointAccessOutputWithContext(ctx context.Context) AuthorizeVpcEndpointAccessOutput
}

func (*AuthorizeVpcEndpointAccess) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizeVpcEndpointAccess)(nil)).Elem()
}

func (i *AuthorizeVpcEndpointAccess) ToAuthorizeVpcEndpointAccessOutput() AuthorizeVpcEndpointAccessOutput {
	return i.ToAuthorizeVpcEndpointAccessOutputWithContext(context.Background())
}

func (i *AuthorizeVpcEndpointAccess) ToAuthorizeVpcEndpointAccessOutputWithContext(ctx context.Context) AuthorizeVpcEndpointAccessOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizeVpcEndpointAccessOutput)
}

// AuthorizeVpcEndpointAccessArrayInput is an input type that accepts AuthorizeVpcEndpointAccessArray and AuthorizeVpcEndpointAccessArrayOutput values.
// You can construct a concrete instance of `AuthorizeVpcEndpointAccessArrayInput` via:
//
//	AuthorizeVpcEndpointAccessArray{ AuthorizeVpcEndpointAccessArgs{...} }
type AuthorizeVpcEndpointAccessArrayInput interface {
	pulumi.Input

	ToAuthorizeVpcEndpointAccessArrayOutput() AuthorizeVpcEndpointAccessArrayOutput
	ToAuthorizeVpcEndpointAccessArrayOutputWithContext(context.Context) AuthorizeVpcEndpointAccessArrayOutput
}

type AuthorizeVpcEndpointAccessArray []AuthorizeVpcEndpointAccessInput

func (AuthorizeVpcEndpointAccessArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AuthorizeVpcEndpointAccess)(nil)).Elem()
}

func (i AuthorizeVpcEndpointAccessArray) ToAuthorizeVpcEndpointAccessArrayOutput() AuthorizeVpcEndpointAccessArrayOutput {
	return i.ToAuthorizeVpcEndpointAccessArrayOutputWithContext(context.Background())
}

func (i AuthorizeVpcEndpointAccessArray) ToAuthorizeVpcEndpointAccessArrayOutputWithContext(ctx context.Context) AuthorizeVpcEndpointAccessArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizeVpcEndpointAccessArrayOutput)
}

// AuthorizeVpcEndpointAccessMapInput is an input type that accepts AuthorizeVpcEndpointAccessMap and AuthorizeVpcEndpointAccessMapOutput values.
// You can construct a concrete instance of `AuthorizeVpcEndpointAccessMapInput` via:
//
//	AuthorizeVpcEndpointAccessMap{ "key": AuthorizeVpcEndpointAccessArgs{...} }
type AuthorizeVpcEndpointAccessMapInput interface {
	pulumi.Input

	ToAuthorizeVpcEndpointAccessMapOutput() AuthorizeVpcEndpointAccessMapOutput
	ToAuthorizeVpcEndpointAccessMapOutputWithContext(context.Context) AuthorizeVpcEndpointAccessMapOutput
}

type AuthorizeVpcEndpointAccessMap map[string]AuthorizeVpcEndpointAccessInput

func (AuthorizeVpcEndpointAccessMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AuthorizeVpcEndpointAccess)(nil)).Elem()
}

func (i AuthorizeVpcEndpointAccessMap) ToAuthorizeVpcEndpointAccessMapOutput() AuthorizeVpcEndpointAccessMapOutput {
	return i.ToAuthorizeVpcEndpointAccessMapOutputWithContext(context.Background())
}

func (i AuthorizeVpcEndpointAccessMap) ToAuthorizeVpcEndpointAccessMapOutputWithContext(ctx context.Context) AuthorizeVpcEndpointAccessMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizeVpcEndpointAccessMapOutput)
}

type AuthorizeVpcEndpointAccessOutput struct{ *pulumi.OutputState }

func (AuthorizeVpcEndpointAccessOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizeVpcEndpointAccess)(nil)).Elem()
}

func (o AuthorizeVpcEndpointAccessOutput) ToAuthorizeVpcEndpointAccessOutput() AuthorizeVpcEndpointAccessOutput {
	return o
}

func (o AuthorizeVpcEndpointAccessOutput) ToAuthorizeVpcEndpointAccessOutputWithContext(ctx context.Context) AuthorizeVpcEndpointAccessOutput {
	return o
}

// AWS account ID to grant access to.
func (o AuthorizeVpcEndpointAccessOutput) Account() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthorizeVpcEndpointAccess) pulumi.StringOutput { return v.Account }).(pulumi.StringOutput)
}

// Information about the Amazon Web Services account or service that was provided access to the domain. See authorized principal attribute for further details.
func (o AuthorizeVpcEndpointAccessOutput) AuthorizedPrincipals() AuthorizeVpcEndpointAccessAuthorizedPrincipalArrayOutput {
	return o.ApplyT(func(v *AuthorizeVpcEndpointAccess) AuthorizeVpcEndpointAccessAuthorizedPrincipalArrayOutput {
		return v.AuthorizedPrincipals
	}).(AuthorizeVpcEndpointAccessAuthorizedPrincipalArrayOutput)
}

// Name of OpenSearch Service domain to provide access to.
func (o AuthorizeVpcEndpointAccessOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *AuthorizeVpcEndpointAccess) pulumi.StringOutput { return v.DomainName }).(pulumi.StringOutput)
}

type AuthorizeVpcEndpointAccessArrayOutput struct{ *pulumi.OutputState }

func (AuthorizeVpcEndpointAccessArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AuthorizeVpcEndpointAccess)(nil)).Elem()
}

func (o AuthorizeVpcEndpointAccessArrayOutput) ToAuthorizeVpcEndpointAccessArrayOutput() AuthorizeVpcEndpointAccessArrayOutput {
	return o
}

func (o AuthorizeVpcEndpointAccessArrayOutput) ToAuthorizeVpcEndpointAccessArrayOutputWithContext(ctx context.Context) AuthorizeVpcEndpointAccessArrayOutput {
	return o
}

func (o AuthorizeVpcEndpointAccessArrayOutput) Index(i pulumi.IntInput) AuthorizeVpcEndpointAccessOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AuthorizeVpcEndpointAccess {
		return vs[0].([]*AuthorizeVpcEndpointAccess)[vs[1].(int)]
	}).(AuthorizeVpcEndpointAccessOutput)
}

type AuthorizeVpcEndpointAccessMapOutput struct{ *pulumi.OutputState }

func (AuthorizeVpcEndpointAccessMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AuthorizeVpcEndpointAccess)(nil)).Elem()
}

func (o AuthorizeVpcEndpointAccessMapOutput) ToAuthorizeVpcEndpointAccessMapOutput() AuthorizeVpcEndpointAccessMapOutput {
	return o
}

func (o AuthorizeVpcEndpointAccessMapOutput) ToAuthorizeVpcEndpointAccessMapOutputWithContext(ctx context.Context) AuthorizeVpcEndpointAccessMapOutput {
	return o
}

func (o AuthorizeVpcEndpointAccessMapOutput) MapIndex(k pulumi.StringInput) AuthorizeVpcEndpointAccessOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AuthorizeVpcEndpointAccess {
		return vs[0].(map[string]*AuthorizeVpcEndpointAccess)[vs[1].(string)]
	}).(AuthorizeVpcEndpointAccessOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizeVpcEndpointAccessInput)(nil)).Elem(), &AuthorizeVpcEndpointAccess{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizeVpcEndpointAccessArrayInput)(nil)).Elem(), AuthorizeVpcEndpointAccessArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AuthorizeVpcEndpointAccessMapInput)(nil)).Elem(), AuthorizeVpcEndpointAccessMap{})
	pulumi.RegisterOutputType(AuthorizeVpcEndpointAccessOutput{})
	pulumi.RegisterOutputType(AuthorizeVpcEndpointAccessArrayOutput{})
	pulumi.RegisterOutputType(AuthorizeVpcEndpointAccessMapOutput{})
}
