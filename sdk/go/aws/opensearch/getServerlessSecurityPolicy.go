// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opensearch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get information about an AWS OpenSearch Serverless Security Policy.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/opensearch"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := opensearch.LookupServerlessSecurityPolicy(ctx, &opensearch.LookupServerlessSecurityPolicyArgs{
//				Name: "example-security-policy",
//				Type: "encryption",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupServerlessSecurityPolicy(ctx *pulumi.Context, args *LookupServerlessSecurityPolicyArgs, opts ...pulumi.InvokeOption) (*LookupServerlessSecurityPolicyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServerlessSecurityPolicyResult
	err := ctx.Invoke("aws:opensearch/getServerlessSecurityPolicy:getServerlessSecurityPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServerlessSecurityPolicy.
type LookupServerlessSecurityPolicyArgs struct {
	// Name of the policy
	Name string `pulumi:"name"`
	// Type of security policy. One of `encryption` or `network`.
	Type string `pulumi:"type"`
}

// A collection of values returned by getServerlessSecurityPolicy.
type LookupServerlessSecurityPolicyResult struct {
	// The date the security policy was created.
	CreatedDate string `pulumi:"createdDate"`
	// Description of the security policy.
	Description string `pulumi:"description"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The date the security policy was last modified.
	LastModifiedDate string `pulumi:"lastModifiedDate"`
	Name             string `pulumi:"name"`
	// The JSON policy document without any whitespaces.
	Policy string `pulumi:"policy"`
	// Version of the policy.
	PolicyVersion string `pulumi:"policyVersion"`
	Type          string `pulumi:"type"`
}

func LookupServerlessSecurityPolicyOutput(ctx *pulumi.Context, args LookupServerlessSecurityPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupServerlessSecurityPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServerlessSecurityPolicyResult, error) {
			args := v.(LookupServerlessSecurityPolicyArgs)
			r, err := LookupServerlessSecurityPolicy(ctx, &args, opts...)
			var s LookupServerlessSecurityPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupServerlessSecurityPolicyResultOutput)
}

// A collection of arguments for invoking getServerlessSecurityPolicy.
type LookupServerlessSecurityPolicyOutputArgs struct {
	// Name of the policy
	Name pulumi.StringInput `pulumi:"name"`
	// Type of security policy. One of `encryption` or `network`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (LookupServerlessSecurityPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerlessSecurityPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getServerlessSecurityPolicy.
type LookupServerlessSecurityPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupServerlessSecurityPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerlessSecurityPolicyResult)(nil)).Elem()
}

func (o LookupServerlessSecurityPolicyResultOutput) ToLookupServerlessSecurityPolicyResultOutput() LookupServerlessSecurityPolicyResultOutput {
	return o
}

func (o LookupServerlessSecurityPolicyResultOutput) ToLookupServerlessSecurityPolicyResultOutputWithContext(ctx context.Context) LookupServerlessSecurityPolicyResultOutput {
	return o
}

// The date the security policy was created.
func (o LookupServerlessSecurityPolicyResultOutput) CreatedDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerlessSecurityPolicyResult) string { return v.CreatedDate }).(pulumi.StringOutput)
}

// Description of the security policy.
func (o LookupServerlessSecurityPolicyResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerlessSecurityPolicyResult) string { return v.Description }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupServerlessSecurityPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerlessSecurityPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// The date the security policy was last modified.
func (o LookupServerlessSecurityPolicyResultOutput) LastModifiedDate() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerlessSecurityPolicyResult) string { return v.LastModifiedDate }).(pulumi.StringOutput)
}

func (o LookupServerlessSecurityPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerlessSecurityPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

// The JSON policy document without any whitespaces.
func (o LookupServerlessSecurityPolicyResultOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerlessSecurityPolicyResult) string { return v.Policy }).(pulumi.StringOutput)
}

// Version of the policy.
func (o LookupServerlessSecurityPolicyResultOutput) PolicyVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerlessSecurityPolicyResult) string { return v.PolicyVersion }).(pulumi.StringOutput)
}

func (o LookupServerlessSecurityPolicyResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServerlessSecurityPolicyResult) string { return v.Type }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServerlessSecurityPolicyResultOutput{})
}
