// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opensearch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Amazon OpenSearch Domain.
//
// ## Elasticsearch vs. OpenSearch
//
// Amazon OpenSearch Service is the successor to Amazon Elasticsearch Service and supports OpenSearch and legacy Elasticsearch OSS (up to 7.10, the final open source version of the software).
//
// OpenSearch Domain configurations are similar in many ways to Elasticsearch Domain configurations. However, there are important differences including these:
//
// * OpenSearch has `engineVersion` while Elasticsearch has `elasticsearchVersion`
// * Versions are specified differently - _e.g._, `Elasticsearch_7.10` with OpenSearch vs. `7.10` for Elasticsearch.
// * `instanceType` argument values end in `search` for OpenSearch vs. `elasticsearch` for Elasticsearch (_e.g._, `t2.micro.search` vs. `t2.micro.elasticsearch`).
// * The AWS-managed service-linked role for OpenSearch is called `AWSServiceRoleForAmazonOpenSearchService` instead of `AWSServiceRoleForAmazonElasticsearchService` for Elasticsearch.
//
// There are also some potentially unexpected similarities in configurations:
//
// * ARNs for both are prefaced with `arn:aws:es:`.
// * Both OpenSearch and Elasticsearch use assume role policies that refer to the `Principal` `Service` as `es.amazonaws.com`.
// * IAM policy actions, such as those you will find in `accessPolicies`, are prefaced with `es:` for both.
//
// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	opensearch/domain "github.com/pulumi/pulumi-aws/sdk/v1/go/aws/opensearch/domain"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// _, err := opensearch/domain.NewDomain(ctx, "example", &opensearch/domain.DomainArgs{
// ClusterConfig: map[string]interface{}{
// "instanceType": "r4.large.search",
// },
// EngineVersion: "Elasticsearch_7.10",
// Tags: map[string]interface{}{
// "Domain": "TestDomain",
// },
// })
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
// ### Enabling fine-grained access control on an existing domain
//
// This example shows two configurations: one to create a domain without fine-grained access control and the second to modify the domain to enable fine-grained access control. For more information, see [Enabling fine-grained access control](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html).
// ### First apply
//
// ```go
// package main
//
// import (
//
//	opensearch/domain "github.com/pulumi/pulumi-aws/sdk/v1/go/aws/opensearch/domain"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// _, err := opensearch/domain.NewDomain(ctx, "example", &opensearch/domain.DomainArgs{
// AdvancedSecurityOptions: map[string]interface{}{
// "anonymousAuthEnabled": true,
// "enabled": false,
// "internalUserDatabaseEnabled": true,
// "masterUserOptions": map[string]interface{}{
// "masterUserName": "example",
// "masterUserPassword": "Barbarbarbar1!",
// },
// },
// ClusterConfig: map[string]interface{}{
// "instanceType": "r5.large.search",
// },
// DomainEndpointOptions: map[string]interface{}{
// "enforceHttps": true,
// "tlsSecurityPolicy": "Policy-Min-TLS-1-2-2019-07",
// },
// EbsOptions: map[string]interface{}{
// "ebsEnabled": true,
// "volumeSize": 10,
// },
// EncryptAtRest: map[string]interface{}{
// "enabled": true,
// },
// EngineVersion: "Elasticsearch_7.1",
// NodeToNodeEncryption: map[string]interface{}{
// "enabled": true,
// },
// })
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
// ### Second apply
//
// Notice that the only change is `advanced_security_options.0.enabled` is now set to `true`.
//
// ```go
// package main
//
// import (
//
//	opensearch/domain "github.com/pulumi/pulumi-aws/sdk/v1/go/aws/opensearch/domain"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
// func main() {
// pulumi.Run(func(ctx *pulumi.Context) error {
// _, err := opensearch/domain.NewDomain(ctx, "example", &opensearch/domain.DomainArgs{
// AdvancedSecurityOptions: map[string]interface{}{
// "anonymousAuthEnabled": true,
// "enabled": true,
// "internalUserDatabaseEnabled": true,
// "masterUserOptions": map[string]interface{}{
// "masterUserName": "example",
// "masterUserPassword": "Barbarbarbar1!",
// },
// },
// ClusterConfig: map[string]interface{}{
// "instanceType": "r5.large.search",
// },
// DomainEndpointOptions: map[string]interface{}{
// "enforceHttps": true,
// "tlsSecurityPolicy": "Policy-Min-TLS-1-2-2019-07",
// },
// EbsOptions: map[string]interface{}{
// "ebsEnabled": true,
// "volumeSize": 10,
// },
// EncryptAtRest: map[string]interface{}{
// "enabled": true,
// },
// EngineVersion: "Elasticsearch_7.1",
// NodeToNodeEncryption: map[string]interface{}{
// "enabled": true,
// },
// })
// if err != nil {
// return err
// }
// return nil
// })
// }
// ```
//
// ## Import
//
// Using `pulumi import`, import OpenSearch domains using the `domain_name`. For example:
//
// ```sh
//
//	$ pulumi import aws:opensearch/domain:Domain example domain_name
//
// ```
type Domain struct {
	pulumi.CustomResourceState

	// IAM policy document specifying the access policies for the domain.
	AccessPolicies pulumi.StringOutput `pulumi:"accessPolicies"`
	// Key-value string pairs to specify advanced configuration options. Note that the values for these configuration options must be strings (wrapped in quotes) or they may be wrong and cause a perpetual diff, causing the provider to want to recreate your OpenSearch domain on every apply.
	AdvancedOptions pulumi.StringMapOutput `pulumi:"advancedOptions"`
	// Configuration block for [fine-grained access control](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html). Detailed below.
	AdvancedSecurityOptions DomainAdvancedSecurityOptionsOutput `pulumi:"advancedSecurityOptions"`
	// ARN of the domain.
	Arn pulumi.StringOutput `pulumi:"arn"`
	// Configuration block for the Auto-Tune options of the domain. Detailed below.
	AutoTuneOptions DomainAutoTuneOptionsOutput `pulumi:"autoTuneOptions"`
	// Configuration block for the cluster of the domain. Detailed below.
	ClusterConfig DomainClusterConfigOutput `pulumi:"clusterConfig"`
	// Configuration block for authenticating dashboard with Cognito. Detailed below.
	CognitoOptions DomainCognitoOptionsPtrOutput `pulumi:"cognitoOptions"`
	// Domain-specific endpoint for Dashboard without https scheme.
	DashboardEndpoint pulumi.StringOutput `pulumi:"dashboardEndpoint"`
	// Configuration block for domain endpoint HTTP(S) related options. Detailed below.
	DomainEndpointOptions DomainDomainEndpointOptionsOutput `pulumi:"domainEndpointOptions"`
	// Unique identifier for the domain.
	DomainId pulumi.StringOutput `pulumi:"domainId"`
	// Name of the domain.
	//
	// The following arguments are optional:
	DomainName pulumi.StringOutput `pulumi:"domainName"`
	// Configuration block for EBS related options, may be required based on chosen [instance size](https://aws.amazon.com/opensearch-service/pricing/). Detailed below.
	EbsOptions DomainEbsOptionsOutput `pulumi:"ebsOptions"`
	// Configuration block for encrypt at rest options. Only available for [certain instance types](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/encryption-at-rest.html). Detailed below.
	EncryptAtRest DomainEncryptAtRestOutput `pulumi:"encryptAtRest"`
	// Domain-specific endpoint used to submit index, search, and data upload requests.
	Endpoint pulumi.StringOutput `pulumi:"endpoint"`
	// Either `Elasticsearch_X.Y` or `OpenSearch_X.Y` to specify the engine version for the Amazon OpenSearch Service domain. For example, `OpenSearch_1.0` or `Elasticsearch_7.9`.
	// See [Creating and managing Amazon OpenSearch Service domains](http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomains).
	// Defaults to the lastest version of OpenSearch.
	EngineVersion pulumi.StringOutput `pulumi:"engineVersion"`
	// (**Deprecated**) Domain-specific endpoint for kibana without https scheme. Use the `dashboardEndpoint` attribute instead.
	//
	// Deprecated: use 'dashboard_endpoint' attribute instead
	KibanaEndpoint pulumi.StringOutput `pulumi:"kibanaEndpoint"`
	// Configuration block for publishing slow and application logs to CloudWatch Logs. This block can be declared multiple times, for each log_type, within the same resource. Detailed below.
	LogPublishingOptions DomainLogPublishingOptionArrayOutput `pulumi:"logPublishingOptions"`
	// Configuration block for node-to-node encryption options. Detailed below.
	NodeToNodeEncryption DomainNodeToNodeEncryptionOutput `pulumi:"nodeToNodeEncryption"`
	// Configuration to add Off Peak update options. ([documentation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html)). Detailed below.
	OffPeakWindowOptions DomainOffPeakWindowOptionsOutput `pulumi:"offPeakWindowOptions"`
	// Configuration block for snapshot related options. Detailed below. DEPRECATED. For domains running OpenSearch 5.3 and later, Amazon OpenSearch takes hourly automated snapshots, making this setting irrelevant. For domains running earlier versions, OpenSearch takes daily automated snapshots.
	SnapshotOptions DomainSnapshotOptionsPtrOutput `pulumi:"snapshotOptions"`
	// Software update options for the domain. Detailed below.
	SoftwareUpdateOptions DomainSoftwareUpdateOptionsOutput `pulumi:"softwareUpdateOptions"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapOutput `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	// * `vpc_options.0.availability_zones` - If the domain was created inside a VPC, the names of the availability zones the configured `subnetIds` were created inside.
	// * `vpc_options.0.vpc_id` - If the domain was created inside a VPC, the ID of the VPC.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapOutput `pulumi:"tagsAll"`
	// Configuration block for VPC related options. Adding or removing this configuration forces a new resource ([documentation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html)). Detailed below.
	VpcOptions DomainVpcOptionsPtrOutput `pulumi:"vpcOptions"`
}

// NewDomain registers a new resource with the given unique name, arguments, and options.
func NewDomain(ctx *pulumi.Context,
	name string, args *DomainArgs, opts ...pulumi.ResourceOption) (*Domain, error) {
	if args == nil {
		args = &DomainArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Domain
	err := ctx.RegisterResource("aws:opensearch/domain:Domain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomain gets an existing Domain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainState, opts ...pulumi.ResourceOption) (*Domain, error) {
	var resource Domain
	err := ctx.ReadResource("aws:opensearch/domain:Domain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Domain resources.
type domainState struct {
	// IAM policy document specifying the access policies for the domain.
	AccessPolicies *string `pulumi:"accessPolicies"`
	// Key-value string pairs to specify advanced configuration options. Note that the values for these configuration options must be strings (wrapped in quotes) or they may be wrong and cause a perpetual diff, causing the provider to want to recreate your OpenSearch domain on every apply.
	AdvancedOptions map[string]string `pulumi:"advancedOptions"`
	// Configuration block for [fine-grained access control](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html). Detailed below.
	AdvancedSecurityOptions *DomainAdvancedSecurityOptions `pulumi:"advancedSecurityOptions"`
	// ARN of the domain.
	Arn *string `pulumi:"arn"`
	// Configuration block for the Auto-Tune options of the domain. Detailed below.
	AutoTuneOptions *DomainAutoTuneOptions `pulumi:"autoTuneOptions"`
	// Configuration block for the cluster of the domain. Detailed below.
	ClusterConfig *DomainClusterConfig `pulumi:"clusterConfig"`
	// Configuration block for authenticating dashboard with Cognito. Detailed below.
	CognitoOptions *DomainCognitoOptions `pulumi:"cognitoOptions"`
	// Domain-specific endpoint for Dashboard without https scheme.
	DashboardEndpoint *string `pulumi:"dashboardEndpoint"`
	// Configuration block for domain endpoint HTTP(S) related options. Detailed below.
	DomainEndpointOptions *DomainDomainEndpointOptions `pulumi:"domainEndpointOptions"`
	// Unique identifier for the domain.
	DomainId *string `pulumi:"domainId"`
	// Name of the domain.
	//
	// The following arguments are optional:
	DomainName *string `pulumi:"domainName"`
	// Configuration block for EBS related options, may be required based on chosen [instance size](https://aws.amazon.com/opensearch-service/pricing/). Detailed below.
	EbsOptions *DomainEbsOptions `pulumi:"ebsOptions"`
	// Configuration block for encrypt at rest options. Only available for [certain instance types](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/encryption-at-rest.html). Detailed below.
	EncryptAtRest *DomainEncryptAtRest `pulumi:"encryptAtRest"`
	// Domain-specific endpoint used to submit index, search, and data upload requests.
	Endpoint *string `pulumi:"endpoint"`
	// Either `Elasticsearch_X.Y` or `OpenSearch_X.Y` to specify the engine version for the Amazon OpenSearch Service domain. For example, `OpenSearch_1.0` or `Elasticsearch_7.9`.
	// See [Creating and managing Amazon OpenSearch Service domains](http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomains).
	// Defaults to the lastest version of OpenSearch.
	EngineVersion *string `pulumi:"engineVersion"`
	// (**Deprecated**) Domain-specific endpoint for kibana without https scheme. Use the `dashboardEndpoint` attribute instead.
	//
	// Deprecated: use 'dashboard_endpoint' attribute instead
	KibanaEndpoint *string `pulumi:"kibanaEndpoint"`
	// Configuration block for publishing slow and application logs to CloudWatch Logs. This block can be declared multiple times, for each log_type, within the same resource. Detailed below.
	LogPublishingOptions []DomainLogPublishingOption `pulumi:"logPublishingOptions"`
	// Configuration block for node-to-node encryption options. Detailed below.
	NodeToNodeEncryption *DomainNodeToNodeEncryption `pulumi:"nodeToNodeEncryption"`
	// Configuration to add Off Peak update options. ([documentation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html)). Detailed below.
	OffPeakWindowOptions *DomainOffPeakWindowOptions `pulumi:"offPeakWindowOptions"`
	// Configuration block for snapshot related options. Detailed below. DEPRECATED. For domains running OpenSearch 5.3 and later, Amazon OpenSearch takes hourly automated snapshots, making this setting irrelevant. For domains running earlier versions, OpenSearch takes daily automated snapshots.
	SnapshotOptions *DomainSnapshotOptions `pulumi:"snapshotOptions"`
	// Software update options for the domain. Detailed below.
	SoftwareUpdateOptions *DomainSoftwareUpdateOptions `pulumi:"softwareUpdateOptions"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	// * `vpc_options.0.availability_zones` - If the domain was created inside a VPC, the names of the availability zones the configured `subnetIds` were created inside.
	// * `vpc_options.0.vpc_id` - If the domain was created inside a VPC, the ID of the VPC.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll map[string]string `pulumi:"tagsAll"`
	// Configuration block for VPC related options. Adding or removing this configuration forces a new resource ([documentation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html)). Detailed below.
	VpcOptions *DomainVpcOptions `pulumi:"vpcOptions"`
}

type DomainState struct {
	// IAM policy document specifying the access policies for the domain.
	AccessPolicies pulumi.StringPtrInput
	// Key-value string pairs to specify advanced configuration options. Note that the values for these configuration options must be strings (wrapped in quotes) or they may be wrong and cause a perpetual diff, causing the provider to want to recreate your OpenSearch domain on every apply.
	AdvancedOptions pulumi.StringMapInput
	// Configuration block for [fine-grained access control](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html). Detailed below.
	AdvancedSecurityOptions DomainAdvancedSecurityOptionsPtrInput
	// ARN of the domain.
	Arn pulumi.StringPtrInput
	// Configuration block for the Auto-Tune options of the domain. Detailed below.
	AutoTuneOptions DomainAutoTuneOptionsPtrInput
	// Configuration block for the cluster of the domain. Detailed below.
	ClusterConfig DomainClusterConfigPtrInput
	// Configuration block for authenticating dashboard with Cognito. Detailed below.
	CognitoOptions DomainCognitoOptionsPtrInput
	// Domain-specific endpoint for Dashboard without https scheme.
	DashboardEndpoint pulumi.StringPtrInput
	// Configuration block for domain endpoint HTTP(S) related options. Detailed below.
	DomainEndpointOptions DomainDomainEndpointOptionsPtrInput
	// Unique identifier for the domain.
	DomainId pulumi.StringPtrInput
	// Name of the domain.
	//
	// The following arguments are optional:
	DomainName pulumi.StringPtrInput
	// Configuration block for EBS related options, may be required based on chosen [instance size](https://aws.amazon.com/opensearch-service/pricing/). Detailed below.
	EbsOptions DomainEbsOptionsPtrInput
	// Configuration block for encrypt at rest options. Only available for [certain instance types](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/encryption-at-rest.html). Detailed below.
	EncryptAtRest DomainEncryptAtRestPtrInput
	// Domain-specific endpoint used to submit index, search, and data upload requests.
	Endpoint pulumi.StringPtrInput
	// Either `Elasticsearch_X.Y` or `OpenSearch_X.Y` to specify the engine version for the Amazon OpenSearch Service domain. For example, `OpenSearch_1.0` or `Elasticsearch_7.9`.
	// See [Creating and managing Amazon OpenSearch Service domains](http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomains).
	// Defaults to the lastest version of OpenSearch.
	EngineVersion pulumi.StringPtrInput
	// (**Deprecated**) Domain-specific endpoint for kibana without https scheme. Use the `dashboardEndpoint` attribute instead.
	//
	// Deprecated: use 'dashboard_endpoint' attribute instead
	KibanaEndpoint pulumi.StringPtrInput
	// Configuration block for publishing slow and application logs to CloudWatch Logs. This block can be declared multiple times, for each log_type, within the same resource. Detailed below.
	LogPublishingOptions DomainLogPublishingOptionArrayInput
	// Configuration block for node-to-node encryption options. Detailed below.
	NodeToNodeEncryption DomainNodeToNodeEncryptionPtrInput
	// Configuration to add Off Peak update options. ([documentation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html)). Detailed below.
	OffPeakWindowOptions DomainOffPeakWindowOptionsPtrInput
	// Configuration block for snapshot related options. Detailed below. DEPRECATED. For domains running OpenSearch 5.3 and later, Amazon OpenSearch takes hourly automated snapshots, making this setting irrelevant. For domains running earlier versions, OpenSearch takes daily automated snapshots.
	SnapshotOptions DomainSnapshotOptionsPtrInput
	// Software update options for the domain. Detailed below.
	SoftwareUpdateOptions DomainSoftwareUpdateOptionsPtrInput
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
	// * `vpc_options.0.availability_zones` - If the domain was created inside a VPC, the names of the availability zones the configured `subnetIds` were created inside.
	// * `vpc_options.0.vpc_id` - If the domain was created inside a VPC, the ID of the VPC.
	//
	// Deprecated: Please use `tags` instead.
	TagsAll pulumi.StringMapInput
	// Configuration block for VPC related options. Adding or removing this configuration forces a new resource ([documentation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html)). Detailed below.
	VpcOptions DomainVpcOptionsPtrInput
}

func (DomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainState)(nil)).Elem()
}

type domainArgs struct {
	// IAM policy document specifying the access policies for the domain.
	AccessPolicies *string `pulumi:"accessPolicies"`
	// Key-value string pairs to specify advanced configuration options. Note that the values for these configuration options must be strings (wrapped in quotes) or they may be wrong and cause a perpetual diff, causing the provider to want to recreate your OpenSearch domain on every apply.
	AdvancedOptions map[string]string `pulumi:"advancedOptions"`
	// Configuration block for [fine-grained access control](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html). Detailed below.
	AdvancedSecurityOptions *DomainAdvancedSecurityOptions `pulumi:"advancedSecurityOptions"`
	// Configuration block for the Auto-Tune options of the domain. Detailed below.
	AutoTuneOptions *DomainAutoTuneOptions `pulumi:"autoTuneOptions"`
	// Configuration block for the cluster of the domain. Detailed below.
	ClusterConfig *DomainClusterConfig `pulumi:"clusterConfig"`
	// Configuration block for authenticating dashboard with Cognito. Detailed below.
	CognitoOptions *DomainCognitoOptions `pulumi:"cognitoOptions"`
	// Configuration block for domain endpoint HTTP(S) related options. Detailed below.
	DomainEndpointOptions *DomainDomainEndpointOptions `pulumi:"domainEndpointOptions"`
	// Name of the domain.
	//
	// The following arguments are optional:
	DomainName *string `pulumi:"domainName"`
	// Configuration block for EBS related options, may be required based on chosen [instance size](https://aws.amazon.com/opensearch-service/pricing/). Detailed below.
	EbsOptions *DomainEbsOptions `pulumi:"ebsOptions"`
	// Configuration block for encrypt at rest options. Only available for [certain instance types](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/encryption-at-rest.html). Detailed below.
	EncryptAtRest *DomainEncryptAtRest `pulumi:"encryptAtRest"`
	// Either `Elasticsearch_X.Y` or `OpenSearch_X.Y` to specify the engine version for the Amazon OpenSearch Service domain. For example, `OpenSearch_1.0` or `Elasticsearch_7.9`.
	// See [Creating and managing Amazon OpenSearch Service domains](http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomains).
	// Defaults to the lastest version of OpenSearch.
	EngineVersion *string `pulumi:"engineVersion"`
	// Configuration block for publishing slow and application logs to CloudWatch Logs. This block can be declared multiple times, for each log_type, within the same resource. Detailed below.
	LogPublishingOptions []DomainLogPublishingOption `pulumi:"logPublishingOptions"`
	// Configuration block for node-to-node encryption options. Detailed below.
	NodeToNodeEncryption *DomainNodeToNodeEncryption `pulumi:"nodeToNodeEncryption"`
	// Configuration to add Off Peak update options. ([documentation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html)). Detailed below.
	OffPeakWindowOptions *DomainOffPeakWindowOptions `pulumi:"offPeakWindowOptions"`
	// Configuration block for snapshot related options. Detailed below. DEPRECATED. For domains running OpenSearch 5.3 and later, Amazon OpenSearch takes hourly automated snapshots, making this setting irrelevant. For domains running earlier versions, OpenSearch takes daily automated snapshots.
	SnapshotOptions *DomainSnapshotOptions `pulumi:"snapshotOptions"`
	// Software update options for the domain. Detailed below.
	SoftwareUpdateOptions *DomainSoftwareUpdateOptions `pulumi:"softwareUpdateOptions"`
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags map[string]string `pulumi:"tags"`
	// Configuration block for VPC related options. Adding or removing this configuration forces a new resource ([documentation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html)). Detailed below.
	VpcOptions *DomainVpcOptions `pulumi:"vpcOptions"`
}

// The set of arguments for constructing a Domain resource.
type DomainArgs struct {
	// IAM policy document specifying the access policies for the domain.
	AccessPolicies pulumi.StringPtrInput
	// Key-value string pairs to specify advanced configuration options. Note that the values for these configuration options must be strings (wrapped in quotes) or they may be wrong and cause a perpetual diff, causing the provider to want to recreate your OpenSearch domain on every apply.
	AdvancedOptions pulumi.StringMapInput
	// Configuration block for [fine-grained access control](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html). Detailed below.
	AdvancedSecurityOptions DomainAdvancedSecurityOptionsPtrInput
	// Configuration block for the Auto-Tune options of the domain. Detailed below.
	AutoTuneOptions DomainAutoTuneOptionsPtrInput
	// Configuration block for the cluster of the domain. Detailed below.
	ClusterConfig DomainClusterConfigPtrInput
	// Configuration block for authenticating dashboard with Cognito. Detailed below.
	CognitoOptions DomainCognitoOptionsPtrInput
	// Configuration block for domain endpoint HTTP(S) related options. Detailed below.
	DomainEndpointOptions DomainDomainEndpointOptionsPtrInput
	// Name of the domain.
	//
	// The following arguments are optional:
	DomainName pulumi.StringPtrInput
	// Configuration block for EBS related options, may be required based on chosen [instance size](https://aws.amazon.com/opensearch-service/pricing/). Detailed below.
	EbsOptions DomainEbsOptionsPtrInput
	// Configuration block for encrypt at rest options. Only available for [certain instance types](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/encryption-at-rest.html). Detailed below.
	EncryptAtRest DomainEncryptAtRestPtrInput
	// Either `Elasticsearch_X.Y` or `OpenSearch_X.Y` to specify the engine version for the Amazon OpenSearch Service domain. For example, `OpenSearch_1.0` or `Elasticsearch_7.9`.
	// See [Creating and managing Amazon OpenSearch Service domains](http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomains).
	// Defaults to the lastest version of OpenSearch.
	EngineVersion pulumi.StringPtrInput
	// Configuration block for publishing slow and application logs to CloudWatch Logs. This block can be declared multiple times, for each log_type, within the same resource. Detailed below.
	LogPublishingOptions DomainLogPublishingOptionArrayInput
	// Configuration block for node-to-node encryption options. Detailed below.
	NodeToNodeEncryption DomainNodeToNodeEncryptionPtrInput
	// Configuration to add Off Peak update options. ([documentation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html)). Detailed below.
	OffPeakWindowOptions DomainOffPeakWindowOptionsPtrInput
	// Configuration block for snapshot related options. Detailed below. DEPRECATED. For domains running OpenSearch 5.3 and later, Amazon OpenSearch takes hourly automated snapshots, making this setting irrelevant. For domains running earlier versions, OpenSearch takes daily automated snapshots.
	SnapshotOptions DomainSnapshotOptionsPtrInput
	// Software update options for the domain. Detailed below.
	SoftwareUpdateOptions DomainSoftwareUpdateOptionsPtrInput
	// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
	Tags pulumi.StringMapInput
	// Configuration block for VPC related options. Adding or removing this configuration forces a new resource ([documentation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html)). Detailed below.
	VpcOptions DomainVpcOptionsPtrInput
}

func (DomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainArgs)(nil)).Elem()
}

type DomainInput interface {
	pulumi.Input

	ToDomainOutput() DomainOutput
	ToDomainOutputWithContext(ctx context.Context) DomainOutput
}

func (*Domain) ElementType() reflect.Type {
	return reflect.TypeOf((**Domain)(nil)).Elem()
}

func (i *Domain) ToDomainOutput() DomainOutput {
	return i.ToDomainOutputWithContext(context.Background())
}

func (i *Domain) ToDomainOutputWithContext(ctx context.Context) DomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainOutput)
}

// DomainArrayInput is an input type that accepts DomainArray and DomainArrayOutput values.
// You can construct a concrete instance of `DomainArrayInput` via:
//
//	DomainArray{ DomainArgs{...} }
type DomainArrayInput interface {
	pulumi.Input

	ToDomainArrayOutput() DomainArrayOutput
	ToDomainArrayOutputWithContext(context.Context) DomainArrayOutput
}

type DomainArray []DomainInput

func (DomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Domain)(nil)).Elem()
}

func (i DomainArray) ToDomainArrayOutput() DomainArrayOutput {
	return i.ToDomainArrayOutputWithContext(context.Background())
}

func (i DomainArray) ToDomainArrayOutputWithContext(ctx context.Context) DomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainArrayOutput)
}

// DomainMapInput is an input type that accepts DomainMap and DomainMapOutput values.
// You can construct a concrete instance of `DomainMapInput` via:
//
//	DomainMap{ "key": DomainArgs{...} }
type DomainMapInput interface {
	pulumi.Input

	ToDomainMapOutput() DomainMapOutput
	ToDomainMapOutputWithContext(context.Context) DomainMapOutput
}

type DomainMap map[string]DomainInput

func (DomainMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Domain)(nil)).Elem()
}

func (i DomainMap) ToDomainMapOutput() DomainMapOutput {
	return i.ToDomainMapOutputWithContext(context.Background())
}

func (i DomainMap) ToDomainMapOutputWithContext(ctx context.Context) DomainMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainMapOutput)
}

type DomainOutput struct{ *pulumi.OutputState }

func (DomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Domain)(nil)).Elem()
}

func (o DomainOutput) ToDomainOutput() DomainOutput {
	return o
}

func (o DomainOutput) ToDomainOutputWithContext(ctx context.Context) DomainOutput {
	return o
}

// IAM policy document specifying the access policies for the domain.
func (o DomainOutput) AccessPolicies() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.AccessPolicies }).(pulumi.StringOutput)
}

// Key-value string pairs to specify advanced configuration options. Note that the values for these configuration options must be strings (wrapped in quotes) or they may be wrong and cause a perpetual diff, causing the provider to want to recreate your OpenSearch domain on every apply.
func (o DomainOutput) AdvancedOptions() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringMapOutput { return v.AdvancedOptions }).(pulumi.StringMapOutput)
}

// Configuration block for [fine-grained access control](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/fgac.html). Detailed below.
func (o DomainOutput) AdvancedSecurityOptions() DomainAdvancedSecurityOptionsOutput {
	return o.ApplyT(func(v *Domain) DomainAdvancedSecurityOptionsOutput { return v.AdvancedSecurityOptions }).(DomainAdvancedSecurityOptionsOutput)
}

// ARN of the domain.
func (o DomainOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.Arn }).(pulumi.StringOutput)
}

// Configuration block for the Auto-Tune options of the domain. Detailed below.
func (o DomainOutput) AutoTuneOptions() DomainAutoTuneOptionsOutput {
	return o.ApplyT(func(v *Domain) DomainAutoTuneOptionsOutput { return v.AutoTuneOptions }).(DomainAutoTuneOptionsOutput)
}

// Configuration block for the cluster of the domain. Detailed below.
func (o DomainOutput) ClusterConfig() DomainClusterConfigOutput {
	return o.ApplyT(func(v *Domain) DomainClusterConfigOutput { return v.ClusterConfig }).(DomainClusterConfigOutput)
}

// Configuration block for authenticating dashboard with Cognito. Detailed below.
func (o DomainOutput) CognitoOptions() DomainCognitoOptionsPtrOutput {
	return o.ApplyT(func(v *Domain) DomainCognitoOptionsPtrOutput { return v.CognitoOptions }).(DomainCognitoOptionsPtrOutput)
}

// Domain-specific endpoint for Dashboard without https scheme.
func (o DomainOutput) DashboardEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.DashboardEndpoint }).(pulumi.StringOutput)
}

// Configuration block for domain endpoint HTTP(S) related options. Detailed below.
func (o DomainOutput) DomainEndpointOptions() DomainDomainEndpointOptionsOutput {
	return o.ApplyT(func(v *Domain) DomainDomainEndpointOptionsOutput { return v.DomainEndpointOptions }).(DomainDomainEndpointOptionsOutput)
}

// Unique identifier for the domain.
func (o DomainOutput) DomainId() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.DomainId }).(pulumi.StringOutput)
}

// Name of the domain.
//
// The following arguments are optional:
func (o DomainOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.DomainName }).(pulumi.StringOutput)
}

// Configuration block for EBS related options, may be required based on chosen [instance size](https://aws.amazon.com/opensearch-service/pricing/). Detailed below.
func (o DomainOutput) EbsOptions() DomainEbsOptionsOutput {
	return o.ApplyT(func(v *Domain) DomainEbsOptionsOutput { return v.EbsOptions }).(DomainEbsOptionsOutput)
}

// Configuration block for encrypt at rest options. Only available for [certain instance types](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/encryption-at-rest.html). Detailed below.
func (o DomainOutput) EncryptAtRest() DomainEncryptAtRestOutput {
	return o.ApplyT(func(v *Domain) DomainEncryptAtRestOutput { return v.EncryptAtRest }).(DomainEncryptAtRestOutput)
}

// Domain-specific endpoint used to submit index, search, and data upload requests.
func (o DomainOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.Endpoint }).(pulumi.StringOutput)
}

// Either `Elasticsearch_X.Y` or `OpenSearch_X.Y` to specify the engine version for the Amazon OpenSearch Service domain. For example, `OpenSearch_1.0` or `Elasticsearch_7.9`.
// See [Creating and managing Amazon OpenSearch Service domains](http://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#createdomains).
// Defaults to the lastest version of OpenSearch.
func (o DomainOutput) EngineVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.EngineVersion }).(pulumi.StringOutput)
}

// (**Deprecated**) Domain-specific endpoint for kibana without https scheme. Use the `dashboardEndpoint` attribute instead.
//
// Deprecated: use 'dashboard_endpoint' attribute instead
func (o DomainOutput) KibanaEndpoint() pulumi.StringOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringOutput { return v.KibanaEndpoint }).(pulumi.StringOutput)
}

// Configuration block for publishing slow and application logs to CloudWatch Logs. This block can be declared multiple times, for each log_type, within the same resource. Detailed below.
func (o DomainOutput) LogPublishingOptions() DomainLogPublishingOptionArrayOutput {
	return o.ApplyT(func(v *Domain) DomainLogPublishingOptionArrayOutput { return v.LogPublishingOptions }).(DomainLogPublishingOptionArrayOutput)
}

// Configuration block for node-to-node encryption options. Detailed below.
func (o DomainOutput) NodeToNodeEncryption() DomainNodeToNodeEncryptionOutput {
	return o.ApplyT(func(v *Domain) DomainNodeToNodeEncryptionOutput { return v.NodeToNodeEncryption }).(DomainNodeToNodeEncryptionOutput)
}

// Configuration to add Off Peak update options. ([documentation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/off-peak.html)). Detailed below.
func (o DomainOutput) OffPeakWindowOptions() DomainOffPeakWindowOptionsOutput {
	return o.ApplyT(func(v *Domain) DomainOffPeakWindowOptionsOutput { return v.OffPeakWindowOptions }).(DomainOffPeakWindowOptionsOutput)
}

// Configuration block for snapshot related options. Detailed below. DEPRECATED. For domains running OpenSearch 5.3 and later, Amazon OpenSearch takes hourly automated snapshots, making this setting irrelevant. For domains running earlier versions, OpenSearch takes daily automated snapshots.
func (o DomainOutput) SnapshotOptions() DomainSnapshotOptionsPtrOutput {
	return o.ApplyT(func(v *Domain) DomainSnapshotOptionsPtrOutput { return v.SnapshotOptions }).(DomainSnapshotOptionsPtrOutput)
}

// Software update options for the domain. Detailed below.
func (o DomainOutput) SoftwareUpdateOptions() DomainSoftwareUpdateOptionsOutput {
	return o.ApplyT(func(v *Domain) DomainSoftwareUpdateOptionsOutput { return v.SoftwareUpdateOptions }).(DomainSoftwareUpdateOptionsOutput)
}

// Map of tags to assign to the resource. If configured with a provider `defaultTags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.
func (o DomainOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringMapOutput { return v.Tags }).(pulumi.StringMapOutput)
}

// Map of tags assigned to the resource, including those inherited from the provider `defaultTags` configuration block.
// * `vpc_options.0.availability_zones` - If the domain was created inside a VPC, the names of the availability zones the configured `subnetIds` were created inside.
// * `vpc_options.0.vpc_id` - If the domain was created inside a VPC, the ID of the VPC.
//
// Deprecated: Please use `tags` instead.
func (o DomainOutput) TagsAll() pulumi.StringMapOutput {
	return o.ApplyT(func(v *Domain) pulumi.StringMapOutput { return v.TagsAll }).(pulumi.StringMapOutput)
}

// Configuration block for VPC related options. Adding or removing this configuration forces a new resource ([documentation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html)). Detailed below.
func (o DomainOutput) VpcOptions() DomainVpcOptionsPtrOutput {
	return o.ApplyT(func(v *Domain) DomainVpcOptionsPtrOutput { return v.VpcOptions }).(DomainVpcOptionsPtrOutput)
}

type DomainArrayOutput struct{ *pulumi.OutputState }

func (DomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Domain)(nil)).Elem()
}

func (o DomainArrayOutput) ToDomainArrayOutput() DomainArrayOutput {
	return o
}

func (o DomainArrayOutput) ToDomainArrayOutputWithContext(ctx context.Context) DomainArrayOutput {
	return o
}

func (o DomainArrayOutput) Index(i pulumi.IntInput) DomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Domain {
		return vs[0].([]*Domain)[vs[1].(int)]
	}).(DomainOutput)
}

type DomainMapOutput struct{ *pulumi.OutputState }

func (DomainMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Domain)(nil)).Elem()
}

func (o DomainMapOutput) ToDomainMapOutput() DomainMapOutput {
	return o
}

func (o DomainMapOutput) ToDomainMapOutputWithContext(ctx context.Context) DomainMapOutput {
	return o
}

func (o DomainMapOutput) MapIndex(k pulumi.StringInput) DomainOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Domain {
		return vs[0].(map[string]*Domain)[vs[1].(string)]
	}).(DomainOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DomainInput)(nil)).Elem(), &Domain{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainArrayInput)(nil)).Elem(), DomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DomainMapInput)(nil)).Elem(), DomainMap{})
	pulumi.RegisterOutputType(DomainOutput{})
	pulumi.RegisterOutputType(DomainArrayOutput{})
	pulumi.RegisterOutputType(DomainMapOutput{})
}
