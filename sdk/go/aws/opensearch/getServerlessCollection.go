// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package opensearch

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for managing an AWS OpenSearch Serverless Collection.
//
// ## Example Usage
// ### Basic Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/opensearch"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := opensearch.LookupServerlessCollection(ctx, &opensearch.LookupServerlessCollectionArgs{
//				Name: pulumi.StringRef("example"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupServerlessCollection(ctx *pulumi.Context, args *LookupServerlessCollectionArgs, opts ...pulumi.InvokeOption) (*LookupServerlessCollectionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServerlessCollectionResult
	err := ctx.Invoke("aws:opensearch/getServerlessCollection:getServerlessCollection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServerlessCollection.
type LookupServerlessCollectionArgs struct {
	// ID of the collection. Either `id` or `name` must be provided.
	Id *string `pulumi:"id"`
	// Name of the collection. Either `name` or `id` must be provided.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getServerlessCollection.
type LookupServerlessCollectionResult struct {
	// Amazon Resource Name (ARN) of the collection.
	Arn *string `pulumi:"arn"`
	// Collection-specific endpoint used to submit index, search, and data upload requests to an OpenSearch Serverless collection.
	CollectionEndpoint *string `pulumi:"collectionEndpoint"`
	// Date the Collection was created.
	CreatedDate *string `pulumi:"createdDate"`
	// Collection-specific endpoint used to access OpenSearch Dashboards.
	DashboardEndpoint *string `pulumi:"dashboardEndpoint"`
	// Description of the collection.
	Description *string `pulumi:"description"`
	Id          *string `pulumi:"id"`
	// The ARN of the Amazon Web Services KMS key used to encrypt the collection.
	KmsKeyArn *string `pulumi:"kmsKeyArn"`
	// Date the Collection was last modified.
	LastModifiedDate *string `pulumi:"lastModifiedDate"`
	Name             *string `pulumi:"name"`
	// A map of tags to assign to the collection.
	Tags map[string]string `pulumi:"tags"`
	// Type of collection.
	Type *string `pulumi:"type"`
}

func LookupServerlessCollectionOutput(ctx *pulumi.Context, args LookupServerlessCollectionOutputArgs, opts ...pulumi.InvokeOption) LookupServerlessCollectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServerlessCollectionResult, error) {
			args := v.(LookupServerlessCollectionArgs)
			r, err := LookupServerlessCollection(ctx, &args, opts...)
			var s LookupServerlessCollectionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupServerlessCollectionResultOutput)
}

// A collection of arguments for invoking getServerlessCollection.
type LookupServerlessCollectionOutputArgs struct {
	// ID of the collection. Either `id` or `name` must be provided.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Name of the collection. Either `name` or `id` must be provided.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupServerlessCollectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerlessCollectionArgs)(nil)).Elem()
}

// A collection of values returned by getServerlessCollection.
type LookupServerlessCollectionResultOutput struct{ *pulumi.OutputState }

func (LookupServerlessCollectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServerlessCollectionResult)(nil)).Elem()
}

func (o LookupServerlessCollectionResultOutput) ToLookupServerlessCollectionResultOutput() LookupServerlessCollectionResultOutput {
	return o
}

func (o LookupServerlessCollectionResultOutput) ToLookupServerlessCollectionResultOutputWithContext(ctx context.Context) LookupServerlessCollectionResultOutput {
	return o
}

// Amazon Resource Name (ARN) of the collection.
func (o LookupServerlessCollectionResultOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerlessCollectionResult) *string { return v.Arn }).(pulumi.StringPtrOutput)
}

// Collection-specific endpoint used to submit index, search, and data upload requests to an OpenSearch Serverless collection.
func (o LookupServerlessCollectionResultOutput) CollectionEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerlessCollectionResult) *string { return v.CollectionEndpoint }).(pulumi.StringPtrOutput)
}

// Date the Collection was created.
func (o LookupServerlessCollectionResultOutput) CreatedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerlessCollectionResult) *string { return v.CreatedDate }).(pulumi.StringPtrOutput)
}

// Collection-specific endpoint used to access OpenSearch Dashboards.
func (o LookupServerlessCollectionResultOutput) DashboardEndpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerlessCollectionResult) *string { return v.DashboardEndpoint }).(pulumi.StringPtrOutput)
}

// Description of the collection.
func (o LookupServerlessCollectionResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerlessCollectionResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o LookupServerlessCollectionResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerlessCollectionResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The ARN of the Amazon Web Services KMS key used to encrypt the collection.
func (o LookupServerlessCollectionResultOutput) KmsKeyArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerlessCollectionResult) *string { return v.KmsKeyArn }).(pulumi.StringPtrOutput)
}

// Date the Collection was last modified.
func (o LookupServerlessCollectionResultOutput) LastModifiedDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerlessCollectionResult) *string { return v.LastModifiedDate }).(pulumi.StringPtrOutput)
}

func (o LookupServerlessCollectionResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerlessCollectionResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A map of tags to assign to the collection.
func (o LookupServerlessCollectionResultOutput) Tags() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupServerlessCollectionResult) map[string]string { return v.Tags }).(pulumi.StringMapOutput)
}

// Type of collection.
func (o LookupServerlessCollectionResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServerlessCollectionResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServerlessCollectionResultOutput{})
}
