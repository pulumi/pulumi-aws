// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Data source for managing AWS Cognito IDP (Identity Provider) User Groups.
//
// ## Example Usage
//
// ### Basic Usage
//
// <!--Start PulumiCodeChooser -->
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/cognito"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := cognito.GetUserGroups(ctx, &cognito.GetUserGroupsArgs{
//				UserPoolId: "us-west-2_aaaaaaaaa",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// <!--End PulumiCodeChooser -->
func GetUserGroups(ctx *pulumi.Context, args *GetUserGroupsArgs, opts ...pulumi.InvokeOption) (*GetUserGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetUserGroupsResult
	err := ctx.Invoke("aws:cognito/getUserGroups:getUserGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserGroups.
type GetUserGroupsArgs struct {
	// List of groups. See `groups` below.
	Groups []GetUserGroupsGroup `pulumi:"groups"`
	// User pool the client belongs to.
	UserPoolId string `pulumi:"userPoolId"`
}

// A collection of values returned by getUserGroups.
type GetUserGroupsResult struct {
	// List of groups. See `groups` below.
	Groups []GetUserGroupsGroup `pulumi:"groups"`
	// User pool identifier.
	Id         string `pulumi:"id"`
	UserPoolId string `pulumi:"userPoolId"`
}

func GetUserGroupsOutput(ctx *pulumi.Context, args GetUserGroupsOutputArgs, opts ...pulumi.InvokeOption) GetUserGroupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetUserGroupsResult, error) {
			args := v.(GetUserGroupsArgs)
			r, err := GetUserGroups(ctx, &args, opts...)
			var s GetUserGroupsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetUserGroupsResultOutput)
}

// A collection of arguments for invoking getUserGroups.
type GetUserGroupsOutputArgs struct {
	// List of groups. See `groups` below.
	Groups GetUserGroupsGroupArrayInput `pulumi:"groups"`
	// User pool the client belongs to.
	UserPoolId pulumi.StringInput `pulumi:"userPoolId"`
}

func (GetUserGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getUserGroups.
type GetUserGroupsResultOutput struct{ *pulumi.OutputState }

func (GetUserGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupsResult)(nil)).Elem()
}

func (o GetUserGroupsResultOutput) ToGetUserGroupsResultOutput() GetUserGroupsResultOutput {
	return o
}

func (o GetUserGroupsResultOutput) ToGetUserGroupsResultOutputWithContext(ctx context.Context) GetUserGroupsResultOutput {
	return o
}

// List of groups. See `groups` below.
func (o GetUserGroupsResultOutput) Groups() GetUserGroupsGroupArrayOutput {
	return o.ApplyT(func(v GetUserGroupsResult) []GetUserGroupsGroup { return v.Groups }).(GetUserGroupsGroupArrayOutput)
}

// User pool identifier.
func (o GetUserGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetUserGroupsResultOutput) UserPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupsResult) string { return v.UserPoolId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUserGroupsResultOutput{})
}
