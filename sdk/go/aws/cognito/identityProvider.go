// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a Cognito User Identity Provider resource.
type IdentityProvider struct {
	s *pulumi.ResourceState
}

// NewIdentityProvider registers a new resource with the given unique name, arguments, and options.
func NewIdentityProvider(ctx *pulumi.Context,
	name string, args *IdentityProviderArgs, opts ...pulumi.ResourceOpt) (*IdentityProvider, error) {
	if args == nil || args.ProviderDetails == nil {
		return nil, errors.New("missing required argument 'ProviderDetails'")
	}
	if args == nil || args.ProviderName == nil {
		return nil, errors.New("missing required argument 'ProviderName'")
	}
	if args == nil || args.ProviderType == nil {
		return nil, errors.New("missing required argument 'ProviderType'")
	}
	if args == nil || args.UserPoolId == nil {
		return nil, errors.New("missing required argument 'UserPoolId'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["attributeMapping"] = nil
		inputs["idpIdentifiers"] = nil
		inputs["providerDetails"] = nil
		inputs["providerName"] = nil
		inputs["providerType"] = nil
		inputs["userPoolId"] = nil
	} else {
		inputs["attributeMapping"] = args.AttributeMapping
		inputs["idpIdentifiers"] = args.IdpIdentifiers
		inputs["providerDetails"] = args.ProviderDetails
		inputs["providerName"] = args.ProviderName
		inputs["providerType"] = args.ProviderType
		inputs["userPoolId"] = args.UserPoolId
	}
	s, err := ctx.RegisterResource("aws:cognito/identityProvider:IdentityProvider", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &IdentityProvider{s: s}, nil
}

// GetIdentityProvider gets an existing IdentityProvider resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityProvider(ctx *pulumi.Context,
	name string, id pulumi.ID, state *IdentityProviderState, opts ...pulumi.ResourceOpt) (*IdentityProvider, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["attributeMapping"] = state.AttributeMapping
		inputs["idpIdentifiers"] = state.IdpIdentifiers
		inputs["providerDetails"] = state.ProviderDetails
		inputs["providerName"] = state.ProviderName
		inputs["providerType"] = state.ProviderType
		inputs["userPoolId"] = state.UserPoolId
	}
	s, err := ctx.ReadResource("aws:cognito/identityProvider:IdentityProvider", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &IdentityProvider{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *IdentityProvider) URN() *pulumi.URNOutput {
	return r.s.URN
}

// ID is this resource's unique identifier assigned by its provider.
func (r *IdentityProvider) ID() *pulumi.IDOutput {
	return r.s.ID
}

// The map of attribute mapping of user pool attributes. [AttributeMapping in AWS API documentation](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateIdentityProvider.html#CognitoUserPools-CreateIdentityProvider-request-AttributeMapping)
func (r *IdentityProvider) AttributeMapping() *pulumi.MapOutput {
	return (*pulumi.MapOutput)(r.s.State["attributeMapping"])
}

// The list of identity providers.
func (r *IdentityProvider) IdpIdentifiers() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["idpIdentifiers"])
}

// The map of identity details, such as access token
func (r *IdentityProvider) ProviderDetails() *pulumi.MapOutput {
	return (*pulumi.MapOutput)(r.s.State["providerDetails"])
}

// The provider name
func (r *IdentityProvider) ProviderName() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["providerName"])
}

// The provider type.  [See AWS API for valid values](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateIdentityProvider.html#CognitoUserPools-CreateIdentityProvider-request-ProviderType)
func (r *IdentityProvider) ProviderType() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["providerType"])
}

// The user pool id
func (r *IdentityProvider) UserPoolId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["userPoolId"])
}

// Input properties used for looking up and filtering IdentityProvider resources.
type IdentityProviderState struct {
	// The map of attribute mapping of user pool attributes. [AttributeMapping in AWS API documentation](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateIdentityProvider.html#CognitoUserPools-CreateIdentityProvider-request-AttributeMapping)
	AttributeMapping interface{}
	// The list of identity providers.
	IdpIdentifiers interface{}
	// The map of identity details, such as access token
	ProviderDetails interface{}
	// The provider name
	ProviderName interface{}
	// The provider type.  [See AWS API for valid values](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateIdentityProvider.html#CognitoUserPools-CreateIdentityProvider-request-ProviderType)
	ProviderType interface{}
	// The user pool id
	UserPoolId interface{}
}

// The set of arguments for constructing a IdentityProvider resource.
type IdentityProviderArgs struct {
	// The map of attribute mapping of user pool attributes. [AttributeMapping in AWS API documentation](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateIdentityProvider.html#CognitoUserPools-CreateIdentityProvider-request-AttributeMapping)
	AttributeMapping interface{}
	// The list of identity providers.
	IdpIdentifiers interface{}
	// The map of identity details, such as access token
	ProviderDetails interface{}
	// The provider name
	ProviderName interface{}
	// The provider type.  [See AWS API for valid values](https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateIdentityProvider.html#CognitoUserPools-CreateIdentityProvider-request-ProviderType)
	ProviderType interface{}
	// The user pool id
	UserPoolId interface{}
}
