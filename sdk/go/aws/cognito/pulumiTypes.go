// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type IdentityPoolCognitoIdentityProvider struct {
	// The client ID for the Amazon Cognito Identity User Pool.
	ClientId *string `pulumi:"clientId"`
	// The provider name for an Amazon Cognito Identity User Pool.
	ProviderName *string `pulumi:"providerName"`
	// Whether server-side token validation is enabled for the identity provider’s token or not.
	ServerSideTokenCheck *bool `pulumi:"serverSideTokenCheck"`
}

// IdentityPoolCognitoIdentityProviderInput is an input type that accepts IdentityPoolCognitoIdentityProviderArgs and IdentityPoolCognitoIdentityProviderOutput values.
// You can construct a concrete instance of `IdentityPoolCognitoIdentityProviderInput` via:
//
//	IdentityPoolCognitoIdentityProviderArgs{...}
type IdentityPoolCognitoIdentityProviderInput interface {
	pulumi.Input

	ToIdentityPoolCognitoIdentityProviderOutput() IdentityPoolCognitoIdentityProviderOutput
	ToIdentityPoolCognitoIdentityProviderOutputWithContext(context.Context) IdentityPoolCognitoIdentityProviderOutput
}

type IdentityPoolCognitoIdentityProviderArgs struct {
	// The client ID for the Amazon Cognito Identity User Pool.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The provider name for an Amazon Cognito Identity User Pool.
	ProviderName pulumi.StringPtrInput `pulumi:"providerName"`
	// Whether server-side token validation is enabled for the identity provider’s token or not.
	ServerSideTokenCheck pulumi.BoolPtrInput `pulumi:"serverSideTokenCheck"`
}

func (IdentityPoolCognitoIdentityProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolCognitoIdentityProvider)(nil)).Elem()
}

func (i IdentityPoolCognitoIdentityProviderArgs) ToIdentityPoolCognitoIdentityProviderOutput() IdentityPoolCognitoIdentityProviderOutput {
	return i.ToIdentityPoolCognitoIdentityProviderOutputWithContext(context.Background())
}

func (i IdentityPoolCognitoIdentityProviderArgs) ToIdentityPoolCognitoIdentityProviderOutputWithContext(ctx context.Context) IdentityPoolCognitoIdentityProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolCognitoIdentityProviderOutput)
}

// IdentityPoolCognitoIdentityProviderArrayInput is an input type that accepts IdentityPoolCognitoIdentityProviderArray and IdentityPoolCognitoIdentityProviderArrayOutput values.
// You can construct a concrete instance of `IdentityPoolCognitoIdentityProviderArrayInput` via:
//
//	IdentityPoolCognitoIdentityProviderArray{ IdentityPoolCognitoIdentityProviderArgs{...} }
type IdentityPoolCognitoIdentityProviderArrayInput interface {
	pulumi.Input

	ToIdentityPoolCognitoIdentityProviderArrayOutput() IdentityPoolCognitoIdentityProviderArrayOutput
	ToIdentityPoolCognitoIdentityProviderArrayOutputWithContext(context.Context) IdentityPoolCognitoIdentityProviderArrayOutput
}

type IdentityPoolCognitoIdentityProviderArray []IdentityPoolCognitoIdentityProviderInput

func (IdentityPoolCognitoIdentityProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityPoolCognitoIdentityProvider)(nil)).Elem()
}

func (i IdentityPoolCognitoIdentityProviderArray) ToIdentityPoolCognitoIdentityProviderArrayOutput() IdentityPoolCognitoIdentityProviderArrayOutput {
	return i.ToIdentityPoolCognitoIdentityProviderArrayOutputWithContext(context.Background())
}

func (i IdentityPoolCognitoIdentityProviderArray) ToIdentityPoolCognitoIdentityProviderArrayOutputWithContext(ctx context.Context) IdentityPoolCognitoIdentityProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolCognitoIdentityProviderArrayOutput)
}

type IdentityPoolCognitoIdentityProviderOutput struct{ *pulumi.OutputState }

func (IdentityPoolCognitoIdentityProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolCognitoIdentityProvider)(nil)).Elem()
}

func (o IdentityPoolCognitoIdentityProviderOutput) ToIdentityPoolCognitoIdentityProviderOutput() IdentityPoolCognitoIdentityProviderOutput {
	return o
}

func (o IdentityPoolCognitoIdentityProviderOutput) ToIdentityPoolCognitoIdentityProviderOutputWithContext(ctx context.Context) IdentityPoolCognitoIdentityProviderOutput {
	return o
}

// The client ID for the Amazon Cognito Identity User Pool.
func (o IdentityPoolCognitoIdentityProviderOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPoolCognitoIdentityProvider) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The provider name for an Amazon Cognito Identity User Pool.
func (o IdentityPoolCognitoIdentityProviderOutput) ProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPoolCognitoIdentityProvider) *string { return v.ProviderName }).(pulumi.StringPtrOutput)
}

// Whether server-side token validation is enabled for the identity provider’s token or not.
func (o IdentityPoolCognitoIdentityProviderOutput) ServerSideTokenCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IdentityPoolCognitoIdentityProvider) *bool { return v.ServerSideTokenCheck }).(pulumi.BoolPtrOutput)
}

type IdentityPoolCognitoIdentityProviderArrayOutput struct{ *pulumi.OutputState }

func (IdentityPoolCognitoIdentityProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityPoolCognitoIdentityProvider)(nil)).Elem()
}

func (o IdentityPoolCognitoIdentityProviderArrayOutput) ToIdentityPoolCognitoIdentityProviderArrayOutput() IdentityPoolCognitoIdentityProviderArrayOutput {
	return o
}

func (o IdentityPoolCognitoIdentityProviderArrayOutput) ToIdentityPoolCognitoIdentityProviderArrayOutputWithContext(ctx context.Context) IdentityPoolCognitoIdentityProviderArrayOutput {
	return o
}

func (o IdentityPoolCognitoIdentityProviderArrayOutput) Index(i pulumi.IntInput) IdentityPoolCognitoIdentityProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityPoolCognitoIdentityProvider {
		return vs[0].([]IdentityPoolCognitoIdentityProvider)[vs[1].(int)]
	}).(IdentityPoolCognitoIdentityProviderOutput)
}

type IdentityPoolRoleAttachmentRoleMapping struct {
	// Specifies the action to be taken if either no rules match the claim value for the Rules type, or there is no cognito:preferred_role claim and there are multiple cognito:roles matches for the Token type. `Required` if you specify Token or Rules as the Type.
	AmbiguousRoleResolution *string `pulumi:"ambiguousRoleResolution"`
	// A string identifying the identity provider, for example, "graph.facebook.com" or "cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id". Depends on `cognitoIdentityProviders` set on `cognito.IdentityPool` resource or a `cognito.IdentityProvider` resource.
	IdentityProvider string `pulumi:"identityProvider"`
	// The Rules Configuration to be used for mapping users to roles. You can specify up to 25 rules per identity provider. Rules are evaluated in order. The first one to match specifies the role.
	MappingRules []IdentityPoolRoleAttachmentRoleMappingMappingRule `pulumi:"mappingRules"`
	// The role mapping type.
	Type string `pulumi:"type"`
}

// IdentityPoolRoleAttachmentRoleMappingInput is an input type that accepts IdentityPoolRoleAttachmentRoleMappingArgs and IdentityPoolRoleAttachmentRoleMappingOutput values.
// You can construct a concrete instance of `IdentityPoolRoleAttachmentRoleMappingInput` via:
//
//	IdentityPoolRoleAttachmentRoleMappingArgs{...}
type IdentityPoolRoleAttachmentRoleMappingInput interface {
	pulumi.Input

	ToIdentityPoolRoleAttachmentRoleMappingOutput() IdentityPoolRoleAttachmentRoleMappingOutput
	ToIdentityPoolRoleAttachmentRoleMappingOutputWithContext(context.Context) IdentityPoolRoleAttachmentRoleMappingOutput
}

type IdentityPoolRoleAttachmentRoleMappingArgs struct {
	// Specifies the action to be taken if either no rules match the claim value for the Rules type, or there is no cognito:preferred_role claim and there are multiple cognito:roles matches for the Token type. `Required` if you specify Token or Rules as the Type.
	AmbiguousRoleResolution pulumi.StringPtrInput `pulumi:"ambiguousRoleResolution"`
	// A string identifying the identity provider, for example, "graph.facebook.com" or "cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id". Depends on `cognitoIdentityProviders` set on `cognito.IdentityPool` resource or a `cognito.IdentityProvider` resource.
	IdentityProvider pulumi.StringInput `pulumi:"identityProvider"`
	// The Rules Configuration to be used for mapping users to roles. You can specify up to 25 rules per identity provider. Rules are evaluated in order. The first one to match specifies the role.
	MappingRules IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayInput `pulumi:"mappingRules"`
	// The role mapping type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IdentityPoolRoleAttachmentRoleMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolRoleAttachmentRoleMapping)(nil)).Elem()
}

func (i IdentityPoolRoleAttachmentRoleMappingArgs) ToIdentityPoolRoleAttachmentRoleMappingOutput() IdentityPoolRoleAttachmentRoleMappingOutput {
	return i.ToIdentityPoolRoleAttachmentRoleMappingOutputWithContext(context.Background())
}

func (i IdentityPoolRoleAttachmentRoleMappingArgs) ToIdentityPoolRoleAttachmentRoleMappingOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRoleMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolRoleAttachmentRoleMappingOutput)
}

// IdentityPoolRoleAttachmentRoleMappingArrayInput is an input type that accepts IdentityPoolRoleAttachmentRoleMappingArray and IdentityPoolRoleAttachmentRoleMappingArrayOutput values.
// You can construct a concrete instance of `IdentityPoolRoleAttachmentRoleMappingArrayInput` via:
//
//	IdentityPoolRoleAttachmentRoleMappingArray{ IdentityPoolRoleAttachmentRoleMappingArgs{...} }
type IdentityPoolRoleAttachmentRoleMappingArrayInput interface {
	pulumi.Input

	ToIdentityPoolRoleAttachmentRoleMappingArrayOutput() IdentityPoolRoleAttachmentRoleMappingArrayOutput
	ToIdentityPoolRoleAttachmentRoleMappingArrayOutputWithContext(context.Context) IdentityPoolRoleAttachmentRoleMappingArrayOutput
}

type IdentityPoolRoleAttachmentRoleMappingArray []IdentityPoolRoleAttachmentRoleMappingInput

func (IdentityPoolRoleAttachmentRoleMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityPoolRoleAttachmentRoleMapping)(nil)).Elem()
}

func (i IdentityPoolRoleAttachmentRoleMappingArray) ToIdentityPoolRoleAttachmentRoleMappingArrayOutput() IdentityPoolRoleAttachmentRoleMappingArrayOutput {
	return i.ToIdentityPoolRoleAttachmentRoleMappingArrayOutputWithContext(context.Background())
}

func (i IdentityPoolRoleAttachmentRoleMappingArray) ToIdentityPoolRoleAttachmentRoleMappingArrayOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRoleMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolRoleAttachmentRoleMappingArrayOutput)
}

type IdentityPoolRoleAttachmentRoleMappingOutput struct{ *pulumi.OutputState }

func (IdentityPoolRoleAttachmentRoleMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolRoleAttachmentRoleMapping)(nil)).Elem()
}

func (o IdentityPoolRoleAttachmentRoleMappingOutput) ToIdentityPoolRoleAttachmentRoleMappingOutput() IdentityPoolRoleAttachmentRoleMappingOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRoleMappingOutput) ToIdentityPoolRoleAttachmentRoleMappingOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRoleMappingOutput {
	return o
}

// Specifies the action to be taken if either no rules match the claim value for the Rules type, or there is no cognito:preferred_role claim and there are multiple cognito:roles matches for the Token type. `Required` if you specify Token or Rules as the Type.
func (o IdentityPoolRoleAttachmentRoleMappingOutput) AmbiguousRoleResolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentRoleMapping) *string { return v.AmbiguousRoleResolution }).(pulumi.StringPtrOutput)
}

// A string identifying the identity provider, for example, "graph.facebook.com" or "cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id". Depends on `cognitoIdentityProviders` set on `cognito.IdentityPool` resource or a `cognito.IdentityProvider` resource.
func (o IdentityPoolRoleAttachmentRoleMappingOutput) IdentityProvider() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentRoleMapping) string { return v.IdentityProvider }).(pulumi.StringOutput)
}

// The Rules Configuration to be used for mapping users to roles. You can specify up to 25 rules per identity provider. Rules are evaluated in order. The first one to match specifies the role.
func (o IdentityPoolRoleAttachmentRoleMappingOutput) MappingRules() IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentRoleMapping) []IdentityPoolRoleAttachmentRoleMappingMappingRule {
		return v.MappingRules
	}).(IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput)
}

// The role mapping type.
func (o IdentityPoolRoleAttachmentRoleMappingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentRoleMapping) string { return v.Type }).(pulumi.StringOutput)
}

type IdentityPoolRoleAttachmentRoleMappingArrayOutput struct{ *pulumi.OutputState }

func (IdentityPoolRoleAttachmentRoleMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityPoolRoleAttachmentRoleMapping)(nil)).Elem()
}

func (o IdentityPoolRoleAttachmentRoleMappingArrayOutput) ToIdentityPoolRoleAttachmentRoleMappingArrayOutput() IdentityPoolRoleAttachmentRoleMappingArrayOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRoleMappingArrayOutput) ToIdentityPoolRoleAttachmentRoleMappingArrayOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRoleMappingArrayOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRoleMappingArrayOutput) Index(i pulumi.IntInput) IdentityPoolRoleAttachmentRoleMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityPoolRoleAttachmentRoleMapping {
		return vs[0].([]IdentityPoolRoleAttachmentRoleMapping)[vs[1].(int)]
	}).(IdentityPoolRoleAttachmentRoleMappingOutput)
}

type IdentityPoolRoleAttachmentRoleMappingMappingRule struct {
	// The claim name that must be present in the token, for example, "isAdmin" or "paid".
	Claim string `pulumi:"claim"`
	// The match condition that specifies how closely the claim value in the IdP token must match Value.
	MatchType string `pulumi:"matchType"`
	// The role ARN.
	RoleArn string `pulumi:"roleArn"`
	// A brief string that the claim must match, for example, "paid" or "yes".
	Value string `pulumi:"value"`
}

// IdentityPoolRoleAttachmentRoleMappingMappingRuleInput is an input type that accepts IdentityPoolRoleAttachmentRoleMappingMappingRuleArgs and IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput values.
// You can construct a concrete instance of `IdentityPoolRoleAttachmentRoleMappingMappingRuleInput` via:
//
//	IdentityPoolRoleAttachmentRoleMappingMappingRuleArgs{...}
type IdentityPoolRoleAttachmentRoleMappingMappingRuleInput interface {
	pulumi.Input

	ToIdentityPoolRoleAttachmentRoleMappingMappingRuleOutput() IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput
	ToIdentityPoolRoleAttachmentRoleMappingMappingRuleOutputWithContext(context.Context) IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput
}

type IdentityPoolRoleAttachmentRoleMappingMappingRuleArgs struct {
	// The claim name that must be present in the token, for example, "isAdmin" or "paid".
	Claim pulumi.StringInput `pulumi:"claim"`
	// The match condition that specifies how closely the claim value in the IdP token must match Value.
	MatchType pulumi.StringInput `pulumi:"matchType"`
	// The role ARN.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// A brief string that the claim must match, for example, "paid" or "yes".
	Value pulumi.StringInput `pulumi:"value"`
}

func (IdentityPoolRoleAttachmentRoleMappingMappingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolRoleAttachmentRoleMappingMappingRule)(nil)).Elem()
}

func (i IdentityPoolRoleAttachmentRoleMappingMappingRuleArgs) ToIdentityPoolRoleAttachmentRoleMappingMappingRuleOutput() IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput {
	return i.ToIdentityPoolRoleAttachmentRoleMappingMappingRuleOutputWithContext(context.Background())
}

func (i IdentityPoolRoleAttachmentRoleMappingMappingRuleArgs) ToIdentityPoolRoleAttachmentRoleMappingMappingRuleOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput)
}

// IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayInput is an input type that accepts IdentityPoolRoleAttachmentRoleMappingMappingRuleArray and IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput values.
// You can construct a concrete instance of `IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayInput` via:
//
//	IdentityPoolRoleAttachmentRoleMappingMappingRuleArray{ IdentityPoolRoleAttachmentRoleMappingMappingRuleArgs{...} }
type IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayInput interface {
	pulumi.Input

	ToIdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput() IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput
	ToIdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutputWithContext(context.Context) IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput
}

type IdentityPoolRoleAttachmentRoleMappingMappingRuleArray []IdentityPoolRoleAttachmentRoleMappingMappingRuleInput

func (IdentityPoolRoleAttachmentRoleMappingMappingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityPoolRoleAttachmentRoleMappingMappingRule)(nil)).Elem()
}

func (i IdentityPoolRoleAttachmentRoleMappingMappingRuleArray) ToIdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput() IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput {
	return i.ToIdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutputWithContext(context.Background())
}

func (i IdentityPoolRoleAttachmentRoleMappingMappingRuleArray) ToIdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput)
}

type IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput struct{ *pulumi.OutputState }

func (IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolRoleAttachmentRoleMappingMappingRule)(nil)).Elem()
}

func (o IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput) ToIdentityPoolRoleAttachmentRoleMappingMappingRuleOutput() IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput) ToIdentityPoolRoleAttachmentRoleMappingMappingRuleOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput {
	return o
}

// The claim name that must be present in the token, for example, "isAdmin" or "paid".
func (o IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput) Claim() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentRoleMappingMappingRule) string { return v.Claim }).(pulumi.StringOutput)
}

// The match condition that specifies how closely the claim value in the IdP token must match Value.
func (o IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput) MatchType() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentRoleMappingMappingRule) string { return v.MatchType }).(pulumi.StringOutput)
}

// The role ARN.
func (o IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentRoleMappingMappingRule) string { return v.RoleArn }).(pulumi.StringOutput)
}

// A brief string that the claim must match, for example, "paid" or "yes".
func (o IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentRoleMappingMappingRule) string { return v.Value }).(pulumi.StringOutput)
}

type IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput struct{ *pulumi.OutputState }

func (IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityPoolRoleAttachmentRoleMappingMappingRule)(nil)).Elem()
}

func (o IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput) ToIdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput() IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput) ToIdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput) Index(i pulumi.IntInput) IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityPoolRoleAttachmentRoleMappingMappingRule {
		return vs[0].([]IdentityPoolRoleAttachmentRoleMappingMappingRule)[vs[1].(int)]
	}).(IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput)
}

type ManagedUserPoolClientAnalyticsConfiguration struct {
	// Application ARN for an Amazon Pinpoint application. Conflicts with `externalId` and `roleArn`.
	ApplicationArn *string `pulumi:"applicationArn"`
	// Application ID for an Amazon Pinpoint application.
	ApplicationId *string `pulumi:"applicationId"`
	// ID for the Analytics Configuration. Conflicts with `applicationArn`.
	ExternalId *string `pulumi:"externalId"`
	// ARN of an IAM role that authorizes Amazon Cognito to publish events to Amazon Pinpoint analytics. Conflicts with `applicationArn`.
	RoleArn *string `pulumi:"roleArn"`
	// If set to `true`, Amazon Cognito will include user data in the events it publishes to Amazon Pinpoint analytics.
	UserDataShared *bool `pulumi:"userDataShared"`
}

// ManagedUserPoolClientAnalyticsConfigurationInput is an input type that accepts ManagedUserPoolClientAnalyticsConfigurationArgs and ManagedUserPoolClientAnalyticsConfigurationOutput values.
// You can construct a concrete instance of `ManagedUserPoolClientAnalyticsConfigurationInput` via:
//
//	ManagedUserPoolClientAnalyticsConfigurationArgs{...}
type ManagedUserPoolClientAnalyticsConfigurationInput interface {
	pulumi.Input

	ToManagedUserPoolClientAnalyticsConfigurationOutput() ManagedUserPoolClientAnalyticsConfigurationOutput
	ToManagedUserPoolClientAnalyticsConfigurationOutputWithContext(context.Context) ManagedUserPoolClientAnalyticsConfigurationOutput
}

type ManagedUserPoolClientAnalyticsConfigurationArgs struct {
	// Application ARN for an Amazon Pinpoint application. Conflicts with `externalId` and `roleArn`.
	ApplicationArn pulumi.StringPtrInput `pulumi:"applicationArn"`
	// Application ID for an Amazon Pinpoint application.
	ApplicationId pulumi.StringPtrInput `pulumi:"applicationId"`
	// ID for the Analytics Configuration. Conflicts with `applicationArn`.
	ExternalId pulumi.StringPtrInput `pulumi:"externalId"`
	// ARN of an IAM role that authorizes Amazon Cognito to publish events to Amazon Pinpoint analytics. Conflicts with `applicationArn`.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// If set to `true`, Amazon Cognito will include user data in the events it publishes to Amazon Pinpoint analytics.
	UserDataShared pulumi.BoolPtrInput `pulumi:"userDataShared"`
}

func (ManagedUserPoolClientAnalyticsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedUserPoolClientAnalyticsConfiguration)(nil)).Elem()
}

func (i ManagedUserPoolClientAnalyticsConfigurationArgs) ToManagedUserPoolClientAnalyticsConfigurationOutput() ManagedUserPoolClientAnalyticsConfigurationOutput {
	return i.ToManagedUserPoolClientAnalyticsConfigurationOutputWithContext(context.Background())
}

func (i ManagedUserPoolClientAnalyticsConfigurationArgs) ToManagedUserPoolClientAnalyticsConfigurationOutputWithContext(ctx context.Context) ManagedUserPoolClientAnalyticsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedUserPoolClientAnalyticsConfigurationOutput)
}

func (i ManagedUserPoolClientAnalyticsConfigurationArgs) ToManagedUserPoolClientAnalyticsConfigurationPtrOutput() ManagedUserPoolClientAnalyticsConfigurationPtrOutput {
	return i.ToManagedUserPoolClientAnalyticsConfigurationPtrOutputWithContext(context.Background())
}

func (i ManagedUserPoolClientAnalyticsConfigurationArgs) ToManagedUserPoolClientAnalyticsConfigurationPtrOutputWithContext(ctx context.Context) ManagedUserPoolClientAnalyticsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedUserPoolClientAnalyticsConfigurationOutput).ToManagedUserPoolClientAnalyticsConfigurationPtrOutputWithContext(ctx)
}

// ManagedUserPoolClientAnalyticsConfigurationPtrInput is an input type that accepts ManagedUserPoolClientAnalyticsConfigurationArgs, ManagedUserPoolClientAnalyticsConfigurationPtr and ManagedUserPoolClientAnalyticsConfigurationPtrOutput values.
// You can construct a concrete instance of `ManagedUserPoolClientAnalyticsConfigurationPtrInput` via:
//
//	        ManagedUserPoolClientAnalyticsConfigurationArgs{...}
//
//	or:
//
//	        nil
type ManagedUserPoolClientAnalyticsConfigurationPtrInput interface {
	pulumi.Input

	ToManagedUserPoolClientAnalyticsConfigurationPtrOutput() ManagedUserPoolClientAnalyticsConfigurationPtrOutput
	ToManagedUserPoolClientAnalyticsConfigurationPtrOutputWithContext(context.Context) ManagedUserPoolClientAnalyticsConfigurationPtrOutput
}

type managedUserPoolClientAnalyticsConfigurationPtrType ManagedUserPoolClientAnalyticsConfigurationArgs

func ManagedUserPoolClientAnalyticsConfigurationPtr(v *ManagedUserPoolClientAnalyticsConfigurationArgs) ManagedUserPoolClientAnalyticsConfigurationPtrInput {
	return (*managedUserPoolClientAnalyticsConfigurationPtrType)(v)
}

func (*managedUserPoolClientAnalyticsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedUserPoolClientAnalyticsConfiguration)(nil)).Elem()
}

func (i *managedUserPoolClientAnalyticsConfigurationPtrType) ToManagedUserPoolClientAnalyticsConfigurationPtrOutput() ManagedUserPoolClientAnalyticsConfigurationPtrOutput {
	return i.ToManagedUserPoolClientAnalyticsConfigurationPtrOutputWithContext(context.Background())
}

func (i *managedUserPoolClientAnalyticsConfigurationPtrType) ToManagedUserPoolClientAnalyticsConfigurationPtrOutputWithContext(ctx context.Context) ManagedUserPoolClientAnalyticsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedUserPoolClientAnalyticsConfigurationPtrOutput)
}

type ManagedUserPoolClientAnalyticsConfigurationOutput struct{ *pulumi.OutputState }

func (ManagedUserPoolClientAnalyticsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedUserPoolClientAnalyticsConfiguration)(nil)).Elem()
}

func (o ManagedUserPoolClientAnalyticsConfigurationOutput) ToManagedUserPoolClientAnalyticsConfigurationOutput() ManagedUserPoolClientAnalyticsConfigurationOutput {
	return o
}

func (o ManagedUserPoolClientAnalyticsConfigurationOutput) ToManagedUserPoolClientAnalyticsConfigurationOutputWithContext(ctx context.Context) ManagedUserPoolClientAnalyticsConfigurationOutput {
	return o
}

func (o ManagedUserPoolClientAnalyticsConfigurationOutput) ToManagedUserPoolClientAnalyticsConfigurationPtrOutput() ManagedUserPoolClientAnalyticsConfigurationPtrOutput {
	return o.ToManagedUserPoolClientAnalyticsConfigurationPtrOutputWithContext(context.Background())
}

func (o ManagedUserPoolClientAnalyticsConfigurationOutput) ToManagedUserPoolClientAnalyticsConfigurationPtrOutputWithContext(ctx context.Context) ManagedUserPoolClientAnalyticsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedUserPoolClientAnalyticsConfiguration) *ManagedUserPoolClientAnalyticsConfiguration {
		return &v
	}).(ManagedUserPoolClientAnalyticsConfigurationPtrOutput)
}

// Application ARN for an Amazon Pinpoint application. Conflicts with `externalId` and `roleArn`.
func (o ManagedUserPoolClientAnalyticsConfigurationOutput) ApplicationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedUserPoolClientAnalyticsConfiguration) *string { return v.ApplicationArn }).(pulumi.StringPtrOutput)
}

// Application ID for an Amazon Pinpoint application.
func (o ManagedUserPoolClientAnalyticsConfigurationOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedUserPoolClientAnalyticsConfiguration) *string { return v.ApplicationId }).(pulumi.StringPtrOutput)
}

// ID for the Analytics Configuration. Conflicts with `applicationArn`.
func (o ManagedUserPoolClientAnalyticsConfigurationOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedUserPoolClientAnalyticsConfiguration) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

// ARN of an IAM role that authorizes Amazon Cognito to publish events to Amazon Pinpoint analytics. Conflicts with `applicationArn`.
func (o ManagedUserPoolClientAnalyticsConfigurationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedUserPoolClientAnalyticsConfiguration) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// If set to `true`, Amazon Cognito will include user data in the events it publishes to Amazon Pinpoint analytics.
func (o ManagedUserPoolClientAnalyticsConfigurationOutput) UserDataShared() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ManagedUserPoolClientAnalyticsConfiguration) *bool { return v.UserDataShared }).(pulumi.BoolPtrOutput)
}

type ManagedUserPoolClientAnalyticsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ManagedUserPoolClientAnalyticsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedUserPoolClientAnalyticsConfiguration)(nil)).Elem()
}

func (o ManagedUserPoolClientAnalyticsConfigurationPtrOutput) ToManagedUserPoolClientAnalyticsConfigurationPtrOutput() ManagedUserPoolClientAnalyticsConfigurationPtrOutput {
	return o
}

func (o ManagedUserPoolClientAnalyticsConfigurationPtrOutput) ToManagedUserPoolClientAnalyticsConfigurationPtrOutputWithContext(ctx context.Context) ManagedUserPoolClientAnalyticsConfigurationPtrOutput {
	return o
}

func (o ManagedUserPoolClientAnalyticsConfigurationPtrOutput) Elem() ManagedUserPoolClientAnalyticsConfigurationOutput {
	return o.ApplyT(func(v *ManagedUserPoolClientAnalyticsConfiguration) ManagedUserPoolClientAnalyticsConfiguration {
		if v != nil {
			return *v
		}
		var ret ManagedUserPoolClientAnalyticsConfiguration
		return ret
	}).(ManagedUserPoolClientAnalyticsConfigurationOutput)
}

// Application ARN for an Amazon Pinpoint application. Conflicts with `externalId` and `roleArn`.
func (o ManagedUserPoolClientAnalyticsConfigurationPtrOutput) ApplicationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedUserPoolClientAnalyticsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationArn
	}).(pulumi.StringPtrOutput)
}

// Application ID for an Amazon Pinpoint application.
func (o ManagedUserPoolClientAnalyticsConfigurationPtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedUserPoolClientAnalyticsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

// ID for the Analytics Configuration. Conflicts with `applicationArn`.
func (o ManagedUserPoolClientAnalyticsConfigurationPtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedUserPoolClientAnalyticsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

// ARN of an IAM role that authorizes Amazon Cognito to publish events to Amazon Pinpoint analytics. Conflicts with `applicationArn`.
func (o ManagedUserPoolClientAnalyticsConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedUserPoolClientAnalyticsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// If set to `true`, Amazon Cognito will include user data in the events it publishes to Amazon Pinpoint analytics.
func (o ManagedUserPoolClientAnalyticsConfigurationPtrOutput) UserDataShared() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ManagedUserPoolClientAnalyticsConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.UserDataShared
	}).(pulumi.BoolPtrOutput)
}

type ManagedUserPoolClientTokenValidityUnits struct {
	// Time unit in for the value in `accessTokenValidity`, defaults to `hours`.
	AccessToken *string `pulumi:"accessToken"`
	// Time unit in for the value in `idTokenValidity`, defaults to `hours`.
	IdToken *string `pulumi:"idToken"`
	// Time unit in for the value in `refreshTokenValidity`, defaults to `days`.
	RefreshToken *string `pulumi:"refreshToken"`
}

// ManagedUserPoolClientTokenValidityUnitsInput is an input type that accepts ManagedUserPoolClientTokenValidityUnitsArgs and ManagedUserPoolClientTokenValidityUnitsOutput values.
// You can construct a concrete instance of `ManagedUserPoolClientTokenValidityUnitsInput` via:
//
//	ManagedUserPoolClientTokenValidityUnitsArgs{...}
type ManagedUserPoolClientTokenValidityUnitsInput interface {
	pulumi.Input

	ToManagedUserPoolClientTokenValidityUnitsOutput() ManagedUserPoolClientTokenValidityUnitsOutput
	ToManagedUserPoolClientTokenValidityUnitsOutputWithContext(context.Context) ManagedUserPoolClientTokenValidityUnitsOutput
}

type ManagedUserPoolClientTokenValidityUnitsArgs struct {
	// Time unit in for the value in `accessTokenValidity`, defaults to `hours`.
	AccessToken pulumi.StringPtrInput `pulumi:"accessToken"`
	// Time unit in for the value in `idTokenValidity`, defaults to `hours`.
	IdToken pulumi.StringPtrInput `pulumi:"idToken"`
	// Time unit in for the value in `refreshTokenValidity`, defaults to `days`.
	RefreshToken pulumi.StringPtrInput `pulumi:"refreshToken"`
}

func (ManagedUserPoolClientTokenValidityUnitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedUserPoolClientTokenValidityUnits)(nil)).Elem()
}

func (i ManagedUserPoolClientTokenValidityUnitsArgs) ToManagedUserPoolClientTokenValidityUnitsOutput() ManagedUserPoolClientTokenValidityUnitsOutput {
	return i.ToManagedUserPoolClientTokenValidityUnitsOutputWithContext(context.Background())
}

func (i ManagedUserPoolClientTokenValidityUnitsArgs) ToManagedUserPoolClientTokenValidityUnitsOutputWithContext(ctx context.Context) ManagedUserPoolClientTokenValidityUnitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedUserPoolClientTokenValidityUnitsOutput)
}

func (i ManagedUserPoolClientTokenValidityUnitsArgs) ToManagedUserPoolClientTokenValidityUnitsPtrOutput() ManagedUserPoolClientTokenValidityUnitsPtrOutput {
	return i.ToManagedUserPoolClientTokenValidityUnitsPtrOutputWithContext(context.Background())
}

func (i ManagedUserPoolClientTokenValidityUnitsArgs) ToManagedUserPoolClientTokenValidityUnitsPtrOutputWithContext(ctx context.Context) ManagedUserPoolClientTokenValidityUnitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedUserPoolClientTokenValidityUnitsOutput).ToManagedUserPoolClientTokenValidityUnitsPtrOutputWithContext(ctx)
}

// ManagedUserPoolClientTokenValidityUnitsPtrInput is an input type that accepts ManagedUserPoolClientTokenValidityUnitsArgs, ManagedUserPoolClientTokenValidityUnitsPtr and ManagedUserPoolClientTokenValidityUnitsPtrOutput values.
// You can construct a concrete instance of `ManagedUserPoolClientTokenValidityUnitsPtrInput` via:
//
//	        ManagedUserPoolClientTokenValidityUnitsArgs{...}
//
//	or:
//
//	        nil
type ManagedUserPoolClientTokenValidityUnitsPtrInput interface {
	pulumi.Input

	ToManagedUserPoolClientTokenValidityUnitsPtrOutput() ManagedUserPoolClientTokenValidityUnitsPtrOutput
	ToManagedUserPoolClientTokenValidityUnitsPtrOutputWithContext(context.Context) ManagedUserPoolClientTokenValidityUnitsPtrOutput
}

type managedUserPoolClientTokenValidityUnitsPtrType ManagedUserPoolClientTokenValidityUnitsArgs

func ManagedUserPoolClientTokenValidityUnitsPtr(v *ManagedUserPoolClientTokenValidityUnitsArgs) ManagedUserPoolClientTokenValidityUnitsPtrInput {
	return (*managedUserPoolClientTokenValidityUnitsPtrType)(v)
}

func (*managedUserPoolClientTokenValidityUnitsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedUserPoolClientTokenValidityUnits)(nil)).Elem()
}

func (i *managedUserPoolClientTokenValidityUnitsPtrType) ToManagedUserPoolClientTokenValidityUnitsPtrOutput() ManagedUserPoolClientTokenValidityUnitsPtrOutput {
	return i.ToManagedUserPoolClientTokenValidityUnitsPtrOutputWithContext(context.Background())
}

func (i *managedUserPoolClientTokenValidityUnitsPtrType) ToManagedUserPoolClientTokenValidityUnitsPtrOutputWithContext(ctx context.Context) ManagedUserPoolClientTokenValidityUnitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedUserPoolClientTokenValidityUnitsPtrOutput)
}

type ManagedUserPoolClientTokenValidityUnitsOutput struct{ *pulumi.OutputState }

func (ManagedUserPoolClientTokenValidityUnitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ManagedUserPoolClientTokenValidityUnits)(nil)).Elem()
}

func (o ManagedUserPoolClientTokenValidityUnitsOutput) ToManagedUserPoolClientTokenValidityUnitsOutput() ManagedUserPoolClientTokenValidityUnitsOutput {
	return o
}

func (o ManagedUserPoolClientTokenValidityUnitsOutput) ToManagedUserPoolClientTokenValidityUnitsOutputWithContext(ctx context.Context) ManagedUserPoolClientTokenValidityUnitsOutput {
	return o
}

func (o ManagedUserPoolClientTokenValidityUnitsOutput) ToManagedUserPoolClientTokenValidityUnitsPtrOutput() ManagedUserPoolClientTokenValidityUnitsPtrOutput {
	return o.ToManagedUserPoolClientTokenValidityUnitsPtrOutputWithContext(context.Background())
}

func (o ManagedUserPoolClientTokenValidityUnitsOutput) ToManagedUserPoolClientTokenValidityUnitsPtrOutputWithContext(ctx context.Context) ManagedUserPoolClientTokenValidityUnitsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ManagedUserPoolClientTokenValidityUnits) *ManagedUserPoolClientTokenValidityUnits {
		return &v
	}).(ManagedUserPoolClientTokenValidityUnitsPtrOutput)
}

// Time unit in for the value in `accessTokenValidity`, defaults to `hours`.
func (o ManagedUserPoolClientTokenValidityUnitsOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedUserPoolClientTokenValidityUnits) *string { return v.AccessToken }).(pulumi.StringPtrOutput)
}

// Time unit in for the value in `idTokenValidity`, defaults to `hours`.
func (o ManagedUserPoolClientTokenValidityUnitsOutput) IdToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedUserPoolClientTokenValidityUnits) *string { return v.IdToken }).(pulumi.StringPtrOutput)
}

// Time unit in for the value in `refreshTokenValidity`, defaults to `days`.
func (o ManagedUserPoolClientTokenValidityUnitsOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ManagedUserPoolClientTokenValidityUnits) *string { return v.RefreshToken }).(pulumi.StringPtrOutput)
}

type ManagedUserPoolClientTokenValidityUnitsPtrOutput struct{ *pulumi.OutputState }

func (ManagedUserPoolClientTokenValidityUnitsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedUserPoolClientTokenValidityUnits)(nil)).Elem()
}

func (o ManagedUserPoolClientTokenValidityUnitsPtrOutput) ToManagedUserPoolClientTokenValidityUnitsPtrOutput() ManagedUserPoolClientTokenValidityUnitsPtrOutput {
	return o
}

func (o ManagedUserPoolClientTokenValidityUnitsPtrOutput) ToManagedUserPoolClientTokenValidityUnitsPtrOutputWithContext(ctx context.Context) ManagedUserPoolClientTokenValidityUnitsPtrOutput {
	return o
}

func (o ManagedUserPoolClientTokenValidityUnitsPtrOutput) Elem() ManagedUserPoolClientTokenValidityUnitsOutput {
	return o.ApplyT(func(v *ManagedUserPoolClientTokenValidityUnits) ManagedUserPoolClientTokenValidityUnits {
		if v != nil {
			return *v
		}
		var ret ManagedUserPoolClientTokenValidityUnits
		return ret
	}).(ManagedUserPoolClientTokenValidityUnitsOutput)
}

// Time unit in for the value in `accessTokenValidity`, defaults to `hours`.
func (o ManagedUserPoolClientTokenValidityUnitsPtrOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedUserPoolClientTokenValidityUnits) *string {
		if v == nil {
			return nil
		}
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// Time unit in for the value in `idTokenValidity`, defaults to `hours`.
func (o ManagedUserPoolClientTokenValidityUnitsPtrOutput) IdToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedUserPoolClientTokenValidityUnits) *string {
		if v == nil {
			return nil
		}
		return v.IdToken
	}).(pulumi.StringPtrOutput)
}

// Time unit in for the value in `refreshTokenValidity`, defaults to `days`.
func (o ManagedUserPoolClientTokenValidityUnitsPtrOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedUserPoolClientTokenValidityUnits) *string {
		if v == nil {
			return nil
		}
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

type ResourceServerScope struct {
	// The scope description.
	ScopeDescription string `pulumi:"scopeDescription"`
	// The scope name.
	ScopeName string `pulumi:"scopeName"`
}

// ResourceServerScopeInput is an input type that accepts ResourceServerScopeArgs and ResourceServerScopeOutput values.
// You can construct a concrete instance of `ResourceServerScopeInput` via:
//
//	ResourceServerScopeArgs{...}
type ResourceServerScopeInput interface {
	pulumi.Input

	ToResourceServerScopeOutput() ResourceServerScopeOutput
	ToResourceServerScopeOutputWithContext(context.Context) ResourceServerScopeOutput
}

type ResourceServerScopeArgs struct {
	// The scope description.
	ScopeDescription pulumi.StringInput `pulumi:"scopeDescription"`
	// The scope name.
	ScopeName pulumi.StringInput `pulumi:"scopeName"`
}

func (ResourceServerScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceServerScope)(nil)).Elem()
}

func (i ResourceServerScopeArgs) ToResourceServerScopeOutput() ResourceServerScopeOutput {
	return i.ToResourceServerScopeOutputWithContext(context.Background())
}

func (i ResourceServerScopeArgs) ToResourceServerScopeOutputWithContext(ctx context.Context) ResourceServerScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceServerScopeOutput)
}

// ResourceServerScopeArrayInput is an input type that accepts ResourceServerScopeArray and ResourceServerScopeArrayOutput values.
// You can construct a concrete instance of `ResourceServerScopeArrayInput` via:
//
//	ResourceServerScopeArray{ ResourceServerScopeArgs{...} }
type ResourceServerScopeArrayInput interface {
	pulumi.Input

	ToResourceServerScopeArrayOutput() ResourceServerScopeArrayOutput
	ToResourceServerScopeArrayOutputWithContext(context.Context) ResourceServerScopeArrayOutput
}

type ResourceServerScopeArray []ResourceServerScopeInput

func (ResourceServerScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceServerScope)(nil)).Elem()
}

func (i ResourceServerScopeArray) ToResourceServerScopeArrayOutput() ResourceServerScopeArrayOutput {
	return i.ToResourceServerScopeArrayOutputWithContext(context.Background())
}

func (i ResourceServerScopeArray) ToResourceServerScopeArrayOutputWithContext(ctx context.Context) ResourceServerScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceServerScopeArrayOutput)
}

type ResourceServerScopeOutput struct{ *pulumi.OutputState }

func (ResourceServerScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceServerScope)(nil)).Elem()
}

func (o ResourceServerScopeOutput) ToResourceServerScopeOutput() ResourceServerScopeOutput {
	return o
}

func (o ResourceServerScopeOutput) ToResourceServerScopeOutputWithContext(ctx context.Context) ResourceServerScopeOutput {
	return o
}

// The scope description.
func (o ResourceServerScopeOutput) ScopeDescription() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceServerScope) string { return v.ScopeDescription }).(pulumi.StringOutput)
}

// The scope name.
func (o ResourceServerScopeOutput) ScopeName() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceServerScope) string { return v.ScopeName }).(pulumi.StringOutput)
}

type ResourceServerScopeArrayOutput struct{ *pulumi.OutputState }

func (ResourceServerScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceServerScope)(nil)).Elem()
}

func (o ResourceServerScopeArrayOutput) ToResourceServerScopeArrayOutput() ResourceServerScopeArrayOutput {
	return o
}

func (o ResourceServerScopeArrayOutput) ToResourceServerScopeArrayOutputWithContext(ctx context.Context) ResourceServerScopeArrayOutput {
	return o
}

func (o ResourceServerScopeArrayOutput) Index(i pulumi.IntInput) ResourceServerScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceServerScope {
		return vs[0].([]ResourceServerScope)[vs[1].(int)]
	}).(ResourceServerScopeOutput)
}

type RiskConfigurationAccountTakeoverRiskConfiguration struct {
	// Account takeover risk configuration actions. See details below.
	Actions RiskConfigurationAccountTakeoverRiskConfigurationActions `pulumi:"actions"`
	// The notify configuration used to construct email notifications. See details below.
	NotifyConfiguration RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfiguration `pulumi:"notifyConfiguration"`
}

// RiskConfigurationAccountTakeoverRiskConfigurationInput is an input type that accepts RiskConfigurationAccountTakeoverRiskConfigurationArgs and RiskConfigurationAccountTakeoverRiskConfigurationOutput values.
// You can construct a concrete instance of `RiskConfigurationAccountTakeoverRiskConfigurationInput` via:
//
//	RiskConfigurationAccountTakeoverRiskConfigurationArgs{...}
type RiskConfigurationAccountTakeoverRiskConfigurationInput interface {
	pulumi.Input

	ToRiskConfigurationAccountTakeoverRiskConfigurationOutput() RiskConfigurationAccountTakeoverRiskConfigurationOutput
	ToRiskConfigurationAccountTakeoverRiskConfigurationOutputWithContext(context.Context) RiskConfigurationAccountTakeoverRiskConfigurationOutput
}

type RiskConfigurationAccountTakeoverRiskConfigurationArgs struct {
	// Account takeover risk configuration actions. See details below.
	Actions RiskConfigurationAccountTakeoverRiskConfigurationActionsInput `pulumi:"actions"`
	// The notify configuration used to construct email notifications. See details below.
	NotifyConfiguration RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationInput `pulumi:"notifyConfiguration"`
}

func (RiskConfigurationAccountTakeoverRiskConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfiguration)(nil)).Elem()
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationOutput() RiskConfigurationAccountTakeoverRiskConfigurationOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationOutputWithContext(context.Background())
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationOutput)
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationPtrOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationPtrOutputWithContext(context.Background())
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationOutput).ToRiskConfigurationAccountTakeoverRiskConfigurationPtrOutputWithContext(ctx)
}

// RiskConfigurationAccountTakeoverRiskConfigurationPtrInput is an input type that accepts RiskConfigurationAccountTakeoverRiskConfigurationArgs, RiskConfigurationAccountTakeoverRiskConfigurationPtr and RiskConfigurationAccountTakeoverRiskConfigurationPtrOutput values.
// You can construct a concrete instance of `RiskConfigurationAccountTakeoverRiskConfigurationPtrInput` via:
//
//	        RiskConfigurationAccountTakeoverRiskConfigurationArgs{...}
//
//	or:
//
//	        nil
type RiskConfigurationAccountTakeoverRiskConfigurationPtrInput interface {
	pulumi.Input

	ToRiskConfigurationAccountTakeoverRiskConfigurationPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationPtrOutput
	ToRiskConfigurationAccountTakeoverRiskConfigurationPtrOutputWithContext(context.Context) RiskConfigurationAccountTakeoverRiskConfigurationPtrOutput
}

type riskConfigurationAccountTakeoverRiskConfigurationPtrType RiskConfigurationAccountTakeoverRiskConfigurationArgs

func RiskConfigurationAccountTakeoverRiskConfigurationPtr(v *RiskConfigurationAccountTakeoverRiskConfigurationArgs) RiskConfigurationAccountTakeoverRiskConfigurationPtrInput {
	return (*riskConfigurationAccountTakeoverRiskConfigurationPtrType)(v)
}

func (*riskConfigurationAccountTakeoverRiskConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskConfigurationAccountTakeoverRiskConfiguration)(nil)).Elem()
}

func (i *riskConfigurationAccountTakeoverRiskConfigurationPtrType) ToRiskConfigurationAccountTakeoverRiskConfigurationPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationPtrOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationPtrOutputWithContext(context.Background())
}

func (i *riskConfigurationAccountTakeoverRiskConfigurationPtrType) ToRiskConfigurationAccountTakeoverRiskConfigurationPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationPtrOutput)
}

type RiskConfigurationAccountTakeoverRiskConfigurationOutput struct{ *pulumi.OutputState }

func (RiskConfigurationAccountTakeoverRiskConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfiguration)(nil)).Elem()
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationOutput() RiskConfigurationAccountTakeoverRiskConfigurationOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationPtrOutput {
	return o.ToRiskConfigurationAccountTakeoverRiskConfigurationPtrOutputWithContext(context.Background())
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RiskConfigurationAccountTakeoverRiskConfiguration) *RiskConfigurationAccountTakeoverRiskConfiguration {
		return &v
	}).(RiskConfigurationAccountTakeoverRiskConfigurationPtrOutput)
}

// Account takeover risk configuration actions. See details below.
func (o RiskConfigurationAccountTakeoverRiskConfigurationOutput) Actions() RiskConfigurationAccountTakeoverRiskConfigurationActionsOutput {
	return o.ApplyT(func(v RiskConfigurationAccountTakeoverRiskConfiguration) RiskConfigurationAccountTakeoverRiskConfigurationActions {
		return v.Actions
	}).(RiskConfigurationAccountTakeoverRiskConfigurationActionsOutput)
}

// The notify configuration used to construct email notifications. See details below.
func (o RiskConfigurationAccountTakeoverRiskConfigurationOutput) NotifyConfiguration() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput {
	return o.ApplyT(func(v RiskConfigurationAccountTakeoverRiskConfiguration) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfiguration {
		return v.NotifyConfiguration
	}).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput)
}

type RiskConfigurationAccountTakeoverRiskConfigurationPtrOutput struct{ *pulumi.OutputState }

func (RiskConfigurationAccountTakeoverRiskConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskConfigurationAccountTakeoverRiskConfiguration)(nil)).Elem()
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationPtrOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationPtrOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationPtrOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationPtrOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationPtrOutput) Elem() RiskConfigurationAccountTakeoverRiskConfigurationOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfiguration) RiskConfigurationAccountTakeoverRiskConfiguration {
		if v != nil {
			return *v
		}
		var ret RiskConfigurationAccountTakeoverRiskConfiguration
		return ret
	}).(RiskConfigurationAccountTakeoverRiskConfigurationOutput)
}

// Account takeover risk configuration actions. See details below.
func (o RiskConfigurationAccountTakeoverRiskConfigurationPtrOutput) Actions() RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfiguration) *RiskConfigurationAccountTakeoverRiskConfigurationActions {
		if v == nil {
			return nil
		}
		return &v.Actions
	}).(RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput)
}

// The notify configuration used to construct email notifications. See details below.
func (o RiskConfigurationAccountTakeoverRiskConfigurationPtrOutput) NotifyConfiguration() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfiguration) *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfiguration {
		if v == nil {
			return nil
		}
		return &v.NotifyConfiguration
	}).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput)
}

type RiskConfigurationAccountTakeoverRiskConfigurationActions struct {
	// Action to take for a high risk. See action block below.
	HighAction *RiskConfigurationAccountTakeoverRiskConfigurationActionsHighAction `pulumi:"highAction"`
	// Action to take for a low risk. See action block below.
	LowAction *RiskConfigurationAccountTakeoverRiskConfigurationActionsLowAction `pulumi:"lowAction"`
	// Action to take for a medium risk. See action block below.
	MediumAction *RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumAction `pulumi:"mediumAction"`
}

// RiskConfigurationAccountTakeoverRiskConfigurationActionsInput is an input type that accepts RiskConfigurationAccountTakeoverRiskConfigurationActionsArgs and RiskConfigurationAccountTakeoverRiskConfigurationActionsOutput values.
// You can construct a concrete instance of `RiskConfigurationAccountTakeoverRiskConfigurationActionsInput` via:
//
//	RiskConfigurationAccountTakeoverRiskConfigurationActionsArgs{...}
type RiskConfigurationAccountTakeoverRiskConfigurationActionsInput interface {
	pulumi.Input

	ToRiskConfigurationAccountTakeoverRiskConfigurationActionsOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsOutput
	ToRiskConfigurationAccountTakeoverRiskConfigurationActionsOutputWithContext(context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsOutput
}

type RiskConfigurationAccountTakeoverRiskConfigurationActionsArgs struct {
	// Action to take for a high risk. See action block below.
	HighAction RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrInput `pulumi:"highAction"`
	// Action to take for a low risk. See action block below.
	LowAction RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrInput `pulumi:"lowAction"`
	// Action to take for a medium risk. See action block below.
	MediumAction RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrInput `pulumi:"mediumAction"`
}

func (RiskConfigurationAccountTakeoverRiskConfigurationActionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationActions)(nil)).Elem()
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationActionsArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationActionsOutputWithContext(context.Background())
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationActionsArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationActionsOutput)
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationActionsArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutputWithContext(context.Background())
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationActionsArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationActionsOutput).ToRiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutputWithContext(ctx)
}

// RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrInput is an input type that accepts RiskConfigurationAccountTakeoverRiskConfigurationActionsArgs, RiskConfigurationAccountTakeoverRiskConfigurationActionsPtr and RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput values.
// You can construct a concrete instance of `RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrInput` via:
//
//	        RiskConfigurationAccountTakeoverRiskConfigurationActionsArgs{...}
//
//	or:
//
//	        nil
type RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrInput interface {
	pulumi.Input

	ToRiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput
	ToRiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutputWithContext(context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput
}

type riskConfigurationAccountTakeoverRiskConfigurationActionsPtrType RiskConfigurationAccountTakeoverRiskConfigurationActionsArgs

func RiskConfigurationAccountTakeoverRiskConfigurationActionsPtr(v *RiskConfigurationAccountTakeoverRiskConfigurationActionsArgs) RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrInput {
	return (*riskConfigurationAccountTakeoverRiskConfigurationActionsPtrType)(v)
}

func (*riskConfigurationAccountTakeoverRiskConfigurationActionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskConfigurationAccountTakeoverRiskConfigurationActions)(nil)).Elem()
}

func (i *riskConfigurationAccountTakeoverRiskConfigurationActionsPtrType) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutputWithContext(context.Background())
}

func (i *riskConfigurationAccountTakeoverRiskConfigurationActionsPtrType) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput)
}

type RiskConfigurationAccountTakeoverRiskConfigurationActionsOutput struct{ *pulumi.OutputState }

func (RiskConfigurationAccountTakeoverRiskConfigurationActionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationActions)(nil)).Elem()
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput {
	return o.ToRiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutputWithContext(context.Background())
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RiskConfigurationAccountTakeoverRiskConfigurationActions) *RiskConfigurationAccountTakeoverRiskConfigurationActions {
		return &v
	}).(RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput)
}

// Action to take for a high risk. See action block below.
func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsOutput) HighAction() RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput {
	return o.ApplyT(func(v RiskConfigurationAccountTakeoverRiskConfigurationActions) *RiskConfigurationAccountTakeoverRiskConfigurationActionsHighAction {
		return v.HighAction
	}).(RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput)
}

// Action to take for a low risk. See action block below.
func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsOutput) LowAction() RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput {
	return o.ApplyT(func(v RiskConfigurationAccountTakeoverRiskConfigurationActions) *RiskConfigurationAccountTakeoverRiskConfigurationActionsLowAction {
		return v.LowAction
	}).(RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput)
}

// Action to take for a medium risk. See action block below.
func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsOutput) MediumAction() RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput {
	return o.ApplyT(func(v RiskConfigurationAccountTakeoverRiskConfigurationActions) *RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumAction {
		return v.MediumAction
	}).(RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput)
}

type RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput struct{ *pulumi.OutputState }

func (RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskConfigurationAccountTakeoverRiskConfigurationActions)(nil)).Elem()
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput) Elem() RiskConfigurationAccountTakeoverRiskConfigurationActionsOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationActions) RiskConfigurationAccountTakeoverRiskConfigurationActions {
		if v != nil {
			return *v
		}
		var ret RiskConfigurationAccountTakeoverRiskConfigurationActions
		return ret
	}).(RiskConfigurationAccountTakeoverRiskConfigurationActionsOutput)
}

// Action to take for a high risk. See action block below.
func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput) HighAction() RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationActions) *RiskConfigurationAccountTakeoverRiskConfigurationActionsHighAction {
		if v == nil {
			return nil
		}
		return v.HighAction
	}).(RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput)
}

// Action to take for a low risk. See action block below.
func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput) LowAction() RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationActions) *RiskConfigurationAccountTakeoverRiskConfigurationActionsLowAction {
		if v == nil {
			return nil
		}
		return v.LowAction
	}).(RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput)
}

// Action to take for a medium risk. See action block below.
func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput) MediumAction() RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationActions) *RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumAction {
		if v == nil {
			return nil
		}
		return v.MediumAction
	}).(RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput)
}

type RiskConfigurationAccountTakeoverRiskConfigurationActionsHighAction struct {
	// The action to take in response to the account takeover action. Valid values are `BLOCK`, `MFA_IF_CONFIGURED`, `MFA_REQUIRED` and `NO_ACTION`.
	EventAction string `pulumi:"eventAction"`
	Notify      bool   `pulumi:"notify"`
}

// RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionInput is an input type that accepts RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionArgs and RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutput values.
// You can construct a concrete instance of `RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionInput` via:
//
//	RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionArgs{...}
type RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionInput interface {
	pulumi.Input

	ToRiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutput
	ToRiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutputWithContext(context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutput
}

type RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionArgs struct {
	// The action to take in response to the account takeover action. Valid values are `BLOCK`, `MFA_IF_CONFIGURED`, `MFA_REQUIRED` and `NO_ACTION`.
	EventAction pulumi.StringInput `pulumi:"eventAction"`
	Notify      pulumi.BoolInput   `pulumi:"notify"`
}

func (RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationActionsHighAction)(nil)).Elem()
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutputWithContext(context.Background())
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutput)
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutputWithContext(context.Background())
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutput).ToRiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutputWithContext(ctx)
}

// RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrInput is an input type that accepts RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionArgs, RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtr and RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput values.
// You can construct a concrete instance of `RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrInput` via:
//
//	        RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionArgs{...}
//
//	or:
//
//	        nil
type RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrInput interface {
	pulumi.Input

	ToRiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput
	ToRiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutputWithContext(context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput
}

type riskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrType RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionArgs

func RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtr(v *RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionArgs) RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrInput {
	return (*riskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrType)(v)
}

func (*riskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskConfigurationAccountTakeoverRiskConfigurationActionsHighAction)(nil)).Elem()
}

func (i *riskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrType) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutputWithContext(context.Background())
}

func (i *riskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrType) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput)
}

type RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutput struct{ *pulumi.OutputState }

func (RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationActionsHighAction)(nil)).Elem()
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput {
	return o.ToRiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutputWithContext(context.Background())
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RiskConfigurationAccountTakeoverRiskConfigurationActionsHighAction) *RiskConfigurationAccountTakeoverRiskConfigurationActionsHighAction {
		return &v
	}).(RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput)
}

// The action to take in response to the account takeover action. Valid values are `BLOCK`, `MFA_IF_CONFIGURED`, `MFA_REQUIRED` and `NO_ACTION`.
func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutput) EventAction() pulumi.StringOutput {
	return o.ApplyT(func(v RiskConfigurationAccountTakeoverRiskConfigurationActionsHighAction) string {
		return v.EventAction
	}).(pulumi.StringOutput)
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutput) Notify() pulumi.BoolOutput {
	return o.ApplyT(func(v RiskConfigurationAccountTakeoverRiskConfigurationActionsHighAction) bool { return v.Notify }).(pulumi.BoolOutput)
}

type RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput struct{ *pulumi.OutputState }

func (RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskConfigurationAccountTakeoverRiskConfigurationActionsHighAction)(nil)).Elem()
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput) Elem() RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationActionsHighAction) RiskConfigurationAccountTakeoverRiskConfigurationActionsHighAction {
		if v != nil {
			return *v
		}
		var ret RiskConfigurationAccountTakeoverRiskConfigurationActionsHighAction
		return ret
	}).(RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutput)
}

// The action to take in response to the account takeover action. Valid values are `BLOCK`, `MFA_IF_CONFIGURED`, `MFA_REQUIRED` and `NO_ACTION`.
func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput) EventAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationActionsHighAction) *string {
		if v == nil {
			return nil
		}
		return &v.EventAction
	}).(pulumi.StringPtrOutput)
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput) Notify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationActionsHighAction) *bool {
		if v == nil {
			return nil
		}
		return &v.Notify
	}).(pulumi.BoolPtrOutput)
}

type RiskConfigurationAccountTakeoverRiskConfigurationActionsLowAction struct {
	// The action to take in response to the account takeover action. Valid values are `BLOCK`, `MFA_IF_CONFIGURED`, `MFA_REQUIRED` and `NO_ACTION`.
	EventAction string `pulumi:"eventAction"`
	Notify      bool   `pulumi:"notify"`
}

// RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionInput is an input type that accepts RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionArgs and RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutput values.
// You can construct a concrete instance of `RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionInput` via:
//
//	RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionArgs{...}
type RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionInput interface {
	pulumi.Input

	ToRiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutput
	ToRiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutputWithContext(context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutput
}

type RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionArgs struct {
	// The action to take in response to the account takeover action. Valid values are `BLOCK`, `MFA_IF_CONFIGURED`, `MFA_REQUIRED` and `NO_ACTION`.
	EventAction pulumi.StringInput `pulumi:"eventAction"`
	Notify      pulumi.BoolInput   `pulumi:"notify"`
}

func (RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationActionsLowAction)(nil)).Elem()
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutputWithContext(context.Background())
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutput)
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutputWithContext(context.Background())
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutput).ToRiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutputWithContext(ctx)
}

// RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrInput is an input type that accepts RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionArgs, RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtr and RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput values.
// You can construct a concrete instance of `RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrInput` via:
//
//	        RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionArgs{...}
//
//	or:
//
//	        nil
type RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrInput interface {
	pulumi.Input

	ToRiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput
	ToRiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutputWithContext(context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput
}

type riskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrType RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionArgs

func RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtr(v *RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionArgs) RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrInput {
	return (*riskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrType)(v)
}

func (*riskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskConfigurationAccountTakeoverRiskConfigurationActionsLowAction)(nil)).Elem()
}

func (i *riskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrType) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutputWithContext(context.Background())
}

func (i *riskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrType) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput)
}

type RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutput struct{ *pulumi.OutputState }

func (RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationActionsLowAction)(nil)).Elem()
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput {
	return o.ToRiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutputWithContext(context.Background())
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RiskConfigurationAccountTakeoverRiskConfigurationActionsLowAction) *RiskConfigurationAccountTakeoverRiskConfigurationActionsLowAction {
		return &v
	}).(RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput)
}

// The action to take in response to the account takeover action. Valid values are `BLOCK`, `MFA_IF_CONFIGURED`, `MFA_REQUIRED` and `NO_ACTION`.
func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutput) EventAction() pulumi.StringOutput {
	return o.ApplyT(func(v RiskConfigurationAccountTakeoverRiskConfigurationActionsLowAction) string { return v.EventAction }).(pulumi.StringOutput)
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutput) Notify() pulumi.BoolOutput {
	return o.ApplyT(func(v RiskConfigurationAccountTakeoverRiskConfigurationActionsLowAction) bool { return v.Notify }).(pulumi.BoolOutput)
}

type RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput struct{ *pulumi.OutputState }

func (RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskConfigurationAccountTakeoverRiskConfigurationActionsLowAction)(nil)).Elem()
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput) Elem() RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationActionsLowAction) RiskConfigurationAccountTakeoverRiskConfigurationActionsLowAction {
		if v != nil {
			return *v
		}
		var ret RiskConfigurationAccountTakeoverRiskConfigurationActionsLowAction
		return ret
	}).(RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutput)
}

// The action to take in response to the account takeover action. Valid values are `BLOCK`, `MFA_IF_CONFIGURED`, `MFA_REQUIRED` and `NO_ACTION`.
func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput) EventAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationActionsLowAction) *string {
		if v == nil {
			return nil
		}
		return &v.EventAction
	}).(pulumi.StringPtrOutput)
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput) Notify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationActionsLowAction) *bool {
		if v == nil {
			return nil
		}
		return &v.Notify
	}).(pulumi.BoolPtrOutput)
}

type RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumAction struct {
	// The action to take in response to the account takeover action. Valid values are `BLOCK`, `MFA_IF_CONFIGURED`, `MFA_REQUIRED` and `NO_ACTION`.
	EventAction string `pulumi:"eventAction"`
	Notify      bool   `pulumi:"notify"`
}

// RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionInput is an input type that accepts RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionArgs and RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutput values.
// You can construct a concrete instance of `RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionInput` via:
//
//	RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionArgs{...}
type RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionInput interface {
	pulumi.Input

	ToRiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutput
	ToRiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutputWithContext(context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutput
}

type RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionArgs struct {
	// The action to take in response to the account takeover action. Valid values are `BLOCK`, `MFA_IF_CONFIGURED`, `MFA_REQUIRED` and `NO_ACTION`.
	EventAction pulumi.StringInput `pulumi:"eventAction"`
	Notify      pulumi.BoolInput   `pulumi:"notify"`
}

func (RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumAction)(nil)).Elem()
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutputWithContext(context.Background())
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutput)
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutputWithContext(context.Background())
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutput).ToRiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutputWithContext(ctx)
}

// RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrInput is an input type that accepts RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionArgs, RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtr and RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput values.
// You can construct a concrete instance of `RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrInput` via:
//
//	        RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionArgs{...}
//
//	or:
//
//	        nil
type RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrInput interface {
	pulumi.Input

	ToRiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput
	ToRiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutputWithContext(context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput
}

type riskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrType RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionArgs

func RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtr(v *RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionArgs) RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrInput {
	return (*riskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrType)(v)
}

func (*riskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumAction)(nil)).Elem()
}

func (i *riskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrType) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutputWithContext(context.Background())
}

func (i *riskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrType) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput)
}

type RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutput struct{ *pulumi.OutputState }

func (RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumAction)(nil)).Elem()
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput {
	return o.ToRiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutputWithContext(context.Background())
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumAction) *RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumAction {
		return &v
	}).(RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput)
}

// The action to take in response to the account takeover action. Valid values are `BLOCK`, `MFA_IF_CONFIGURED`, `MFA_REQUIRED` and `NO_ACTION`.
func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutput) EventAction() pulumi.StringOutput {
	return o.ApplyT(func(v RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumAction) string {
		return v.EventAction
	}).(pulumi.StringOutput)
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutput) Notify() pulumi.BoolOutput {
	return o.ApplyT(func(v RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumAction) bool { return v.Notify }).(pulumi.BoolOutput)
}

type RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput struct{ *pulumi.OutputState }

func (RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumAction)(nil)).Elem()
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput) Elem() RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumAction) RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumAction {
		if v != nil {
			return *v
		}
		var ret RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumAction
		return ret
	}).(RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutput)
}

// The action to take in response to the account takeover action. Valid values are `BLOCK`, `MFA_IF_CONFIGURED`, `MFA_REQUIRED` and `NO_ACTION`.
func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput) EventAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumAction) *string {
		if v == nil {
			return nil
		}
		return &v.EventAction
	}).(pulumi.StringPtrOutput)
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput) Notify() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumAction) *bool {
		if v == nil {
			return nil
		}
		return &v.Notify
	}).(pulumi.BoolPtrOutput)
}

type RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfiguration struct {
	// Email template used when a detected risk event is blocked. See notify email type below.
	BlockEmail *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmail `pulumi:"blockEmail"`
	// The email address that is sending the email. The address must be either individually verified with Amazon Simple Email Service, or from a domain that has been verified with Amazon SES.
	From *string `pulumi:"from"`
	// The multi-factor authentication (MFA) email template used when MFA is challenged as part of a detected risk. See notify email type below.
	MfaEmail *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmail `pulumi:"mfaEmail"`
	// The email template used when a detected risk event is allowed. See notify email type below.
	NoActionEmail *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmail `pulumi:"noActionEmail"`
	// The destination to which the receiver of an email should reply to.
	ReplyTo *string `pulumi:"replyTo"`
	// The Amazon Resource Name (ARN) of the identity that is associated with the sending authorization policy. This identity permits Amazon Cognito to send for the email address specified in the From parameter.
	SourceArn string `pulumi:"sourceArn"`
}

// RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationInput is an input type that accepts RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationArgs and RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput values.
// You can construct a concrete instance of `RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationInput` via:
//
//	RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationArgs{...}
type RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationInput interface {
	pulumi.Input

	ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput
	ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutputWithContext(context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput
}

type RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationArgs struct {
	// Email template used when a detected risk event is blocked. See notify email type below.
	BlockEmail RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrInput `pulumi:"blockEmail"`
	// The email address that is sending the email. The address must be either individually verified with Amazon Simple Email Service, or from a domain that has been verified with Amazon SES.
	From pulumi.StringPtrInput `pulumi:"from"`
	// The multi-factor authentication (MFA) email template used when MFA is challenged as part of a detected risk. See notify email type below.
	MfaEmail RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrInput `pulumi:"mfaEmail"`
	// The email template used when a detected risk event is allowed. See notify email type below.
	NoActionEmail RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrInput `pulumi:"noActionEmail"`
	// The destination to which the receiver of an email should reply to.
	ReplyTo pulumi.StringPtrInput `pulumi:"replyTo"`
	// The Amazon Resource Name (ARN) of the identity that is associated with the sending authorization policy. This identity permits Amazon Cognito to send for the email address specified in the From parameter.
	SourceArn pulumi.StringInput `pulumi:"sourceArn"`
}

func (RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfiguration)(nil)).Elem()
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutputWithContext(context.Background())
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput)
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutputWithContext(context.Background())
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput).ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutputWithContext(ctx)
}

// RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrInput is an input type that accepts RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationArgs, RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtr and RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput values.
// You can construct a concrete instance of `RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrInput` via:
//
//	        RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationArgs{...}
//
//	or:
//
//	        nil
type RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrInput interface {
	pulumi.Input

	ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput
	ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutputWithContext(context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput
}

type riskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrType RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationArgs

func RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtr(v *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationArgs) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrInput {
	return (*riskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrType)(v)
}

func (*riskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfiguration)(nil)).Elem()
}

func (i *riskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrType) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutputWithContext(context.Background())
}

func (i *riskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrType) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput)
}

type RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput struct{ *pulumi.OutputState }

func (RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfiguration)(nil)).Elem()
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput {
	return o.ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutputWithContext(context.Background())
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfiguration) *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfiguration {
		return &v
	}).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput)
}

// Email template used when a detected risk event is blocked. See notify email type below.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput) BlockEmail() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput {
	return o.ApplyT(func(v RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfiguration) *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmail {
		return v.BlockEmail
	}).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput)
}

// The email address that is sending the email. The address must be either individually verified with Amazon Simple Email Service, or from a domain that has been verified with Amazon SES.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfiguration) *string { return v.From }).(pulumi.StringPtrOutput)
}

// The multi-factor authentication (MFA) email template used when MFA is challenged as part of a detected risk. See notify email type below.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput) MfaEmail() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput {
	return o.ApplyT(func(v RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfiguration) *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmail {
		return v.MfaEmail
	}).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput)
}

// The email template used when a detected risk event is allowed. See notify email type below.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput) NoActionEmail() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput {
	return o.ApplyT(func(v RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfiguration) *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmail {
		return v.NoActionEmail
	}).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput)
}

// The destination to which the receiver of an email should reply to.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput) ReplyTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfiguration) *string { return v.ReplyTo }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the identity that is associated with the sending authorization policy. This identity permits Amazon Cognito to send for the email address specified in the From parameter.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput) SourceArn() pulumi.StringOutput {
	return o.ApplyT(func(v RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfiguration) string {
		return v.SourceArn
	}).(pulumi.StringOutput)
}

type RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput struct{ *pulumi.OutputState }

func (RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfiguration)(nil)).Elem()
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput) Elem() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfiguration) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfiguration {
		if v != nil {
			return *v
		}
		var ret RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfiguration
		return ret
	}).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput)
}

// Email template used when a detected risk event is blocked. See notify email type below.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput) BlockEmail() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfiguration) *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmail {
		if v == nil {
			return nil
		}
		return v.BlockEmail
	}).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput)
}

// The email address that is sending the email. The address must be either individually verified with Amazon Simple Email Service, or from a domain that has been verified with Amazon SES.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput) From() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.From
	}).(pulumi.StringPtrOutput)
}

// The multi-factor authentication (MFA) email template used when MFA is challenged as part of a detected risk. See notify email type below.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput) MfaEmail() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfiguration) *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmail {
		if v == nil {
			return nil
		}
		return v.MfaEmail
	}).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput)
}

// The email template used when a detected risk event is allowed. See notify email type below.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput) NoActionEmail() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfiguration) *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmail {
		if v == nil {
			return nil
		}
		return v.NoActionEmail
	}).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput)
}

// The destination to which the receiver of an email should reply to.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput) ReplyTo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ReplyTo
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name (ARN) of the identity that is associated with the sending authorization policy. This identity permits Amazon Cognito to send for the email address specified in the From parameter.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput) SourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.SourceArn
	}).(pulumi.StringPtrOutput)
}

type RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmail struct {
	// The email HTML body.
	HtmlBody string `pulumi:"htmlBody"`
	// The email subject.
	Subject string `pulumi:"subject"`
	// The email text body.
	TextBody string `pulumi:"textBody"`
}

// RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailInput is an input type that accepts RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailArgs and RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutput values.
// You can construct a concrete instance of `RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailInput` via:
//
//	RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailArgs{...}
type RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailInput interface {
	pulumi.Input

	ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutput
	ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutputWithContext(context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutput
}

type RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailArgs struct {
	// The email HTML body.
	HtmlBody pulumi.StringInput `pulumi:"htmlBody"`
	// The email subject.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The email text body.
	TextBody pulumi.StringInput `pulumi:"textBody"`
}

func (RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmail)(nil)).Elem()
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutputWithContext(context.Background())
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutput)
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutputWithContext(context.Background())
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutput).ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutputWithContext(ctx)
}

// RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrInput is an input type that accepts RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailArgs, RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtr and RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput values.
// You can construct a concrete instance of `RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrInput` via:
//
//	        RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailArgs{...}
//
//	or:
//
//	        nil
type RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrInput interface {
	pulumi.Input

	ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput
	ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutputWithContext(context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput
}

type riskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrType RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailArgs

func RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtr(v *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailArgs) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrInput {
	return (*riskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrType)(v)
}

func (*riskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmail)(nil)).Elem()
}

func (i *riskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrType) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutputWithContext(context.Background())
}

func (i *riskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrType) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput)
}

type RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutput struct{ *pulumi.OutputState }

func (RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmail)(nil)).Elem()
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput {
	return o.ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutputWithContext(context.Background())
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmail) *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmail {
		return &v
	}).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput)
}

// The email HTML body.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutput) HtmlBody() pulumi.StringOutput {
	return o.ApplyT(func(v RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmail) string {
		return v.HtmlBody
	}).(pulumi.StringOutput)
}

// The email subject.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmail) string {
		return v.Subject
	}).(pulumi.StringOutput)
}

// The email text body.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutput) TextBody() pulumi.StringOutput {
	return o.ApplyT(func(v RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmail) string {
		return v.TextBody
	}).(pulumi.StringOutput)
}

type RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput struct{ *pulumi.OutputState }

func (RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmail)(nil)).Elem()
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput) Elem() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmail) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmail {
		if v != nil {
			return *v
		}
		var ret RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmail
		return ret
	}).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutput)
}

// The email HTML body.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput) HtmlBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmail) *string {
		if v == nil {
			return nil
		}
		return &v.HtmlBody
	}).(pulumi.StringPtrOutput)
}

// The email subject.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The email text body.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput) TextBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmail) *string {
		if v == nil {
			return nil
		}
		return &v.TextBody
	}).(pulumi.StringPtrOutput)
}

type RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmail struct {
	// The email HTML body.
	HtmlBody string `pulumi:"htmlBody"`
	// The email subject.
	Subject string `pulumi:"subject"`
	// The email text body.
	TextBody string `pulumi:"textBody"`
}

// RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailInput is an input type that accepts RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailArgs and RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutput values.
// You can construct a concrete instance of `RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailInput` via:
//
//	RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailArgs{...}
type RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailInput interface {
	pulumi.Input

	ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutput
	ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutputWithContext(context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutput
}

type RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailArgs struct {
	// The email HTML body.
	HtmlBody pulumi.StringInput `pulumi:"htmlBody"`
	// The email subject.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The email text body.
	TextBody pulumi.StringInput `pulumi:"textBody"`
}

func (RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmail)(nil)).Elem()
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutputWithContext(context.Background())
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutput)
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutputWithContext(context.Background())
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutput).ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutputWithContext(ctx)
}

// RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrInput is an input type that accepts RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailArgs, RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtr and RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput values.
// You can construct a concrete instance of `RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrInput` via:
//
//	        RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailArgs{...}
//
//	or:
//
//	        nil
type RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrInput interface {
	pulumi.Input

	ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput
	ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutputWithContext(context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput
}

type riskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrType RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailArgs

func RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtr(v *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailArgs) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrInput {
	return (*riskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrType)(v)
}

func (*riskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmail)(nil)).Elem()
}

func (i *riskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrType) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutputWithContext(context.Background())
}

func (i *riskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrType) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput)
}

type RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutput struct{ *pulumi.OutputState }

func (RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmail)(nil)).Elem()
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput {
	return o.ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutputWithContext(context.Background())
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmail) *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmail {
		return &v
	}).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput)
}

// The email HTML body.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutput) HtmlBody() pulumi.StringOutput {
	return o.ApplyT(func(v RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmail) string {
		return v.HtmlBody
	}).(pulumi.StringOutput)
}

// The email subject.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmail) string {
		return v.Subject
	}).(pulumi.StringOutput)
}

// The email text body.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutput) TextBody() pulumi.StringOutput {
	return o.ApplyT(func(v RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmail) string {
		return v.TextBody
	}).(pulumi.StringOutput)
}

type RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput struct{ *pulumi.OutputState }

func (RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmail)(nil)).Elem()
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput) Elem() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmail) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmail {
		if v != nil {
			return *v
		}
		var ret RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmail
		return ret
	}).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutput)
}

// The email HTML body.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput) HtmlBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmail) *string {
		if v == nil {
			return nil
		}
		return &v.HtmlBody
	}).(pulumi.StringPtrOutput)
}

// The email subject.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The email text body.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput) TextBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmail) *string {
		if v == nil {
			return nil
		}
		return &v.TextBody
	}).(pulumi.StringPtrOutput)
}

type RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmail struct {
	// The email HTML body.
	HtmlBody string `pulumi:"htmlBody"`
	// The email subject.
	Subject string `pulumi:"subject"`
	// The email text body.
	TextBody string `pulumi:"textBody"`
}

// RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailInput is an input type that accepts RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailArgs and RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutput values.
// You can construct a concrete instance of `RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailInput` via:
//
//	RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailArgs{...}
type RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailInput interface {
	pulumi.Input

	ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutput
	ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutputWithContext(context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutput
}

type RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailArgs struct {
	// The email HTML body.
	HtmlBody pulumi.StringInput `pulumi:"htmlBody"`
	// The email subject.
	Subject pulumi.StringInput `pulumi:"subject"`
	// The email text body.
	TextBody pulumi.StringInput `pulumi:"textBody"`
}

func (RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmail)(nil)).Elem()
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutputWithContext(context.Background())
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutput)
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutputWithContext(context.Background())
}

func (i RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailArgs) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutput).ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutputWithContext(ctx)
}

// RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrInput is an input type that accepts RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailArgs, RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtr and RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput values.
// You can construct a concrete instance of `RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrInput` via:
//
//	        RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailArgs{...}
//
//	or:
//
//	        nil
type RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrInput interface {
	pulumi.Input

	ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput
	ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutputWithContext(context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput
}

type riskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrType RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailArgs

func RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtr(v *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailArgs) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrInput {
	return (*riskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrType)(v)
}

func (*riskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmail)(nil)).Elem()
}

func (i *riskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrType) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput {
	return i.ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutputWithContext(context.Background())
}

func (i *riskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrType) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput)
}

type RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutput struct{ *pulumi.OutputState }

func (RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmail)(nil)).Elem()
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput {
	return o.ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutputWithContext(context.Background())
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmail) *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmail {
		return &v
	}).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput)
}

// The email HTML body.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutput) HtmlBody() pulumi.StringOutput {
	return o.ApplyT(func(v RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmail) string {
		return v.HtmlBody
	}).(pulumi.StringOutput)
}

// The email subject.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutput) Subject() pulumi.StringOutput {
	return o.ApplyT(func(v RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmail) string {
		return v.Subject
	}).(pulumi.StringOutput)
}

// The email text body.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutput) TextBody() pulumi.StringOutput {
	return o.ApplyT(func(v RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmail) string {
		return v.TextBody
	}).(pulumi.StringOutput)
}

type RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput struct{ *pulumi.OutputState }

func (RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmail)(nil)).Elem()
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput) ToRiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutputWithContext(ctx context.Context) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput {
	return o
}

func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput) Elem() RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmail) RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmail {
		if v != nil {
			return *v
		}
		var ret RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmail
		return ret
	}).(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutput)
}

// The email HTML body.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput) HtmlBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmail) *string {
		if v == nil {
			return nil
		}
		return &v.HtmlBody
	}).(pulumi.StringPtrOutput)
}

// The email subject.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput) Subject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmail) *string {
		if v == nil {
			return nil
		}
		return &v.Subject
	}).(pulumi.StringPtrOutput)
}

// The email text body.
func (o RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput) TextBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmail) *string {
		if v == nil {
			return nil
		}
		return &v.TextBody
	}).(pulumi.StringPtrOutput)
}

type RiskConfigurationCompromisedCredentialsRiskConfiguration struct {
	// The compromised credentials risk configuration actions. See details below.
	Actions RiskConfigurationCompromisedCredentialsRiskConfigurationActions `pulumi:"actions"`
	// Perform the action for these events. The default is to perform all events if no event filter is specified. Valid values are `SIGN_IN`, `PASSWORD_CHANGE`, and `SIGN_UP`.
	EventFilters []string `pulumi:"eventFilters"`
}

// RiskConfigurationCompromisedCredentialsRiskConfigurationInput is an input type that accepts RiskConfigurationCompromisedCredentialsRiskConfigurationArgs and RiskConfigurationCompromisedCredentialsRiskConfigurationOutput values.
// You can construct a concrete instance of `RiskConfigurationCompromisedCredentialsRiskConfigurationInput` via:
//
//	RiskConfigurationCompromisedCredentialsRiskConfigurationArgs{...}
type RiskConfigurationCompromisedCredentialsRiskConfigurationInput interface {
	pulumi.Input

	ToRiskConfigurationCompromisedCredentialsRiskConfigurationOutput() RiskConfigurationCompromisedCredentialsRiskConfigurationOutput
	ToRiskConfigurationCompromisedCredentialsRiskConfigurationOutputWithContext(context.Context) RiskConfigurationCompromisedCredentialsRiskConfigurationOutput
}

type RiskConfigurationCompromisedCredentialsRiskConfigurationArgs struct {
	// The compromised credentials risk configuration actions. See details below.
	Actions RiskConfigurationCompromisedCredentialsRiskConfigurationActionsInput `pulumi:"actions"`
	// Perform the action for these events. The default is to perform all events if no event filter is specified. Valid values are `SIGN_IN`, `PASSWORD_CHANGE`, and `SIGN_UP`.
	EventFilters pulumi.StringArrayInput `pulumi:"eventFilters"`
}

func (RiskConfigurationCompromisedCredentialsRiskConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskConfigurationCompromisedCredentialsRiskConfiguration)(nil)).Elem()
}

func (i RiskConfigurationCompromisedCredentialsRiskConfigurationArgs) ToRiskConfigurationCompromisedCredentialsRiskConfigurationOutput() RiskConfigurationCompromisedCredentialsRiskConfigurationOutput {
	return i.ToRiskConfigurationCompromisedCredentialsRiskConfigurationOutputWithContext(context.Background())
}

func (i RiskConfigurationCompromisedCredentialsRiskConfigurationArgs) ToRiskConfigurationCompromisedCredentialsRiskConfigurationOutputWithContext(ctx context.Context) RiskConfigurationCompromisedCredentialsRiskConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationCompromisedCredentialsRiskConfigurationOutput)
}

func (i RiskConfigurationCompromisedCredentialsRiskConfigurationArgs) ToRiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutput() RiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutput {
	return i.ToRiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutputWithContext(context.Background())
}

func (i RiskConfigurationCompromisedCredentialsRiskConfigurationArgs) ToRiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutputWithContext(ctx context.Context) RiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationCompromisedCredentialsRiskConfigurationOutput).ToRiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutputWithContext(ctx)
}

// RiskConfigurationCompromisedCredentialsRiskConfigurationPtrInput is an input type that accepts RiskConfigurationCompromisedCredentialsRiskConfigurationArgs, RiskConfigurationCompromisedCredentialsRiskConfigurationPtr and RiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutput values.
// You can construct a concrete instance of `RiskConfigurationCompromisedCredentialsRiskConfigurationPtrInput` via:
//
//	        RiskConfigurationCompromisedCredentialsRiskConfigurationArgs{...}
//
//	or:
//
//	        nil
type RiskConfigurationCompromisedCredentialsRiskConfigurationPtrInput interface {
	pulumi.Input

	ToRiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutput() RiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutput
	ToRiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutputWithContext(context.Context) RiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutput
}

type riskConfigurationCompromisedCredentialsRiskConfigurationPtrType RiskConfigurationCompromisedCredentialsRiskConfigurationArgs

func RiskConfigurationCompromisedCredentialsRiskConfigurationPtr(v *RiskConfigurationCompromisedCredentialsRiskConfigurationArgs) RiskConfigurationCompromisedCredentialsRiskConfigurationPtrInput {
	return (*riskConfigurationCompromisedCredentialsRiskConfigurationPtrType)(v)
}

func (*riskConfigurationCompromisedCredentialsRiskConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskConfigurationCompromisedCredentialsRiskConfiguration)(nil)).Elem()
}

func (i *riskConfigurationCompromisedCredentialsRiskConfigurationPtrType) ToRiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutput() RiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutput {
	return i.ToRiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutputWithContext(context.Background())
}

func (i *riskConfigurationCompromisedCredentialsRiskConfigurationPtrType) ToRiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutputWithContext(ctx context.Context) RiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutput)
}

type RiskConfigurationCompromisedCredentialsRiskConfigurationOutput struct{ *pulumi.OutputState }

func (RiskConfigurationCompromisedCredentialsRiskConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskConfigurationCompromisedCredentialsRiskConfiguration)(nil)).Elem()
}

func (o RiskConfigurationCompromisedCredentialsRiskConfigurationOutput) ToRiskConfigurationCompromisedCredentialsRiskConfigurationOutput() RiskConfigurationCompromisedCredentialsRiskConfigurationOutput {
	return o
}

func (o RiskConfigurationCompromisedCredentialsRiskConfigurationOutput) ToRiskConfigurationCompromisedCredentialsRiskConfigurationOutputWithContext(ctx context.Context) RiskConfigurationCompromisedCredentialsRiskConfigurationOutput {
	return o
}

func (o RiskConfigurationCompromisedCredentialsRiskConfigurationOutput) ToRiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutput() RiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutput {
	return o.ToRiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutputWithContext(context.Background())
}

func (o RiskConfigurationCompromisedCredentialsRiskConfigurationOutput) ToRiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutputWithContext(ctx context.Context) RiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RiskConfigurationCompromisedCredentialsRiskConfiguration) *RiskConfigurationCompromisedCredentialsRiskConfiguration {
		return &v
	}).(RiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutput)
}

// The compromised credentials risk configuration actions. See details below.
func (o RiskConfigurationCompromisedCredentialsRiskConfigurationOutput) Actions() RiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutput {
	return o.ApplyT(func(v RiskConfigurationCompromisedCredentialsRiskConfiguration) RiskConfigurationCompromisedCredentialsRiskConfigurationActions {
		return v.Actions
	}).(RiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutput)
}

// Perform the action for these events. The default is to perform all events if no event filter is specified. Valid values are `SIGN_IN`, `PASSWORD_CHANGE`, and `SIGN_UP`.
func (o RiskConfigurationCompromisedCredentialsRiskConfigurationOutput) EventFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RiskConfigurationCompromisedCredentialsRiskConfiguration) []string { return v.EventFilters }).(pulumi.StringArrayOutput)
}

type RiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutput struct{ *pulumi.OutputState }

func (RiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskConfigurationCompromisedCredentialsRiskConfiguration)(nil)).Elem()
}

func (o RiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutput) ToRiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutput() RiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutput {
	return o
}

func (o RiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutput) ToRiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutputWithContext(ctx context.Context) RiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutput {
	return o
}

func (o RiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutput) Elem() RiskConfigurationCompromisedCredentialsRiskConfigurationOutput {
	return o.ApplyT(func(v *RiskConfigurationCompromisedCredentialsRiskConfiguration) RiskConfigurationCompromisedCredentialsRiskConfiguration {
		if v != nil {
			return *v
		}
		var ret RiskConfigurationCompromisedCredentialsRiskConfiguration
		return ret
	}).(RiskConfigurationCompromisedCredentialsRiskConfigurationOutput)
}

// The compromised credentials risk configuration actions. See details below.
func (o RiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutput) Actions() RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationCompromisedCredentialsRiskConfiguration) *RiskConfigurationCompromisedCredentialsRiskConfigurationActions {
		if v == nil {
			return nil
		}
		return &v.Actions
	}).(RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput)
}

// Perform the action for these events. The default is to perform all events if no event filter is specified. Valid values are `SIGN_IN`, `PASSWORD_CHANGE`, and `SIGN_UP`.
func (o RiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutput) EventFilters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RiskConfigurationCompromisedCredentialsRiskConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.EventFilters
	}).(pulumi.StringArrayOutput)
}

type RiskConfigurationCompromisedCredentialsRiskConfigurationActions struct {
	// The event action. Valid values are `BLOCK` or `NO_ACTION`.
	EventAction string `pulumi:"eventAction"`
}

// RiskConfigurationCompromisedCredentialsRiskConfigurationActionsInput is an input type that accepts RiskConfigurationCompromisedCredentialsRiskConfigurationActionsArgs and RiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutput values.
// You can construct a concrete instance of `RiskConfigurationCompromisedCredentialsRiskConfigurationActionsInput` via:
//
//	RiskConfigurationCompromisedCredentialsRiskConfigurationActionsArgs{...}
type RiskConfigurationCompromisedCredentialsRiskConfigurationActionsInput interface {
	pulumi.Input

	ToRiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutput() RiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutput
	ToRiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutputWithContext(context.Context) RiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutput
}

type RiskConfigurationCompromisedCredentialsRiskConfigurationActionsArgs struct {
	// The event action. Valid values are `BLOCK` or `NO_ACTION`.
	EventAction pulumi.StringInput `pulumi:"eventAction"`
}

func (RiskConfigurationCompromisedCredentialsRiskConfigurationActionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskConfigurationCompromisedCredentialsRiskConfigurationActions)(nil)).Elem()
}

func (i RiskConfigurationCompromisedCredentialsRiskConfigurationActionsArgs) ToRiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutput() RiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutput {
	return i.ToRiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutputWithContext(context.Background())
}

func (i RiskConfigurationCompromisedCredentialsRiskConfigurationActionsArgs) ToRiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutputWithContext(ctx context.Context) RiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutput)
}

func (i RiskConfigurationCompromisedCredentialsRiskConfigurationActionsArgs) ToRiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput() RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput {
	return i.ToRiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutputWithContext(context.Background())
}

func (i RiskConfigurationCompromisedCredentialsRiskConfigurationActionsArgs) ToRiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutputWithContext(ctx context.Context) RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutput).ToRiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutputWithContext(ctx)
}

// RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrInput is an input type that accepts RiskConfigurationCompromisedCredentialsRiskConfigurationActionsArgs, RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtr and RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput values.
// You can construct a concrete instance of `RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrInput` via:
//
//	        RiskConfigurationCompromisedCredentialsRiskConfigurationActionsArgs{...}
//
//	or:
//
//	        nil
type RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrInput interface {
	pulumi.Input

	ToRiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput() RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput
	ToRiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutputWithContext(context.Context) RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput
}

type riskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrType RiskConfigurationCompromisedCredentialsRiskConfigurationActionsArgs

func RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtr(v *RiskConfigurationCompromisedCredentialsRiskConfigurationActionsArgs) RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrInput {
	return (*riskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrType)(v)
}

func (*riskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskConfigurationCompromisedCredentialsRiskConfigurationActions)(nil)).Elem()
}

func (i *riskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrType) ToRiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput() RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput {
	return i.ToRiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutputWithContext(context.Background())
}

func (i *riskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrType) ToRiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutputWithContext(ctx context.Context) RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput)
}

type RiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutput struct{ *pulumi.OutputState }

func (RiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskConfigurationCompromisedCredentialsRiskConfigurationActions)(nil)).Elem()
}

func (o RiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutput) ToRiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutput() RiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutput {
	return o
}

func (o RiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutput) ToRiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutputWithContext(ctx context.Context) RiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutput {
	return o
}

func (o RiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutput) ToRiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput() RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput {
	return o.ToRiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutputWithContext(context.Background())
}

func (o RiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutput) ToRiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutputWithContext(ctx context.Context) RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RiskConfigurationCompromisedCredentialsRiskConfigurationActions) *RiskConfigurationCompromisedCredentialsRiskConfigurationActions {
		return &v
	}).(RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput)
}

// The event action. Valid values are `BLOCK` or `NO_ACTION`.
func (o RiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutput) EventAction() pulumi.StringOutput {
	return o.ApplyT(func(v RiskConfigurationCompromisedCredentialsRiskConfigurationActions) string { return v.EventAction }).(pulumi.StringOutput)
}

type RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput struct{ *pulumi.OutputState }

func (RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskConfigurationCompromisedCredentialsRiskConfigurationActions)(nil)).Elem()
}

func (o RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput) ToRiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput() RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput {
	return o
}

func (o RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput) ToRiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutputWithContext(ctx context.Context) RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput {
	return o
}

func (o RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput) Elem() RiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutput {
	return o.ApplyT(func(v *RiskConfigurationCompromisedCredentialsRiskConfigurationActions) RiskConfigurationCompromisedCredentialsRiskConfigurationActions {
		if v != nil {
			return *v
		}
		var ret RiskConfigurationCompromisedCredentialsRiskConfigurationActions
		return ret
	}).(RiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutput)
}

// The event action. Valid values are `BLOCK` or `NO_ACTION`.
func (o RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput) EventAction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RiskConfigurationCompromisedCredentialsRiskConfigurationActions) *string {
		if v == nil {
			return nil
		}
		return &v.EventAction
	}).(pulumi.StringPtrOutput)
}

type RiskConfigurationRiskExceptionConfiguration struct {
	// Overrides the risk decision to always block the pre-authentication requests.
	// The IP range is in CIDR notation, a compact representation of an IP address and its routing prefix.
	// Can contain a maximum of 200 items.
	BlockedIpRangeLists []string `pulumi:"blockedIpRangeLists"`
	// Risk detection isn't performed on the IP addresses in this range list.
	// The IP range is in CIDR notation.
	// Can contain a maximum of 200 items.
	SkippedIpRangeLists []string `pulumi:"skippedIpRangeLists"`
}

// RiskConfigurationRiskExceptionConfigurationInput is an input type that accepts RiskConfigurationRiskExceptionConfigurationArgs and RiskConfigurationRiskExceptionConfigurationOutput values.
// You can construct a concrete instance of `RiskConfigurationRiskExceptionConfigurationInput` via:
//
//	RiskConfigurationRiskExceptionConfigurationArgs{...}
type RiskConfigurationRiskExceptionConfigurationInput interface {
	pulumi.Input

	ToRiskConfigurationRiskExceptionConfigurationOutput() RiskConfigurationRiskExceptionConfigurationOutput
	ToRiskConfigurationRiskExceptionConfigurationOutputWithContext(context.Context) RiskConfigurationRiskExceptionConfigurationOutput
}

type RiskConfigurationRiskExceptionConfigurationArgs struct {
	// Overrides the risk decision to always block the pre-authentication requests.
	// The IP range is in CIDR notation, a compact representation of an IP address and its routing prefix.
	// Can contain a maximum of 200 items.
	BlockedIpRangeLists pulumi.StringArrayInput `pulumi:"blockedIpRangeLists"`
	// Risk detection isn't performed on the IP addresses in this range list.
	// The IP range is in CIDR notation.
	// Can contain a maximum of 200 items.
	SkippedIpRangeLists pulumi.StringArrayInput `pulumi:"skippedIpRangeLists"`
}

func (RiskConfigurationRiskExceptionConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskConfigurationRiskExceptionConfiguration)(nil)).Elem()
}

func (i RiskConfigurationRiskExceptionConfigurationArgs) ToRiskConfigurationRiskExceptionConfigurationOutput() RiskConfigurationRiskExceptionConfigurationOutput {
	return i.ToRiskConfigurationRiskExceptionConfigurationOutputWithContext(context.Background())
}

func (i RiskConfigurationRiskExceptionConfigurationArgs) ToRiskConfigurationRiskExceptionConfigurationOutputWithContext(ctx context.Context) RiskConfigurationRiskExceptionConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationRiskExceptionConfigurationOutput)
}

func (i RiskConfigurationRiskExceptionConfigurationArgs) ToRiskConfigurationRiskExceptionConfigurationPtrOutput() RiskConfigurationRiskExceptionConfigurationPtrOutput {
	return i.ToRiskConfigurationRiskExceptionConfigurationPtrOutputWithContext(context.Background())
}

func (i RiskConfigurationRiskExceptionConfigurationArgs) ToRiskConfigurationRiskExceptionConfigurationPtrOutputWithContext(ctx context.Context) RiskConfigurationRiskExceptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationRiskExceptionConfigurationOutput).ToRiskConfigurationRiskExceptionConfigurationPtrOutputWithContext(ctx)
}

// RiskConfigurationRiskExceptionConfigurationPtrInput is an input type that accepts RiskConfigurationRiskExceptionConfigurationArgs, RiskConfigurationRiskExceptionConfigurationPtr and RiskConfigurationRiskExceptionConfigurationPtrOutput values.
// You can construct a concrete instance of `RiskConfigurationRiskExceptionConfigurationPtrInput` via:
//
//	        RiskConfigurationRiskExceptionConfigurationArgs{...}
//
//	or:
//
//	        nil
type RiskConfigurationRiskExceptionConfigurationPtrInput interface {
	pulumi.Input

	ToRiskConfigurationRiskExceptionConfigurationPtrOutput() RiskConfigurationRiskExceptionConfigurationPtrOutput
	ToRiskConfigurationRiskExceptionConfigurationPtrOutputWithContext(context.Context) RiskConfigurationRiskExceptionConfigurationPtrOutput
}

type riskConfigurationRiskExceptionConfigurationPtrType RiskConfigurationRiskExceptionConfigurationArgs

func RiskConfigurationRiskExceptionConfigurationPtr(v *RiskConfigurationRiskExceptionConfigurationArgs) RiskConfigurationRiskExceptionConfigurationPtrInput {
	return (*riskConfigurationRiskExceptionConfigurationPtrType)(v)
}

func (*riskConfigurationRiskExceptionConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskConfigurationRiskExceptionConfiguration)(nil)).Elem()
}

func (i *riskConfigurationRiskExceptionConfigurationPtrType) ToRiskConfigurationRiskExceptionConfigurationPtrOutput() RiskConfigurationRiskExceptionConfigurationPtrOutput {
	return i.ToRiskConfigurationRiskExceptionConfigurationPtrOutputWithContext(context.Background())
}

func (i *riskConfigurationRiskExceptionConfigurationPtrType) ToRiskConfigurationRiskExceptionConfigurationPtrOutputWithContext(ctx context.Context) RiskConfigurationRiskExceptionConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RiskConfigurationRiskExceptionConfigurationPtrOutput)
}

type RiskConfigurationRiskExceptionConfigurationOutput struct{ *pulumi.OutputState }

func (RiskConfigurationRiskExceptionConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RiskConfigurationRiskExceptionConfiguration)(nil)).Elem()
}

func (o RiskConfigurationRiskExceptionConfigurationOutput) ToRiskConfigurationRiskExceptionConfigurationOutput() RiskConfigurationRiskExceptionConfigurationOutput {
	return o
}

func (o RiskConfigurationRiskExceptionConfigurationOutput) ToRiskConfigurationRiskExceptionConfigurationOutputWithContext(ctx context.Context) RiskConfigurationRiskExceptionConfigurationOutput {
	return o
}

func (o RiskConfigurationRiskExceptionConfigurationOutput) ToRiskConfigurationRiskExceptionConfigurationPtrOutput() RiskConfigurationRiskExceptionConfigurationPtrOutput {
	return o.ToRiskConfigurationRiskExceptionConfigurationPtrOutputWithContext(context.Background())
}

func (o RiskConfigurationRiskExceptionConfigurationOutput) ToRiskConfigurationRiskExceptionConfigurationPtrOutputWithContext(ctx context.Context) RiskConfigurationRiskExceptionConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RiskConfigurationRiskExceptionConfiguration) *RiskConfigurationRiskExceptionConfiguration {
		return &v
	}).(RiskConfigurationRiskExceptionConfigurationPtrOutput)
}

// Overrides the risk decision to always block the pre-authentication requests.
// The IP range is in CIDR notation, a compact representation of an IP address and its routing prefix.
// Can contain a maximum of 200 items.
func (o RiskConfigurationRiskExceptionConfigurationOutput) BlockedIpRangeLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RiskConfigurationRiskExceptionConfiguration) []string { return v.BlockedIpRangeLists }).(pulumi.StringArrayOutput)
}

// Risk detection isn't performed on the IP addresses in this range list.
// The IP range is in CIDR notation.
// Can contain a maximum of 200 items.
func (o RiskConfigurationRiskExceptionConfigurationOutput) SkippedIpRangeLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RiskConfigurationRiskExceptionConfiguration) []string { return v.SkippedIpRangeLists }).(pulumi.StringArrayOutput)
}

type RiskConfigurationRiskExceptionConfigurationPtrOutput struct{ *pulumi.OutputState }

func (RiskConfigurationRiskExceptionConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RiskConfigurationRiskExceptionConfiguration)(nil)).Elem()
}

func (o RiskConfigurationRiskExceptionConfigurationPtrOutput) ToRiskConfigurationRiskExceptionConfigurationPtrOutput() RiskConfigurationRiskExceptionConfigurationPtrOutput {
	return o
}

func (o RiskConfigurationRiskExceptionConfigurationPtrOutput) ToRiskConfigurationRiskExceptionConfigurationPtrOutputWithContext(ctx context.Context) RiskConfigurationRiskExceptionConfigurationPtrOutput {
	return o
}

func (o RiskConfigurationRiskExceptionConfigurationPtrOutput) Elem() RiskConfigurationRiskExceptionConfigurationOutput {
	return o.ApplyT(func(v *RiskConfigurationRiskExceptionConfiguration) RiskConfigurationRiskExceptionConfiguration {
		if v != nil {
			return *v
		}
		var ret RiskConfigurationRiskExceptionConfiguration
		return ret
	}).(RiskConfigurationRiskExceptionConfigurationOutput)
}

// Overrides the risk decision to always block the pre-authentication requests.
// The IP range is in CIDR notation, a compact representation of an IP address and its routing prefix.
// Can contain a maximum of 200 items.
func (o RiskConfigurationRiskExceptionConfigurationPtrOutput) BlockedIpRangeLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RiskConfigurationRiskExceptionConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.BlockedIpRangeLists
	}).(pulumi.StringArrayOutput)
}

// Risk detection isn't performed on the IP addresses in this range list.
// The IP range is in CIDR notation.
// Can contain a maximum of 200 items.
func (o RiskConfigurationRiskExceptionConfigurationPtrOutput) SkippedIpRangeLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *RiskConfigurationRiskExceptionConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.SkippedIpRangeLists
	}).(pulumi.StringArrayOutput)
}

type UserPoolAccountRecoverySetting struct {
	// List of Account Recovery Options of the following structure:
	RecoveryMechanisms []UserPoolAccountRecoverySettingRecoveryMechanism `pulumi:"recoveryMechanisms"`
}

// UserPoolAccountRecoverySettingInput is an input type that accepts UserPoolAccountRecoverySettingArgs and UserPoolAccountRecoverySettingOutput values.
// You can construct a concrete instance of `UserPoolAccountRecoverySettingInput` via:
//
//	UserPoolAccountRecoverySettingArgs{...}
type UserPoolAccountRecoverySettingInput interface {
	pulumi.Input

	ToUserPoolAccountRecoverySettingOutput() UserPoolAccountRecoverySettingOutput
	ToUserPoolAccountRecoverySettingOutputWithContext(context.Context) UserPoolAccountRecoverySettingOutput
}

type UserPoolAccountRecoverySettingArgs struct {
	// List of Account Recovery Options of the following structure:
	RecoveryMechanisms UserPoolAccountRecoverySettingRecoveryMechanismArrayInput `pulumi:"recoveryMechanisms"`
}

func (UserPoolAccountRecoverySettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolAccountRecoverySetting)(nil)).Elem()
}

func (i UserPoolAccountRecoverySettingArgs) ToUserPoolAccountRecoverySettingOutput() UserPoolAccountRecoverySettingOutput {
	return i.ToUserPoolAccountRecoverySettingOutputWithContext(context.Background())
}

func (i UserPoolAccountRecoverySettingArgs) ToUserPoolAccountRecoverySettingOutputWithContext(ctx context.Context) UserPoolAccountRecoverySettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolAccountRecoverySettingOutput)
}

func (i UserPoolAccountRecoverySettingArgs) ToUserPoolAccountRecoverySettingPtrOutput() UserPoolAccountRecoverySettingPtrOutput {
	return i.ToUserPoolAccountRecoverySettingPtrOutputWithContext(context.Background())
}

func (i UserPoolAccountRecoverySettingArgs) ToUserPoolAccountRecoverySettingPtrOutputWithContext(ctx context.Context) UserPoolAccountRecoverySettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolAccountRecoverySettingOutput).ToUserPoolAccountRecoverySettingPtrOutputWithContext(ctx)
}

// UserPoolAccountRecoverySettingPtrInput is an input type that accepts UserPoolAccountRecoverySettingArgs, UserPoolAccountRecoverySettingPtr and UserPoolAccountRecoverySettingPtrOutput values.
// You can construct a concrete instance of `UserPoolAccountRecoverySettingPtrInput` via:
//
//	        UserPoolAccountRecoverySettingArgs{...}
//
//	or:
//
//	        nil
type UserPoolAccountRecoverySettingPtrInput interface {
	pulumi.Input

	ToUserPoolAccountRecoverySettingPtrOutput() UserPoolAccountRecoverySettingPtrOutput
	ToUserPoolAccountRecoverySettingPtrOutputWithContext(context.Context) UserPoolAccountRecoverySettingPtrOutput
}

type userPoolAccountRecoverySettingPtrType UserPoolAccountRecoverySettingArgs

func UserPoolAccountRecoverySettingPtr(v *UserPoolAccountRecoverySettingArgs) UserPoolAccountRecoverySettingPtrInput {
	return (*userPoolAccountRecoverySettingPtrType)(v)
}

func (*userPoolAccountRecoverySettingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolAccountRecoverySetting)(nil)).Elem()
}

func (i *userPoolAccountRecoverySettingPtrType) ToUserPoolAccountRecoverySettingPtrOutput() UserPoolAccountRecoverySettingPtrOutput {
	return i.ToUserPoolAccountRecoverySettingPtrOutputWithContext(context.Background())
}

func (i *userPoolAccountRecoverySettingPtrType) ToUserPoolAccountRecoverySettingPtrOutputWithContext(ctx context.Context) UserPoolAccountRecoverySettingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolAccountRecoverySettingPtrOutput)
}

type UserPoolAccountRecoverySettingOutput struct{ *pulumi.OutputState }

func (UserPoolAccountRecoverySettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolAccountRecoverySetting)(nil)).Elem()
}

func (o UserPoolAccountRecoverySettingOutput) ToUserPoolAccountRecoverySettingOutput() UserPoolAccountRecoverySettingOutput {
	return o
}

func (o UserPoolAccountRecoverySettingOutput) ToUserPoolAccountRecoverySettingOutputWithContext(ctx context.Context) UserPoolAccountRecoverySettingOutput {
	return o
}

func (o UserPoolAccountRecoverySettingOutput) ToUserPoolAccountRecoverySettingPtrOutput() UserPoolAccountRecoverySettingPtrOutput {
	return o.ToUserPoolAccountRecoverySettingPtrOutputWithContext(context.Background())
}

func (o UserPoolAccountRecoverySettingOutput) ToUserPoolAccountRecoverySettingPtrOutputWithContext(ctx context.Context) UserPoolAccountRecoverySettingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolAccountRecoverySetting) *UserPoolAccountRecoverySetting {
		return &v
	}).(UserPoolAccountRecoverySettingPtrOutput)
}

// List of Account Recovery Options of the following structure:
func (o UserPoolAccountRecoverySettingOutput) RecoveryMechanisms() UserPoolAccountRecoverySettingRecoveryMechanismArrayOutput {
	return o.ApplyT(func(v UserPoolAccountRecoverySetting) []UserPoolAccountRecoverySettingRecoveryMechanism {
		return v.RecoveryMechanisms
	}).(UserPoolAccountRecoverySettingRecoveryMechanismArrayOutput)
}

type UserPoolAccountRecoverySettingPtrOutput struct{ *pulumi.OutputState }

func (UserPoolAccountRecoverySettingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolAccountRecoverySetting)(nil)).Elem()
}

func (o UserPoolAccountRecoverySettingPtrOutput) ToUserPoolAccountRecoverySettingPtrOutput() UserPoolAccountRecoverySettingPtrOutput {
	return o
}

func (o UserPoolAccountRecoverySettingPtrOutput) ToUserPoolAccountRecoverySettingPtrOutputWithContext(ctx context.Context) UserPoolAccountRecoverySettingPtrOutput {
	return o
}

func (o UserPoolAccountRecoverySettingPtrOutput) Elem() UserPoolAccountRecoverySettingOutput {
	return o.ApplyT(func(v *UserPoolAccountRecoverySetting) UserPoolAccountRecoverySetting {
		if v != nil {
			return *v
		}
		var ret UserPoolAccountRecoverySetting
		return ret
	}).(UserPoolAccountRecoverySettingOutput)
}

// List of Account Recovery Options of the following structure:
func (o UserPoolAccountRecoverySettingPtrOutput) RecoveryMechanisms() UserPoolAccountRecoverySettingRecoveryMechanismArrayOutput {
	return o.ApplyT(func(v *UserPoolAccountRecoverySetting) []UserPoolAccountRecoverySettingRecoveryMechanism {
		if v == nil {
			return nil
		}
		return v.RecoveryMechanisms
	}).(UserPoolAccountRecoverySettingRecoveryMechanismArrayOutput)
}

type UserPoolAccountRecoverySettingRecoveryMechanism struct {
	// Name of the user pool.
	//
	// The following arguments are optional:
	Name string `pulumi:"name"`
	// Positive integer specifying priority of a method with 1 being the highest priority.
	Priority int `pulumi:"priority"`
}

// UserPoolAccountRecoverySettingRecoveryMechanismInput is an input type that accepts UserPoolAccountRecoverySettingRecoveryMechanismArgs and UserPoolAccountRecoverySettingRecoveryMechanismOutput values.
// You can construct a concrete instance of `UserPoolAccountRecoverySettingRecoveryMechanismInput` via:
//
//	UserPoolAccountRecoverySettingRecoveryMechanismArgs{...}
type UserPoolAccountRecoverySettingRecoveryMechanismInput interface {
	pulumi.Input

	ToUserPoolAccountRecoverySettingRecoveryMechanismOutput() UserPoolAccountRecoverySettingRecoveryMechanismOutput
	ToUserPoolAccountRecoverySettingRecoveryMechanismOutputWithContext(context.Context) UserPoolAccountRecoverySettingRecoveryMechanismOutput
}

type UserPoolAccountRecoverySettingRecoveryMechanismArgs struct {
	// Name of the user pool.
	//
	// The following arguments are optional:
	Name pulumi.StringInput `pulumi:"name"`
	// Positive integer specifying priority of a method with 1 being the highest priority.
	Priority pulumi.IntInput `pulumi:"priority"`
}

func (UserPoolAccountRecoverySettingRecoveryMechanismArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolAccountRecoverySettingRecoveryMechanism)(nil)).Elem()
}

func (i UserPoolAccountRecoverySettingRecoveryMechanismArgs) ToUserPoolAccountRecoverySettingRecoveryMechanismOutput() UserPoolAccountRecoverySettingRecoveryMechanismOutput {
	return i.ToUserPoolAccountRecoverySettingRecoveryMechanismOutputWithContext(context.Background())
}

func (i UserPoolAccountRecoverySettingRecoveryMechanismArgs) ToUserPoolAccountRecoverySettingRecoveryMechanismOutputWithContext(ctx context.Context) UserPoolAccountRecoverySettingRecoveryMechanismOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolAccountRecoverySettingRecoveryMechanismOutput)
}

// UserPoolAccountRecoverySettingRecoveryMechanismArrayInput is an input type that accepts UserPoolAccountRecoverySettingRecoveryMechanismArray and UserPoolAccountRecoverySettingRecoveryMechanismArrayOutput values.
// You can construct a concrete instance of `UserPoolAccountRecoverySettingRecoveryMechanismArrayInput` via:
//
//	UserPoolAccountRecoverySettingRecoveryMechanismArray{ UserPoolAccountRecoverySettingRecoveryMechanismArgs{...} }
type UserPoolAccountRecoverySettingRecoveryMechanismArrayInput interface {
	pulumi.Input

	ToUserPoolAccountRecoverySettingRecoveryMechanismArrayOutput() UserPoolAccountRecoverySettingRecoveryMechanismArrayOutput
	ToUserPoolAccountRecoverySettingRecoveryMechanismArrayOutputWithContext(context.Context) UserPoolAccountRecoverySettingRecoveryMechanismArrayOutput
}

type UserPoolAccountRecoverySettingRecoveryMechanismArray []UserPoolAccountRecoverySettingRecoveryMechanismInput

func (UserPoolAccountRecoverySettingRecoveryMechanismArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserPoolAccountRecoverySettingRecoveryMechanism)(nil)).Elem()
}

func (i UserPoolAccountRecoverySettingRecoveryMechanismArray) ToUserPoolAccountRecoverySettingRecoveryMechanismArrayOutput() UserPoolAccountRecoverySettingRecoveryMechanismArrayOutput {
	return i.ToUserPoolAccountRecoverySettingRecoveryMechanismArrayOutputWithContext(context.Background())
}

func (i UserPoolAccountRecoverySettingRecoveryMechanismArray) ToUserPoolAccountRecoverySettingRecoveryMechanismArrayOutputWithContext(ctx context.Context) UserPoolAccountRecoverySettingRecoveryMechanismArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolAccountRecoverySettingRecoveryMechanismArrayOutput)
}

type UserPoolAccountRecoverySettingRecoveryMechanismOutput struct{ *pulumi.OutputState }

func (UserPoolAccountRecoverySettingRecoveryMechanismOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolAccountRecoverySettingRecoveryMechanism)(nil)).Elem()
}

func (o UserPoolAccountRecoverySettingRecoveryMechanismOutput) ToUserPoolAccountRecoverySettingRecoveryMechanismOutput() UserPoolAccountRecoverySettingRecoveryMechanismOutput {
	return o
}

func (o UserPoolAccountRecoverySettingRecoveryMechanismOutput) ToUserPoolAccountRecoverySettingRecoveryMechanismOutputWithContext(ctx context.Context) UserPoolAccountRecoverySettingRecoveryMechanismOutput {
	return o
}

// Name of the user pool.
//
// The following arguments are optional:
func (o UserPoolAccountRecoverySettingRecoveryMechanismOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolAccountRecoverySettingRecoveryMechanism) string { return v.Name }).(pulumi.StringOutput)
}

// Positive integer specifying priority of a method with 1 being the highest priority.
func (o UserPoolAccountRecoverySettingRecoveryMechanismOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v UserPoolAccountRecoverySettingRecoveryMechanism) int { return v.Priority }).(pulumi.IntOutput)
}

type UserPoolAccountRecoverySettingRecoveryMechanismArrayOutput struct{ *pulumi.OutputState }

func (UserPoolAccountRecoverySettingRecoveryMechanismArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserPoolAccountRecoverySettingRecoveryMechanism)(nil)).Elem()
}

func (o UserPoolAccountRecoverySettingRecoveryMechanismArrayOutput) ToUserPoolAccountRecoverySettingRecoveryMechanismArrayOutput() UserPoolAccountRecoverySettingRecoveryMechanismArrayOutput {
	return o
}

func (o UserPoolAccountRecoverySettingRecoveryMechanismArrayOutput) ToUserPoolAccountRecoverySettingRecoveryMechanismArrayOutputWithContext(ctx context.Context) UserPoolAccountRecoverySettingRecoveryMechanismArrayOutput {
	return o
}

func (o UserPoolAccountRecoverySettingRecoveryMechanismArrayOutput) Index(i pulumi.IntInput) UserPoolAccountRecoverySettingRecoveryMechanismOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserPoolAccountRecoverySettingRecoveryMechanism {
		return vs[0].([]UserPoolAccountRecoverySettingRecoveryMechanism)[vs[1].(int)]
	}).(UserPoolAccountRecoverySettingRecoveryMechanismOutput)
}

type UserPoolAdminCreateUserConfig struct {
	// Set to True if only the administrator is allowed to create user profiles. Set to False if users can sign themselves up via an app.
	AllowAdminCreateUserOnly *bool `pulumi:"allowAdminCreateUserOnly"`
	// Invite message template structure. Detailed below.
	InviteMessageTemplate *UserPoolAdminCreateUserConfigInviteMessageTemplate `pulumi:"inviteMessageTemplate"`
}

// UserPoolAdminCreateUserConfigInput is an input type that accepts UserPoolAdminCreateUserConfigArgs and UserPoolAdminCreateUserConfigOutput values.
// You can construct a concrete instance of `UserPoolAdminCreateUserConfigInput` via:
//
//	UserPoolAdminCreateUserConfigArgs{...}
type UserPoolAdminCreateUserConfigInput interface {
	pulumi.Input

	ToUserPoolAdminCreateUserConfigOutput() UserPoolAdminCreateUserConfigOutput
	ToUserPoolAdminCreateUserConfigOutputWithContext(context.Context) UserPoolAdminCreateUserConfigOutput
}

type UserPoolAdminCreateUserConfigArgs struct {
	// Set to True if only the administrator is allowed to create user profiles. Set to False if users can sign themselves up via an app.
	AllowAdminCreateUserOnly pulumi.BoolPtrInput `pulumi:"allowAdminCreateUserOnly"`
	// Invite message template structure. Detailed below.
	InviteMessageTemplate UserPoolAdminCreateUserConfigInviteMessageTemplatePtrInput `pulumi:"inviteMessageTemplate"`
}

func (UserPoolAdminCreateUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolAdminCreateUserConfig)(nil)).Elem()
}

func (i UserPoolAdminCreateUserConfigArgs) ToUserPoolAdminCreateUserConfigOutput() UserPoolAdminCreateUserConfigOutput {
	return i.ToUserPoolAdminCreateUserConfigOutputWithContext(context.Background())
}

func (i UserPoolAdminCreateUserConfigArgs) ToUserPoolAdminCreateUserConfigOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolAdminCreateUserConfigOutput)
}

func (i UserPoolAdminCreateUserConfigArgs) ToUserPoolAdminCreateUserConfigPtrOutput() UserPoolAdminCreateUserConfigPtrOutput {
	return i.ToUserPoolAdminCreateUserConfigPtrOutputWithContext(context.Background())
}

func (i UserPoolAdminCreateUserConfigArgs) ToUserPoolAdminCreateUserConfigPtrOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolAdminCreateUserConfigOutput).ToUserPoolAdminCreateUserConfigPtrOutputWithContext(ctx)
}

// UserPoolAdminCreateUserConfigPtrInput is an input type that accepts UserPoolAdminCreateUserConfigArgs, UserPoolAdminCreateUserConfigPtr and UserPoolAdminCreateUserConfigPtrOutput values.
// You can construct a concrete instance of `UserPoolAdminCreateUserConfigPtrInput` via:
//
//	        UserPoolAdminCreateUserConfigArgs{...}
//
//	or:
//
//	        nil
type UserPoolAdminCreateUserConfigPtrInput interface {
	pulumi.Input

	ToUserPoolAdminCreateUserConfigPtrOutput() UserPoolAdminCreateUserConfigPtrOutput
	ToUserPoolAdminCreateUserConfigPtrOutputWithContext(context.Context) UserPoolAdminCreateUserConfigPtrOutput
}

type userPoolAdminCreateUserConfigPtrType UserPoolAdminCreateUserConfigArgs

func UserPoolAdminCreateUserConfigPtr(v *UserPoolAdminCreateUserConfigArgs) UserPoolAdminCreateUserConfigPtrInput {
	return (*userPoolAdminCreateUserConfigPtrType)(v)
}

func (*userPoolAdminCreateUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolAdminCreateUserConfig)(nil)).Elem()
}

func (i *userPoolAdminCreateUserConfigPtrType) ToUserPoolAdminCreateUserConfigPtrOutput() UserPoolAdminCreateUserConfigPtrOutput {
	return i.ToUserPoolAdminCreateUserConfigPtrOutputWithContext(context.Background())
}

func (i *userPoolAdminCreateUserConfigPtrType) ToUserPoolAdminCreateUserConfigPtrOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolAdminCreateUserConfigPtrOutput)
}

type UserPoolAdminCreateUserConfigOutput struct{ *pulumi.OutputState }

func (UserPoolAdminCreateUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolAdminCreateUserConfig)(nil)).Elem()
}

func (o UserPoolAdminCreateUserConfigOutput) ToUserPoolAdminCreateUserConfigOutput() UserPoolAdminCreateUserConfigOutput {
	return o
}

func (o UserPoolAdminCreateUserConfigOutput) ToUserPoolAdminCreateUserConfigOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigOutput {
	return o
}

func (o UserPoolAdminCreateUserConfigOutput) ToUserPoolAdminCreateUserConfigPtrOutput() UserPoolAdminCreateUserConfigPtrOutput {
	return o.ToUserPoolAdminCreateUserConfigPtrOutputWithContext(context.Background())
}

func (o UserPoolAdminCreateUserConfigOutput) ToUserPoolAdminCreateUserConfigPtrOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolAdminCreateUserConfig) *UserPoolAdminCreateUserConfig {
		return &v
	}).(UserPoolAdminCreateUserConfigPtrOutput)
}

// Set to True if only the administrator is allowed to create user profiles. Set to False if users can sign themselves up via an app.
func (o UserPoolAdminCreateUserConfigOutput) AllowAdminCreateUserOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolAdminCreateUserConfig) *bool { return v.AllowAdminCreateUserOnly }).(pulumi.BoolPtrOutput)
}

// Invite message template structure. Detailed below.
func (o UserPoolAdminCreateUserConfigOutput) InviteMessageTemplate() UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput {
	return o.ApplyT(func(v UserPoolAdminCreateUserConfig) *UserPoolAdminCreateUserConfigInviteMessageTemplate {
		return v.InviteMessageTemplate
	}).(UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput)
}

type UserPoolAdminCreateUserConfigPtrOutput struct{ *pulumi.OutputState }

func (UserPoolAdminCreateUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolAdminCreateUserConfig)(nil)).Elem()
}

func (o UserPoolAdminCreateUserConfigPtrOutput) ToUserPoolAdminCreateUserConfigPtrOutput() UserPoolAdminCreateUserConfigPtrOutput {
	return o
}

func (o UserPoolAdminCreateUserConfigPtrOutput) ToUserPoolAdminCreateUserConfigPtrOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigPtrOutput {
	return o
}

func (o UserPoolAdminCreateUserConfigPtrOutput) Elem() UserPoolAdminCreateUserConfigOutput {
	return o.ApplyT(func(v *UserPoolAdminCreateUserConfig) UserPoolAdminCreateUserConfig {
		if v != nil {
			return *v
		}
		var ret UserPoolAdminCreateUserConfig
		return ret
	}).(UserPoolAdminCreateUserConfigOutput)
}

// Set to True if only the administrator is allowed to create user profiles. Set to False if users can sign themselves up via an app.
func (o UserPoolAdminCreateUserConfigPtrOutput) AllowAdminCreateUserOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserPoolAdminCreateUserConfig) *bool {
		if v == nil {
			return nil
		}
		return v.AllowAdminCreateUserOnly
	}).(pulumi.BoolPtrOutput)
}

// Invite message template structure. Detailed below.
func (o UserPoolAdminCreateUserConfigPtrOutput) InviteMessageTemplate() UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput {
	return o.ApplyT(func(v *UserPoolAdminCreateUserConfig) *UserPoolAdminCreateUserConfigInviteMessageTemplate {
		if v == nil {
			return nil
		}
		return v.InviteMessageTemplate
	}).(UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput)
}

type UserPoolAdminCreateUserConfigInviteMessageTemplate struct {
	// Message template for email messages. Must contain `{username}` and `{####}` placeholders, for username and temporary password, respectively.
	EmailMessage *string `pulumi:"emailMessage"`
	// Subject line for email messages.
	EmailSubject *string `pulumi:"emailSubject"`
	// Message template for SMS messages. Must contain `{username}` and `{####}` placeholders, for username and temporary password, respectively.
	SmsMessage *string `pulumi:"smsMessage"`
}

// UserPoolAdminCreateUserConfigInviteMessageTemplateInput is an input type that accepts UserPoolAdminCreateUserConfigInviteMessageTemplateArgs and UserPoolAdminCreateUserConfigInviteMessageTemplateOutput values.
// You can construct a concrete instance of `UserPoolAdminCreateUserConfigInviteMessageTemplateInput` via:
//
//	UserPoolAdminCreateUserConfigInviteMessageTemplateArgs{...}
type UserPoolAdminCreateUserConfigInviteMessageTemplateInput interface {
	pulumi.Input

	ToUserPoolAdminCreateUserConfigInviteMessageTemplateOutput() UserPoolAdminCreateUserConfigInviteMessageTemplateOutput
	ToUserPoolAdminCreateUserConfigInviteMessageTemplateOutputWithContext(context.Context) UserPoolAdminCreateUserConfigInviteMessageTemplateOutput
}

type UserPoolAdminCreateUserConfigInviteMessageTemplateArgs struct {
	// Message template for email messages. Must contain `{username}` and `{####}` placeholders, for username and temporary password, respectively.
	EmailMessage pulumi.StringPtrInput `pulumi:"emailMessage"`
	// Subject line for email messages.
	EmailSubject pulumi.StringPtrInput `pulumi:"emailSubject"`
	// Message template for SMS messages. Must contain `{username}` and `{####}` placeholders, for username and temporary password, respectively.
	SmsMessage pulumi.StringPtrInput `pulumi:"smsMessage"`
}

func (UserPoolAdminCreateUserConfigInviteMessageTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolAdminCreateUserConfigInviteMessageTemplate)(nil)).Elem()
}

func (i UserPoolAdminCreateUserConfigInviteMessageTemplateArgs) ToUserPoolAdminCreateUserConfigInviteMessageTemplateOutput() UserPoolAdminCreateUserConfigInviteMessageTemplateOutput {
	return i.ToUserPoolAdminCreateUserConfigInviteMessageTemplateOutputWithContext(context.Background())
}

func (i UserPoolAdminCreateUserConfigInviteMessageTemplateArgs) ToUserPoolAdminCreateUserConfigInviteMessageTemplateOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigInviteMessageTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolAdminCreateUserConfigInviteMessageTemplateOutput)
}

func (i UserPoolAdminCreateUserConfigInviteMessageTemplateArgs) ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput() UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput {
	return i.ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutputWithContext(context.Background())
}

func (i UserPoolAdminCreateUserConfigInviteMessageTemplateArgs) ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolAdminCreateUserConfigInviteMessageTemplateOutput).ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutputWithContext(ctx)
}

// UserPoolAdminCreateUserConfigInviteMessageTemplatePtrInput is an input type that accepts UserPoolAdminCreateUserConfigInviteMessageTemplateArgs, UserPoolAdminCreateUserConfigInviteMessageTemplatePtr and UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput values.
// You can construct a concrete instance of `UserPoolAdminCreateUserConfigInviteMessageTemplatePtrInput` via:
//
//	        UserPoolAdminCreateUserConfigInviteMessageTemplateArgs{...}
//
//	or:
//
//	        nil
type UserPoolAdminCreateUserConfigInviteMessageTemplatePtrInput interface {
	pulumi.Input

	ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput() UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput
	ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutputWithContext(context.Context) UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput
}

type userPoolAdminCreateUserConfigInviteMessageTemplatePtrType UserPoolAdminCreateUserConfigInviteMessageTemplateArgs

func UserPoolAdminCreateUserConfigInviteMessageTemplatePtr(v *UserPoolAdminCreateUserConfigInviteMessageTemplateArgs) UserPoolAdminCreateUserConfigInviteMessageTemplatePtrInput {
	return (*userPoolAdminCreateUserConfigInviteMessageTemplatePtrType)(v)
}

func (*userPoolAdminCreateUserConfigInviteMessageTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolAdminCreateUserConfigInviteMessageTemplate)(nil)).Elem()
}

func (i *userPoolAdminCreateUserConfigInviteMessageTemplatePtrType) ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput() UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput {
	return i.ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutputWithContext(context.Background())
}

func (i *userPoolAdminCreateUserConfigInviteMessageTemplatePtrType) ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput)
}

type UserPoolAdminCreateUserConfigInviteMessageTemplateOutput struct{ *pulumi.OutputState }

func (UserPoolAdminCreateUserConfigInviteMessageTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolAdminCreateUserConfigInviteMessageTemplate)(nil)).Elem()
}

func (o UserPoolAdminCreateUserConfigInviteMessageTemplateOutput) ToUserPoolAdminCreateUserConfigInviteMessageTemplateOutput() UserPoolAdminCreateUserConfigInviteMessageTemplateOutput {
	return o
}

func (o UserPoolAdminCreateUserConfigInviteMessageTemplateOutput) ToUserPoolAdminCreateUserConfigInviteMessageTemplateOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigInviteMessageTemplateOutput {
	return o
}

func (o UserPoolAdminCreateUserConfigInviteMessageTemplateOutput) ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput() UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput {
	return o.ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutputWithContext(context.Background())
}

func (o UserPoolAdminCreateUserConfigInviteMessageTemplateOutput) ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolAdminCreateUserConfigInviteMessageTemplate) *UserPoolAdminCreateUserConfigInviteMessageTemplate {
		return &v
	}).(UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput)
}

// Message template for email messages. Must contain `{username}` and `{####}` placeholders, for username and temporary password, respectively.
func (o UserPoolAdminCreateUserConfigInviteMessageTemplateOutput) EmailMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolAdminCreateUserConfigInviteMessageTemplate) *string { return v.EmailMessage }).(pulumi.StringPtrOutput)
}

// Subject line for email messages.
func (o UserPoolAdminCreateUserConfigInviteMessageTemplateOutput) EmailSubject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolAdminCreateUserConfigInviteMessageTemplate) *string { return v.EmailSubject }).(pulumi.StringPtrOutput)
}

// Message template for SMS messages. Must contain `{username}` and `{####}` placeholders, for username and temporary password, respectively.
func (o UserPoolAdminCreateUserConfigInviteMessageTemplateOutput) SmsMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolAdminCreateUserConfigInviteMessageTemplate) *string { return v.SmsMessage }).(pulumi.StringPtrOutput)
}

type UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput struct{ *pulumi.OutputState }

func (UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolAdminCreateUserConfigInviteMessageTemplate)(nil)).Elem()
}

func (o UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput) ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput() UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput {
	return o
}

func (o UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput) ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput {
	return o
}

func (o UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput) Elem() UserPoolAdminCreateUserConfigInviteMessageTemplateOutput {
	return o.ApplyT(func(v *UserPoolAdminCreateUserConfigInviteMessageTemplate) UserPoolAdminCreateUserConfigInviteMessageTemplate {
		if v != nil {
			return *v
		}
		var ret UserPoolAdminCreateUserConfigInviteMessageTemplate
		return ret
	}).(UserPoolAdminCreateUserConfigInviteMessageTemplateOutput)
}

// Message template for email messages. Must contain `{username}` and `{####}` placeholders, for username and temporary password, respectively.
func (o UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput) EmailMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolAdminCreateUserConfigInviteMessageTemplate) *string {
		if v == nil {
			return nil
		}
		return v.EmailMessage
	}).(pulumi.StringPtrOutput)
}

// Subject line for email messages.
func (o UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput) EmailSubject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolAdminCreateUserConfigInviteMessageTemplate) *string {
		if v == nil {
			return nil
		}
		return v.EmailSubject
	}).(pulumi.StringPtrOutput)
}

// Message template for SMS messages. Must contain `{username}` and `{####}` placeholders, for username and temporary password, respectively.
func (o UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput) SmsMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolAdminCreateUserConfigInviteMessageTemplate) *string {
		if v == nil {
			return nil
		}
		return v.SmsMessage
	}).(pulumi.StringPtrOutput)
}

type UserPoolClientAnalyticsConfiguration struct {
	// Application ARN for an Amazon Pinpoint application. Conflicts with `externalId` and `roleArn`.
	ApplicationArn *string `pulumi:"applicationArn"`
	// Application ID for an Amazon Pinpoint application.
	ApplicationId *string `pulumi:"applicationId"`
	// ID for the Analytics Configuration. Conflicts with `applicationArn`.
	ExternalId *string `pulumi:"externalId"`
	// ARN of an IAM role that authorizes Amazon Cognito to publish events to Amazon Pinpoint analytics. Conflicts with `applicationArn`.
	RoleArn *string `pulumi:"roleArn"`
	// If set to `true`, Amazon Cognito will include user data in the events it publishes to Amazon Pinpoint analytics.
	UserDataShared *bool `pulumi:"userDataShared"`
}

// UserPoolClientAnalyticsConfigurationInput is an input type that accepts UserPoolClientAnalyticsConfigurationArgs and UserPoolClientAnalyticsConfigurationOutput values.
// You can construct a concrete instance of `UserPoolClientAnalyticsConfigurationInput` via:
//
//	UserPoolClientAnalyticsConfigurationArgs{...}
type UserPoolClientAnalyticsConfigurationInput interface {
	pulumi.Input

	ToUserPoolClientAnalyticsConfigurationOutput() UserPoolClientAnalyticsConfigurationOutput
	ToUserPoolClientAnalyticsConfigurationOutputWithContext(context.Context) UserPoolClientAnalyticsConfigurationOutput
}

type UserPoolClientAnalyticsConfigurationArgs struct {
	// Application ARN for an Amazon Pinpoint application. Conflicts with `externalId` and `roleArn`.
	ApplicationArn pulumi.StringPtrInput `pulumi:"applicationArn"`
	// Application ID for an Amazon Pinpoint application.
	ApplicationId pulumi.StringPtrInput `pulumi:"applicationId"`
	// ID for the Analytics Configuration. Conflicts with `applicationArn`.
	ExternalId pulumi.StringPtrInput `pulumi:"externalId"`
	// ARN of an IAM role that authorizes Amazon Cognito to publish events to Amazon Pinpoint analytics. Conflicts with `applicationArn`.
	RoleArn pulumi.StringPtrInput `pulumi:"roleArn"`
	// If set to `true`, Amazon Cognito will include user data in the events it publishes to Amazon Pinpoint analytics.
	UserDataShared pulumi.BoolPtrInput `pulumi:"userDataShared"`
}

func (UserPoolClientAnalyticsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolClientAnalyticsConfiguration)(nil)).Elem()
}

func (i UserPoolClientAnalyticsConfigurationArgs) ToUserPoolClientAnalyticsConfigurationOutput() UserPoolClientAnalyticsConfigurationOutput {
	return i.ToUserPoolClientAnalyticsConfigurationOutputWithContext(context.Background())
}

func (i UserPoolClientAnalyticsConfigurationArgs) ToUserPoolClientAnalyticsConfigurationOutputWithContext(ctx context.Context) UserPoolClientAnalyticsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolClientAnalyticsConfigurationOutput)
}

func (i UserPoolClientAnalyticsConfigurationArgs) ToUserPoolClientAnalyticsConfigurationPtrOutput() UserPoolClientAnalyticsConfigurationPtrOutput {
	return i.ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(context.Background())
}

func (i UserPoolClientAnalyticsConfigurationArgs) ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(ctx context.Context) UserPoolClientAnalyticsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolClientAnalyticsConfigurationOutput).ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(ctx)
}

// UserPoolClientAnalyticsConfigurationPtrInput is an input type that accepts UserPoolClientAnalyticsConfigurationArgs, UserPoolClientAnalyticsConfigurationPtr and UserPoolClientAnalyticsConfigurationPtrOutput values.
// You can construct a concrete instance of `UserPoolClientAnalyticsConfigurationPtrInput` via:
//
//	        UserPoolClientAnalyticsConfigurationArgs{...}
//
//	or:
//
//	        nil
type UserPoolClientAnalyticsConfigurationPtrInput interface {
	pulumi.Input

	ToUserPoolClientAnalyticsConfigurationPtrOutput() UserPoolClientAnalyticsConfigurationPtrOutput
	ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(context.Context) UserPoolClientAnalyticsConfigurationPtrOutput
}

type userPoolClientAnalyticsConfigurationPtrType UserPoolClientAnalyticsConfigurationArgs

func UserPoolClientAnalyticsConfigurationPtr(v *UserPoolClientAnalyticsConfigurationArgs) UserPoolClientAnalyticsConfigurationPtrInput {
	return (*userPoolClientAnalyticsConfigurationPtrType)(v)
}

func (*userPoolClientAnalyticsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolClientAnalyticsConfiguration)(nil)).Elem()
}

func (i *userPoolClientAnalyticsConfigurationPtrType) ToUserPoolClientAnalyticsConfigurationPtrOutput() UserPoolClientAnalyticsConfigurationPtrOutput {
	return i.ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(context.Background())
}

func (i *userPoolClientAnalyticsConfigurationPtrType) ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(ctx context.Context) UserPoolClientAnalyticsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolClientAnalyticsConfigurationPtrOutput)
}

type UserPoolClientAnalyticsConfigurationOutput struct{ *pulumi.OutputState }

func (UserPoolClientAnalyticsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolClientAnalyticsConfiguration)(nil)).Elem()
}

func (o UserPoolClientAnalyticsConfigurationOutput) ToUserPoolClientAnalyticsConfigurationOutput() UserPoolClientAnalyticsConfigurationOutput {
	return o
}

func (o UserPoolClientAnalyticsConfigurationOutput) ToUserPoolClientAnalyticsConfigurationOutputWithContext(ctx context.Context) UserPoolClientAnalyticsConfigurationOutput {
	return o
}

func (o UserPoolClientAnalyticsConfigurationOutput) ToUserPoolClientAnalyticsConfigurationPtrOutput() UserPoolClientAnalyticsConfigurationPtrOutput {
	return o.ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(context.Background())
}

func (o UserPoolClientAnalyticsConfigurationOutput) ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(ctx context.Context) UserPoolClientAnalyticsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolClientAnalyticsConfiguration) *UserPoolClientAnalyticsConfiguration {
		return &v
	}).(UserPoolClientAnalyticsConfigurationPtrOutput)
}

// Application ARN for an Amazon Pinpoint application. Conflicts with `externalId` and `roleArn`.
func (o UserPoolClientAnalyticsConfigurationOutput) ApplicationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolClientAnalyticsConfiguration) *string { return v.ApplicationArn }).(pulumi.StringPtrOutput)
}

// Application ID for an Amazon Pinpoint application.
func (o UserPoolClientAnalyticsConfigurationOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolClientAnalyticsConfiguration) *string { return v.ApplicationId }).(pulumi.StringPtrOutput)
}

// ID for the Analytics Configuration. Conflicts with `applicationArn`.
func (o UserPoolClientAnalyticsConfigurationOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolClientAnalyticsConfiguration) *string { return v.ExternalId }).(pulumi.StringPtrOutput)
}

// ARN of an IAM role that authorizes Amazon Cognito to publish events to Amazon Pinpoint analytics. Conflicts with `applicationArn`.
func (o UserPoolClientAnalyticsConfigurationOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolClientAnalyticsConfiguration) *string { return v.RoleArn }).(pulumi.StringPtrOutput)
}

// If set to `true`, Amazon Cognito will include user data in the events it publishes to Amazon Pinpoint analytics.
func (o UserPoolClientAnalyticsConfigurationOutput) UserDataShared() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolClientAnalyticsConfiguration) *bool { return v.UserDataShared }).(pulumi.BoolPtrOutput)
}

type UserPoolClientAnalyticsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (UserPoolClientAnalyticsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolClientAnalyticsConfiguration)(nil)).Elem()
}

func (o UserPoolClientAnalyticsConfigurationPtrOutput) ToUserPoolClientAnalyticsConfigurationPtrOutput() UserPoolClientAnalyticsConfigurationPtrOutput {
	return o
}

func (o UserPoolClientAnalyticsConfigurationPtrOutput) ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(ctx context.Context) UserPoolClientAnalyticsConfigurationPtrOutput {
	return o
}

func (o UserPoolClientAnalyticsConfigurationPtrOutput) Elem() UserPoolClientAnalyticsConfigurationOutput {
	return o.ApplyT(func(v *UserPoolClientAnalyticsConfiguration) UserPoolClientAnalyticsConfiguration {
		if v != nil {
			return *v
		}
		var ret UserPoolClientAnalyticsConfiguration
		return ret
	}).(UserPoolClientAnalyticsConfigurationOutput)
}

// Application ARN for an Amazon Pinpoint application. Conflicts with `externalId` and `roleArn`.
func (o UserPoolClientAnalyticsConfigurationPtrOutput) ApplicationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolClientAnalyticsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationArn
	}).(pulumi.StringPtrOutput)
}

// Application ID for an Amazon Pinpoint application.
func (o UserPoolClientAnalyticsConfigurationPtrOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolClientAnalyticsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ApplicationId
	}).(pulumi.StringPtrOutput)
}

// ID for the Analytics Configuration. Conflicts with `applicationArn`.
func (o UserPoolClientAnalyticsConfigurationPtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolClientAnalyticsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ExternalId
	}).(pulumi.StringPtrOutput)
}

// ARN of an IAM role that authorizes Amazon Cognito to publish events to Amazon Pinpoint analytics. Conflicts with `applicationArn`.
func (o UserPoolClientAnalyticsConfigurationPtrOutput) RoleArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolClientAnalyticsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.RoleArn
	}).(pulumi.StringPtrOutput)
}

// If set to `true`, Amazon Cognito will include user data in the events it publishes to Amazon Pinpoint analytics.
func (o UserPoolClientAnalyticsConfigurationPtrOutput) UserDataShared() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserPoolClientAnalyticsConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.UserDataShared
	}).(pulumi.BoolPtrOutput)
}

type UserPoolClientTokenValidityUnits struct {
	// Time unit in for the value in `accessTokenValidity`, defaults to `hours`.
	AccessToken *string `pulumi:"accessToken"`
	// Time unit in for the value in `idTokenValidity`, defaults to `hours`.
	IdToken *string `pulumi:"idToken"`
	// Time unit in for the value in `refreshTokenValidity`, defaults to `days`.
	RefreshToken *string `pulumi:"refreshToken"`
}

// UserPoolClientTokenValidityUnitsInput is an input type that accepts UserPoolClientTokenValidityUnitsArgs and UserPoolClientTokenValidityUnitsOutput values.
// You can construct a concrete instance of `UserPoolClientTokenValidityUnitsInput` via:
//
//	UserPoolClientTokenValidityUnitsArgs{...}
type UserPoolClientTokenValidityUnitsInput interface {
	pulumi.Input

	ToUserPoolClientTokenValidityUnitsOutput() UserPoolClientTokenValidityUnitsOutput
	ToUserPoolClientTokenValidityUnitsOutputWithContext(context.Context) UserPoolClientTokenValidityUnitsOutput
}

type UserPoolClientTokenValidityUnitsArgs struct {
	// Time unit in for the value in `accessTokenValidity`, defaults to `hours`.
	AccessToken pulumi.StringPtrInput `pulumi:"accessToken"`
	// Time unit in for the value in `idTokenValidity`, defaults to `hours`.
	IdToken pulumi.StringPtrInput `pulumi:"idToken"`
	// Time unit in for the value in `refreshTokenValidity`, defaults to `days`.
	RefreshToken pulumi.StringPtrInput `pulumi:"refreshToken"`
}

func (UserPoolClientTokenValidityUnitsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolClientTokenValidityUnits)(nil)).Elem()
}

func (i UserPoolClientTokenValidityUnitsArgs) ToUserPoolClientTokenValidityUnitsOutput() UserPoolClientTokenValidityUnitsOutput {
	return i.ToUserPoolClientTokenValidityUnitsOutputWithContext(context.Background())
}

func (i UserPoolClientTokenValidityUnitsArgs) ToUserPoolClientTokenValidityUnitsOutputWithContext(ctx context.Context) UserPoolClientTokenValidityUnitsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolClientTokenValidityUnitsOutput)
}

func (i UserPoolClientTokenValidityUnitsArgs) ToUserPoolClientTokenValidityUnitsPtrOutput() UserPoolClientTokenValidityUnitsPtrOutput {
	return i.ToUserPoolClientTokenValidityUnitsPtrOutputWithContext(context.Background())
}

func (i UserPoolClientTokenValidityUnitsArgs) ToUserPoolClientTokenValidityUnitsPtrOutputWithContext(ctx context.Context) UserPoolClientTokenValidityUnitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolClientTokenValidityUnitsOutput).ToUserPoolClientTokenValidityUnitsPtrOutputWithContext(ctx)
}

// UserPoolClientTokenValidityUnitsPtrInput is an input type that accepts UserPoolClientTokenValidityUnitsArgs, UserPoolClientTokenValidityUnitsPtr and UserPoolClientTokenValidityUnitsPtrOutput values.
// You can construct a concrete instance of `UserPoolClientTokenValidityUnitsPtrInput` via:
//
//	        UserPoolClientTokenValidityUnitsArgs{...}
//
//	or:
//
//	        nil
type UserPoolClientTokenValidityUnitsPtrInput interface {
	pulumi.Input

	ToUserPoolClientTokenValidityUnitsPtrOutput() UserPoolClientTokenValidityUnitsPtrOutput
	ToUserPoolClientTokenValidityUnitsPtrOutputWithContext(context.Context) UserPoolClientTokenValidityUnitsPtrOutput
}

type userPoolClientTokenValidityUnitsPtrType UserPoolClientTokenValidityUnitsArgs

func UserPoolClientTokenValidityUnitsPtr(v *UserPoolClientTokenValidityUnitsArgs) UserPoolClientTokenValidityUnitsPtrInput {
	return (*userPoolClientTokenValidityUnitsPtrType)(v)
}

func (*userPoolClientTokenValidityUnitsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolClientTokenValidityUnits)(nil)).Elem()
}

func (i *userPoolClientTokenValidityUnitsPtrType) ToUserPoolClientTokenValidityUnitsPtrOutput() UserPoolClientTokenValidityUnitsPtrOutput {
	return i.ToUserPoolClientTokenValidityUnitsPtrOutputWithContext(context.Background())
}

func (i *userPoolClientTokenValidityUnitsPtrType) ToUserPoolClientTokenValidityUnitsPtrOutputWithContext(ctx context.Context) UserPoolClientTokenValidityUnitsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolClientTokenValidityUnitsPtrOutput)
}

type UserPoolClientTokenValidityUnitsOutput struct{ *pulumi.OutputState }

func (UserPoolClientTokenValidityUnitsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolClientTokenValidityUnits)(nil)).Elem()
}

func (o UserPoolClientTokenValidityUnitsOutput) ToUserPoolClientTokenValidityUnitsOutput() UserPoolClientTokenValidityUnitsOutput {
	return o
}

func (o UserPoolClientTokenValidityUnitsOutput) ToUserPoolClientTokenValidityUnitsOutputWithContext(ctx context.Context) UserPoolClientTokenValidityUnitsOutput {
	return o
}

func (o UserPoolClientTokenValidityUnitsOutput) ToUserPoolClientTokenValidityUnitsPtrOutput() UserPoolClientTokenValidityUnitsPtrOutput {
	return o.ToUserPoolClientTokenValidityUnitsPtrOutputWithContext(context.Background())
}

func (o UserPoolClientTokenValidityUnitsOutput) ToUserPoolClientTokenValidityUnitsPtrOutputWithContext(ctx context.Context) UserPoolClientTokenValidityUnitsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolClientTokenValidityUnits) *UserPoolClientTokenValidityUnits {
		return &v
	}).(UserPoolClientTokenValidityUnitsPtrOutput)
}

// Time unit in for the value in `accessTokenValidity`, defaults to `hours`.
func (o UserPoolClientTokenValidityUnitsOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolClientTokenValidityUnits) *string { return v.AccessToken }).(pulumi.StringPtrOutput)
}

// Time unit in for the value in `idTokenValidity`, defaults to `hours`.
func (o UserPoolClientTokenValidityUnitsOutput) IdToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolClientTokenValidityUnits) *string { return v.IdToken }).(pulumi.StringPtrOutput)
}

// Time unit in for the value in `refreshTokenValidity`, defaults to `days`.
func (o UserPoolClientTokenValidityUnitsOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolClientTokenValidityUnits) *string { return v.RefreshToken }).(pulumi.StringPtrOutput)
}

type UserPoolClientTokenValidityUnitsPtrOutput struct{ *pulumi.OutputState }

func (UserPoolClientTokenValidityUnitsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolClientTokenValidityUnits)(nil)).Elem()
}

func (o UserPoolClientTokenValidityUnitsPtrOutput) ToUserPoolClientTokenValidityUnitsPtrOutput() UserPoolClientTokenValidityUnitsPtrOutput {
	return o
}

func (o UserPoolClientTokenValidityUnitsPtrOutput) ToUserPoolClientTokenValidityUnitsPtrOutputWithContext(ctx context.Context) UserPoolClientTokenValidityUnitsPtrOutput {
	return o
}

func (o UserPoolClientTokenValidityUnitsPtrOutput) Elem() UserPoolClientTokenValidityUnitsOutput {
	return o.ApplyT(func(v *UserPoolClientTokenValidityUnits) UserPoolClientTokenValidityUnits {
		if v != nil {
			return *v
		}
		var ret UserPoolClientTokenValidityUnits
		return ret
	}).(UserPoolClientTokenValidityUnitsOutput)
}

// Time unit in for the value in `accessTokenValidity`, defaults to `hours`.
func (o UserPoolClientTokenValidityUnitsPtrOutput) AccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolClientTokenValidityUnits) *string {
		if v == nil {
			return nil
		}
		return v.AccessToken
	}).(pulumi.StringPtrOutput)
}

// Time unit in for the value in `idTokenValidity`, defaults to `hours`.
func (o UserPoolClientTokenValidityUnitsPtrOutput) IdToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolClientTokenValidityUnits) *string {
		if v == nil {
			return nil
		}
		return v.IdToken
	}).(pulumi.StringPtrOutput)
}

// Time unit in for the value in `refreshTokenValidity`, defaults to `days`.
func (o UserPoolClientTokenValidityUnitsPtrOutput) RefreshToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolClientTokenValidityUnits) *string {
		if v == nil {
			return nil
		}
		return v.RefreshToken
	}).(pulumi.StringPtrOutput)
}

type UserPoolDeviceConfiguration struct {
	// Whether a challenge is required on a new device. Only applicable to a new device.
	ChallengeRequiredOnNewDevice *bool `pulumi:"challengeRequiredOnNewDevice"`
	// Whether a device is only remembered on user prompt. `false` equates to "Always" remember, `true` is "User Opt In," and not using a `deviceConfiguration` block is "No."
	DeviceOnlyRememberedOnUserPrompt *bool `pulumi:"deviceOnlyRememberedOnUserPrompt"`
}

// UserPoolDeviceConfigurationInput is an input type that accepts UserPoolDeviceConfigurationArgs and UserPoolDeviceConfigurationOutput values.
// You can construct a concrete instance of `UserPoolDeviceConfigurationInput` via:
//
//	UserPoolDeviceConfigurationArgs{...}
type UserPoolDeviceConfigurationInput interface {
	pulumi.Input

	ToUserPoolDeviceConfigurationOutput() UserPoolDeviceConfigurationOutput
	ToUserPoolDeviceConfigurationOutputWithContext(context.Context) UserPoolDeviceConfigurationOutput
}

type UserPoolDeviceConfigurationArgs struct {
	// Whether a challenge is required on a new device. Only applicable to a new device.
	ChallengeRequiredOnNewDevice pulumi.BoolPtrInput `pulumi:"challengeRequiredOnNewDevice"`
	// Whether a device is only remembered on user prompt. `false` equates to "Always" remember, `true` is "User Opt In," and not using a `deviceConfiguration` block is "No."
	DeviceOnlyRememberedOnUserPrompt pulumi.BoolPtrInput `pulumi:"deviceOnlyRememberedOnUserPrompt"`
}

func (UserPoolDeviceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolDeviceConfiguration)(nil)).Elem()
}

func (i UserPoolDeviceConfigurationArgs) ToUserPoolDeviceConfigurationOutput() UserPoolDeviceConfigurationOutput {
	return i.ToUserPoolDeviceConfigurationOutputWithContext(context.Background())
}

func (i UserPoolDeviceConfigurationArgs) ToUserPoolDeviceConfigurationOutputWithContext(ctx context.Context) UserPoolDeviceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolDeviceConfigurationOutput)
}

func (i UserPoolDeviceConfigurationArgs) ToUserPoolDeviceConfigurationPtrOutput() UserPoolDeviceConfigurationPtrOutput {
	return i.ToUserPoolDeviceConfigurationPtrOutputWithContext(context.Background())
}

func (i UserPoolDeviceConfigurationArgs) ToUserPoolDeviceConfigurationPtrOutputWithContext(ctx context.Context) UserPoolDeviceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolDeviceConfigurationOutput).ToUserPoolDeviceConfigurationPtrOutputWithContext(ctx)
}

// UserPoolDeviceConfigurationPtrInput is an input type that accepts UserPoolDeviceConfigurationArgs, UserPoolDeviceConfigurationPtr and UserPoolDeviceConfigurationPtrOutput values.
// You can construct a concrete instance of `UserPoolDeviceConfigurationPtrInput` via:
//
//	        UserPoolDeviceConfigurationArgs{...}
//
//	or:
//
//	        nil
type UserPoolDeviceConfigurationPtrInput interface {
	pulumi.Input

	ToUserPoolDeviceConfigurationPtrOutput() UserPoolDeviceConfigurationPtrOutput
	ToUserPoolDeviceConfigurationPtrOutputWithContext(context.Context) UserPoolDeviceConfigurationPtrOutput
}

type userPoolDeviceConfigurationPtrType UserPoolDeviceConfigurationArgs

func UserPoolDeviceConfigurationPtr(v *UserPoolDeviceConfigurationArgs) UserPoolDeviceConfigurationPtrInput {
	return (*userPoolDeviceConfigurationPtrType)(v)
}

func (*userPoolDeviceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolDeviceConfiguration)(nil)).Elem()
}

func (i *userPoolDeviceConfigurationPtrType) ToUserPoolDeviceConfigurationPtrOutput() UserPoolDeviceConfigurationPtrOutput {
	return i.ToUserPoolDeviceConfigurationPtrOutputWithContext(context.Background())
}

func (i *userPoolDeviceConfigurationPtrType) ToUserPoolDeviceConfigurationPtrOutputWithContext(ctx context.Context) UserPoolDeviceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolDeviceConfigurationPtrOutput)
}

type UserPoolDeviceConfigurationOutput struct{ *pulumi.OutputState }

func (UserPoolDeviceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolDeviceConfiguration)(nil)).Elem()
}

func (o UserPoolDeviceConfigurationOutput) ToUserPoolDeviceConfigurationOutput() UserPoolDeviceConfigurationOutput {
	return o
}

func (o UserPoolDeviceConfigurationOutput) ToUserPoolDeviceConfigurationOutputWithContext(ctx context.Context) UserPoolDeviceConfigurationOutput {
	return o
}

func (o UserPoolDeviceConfigurationOutput) ToUserPoolDeviceConfigurationPtrOutput() UserPoolDeviceConfigurationPtrOutput {
	return o.ToUserPoolDeviceConfigurationPtrOutputWithContext(context.Background())
}

func (o UserPoolDeviceConfigurationOutput) ToUserPoolDeviceConfigurationPtrOutputWithContext(ctx context.Context) UserPoolDeviceConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolDeviceConfiguration) *UserPoolDeviceConfiguration {
		return &v
	}).(UserPoolDeviceConfigurationPtrOutput)
}

// Whether a challenge is required on a new device. Only applicable to a new device.
func (o UserPoolDeviceConfigurationOutput) ChallengeRequiredOnNewDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolDeviceConfiguration) *bool { return v.ChallengeRequiredOnNewDevice }).(pulumi.BoolPtrOutput)
}

// Whether a device is only remembered on user prompt. `false` equates to "Always" remember, `true` is "User Opt In," and not using a `deviceConfiguration` block is "No."
func (o UserPoolDeviceConfigurationOutput) DeviceOnlyRememberedOnUserPrompt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolDeviceConfiguration) *bool { return v.DeviceOnlyRememberedOnUserPrompt }).(pulumi.BoolPtrOutput)
}

type UserPoolDeviceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (UserPoolDeviceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolDeviceConfiguration)(nil)).Elem()
}

func (o UserPoolDeviceConfigurationPtrOutput) ToUserPoolDeviceConfigurationPtrOutput() UserPoolDeviceConfigurationPtrOutput {
	return o
}

func (o UserPoolDeviceConfigurationPtrOutput) ToUserPoolDeviceConfigurationPtrOutputWithContext(ctx context.Context) UserPoolDeviceConfigurationPtrOutput {
	return o
}

func (o UserPoolDeviceConfigurationPtrOutput) Elem() UserPoolDeviceConfigurationOutput {
	return o.ApplyT(func(v *UserPoolDeviceConfiguration) UserPoolDeviceConfiguration {
		if v != nil {
			return *v
		}
		var ret UserPoolDeviceConfiguration
		return ret
	}).(UserPoolDeviceConfigurationOutput)
}

// Whether a challenge is required on a new device. Only applicable to a new device.
func (o UserPoolDeviceConfigurationPtrOutput) ChallengeRequiredOnNewDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserPoolDeviceConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.ChallengeRequiredOnNewDevice
	}).(pulumi.BoolPtrOutput)
}

// Whether a device is only remembered on user prompt. `false` equates to "Always" remember, `true` is "User Opt In," and not using a `deviceConfiguration` block is "No."
func (o UserPoolDeviceConfigurationPtrOutput) DeviceOnlyRememberedOnUserPrompt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserPoolDeviceConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.DeviceOnlyRememberedOnUserPrompt
	}).(pulumi.BoolPtrOutput)
}

type UserPoolEmailConfiguration struct {
	// Email configuration set name from SES.
	ConfigurationSet *string `pulumi:"configurationSet"`
	// Email delivery method to use. `COGNITO_DEFAULT` for the default email functionality built into Cognito or `DEVELOPER` to use your Amazon SES configuration.
	EmailSendingAccount *string `pulumi:"emailSendingAccount"`
	// Sender’s email address or sender’s display name with their email address (e.g., `john@example.com`, `John Smith <john@example.com>` or `\"John Smith Ph.D.\" <john@example.com>`). Escaped double quotes are required around display names that contain certain characters as specified in [RFC 5322](https://tools.ietf.org/html/rfc5322).
	FromEmailAddress *string `pulumi:"fromEmailAddress"`
	// REPLY-TO email address.
	ReplyToEmailAddress *string `pulumi:"replyToEmailAddress"`
	// ARN of the SES verified email identity to use. Required if `emailSendingAccount` is set to `DEVELOPER`.
	SourceArn *string `pulumi:"sourceArn"`
}

// UserPoolEmailConfigurationInput is an input type that accepts UserPoolEmailConfigurationArgs and UserPoolEmailConfigurationOutput values.
// You can construct a concrete instance of `UserPoolEmailConfigurationInput` via:
//
//	UserPoolEmailConfigurationArgs{...}
type UserPoolEmailConfigurationInput interface {
	pulumi.Input

	ToUserPoolEmailConfigurationOutput() UserPoolEmailConfigurationOutput
	ToUserPoolEmailConfigurationOutputWithContext(context.Context) UserPoolEmailConfigurationOutput
}

type UserPoolEmailConfigurationArgs struct {
	// Email configuration set name from SES.
	ConfigurationSet pulumi.StringPtrInput `pulumi:"configurationSet"`
	// Email delivery method to use. `COGNITO_DEFAULT` for the default email functionality built into Cognito or `DEVELOPER` to use your Amazon SES configuration.
	EmailSendingAccount pulumi.StringPtrInput `pulumi:"emailSendingAccount"`
	// Sender’s email address or sender’s display name with their email address (e.g., `john@example.com`, `John Smith <john@example.com>` or `\"John Smith Ph.D.\" <john@example.com>`). Escaped double quotes are required around display names that contain certain characters as specified in [RFC 5322](https://tools.ietf.org/html/rfc5322).
	FromEmailAddress pulumi.StringPtrInput `pulumi:"fromEmailAddress"`
	// REPLY-TO email address.
	ReplyToEmailAddress pulumi.StringPtrInput `pulumi:"replyToEmailAddress"`
	// ARN of the SES verified email identity to use. Required if `emailSendingAccount` is set to `DEVELOPER`.
	SourceArn pulumi.StringPtrInput `pulumi:"sourceArn"`
}

func (UserPoolEmailConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolEmailConfiguration)(nil)).Elem()
}

func (i UserPoolEmailConfigurationArgs) ToUserPoolEmailConfigurationOutput() UserPoolEmailConfigurationOutput {
	return i.ToUserPoolEmailConfigurationOutputWithContext(context.Background())
}

func (i UserPoolEmailConfigurationArgs) ToUserPoolEmailConfigurationOutputWithContext(ctx context.Context) UserPoolEmailConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolEmailConfigurationOutput)
}

func (i UserPoolEmailConfigurationArgs) ToUserPoolEmailConfigurationPtrOutput() UserPoolEmailConfigurationPtrOutput {
	return i.ToUserPoolEmailConfigurationPtrOutputWithContext(context.Background())
}

func (i UserPoolEmailConfigurationArgs) ToUserPoolEmailConfigurationPtrOutputWithContext(ctx context.Context) UserPoolEmailConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolEmailConfigurationOutput).ToUserPoolEmailConfigurationPtrOutputWithContext(ctx)
}

// UserPoolEmailConfigurationPtrInput is an input type that accepts UserPoolEmailConfigurationArgs, UserPoolEmailConfigurationPtr and UserPoolEmailConfigurationPtrOutput values.
// You can construct a concrete instance of `UserPoolEmailConfigurationPtrInput` via:
//
//	        UserPoolEmailConfigurationArgs{...}
//
//	or:
//
//	        nil
type UserPoolEmailConfigurationPtrInput interface {
	pulumi.Input

	ToUserPoolEmailConfigurationPtrOutput() UserPoolEmailConfigurationPtrOutput
	ToUserPoolEmailConfigurationPtrOutputWithContext(context.Context) UserPoolEmailConfigurationPtrOutput
}

type userPoolEmailConfigurationPtrType UserPoolEmailConfigurationArgs

func UserPoolEmailConfigurationPtr(v *UserPoolEmailConfigurationArgs) UserPoolEmailConfigurationPtrInput {
	return (*userPoolEmailConfigurationPtrType)(v)
}

func (*userPoolEmailConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolEmailConfiguration)(nil)).Elem()
}

func (i *userPoolEmailConfigurationPtrType) ToUserPoolEmailConfigurationPtrOutput() UserPoolEmailConfigurationPtrOutput {
	return i.ToUserPoolEmailConfigurationPtrOutputWithContext(context.Background())
}

func (i *userPoolEmailConfigurationPtrType) ToUserPoolEmailConfigurationPtrOutputWithContext(ctx context.Context) UserPoolEmailConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolEmailConfigurationPtrOutput)
}

type UserPoolEmailConfigurationOutput struct{ *pulumi.OutputState }

func (UserPoolEmailConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolEmailConfiguration)(nil)).Elem()
}

func (o UserPoolEmailConfigurationOutput) ToUserPoolEmailConfigurationOutput() UserPoolEmailConfigurationOutput {
	return o
}

func (o UserPoolEmailConfigurationOutput) ToUserPoolEmailConfigurationOutputWithContext(ctx context.Context) UserPoolEmailConfigurationOutput {
	return o
}

func (o UserPoolEmailConfigurationOutput) ToUserPoolEmailConfigurationPtrOutput() UserPoolEmailConfigurationPtrOutput {
	return o.ToUserPoolEmailConfigurationPtrOutputWithContext(context.Background())
}

func (o UserPoolEmailConfigurationOutput) ToUserPoolEmailConfigurationPtrOutputWithContext(ctx context.Context) UserPoolEmailConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolEmailConfiguration) *UserPoolEmailConfiguration {
		return &v
	}).(UserPoolEmailConfigurationPtrOutput)
}

// Email configuration set name from SES.
func (o UserPoolEmailConfigurationOutput) ConfigurationSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolEmailConfiguration) *string { return v.ConfigurationSet }).(pulumi.StringPtrOutput)
}

// Email delivery method to use. `COGNITO_DEFAULT` for the default email functionality built into Cognito or `DEVELOPER` to use your Amazon SES configuration.
func (o UserPoolEmailConfigurationOutput) EmailSendingAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolEmailConfiguration) *string { return v.EmailSendingAccount }).(pulumi.StringPtrOutput)
}

// Sender’s email address or sender’s display name with their email address (e.g., `john@example.com`, `John Smith <john@example.com>` or `\"John Smith Ph.D.\" <john@example.com>`). Escaped double quotes are required around display names that contain certain characters as specified in [RFC 5322](https://tools.ietf.org/html/rfc5322).
func (o UserPoolEmailConfigurationOutput) FromEmailAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolEmailConfiguration) *string { return v.FromEmailAddress }).(pulumi.StringPtrOutput)
}

// REPLY-TO email address.
func (o UserPoolEmailConfigurationOutput) ReplyToEmailAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolEmailConfiguration) *string { return v.ReplyToEmailAddress }).(pulumi.StringPtrOutput)
}

// ARN of the SES verified email identity to use. Required if `emailSendingAccount` is set to `DEVELOPER`.
func (o UserPoolEmailConfigurationOutput) SourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolEmailConfiguration) *string { return v.SourceArn }).(pulumi.StringPtrOutput)
}

type UserPoolEmailConfigurationPtrOutput struct{ *pulumi.OutputState }

func (UserPoolEmailConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolEmailConfiguration)(nil)).Elem()
}

func (o UserPoolEmailConfigurationPtrOutput) ToUserPoolEmailConfigurationPtrOutput() UserPoolEmailConfigurationPtrOutput {
	return o
}

func (o UserPoolEmailConfigurationPtrOutput) ToUserPoolEmailConfigurationPtrOutputWithContext(ctx context.Context) UserPoolEmailConfigurationPtrOutput {
	return o
}

func (o UserPoolEmailConfigurationPtrOutput) Elem() UserPoolEmailConfigurationOutput {
	return o.ApplyT(func(v *UserPoolEmailConfiguration) UserPoolEmailConfiguration {
		if v != nil {
			return *v
		}
		var ret UserPoolEmailConfiguration
		return ret
	}).(UserPoolEmailConfigurationOutput)
}

// Email configuration set name from SES.
func (o UserPoolEmailConfigurationPtrOutput) ConfigurationSet() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolEmailConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ConfigurationSet
	}).(pulumi.StringPtrOutput)
}

// Email delivery method to use. `COGNITO_DEFAULT` for the default email functionality built into Cognito or `DEVELOPER` to use your Amazon SES configuration.
func (o UserPoolEmailConfigurationPtrOutput) EmailSendingAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolEmailConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.EmailSendingAccount
	}).(pulumi.StringPtrOutput)
}

// Sender’s email address or sender’s display name with their email address (e.g., `john@example.com`, `John Smith <john@example.com>` or `\"John Smith Ph.D.\" <john@example.com>`). Escaped double quotes are required around display names that contain certain characters as specified in [RFC 5322](https://tools.ietf.org/html/rfc5322).
func (o UserPoolEmailConfigurationPtrOutput) FromEmailAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolEmailConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.FromEmailAddress
	}).(pulumi.StringPtrOutput)
}

// REPLY-TO email address.
func (o UserPoolEmailConfigurationPtrOutput) ReplyToEmailAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolEmailConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.ReplyToEmailAddress
	}).(pulumi.StringPtrOutput)
}

// ARN of the SES verified email identity to use. Required if `emailSendingAccount` is set to `DEVELOPER`.
func (o UserPoolEmailConfigurationPtrOutput) SourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolEmailConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SourceArn
	}).(pulumi.StringPtrOutput)
}

type UserPoolLambdaConfig struct {
	// ARN of the lambda creating an authentication challenge.
	CreateAuthChallenge *string `pulumi:"createAuthChallenge"`
	// A custom email sender AWS Lambda trigger. See customEmailSender Below.
	CustomEmailSender *UserPoolLambdaConfigCustomEmailSender `pulumi:"customEmailSender"`
	// Custom Message AWS Lambda trigger.
	CustomMessage *string `pulumi:"customMessage"`
	// A custom SMS sender AWS Lambda trigger. See customSmsSender Below.
	CustomSmsSender *UserPoolLambdaConfigCustomSmsSender `pulumi:"customSmsSender"`
	// Defines the authentication challenge.
	DefineAuthChallenge *string `pulumi:"defineAuthChallenge"`
	// The Amazon Resource Name of Key Management Service Customer master keys. Amazon Cognito uses the key to encrypt codes and temporary passwords sent to CustomEmailSender and CustomSMSSender.
	KmsKeyId *string `pulumi:"kmsKeyId"`
	// Post-authentication AWS Lambda trigger.
	PostAuthentication *string `pulumi:"postAuthentication"`
	// Post-confirmation AWS Lambda trigger.
	PostConfirmation *string `pulumi:"postConfirmation"`
	// Pre-authentication AWS Lambda trigger.
	PreAuthentication *string `pulumi:"preAuthentication"`
	// Pre-registration AWS Lambda trigger.
	PreSignUp *string `pulumi:"preSignUp"`
	// Allow to customize identity token claims before token generation.
	PreTokenGeneration *string `pulumi:"preTokenGeneration"`
	// User migration Lambda config type.
	UserMigration *string `pulumi:"userMigration"`
	// Verifies the authentication challenge response.
	VerifyAuthChallengeResponse *string `pulumi:"verifyAuthChallengeResponse"`
}

// UserPoolLambdaConfigInput is an input type that accepts UserPoolLambdaConfigArgs and UserPoolLambdaConfigOutput values.
// You can construct a concrete instance of `UserPoolLambdaConfigInput` via:
//
//	UserPoolLambdaConfigArgs{...}
type UserPoolLambdaConfigInput interface {
	pulumi.Input

	ToUserPoolLambdaConfigOutput() UserPoolLambdaConfigOutput
	ToUserPoolLambdaConfigOutputWithContext(context.Context) UserPoolLambdaConfigOutput
}

type UserPoolLambdaConfigArgs struct {
	// ARN of the lambda creating an authentication challenge.
	CreateAuthChallenge pulumi.StringPtrInput `pulumi:"createAuthChallenge"`
	// A custom email sender AWS Lambda trigger. See customEmailSender Below.
	CustomEmailSender UserPoolLambdaConfigCustomEmailSenderPtrInput `pulumi:"customEmailSender"`
	// Custom Message AWS Lambda trigger.
	CustomMessage pulumi.StringPtrInput `pulumi:"customMessage"`
	// A custom SMS sender AWS Lambda trigger. See customSmsSender Below.
	CustomSmsSender UserPoolLambdaConfigCustomSmsSenderPtrInput `pulumi:"customSmsSender"`
	// Defines the authentication challenge.
	DefineAuthChallenge pulumi.StringPtrInput `pulumi:"defineAuthChallenge"`
	// The Amazon Resource Name of Key Management Service Customer master keys. Amazon Cognito uses the key to encrypt codes and temporary passwords sent to CustomEmailSender and CustomSMSSender.
	KmsKeyId pulumi.StringPtrInput `pulumi:"kmsKeyId"`
	// Post-authentication AWS Lambda trigger.
	PostAuthentication pulumi.StringPtrInput `pulumi:"postAuthentication"`
	// Post-confirmation AWS Lambda trigger.
	PostConfirmation pulumi.StringPtrInput `pulumi:"postConfirmation"`
	// Pre-authentication AWS Lambda trigger.
	PreAuthentication pulumi.StringPtrInput `pulumi:"preAuthentication"`
	// Pre-registration AWS Lambda trigger.
	PreSignUp pulumi.StringPtrInput `pulumi:"preSignUp"`
	// Allow to customize identity token claims before token generation.
	PreTokenGeneration pulumi.StringPtrInput `pulumi:"preTokenGeneration"`
	// User migration Lambda config type.
	UserMigration pulumi.StringPtrInput `pulumi:"userMigration"`
	// Verifies the authentication challenge response.
	VerifyAuthChallengeResponse pulumi.StringPtrInput `pulumi:"verifyAuthChallengeResponse"`
}

func (UserPoolLambdaConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolLambdaConfig)(nil)).Elem()
}

func (i UserPoolLambdaConfigArgs) ToUserPoolLambdaConfigOutput() UserPoolLambdaConfigOutput {
	return i.ToUserPoolLambdaConfigOutputWithContext(context.Background())
}

func (i UserPoolLambdaConfigArgs) ToUserPoolLambdaConfigOutputWithContext(ctx context.Context) UserPoolLambdaConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolLambdaConfigOutput)
}

func (i UserPoolLambdaConfigArgs) ToUserPoolLambdaConfigPtrOutput() UserPoolLambdaConfigPtrOutput {
	return i.ToUserPoolLambdaConfigPtrOutputWithContext(context.Background())
}

func (i UserPoolLambdaConfigArgs) ToUserPoolLambdaConfigPtrOutputWithContext(ctx context.Context) UserPoolLambdaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolLambdaConfigOutput).ToUserPoolLambdaConfigPtrOutputWithContext(ctx)
}

// UserPoolLambdaConfigPtrInput is an input type that accepts UserPoolLambdaConfigArgs, UserPoolLambdaConfigPtr and UserPoolLambdaConfigPtrOutput values.
// You can construct a concrete instance of `UserPoolLambdaConfigPtrInput` via:
//
//	        UserPoolLambdaConfigArgs{...}
//
//	or:
//
//	        nil
type UserPoolLambdaConfigPtrInput interface {
	pulumi.Input

	ToUserPoolLambdaConfigPtrOutput() UserPoolLambdaConfigPtrOutput
	ToUserPoolLambdaConfigPtrOutputWithContext(context.Context) UserPoolLambdaConfigPtrOutput
}

type userPoolLambdaConfigPtrType UserPoolLambdaConfigArgs

func UserPoolLambdaConfigPtr(v *UserPoolLambdaConfigArgs) UserPoolLambdaConfigPtrInput {
	return (*userPoolLambdaConfigPtrType)(v)
}

func (*userPoolLambdaConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolLambdaConfig)(nil)).Elem()
}

func (i *userPoolLambdaConfigPtrType) ToUserPoolLambdaConfigPtrOutput() UserPoolLambdaConfigPtrOutput {
	return i.ToUserPoolLambdaConfigPtrOutputWithContext(context.Background())
}

func (i *userPoolLambdaConfigPtrType) ToUserPoolLambdaConfigPtrOutputWithContext(ctx context.Context) UserPoolLambdaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolLambdaConfigPtrOutput)
}

type UserPoolLambdaConfigOutput struct{ *pulumi.OutputState }

func (UserPoolLambdaConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolLambdaConfig)(nil)).Elem()
}

func (o UserPoolLambdaConfigOutput) ToUserPoolLambdaConfigOutput() UserPoolLambdaConfigOutput {
	return o
}

func (o UserPoolLambdaConfigOutput) ToUserPoolLambdaConfigOutputWithContext(ctx context.Context) UserPoolLambdaConfigOutput {
	return o
}

func (o UserPoolLambdaConfigOutput) ToUserPoolLambdaConfigPtrOutput() UserPoolLambdaConfigPtrOutput {
	return o.ToUserPoolLambdaConfigPtrOutputWithContext(context.Background())
}

func (o UserPoolLambdaConfigOutput) ToUserPoolLambdaConfigPtrOutputWithContext(ctx context.Context) UserPoolLambdaConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolLambdaConfig) *UserPoolLambdaConfig {
		return &v
	}).(UserPoolLambdaConfigPtrOutput)
}

// ARN of the lambda creating an authentication challenge.
func (o UserPoolLambdaConfigOutput) CreateAuthChallenge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.CreateAuthChallenge }).(pulumi.StringPtrOutput)
}

// A custom email sender AWS Lambda trigger. See customEmailSender Below.
func (o UserPoolLambdaConfigOutput) CustomEmailSender() UserPoolLambdaConfigCustomEmailSenderPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *UserPoolLambdaConfigCustomEmailSender { return v.CustomEmailSender }).(UserPoolLambdaConfigCustomEmailSenderPtrOutput)
}

// Custom Message AWS Lambda trigger.
func (o UserPoolLambdaConfigOutput) CustomMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.CustomMessage }).(pulumi.StringPtrOutput)
}

// A custom SMS sender AWS Lambda trigger. See customSmsSender Below.
func (o UserPoolLambdaConfigOutput) CustomSmsSender() UserPoolLambdaConfigCustomSmsSenderPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *UserPoolLambdaConfigCustomSmsSender { return v.CustomSmsSender }).(UserPoolLambdaConfigCustomSmsSenderPtrOutput)
}

// Defines the authentication challenge.
func (o UserPoolLambdaConfigOutput) DefineAuthChallenge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.DefineAuthChallenge }).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name of Key Management Service Customer master keys. Amazon Cognito uses the key to encrypt codes and temporary passwords sent to CustomEmailSender and CustomSMSSender.
func (o UserPoolLambdaConfigOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.KmsKeyId }).(pulumi.StringPtrOutput)
}

// Post-authentication AWS Lambda trigger.
func (o UserPoolLambdaConfigOutput) PostAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.PostAuthentication }).(pulumi.StringPtrOutput)
}

// Post-confirmation AWS Lambda trigger.
func (o UserPoolLambdaConfigOutput) PostConfirmation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.PostConfirmation }).(pulumi.StringPtrOutput)
}

// Pre-authentication AWS Lambda trigger.
func (o UserPoolLambdaConfigOutput) PreAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.PreAuthentication }).(pulumi.StringPtrOutput)
}

// Pre-registration AWS Lambda trigger.
func (o UserPoolLambdaConfigOutput) PreSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.PreSignUp }).(pulumi.StringPtrOutput)
}

// Allow to customize identity token claims before token generation.
func (o UserPoolLambdaConfigOutput) PreTokenGeneration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.PreTokenGeneration }).(pulumi.StringPtrOutput)
}

// User migration Lambda config type.
func (o UserPoolLambdaConfigOutput) UserMigration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.UserMigration }).(pulumi.StringPtrOutput)
}

// Verifies the authentication challenge response.
func (o UserPoolLambdaConfigOutput) VerifyAuthChallengeResponse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.VerifyAuthChallengeResponse }).(pulumi.StringPtrOutput)
}

type UserPoolLambdaConfigPtrOutput struct{ *pulumi.OutputState }

func (UserPoolLambdaConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolLambdaConfig)(nil)).Elem()
}

func (o UserPoolLambdaConfigPtrOutput) ToUserPoolLambdaConfigPtrOutput() UserPoolLambdaConfigPtrOutput {
	return o
}

func (o UserPoolLambdaConfigPtrOutput) ToUserPoolLambdaConfigPtrOutputWithContext(ctx context.Context) UserPoolLambdaConfigPtrOutput {
	return o
}

func (o UserPoolLambdaConfigPtrOutput) Elem() UserPoolLambdaConfigOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) UserPoolLambdaConfig {
		if v != nil {
			return *v
		}
		var ret UserPoolLambdaConfig
		return ret
	}).(UserPoolLambdaConfigOutput)
}

// ARN of the lambda creating an authentication challenge.
func (o UserPoolLambdaConfigPtrOutput) CreateAuthChallenge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return v.CreateAuthChallenge
	}).(pulumi.StringPtrOutput)
}

// A custom email sender AWS Lambda trigger. See customEmailSender Below.
func (o UserPoolLambdaConfigPtrOutput) CustomEmailSender() UserPoolLambdaConfigCustomEmailSenderPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *UserPoolLambdaConfigCustomEmailSender {
		if v == nil {
			return nil
		}
		return v.CustomEmailSender
	}).(UserPoolLambdaConfigCustomEmailSenderPtrOutput)
}

// Custom Message AWS Lambda trigger.
func (o UserPoolLambdaConfigPtrOutput) CustomMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return v.CustomMessage
	}).(pulumi.StringPtrOutput)
}

// A custom SMS sender AWS Lambda trigger. See customSmsSender Below.
func (o UserPoolLambdaConfigPtrOutput) CustomSmsSender() UserPoolLambdaConfigCustomSmsSenderPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *UserPoolLambdaConfigCustomSmsSender {
		if v == nil {
			return nil
		}
		return v.CustomSmsSender
	}).(UserPoolLambdaConfigCustomSmsSenderPtrOutput)
}

// Defines the authentication challenge.
func (o UserPoolLambdaConfigPtrOutput) DefineAuthChallenge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return v.DefineAuthChallenge
	}).(pulumi.StringPtrOutput)
}

// The Amazon Resource Name of Key Management Service Customer master keys. Amazon Cognito uses the key to encrypt codes and temporary passwords sent to CustomEmailSender and CustomSMSSender.
func (o UserPoolLambdaConfigPtrOutput) KmsKeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return v.KmsKeyId
	}).(pulumi.StringPtrOutput)
}

// Post-authentication AWS Lambda trigger.
func (o UserPoolLambdaConfigPtrOutput) PostAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return v.PostAuthentication
	}).(pulumi.StringPtrOutput)
}

// Post-confirmation AWS Lambda trigger.
func (o UserPoolLambdaConfigPtrOutput) PostConfirmation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return v.PostConfirmation
	}).(pulumi.StringPtrOutput)
}

// Pre-authentication AWS Lambda trigger.
func (o UserPoolLambdaConfigPtrOutput) PreAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return v.PreAuthentication
	}).(pulumi.StringPtrOutput)
}

// Pre-registration AWS Lambda trigger.
func (o UserPoolLambdaConfigPtrOutput) PreSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return v.PreSignUp
	}).(pulumi.StringPtrOutput)
}

// Allow to customize identity token claims before token generation.
func (o UserPoolLambdaConfigPtrOutput) PreTokenGeneration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return v.PreTokenGeneration
	}).(pulumi.StringPtrOutput)
}

// User migration Lambda config type.
func (o UserPoolLambdaConfigPtrOutput) UserMigration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return v.UserMigration
	}).(pulumi.StringPtrOutput)
}

// Verifies the authentication challenge response.
func (o UserPoolLambdaConfigPtrOutput) VerifyAuthChallengeResponse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) *string {
		if v == nil {
			return nil
		}
		return v.VerifyAuthChallengeResponse
	}).(pulumi.StringPtrOutput)
}

type UserPoolLambdaConfigCustomEmailSender struct {
	// The Lambda Amazon Resource Name of the Lambda function that Amazon Cognito triggers to send email notifications to users.
	LambdaArn string `pulumi:"lambdaArn"`
	// The Lambda version represents the signature of the "request" attribute in the "event" information Amazon Cognito passes to your custom email Lambda function. The only supported value is `V1_0`.
	LambdaVersion string `pulumi:"lambdaVersion"`
}

// UserPoolLambdaConfigCustomEmailSenderInput is an input type that accepts UserPoolLambdaConfigCustomEmailSenderArgs and UserPoolLambdaConfigCustomEmailSenderOutput values.
// You can construct a concrete instance of `UserPoolLambdaConfigCustomEmailSenderInput` via:
//
//	UserPoolLambdaConfigCustomEmailSenderArgs{...}
type UserPoolLambdaConfigCustomEmailSenderInput interface {
	pulumi.Input

	ToUserPoolLambdaConfigCustomEmailSenderOutput() UserPoolLambdaConfigCustomEmailSenderOutput
	ToUserPoolLambdaConfigCustomEmailSenderOutputWithContext(context.Context) UserPoolLambdaConfigCustomEmailSenderOutput
}

type UserPoolLambdaConfigCustomEmailSenderArgs struct {
	// The Lambda Amazon Resource Name of the Lambda function that Amazon Cognito triggers to send email notifications to users.
	LambdaArn pulumi.StringInput `pulumi:"lambdaArn"`
	// The Lambda version represents the signature of the "request" attribute in the "event" information Amazon Cognito passes to your custom email Lambda function. The only supported value is `V1_0`.
	LambdaVersion pulumi.StringInput `pulumi:"lambdaVersion"`
}

func (UserPoolLambdaConfigCustomEmailSenderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolLambdaConfigCustomEmailSender)(nil)).Elem()
}

func (i UserPoolLambdaConfigCustomEmailSenderArgs) ToUserPoolLambdaConfigCustomEmailSenderOutput() UserPoolLambdaConfigCustomEmailSenderOutput {
	return i.ToUserPoolLambdaConfigCustomEmailSenderOutputWithContext(context.Background())
}

func (i UserPoolLambdaConfigCustomEmailSenderArgs) ToUserPoolLambdaConfigCustomEmailSenderOutputWithContext(ctx context.Context) UserPoolLambdaConfigCustomEmailSenderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolLambdaConfigCustomEmailSenderOutput)
}

func (i UserPoolLambdaConfigCustomEmailSenderArgs) ToUserPoolLambdaConfigCustomEmailSenderPtrOutput() UserPoolLambdaConfigCustomEmailSenderPtrOutput {
	return i.ToUserPoolLambdaConfigCustomEmailSenderPtrOutputWithContext(context.Background())
}

func (i UserPoolLambdaConfigCustomEmailSenderArgs) ToUserPoolLambdaConfigCustomEmailSenderPtrOutputWithContext(ctx context.Context) UserPoolLambdaConfigCustomEmailSenderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolLambdaConfigCustomEmailSenderOutput).ToUserPoolLambdaConfigCustomEmailSenderPtrOutputWithContext(ctx)
}

// UserPoolLambdaConfigCustomEmailSenderPtrInput is an input type that accepts UserPoolLambdaConfigCustomEmailSenderArgs, UserPoolLambdaConfigCustomEmailSenderPtr and UserPoolLambdaConfigCustomEmailSenderPtrOutput values.
// You can construct a concrete instance of `UserPoolLambdaConfigCustomEmailSenderPtrInput` via:
//
//	        UserPoolLambdaConfigCustomEmailSenderArgs{...}
//
//	or:
//
//	        nil
type UserPoolLambdaConfigCustomEmailSenderPtrInput interface {
	pulumi.Input

	ToUserPoolLambdaConfigCustomEmailSenderPtrOutput() UserPoolLambdaConfigCustomEmailSenderPtrOutput
	ToUserPoolLambdaConfigCustomEmailSenderPtrOutputWithContext(context.Context) UserPoolLambdaConfigCustomEmailSenderPtrOutput
}

type userPoolLambdaConfigCustomEmailSenderPtrType UserPoolLambdaConfigCustomEmailSenderArgs

func UserPoolLambdaConfigCustomEmailSenderPtr(v *UserPoolLambdaConfigCustomEmailSenderArgs) UserPoolLambdaConfigCustomEmailSenderPtrInput {
	return (*userPoolLambdaConfigCustomEmailSenderPtrType)(v)
}

func (*userPoolLambdaConfigCustomEmailSenderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolLambdaConfigCustomEmailSender)(nil)).Elem()
}

func (i *userPoolLambdaConfigCustomEmailSenderPtrType) ToUserPoolLambdaConfigCustomEmailSenderPtrOutput() UserPoolLambdaConfigCustomEmailSenderPtrOutput {
	return i.ToUserPoolLambdaConfigCustomEmailSenderPtrOutputWithContext(context.Background())
}

func (i *userPoolLambdaConfigCustomEmailSenderPtrType) ToUserPoolLambdaConfigCustomEmailSenderPtrOutputWithContext(ctx context.Context) UserPoolLambdaConfigCustomEmailSenderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolLambdaConfigCustomEmailSenderPtrOutput)
}

type UserPoolLambdaConfigCustomEmailSenderOutput struct{ *pulumi.OutputState }

func (UserPoolLambdaConfigCustomEmailSenderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolLambdaConfigCustomEmailSender)(nil)).Elem()
}

func (o UserPoolLambdaConfigCustomEmailSenderOutput) ToUserPoolLambdaConfigCustomEmailSenderOutput() UserPoolLambdaConfigCustomEmailSenderOutput {
	return o
}

func (o UserPoolLambdaConfigCustomEmailSenderOutput) ToUserPoolLambdaConfigCustomEmailSenderOutputWithContext(ctx context.Context) UserPoolLambdaConfigCustomEmailSenderOutput {
	return o
}

func (o UserPoolLambdaConfigCustomEmailSenderOutput) ToUserPoolLambdaConfigCustomEmailSenderPtrOutput() UserPoolLambdaConfigCustomEmailSenderPtrOutput {
	return o.ToUserPoolLambdaConfigCustomEmailSenderPtrOutputWithContext(context.Background())
}

func (o UserPoolLambdaConfigCustomEmailSenderOutput) ToUserPoolLambdaConfigCustomEmailSenderPtrOutputWithContext(ctx context.Context) UserPoolLambdaConfigCustomEmailSenderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolLambdaConfigCustomEmailSender) *UserPoolLambdaConfigCustomEmailSender {
		return &v
	}).(UserPoolLambdaConfigCustomEmailSenderPtrOutput)
}

// The Lambda Amazon Resource Name of the Lambda function that Amazon Cognito triggers to send email notifications to users.
func (o UserPoolLambdaConfigCustomEmailSenderOutput) LambdaArn() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolLambdaConfigCustomEmailSender) string { return v.LambdaArn }).(pulumi.StringOutput)
}

// The Lambda version represents the signature of the "request" attribute in the "event" information Amazon Cognito passes to your custom email Lambda function. The only supported value is `V1_0`.
func (o UserPoolLambdaConfigCustomEmailSenderOutput) LambdaVersion() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolLambdaConfigCustomEmailSender) string { return v.LambdaVersion }).(pulumi.StringOutput)
}

type UserPoolLambdaConfigCustomEmailSenderPtrOutput struct{ *pulumi.OutputState }

func (UserPoolLambdaConfigCustomEmailSenderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolLambdaConfigCustomEmailSender)(nil)).Elem()
}

func (o UserPoolLambdaConfigCustomEmailSenderPtrOutput) ToUserPoolLambdaConfigCustomEmailSenderPtrOutput() UserPoolLambdaConfigCustomEmailSenderPtrOutput {
	return o
}

func (o UserPoolLambdaConfigCustomEmailSenderPtrOutput) ToUserPoolLambdaConfigCustomEmailSenderPtrOutputWithContext(ctx context.Context) UserPoolLambdaConfigCustomEmailSenderPtrOutput {
	return o
}

func (o UserPoolLambdaConfigCustomEmailSenderPtrOutput) Elem() UserPoolLambdaConfigCustomEmailSenderOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfigCustomEmailSender) UserPoolLambdaConfigCustomEmailSender {
		if v != nil {
			return *v
		}
		var ret UserPoolLambdaConfigCustomEmailSender
		return ret
	}).(UserPoolLambdaConfigCustomEmailSenderOutput)
}

// The Lambda Amazon Resource Name of the Lambda function that Amazon Cognito triggers to send email notifications to users.
func (o UserPoolLambdaConfigCustomEmailSenderPtrOutput) LambdaArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfigCustomEmailSender) *string {
		if v == nil {
			return nil
		}
		return &v.LambdaArn
	}).(pulumi.StringPtrOutput)
}

// The Lambda version represents the signature of the "request" attribute in the "event" information Amazon Cognito passes to your custom email Lambda function. The only supported value is `V1_0`.
func (o UserPoolLambdaConfigCustomEmailSenderPtrOutput) LambdaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfigCustomEmailSender) *string {
		if v == nil {
			return nil
		}
		return &v.LambdaVersion
	}).(pulumi.StringPtrOutput)
}

type UserPoolLambdaConfigCustomSmsSender struct {
	// The Lambda Amazon Resource Name of the Lambda function that Amazon Cognito triggers to send SMS notifications to users.
	LambdaArn string `pulumi:"lambdaArn"`
	// The Lambda version represents the signature of the "request" attribute in the "event" information Amazon Cognito passes to your custom SMS Lambda function. The only supported value is `V1_0`.
	LambdaVersion string `pulumi:"lambdaVersion"`
}

// UserPoolLambdaConfigCustomSmsSenderInput is an input type that accepts UserPoolLambdaConfigCustomSmsSenderArgs and UserPoolLambdaConfigCustomSmsSenderOutput values.
// You can construct a concrete instance of `UserPoolLambdaConfigCustomSmsSenderInput` via:
//
//	UserPoolLambdaConfigCustomSmsSenderArgs{...}
type UserPoolLambdaConfigCustomSmsSenderInput interface {
	pulumi.Input

	ToUserPoolLambdaConfigCustomSmsSenderOutput() UserPoolLambdaConfigCustomSmsSenderOutput
	ToUserPoolLambdaConfigCustomSmsSenderOutputWithContext(context.Context) UserPoolLambdaConfigCustomSmsSenderOutput
}

type UserPoolLambdaConfigCustomSmsSenderArgs struct {
	// The Lambda Amazon Resource Name of the Lambda function that Amazon Cognito triggers to send SMS notifications to users.
	LambdaArn pulumi.StringInput `pulumi:"lambdaArn"`
	// The Lambda version represents the signature of the "request" attribute in the "event" information Amazon Cognito passes to your custom SMS Lambda function. The only supported value is `V1_0`.
	LambdaVersion pulumi.StringInput `pulumi:"lambdaVersion"`
}

func (UserPoolLambdaConfigCustomSmsSenderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolLambdaConfigCustomSmsSender)(nil)).Elem()
}

func (i UserPoolLambdaConfigCustomSmsSenderArgs) ToUserPoolLambdaConfigCustomSmsSenderOutput() UserPoolLambdaConfigCustomSmsSenderOutput {
	return i.ToUserPoolLambdaConfigCustomSmsSenderOutputWithContext(context.Background())
}

func (i UserPoolLambdaConfigCustomSmsSenderArgs) ToUserPoolLambdaConfigCustomSmsSenderOutputWithContext(ctx context.Context) UserPoolLambdaConfigCustomSmsSenderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolLambdaConfigCustomSmsSenderOutput)
}

func (i UserPoolLambdaConfigCustomSmsSenderArgs) ToUserPoolLambdaConfigCustomSmsSenderPtrOutput() UserPoolLambdaConfigCustomSmsSenderPtrOutput {
	return i.ToUserPoolLambdaConfigCustomSmsSenderPtrOutputWithContext(context.Background())
}

func (i UserPoolLambdaConfigCustomSmsSenderArgs) ToUserPoolLambdaConfigCustomSmsSenderPtrOutputWithContext(ctx context.Context) UserPoolLambdaConfigCustomSmsSenderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolLambdaConfigCustomSmsSenderOutput).ToUserPoolLambdaConfigCustomSmsSenderPtrOutputWithContext(ctx)
}

// UserPoolLambdaConfigCustomSmsSenderPtrInput is an input type that accepts UserPoolLambdaConfigCustomSmsSenderArgs, UserPoolLambdaConfigCustomSmsSenderPtr and UserPoolLambdaConfigCustomSmsSenderPtrOutput values.
// You can construct a concrete instance of `UserPoolLambdaConfigCustomSmsSenderPtrInput` via:
//
//	        UserPoolLambdaConfigCustomSmsSenderArgs{...}
//
//	or:
//
//	        nil
type UserPoolLambdaConfigCustomSmsSenderPtrInput interface {
	pulumi.Input

	ToUserPoolLambdaConfigCustomSmsSenderPtrOutput() UserPoolLambdaConfigCustomSmsSenderPtrOutput
	ToUserPoolLambdaConfigCustomSmsSenderPtrOutputWithContext(context.Context) UserPoolLambdaConfigCustomSmsSenderPtrOutput
}

type userPoolLambdaConfigCustomSmsSenderPtrType UserPoolLambdaConfigCustomSmsSenderArgs

func UserPoolLambdaConfigCustomSmsSenderPtr(v *UserPoolLambdaConfigCustomSmsSenderArgs) UserPoolLambdaConfigCustomSmsSenderPtrInput {
	return (*userPoolLambdaConfigCustomSmsSenderPtrType)(v)
}

func (*userPoolLambdaConfigCustomSmsSenderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolLambdaConfigCustomSmsSender)(nil)).Elem()
}

func (i *userPoolLambdaConfigCustomSmsSenderPtrType) ToUserPoolLambdaConfigCustomSmsSenderPtrOutput() UserPoolLambdaConfigCustomSmsSenderPtrOutput {
	return i.ToUserPoolLambdaConfigCustomSmsSenderPtrOutputWithContext(context.Background())
}

func (i *userPoolLambdaConfigCustomSmsSenderPtrType) ToUserPoolLambdaConfigCustomSmsSenderPtrOutputWithContext(ctx context.Context) UserPoolLambdaConfigCustomSmsSenderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolLambdaConfigCustomSmsSenderPtrOutput)
}

type UserPoolLambdaConfigCustomSmsSenderOutput struct{ *pulumi.OutputState }

func (UserPoolLambdaConfigCustomSmsSenderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolLambdaConfigCustomSmsSender)(nil)).Elem()
}

func (o UserPoolLambdaConfigCustomSmsSenderOutput) ToUserPoolLambdaConfigCustomSmsSenderOutput() UserPoolLambdaConfigCustomSmsSenderOutput {
	return o
}

func (o UserPoolLambdaConfigCustomSmsSenderOutput) ToUserPoolLambdaConfigCustomSmsSenderOutputWithContext(ctx context.Context) UserPoolLambdaConfigCustomSmsSenderOutput {
	return o
}

func (o UserPoolLambdaConfigCustomSmsSenderOutput) ToUserPoolLambdaConfigCustomSmsSenderPtrOutput() UserPoolLambdaConfigCustomSmsSenderPtrOutput {
	return o.ToUserPoolLambdaConfigCustomSmsSenderPtrOutputWithContext(context.Background())
}

func (o UserPoolLambdaConfigCustomSmsSenderOutput) ToUserPoolLambdaConfigCustomSmsSenderPtrOutputWithContext(ctx context.Context) UserPoolLambdaConfigCustomSmsSenderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolLambdaConfigCustomSmsSender) *UserPoolLambdaConfigCustomSmsSender {
		return &v
	}).(UserPoolLambdaConfigCustomSmsSenderPtrOutput)
}

// The Lambda Amazon Resource Name of the Lambda function that Amazon Cognito triggers to send SMS notifications to users.
func (o UserPoolLambdaConfigCustomSmsSenderOutput) LambdaArn() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolLambdaConfigCustomSmsSender) string { return v.LambdaArn }).(pulumi.StringOutput)
}

// The Lambda version represents the signature of the "request" attribute in the "event" information Amazon Cognito passes to your custom SMS Lambda function. The only supported value is `V1_0`.
func (o UserPoolLambdaConfigCustomSmsSenderOutput) LambdaVersion() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolLambdaConfigCustomSmsSender) string { return v.LambdaVersion }).(pulumi.StringOutput)
}

type UserPoolLambdaConfigCustomSmsSenderPtrOutput struct{ *pulumi.OutputState }

func (UserPoolLambdaConfigCustomSmsSenderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolLambdaConfigCustomSmsSender)(nil)).Elem()
}

func (o UserPoolLambdaConfigCustomSmsSenderPtrOutput) ToUserPoolLambdaConfigCustomSmsSenderPtrOutput() UserPoolLambdaConfigCustomSmsSenderPtrOutput {
	return o
}

func (o UserPoolLambdaConfigCustomSmsSenderPtrOutput) ToUserPoolLambdaConfigCustomSmsSenderPtrOutputWithContext(ctx context.Context) UserPoolLambdaConfigCustomSmsSenderPtrOutput {
	return o
}

func (o UserPoolLambdaConfigCustomSmsSenderPtrOutput) Elem() UserPoolLambdaConfigCustomSmsSenderOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfigCustomSmsSender) UserPoolLambdaConfigCustomSmsSender {
		if v != nil {
			return *v
		}
		var ret UserPoolLambdaConfigCustomSmsSender
		return ret
	}).(UserPoolLambdaConfigCustomSmsSenderOutput)
}

// The Lambda Amazon Resource Name of the Lambda function that Amazon Cognito triggers to send SMS notifications to users.
func (o UserPoolLambdaConfigCustomSmsSenderPtrOutput) LambdaArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfigCustomSmsSender) *string {
		if v == nil {
			return nil
		}
		return &v.LambdaArn
	}).(pulumi.StringPtrOutput)
}

// The Lambda version represents the signature of the "request" attribute in the "event" information Amazon Cognito passes to your custom SMS Lambda function. The only supported value is `V1_0`.
func (o UserPoolLambdaConfigCustomSmsSenderPtrOutput) LambdaVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfigCustomSmsSender) *string {
		if v == nil {
			return nil
		}
		return &v.LambdaVersion
	}).(pulumi.StringPtrOutput)
}

type UserPoolPasswordPolicy struct {
	// Minimum length of the password policy that you have set.
	MinimumLength *int `pulumi:"minimumLength"`
	// Whether you have required users to use at least one lowercase letter in their password.
	RequireLowercase *bool `pulumi:"requireLowercase"`
	// Whether you have required users to use at least one number in their password.
	RequireNumbers *bool `pulumi:"requireNumbers"`
	// Whether you have required users to use at least one symbol in their password.
	RequireSymbols *bool `pulumi:"requireSymbols"`
	// Whether you have required users to use at least one uppercase letter in their password.
	RequireUppercase *bool `pulumi:"requireUppercase"`
	// In the password policy you have set, refers to the number of days a temporary password is valid. If the user does not sign-in during this time, their password will need to be reset by an administrator.
	TemporaryPasswordValidityDays *int `pulumi:"temporaryPasswordValidityDays"`
}

// UserPoolPasswordPolicyInput is an input type that accepts UserPoolPasswordPolicyArgs and UserPoolPasswordPolicyOutput values.
// You can construct a concrete instance of `UserPoolPasswordPolicyInput` via:
//
//	UserPoolPasswordPolicyArgs{...}
type UserPoolPasswordPolicyInput interface {
	pulumi.Input

	ToUserPoolPasswordPolicyOutput() UserPoolPasswordPolicyOutput
	ToUserPoolPasswordPolicyOutputWithContext(context.Context) UserPoolPasswordPolicyOutput
}

type UserPoolPasswordPolicyArgs struct {
	// Minimum length of the password policy that you have set.
	MinimumLength pulumi.IntPtrInput `pulumi:"minimumLength"`
	// Whether you have required users to use at least one lowercase letter in their password.
	RequireLowercase pulumi.BoolPtrInput `pulumi:"requireLowercase"`
	// Whether you have required users to use at least one number in their password.
	RequireNumbers pulumi.BoolPtrInput `pulumi:"requireNumbers"`
	// Whether you have required users to use at least one symbol in their password.
	RequireSymbols pulumi.BoolPtrInput `pulumi:"requireSymbols"`
	// Whether you have required users to use at least one uppercase letter in their password.
	RequireUppercase pulumi.BoolPtrInput `pulumi:"requireUppercase"`
	// In the password policy you have set, refers to the number of days a temporary password is valid. If the user does not sign-in during this time, their password will need to be reset by an administrator.
	TemporaryPasswordValidityDays pulumi.IntPtrInput `pulumi:"temporaryPasswordValidityDays"`
}

func (UserPoolPasswordPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolPasswordPolicy)(nil)).Elem()
}

func (i UserPoolPasswordPolicyArgs) ToUserPoolPasswordPolicyOutput() UserPoolPasswordPolicyOutput {
	return i.ToUserPoolPasswordPolicyOutputWithContext(context.Background())
}

func (i UserPoolPasswordPolicyArgs) ToUserPoolPasswordPolicyOutputWithContext(ctx context.Context) UserPoolPasswordPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolPasswordPolicyOutput)
}

func (i UserPoolPasswordPolicyArgs) ToUserPoolPasswordPolicyPtrOutput() UserPoolPasswordPolicyPtrOutput {
	return i.ToUserPoolPasswordPolicyPtrOutputWithContext(context.Background())
}

func (i UserPoolPasswordPolicyArgs) ToUserPoolPasswordPolicyPtrOutputWithContext(ctx context.Context) UserPoolPasswordPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolPasswordPolicyOutput).ToUserPoolPasswordPolicyPtrOutputWithContext(ctx)
}

// UserPoolPasswordPolicyPtrInput is an input type that accepts UserPoolPasswordPolicyArgs, UserPoolPasswordPolicyPtr and UserPoolPasswordPolicyPtrOutput values.
// You can construct a concrete instance of `UserPoolPasswordPolicyPtrInput` via:
//
//	        UserPoolPasswordPolicyArgs{...}
//
//	or:
//
//	        nil
type UserPoolPasswordPolicyPtrInput interface {
	pulumi.Input

	ToUserPoolPasswordPolicyPtrOutput() UserPoolPasswordPolicyPtrOutput
	ToUserPoolPasswordPolicyPtrOutputWithContext(context.Context) UserPoolPasswordPolicyPtrOutput
}

type userPoolPasswordPolicyPtrType UserPoolPasswordPolicyArgs

func UserPoolPasswordPolicyPtr(v *UserPoolPasswordPolicyArgs) UserPoolPasswordPolicyPtrInput {
	return (*userPoolPasswordPolicyPtrType)(v)
}

func (*userPoolPasswordPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolPasswordPolicy)(nil)).Elem()
}

func (i *userPoolPasswordPolicyPtrType) ToUserPoolPasswordPolicyPtrOutput() UserPoolPasswordPolicyPtrOutput {
	return i.ToUserPoolPasswordPolicyPtrOutputWithContext(context.Background())
}

func (i *userPoolPasswordPolicyPtrType) ToUserPoolPasswordPolicyPtrOutputWithContext(ctx context.Context) UserPoolPasswordPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolPasswordPolicyPtrOutput)
}

type UserPoolPasswordPolicyOutput struct{ *pulumi.OutputState }

func (UserPoolPasswordPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolPasswordPolicy)(nil)).Elem()
}

func (o UserPoolPasswordPolicyOutput) ToUserPoolPasswordPolicyOutput() UserPoolPasswordPolicyOutput {
	return o
}

func (o UserPoolPasswordPolicyOutput) ToUserPoolPasswordPolicyOutputWithContext(ctx context.Context) UserPoolPasswordPolicyOutput {
	return o
}

func (o UserPoolPasswordPolicyOutput) ToUserPoolPasswordPolicyPtrOutput() UserPoolPasswordPolicyPtrOutput {
	return o.ToUserPoolPasswordPolicyPtrOutputWithContext(context.Background())
}

func (o UserPoolPasswordPolicyOutput) ToUserPoolPasswordPolicyPtrOutputWithContext(ctx context.Context) UserPoolPasswordPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolPasswordPolicy) *UserPoolPasswordPolicy {
		return &v
	}).(UserPoolPasswordPolicyPtrOutput)
}

// Minimum length of the password policy that you have set.
func (o UserPoolPasswordPolicyOutput) MinimumLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserPoolPasswordPolicy) *int { return v.MinimumLength }).(pulumi.IntPtrOutput)
}

// Whether you have required users to use at least one lowercase letter in their password.
func (o UserPoolPasswordPolicyOutput) RequireLowercase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolPasswordPolicy) *bool { return v.RequireLowercase }).(pulumi.BoolPtrOutput)
}

// Whether you have required users to use at least one number in their password.
func (o UserPoolPasswordPolicyOutput) RequireNumbers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolPasswordPolicy) *bool { return v.RequireNumbers }).(pulumi.BoolPtrOutput)
}

// Whether you have required users to use at least one symbol in their password.
func (o UserPoolPasswordPolicyOutput) RequireSymbols() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolPasswordPolicy) *bool { return v.RequireSymbols }).(pulumi.BoolPtrOutput)
}

// Whether you have required users to use at least one uppercase letter in their password.
func (o UserPoolPasswordPolicyOutput) RequireUppercase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolPasswordPolicy) *bool { return v.RequireUppercase }).(pulumi.BoolPtrOutput)
}

// In the password policy you have set, refers to the number of days a temporary password is valid. If the user does not sign-in during this time, their password will need to be reset by an administrator.
func (o UserPoolPasswordPolicyOutput) TemporaryPasswordValidityDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserPoolPasswordPolicy) *int { return v.TemporaryPasswordValidityDays }).(pulumi.IntPtrOutput)
}

type UserPoolPasswordPolicyPtrOutput struct{ *pulumi.OutputState }

func (UserPoolPasswordPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolPasswordPolicy)(nil)).Elem()
}

func (o UserPoolPasswordPolicyPtrOutput) ToUserPoolPasswordPolicyPtrOutput() UserPoolPasswordPolicyPtrOutput {
	return o
}

func (o UserPoolPasswordPolicyPtrOutput) ToUserPoolPasswordPolicyPtrOutputWithContext(ctx context.Context) UserPoolPasswordPolicyPtrOutput {
	return o
}

func (o UserPoolPasswordPolicyPtrOutput) Elem() UserPoolPasswordPolicyOutput {
	return o.ApplyT(func(v *UserPoolPasswordPolicy) UserPoolPasswordPolicy {
		if v != nil {
			return *v
		}
		var ret UserPoolPasswordPolicy
		return ret
	}).(UserPoolPasswordPolicyOutput)
}

// Minimum length of the password policy that you have set.
func (o UserPoolPasswordPolicyPtrOutput) MinimumLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UserPoolPasswordPolicy) *int {
		if v == nil {
			return nil
		}
		return v.MinimumLength
	}).(pulumi.IntPtrOutput)
}

// Whether you have required users to use at least one lowercase letter in their password.
func (o UserPoolPasswordPolicyPtrOutput) RequireLowercase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserPoolPasswordPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.RequireLowercase
	}).(pulumi.BoolPtrOutput)
}

// Whether you have required users to use at least one number in their password.
func (o UserPoolPasswordPolicyPtrOutput) RequireNumbers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserPoolPasswordPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.RequireNumbers
	}).(pulumi.BoolPtrOutput)
}

// Whether you have required users to use at least one symbol in their password.
func (o UserPoolPasswordPolicyPtrOutput) RequireSymbols() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserPoolPasswordPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.RequireSymbols
	}).(pulumi.BoolPtrOutput)
}

// Whether you have required users to use at least one uppercase letter in their password.
func (o UserPoolPasswordPolicyPtrOutput) RequireUppercase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserPoolPasswordPolicy) *bool {
		if v == nil {
			return nil
		}
		return v.RequireUppercase
	}).(pulumi.BoolPtrOutput)
}

// In the password policy you have set, refers to the number of days a temporary password is valid. If the user does not sign-in during this time, their password will need to be reset by an administrator.
func (o UserPoolPasswordPolicyPtrOutput) TemporaryPasswordValidityDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *UserPoolPasswordPolicy) *int {
		if v == nil {
			return nil
		}
		return v.TemporaryPasswordValidityDays
	}).(pulumi.IntPtrOutput)
}

type UserPoolSchema struct {
	// Attribute data type. Must be one of `Boolean`, `Number`, `String`, `DateTime`.
	AttributeDataType string `pulumi:"attributeDataType"`
	// Whether the attribute type is developer only.
	DeveloperOnlyAttribute *bool `pulumi:"developerOnlyAttribute"`
	// Whether the attribute can be changed once it has been created.
	Mutable *bool `pulumi:"mutable"`
	// Name of the attribute.
	Name string `pulumi:"name"`
	// Configuration block for the constraints for an attribute of the number type. Detailed below.
	NumberAttributeConstraints *UserPoolSchemaNumberAttributeConstraints `pulumi:"numberAttributeConstraints"`
	// Whether a user pool attribute is required. If the attribute is required and the user does not provide a value, registration or sign-in will fail.
	Required *bool `pulumi:"required"`
	// Constraints for an attribute of the string type. Detailed below.
	StringAttributeConstraints *UserPoolSchemaStringAttributeConstraints `pulumi:"stringAttributeConstraints"`
}

// UserPoolSchemaInput is an input type that accepts UserPoolSchemaArgs and UserPoolSchemaOutput values.
// You can construct a concrete instance of `UserPoolSchemaInput` via:
//
//	UserPoolSchemaArgs{...}
type UserPoolSchemaInput interface {
	pulumi.Input

	ToUserPoolSchemaOutput() UserPoolSchemaOutput
	ToUserPoolSchemaOutputWithContext(context.Context) UserPoolSchemaOutput
}

type UserPoolSchemaArgs struct {
	// Attribute data type. Must be one of `Boolean`, `Number`, `String`, `DateTime`.
	AttributeDataType pulumi.StringInput `pulumi:"attributeDataType"`
	// Whether the attribute type is developer only.
	DeveloperOnlyAttribute pulumi.BoolPtrInput `pulumi:"developerOnlyAttribute"`
	// Whether the attribute can be changed once it has been created.
	Mutable pulumi.BoolPtrInput `pulumi:"mutable"`
	// Name of the attribute.
	Name pulumi.StringInput `pulumi:"name"`
	// Configuration block for the constraints for an attribute of the number type. Detailed below.
	NumberAttributeConstraints UserPoolSchemaNumberAttributeConstraintsPtrInput `pulumi:"numberAttributeConstraints"`
	// Whether a user pool attribute is required. If the attribute is required and the user does not provide a value, registration or sign-in will fail.
	Required pulumi.BoolPtrInput `pulumi:"required"`
	// Constraints for an attribute of the string type. Detailed below.
	StringAttributeConstraints UserPoolSchemaStringAttributeConstraintsPtrInput `pulumi:"stringAttributeConstraints"`
}

func (UserPoolSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolSchema)(nil)).Elem()
}

func (i UserPoolSchemaArgs) ToUserPoolSchemaOutput() UserPoolSchemaOutput {
	return i.ToUserPoolSchemaOutputWithContext(context.Background())
}

func (i UserPoolSchemaArgs) ToUserPoolSchemaOutputWithContext(ctx context.Context) UserPoolSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSchemaOutput)
}

// UserPoolSchemaArrayInput is an input type that accepts UserPoolSchemaArray and UserPoolSchemaArrayOutput values.
// You can construct a concrete instance of `UserPoolSchemaArrayInput` via:
//
//	UserPoolSchemaArray{ UserPoolSchemaArgs{...} }
type UserPoolSchemaArrayInput interface {
	pulumi.Input

	ToUserPoolSchemaArrayOutput() UserPoolSchemaArrayOutput
	ToUserPoolSchemaArrayOutputWithContext(context.Context) UserPoolSchemaArrayOutput
}

type UserPoolSchemaArray []UserPoolSchemaInput

func (UserPoolSchemaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserPoolSchema)(nil)).Elem()
}

func (i UserPoolSchemaArray) ToUserPoolSchemaArrayOutput() UserPoolSchemaArrayOutput {
	return i.ToUserPoolSchemaArrayOutputWithContext(context.Background())
}

func (i UserPoolSchemaArray) ToUserPoolSchemaArrayOutputWithContext(ctx context.Context) UserPoolSchemaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSchemaArrayOutput)
}

type UserPoolSchemaOutput struct{ *pulumi.OutputState }

func (UserPoolSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolSchema)(nil)).Elem()
}

func (o UserPoolSchemaOutput) ToUserPoolSchemaOutput() UserPoolSchemaOutput {
	return o
}

func (o UserPoolSchemaOutput) ToUserPoolSchemaOutputWithContext(ctx context.Context) UserPoolSchemaOutput {
	return o
}

// Attribute data type. Must be one of `Boolean`, `Number`, `String`, `DateTime`.
func (o UserPoolSchemaOutput) AttributeDataType() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolSchema) string { return v.AttributeDataType }).(pulumi.StringOutput)
}

// Whether the attribute type is developer only.
func (o UserPoolSchemaOutput) DeveloperOnlyAttribute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolSchema) *bool { return v.DeveloperOnlyAttribute }).(pulumi.BoolPtrOutput)
}

// Whether the attribute can be changed once it has been created.
func (o UserPoolSchemaOutput) Mutable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolSchema) *bool { return v.Mutable }).(pulumi.BoolPtrOutput)
}

// Name of the attribute.
func (o UserPoolSchemaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolSchema) string { return v.Name }).(pulumi.StringOutput)
}

// Configuration block for the constraints for an attribute of the number type. Detailed below.
func (o UserPoolSchemaOutput) NumberAttributeConstraints() UserPoolSchemaNumberAttributeConstraintsPtrOutput {
	return o.ApplyT(func(v UserPoolSchema) *UserPoolSchemaNumberAttributeConstraints { return v.NumberAttributeConstraints }).(UserPoolSchemaNumberAttributeConstraintsPtrOutput)
}

// Whether a user pool attribute is required. If the attribute is required and the user does not provide a value, registration or sign-in will fail.
func (o UserPoolSchemaOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolSchema) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

// Constraints for an attribute of the string type. Detailed below.
func (o UserPoolSchemaOutput) StringAttributeConstraints() UserPoolSchemaStringAttributeConstraintsPtrOutput {
	return o.ApplyT(func(v UserPoolSchema) *UserPoolSchemaStringAttributeConstraints { return v.StringAttributeConstraints }).(UserPoolSchemaStringAttributeConstraintsPtrOutput)
}

type UserPoolSchemaArrayOutput struct{ *pulumi.OutputState }

func (UserPoolSchemaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserPoolSchema)(nil)).Elem()
}

func (o UserPoolSchemaArrayOutput) ToUserPoolSchemaArrayOutput() UserPoolSchemaArrayOutput {
	return o
}

func (o UserPoolSchemaArrayOutput) ToUserPoolSchemaArrayOutputWithContext(ctx context.Context) UserPoolSchemaArrayOutput {
	return o
}

func (o UserPoolSchemaArrayOutput) Index(i pulumi.IntInput) UserPoolSchemaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserPoolSchema {
		return vs[0].([]UserPoolSchema)[vs[1].(int)]
	}).(UserPoolSchemaOutput)
}

type UserPoolSchemaNumberAttributeConstraints struct {
	// Maximum value of an attribute that is of the number data type.
	MaxValue *string `pulumi:"maxValue"`
	// Minimum value of an attribute that is of the number data type.
	MinValue *string `pulumi:"minValue"`
}

// UserPoolSchemaNumberAttributeConstraintsInput is an input type that accepts UserPoolSchemaNumberAttributeConstraintsArgs and UserPoolSchemaNumberAttributeConstraintsOutput values.
// You can construct a concrete instance of `UserPoolSchemaNumberAttributeConstraintsInput` via:
//
//	UserPoolSchemaNumberAttributeConstraintsArgs{...}
type UserPoolSchemaNumberAttributeConstraintsInput interface {
	pulumi.Input

	ToUserPoolSchemaNumberAttributeConstraintsOutput() UserPoolSchemaNumberAttributeConstraintsOutput
	ToUserPoolSchemaNumberAttributeConstraintsOutputWithContext(context.Context) UserPoolSchemaNumberAttributeConstraintsOutput
}

type UserPoolSchemaNumberAttributeConstraintsArgs struct {
	// Maximum value of an attribute that is of the number data type.
	MaxValue pulumi.StringPtrInput `pulumi:"maxValue"`
	// Minimum value of an attribute that is of the number data type.
	MinValue pulumi.StringPtrInput `pulumi:"minValue"`
}

func (UserPoolSchemaNumberAttributeConstraintsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolSchemaNumberAttributeConstraints)(nil)).Elem()
}

func (i UserPoolSchemaNumberAttributeConstraintsArgs) ToUserPoolSchemaNumberAttributeConstraintsOutput() UserPoolSchemaNumberAttributeConstraintsOutput {
	return i.ToUserPoolSchemaNumberAttributeConstraintsOutputWithContext(context.Background())
}

func (i UserPoolSchemaNumberAttributeConstraintsArgs) ToUserPoolSchemaNumberAttributeConstraintsOutputWithContext(ctx context.Context) UserPoolSchemaNumberAttributeConstraintsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSchemaNumberAttributeConstraintsOutput)
}

func (i UserPoolSchemaNumberAttributeConstraintsArgs) ToUserPoolSchemaNumberAttributeConstraintsPtrOutput() UserPoolSchemaNumberAttributeConstraintsPtrOutput {
	return i.ToUserPoolSchemaNumberAttributeConstraintsPtrOutputWithContext(context.Background())
}

func (i UserPoolSchemaNumberAttributeConstraintsArgs) ToUserPoolSchemaNumberAttributeConstraintsPtrOutputWithContext(ctx context.Context) UserPoolSchemaNumberAttributeConstraintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSchemaNumberAttributeConstraintsOutput).ToUserPoolSchemaNumberAttributeConstraintsPtrOutputWithContext(ctx)
}

// UserPoolSchemaNumberAttributeConstraintsPtrInput is an input type that accepts UserPoolSchemaNumberAttributeConstraintsArgs, UserPoolSchemaNumberAttributeConstraintsPtr and UserPoolSchemaNumberAttributeConstraintsPtrOutput values.
// You can construct a concrete instance of `UserPoolSchemaNumberAttributeConstraintsPtrInput` via:
//
//	        UserPoolSchemaNumberAttributeConstraintsArgs{...}
//
//	or:
//
//	        nil
type UserPoolSchemaNumberAttributeConstraintsPtrInput interface {
	pulumi.Input

	ToUserPoolSchemaNumberAttributeConstraintsPtrOutput() UserPoolSchemaNumberAttributeConstraintsPtrOutput
	ToUserPoolSchemaNumberAttributeConstraintsPtrOutputWithContext(context.Context) UserPoolSchemaNumberAttributeConstraintsPtrOutput
}

type userPoolSchemaNumberAttributeConstraintsPtrType UserPoolSchemaNumberAttributeConstraintsArgs

func UserPoolSchemaNumberAttributeConstraintsPtr(v *UserPoolSchemaNumberAttributeConstraintsArgs) UserPoolSchemaNumberAttributeConstraintsPtrInput {
	return (*userPoolSchemaNumberAttributeConstraintsPtrType)(v)
}

func (*userPoolSchemaNumberAttributeConstraintsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolSchemaNumberAttributeConstraints)(nil)).Elem()
}

func (i *userPoolSchemaNumberAttributeConstraintsPtrType) ToUserPoolSchemaNumberAttributeConstraintsPtrOutput() UserPoolSchemaNumberAttributeConstraintsPtrOutput {
	return i.ToUserPoolSchemaNumberAttributeConstraintsPtrOutputWithContext(context.Background())
}

func (i *userPoolSchemaNumberAttributeConstraintsPtrType) ToUserPoolSchemaNumberAttributeConstraintsPtrOutputWithContext(ctx context.Context) UserPoolSchemaNumberAttributeConstraintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSchemaNumberAttributeConstraintsPtrOutput)
}

type UserPoolSchemaNumberAttributeConstraintsOutput struct{ *pulumi.OutputState }

func (UserPoolSchemaNumberAttributeConstraintsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolSchemaNumberAttributeConstraints)(nil)).Elem()
}

func (o UserPoolSchemaNumberAttributeConstraintsOutput) ToUserPoolSchemaNumberAttributeConstraintsOutput() UserPoolSchemaNumberAttributeConstraintsOutput {
	return o
}

func (o UserPoolSchemaNumberAttributeConstraintsOutput) ToUserPoolSchemaNumberAttributeConstraintsOutputWithContext(ctx context.Context) UserPoolSchemaNumberAttributeConstraintsOutput {
	return o
}

func (o UserPoolSchemaNumberAttributeConstraintsOutput) ToUserPoolSchemaNumberAttributeConstraintsPtrOutput() UserPoolSchemaNumberAttributeConstraintsPtrOutput {
	return o.ToUserPoolSchemaNumberAttributeConstraintsPtrOutputWithContext(context.Background())
}

func (o UserPoolSchemaNumberAttributeConstraintsOutput) ToUserPoolSchemaNumberAttributeConstraintsPtrOutputWithContext(ctx context.Context) UserPoolSchemaNumberAttributeConstraintsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolSchemaNumberAttributeConstraints) *UserPoolSchemaNumberAttributeConstraints {
		return &v
	}).(UserPoolSchemaNumberAttributeConstraintsPtrOutput)
}

// Maximum value of an attribute that is of the number data type.
func (o UserPoolSchemaNumberAttributeConstraintsOutput) MaxValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolSchemaNumberAttributeConstraints) *string { return v.MaxValue }).(pulumi.StringPtrOutput)
}

// Minimum value of an attribute that is of the number data type.
func (o UserPoolSchemaNumberAttributeConstraintsOutput) MinValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolSchemaNumberAttributeConstraints) *string { return v.MinValue }).(pulumi.StringPtrOutput)
}

type UserPoolSchemaNumberAttributeConstraintsPtrOutput struct{ *pulumi.OutputState }

func (UserPoolSchemaNumberAttributeConstraintsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolSchemaNumberAttributeConstraints)(nil)).Elem()
}

func (o UserPoolSchemaNumberAttributeConstraintsPtrOutput) ToUserPoolSchemaNumberAttributeConstraintsPtrOutput() UserPoolSchemaNumberAttributeConstraintsPtrOutput {
	return o
}

func (o UserPoolSchemaNumberAttributeConstraintsPtrOutput) ToUserPoolSchemaNumberAttributeConstraintsPtrOutputWithContext(ctx context.Context) UserPoolSchemaNumberAttributeConstraintsPtrOutput {
	return o
}

func (o UserPoolSchemaNumberAttributeConstraintsPtrOutput) Elem() UserPoolSchemaNumberAttributeConstraintsOutput {
	return o.ApplyT(func(v *UserPoolSchemaNumberAttributeConstraints) UserPoolSchemaNumberAttributeConstraints {
		if v != nil {
			return *v
		}
		var ret UserPoolSchemaNumberAttributeConstraints
		return ret
	}).(UserPoolSchemaNumberAttributeConstraintsOutput)
}

// Maximum value of an attribute that is of the number data type.
func (o UserPoolSchemaNumberAttributeConstraintsPtrOutput) MaxValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolSchemaNumberAttributeConstraints) *string {
		if v == nil {
			return nil
		}
		return v.MaxValue
	}).(pulumi.StringPtrOutput)
}

// Minimum value of an attribute that is of the number data type.
func (o UserPoolSchemaNumberAttributeConstraintsPtrOutput) MinValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolSchemaNumberAttributeConstraints) *string {
		if v == nil {
			return nil
		}
		return v.MinValue
	}).(pulumi.StringPtrOutput)
}

type UserPoolSchemaStringAttributeConstraints struct {
	// Maximum length of an attribute value of the string type.
	MaxLength *string `pulumi:"maxLength"`
	// Minimum length of an attribute value of the string type.
	MinLength *string `pulumi:"minLength"`
}

// UserPoolSchemaStringAttributeConstraintsInput is an input type that accepts UserPoolSchemaStringAttributeConstraintsArgs and UserPoolSchemaStringAttributeConstraintsOutput values.
// You can construct a concrete instance of `UserPoolSchemaStringAttributeConstraintsInput` via:
//
//	UserPoolSchemaStringAttributeConstraintsArgs{...}
type UserPoolSchemaStringAttributeConstraintsInput interface {
	pulumi.Input

	ToUserPoolSchemaStringAttributeConstraintsOutput() UserPoolSchemaStringAttributeConstraintsOutput
	ToUserPoolSchemaStringAttributeConstraintsOutputWithContext(context.Context) UserPoolSchemaStringAttributeConstraintsOutput
}

type UserPoolSchemaStringAttributeConstraintsArgs struct {
	// Maximum length of an attribute value of the string type.
	MaxLength pulumi.StringPtrInput `pulumi:"maxLength"`
	// Minimum length of an attribute value of the string type.
	MinLength pulumi.StringPtrInput `pulumi:"minLength"`
}

func (UserPoolSchemaStringAttributeConstraintsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolSchemaStringAttributeConstraints)(nil)).Elem()
}

func (i UserPoolSchemaStringAttributeConstraintsArgs) ToUserPoolSchemaStringAttributeConstraintsOutput() UserPoolSchemaStringAttributeConstraintsOutput {
	return i.ToUserPoolSchemaStringAttributeConstraintsOutputWithContext(context.Background())
}

func (i UserPoolSchemaStringAttributeConstraintsArgs) ToUserPoolSchemaStringAttributeConstraintsOutputWithContext(ctx context.Context) UserPoolSchemaStringAttributeConstraintsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSchemaStringAttributeConstraintsOutput)
}

func (i UserPoolSchemaStringAttributeConstraintsArgs) ToUserPoolSchemaStringAttributeConstraintsPtrOutput() UserPoolSchemaStringAttributeConstraintsPtrOutput {
	return i.ToUserPoolSchemaStringAttributeConstraintsPtrOutputWithContext(context.Background())
}

func (i UserPoolSchemaStringAttributeConstraintsArgs) ToUserPoolSchemaStringAttributeConstraintsPtrOutputWithContext(ctx context.Context) UserPoolSchemaStringAttributeConstraintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSchemaStringAttributeConstraintsOutput).ToUserPoolSchemaStringAttributeConstraintsPtrOutputWithContext(ctx)
}

// UserPoolSchemaStringAttributeConstraintsPtrInput is an input type that accepts UserPoolSchemaStringAttributeConstraintsArgs, UserPoolSchemaStringAttributeConstraintsPtr and UserPoolSchemaStringAttributeConstraintsPtrOutput values.
// You can construct a concrete instance of `UserPoolSchemaStringAttributeConstraintsPtrInput` via:
//
//	        UserPoolSchemaStringAttributeConstraintsArgs{...}
//
//	or:
//
//	        nil
type UserPoolSchemaStringAttributeConstraintsPtrInput interface {
	pulumi.Input

	ToUserPoolSchemaStringAttributeConstraintsPtrOutput() UserPoolSchemaStringAttributeConstraintsPtrOutput
	ToUserPoolSchemaStringAttributeConstraintsPtrOutputWithContext(context.Context) UserPoolSchemaStringAttributeConstraintsPtrOutput
}

type userPoolSchemaStringAttributeConstraintsPtrType UserPoolSchemaStringAttributeConstraintsArgs

func UserPoolSchemaStringAttributeConstraintsPtr(v *UserPoolSchemaStringAttributeConstraintsArgs) UserPoolSchemaStringAttributeConstraintsPtrInput {
	return (*userPoolSchemaStringAttributeConstraintsPtrType)(v)
}

func (*userPoolSchemaStringAttributeConstraintsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolSchemaStringAttributeConstraints)(nil)).Elem()
}

func (i *userPoolSchemaStringAttributeConstraintsPtrType) ToUserPoolSchemaStringAttributeConstraintsPtrOutput() UserPoolSchemaStringAttributeConstraintsPtrOutput {
	return i.ToUserPoolSchemaStringAttributeConstraintsPtrOutputWithContext(context.Background())
}

func (i *userPoolSchemaStringAttributeConstraintsPtrType) ToUserPoolSchemaStringAttributeConstraintsPtrOutputWithContext(ctx context.Context) UserPoolSchemaStringAttributeConstraintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSchemaStringAttributeConstraintsPtrOutput)
}

type UserPoolSchemaStringAttributeConstraintsOutput struct{ *pulumi.OutputState }

func (UserPoolSchemaStringAttributeConstraintsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolSchemaStringAttributeConstraints)(nil)).Elem()
}

func (o UserPoolSchemaStringAttributeConstraintsOutput) ToUserPoolSchemaStringAttributeConstraintsOutput() UserPoolSchemaStringAttributeConstraintsOutput {
	return o
}

func (o UserPoolSchemaStringAttributeConstraintsOutput) ToUserPoolSchemaStringAttributeConstraintsOutputWithContext(ctx context.Context) UserPoolSchemaStringAttributeConstraintsOutput {
	return o
}

func (o UserPoolSchemaStringAttributeConstraintsOutput) ToUserPoolSchemaStringAttributeConstraintsPtrOutput() UserPoolSchemaStringAttributeConstraintsPtrOutput {
	return o.ToUserPoolSchemaStringAttributeConstraintsPtrOutputWithContext(context.Background())
}

func (o UserPoolSchemaStringAttributeConstraintsOutput) ToUserPoolSchemaStringAttributeConstraintsPtrOutputWithContext(ctx context.Context) UserPoolSchemaStringAttributeConstraintsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolSchemaStringAttributeConstraints) *UserPoolSchemaStringAttributeConstraints {
		return &v
	}).(UserPoolSchemaStringAttributeConstraintsPtrOutput)
}

// Maximum length of an attribute value of the string type.
func (o UserPoolSchemaStringAttributeConstraintsOutput) MaxLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolSchemaStringAttributeConstraints) *string { return v.MaxLength }).(pulumi.StringPtrOutput)
}

// Minimum length of an attribute value of the string type.
func (o UserPoolSchemaStringAttributeConstraintsOutput) MinLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolSchemaStringAttributeConstraints) *string { return v.MinLength }).(pulumi.StringPtrOutput)
}

type UserPoolSchemaStringAttributeConstraintsPtrOutput struct{ *pulumi.OutputState }

func (UserPoolSchemaStringAttributeConstraintsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolSchemaStringAttributeConstraints)(nil)).Elem()
}

func (o UserPoolSchemaStringAttributeConstraintsPtrOutput) ToUserPoolSchemaStringAttributeConstraintsPtrOutput() UserPoolSchemaStringAttributeConstraintsPtrOutput {
	return o
}

func (o UserPoolSchemaStringAttributeConstraintsPtrOutput) ToUserPoolSchemaStringAttributeConstraintsPtrOutputWithContext(ctx context.Context) UserPoolSchemaStringAttributeConstraintsPtrOutput {
	return o
}

func (o UserPoolSchemaStringAttributeConstraintsPtrOutput) Elem() UserPoolSchemaStringAttributeConstraintsOutput {
	return o.ApplyT(func(v *UserPoolSchemaStringAttributeConstraints) UserPoolSchemaStringAttributeConstraints {
		if v != nil {
			return *v
		}
		var ret UserPoolSchemaStringAttributeConstraints
		return ret
	}).(UserPoolSchemaStringAttributeConstraintsOutput)
}

// Maximum length of an attribute value of the string type.
func (o UserPoolSchemaStringAttributeConstraintsPtrOutput) MaxLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolSchemaStringAttributeConstraints) *string {
		if v == nil {
			return nil
		}
		return v.MaxLength
	}).(pulumi.StringPtrOutput)
}

// Minimum length of an attribute value of the string type.
func (o UserPoolSchemaStringAttributeConstraintsPtrOutput) MinLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolSchemaStringAttributeConstraints) *string {
		if v == nil {
			return nil
		}
		return v.MinLength
	}).(pulumi.StringPtrOutput)
}

type UserPoolSmsConfiguration struct {
	// External ID used in IAM role trust relationships. For more information about using external IDs, see [How to Use an External ID When Granting Access to Your AWS Resources to a Third Party](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html).
	ExternalId string `pulumi:"externalId"`
	// ARN of the Amazon SNS caller. This is usually the IAM role that you've given Cognito permission to assume.
	SnsCallerArn string `pulumi:"snsCallerArn"`
	// The AWS Region to use with Amazon SNS integration. You can choose the same Region as your user pool, or a supported Legacy Amazon SNS alternate Region. Amazon Cognito resources in the Asia Pacific (Seoul) AWS Region must use your Amazon SNS configuration in the Asia Pacific (Tokyo) Region. For more information, see [SMS message settings for Amazon Cognito user pools](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html).
	SnsRegion *string `pulumi:"snsRegion"`
}

// UserPoolSmsConfigurationInput is an input type that accepts UserPoolSmsConfigurationArgs and UserPoolSmsConfigurationOutput values.
// You can construct a concrete instance of `UserPoolSmsConfigurationInput` via:
//
//	UserPoolSmsConfigurationArgs{...}
type UserPoolSmsConfigurationInput interface {
	pulumi.Input

	ToUserPoolSmsConfigurationOutput() UserPoolSmsConfigurationOutput
	ToUserPoolSmsConfigurationOutputWithContext(context.Context) UserPoolSmsConfigurationOutput
}

type UserPoolSmsConfigurationArgs struct {
	// External ID used in IAM role trust relationships. For more information about using external IDs, see [How to Use an External ID When Granting Access to Your AWS Resources to a Third Party](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html).
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	// ARN of the Amazon SNS caller. This is usually the IAM role that you've given Cognito permission to assume.
	SnsCallerArn pulumi.StringInput `pulumi:"snsCallerArn"`
	// The AWS Region to use with Amazon SNS integration. You can choose the same Region as your user pool, or a supported Legacy Amazon SNS alternate Region. Amazon Cognito resources in the Asia Pacific (Seoul) AWS Region must use your Amazon SNS configuration in the Asia Pacific (Tokyo) Region. For more information, see [SMS message settings for Amazon Cognito user pools](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html).
	SnsRegion pulumi.StringPtrInput `pulumi:"snsRegion"`
}

func (UserPoolSmsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolSmsConfiguration)(nil)).Elem()
}

func (i UserPoolSmsConfigurationArgs) ToUserPoolSmsConfigurationOutput() UserPoolSmsConfigurationOutput {
	return i.ToUserPoolSmsConfigurationOutputWithContext(context.Background())
}

func (i UserPoolSmsConfigurationArgs) ToUserPoolSmsConfigurationOutputWithContext(ctx context.Context) UserPoolSmsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSmsConfigurationOutput)
}

func (i UserPoolSmsConfigurationArgs) ToUserPoolSmsConfigurationPtrOutput() UserPoolSmsConfigurationPtrOutput {
	return i.ToUserPoolSmsConfigurationPtrOutputWithContext(context.Background())
}

func (i UserPoolSmsConfigurationArgs) ToUserPoolSmsConfigurationPtrOutputWithContext(ctx context.Context) UserPoolSmsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSmsConfigurationOutput).ToUserPoolSmsConfigurationPtrOutputWithContext(ctx)
}

// UserPoolSmsConfigurationPtrInput is an input type that accepts UserPoolSmsConfigurationArgs, UserPoolSmsConfigurationPtr and UserPoolSmsConfigurationPtrOutput values.
// You can construct a concrete instance of `UserPoolSmsConfigurationPtrInput` via:
//
//	        UserPoolSmsConfigurationArgs{...}
//
//	or:
//
//	        nil
type UserPoolSmsConfigurationPtrInput interface {
	pulumi.Input

	ToUserPoolSmsConfigurationPtrOutput() UserPoolSmsConfigurationPtrOutput
	ToUserPoolSmsConfigurationPtrOutputWithContext(context.Context) UserPoolSmsConfigurationPtrOutput
}

type userPoolSmsConfigurationPtrType UserPoolSmsConfigurationArgs

func UserPoolSmsConfigurationPtr(v *UserPoolSmsConfigurationArgs) UserPoolSmsConfigurationPtrInput {
	return (*userPoolSmsConfigurationPtrType)(v)
}

func (*userPoolSmsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolSmsConfiguration)(nil)).Elem()
}

func (i *userPoolSmsConfigurationPtrType) ToUserPoolSmsConfigurationPtrOutput() UserPoolSmsConfigurationPtrOutput {
	return i.ToUserPoolSmsConfigurationPtrOutputWithContext(context.Background())
}

func (i *userPoolSmsConfigurationPtrType) ToUserPoolSmsConfigurationPtrOutputWithContext(ctx context.Context) UserPoolSmsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSmsConfigurationPtrOutput)
}

type UserPoolSmsConfigurationOutput struct{ *pulumi.OutputState }

func (UserPoolSmsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolSmsConfiguration)(nil)).Elem()
}

func (o UserPoolSmsConfigurationOutput) ToUserPoolSmsConfigurationOutput() UserPoolSmsConfigurationOutput {
	return o
}

func (o UserPoolSmsConfigurationOutput) ToUserPoolSmsConfigurationOutputWithContext(ctx context.Context) UserPoolSmsConfigurationOutput {
	return o
}

func (o UserPoolSmsConfigurationOutput) ToUserPoolSmsConfigurationPtrOutput() UserPoolSmsConfigurationPtrOutput {
	return o.ToUserPoolSmsConfigurationPtrOutputWithContext(context.Background())
}

func (o UserPoolSmsConfigurationOutput) ToUserPoolSmsConfigurationPtrOutputWithContext(ctx context.Context) UserPoolSmsConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolSmsConfiguration) *UserPoolSmsConfiguration {
		return &v
	}).(UserPoolSmsConfigurationPtrOutput)
}

// External ID used in IAM role trust relationships. For more information about using external IDs, see [How to Use an External ID When Granting Access to Your AWS Resources to a Third Party](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html).
func (o UserPoolSmsConfigurationOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolSmsConfiguration) string { return v.ExternalId }).(pulumi.StringOutput)
}

// ARN of the Amazon SNS caller. This is usually the IAM role that you've given Cognito permission to assume.
func (o UserPoolSmsConfigurationOutput) SnsCallerArn() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolSmsConfiguration) string { return v.SnsCallerArn }).(pulumi.StringOutput)
}

// The AWS Region to use with Amazon SNS integration. You can choose the same Region as your user pool, or a supported Legacy Amazon SNS alternate Region. Amazon Cognito resources in the Asia Pacific (Seoul) AWS Region must use your Amazon SNS configuration in the Asia Pacific (Tokyo) Region. For more information, see [SMS message settings for Amazon Cognito user pools](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html).
func (o UserPoolSmsConfigurationOutput) SnsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolSmsConfiguration) *string { return v.SnsRegion }).(pulumi.StringPtrOutput)
}

type UserPoolSmsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (UserPoolSmsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolSmsConfiguration)(nil)).Elem()
}

func (o UserPoolSmsConfigurationPtrOutput) ToUserPoolSmsConfigurationPtrOutput() UserPoolSmsConfigurationPtrOutput {
	return o
}

func (o UserPoolSmsConfigurationPtrOutput) ToUserPoolSmsConfigurationPtrOutputWithContext(ctx context.Context) UserPoolSmsConfigurationPtrOutput {
	return o
}

func (o UserPoolSmsConfigurationPtrOutput) Elem() UserPoolSmsConfigurationOutput {
	return o.ApplyT(func(v *UserPoolSmsConfiguration) UserPoolSmsConfiguration {
		if v != nil {
			return *v
		}
		var ret UserPoolSmsConfiguration
		return ret
	}).(UserPoolSmsConfigurationOutput)
}

// External ID used in IAM role trust relationships. For more information about using external IDs, see [How to Use an External ID When Granting Access to Your AWS Resources to a Third Party](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html).
func (o UserPoolSmsConfigurationPtrOutput) ExternalId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolSmsConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.ExternalId
	}).(pulumi.StringPtrOutput)
}

// ARN of the Amazon SNS caller. This is usually the IAM role that you've given Cognito permission to assume.
func (o UserPoolSmsConfigurationPtrOutput) SnsCallerArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolSmsConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.SnsCallerArn
	}).(pulumi.StringPtrOutput)
}

// The AWS Region to use with Amazon SNS integration. You can choose the same Region as your user pool, or a supported Legacy Amazon SNS alternate Region. Amazon Cognito resources in the Asia Pacific (Seoul) AWS Region must use your Amazon SNS configuration in the Asia Pacific (Tokyo) Region. For more information, see [SMS message settings for Amazon Cognito user pools](https://docs.aws.amazon.com/cognito/latest/developerguide/user-pool-sms-settings.html).
func (o UserPoolSmsConfigurationPtrOutput) SnsRegion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolSmsConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.SnsRegion
	}).(pulumi.StringPtrOutput)
}

type UserPoolSoftwareTokenMfaConfiguration struct {
	// Boolean whether to enable software token Multi-Factor (MFA) tokens, such as Time-based One-Time Password (TOTP). To disable software token MFA When `smsConfiguration` is not present, the `mfaConfiguration` argument must be set to `OFF` and the `softwareTokenMfaConfiguration` configuration block must be fully removed.
	Enabled bool `pulumi:"enabled"`
}

// UserPoolSoftwareTokenMfaConfigurationInput is an input type that accepts UserPoolSoftwareTokenMfaConfigurationArgs and UserPoolSoftwareTokenMfaConfigurationOutput values.
// You can construct a concrete instance of `UserPoolSoftwareTokenMfaConfigurationInput` via:
//
//	UserPoolSoftwareTokenMfaConfigurationArgs{...}
type UserPoolSoftwareTokenMfaConfigurationInput interface {
	pulumi.Input

	ToUserPoolSoftwareTokenMfaConfigurationOutput() UserPoolSoftwareTokenMfaConfigurationOutput
	ToUserPoolSoftwareTokenMfaConfigurationOutputWithContext(context.Context) UserPoolSoftwareTokenMfaConfigurationOutput
}

type UserPoolSoftwareTokenMfaConfigurationArgs struct {
	// Boolean whether to enable software token Multi-Factor (MFA) tokens, such as Time-based One-Time Password (TOTP). To disable software token MFA When `smsConfiguration` is not present, the `mfaConfiguration` argument must be set to `OFF` and the `softwareTokenMfaConfiguration` configuration block must be fully removed.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (UserPoolSoftwareTokenMfaConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolSoftwareTokenMfaConfiguration)(nil)).Elem()
}

func (i UserPoolSoftwareTokenMfaConfigurationArgs) ToUserPoolSoftwareTokenMfaConfigurationOutput() UserPoolSoftwareTokenMfaConfigurationOutput {
	return i.ToUserPoolSoftwareTokenMfaConfigurationOutputWithContext(context.Background())
}

func (i UserPoolSoftwareTokenMfaConfigurationArgs) ToUserPoolSoftwareTokenMfaConfigurationOutputWithContext(ctx context.Context) UserPoolSoftwareTokenMfaConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSoftwareTokenMfaConfigurationOutput)
}

func (i UserPoolSoftwareTokenMfaConfigurationArgs) ToUserPoolSoftwareTokenMfaConfigurationPtrOutput() UserPoolSoftwareTokenMfaConfigurationPtrOutput {
	return i.ToUserPoolSoftwareTokenMfaConfigurationPtrOutputWithContext(context.Background())
}

func (i UserPoolSoftwareTokenMfaConfigurationArgs) ToUserPoolSoftwareTokenMfaConfigurationPtrOutputWithContext(ctx context.Context) UserPoolSoftwareTokenMfaConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSoftwareTokenMfaConfigurationOutput).ToUserPoolSoftwareTokenMfaConfigurationPtrOutputWithContext(ctx)
}

// UserPoolSoftwareTokenMfaConfigurationPtrInput is an input type that accepts UserPoolSoftwareTokenMfaConfigurationArgs, UserPoolSoftwareTokenMfaConfigurationPtr and UserPoolSoftwareTokenMfaConfigurationPtrOutput values.
// You can construct a concrete instance of `UserPoolSoftwareTokenMfaConfigurationPtrInput` via:
//
//	        UserPoolSoftwareTokenMfaConfigurationArgs{...}
//
//	or:
//
//	        nil
type UserPoolSoftwareTokenMfaConfigurationPtrInput interface {
	pulumi.Input

	ToUserPoolSoftwareTokenMfaConfigurationPtrOutput() UserPoolSoftwareTokenMfaConfigurationPtrOutput
	ToUserPoolSoftwareTokenMfaConfigurationPtrOutputWithContext(context.Context) UserPoolSoftwareTokenMfaConfigurationPtrOutput
}

type userPoolSoftwareTokenMfaConfigurationPtrType UserPoolSoftwareTokenMfaConfigurationArgs

func UserPoolSoftwareTokenMfaConfigurationPtr(v *UserPoolSoftwareTokenMfaConfigurationArgs) UserPoolSoftwareTokenMfaConfigurationPtrInput {
	return (*userPoolSoftwareTokenMfaConfigurationPtrType)(v)
}

func (*userPoolSoftwareTokenMfaConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolSoftwareTokenMfaConfiguration)(nil)).Elem()
}

func (i *userPoolSoftwareTokenMfaConfigurationPtrType) ToUserPoolSoftwareTokenMfaConfigurationPtrOutput() UserPoolSoftwareTokenMfaConfigurationPtrOutput {
	return i.ToUserPoolSoftwareTokenMfaConfigurationPtrOutputWithContext(context.Background())
}

func (i *userPoolSoftwareTokenMfaConfigurationPtrType) ToUserPoolSoftwareTokenMfaConfigurationPtrOutputWithContext(ctx context.Context) UserPoolSoftwareTokenMfaConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSoftwareTokenMfaConfigurationPtrOutput)
}

type UserPoolSoftwareTokenMfaConfigurationOutput struct{ *pulumi.OutputState }

func (UserPoolSoftwareTokenMfaConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolSoftwareTokenMfaConfiguration)(nil)).Elem()
}

func (o UserPoolSoftwareTokenMfaConfigurationOutput) ToUserPoolSoftwareTokenMfaConfigurationOutput() UserPoolSoftwareTokenMfaConfigurationOutput {
	return o
}

func (o UserPoolSoftwareTokenMfaConfigurationOutput) ToUserPoolSoftwareTokenMfaConfigurationOutputWithContext(ctx context.Context) UserPoolSoftwareTokenMfaConfigurationOutput {
	return o
}

func (o UserPoolSoftwareTokenMfaConfigurationOutput) ToUserPoolSoftwareTokenMfaConfigurationPtrOutput() UserPoolSoftwareTokenMfaConfigurationPtrOutput {
	return o.ToUserPoolSoftwareTokenMfaConfigurationPtrOutputWithContext(context.Background())
}

func (o UserPoolSoftwareTokenMfaConfigurationOutput) ToUserPoolSoftwareTokenMfaConfigurationPtrOutputWithContext(ctx context.Context) UserPoolSoftwareTokenMfaConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolSoftwareTokenMfaConfiguration) *UserPoolSoftwareTokenMfaConfiguration {
		return &v
	}).(UserPoolSoftwareTokenMfaConfigurationPtrOutput)
}

// Boolean whether to enable software token Multi-Factor (MFA) tokens, such as Time-based One-Time Password (TOTP). To disable software token MFA When `smsConfiguration` is not present, the `mfaConfiguration` argument must be set to `OFF` and the `softwareTokenMfaConfiguration` configuration block must be fully removed.
func (o UserPoolSoftwareTokenMfaConfigurationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v UserPoolSoftwareTokenMfaConfiguration) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type UserPoolSoftwareTokenMfaConfigurationPtrOutput struct{ *pulumi.OutputState }

func (UserPoolSoftwareTokenMfaConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolSoftwareTokenMfaConfiguration)(nil)).Elem()
}

func (o UserPoolSoftwareTokenMfaConfigurationPtrOutput) ToUserPoolSoftwareTokenMfaConfigurationPtrOutput() UserPoolSoftwareTokenMfaConfigurationPtrOutput {
	return o
}

func (o UserPoolSoftwareTokenMfaConfigurationPtrOutput) ToUserPoolSoftwareTokenMfaConfigurationPtrOutputWithContext(ctx context.Context) UserPoolSoftwareTokenMfaConfigurationPtrOutput {
	return o
}

func (o UserPoolSoftwareTokenMfaConfigurationPtrOutput) Elem() UserPoolSoftwareTokenMfaConfigurationOutput {
	return o.ApplyT(func(v *UserPoolSoftwareTokenMfaConfiguration) UserPoolSoftwareTokenMfaConfiguration {
		if v != nil {
			return *v
		}
		var ret UserPoolSoftwareTokenMfaConfiguration
		return ret
	}).(UserPoolSoftwareTokenMfaConfigurationOutput)
}

// Boolean whether to enable software token Multi-Factor (MFA) tokens, such as Time-based One-Time Password (TOTP). To disable software token MFA When `smsConfiguration` is not present, the `mfaConfiguration` argument must be set to `OFF` and the `softwareTokenMfaConfiguration` configuration block must be fully removed.
func (o UserPoolSoftwareTokenMfaConfigurationPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserPoolSoftwareTokenMfaConfiguration) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type UserPoolUserAttributeUpdateSettings struct {
	// A list of attributes requiring verification before update. If set, the provided value(s) must also be set in `autoVerifiedAttributes`. Valid values: `email`, `phoneNumber`.
	AttributesRequireVerificationBeforeUpdates []string `pulumi:"attributesRequireVerificationBeforeUpdates"`
}

// UserPoolUserAttributeUpdateSettingsInput is an input type that accepts UserPoolUserAttributeUpdateSettingsArgs and UserPoolUserAttributeUpdateSettingsOutput values.
// You can construct a concrete instance of `UserPoolUserAttributeUpdateSettingsInput` via:
//
//	UserPoolUserAttributeUpdateSettingsArgs{...}
type UserPoolUserAttributeUpdateSettingsInput interface {
	pulumi.Input

	ToUserPoolUserAttributeUpdateSettingsOutput() UserPoolUserAttributeUpdateSettingsOutput
	ToUserPoolUserAttributeUpdateSettingsOutputWithContext(context.Context) UserPoolUserAttributeUpdateSettingsOutput
}

type UserPoolUserAttributeUpdateSettingsArgs struct {
	// A list of attributes requiring verification before update. If set, the provided value(s) must also be set in `autoVerifiedAttributes`. Valid values: `email`, `phoneNumber`.
	AttributesRequireVerificationBeforeUpdates pulumi.StringArrayInput `pulumi:"attributesRequireVerificationBeforeUpdates"`
}

func (UserPoolUserAttributeUpdateSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolUserAttributeUpdateSettings)(nil)).Elem()
}

func (i UserPoolUserAttributeUpdateSettingsArgs) ToUserPoolUserAttributeUpdateSettingsOutput() UserPoolUserAttributeUpdateSettingsOutput {
	return i.ToUserPoolUserAttributeUpdateSettingsOutputWithContext(context.Background())
}

func (i UserPoolUserAttributeUpdateSettingsArgs) ToUserPoolUserAttributeUpdateSettingsOutputWithContext(ctx context.Context) UserPoolUserAttributeUpdateSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolUserAttributeUpdateSettingsOutput)
}

func (i UserPoolUserAttributeUpdateSettingsArgs) ToUserPoolUserAttributeUpdateSettingsPtrOutput() UserPoolUserAttributeUpdateSettingsPtrOutput {
	return i.ToUserPoolUserAttributeUpdateSettingsPtrOutputWithContext(context.Background())
}

func (i UserPoolUserAttributeUpdateSettingsArgs) ToUserPoolUserAttributeUpdateSettingsPtrOutputWithContext(ctx context.Context) UserPoolUserAttributeUpdateSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolUserAttributeUpdateSettingsOutput).ToUserPoolUserAttributeUpdateSettingsPtrOutputWithContext(ctx)
}

// UserPoolUserAttributeUpdateSettingsPtrInput is an input type that accepts UserPoolUserAttributeUpdateSettingsArgs, UserPoolUserAttributeUpdateSettingsPtr and UserPoolUserAttributeUpdateSettingsPtrOutput values.
// You can construct a concrete instance of `UserPoolUserAttributeUpdateSettingsPtrInput` via:
//
//	        UserPoolUserAttributeUpdateSettingsArgs{...}
//
//	or:
//
//	        nil
type UserPoolUserAttributeUpdateSettingsPtrInput interface {
	pulumi.Input

	ToUserPoolUserAttributeUpdateSettingsPtrOutput() UserPoolUserAttributeUpdateSettingsPtrOutput
	ToUserPoolUserAttributeUpdateSettingsPtrOutputWithContext(context.Context) UserPoolUserAttributeUpdateSettingsPtrOutput
}

type userPoolUserAttributeUpdateSettingsPtrType UserPoolUserAttributeUpdateSettingsArgs

func UserPoolUserAttributeUpdateSettingsPtr(v *UserPoolUserAttributeUpdateSettingsArgs) UserPoolUserAttributeUpdateSettingsPtrInput {
	return (*userPoolUserAttributeUpdateSettingsPtrType)(v)
}

func (*userPoolUserAttributeUpdateSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolUserAttributeUpdateSettings)(nil)).Elem()
}

func (i *userPoolUserAttributeUpdateSettingsPtrType) ToUserPoolUserAttributeUpdateSettingsPtrOutput() UserPoolUserAttributeUpdateSettingsPtrOutput {
	return i.ToUserPoolUserAttributeUpdateSettingsPtrOutputWithContext(context.Background())
}

func (i *userPoolUserAttributeUpdateSettingsPtrType) ToUserPoolUserAttributeUpdateSettingsPtrOutputWithContext(ctx context.Context) UserPoolUserAttributeUpdateSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolUserAttributeUpdateSettingsPtrOutput)
}

type UserPoolUserAttributeUpdateSettingsOutput struct{ *pulumi.OutputState }

func (UserPoolUserAttributeUpdateSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolUserAttributeUpdateSettings)(nil)).Elem()
}

func (o UserPoolUserAttributeUpdateSettingsOutput) ToUserPoolUserAttributeUpdateSettingsOutput() UserPoolUserAttributeUpdateSettingsOutput {
	return o
}

func (o UserPoolUserAttributeUpdateSettingsOutput) ToUserPoolUserAttributeUpdateSettingsOutputWithContext(ctx context.Context) UserPoolUserAttributeUpdateSettingsOutput {
	return o
}

func (o UserPoolUserAttributeUpdateSettingsOutput) ToUserPoolUserAttributeUpdateSettingsPtrOutput() UserPoolUserAttributeUpdateSettingsPtrOutput {
	return o.ToUserPoolUserAttributeUpdateSettingsPtrOutputWithContext(context.Background())
}

func (o UserPoolUserAttributeUpdateSettingsOutput) ToUserPoolUserAttributeUpdateSettingsPtrOutputWithContext(ctx context.Context) UserPoolUserAttributeUpdateSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolUserAttributeUpdateSettings) *UserPoolUserAttributeUpdateSettings {
		return &v
	}).(UserPoolUserAttributeUpdateSettingsPtrOutput)
}

// A list of attributes requiring verification before update. If set, the provided value(s) must also be set in `autoVerifiedAttributes`. Valid values: `email`, `phoneNumber`.
func (o UserPoolUserAttributeUpdateSettingsOutput) AttributesRequireVerificationBeforeUpdates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v UserPoolUserAttributeUpdateSettings) []string {
		return v.AttributesRequireVerificationBeforeUpdates
	}).(pulumi.StringArrayOutput)
}

type UserPoolUserAttributeUpdateSettingsPtrOutput struct{ *pulumi.OutputState }

func (UserPoolUserAttributeUpdateSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolUserAttributeUpdateSettings)(nil)).Elem()
}

func (o UserPoolUserAttributeUpdateSettingsPtrOutput) ToUserPoolUserAttributeUpdateSettingsPtrOutput() UserPoolUserAttributeUpdateSettingsPtrOutput {
	return o
}

func (o UserPoolUserAttributeUpdateSettingsPtrOutput) ToUserPoolUserAttributeUpdateSettingsPtrOutputWithContext(ctx context.Context) UserPoolUserAttributeUpdateSettingsPtrOutput {
	return o
}

func (o UserPoolUserAttributeUpdateSettingsPtrOutput) Elem() UserPoolUserAttributeUpdateSettingsOutput {
	return o.ApplyT(func(v *UserPoolUserAttributeUpdateSettings) UserPoolUserAttributeUpdateSettings {
		if v != nil {
			return *v
		}
		var ret UserPoolUserAttributeUpdateSettings
		return ret
	}).(UserPoolUserAttributeUpdateSettingsOutput)
}

// A list of attributes requiring verification before update. If set, the provided value(s) must also be set in `autoVerifiedAttributes`. Valid values: `email`, `phoneNumber`.
func (o UserPoolUserAttributeUpdateSettingsPtrOutput) AttributesRequireVerificationBeforeUpdates() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UserPoolUserAttributeUpdateSettings) []string {
		if v == nil {
			return nil
		}
		return v.AttributesRequireVerificationBeforeUpdates
	}).(pulumi.StringArrayOutput)
}

type UserPoolUserPoolAddOns struct {
	// Mode for advanced security, must be one of `OFF`, `AUDIT` or `ENFORCED`.
	AdvancedSecurityMode string `pulumi:"advancedSecurityMode"`
}

// UserPoolUserPoolAddOnsInput is an input type that accepts UserPoolUserPoolAddOnsArgs and UserPoolUserPoolAddOnsOutput values.
// You can construct a concrete instance of `UserPoolUserPoolAddOnsInput` via:
//
//	UserPoolUserPoolAddOnsArgs{...}
type UserPoolUserPoolAddOnsInput interface {
	pulumi.Input

	ToUserPoolUserPoolAddOnsOutput() UserPoolUserPoolAddOnsOutput
	ToUserPoolUserPoolAddOnsOutputWithContext(context.Context) UserPoolUserPoolAddOnsOutput
}

type UserPoolUserPoolAddOnsArgs struct {
	// Mode for advanced security, must be one of `OFF`, `AUDIT` or `ENFORCED`.
	AdvancedSecurityMode pulumi.StringInput `pulumi:"advancedSecurityMode"`
}

func (UserPoolUserPoolAddOnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolUserPoolAddOns)(nil)).Elem()
}

func (i UserPoolUserPoolAddOnsArgs) ToUserPoolUserPoolAddOnsOutput() UserPoolUserPoolAddOnsOutput {
	return i.ToUserPoolUserPoolAddOnsOutputWithContext(context.Background())
}

func (i UserPoolUserPoolAddOnsArgs) ToUserPoolUserPoolAddOnsOutputWithContext(ctx context.Context) UserPoolUserPoolAddOnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolUserPoolAddOnsOutput)
}

func (i UserPoolUserPoolAddOnsArgs) ToUserPoolUserPoolAddOnsPtrOutput() UserPoolUserPoolAddOnsPtrOutput {
	return i.ToUserPoolUserPoolAddOnsPtrOutputWithContext(context.Background())
}

func (i UserPoolUserPoolAddOnsArgs) ToUserPoolUserPoolAddOnsPtrOutputWithContext(ctx context.Context) UserPoolUserPoolAddOnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolUserPoolAddOnsOutput).ToUserPoolUserPoolAddOnsPtrOutputWithContext(ctx)
}

// UserPoolUserPoolAddOnsPtrInput is an input type that accepts UserPoolUserPoolAddOnsArgs, UserPoolUserPoolAddOnsPtr and UserPoolUserPoolAddOnsPtrOutput values.
// You can construct a concrete instance of `UserPoolUserPoolAddOnsPtrInput` via:
//
//	        UserPoolUserPoolAddOnsArgs{...}
//
//	or:
//
//	        nil
type UserPoolUserPoolAddOnsPtrInput interface {
	pulumi.Input

	ToUserPoolUserPoolAddOnsPtrOutput() UserPoolUserPoolAddOnsPtrOutput
	ToUserPoolUserPoolAddOnsPtrOutputWithContext(context.Context) UserPoolUserPoolAddOnsPtrOutput
}

type userPoolUserPoolAddOnsPtrType UserPoolUserPoolAddOnsArgs

func UserPoolUserPoolAddOnsPtr(v *UserPoolUserPoolAddOnsArgs) UserPoolUserPoolAddOnsPtrInput {
	return (*userPoolUserPoolAddOnsPtrType)(v)
}

func (*userPoolUserPoolAddOnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolUserPoolAddOns)(nil)).Elem()
}

func (i *userPoolUserPoolAddOnsPtrType) ToUserPoolUserPoolAddOnsPtrOutput() UserPoolUserPoolAddOnsPtrOutput {
	return i.ToUserPoolUserPoolAddOnsPtrOutputWithContext(context.Background())
}

func (i *userPoolUserPoolAddOnsPtrType) ToUserPoolUserPoolAddOnsPtrOutputWithContext(ctx context.Context) UserPoolUserPoolAddOnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolUserPoolAddOnsPtrOutput)
}

type UserPoolUserPoolAddOnsOutput struct{ *pulumi.OutputState }

func (UserPoolUserPoolAddOnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolUserPoolAddOns)(nil)).Elem()
}

func (o UserPoolUserPoolAddOnsOutput) ToUserPoolUserPoolAddOnsOutput() UserPoolUserPoolAddOnsOutput {
	return o
}

func (o UserPoolUserPoolAddOnsOutput) ToUserPoolUserPoolAddOnsOutputWithContext(ctx context.Context) UserPoolUserPoolAddOnsOutput {
	return o
}

func (o UserPoolUserPoolAddOnsOutput) ToUserPoolUserPoolAddOnsPtrOutput() UserPoolUserPoolAddOnsPtrOutput {
	return o.ToUserPoolUserPoolAddOnsPtrOutputWithContext(context.Background())
}

func (o UserPoolUserPoolAddOnsOutput) ToUserPoolUserPoolAddOnsPtrOutputWithContext(ctx context.Context) UserPoolUserPoolAddOnsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolUserPoolAddOns) *UserPoolUserPoolAddOns {
		return &v
	}).(UserPoolUserPoolAddOnsPtrOutput)
}

// Mode for advanced security, must be one of `OFF`, `AUDIT` or `ENFORCED`.
func (o UserPoolUserPoolAddOnsOutput) AdvancedSecurityMode() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolUserPoolAddOns) string { return v.AdvancedSecurityMode }).(pulumi.StringOutput)
}

type UserPoolUserPoolAddOnsPtrOutput struct{ *pulumi.OutputState }

func (UserPoolUserPoolAddOnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolUserPoolAddOns)(nil)).Elem()
}

func (o UserPoolUserPoolAddOnsPtrOutput) ToUserPoolUserPoolAddOnsPtrOutput() UserPoolUserPoolAddOnsPtrOutput {
	return o
}

func (o UserPoolUserPoolAddOnsPtrOutput) ToUserPoolUserPoolAddOnsPtrOutputWithContext(ctx context.Context) UserPoolUserPoolAddOnsPtrOutput {
	return o
}

func (o UserPoolUserPoolAddOnsPtrOutput) Elem() UserPoolUserPoolAddOnsOutput {
	return o.ApplyT(func(v *UserPoolUserPoolAddOns) UserPoolUserPoolAddOns {
		if v != nil {
			return *v
		}
		var ret UserPoolUserPoolAddOns
		return ret
	}).(UserPoolUserPoolAddOnsOutput)
}

// Mode for advanced security, must be one of `OFF`, `AUDIT` or `ENFORCED`.
func (o UserPoolUserPoolAddOnsPtrOutput) AdvancedSecurityMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolUserPoolAddOns) *string {
		if v == nil {
			return nil
		}
		return &v.AdvancedSecurityMode
	}).(pulumi.StringPtrOutput)
}

type UserPoolUsernameConfiguration struct {
	// Whether username case sensitivity will be applied for all users in the user pool through Cognito APIs.
	CaseSensitive bool `pulumi:"caseSensitive"`
}

// UserPoolUsernameConfigurationInput is an input type that accepts UserPoolUsernameConfigurationArgs and UserPoolUsernameConfigurationOutput values.
// You can construct a concrete instance of `UserPoolUsernameConfigurationInput` via:
//
//	UserPoolUsernameConfigurationArgs{...}
type UserPoolUsernameConfigurationInput interface {
	pulumi.Input

	ToUserPoolUsernameConfigurationOutput() UserPoolUsernameConfigurationOutput
	ToUserPoolUsernameConfigurationOutputWithContext(context.Context) UserPoolUsernameConfigurationOutput
}

type UserPoolUsernameConfigurationArgs struct {
	// Whether username case sensitivity will be applied for all users in the user pool through Cognito APIs.
	CaseSensitive pulumi.BoolInput `pulumi:"caseSensitive"`
}

func (UserPoolUsernameConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolUsernameConfiguration)(nil)).Elem()
}

func (i UserPoolUsernameConfigurationArgs) ToUserPoolUsernameConfigurationOutput() UserPoolUsernameConfigurationOutput {
	return i.ToUserPoolUsernameConfigurationOutputWithContext(context.Background())
}

func (i UserPoolUsernameConfigurationArgs) ToUserPoolUsernameConfigurationOutputWithContext(ctx context.Context) UserPoolUsernameConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolUsernameConfigurationOutput)
}

func (i UserPoolUsernameConfigurationArgs) ToUserPoolUsernameConfigurationPtrOutput() UserPoolUsernameConfigurationPtrOutput {
	return i.ToUserPoolUsernameConfigurationPtrOutputWithContext(context.Background())
}

func (i UserPoolUsernameConfigurationArgs) ToUserPoolUsernameConfigurationPtrOutputWithContext(ctx context.Context) UserPoolUsernameConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolUsernameConfigurationOutput).ToUserPoolUsernameConfigurationPtrOutputWithContext(ctx)
}

// UserPoolUsernameConfigurationPtrInput is an input type that accepts UserPoolUsernameConfigurationArgs, UserPoolUsernameConfigurationPtr and UserPoolUsernameConfigurationPtrOutput values.
// You can construct a concrete instance of `UserPoolUsernameConfigurationPtrInput` via:
//
//	        UserPoolUsernameConfigurationArgs{...}
//
//	or:
//
//	        nil
type UserPoolUsernameConfigurationPtrInput interface {
	pulumi.Input

	ToUserPoolUsernameConfigurationPtrOutput() UserPoolUsernameConfigurationPtrOutput
	ToUserPoolUsernameConfigurationPtrOutputWithContext(context.Context) UserPoolUsernameConfigurationPtrOutput
}

type userPoolUsernameConfigurationPtrType UserPoolUsernameConfigurationArgs

func UserPoolUsernameConfigurationPtr(v *UserPoolUsernameConfigurationArgs) UserPoolUsernameConfigurationPtrInput {
	return (*userPoolUsernameConfigurationPtrType)(v)
}

func (*userPoolUsernameConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolUsernameConfiguration)(nil)).Elem()
}

func (i *userPoolUsernameConfigurationPtrType) ToUserPoolUsernameConfigurationPtrOutput() UserPoolUsernameConfigurationPtrOutput {
	return i.ToUserPoolUsernameConfigurationPtrOutputWithContext(context.Background())
}

func (i *userPoolUsernameConfigurationPtrType) ToUserPoolUsernameConfigurationPtrOutputWithContext(ctx context.Context) UserPoolUsernameConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolUsernameConfigurationPtrOutput)
}

type UserPoolUsernameConfigurationOutput struct{ *pulumi.OutputState }

func (UserPoolUsernameConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolUsernameConfiguration)(nil)).Elem()
}

func (o UserPoolUsernameConfigurationOutput) ToUserPoolUsernameConfigurationOutput() UserPoolUsernameConfigurationOutput {
	return o
}

func (o UserPoolUsernameConfigurationOutput) ToUserPoolUsernameConfigurationOutputWithContext(ctx context.Context) UserPoolUsernameConfigurationOutput {
	return o
}

func (o UserPoolUsernameConfigurationOutput) ToUserPoolUsernameConfigurationPtrOutput() UserPoolUsernameConfigurationPtrOutput {
	return o.ToUserPoolUsernameConfigurationPtrOutputWithContext(context.Background())
}

func (o UserPoolUsernameConfigurationOutput) ToUserPoolUsernameConfigurationPtrOutputWithContext(ctx context.Context) UserPoolUsernameConfigurationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolUsernameConfiguration) *UserPoolUsernameConfiguration {
		return &v
	}).(UserPoolUsernameConfigurationPtrOutput)
}

// Whether username case sensitivity will be applied for all users in the user pool through Cognito APIs.
func (o UserPoolUsernameConfigurationOutput) CaseSensitive() pulumi.BoolOutput {
	return o.ApplyT(func(v UserPoolUsernameConfiguration) bool { return v.CaseSensitive }).(pulumi.BoolOutput)
}

type UserPoolUsernameConfigurationPtrOutput struct{ *pulumi.OutputState }

func (UserPoolUsernameConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolUsernameConfiguration)(nil)).Elem()
}

func (o UserPoolUsernameConfigurationPtrOutput) ToUserPoolUsernameConfigurationPtrOutput() UserPoolUsernameConfigurationPtrOutput {
	return o
}

func (o UserPoolUsernameConfigurationPtrOutput) ToUserPoolUsernameConfigurationPtrOutputWithContext(ctx context.Context) UserPoolUsernameConfigurationPtrOutput {
	return o
}

func (o UserPoolUsernameConfigurationPtrOutput) Elem() UserPoolUsernameConfigurationOutput {
	return o.ApplyT(func(v *UserPoolUsernameConfiguration) UserPoolUsernameConfiguration {
		if v != nil {
			return *v
		}
		var ret UserPoolUsernameConfiguration
		return ret
	}).(UserPoolUsernameConfigurationOutput)
}

// Whether username case sensitivity will be applied for all users in the user pool through Cognito APIs.
func (o UserPoolUsernameConfigurationPtrOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserPoolUsernameConfiguration) *bool {
		if v == nil {
			return nil
		}
		return &v.CaseSensitive
	}).(pulumi.BoolPtrOutput)
}

type UserPoolVerificationMessageTemplate struct {
	// Default email option. Must be either `CONFIRM_WITH_CODE` or `CONFIRM_WITH_LINK`. Defaults to `CONFIRM_WITH_CODE`.
	DefaultEmailOption *string `pulumi:"defaultEmailOption"`
	// Email message template. Must contain the `{####}` placeholder. Conflicts with `emailVerificationMessage` argument.
	EmailMessage *string `pulumi:"emailMessage"`
	// Email message template for sending a confirmation link to the user, it must contain the `{##Click Here##}` placeholder.
	EmailMessageByLink *string `pulumi:"emailMessageByLink"`
	// Subject line for the email message template. Conflicts with `emailVerificationSubject` argument.
	EmailSubject *string `pulumi:"emailSubject"`
	// Subject line for the email message template for sending a confirmation link to the user.
	EmailSubjectByLink *string `pulumi:"emailSubjectByLink"`
	// SMS message template. Must contain the `{####}` placeholder. Conflicts with `smsVerificationMessage` argument.
	SmsMessage *string `pulumi:"smsMessage"`
}

// UserPoolVerificationMessageTemplateInput is an input type that accepts UserPoolVerificationMessageTemplateArgs and UserPoolVerificationMessageTemplateOutput values.
// You can construct a concrete instance of `UserPoolVerificationMessageTemplateInput` via:
//
//	UserPoolVerificationMessageTemplateArgs{...}
type UserPoolVerificationMessageTemplateInput interface {
	pulumi.Input

	ToUserPoolVerificationMessageTemplateOutput() UserPoolVerificationMessageTemplateOutput
	ToUserPoolVerificationMessageTemplateOutputWithContext(context.Context) UserPoolVerificationMessageTemplateOutput
}

type UserPoolVerificationMessageTemplateArgs struct {
	// Default email option. Must be either `CONFIRM_WITH_CODE` or `CONFIRM_WITH_LINK`. Defaults to `CONFIRM_WITH_CODE`.
	DefaultEmailOption pulumi.StringPtrInput `pulumi:"defaultEmailOption"`
	// Email message template. Must contain the `{####}` placeholder. Conflicts with `emailVerificationMessage` argument.
	EmailMessage pulumi.StringPtrInput `pulumi:"emailMessage"`
	// Email message template for sending a confirmation link to the user, it must contain the `{##Click Here##}` placeholder.
	EmailMessageByLink pulumi.StringPtrInput `pulumi:"emailMessageByLink"`
	// Subject line for the email message template. Conflicts with `emailVerificationSubject` argument.
	EmailSubject pulumi.StringPtrInput `pulumi:"emailSubject"`
	// Subject line for the email message template for sending a confirmation link to the user.
	EmailSubjectByLink pulumi.StringPtrInput `pulumi:"emailSubjectByLink"`
	// SMS message template. Must contain the `{####}` placeholder. Conflicts with `smsVerificationMessage` argument.
	SmsMessage pulumi.StringPtrInput `pulumi:"smsMessage"`
}

func (UserPoolVerificationMessageTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolVerificationMessageTemplate)(nil)).Elem()
}

func (i UserPoolVerificationMessageTemplateArgs) ToUserPoolVerificationMessageTemplateOutput() UserPoolVerificationMessageTemplateOutput {
	return i.ToUserPoolVerificationMessageTemplateOutputWithContext(context.Background())
}

func (i UserPoolVerificationMessageTemplateArgs) ToUserPoolVerificationMessageTemplateOutputWithContext(ctx context.Context) UserPoolVerificationMessageTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolVerificationMessageTemplateOutput)
}

func (i UserPoolVerificationMessageTemplateArgs) ToUserPoolVerificationMessageTemplatePtrOutput() UserPoolVerificationMessageTemplatePtrOutput {
	return i.ToUserPoolVerificationMessageTemplatePtrOutputWithContext(context.Background())
}

func (i UserPoolVerificationMessageTemplateArgs) ToUserPoolVerificationMessageTemplatePtrOutputWithContext(ctx context.Context) UserPoolVerificationMessageTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolVerificationMessageTemplateOutput).ToUserPoolVerificationMessageTemplatePtrOutputWithContext(ctx)
}

// UserPoolVerificationMessageTemplatePtrInput is an input type that accepts UserPoolVerificationMessageTemplateArgs, UserPoolVerificationMessageTemplatePtr and UserPoolVerificationMessageTemplatePtrOutput values.
// You can construct a concrete instance of `UserPoolVerificationMessageTemplatePtrInput` via:
//
//	        UserPoolVerificationMessageTemplateArgs{...}
//
//	or:
//
//	        nil
type UserPoolVerificationMessageTemplatePtrInput interface {
	pulumi.Input

	ToUserPoolVerificationMessageTemplatePtrOutput() UserPoolVerificationMessageTemplatePtrOutput
	ToUserPoolVerificationMessageTemplatePtrOutputWithContext(context.Context) UserPoolVerificationMessageTemplatePtrOutput
}

type userPoolVerificationMessageTemplatePtrType UserPoolVerificationMessageTemplateArgs

func UserPoolVerificationMessageTemplatePtr(v *UserPoolVerificationMessageTemplateArgs) UserPoolVerificationMessageTemplatePtrInput {
	return (*userPoolVerificationMessageTemplatePtrType)(v)
}

func (*userPoolVerificationMessageTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolVerificationMessageTemplate)(nil)).Elem()
}

func (i *userPoolVerificationMessageTemplatePtrType) ToUserPoolVerificationMessageTemplatePtrOutput() UserPoolVerificationMessageTemplatePtrOutput {
	return i.ToUserPoolVerificationMessageTemplatePtrOutputWithContext(context.Background())
}

func (i *userPoolVerificationMessageTemplatePtrType) ToUserPoolVerificationMessageTemplatePtrOutputWithContext(ctx context.Context) UserPoolVerificationMessageTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolVerificationMessageTemplatePtrOutput)
}

type UserPoolVerificationMessageTemplateOutput struct{ *pulumi.OutputState }

func (UserPoolVerificationMessageTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolVerificationMessageTemplate)(nil)).Elem()
}

func (o UserPoolVerificationMessageTemplateOutput) ToUserPoolVerificationMessageTemplateOutput() UserPoolVerificationMessageTemplateOutput {
	return o
}

func (o UserPoolVerificationMessageTemplateOutput) ToUserPoolVerificationMessageTemplateOutputWithContext(ctx context.Context) UserPoolVerificationMessageTemplateOutput {
	return o
}

func (o UserPoolVerificationMessageTemplateOutput) ToUserPoolVerificationMessageTemplatePtrOutput() UserPoolVerificationMessageTemplatePtrOutput {
	return o.ToUserPoolVerificationMessageTemplatePtrOutputWithContext(context.Background())
}

func (o UserPoolVerificationMessageTemplateOutput) ToUserPoolVerificationMessageTemplatePtrOutputWithContext(ctx context.Context) UserPoolVerificationMessageTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserPoolVerificationMessageTemplate) *UserPoolVerificationMessageTemplate {
		return &v
	}).(UserPoolVerificationMessageTemplatePtrOutput)
}

// Default email option. Must be either `CONFIRM_WITH_CODE` or `CONFIRM_WITH_LINK`. Defaults to `CONFIRM_WITH_CODE`.
func (o UserPoolVerificationMessageTemplateOutput) DefaultEmailOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolVerificationMessageTemplate) *string { return v.DefaultEmailOption }).(pulumi.StringPtrOutput)
}

// Email message template. Must contain the `{####}` placeholder. Conflicts with `emailVerificationMessage` argument.
func (o UserPoolVerificationMessageTemplateOutput) EmailMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolVerificationMessageTemplate) *string { return v.EmailMessage }).(pulumi.StringPtrOutput)
}

// Email message template for sending a confirmation link to the user, it must contain the `{##Click Here##}` placeholder.
func (o UserPoolVerificationMessageTemplateOutput) EmailMessageByLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolVerificationMessageTemplate) *string { return v.EmailMessageByLink }).(pulumi.StringPtrOutput)
}

// Subject line for the email message template. Conflicts with `emailVerificationSubject` argument.
func (o UserPoolVerificationMessageTemplateOutput) EmailSubject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolVerificationMessageTemplate) *string { return v.EmailSubject }).(pulumi.StringPtrOutput)
}

// Subject line for the email message template for sending a confirmation link to the user.
func (o UserPoolVerificationMessageTemplateOutput) EmailSubjectByLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolVerificationMessageTemplate) *string { return v.EmailSubjectByLink }).(pulumi.StringPtrOutput)
}

// SMS message template. Must contain the `{####}` placeholder. Conflicts with `smsVerificationMessage` argument.
func (o UserPoolVerificationMessageTemplateOutput) SmsMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolVerificationMessageTemplate) *string { return v.SmsMessage }).(pulumi.StringPtrOutput)
}

type UserPoolVerificationMessageTemplatePtrOutput struct{ *pulumi.OutputState }

func (UserPoolVerificationMessageTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolVerificationMessageTemplate)(nil)).Elem()
}

func (o UserPoolVerificationMessageTemplatePtrOutput) ToUserPoolVerificationMessageTemplatePtrOutput() UserPoolVerificationMessageTemplatePtrOutput {
	return o
}

func (o UserPoolVerificationMessageTemplatePtrOutput) ToUserPoolVerificationMessageTemplatePtrOutputWithContext(ctx context.Context) UserPoolVerificationMessageTemplatePtrOutput {
	return o
}

func (o UserPoolVerificationMessageTemplatePtrOutput) Elem() UserPoolVerificationMessageTemplateOutput {
	return o.ApplyT(func(v *UserPoolVerificationMessageTemplate) UserPoolVerificationMessageTemplate {
		if v != nil {
			return *v
		}
		var ret UserPoolVerificationMessageTemplate
		return ret
	}).(UserPoolVerificationMessageTemplateOutput)
}

// Default email option. Must be either `CONFIRM_WITH_CODE` or `CONFIRM_WITH_LINK`. Defaults to `CONFIRM_WITH_CODE`.
func (o UserPoolVerificationMessageTemplatePtrOutput) DefaultEmailOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolVerificationMessageTemplate) *string {
		if v == nil {
			return nil
		}
		return v.DefaultEmailOption
	}).(pulumi.StringPtrOutput)
}

// Email message template. Must contain the `{####}` placeholder. Conflicts with `emailVerificationMessage` argument.
func (o UserPoolVerificationMessageTemplatePtrOutput) EmailMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolVerificationMessageTemplate) *string {
		if v == nil {
			return nil
		}
		return v.EmailMessage
	}).(pulumi.StringPtrOutput)
}

// Email message template for sending a confirmation link to the user, it must contain the `{##Click Here##}` placeholder.
func (o UserPoolVerificationMessageTemplatePtrOutput) EmailMessageByLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolVerificationMessageTemplate) *string {
		if v == nil {
			return nil
		}
		return v.EmailMessageByLink
	}).(pulumi.StringPtrOutput)
}

// Subject line for the email message template. Conflicts with `emailVerificationSubject` argument.
func (o UserPoolVerificationMessageTemplatePtrOutput) EmailSubject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolVerificationMessageTemplate) *string {
		if v == nil {
			return nil
		}
		return v.EmailSubject
	}).(pulumi.StringPtrOutput)
}

// Subject line for the email message template for sending a confirmation link to the user.
func (o UserPoolVerificationMessageTemplatePtrOutput) EmailSubjectByLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolVerificationMessageTemplate) *string {
		if v == nil {
			return nil
		}
		return v.EmailSubjectByLink
	}).(pulumi.StringPtrOutput)
}

// SMS message template. Must contain the `{####}` placeholder. Conflicts with `smsVerificationMessage` argument.
func (o UserPoolVerificationMessageTemplatePtrOutput) SmsMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserPoolVerificationMessageTemplate) *string {
		if v == nil {
			return nil
		}
		return v.SmsMessage
	}).(pulumi.StringPtrOutput)
}

type GetUserPoolClientAnalyticsConfiguration struct {
	// (Optional) Application ARN for an Amazon Pinpoint application. Conflicts with `externalId` and `roleArn`.
	ApplicationArn string `pulumi:"applicationArn"`
	// (Optional) Application ID for an Amazon Pinpoint application.
	ApplicationId string `pulumi:"applicationId"`
	// (Optional) ID for the Analytics Configuration. Conflicts with `applicationArn`.
	ExternalId string `pulumi:"externalId"`
	// (Optional) ARN of an IAM role that authorizes Amazon Cognito to publish events to Amazon Pinpoint analytics. Conflicts with `applicationArn`.
	RoleArn string `pulumi:"roleArn"`
	// (Optional) If set to `true`, Amazon Cognito will include user data in the events it publishes to Amazon Pinpoint analytics.
	UserDataShared bool `pulumi:"userDataShared"`
}

// GetUserPoolClientAnalyticsConfigurationInput is an input type that accepts GetUserPoolClientAnalyticsConfigurationArgs and GetUserPoolClientAnalyticsConfigurationOutput values.
// You can construct a concrete instance of `GetUserPoolClientAnalyticsConfigurationInput` via:
//
//	GetUserPoolClientAnalyticsConfigurationArgs{...}
type GetUserPoolClientAnalyticsConfigurationInput interface {
	pulumi.Input

	ToGetUserPoolClientAnalyticsConfigurationOutput() GetUserPoolClientAnalyticsConfigurationOutput
	ToGetUserPoolClientAnalyticsConfigurationOutputWithContext(context.Context) GetUserPoolClientAnalyticsConfigurationOutput
}

type GetUserPoolClientAnalyticsConfigurationArgs struct {
	// (Optional) Application ARN for an Amazon Pinpoint application. Conflicts with `externalId` and `roleArn`.
	ApplicationArn pulumi.StringInput `pulumi:"applicationArn"`
	// (Optional) Application ID for an Amazon Pinpoint application.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// (Optional) ID for the Analytics Configuration. Conflicts with `applicationArn`.
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	// (Optional) ARN of an IAM role that authorizes Amazon Cognito to publish events to Amazon Pinpoint analytics. Conflicts with `applicationArn`.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// (Optional) If set to `true`, Amazon Cognito will include user data in the events it publishes to Amazon Pinpoint analytics.
	UserDataShared pulumi.BoolInput `pulumi:"userDataShared"`
}

func (GetUserPoolClientAnalyticsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserPoolClientAnalyticsConfiguration)(nil)).Elem()
}

func (i GetUserPoolClientAnalyticsConfigurationArgs) ToGetUserPoolClientAnalyticsConfigurationOutput() GetUserPoolClientAnalyticsConfigurationOutput {
	return i.ToGetUserPoolClientAnalyticsConfigurationOutputWithContext(context.Background())
}

func (i GetUserPoolClientAnalyticsConfigurationArgs) ToGetUserPoolClientAnalyticsConfigurationOutputWithContext(ctx context.Context) GetUserPoolClientAnalyticsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserPoolClientAnalyticsConfigurationOutput)
}

// GetUserPoolClientAnalyticsConfigurationArrayInput is an input type that accepts GetUserPoolClientAnalyticsConfigurationArray and GetUserPoolClientAnalyticsConfigurationArrayOutput values.
// You can construct a concrete instance of `GetUserPoolClientAnalyticsConfigurationArrayInput` via:
//
//	GetUserPoolClientAnalyticsConfigurationArray{ GetUserPoolClientAnalyticsConfigurationArgs{...} }
type GetUserPoolClientAnalyticsConfigurationArrayInput interface {
	pulumi.Input

	ToGetUserPoolClientAnalyticsConfigurationArrayOutput() GetUserPoolClientAnalyticsConfigurationArrayOutput
	ToGetUserPoolClientAnalyticsConfigurationArrayOutputWithContext(context.Context) GetUserPoolClientAnalyticsConfigurationArrayOutput
}

type GetUserPoolClientAnalyticsConfigurationArray []GetUserPoolClientAnalyticsConfigurationInput

func (GetUserPoolClientAnalyticsConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserPoolClientAnalyticsConfiguration)(nil)).Elem()
}

func (i GetUserPoolClientAnalyticsConfigurationArray) ToGetUserPoolClientAnalyticsConfigurationArrayOutput() GetUserPoolClientAnalyticsConfigurationArrayOutput {
	return i.ToGetUserPoolClientAnalyticsConfigurationArrayOutputWithContext(context.Background())
}

func (i GetUserPoolClientAnalyticsConfigurationArray) ToGetUserPoolClientAnalyticsConfigurationArrayOutputWithContext(ctx context.Context) GetUserPoolClientAnalyticsConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserPoolClientAnalyticsConfigurationArrayOutput)
}

type GetUserPoolClientAnalyticsConfigurationOutput struct{ *pulumi.OutputState }

func (GetUserPoolClientAnalyticsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserPoolClientAnalyticsConfiguration)(nil)).Elem()
}

func (o GetUserPoolClientAnalyticsConfigurationOutput) ToGetUserPoolClientAnalyticsConfigurationOutput() GetUserPoolClientAnalyticsConfigurationOutput {
	return o
}

func (o GetUserPoolClientAnalyticsConfigurationOutput) ToGetUserPoolClientAnalyticsConfigurationOutputWithContext(ctx context.Context) GetUserPoolClientAnalyticsConfigurationOutput {
	return o
}

// (Optional) Application ARN for an Amazon Pinpoint application. Conflicts with `externalId` and `roleArn`.
func (o GetUserPoolClientAnalyticsConfigurationOutput) ApplicationArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserPoolClientAnalyticsConfiguration) string { return v.ApplicationArn }).(pulumi.StringOutput)
}

// (Optional) Application ID for an Amazon Pinpoint application.
func (o GetUserPoolClientAnalyticsConfigurationOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserPoolClientAnalyticsConfiguration) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// (Optional) ID for the Analytics Configuration. Conflicts with `applicationArn`.
func (o GetUserPoolClientAnalyticsConfigurationOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserPoolClientAnalyticsConfiguration) string { return v.ExternalId }).(pulumi.StringOutput)
}

// (Optional) ARN of an IAM role that authorizes Amazon Cognito to publish events to Amazon Pinpoint analytics. Conflicts with `applicationArn`.
func (o GetUserPoolClientAnalyticsConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserPoolClientAnalyticsConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// (Optional) If set to `true`, Amazon Cognito will include user data in the events it publishes to Amazon Pinpoint analytics.
func (o GetUserPoolClientAnalyticsConfigurationOutput) UserDataShared() pulumi.BoolOutput {
	return o.ApplyT(func(v GetUserPoolClientAnalyticsConfiguration) bool { return v.UserDataShared }).(pulumi.BoolOutput)
}

type GetUserPoolClientAnalyticsConfigurationArrayOutput struct{ *pulumi.OutputState }

func (GetUserPoolClientAnalyticsConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserPoolClientAnalyticsConfiguration)(nil)).Elem()
}

func (o GetUserPoolClientAnalyticsConfigurationArrayOutput) ToGetUserPoolClientAnalyticsConfigurationArrayOutput() GetUserPoolClientAnalyticsConfigurationArrayOutput {
	return o
}

func (o GetUserPoolClientAnalyticsConfigurationArrayOutput) ToGetUserPoolClientAnalyticsConfigurationArrayOutputWithContext(ctx context.Context) GetUserPoolClientAnalyticsConfigurationArrayOutput {
	return o
}

func (o GetUserPoolClientAnalyticsConfigurationArrayOutput) Index(i pulumi.IntInput) GetUserPoolClientAnalyticsConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserPoolClientAnalyticsConfiguration {
		return vs[0].([]GetUserPoolClientAnalyticsConfiguration)[vs[1].(int)]
	}).(GetUserPoolClientAnalyticsConfigurationOutput)
}

type GetUserPoolClientTokenValidityUnit struct {
	// (Optional) Time unit in for the value in `accessTokenValidity`, defaults to `hours`.
	AccessToken string `pulumi:"accessToken"`
	// (Optional) Time unit in for the value in `idTokenValidity`, defaults to `hours`.
	IdToken string `pulumi:"idToken"`
	// (Optional) Time unit in for the value in `refreshTokenValidity`, defaults to `days`.
	RefreshToken string `pulumi:"refreshToken"`
}

// GetUserPoolClientTokenValidityUnitInput is an input type that accepts GetUserPoolClientTokenValidityUnitArgs and GetUserPoolClientTokenValidityUnitOutput values.
// You can construct a concrete instance of `GetUserPoolClientTokenValidityUnitInput` via:
//
//	GetUserPoolClientTokenValidityUnitArgs{...}
type GetUserPoolClientTokenValidityUnitInput interface {
	pulumi.Input

	ToGetUserPoolClientTokenValidityUnitOutput() GetUserPoolClientTokenValidityUnitOutput
	ToGetUserPoolClientTokenValidityUnitOutputWithContext(context.Context) GetUserPoolClientTokenValidityUnitOutput
}

type GetUserPoolClientTokenValidityUnitArgs struct {
	// (Optional) Time unit in for the value in `accessTokenValidity`, defaults to `hours`.
	AccessToken pulumi.StringInput `pulumi:"accessToken"`
	// (Optional) Time unit in for the value in `idTokenValidity`, defaults to `hours`.
	IdToken pulumi.StringInput `pulumi:"idToken"`
	// (Optional) Time unit in for the value in `refreshTokenValidity`, defaults to `days`.
	RefreshToken pulumi.StringInput `pulumi:"refreshToken"`
}

func (GetUserPoolClientTokenValidityUnitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserPoolClientTokenValidityUnit)(nil)).Elem()
}

func (i GetUserPoolClientTokenValidityUnitArgs) ToGetUserPoolClientTokenValidityUnitOutput() GetUserPoolClientTokenValidityUnitOutput {
	return i.ToGetUserPoolClientTokenValidityUnitOutputWithContext(context.Background())
}

func (i GetUserPoolClientTokenValidityUnitArgs) ToGetUserPoolClientTokenValidityUnitOutputWithContext(ctx context.Context) GetUserPoolClientTokenValidityUnitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserPoolClientTokenValidityUnitOutput)
}

// GetUserPoolClientTokenValidityUnitArrayInput is an input type that accepts GetUserPoolClientTokenValidityUnitArray and GetUserPoolClientTokenValidityUnitArrayOutput values.
// You can construct a concrete instance of `GetUserPoolClientTokenValidityUnitArrayInput` via:
//
//	GetUserPoolClientTokenValidityUnitArray{ GetUserPoolClientTokenValidityUnitArgs{...} }
type GetUserPoolClientTokenValidityUnitArrayInput interface {
	pulumi.Input

	ToGetUserPoolClientTokenValidityUnitArrayOutput() GetUserPoolClientTokenValidityUnitArrayOutput
	ToGetUserPoolClientTokenValidityUnitArrayOutputWithContext(context.Context) GetUserPoolClientTokenValidityUnitArrayOutput
}

type GetUserPoolClientTokenValidityUnitArray []GetUserPoolClientTokenValidityUnitInput

func (GetUserPoolClientTokenValidityUnitArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserPoolClientTokenValidityUnit)(nil)).Elem()
}

func (i GetUserPoolClientTokenValidityUnitArray) ToGetUserPoolClientTokenValidityUnitArrayOutput() GetUserPoolClientTokenValidityUnitArrayOutput {
	return i.ToGetUserPoolClientTokenValidityUnitArrayOutputWithContext(context.Background())
}

func (i GetUserPoolClientTokenValidityUnitArray) ToGetUserPoolClientTokenValidityUnitArrayOutputWithContext(ctx context.Context) GetUserPoolClientTokenValidityUnitArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserPoolClientTokenValidityUnitArrayOutput)
}

type GetUserPoolClientTokenValidityUnitOutput struct{ *pulumi.OutputState }

func (GetUserPoolClientTokenValidityUnitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserPoolClientTokenValidityUnit)(nil)).Elem()
}

func (o GetUserPoolClientTokenValidityUnitOutput) ToGetUserPoolClientTokenValidityUnitOutput() GetUserPoolClientTokenValidityUnitOutput {
	return o
}

func (o GetUserPoolClientTokenValidityUnitOutput) ToGetUserPoolClientTokenValidityUnitOutputWithContext(ctx context.Context) GetUserPoolClientTokenValidityUnitOutput {
	return o
}

// (Optional) Time unit in for the value in `accessTokenValidity`, defaults to `hours`.
func (o GetUserPoolClientTokenValidityUnitOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserPoolClientTokenValidityUnit) string { return v.AccessToken }).(pulumi.StringOutput)
}

// (Optional) Time unit in for the value in `idTokenValidity`, defaults to `hours`.
func (o GetUserPoolClientTokenValidityUnitOutput) IdToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserPoolClientTokenValidityUnit) string { return v.IdToken }).(pulumi.StringOutput)
}

// (Optional) Time unit in for the value in `refreshTokenValidity`, defaults to `days`.
func (o GetUserPoolClientTokenValidityUnitOutput) RefreshToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserPoolClientTokenValidityUnit) string { return v.RefreshToken }).(pulumi.StringOutput)
}

type GetUserPoolClientTokenValidityUnitArrayOutput struct{ *pulumi.OutputState }

func (GetUserPoolClientTokenValidityUnitArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserPoolClientTokenValidityUnit)(nil)).Elem()
}

func (o GetUserPoolClientTokenValidityUnitArrayOutput) ToGetUserPoolClientTokenValidityUnitArrayOutput() GetUserPoolClientTokenValidityUnitArrayOutput {
	return o
}

func (o GetUserPoolClientTokenValidityUnitArrayOutput) ToGetUserPoolClientTokenValidityUnitArrayOutputWithContext(ctx context.Context) GetUserPoolClientTokenValidityUnitArrayOutput {
	return o
}

func (o GetUserPoolClientTokenValidityUnitArrayOutput) Index(i pulumi.IntInput) GetUserPoolClientTokenValidityUnitOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserPoolClientTokenValidityUnit {
		return vs[0].([]GetUserPoolClientTokenValidityUnit)[vs[1].(int)]
	}).(GetUserPoolClientTokenValidityUnitOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPoolCognitoIdentityProviderInput)(nil)).Elem(), IdentityPoolCognitoIdentityProviderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPoolCognitoIdentityProviderArrayInput)(nil)).Elem(), IdentityPoolCognitoIdentityProviderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPoolRoleAttachmentRoleMappingInput)(nil)).Elem(), IdentityPoolRoleAttachmentRoleMappingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPoolRoleAttachmentRoleMappingArrayInput)(nil)).Elem(), IdentityPoolRoleAttachmentRoleMappingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPoolRoleAttachmentRoleMappingMappingRuleInput)(nil)).Elem(), IdentityPoolRoleAttachmentRoleMappingMappingRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayInput)(nil)).Elem(), IdentityPoolRoleAttachmentRoleMappingMappingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedUserPoolClientAnalyticsConfigurationInput)(nil)).Elem(), ManagedUserPoolClientAnalyticsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedUserPoolClientAnalyticsConfigurationPtrInput)(nil)).Elem(), ManagedUserPoolClientAnalyticsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedUserPoolClientTokenValidityUnitsInput)(nil)).Elem(), ManagedUserPoolClientTokenValidityUnitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedUserPoolClientTokenValidityUnitsPtrInput)(nil)).Elem(), ManagedUserPoolClientTokenValidityUnitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceServerScopeInput)(nil)).Elem(), ResourceServerScopeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceServerScopeArrayInput)(nil)).Elem(), ResourceServerScopeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationInput)(nil)).Elem(), RiskConfigurationAccountTakeoverRiskConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationPtrInput)(nil)).Elem(), RiskConfigurationAccountTakeoverRiskConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationActionsInput)(nil)).Elem(), RiskConfigurationAccountTakeoverRiskConfigurationActionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrInput)(nil)).Elem(), RiskConfigurationAccountTakeoverRiskConfigurationActionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionInput)(nil)).Elem(), RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrInput)(nil)).Elem(), RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionInput)(nil)).Elem(), RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrInput)(nil)).Elem(), RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionInput)(nil)).Elem(), RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrInput)(nil)).Elem(), RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationInput)(nil)).Elem(), RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrInput)(nil)).Elem(), RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailInput)(nil)).Elem(), RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrInput)(nil)).Elem(), RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailInput)(nil)).Elem(), RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrInput)(nil)).Elem(), RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailInput)(nil)).Elem(), RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrInput)(nil)).Elem(), RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskConfigurationCompromisedCredentialsRiskConfigurationInput)(nil)).Elem(), RiskConfigurationCompromisedCredentialsRiskConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskConfigurationCompromisedCredentialsRiskConfigurationPtrInput)(nil)).Elem(), RiskConfigurationCompromisedCredentialsRiskConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskConfigurationCompromisedCredentialsRiskConfigurationActionsInput)(nil)).Elem(), RiskConfigurationCompromisedCredentialsRiskConfigurationActionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrInput)(nil)).Elem(), RiskConfigurationCompromisedCredentialsRiskConfigurationActionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskConfigurationRiskExceptionConfigurationInput)(nil)).Elem(), RiskConfigurationRiskExceptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RiskConfigurationRiskExceptionConfigurationPtrInput)(nil)).Elem(), RiskConfigurationRiskExceptionConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolAccountRecoverySettingInput)(nil)).Elem(), UserPoolAccountRecoverySettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolAccountRecoverySettingPtrInput)(nil)).Elem(), UserPoolAccountRecoverySettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolAccountRecoverySettingRecoveryMechanismInput)(nil)).Elem(), UserPoolAccountRecoverySettingRecoveryMechanismArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolAccountRecoverySettingRecoveryMechanismArrayInput)(nil)).Elem(), UserPoolAccountRecoverySettingRecoveryMechanismArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolAdminCreateUserConfigInput)(nil)).Elem(), UserPoolAdminCreateUserConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolAdminCreateUserConfigPtrInput)(nil)).Elem(), UserPoolAdminCreateUserConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolAdminCreateUserConfigInviteMessageTemplateInput)(nil)).Elem(), UserPoolAdminCreateUserConfigInviteMessageTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolAdminCreateUserConfigInviteMessageTemplatePtrInput)(nil)).Elem(), UserPoolAdminCreateUserConfigInviteMessageTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolClientAnalyticsConfigurationInput)(nil)).Elem(), UserPoolClientAnalyticsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolClientAnalyticsConfigurationPtrInput)(nil)).Elem(), UserPoolClientAnalyticsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolClientTokenValidityUnitsInput)(nil)).Elem(), UserPoolClientTokenValidityUnitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolClientTokenValidityUnitsPtrInput)(nil)).Elem(), UserPoolClientTokenValidityUnitsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolDeviceConfigurationInput)(nil)).Elem(), UserPoolDeviceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolDeviceConfigurationPtrInput)(nil)).Elem(), UserPoolDeviceConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolEmailConfigurationInput)(nil)).Elem(), UserPoolEmailConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolEmailConfigurationPtrInput)(nil)).Elem(), UserPoolEmailConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolLambdaConfigInput)(nil)).Elem(), UserPoolLambdaConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolLambdaConfigPtrInput)(nil)).Elem(), UserPoolLambdaConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolLambdaConfigCustomEmailSenderInput)(nil)).Elem(), UserPoolLambdaConfigCustomEmailSenderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolLambdaConfigCustomEmailSenderPtrInput)(nil)).Elem(), UserPoolLambdaConfigCustomEmailSenderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolLambdaConfigCustomSmsSenderInput)(nil)).Elem(), UserPoolLambdaConfigCustomSmsSenderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolLambdaConfigCustomSmsSenderPtrInput)(nil)).Elem(), UserPoolLambdaConfigCustomSmsSenderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolPasswordPolicyInput)(nil)).Elem(), UserPoolPasswordPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolPasswordPolicyPtrInput)(nil)).Elem(), UserPoolPasswordPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolSchemaInput)(nil)).Elem(), UserPoolSchemaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolSchemaArrayInput)(nil)).Elem(), UserPoolSchemaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolSchemaNumberAttributeConstraintsInput)(nil)).Elem(), UserPoolSchemaNumberAttributeConstraintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolSchemaNumberAttributeConstraintsPtrInput)(nil)).Elem(), UserPoolSchemaNumberAttributeConstraintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolSchemaStringAttributeConstraintsInput)(nil)).Elem(), UserPoolSchemaStringAttributeConstraintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolSchemaStringAttributeConstraintsPtrInput)(nil)).Elem(), UserPoolSchemaStringAttributeConstraintsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolSmsConfigurationInput)(nil)).Elem(), UserPoolSmsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolSmsConfigurationPtrInput)(nil)).Elem(), UserPoolSmsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolSoftwareTokenMfaConfigurationInput)(nil)).Elem(), UserPoolSoftwareTokenMfaConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolSoftwareTokenMfaConfigurationPtrInput)(nil)).Elem(), UserPoolSoftwareTokenMfaConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolUserAttributeUpdateSettingsInput)(nil)).Elem(), UserPoolUserAttributeUpdateSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolUserAttributeUpdateSettingsPtrInput)(nil)).Elem(), UserPoolUserAttributeUpdateSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolUserPoolAddOnsInput)(nil)).Elem(), UserPoolUserPoolAddOnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolUserPoolAddOnsPtrInput)(nil)).Elem(), UserPoolUserPoolAddOnsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolUsernameConfigurationInput)(nil)).Elem(), UserPoolUsernameConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolUsernameConfigurationPtrInput)(nil)).Elem(), UserPoolUsernameConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolVerificationMessageTemplateInput)(nil)).Elem(), UserPoolVerificationMessageTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*UserPoolVerificationMessageTemplatePtrInput)(nil)).Elem(), UserPoolVerificationMessageTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserPoolClientAnalyticsConfigurationInput)(nil)).Elem(), GetUserPoolClientAnalyticsConfigurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserPoolClientAnalyticsConfigurationArrayInput)(nil)).Elem(), GetUserPoolClientAnalyticsConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserPoolClientTokenValidityUnitInput)(nil)).Elem(), GetUserPoolClientTokenValidityUnitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserPoolClientTokenValidityUnitArrayInput)(nil)).Elem(), GetUserPoolClientTokenValidityUnitArray{})
	pulumi.RegisterOutputType(IdentityPoolCognitoIdentityProviderOutput{})
	pulumi.RegisterOutputType(IdentityPoolCognitoIdentityProviderArrayOutput{})
	pulumi.RegisterOutputType(IdentityPoolRoleAttachmentRoleMappingOutput{})
	pulumi.RegisterOutputType(IdentityPoolRoleAttachmentRoleMappingArrayOutput{})
	pulumi.RegisterOutputType(IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput{})
	pulumi.RegisterOutputType(IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput{})
	pulumi.RegisterOutputType(ManagedUserPoolClientAnalyticsConfigurationOutput{})
	pulumi.RegisterOutputType(ManagedUserPoolClientAnalyticsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(ManagedUserPoolClientTokenValidityUnitsOutput{})
	pulumi.RegisterOutputType(ManagedUserPoolClientTokenValidityUnitsPtrOutput{})
	pulumi.RegisterOutputType(ResourceServerScopeOutput{})
	pulumi.RegisterOutputType(ResourceServerScopeArrayOutput{})
	pulumi.RegisterOutputType(RiskConfigurationAccountTakeoverRiskConfigurationOutput{})
	pulumi.RegisterOutputType(RiskConfigurationAccountTakeoverRiskConfigurationPtrOutput{})
	pulumi.RegisterOutputType(RiskConfigurationAccountTakeoverRiskConfigurationActionsOutput{})
	pulumi.RegisterOutputType(RiskConfigurationAccountTakeoverRiskConfigurationActionsPtrOutput{})
	pulumi.RegisterOutputType(RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionOutput{})
	pulumi.RegisterOutputType(RiskConfigurationAccountTakeoverRiskConfigurationActionsHighActionPtrOutput{})
	pulumi.RegisterOutputType(RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionOutput{})
	pulumi.RegisterOutputType(RiskConfigurationAccountTakeoverRiskConfigurationActionsLowActionPtrOutput{})
	pulumi.RegisterOutputType(RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionOutput{})
	pulumi.RegisterOutputType(RiskConfigurationAccountTakeoverRiskConfigurationActionsMediumActionPtrOutput{})
	pulumi.RegisterOutputType(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationOutput{})
	pulumi.RegisterOutputType(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationPtrOutput{})
	pulumi.RegisterOutputType(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailOutput{})
	pulumi.RegisterOutputType(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationBlockEmailPtrOutput{})
	pulumi.RegisterOutputType(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailOutput{})
	pulumi.RegisterOutputType(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationMfaEmailPtrOutput{})
	pulumi.RegisterOutputType(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailOutput{})
	pulumi.RegisterOutputType(RiskConfigurationAccountTakeoverRiskConfigurationNotifyConfigurationNoActionEmailPtrOutput{})
	pulumi.RegisterOutputType(RiskConfigurationCompromisedCredentialsRiskConfigurationOutput{})
	pulumi.RegisterOutputType(RiskConfigurationCompromisedCredentialsRiskConfigurationPtrOutput{})
	pulumi.RegisterOutputType(RiskConfigurationCompromisedCredentialsRiskConfigurationActionsOutput{})
	pulumi.RegisterOutputType(RiskConfigurationCompromisedCredentialsRiskConfigurationActionsPtrOutput{})
	pulumi.RegisterOutputType(RiskConfigurationRiskExceptionConfigurationOutput{})
	pulumi.RegisterOutputType(RiskConfigurationRiskExceptionConfigurationPtrOutput{})
	pulumi.RegisterOutputType(UserPoolAccountRecoverySettingOutput{})
	pulumi.RegisterOutputType(UserPoolAccountRecoverySettingPtrOutput{})
	pulumi.RegisterOutputType(UserPoolAccountRecoverySettingRecoveryMechanismOutput{})
	pulumi.RegisterOutputType(UserPoolAccountRecoverySettingRecoveryMechanismArrayOutput{})
	pulumi.RegisterOutputType(UserPoolAdminCreateUserConfigOutput{})
	pulumi.RegisterOutputType(UserPoolAdminCreateUserConfigPtrOutput{})
	pulumi.RegisterOutputType(UserPoolAdminCreateUserConfigInviteMessageTemplateOutput{})
	pulumi.RegisterOutputType(UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput{})
	pulumi.RegisterOutputType(UserPoolClientAnalyticsConfigurationOutput{})
	pulumi.RegisterOutputType(UserPoolClientAnalyticsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(UserPoolClientTokenValidityUnitsOutput{})
	pulumi.RegisterOutputType(UserPoolClientTokenValidityUnitsPtrOutput{})
	pulumi.RegisterOutputType(UserPoolDeviceConfigurationOutput{})
	pulumi.RegisterOutputType(UserPoolDeviceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(UserPoolEmailConfigurationOutput{})
	pulumi.RegisterOutputType(UserPoolEmailConfigurationPtrOutput{})
	pulumi.RegisterOutputType(UserPoolLambdaConfigOutput{})
	pulumi.RegisterOutputType(UserPoolLambdaConfigPtrOutput{})
	pulumi.RegisterOutputType(UserPoolLambdaConfigCustomEmailSenderOutput{})
	pulumi.RegisterOutputType(UserPoolLambdaConfigCustomEmailSenderPtrOutput{})
	pulumi.RegisterOutputType(UserPoolLambdaConfigCustomSmsSenderOutput{})
	pulumi.RegisterOutputType(UserPoolLambdaConfigCustomSmsSenderPtrOutput{})
	pulumi.RegisterOutputType(UserPoolPasswordPolicyOutput{})
	pulumi.RegisterOutputType(UserPoolPasswordPolicyPtrOutput{})
	pulumi.RegisterOutputType(UserPoolSchemaOutput{})
	pulumi.RegisterOutputType(UserPoolSchemaArrayOutput{})
	pulumi.RegisterOutputType(UserPoolSchemaNumberAttributeConstraintsOutput{})
	pulumi.RegisterOutputType(UserPoolSchemaNumberAttributeConstraintsPtrOutput{})
	pulumi.RegisterOutputType(UserPoolSchemaStringAttributeConstraintsOutput{})
	pulumi.RegisterOutputType(UserPoolSchemaStringAttributeConstraintsPtrOutput{})
	pulumi.RegisterOutputType(UserPoolSmsConfigurationOutput{})
	pulumi.RegisterOutputType(UserPoolSmsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(UserPoolSoftwareTokenMfaConfigurationOutput{})
	pulumi.RegisterOutputType(UserPoolSoftwareTokenMfaConfigurationPtrOutput{})
	pulumi.RegisterOutputType(UserPoolUserAttributeUpdateSettingsOutput{})
	pulumi.RegisterOutputType(UserPoolUserAttributeUpdateSettingsPtrOutput{})
	pulumi.RegisterOutputType(UserPoolUserPoolAddOnsOutput{})
	pulumi.RegisterOutputType(UserPoolUserPoolAddOnsPtrOutput{})
	pulumi.RegisterOutputType(UserPoolUsernameConfigurationOutput{})
	pulumi.RegisterOutputType(UserPoolUsernameConfigurationPtrOutput{})
	pulumi.RegisterOutputType(UserPoolVerificationMessageTemplateOutput{})
	pulumi.RegisterOutputType(UserPoolVerificationMessageTemplatePtrOutput{})
	pulumi.RegisterOutputType(GetUserPoolClientAnalyticsConfigurationOutput{})
	pulumi.RegisterOutputType(GetUserPoolClientAnalyticsConfigurationArrayOutput{})
	pulumi.RegisterOutputType(GetUserPoolClientTokenValidityUnitOutput{})
	pulumi.RegisterOutputType(GetUserPoolClientTokenValidityUnitArrayOutput{})
}
