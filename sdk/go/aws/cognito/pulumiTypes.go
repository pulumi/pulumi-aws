// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type IdentityPoolCognitoIdentityProvider struct {
	// The client ID for the Amazon Cognito Identity User Pool.
	ClientId *string `pulumi:"clientId"`
	// The provider name for an Amazon Cognito Identity User Pool.
	ProviderName *string `pulumi:"providerName"`
	// Whether server-side token validation is enabled for the identity provider’s token or not.
	ServerSideTokenCheck *bool `pulumi:"serverSideTokenCheck"`
}

// IdentityPoolCognitoIdentityProviderInput is an input type that accepts IdentityPoolCognitoIdentityProviderArgs and IdentityPoolCognitoIdentityProviderOutput values.
// You can construct a concrete instance of `IdentityPoolCognitoIdentityProviderInput` via:
//
// 		 IdentityPoolCognitoIdentityProviderArgs{...}
//
type IdentityPoolCognitoIdentityProviderInput interface {
	pulumi.Input

	ToIdentityPoolCognitoIdentityProviderOutput() IdentityPoolCognitoIdentityProviderOutput
	ToIdentityPoolCognitoIdentityProviderOutputWithContext(context.Context) IdentityPoolCognitoIdentityProviderOutput
}

type IdentityPoolCognitoIdentityProviderArgs struct {
	// The client ID for the Amazon Cognito Identity User Pool.
	ClientId pulumi.StringPtrInput `pulumi:"clientId"`
	// The provider name for an Amazon Cognito Identity User Pool.
	ProviderName pulumi.StringPtrInput `pulumi:"providerName"`
	// Whether server-side token validation is enabled for the identity provider’s token or not.
	ServerSideTokenCheck pulumi.BoolPtrInput `pulumi:"serverSideTokenCheck"`
}

func (IdentityPoolCognitoIdentityProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolCognitoIdentityProvider)(nil)).Elem()
}

func (i IdentityPoolCognitoIdentityProviderArgs) ToIdentityPoolCognitoIdentityProviderOutput() IdentityPoolCognitoIdentityProviderOutput {
	return i.ToIdentityPoolCognitoIdentityProviderOutputWithContext(context.Background())
}

func (i IdentityPoolCognitoIdentityProviderArgs) ToIdentityPoolCognitoIdentityProviderOutputWithContext(ctx context.Context) IdentityPoolCognitoIdentityProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolCognitoIdentityProviderOutput)
}

// IdentityPoolCognitoIdentityProviderArrayInput is an input type that accepts IdentityPoolCognitoIdentityProviderArray and IdentityPoolCognitoIdentityProviderArrayOutput values.
// You can construct a concrete instance of `IdentityPoolCognitoIdentityProviderArrayInput` via:
//
// 		 IdentityPoolCognitoIdentityProviderArray{ IdentityPoolCognitoIdentityProviderArgs{...} }
//
type IdentityPoolCognitoIdentityProviderArrayInput interface {
	pulumi.Input

	ToIdentityPoolCognitoIdentityProviderArrayOutput() IdentityPoolCognitoIdentityProviderArrayOutput
	ToIdentityPoolCognitoIdentityProviderArrayOutputWithContext(context.Context) IdentityPoolCognitoIdentityProviderArrayOutput
}

type IdentityPoolCognitoIdentityProviderArray []IdentityPoolCognitoIdentityProviderInput

func (IdentityPoolCognitoIdentityProviderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityPoolCognitoIdentityProvider)(nil)).Elem()
}

func (i IdentityPoolCognitoIdentityProviderArray) ToIdentityPoolCognitoIdentityProviderArrayOutput() IdentityPoolCognitoIdentityProviderArrayOutput {
	return i.ToIdentityPoolCognitoIdentityProviderArrayOutputWithContext(context.Background())
}

func (i IdentityPoolCognitoIdentityProviderArray) ToIdentityPoolCognitoIdentityProviderArrayOutputWithContext(ctx context.Context) IdentityPoolCognitoIdentityProviderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolCognitoIdentityProviderArrayOutput)
}

type IdentityPoolCognitoIdentityProviderOutput struct{ *pulumi.OutputState }

func (IdentityPoolCognitoIdentityProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolCognitoIdentityProvider)(nil)).Elem()
}

func (o IdentityPoolCognitoIdentityProviderOutput) ToIdentityPoolCognitoIdentityProviderOutput() IdentityPoolCognitoIdentityProviderOutput {
	return o
}

func (o IdentityPoolCognitoIdentityProviderOutput) ToIdentityPoolCognitoIdentityProviderOutputWithContext(ctx context.Context) IdentityPoolCognitoIdentityProviderOutput {
	return o
}

// The client ID for the Amazon Cognito Identity User Pool.
func (o IdentityPoolCognitoIdentityProviderOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPoolCognitoIdentityProvider) *string { return v.ClientId }).(pulumi.StringPtrOutput)
}

// The provider name for an Amazon Cognito Identity User Pool.
func (o IdentityPoolCognitoIdentityProviderOutput) ProviderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPoolCognitoIdentityProvider) *string { return v.ProviderName }).(pulumi.StringPtrOutput)
}

// Whether server-side token validation is enabled for the identity provider’s token or not.
func (o IdentityPoolCognitoIdentityProviderOutput) ServerSideTokenCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IdentityPoolCognitoIdentityProvider) *bool { return v.ServerSideTokenCheck }).(pulumi.BoolPtrOutput)
}

type IdentityPoolCognitoIdentityProviderArrayOutput struct{ *pulumi.OutputState }

func (IdentityPoolCognitoIdentityProviderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityPoolCognitoIdentityProvider)(nil)).Elem()
}

func (o IdentityPoolCognitoIdentityProviderArrayOutput) ToIdentityPoolCognitoIdentityProviderArrayOutput() IdentityPoolCognitoIdentityProviderArrayOutput {
	return o
}

func (o IdentityPoolCognitoIdentityProviderArrayOutput) ToIdentityPoolCognitoIdentityProviderArrayOutputWithContext(ctx context.Context) IdentityPoolCognitoIdentityProviderArrayOutput {
	return o
}

func (o IdentityPoolCognitoIdentityProviderArrayOutput) Index(i pulumi.IntInput) IdentityPoolCognitoIdentityProviderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityPoolCognitoIdentityProvider {
		return vs[0].([]IdentityPoolCognitoIdentityProvider)[vs[1].(int)]
	}).(IdentityPoolCognitoIdentityProviderOutput)
}

type IdentityPoolRoleAttachmentRoleMapping struct {
	// Specifies the action to be taken if either no rules match the claim value for the Rules type, or there is no cognito:preferred_role claim and there are multiple cognito:roles matches for the Token type. `Required` if you specify Token or Rules as the Type.
	AmbiguousRoleResolution *string `pulumi:"ambiguousRoleResolution"`
	// A string identifying the identity provider, for example, "graph.facebook.com" or "cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".
	IdentityProvider string `pulumi:"identityProvider"`
	// The Rules Configuration to be used for mapping users to roles. You can specify up to 25 rules per identity provider. Rules are evaluated in order. The first one to match specifies the role.
	MappingRules []IdentityPoolRoleAttachmentRoleMappingMappingRule `pulumi:"mappingRules"`
	// The role mapping type.
	Type string `pulumi:"type"`
}

// IdentityPoolRoleAttachmentRoleMappingInput is an input type that accepts IdentityPoolRoleAttachmentRoleMappingArgs and IdentityPoolRoleAttachmentRoleMappingOutput values.
// You can construct a concrete instance of `IdentityPoolRoleAttachmentRoleMappingInput` via:
//
// 		 IdentityPoolRoleAttachmentRoleMappingArgs{...}
//
type IdentityPoolRoleAttachmentRoleMappingInput interface {
	pulumi.Input

	ToIdentityPoolRoleAttachmentRoleMappingOutput() IdentityPoolRoleAttachmentRoleMappingOutput
	ToIdentityPoolRoleAttachmentRoleMappingOutputWithContext(context.Context) IdentityPoolRoleAttachmentRoleMappingOutput
}

type IdentityPoolRoleAttachmentRoleMappingArgs struct {
	// Specifies the action to be taken if either no rules match the claim value for the Rules type, or there is no cognito:preferred_role claim and there are multiple cognito:roles matches for the Token type. `Required` if you specify Token or Rules as the Type.
	AmbiguousRoleResolution pulumi.StringPtrInput `pulumi:"ambiguousRoleResolution"`
	// A string identifying the identity provider, for example, "graph.facebook.com" or "cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".
	IdentityProvider pulumi.StringInput `pulumi:"identityProvider"`
	// The Rules Configuration to be used for mapping users to roles. You can specify up to 25 rules per identity provider. Rules are evaluated in order. The first one to match specifies the role.
	MappingRules IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayInput `pulumi:"mappingRules"`
	// The role mapping type.
	Type pulumi.StringInput `pulumi:"type"`
}

func (IdentityPoolRoleAttachmentRoleMappingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolRoleAttachmentRoleMapping)(nil)).Elem()
}

func (i IdentityPoolRoleAttachmentRoleMappingArgs) ToIdentityPoolRoleAttachmentRoleMappingOutput() IdentityPoolRoleAttachmentRoleMappingOutput {
	return i.ToIdentityPoolRoleAttachmentRoleMappingOutputWithContext(context.Background())
}

func (i IdentityPoolRoleAttachmentRoleMappingArgs) ToIdentityPoolRoleAttachmentRoleMappingOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRoleMappingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolRoleAttachmentRoleMappingOutput)
}

// IdentityPoolRoleAttachmentRoleMappingArrayInput is an input type that accepts IdentityPoolRoleAttachmentRoleMappingArray and IdentityPoolRoleAttachmentRoleMappingArrayOutput values.
// You can construct a concrete instance of `IdentityPoolRoleAttachmentRoleMappingArrayInput` via:
//
// 		 IdentityPoolRoleAttachmentRoleMappingArray{ IdentityPoolRoleAttachmentRoleMappingArgs{...} }
//
type IdentityPoolRoleAttachmentRoleMappingArrayInput interface {
	pulumi.Input

	ToIdentityPoolRoleAttachmentRoleMappingArrayOutput() IdentityPoolRoleAttachmentRoleMappingArrayOutput
	ToIdentityPoolRoleAttachmentRoleMappingArrayOutputWithContext(context.Context) IdentityPoolRoleAttachmentRoleMappingArrayOutput
}

type IdentityPoolRoleAttachmentRoleMappingArray []IdentityPoolRoleAttachmentRoleMappingInput

func (IdentityPoolRoleAttachmentRoleMappingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityPoolRoleAttachmentRoleMapping)(nil)).Elem()
}

func (i IdentityPoolRoleAttachmentRoleMappingArray) ToIdentityPoolRoleAttachmentRoleMappingArrayOutput() IdentityPoolRoleAttachmentRoleMappingArrayOutput {
	return i.ToIdentityPoolRoleAttachmentRoleMappingArrayOutputWithContext(context.Background())
}

func (i IdentityPoolRoleAttachmentRoleMappingArray) ToIdentityPoolRoleAttachmentRoleMappingArrayOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRoleMappingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolRoleAttachmentRoleMappingArrayOutput)
}

type IdentityPoolRoleAttachmentRoleMappingOutput struct{ *pulumi.OutputState }

func (IdentityPoolRoleAttachmentRoleMappingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolRoleAttachmentRoleMapping)(nil)).Elem()
}

func (o IdentityPoolRoleAttachmentRoleMappingOutput) ToIdentityPoolRoleAttachmentRoleMappingOutput() IdentityPoolRoleAttachmentRoleMappingOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRoleMappingOutput) ToIdentityPoolRoleAttachmentRoleMappingOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRoleMappingOutput {
	return o
}

// Specifies the action to be taken if either no rules match the claim value for the Rules type, or there is no cognito:preferred_role claim and there are multiple cognito:roles matches for the Token type. `Required` if you specify Token or Rules as the Type.
func (o IdentityPoolRoleAttachmentRoleMappingOutput) AmbiguousRoleResolution() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentRoleMapping) *string { return v.AmbiguousRoleResolution }).(pulumi.StringPtrOutput)
}

// A string identifying the identity provider, for example, "graph.facebook.com" or "cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".
func (o IdentityPoolRoleAttachmentRoleMappingOutput) IdentityProvider() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentRoleMapping) string { return v.IdentityProvider }).(pulumi.StringOutput)
}

// The Rules Configuration to be used for mapping users to roles. You can specify up to 25 rules per identity provider. Rules are evaluated in order. The first one to match specifies the role.
func (o IdentityPoolRoleAttachmentRoleMappingOutput) MappingRules() IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentRoleMapping) []IdentityPoolRoleAttachmentRoleMappingMappingRule {
		return v.MappingRules
	}).(IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput)
}

// The role mapping type.
func (o IdentityPoolRoleAttachmentRoleMappingOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentRoleMapping) string { return v.Type }).(pulumi.StringOutput)
}

type IdentityPoolRoleAttachmentRoleMappingArrayOutput struct{ *pulumi.OutputState }

func (IdentityPoolRoleAttachmentRoleMappingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityPoolRoleAttachmentRoleMapping)(nil)).Elem()
}

func (o IdentityPoolRoleAttachmentRoleMappingArrayOutput) ToIdentityPoolRoleAttachmentRoleMappingArrayOutput() IdentityPoolRoleAttachmentRoleMappingArrayOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRoleMappingArrayOutput) ToIdentityPoolRoleAttachmentRoleMappingArrayOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRoleMappingArrayOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRoleMappingArrayOutput) Index(i pulumi.IntInput) IdentityPoolRoleAttachmentRoleMappingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityPoolRoleAttachmentRoleMapping {
		return vs[0].([]IdentityPoolRoleAttachmentRoleMapping)[vs[1].(int)]
	}).(IdentityPoolRoleAttachmentRoleMappingOutput)
}

type IdentityPoolRoleAttachmentRoleMappingMappingRule struct {
	// The claim name that must be present in the token, for example, "isAdmin" or "paid".
	Claim string `pulumi:"claim"`
	// The match condition that specifies how closely the claim value in the IdP token must match Value.
	MatchType string `pulumi:"matchType"`
	// The role ARN.
	RoleArn string `pulumi:"roleArn"`
	// A brief string that the claim must match, for example, "paid" or "yes".
	Value string `pulumi:"value"`
}

// IdentityPoolRoleAttachmentRoleMappingMappingRuleInput is an input type that accepts IdentityPoolRoleAttachmentRoleMappingMappingRuleArgs and IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput values.
// You can construct a concrete instance of `IdentityPoolRoleAttachmentRoleMappingMappingRuleInput` via:
//
// 		 IdentityPoolRoleAttachmentRoleMappingMappingRuleArgs{...}
//
type IdentityPoolRoleAttachmentRoleMappingMappingRuleInput interface {
	pulumi.Input

	ToIdentityPoolRoleAttachmentRoleMappingMappingRuleOutput() IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput
	ToIdentityPoolRoleAttachmentRoleMappingMappingRuleOutputWithContext(context.Context) IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput
}

type IdentityPoolRoleAttachmentRoleMappingMappingRuleArgs struct {
	// The claim name that must be present in the token, for example, "isAdmin" or "paid".
	Claim pulumi.StringInput `pulumi:"claim"`
	// The match condition that specifies how closely the claim value in the IdP token must match Value.
	MatchType pulumi.StringInput `pulumi:"matchType"`
	// The role ARN.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// A brief string that the claim must match, for example, "paid" or "yes".
	Value pulumi.StringInput `pulumi:"value"`
}

func (IdentityPoolRoleAttachmentRoleMappingMappingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolRoleAttachmentRoleMappingMappingRule)(nil)).Elem()
}

func (i IdentityPoolRoleAttachmentRoleMappingMappingRuleArgs) ToIdentityPoolRoleAttachmentRoleMappingMappingRuleOutput() IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput {
	return i.ToIdentityPoolRoleAttachmentRoleMappingMappingRuleOutputWithContext(context.Background())
}

func (i IdentityPoolRoleAttachmentRoleMappingMappingRuleArgs) ToIdentityPoolRoleAttachmentRoleMappingMappingRuleOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput)
}

// IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayInput is an input type that accepts IdentityPoolRoleAttachmentRoleMappingMappingRuleArray and IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput values.
// You can construct a concrete instance of `IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayInput` via:
//
// 		 IdentityPoolRoleAttachmentRoleMappingMappingRuleArray{ IdentityPoolRoleAttachmentRoleMappingMappingRuleArgs{...} }
//
type IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayInput interface {
	pulumi.Input

	ToIdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput() IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput
	ToIdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutputWithContext(context.Context) IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput
}

type IdentityPoolRoleAttachmentRoleMappingMappingRuleArray []IdentityPoolRoleAttachmentRoleMappingMappingRuleInput

func (IdentityPoolRoleAttachmentRoleMappingMappingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityPoolRoleAttachmentRoleMappingMappingRule)(nil)).Elem()
}

func (i IdentityPoolRoleAttachmentRoleMappingMappingRuleArray) ToIdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput() IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput {
	return i.ToIdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutputWithContext(context.Background())
}

func (i IdentityPoolRoleAttachmentRoleMappingMappingRuleArray) ToIdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput)
}

type IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput struct{ *pulumi.OutputState }

func (IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolRoleAttachmentRoleMappingMappingRule)(nil)).Elem()
}

func (o IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput) ToIdentityPoolRoleAttachmentRoleMappingMappingRuleOutput() IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput) ToIdentityPoolRoleAttachmentRoleMappingMappingRuleOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput {
	return o
}

// The claim name that must be present in the token, for example, "isAdmin" or "paid".
func (o IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput) Claim() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentRoleMappingMappingRule) string { return v.Claim }).(pulumi.StringOutput)
}

// The match condition that specifies how closely the claim value in the IdP token must match Value.
func (o IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput) MatchType() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentRoleMappingMappingRule) string { return v.MatchType }).(pulumi.StringOutput)
}

// The role ARN.
func (o IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentRoleMappingMappingRule) string { return v.RoleArn }).(pulumi.StringOutput)
}

// A brief string that the claim must match, for example, "paid" or "yes".
func (o IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentRoleMappingMappingRule) string { return v.Value }).(pulumi.StringOutput)
}

type IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput struct{ *pulumi.OutputState }

func (IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IdentityPoolRoleAttachmentRoleMappingMappingRule)(nil)).Elem()
}

func (o IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput) ToIdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput() IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput) ToIdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput) Index(i pulumi.IntInput) IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IdentityPoolRoleAttachmentRoleMappingMappingRule {
		return vs[0].([]IdentityPoolRoleAttachmentRoleMappingMappingRule)[vs[1].(int)]
	}).(IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput)
}

type IdentityPoolRoleAttachmentRoles struct {
	Authenticated   *string `pulumi:"authenticated"`
	Unauthenticated *string `pulumi:"unauthenticated"`
}

// IdentityPoolRoleAttachmentRolesInput is an input type that accepts IdentityPoolRoleAttachmentRolesArgs and IdentityPoolRoleAttachmentRolesOutput values.
// You can construct a concrete instance of `IdentityPoolRoleAttachmentRolesInput` via:
//
// 		 IdentityPoolRoleAttachmentRolesArgs{...}
//
type IdentityPoolRoleAttachmentRolesInput interface {
	pulumi.Input

	ToIdentityPoolRoleAttachmentRolesOutput() IdentityPoolRoleAttachmentRolesOutput
	ToIdentityPoolRoleAttachmentRolesOutputWithContext(context.Context) IdentityPoolRoleAttachmentRolesOutput
}

type IdentityPoolRoleAttachmentRolesArgs struct {
	Authenticated   pulumi.StringPtrInput `pulumi:"authenticated"`
	Unauthenticated pulumi.StringPtrInput `pulumi:"unauthenticated"`
}

func (IdentityPoolRoleAttachmentRolesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolRoleAttachmentRoles)(nil)).Elem()
}

func (i IdentityPoolRoleAttachmentRolesArgs) ToIdentityPoolRoleAttachmentRolesOutput() IdentityPoolRoleAttachmentRolesOutput {
	return i.ToIdentityPoolRoleAttachmentRolesOutputWithContext(context.Background())
}

func (i IdentityPoolRoleAttachmentRolesArgs) ToIdentityPoolRoleAttachmentRolesOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRolesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolRoleAttachmentRolesOutput)
}

func (i IdentityPoolRoleAttachmentRolesArgs) ToIdentityPoolRoleAttachmentRolesPtrOutput() IdentityPoolRoleAttachmentRolesPtrOutput {
	return i.ToIdentityPoolRoleAttachmentRolesPtrOutputWithContext(context.Background())
}

func (i IdentityPoolRoleAttachmentRolesArgs) ToIdentityPoolRoleAttachmentRolesPtrOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRolesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolRoleAttachmentRolesOutput).ToIdentityPoolRoleAttachmentRolesPtrOutputWithContext(ctx)
}

// IdentityPoolRoleAttachmentRolesPtrInput is an input type that accepts IdentityPoolRoleAttachmentRolesArgs, IdentityPoolRoleAttachmentRolesPtr and IdentityPoolRoleAttachmentRolesPtrOutput values.
// You can construct a concrete instance of `IdentityPoolRoleAttachmentRolesPtrInput` via:
//
// 		 IdentityPoolRoleAttachmentRolesArgs{...}
//
//  or:
//
// 		 nil
//
type IdentityPoolRoleAttachmentRolesPtrInput interface {
	pulumi.Input

	ToIdentityPoolRoleAttachmentRolesPtrOutput() IdentityPoolRoleAttachmentRolesPtrOutput
	ToIdentityPoolRoleAttachmentRolesPtrOutputWithContext(context.Context) IdentityPoolRoleAttachmentRolesPtrOutput
}

type identityPoolRoleAttachmentRolesPtrType IdentityPoolRoleAttachmentRolesArgs

func IdentityPoolRoleAttachmentRolesPtr(v *IdentityPoolRoleAttachmentRolesArgs) IdentityPoolRoleAttachmentRolesPtrInput {
	return (*identityPoolRoleAttachmentRolesPtrType)(v)
}

func (*identityPoolRoleAttachmentRolesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPoolRoleAttachmentRoles)(nil)).Elem()
}

func (i *identityPoolRoleAttachmentRolesPtrType) ToIdentityPoolRoleAttachmentRolesPtrOutput() IdentityPoolRoleAttachmentRolesPtrOutput {
	return i.ToIdentityPoolRoleAttachmentRolesPtrOutputWithContext(context.Background())
}

func (i *identityPoolRoleAttachmentRolesPtrType) ToIdentityPoolRoleAttachmentRolesPtrOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRolesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolRoleAttachmentRolesPtrOutput)
}

type IdentityPoolRoleAttachmentRolesOutput struct{ *pulumi.OutputState }

func (IdentityPoolRoleAttachmentRolesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IdentityPoolRoleAttachmentRoles)(nil)).Elem()
}

func (o IdentityPoolRoleAttachmentRolesOutput) ToIdentityPoolRoleAttachmentRolesOutput() IdentityPoolRoleAttachmentRolesOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRolesOutput) ToIdentityPoolRoleAttachmentRolesOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRolesOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRolesOutput) ToIdentityPoolRoleAttachmentRolesPtrOutput() IdentityPoolRoleAttachmentRolesPtrOutput {
	return o.ToIdentityPoolRoleAttachmentRolesPtrOutputWithContext(context.Background())
}

func (o IdentityPoolRoleAttachmentRolesOutput) ToIdentityPoolRoleAttachmentRolesPtrOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRolesPtrOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentRoles) *IdentityPoolRoleAttachmentRoles {
		return &v
	}).(IdentityPoolRoleAttachmentRolesPtrOutput)
}
func (o IdentityPoolRoleAttachmentRolesOutput) Authenticated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentRoles) *string { return v.Authenticated }).(pulumi.StringPtrOutput)
}

func (o IdentityPoolRoleAttachmentRolesOutput) Unauthenticated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentRoles) *string { return v.Unauthenticated }).(pulumi.StringPtrOutput)
}

type IdentityPoolRoleAttachmentRolesPtrOutput struct{ *pulumi.OutputState }

func (IdentityPoolRoleAttachmentRolesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPoolRoleAttachmentRoles)(nil)).Elem()
}

func (o IdentityPoolRoleAttachmentRolesPtrOutput) ToIdentityPoolRoleAttachmentRolesPtrOutput() IdentityPoolRoleAttachmentRolesPtrOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRolesPtrOutput) ToIdentityPoolRoleAttachmentRolesPtrOutputWithContext(ctx context.Context) IdentityPoolRoleAttachmentRolesPtrOutput {
	return o
}

func (o IdentityPoolRoleAttachmentRolesPtrOutput) Elem() IdentityPoolRoleAttachmentRolesOutput {
	return o.ApplyT(func(v *IdentityPoolRoleAttachmentRoles) IdentityPoolRoleAttachmentRoles { return *v }).(IdentityPoolRoleAttachmentRolesOutput)
}

func (o IdentityPoolRoleAttachmentRolesPtrOutput) Authenticated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentRoles) *string { return v.Authenticated }).(pulumi.StringPtrOutput)
}

func (o IdentityPoolRoleAttachmentRolesPtrOutput) Unauthenticated() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IdentityPoolRoleAttachmentRoles) *string { return v.Unauthenticated }).(pulumi.StringPtrOutput)
}

type ResourceServerScope struct {
	// The scope description.
	ScopeDescription string `pulumi:"scopeDescription"`
	// The scope name.
	ScopeName string `pulumi:"scopeName"`
}

// ResourceServerScopeInput is an input type that accepts ResourceServerScopeArgs and ResourceServerScopeOutput values.
// You can construct a concrete instance of `ResourceServerScopeInput` via:
//
// 		 ResourceServerScopeArgs{...}
//
type ResourceServerScopeInput interface {
	pulumi.Input

	ToResourceServerScopeOutput() ResourceServerScopeOutput
	ToResourceServerScopeOutputWithContext(context.Context) ResourceServerScopeOutput
}

type ResourceServerScopeArgs struct {
	// The scope description.
	ScopeDescription pulumi.StringInput `pulumi:"scopeDescription"`
	// The scope name.
	ScopeName pulumi.StringInput `pulumi:"scopeName"`
}

func (ResourceServerScopeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceServerScope)(nil)).Elem()
}

func (i ResourceServerScopeArgs) ToResourceServerScopeOutput() ResourceServerScopeOutput {
	return i.ToResourceServerScopeOutputWithContext(context.Background())
}

func (i ResourceServerScopeArgs) ToResourceServerScopeOutputWithContext(ctx context.Context) ResourceServerScopeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceServerScopeOutput)
}

// ResourceServerScopeArrayInput is an input type that accepts ResourceServerScopeArray and ResourceServerScopeArrayOutput values.
// You can construct a concrete instance of `ResourceServerScopeArrayInput` via:
//
// 		 ResourceServerScopeArray{ ResourceServerScopeArgs{...} }
//
type ResourceServerScopeArrayInput interface {
	pulumi.Input

	ToResourceServerScopeArrayOutput() ResourceServerScopeArrayOutput
	ToResourceServerScopeArrayOutputWithContext(context.Context) ResourceServerScopeArrayOutput
}

type ResourceServerScopeArray []ResourceServerScopeInput

func (ResourceServerScopeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceServerScope)(nil)).Elem()
}

func (i ResourceServerScopeArray) ToResourceServerScopeArrayOutput() ResourceServerScopeArrayOutput {
	return i.ToResourceServerScopeArrayOutputWithContext(context.Background())
}

func (i ResourceServerScopeArray) ToResourceServerScopeArrayOutputWithContext(ctx context.Context) ResourceServerScopeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceServerScopeArrayOutput)
}

type ResourceServerScopeOutput struct{ *pulumi.OutputState }

func (ResourceServerScopeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceServerScope)(nil)).Elem()
}

func (o ResourceServerScopeOutput) ToResourceServerScopeOutput() ResourceServerScopeOutput {
	return o
}

func (o ResourceServerScopeOutput) ToResourceServerScopeOutputWithContext(ctx context.Context) ResourceServerScopeOutput {
	return o
}

// The scope description.
func (o ResourceServerScopeOutput) ScopeDescription() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceServerScope) string { return v.ScopeDescription }).(pulumi.StringOutput)
}

// The scope name.
func (o ResourceServerScopeOutput) ScopeName() pulumi.StringOutput {
	return o.ApplyT(func(v ResourceServerScope) string { return v.ScopeName }).(pulumi.StringOutput)
}

type ResourceServerScopeArrayOutput struct{ *pulumi.OutputState }

func (ResourceServerScopeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResourceServerScope)(nil)).Elem()
}

func (o ResourceServerScopeArrayOutput) ToResourceServerScopeArrayOutput() ResourceServerScopeArrayOutput {
	return o
}

func (o ResourceServerScopeArrayOutput) ToResourceServerScopeArrayOutputWithContext(ctx context.Context) ResourceServerScopeArrayOutput {
	return o
}

func (o ResourceServerScopeArrayOutput) Index(i pulumi.IntInput) ResourceServerScopeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResourceServerScope {
		return vs[0].([]ResourceServerScope)[vs[1].(int)]
	}).(ResourceServerScopeOutput)
}

type UserPoolAdminCreateUserConfig struct {
	// Set to True if only the administrator is allowed to create user profiles. Set to False if users can sign themselves up via an app.
	AllowAdminCreateUserOnly *bool `pulumi:"allowAdminCreateUserOnly"`
	// The invite message template structure.
	InviteMessageTemplate *UserPoolAdminCreateUserConfigInviteMessageTemplate `pulumi:"inviteMessageTemplate"`
	// **DEPRECATED** Use password_policy.temporary_password_validity_days instead - The user account expiration limit, in days, after which the account is no longer usable.
	UnusedAccountValidityDays *int `pulumi:"unusedAccountValidityDays"`
}

// UserPoolAdminCreateUserConfigInput is an input type that accepts UserPoolAdminCreateUserConfigArgs and UserPoolAdminCreateUserConfigOutput values.
// You can construct a concrete instance of `UserPoolAdminCreateUserConfigInput` via:
//
// 		 UserPoolAdminCreateUserConfigArgs{...}
//
type UserPoolAdminCreateUserConfigInput interface {
	pulumi.Input

	ToUserPoolAdminCreateUserConfigOutput() UserPoolAdminCreateUserConfigOutput
	ToUserPoolAdminCreateUserConfigOutputWithContext(context.Context) UserPoolAdminCreateUserConfigOutput
}

type UserPoolAdminCreateUserConfigArgs struct {
	// Set to True if only the administrator is allowed to create user profiles. Set to False if users can sign themselves up via an app.
	AllowAdminCreateUserOnly pulumi.BoolPtrInput `pulumi:"allowAdminCreateUserOnly"`
	// The invite message template structure.
	InviteMessageTemplate UserPoolAdminCreateUserConfigInviteMessageTemplatePtrInput `pulumi:"inviteMessageTemplate"`
	// **DEPRECATED** Use password_policy.temporary_password_validity_days instead - The user account expiration limit, in days, after which the account is no longer usable.
	UnusedAccountValidityDays pulumi.IntPtrInput `pulumi:"unusedAccountValidityDays"`
}

func (UserPoolAdminCreateUserConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolAdminCreateUserConfig)(nil)).Elem()
}

func (i UserPoolAdminCreateUserConfigArgs) ToUserPoolAdminCreateUserConfigOutput() UserPoolAdminCreateUserConfigOutput {
	return i.ToUserPoolAdminCreateUserConfigOutputWithContext(context.Background())
}

func (i UserPoolAdminCreateUserConfigArgs) ToUserPoolAdminCreateUserConfigOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolAdminCreateUserConfigOutput)
}

func (i UserPoolAdminCreateUserConfigArgs) ToUserPoolAdminCreateUserConfigPtrOutput() UserPoolAdminCreateUserConfigPtrOutput {
	return i.ToUserPoolAdminCreateUserConfigPtrOutputWithContext(context.Background())
}

func (i UserPoolAdminCreateUserConfigArgs) ToUserPoolAdminCreateUserConfigPtrOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolAdminCreateUserConfigOutput).ToUserPoolAdminCreateUserConfigPtrOutputWithContext(ctx)
}

// UserPoolAdminCreateUserConfigPtrInput is an input type that accepts UserPoolAdminCreateUserConfigArgs, UserPoolAdminCreateUserConfigPtr and UserPoolAdminCreateUserConfigPtrOutput values.
// You can construct a concrete instance of `UserPoolAdminCreateUserConfigPtrInput` via:
//
// 		 UserPoolAdminCreateUserConfigArgs{...}
//
//  or:
//
// 		 nil
//
type UserPoolAdminCreateUserConfigPtrInput interface {
	pulumi.Input

	ToUserPoolAdminCreateUserConfigPtrOutput() UserPoolAdminCreateUserConfigPtrOutput
	ToUserPoolAdminCreateUserConfigPtrOutputWithContext(context.Context) UserPoolAdminCreateUserConfigPtrOutput
}

type userPoolAdminCreateUserConfigPtrType UserPoolAdminCreateUserConfigArgs

func UserPoolAdminCreateUserConfigPtr(v *UserPoolAdminCreateUserConfigArgs) UserPoolAdminCreateUserConfigPtrInput {
	return (*userPoolAdminCreateUserConfigPtrType)(v)
}

func (*userPoolAdminCreateUserConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolAdminCreateUserConfig)(nil)).Elem()
}

func (i *userPoolAdminCreateUserConfigPtrType) ToUserPoolAdminCreateUserConfigPtrOutput() UserPoolAdminCreateUserConfigPtrOutput {
	return i.ToUserPoolAdminCreateUserConfigPtrOutputWithContext(context.Background())
}

func (i *userPoolAdminCreateUserConfigPtrType) ToUserPoolAdminCreateUserConfigPtrOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolAdminCreateUserConfigPtrOutput)
}

type UserPoolAdminCreateUserConfigOutput struct{ *pulumi.OutputState }

func (UserPoolAdminCreateUserConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolAdminCreateUserConfig)(nil)).Elem()
}

func (o UserPoolAdminCreateUserConfigOutput) ToUserPoolAdminCreateUserConfigOutput() UserPoolAdminCreateUserConfigOutput {
	return o
}

func (o UserPoolAdminCreateUserConfigOutput) ToUserPoolAdminCreateUserConfigOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigOutput {
	return o
}

func (o UserPoolAdminCreateUserConfigOutput) ToUserPoolAdminCreateUserConfigPtrOutput() UserPoolAdminCreateUserConfigPtrOutput {
	return o.ToUserPoolAdminCreateUserConfigPtrOutputWithContext(context.Background())
}

func (o UserPoolAdminCreateUserConfigOutput) ToUserPoolAdminCreateUserConfigPtrOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigPtrOutput {
	return o.ApplyT(func(v UserPoolAdminCreateUserConfig) *UserPoolAdminCreateUserConfig {
		return &v
	}).(UserPoolAdminCreateUserConfigPtrOutput)
}

// Set to True if only the administrator is allowed to create user profiles. Set to False if users can sign themselves up via an app.
func (o UserPoolAdminCreateUserConfigOutput) AllowAdminCreateUserOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolAdminCreateUserConfig) *bool { return v.AllowAdminCreateUserOnly }).(pulumi.BoolPtrOutput)
}

// The invite message template structure.
func (o UserPoolAdminCreateUserConfigOutput) InviteMessageTemplate() UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput {
	return o.ApplyT(func(v UserPoolAdminCreateUserConfig) *UserPoolAdminCreateUserConfigInviteMessageTemplate {
		return v.InviteMessageTemplate
	}).(UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput)
}

// **DEPRECATED** Use password_policy.temporary_password_validity_days instead - The user account expiration limit, in days, after which the account is no longer usable.
func (o UserPoolAdminCreateUserConfigOutput) UnusedAccountValidityDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserPoolAdminCreateUserConfig) *int { return v.UnusedAccountValidityDays }).(pulumi.IntPtrOutput)
}

type UserPoolAdminCreateUserConfigPtrOutput struct{ *pulumi.OutputState }

func (UserPoolAdminCreateUserConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolAdminCreateUserConfig)(nil)).Elem()
}

func (o UserPoolAdminCreateUserConfigPtrOutput) ToUserPoolAdminCreateUserConfigPtrOutput() UserPoolAdminCreateUserConfigPtrOutput {
	return o
}

func (o UserPoolAdminCreateUserConfigPtrOutput) ToUserPoolAdminCreateUserConfigPtrOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigPtrOutput {
	return o
}

func (o UserPoolAdminCreateUserConfigPtrOutput) Elem() UserPoolAdminCreateUserConfigOutput {
	return o.ApplyT(func(v *UserPoolAdminCreateUserConfig) UserPoolAdminCreateUserConfig { return *v }).(UserPoolAdminCreateUserConfigOutput)
}

// Set to True if only the administrator is allowed to create user profiles. Set to False if users can sign themselves up via an app.
func (o UserPoolAdminCreateUserConfigPtrOutput) AllowAdminCreateUserOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolAdminCreateUserConfig) *bool { return v.AllowAdminCreateUserOnly }).(pulumi.BoolPtrOutput)
}

// The invite message template structure.
func (o UserPoolAdminCreateUserConfigPtrOutput) InviteMessageTemplate() UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput {
	return o.ApplyT(func(v UserPoolAdminCreateUserConfig) *UserPoolAdminCreateUserConfigInviteMessageTemplate {
		return v.InviteMessageTemplate
	}).(UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput)
}

// **DEPRECATED** Use password_policy.temporary_password_validity_days instead - The user account expiration limit, in days, after which the account is no longer usable.
func (o UserPoolAdminCreateUserConfigPtrOutput) UnusedAccountValidityDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserPoolAdminCreateUserConfig) *int { return v.UnusedAccountValidityDays }).(pulumi.IntPtrOutput)
}

type UserPoolAdminCreateUserConfigInviteMessageTemplate struct {
	// The email message template. Must contain the `{####}` placeholder. Conflicts with `emailVerificationMessage` argument.
	EmailMessage *string `pulumi:"emailMessage"`
	// The subject line for the email message template. Conflicts with `emailVerificationSubject` argument.
	EmailSubject *string `pulumi:"emailSubject"`
	// The SMS message template. Must contain the `{####}` placeholder. Conflicts with `smsVerificationMessage` argument.
	SmsMessage *string `pulumi:"smsMessage"`
}

// UserPoolAdminCreateUserConfigInviteMessageTemplateInput is an input type that accepts UserPoolAdminCreateUserConfigInviteMessageTemplateArgs and UserPoolAdminCreateUserConfigInviteMessageTemplateOutput values.
// You can construct a concrete instance of `UserPoolAdminCreateUserConfigInviteMessageTemplateInput` via:
//
// 		 UserPoolAdminCreateUserConfigInviteMessageTemplateArgs{...}
//
type UserPoolAdminCreateUserConfigInviteMessageTemplateInput interface {
	pulumi.Input

	ToUserPoolAdminCreateUserConfigInviteMessageTemplateOutput() UserPoolAdminCreateUserConfigInviteMessageTemplateOutput
	ToUserPoolAdminCreateUserConfigInviteMessageTemplateOutputWithContext(context.Context) UserPoolAdminCreateUserConfigInviteMessageTemplateOutput
}

type UserPoolAdminCreateUserConfigInviteMessageTemplateArgs struct {
	// The email message template. Must contain the `{####}` placeholder. Conflicts with `emailVerificationMessage` argument.
	EmailMessage pulumi.StringPtrInput `pulumi:"emailMessage"`
	// The subject line for the email message template. Conflicts with `emailVerificationSubject` argument.
	EmailSubject pulumi.StringPtrInput `pulumi:"emailSubject"`
	// The SMS message template. Must contain the `{####}` placeholder. Conflicts with `smsVerificationMessage` argument.
	SmsMessage pulumi.StringPtrInput `pulumi:"smsMessage"`
}

func (UserPoolAdminCreateUserConfigInviteMessageTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolAdminCreateUserConfigInviteMessageTemplate)(nil)).Elem()
}

func (i UserPoolAdminCreateUserConfigInviteMessageTemplateArgs) ToUserPoolAdminCreateUserConfigInviteMessageTemplateOutput() UserPoolAdminCreateUserConfigInviteMessageTemplateOutput {
	return i.ToUserPoolAdminCreateUserConfigInviteMessageTemplateOutputWithContext(context.Background())
}

func (i UserPoolAdminCreateUserConfigInviteMessageTemplateArgs) ToUserPoolAdminCreateUserConfigInviteMessageTemplateOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigInviteMessageTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolAdminCreateUserConfigInviteMessageTemplateOutput)
}

func (i UserPoolAdminCreateUserConfigInviteMessageTemplateArgs) ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput() UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput {
	return i.ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutputWithContext(context.Background())
}

func (i UserPoolAdminCreateUserConfigInviteMessageTemplateArgs) ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolAdminCreateUserConfigInviteMessageTemplateOutput).ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutputWithContext(ctx)
}

// UserPoolAdminCreateUserConfigInviteMessageTemplatePtrInput is an input type that accepts UserPoolAdminCreateUserConfigInviteMessageTemplateArgs, UserPoolAdminCreateUserConfigInviteMessageTemplatePtr and UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput values.
// You can construct a concrete instance of `UserPoolAdminCreateUserConfigInviteMessageTemplatePtrInput` via:
//
// 		 UserPoolAdminCreateUserConfigInviteMessageTemplateArgs{...}
//
//  or:
//
// 		 nil
//
type UserPoolAdminCreateUserConfigInviteMessageTemplatePtrInput interface {
	pulumi.Input

	ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput() UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput
	ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutputWithContext(context.Context) UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput
}

type userPoolAdminCreateUserConfigInviteMessageTemplatePtrType UserPoolAdminCreateUserConfigInviteMessageTemplateArgs

func UserPoolAdminCreateUserConfigInviteMessageTemplatePtr(v *UserPoolAdminCreateUserConfigInviteMessageTemplateArgs) UserPoolAdminCreateUserConfigInviteMessageTemplatePtrInput {
	return (*userPoolAdminCreateUserConfigInviteMessageTemplatePtrType)(v)
}

func (*userPoolAdminCreateUserConfigInviteMessageTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolAdminCreateUserConfigInviteMessageTemplate)(nil)).Elem()
}

func (i *userPoolAdminCreateUserConfigInviteMessageTemplatePtrType) ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput() UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput {
	return i.ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutputWithContext(context.Background())
}

func (i *userPoolAdminCreateUserConfigInviteMessageTemplatePtrType) ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput)
}

type UserPoolAdminCreateUserConfigInviteMessageTemplateOutput struct{ *pulumi.OutputState }

func (UserPoolAdminCreateUserConfigInviteMessageTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolAdminCreateUserConfigInviteMessageTemplate)(nil)).Elem()
}

func (o UserPoolAdminCreateUserConfigInviteMessageTemplateOutput) ToUserPoolAdminCreateUserConfigInviteMessageTemplateOutput() UserPoolAdminCreateUserConfigInviteMessageTemplateOutput {
	return o
}

func (o UserPoolAdminCreateUserConfigInviteMessageTemplateOutput) ToUserPoolAdminCreateUserConfigInviteMessageTemplateOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigInviteMessageTemplateOutput {
	return o
}

func (o UserPoolAdminCreateUserConfigInviteMessageTemplateOutput) ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput() UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput {
	return o.ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutputWithContext(context.Background())
}

func (o UserPoolAdminCreateUserConfigInviteMessageTemplateOutput) ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput {
	return o.ApplyT(func(v UserPoolAdminCreateUserConfigInviteMessageTemplate) *UserPoolAdminCreateUserConfigInviteMessageTemplate {
		return &v
	}).(UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput)
}

// The email message template. Must contain the `{####}` placeholder. Conflicts with `emailVerificationMessage` argument.
func (o UserPoolAdminCreateUserConfigInviteMessageTemplateOutput) EmailMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolAdminCreateUserConfigInviteMessageTemplate) *string { return v.EmailMessage }).(pulumi.StringPtrOutput)
}

// The subject line for the email message template. Conflicts with `emailVerificationSubject` argument.
func (o UserPoolAdminCreateUserConfigInviteMessageTemplateOutput) EmailSubject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolAdminCreateUserConfigInviteMessageTemplate) *string { return v.EmailSubject }).(pulumi.StringPtrOutput)
}

// The SMS message template. Must contain the `{####}` placeholder. Conflicts with `smsVerificationMessage` argument.
func (o UserPoolAdminCreateUserConfigInviteMessageTemplateOutput) SmsMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolAdminCreateUserConfigInviteMessageTemplate) *string { return v.SmsMessage }).(pulumi.StringPtrOutput)
}

type UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput struct{ *pulumi.OutputState }

func (UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolAdminCreateUserConfigInviteMessageTemplate)(nil)).Elem()
}

func (o UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput) ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput() UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput {
	return o
}

func (o UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput) ToUserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutputWithContext(ctx context.Context) UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput {
	return o
}

func (o UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput) Elem() UserPoolAdminCreateUserConfigInviteMessageTemplateOutput {
	return o.ApplyT(func(v *UserPoolAdminCreateUserConfigInviteMessageTemplate) UserPoolAdminCreateUserConfigInviteMessageTemplate {
		return *v
	}).(UserPoolAdminCreateUserConfigInviteMessageTemplateOutput)
}

// The email message template. Must contain the `{####}` placeholder. Conflicts with `emailVerificationMessage` argument.
func (o UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput) EmailMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolAdminCreateUserConfigInviteMessageTemplate) *string { return v.EmailMessage }).(pulumi.StringPtrOutput)
}

// The subject line for the email message template. Conflicts with `emailVerificationSubject` argument.
func (o UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput) EmailSubject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolAdminCreateUserConfigInviteMessageTemplate) *string { return v.EmailSubject }).(pulumi.StringPtrOutput)
}

// The SMS message template. Must contain the `{####}` placeholder. Conflicts with `smsVerificationMessage` argument.
func (o UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput) SmsMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolAdminCreateUserConfigInviteMessageTemplate) *string { return v.SmsMessage }).(pulumi.StringPtrOutput)
}

type UserPoolClientAnalyticsConfiguration struct {
	// The application ID for an Amazon Pinpoint application.
	ApplicationId string `pulumi:"applicationId"`
	// An ID for the Analytics Configuration.
	ExternalId string `pulumi:"externalId"`
	// The ARN of an IAM role that authorizes Amazon Cognito to publish events to Amazon Pinpoint analytics.
	RoleArn string `pulumi:"roleArn"`
	// If set to `true`, Amazon Cognito will include user data in the events it publishes to Amazon Pinpoint analytics.
	UserDataShared *bool `pulumi:"userDataShared"`
}

// UserPoolClientAnalyticsConfigurationInput is an input type that accepts UserPoolClientAnalyticsConfigurationArgs and UserPoolClientAnalyticsConfigurationOutput values.
// You can construct a concrete instance of `UserPoolClientAnalyticsConfigurationInput` via:
//
// 		 UserPoolClientAnalyticsConfigurationArgs{...}
//
type UserPoolClientAnalyticsConfigurationInput interface {
	pulumi.Input

	ToUserPoolClientAnalyticsConfigurationOutput() UserPoolClientAnalyticsConfigurationOutput
	ToUserPoolClientAnalyticsConfigurationOutputWithContext(context.Context) UserPoolClientAnalyticsConfigurationOutput
}

type UserPoolClientAnalyticsConfigurationArgs struct {
	// The application ID for an Amazon Pinpoint application.
	ApplicationId pulumi.StringInput `pulumi:"applicationId"`
	// An ID for the Analytics Configuration.
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	// The ARN of an IAM role that authorizes Amazon Cognito to publish events to Amazon Pinpoint analytics.
	RoleArn pulumi.StringInput `pulumi:"roleArn"`
	// If set to `true`, Amazon Cognito will include user data in the events it publishes to Amazon Pinpoint analytics.
	UserDataShared pulumi.BoolPtrInput `pulumi:"userDataShared"`
}

func (UserPoolClientAnalyticsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolClientAnalyticsConfiguration)(nil)).Elem()
}

func (i UserPoolClientAnalyticsConfigurationArgs) ToUserPoolClientAnalyticsConfigurationOutput() UserPoolClientAnalyticsConfigurationOutput {
	return i.ToUserPoolClientAnalyticsConfigurationOutputWithContext(context.Background())
}

func (i UserPoolClientAnalyticsConfigurationArgs) ToUserPoolClientAnalyticsConfigurationOutputWithContext(ctx context.Context) UserPoolClientAnalyticsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolClientAnalyticsConfigurationOutput)
}

func (i UserPoolClientAnalyticsConfigurationArgs) ToUserPoolClientAnalyticsConfigurationPtrOutput() UserPoolClientAnalyticsConfigurationPtrOutput {
	return i.ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(context.Background())
}

func (i UserPoolClientAnalyticsConfigurationArgs) ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(ctx context.Context) UserPoolClientAnalyticsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolClientAnalyticsConfigurationOutput).ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(ctx)
}

// UserPoolClientAnalyticsConfigurationPtrInput is an input type that accepts UserPoolClientAnalyticsConfigurationArgs, UserPoolClientAnalyticsConfigurationPtr and UserPoolClientAnalyticsConfigurationPtrOutput values.
// You can construct a concrete instance of `UserPoolClientAnalyticsConfigurationPtrInput` via:
//
// 		 UserPoolClientAnalyticsConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type UserPoolClientAnalyticsConfigurationPtrInput interface {
	pulumi.Input

	ToUserPoolClientAnalyticsConfigurationPtrOutput() UserPoolClientAnalyticsConfigurationPtrOutput
	ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(context.Context) UserPoolClientAnalyticsConfigurationPtrOutput
}

type userPoolClientAnalyticsConfigurationPtrType UserPoolClientAnalyticsConfigurationArgs

func UserPoolClientAnalyticsConfigurationPtr(v *UserPoolClientAnalyticsConfigurationArgs) UserPoolClientAnalyticsConfigurationPtrInput {
	return (*userPoolClientAnalyticsConfigurationPtrType)(v)
}

func (*userPoolClientAnalyticsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolClientAnalyticsConfiguration)(nil)).Elem()
}

func (i *userPoolClientAnalyticsConfigurationPtrType) ToUserPoolClientAnalyticsConfigurationPtrOutput() UserPoolClientAnalyticsConfigurationPtrOutput {
	return i.ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(context.Background())
}

func (i *userPoolClientAnalyticsConfigurationPtrType) ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(ctx context.Context) UserPoolClientAnalyticsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolClientAnalyticsConfigurationPtrOutput)
}

type UserPoolClientAnalyticsConfigurationOutput struct{ *pulumi.OutputState }

func (UserPoolClientAnalyticsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolClientAnalyticsConfiguration)(nil)).Elem()
}

func (o UserPoolClientAnalyticsConfigurationOutput) ToUserPoolClientAnalyticsConfigurationOutput() UserPoolClientAnalyticsConfigurationOutput {
	return o
}

func (o UserPoolClientAnalyticsConfigurationOutput) ToUserPoolClientAnalyticsConfigurationOutputWithContext(ctx context.Context) UserPoolClientAnalyticsConfigurationOutput {
	return o
}

func (o UserPoolClientAnalyticsConfigurationOutput) ToUserPoolClientAnalyticsConfigurationPtrOutput() UserPoolClientAnalyticsConfigurationPtrOutput {
	return o.ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(context.Background())
}

func (o UserPoolClientAnalyticsConfigurationOutput) ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(ctx context.Context) UserPoolClientAnalyticsConfigurationPtrOutput {
	return o.ApplyT(func(v UserPoolClientAnalyticsConfiguration) *UserPoolClientAnalyticsConfiguration {
		return &v
	}).(UserPoolClientAnalyticsConfigurationPtrOutput)
}

// The application ID for an Amazon Pinpoint application.
func (o UserPoolClientAnalyticsConfigurationOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolClientAnalyticsConfiguration) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// An ID for the Analytics Configuration.
func (o UserPoolClientAnalyticsConfigurationOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolClientAnalyticsConfiguration) string { return v.ExternalId }).(pulumi.StringOutput)
}

// The ARN of an IAM role that authorizes Amazon Cognito to publish events to Amazon Pinpoint analytics.
func (o UserPoolClientAnalyticsConfigurationOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolClientAnalyticsConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// If set to `true`, Amazon Cognito will include user data in the events it publishes to Amazon Pinpoint analytics.
func (o UserPoolClientAnalyticsConfigurationOutput) UserDataShared() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolClientAnalyticsConfiguration) *bool { return v.UserDataShared }).(pulumi.BoolPtrOutput)
}

type UserPoolClientAnalyticsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (UserPoolClientAnalyticsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolClientAnalyticsConfiguration)(nil)).Elem()
}

func (o UserPoolClientAnalyticsConfigurationPtrOutput) ToUserPoolClientAnalyticsConfigurationPtrOutput() UserPoolClientAnalyticsConfigurationPtrOutput {
	return o
}

func (o UserPoolClientAnalyticsConfigurationPtrOutput) ToUserPoolClientAnalyticsConfigurationPtrOutputWithContext(ctx context.Context) UserPoolClientAnalyticsConfigurationPtrOutput {
	return o
}

func (o UserPoolClientAnalyticsConfigurationPtrOutput) Elem() UserPoolClientAnalyticsConfigurationOutput {
	return o.ApplyT(func(v *UserPoolClientAnalyticsConfiguration) UserPoolClientAnalyticsConfiguration { return *v }).(UserPoolClientAnalyticsConfigurationOutput)
}

// The application ID for an Amazon Pinpoint application.
func (o UserPoolClientAnalyticsConfigurationPtrOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolClientAnalyticsConfiguration) string { return v.ApplicationId }).(pulumi.StringOutput)
}

// An ID for the Analytics Configuration.
func (o UserPoolClientAnalyticsConfigurationPtrOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolClientAnalyticsConfiguration) string { return v.ExternalId }).(pulumi.StringOutput)
}

// The ARN of an IAM role that authorizes Amazon Cognito to publish events to Amazon Pinpoint analytics.
func (o UserPoolClientAnalyticsConfigurationPtrOutput) RoleArn() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolClientAnalyticsConfiguration) string { return v.RoleArn }).(pulumi.StringOutput)
}

// If set to `true`, Amazon Cognito will include user data in the events it publishes to Amazon Pinpoint analytics.
func (o UserPoolClientAnalyticsConfigurationPtrOutput) UserDataShared() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolClientAnalyticsConfiguration) *bool { return v.UserDataShared }).(pulumi.BoolPtrOutput)
}

type UserPoolDeviceConfiguration struct {
	// Indicates whether a challenge is required on a new device. Only applicable to a new device.
	ChallengeRequiredOnNewDevice *bool `pulumi:"challengeRequiredOnNewDevice"`
	// If true, a device is only remembered on user prompt.
	DeviceOnlyRememberedOnUserPrompt *bool `pulumi:"deviceOnlyRememberedOnUserPrompt"`
}

// UserPoolDeviceConfigurationInput is an input type that accepts UserPoolDeviceConfigurationArgs and UserPoolDeviceConfigurationOutput values.
// You can construct a concrete instance of `UserPoolDeviceConfigurationInput` via:
//
// 		 UserPoolDeviceConfigurationArgs{...}
//
type UserPoolDeviceConfigurationInput interface {
	pulumi.Input

	ToUserPoolDeviceConfigurationOutput() UserPoolDeviceConfigurationOutput
	ToUserPoolDeviceConfigurationOutputWithContext(context.Context) UserPoolDeviceConfigurationOutput
}

type UserPoolDeviceConfigurationArgs struct {
	// Indicates whether a challenge is required on a new device. Only applicable to a new device.
	ChallengeRequiredOnNewDevice pulumi.BoolPtrInput `pulumi:"challengeRequiredOnNewDevice"`
	// If true, a device is only remembered on user prompt.
	DeviceOnlyRememberedOnUserPrompt pulumi.BoolPtrInput `pulumi:"deviceOnlyRememberedOnUserPrompt"`
}

func (UserPoolDeviceConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolDeviceConfiguration)(nil)).Elem()
}

func (i UserPoolDeviceConfigurationArgs) ToUserPoolDeviceConfigurationOutput() UserPoolDeviceConfigurationOutput {
	return i.ToUserPoolDeviceConfigurationOutputWithContext(context.Background())
}

func (i UserPoolDeviceConfigurationArgs) ToUserPoolDeviceConfigurationOutputWithContext(ctx context.Context) UserPoolDeviceConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolDeviceConfigurationOutput)
}

func (i UserPoolDeviceConfigurationArgs) ToUserPoolDeviceConfigurationPtrOutput() UserPoolDeviceConfigurationPtrOutput {
	return i.ToUserPoolDeviceConfigurationPtrOutputWithContext(context.Background())
}

func (i UserPoolDeviceConfigurationArgs) ToUserPoolDeviceConfigurationPtrOutputWithContext(ctx context.Context) UserPoolDeviceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolDeviceConfigurationOutput).ToUserPoolDeviceConfigurationPtrOutputWithContext(ctx)
}

// UserPoolDeviceConfigurationPtrInput is an input type that accepts UserPoolDeviceConfigurationArgs, UserPoolDeviceConfigurationPtr and UserPoolDeviceConfigurationPtrOutput values.
// You can construct a concrete instance of `UserPoolDeviceConfigurationPtrInput` via:
//
// 		 UserPoolDeviceConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type UserPoolDeviceConfigurationPtrInput interface {
	pulumi.Input

	ToUserPoolDeviceConfigurationPtrOutput() UserPoolDeviceConfigurationPtrOutput
	ToUserPoolDeviceConfigurationPtrOutputWithContext(context.Context) UserPoolDeviceConfigurationPtrOutput
}

type userPoolDeviceConfigurationPtrType UserPoolDeviceConfigurationArgs

func UserPoolDeviceConfigurationPtr(v *UserPoolDeviceConfigurationArgs) UserPoolDeviceConfigurationPtrInput {
	return (*userPoolDeviceConfigurationPtrType)(v)
}

func (*userPoolDeviceConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolDeviceConfiguration)(nil)).Elem()
}

func (i *userPoolDeviceConfigurationPtrType) ToUserPoolDeviceConfigurationPtrOutput() UserPoolDeviceConfigurationPtrOutput {
	return i.ToUserPoolDeviceConfigurationPtrOutputWithContext(context.Background())
}

func (i *userPoolDeviceConfigurationPtrType) ToUserPoolDeviceConfigurationPtrOutputWithContext(ctx context.Context) UserPoolDeviceConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolDeviceConfigurationPtrOutput)
}

type UserPoolDeviceConfigurationOutput struct{ *pulumi.OutputState }

func (UserPoolDeviceConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolDeviceConfiguration)(nil)).Elem()
}

func (o UserPoolDeviceConfigurationOutput) ToUserPoolDeviceConfigurationOutput() UserPoolDeviceConfigurationOutput {
	return o
}

func (o UserPoolDeviceConfigurationOutput) ToUserPoolDeviceConfigurationOutputWithContext(ctx context.Context) UserPoolDeviceConfigurationOutput {
	return o
}

func (o UserPoolDeviceConfigurationOutput) ToUserPoolDeviceConfigurationPtrOutput() UserPoolDeviceConfigurationPtrOutput {
	return o.ToUserPoolDeviceConfigurationPtrOutputWithContext(context.Background())
}

func (o UserPoolDeviceConfigurationOutput) ToUserPoolDeviceConfigurationPtrOutputWithContext(ctx context.Context) UserPoolDeviceConfigurationPtrOutput {
	return o.ApplyT(func(v UserPoolDeviceConfiguration) *UserPoolDeviceConfiguration {
		return &v
	}).(UserPoolDeviceConfigurationPtrOutput)
}

// Indicates whether a challenge is required on a new device. Only applicable to a new device.
func (o UserPoolDeviceConfigurationOutput) ChallengeRequiredOnNewDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolDeviceConfiguration) *bool { return v.ChallengeRequiredOnNewDevice }).(pulumi.BoolPtrOutput)
}

// If true, a device is only remembered on user prompt.
func (o UserPoolDeviceConfigurationOutput) DeviceOnlyRememberedOnUserPrompt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolDeviceConfiguration) *bool { return v.DeviceOnlyRememberedOnUserPrompt }).(pulumi.BoolPtrOutput)
}

type UserPoolDeviceConfigurationPtrOutput struct{ *pulumi.OutputState }

func (UserPoolDeviceConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolDeviceConfiguration)(nil)).Elem()
}

func (o UserPoolDeviceConfigurationPtrOutput) ToUserPoolDeviceConfigurationPtrOutput() UserPoolDeviceConfigurationPtrOutput {
	return o
}

func (o UserPoolDeviceConfigurationPtrOutput) ToUserPoolDeviceConfigurationPtrOutputWithContext(ctx context.Context) UserPoolDeviceConfigurationPtrOutput {
	return o
}

func (o UserPoolDeviceConfigurationPtrOutput) Elem() UserPoolDeviceConfigurationOutput {
	return o.ApplyT(func(v *UserPoolDeviceConfiguration) UserPoolDeviceConfiguration { return *v }).(UserPoolDeviceConfigurationOutput)
}

// Indicates whether a challenge is required on a new device. Only applicable to a new device.
func (o UserPoolDeviceConfigurationPtrOutput) ChallengeRequiredOnNewDevice() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolDeviceConfiguration) *bool { return v.ChallengeRequiredOnNewDevice }).(pulumi.BoolPtrOutput)
}

// If true, a device is only remembered on user prompt.
func (o UserPoolDeviceConfigurationPtrOutput) DeviceOnlyRememberedOnUserPrompt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolDeviceConfiguration) *bool { return v.DeviceOnlyRememberedOnUserPrompt }).(pulumi.BoolPtrOutput)
}

type UserPoolEmailConfiguration struct {
	// Instruct Cognito to either use its built-in functional or Amazon SES to send out emails.
	EmailSendingAccount *string `pulumi:"emailSendingAccount"`
	// Sender’s email address or sender’s name with their email address (e.g. "john@smith.com" or "John Smith <john@smith.com>")
	FromEmailAddress *string `pulumi:"fromEmailAddress"`
	// The REPLY-TO email address.
	ReplyToEmailAddress *string `pulumi:"replyToEmailAddress"`
	// The ARN of the email source.
	SourceArn *string `pulumi:"sourceArn"`
}

// UserPoolEmailConfigurationInput is an input type that accepts UserPoolEmailConfigurationArgs and UserPoolEmailConfigurationOutput values.
// You can construct a concrete instance of `UserPoolEmailConfigurationInput` via:
//
// 		 UserPoolEmailConfigurationArgs{...}
//
type UserPoolEmailConfigurationInput interface {
	pulumi.Input

	ToUserPoolEmailConfigurationOutput() UserPoolEmailConfigurationOutput
	ToUserPoolEmailConfigurationOutputWithContext(context.Context) UserPoolEmailConfigurationOutput
}

type UserPoolEmailConfigurationArgs struct {
	// Instruct Cognito to either use its built-in functional or Amazon SES to send out emails.
	EmailSendingAccount pulumi.StringPtrInput `pulumi:"emailSendingAccount"`
	// Sender’s email address or sender’s name with their email address (e.g. "john@smith.com" or "John Smith <john@smith.com>")
	FromEmailAddress pulumi.StringPtrInput `pulumi:"fromEmailAddress"`
	// The REPLY-TO email address.
	ReplyToEmailAddress pulumi.StringPtrInput `pulumi:"replyToEmailAddress"`
	// The ARN of the email source.
	SourceArn pulumi.StringPtrInput `pulumi:"sourceArn"`
}

func (UserPoolEmailConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolEmailConfiguration)(nil)).Elem()
}

func (i UserPoolEmailConfigurationArgs) ToUserPoolEmailConfigurationOutput() UserPoolEmailConfigurationOutput {
	return i.ToUserPoolEmailConfigurationOutputWithContext(context.Background())
}

func (i UserPoolEmailConfigurationArgs) ToUserPoolEmailConfigurationOutputWithContext(ctx context.Context) UserPoolEmailConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolEmailConfigurationOutput)
}

func (i UserPoolEmailConfigurationArgs) ToUserPoolEmailConfigurationPtrOutput() UserPoolEmailConfigurationPtrOutput {
	return i.ToUserPoolEmailConfigurationPtrOutputWithContext(context.Background())
}

func (i UserPoolEmailConfigurationArgs) ToUserPoolEmailConfigurationPtrOutputWithContext(ctx context.Context) UserPoolEmailConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolEmailConfigurationOutput).ToUserPoolEmailConfigurationPtrOutputWithContext(ctx)
}

// UserPoolEmailConfigurationPtrInput is an input type that accepts UserPoolEmailConfigurationArgs, UserPoolEmailConfigurationPtr and UserPoolEmailConfigurationPtrOutput values.
// You can construct a concrete instance of `UserPoolEmailConfigurationPtrInput` via:
//
// 		 UserPoolEmailConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type UserPoolEmailConfigurationPtrInput interface {
	pulumi.Input

	ToUserPoolEmailConfigurationPtrOutput() UserPoolEmailConfigurationPtrOutput
	ToUserPoolEmailConfigurationPtrOutputWithContext(context.Context) UserPoolEmailConfigurationPtrOutput
}

type userPoolEmailConfigurationPtrType UserPoolEmailConfigurationArgs

func UserPoolEmailConfigurationPtr(v *UserPoolEmailConfigurationArgs) UserPoolEmailConfigurationPtrInput {
	return (*userPoolEmailConfigurationPtrType)(v)
}

func (*userPoolEmailConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolEmailConfiguration)(nil)).Elem()
}

func (i *userPoolEmailConfigurationPtrType) ToUserPoolEmailConfigurationPtrOutput() UserPoolEmailConfigurationPtrOutput {
	return i.ToUserPoolEmailConfigurationPtrOutputWithContext(context.Background())
}

func (i *userPoolEmailConfigurationPtrType) ToUserPoolEmailConfigurationPtrOutputWithContext(ctx context.Context) UserPoolEmailConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolEmailConfigurationPtrOutput)
}

type UserPoolEmailConfigurationOutput struct{ *pulumi.OutputState }

func (UserPoolEmailConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolEmailConfiguration)(nil)).Elem()
}

func (o UserPoolEmailConfigurationOutput) ToUserPoolEmailConfigurationOutput() UserPoolEmailConfigurationOutput {
	return o
}

func (o UserPoolEmailConfigurationOutput) ToUserPoolEmailConfigurationOutputWithContext(ctx context.Context) UserPoolEmailConfigurationOutput {
	return o
}

func (o UserPoolEmailConfigurationOutput) ToUserPoolEmailConfigurationPtrOutput() UserPoolEmailConfigurationPtrOutput {
	return o.ToUserPoolEmailConfigurationPtrOutputWithContext(context.Background())
}

func (o UserPoolEmailConfigurationOutput) ToUserPoolEmailConfigurationPtrOutputWithContext(ctx context.Context) UserPoolEmailConfigurationPtrOutput {
	return o.ApplyT(func(v UserPoolEmailConfiguration) *UserPoolEmailConfiguration {
		return &v
	}).(UserPoolEmailConfigurationPtrOutput)
}

// Instruct Cognito to either use its built-in functional or Amazon SES to send out emails.
func (o UserPoolEmailConfigurationOutput) EmailSendingAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolEmailConfiguration) *string { return v.EmailSendingAccount }).(pulumi.StringPtrOutput)
}

// Sender’s email address or sender’s name with their email address (e.g. "john@smith.com" or "John Smith <john@smith.com>")
func (o UserPoolEmailConfigurationOutput) FromEmailAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolEmailConfiguration) *string { return v.FromEmailAddress }).(pulumi.StringPtrOutput)
}

// The REPLY-TO email address.
func (o UserPoolEmailConfigurationOutput) ReplyToEmailAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolEmailConfiguration) *string { return v.ReplyToEmailAddress }).(pulumi.StringPtrOutput)
}

// The ARN of the email source.
func (o UserPoolEmailConfigurationOutput) SourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolEmailConfiguration) *string { return v.SourceArn }).(pulumi.StringPtrOutput)
}

type UserPoolEmailConfigurationPtrOutput struct{ *pulumi.OutputState }

func (UserPoolEmailConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolEmailConfiguration)(nil)).Elem()
}

func (o UserPoolEmailConfigurationPtrOutput) ToUserPoolEmailConfigurationPtrOutput() UserPoolEmailConfigurationPtrOutput {
	return o
}

func (o UserPoolEmailConfigurationPtrOutput) ToUserPoolEmailConfigurationPtrOutputWithContext(ctx context.Context) UserPoolEmailConfigurationPtrOutput {
	return o
}

func (o UserPoolEmailConfigurationPtrOutput) Elem() UserPoolEmailConfigurationOutput {
	return o.ApplyT(func(v *UserPoolEmailConfiguration) UserPoolEmailConfiguration { return *v }).(UserPoolEmailConfigurationOutput)
}

// Instruct Cognito to either use its built-in functional or Amazon SES to send out emails.
func (o UserPoolEmailConfigurationPtrOutput) EmailSendingAccount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolEmailConfiguration) *string { return v.EmailSendingAccount }).(pulumi.StringPtrOutput)
}

// Sender’s email address or sender’s name with their email address (e.g. "john@smith.com" or "John Smith <john@smith.com>")
func (o UserPoolEmailConfigurationPtrOutput) FromEmailAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolEmailConfiguration) *string { return v.FromEmailAddress }).(pulumi.StringPtrOutput)
}

// The REPLY-TO email address.
func (o UserPoolEmailConfigurationPtrOutput) ReplyToEmailAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolEmailConfiguration) *string { return v.ReplyToEmailAddress }).(pulumi.StringPtrOutput)
}

// The ARN of the email source.
func (o UserPoolEmailConfigurationPtrOutput) SourceArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolEmailConfiguration) *string { return v.SourceArn }).(pulumi.StringPtrOutput)
}

type UserPoolLambdaConfig struct {
	// The ARN of the lambda creating an authentication challenge.
	CreateAuthChallenge *string `pulumi:"createAuthChallenge"`
	// A custom Message AWS Lambda trigger.
	CustomMessage *string `pulumi:"customMessage"`
	// Defines the authentication challenge.
	DefineAuthChallenge *string `pulumi:"defineAuthChallenge"`
	// A post-authentication AWS Lambda trigger.
	PostAuthentication *string `pulumi:"postAuthentication"`
	// A post-confirmation AWS Lambda trigger.
	PostConfirmation *string `pulumi:"postConfirmation"`
	// A pre-authentication AWS Lambda trigger.
	PreAuthentication *string `pulumi:"preAuthentication"`
	// A pre-registration AWS Lambda trigger.
	PreSignUp *string `pulumi:"preSignUp"`
	// Allow to customize identity token claims before token generation.
	PreTokenGeneration *string `pulumi:"preTokenGeneration"`
	// The user migration Lambda config type.
	UserMigration *string `pulumi:"userMigration"`
	// Verifies the authentication challenge response.
	VerifyAuthChallengeResponse *string `pulumi:"verifyAuthChallengeResponse"`
}

// UserPoolLambdaConfigInput is an input type that accepts UserPoolLambdaConfigArgs and UserPoolLambdaConfigOutput values.
// You can construct a concrete instance of `UserPoolLambdaConfigInput` via:
//
// 		 UserPoolLambdaConfigArgs{...}
//
type UserPoolLambdaConfigInput interface {
	pulumi.Input

	ToUserPoolLambdaConfigOutput() UserPoolLambdaConfigOutput
	ToUserPoolLambdaConfigOutputWithContext(context.Context) UserPoolLambdaConfigOutput
}

type UserPoolLambdaConfigArgs struct {
	// The ARN of the lambda creating an authentication challenge.
	CreateAuthChallenge pulumi.StringPtrInput `pulumi:"createAuthChallenge"`
	// A custom Message AWS Lambda trigger.
	CustomMessage pulumi.StringPtrInput `pulumi:"customMessage"`
	// Defines the authentication challenge.
	DefineAuthChallenge pulumi.StringPtrInput `pulumi:"defineAuthChallenge"`
	// A post-authentication AWS Lambda trigger.
	PostAuthentication pulumi.StringPtrInput `pulumi:"postAuthentication"`
	// A post-confirmation AWS Lambda trigger.
	PostConfirmation pulumi.StringPtrInput `pulumi:"postConfirmation"`
	// A pre-authentication AWS Lambda trigger.
	PreAuthentication pulumi.StringPtrInput `pulumi:"preAuthentication"`
	// A pre-registration AWS Lambda trigger.
	PreSignUp pulumi.StringPtrInput `pulumi:"preSignUp"`
	// Allow to customize identity token claims before token generation.
	PreTokenGeneration pulumi.StringPtrInput `pulumi:"preTokenGeneration"`
	// The user migration Lambda config type.
	UserMigration pulumi.StringPtrInput `pulumi:"userMigration"`
	// Verifies the authentication challenge response.
	VerifyAuthChallengeResponse pulumi.StringPtrInput `pulumi:"verifyAuthChallengeResponse"`
}

func (UserPoolLambdaConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolLambdaConfig)(nil)).Elem()
}

func (i UserPoolLambdaConfigArgs) ToUserPoolLambdaConfigOutput() UserPoolLambdaConfigOutput {
	return i.ToUserPoolLambdaConfigOutputWithContext(context.Background())
}

func (i UserPoolLambdaConfigArgs) ToUserPoolLambdaConfigOutputWithContext(ctx context.Context) UserPoolLambdaConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolLambdaConfigOutput)
}

func (i UserPoolLambdaConfigArgs) ToUserPoolLambdaConfigPtrOutput() UserPoolLambdaConfigPtrOutput {
	return i.ToUserPoolLambdaConfigPtrOutputWithContext(context.Background())
}

func (i UserPoolLambdaConfigArgs) ToUserPoolLambdaConfigPtrOutputWithContext(ctx context.Context) UserPoolLambdaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolLambdaConfigOutput).ToUserPoolLambdaConfigPtrOutputWithContext(ctx)
}

// UserPoolLambdaConfigPtrInput is an input type that accepts UserPoolLambdaConfigArgs, UserPoolLambdaConfigPtr and UserPoolLambdaConfigPtrOutput values.
// You can construct a concrete instance of `UserPoolLambdaConfigPtrInput` via:
//
// 		 UserPoolLambdaConfigArgs{...}
//
//  or:
//
// 		 nil
//
type UserPoolLambdaConfigPtrInput interface {
	pulumi.Input

	ToUserPoolLambdaConfigPtrOutput() UserPoolLambdaConfigPtrOutput
	ToUserPoolLambdaConfigPtrOutputWithContext(context.Context) UserPoolLambdaConfigPtrOutput
}

type userPoolLambdaConfigPtrType UserPoolLambdaConfigArgs

func UserPoolLambdaConfigPtr(v *UserPoolLambdaConfigArgs) UserPoolLambdaConfigPtrInput {
	return (*userPoolLambdaConfigPtrType)(v)
}

func (*userPoolLambdaConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolLambdaConfig)(nil)).Elem()
}

func (i *userPoolLambdaConfigPtrType) ToUserPoolLambdaConfigPtrOutput() UserPoolLambdaConfigPtrOutput {
	return i.ToUserPoolLambdaConfigPtrOutputWithContext(context.Background())
}

func (i *userPoolLambdaConfigPtrType) ToUserPoolLambdaConfigPtrOutputWithContext(ctx context.Context) UserPoolLambdaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolLambdaConfigPtrOutput)
}

type UserPoolLambdaConfigOutput struct{ *pulumi.OutputState }

func (UserPoolLambdaConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolLambdaConfig)(nil)).Elem()
}

func (o UserPoolLambdaConfigOutput) ToUserPoolLambdaConfigOutput() UserPoolLambdaConfigOutput {
	return o
}

func (o UserPoolLambdaConfigOutput) ToUserPoolLambdaConfigOutputWithContext(ctx context.Context) UserPoolLambdaConfigOutput {
	return o
}

func (o UserPoolLambdaConfigOutput) ToUserPoolLambdaConfigPtrOutput() UserPoolLambdaConfigPtrOutput {
	return o.ToUserPoolLambdaConfigPtrOutputWithContext(context.Background())
}

func (o UserPoolLambdaConfigOutput) ToUserPoolLambdaConfigPtrOutputWithContext(ctx context.Context) UserPoolLambdaConfigPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *UserPoolLambdaConfig {
		return &v
	}).(UserPoolLambdaConfigPtrOutput)
}

// The ARN of the lambda creating an authentication challenge.
func (o UserPoolLambdaConfigOutput) CreateAuthChallenge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.CreateAuthChallenge }).(pulumi.StringPtrOutput)
}

// A custom Message AWS Lambda trigger.
func (o UserPoolLambdaConfigOutput) CustomMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.CustomMessage }).(pulumi.StringPtrOutput)
}

// Defines the authentication challenge.
func (o UserPoolLambdaConfigOutput) DefineAuthChallenge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.DefineAuthChallenge }).(pulumi.StringPtrOutput)
}

// A post-authentication AWS Lambda trigger.
func (o UserPoolLambdaConfigOutput) PostAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.PostAuthentication }).(pulumi.StringPtrOutput)
}

// A post-confirmation AWS Lambda trigger.
func (o UserPoolLambdaConfigOutput) PostConfirmation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.PostConfirmation }).(pulumi.StringPtrOutput)
}

// A pre-authentication AWS Lambda trigger.
func (o UserPoolLambdaConfigOutput) PreAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.PreAuthentication }).(pulumi.StringPtrOutput)
}

// A pre-registration AWS Lambda trigger.
func (o UserPoolLambdaConfigOutput) PreSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.PreSignUp }).(pulumi.StringPtrOutput)
}

// Allow to customize identity token claims before token generation.
func (o UserPoolLambdaConfigOutput) PreTokenGeneration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.PreTokenGeneration }).(pulumi.StringPtrOutput)
}

// The user migration Lambda config type.
func (o UserPoolLambdaConfigOutput) UserMigration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.UserMigration }).(pulumi.StringPtrOutput)
}

// Verifies the authentication challenge response.
func (o UserPoolLambdaConfigOutput) VerifyAuthChallengeResponse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.VerifyAuthChallengeResponse }).(pulumi.StringPtrOutput)
}

type UserPoolLambdaConfigPtrOutput struct{ *pulumi.OutputState }

func (UserPoolLambdaConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolLambdaConfig)(nil)).Elem()
}

func (o UserPoolLambdaConfigPtrOutput) ToUserPoolLambdaConfigPtrOutput() UserPoolLambdaConfigPtrOutput {
	return o
}

func (o UserPoolLambdaConfigPtrOutput) ToUserPoolLambdaConfigPtrOutputWithContext(ctx context.Context) UserPoolLambdaConfigPtrOutput {
	return o
}

func (o UserPoolLambdaConfigPtrOutput) Elem() UserPoolLambdaConfigOutput {
	return o.ApplyT(func(v *UserPoolLambdaConfig) UserPoolLambdaConfig { return *v }).(UserPoolLambdaConfigOutput)
}

// The ARN of the lambda creating an authentication challenge.
func (o UserPoolLambdaConfigPtrOutput) CreateAuthChallenge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.CreateAuthChallenge }).(pulumi.StringPtrOutput)
}

// A custom Message AWS Lambda trigger.
func (o UserPoolLambdaConfigPtrOutput) CustomMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.CustomMessage }).(pulumi.StringPtrOutput)
}

// Defines the authentication challenge.
func (o UserPoolLambdaConfigPtrOutput) DefineAuthChallenge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.DefineAuthChallenge }).(pulumi.StringPtrOutput)
}

// A post-authentication AWS Lambda trigger.
func (o UserPoolLambdaConfigPtrOutput) PostAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.PostAuthentication }).(pulumi.StringPtrOutput)
}

// A post-confirmation AWS Lambda trigger.
func (o UserPoolLambdaConfigPtrOutput) PostConfirmation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.PostConfirmation }).(pulumi.StringPtrOutput)
}

// A pre-authentication AWS Lambda trigger.
func (o UserPoolLambdaConfigPtrOutput) PreAuthentication() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.PreAuthentication }).(pulumi.StringPtrOutput)
}

// A pre-registration AWS Lambda trigger.
func (o UserPoolLambdaConfigPtrOutput) PreSignUp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.PreSignUp }).(pulumi.StringPtrOutput)
}

// Allow to customize identity token claims before token generation.
func (o UserPoolLambdaConfigPtrOutput) PreTokenGeneration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.PreTokenGeneration }).(pulumi.StringPtrOutput)
}

// The user migration Lambda config type.
func (o UserPoolLambdaConfigPtrOutput) UserMigration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.UserMigration }).(pulumi.StringPtrOutput)
}

// Verifies the authentication challenge response.
func (o UserPoolLambdaConfigPtrOutput) VerifyAuthChallengeResponse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolLambdaConfig) *string { return v.VerifyAuthChallengeResponse }).(pulumi.StringPtrOutput)
}

type UserPoolPasswordPolicy struct {
	// The minimum length of the password policy that you have set.
	MinimumLength *int `pulumi:"minimumLength"`
	// Whether you have required users to use at least one lowercase letter in their password.
	RequireLowercase *bool `pulumi:"requireLowercase"`
	// Whether you have required users to use at least one number in their password.
	RequireNumbers *bool `pulumi:"requireNumbers"`
	// Whether you have required users to use at least one symbol in their password.
	RequireSymbols *bool `pulumi:"requireSymbols"`
	// Whether you have required users to use at least one uppercase letter in their password.
	RequireUppercase *bool `pulumi:"requireUppercase"`
	// In the password policy you have set, refers to the number of days a temporary password is valid. If the user does not sign-in during this time, their password will need to be reset by an administrator.
	TemporaryPasswordValidityDays *int `pulumi:"temporaryPasswordValidityDays"`
}

// UserPoolPasswordPolicyInput is an input type that accepts UserPoolPasswordPolicyArgs and UserPoolPasswordPolicyOutput values.
// You can construct a concrete instance of `UserPoolPasswordPolicyInput` via:
//
// 		 UserPoolPasswordPolicyArgs{...}
//
type UserPoolPasswordPolicyInput interface {
	pulumi.Input

	ToUserPoolPasswordPolicyOutput() UserPoolPasswordPolicyOutput
	ToUserPoolPasswordPolicyOutputWithContext(context.Context) UserPoolPasswordPolicyOutput
}

type UserPoolPasswordPolicyArgs struct {
	// The minimum length of the password policy that you have set.
	MinimumLength pulumi.IntPtrInput `pulumi:"minimumLength"`
	// Whether you have required users to use at least one lowercase letter in their password.
	RequireLowercase pulumi.BoolPtrInput `pulumi:"requireLowercase"`
	// Whether you have required users to use at least one number in their password.
	RequireNumbers pulumi.BoolPtrInput `pulumi:"requireNumbers"`
	// Whether you have required users to use at least one symbol in their password.
	RequireSymbols pulumi.BoolPtrInput `pulumi:"requireSymbols"`
	// Whether you have required users to use at least one uppercase letter in their password.
	RequireUppercase pulumi.BoolPtrInput `pulumi:"requireUppercase"`
	// In the password policy you have set, refers to the number of days a temporary password is valid. If the user does not sign-in during this time, their password will need to be reset by an administrator.
	TemporaryPasswordValidityDays pulumi.IntPtrInput `pulumi:"temporaryPasswordValidityDays"`
}

func (UserPoolPasswordPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolPasswordPolicy)(nil)).Elem()
}

func (i UserPoolPasswordPolicyArgs) ToUserPoolPasswordPolicyOutput() UserPoolPasswordPolicyOutput {
	return i.ToUserPoolPasswordPolicyOutputWithContext(context.Background())
}

func (i UserPoolPasswordPolicyArgs) ToUserPoolPasswordPolicyOutputWithContext(ctx context.Context) UserPoolPasswordPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolPasswordPolicyOutput)
}

func (i UserPoolPasswordPolicyArgs) ToUserPoolPasswordPolicyPtrOutput() UserPoolPasswordPolicyPtrOutput {
	return i.ToUserPoolPasswordPolicyPtrOutputWithContext(context.Background())
}

func (i UserPoolPasswordPolicyArgs) ToUserPoolPasswordPolicyPtrOutputWithContext(ctx context.Context) UserPoolPasswordPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolPasswordPolicyOutput).ToUserPoolPasswordPolicyPtrOutputWithContext(ctx)
}

// UserPoolPasswordPolicyPtrInput is an input type that accepts UserPoolPasswordPolicyArgs, UserPoolPasswordPolicyPtr and UserPoolPasswordPolicyPtrOutput values.
// You can construct a concrete instance of `UserPoolPasswordPolicyPtrInput` via:
//
// 		 UserPoolPasswordPolicyArgs{...}
//
//  or:
//
// 		 nil
//
type UserPoolPasswordPolicyPtrInput interface {
	pulumi.Input

	ToUserPoolPasswordPolicyPtrOutput() UserPoolPasswordPolicyPtrOutput
	ToUserPoolPasswordPolicyPtrOutputWithContext(context.Context) UserPoolPasswordPolicyPtrOutput
}

type userPoolPasswordPolicyPtrType UserPoolPasswordPolicyArgs

func UserPoolPasswordPolicyPtr(v *UserPoolPasswordPolicyArgs) UserPoolPasswordPolicyPtrInput {
	return (*userPoolPasswordPolicyPtrType)(v)
}

func (*userPoolPasswordPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolPasswordPolicy)(nil)).Elem()
}

func (i *userPoolPasswordPolicyPtrType) ToUserPoolPasswordPolicyPtrOutput() UserPoolPasswordPolicyPtrOutput {
	return i.ToUserPoolPasswordPolicyPtrOutputWithContext(context.Background())
}

func (i *userPoolPasswordPolicyPtrType) ToUserPoolPasswordPolicyPtrOutputWithContext(ctx context.Context) UserPoolPasswordPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolPasswordPolicyPtrOutput)
}

type UserPoolPasswordPolicyOutput struct{ *pulumi.OutputState }

func (UserPoolPasswordPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolPasswordPolicy)(nil)).Elem()
}

func (o UserPoolPasswordPolicyOutput) ToUserPoolPasswordPolicyOutput() UserPoolPasswordPolicyOutput {
	return o
}

func (o UserPoolPasswordPolicyOutput) ToUserPoolPasswordPolicyOutputWithContext(ctx context.Context) UserPoolPasswordPolicyOutput {
	return o
}

func (o UserPoolPasswordPolicyOutput) ToUserPoolPasswordPolicyPtrOutput() UserPoolPasswordPolicyPtrOutput {
	return o.ToUserPoolPasswordPolicyPtrOutputWithContext(context.Background())
}

func (o UserPoolPasswordPolicyOutput) ToUserPoolPasswordPolicyPtrOutputWithContext(ctx context.Context) UserPoolPasswordPolicyPtrOutput {
	return o.ApplyT(func(v UserPoolPasswordPolicy) *UserPoolPasswordPolicy {
		return &v
	}).(UserPoolPasswordPolicyPtrOutput)
}

// The minimum length of the password policy that you have set.
func (o UserPoolPasswordPolicyOutput) MinimumLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserPoolPasswordPolicy) *int { return v.MinimumLength }).(pulumi.IntPtrOutput)
}

// Whether you have required users to use at least one lowercase letter in their password.
func (o UserPoolPasswordPolicyOutput) RequireLowercase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolPasswordPolicy) *bool { return v.RequireLowercase }).(pulumi.BoolPtrOutput)
}

// Whether you have required users to use at least one number in their password.
func (o UserPoolPasswordPolicyOutput) RequireNumbers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolPasswordPolicy) *bool { return v.RequireNumbers }).(pulumi.BoolPtrOutput)
}

// Whether you have required users to use at least one symbol in their password.
func (o UserPoolPasswordPolicyOutput) RequireSymbols() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolPasswordPolicy) *bool { return v.RequireSymbols }).(pulumi.BoolPtrOutput)
}

// Whether you have required users to use at least one uppercase letter in their password.
func (o UserPoolPasswordPolicyOutput) RequireUppercase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolPasswordPolicy) *bool { return v.RequireUppercase }).(pulumi.BoolPtrOutput)
}

// In the password policy you have set, refers to the number of days a temporary password is valid. If the user does not sign-in during this time, their password will need to be reset by an administrator.
func (o UserPoolPasswordPolicyOutput) TemporaryPasswordValidityDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserPoolPasswordPolicy) *int { return v.TemporaryPasswordValidityDays }).(pulumi.IntPtrOutput)
}

type UserPoolPasswordPolicyPtrOutput struct{ *pulumi.OutputState }

func (UserPoolPasswordPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolPasswordPolicy)(nil)).Elem()
}

func (o UserPoolPasswordPolicyPtrOutput) ToUserPoolPasswordPolicyPtrOutput() UserPoolPasswordPolicyPtrOutput {
	return o
}

func (o UserPoolPasswordPolicyPtrOutput) ToUserPoolPasswordPolicyPtrOutputWithContext(ctx context.Context) UserPoolPasswordPolicyPtrOutput {
	return o
}

func (o UserPoolPasswordPolicyPtrOutput) Elem() UserPoolPasswordPolicyOutput {
	return o.ApplyT(func(v *UserPoolPasswordPolicy) UserPoolPasswordPolicy { return *v }).(UserPoolPasswordPolicyOutput)
}

// The minimum length of the password policy that you have set.
func (o UserPoolPasswordPolicyPtrOutput) MinimumLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserPoolPasswordPolicy) *int { return v.MinimumLength }).(pulumi.IntPtrOutput)
}

// Whether you have required users to use at least one lowercase letter in their password.
func (o UserPoolPasswordPolicyPtrOutput) RequireLowercase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolPasswordPolicy) *bool { return v.RequireLowercase }).(pulumi.BoolPtrOutput)
}

// Whether you have required users to use at least one number in their password.
func (o UserPoolPasswordPolicyPtrOutput) RequireNumbers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolPasswordPolicy) *bool { return v.RequireNumbers }).(pulumi.BoolPtrOutput)
}

// Whether you have required users to use at least one symbol in their password.
func (o UserPoolPasswordPolicyPtrOutput) RequireSymbols() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolPasswordPolicy) *bool { return v.RequireSymbols }).(pulumi.BoolPtrOutput)
}

// Whether you have required users to use at least one uppercase letter in their password.
func (o UserPoolPasswordPolicyPtrOutput) RequireUppercase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolPasswordPolicy) *bool { return v.RequireUppercase }).(pulumi.BoolPtrOutput)
}

// In the password policy you have set, refers to the number of days a temporary password is valid. If the user does not sign-in during this time, their password will need to be reset by an administrator.
func (o UserPoolPasswordPolicyPtrOutput) TemporaryPasswordValidityDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v UserPoolPasswordPolicy) *int { return v.TemporaryPasswordValidityDays }).(pulumi.IntPtrOutput)
}

type UserPoolSchema struct {
	// The attribute data type. Must be one of `Boolean`, `Number`, `String`, `DateTime`.
	AttributeDataType string `pulumi:"attributeDataType"`
	// Specifies whether the attribute type is developer only.
	DeveloperOnlyAttribute *bool `pulumi:"developerOnlyAttribute"`
	// Specifies whether the attribute can be changed once it has been created.
	Mutable *bool `pulumi:"mutable"`
	// The name of the attribute.
	Name string `pulumi:"name"`
	// Specifies the constraints for an attribute of the number type.
	NumberAttributeConstraints *UserPoolSchemaNumberAttributeConstraints `pulumi:"numberAttributeConstraints"`
	// Specifies whether a user pool attribute is required. If the attribute is required and the user does not provide a value, registration or sign-in will fail.
	Required *bool `pulumi:"required"`
	// -Specifies the constraints for an attribute of the string type.
	StringAttributeConstraints *UserPoolSchemaStringAttributeConstraints `pulumi:"stringAttributeConstraints"`
}

// UserPoolSchemaInput is an input type that accepts UserPoolSchemaArgs and UserPoolSchemaOutput values.
// You can construct a concrete instance of `UserPoolSchemaInput` via:
//
// 		 UserPoolSchemaArgs{...}
//
type UserPoolSchemaInput interface {
	pulumi.Input

	ToUserPoolSchemaOutput() UserPoolSchemaOutput
	ToUserPoolSchemaOutputWithContext(context.Context) UserPoolSchemaOutput
}

type UserPoolSchemaArgs struct {
	// The attribute data type. Must be one of `Boolean`, `Number`, `String`, `DateTime`.
	AttributeDataType pulumi.StringInput `pulumi:"attributeDataType"`
	// Specifies whether the attribute type is developer only.
	DeveloperOnlyAttribute pulumi.BoolPtrInput `pulumi:"developerOnlyAttribute"`
	// Specifies whether the attribute can be changed once it has been created.
	Mutable pulumi.BoolPtrInput `pulumi:"mutable"`
	// The name of the attribute.
	Name pulumi.StringInput `pulumi:"name"`
	// Specifies the constraints for an attribute of the number type.
	NumberAttributeConstraints UserPoolSchemaNumberAttributeConstraintsPtrInput `pulumi:"numberAttributeConstraints"`
	// Specifies whether a user pool attribute is required. If the attribute is required and the user does not provide a value, registration or sign-in will fail.
	Required pulumi.BoolPtrInput `pulumi:"required"`
	// -Specifies the constraints for an attribute of the string type.
	StringAttributeConstraints UserPoolSchemaStringAttributeConstraintsPtrInput `pulumi:"stringAttributeConstraints"`
}

func (UserPoolSchemaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolSchema)(nil)).Elem()
}

func (i UserPoolSchemaArgs) ToUserPoolSchemaOutput() UserPoolSchemaOutput {
	return i.ToUserPoolSchemaOutputWithContext(context.Background())
}

func (i UserPoolSchemaArgs) ToUserPoolSchemaOutputWithContext(ctx context.Context) UserPoolSchemaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSchemaOutput)
}

// UserPoolSchemaArrayInput is an input type that accepts UserPoolSchemaArray and UserPoolSchemaArrayOutput values.
// You can construct a concrete instance of `UserPoolSchemaArrayInput` via:
//
// 		 UserPoolSchemaArray{ UserPoolSchemaArgs{...} }
//
type UserPoolSchemaArrayInput interface {
	pulumi.Input

	ToUserPoolSchemaArrayOutput() UserPoolSchemaArrayOutput
	ToUserPoolSchemaArrayOutputWithContext(context.Context) UserPoolSchemaArrayOutput
}

type UserPoolSchemaArray []UserPoolSchemaInput

func (UserPoolSchemaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserPoolSchema)(nil)).Elem()
}

func (i UserPoolSchemaArray) ToUserPoolSchemaArrayOutput() UserPoolSchemaArrayOutput {
	return i.ToUserPoolSchemaArrayOutputWithContext(context.Background())
}

func (i UserPoolSchemaArray) ToUserPoolSchemaArrayOutputWithContext(ctx context.Context) UserPoolSchemaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSchemaArrayOutput)
}

type UserPoolSchemaOutput struct{ *pulumi.OutputState }

func (UserPoolSchemaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolSchema)(nil)).Elem()
}

func (o UserPoolSchemaOutput) ToUserPoolSchemaOutput() UserPoolSchemaOutput {
	return o
}

func (o UserPoolSchemaOutput) ToUserPoolSchemaOutputWithContext(ctx context.Context) UserPoolSchemaOutput {
	return o
}

// The attribute data type. Must be one of `Boolean`, `Number`, `String`, `DateTime`.
func (o UserPoolSchemaOutput) AttributeDataType() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolSchema) string { return v.AttributeDataType }).(pulumi.StringOutput)
}

// Specifies whether the attribute type is developer only.
func (o UserPoolSchemaOutput) DeveloperOnlyAttribute() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolSchema) *bool { return v.DeveloperOnlyAttribute }).(pulumi.BoolPtrOutput)
}

// Specifies whether the attribute can be changed once it has been created.
func (o UserPoolSchemaOutput) Mutable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolSchema) *bool { return v.Mutable }).(pulumi.BoolPtrOutput)
}

// The name of the attribute.
func (o UserPoolSchemaOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolSchema) string { return v.Name }).(pulumi.StringOutput)
}

// Specifies the constraints for an attribute of the number type.
func (o UserPoolSchemaOutput) NumberAttributeConstraints() UserPoolSchemaNumberAttributeConstraintsPtrOutput {
	return o.ApplyT(func(v UserPoolSchema) *UserPoolSchemaNumberAttributeConstraints { return v.NumberAttributeConstraints }).(UserPoolSchemaNumberAttributeConstraintsPtrOutput)
}

// Specifies whether a user pool attribute is required. If the attribute is required and the user does not provide a value, registration or sign-in will fail.
func (o UserPoolSchemaOutput) Required() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserPoolSchema) *bool { return v.Required }).(pulumi.BoolPtrOutput)
}

// -Specifies the constraints for an attribute of the string type.
func (o UserPoolSchemaOutput) StringAttributeConstraints() UserPoolSchemaStringAttributeConstraintsPtrOutput {
	return o.ApplyT(func(v UserPoolSchema) *UserPoolSchemaStringAttributeConstraints { return v.StringAttributeConstraints }).(UserPoolSchemaStringAttributeConstraintsPtrOutput)
}

type UserPoolSchemaArrayOutput struct{ *pulumi.OutputState }

func (UserPoolSchemaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserPoolSchema)(nil)).Elem()
}

func (o UserPoolSchemaArrayOutput) ToUserPoolSchemaArrayOutput() UserPoolSchemaArrayOutput {
	return o
}

func (o UserPoolSchemaArrayOutput) ToUserPoolSchemaArrayOutputWithContext(ctx context.Context) UserPoolSchemaArrayOutput {
	return o
}

func (o UserPoolSchemaArrayOutput) Index(i pulumi.IntInput) UserPoolSchemaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserPoolSchema {
		return vs[0].([]UserPoolSchema)[vs[1].(int)]
	}).(UserPoolSchemaOutput)
}

type UserPoolSchemaNumberAttributeConstraints struct {
	// The maximum value of an attribute that is of the number data type.
	MaxValue *string `pulumi:"maxValue"`
	// The minimum value of an attribute that is of the number data type.
	MinValue *string `pulumi:"minValue"`
}

// UserPoolSchemaNumberAttributeConstraintsInput is an input type that accepts UserPoolSchemaNumberAttributeConstraintsArgs and UserPoolSchemaNumberAttributeConstraintsOutput values.
// You can construct a concrete instance of `UserPoolSchemaNumberAttributeConstraintsInput` via:
//
// 		 UserPoolSchemaNumberAttributeConstraintsArgs{...}
//
type UserPoolSchemaNumberAttributeConstraintsInput interface {
	pulumi.Input

	ToUserPoolSchemaNumberAttributeConstraintsOutput() UserPoolSchemaNumberAttributeConstraintsOutput
	ToUserPoolSchemaNumberAttributeConstraintsOutputWithContext(context.Context) UserPoolSchemaNumberAttributeConstraintsOutput
}

type UserPoolSchemaNumberAttributeConstraintsArgs struct {
	// The maximum value of an attribute that is of the number data type.
	MaxValue pulumi.StringPtrInput `pulumi:"maxValue"`
	// The minimum value of an attribute that is of the number data type.
	MinValue pulumi.StringPtrInput `pulumi:"minValue"`
}

func (UserPoolSchemaNumberAttributeConstraintsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolSchemaNumberAttributeConstraints)(nil)).Elem()
}

func (i UserPoolSchemaNumberAttributeConstraintsArgs) ToUserPoolSchemaNumberAttributeConstraintsOutput() UserPoolSchemaNumberAttributeConstraintsOutput {
	return i.ToUserPoolSchemaNumberAttributeConstraintsOutputWithContext(context.Background())
}

func (i UserPoolSchemaNumberAttributeConstraintsArgs) ToUserPoolSchemaNumberAttributeConstraintsOutputWithContext(ctx context.Context) UserPoolSchemaNumberAttributeConstraintsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSchemaNumberAttributeConstraintsOutput)
}

func (i UserPoolSchemaNumberAttributeConstraintsArgs) ToUserPoolSchemaNumberAttributeConstraintsPtrOutput() UserPoolSchemaNumberAttributeConstraintsPtrOutput {
	return i.ToUserPoolSchemaNumberAttributeConstraintsPtrOutputWithContext(context.Background())
}

func (i UserPoolSchemaNumberAttributeConstraintsArgs) ToUserPoolSchemaNumberAttributeConstraintsPtrOutputWithContext(ctx context.Context) UserPoolSchemaNumberAttributeConstraintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSchemaNumberAttributeConstraintsOutput).ToUserPoolSchemaNumberAttributeConstraintsPtrOutputWithContext(ctx)
}

// UserPoolSchemaNumberAttributeConstraintsPtrInput is an input type that accepts UserPoolSchemaNumberAttributeConstraintsArgs, UserPoolSchemaNumberAttributeConstraintsPtr and UserPoolSchemaNumberAttributeConstraintsPtrOutput values.
// You can construct a concrete instance of `UserPoolSchemaNumberAttributeConstraintsPtrInput` via:
//
// 		 UserPoolSchemaNumberAttributeConstraintsArgs{...}
//
//  or:
//
// 		 nil
//
type UserPoolSchemaNumberAttributeConstraintsPtrInput interface {
	pulumi.Input

	ToUserPoolSchemaNumberAttributeConstraintsPtrOutput() UserPoolSchemaNumberAttributeConstraintsPtrOutput
	ToUserPoolSchemaNumberAttributeConstraintsPtrOutputWithContext(context.Context) UserPoolSchemaNumberAttributeConstraintsPtrOutput
}

type userPoolSchemaNumberAttributeConstraintsPtrType UserPoolSchemaNumberAttributeConstraintsArgs

func UserPoolSchemaNumberAttributeConstraintsPtr(v *UserPoolSchemaNumberAttributeConstraintsArgs) UserPoolSchemaNumberAttributeConstraintsPtrInput {
	return (*userPoolSchemaNumberAttributeConstraintsPtrType)(v)
}

func (*userPoolSchemaNumberAttributeConstraintsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolSchemaNumberAttributeConstraints)(nil)).Elem()
}

func (i *userPoolSchemaNumberAttributeConstraintsPtrType) ToUserPoolSchemaNumberAttributeConstraintsPtrOutput() UserPoolSchemaNumberAttributeConstraintsPtrOutput {
	return i.ToUserPoolSchemaNumberAttributeConstraintsPtrOutputWithContext(context.Background())
}

func (i *userPoolSchemaNumberAttributeConstraintsPtrType) ToUserPoolSchemaNumberAttributeConstraintsPtrOutputWithContext(ctx context.Context) UserPoolSchemaNumberAttributeConstraintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSchemaNumberAttributeConstraintsPtrOutput)
}

type UserPoolSchemaNumberAttributeConstraintsOutput struct{ *pulumi.OutputState }

func (UserPoolSchemaNumberAttributeConstraintsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolSchemaNumberAttributeConstraints)(nil)).Elem()
}

func (o UserPoolSchemaNumberAttributeConstraintsOutput) ToUserPoolSchemaNumberAttributeConstraintsOutput() UserPoolSchemaNumberAttributeConstraintsOutput {
	return o
}

func (o UserPoolSchemaNumberAttributeConstraintsOutput) ToUserPoolSchemaNumberAttributeConstraintsOutputWithContext(ctx context.Context) UserPoolSchemaNumberAttributeConstraintsOutput {
	return o
}

func (o UserPoolSchemaNumberAttributeConstraintsOutput) ToUserPoolSchemaNumberAttributeConstraintsPtrOutput() UserPoolSchemaNumberAttributeConstraintsPtrOutput {
	return o.ToUserPoolSchemaNumberAttributeConstraintsPtrOutputWithContext(context.Background())
}

func (o UserPoolSchemaNumberAttributeConstraintsOutput) ToUserPoolSchemaNumberAttributeConstraintsPtrOutputWithContext(ctx context.Context) UserPoolSchemaNumberAttributeConstraintsPtrOutput {
	return o.ApplyT(func(v UserPoolSchemaNumberAttributeConstraints) *UserPoolSchemaNumberAttributeConstraints {
		return &v
	}).(UserPoolSchemaNumberAttributeConstraintsPtrOutput)
}

// The maximum value of an attribute that is of the number data type.
func (o UserPoolSchemaNumberAttributeConstraintsOutput) MaxValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolSchemaNumberAttributeConstraints) *string { return v.MaxValue }).(pulumi.StringPtrOutput)
}

// The minimum value of an attribute that is of the number data type.
func (o UserPoolSchemaNumberAttributeConstraintsOutput) MinValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolSchemaNumberAttributeConstraints) *string { return v.MinValue }).(pulumi.StringPtrOutput)
}

type UserPoolSchemaNumberAttributeConstraintsPtrOutput struct{ *pulumi.OutputState }

func (UserPoolSchemaNumberAttributeConstraintsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolSchemaNumberAttributeConstraints)(nil)).Elem()
}

func (o UserPoolSchemaNumberAttributeConstraintsPtrOutput) ToUserPoolSchemaNumberAttributeConstraintsPtrOutput() UserPoolSchemaNumberAttributeConstraintsPtrOutput {
	return o
}

func (o UserPoolSchemaNumberAttributeConstraintsPtrOutput) ToUserPoolSchemaNumberAttributeConstraintsPtrOutputWithContext(ctx context.Context) UserPoolSchemaNumberAttributeConstraintsPtrOutput {
	return o
}

func (o UserPoolSchemaNumberAttributeConstraintsPtrOutput) Elem() UserPoolSchemaNumberAttributeConstraintsOutput {
	return o.ApplyT(func(v *UserPoolSchemaNumberAttributeConstraints) UserPoolSchemaNumberAttributeConstraints { return *v }).(UserPoolSchemaNumberAttributeConstraintsOutput)
}

// The maximum value of an attribute that is of the number data type.
func (o UserPoolSchemaNumberAttributeConstraintsPtrOutput) MaxValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolSchemaNumberAttributeConstraints) *string { return v.MaxValue }).(pulumi.StringPtrOutput)
}

// The minimum value of an attribute that is of the number data type.
func (o UserPoolSchemaNumberAttributeConstraintsPtrOutput) MinValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolSchemaNumberAttributeConstraints) *string { return v.MinValue }).(pulumi.StringPtrOutput)
}

type UserPoolSchemaStringAttributeConstraints struct {
	// The maximum length of an attribute value of the string type.
	MaxLength *string `pulumi:"maxLength"`
	// The minimum length of an attribute value of the string type.
	MinLength *string `pulumi:"minLength"`
}

// UserPoolSchemaStringAttributeConstraintsInput is an input type that accepts UserPoolSchemaStringAttributeConstraintsArgs and UserPoolSchemaStringAttributeConstraintsOutput values.
// You can construct a concrete instance of `UserPoolSchemaStringAttributeConstraintsInput` via:
//
// 		 UserPoolSchemaStringAttributeConstraintsArgs{...}
//
type UserPoolSchemaStringAttributeConstraintsInput interface {
	pulumi.Input

	ToUserPoolSchemaStringAttributeConstraintsOutput() UserPoolSchemaStringAttributeConstraintsOutput
	ToUserPoolSchemaStringAttributeConstraintsOutputWithContext(context.Context) UserPoolSchemaStringAttributeConstraintsOutput
}

type UserPoolSchemaStringAttributeConstraintsArgs struct {
	// The maximum length of an attribute value of the string type.
	MaxLength pulumi.StringPtrInput `pulumi:"maxLength"`
	// The minimum length of an attribute value of the string type.
	MinLength pulumi.StringPtrInput `pulumi:"minLength"`
}

func (UserPoolSchemaStringAttributeConstraintsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolSchemaStringAttributeConstraints)(nil)).Elem()
}

func (i UserPoolSchemaStringAttributeConstraintsArgs) ToUserPoolSchemaStringAttributeConstraintsOutput() UserPoolSchemaStringAttributeConstraintsOutput {
	return i.ToUserPoolSchemaStringAttributeConstraintsOutputWithContext(context.Background())
}

func (i UserPoolSchemaStringAttributeConstraintsArgs) ToUserPoolSchemaStringAttributeConstraintsOutputWithContext(ctx context.Context) UserPoolSchemaStringAttributeConstraintsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSchemaStringAttributeConstraintsOutput)
}

func (i UserPoolSchemaStringAttributeConstraintsArgs) ToUserPoolSchemaStringAttributeConstraintsPtrOutput() UserPoolSchemaStringAttributeConstraintsPtrOutput {
	return i.ToUserPoolSchemaStringAttributeConstraintsPtrOutputWithContext(context.Background())
}

func (i UserPoolSchemaStringAttributeConstraintsArgs) ToUserPoolSchemaStringAttributeConstraintsPtrOutputWithContext(ctx context.Context) UserPoolSchemaStringAttributeConstraintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSchemaStringAttributeConstraintsOutput).ToUserPoolSchemaStringAttributeConstraintsPtrOutputWithContext(ctx)
}

// UserPoolSchemaStringAttributeConstraintsPtrInput is an input type that accepts UserPoolSchemaStringAttributeConstraintsArgs, UserPoolSchemaStringAttributeConstraintsPtr and UserPoolSchemaStringAttributeConstraintsPtrOutput values.
// You can construct a concrete instance of `UserPoolSchemaStringAttributeConstraintsPtrInput` via:
//
// 		 UserPoolSchemaStringAttributeConstraintsArgs{...}
//
//  or:
//
// 		 nil
//
type UserPoolSchemaStringAttributeConstraintsPtrInput interface {
	pulumi.Input

	ToUserPoolSchemaStringAttributeConstraintsPtrOutput() UserPoolSchemaStringAttributeConstraintsPtrOutput
	ToUserPoolSchemaStringAttributeConstraintsPtrOutputWithContext(context.Context) UserPoolSchemaStringAttributeConstraintsPtrOutput
}

type userPoolSchemaStringAttributeConstraintsPtrType UserPoolSchemaStringAttributeConstraintsArgs

func UserPoolSchemaStringAttributeConstraintsPtr(v *UserPoolSchemaStringAttributeConstraintsArgs) UserPoolSchemaStringAttributeConstraintsPtrInput {
	return (*userPoolSchemaStringAttributeConstraintsPtrType)(v)
}

func (*userPoolSchemaStringAttributeConstraintsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolSchemaStringAttributeConstraints)(nil)).Elem()
}

func (i *userPoolSchemaStringAttributeConstraintsPtrType) ToUserPoolSchemaStringAttributeConstraintsPtrOutput() UserPoolSchemaStringAttributeConstraintsPtrOutput {
	return i.ToUserPoolSchemaStringAttributeConstraintsPtrOutputWithContext(context.Background())
}

func (i *userPoolSchemaStringAttributeConstraintsPtrType) ToUserPoolSchemaStringAttributeConstraintsPtrOutputWithContext(ctx context.Context) UserPoolSchemaStringAttributeConstraintsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSchemaStringAttributeConstraintsPtrOutput)
}

type UserPoolSchemaStringAttributeConstraintsOutput struct{ *pulumi.OutputState }

func (UserPoolSchemaStringAttributeConstraintsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolSchemaStringAttributeConstraints)(nil)).Elem()
}

func (o UserPoolSchemaStringAttributeConstraintsOutput) ToUserPoolSchemaStringAttributeConstraintsOutput() UserPoolSchemaStringAttributeConstraintsOutput {
	return o
}

func (o UserPoolSchemaStringAttributeConstraintsOutput) ToUserPoolSchemaStringAttributeConstraintsOutputWithContext(ctx context.Context) UserPoolSchemaStringAttributeConstraintsOutput {
	return o
}

func (o UserPoolSchemaStringAttributeConstraintsOutput) ToUserPoolSchemaStringAttributeConstraintsPtrOutput() UserPoolSchemaStringAttributeConstraintsPtrOutput {
	return o.ToUserPoolSchemaStringAttributeConstraintsPtrOutputWithContext(context.Background())
}

func (o UserPoolSchemaStringAttributeConstraintsOutput) ToUserPoolSchemaStringAttributeConstraintsPtrOutputWithContext(ctx context.Context) UserPoolSchemaStringAttributeConstraintsPtrOutput {
	return o.ApplyT(func(v UserPoolSchemaStringAttributeConstraints) *UserPoolSchemaStringAttributeConstraints {
		return &v
	}).(UserPoolSchemaStringAttributeConstraintsPtrOutput)
}

// The maximum length of an attribute value of the string type.
func (o UserPoolSchemaStringAttributeConstraintsOutput) MaxLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolSchemaStringAttributeConstraints) *string { return v.MaxLength }).(pulumi.StringPtrOutput)
}

// The minimum length of an attribute value of the string type.
func (o UserPoolSchemaStringAttributeConstraintsOutput) MinLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolSchemaStringAttributeConstraints) *string { return v.MinLength }).(pulumi.StringPtrOutput)
}

type UserPoolSchemaStringAttributeConstraintsPtrOutput struct{ *pulumi.OutputState }

func (UserPoolSchemaStringAttributeConstraintsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolSchemaStringAttributeConstraints)(nil)).Elem()
}

func (o UserPoolSchemaStringAttributeConstraintsPtrOutput) ToUserPoolSchemaStringAttributeConstraintsPtrOutput() UserPoolSchemaStringAttributeConstraintsPtrOutput {
	return o
}

func (o UserPoolSchemaStringAttributeConstraintsPtrOutput) ToUserPoolSchemaStringAttributeConstraintsPtrOutputWithContext(ctx context.Context) UserPoolSchemaStringAttributeConstraintsPtrOutput {
	return o
}

func (o UserPoolSchemaStringAttributeConstraintsPtrOutput) Elem() UserPoolSchemaStringAttributeConstraintsOutput {
	return o.ApplyT(func(v *UserPoolSchemaStringAttributeConstraints) UserPoolSchemaStringAttributeConstraints { return *v }).(UserPoolSchemaStringAttributeConstraintsOutput)
}

// The maximum length of an attribute value of the string type.
func (o UserPoolSchemaStringAttributeConstraintsPtrOutput) MaxLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolSchemaStringAttributeConstraints) *string { return v.MaxLength }).(pulumi.StringPtrOutput)
}

// The minimum length of an attribute value of the string type.
func (o UserPoolSchemaStringAttributeConstraintsPtrOutput) MinLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolSchemaStringAttributeConstraints) *string { return v.MinLength }).(pulumi.StringPtrOutput)
}

type UserPoolSmsConfiguration struct {
	// The external ID used in IAM role trust relationships. For more information about using external IDs, see [How to Use an External ID When Granting Access to Your AWS Resources to a Third Party](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html).
	ExternalId string `pulumi:"externalId"`
	// The ARN of the Amazon SNS caller. This is usually the IAM role that you've given Cognito permission to assume.
	SnsCallerArn string `pulumi:"snsCallerArn"`
}

// UserPoolSmsConfigurationInput is an input type that accepts UserPoolSmsConfigurationArgs and UserPoolSmsConfigurationOutput values.
// You can construct a concrete instance of `UserPoolSmsConfigurationInput` via:
//
// 		 UserPoolSmsConfigurationArgs{...}
//
type UserPoolSmsConfigurationInput interface {
	pulumi.Input

	ToUserPoolSmsConfigurationOutput() UserPoolSmsConfigurationOutput
	ToUserPoolSmsConfigurationOutputWithContext(context.Context) UserPoolSmsConfigurationOutput
}

type UserPoolSmsConfigurationArgs struct {
	// The external ID used in IAM role trust relationships. For more information about using external IDs, see [How to Use an External ID When Granting Access to Your AWS Resources to a Third Party](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html).
	ExternalId pulumi.StringInput `pulumi:"externalId"`
	// The ARN of the Amazon SNS caller. This is usually the IAM role that you've given Cognito permission to assume.
	SnsCallerArn pulumi.StringInput `pulumi:"snsCallerArn"`
}

func (UserPoolSmsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolSmsConfiguration)(nil)).Elem()
}

func (i UserPoolSmsConfigurationArgs) ToUserPoolSmsConfigurationOutput() UserPoolSmsConfigurationOutput {
	return i.ToUserPoolSmsConfigurationOutputWithContext(context.Background())
}

func (i UserPoolSmsConfigurationArgs) ToUserPoolSmsConfigurationOutputWithContext(ctx context.Context) UserPoolSmsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSmsConfigurationOutput)
}

func (i UserPoolSmsConfigurationArgs) ToUserPoolSmsConfigurationPtrOutput() UserPoolSmsConfigurationPtrOutput {
	return i.ToUserPoolSmsConfigurationPtrOutputWithContext(context.Background())
}

func (i UserPoolSmsConfigurationArgs) ToUserPoolSmsConfigurationPtrOutputWithContext(ctx context.Context) UserPoolSmsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSmsConfigurationOutput).ToUserPoolSmsConfigurationPtrOutputWithContext(ctx)
}

// UserPoolSmsConfigurationPtrInput is an input type that accepts UserPoolSmsConfigurationArgs, UserPoolSmsConfigurationPtr and UserPoolSmsConfigurationPtrOutput values.
// You can construct a concrete instance of `UserPoolSmsConfigurationPtrInput` via:
//
// 		 UserPoolSmsConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type UserPoolSmsConfigurationPtrInput interface {
	pulumi.Input

	ToUserPoolSmsConfigurationPtrOutput() UserPoolSmsConfigurationPtrOutput
	ToUserPoolSmsConfigurationPtrOutputWithContext(context.Context) UserPoolSmsConfigurationPtrOutput
}

type userPoolSmsConfigurationPtrType UserPoolSmsConfigurationArgs

func UserPoolSmsConfigurationPtr(v *UserPoolSmsConfigurationArgs) UserPoolSmsConfigurationPtrInput {
	return (*userPoolSmsConfigurationPtrType)(v)
}

func (*userPoolSmsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolSmsConfiguration)(nil)).Elem()
}

func (i *userPoolSmsConfigurationPtrType) ToUserPoolSmsConfigurationPtrOutput() UserPoolSmsConfigurationPtrOutput {
	return i.ToUserPoolSmsConfigurationPtrOutputWithContext(context.Background())
}

func (i *userPoolSmsConfigurationPtrType) ToUserPoolSmsConfigurationPtrOutputWithContext(ctx context.Context) UserPoolSmsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSmsConfigurationPtrOutput)
}

type UserPoolSmsConfigurationOutput struct{ *pulumi.OutputState }

func (UserPoolSmsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolSmsConfiguration)(nil)).Elem()
}

func (o UserPoolSmsConfigurationOutput) ToUserPoolSmsConfigurationOutput() UserPoolSmsConfigurationOutput {
	return o
}

func (o UserPoolSmsConfigurationOutput) ToUserPoolSmsConfigurationOutputWithContext(ctx context.Context) UserPoolSmsConfigurationOutput {
	return o
}

func (o UserPoolSmsConfigurationOutput) ToUserPoolSmsConfigurationPtrOutput() UserPoolSmsConfigurationPtrOutput {
	return o.ToUserPoolSmsConfigurationPtrOutputWithContext(context.Background())
}

func (o UserPoolSmsConfigurationOutput) ToUserPoolSmsConfigurationPtrOutputWithContext(ctx context.Context) UserPoolSmsConfigurationPtrOutput {
	return o.ApplyT(func(v UserPoolSmsConfiguration) *UserPoolSmsConfiguration {
		return &v
	}).(UserPoolSmsConfigurationPtrOutput)
}

// The external ID used in IAM role trust relationships. For more information about using external IDs, see [How to Use an External ID When Granting Access to Your AWS Resources to a Third Party](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html).
func (o UserPoolSmsConfigurationOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolSmsConfiguration) string { return v.ExternalId }).(pulumi.StringOutput)
}

// The ARN of the Amazon SNS caller. This is usually the IAM role that you've given Cognito permission to assume.
func (o UserPoolSmsConfigurationOutput) SnsCallerArn() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolSmsConfiguration) string { return v.SnsCallerArn }).(pulumi.StringOutput)
}

type UserPoolSmsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (UserPoolSmsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolSmsConfiguration)(nil)).Elem()
}

func (o UserPoolSmsConfigurationPtrOutput) ToUserPoolSmsConfigurationPtrOutput() UserPoolSmsConfigurationPtrOutput {
	return o
}

func (o UserPoolSmsConfigurationPtrOutput) ToUserPoolSmsConfigurationPtrOutputWithContext(ctx context.Context) UserPoolSmsConfigurationPtrOutput {
	return o
}

func (o UserPoolSmsConfigurationPtrOutput) Elem() UserPoolSmsConfigurationOutput {
	return o.ApplyT(func(v *UserPoolSmsConfiguration) UserPoolSmsConfiguration { return *v }).(UserPoolSmsConfigurationOutput)
}

// The external ID used in IAM role trust relationships. For more information about using external IDs, see [How to Use an External ID When Granting Access to Your AWS Resources to a Third Party](http://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-user_externalid.html).
func (o UserPoolSmsConfigurationPtrOutput) ExternalId() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolSmsConfiguration) string { return v.ExternalId }).(pulumi.StringOutput)
}

// The ARN of the Amazon SNS caller. This is usually the IAM role that you've given Cognito permission to assume.
func (o UserPoolSmsConfigurationPtrOutput) SnsCallerArn() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolSmsConfiguration) string { return v.SnsCallerArn }).(pulumi.StringOutput)
}

type UserPoolSoftwareTokenMfaConfiguration struct {
	// Boolean whether to enable software token Multi-Factor (MFA) tokens, such as Time-based One-Time Password (TOTP). To disable software token MFA when `smsConfiguration` is not present, the `mfaConfiguration` argument must be set to `OFF` and the `softwareTokenMfaConfiguration` configuration block must be fully removed.
	Enabled bool `pulumi:"enabled"`
}

// UserPoolSoftwareTokenMfaConfigurationInput is an input type that accepts UserPoolSoftwareTokenMfaConfigurationArgs and UserPoolSoftwareTokenMfaConfigurationOutput values.
// You can construct a concrete instance of `UserPoolSoftwareTokenMfaConfigurationInput` via:
//
// 		 UserPoolSoftwareTokenMfaConfigurationArgs{...}
//
type UserPoolSoftwareTokenMfaConfigurationInput interface {
	pulumi.Input

	ToUserPoolSoftwareTokenMfaConfigurationOutput() UserPoolSoftwareTokenMfaConfigurationOutput
	ToUserPoolSoftwareTokenMfaConfigurationOutputWithContext(context.Context) UserPoolSoftwareTokenMfaConfigurationOutput
}

type UserPoolSoftwareTokenMfaConfigurationArgs struct {
	// Boolean whether to enable software token Multi-Factor (MFA) tokens, such as Time-based One-Time Password (TOTP). To disable software token MFA when `smsConfiguration` is not present, the `mfaConfiguration` argument must be set to `OFF` and the `softwareTokenMfaConfiguration` configuration block must be fully removed.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
}

func (UserPoolSoftwareTokenMfaConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolSoftwareTokenMfaConfiguration)(nil)).Elem()
}

func (i UserPoolSoftwareTokenMfaConfigurationArgs) ToUserPoolSoftwareTokenMfaConfigurationOutput() UserPoolSoftwareTokenMfaConfigurationOutput {
	return i.ToUserPoolSoftwareTokenMfaConfigurationOutputWithContext(context.Background())
}

func (i UserPoolSoftwareTokenMfaConfigurationArgs) ToUserPoolSoftwareTokenMfaConfigurationOutputWithContext(ctx context.Context) UserPoolSoftwareTokenMfaConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSoftwareTokenMfaConfigurationOutput)
}

func (i UserPoolSoftwareTokenMfaConfigurationArgs) ToUserPoolSoftwareTokenMfaConfigurationPtrOutput() UserPoolSoftwareTokenMfaConfigurationPtrOutput {
	return i.ToUserPoolSoftwareTokenMfaConfigurationPtrOutputWithContext(context.Background())
}

func (i UserPoolSoftwareTokenMfaConfigurationArgs) ToUserPoolSoftwareTokenMfaConfigurationPtrOutputWithContext(ctx context.Context) UserPoolSoftwareTokenMfaConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSoftwareTokenMfaConfigurationOutput).ToUserPoolSoftwareTokenMfaConfigurationPtrOutputWithContext(ctx)
}

// UserPoolSoftwareTokenMfaConfigurationPtrInput is an input type that accepts UserPoolSoftwareTokenMfaConfigurationArgs, UserPoolSoftwareTokenMfaConfigurationPtr and UserPoolSoftwareTokenMfaConfigurationPtrOutput values.
// You can construct a concrete instance of `UserPoolSoftwareTokenMfaConfigurationPtrInput` via:
//
// 		 UserPoolSoftwareTokenMfaConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type UserPoolSoftwareTokenMfaConfigurationPtrInput interface {
	pulumi.Input

	ToUserPoolSoftwareTokenMfaConfigurationPtrOutput() UserPoolSoftwareTokenMfaConfigurationPtrOutput
	ToUserPoolSoftwareTokenMfaConfigurationPtrOutputWithContext(context.Context) UserPoolSoftwareTokenMfaConfigurationPtrOutput
}

type userPoolSoftwareTokenMfaConfigurationPtrType UserPoolSoftwareTokenMfaConfigurationArgs

func UserPoolSoftwareTokenMfaConfigurationPtr(v *UserPoolSoftwareTokenMfaConfigurationArgs) UserPoolSoftwareTokenMfaConfigurationPtrInput {
	return (*userPoolSoftwareTokenMfaConfigurationPtrType)(v)
}

func (*userPoolSoftwareTokenMfaConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolSoftwareTokenMfaConfiguration)(nil)).Elem()
}

func (i *userPoolSoftwareTokenMfaConfigurationPtrType) ToUserPoolSoftwareTokenMfaConfigurationPtrOutput() UserPoolSoftwareTokenMfaConfigurationPtrOutput {
	return i.ToUserPoolSoftwareTokenMfaConfigurationPtrOutputWithContext(context.Background())
}

func (i *userPoolSoftwareTokenMfaConfigurationPtrType) ToUserPoolSoftwareTokenMfaConfigurationPtrOutputWithContext(ctx context.Context) UserPoolSoftwareTokenMfaConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolSoftwareTokenMfaConfigurationPtrOutput)
}

type UserPoolSoftwareTokenMfaConfigurationOutput struct{ *pulumi.OutputState }

func (UserPoolSoftwareTokenMfaConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolSoftwareTokenMfaConfiguration)(nil)).Elem()
}

func (o UserPoolSoftwareTokenMfaConfigurationOutput) ToUserPoolSoftwareTokenMfaConfigurationOutput() UserPoolSoftwareTokenMfaConfigurationOutput {
	return o
}

func (o UserPoolSoftwareTokenMfaConfigurationOutput) ToUserPoolSoftwareTokenMfaConfigurationOutputWithContext(ctx context.Context) UserPoolSoftwareTokenMfaConfigurationOutput {
	return o
}

func (o UserPoolSoftwareTokenMfaConfigurationOutput) ToUserPoolSoftwareTokenMfaConfigurationPtrOutput() UserPoolSoftwareTokenMfaConfigurationPtrOutput {
	return o.ToUserPoolSoftwareTokenMfaConfigurationPtrOutputWithContext(context.Background())
}

func (o UserPoolSoftwareTokenMfaConfigurationOutput) ToUserPoolSoftwareTokenMfaConfigurationPtrOutputWithContext(ctx context.Context) UserPoolSoftwareTokenMfaConfigurationPtrOutput {
	return o.ApplyT(func(v UserPoolSoftwareTokenMfaConfiguration) *UserPoolSoftwareTokenMfaConfiguration {
		return &v
	}).(UserPoolSoftwareTokenMfaConfigurationPtrOutput)
}

// Boolean whether to enable software token Multi-Factor (MFA) tokens, such as Time-based One-Time Password (TOTP). To disable software token MFA when `smsConfiguration` is not present, the `mfaConfiguration` argument must be set to `OFF` and the `softwareTokenMfaConfiguration` configuration block must be fully removed.
func (o UserPoolSoftwareTokenMfaConfigurationOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v UserPoolSoftwareTokenMfaConfiguration) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type UserPoolSoftwareTokenMfaConfigurationPtrOutput struct{ *pulumi.OutputState }

func (UserPoolSoftwareTokenMfaConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolSoftwareTokenMfaConfiguration)(nil)).Elem()
}

func (o UserPoolSoftwareTokenMfaConfigurationPtrOutput) ToUserPoolSoftwareTokenMfaConfigurationPtrOutput() UserPoolSoftwareTokenMfaConfigurationPtrOutput {
	return o
}

func (o UserPoolSoftwareTokenMfaConfigurationPtrOutput) ToUserPoolSoftwareTokenMfaConfigurationPtrOutputWithContext(ctx context.Context) UserPoolSoftwareTokenMfaConfigurationPtrOutput {
	return o
}

func (o UserPoolSoftwareTokenMfaConfigurationPtrOutput) Elem() UserPoolSoftwareTokenMfaConfigurationOutput {
	return o.ApplyT(func(v *UserPoolSoftwareTokenMfaConfiguration) UserPoolSoftwareTokenMfaConfiguration { return *v }).(UserPoolSoftwareTokenMfaConfigurationOutput)
}

// Boolean whether to enable software token Multi-Factor (MFA) tokens, such as Time-based One-Time Password (TOTP). To disable software token MFA when `smsConfiguration` is not present, the `mfaConfiguration` argument must be set to `OFF` and the `softwareTokenMfaConfiguration` configuration block must be fully removed.
func (o UserPoolSoftwareTokenMfaConfigurationPtrOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v UserPoolSoftwareTokenMfaConfiguration) bool { return v.Enabled }).(pulumi.BoolOutput)
}

type UserPoolUserPoolAddOns struct {
	// The mode for advanced security, must be one of `OFF`, `AUDIT` or `ENFORCED`.
	AdvancedSecurityMode string `pulumi:"advancedSecurityMode"`
}

// UserPoolUserPoolAddOnsInput is an input type that accepts UserPoolUserPoolAddOnsArgs and UserPoolUserPoolAddOnsOutput values.
// You can construct a concrete instance of `UserPoolUserPoolAddOnsInput` via:
//
// 		 UserPoolUserPoolAddOnsArgs{...}
//
type UserPoolUserPoolAddOnsInput interface {
	pulumi.Input

	ToUserPoolUserPoolAddOnsOutput() UserPoolUserPoolAddOnsOutput
	ToUserPoolUserPoolAddOnsOutputWithContext(context.Context) UserPoolUserPoolAddOnsOutput
}

type UserPoolUserPoolAddOnsArgs struct {
	// The mode for advanced security, must be one of `OFF`, `AUDIT` or `ENFORCED`.
	AdvancedSecurityMode pulumi.StringInput `pulumi:"advancedSecurityMode"`
}

func (UserPoolUserPoolAddOnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolUserPoolAddOns)(nil)).Elem()
}

func (i UserPoolUserPoolAddOnsArgs) ToUserPoolUserPoolAddOnsOutput() UserPoolUserPoolAddOnsOutput {
	return i.ToUserPoolUserPoolAddOnsOutputWithContext(context.Background())
}

func (i UserPoolUserPoolAddOnsArgs) ToUserPoolUserPoolAddOnsOutputWithContext(ctx context.Context) UserPoolUserPoolAddOnsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolUserPoolAddOnsOutput)
}

func (i UserPoolUserPoolAddOnsArgs) ToUserPoolUserPoolAddOnsPtrOutput() UserPoolUserPoolAddOnsPtrOutput {
	return i.ToUserPoolUserPoolAddOnsPtrOutputWithContext(context.Background())
}

func (i UserPoolUserPoolAddOnsArgs) ToUserPoolUserPoolAddOnsPtrOutputWithContext(ctx context.Context) UserPoolUserPoolAddOnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolUserPoolAddOnsOutput).ToUserPoolUserPoolAddOnsPtrOutputWithContext(ctx)
}

// UserPoolUserPoolAddOnsPtrInput is an input type that accepts UserPoolUserPoolAddOnsArgs, UserPoolUserPoolAddOnsPtr and UserPoolUserPoolAddOnsPtrOutput values.
// You can construct a concrete instance of `UserPoolUserPoolAddOnsPtrInput` via:
//
// 		 UserPoolUserPoolAddOnsArgs{...}
//
//  or:
//
// 		 nil
//
type UserPoolUserPoolAddOnsPtrInput interface {
	pulumi.Input

	ToUserPoolUserPoolAddOnsPtrOutput() UserPoolUserPoolAddOnsPtrOutput
	ToUserPoolUserPoolAddOnsPtrOutputWithContext(context.Context) UserPoolUserPoolAddOnsPtrOutput
}

type userPoolUserPoolAddOnsPtrType UserPoolUserPoolAddOnsArgs

func UserPoolUserPoolAddOnsPtr(v *UserPoolUserPoolAddOnsArgs) UserPoolUserPoolAddOnsPtrInput {
	return (*userPoolUserPoolAddOnsPtrType)(v)
}

func (*userPoolUserPoolAddOnsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolUserPoolAddOns)(nil)).Elem()
}

func (i *userPoolUserPoolAddOnsPtrType) ToUserPoolUserPoolAddOnsPtrOutput() UserPoolUserPoolAddOnsPtrOutput {
	return i.ToUserPoolUserPoolAddOnsPtrOutputWithContext(context.Background())
}

func (i *userPoolUserPoolAddOnsPtrType) ToUserPoolUserPoolAddOnsPtrOutputWithContext(ctx context.Context) UserPoolUserPoolAddOnsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolUserPoolAddOnsPtrOutput)
}

type UserPoolUserPoolAddOnsOutput struct{ *pulumi.OutputState }

func (UserPoolUserPoolAddOnsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolUserPoolAddOns)(nil)).Elem()
}

func (o UserPoolUserPoolAddOnsOutput) ToUserPoolUserPoolAddOnsOutput() UserPoolUserPoolAddOnsOutput {
	return o
}

func (o UserPoolUserPoolAddOnsOutput) ToUserPoolUserPoolAddOnsOutputWithContext(ctx context.Context) UserPoolUserPoolAddOnsOutput {
	return o
}

func (o UserPoolUserPoolAddOnsOutput) ToUserPoolUserPoolAddOnsPtrOutput() UserPoolUserPoolAddOnsPtrOutput {
	return o.ToUserPoolUserPoolAddOnsPtrOutputWithContext(context.Background())
}

func (o UserPoolUserPoolAddOnsOutput) ToUserPoolUserPoolAddOnsPtrOutputWithContext(ctx context.Context) UserPoolUserPoolAddOnsPtrOutput {
	return o.ApplyT(func(v UserPoolUserPoolAddOns) *UserPoolUserPoolAddOns {
		return &v
	}).(UserPoolUserPoolAddOnsPtrOutput)
}

// The mode for advanced security, must be one of `OFF`, `AUDIT` or `ENFORCED`.
func (o UserPoolUserPoolAddOnsOutput) AdvancedSecurityMode() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolUserPoolAddOns) string { return v.AdvancedSecurityMode }).(pulumi.StringOutput)
}

type UserPoolUserPoolAddOnsPtrOutput struct{ *pulumi.OutputState }

func (UserPoolUserPoolAddOnsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolUserPoolAddOns)(nil)).Elem()
}

func (o UserPoolUserPoolAddOnsPtrOutput) ToUserPoolUserPoolAddOnsPtrOutput() UserPoolUserPoolAddOnsPtrOutput {
	return o
}

func (o UserPoolUserPoolAddOnsPtrOutput) ToUserPoolUserPoolAddOnsPtrOutputWithContext(ctx context.Context) UserPoolUserPoolAddOnsPtrOutput {
	return o
}

func (o UserPoolUserPoolAddOnsPtrOutput) Elem() UserPoolUserPoolAddOnsOutput {
	return o.ApplyT(func(v *UserPoolUserPoolAddOns) UserPoolUserPoolAddOns { return *v }).(UserPoolUserPoolAddOnsOutput)
}

// The mode for advanced security, must be one of `OFF`, `AUDIT` or `ENFORCED`.
func (o UserPoolUserPoolAddOnsPtrOutput) AdvancedSecurityMode() pulumi.StringOutput {
	return o.ApplyT(func(v UserPoolUserPoolAddOns) string { return v.AdvancedSecurityMode }).(pulumi.StringOutput)
}

type UserPoolUsernameConfiguration struct {
	// Specifies whether username case sensitivity will be applied for all users in the user pool through Cognito APIs.
	CaseSensitive bool `pulumi:"caseSensitive"`
}

// UserPoolUsernameConfigurationInput is an input type that accepts UserPoolUsernameConfigurationArgs and UserPoolUsernameConfigurationOutput values.
// You can construct a concrete instance of `UserPoolUsernameConfigurationInput` via:
//
// 		 UserPoolUsernameConfigurationArgs{...}
//
type UserPoolUsernameConfigurationInput interface {
	pulumi.Input

	ToUserPoolUsernameConfigurationOutput() UserPoolUsernameConfigurationOutput
	ToUserPoolUsernameConfigurationOutputWithContext(context.Context) UserPoolUsernameConfigurationOutput
}

type UserPoolUsernameConfigurationArgs struct {
	// Specifies whether username case sensitivity will be applied for all users in the user pool through Cognito APIs.
	CaseSensitive pulumi.BoolInput `pulumi:"caseSensitive"`
}

func (UserPoolUsernameConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolUsernameConfiguration)(nil)).Elem()
}

func (i UserPoolUsernameConfigurationArgs) ToUserPoolUsernameConfigurationOutput() UserPoolUsernameConfigurationOutput {
	return i.ToUserPoolUsernameConfigurationOutputWithContext(context.Background())
}

func (i UserPoolUsernameConfigurationArgs) ToUserPoolUsernameConfigurationOutputWithContext(ctx context.Context) UserPoolUsernameConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolUsernameConfigurationOutput)
}

func (i UserPoolUsernameConfigurationArgs) ToUserPoolUsernameConfigurationPtrOutput() UserPoolUsernameConfigurationPtrOutput {
	return i.ToUserPoolUsernameConfigurationPtrOutputWithContext(context.Background())
}

func (i UserPoolUsernameConfigurationArgs) ToUserPoolUsernameConfigurationPtrOutputWithContext(ctx context.Context) UserPoolUsernameConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolUsernameConfigurationOutput).ToUserPoolUsernameConfigurationPtrOutputWithContext(ctx)
}

// UserPoolUsernameConfigurationPtrInput is an input type that accepts UserPoolUsernameConfigurationArgs, UserPoolUsernameConfigurationPtr and UserPoolUsernameConfigurationPtrOutput values.
// You can construct a concrete instance of `UserPoolUsernameConfigurationPtrInput` via:
//
// 		 UserPoolUsernameConfigurationArgs{...}
//
//  or:
//
// 		 nil
//
type UserPoolUsernameConfigurationPtrInput interface {
	pulumi.Input

	ToUserPoolUsernameConfigurationPtrOutput() UserPoolUsernameConfigurationPtrOutput
	ToUserPoolUsernameConfigurationPtrOutputWithContext(context.Context) UserPoolUsernameConfigurationPtrOutput
}

type userPoolUsernameConfigurationPtrType UserPoolUsernameConfigurationArgs

func UserPoolUsernameConfigurationPtr(v *UserPoolUsernameConfigurationArgs) UserPoolUsernameConfigurationPtrInput {
	return (*userPoolUsernameConfigurationPtrType)(v)
}

func (*userPoolUsernameConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolUsernameConfiguration)(nil)).Elem()
}

func (i *userPoolUsernameConfigurationPtrType) ToUserPoolUsernameConfigurationPtrOutput() UserPoolUsernameConfigurationPtrOutput {
	return i.ToUserPoolUsernameConfigurationPtrOutputWithContext(context.Background())
}

func (i *userPoolUsernameConfigurationPtrType) ToUserPoolUsernameConfigurationPtrOutputWithContext(ctx context.Context) UserPoolUsernameConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolUsernameConfigurationPtrOutput)
}

type UserPoolUsernameConfigurationOutput struct{ *pulumi.OutputState }

func (UserPoolUsernameConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolUsernameConfiguration)(nil)).Elem()
}

func (o UserPoolUsernameConfigurationOutput) ToUserPoolUsernameConfigurationOutput() UserPoolUsernameConfigurationOutput {
	return o
}

func (o UserPoolUsernameConfigurationOutput) ToUserPoolUsernameConfigurationOutputWithContext(ctx context.Context) UserPoolUsernameConfigurationOutput {
	return o
}

func (o UserPoolUsernameConfigurationOutput) ToUserPoolUsernameConfigurationPtrOutput() UserPoolUsernameConfigurationPtrOutput {
	return o.ToUserPoolUsernameConfigurationPtrOutputWithContext(context.Background())
}

func (o UserPoolUsernameConfigurationOutput) ToUserPoolUsernameConfigurationPtrOutputWithContext(ctx context.Context) UserPoolUsernameConfigurationPtrOutput {
	return o.ApplyT(func(v UserPoolUsernameConfiguration) *UserPoolUsernameConfiguration {
		return &v
	}).(UserPoolUsernameConfigurationPtrOutput)
}

// Specifies whether username case sensitivity will be applied for all users in the user pool through Cognito APIs.
func (o UserPoolUsernameConfigurationOutput) CaseSensitive() pulumi.BoolOutput {
	return o.ApplyT(func(v UserPoolUsernameConfiguration) bool { return v.CaseSensitive }).(pulumi.BoolOutput)
}

type UserPoolUsernameConfigurationPtrOutput struct{ *pulumi.OutputState }

func (UserPoolUsernameConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolUsernameConfiguration)(nil)).Elem()
}

func (o UserPoolUsernameConfigurationPtrOutput) ToUserPoolUsernameConfigurationPtrOutput() UserPoolUsernameConfigurationPtrOutput {
	return o
}

func (o UserPoolUsernameConfigurationPtrOutput) ToUserPoolUsernameConfigurationPtrOutputWithContext(ctx context.Context) UserPoolUsernameConfigurationPtrOutput {
	return o
}

func (o UserPoolUsernameConfigurationPtrOutput) Elem() UserPoolUsernameConfigurationOutput {
	return o.ApplyT(func(v *UserPoolUsernameConfiguration) UserPoolUsernameConfiguration { return *v }).(UserPoolUsernameConfigurationOutput)
}

// Specifies whether username case sensitivity will be applied for all users in the user pool through Cognito APIs.
func (o UserPoolUsernameConfigurationPtrOutput) CaseSensitive() pulumi.BoolOutput {
	return o.ApplyT(func(v UserPoolUsernameConfiguration) bool { return v.CaseSensitive }).(pulumi.BoolOutput)
}

type UserPoolVerificationMessageTemplate struct {
	// The default email option. Must be either `CONFIRM_WITH_CODE` or `CONFIRM_WITH_LINK`. Defaults to `CONFIRM_WITH_CODE`.
	DefaultEmailOption *string `pulumi:"defaultEmailOption"`
	// The email message template. Must contain the `{####}` placeholder. Conflicts with `emailVerificationMessage` argument.
	EmailMessage *string `pulumi:"emailMessage"`
	// The email message template for sending a confirmation link to the user, it must contain the `{##Click Here##}` placeholder.
	EmailMessageByLink *string `pulumi:"emailMessageByLink"`
	// The subject line for the email message template. Conflicts with `emailVerificationSubject` argument.
	EmailSubject *string `pulumi:"emailSubject"`
	// The subject line for the email message template for sending a confirmation link to the user.
	EmailSubjectByLink *string `pulumi:"emailSubjectByLink"`
	// The SMS message template. Must contain the `{####}` placeholder. Conflicts with `smsVerificationMessage` argument.
	SmsMessage *string `pulumi:"smsMessage"`
}

// UserPoolVerificationMessageTemplateInput is an input type that accepts UserPoolVerificationMessageTemplateArgs and UserPoolVerificationMessageTemplateOutput values.
// You can construct a concrete instance of `UserPoolVerificationMessageTemplateInput` via:
//
// 		 UserPoolVerificationMessageTemplateArgs{...}
//
type UserPoolVerificationMessageTemplateInput interface {
	pulumi.Input

	ToUserPoolVerificationMessageTemplateOutput() UserPoolVerificationMessageTemplateOutput
	ToUserPoolVerificationMessageTemplateOutputWithContext(context.Context) UserPoolVerificationMessageTemplateOutput
}

type UserPoolVerificationMessageTemplateArgs struct {
	// The default email option. Must be either `CONFIRM_WITH_CODE` or `CONFIRM_WITH_LINK`. Defaults to `CONFIRM_WITH_CODE`.
	DefaultEmailOption pulumi.StringPtrInput `pulumi:"defaultEmailOption"`
	// The email message template. Must contain the `{####}` placeholder. Conflicts with `emailVerificationMessage` argument.
	EmailMessage pulumi.StringPtrInput `pulumi:"emailMessage"`
	// The email message template for sending a confirmation link to the user, it must contain the `{##Click Here##}` placeholder.
	EmailMessageByLink pulumi.StringPtrInput `pulumi:"emailMessageByLink"`
	// The subject line for the email message template. Conflicts with `emailVerificationSubject` argument.
	EmailSubject pulumi.StringPtrInput `pulumi:"emailSubject"`
	// The subject line for the email message template for sending a confirmation link to the user.
	EmailSubjectByLink pulumi.StringPtrInput `pulumi:"emailSubjectByLink"`
	// The SMS message template. Must contain the `{####}` placeholder. Conflicts with `smsVerificationMessage` argument.
	SmsMessage pulumi.StringPtrInput `pulumi:"smsMessage"`
}

func (UserPoolVerificationMessageTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolVerificationMessageTemplate)(nil)).Elem()
}

func (i UserPoolVerificationMessageTemplateArgs) ToUserPoolVerificationMessageTemplateOutput() UserPoolVerificationMessageTemplateOutput {
	return i.ToUserPoolVerificationMessageTemplateOutputWithContext(context.Background())
}

func (i UserPoolVerificationMessageTemplateArgs) ToUserPoolVerificationMessageTemplateOutputWithContext(ctx context.Context) UserPoolVerificationMessageTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolVerificationMessageTemplateOutput)
}

func (i UserPoolVerificationMessageTemplateArgs) ToUserPoolVerificationMessageTemplatePtrOutput() UserPoolVerificationMessageTemplatePtrOutput {
	return i.ToUserPoolVerificationMessageTemplatePtrOutputWithContext(context.Background())
}

func (i UserPoolVerificationMessageTemplateArgs) ToUserPoolVerificationMessageTemplatePtrOutputWithContext(ctx context.Context) UserPoolVerificationMessageTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolVerificationMessageTemplateOutput).ToUserPoolVerificationMessageTemplatePtrOutputWithContext(ctx)
}

// UserPoolVerificationMessageTemplatePtrInput is an input type that accepts UserPoolVerificationMessageTemplateArgs, UserPoolVerificationMessageTemplatePtr and UserPoolVerificationMessageTemplatePtrOutput values.
// You can construct a concrete instance of `UserPoolVerificationMessageTemplatePtrInput` via:
//
// 		 UserPoolVerificationMessageTemplateArgs{...}
//
//  or:
//
// 		 nil
//
type UserPoolVerificationMessageTemplatePtrInput interface {
	pulumi.Input

	ToUserPoolVerificationMessageTemplatePtrOutput() UserPoolVerificationMessageTemplatePtrOutput
	ToUserPoolVerificationMessageTemplatePtrOutputWithContext(context.Context) UserPoolVerificationMessageTemplatePtrOutput
}

type userPoolVerificationMessageTemplatePtrType UserPoolVerificationMessageTemplateArgs

func UserPoolVerificationMessageTemplatePtr(v *UserPoolVerificationMessageTemplateArgs) UserPoolVerificationMessageTemplatePtrInput {
	return (*userPoolVerificationMessageTemplatePtrType)(v)
}

func (*userPoolVerificationMessageTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolVerificationMessageTemplate)(nil)).Elem()
}

func (i *userPoolVerificationMessageTemplatePtrType) ToUserPoolVerificationMessageTemplatePtrOutput() UserPoolVerificationMessageTemplatePtrOutput {
	return i.ToUserPoolVerificationMessageTemplatePtrOutputWithContext(context.Background())
}

func (i *userPoolVerificationMessageTemplatePtrType) ToUserPoolVerificationMessageTemplatePtrOutputWithContext(ctx context.Context) UserPoolVerificationMessageTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolVerificationMessageTemplatePtrOutput)
}

type UserPoolVerificationMessageTemplateOutput struct{ *pulumi.OutputState }

func (UserPoolVerificationMessageTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolVerificationMessageTemplate)(nil)).Elem()
}

func (o UserPoolVerificationMessageTemplateOutput) ToUserPoolVerificationMessageTemplateOutput() UserPoolVerificationMessageTemplateOutput {
	return o
}

func (o UserPoolVerificationMessageTemplateOutput) ToUserPoolVerificationMessageTemplateOutputWithContext(ctx context.Context) UserPoolVerificationMessageTemplateOutput {
	return o
}

func (o UserPoolVerificationMessageTemplateOutput) ToUserPoolVerificationMessageTemplatePtrOutput() UserPoolVerificationMessageTemplatePtrOutput {
	return o.ToUserPoolVerificationMessageTemplatePtrOutputWithContext(context.Background())
}

func (o UserPoolVerificationMessageTemplateOutput) ToUserPoolVerificationMessageTemplatePtrOutputWithContext(ctx context.Context) UserPoolVerificationMessageTemplatePtrOutput {
	return o.ApplyT(func(v UserPoolVerificationMessageTemplate) *UserPoolVerificationMessageTemplate {
		return &v
	}).(UserPoolVerificationMessageTemplatePtrOutput)
}

// The default email option. Must be either `CONFIRM_WITH_CODE` or `CONFIRM_WITH_LINK`. Defaults to `CONFIRM_WITH_CODE`.
func (o UserPoolVerificationMessageTemplateOutput) DefaultEmailOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolVerificationMessageTemplate) *string { return v.DefaultEmailOption }).(pulumi.StringPtrOutput)
}

// The email message template. Must contain the `{####}` placeholder. Conflicts with `emailVerificationMessage` argument.
func (o UserPoolVerificationMessageTemplateOutput) EmailMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolVerificationMessageTemplate) *string { return v.EmailMessage }).(pulumi.StringPtrOutput)
}

// The email message template for sending a confirmation link to the user, it must contain the `{##Click Here##}` placeholder.
func (o UserPoolVerificationMessageTemplateOutput) EmailMessageByLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolVerificationMessageTemplate) *string { return v.EmailMessageByLink }).(pulumi.StringPtrOutput)
}

// The subject line for the email message template. Conflicts with `emailVerificationSubject` argument.
func (o UserPoolVerificationMessageTemplateOutput) EmailSubject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolVerificationMessageTemplate) *string { return v.EmailSubject }).(pulumi.StringPtrOutput)
}

// The subject line for the email message template for sending a confirmation link to the user.
func (o UserPoolVerificationMessageTemplateOutput) EmailSubjectByLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolVerificationMessageTemplate) *string { return v.EmailSubjectByLink }).(pulumi.StringPtrOutput)
}

// The SMS message template. Must contain the `{####}` placeholder. Conflicts with `smsVerificationMessage` argument.
func (o UserPoolVerificationMessageTemplateOutput) SmsMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolVerificationMessageTemplate) *string { return v.SmsMessage }).(pulumi.StringPtrOutput)
}

type UserPoolVerificationMessageTemplatePtrOutput struct{ *pulumi.OutputState }

func (UserPoolVerificationMessageTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserPoolVerificationMessageTemplate)(nil)).Elem()
}

func (o UserPoolVerificationMessageTemplatePtrOutput) ToUserPoolVerificationMessageTemplatePtrOutput() UserPoolVerificationMessageTemplatePtrOutput {
	return o
}

func (o UserPoolVerificationMessageTemplatePtrOutput) ToUserPoolVerificationMessageTemplatePtrOutputWithContext(ctx context.Context) UserPoolVerificationMessageTemplatePtrOutput {
	return o
}

func (o UserPoolVerificationMessageTemplatePtrOutput) Elem() UserPoolVerificationMessageTemplateOutput {
	return o.ApplyT(func(v *UserPoolVerificationMessageTemplate) UserPoolVerificationMessageTemplate { return *v }).(UserPoolVerificationMessageTemplateOutput)
}

// The default email option. Must be either `CONFIRM_WITH_CODE` or `CONFIRM_WITH_LINK`. Defaults to `CONFIRM_WITH_CODE`.
func (o UserPoolVerificationMessageTemplatePtrOutput) DefaultEmailOption() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolVerificationMessageTemplate) *string { return v.DefaultEmailOption }).(pulumi.StringPtrOutput)
}

// The email message template. Must contain the `{####}` placeholder. Conflicts with `emailVerificationMessage` argument.
func (o UserPoolVerificationMessageTemplatePtrOutput) EmailMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolVerificationMessageTemplate) *string { return v.EmailMessage }).(pulumi.StringPtrOutput)
}

// The email message template for sending a confirmation link to the user, it must contain the `{##Click Here##}` placeholder.
func (o UserPoolVerificationMessageTemplatePtrOutput) EmailMessageByLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolVerificationMessageTemplate) *string { return v.EmailMessageByLink }).(pulumi.StringPtrOutput)
}

// The subject line for the email message template. Conflicts with `emailVerificationSubject` argument.
func (o UserPoolVerificationMessageTemplatePtrOutput) EmailSubject() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolVerificationMessageTemplate) *string { return v.EmailSubject }).(pulumi.StringPtrOutput)
}

// The subject line for the email message template for sending a confirmation link to the user.
func (o UserPoolVerificationMessageTemplatePtrOutput) EmailSubjectByLink() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolVerificationMessageTemplate) *string { return v.EmailSubjectByLink }).(pulumi.StringPtrOutput)
}

// The SMS message template. Must contain the `{####}` placeholder. Conflicts with `smsVerificationMessage` argument.
func (o UserPoolVerificationMessageTemplatePtrOutput) SmsMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v UserPoolVerificationMessageTemplate) *string { return v.SmsMessage }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(IdentityPoolCognitoIdentityProviderOutput{})
	pulumi.RegisterOutputType(IdentityPoolCognitoIdentityProviderArrayOutput{})
	pulumi.RegisterOutputType(IdentityPoolRoleAttachmentRoleMappingOutput{})
	pulumi.RegisterOutputType(IdentityPoolRoleAttachmentRoleMappingArrayOutput{})
	pulumi.RegisterOutputType(IdentityPoolRoleAttachmentRoleMappingMappingRuleOutput{})
	pulumi.RegisterOutputType(IdentityPoolRoleAttachmentRoleMappingMappingRuleArrayOutput{})
	pulumi.RegisterOutputType(IdentityPoolRoleAttachmentRolesOutput{})
	pulumi.RegisterOutputType(IdentityPoolRoleAttachmentRolesPtrOutput{})
	pulumi.RegisterOutputType(ResourceServerScopeOutput{})
	pulumi.RegisterOutputType(ResourceServerScopeArrayOutput{})
	pulumi.RegisterOutputType(UserPoolAdminCreateUserConfigOutput{})
	pulumi.RegisterOutputType(UserPoolAdminCreateUserConfigPtrOutput{})
	pulumi.RegisterOutputType(UserPoolAdminCreateUserConfigInviteMessageTemplateOutput{})
	pulumi.RegisterOutputType(UserPoolAdminCreateUserConfigInviteMessageTemplatePtrOutput{})
	pulumi.RegisterOutputType(UserPoolClientAnalyticsConfigurationOutput{})
	pulumi.RegisterOutputType(UserPoolClientAnalyticsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(UserPoolDeviceConfigurationOutput{})
	pulumi.RegisterOutputType(UserPoolDeviceConfigurationPtrOutput{})
	pulumi.RegisterOutputType(UserPoolEmailConfigurationOutput{})
	pulumi.RegisterOutputType(UserPoolEmailConfigurationPtrOutput{})
	pulumi.RegisterOutputType(UserPoolLambdaConfigOutput{})
	pulumi.RegisterOutputType(UserPoolLambdaConfigPtrOutput{})
	pulumi.RegisterOutputType(UserPoolPasswordPolicyOutput{})
	pulumi.RegisterOutputType(UserPoolPasswordPolicyPtrOutput{})
	pulumi.RegisterOutputType(UserPoolSchemaOutput{})
	pulumi.RegisterOutputType(UserPoolSchemaArrayOutput{})
	pulumi.RegisterOutputType(UserPoolSchemaNumberAttributeConstraintsOutput{})
	pulumi.RegisterOutputType(UserPoolSchemaNumberAttributeConstraintsPtrOutput{})
	pulumi.RegisterOutputType(UserPoolSchemaStringAttributeConstraintsOutput{})
	pulumi.RegisterOutputType(UserPoolSchemaStringAttributeConstraintsPtrOutput{})
	pulumi.RegisterOutputType(UserPoolSmsConfigurationOutput{})
	pulumi.RegisterOutputType(UserPoolSmsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(UserPoolSoftwareTokenMfaConfigurationOutput{})
	pulumi.RegisterOutputType(UserPoolSoftwareTokenMfaConfigurationPtrOutput{})
	pulumi.RegisterOutputType(UserPoolUserPoolAddOnsOutput{})
	pulumi.RegisterOutputType(UserPoolUserPoolAddOnsPtrOutput{})
	pulumi.RegisterOutputType(UserPoolUsernameConfigurationOutput{})
	pulumi.RegisterOutputType(UserPoolUsernameConfigurationPtrOutput{})
	pulumi.RegisterOutputType(UserPoolVerificationMessageTemplateOutput{})
	pulumi.RegisterOutputType(UserPoolVerificationMessageTemplatePtrOutput{})
}
