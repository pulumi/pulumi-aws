// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-aws/sdk/v6/go/aws/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Provides an AWS Cognito Identity Principal Mapping.
//
// ## Import
//
// Using `pulumi import`, import Cognito Identity Pool Roles Attachment using the Identity Pool ID and provider name. For example:
//
// ```sh
//
//	$ pulumi import aws:cognito/identityPoolProviderPrincipalTag:IdentityPoolProviderPrincipalTag example us-west-2_abc123:CorpAD
//
// ```
type IdentityPoolProviderPrincipalTag struct {
	pulumi.CustomResourceState

	// An identity pool ID.
	IdentityPoolId pulumi.StringOutput `pulumi:"identityPoolId"`
	// The name of the identity provider.
	IdentityProviderName pulumi.StringOutput `pulumi:"identityProviderName"`
	// String to string map of variables.
	PrincipalTags pulumi.StringMapOutput `pulumi:"principalTags"`
	// use default (username and clientID) attribute mappings.
	UseDefaults pulumi.BoolPtrOutput `pulumi:"useDefaults"`
}

// NewIdentityPoolProviderPrincipalTag registers a new resource with the given unique name, arguments, and options.
func NewIdentityPoolProviderPrincipalTag(ctx *pulumi.Context,
	name string, args *IdentityPoolProviderPrincipalTagArgs, opts ...pulumi.ResourceOption) (*IdentityPoolProviderPrincipalTag, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IdentityPoolId == nil {
		return nil, errors.New("invalid value for required argument 'IdentityPoolId'")
	}
	if args.IdentityProviderName == nil {
		return nil, errors.New("invalid value for required argument 'IdentityProviderName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource IdentityPoolProviderPrincipalTag
	err := ctx.RegisterResource("aws:cognito/identityPoolProviderPrincipalTag:IdentityPoolProviderPrincipalTag", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIdentityPoolProviderPrincipalTag gets an existing IdentityPoolProviderPrincipalTag resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIdentityPoolProviderPrincipalTag(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IdentityPoolProviderPrincipalTagState, opts ...pulumi.ResourceOption) (*IdentityPoolProviderPrincipalTag, error) {
	var resource IdentityPoolProviderPrincipalTag
	err := ctx.ReadResource("aws:cognito/identityPoolProviderPrincipalTag:IdentityPoolProviderPrincipalTag", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IdentityPoolProviderPrincipalTag resources.
type identityPoolProviderPrincipalTagState struct {
	// An identity pool ID.
	IdentityPoolId *string `pulumi:"identityPoolId"`
	// The name of the identity provider.
	IdentityProviderName *string `pulumi:"identityProviderName"`
	// String to string map of variables.
	PrincipalTags map[string]string `pulumi:"principalTags"`
	// use default (username and clientID) attribute mappings.
	UseDefaults *bool `pulumi:"useDefaults"`
}

type IdentityPoolProviderPrincipalTagState struct {
	// An identity pool ID.
	IdentityPoolId pulumi.StringPtrInput
	// The name of the identity provider.
	IdentityProviderName pulumi.StringPtrInput
	// String to string map of variables.
	PrincipalTags pulumi.StringMapInput
	// use default (username and clientID) attribute mappings.
	UseDefaults pulumi.BoolPtrInput
}

func (IdentityPoolProviderPrincipalTagState) ElementType() reflect.Type {
	return reflect.TypeOf((*identityPoolProviderPrincipalTagState)(nil)).Elem()
}

type identityPoolProviderPrincipalTagArgs struct {
	// An identity pool ID.
	IdentityPoolId string `pulumi:"identityPoolId"`
	// The name of the identity provider.
	IdentityProviderName string `pulumi:"identityProviderName"`
	// String to string map of variables.
	PrincipalTags map[string]string `pulumi:"principalTags"`
	// use default (username and clientID) attribute mappings.
	UseDefaults *bool `pulumi:"useDefaults"`
}

// The set of arguments for constructing a IdentityPoolProviderPrincipalTag resource.
type IdentityPoolProviderPrincipalTagArgs struct {
	// An identity pool ID.
	IdentityPoolId pulumi.StringInput
	// The name of the identity provider.
	IdentityProviderName pulumi.StringInput
	// String to string map of variables.
	PrincipalTags pulumi.StringMapInput
	// use default (username and clientID) attribute mappings.
	UseDefaults pulumi.BoolPtrInput
}

func (IdentityPoolProviderPrincipalTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*identityPoolProviderPrincipalTagArgs)(nil)).Elem()
}

type IdentityPoolProviderPrincipalTagInput interface {
	pulumi.Input

	ToIdentityPoolProviderPrincipalTagOutput() IdentityPoolProviderPrincipalTagOutput
	ToIdentityPoolProviderPrincipalTagOutputWithContext(ctx context.Context) IdentityPoolProviderPrincipalTagOutput
}

func (*IdentityPoolProviderPrincipalTag) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPoolProviderPrincipalTag)(nil)).Elem()
}

func (i *IdentityPoolProviderPrincipalTag) ToIdentityPoolProviderPrincipalTagOutput() IdentityPoolProviderPrincipalTagOutput {
	return i.ToIdentityPoolProviderPrincipalTagOutputWithContext(context.Background())
}

func (i *IdentityPoolProviderPrincipalTag) ToIdentityPoolProviderPrincipalTagOutputWithContext(ctx context.Context) IdentityPoolProviderPrincipalTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolProviderPrincipalTagOutput)
}

func (i *IdentityPoolProviderPrincipalTag) ToOutput(ctx context.Context) pulumix.Output[*IdentityPoolProviderPrincipalTag] {
	return pulumix.Output[*IdentityPoolProviderPrincipalTag]{
		OutputState: i.ToIdentityPoolProviderPrincipalTagOutputWithContext(ctx).OutputState,
	}
}

// IdentityPoolProviderPrincipalTagArrayInput is an input type that accepts IdentityPoolProviderPrincipalTagArray and IdentityPoolProviderPrincipalTagArrayOutput values.
// You can construct a concrete instance of `IdentityPoolProviderPrincipalTagArrayInput` via:
//
//	IdentityPoolProviderPrincipalTagArray{ IdentityPoolProviderPrincipalTagArgs{...} }
type IdentityPoolProviderPrincipalTagArrayInput interface {
	pulumi.Input

	ToIdentityPoolProviderPrincipalTagArrayOutput() IdentityPoolProviderPrincipalTagArrayOutput
	ToIdentityPoolProviderPrincipalTagArrayOutputWithContext(context.Context) IdentityPoolProviderPrincipalTagArrayOutput
}

type IdentityPoolProviderPrincipalTagArray []IdentityPoolProviderPrincipalTagInput

func (IdentityPoolProviderPrincipalTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdentityPoolProviderPrincipalTag)(nil)).Elem()
}

func (i IdentityPoolProviderPrincipalTagArray) ToIdentityPoolProviderPrincipalTagArrayOutput() IdentityPoolProviderPrincipalTagArrayOutput {
	return i.ToIdentityPoolProviderPrincipalTagArrayOutputWithContext(context.Background())
}

func (i IdentityPoolProviderPrincipalTagArray) ToIdentityPoolProviderPrincipalTagArrayOutputWithContext(ctx context.Context) IdentityPoolProviderPrincipalTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolProviderPrincipalTagArrayOutput)
}

func (i IdentityPoolProviderPrincipalTagArray) ToOutput(ctx context.Context) pulumix.Output[[]*IdentityPoolProviderPrincipalTag] {
	return pulumix.Output[[]*IdentityPoolProviderPrincipalTag]{
		OutputState: i.ToIdentityPoolProviderPrincipalTagArrayOutputWithContext(ctx).OutputState,
	}
}

// IdentityPoolProviderPrincipalTagMapInput is an input type that accepts IdentityPoolProviderPrincipalTagMap and IdentityPoolProviderPrincipalTagMapOutput values.
// You can construct a concrete instance of `IdentityPoolProviderPrincipalTagMapInput` via:
//
//	IdentityPoolProviderPrincipalTagMap{ "key": IdentityPoolProviderPrincipalTagArgs{...} }
type IdentityPoolProviderPrincipalTagMapInput interface {
	pulumi.Input

	ToIdentityPoolProviderPrincipalTagMapOutput() IdentityPoolProviderPrincipalTagMapOutput
	ToIdentityPoolProviderPrincipalTagMapOutputWithContext(context.Context) IdentityPoolProviderPrincipalTagMapOutput
}

type IdentityPoolProviderPrincipalTagMap map[string]IdentityPoolProviderPrincipalTagInput

func (IdentityPoolProviderPrincipalTagMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdentityPoolProviderPrincipalTag)(nil)).Elem()
}

func (i IdentityPoolProviderPrincipalTagMap) ToIdentityPoolProviderPrincipalTagMapOutput() IdentityPoolProviderPrincipalTagMapOutput {
	return i.ToIdentityPoolProviderPrincipalTagMapOutputWithContext(context.Background())
}

func (i IdentityPoolProviderPrincipalTagMap) ToIdentityPoolProviderPrincipalTagMapOutputWithContext(ctx context.Context) IdentityPoolProviderPrincipalTagMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IdentityPoolProviderPrincipalTagMapOutput)
}

func (i IdentityPoolProviderPrincipalTagMap) ToOutput(ctx context.Context) pulumix.Output[map[string]*IdentityPoolProviderPrincipalTag] {
	return pulumix.Output[map[string]*IdentityPoolProviderPrincipalTag]{
		OutputState: i.ToIdentityPoolProviderPrincipalTagMapOutputWithContext(ctx).OutputState,
	}
}

type IdentityPoolProviderPrincipalTagOutput struct{ *pulumi.OutputState }

func (IdentityPoolProviderPrincipalTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IdentityPoolProviderPrincipalTag)(nil)).Elem()
}

func (o IdentityPoolProviderPrincipalTagOutput) ToIdentityPoolProviderPrincipalTagOutput() IdentityPoolProviderPrincipalTagOutput {
	return o
}

func (o IdentityPoolProviderPrincipalTagOutput) ToIdentityPoolProviderPrincipalTagOutputWithContext(ctx context.Context) IdentityPoolProviderPrincipalTagOutput {
	return o
}

func (o IdentityPoolProviderPrincipalTagOutput) ToOutput(ctx context.Context) pulumix.Output[*IdentityPoolProviderPrincipalTag] {
	return pulumix.Output[*IdentityPoolProviderPrincipalTag]{
		OutputState: o.OutputState,
	}
}

// An identity pool ID.
func (o IdentityPoolProviderPrincipalTagOutput) IdentityPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPoolProviderPrincipalTag) pulumi.StringOutput { return v.IdentityPoolId }).(pulumi.StringOutput)
}

// The name of the identity provider.
func (o IdentityPoolProviderPrincipalTagOutput) IdentityProviderName() pulumi.StringOutput {
	return o.ApplyT(func(v *IdentityPoolProviderPrincipalTag) pulumi.StringOutput { return v.IdentityProviderName }).(pulumi.StringOutput)
}

// String to string map of variables.
func (o IdentityPoolProviderPrincipalTagOutput) PrincipalTags() pulumi.StringMapOutput {
	return o.ApplyT(func(v *IdentityPoolProviderPrincipalTag) pulumi.StringMapOutput { return v.PrincipalTags }).(pulumi.StringMapOutput)
}

// use default (username and clientID) attribute mappings.
func (o IdentityPoolProviderPrincipalTagOutput) UseDefaults() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IdentityPoolProviderPrincipalTag) pulumi.BoolPtrOutput { return v.UseDefaults }).(pulumi.BoolPtrOutput)
}

type IdentityPoolProviderPrincipalTagArrayOutput struct{ *pulumi.OutputState }

func (IdentityPoolProviderPrincipalTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IdentityPoolProviderPrincipalTag)(nil)).Elem()
}

func (o IdentityPoolProviderPrincipalTagArrayOutput) ToIdentityPoolProviderPrincipalTagArrayOutput() IdentityPoolProviderPrincipalTagArrayOutput {
	return o
}

func (o IdentityPoolProviderPrincipalTagArrayOutput) ToIdentityPoolProviderPrincipalTagArrayOutputWithContext(ctx context.Context) IdentityPoolProviderPrincipalTagArrayOutput {
	return o
}

func (o IdentityPoolProviderPrincipalTagArrayOutput) ToOutput(ctx context.Context) pulumix.Output[[]*IdentityPoolProviderPrincipalTag] {
	return pulumix.Output[[]*IdentityPoolProviderPrincipalTag]{
		OutputState: o.OutputState,
	}
}

func (o IdentityPoolProviderPrincipalTagArrayOutput) Index(i pulumi.IntInput) IdentityPoolProviderPrincipalTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IdentityPoolProviderPrincipalTag {
		return vs[0].([]*IdentityPoolProviderPrincipalTag)[vs[1].(int)]
	}).(IdentityPoolProviderPrincipalTagOutput)
}

type IdentityPoolProviderPrincipalTagMapOutput struct{ *pulumi.OutputState }

func (IdentityPoolProviderPrincipalTagMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IdentityPoolProviderPrincipalTag)(nil)).Elem()
}

func (o IdentityPoolProviderPrincipalTagMapOutput) ToIdentityPoolProviderPrincipalTagMapOutput() IdentityPoolProviderPrincipalTagMapOutput {
	return o
}

func (o IdentityPoolProviderPrincipalTagMapOutput) ToIdentityPoolProviderPrincipalTagMapOutputWithContext(ctx context.Context) IdentityPoolProviderPrincipalTagMapOutput {
	return o
}

func (o IdentityPoolProviderPrincipalTagMapOutput) ToOutput(ctx context.Context) pulumix.Output[map[string]*IdentityPoolProviderPrincipalTag] {
	return pulumix.Output[map[string]*IdentityPoolProviderPrincipalTag]{
		OutputState: o.OutputState,
	}
}

func (o IdentityPoolProviderPrincipalTagMapOutput) MapIndex(k pulumi.StringInput) IdentityPoolProviderPrincipalTagOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IdentityPoolProviderPrincipalTag {
		return vs[0].(map[string]*IdentityPoolProviderPrincipalTag)[vs[1].(string)]
	}).(IdentityPoolProviderPrincipalTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPoolProviderPrincipalTagInput)(nil)).Elem(), &IdentityPoolProviderPrincipalTag{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPoolProviderPrincipalTagArrayInput)(nil)).Elem(), IdentityPoolProviderPrincipalTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IdentityPoolProviderPrincipalTagMapInput)(nil)).Elem(), IdentityPoolProviderPrincipalTagMap{})
	pulumi.RegisterOutputType(IdentityPoolProviderPrincipalTagOutput{})
	pulumi.RegisterOutputType(IdentityPoolProviderPrincipalTagArrayOutput{})
	pulumi.RegisterOutputType(IdentityPoolProviderPrincipalTagMapOutput{})
}
