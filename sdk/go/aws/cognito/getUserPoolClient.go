// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupUserPoolClient(ctx *pulumi.Context, args *LookupUserPoolClientArgs, opts ...pulumi.InvokeOption) (*LookupUserPoolClientResult, error) {
	var rv LookupUserPoolClientResult
	err := ctx.Invoke("aws:cognito/getUserPoolClient:getUserPoolClient", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserPoolClient.
type LookupUserPoolClientArgs struct {
	ClientId   string `pulumi:"clientId"`
	UserPoolId string `pulumi:"userPoolId"`
}

// A collection of values returned by getUserPoolClient.
type LookupUserPoolClientResult struct {
	AccessTokenValidity                      int                                       `pulumi:"accessTokenValidity"`
	AllowedOauthFlows                        []string                                  `pulumi:"allowedOauthFlows"`
	AllowedOauthFlowsUserPoolClient          bool                                      `pulumi:"allowedOauthFlowsUserPoolClient"`
	AllowedOauthScopes                       []string                                  `pulumi:"allowedOauthScopes"`
	AnalyticsConfigurations                  []GetUserPoolClientAnalyticsConfiguration `pulumi:"analyticsConfigurations"`
	CallbackUrls                             []string                                  `pulumi:"callbackUrls"`
	ClientId                                 string                                    `pulumi:"clientId"`
	ClientSecret                             string                                    `pulumi:"clientSecret"`
	DefaultRedirectUri                       string                                    `pulumi:"defaultRedirectUri"`
	EnablePropagateAdditionalUserContextData bool                                      `pulumi:"enablePropagateAdditionalUserContextData"`
	EnableTokenRevocation                    bool                                      `pulumi:"enableTokenRevocation"`
	ExplicitAuthFlows                        []string                                  `pulumi:"explicitAuthFlows"`
	GenerateSecret                           bool                                      `pulumi:"generateSecret"`
	// The provider-assigned unique ID for this managed resource.
	Id                         string                               `pulumi:"id"`
	IdTokenValidity            int                                  `pulumi:"idTokenValidity"`
	LogoutUrls                 []string                             `pulumi:"logoutUrls"`
	Name                       string                               `pulumi:"name"`
	PreventUserExistenceErrors string                               `pulumi:"preventUserExistenceErrors"`
	ReadAttributes             []string                             `pulumi:"readAttributes"`
	RefreshTokenValidity       int                                  `pulumi:"refreshTokenValidity"`
	SupportedIdentityProviders []string                             `pulumi:"supportedIdentityProviders"`
	TokenValidityUnits         []GetUserPoolClientTokenValidityUnit `pulumi:"tokenValidityUnits"`
	UserPoolId                 string                               `pulumi:"userPoolId"`
	WriteAttributes            []string                             `pulumi:"writeAttributes"`
}

func LookupUserPoolClientOutput(ctx *pulumi.Context, args LookupUserPoolClientOutputArgs, opts ...pulumi.InvokeOption) LookupUserPoolClientResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupUserPoolClientResult, error) {
			args := v.(LookupUserPoolClientArgs)
			r, err := LookupUserPoolClient(ctx, &args, opts...)
			var s LookupUserPoolClientResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupUserPoolClientResultOutput)
}

// A collection of arguments for invoking getUserPoolClient.
type LookupUserPoolClientOutputArgs struct {
	ClientId   pulumi.StringInput `pulumi:"clientId"`
	UserPoolId pulumi.StringInput `pulumi:"userPoolId"`
}

func (LookupUserPoolClientOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserPoolClientArgs)(nil)).Elem()
}

// A collection of values returned by getUserPoolClient.
type LookupUserPoolClientResultOutput struct{ *pulumi.OutputState }

func (LookupUserPoolClientResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserPoolClientResult)(nil)).Elem()
}

func (o LookupUserPoolClientResultOutput) ToLookupUserPoolClientResultOutput() LookupUserPoolClientResultOutput {
	return o
}

func (o LookupUserPoolClientResultOutput) ToLookupUserPoolClientResultOutputWithContext(ctx context.Context) LookupUserPoolClientResultOutput {
	return o
}

func (o LookupUserPoolClientResultOutput) AccessTokenValidity() pulumi.IntOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) int { return v.AccessTokenValidity }).(pulumi.IntOutput)
}

func (o LookupUserPoolClientResultOutput) AllowedOauthFlows() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) []string { return v.AllowedOauthFlows }).(pulumi.StringArrayOutput)
}

func (o LookupUserPoolClientResultOutput) AllowedOauthFlowsUserPoolClient() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) bool { return v.AllowedOauthFlowsUserPoolClient }).(pulumi.BoolOutput)
}

func (o LookupUserPoolClientResultOutput) AllowedOauthScopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) []string { return v.AllowedOauthScopes }).(pulumi.StringArrayOutput)
}

func (o LookupUserPoolClientResultOutput) AnalyticsConfigurations() GetUserPoolClientAnalyticsConfigurationArrayOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) []GetUserPoolClientAnalyticsConfiguration {
		return v.AnalyticsConfigurations
	}).(GetUserPoolClientAnalyticsConfigurationArrayOutput)
}

func (o LookupUserPoolClientResultOutput) CallbackUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) []string { return v.CallbackUrls }).(pulumi.StringArrayOutput)
}

func (o LookupUserPoolClientResultOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) string { return v.ClientId }).(pulumi.StringOutput)
}

func (o LookupUserPoolClientResultOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) string { return v.ClientSecret }).(pulumi.StringOutput)
}

func (o LookupUserPoolClientResultOutput) DefaultRedirectUri() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) string { return v.DefaultRedirectUri }).(pulumi.StringOutput)
}

func (o LookupUserPoolClientResultOutput) EnablePropagateAdditionalUserContextData() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) bool { return v.EnablePropagateAdditionalUserContextData }).(pulumi.BoolOutput)
}

func (o LookupUserPoolClientResultOutput) EnableTokenRevocation() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) bool { return v.EnableTokenRevocation }).(pulumi.BoolOutput)
}

func (o LookupUserPoolClientResultOutput) ExplicitAuthFlows() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) []string { return v.ExplicitAuthFlows }).(pulumi.StringArrayOutput)
}

func (o LookupUserPoolClientResultOutput) GenerateSecret() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) bool { return v.GenerateSecret }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupUserPoolClientResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupUserPoolClientResultOutput) IdTokenValidity() pulumi.IntOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) int { return v.IdTokenValidity }).(pulumi.IntOutput)
}

func (o LookupUserPoolClientResultOutput) LogoutUrls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) []string { return v.LogoutUrls }).(pulumi.StringArrayOutput)
}

func (o LookupUserPoolClientResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupUserPoolClientResultOutput) PreventUserExistenceErrors() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) string { return v.PreventUserExistenceErrors }).(pulumi.StringOutput)
}

func (o LookupUserPoolClientResultOutput) ReadAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) []string { return v.ReadAttributes }).(pulumi.StringArrayOutput)
}

func (o LookupUserPoolClientResultOutput) RefreshTokenValidity() pulumi.IntOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) int { return v.RefreshTokenValidity }).(pulumi.IntOutput)
}

func (o LookupUserPoolClientResultOutput) SupportedIdentityProviders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) []string { return v.SupportedIdentityProviders }).(pulumi.StringArrayOutput)
}

func (o LookupUserPoolClientResultOutput) TokenValidityUnits() GetUserPoolClientTokenValidityUnitArrayOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) []GetUserPoolClientTokenValidityUnit { return v.TokenValidityUnits }).(GetUserPoolClientTokenValidityUnitArrayOutput)
}

func (o LookupUserPoolClientResultOutput) UserPoolId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) string { return v.UserPoolId }).(pulumi.StringOutput)
}

func (o LookupUserPoolClientResultOutput) WriteAttributes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUserPoolClientResult) []string { return v.WriteAttributes }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUserPoolClientResultOutput{})
}
