// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cur

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupReportDefinition(ctx *pulumi.Context, args *LookupReportDefinitionArgs, opts ...pulumi.InvokeOption) (*LookupReportDefinitionResult, error) {
	var rv LookupReportDefinitionResult
	err := ctx.Invoke("aws:cur/getReportDefinition:getReportDefinition", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getReportDefinition.
type LookupReportDefinitionArgs struct {
	ReportName string `pulumi:"reportName"`
}

// A collection of values returned by getReportDefinition.
type LookupReportDefinitionResult struct {
	AdditionalArtifacts      []string `pulumi:"additionalArtifacts"`
	AdditionalSchemaElements []string `pulumi:"additionalSchemaElements"`
	Compression              string   `pulumi:"compression"`
	Format                   string   `pulumi:"format"`
	// The provider-assigned unique ID for this managed resource.
	Id                   string `pulumi:"id"`
	RefreshClosedReports bool   `pulumi:"refreshClosedReports"`
	ReportName           string `pulumi:"reportName"`
	ReportVersioning     string `pulumi:"reportVersioning"`
	S3Bucket             string `pulumi:"s3Bucket"`
	S3Prefix             string `pulumi:"s3Prefix"`
	S3Region             string `pulumi:"s3Region"`
	TimeUnit             string `pulumi:"timeUnit"`
}

func LookupReportDefinitionOutput(ctx *pulumi.Context, args LookupReportDefinitionOutputArgs, opts ...pulumi.InvokeOption) LookupReportDefinitionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupReportDefinitionResult, error) {
			args := v.(LookupReportDefinitionArgs)
			r, err := LookupReportDefinition(ctx, &args, opts...)
			var s LookupReportDefinitionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupReportDefinitionResultOutput)
}

// A collection of arguments for invoking getReportDefinition.
type LookupReportDefinitionOutputArgs struct {
	ReportName pulumi.StringInput `pulumi:"reportName"`
}

func (LookupReportDefinitionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReportDefinitionArgs)(nil)).Elem()
}

// A collection of values returned by getReportDefinition.
type LookupReportDefinitionResultOutput struct{ *pulumi.OutputState }

func (LookupReportDefinitionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReportDefinitionResult)(nil)).Elem()
}

func (o LookupReportDefinitionResultOutput) ToLookupReportDefinitionResultOutput() LookupReportDefinitionResultOutput {
	return o
}

func (o LookupReportDefinitionResultOutput) ToLookupReportDefinitionResultOutputWithContext(ctx context.Context) LookupReportDefinitionResultOutput {
	return o
}

func (o LookupReportDefinitionResultOutput) AdditionalArtifacts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupReportDefinitionResult) []string { return v.AdditionalArtifacts }).(pulumi.StringArrayOutput)
}

func (o LookupReportDefinitionResultOutput) AdditionalSchemaElements() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupReportDefinitionResult) []string { return v.AdditionalSchemaElements }).(pulumi.StringArrayOutput)
}

func (o LookupReportDefinitionResultOutput) Compression() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReportDefinitionResult) string { return v.Compression }).(pulumi.StringOutput)
}

func (o LookupReportDefinitionResultOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReportDefinitionResult) string { return v.Format }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupReportDefinitionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReportDefinitionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupReportDefinitionResultOutput) RefreshClosedReports() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupReportDefinitionResult) bool { return v.RefreshClosedReports }).(pulumi.BoolOutput)
}

func (o LookupReportDefinitionResultOutput) ReportName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReportDefinitionResult) string { return v.ReportName }).(pulumi.StringOutput)
}

func (o LookupReportDefinitionResultOutput) ReportVersioning() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReportDefinitionResult) string { return v.ReportVersioning }).(pulumi.StringOutput)
}

func (o LookupReportDefinitionResultOutput) S3Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReportDefinitionResult) string { return v.S3Bucket }).(pulumi.StringOutput)
}

func (o LookupReportDefinitionResultOutput) S3Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReportDefinitionResult) string { return v.S3Prefix }).(pulumi.StringOutput)
}

func (o LookupReportDefinitionResultOutput) S3Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReportDefinitionResult) string { return v.S3Region }).(pulumi.StringOutput)
}

func (o LookupReportDefinitionResultOutput) TimeUnit() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReportDefinitionResult) string { return v.TimeUnit }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupReportDefinitionResultOutput{})
}
