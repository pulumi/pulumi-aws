// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fms

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type PolicyExcludeMap struct {
	// A list of AWS Organization member Accounts that you want to include for this AWS FMS Policy.
	Accounts []string `pulumi:"accounts"`
	// A list of AWS Organizational Units that you want to include for this AWS FMS Policy. Specifying an OU is the equivalent of specifying all accounts in the OU and in any of its child OUs, including any child OUs and accounts that are added at a later time.
	Orgunits []string `pulumi:"orgunits"`
}

// PolicyExcludeMapInput is an input type that accepts PolicyExcludeMap and PolicyExcludeMapOutput values.
// You can construct a concrete instance of `PolicyExcludeMapInput` via:
//
//          PolicyExcludeMap{ "key": PolicyExcludeArgs{...} }
type PolicyExcludeMapInput interface {
	pulumi.Input

	ToPolicyExcludeMapOutput() PolicyExcludeMapOutput
	ToPolicyExcludeMapOutputWithContext(context.Context) PolicyExcludeMapOutput
}

type PolicyExcludeMapArgs struct {
	// A list of AWS Organization member Accounts that you want to include for this AWS FMS Policy.
	Accounts pulumi.StringArrayInput `pulumi:"accounts"`
	// A list of AWS Organizational Units that you want to include for this AWS FMS Policy. Specifying an OU is the equivalent of specifying all accounts in the OU and in any of its child OUs, including any child OUs and accounts that are added at a later time.
	Orgunits pulumi.StringArrayInput `pulumi:"orgunits"`
}

func (PolicyExcludeMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyExcludeMap)(nil)).Elem()
}

func (i PolicyExcludeMapArgs) ToPolicyExcludeMapOutput() PolicyExcludeMapOutput {
	return i.ToPolicyExcludeMapOutputWithContext(context.Background())
}

func (i PolicyExcludeMapArgs) ToPolicyExcludeMapOutputWithContext(ctx context.Context) PolicyExcludeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyExcludeMapOutput)
}

func (i PolicyExcludeMapArgs) ToPolicyExcludeMapPtrOutput() PolicyExcludeMapPtrOutput {
	return i.ToPolicyExcludeMapPtrOutputWithContext(context.Background())
}

func (i PolicyExcludeMapArgs) ToPolicyExcludeMapPtrOutputWithContext(ctx context.Context) PolicyExcludeMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyExcludeMapOutput).ToPolicyExcludeMapPtrOutputWithContext(ctx)
}

// PolicyExcludeMapPtrInput is an input type that accepts PolicyExcludeMapArgs, PolicyExcludeMapPtr and PolicyExcludeMapPtrOutput values.
// You can construct a concrete instance of `PolicyExcludeMapPtrInput` via:
//
//          PolicyExcludeMapArgs{...}
//
//  or:
//
//          nil
type PolicyExcludeMapPtrInput interface {
	pulumi.Input

	ToPolicyExcludeMapPtrOutput() PolicyExcludeMapPtrOutput
	ToPolicyExcludeMapPtrOutputWithContext(context.Context) PolicyExcludeMapPtrOutput
}

type policyExcludeMapPtrType PolicyExcludeMapArgs

func PolicyExcludeMapPtr(v *PolicyExcludeMapArgs) PolicyExcludeMapPtrInput {
	return (*policyExcludeMapPtrType)(v)
}

func (*policyExcludeMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyExcludeMap)(nil)).Elem()
}

func (i *policyExcludeMapPtrType) ToPolicyExcludeMapPtrOutput() PolicyExcludeMapPtrOutput {
	return i.ToPolicyExcludeMapPtrOutputWithContext(context.Background())
}

func (i *policyExcludeMapPtrType) ToPolicyExcludeMapPtrOutputWithContext(ctx context.Context) PolicyExcludeMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyExcludeMapPtrOutput)
}

type PolicyExcludeMapOutput struct{ *pulumi.OutputState }

func (PolicyExcludeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyExcludeMap)(nil)).Elem()
}

func (o PolicyExcludeMapOutput) ToPolicyExcludeMapOutput() PolicyExcludeMapOutput {
	return o
}

func (o PolicyExcludeMapOutput) ToPolicyExcludeMapOutputWithContext(ctx context.Context) PolicyExcludeMapOutput {
	return o
}

func (o PolicyExcludeMapOutput) ToPolicyExcludeMapPtrOutput() PolicyExcludeMapPtrOutput {
	return o.ToPolicyExcludeMapPtrOutputWithContext(context.Background())
}

func (o PolicyExcludeMapOutput) ToPolicyExcludeMapPtrOutputWithContext(ctx context.Context) PolicyExcludeMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyExcludeMap) *PolicyExcludeMap {
		return &v
	}).(PolicyExcludeMapPtrOutput)
}

// A list of AWS Organization member Accounts that you want to include for this AWS FMS Policy.
func (o PolicyExcludeMapOutput) Accounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyExcludeMap) []string { return v.Accounts }).(pulumi.StringArrayOutput)
}

// A list of AWS Organizational Units that you want to include for this AWS FMS Policy. Specifying an OU is the equivalent of specifying all accounts in the OU and in any of its child OUs, including any child OUs and accounts that are added at a later time.
func (o PolicyExcludeMapOutput) Orgunits() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyExcludeMap) []string { return v.Orgunits }).(pulumi.StringArrayOutput)
}

type PolicyExcludeMapPtrOutput struct{ *pulumi.OutputState }

func (PolicyExcludeMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyExcludeMap)(nil)).Elem()
}

func (o PolicyExcludeMapPtrOutput) ToPolicyExcludeMapPtrOutput() PolicyExcludeMapPtrOutput {
	return o
}

func (o PolicyExcludeMapPtrOutput) ToPolicyExcludeMapPtrOutputWithContext(ctx context.Context) PolicyExcludeMapPtrOutput {
	return o
}

func (o PolicyExcludeMapPtrOutput) Elem() PolicyExcludeMapOutput {
	return o.ApplyT(func(v *PolicyExcludeMap) PolicyExcludeMap {
		if v != nil {
			return *v
		}
		var ret PolicyExcludeMap
		return ret
	}).(PolicyExcludeMapOutput)
}

// A list of AWS Organization member Accounts that you want to include for this AWS FMS Policy.
func (o PolicyExcludeMapPtrOutput) Accounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyExcludeMap) []string {
		if v == nil {
			return nil
		}
		return v.Accounts
	}).(pulumi.StringArrayOutput)
}

// A list of AWS Organizational Units that you want to include for this AWS FMS Policy. Specifying an OU is the equivalent of specifying all accounts in the OU and in any of its child OUs, including any child OUs and accounts that are added at a later time.
func (o PolicyExcludeMapPtrOutput) Orgunits() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyExcludeMap) []string {
		if v == nil {
			return nil
		}
		return v.Orgunits
	}).(pulumi.StringArrayOutput)
}

type PolicyIncludeMap struct {
	// A list of AWS Organization member Accounts that you want to include for this AWS FMS Policy.
	Accounts []string `pulumi:"accounts"`
	// A list of AWS Organizational Units that you want to include for this AWS FMS Policy. Specifying an OU is the equivalent of specifying all accounts in the OU and in any of its child OUs, including any child OUs and accounts that are added at a later time.
	Orgunits []string `pulumi:"orgunits"`
}

// PolicyIncludeMapInput is an input type that accepts PolicyIncludeMap and PolicyIncludeMapOutput values.
// You can construct a concrete instance of `PolicyIncludeMapInput` via:
//
//          PolicyIncludeMap{ "key": PolicyIncludeArgs{...} }
type PolicyIncludeMapInput interface {
	pulumi.Input

	ToPolicyIncludeMapOutput() PolicyIncludeMapOutput
	ToPolicyIncludeMapOutputWithContext(context.Context) PolicyIncludeMapOutput
}

type PolicyIncludeMapArgs struct {
	// A list of AWS Organization member Accounts that you want to include for this AWS FMS Policy.
	Accounts pulumi.StringArrayInput `pulumi:"accounts"`
	// A list of AWS Organizational Units that you want to include for this AWS FMS Policy. Specifying an OU is the equivalent of specifying all accounts in the OU and in any of its child OUs, including any child OUs and accounts that are added at a later time.
	Orgunits pulumi.StringArrayInput `pulumi:"orgunits"`
}

func (PolicyIncludeMapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyIncludeMap)(nil)).Elem()
}

func (i PolicyIncludeMapArgs) ToPolicyIncludeMapOutput() PolicyIncludeMapOutput {
	return i.ToPolicyIncludeMapOutputWithContext(context.Background())
}

func (i PolicyIncludeMapArgs) ToPolicyIncludeMapOutputWithContext(ctx context.Context) PolicyIncludeMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyIncludeMapOutput)
}

func (i PolicyIncludeMapArgs) ToPolicyIncludeMapPtrOutput() PolicyIncludeMapPtrOutput {
	return i.ToPolicyIncludeMapPtrOutputWithContext(context.Background())
}

func (i PolicyIncludeMapArgs) ToPolicyIncludeMapPtrOutputWithContext(ctx context.Context) PolicyIncludeMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyIncludeMapOutput).ToPolicyIncludeMapPtrOutputWithContext(ctx)
}

// PolicyIncludeMapPtrInput is an input type that accepts PolicyIncludeMapArgs, PolicyIncludeMapPtr and PolicyIncludeMapPtrOutput values.
// You can construct a concrete instance of `PolicyIncludeMapPtrInput` via:
//
//          PolicyIncludeMapArgs{...}
//
//  or:
//
//          nil
type PolicyIncludeMapPtrInput interface {
	pulumi.Input

	ToPolicyIncludeMapPtrOutput() PolicyIncludeMapPtrOutput
	ToPolicyIncludeMapPtrOutputWithContext(context.Context) PolicyIncludeMapPtrOutput
}

type policyIncludeMapPtrType PolicyIncludeMapArgs

func PolicyIncludeMapPtr(v *PolicyIncludeMapArgs) PolicyIncludeMapPtrInput {
	return (*policyIncludeMapPtrType)(v)
}

func (*policyIncludeMapPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyIncludeMap)(nil)).Elem()
}

func (i *policyIncludeMapPtrType) ToPolicyIncludeMapPtrOutput() PolicyIncludeMapPtrOutput {
	return i.ToPolicyIncludeMapPtrOutputWithContext(context.Background())
}

func (i *policyIncludeMapPtrType) ToPolicyIncludeMapPtrOutputWithContext(ctx context.Context) PolicyIncludeMapPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyIncludeMapPtrOutput)
}

type PolicyIncludeMapOutput struct{ *pulumi.OutputState }

func (PolicyIncludeMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyIncludeMap)(nil)).Elem()
}

func (o PolicyIncludeMapOutput) ToPolicyIncludeMapOutput() PolicyIncludeMapOutput {
	return o
}

func (o PolicyIncludeMapOutput) ToPolicyIncludeMapOutputWithContext(ctx context.Context) PolicyIncludeMapOutput {
	return o
}

func (o PolicyIncludeMapOutput) ToPolicyIncludeMapPtrOutput() PolicyIncludeMapPtrOutput {
	return o.ToPolicyIncludeMapPtrOutputWithContext(context.Background())
}

func (o PolicyIncludeMapOutput) ToPolicyIncludeMapPtrOutputWithContext(ctx context.Context) PolicyIncludeMapPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicyIncludeMap) *PolicyIncludeMap {
		return &v
	}).(PolicyIncludeMapPtrOutput)
}

// A list of AWS Organization member Accounts that you want to include for this AWS FMS Policy.
func (o PolicyIncludeMapOutput) Accounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyIncludeMap) []string { return v.Accounts }).(pulumi.StringArrayOutput)
}

// A list of AWS Organizational Units that you want to include for this AWS FMS Policy. Specifying an OU is the equivalent of specifying all accounts in the OU and in any of its child OUs, including any child OUs and accounts that are added at a later time.
func (o PolicyIncludeMapOutput) Orgunits() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyIncludeMap) []string { return v.Orgunits }).(pulumi.StringArrayOutput)
}

type PolicyIncludeMapPtrOutput struct{ *pulumi.OutputState }

func (PolicyIncludeMapPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicyIncludeMap)(nil)).Elem()
}

func (o PolicyIncludeMapPtrOutput) ToPolicyIncludeMapPtrOutput() PolicyIncludeMapPtrOutput {
	return o
}

func (o PolicyIncludeMapPtrOutput) ToPolicyIncludeMapPtrOutputWithContext(ctx context.Context) PolicyIncludeMapPtrOutput {
	return o
}

func (o PolicyIncludeMapPtrOutput) Elem() PolicyIncludeMapOutput {
	return o.ApplyT(func(v *PolicyIncludeMap) PolicyIncludeMap {
		if v != nil {
			return *v
		}
		var ret PolicyIncludeMap
		return ret
	}).(PolicyIncludeMapOutput)
}

// A list of AWS Organization member Accounts that you want to include for this AWS FMS Policy.
func (o PolicyIncludeMapPtrOutput) Accounts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyIncludeMap) []string {
		if v == nil {
			return nil
		}
		return v.Accounts
	}).(pulumi.StringArrayOutput)
}

// A list of AWS Organizational Units that you want to include for this AWS FMS Policy. Specifying an OU is the equivalent of specifying all accounts in the OU and in any of its child OUs, including any child OUs and accounts that are added at a later time.
func (o PolicyIncludeMapPtrOutput) Orgunits() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *PolicyIncludeMap) []string {
		if v == nil {
			return nil
		}
		return v.Orgunits
	}).(pulumi.StringArrayOutput)
}

type PolicySecurityServicePolicyData struct {
	// Details about the service that are specific to the service type, in JSON format. For service type `SHIELD_ADVANCED`, this is an empty string. Examples depending on `type` can be found in the [AWS Firewall Manager SecurityServicePolicyData API Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_SecurityServicePolicyData.html).
	ManagedServiceData *string `pulumi:"managedServiceData"`
	// The service that the policy is using to protect the resources. For the current list of supported types, please refer to the [AWS Firewall Manager SecurityServicePolicyData API Type Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_SecurityServicePolicyData.html#fms-Type-SecurityServicePolicyData-Type).
	Type string `pulumi:"type"`
}

// PolicySecurityServicePolicyDataInput is an input type that accepts PolicySecurityServicePolicyDataArgs and PolicySecurityServicePolicyDataOutput values.
// You can construct a concrete instance of `PolicySecurityServicePolicyDataInput` via:
//
//          PolicySecurityServicePolicyDataArgs{...}
type PolicySecurityServicePolicyDataInput interface {
	pulumi.Input

	ToPolicySecurityServicePolicyDataOutput() PolicySecurityServicePolicyDataOutput
	ToPolicySecurityServicePolicyDataOutputWithContext(context.Context) PolicySecurityServicePolicyDataOutput
}

type PolicySecurityServicePolicyDataArgs struct {
	// Details about the service that are specific to the service type, in JSON format. For service type `SHIELD_ADVANCED`, this is an empty string. Examples depending on `type` can be found in the [AWS Firewall Manager SecurityServicePolicyData API Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_SecurityServicePolicyData.html).
	ManagedServiceData pulumi.StringPtrInput `pulumi:"managedServiceData"`
	// The service that the policy is using to protect the resources. For the current list of supported types, please refer to the [AWS Firewall Manager SecurityServicePolicyData API Type Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_SecurityServicePolicyData.html#fms-Type-SecurityServicePolicyData-Type).
	Type pulumi.StringInput `pulumi:"type"`
}

func (PolicySecurityServicePolicyDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySecurityServicePolicyData)(nil)).Elem()
}

func (i PolicySecurityServicePolicyDataArgs) ToPolicySecurityServicePolicyDataOutput() PolicySecurityServicePolicyDataOutput {
	return i.ToPolicySecurityServicePolicyDataOutputWithContext(context.Background())
}

func (i PolicySecurityServicePolicyDataArgs) ToPolicySecurityServicePolicyDataOutputWithContext(ctx context.Context) PolicySecurityServicePolicyDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySecurityServicePolicyDataOutput)
}

func (i PolicySecurityServicePolicyDataArgs) ToPolicySecurityServicePolicyDataPtrOutput() PolicySecurityServicePolicyDataPtrOutput {
	return i.ToPolicySecurityServicePolicyDataPtrOutputWithContext(context.Background())
}

func (i PolicySecurityServicePolicyDataArgs) ToPolicySecurityServicePolicyDataPtrOutputWithContext(ctx context.Context) PolicySecurityServicePolicyDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySecurityServicePolicyDataOutput).ToPolicySecurityServicePolicyDataPtrOutputWithContext(ctx)
}

// PolicySecurityServicePolicyDataPtrInput is an input type that accepts PolicySecurityServicePolicyDataArgs, PolicySecurityServicePolicyDataPtr and PolicySecurityServicePolicyDataPtrOutput values.
// You can construct a concrete instance of `PolicySecurityServicePolicyDataPtrInput` via:
//
//          PolicySecurityServicePolicyDataArgs{...}
//
//  or:
//
//          nil
type PolicySecurityServicePolicyDataPtrInput interface {
	pulumi.Input

	ToPolicySecurityServicePolicyDataPtrOutput() PolicySecurityServicePolicyDataPtrOutput
	ToPolicySecurityServicePolicyDataPtrOutputWithContext(context.Context) PolicySecurityServicePolicyDataPtrOutput
}

type policySecurityServicePolicyDataPtrType PolicySecurityServicePolicyDataArgs

func PolicySecurityServicePolicyDataPtr(v *PolicySecurityServicePolicyDataArgs) PolicySecurityServicePolicyDataPtrInput {
	return (*policySecurityServicePolicyDataPtrType)(v)
}

func (*policySecurityServicePolicyDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySecurityServicePolicyData)(nil)).Elem()
}

func (i *policySecurityServicePolicyDataPtrType) ToPolicySecurityServicePolicyDataPtrOutput() PolicySecurityServicePolicyDataPtrOutput {
	return i.ToPolicySecurityServicePolicyDataPtrOutputWithContext(context.Background())
}

func (i *policySecurityServicePolicyDataPtrType) ToPolicySecurityServicePolicyDataPtrOutputWithContext(ctx context.Context) PolicySecurityServicePolicyDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicySecurityServicePolicyDataPtrOutput)
}

type PolicySecurityServicePolicyDataOutput struct{ *pulumi.OutputState }

func (PolicySecurityServicePolicyDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicySecurityServicePolicyData)(nil)).Elem()
}

func (o PolicySecurityServicePolicyDataOutput) ToPolicySecurityServicePolicyDataOutput() PolicySecurityServicePolicyDataOutput {
	return o
}

func (o PolicySecurityServicePolicyDataOutput) ToPolicySecurityServicePolicyDataOutputWithContext(ctx context.Context) PolicySecurityServicePolicyDataOutput {
	return o
}

func (o PolicySecurityServicePolicyDataOutput) ToPolicySecurityServicePolicyDataPtrOutput() PolicySecurityServicePolicyDataPtrOutput {
	return o.ToPolicySecurityServicePolicyDataPtrOutputWithContext(context.Background())
}

func (o PolicySecurityServicePolicyDataOutput) ToPolicySecurityServicePolicyDataPtrOutputWithContext(ctx context.Context) PolicySecurityServicePolicyDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v PolicySecurityServicePolicyData) *PolicySecurityServicePolicyData {
		return &v
	}).(PolicySecurityServicePolicyDataPtrOutput)
}

// Details about the service that are specific to the service type, in JSON format. For service type `SHIELD_ADVANCED`, this is an empty string. Examples depending on `type` can be found in the [AWS Firewall Manager SecurityServicePolicyData API Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_SecurityServicePolicyData.html).
func (o PolicySecurityServicePolicyDataOutput) ManagedServiceData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicySecurityServicePolicyData) *string { return v.ManagedServiceData }).(pulumi.StringPtrOutput)
}

// The service that the policy is using to protect the resources. For the current list of supported types, please refer to the [AWS Firewall Manager SecurityServicePolicyData API Type Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_SecurityServicePolicyData.html#fms-Type-SecurityServicePolicyData-Type).
func (o PolicySecurityServicePolicyDataOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v PolicySecurityServicePolicyData) string { return v.Type }).(pulumi.StringOutput)
}

type PolicySecurityServicePolicyDataPtrOutput struct{ *pulumi.OutputState }

func (PolicySecurityServicePolicyDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PolicySecurityServicePolicyData)(nil)).Elem()
}

func (o PolicySecurityServicePolicyDataPtrOutput) ToPolicySecurityServicePolicyDataPtrOutput() PolicySecurityServicePolicyDataPtrOutput {
	return o
}

func (o PolicySecurityServicePolicyDataPtrOutput) ToPolicySecurityServicePolicyDataPtrOutputWithContext(ctx context.Context) PolicySecurityServicePolicyDataPtrOutput {
	return o
}

func (o PolicySecurityServicePolicyDataPtrOutput) Elem() PolicySecurityServicePolicyDataOutput {
	return o.ApplyT(func(v *PolicySecurityServicePolicyData) PolicySecurityServicePolicyData {
		if v != nil {
			return *v
		}
		var ret PolicySecurityServicePolicyData
		return ret
	}).(PolicySecurityServicePolicyDataOutput)
}

// Details about the service that are specific to the service type, in JSON format. For service type `SHIELD_ADVANCED`, this is an empty string. Examples depending on `type` can be found in the [AWS Firewall Manager SecurityServicePolicyData API Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_SecurityServicePolicyData.html).
func (o PolicySecurityServicePolicyDataPtrOutput) ManagedServiceData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySecurityServicePolicyData) *string {
		if v == nil {
			return nil
		}
		return v.ManagedServiceData
	}).(pulumi.StringPtrOutput)
}

// The service that the policy is using to protect the resources. For the current list of supported types, please refer to the [AWS Firewall Manager SecurityServicePolicyData API Type Reference](https://docs.aws.amazon.com/fms/2018-01-01/APIReference/API_SecurityServicePolicyData.html#fms-Type-SecurityServicePolicyData-Type).
func (o PolicySecurityServicePolicyDataPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PolicySecurityServicePolicyData) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyExcludeMapInput)(nil)).Elem(), PolicyExcludeMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyExcludeMapPtrInput)(nil)).Elem(), PolicyExcludeMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyIncludeMapInput)(nil)).Elem(), PolicyIncludeMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyIncludeMapPtrInput)(nil)).Elem(), PolicyIncludeMapArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySecurityServicePolicyDataInput)(nil)).Elem(), PolicySecurityServicePolicyDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicySecurityServicePolicyDataPtrInput)(nil)).Elem(), PolicySecurityServicePolicyDataArgs{})
	pulumi.RegisterOutputType(PolicyExcludeMapOutput{})
	pulumi.RegisterOutputType(PolicyExcludeMapPtrOutput{})
	pulumi.RegisterOutputType(PolicyIncludeMapOutput{})
	pulumi.RegisterOutputType(PolicyIncludeMapPtrOutput{})
	pulumi.RegisterOutputType(PolicySecurityServicePolicyDataOutput{})
	pulumi.RegisterOutputType(PolicySecurityServicePolicyDataPtrOutput{})
}
