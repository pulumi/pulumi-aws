// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package macie2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to manage an [Amazon Macie Classification Export Configuration](https://docs.aws.amazon.com/macie/latest/APIReference/classification-export-configuration.html).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-aws/sdk/v5/go/aws/macie2"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleAccount, err := macie2.NewAccount(ctx, "exampleAccount", nil)
//			if err != nil {
//				return err
//			}
//			_, err = macie2.NewClassificationExportConfiguration(ctx, "exampleClassificationExportConfiguration", &macie2.ClassificationExportConfigurationArgs{
//				S3Destination: &macie2.ClassificationExportConfigurationS3DestinationArgs{
//					BucketName: pulumi.Any(aws_s3_bucket.Example.Bucket),
//					KeyPrefix:  pulumi.String("exampleprefix/"),
//					KmsKeyArn:  pulumi.Any(aws_kms_key.Example.Arn),
//				},
//			}, pulumi.DependsOn([]pulumi.Resource{
//				exampleAccount,
//			}))
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// `aws_macie2_classification_export_configuration` can be imported using the account ID and region, e.g.,
//
// ```sh
//
//	$ pulumi import aws:macie2/classificationExportConfiguration:ClassificationExportConfiguration example 123456789012:us-west-2
//
// ```
type ClassificationExportConfiguration struct {
	pulumi.CustomResourceState

	// Configuration block for a S3 Destination. Defined below
	S3Destination ClassificationExportConfigurationS3DestinationPtrOutput `pulumi:"s3Destination"`
}

// NewClassificationExportConfiguration registers a new resource with the given unique name, arguments, and options.
func NewClassificationExportConfiguration(ctx *pulumi.Context,
	name string, args *ClassificationExportConfigurationArgs, opts ...pulumi.ResourceOption) (*ClassificationExportConfiguration, error) {
	if args == nil {
		args = &ClassificationExportConfigurationArgs{}
	}

	var resource ClassificationExportConfiguration
	err := ctx.RegisterResource("aws:macie2/classificationExportConfiguration:ClassificationExportConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetClassificationExportConfiguration gets an existing ClassificationExportConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetClassificationExportConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ClassificationExportConfigurationState, opts ...pulumi.ResourceOption) (*ClassificationExportConfiguration, error) {
	var resource ClassificationExportConfiguration
	err := ctx.ReadResource("aws:macie2/classificationExportConfiguration:ClassificationExportConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ClassificationExportConfiguration resources.
type classificationExportConfigurationState struct {
	// Configuration block for a S3 Destination. Defined below
	S3Destination *ClassificationExportConfigurationS3Destination `pulumi:"s3Destination"`
}

type ClassificationExportConfigurationState struct {
	// Configuration block for a S3 Destination. Defined below
	S3Destination ClassificationExportConfigurationS3DestinationPtrInput
}

func (ClassificationExportConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*classificationExportConfigurationState)(nil)).Elem()
}

type classificationExportConfigurationArgs struct {
	// Configuration block for a S3 Destination. Defined below
	S3Destination *ClassificationExportConfigurationS3Destination `pulumi:"s3Destination"`
}

// The set of arguments for constructing a ClassificationExportConfiguration resource.
type ClassificationExportConfigurationArgs struct {
	// Configuration block for a S3 Destination. Defined below
	S3Destination ClassificationExportConfigurationS3DestinationPtrInput
}

func (ClassificationExportConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*classificationExportConfigurationArgs)(nil)).Elem()
}

type ClassificationExportConfigurationInput interface {
	pulumi.Input

	ToClassificationExportConfigurationOutput() ClassificationExportConfigurationOutput
	ToClassificationExportConfigurationOutputWithContext(ctx context.Context) ClassificationExportConfigurationOutput
}

func (*ClassificationExportConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((**ClassificationExportConfiguration)(nil)).Elem()
}

func (i *ClassificationExportConfiguration) ToClassificationExportConfigurationOutput() ClassificationExportConfigurationOutput {
	return i.ToClassificationExportConfigurationOutputWithContext(context.Background())
}

func (i *ClassificationExportConfiguration) ToClassificationExportConfigurationOutputWithContext(ctx context.Context) ClassificationExportConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClassificationExportConfigurationOutput)
}

// ClassificationExportConfigurationArrayInput is an input type that accepts ClassificationExportConfigurationArray and ClassificationExportConfigurationArrayOutput values.
// You can construct a concrete instance of `ClassificationExportConfigurationArrayInput` via:
//
//	ClassificationExportConfigurationArray{ ClassificationExportConfigurationArgs{...} }
type ClassificationExportConfigurationArrayInput interface {
	pulumi.Input

	ToClassificationExportConfigurationArrayOutput() ClassificationExportConfigurationArrayOutput
	ToClassificationExportConfigurationArrayOutputWithContext(context.Context) ClassificationExportConfigurationArrayOutput
}

type ClassificationExportConfigurationArray []ClassificationExportConfigurationInput

func (ClassificationExportConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClassificationExportConfiguration)(nil)).Elem()
}

func (i ClassificationExportConfigurationArray) ToClassificationExportConfigurationArrayOutput() ClassificationExportConfigurationArrayOutput {
	return i.ToClassificationExportConfigurationArrayOutputWithContext(context.Background())
}

func (i ClassificationExportConfigurationArray) ToClassificationExportConfigurationArrayOutputWithContext(ctx context.Context) ClassificationExportConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClassificationExportConfigurationArrayOutput)
}

// ClassificationExportConfigurationMapInput is an input type that accepts ClassificationExportConfigurationMap and ClassificationExportConfigurationMapOutput values.
// You can construct a concrete instance of `ClassificationExportConfigurationMapInput` via:
//
//	ClassificationExportConfigurationMap{ "key": ClassificationExportConfigurationArgs{...} }
type ClassificationExportConfigurationMapInput interface {
	pulumi.Input

	ToClassificationExportConfigurationMapOutput() ClassificationExportConfigurationMapOutput
	ToClassificationExportConfigurationMapOutputWithContext(context.Context) ClassificationExportConfigurationMapOutput
}

type ClassificationExportConfigurationMap map[string]ClassificationExportConfigurationInput

func (ClassificationExportConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClassificationExportConfiguration)(nil)).Elem()
}

func (i ClassificationExportConfigurationMap) ToClassificationExportConfigurationMapOutput() ClassificationExportConfigurationMapOutput {
	return i.ToClassificationExportConfigurationMapOutputWithContext(context.Background())
}

func (i ClassificationExportConfigurationMap) ToClassificationExportConfigurationMapOutputWithContext(ctx context.Context) ClassificationExportConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClassificationExportConfigurationMapOutput)
}

type ClassificationExportConfigurationOutput struct{ *pulumi.OutputState }

func (ClassificationExportConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClassificationExportConfiguration)(nil)).Elem()
}

func (o ClassificationExportConfigurationOutput) ToClassificationExportConfigurationOutput() ClassificationExportConfigurationOutput {
	return o
}

func (o ClassificationExportConfigurationOutput) ToClassificationExportConfigurationOutputWithContext(ctx context.Context) ClassificationExportConfigurationOutput {
	return o
}

// Configuration block for a S3 Destination. Defined below
func (o ClassificationExportConfigurationOutput) S3Destination() ClassificationExportConfigurationS3DestinationPtrOutput {
	return o.ApplyT(func(v *ClassificationExportConfiguration) ClassificationExportConfigurationS3DestinationPtrOutput {
		return v.S3Destination
	}).(ClassificationExportConfigurationS3DestinationPtrOutput)
}

type ClassificationExportConfigurationArrayOutput struct{ *pulumi.OutputState }

func (ClassificationExportConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ClassificationExportConfiguration)(nil)).Elem()
}

func (o ClassificationExportConfigurationArrayOutput) ToClassificationExportConfigurationArrayOutput() ClassificationExportConfigurationArrayOutput {
	return o
}

func (o ClassificationExportConfigurationArrayOutput) ToClassificationExportConfigurationArrayOutputWithContext(ctx context.Context) ClassificationExportConfigurationArrayOutput {
	return o
}

func (o ClassificationExportConfigurationArrayOutput) Index(i pulumi.IntInput) ClassificationExportConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ClassificationExportConfiguration {
		return vs[0].([]*ClassificationExportConfiguration)[vs[1].(int)]
	}).(ClassificationExportConfigurationOutput)
}

type ClassificationExportConfigurationMapOutput struct{ *pulumi.OutputState }

func (ClassificationExportConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ClassificationExportConfiguration)(nil)).Elem()
}

func (o ClassificationExportConfigurationMapOutput) ToClassificationExportConfigurationMapOutput() ClassificationExportConfigurationMapOutput {
	return o
}

func (o ClassificationExportConfigurationMapOutput) ToClassificationExportConfigurationMapOutputWithContext(ctx context.Context) ClassificationExportConfigurationMapOutput {
	return o
}

func (o ClassificationExportConfigurationMapOutput) MapIndex(k pulumi.StringInput) ClassificationExportConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ClassificationExportConfiguration {
		return vs[0].(map[string]*ClassificationExportConfiguration)[vs[1].(string)]
	}).(ClassificationExportConfigurationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClassificationExportConfigurationInput)(nil)).Elem(), &ClassificationExportConfiguration{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClassificationExportConfigurationArrayInput)(nil)).Elem(), ClassificationExportConfigurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClassificationExportConfigurationMapInput)(nil)).Elem(), ClassificationExportConfigurationMap{})
	pulumi.RegisterOutputType(ClassificationExportConfigurationOutput{})
	pulumi.RegisterOutputType(ClassificationExportConfigurationArrayOutput{})
	pulumi.RegisterOutputType(ClassificationExportConfigurationMapOutput{})
}
