// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package macie2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a resource to manage an [Amazon Macie Invitation Accepter](https://docs.aws.amazon.com/macie/latest/APIReference/invitations-accept.html).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/macie2"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		primaryAccount, err := macie2.NewAccount(ctx, "primaryAccount", nil, pulumi.Provider("awsalternate"))
// 		if err != nil {
// 			return err
// 		}
// 		_, err = macie2.NewAccount(ctx, "memberAccount", nil)
// 		if err != nil {
// 			return err
// 		}
// 		primaryMember, err := macie2.NewMember(ctx, "primaryMember", &macie2.MemberArgs{
// 			AccountId:         pulumi.String("ACCOUNT ID"),
// 			Email:             pulumi.String("EMAIL"),
// 			Invite:            pulumi.Bool(true),
// 			InvitationMessage: pulumi.String("Message of the invite"),
// 		}, pulumi.Provider("awsalternate"), pulumi.DependsOn([]pulumi.Resource{
// 			primaryAccount,
// 		}))
// 		if err != nil {
// 			return err
// 		}
// 		_, err = macie2.NewInvitationAccepter(ctx, "memberInvitationAccepter", &macie2.InvitationAccepterArgs{
// 			AdministratorAccountId: pulumi.String("ADMINISTRATOR ACCOUNT ID"),
// 		}, pulumi.DependsOn([]pulumi.Resource{
// 			primaryMember,
// 		}))
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// `aws_macie2_invitation_accepter` can be imported using the admin account ID, e.g.,
//
// ```sh
//  $ pulumi import aws:macie2/invitationAccepter:InvitationAccepter example 123456789012
// ```
type InvitationAccepter struct {
	pulumi.CustomResourceState

	// The AWS account ID for the account that sent the invitation.
	AdministratorAccountId pulumi.StringOutput `pulumi:"administratorAccountId"`
	// The unique identifier for the invitation.
	InvitationId pulumi.StringOutput `pulumi:"invitationId"`
}

// NewInvitationAccepter registers a new resource with the given unique name, arguments, and options.
func NewInvitationAccepter(ctx *pulumi.Context,
	name string, args *InvitationAccepterArgs, opts ...pulumi.ResourceOption) (*InvitationAccepter, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AdministratorAccountId == nil {
		return nil, errors.New("invalid value for required argument 'AdministratorAccountId'")
	}
	var resource InvitationAccepter
	err := ctx.RegisterResource("aws:macie2/invitationAccepter:InvitationAccepter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInvitationAccepter gets an existing InvitationAccepter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInvitationAccepter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InvitationAccepterState, opts ...pulumi.ResourceOption) (*InvitationAccepter, error) {
	var resource InvitationAccepter
	err := ctx.ReadResource("aws:macie2/invitationAccepter:InvitationAccepter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InvitationAccepter resources.
type invitationAccepterState struct {
	// The AWS account ID for the account that sent the invitation.
	AdministratorAccountId *string `pulumi:"administratorAccountId"`
	// The unique identifier for the invitation.
	InvitationId *string `pulumi:"invitationId"`
}

type InvitationAccepterState struct {
	// The AWS account ID for the account that sent the invitation.
	AdministratorAccountId pulumi.StringPtrInput
	// The unique identifier for the invitation.
	InvitationId pulumi.StringPtrInput
}

func (InvitationAccepterState) ElementType() reflect.Type {
	return reflect.TypeOf((*invitationAccepterState)(nil)).Elem()
}

type invitationAccepterArgs struct {
	// The AWS account ID for the account that sent the invitation.
	AdministratorAccountId string `pulumi:"administratorAccountId"`
}

// The set of arguments for constructing a InvitationAccepter resource.
type InvitationAccepterArgs struct {
	// The AWS account ID for the account that sent the invitation.
	AdministratorAccountId pulumi.StringInput
}

func (InvitationAccepterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*invitationAccepterArgs)(nil)).Elem()
}

type InvitationAccepterInput interface {
	pulumi.Input

	ToInvitationAccepterOutput() InvitationAccepterOutput
	ToInvitationAccepterOutputWithContext(ctx context.Context) InvitationAccepterOutput
}

func (*InvitationAccepter) ElementType() reflect.Type {
	return reflect.TypeOf((**InvitationAccepter)(nil)).Elem()
}

func (i *InvitationAccepter) ToInvitationAccepterOutput() InvitationAccepterOutput {
	return i.ToInvitationAccepterOutputWithContext(context.Background())
}

func (i *InvitationAccepter) ToInvitationAccepterOutputWithContext(ctx context.Context) InvitationAccepterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvitationAccepterOutput)
}

// InvitationAccepterArrayInput is an input type that accepts InvitationAccepterArray and InvitationAccepterArrayOutput values.
// You can construct a concrete instance of `InvitationAccepterArrayInput` via:
//
//          InvitationAccepterArray{ InvitationAccepterArgs{...} }
type InvitationAccepterArrayInput interface {
	pulumi.Input

	ToInvitationAccepterArrayOutput() InvitationAccepterArrayOutput
	ToInvitationAccepterArrayOutputWithContext(context.Context) InvitationAccepterArrayOutput
}

type InvitationAccepterArray []InvitationAccepterInput

func (InvitationAccepterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InvitationAccepter)(nil)).Elem()
}

func (i InvitationAccepterArray) ToInvitationAccepterArrayOutput() InvitationAccepterArrayOutput {
	return i.ToInvitationAccepterArrayOutputWithContext(context.Background())
}

func (i InvitationAccepterArray) ToInvitationAccepterArrayOutputWithContext(ctx context.Context) InvitationAccepterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvitationAccepterArrayOutput)
}

// InvitationAccepterMapInput is an input type that accepts InvitationAccepterMap and InvitationAccepterMapOutput values.
// You can construct a concrete instance of `InvitationAccepterMapInput` via:
//
//          InvitationAccepterMap{ "key": InvitationAccepterArgs{...} }
type InvitationAccepterMapInput interface {
	pulumi.Input

	ToInvitationAccepterMapOutput() InvitationAccepterMapOutput
	ToInvitationAccepterMapOutputWithContext(context.Context) InvitationAccepterMapOutput
}

type InvitationAccepterMap map[string]InvitationAccepterInput

func (InvitationAccepterMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InvitationAccepter)(nil)).Elem()
}

func (i InvitationAccepterMap) ToInvitationAccepterMapOutput() InvitationAccepterMapOutput {
	return i.ToInvitationAccepterMapOutputWithContext(context.Background())
}

func (i InvitationAccepterMap) ToInvitationAccepterMapOutputWithContext(ctx context.Context) InvitationAccepterMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InvitationAccepterMapOutput)
}

type InvitationAccepterOutput struct{ *pulumi.OutputState }

func (InvitationAccepterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InvitationAccepter)(nil)).Elem()
}

func (o InvitationAccepterOutput) ToInvitationAccepterOutput() InvitationAccepterOutput {
	return o
}

func (o InvitationAccepterOutput) ToInvitationAccepterOutputWithContext(ctx context.Context) InvitationAccepterOutput {
	return o
}

type InvitationAccepterArrayOutput struct{ *pulumi.OutputState }

func (InvitationAccepterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InvitationAccepter)(nil)).Elem()
}

func (o InvitationAccepterArrayOutput) ToInvitationAccepterArrayOutput() InvitationAccepterArrayOutput {
	return o
}

func (o InvitationAccepterArrayOutput) ToInvitationAccepterArrayOutputWithContext(ctx context.Context) InvitationAccepterArrayOutput {
	return o
}

func (o InvitationAccepterArrayOutput) Index(i pulumi.IntInput) InvitationAccepterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InvitationAccepter {
		return vs[0].([]*InvitationAccepter)[vs[1].(int)]
	}).(InvitationAccepterOutput)
}

type InvitationAccepterMapOutput struct{ *pulumi.OutputState }

func (InvitationAccepterMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InvitationAccepter)(nil)).Elem()
}

func (o InvitationAccepterMapOutput) ToInvitationAccepterMapOutput() InvitationAccepterMapOutput {
	return o
}

func (o InvitationAccepterMapOutput) ToInvitationAccepterMapOutputWithContext(ctx context.Context) InvitationAccepterMapOutput {
	return o
}

func (o InvitationAccepterMapOutput) MapIndex(k pulumi.StringInput) InvitationAccepterOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InvitationAccepter {
		return vs[0].(map[string]*InvitationAccepter)[vs[1].(string)]
	}).(InvitationAccepterOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InvitationAccepterInput)(nil)).Elem(), &InvitationAccepter{})
	pulumi.RegisterInputType(reflect.TypeOf((*InvitationAccepterArrayInput)(nil)).Elem(), InvitationAccepterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InvitationAccepterMapInput)(nil)).Elem(), InvitationAccepterMap{})
	pulumi.RegisterOutputType(InvitationAccepterOutput{})
	pulumi.RegisterOutputType(InvitationAccepterArrayOutput{})
	pulumi.RegisterOutputType(InvitationAccepterMapOutput{})
}
