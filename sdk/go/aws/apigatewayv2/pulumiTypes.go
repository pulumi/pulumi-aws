// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigatewayv2

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ApiCorsConfiguration struct {
	// Whether credentials are included in the CORS request.
	AllowCredentials *bool `pulumi:"allowCredentials"`
	// The set of allowed HTTP headers.
	AllowHeaders []string `pulumi:"allowHeaders"`
	// The set of allowed HTTP methods.
	AllowMethods []string `pulumi:"allowMethods"`
	// The set of allowed origins.
	AllowOrigins []string `pulumi:"allowOrigins"`
	// The set of exposed HTTP headers.
	ExposeHeaders []string `pulumi:"exposeHeaders"`
	// The number of seconds that the browser should cache preflight request results.
	MaxAge *int `pulumi:"maxAge"`
}

// ApiCorsConfigurationInput is an input type that accepts ApiCorsConfigurationArgs and ApiCorsConfigurationOutput values.
// You can construct a concrete instance of `ApiCorsConfigurationInput` via:
//
//          ApiCorsConfigurationArgs{...}
type ApiCorsConfigurationInput interface {
	pulumi.Input

	ToApiCorsConfigurationOutput() ApiCorsConfigurationOutput
	ToApiCorsConfigurationOutputWithContext(context.Context) ApiCorsConfigurationOutput
}

type ApiCorsConfigurationArgs struct {
	// Whether credentials are included in the CORS request.
	AllowCredentials pulumi.BoolPtrInput `pulumi:"allowCredentials"`
	// The set of allowed HTTP headers.
	AllowHeaders pulumi.StringArrayInput `pulumi:"allowHeaders"`
	// The set of allowed HTTP methods.
	AllowMethods pulumi.StringArrayInput `pulumi:"allowMethods"`
	// The set of allowed origins.
	AllowOrigins pulumi.StringArrayInput `pulumi:"allowOrigins"`
	// The set of exposed HTTP headers.
	ExposeHeaders pulumi.StringArrayInput `pulumi:"exposeHeaders"`
	// The number of seconds that the browser should cache preflight request results.
	MaxAge pulumi.IntPtrInput `pulumi:"maxAge"`
}

func (ApiCorsConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiCorsConfiguration)(nil)).Elem()
}

func (i ApiCorsConfigurationArgs) ToApiCorsConfigurationOutput() ApiCorsConfigurationOutput {
	return i.ToApiCorsConfigurationOutputWithContext(context.Background())
}

func (i ApiCorsConfigurationArgs) ToApiCorsConfigurationOutputWithContext(ctx context.Context) ApiCorsConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiCorsConfigurationOutput)
}

func (i ApiCorsConfigurationArgs) ToApiCorsConfigurationPtrOutput() ApiCorsConfigurationPtrOutput {
	return i.ToApiCorsConfigurationPtrOutputWithContext(context.Background())
}

func (i ApiCorsConfigurationArgs) ToApiCorsConfigurationPtrOutputWithContext(ctx context.Context) ApiCorsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiCorsConfigurationOutput).ToApiCorsConfigurationPtrOutputWithContext(ctx)
}

// ApiCorsConfigurationPtrInput is an input type that accepts ApiCorsConfigurationArgs, ApiCorsConfigurationPtr and ApiCorsConfigurationPtrOutput values.
// You can construct a concrete instance of `ApiCorsConfigurationPtrInput` via:
//
//          ApiCorsConfigurationArgs{...}
//
//  or:
//
//          nil
type ApiCorsConfigurationPtrInput interface {
	pulumi.Input

	ToApiCorsConfigurationPtrOutput() ApiCorsConfigurationPtrOutput
	ToApiCorsConfigurationPtrOutputWithContext(context.Context) ApiCorsConfigurationPtrOutput
}

type apiCorsConfigurationPtrType ApiCorsConfigurationArgs

func ApiCorsConfigurationPtr(v *ApiCorsConfigurationArgs) ApiCorsConfigurationPtrInput {
	return (*apiCorsConfigurationPtrType)(v)
}

func (*apiCorsConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiCorsConfiguration)(nil)).Elem()
}

func (i *apiCorsConfigurationPtrType) ToApiCorsConfigurationPtrOutput() ApiCorsConfigurationPtrOutput {
	return i.ToApiCorsConfigurationPtrOutputWithContext(context.Background())
}

func (i *apiCorsConfigurationPtrType) ToApiCorsConfigurationPtrOutputWithContext(ctx context.Context) ApiCorsConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiCorsConfigurationPtrOutput)
}

type ApiCorsConfigurationOutput struct{ *pulumi.OutputState }

func (ApiCorsConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApiCorsConfiguration)(nil)).Elem()
}

func (o ApiCorsConfigurationOutput) ToApiCorsConfigurationOutput() ApiCorsConfigurationOutput {
	return o
}

func (o ApiCorsConfigurationOutput) ToApiCorsConfigurationOutputWithContext(ctx context.Context) ApiCorsConfigurationOutput {
	return o
}

func (o ApiCorsConfigurationOutput) ToApiCorsConfigurationPtrOutput() ApiCorsConfigurationPtrOutput {
	return o.ToApiCorsConfigurationPtrOutputWithContext(context.Background())
}

func (o ApiCorsConfigurationOutput) ToApiCorsConfigurationPtrOutputWithContext(ctx context.Context) ApiCorsConfigurationPtrOutput {
	return o.ApplyT(func(v ApiCorsConfiguration) *ApiCorsConfiguration {
		return &v
	}).(ApiCorsConfigurationPtrOutput)
}

// Whether credentials are included in the CORS request.
func (o ApiCorsConfigurationOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ApiCorsConfiguration) *bool { return v.AllowCredentials }).(pulumi.BoolPtrOutput)
}

// The set of allowed HTTP headers.
func (o ApiCorsConfigurationOutput) AllowHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiCorsConfiguration) []string { return v.AllowHeaders }).(pulumi.StringArrayOutput)
}

// The set of allowed HTTP methods.
func (o ApiCorsConfigurationOutput) AllowMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiCorsConfiguration) []string { return v.AllowMethods }).(pulumi.StringArrayOutput)
}

// The set of allowed origins.
func (o ApiCorsConfigurationOutput) AllowOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiCorsConfiguration) []string { return v.AllowOrigins }).(pulumi.StringArrayOutput)
}

// The set of exposed HTTP headers.
func (o ApiCorsConfigurationOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ApiCorsConfiguration) []string { return v.ExposeHeaders }).(pulumi.StringArrayOutput)
}

// The number of seconds that the browser should cache preflight request results.
func (o ApiCorsConfigurationOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ApiCorsConfiguration) *int { return v.MaxAge }).(pulumi.IntPtrOutput)
}

type ApiCorsConfigurationPtrOutput struct{ *pulumi.OutputState }

func (ApiCorsConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiCorsConfiguration)(nil)).Elem()
}

func (o ApiCorsConfigurationPtrOutput) ToApiCorsConfigurationPtrOutput() ApiCorsConfigurationPtrOutput {
	return o
}

func (o ApiCorsConfigurationPtrOutput) ToApiCorsConfigurationPtrOutputWithContext(ctx context.Context) ApiCorsConfigurationPtrOutput {
	return o
}

func (o ApiCorsConfigurationPtrOutput) Elem() ApiCorsConfigurationOutput {
	return o.ApplyT(func(v *ApiCorsConfiguration) ApiCorsConfiguration { return *v }).(ApiCorsConfigurationOutput)
}

// Whether credentials are included in the CORS request.
func (o ApiCorsConfigurationPtrOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ApiCorsConfiguration) *bool {
		if v == nil {
			return nil
		}
		return v.AllowCredentials
	}).(pulumi.BoolPtrOutput)
}

// The set of allowed HTTP headers.
func (o ApiCorsConfigurationPtrOutput) AllowHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiCorsConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.AllowHeaders
	}).(pulumi.StringArrayOutput)
}

// The set of allowed HTTP methods.
func (o ApiCorsConfigurationPtrOutput) AllowMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiCorsConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.AllowMethods
	}).(pulumi.StringArrayOutput)
}

// The set of allowed origins.
func (o ApiCorsConfigurationPtrOutput) AllowOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiCorsConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.AllowOrigins
	}).(pulumi.StringArrayOutput)
}

// The set of exposed HTTP headers.
func (o ApiCorsConfigurationPtrOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ApiCorsConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.ExposeHeaders
	}).(pulumi.StringArrayOutput)
}

// The number of seconds that the browser should cache preflight request results.
func (o ApiCorsConfigurationPtrOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ApiCorsConfiguration) *int {
		if v == nil {
			return nil
		}
		return v.MaxAge
	}).(pulumi.IntPtrOutput)
}

type AuthorizerJwtConfiguration struct {
	// A list of the intended recipients of the JWT. A valid JWT must provide an aud that matches at least one entry in this list.
	Audiences []string `pulumi:"audiences"`
	// The base domain of the identity provider that issues JSON Web Tokens, such as the `endpoint` attribute of the `cognito.UserPool` resource.
	Issuer *string `pulumi:"issuer"`
}

// AuthorizerJwtConfigurationInput is an input type that accepts AuthorizerJwtConfigurationArgs and AuthorizerJwtConfigurationOutput values.
// You can construct a concrete instance of `AuthorizerJwtConfigurationInput` via:
//
//          AuthorizerJwtConfigurationArgs{...}
type AuthorizerJwtConfigurationInput interface {
	pulumi.Input

	ToAuthorizerJwtConfigurationOutput() AuthorizerJwtConfigurationOutput
	ToAuthorizerJwtConfigurationOutputWithContext(context.Context) AuthorizerJwtConfigurationOutput
}

type AuthorizerJwtConfigurationArgs struct {
	// A list of the intended recipients of the JWT. A valid JWT must provide an aud that matches at least one entry in this list.
	Audiences pulumi.StringArrayInput `pulumi:"audiences"`
	// The base domain of the identity provider that issues JSON Web Tokens, such as the `endpoint` attribute of the `cognito.UserPool` resource.
	Issuer pulumi.StringPtrInput `pulumi:"issuer"`
}

func (AuthorizerJwtConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizerJwtConfiguration)(nil)).Elem()
}

func (i AuthorizerJwtConfigurationArgs) ToAuthorizerJwtConfigurationOutput() AuthorizerJwtConfigurationOutput {
	return i.ToAuthorizerJwtConfigurationOutputWithContext(context.Background())
}

func (i AuthorizerJwtConfigurationArgs) ToAuthorizerJwtConfigurationOutputWithContext(ctx context.Context) AuthorizerJwtConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizerJwtConfigurationOutput)
}

func (i AuthorizerJwtConfigurationArgs) ToAuthorizerJwtConfigurationPtrOutput() AuthorizerJwtConfigurationPtrOutput {
	return i.ToAuthorizerJwtConfigurationPtrOutputWithContext(context.Background())
}

func (i AuthorizerJwtConfigurationArgs) ToAuthorizerJwtConfigurationPtrOutputWithContext(ctx context.Context) AuthorizerJwtConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizerJwtConfigurationOutput).ToAuthorizerJwtConfigurationPtrOutputWithContext(ctx)
}

// AuthorizerJwtConfigurationPtrInput is an input type that accepts AuthorizerJwtConfigurationArgs, AuthorizerJwtConfigurationPtr and AuthorizerJwtConfigurationPtrOutput values.
// You can construct a concrete instance of `AuthorizerJwtConfigurationPtrInput` via:
//
//          AuthorizerJwtConfigurationArgs{...}
//
//  or:
//
//          nil
type AuthorizerJwtConfigurationPtrInput interface {
	pulumi.Input

	ToAuthorizerJwtConfigurationPtrOutput() AuthorizerJwtConfigurationPtrOutput
	ToAuthorizerJwtConfigurationPtrOutputWithContext(context.Context) AuthorizerJwtConfigurationPtrOutput
}

type authorizerJwtConfigurationPtrType AuthorizerJwtConfigurationArgs

func AuthorizerJwtConfigurationPtr(v *AuthorizerJwtConfigurationArgs) AuthorizerJwtConfigurationPtrInput {
	return (*authorizerJwtConfigurationPtrType)(v)
}

func (*authorizerJwtConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizerJwtConfiguration)(nil)).Elem()
}

func (i *authorizerJwtConfigurationPtrType) ToAuthorizerJwtConfigurationPtrOutput() AuthorizerJwtConfigurationPtrOutput {
	return i.ToAuthorizerJwtConfigurationPtrOutputWithContext(context.Background())
}

func (i *authorizerJwtConfigurationPtrType) ToAuthorizerJwtConfigurationPtrOutputWithContext(ctx context.Context) AuthorizerJwtConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AuthorizerJwtConfigurationPtrOutput)
}

type AuthorizerJwtConfigurationOutput struct{ *pulumi.OutputState }

func (AuthorizerJwtConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AuthorizerJwtConfiguration)(nil)).Elem()
}

func (o AuthorizerJwtConfigurationOutput) ToAuthorizerJwtConfigurationOutput() AuthorizerJwtConfigurationOutput {
	return o
}

func (o AuthorizerJwtConfigurationOutput) ToAuthorizerJwtConfigurationOutputWithContext(ctx context.Context) AuthorizerJwtConfigurationOutput {
	return o
}

func (o AuthorizerJwtConfigurationOutput) ToAuthorizerJwtConfigurationPtrOutput() AuthorizerJwtConfigurationPtrOutput {
	return o.ToAuthorizerJwtConfigurationPtrOutputWithContext(context.Background())
}

func (o AuthorizerJwtConfigurationOutput) ToAuthorizerJwtConfigurationPtrOutputWithContext(ctx context.Context) AuthorizerJwtConfigurationPtrOutput {
	return o.ApplyT(func(v AuthorizerJwtConfiguration) *AuthorizerJwtConfiguration {
		return &v
	}).(AuthorizerJwtConfigurationPtrOutput)
}

// A list of the intended recipients of the JWT. A valid JWT must provide an aud that matches at least one entry in this list.
func (o AuthorizerJwtConfigurationOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AuthorizerJwtConfiguration) []string { return v.Audiences }).(pulumi.StringArrayOutput)
}

// The base domain of the identity provider that issues JSON Web Tokens, such as the `endpoint` attribute of the `cognito.UserPool` resource.
func (o AuthorizerJwtConfigurationOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AuthorizerJwtConfiguration) *string { return v.Issuer }).(pulumi.StringPtrOutput)
}

type AuthorizerJwtConfigurationPtrOutput struct{ *pulumi.OutputState }

func (AuthorizerJwtConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AuthorizerJwtConfiguration)(nil)).Elem()
}

func (o AuthorizerJwtConfigurationPtrOutput) ToAuthorizerJwtConfigurationPtrOutput() AuthorizerJwtConfigurationPtrOutput {
	return o
}

func (o AuthorizerJwtConfigurationPtrOutput) ToAuthorizerJwtConfigurationPtrOutputWithContext(ctx context.Context) AuthorizerJwtConfigurationPtrOutput {
	return o
}

func (o AuthorizerJwtConfigurationPtrOutput) Elem() AuthorizerJwtConfigurationOutput {
	return o.ApplyT(func(v *AuthorizerJwtConfiguration) AuthorizerJwtConfiguration { return *v }).(AuthorizerJwtConfigurationOutput)
}

// A list of the intended recipients of the JWT. A valid JWT must provide an aud that matches at least one entry in this list.
func (o AuthorizerJwtConfigurationPtrOutput) Audiences() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AuthorizerJwtConfiguration) []string {
		if v == nil {
			return nil
		}
		return v.Audiences
	}).(pulumi.StringArrayOutput)
}

// The base domain of the identity provider that issues JSON Web Tokens, such as the `endpoint` attribute of the `cognito.UserPool` resource.
func (o AuthorizerJwtConfigurationPtrOutput) Issuer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AuthorizerJwtConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.Issuer
	}).(pulumi.StringPtrOutput)
}

type DomainNameDomainNameConfiguration struct {
	// The ARN of an AWS-managed certificate that will be used by the endpoint for the domain name. AWS Certificate Manager is the only supported source.
	// Use the `acm.Certificate` resource to configure an ACM certificate.
	CertificateArn string `pulumi:"certificateArn"`
	// The endpoint type. Valid values: `REGIONAL`.
	EndpointType string `pulumi:"endpointType"`
	// The Amazon Route 53 Hosted Zone ID of the endpoint.
	HostedZoneId *string `pulumi:"hostedZoneId"`
	// The Transport Layer Security (TLS) version of the [security policy](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-custom-domain-tls-version.html) for the domain name. Valid values: `TLS_1_2`.
	SecurityPolicy string `pulumi:"securityPolicy"`
	// The target domain name.
	TargetDomainName *string `pulumi:"targetDomainName"`
}

// DomainNameDomainNameConfigurationInput is an input type that accepts DomainNameDomainNameConfigurationArgs and DomainNameDomainNameConfigurationOutput values.
// You can construct a concrete instance of `DomainNameDomainNameConfigurationInput` via:
//
//          DomainNameDomainNameConfigurationArgs{...}
type DomainNameDomainNameConfigurationInput interface {
	pulumi.Input

	ToDomainNameDomainNameConfigurationOutput() DomainNameDomainNameConfigurationOutput
	ToDomainNameDomainNameConfigurationOutputWithContext(context.Context) DomainNameDomainNameConfigurationOutput
}

type DomainNameDomainNameConfigurationArgs struct {
	// The ARN of an AWS-managed certificate that will be used by the endpoint for the domain name. AWS Certificate Manager is the only supported source.
	// Use the `acm.Certificate` resource to configure an ACM certificate.
	CertificateArn pulumi.StringInput `pulumi:"certificateArn"`
	// The endpoint type. Valid values: `REGIONAL`.
	EndpointType pulumi.StringInput `pulumi:"endpointType"`
	// The Amazon Route 53 Hosted Zone ID of the endpoint.
	HostedZoneId pulumi.StringPtrInput `pulumi:"hostedZoneId"`
	// The Transport Layer Security (TLS) version of the [security policy](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-custom-domain-tls-version.html) for the domain name. Valid values: `TLS_1_2`.
	SecurityPolicy pulumi.StringInput `pulumi:"securityPolicy"`
	// The target domain name.
	TargetDomainName pulumi.StringPtrInput `pulumi:"targetDomainName"`
}

func (DomainNameDomainNameConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainNameDomainNameConfiguration)(nil)).Elem()
}

func (i DomainNameDomainNameConfigurationArgs) ToDomainNameDomainNameConfigurationOutput() DomainNameDomainNameConfigurationOutput {
	return i.ToDomainNameDomainNameConfigurationOutputWithContext(context.Background())
}

func (i DomainNameDomainNameConfigurationArgs) ToDomainNameDomainNameConfigurationOutputWithContext(ctx context.Context) DomainNameDomainNameConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNameDomainNameConfigurationOutput)
}

func (i DomainNameDomainNameConfigurationArgs) ToDomainNameDomainNameConfigurationPtrOutput() DomainNameDomainNameConfigurationPtrOutput {
	return i.ToDomainNameDomainNameConfigurationPtrOutputWithContext(context.Background())
}

func (i DomainNameDomainNameConfigurationArgs) ToDomainNameDomainNameConfigurationPtrOutputWithContext(ctx context.Context) DomainNameDomainNameConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNameDomainNameConfigurationOutput).ToDomainNameDomainNameConfigurationPtrOutputWithContext(ctx)
}

// DomainNameDomainNameConfigurationPtrInput is an input type that accepts DomainNameDomainNameConfigurationArgs, DomainNameDomainNameConfigurationPtr and DomainNameDomainNameConfigurationPtrOutput values.
// You can construct a concrete instance of `DomainNameDomainNameConfigurationPtrInput` via:
//
//          DomainNameDomainNameConfigurationArgs{...}
//
//  or:
//
//          nil
type DomainNameDomainNameConfigurationPtrInput interface {
	pulumi.Input

	ToDomainNameDomainNameConfigurationPtrOutput() DomainNameDomainNameConfigurationPtrOutput
	ToDomainNameDomainNameConfigurationPtrOutputWithContext(context.Context) DomainNameDomainNameConfigurationPtrOutput
}

type domainNameDomainNameConfigurationPtrType DomainNameDomainNameConfigurationArgs

func DomainNameDomainNameConfigurationPtr(v *DomainNameDomainNameConfigurationArgs) DomainNameDomainNameConfigurationPtrInput {
	return (*domainNameDomainNameConfigurationPtrType)(v)
}

func (*domainNameDomainNameConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainNameDomainNameConfiguration)(nil)).Elem()
}

func (i *domainNameDomainNameConfigurationPtrType) ToDomainNameDomainNameConfigurationPtrOutput() DomainNameDomainNameConfigurationPtrOutput {
	return i.ToDomainNameDomainNameConfigurationPtrOutputWithContext(context.Background())
}

func (i *domainNameDomainNameConfigurationPtrType) ToDomainNameDomainNameConfigurationPtrOutputWithContext(ctx context.Context) DomainNameDomainNameConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNameDomainNameConfigurationPtrOutput)
}

type DomainNameDomainNameConfigurationOutput struct{ *pulumi.OutputState }

func (DomainNameDomainNameConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainNameDomainNameConfiguration)(nil)).Elem()
}

func (o DomainNameDomainNameConfigurationOutput) ToDomainNameDomainNameConfigurationOutput() DomainNameDomainNameConfigurationOutput {
	return o
}

func (o DomainNameDomainNameConfigurationOutput) ToDomainNameDomainNameConfigurationOutputWithContext(ctx context.Context) DomainNameDomainNameConfigurationOutput {
	return o
}

func (o DomainNameDomainNameConfigurationOutput) ToDomainNameDomainNameConfigurationPtrOutput() DomainNameDomainNameConfigurationPtrOutput {
	return o.ToDomainNameDomainNameConfigurationPtrOutputWithContext(context.Background())
}

func (o DomainNameDomainNameConfigurationOutput) ToDomainNameDomainNameConfigurationPtrOutputWithContext(ctx context.Context) DomainNameDomainNameConfigurationPtrOutput {
	return o.ApplyT(func(v DomainNameDomainNameConfiguration) *DomainNameDomainNameConfiguration {
		return &v
	}).(DomainNameDomainNameConfigurationPtrOutput)
}

// The ARN of an AWS-managed certificate that will be used by the endpoint for the domain name. AWS Certificate Manager is the only supported source.
// Use the `acm.Certificate` resource to configure an ACM certificate.
func (o DomainNameDomainNameConfigurationOutput) CertificateArn() pulumi.StringOutput {
	return o.ApplyT(func(v DomainNameDomainNameConfiguration) string { return v.CertificateArn }).(pulumi.StringOutput)
}

// The endpoint type. Valid values: `REGIONAL`.
func (o DomainNameDomainNameConfigurationOutput) EndpointType() pulumi.StringOutput {
	return o.ApplyT(func(v DomainNameDomainNameConfiguration) string { return v.EndpointType }).(pulumi.StringOutput)
}

// The Amazon Route 53 Hosted Zone ID of the endpoint.
func (o DomainNameDomainNameConfigurationOutput) HostedZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainNameDomainNameConfiguration) *string { return v.HostedZoneId }).(pulumi.StringPtrOutput)
}

// The Transport Layer Security (TLS) version of the [security policy](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-custom-domain-tls-version.html) for the domain name. Valid values: `TLS_1_2`.
func (o DomainNameDomainNameConfigurationOutput) SecurityPolicy() pulumi.StringOutput {
	return o.ApplyT(func(v DomainNameDomainNameConfiguration) string { return v.SecurityPolicy }).(pulumi.StringOutput)
}

// The target domain name.
func (o DomainNameDomainNameConfigurationOutput) TargetDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainNameDomainNameConfiguration) *string { return v.TargetDomainName }).(pulumi.StringPtrOutput)
}

type DomainNameDomainNameConfigurationPtrOutput struct{ *pulumi.OutputState }

func (DomainNameDomainNameConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainNameDomainNameConfiguration)(nil)).Elem()
}

func (o DomainNameDomainNameConfigurationPtrOutput) ToDomainNameDomainNameConfigurationPtrOutput() DomainNameDomainNameConfigurationPtrOutput {
	return o
}

func (o DomainNameDomainNameConfigurationPtrOutput) ToDomainNameDomainNameConfigurationPtrOutputWithContext(ctx context.Context) DomainNameDomainNameConfigurationPtrOutput {
	return o
}

func (o DomainNameDomainNameConfigurationPtrOutput) Elem() DomainNameDomainNameConfigurationOutput {
	return o.ApplyT(func(v *DomainNameDomainNameConfiguration) DomainNameDomainNameConfiguration { return *v }).(DomainNameDomainNameConfigurationOutput)
}

// The ARN of an AWS-managed certificate that will be used by the endpoint for the domain name. AWS Certificate Manager is the only supported source.
// Use the `acm.Certificate` resource to configure an ACM certificate.
func (o DomainNameDomainNameConfigurationPtrOutput) CertificateArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainNameDomainNameConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.CertificateArn
	}).(pulumi.StringPtrOutput)
}

// The endpoint type. Valid values: `REGIONAL`.
func (o DomainNameDomainNameConfigurationPtrOutput) EndpointType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainNameDomainNameConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.EndpointType
	}).(pulumi.StringPtrOutput)
}

// The Amazon Route 53 Hosted Zone ID of the endpoint.
func (o DomainNameDomainNameConfigurationPtrOutput) HostedZoneId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainNameDomainNameConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.HostedZoneId
	}).(pulumi.StringPtrOutput)
}

// The Transport Layer Security (TLS) version of the [security policy](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-custom-domain-tls-version.html) for the domain name. Valid values: `TLS_1_2`.
func (o DomainNameDomainNameConfigurationPtrOutput) SecurityPolicy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainNameDomainNameConfiguration) *string {
		if v == nil {
			return nil
		}
		return &v.SecurityPolicy
	}).(pulumi.StringPtrOutput)
}

// The target domain name.
func (o DomainNameDomainNameConfigurationPtrOutput) TargetDomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainNameDomainNameConfiguration) *string {
		if v == nil {
			return nil
		}
		return v.TargetDomainName
	}).(pulumi.StringPtrOutput)
}

type DomainNameMutualTlsAuthentication struct {
	// An Amazon S3 URL that specifies the truststore for mutual TLS authentication, for example, `s3://bucket-name/key-name`.
	// The truststore can contain certificates from public or private certificate authorities. To update the truststore, upload a new version to S3, and then update your custom domain name to use the new version.
	TruststoreUri string `pulumi:"truststoreUri"`
	// The version of the S3 object that contains the truststore. To specify a version, you must have versioning enabled for the S3 bucket.
	TruststoreVersion *string `pulumi:"truststoreVersion"`
}

// DomainNameMutualTlsAuthenticationInput is an input type that accepts DomainNameMutualTlsAuthenticationArgs and DomainNameMutualTlsAuthenticationOutput values.
// You can construct a concrete instance of `DomainNameMutualTlsAuthenticationInput` via:
//
//          DomainNameMutualTlsAuthenticationArgs{...}
type DomainNameMutualTlsAuthenticationInput interface {
	pulumi.Input

	ToDomainNameMutualTlsAuthenticationOutput() DomainNameMutualTlsAuthenticationOutput
	ToDomainNameMutualTlsAuthenticationOutputWithContext(context.Context) DomainNameMutualTlsAuthenticationOutput
}

type DomainNameMutualTlsAuthenticationArgs struct {
	// An Amazon S3 URL that specifies the truststore for mutual TLS authentication, for example, `s3://bucket-name/key-name`.
	// The truststore can contain certificates from public or private certificate authorities. To update the truststore, upload a new version to S3, and then update your custom domain name to use the new version.
	TruststoreUri pulumi.StringInput `pulumi:"truststoreUri"`
	// The version of the S3 object that contains the truststore. To specify a version, you must have versioning enabled for the S3 bucket.
	TruststoreVersion pulumi.StringPtrInput `pulumi:"truststoreVersion"`
}

func (DomainNameMutualTlsAuthenticationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainNameMutualTlsAuthentication)(nil)).Elem()
}

func (i DomainNameMutualTlsAuthenticationArgs) ToDomainNameMutualTlsAuthenticationOutput() DomainNameMutualTlsAuthenticationOutput {
	return i.ToDomainNameMutualTlsAuthenticationOutputWithContext(context.Background())
}

func (i DomainNameMutualTlsAuthenticationArgs) ToDomainNameMutualTlsAuthenticationOutputWithContext(ctx context.Context) DomainNameMutualTlsAuthenticationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNameMutualTlsAuthenticationOutput)
}

func (i DomainNameMutualTlsAuthenticationArgs) ToDomainNameMutualTlsAuthenticationPtrOutput() DomainNameMutualTlsAuthenticationPtrOutput {
	return i.ToDomainNameMutualTlsAuthenticationPtrOutputWithContext(context.Background())
}

func (i DomainNameMutualTlsAuthenticationArgs) ToDomainNameMutualTlsAuthenticationPtrOutputWithContext(ctx context.Context) DomainNameMutualTlsAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNameMutualTlsAuthenticationOutput).ToDomainNameMutualTlsAuthenticationPtrOutputWithContext(ctx)
}

// DomainNameMutualTlsAuthenticationPtrInput is an input type that accepts DomainNameMutualTlsAuthenticationArgs, DomainNameMutualTlsAuthenticationPtr and DomainNameMutualTlsAuthenticationPtrOutput values.
// You can construct a concrete instance of `DomainNameMutualTlsAuthenticationPtrInput` via:
//
//          DomainNameMutualTlsAuthenticationArgs{...}
//
//  or:
//
//          nil
type DomainNameMutualTlsAuthenticationPtrInput interface {
	pulumi.Input

	ToDomainNameMutualTlsAuthenticationPtrOutput() DomainNameMutualTlsAuthenticationPtrOutput
	ToDomainNameMutualTlsAuthenticationPtrOutputWithContext(context.Context) DomainNameMutualTlsAuthenticationPtrOutput
}

type domainNameMutualTlsAuthenticationPtrType DomainNameMutualTlsAuthenticationArgs

func DomainNameMutualTlsAuthenticationPtr(v *DomainNameMutualTlsAuthenticationArgs) DomainNameMutualTlsAuthenticationPtrInput {
	return (*domainNameMutualTlsAuthenticationPtrType)(v)
}

func (*domainNameMutualTlsAuthenticationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainNameMutualTlsAuthentication)(nil)).Elem()
}

func (i *domainNameMutualTlsAuthenticationPtrType) ToDomainNameMutualTlsAuthenticationPtrOutput() DomainNameMutualTlsAuthenticationPtrOutput {
	return i.ToDomainNameMutualTlsAuthenticationPtrOutputWithContext(context.Background())
}

func (i *domainNameMutualTlsAuthenticationPtrType) ToDomainNameMutualTlsAuthenticationPtrOutputWithContext(ctx context.Context) DomainNameMutualTlsAuthenticationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DomainNameMutualTlsAuthenticationPtrOutput)
}

type DomainNameMutualTlsAuthenticationOutput struct{ *pulumi.OutputState }

func (DomainNameMutualTlsAuthenticationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DomainNameMutualTlsAuthentication)(nil)).Elem()
}

func (o DomainNameMutualTlsAuthenticationOutput) ToDomainNameMutualTlsAuthenticationOutput() DomainNameMutualTlsAuthenticationOutput {
	return o
}

func (o DomainNameMutualTlsAuthenticationOutput) ToDomainNameMutualTlsAuthenticationOutputWithContext(ctx context.Context) DomainNameMutualTlsAuthenticationOutput {
	return o
}

func (o DomainNameMutualTlsAuthenticationOutput) ToDomainNameMutualTlsAuthenticationPtrOutput() DomainNameMutualTlsAuthenticationPtrOutput {
	return o.ToDomainNameMutualTlsAuthenticationPtrOutputWithContext(context.Background())
}

func (o DomainNameMutualTlsAuthenticationOutput) ToDomainNameMutualTlsAuthenticationPtrOutputWithContext(ctx context.Context) DomainNameMutualTlsAuthenticationPtrOutput {
	return o.ApplyT(func(v DomainNameMutualTlsAuthentication) *DomainNameMutualTlsAuthentication {
		return &v
	}).(DomainNameMutualTlsAuthenticationPtrOutput)
}

// An Amazon S3 URL that specifies the truststore for mutual TLS authentication, for example, `s3://bucket-name/key-name`.
// The truststore can contain certificates from public or private certificate authorities. To update the truststore, upload a new version to S3, and then update your custom domain name to use the new version.
func (o DomainNameMutualTlsAuthenticationOutput) TruststoreUri() pulumi.StringOutput {
	return o.ApplyT(func(v DomainNameMutualTlsAuthentication) string { return v.TruststoreUri }).(pulumi.StringOutput)
}

// The version of the S3 object that contains the truststore. To specify a version, you must have versioning enabled for the S3 bucket.
func (o DomainNameMutualTlsAuthenticationOutput) TruststoreVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DomainNameMutualTlsAuthentication) *string { return v.TruststoreVersion }).(pulumi.StringPtrOutput)
}

type DomainNameMutualTlsAuthenticationPtrOutput struct{ *pulumi.OutputState }

func (DomainNameMutualTlsAuthenticationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DomainNameMutualTlsAuthentication)(nil)).Elem()
}

func (o DomainNameMutualTlsAuthenticationPtrOutput) ToDomainNameMutualTlsAuthenticationPtrOutput() DomainNameMutualTlsAuthenticationPtrOutput {
	return o
}

func (o DomainNameMutualTlsAuthenticationPtrOutput) ToDomainNameMutualTlsAuthenticationPtrOutputWithContext(ctx context.Context) DomainNameMutualTlsAuthenticationPtrOutput {
	return o
}

func (o DomainNameMutualTlsAuthenticationPtrOutput) Elem() DomainNameMutualTlsAuthenticationOutput {
	return o.ApplyT(func(v *DomainNameMutualTlsAuthentication) DomainNameMutualTlsAuthentication { return *v }).(DomainNameMutualTlsAuthenticationOutput)
}

// An Amazon S3 URL that specifies the truststore for mutual TLS authentication, for example, `s3://bucket-name/key-name`.
// The truststore can contain certificates from public or private certificate authorities. To update the truststore, upload a new version to S3, and then update your custom domain name to use the new version.
func (o DomainNameMutualTlsAuthenticationPtrOutput) TruststoreUri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainNameMutualTlsAuthentication) *string {
		if v == nil {
			return nil
		}
		return &v.TruststoreUri
	}).(pulumi.StringPtrOutput)
}

// The version of the S3 object that contains the truststore. To specify a version, you must have versioning enabled for the S3 bucket.
func (o DomainNameMutualTlsAuthenticationPtrOutput) TruststoreVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DomainNameMutualTlsAuthentication) *string {
		if v == nil {
			return nil
		}
		return v.TruststoreVersion
	}).(pulumi.StringPtrOutput)
}

type IntegrationTlsConfig struct {
	// If you specify a server name, API Gateway uses it to verify the hostname on the integration's certificate. The server name is also included in the TLS handshake to support Server Name Indication (SNI) or virtual hosting.
	ServerNameToVerify *string `pulumi:"serverNameToVerify"`
}

// IntegrationTlsConfigInput is an input type that accepts IntegrationTlsConfigArgs and IntegrationTlsConfigOutput values.
// You can construct a concrete instance of `IntegrationTlsConfigInput` via:
//
//          IntegrationTlsConfigArgs{...}
type IntegrationTlsConfigInput interface {
	pulumi.Input

	ToIntegrationTlsConfigOutput() IntegrationTlsConfigOutput
	ToIntegrationTlsConfigOutputWithContext(context.Context) IntegrationTlsConfigOutput
}

type IntegrationTlsConfigArgs struct {
	// If you specify a server name, API Gateway uses it to verify the hostname on the integration's certificate. The server name is also included in the TLS handshake to support Server Name Indication (SNI) or virtual hosting.
	ServerNameToVerify pulumi.StringPtrInput `pulumi:"serverNameToVerify"`
}

func (IntegrationTlsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTlsConfig)(nil)).Elem()
}

func (i IntegrationTlsConfigArgs) ToIntegrationTlsConfigOutput() IntegrationTlsConfigOutput {
	return i.ToIntegrationTlsConfigOutputWithContext(context.Background())
}

func (i IntegrationTlsConfigArgs) ToIntegrationTlsConfigOutputWithContext(ctx context.Context) IntegrationTlsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTlsConfigOutput)
}

func (i IntegrationTlsConfigArgs) ToIntegrationTlsConfigPtrOutput() IntegrationTlsConfigPtrOutput {
	return i.ToIntegrationTlsConfigPtrOutputWithContext(context.Background())
}

func (i IntegrationTlsConfigArgs) ToIntegrationTlsConfigPtrOutputWithContext(ctx context.Context) IntegrationTlsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTlsConfigOutput).ToIntegrationTlsConfigPtrOutputWithContext(ctx)
}

// IntegrationTlsConfigPtrInput is an input type that accepts IntegrationTlsConfigArgs, IntegrationTlsConfigPtr and IntegrationTlsConfigPtrOutput values.
// You can construct a concrete instance of `IntegrationTlsConfigPtrInput` via:
//
//          IntegrationTlsConfigArgs{...}
//
//  or:
//
//          nil
type IntegrationTlsConfigPtrInput interface {
	pulumi.Input

	ToIntegrationTlsConfigPtrOutput() IntegrationTlsConfigPtrOutput
	ToIntegrationTlsConfigPtrOutputWithContext(context.Context) IntegrationTlsConfigPtrOutput
}

type integrationTlsConfigPtrType IntegrationTlsConfigArgs

func IntegrationTlsConfigPtr(v *IntegrationTlsConfigArgs) IntegrationTlsConfigPtrInput {
	return (*integrationTlsConfigPtrType)(v)
}

func (*integrationTlsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationTlsConfig)(nil)).Elem()
}

func (i *integrationTlsConfigPtrType) ToIntegrationTlsConfigPtrOutput() IntegrationTlsConfigPtrOutput {
	return i.ToIntegrationTlsConfigPtrOutputWithContext(context.Background())
}

func (i *integrationTlsConfigPtrType) ToIntegrationTlsConfigPtrOutputWithContext(ctx context.Context) IntegrationTlsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IntegrationTlsConfigPtrOutput)
}

type IntegrationTlsConfigOutput struct{ *pulumi.OutputState }

func (IntegrationTlsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IntegrationTlsConfig)(nil)).Elem()
}

func (o IntegrationTlsConfigOutput) ToIntegrationTlsConfigOutput() IntegrationTlsConfigOutput {
	return o
}

func (o IntegrationTlsConfigOutput) ToIntegrationTlsConfigOutputWithContext(ctx context.Context) IntegrationTlsConfigOutput {
	return o
}

func (o IntegrationTlsConfigOutput) ToIntegrationTlsConfigPtrOutput() IntegrationTlsConfigPtrOutput {
	return o.ToIntegrationTlsConfigPtrOutputWithContext(context.Background())
}

func (o IntegrationTlsConfigOutput) ToIntegrationTlsConfigPtrOutputWithContext(ctx context.Context) IntegrationTlsConfigPtrOutput {
	return o.ApplyT(func(v IntegrationTlsConfig) *IntegrationTlsConfig {
		return &v
	}).(IntegrationTlsConfigPtrOutput)
}

// If you specify a server name, API Gateway uses it to verify the hostname on the integration's certificate. The server name is also included in the TLS handshake to support Server Name Indication (SNI) or virtual hosting.
func (o IntegrationTlsConfigOutput) ServerNameToVerify() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IntegrationTlsConfig) *string { return v.ServerNameToVerify }).(pulumi.StringPtrOutput)
}

type IntegrationTlsConfigPtrOutput struct{ *pulumi.OutputState }

func (IntegrationTlsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IntegrationTlsConfig)(nil)).Elem()
}

func (o IntegrationTlsConfigPtrOutput) ToIntegrationTlsConfigPtrOutput() IntegrationTlsConfigPtrOutput {
	return o
}

func (o IntegrationTlsConfigPtrOutput) ToIntegrationTlsConfigPtrOutputWithContext(ctx context.Context) IntegrationTlsConfigPtrOutput {
	return o
}

func (o IntegrationTlsConfigPtrOutput) Elem() IntegrationTlsConfigOutput {
	return o.ApplyT(func(v *IntegrationTlsConfig) IntegrationTlsConfig { return *v }).(IntegrationTlsConfigOutput)
}

// If you specify a server name, API Gateway uses it to verify the hostname on the integration's certificate. The server name is also included in the TLS handshake to support Server Name Indication (SNI) or virtual hosting.
func (o IntegrationTlsConfigPtrOutput) ServerNameToVerify() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IntegrationTlsConfig) *string {
		if v == nil {
			return nil
		}
		return v.ServerNameToVerify
	}).(pulumi.StringPtrOutput)
}

type StageAccessLogSettings struct {
	// The ARN of the CloudWatch Logs log group to receive access logs. Any trailing `:*` is trimmed from the ARN.
	DestinationArn string `pulumi:"destinationArn"`
	// A single line [format](https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html#apigateway-cloudwatch-log-formats) of the access logs of data, as specified by [selected $context variables](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-logging.html).
	Format string `pulumi:"format"`
}

// StageAccessLogSettingsInput is an input type that accepts StageAccessLogSettingsArgs and StageAccessLogSettingsOutput values.
// You can construct a concrete instance of `StageAccessLogSettingsInput` via:
//
//          StageAccessLogSettingsArgs{...}
type StageAccessLogSettingsInput interface {
	pulumi.Input

	ToStageAccessLogSettingsOutput() StageAccessLogSettingsOutput
	ToStageAccessLogSettingsOutputWithContext(context.Context) StageAccessLogSettingsOutput
}

type StageAccessLogSettingsArgs struct {
	// The ARN of the CloudWatch Logs log group to receive access logs. Any trailing `:*` is trimmed from the ARN.
	DestinationArn pulumi.StringInput `pulumi:"destinationArn"`
	// A single line [format](https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html#apigateway-cloudwatch-log-formats) of the access logs of data, as specified by [selected $context variables](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-logging.html).
	Format pulumi.StringInput `pulumi:"format"`
}

func (StageAccessLogSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageAccessLogSettings)(nil)).Elem()
}

func (i StageAccessLogSettingsArgs) ToStageAccessLogSettingsOutput() StageAccessLogSettingsOutput {
	return i.ToStageAccessLogSettingsOutputWithContext(context.Background())
}

func (i StageAccessLogSettingsArgs) ToStageAccessLogSettingsOutputWithContext(ctx context.Context) StageAccessLogSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageAccessLogSettingsOutput)
}

func (i StageAccessLogSettingsArgs) ToStageAccessLogSettingsPtrOutput() StageAccessLogSettingsPtrOutput {
	return i.ToStageAccessLogSettingsPtrOutputWithContext(context.Background())
}

func (i StageAccessLogSettingsArgs) ToStageAccessLogSettingsPtrOutputWithContext(ctx context.Context) StageAccessLogSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageAccessLogSettingsOutput).ToStageAccessLogSettingsPtrOutputWithContext(ctx)
}

// StageAccessLogSettingsPtrInput is an input type that accepts StageAccessLogSettingsArgs, StageAccessLogSettingsPtr and StageAccessLogSettingsPtrOutput values.
// You can construct a concrete instance of `StageAccessLogSettingsPtrInput` via:
//
//          StageAccessLogSettingsArgs{...}
//
//  or:
//
//          nil
type StageAccessLogSettingsPtrInput interface {
	pulumi.Input

	ToStageAccessLogSettingsPtrOutput() StageAccessLogSettingsPtrOutput
	ToStageAccessLogSettingsPtrOutputWithContext(context.Context) StageAccessLogSettingsPtrOutput
}

type stageAccessLogSettingsPtrType StageAccessLogSettingsArgs

func StageAccessLogSettingsPtr(v *StageAccessLogSettingsArgs) StageAccessLogSettingsPtrInput {
	return (*stageAccessLogSettingsPtrType)(v)
}

func (*stageAccessLogSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageAccessLogSettings)(nil)).Elem()
}

func (i *stageAccessLogSettingsPtrType) ToStageAccessLogSettingsPtrOutput() StageAccessLogSettingsPtrOutput {
	return i.ToStageAccessLogSettingsPtrOutputWithContext(context.Background())
}

func (i *stageAccessLogSettingsPtrType) ToStageAccessLogSettingsPtrOutputWithContext(ctx context.Context) StageAccessLogSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageAccessLogSettingsPtrOutput)
}

type StageAccessLogSettingsOutput struct{ *pulumi.OutputState }

func (StageAccessLogSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageAccessLogSettings)(nil)).Elem()
}

func (o StageAccessLogSettingsOutput) ToStageAccessLogSettingsOutput() StageAccessLogSettingsOutput {
	return o
}

func (o StageAccessLogSettingsOutput) ToStageAccessLogSettingsOutputWithContext(ctx context.Context) StageAccessLogSettingsOutput {
	return o
}

func (o StageAccessLogSettingsOutput) ToStageAccessLogSettingsPtrOutput() StageAccessLogSettingsPtrOutput {
	return o.ToStageAccessLogSettingsPtrOutputWithContext(context.Background())
}

func (o StageAccessLogSettingsOutput) ToStageAccessLogSettingsPtrOutputWithContext(ctx context.Context) StageAccessLogSettingsPtrOutput {
	return o.ApplyT(func(v StageAccessLogSettings) *StageAccessLogSettings {
		return &v
	}).(StageAccessLogSettingsPtrOutput)
}

// The ARN of the CloudWatch Logs log group to receive access logs. Any trailing `:*` is trimmed from the ARN.
func (o StageAccessLogSettingsOutput) DestinationArn() pulumi.StringOutput {
	return o.ApplyT(func(v StageAccessLogSettings) string { return v.DestinationArn }).(pulumi.StringOutput)
}

// A single line [format](https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html#apigateway-cloudwatch-log-formats) of the access logs of data, as specified by [selected $context variables](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-logging.html).
func (o StageAccessLogSettingsOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v StageAccessLogSettings) string { return v.Format }).(pulumi.StringOutput)
}

type StageAccessLogSettingsPtrOutput struct{ *pulumi.OutputState }

func (StageAccessLogSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageAccessLogSettings)(nil)).Elem()
}

func (o StageAccessLogSettingsPtrOutput) ToStageAccessLogSettingsPtrOutput() StageAccessLogSettingsPtrOutput {
	return o
}

func (o StageAccessLogSettingsPtrOutput) ToStageAccessLogSettingsPtrOutputWithContext(ctx context.Context) StageAccessLogSettingsPtrOutput {
	return o
}

func (o StageAccessLogSettingsPtrOutput) Elem() StageAccessLogSettingsOutput {
	return o.ApplyT(func(v *StageAccessLogSettings) StageAccessLogSettings { return *v }).(StageAccessLogSettingsOutput)
}

// The ARN of the CloudWatch Logs log group to receive access logs. Any trailing `:*` is trimmed from the ARN.
func (o StageAccessLogSettingsPtrOutput) DestinationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageAccessLogSettings) *string {
		if v == nil {
			return nil
		}
		return &v.DestinationArn
	}).(pulumi.StringPtrOutput)
}

// A single line [format](https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html#apigateway-cloudwatch-log-formats) of the access logs of data, as specified by [selected $context variables](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-logging.html).
func (o StageAccessLogSettingsPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageAccessLogSettings) *string {
		if v == nil {
			return nil
		}
		return &v.Format
	}).(pulumi.StringPtrOutput)
}

type StageDefaultRouteSettings struct {
	// Whether data trace logging is enabled for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
	// Defaults to `false`. Supported only for WebSocket APIs.
	DataTraceEnabled *bool `pulumi:"dataTraceEnabled"`
	// Whether detailed metrics are enabled for the default route. Defaults to `false`.
	DetailedMetricsEnabled *bool `pulumi:"detailedMetricsEnabled"`
	// The logging level for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
	// Valid values: `ERROR`, `INFO`, `OFF`. Defaults to `OFF`. Supported only for WebSocket APIs. This provider will only perform drift detection of its value when present in a configuration.
	LoggingLevel *string `pulumi:"loggingLevel"`
	// The throttling burst limit for the default route.
	ThrottlingBurstLimit *int `pulumi:"throttlingBurstLimit"`
	// The throttling rate limit for the default route.
	ThrottlingRateLimit *float64 `pulumi:"throttlingRateLimit"`
}

// StageDefaultRouteSettingsInput is an input type that accepts StageDefaultRouteSettingsArgs and StageDefaultRouteSettingsOutput values.
// You can construct a concrete instance of `StageDefaultRouteSettingsInput` via:
//
//          StageDefaultRouteSettingsArgs{...}
type StageDefaultRouteSettingsInput interface {
	pulumi.Input

	ToStageDefaultRouteSettingsOutput() StageDefaultRouteSettingsOutput
	ToStageDefaultRouteSettingsOutputWithContext(context.Context) StageDefaultRouteSettingsOutput
}

type StageDefaultRouteSettingsArgs struct {
	// Whether data trace logging is enabled for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
	// Defaults to `false`. Supported only for WebSocket APIs.
	DataTraceEnabled pulumi.BoolPtrInput `pulumi:"dataTraceEnabled"`
	// Whether detailed metrics are enabled for the default route. Defaults to `false`.
	DetailedMetricsEnabled pulumi.BoolPtrInput `pulumi:"detailedMetricsEnabled"`
	// The logging level for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
	// Valid values: `ERROR`, `INFO`, `OFF`. Defaults to `OFF`. Supported only for WebSocket APIs. This provider will only perform drift detection of its value when present in a configuration.
	LoggingLevel pulumi.StringPtrInput `pulumi:"loggingLevel"`
	// The throttling burst limit for the default route.
	ThrottlingBurstLimit pulumi.IntPtrInput `pulumi:"throttlingBurstLimit"`
	// The throttling rate limit for the default route.
	ThrottlingRateLimit pulumi.Float64PtrInput `pulumi:"throttlingRateLimit"`
}

func (StageDefaultRouteSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageDefaultRouteSettings)(nil)).Elem()
}

func (i StageDefaultRouteSettingsArgs) ToStageDefaultRouteSettingsOutput() StageDefaultRouteSettingsOutput {
	return i.ToStageDefaultRouteSettingsOutputWithContext(context.Background())
}

func (i StageDefaultRouteSettingsArgs) ToStageDefaultRouteSettingsOutputWithContext(ctx context.Context) StageDefaultRouteSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageDefaultRouteSettingsOutput)
}

func (i StageDefaultRouteSettingsArgs) ToStageDefaultRouteSettingsPtrOutput() StageDefaultRouteSettingsPtrOutput {
	return i.ToStageDefaultRouteSettingsPtrOutputWithContext(context.Background())
}

func (i StageDefaultRouteSettingsArgs) ToStageDefaultRouteSettingsPtrOutputWithContext(ctx context.Context) StageDefaultRouteSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageDefaultRouteSettingsOutput).ToStageDefaultRouteSettingsPtrOutputWithContext(ctx)
}

// StageDefaultRouteSettingsPtrInput is an input type that accepts StageDefaultRouteSettingsArgs, StageDefaultRouteSettingsPtr and StageDefaultRouteSettingsPtrOutput values.
// You can construct a concrete instance of `StageDefaultRouteSettingsPtrInput` via:
//
//          StageDefaultRouteSettingsArgs{...}
//
//  or:
//
//          nil
type StageDefaultRouteSettingsPtrInput interface {
	pulumi.Input

	ToStageDefaultRouteSettingsPtrOutput() StageDefaultRouteSettingsPtrOutput
	ToStageDefaultRouteSettingsPtrOutputWithContext(context.Context) StageDefaultRouteSettingsPtrOutput
}

type stageDefaultRouteSettingsPtrType StageDefaultRouteSettingsArgs

func StageDefaultRouteSettingsPtr(v *StageDefaultRouteSettingsArgs) StageDefaultRouteSettingsPtrInput {
	return (*stageDefaultRouteSettingsPtrType)(v)
}

func (*stageDefaultRouteSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**StageDefaultRouteSettings)(nil)).Elem()
}

func (i *stageDefaultRouteSettingsPtrType) ToStageDefaultRouteSettingsPtrOutput() StageDefaultRouteSettingsPtrOutput {
	return i.ToStageDefaultRouteSettingsPtrOutputWithContext(context.Background())
}

func (i *stageDefaultRouteSettingsPtrType) ToStageDefaultRouteSettingsPtrOutputWithContext(ctx context.Context) StageDefaultRouteSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageDefaultRouteSettingsPtrOutput)
}

type StageDefaultRouteSettingsOutput struct{ *pulumi.OutputState }

func (StageDefaultRouteSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageDefaultRouteSettings)(nil)).Elem()
}

func (o StageDefaultRouteSettingsOutput) ToStageDefaultRouteSettingsOutput() StageDefaultRouteSettingsOutput {
	return o
}

func (o StageDefaultRouteSettingsOutput) ToStageDefaultRouteSettingsOutputWithContext(ctx context.Context) StageDefaultRouteSettingsOutput {
	return o
}

func (o StageDefaultRouteSettingsOutput) ToStageDefaultRouteSettingsPtrOutput() StageDefaultRouteSettingsPtrOutput {
	return o.ToStageDefaultRouteSettingsPtrOutputWithContext(context.Background())
}

func (o StageDefaultRouteSettingsOutput) ToStageDefaultRouteSettingsPtrOutputWithContext(ctx context.Context) StageDefaultRouteSettingsPtrOutput {
	return o.ApplyT(func(v StageDefaultRouteSettings) *StageDefaultRouteSettings {
		return &v
	}).(StageDefaultRouteSettingsPtrOutput)
}

// Whether data trace logging is enabled for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
// Defaults to `false`. Supported only for WebSocket APIs.
func (o StageDefaultRouteSettingsOutput) DataTraceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StageDefaultRouteSettings) *bool { return v.DataTraceEnabled }).(pulumi.BoolPtrOutput)
}

// Whether detailed metrics are enabled for the default route. Defaults to `false`.
func (o StageDefaultRouteSettingsOutput) DetailedMetricsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StageDefaultRouteSettings) *bool { return v.DetailedMetricsEnabled }).(pulumi.BoolPtrOutput)
}

// The logging level for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
// Valid values: `ERROR`, `INFO`, `OFF`. Defaults to `OFF`. Supported only for WebSocket APIs. This provider will only perform drift detection of its value when present in a configuration.
func (o StageDefaultRouteSettingsOutput) LoggingLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageDefaultRouteSettings) *string { return v.LoggingLevel }).(pulumi.StringPtrOutput)
}

// The throttling burst limit for the default route.
func (o StageDefaultRouteSettingsOutput) ThrottlingBurstLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StageDefaultRouteSettings) *int { return v.ThrottlingBurstLimit }).(pulumi.IntPtrOutput)
}

// The throttling rate limit for the default route.
func (o StageDefaultRouteSettingsOutput) ThrottlingRateLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v StageDefaultRouteSettings) *float64 { return v.ThrottlingRateLimit }).(pulumi.Float64PtrOutput)
}

type StageDefaultRouteSettingsPtrOutput struct{ *pulumi.OutputState }

func (StageDefaultRouteSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**StageDefaultRouteSettings)(nil)).Elem()
}

func (o StageDefaultRouteSettingsPtrOutput) ToStageDefaultRouteSettingsPtrOutput() StageDefaultRouteSettingsPtrOutput {
	return o
}

func (o StageDefaultRouteSettingsPtrOutput) ToStageDefaultRouteSettingsPtrOutputWithContext(ctx context.Context) StageDefaultRouteSettingsPtrOutput {
	return o
}

func (o StageDefaultRouteSettingsPtrOutput) Elem() StageDefaultRouteSettingsOutput {
	return o.ApplyT(func(v *StageDefaultRouteSettings) StageDefaultRouteSettings { return *v }).(StageDefaultRouteSettingsOutput)
}

// Whether data trace logging is enabled for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
// Defaults to `false`. Supported only for WebSocket APIs.
func (o StageDefaultRouteSettingsPtrOutput) DataTraceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StageDefaultRouteSettings) *bool {
		if v == nil {
			return nil
		}
		return v.DataTraceEnabled
	}).(pulumi.BoolPtrOutput)
}

// Whether detailed metrics are enabled for the default route. Defaults to `false`.
func (o StageDefaultRouteSettingsPtrOutput) DetailedMetricsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *StageDefaultRouteSettings) *bool {
		if v == nil {
			return nil
		}
		return v.DetailedMetricsEnabled
	}).(pulumi.BoolPtrOutput)
}

// The logging level for the default route. Affects the log entries pushed to Amazon CloudWatch Logs.
// Valid values: `ERROR`, `INFO`, `OFF`. Defaults to `OFF`. Supported only for WebSocket APIs. This provider will only perform drift detection of its value when present in a configuration.
func (o StageDefaultRouteSettingsPtrOutput) LoggingLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *StageDefaultRouteSettings) *string {
		if v == nil {
			return nil
		}
		return v.LoggingLevel
	}).(pulumi.StringPtrOutput)
}

// The throttling burst limit for the default route.
func (o StageDefaultRouteSettingsPtrOutput) ThrottlingBurstLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *StageDefaultRouteSettings) *int {
		if v == nil {
			return nil
		}
		return v.ThrottlingBurstLimit
	}).(pulumi.IntPtrOutput)
}

// The throttling rate limit for the default route.
func (o StageDefaultRouteSettingsPtrOutput) ThrottlingRateLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *StageDefaultRouteSettings) *float64 {
		if v == nil {
			return nil
		}
		return v.ThrottlingRateLimit
	}).(pulumi.Float64PtrOutput)
}

type StageRouteSetting struct {
	// Whether data trace logging is enabled for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
	// Defaults to `false`. Supported only for WebSocket APIs.
	DataTraceEnabled *bool `pulumi:"dataTraceEnabled"`
	// Whether detailed metrics are enabled for the route. Defaults to `false`.
	DetailedMetricsEnabled *bool `pulumi:"detailedMetricsEnabled"`
	// The logging level for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
	// Valid values: `ERROR`, `INFO`, `OFF`. Defaults to `OFF`. Supported only for WebSocket APIs. This provider will only perform drift detection of its value when present in a configuration.
	LoggingLevel *string `pulumi:"loggingLevel"`
	// Route key.
	RouteKey string `pulumi:"routeKey"`
	// The throttling burst limit for the route.
	ThrottlingBurstLimit *int `pulumi:"throttlingBurstLimit"`
	// The throttling rate limit for the route.
	ThrottlingRateLimit *float64 `pulumi:"throttlingRateLimit"`
}

// StageRouteSettingInput is an input type that accepts StageRouteSettingArgs and StageRouteSettingOutput values.
// You can construct a concrete instance of `StageRouteSettingInput` via:
//
//          StageRouteSettingArgs{...}
type StageRouteSettingInput interface {
	pulumi.Input

	ToStageRouteSettingOutput() StageRouteSettingOutput
	ToStageRouteSettingOutputWithContext(context.Context) StageRouteSettingOutput
}

type StageRouteSettingArgs struct {
	// Whether data trace logging is enabled for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
	// Defaults to `false`. Supported only for WebSocket APIs.
	DataTraceEnabled pulumi.BoolPtrInput `pulumi:"dataTraceEnabled"`
	// Whether detailed metrics are enabled for the route. Defaults to `false`.
	DetailedMetricsEnabled pulumi.BoolPtrInput `pulumi:"detailedMetricsEnabled"`
	// The logging level for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
	// Valid values: `ERROR`, `INFO`, `OFF`. Defaults to `OFF`. Supported only for WebSocket APIs. This provider will only perform drift detection of its value when present in a configuration.
	LoggingLevel pulumi.StringPtrInput `pulumi:"loggingLevel"`
	// Route key.
	RouteKey pulumi.StringInput `pulumi:"routeKey"`
	// The throttling burst limit for the route.
	ThrottlingBurstLimit pulumi.IntPtrInput `pulumi:"throttlingBurstLimit"`
	// The throttling rate limit for the route.
	ThrottlingRateLimit pulumi.Float64PtrInput `pulumi:"throttlingRateLimit"`
}

func (StageRouteSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*StageRouteSetting)(nil)).Elem()
}

func (i StageRouteSettingArgs) ToStageRouteSettingOutput() StageRouteSettingOutput {
	return i.ToStageRouteSettingOutputWithContext(context.Background())
}

func (i StageRouteSettingArgs) ToStageRouteSettingOutputWithContext(ctx context.Context) StageRouteSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageRouteSettingOutput)
}

// StageRouteSettingArrayInput is an input type that accepts StageRouteSettingArray and StageRouteSettingArrayOutput values.
// You can construct a concrete instance of `StageRouteSettingArrayInput` via:
//
//          StageRouteSettingArray{ StageRouteSettingArgs{...} }
type StageRouteSettingArrayInput interface {
	pulumi.Input

	ToStageRouteSettingArrayOutput() StageRouteSettingArrayOutput
	ToStageRouteSettingArrayOutputWithContext(context.Context) StageRouteSettingArrayOutput
}

type StageRouteSettingArray []StageRouteSettingInput

func (StageRouteSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageRouteSetting)(nil)).Elem()
}

func (i StageRouteSettingArray) ToStageRouteSettingArrayOutput() StageRouteSettingArrayOutput {
	return i.ToStageRouteSettingArrayOutputWithContext(context.Background())
}

func (i StageRouteSettingArray) ToStageRouteSettingArrayOutputWithContext(ctx context.Context) StageRouteSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(StageRouteSettingArrayOutput)
}

type StageRouteSettingOutput struct{ *pulumi.OutputState }

func (StageRouteSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*StageRouteSetting)(nil)).Elem()
}

func (o StageRouteSettingOutput) ToStageRouteSettingOutput() StageRouteSettingOutput {
	return o
}

func (o StageRouteSettingOutput) ToStageRouteSettingOutputWithContext(ctx context.Context) StageRouteSettingOutput {
	return o
}

// Whether data trace logging is enabled for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
// Defaults to `false`. Supported only for WebSocket APIs.
func (o StageRouteSettingOutput) DataTraceEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StageRouteSetting) *bool { return v.DataTraceEnabled }).(pulumi.BoolPtrOutput)
}

// Whether detailed metrics are enabled for the route. Defaults to `false`.
func (o StageRouteSettingOutput) DetailedMetricsEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v StageRouteSetting) *bool { return v.DetailedMetricsEnabled }).(pulumi.BoolPtrOutput)
}

// The logging level for the route. Affects the log entries pushed to Amazon CloudWatch Logs.
// Valid values: `ERROR`, `INFO`, `OFF`. Defaults to `OFF`. Supported only for WebSocket APIs. This provider will only perform drift detection of its value when present in a configuration.
func (o StageRouteSettingOutput) LoggingLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v StageRouteSetting) *string { return v.LoggingLevel }).(pulumi.StringPtrOutput)
}

// Route key.
func (o StageRouteSettingOutput) RouteKey() pulumi.StringOutput {
	return o.ApplyT(func(v StageRouteSetting) string { return v.RouteKey }).(pulumi.StringOutput)
}

// The throttling burst limit for the route.
func (o StageRouteSettingOutput) ThrottlingBurstLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v StageRouteSetting) *int { return v.ThrottlingBurstLimit }).(pulumi.IntPtrOutput)
}

// The throttling rate limit for the route.
func (o StageRouteSettingOutput) ThrottlingRateLimit() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v StageRouteSetting) *float64 { return v.ThrottlingRateLimit }).(pulumi.Float64PtrOutput)
}

type StageRouteSettingArrayOutput struct{ *pulumi.OutputState }

func (StageRouteSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]StageRouteSetting)(nil)).Elem()
}

func (o StageRouteSettingArrayOutput) ToStageRouteSettingArrayOutput() StageRouteSettingArrayOutput {
	return o
}

func (o StageRouteSettingArrayOutput) ToStageRouteSettingArrayOutputWithContext(ctx context.Context) StageRouteSettingArrayOutput {
	return o
}

func (o StageRouteSettingArrayOutput) Index(i pulumi.IntInput) StageRouteSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) StageRouteSetting {
		return vs[0].([]StageRouteSetting)[vs[1].(int)]
	}).(StageRouteSettingOutput)
}

func init() {
	pulumi.RegisterOutputType(ApiCorsConfigurationOutput{})
	pulumi.RegisterOutputType(ApiCorsConfigurationPtrOutput{})
	pulumi.RegisterOutputType(AuthorizerJwtConfigurationOutput{})
	pulumi.RegisterOutputType(AuthorizerJwtConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DomainNameDomainNameConfigurationOutput{})
	pulumi.RegisterOutputType(DomainNameDomainNameConfigurationPtrOutput{})
	pulumi.RegisterOutputType(DomainNameMutualTlsAuthenticationOutput{})
	pulumi.RegisterOutputType(DomainNameMutualTlsAuthenticationPtrOutput{})
	pulumi.RegisterOutputType(IntegrationTlsConfigOutput{})
	pulumi.RegisterOutputType(IntegrationTlsConfigPtrOutput{})
	pulumi.RegisterOutputType(StageAccessLogSettingsOutput{})
	pulumi.RegisterOutputType(StageAccessLogSettingsPtrOutput{})
	pulumi.RegisterOutputType(StageDefaultRouteSettingsOutput{})
	pulumi.RegisterOutputType(StageDefaultRouteSettingsPtrOutput{})
	pulumi.RegisterOutputType(StageRouteSettingOutput{})
	pulumi.RegisterOutputType(StageRouteSettingArrayOutput{})
}
