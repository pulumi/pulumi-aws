// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package apigatewayv2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Amazon API Gateway Version 2 route response.
// More information can be found in the [Amazon API Gateway Developer Guide](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api.html).
//
// ## Example Usage
// ### Basic
//
// ```go
// package main
//
// import (
// 	"fmt"
//
// 	"github.com/pulumi/pulumi-aws/sdk/v4/go/aws/apigatewayv2"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := apigatewayv2.NewRouteResponse(ctx, "example", &apigatewayv2.RouteResponseArgs{
// 			ApiId:            pulumi.Any(aws_apigatewayv2_api.Example.Id),
// 			RouteId:          pulumi.Any(aws_apigatewayv2_route.Example.Id),
// 			RouteResponseKey: pulumi.String(fmt.Sprintf("%v%v", "$", "default")),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// `aws_apigatewayv2_route_response` can be imported by using the API identifier, route identifier and route response identifier, e.g.
//
// ```sh
//  $ pulumi import aws:apigatewayv2/routeResponse:RouteResponse example aabbccddee/1122334/998877
// ```
type RouteResponse struct {
	pulumi.CustomResourceState

	// The API identifier.
	ApiId pulumi.StringOutput `pulumi:"apiId"`
	// The [model selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-model-selection-expressions) for the route response.
	ModelSelectionExpression pulumi.StringPtrOutput `pulumi:"modelSelectionExpression"`
	// The response models for the route response.
	ResponseModels pulumi.StringMapOutput `pulumi:"responseModels"`
	// The identifier of the `apigatewayv2.Route`.
	RouteId pulumi.StringOutput `pulumi:"routeId"`
	// The route response key.
	RouteResponseKey pulumi.StringOutput `pulumi:"routeResponseKey"`
}

// NewRouteResponse registers a new resource with the given unique name, arguments, and options.
func NewRouteResponse(ctx *pulumi.Context,
	name string, args *RouteResponseArgs, opts ...pulumi.ResourceOption) (*RouteResponse, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiId == nil {
		return nil, errors.New("invalid value for required argument 'ApiId'")
	}
	if args.RouteId == nil {
		return nil, errors.New("invalid value for required argument 'RouteId'")
	}
	if args.RouteResponseKey == nil {
		return nil, errors.New("invalid value for required argument 'RouteResponseKey'")
	}
	var resource RouteResponse
	err := ctx.RegisterResource("aws:apigatewayv2/routeResponse:RouteResponse", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRouteResponse gets an existing RouteResponse resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRouteResponse(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RouteResponseState, opts ...pulumi.ResourceOption) (*RouteResponse, error) {
	var resource RouteResponse
	err := ctx.ReadResource("aws:apigatewayv2/routeResponse:RouteResponse", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RouteResponse resources.
type routeResponseState struct {
	// The API identifier.
	ApiId *string `pulumi:"apiId"`
	// The [model selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-model-selection-expressions) for the route response.
	ModelSelectionExpression *string `pulumi:"modelSelectionExpression"`
	// The response models for the route response.
	ResponseModels map[string]string `pulumi:"responseModels"`
	// The identifier of the `apigatewayv2.Route`.
	RouteId *string `pulumi:"routeId"`
	// The route response key.
	RouteResponseKey *string `pulumi:"routeResponseKey"`
}

type RouteResponseState struct {
	// The API identifier.
	ApiId pulumi.StringPtrInput
	// The [model selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-model-selection-expressions) for the route response.
	ModelSelectionExpression pulumi.StringPtrInput
	// The response models for the route response.
	ResponseModels pulumi.StringMapInput
	// The identifier of the `apigatewayv2.Route`.
	RouteId pulumi.StringPtrInput
	// The route response key.
	RouteResponseKey pulumi.StringPtrInput
}

func (RouteResponseState) ElementType() reflect.Type {
	return reflect.TypeOf((*routeResponseState)(nil)).Elem()
}

type routeResponseArgs struct {
	// The API identifier.
	ApiId string `pulumi:"apiId"`
	// The [model selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-model-selection-expressions) for the route response.
	ModelSelectionExpression *string `pulumi:"modelSelectionExpression"`
	// The response models for the route response.
	ResponseModels map[string]string `pulumi:"responseModels"`
	// The identifier of the `apigatewayv2.Route`.
	RouteId string `pulumi:"routeId"`
	// The route response key.
	RouteResponseKey string `pulumi:"routeResponseKey"`
}

// The set of arguments for constructing a RouteResponse resource.
type RouteResponseArgs struct {
	// The API identifier.
	ApiId pulumi.StringInput
	// The [model selection expression](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-selection-expressions.html#apigateway-websocket-api-model-selection-expressions) for the route response.
	ModelSelectionExpression pulumi.StringPtrInput
	// The response models for the route response.
	ResponseModels pulumi.StringMapInput
	// The identifier of the `apigatewayv2.Route`.
	RouteId pulumi.StringInput
	// The route response key.
	RouteResponseKey pulumi.StringInput
}

func (RouteResponseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*routeResponseArgs)(nil)).Elem()
}

type RouteResponseInput interface {
	pulumi.Input

	ToRouteResponseOutput() RouteResponseOutput
	ToRouteResponseOutputWithContext(ctx context.Context) RouteResponseOutput
}

func (*RouteResponse) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteResponse)(nil))
}

func (i *RouteResponse) ToRouteResponseOutput() RouteResponseOutput {
	return i.ToRouteResponseOutputWithContext(context.Background())
}

func (i *RouteResponse) ToRouteResponseOutputWithContext(ctx context.Context) RouteResponseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteResponseOutput)
}

func (i *RouteResponse) ToRouteResponsePtrOutput() RouteResponsePtrOutput {
	return i.ToRouteResponsePtrOutputWithContext(context.Background())
}

func (i *RouteResponse) ToRouteResponsePtrOutputWithContext(ctx context.Context) RouteResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteResponsePtrOutput)
}

type RouteResponsePtrInput interface {
	pulumi.Input

	ToRouteResponsePtrOutput() RouteResponsePtrOutput
	ToRouteResponsePtrOutputWithContext(ctx context.Context) RouteResponsePtrOutput
}

type routeResponsePtrType RouteResponseArgs

func (*routeResponsePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteResponse)(nil))
}

func (i *routeResponsePtrType) ToRouteResponsePtrOutput() RouteResponsePtrOutput {
	return i.ToRouteResponsePtrOutputWithContext(context.Background())
}

func (i *routeResponsePtrType) ToRouteResponsePtrOutputWithContext(ctx context.Context) RouteResponsePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteResponsePtrOutput)
}

// RouteResponseArrayInput is an input type that accepts RouteResponseArray and RouteResponseArrayOutput values.
// You can construct a concrete instance of `RouteResponseArrayInput` via:
//
//          RouteResponseArray{ RouteResponseArgs{...} }
type RouteResponseArrayInput interface {
	pulumi.Input

	ToRouteResponseArrayOutput() RouteResponseArrayOutput
	ToRouteResponseArrayOutputWithContext(context.Context) RouteResponseArrayOutput
}

type RouteResponseArray []RouteResponseInput

func (RouteResponseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RouteResponse)(nil)).Elem()
}

func (i RouteResponseArray) ToRouteResponseArrayOutput() RouteResponseArrayOutput {
	return i.ToRouteResponseArrayOutputWithContext(context.Background())
}

func (i RouteResponseArray) ToRouteResponseArrayOutputWithContext(ctx context.Context) RouteResponseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteResponseArrayOutput)
}

// RouteResponseMapInput is an input type that accepts RouteResponseMap and RouteResponseMapOutput values.
// You can construct a concrete instance of `RouteResponseMapInput` via:
//
//          RouteResponseMap{ "key": RouteResponseArgs{...} }
type RouteResponseMapInput interface {
	pulumi.Input

	ToRouteResponseMapOutput() RouteResponseMapOutput
	ToRouteResponseMapOutputWithContext(context.Context) RouteResponseMapOutput
}

type RouteResponseMap map[string]RouteResponseInput

func (RouteResponseMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RouteResponse)(nil)).Elem()
}

func (i RouteResponseMap) ToRouteResponseMapOutput() RouteResponseMapOutput {
	return i.ToRouteResponseMapOutputWithContext(context.Background())
}

func (i RouteResponseMap) ToRouteResponseMapOutputWithContext(ctx context.Context) RouteResponseMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RouteResponseMapOutput)
}

type RouteResponseOutput struct{ *pulumi.OutputState }

func (RouteResponseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RouteResponse)(nil))
}

func (o RouteResponseOutput) ToRouteResponseOutput() RouteResponseOutput {
	return o
}

func (o RouteResponseOutput) ToRouteResponseOutputWithContext(ctx context.Context) RouteResponseOutput {
	return o
}

func (o RouteResponseOutput) ToRouteResponsePtrOutput() RouteResponsePtrOutput {
	return o.ToRouteResponsePtrOutputWithContext(context.Background())
}

func (o RouteResponseOutput) ToRouteResponsePtrOutputWithContext(ctx context.Context) RouteResponsePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RouteResponse) *RouteResponse {
		return &v
	}).(RouteResponsePtrOutput)
}

type RouteResponsePtrOutput struct{ *pulumi.OutputState }

func (RouteResponsePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RouteResponse)(nil))
}

func (o RouteResponsePtrOutput) ToRouteResponsePtrOutput() RouteResponsePtrOutput {
	return o
}

func (o RouteResponsePtrOutput) ToRouteResponsePtrOutputWithContext(ctx context.Context) RouteResponsePtrOutput {
	return o
}

func (o RouteResponsePtrOutput) Elem() RouteResponseOutput {
	return o.ApplyT(func(v *RouteResponse) RouteResponse {
		if v != nil {
			return *v
		}
		var ret RouteResponse
		return ret
	}).(RouteResponseOutput)
}

type RouteResponseArrayOutput struct{ *pulumi.OutputState }

func (RouteResponseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RouteResponse)(nil))
}

func (o RouteResponseArrayOutput) ToRouteResponseArrayOutput() RouteResponseArrayOutput {
	return o
}

func (o RouteResponseArrayOutput) ToRouteResponseArrayOutputWithContext(ctx context.Context) RouteResponseArrayOutput {
	return o
}

func (o RouteResponseArrayOutput) Index(i pulumi.IntInput) RouteResponseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RouteResponse {
		return vs[0].([]RouteResponse)[vs[1].(int)]
	}).(RouteResponseOutput)
}

type RouteResponseMapOutput struct{ *pulumi.OutputState }

func (RouteResponseMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]RouteResponse)(nil))
}

func (o RouteResponseMapOutput) ToRouteResponseMapOutput() RouteResponseMapOutput {
	return o
}

func (o RouteResponseMapOutput) ToRouteResponseMapOutputWithContext(ctx context.Context) RouteResponseMapOutput {
	return o
}

func (o RouteResponseMapOutput) MapIndex(k pulumi.StringInput) RouteResponseOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) RouteResponse {
		return vs[0].(map[string]RouteResponse)[vs[1].(string)]
	}).(RouteResponseOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RouteResponseInput)(nil)).Elem(), &RouteResponse{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteResponsePtrInput)(nil)).Elem(), &RouteResponse{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteResponseArrayInput)(nil)).Elem(), RouteResponseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RouteResponseMapInput)(nil)).Elem(), RouteResponseMap{})
	pulumi.RegisterOutputType(RouteResponseOutput{})
	pulumi.RegisterOutputType(RouteResponsePtrOutput{})
	pulumi.RegisterOutputType(RouteResponseArrayOutput{})
	pulumi.RegisterOutputType(RouteResponseMapOutput{})
}
