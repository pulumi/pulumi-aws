// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package securityhub

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Subscribes to a Security Hub product.
type ProductSubscription struct {
	s *pulumi.ResourceState
}

// NewProductSubscription registers a new resource with the given unique name, arguments, and options.
func NewProductSubscription(ctx *pulumi.Context,
	name string, args *ProductSubscriptionArgs, opts ...pulumi.ResourceOpt) (*ProductSubscription, error) {
	if args == nil || args.ProductArn == nil {
		return nil, errors.New("missing required argument 'ProductArn'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["productArn"] = nil
	} else {
		inputs["productArn"] = args.ProductArn
	}
	inputs["arn"] = nil
	s, err := ctx.RegisterResource("aws:securityhub/productSubscription:ProductSubscription", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ProductSubscription{s: s}, nil
}

// GetProductSubscription gets an existing ProductSubscription resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProductSubscription(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ProductSubscriptionState, opts ...pulumi.ResourceOpt) (*ProductSubscription, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["arn"] = state.Arn
		inputs["productArn"] = state.ProductArn
	}
	s, err := ctx.ReadResource("aws:securityhub/productSubscription:ProductSubscription", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ProductSubscription{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ProductSubscription) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ProductSubscription) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The ARN of a resource that represents your subscription to the product that generates the findings that you want to import into Security Hub.
func (r *ProductSubscription) Arn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["arn"])
}

// The ARN of the product that generates findings that you want to import into Security Hub - see below.
func (r *ProductSubscription) ProductArn() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["productArn"])
}

// Input properties used for looking up and filtering ProductSubscription resources.
type ProductSubscriptionState struct {
	// The ARN of a resource that represents your subscription to the product that generates the findings that you want to import into Security Hub.
	Arn interface{}
	// The ARN of the product that generates findings that you want to import into Security Hub - see below.
	ProductArn interface{}
}

// The set of arguments for constructing a ProductSubscription resource.
type ProductSubscriptionArgs struct {
	// The ARN of the product that generates findings that you want to import into Security Hub - see below.
	ProductArn interface{}
}
