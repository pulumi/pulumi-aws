// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package securityhub

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Subscribes to a Security Hub standard.
//
// ## Example Usage
//
//
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-aws/sdk/v2/go/aws/securityhub"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := securityhub.NewAccount(ctx, "example", nil)
// 		if err != nil {
// 			return err
// 		}
// 		cis, err := securityhub.NewStandardsSubscription(ctx, "cis", &securityhub.StandardsSubscriptionArgs{
// 			StandardsArn: pulumi.String("arn:aws:securityhub:::ruleset/cis-aws-foundations-benchmark/v/1.2.0"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		pci321, err := securityhub.NewStandardsSubscription(ctx, "pci321", &securityhub.StandardsSubscriptionArgs{
// 			StandardsArn: pulumi.String("arn:aws:securityhub:us-east-1::standards/pci-dss/v/3.2.1"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type StandardsSubscription struct {
	pulumi.CustomResourceState

	// The ARN of a standard - see below.
	StandardsArn pulumi.StringOutput `pulumi:"standardsArn"`
}

// NewStandardsSubscription registers a new resource with the given unique name, arguments, and options.
func NewStandardsSubscription(ctx *pulumi.Context,
	name string, args *StandardsSubscriptionArgs, opts ...pulumi.ResourceOption) (*StandardsSubscription, error) {
	if args == nil || args.StandardsArn == nil {
		return nil, errors.New("missing required argument 'StandardsArn'")
	}
	if args == nil {
		args = &StandardsSubscriptionArgs{}
	}
	var resource StandardsSubscription
	err := ctx.RegisterResource("aws:securityhub/standardsSubscription:StandardsSubscription", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStandardsSubscription gets an existing StandardsSubscription resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStandardsSubscription(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StandardsSubscriptionState, opts ...pulumi.ResourceOption) (*StandardsSubscription, error) {
	var resource StandardsSubscription
	err := ctx.ReadResource("aws:securityhub/standardsSubscription:StandardsSubscription", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StandardsSubscription resources.
type standardsSubscriptionState struct {
	// The ARN of a standard - see below.
	StandardsArn *string `pulumi:"standardsArn"`
}

type StandardsSubscriptionState struct {
	// The ARN of a standard - see below.
	StandardsArn pulumi.StringPtrInput
}

func (StandardsSubscriptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*standardsSubscriptionState)(nil)).Elem()
}

type standardsSubscriptionArgs struct {
	// The ARN of a standard - see below.
	StandardsArn string `pulumi:"standardsArn"`
}

// The set of arguments for constructing a StandardsSubscription resource.
type StandardsSubscriptionArgs struct {
	// The ARN of a standard - see below.
	StandardsArn pulumi.StringInput
}

func (StandardsSubscriptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*standardsSubscriptionArgs)(nil)).Elem()
}
