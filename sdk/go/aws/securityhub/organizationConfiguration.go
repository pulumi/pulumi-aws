// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package securityhub

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Import
//
// An existing Security Hub enabled account can be imported using the AWS account ID, e.g.
//
// ```sh
//  $ pulumi import aws:securityhub/organizationConfiguration:OrganizationConfiguration example 123456789012
// ```
type OrganizationConfiguration struct {
	pulumi.CustomResourceState

	// Whether to automatically enable Security Hub for new accounts in the organization.
	AutoEnable pulumi.BoolOutput `pulumi:"autoEnable"`
}

// NewOrganizationConfiguration registers a new resource with the given unique name, arguments, and options.
func NewOrganizationConfiguration(ctx *pulumi.Context,
	name string, args *OrganizationConfigurationArgs, opts ...pulumi.ResourceOption) (*OrganizationConfiguration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutoEnable == nil {
		return nil, errors.New("invalid value for required argument 'AutoEnable'")
	}
	var resource OrganizationConfiguration
	err := ctx.RegisterResource("aws:securityhub/organizationConfiguration:OrganizationConfiguration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOrganizationConfiguration gets an existing OrganizationConfiguration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOrganizationConfiguration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OrganizationConfigurationState, opts ...pulumi.ResourceOption) (*OrganizationConfiguration, error) {
	var resource OrganizationConfiguration
	err := ctx.ReadResource("aws:securityhub/organizationConfiguration:OrganizationConfiguration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OrganizationConfiguration resources.
type organizationConfigurationState struct {
	// Whether to automatically enable Security Hub for new accounts in the organization.
	AutoEnable *bool `pulumi:"autoEnable"`
}

type OrganizationConfigurationState struct {
	// Whether to automatically enable Security Hub for new accounts in the organization.
	AutoEnable pulumi.BoolPtrInput
}

func (OrganizationConfigurationState) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationConfigurationState)(nil)).Elem()
}

type organizationConfigurationArgs struct {
	// Whether to automatically enable Security Hub for new accounts in the organization.
	AutoEnable bool `pulumi:"autoEnable"`
}

// The set of arguments for constructing a OrganizationConfiguration resource.
type OrganizationConfigurationArgs struct {
	// Whether to automatically enable Security Hub for new accounts in the organization.
	AutoEnable pulumi.BoolInput
}

func (OrganizationConfigurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*organizationConfigurationArgs)(nil)).Elem()
}

type OrganizationConfigurationInput interface {
	pulumi.Input

	ToOrganizationConfigurationOutput() OrganizationConfigurationOutput
	ToOrganizationConfigurationOutputWithContext(ctx context.Context) OrganizationConfigurationOutput
}

func (*OrganizationConfiguration) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationConfiguration)(nil))
}

func (i *OrganizationConfiguration) ToOrganizationConfigurationOutput() OrganizationConfigurationOutput {
	return i.ToOrganizationConfigurationOutputWithContext(context.Background())
}

func (i *OrganizationConfiguration) ToOrganizationConfigurationOutputWithContext(ctx context.Context) OrganizationConfigurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationConfigurationOutput)
}

func (i *OrganizationConfiguration) ToOrganizationConfigurationPtrOutput() OrganizationConfigurationPtrOutput {
	return i.ToOrganizationConfigurationPtrOutputWithContext(context.Background())
}

func (i *OrganizationConfiguration) ToOrganizationConfigurationPtrOutputWithContext(ctx context.Context) OrganizationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationConfigurationPtrOutput)
}

type OrganizationConfigurationPtrInput interface {
	pulumi.Input

	ToOrganizationConfigurationPtrOutput() OrganizationConfigurationPtrOutput
	ToOrganizationConfigurationPtrOutputWithContext(ctx context.Context) OrganizationConfigurationPtrOutput
}

type organizationConfigurationPtrType OrganizationConfigurationArgs

func (*organizationConfigurationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationConfiguration)(nil))
}

func (i *organizationConfigurationPtrType) ToOrganizationConfigurationPtrOutput() OrganizationConfigurationPtrOutput {
	return i.ToOrganizationConfigurationPtrOutputWithContext(context.Background())
}

func (i *organizationConfigurationPtrType) ToOrganizationConfigurationPtrOutputWithContext(ctx context.Context) OrganizationConfigurationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationConfigurationPtrOutput)
}

// OrganizationConfigurationArrayInput is an input type that accepts OrganizationConfigurationArray and OrganizationConfigurationArrayOutput values.
// You can construct a concrete instance of `OrganizationConfigurationArrayInput` via:
//
//          OrganizationConfigurationArray{ OrganizationConfigurationArgs{...} }
type OrganizationConfigurationArrayInput interface {
	pulumi.Input

	ToOrganizationConfigurationArrayOutput() OrganizationConfigurationArrayOutput
	ToOrganizationConfigurationArrayOutputWithContext(context.Context) OrganizationConfigurationArrayOutput
}

type OrganizationConfigurationArray []OrganizationConfigurationInput

func (OrganizationConfigurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OrganizationConfiguration)(nil)).Elem()
}

func (i OrganizationConfigurationArray) ToOrganizationConfigurationArrayOutput() OrganizationConfigurationArrayOutput {
	return i.ToOrganizationConfigurationArrayOutputWithContext(context.Background())
}

func (i OrganizationConfigurationArray) ToOrganizationConfigurationArrayOutputWithContext(ctx context.Context) OrganizationConfigurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationConfigurationArrayOutput)
}

// OrganizationConfigurationMapInput is an input type that accepts OrganizationConfigurationMap and OrganizationConfigurationMapOutput values.
// You can construct a concrete instance of `OrganizationConfigurationMapInput` via:
//
//          OrganizationConfigurationMap{ "key": OrganizationConfigurationArgs{...} }
type OrganizationConfigurationMapInput interface {
	pulumi.Input

	ToOrganizationConfigurationMapOutput() OrganizationConfigurationMapOutput
	ToOrganizationConfigurationMapOutputWithContext(context.Context) OrganizationConfigurationMapOutput
}

type OrganizationConfigurationMap map[string]OrganizationConfigurationInput

func (OrganizationConfigurationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OrganizationConfiguration)(nil)).Elem()
}

func (i OrganizationConfigurationMap) ToOrganizationConfigurationMapOutput() OrganizationConfigurationMapOutput {
	return i.ToOrganizationConfigurationMapOutputWithContext(context.Background())
}

func (i OrganizationConfigurationMap) ToOrganizationConfigurationMapOutputWithContext(ctx context.Context) OrganizationConfigurationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationConfigurationMapOutput)
}

type OrganizationConfigurationOutput struct {
	*pulumi.OutputState
}

func (OrganizationConfigurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationConfiguration)(nil))
}

func (o OrganizationConfigurationOutput) ToOrganizationConfigurationOutput() OrganizationConfigurationOutput {
	return o
}

func (o OrganizationConfigurationOutput) ToOrganizationConfigurationOutputWithContext(ctx context.Context) OrganizationConfigurationOutput {
	return o
}

func (o OrganizationConfigurationOutput) ToOrganizationConfigurationPtrOutput() OrganizationConfigurationPtrOutput {
	return o.ToOrganizationConfigurationPtrOutputWithContext(context.Background())
}

func (o OrganizationConfigurationOutput) ToOrganizationConfigurationPtrOutputWithContext(ctx context.Context) OrganizationConfigurationPtrOutput {
	return o.ApplyT(func(v OrganizationConfiguration) *OrganizationConfiguration {
		return &v
	}).(OrganizationConfigurationPtrOutput)
}

type OrganizationConfigurationPtrOutput struct {
	*pulumi.OutputState
}

func (OrganizationConfigurationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationConfiguration)(nil))
}

func (o OrganizationConfigurationPtrOutput) ToOrganizationConfigurationPtrOutput() OrganizationConfigurationPtrOutput {
	return o
}

func (o OrganizationConfigurationPtrOutput) ToOrganizationConfigurationPtrOutputWithContext(ctx context.Context) OrganizationConfigurationPtrOutput {
	return o
}

type OrganizationConfigurationArrayOutput struct{ *pulumi.OutputState }

func (OrganizationConfigurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrganizationConfiguration)(nil))
}

func (o OrganizationConfigurationArrayOutput) ToOrganizationConfigurationArrayOutput() OrganizationConfigurationArrayOutput {
	return o
}

func (o OrganizationConfigurationArrayOutput) ToOrganizationConfigurationArrayOutputWithContext(ctx context.Context) OrganizationConfigurationArrayOutput {
	return o
}

func (o OrganizationConfigurationArrayOutput) Index(i pulumi.IntInput) OrganizationConfigurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrganizationConfiguration {
		return vs[0].([]OrganizationConfiguration)[vs[1].(int)]
	}).(OrganizationConfigurationOutput)
}

type OrganizationConfigurationMapOutput struct{ *pulumi.OutputState }

func (OrganizationConfigurationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]OrganizationConfiguration)(nil))
}

func (o OrganizationConfigurationMapOutput) ToOrganizationConfigurationMapOutput() OrganizationConfigurationMapOutput {
	return o
}

func (o OrganizationConfigurationMapOutput) ToOrganizationConfigurationMapOutputWithContext(ctx context.Context) OrganizationConfigurationMapOutput {
	return o
}

func (o OrganizationConfigurationMapOutput) MapIndex(k pulumi.StringInput) OrganizationConfigurationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) OrganizationConfiguration {
		return vs[0].(map[string]OrganizationConfiguration)[vs[1].(string)]
	}).(OrganizationConfigurationOutput)
}

func init() {
	pulumi.RegisterOutputType(OrganizationConfigurationOutput{})
	pulumi.RegisterOutputType(OrganizationConfigurationPtrOutput{})
	pulumi.RegisterOutputType(OrganizationConfigurationArrayOutput{})
	pulumi.RegisterOutputType(OrganizationConfigurationMapOutput{})
}
